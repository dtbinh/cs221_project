analytics
austin





quarter submitted

educators faced trade

assignments student develops

giving

compile copy java

attention



les sent external server

particularly grades

observe student

instructor feedback ev



ery student classroom

progression student

teaching hope

throughout

tools automatically

aggregating

tion student programming methodology

student

oer

exploration dierent

quickly characterize progression programing

preliminary commenting

style student instructors

summing

feedback assistance specic

submissions sep

needs

specically interested



studying novice programming courses

fully

abundance

observe

bility fundamental

tation

truths programming education

changed dierence

enter

submissions

courses

changed submissions



tuple



creating
student consecutive projects student

extends piech
analyzed java
ing les







progression
analyzing projects

stu



ana

ensuring ad hoc assumptions

java pyramid java break

limit scope investigation

java java java



signicant les rst

comparisons specic aspects

introductory programming





intuition tell

fithere



else

statements





else switch statements

ments

ments latter former
assignments


switch

statements address

tion coupled
classication
external canonical
conditional nd correlations exercise
dierent
classication address
student grades grades ever


unfortunately

permission access student grades sucient

conclusions rst

execute appeal

assignments weeks

institutional

introductory java assign

view board access sensitive



ments earlier weeks usage

quarter

warrant

asked characterization





derivative lines

frequent infrequent

assignments struggle

awarded











concepts

conducted dierent
predictors
classiers rela

deduce

caused

amongst

covariance quadratic classiers

pronounced amongst

classier analyze

suspected bars

subsets interested

pertaining branching statements observe



switch statements lecture

claims never

jump bar



bar going essentially

classier

discuss

observe

switch statements favor

dierent assignments dierent predic

abandoned

tions rationalize





recognize regards branching



observe

statements infer

trends sections knowing

dierent branching



choosing branching statements







statements

print



evenly distributing

abilities

elseif

programming methodology

statements



programming methodology

elect assistants
experts assist

experts manual centroids



dierent cut os discovered
indicative
bodies

observe progression

conducted clus

commenting style

ters simplifying

writing entering

representative members



perfectly

exception yet

something investigating ad hoc anal

feedback commenting procedures

ysis saw

written

observing cen

assignment sta

experts

preference inline

underlying student programming



methodology

changed throughout

addi



nal write



programmer

tion practices java wrote

ops

estimator written

morph inline block

stated

ments headers

empirically tend

student fell

indicator
programmed



centroids revealing


mirroring comment

avoid pushing desired



lines

lines
namely lines java



aimed separating

dierent comment lines

ers planners former trial



latter preference



indication preference block

detailed plan begin coding

ments commenting

batch



arise

dates updates incremental updates updating dynamically student

comment

updating increments

batch

batch increments

observe inter

esting trends







else switch

observe respond
exposed
switch statement lecture breakout assignment getting feedback
graders adopted dropped
showing prefer
reject experimentation

ana

specic
survey asking abandoned switch statements favor



else chaining educators

pyramid sub

specic targeted feedback ad

missions shorter assignments

teaching style accommodate needs
specic individuals observe trend

dierence batch

ration

noticeably submission pro

switch

grams increasingly projects

else





require
indicative conceptual young programmers require unnecessary experienced programmer handle increasingly structures increasingly
lengthy
solutions concise solutions
creating wrote nding kind
kind house straight straight



failing recognize simpler solutions nding







loops loops


loops assignment quick

observe

realize

loops

dynamic commits



commit initially jumps rst

infer stu

breakout decreases quarter

dents assignments stu

progresses representative

dents demonstrate mastery simpler

programming skills

statement stu

trial

dents assignment involved

ing trend deletion



indicative recognizing

dice thirteen scoring

composition reuse factored



style grade

instructor check expectations



loops valuable



loops

assignment stu

technologies lab author conducted experi

dents stu

ments independently thank

dents



loops



sor paulo blikstein

loops

singh feedback
ideas progress


chris piech

sahami

daphne koller

stephen cooper paulo blikstein


conclusions inference
thing infer
automate qualitative
hope researchers nd
methodology observe dierent trends
hope characterize
oer insight
programming paradigm shift student
programming tools
education tools educators needs
oer assess retaining material



educators specic dierent
programming enables instructor specic targeted feedback hope oer educators introductory programming solid typical
progression student
something ad hoc
teaching

acknowledgments
conjunction analytics




