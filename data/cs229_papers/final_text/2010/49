compilation
sequoia
michael bauer










sequoia portable locality aware parallel programming designed
easier scientists engineers write codes
super computers sequoia
programming hierarchy
agnostic architecture sequoia parametrized tunable specified
compile architecture whenever piece
transferred responsibility programmer fill
compile designed
onto architecture
tunable
goals sequoia dynamic
execute programs loading compiler onto
runtime unknown compile
load onto runtime unknown
changing runtime
dynamically compile
architecture require runtime
tunable constants passed compiler efficiently
minimal overhead paramount runtime

facilitate runtime efficiently propose commonly occurring sequoia programs
enable runtime efficiently
architecture arguments architecture quickly
tunable passed compiler commonly occurring offline
embed runtime
discover feasible






definition


sequoia automatically tunable
architecture stated
consisting defining
architecture children
tunable





began

investigate
commonly occurring sequoia programming
tend scientific
studies
scalar plus
dense multiplication
multiplication dense multiplication
conv convolution
sequoia correspond communication ratios







architectures constructed suite generating
architectures
smp smp
smp smp
cmp core cmp
mpi
smp mpi cores
gpu nvidia tesla
gpu nvidia gtx
referring

communication ratios determining parallel codes



fiin hierarchy
modeled

mappings constructed
demonstrate

duplicate
constructed
attempting
architectures smp gpu
architectures observe
capable detecting subtle




construction

experience sequoia felt

vastly
modeled separately felt
architectures
explored constructing






something
fits normalizing

unnormalized




indicated insufficient
capturing





noticed
varied

fits
outputs purpose
scaled dividing
scaled
maximums scaled
batch minimizing lms

repeat














fithe traditional brute force
optimum







thing noticed trouble dealing
extreme variations ranges existed

hope enable
deal extreme discrepancy ranges
unfortunately restricted prevented

unable avoid

couldnt
thing




exp
sqrt

intelligent

multiplication
ended

minimized







attained absolute


equivalent sequoia
compile architectures mpi
core smp nvidia tesla gpu
speedups attained coded

generating consuming
require expert



sequoia
architectures

noticed facts attain
coded smp architectures
exceed coded discovering
parallel resources runtime
gpu
architecture mappings concluded
gpu architecture memories
opposed smp wasnt

implementations comparable
werent consistent realworld





weve offline
commons scientific environment
technology discover hierarchies
crucial super computers targeted sequoia
consist
plan continue
enable
spaces hope
hierarchies




