benchmarks
saurabh
collaboration adam coates

aims creating benchmark
dl
operations cpu usage
operations
standardized api blas
dl
facilitate dl
supercomputing hpc experts
operations
covering aspects dl
auto encoder ae
convolutional nets cnn
iterative shrinkage
fista
coding
api
numpy theano gpu
api theano gpu
faster depending
numpy validates usefulness
api

readers familiar skip






efforts trying
efficiency coates
implementations
hpc
fewer
benchmarks hpc
lacking

auto encoders ae auto encoders

orientations

typically
life patch

sparsity property
aes modeled middle
generating sparsity
sparsity penalty
details please refer middle
fed cnn
efficiency mapped
cnn
expensive operations auto encoders
involve multiplications transpose
sigmoid covered
detail

aims benchmarks

hpc benchmark cover
areas dl cnn ae
fista collaborator introduced
sections simplify adoption
benchmarks hpc supercomputing
operations
profiling abstracted
api dl
operations manipulations
easy understand opposed dl
supercomputing hpc experts
optimizing api opposed
depicted
subsequently collaborator adam
coates benchmarks


convolutional cnn cnns
inspired cortex neuron cortex
activated
neurons tiled
activations pooled
fed neurons activation pooling
stacked hierarchy
property connecting spatially neurons

preserved closer
cortex recognize locally

view recognize

fully connected neurons
detailed explanation cnn please refer
cnn operations convolve pool
upsample backpropagation operations
expensive cpu usage
api
iterative shrinkage fista fista
iterative optimizing
coding coding ae maps
lies
reverse ae
multiplying
equations ws

iteratively optimized
dependent production
mapped iterative
fista fista optimizes
reconstruction penalty ws
applies shrinkage
sparsity penalty fista uniquely adds momentum

codes details refer

details
methodology initially involved getting familiar
ufldl tutorial implementing
cnn ae coding detail
methodology workflow
prototype ufldl exercise

convert implementations
numpy
profile
operations
api consisting operations
api
numpy theano
implementations gpu
analyze
implementations

workflow

github

issues
flavor issues
faced
choosing cnn cnn operations
involving convolve exposed api
operations felt
operations easier understand api
expose operations
optimizing
operations
looping
flattening

option greatest
option
reshaping operations
incompatible operations operations
versions compatible
cnns requirement upsampling
creative flattening bunch
manipulations

allocation ensure intermediate
operations gpu
host wanted
allocation placement disposal havent fully explored
early
operations rand initialize
initialize
allocated placed
array ordering indices realized ordering
array indices reverse
numpy naturally brought
follow api
suggested collaborator
bunch wrappers

indexing leftmost
closely packed
numpy indexing rightmost closely
packed
theano constraints operations adopted gpu
usage pool rotate operations
accessible theano theano likes construct
cnn symbolic
converts optimizes internally
amenable api likes
break operations
operations intend write cuda py cuda
implementations coming weeks


cnn
pie charts
expensive operations api cnn highlights
operations cnn api
cnn pipeline pie chart
expensive operations cnn numpy
theano gpu started
numpy cnn minutes mnist
epochs mini batching
batch going
epoch convolve convolve
grad convolve expensive operation
moving theano convolve theano speedup
gpu gpu
convolve insignificant optimized

convoluted

cnn

upsample creating flattening array
bunch reshaping
gpu
gpu numpy
dominant spent rotation operation
convolve grad convolve accounts
cpu accounted pool
upsample operations reshaping operation
upsample dominant contributor
operations cuda

cnn numpy theano gpu
theano gpu speedup
validates usefulness api
operations

cnn numpy theano theano gpu

auto encoders expensive operations
api ae highlights operations
ae api ae pipeline expensive
operations ae numpy theano gpu
ae theano gpu
faster theano gpu faster
numpy optimized operations gpu
theano got
spent transferring host gpu
havent figured clean forcing
intermediate operations stay gpu theano
operations cuda
py cuda
operations cuda py cuda

auto encoders

ae

numpy theano theano gpu


completed autoencoders
cnn
operations cpu
usage operations abstracted api
implementations api
numpy theano theano
gpu faster numpy validating
utility api optimized
operations
benchmarked




icml pdf
ufldl tutorial php ufldl tutorial
ac il pdf
https github deeplearning benchmark


