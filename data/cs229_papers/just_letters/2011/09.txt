sentiment analysis of twitter feeds for the
prediction of stock market movement
ray chen  marius lazer
abstract
in this paper  we investigate the relationship between twitter feed content and stock market movement 
specifically  we wish to see if  and how well  sentiment information extracted from these feeds can be used
to predict future shifts in prices  to answer this question  we construct a model  estimate its accuracy 
and put it to the test on real market data using a mock portfolio  our results indicate that the model is
successful in generating additional profit 

 

introduction

historically  stock market movements have been highly unpredictable  with the advent of technological advances over the past two decades  financial institutions and researchers have developed computerized mathematical models to maximize their returns while minimizing their risk  one recent model by johan bollen    
involves analyzing the publics emotional states  represented by twitter feeds  in order to predict the market 
the state of the art in sentiment analysis suggests there are   important mood states that enable the prediction of mood in the general public  the prediction of mood uses the sentiment word lists obtained in
various sources where general state of mood can be found using such word list or emotion tokens  with the
number of tweets posted on twitter  it is believed that the general state of mood can be predicted with
certain statistical significance 
according to bollens paper  twitter sentiment is correlated with the market  preceding it by a few days 
specifically  the google profile of mood states  gpoms  calm state proved to be a reliable predictor of
the market  due to the proprietary nature of the gpoms algorithm  we wish to see if a simpler method
could provide similar results  while still being able to make accurate enough predictions to be profitable 

 

sentiment analysis

we begin our sentiment analysis by applying alex davies word list     in order to see if a simple approach is
sufficient enough to correlate to market movement  for this  we use a pre generated word list of roughly five
thousand common words along with log probabilities of happy or sad associated with the respective words 
the process works as follows  first  each tweet is tokenized into a word list  the parsing algorithm separates
the tweets using whitespace and punctuation  while accounting for common syntax found in tweets  such as
urls and emoticons  next  we look up each tokens log probability in the word list  as the word list is not
comprehensive  we choose to ignore words that do not appear in the list  the log probabilities of each token
was simply added to determine the probability of happy and sad for the entire tweet  these were then
averaged per day to obtain a daily sentiment value 

 

fias expected  this method resulted in highly uncorrelated data  with correlation coefficients of almost zero  
we tried to improve this by using a more comprehensive and accurate dictionary for positive and negative
sentiments  specifically  we swapped our initial word list with a sentiment score list we generated using sentiwordnet      which consisted of over     thousand words  since this list considers relationships between
each word and includes multi word expressions  it provided better results  see next sections  
we also tried representing the daily sentiment value in a different way   instead of averaging the probabilities
of each tweet  we counted the frequency of happy tweets  such as using a threshold probability of above
    for happy  and represented this as a percentage of all tweets for that day  while this did not improve
the outputs correlation with stock market data  it did provide us with more insight into our twitter data 
for example  we see a spike in the percentage happy tweets toward the end of each month  figure     we
did not find news events which could have caused these spikes  however  upon investigating the source of
twitter data  we found that it had been pre filtered for a previous research project      i e  there may be
some bias in what we assumed to be raw twitter data   due to a lack of access to better twitter data  we
conclude that using the frequency of happy tweets is not a reliable indicator of sentiment for our application
and revert to our averaging method 

 

constructing the model

in this section  we discuss the construction of our model  from choosing an appropriate algorithm to finding
a suitable set of features  and provide justification for these decisions 

   

the algorithm

we chose to model the data using a linear regression  this decision was motivated by several factors 
 speed   a fast  efficient algorithm was one of our original specifications  this is a must when working
with massive amounts of data in real time  as is the case in the stock market 
 regression   we sought to be able to make investment decisions not only on direction of market
movement  but also to quantify this movement  a simple classifier was insufficient for this  we required
a regressor 
 accurate   naturally  we needed an algorithm that would model the data as accurately as possible 
since our data is  by its nature  very noisy  we chose a simple model to avoid high variance 

 

fi   

features

the backbone of our algorithm was  of course  twitter sentiment data  as such  we designed several features
that correspond to these sentiment values at various time delays to the present  training in one dimensional
feature space using only this data  we found that the best results were obtained when the twitter data
predated the market by   days  using k fold cross validation to quantify our accuracy  we observed that
this model was able to make predictions with approximately     accuracy  a modest improvement over no
information      accuracy   but we wanted to see if we could do better 
we designed   more classes of features to try  one modeling the change in price of the market each day at
various time delays  the other modeling the total change in price of the market over the past n days  to
help us choose a good set of features  we applied a feature selection algorithm using forward search to the
problem  from this  we learned that the change in price   days ago feature improved our previous model
to one with approximately     accuracy 
further tests indicated that several of the other features are also relevant  however  due to relatively small
amount of training data     days or fewer   training in higher dimensional feature spaces yielded worse
results in practice  nonetheless  with the availability of more training data  a more complex and diverse set
of features could further improve accuracy  we were able to achieve  using nearly all of our available data
to train  infeasible for portfolio simulation  see next section   classification accuracy as high as     

 

testing the model

we have built a model for predicting changes in the stock market price from day to day  we have identified
the accuracy maximizing set of features and trained our model on these features  now we must put it to the
test using real world data to determine if it is profitable  in this section  we develop   different investment
strategies based on predictions from our model  apply them over some time period  report on the results 
and compare them to   benchmark investment strategies 

   

our investment strategies

classification   the simpler of our   strategies considers only the predicted direction of market movement 
that is  we look only at the sign of the anticipated change in price  if it is positive  we buy as many shares
as possible with our current funds  otherwise  we buy no shares  and simply sit on the money until the
following day when we reevaluate the situation 
regression   with this more complicated strategy  we seek to exploit knowledge of how much the market
will change  rather than simply the direction it will shift  this allows us to base how much we invest on how
certain we are of our prediction  there are countless such strategies that one could propose  we chose the
following based on observations of good performance 
 

      if       ppredicted   changeq
invest     
if       ppredicted   changeq      

 
  
if ppredicted   changeq     
here  invest is the percent of our funds we use to buy stock and ppredicted   changeq is computed by
dividing the predicted change in the market tomorrow by the price today 

   

the benchmark investment strategies

default   this strategy uses no information about the market  and will simply buy as many shares as
possible each day 
 

fimaximal   this strategy assumes perfect knowledge about future stock prices  we will invest all available
funds when we know the market will go up the following day  and invest no funds when we know the market
will go down  this strategy is  of course  impossible to execute in reality  and is only being used to quantify
the profits from an ideal strategy 

   

simulation

we start with exactly enough money to buy    shares of stock on the first day  note that since we output
results as percentages of starting money  they do not depend on this value  and as such it is chosen arbitrarily 
at the start of each day  we make a prediction and invest according to some strategy  at the end of the day 
we sell all shares at closing price and put the money in this bank  this is done so that any gains or losses
can affect future gains or losses by virtue of being able to purchase more or less stock at every time step 

   

results

we ran the simulation for each investment strategy  as described above  on   different time intervals  the
results are shown below 

in the figure on the left  we trained on about    of the data     days  and simulated on about    of the data
    days   in the figure on the right  we trained on about    of the data     days  and simulated on about   
of the data     days   we immediately see that both of our strategies fare better than the default strategy
in both simulations 
note  however  that the regression strategy is more profitable in the first simulation while the classification
strategy is more profitable in the second simulation  we observe that on the simulation in which the model
was given less training data  figure on the right   on day     our regression strategy opted to invest only    
of funds that day because it perceived gains as being uncertain  this did not happen on the corresponding
day in the first simulation  with more training data   indeed  with less data to train on  imprecision in our
model resulted in a poor investment decision when using the more complex regression strategy  in general 
the classification strategy tends to be more consistent  while the regression strategy  though theoretically
more profitable  is also more sensitive to noise in the model 

 

conclusion

we have corroborated the results of the original paper and shown that  even with much simpler sentiment
analysis methods  a correlation between twitter sentiment data and stock market movement can be seen 
we have discovered that the best results arise when twitter data predates the market data by about   days
and created a model capable of making predictions based on this data  furthermore  despite the fact that

 

fithe correlation is often loose  it is possible to use this model to derive profitable investment strategies    of
which are also presented here  we hope this lays the foundation for further research in algorithm trading
methods that incorporate sentiment data to increase accuracy and  ultimately  profits 

 

acknowledgements

we would like to thank mihai surdeanu and john bauer for the project idea  general guidance  and providing
us with the twitter data 

 

references

    j  bollen  h  mao  x  zeng  twitter mood predicts the stock marker 
arxiv  http   arxiv org abs          
    alex davies  a word list for sentiment analysis of twitter 
http   alexdavies net         word lists for sentiment analysis of twitter 
    sentiwordnet  an enhanced lexical resource for sentiment analysis and opinion mining 
http   sentiwordnet isti cnr it 
    jure lescovic  twitter data  http   snap stanford edu data twitter  html

 

fi