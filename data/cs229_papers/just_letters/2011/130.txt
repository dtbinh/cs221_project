finding the best panoramas
jeremy pack
cs     fall     

abstract

 
   

google maps publishes street level panoramic photographs from around the world in the street view service  when users request street level imagery in a given
area  we would like to show the best or most representative imagery from the region  in order to select the
best panorama for a region of any size  i developed a
panorama ranking algorithm 
an enhancement to this technique is also described
here  leveraging the alternating direction method of
multipliers to create a high throughput distributed online learning algorithm that should allow for instant classification updating based on real time user traffic 
the
ranking
algorithm
was
deployed
maps google com on monday  december          

training data
ranking panoramas

the goal of this work is to be able to determine a best
panoramic image in any given set of panoramic images 
assuming that any best panorama from a set would also
be the best in any subset containing it  and that any
subset without it would have a different best panorama
implies that there is some total ordering on the set of
all panoramic images  as will be discussed later in section      this ordering depends on the definition of best
for the current user 
in      user rankings of photographs are averaged together to estimate image quality  this technique is very
prone to scoring bias from individual users  which must
then be accounted for  instead  i use pairwise ranking 
where the user selects one of two panoramas as preferred 
another alternative would be listwise ranking  which can
exhibit better statistical and convergence characteristics
       pairwise ranking was selected instead in order to
get a variety of rankings as quickly as possible  but listwise ranking may be better for future training 

on

for more in depth information on the particular difficulties posed by our work on google street view  please
refer to     and     

 a  chicago

   
 b  uc san diego

condorcet criterion

a condorcet method can be used to find the preferred
item in a set of items by considering the pairwise preferences across all items  see       for a method to meet the
condorcet criterion  it must guarantee that if any single
item in the set is preferred in every pairwise comparison
to every other item in the set  it must be the selected
condorcet winner  there are far too many panoramas
to perform a comparison between every possible pair 
instead  i use a small number of comparisons to statistically determine machine learning parameters to maximize the likelihood of satisfying the condercet criterion 
similar to the technique described in      in addition  we

 c  south africa

figure    ranking server for different regions

 

fiuse the extension to the condorcet criterion and kemeny orders described in      this requires that any
item that is consistently preferred over another item
should be ahead in the final ranking 

 nearby businesses and landmarks

   

 collection vehicle  trike  car  snowmobile  etc  

 type and importance of road
 number of people or cars in the image

preference training data

to estimate the pair wise rankings for a number of
panoramas  an application was constructed to randomly
show a pair of images from some location  it may show 
for example  two images from chicago  figure  a   uc
san diego  figure  a   south africa  figure  c   or some
other region of any size  a user would then select one
of the two images as the better image to represent the
given area 
users were encouraged to rate images from areas
where they had lived  studied  or frequently traveled 
approximately         such rankings were used to train
the machine learning algorithm  it must be stressed that
the goal was not to find just the most likely condorcet
ranking for this small set of panoramic images  but to
determine machine learning parameters to automatically
generate the most likely condorcet ranking for all street
view panoramas in the world   including those that were
never manually rated 
there are multiple sources of error and ambiguity in
the training data 

   

the parameters in the modeled score include the following 
    non landmark feature weights
 xi   some combination of the non landmark features
for panorama i
 i   set of nearby landmarks for panorama i   each
feature is in one of a small set of super categories 
and also part of a larger set of sub categories  government buildings  businesses  parks etc  
 i   distance of the landmarks i from panorama i
    feature weight for the various types of landmarks
in the sub categories and super categories 
 f  i   i       the weight in the panorama score for
panorama i  given the nearby landmarks i  

 users may accidentally select the wrong pano as the
better panorama 

 t xi   f  i       the score for panorama i 

 different users may have very different preferences
for what constitutes a good panorama 

the function f  i   i     is assumed to be increasing
in i for landmarks with a positive weight in   or decreasing when the weight in  is negative  a simple
function that meets this criteria is the sigmoid function
 
  where z is some linear function of the
g z      exp z 
distance i   f is then the  weighted sum of these sigmoid functions of the distance  note that this sum is
not convex in  and i  

 there were only a small number of users rating a
large number of panoramas  meaning that there are
certain biases apparent in the results 

 

model

   

simplified model

parameters considered  partial list 

   

to train the machine learning classifier  features including the following were considered 

binary classifier

the training data is a set of preferences of the form
panorama a is better than panorama b  using the
scoring model described previously  this can be modeled
as the score of panorama a should be higher than
the score of panorama b  we thus want to develop a
classifier that generally selects the same panorama as
better as was picked by the users  an error is then the
case where the panorama selected as better by the user
is considered worse by the algorithm 
as described in section      there are numerous
sources of error in the training data  because of this 
there is no reason to believe that the data will be separable  no matter how many features are included for
consideration  preference rankings are thus considered
to be probabilistic predictors of the true ranking 

 camera type  there are a number of different resolutions in street view imagery 
 date of image capture
 connectedness of panorama  intersections etc  
 nearby geo located user photos
 user photos that match the given panorama  street
view panoramas are feature matched with public
user photos 
 count of unique users to contribute photos
 

fi 
   

method of solution

   

if all of the panoramas in the suburbs of san jose
were perfectly ranked  but the panoramas of the golden
gate bridge and other bay area landmarks were poorly
ranked  the algorithm would be of little value  we thus
want to weight important panoramas more heavily than
less important panoramas in the algorithm 
to make sure high scoring panoramas were weighted
more heavily  the random selection of panoramas wasnt
uniform  as training samples were added  early iterations of the classification were run to generate approximate scores  panoramas with higher scores were then
included more often in the set of panoramas presented
to the people rating 

descent method

as mentioned above  the resulting score function is not
convex  this necessitated the use of sequential convex
optimization to converge to a solution  once the initial
solution was found  the distance function parameters in
f were set to be constant while selecting features 
by setting these parameters constant  it was then
possible to use the support vector machines algorithm
 svm  to develop a classifier  many of the features being
used were primarily discrete valued or boolean  most of
the remaining features were usually zero  most panoramas have no nearby post offices  for example   this
made svm very unstable  and it performed worse generally than a basic linear classifier  stabilizing an svm
with discrete features is described in      but further experimentation is needed to determine if their technique
would work well with the mixture of features here 

   

   

feature selection

optimization function

the optimization function was basically as follows 
 

satisfying the condorcet criterion

after the weights are found for the scoring function 
scores can be generated for all panoramas in the world 
because of the subjectivity of the training data as described in section      a high percentage of the user preferences cannot be satisfied  even after including a number of nonlinear features  we can still add a manual
weight to the panoramas used for training to still satisfy
the condorcet criterion in cases where we are reasonable certain that one panorama should score more highly
than another panorama 
because we do not have a comparison between every panorama  we can use linear programming to find a
kemeny like solution without resorting to an np hard
algorithm  as described in      given the user preference
that panorama a be scored higher than panorama b  for
example  we would have that s a    ma  s b   mb  
ek     where ma   mb are the manual scores for a and
b respectively  and ek is the unsatisfied disagreement
term  massaging this into a linear program requires using separate variables for the positive and negative parts
of each of these values  and then minimizing the linear
sum of all m and e values 
after the initial trial of adding manual weights  it became clear that there was a problem case where low
quality panos that were only ranked once or twice could
be ranked higher than high quality because of user error
in the classification  after the first run one of pariss fine
public restrooms was ranked more highly than the eiffel tower  thus  reasonable certainty requires that the
probability of ranking error and user bias be considered
in the algorithm 
the simplest way to avoid this type of error proved to
be a requirement that any change in the manual score of
a panorama be accompanied by a much larger decrease
in total disagreement in ranking  this means weighting
e more heavily in the optimization function in the linear
program  the precise value for the weight of e depends
on the expected error rate 

being unable to use svm  i was forced to determine
the nonlinear features to include manually  to do this 
i split the data into subsets using two splitting techniques  the first technique involved using a mixture of
gaussians model  as described in      to split the data
into sets of similar panoramas  the second technique
split across the different discrete features  all highways
in one bucket  all sidewalks in one bucket  etc    i then
calculated the classification error for the comparisons
between each subset of panoramas  for those pairs of
subsets with high classification error  i attempted to determine the most relevant nonlinear features that could
be used to distinguish the subsets 
to determine which features to remove  i partitioned
the preference set into parts  and trained on each one
separately  the feature with the highest probability of
being zero was repeatedly removed to determine the final
set of features to consider 

   

weighting of training samples

 

minimize c   ei                      
subject to g xi    g xj     ek    for i j in comparison k
ei   
convergence was excellent and robust  and for the full
training set it gave the same training and generalization
errors for a variety of values of c   and         and
    respectively  since the absolute minimum training error given the cycles in the training data was     
and even an over fit svm couldnt get better than    
training error  i found those results quite satisfactory 
 

fidepend on the value    p   the classifier would then
be trained separately for each pairwise combination of
p    p   p   any pair without enough training samples
to train a classifier would not be considered 
the results of the different training runs could then
be averaged for each p  p  
 a  macau and hong kong  tourist event locations

   

it is possible to do far better than simply averaging the
results  the alternating directions method of multipliers  admm  is a powerful way to split a convex optimization problem into multiple sub problems that are
solved repeatedly  see        this technique shows far
better convergence than simple averaging  and is guaranteed to converge given basic requirements on the functions used in each sub problem 
i wrote code to perform admm consensus  see     
for information on consensus algorithms  across subsets
of the data  admm convergence was good  with a few
special difficulties  for instance  since a binary classifier
was being used  scaling of the scores was arbitrary and
they had to be scaled separately in each subproblem 
the great benefit of using admm is that it quite naturally allows for online training  and once initially converged  keeps the solution very close to optimal as more
data are added over time  this means that true online 
distributed real time training is achievable  even with a
high volume of real time training data 

 b  sydney   artistic quality

 c  new york city   heading selection

figure    difficult ranking decisions

 
   

distributed online learning
high volume training data

though this offline classifier works generally well at
finding good panoramas  actually determining which
panoramas are best for the users of the street view service across a variety of use cases will require far more
training data  it would be preferable to analyze user
traffic in real time to constantly update the algorithm
parameters 

   

the alternating direction method
of multipliers

 
   

further work
heading selection

the current implementation on maps google com does
not automatically select a good direction for the user
to turn to view the panorama  the optimal direction
can be determined by considering the direction of user
photos from the current panorama  or by considering the
direction of nearby landmarks 
over time  it may be possible to calculate the optimal
directions based on user behavior  as seen in figure  c 
in a place like the south west corner of central park or
times square in new york city  it can be difficult to
determine a best direction to turn the panoramic view 

training separately on subsets of the
data

to perform online training on a large dataset  it will
be necessary to distribute the machine learning algorithm  this actually provides an interesting opportunity
to train the algorithm separately on different subsets of
the data 
it makes sense  for instance  that the machine learning
algorithm may result in different parameters in different
countries  because of the variability across countries and
languages of the quality of the landmark and user photo
data sets that are being used as features in the classifier 
also  there is a discernible difference in the parameters
for user photographs and landmarks for panoramas that
are on highways or freeways versus those that are on
neighborhood streets or major thoroughfares 
given a subset p  p   it is thus possible to assume
some global value for the parameters   as well as local
modifiers to the global parameters p for each subset p 
the scoring for subset p of the panoramas would then

   

iconic views

some landmarks are so famous that we want more than
just some view of the image   we want the iconic view 
in       the authors present techniques for automatically
determining from a large set of photographs which view
of an object is iconic  this type of technique could be
used to select the best of many different views of famous
places  their work also discusses automatically determining which object in a photograph is the subject 
 

fireferences

which could make it easier to determine which direction
to point the user initially when viewing the panorama 

 

    l  vincent  taking online maps down to street
level  computer  vol      no      pp               

conclusions

   

    d  anguelov  c  dulong  d  filip  c  frueh  s  lafon  r  lyon  a  ogale  l  vincent  and j  weaver 
google street view  capturing the world at street
level  computer  vol      no     pp             

fun facts

there were a number of interesting things learned from
the training of the algorithm 

    y  ke  x  tang  and f  jing  the design of
high level features for photo quality assessment 
in computer vision and pattern recognition      
ieee computer society conference on  vol    
pp          ieee       

 the number of unique photographers who took photos in an area is more important than the number
of unique photos in an area 
 government buildings are a strong positive predicter of panorama ranking 

 nearly ten percent of user preferences could not be
satisfied by any ordering 

    z  cao  t  qin  t  liu  m  tsai  and h  li 
learning to rank  from pairwise approach to listwise approach  in proceedings of the   th international conference on machine learning  pp         
acm       

 people love their sports teams  so when they rate
their home town they always rate the stadium
highly  this led to a very strong positive weight
on stadiums in the rankings 

    d  austen smith and j  banks  information aggregation  rationality  and the condorcet jury theorem  american political science review  pp    
         

 bars and hotels have are a strong predicter of low
quality panoramas 

   

    c  dwork  r  kumar  m  naor  and d  sivakumar  rank aggregation methods for the web  in
proceedings of the   th international conference on
world wide web  pp          acm       

definition of best panorama

users have very different opinions about which panoramas are best  would a user prefer the view of sydney australia that shows both the harbour bridge and
the opera house  or the artistically superior shot from
below the harbour bridge of the sydney skyline  figure  c  
these differing ideas of what constitutes best will
actually change even for a given user  depending on the
context  as such  a natural extension of this work is to
model the behavior of a given user to predict which type
of imagery they would be interested in seeing  there
could then be a number of separate rankings for the
panoramas  to target users interested in seeing the best
cafes and restaurants in town  or the best architecture 
or the most interesting churches  cathedrals and temples 
or the best views of the ocean or mountains 

   

    m  truchon  an extension of the condorcet criterion and kemeny orders  cahier  vol             
    k  sadohara  learning of boolean functions using
support vector machines  in algorithmic learning
theory  pp          springer       
    j  bilmes  a gentle tutorial of the em algorithm and its application to parameter estimation
for gaussian mixture and hidden markov models 
international computer science institute  vol    
p            
     s  boyd  n  parikh  e  chu  b  peleato  and
j  eckstein  distributed optimization and statistical learning via the alternating direction method
of multipliers  tech  rep   working paper on line 
stanford  univ       

launch on maps google com

the initial demonstration of this technique was so convincing that it was determined that the ranking should
be made available to the public immediately  the ranking generated using the offline classifier was made available as the default panorama selection method on the
website maps google com on monday  december   th 
to use this new ranking information on google maps 
move to a map view at the country or state level  and
drag and drop the pegman figure onto a city  the service
will attempt to return the best panorama from within a
few pixels of the selected location 

     f  zanella  d  varagnolo  a  cenedese  g  pillonetto  and l  schenato  newton raphson consensus for distributed convex optimization       
     t  berg and d  forsyth  automatic ranking of
iconic images  university of california  berkeley 
tech  rep       

 

fi