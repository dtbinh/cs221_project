 

introduction

 

a step by step approach to footstep detection
francisco cai  david philipson  salik syed
december         

 

introduction

in this project  we tackle the problem of recognizing footsteps in audio recordings  while footstep
sounds may vary from individual to individual  in general they have similar characteristics that
make this problem amenable to learning algorithms  we also want to determine if it is possible
to extract other information  such as the number of people walking  solely from audio recordings 
there are many practical applications for footstep recognition and pedestrian count estimation 
including robot human interactions and home automation  surveillance systems could take a step
into the future by applying footstep recognition to selectively review key points in the footage 

 

background research

to kick start our research  we examined literature from the fields of music information retrieval and
speech recognition  the leading classification features we found were the mel frequency cepstrum
coefficients  these are primarily used for speaker recognition or simple speech recognition  the
mfcc is a spectrum of a spectrum  a fourier transform of the audio signal is then passed through
a discrete cosine transform  many of the algorithms we encountered seemed overly complex for our
problem as it focused on resolving ambiguities between a large space of classifiable words using
statistical or linguistic models  we felt this was not necessary for our problem  and decided a
simple set of useful features would be more fruitful than complex algorithms  we also looked into
literature that discussed the classification of audio events  but did not find previous research specific
to footsteps 

 

footstep recognition

in the first part of our project  we applied machine learning to recognize the footsteps in an audio
recording 

   

data collection

we did not have any reliable source of data for our learning problem  taking this in stride  we
generated our own dataset using audio recording equipment  we used a fairly sensitive studio
microphone as well our laptops built in microphones to record positive and negative samples  positive
samples were recordings of us walking around in various footwear with different background noises 
negative samples were recordings of us talking  moving around in our chairs  etc 

fi 

footstep recognition

   

 

implementation

we used matlab for our projectit was easy to find and adapt existing audio processing matlab
functions for our purposes  to apply machine learning  we used weka  a standalone java program  
we first read in training examples  audio recordings in  wav format  into a matlab matrix  calculated
feature vectors from those training examples  and wrote the feature data to file using the attribute
relation file format required by weka  using weka  we could then try using different machine
learning algorithms on the data  we also used liblinear to integrate the machine learning code
with the rest of our matlab code  

   

experiments

for the first pass  we chopped up each positive and negative audio recording  sample rate      khz 
into clips of     samples  which we then used as training examples  for our features  we used melfrequency cepstrum coefficients  we experimented with logistic regression  random forest classifier
and sequential minimal optimization and tested using    fold cross validation  the algorithms
all gave us mediocre results  around     accuracy   we tried simple adjustments to how we
were obtaining our clips   such as making them longer  as long as       samples   and cutting
clips at zero crossings  periods of silence or near silence   that gave us slight improvement in our
accuracyslightly above      
by changing how we were generating our training examples  we were able to increase our accuracy
significantly  to more than      in our first pass  we had been indiscriminately chopping up audio
recordings containing footsteps  and labeling every clip as a footstep  this is akin to taking a photo
containing mugs  cutting it out into squares  and then labeling every square as a mug  on this
iteration  we used a free audio editor audacity to manually splice out clips containing footsteps 
these new clips containing only footsteps served as our new positive training examples  these clips
ranged from averaged a quarter of a second in length  for negative training examples  we continues
to chop the negative audio recordings into clips of similar lengths 

figure    waveforms of some of our training clips  from left to right  a footstep  a tap on a table 
and ambient noise 
with these new training examples and using mfcc as features  we ran the smo algorithm
 
mark hall  eibe frank  geoffrey holmes  bernhard pfahringer  peter reutemann  ian h  witten         the
weka data mining software  an update  sigkdd explorations  volume     issue   
 
r  e  fan  k  w  chang  c  j  hsieh  x  r  wang  and c  j  lin  liblinear  a library for large
linear classification  journal of machine learning research                    
software available at
http   www csie ntu edu tw  cjlin liblinear

fi 

pedestrian count estimation

 

 with a linear kernel  on a training set with     positive examples and      negative examples  with
   fold cross validation as before  we correctly classified       of the examples  and had precision
and recall above     for both the positive and negative examples 
now we wanted to see how robust these results were  to test this  we decided to introduce
more difficult training examples  for positive examples  that meant more noise in backgroundfor
this  we overlaid ambient noise tracks  such as ocean waves  on our footstep clips  for negative
examples  we introduced more varietycomputer generated sinusoidal and noise tracks as well as
noises likely to be found in a living space  e g  hand tapping on a table   our accuracy dropped
only very slightly to      summarized results of these experiments can be found in table   

training examples
number of examples
accuracy
precision   
recall   
precision   
recall   

experiment  
entire recordings
     
      
     
     
     
     

experiment  
short clips
    
      
    
     
     
    

experiment  
trickier short clips
    
      
     
     
     
     

table    footstep recognition results from different experiments      denotes positive  footstep 
examples and     denotes negative examples  the first experiment used a random forest classifier 
and the other two used smo to produce a svm model  ten fold cross validation was used 
the final experiment we did was to compare the performance of human versus machine on
the footstep recognition task  to do this  we took a    second sample from one of the recordings
containing footsteps and had one of the group members label the times at which the footsteps
occurred  to have the machine label this    second sample  we first used liblinear to train a svm
model in matlab  then we ran a      second sliding window over the entire sample  shifting the
window over by     second each time  the start times of the windows that were classified positive
with decision value above a certain threshold were then labeled as footsteps  the result of this
experiment is presented in figure   

 

pedestrian count estimation

in the second part of the project  we applied machine learning to estimate the number of people
walking in an audio recording  we built on our work from the footstep recognition part of the
project 

   

data collection

as before  we collected our own data  we recorded more than     five minute long audios of zero
up to four people walking on our living room carpet  we had roughly    training examples for each
category  footwear included sandals  sneakers  and socks only  ambient noise included talking and
music playing the background 

fi 

pedestrian count estimation

 

figure    human vs  machine  the waveform of the audio sample is in blue  the human labelings
are the green diamonds and the machine labelings are red diamonds 

   

implementation

we wrote our code in matlab  using liblinear  we first trained a footstep recognition svm using
short labeled clips  as described in section    then we read in longer audio recordings     seconds
long each  of one or more pedestrians and used our footstep recognition svm on a sliding window
over the recordings to produce a transcript of footstep occurrences  this transcript is simply a set
of times when footsteps were detected  in this fashion  we produced transcripts for audio recordings
that contain one  two  three  or four pedestrians  finally  using these transcripts and weka  we
trained a multi class svm that classifies audio recordings based on the number of pedestrians in
the recording  we used weka because it has a good user interface for trying different algorithms 

   

experiments

we were inspired by how accurate svms can with character recognition by using very simplistic
feature vectors  thus  in our first approach we used an svm and a    dimensional feature vector
where the ith feature fi is the time at which the ith footstep occurred  if less than i footsteps
were detected then fi was set to infinity  using this approach we were able to get     accuracy
distinguishing between one or two people walking throughout the room  this approach produced
much worse results when used to distinguish between      and   people  with an overall accuracy
of      when analyzing the confusion matrix we saw that most of the misclassified examples
were of three people walking  in such cases  many were misclassified as one person  one possible
explanation is that the probability of overlapping footsteps increases with the number of people
walking concurrently  thus  our footstep recognition classifier may be more likely to fail since it
was trained to recognize single footsteps  as a result  the transcripts generated for three people
may contain fewer footstep times than those generate for two people 

fi 

discussion and conclusion

 

we tested this hypothesis by running k means clustering with   clusters and mapping each of
the clusters to a different class in a way that maximizes accuracy  we found that the cluster centers
for the three people and one person classes were fairly close to each other 
in an attempt to improve these results we decided to compute the mfccs of the entire ten
second recordings and use those coefficients as additional features in our classifier  using this
method our classification accuracy between one or two people went up to      when we extended
the svm to three pedestrians the accuracy again dropped back to       overall  mfccs did not
improve our accuracy significantly  see table   for the summarized results 

accuracy
precision    person 
recall    person 
precision    people 
recall    people 
precision    people 
recall    people 
precision    people 
recall    people 

    people
     
     
     
     
     
n a
n a
n a
n a

    people
     
     
     
     
     
     
     
n a
n a

    people
     
     
     
     
     
     
     
     
     

table    results with svm for pedestrian count estimation 

 

discussion and conclusion

the results from the first part of the project show that it is possible to recognize footsteps with
high accuracy  at least under controlled conditions  however  it is important to note the variables
we did not address due to time constraints  a natural next step would be to obtain training data
that incorporates a greater variety of footwear and walking surfaces  for our experiments  most of
the training data consisted of clips in which we walked in our sandals or sneakers on our living room
carpet  shoes such as high heels and dress shoes have very different and distinctive audio profiles 
walking on harder surfaces  such as cement  or more resonant surfaces  hardwood floors  would
also result in different footstep sounds  adding these variables would be an interesting starting
point for future work 
the results from the second part of the project show that we can distinguish between one and
two people walking very well  but not as well for more than two people  there are several approaches
that could be taken to attempt to improve this result  one possibility is to attempt to create
finer grain transcripts  much information is lost in the multiple person case when several people step
at or close to the same time  by refining our footstep classification to distinguish multiple footsteps
in close succession  we would likely be able to improve the quality of the transcripts  another
possibility is to add additional information to the transcript beyond just the times of footsteps  for
example  if our program could notice that the footsteps come in three distinct styles  it might be
able to guess that there are three people with different sounding steps 
despite the difficulties with larger numbers of people  our success at recognizing footsteps
and classifying small numbers of people suggests that technology for gathering information about
pedestrians by their footsteps is viable and a ripe possibility for further study 

fi