     cs    final project

battery management in datacetner using
machine learning
hyun goo kang
   introduction
to process billions of web pages and serve millions of
its users  google runs a huge number of machines in its
datacenters  and a large number of those machines fail
every day  while those failures can cause google s
services a lot of troubles  google does many things to
keep its services stable  the google file system  gfs  
for example  replicates its data across machines to
tolerate various hardware failures     
at a lower level  google has come up with another
brilliant way to make things reliable  our servers run
with backup batteries  power failure is very common in
datacenters and it can cause machines to suddenly go
down  when an entire datacenter experiences a short
glitch or unstable electricity  a common example  all its
machines may go down and all the services running on
those machines would become unavailable for a while 
google would not only lose all the revenues it could
make during the down time  but would also hurt its
reputation on reliability badly  serious money 
batteries can keep those machines up during the
power failure  even when power do not come back in
time  backup batteries would give applications enough
time to prepare for a clean shutdown and prevent data
corruptions  as i mentioned earlier  it can save some
serious money 
unfortunately  batteries are not very reliable  when
a short power failure happens  a number of batteries
may fail to keep their machines alive and it would cause
some service disruption  battery failure  when
batteries are not managed at all  battery failure rate can
go up pretty high and make things quite unstable  in
order to keep battery failure rate low  we replace bad
batteries with the new ones to keep them fresh 
unfortunately  it is very difficult to know which battery

is bad  and replacing batteries recklessly would waste a
lot of good batteries and money 
in this paper  i propose a battery management
scheme using machine learning  machine learning
models will find batteries that look bad  and we will
replace them to keep our batteries operating  this
knowledge would allow us to remove smaller number of
batteries and while keeping the failure rate at a low
level  the goal of this management scheme is to keep
our datacenters healthy while minimizing the cost of
battery replacements  to find a good middle point  we
bring in cost estimation models 
please note that most of the numbers and details
about batteries and datacenters at google will be
omitted in this paper  for confidentiality reasons  this
paper has been reviewed by my peers at google before
being submitted 

   cost estimation models
a  battery failure cost
battery failure cost can be estimated as fig    on the
next page  when battery failure rate is below certain
level  region a   applications will not experience any
noticeable hick ups as google s services  such as gfs 
are built fault tolerant  a number of machines will go
down for some time  but its impact would be negligible 
when the failure rate goes above certain level  region
b   however  services would start experiencing bad
disruptions  let s call it  catastrophe threshold   when
    of machines go down  for example       of  times replicated data on gfs would become unavailable
     this means a lot of users accessing the data would
be affected by the failure  considering the revenue
google is making with its services  such disruptions
will cost google huge money both in

fifigure    failure cost vs  failure rate

figure    total cost vs  replacement scheme
c  overall cost
replacing batteries too conservatively would cause
battery failure cost to go up exponentially  while
replacing them too aggressively would cause
unnecessary replacement cost  fig      in order to
minimize the overall cost  we would have to replace
batteries at an appropriate level so that we would always
keep the failure rate below the catastrophe threshold
level  while keeping the replacement cost at the
minimum  so far  smart engineers at google have come
up with some replacement heuristics to keep the failure
rate below the threshold 

figure    replacement cost vs  replacement rate
short term and long term  also  the impact of battery
failures would grow exponentially with failure rate 
batteries should be managed properly so that its failure
rate would never exceed the catastrophe threshold 

however  we can further reduce the cost by using a
more accurate battery failure prediction model 
assuming that batteries would become bad at a constant
rate  say x batteries day   we would have to replace x
bad batteries every day to keep our failure rate low  it
would give the following cost calculation 

b  battery replacement cost

by having a more accurate model  with higher p  
we can reduce the total cost  having a model with lower
variance would also help us keep the failure rate stable 

battery replacement cost can be estimated as fig    
replacing a battery can cost us the followings     cost
of a new battery     cost of replacement labor and   
machine down time during replacement  at most cases 
these costs should remain near constant per
replacement  here we assume we do not replace
batteries at a rate that could cause serious down time 

in this paper  i propose the following management
scheme  from the battery test results  we train a
machine learning model that predicts the whether a
battery is likely to keep a machine up  once we have an
accurate model  we look at our batteries and replace the
ones that are more likely to fail than others  the
replacement triggering threshold should be tweaked

fiadaptively  so that we would not replace too little nor
too many batteries in our datacenter  we can estimate
how bad our batteries are from recent battery test results
 i e  test failure    and adapt our replacement threshold
to that 

   battery modeling
in order to build the battery management scheme 
we first need to build a battery failure prediction model 
first of all  lets represent the status of a battery as b 
b should represent the internal  chemical and physical 
status of a battery and it should determine how the
battery will operate at a given circumstance 
unfortunately  this is a hidden variable   it cannot be
measured 

variable p  probability that a battery would pass a test   
keep its machine up   this should be determined by the
status of the battery and other factors  such as load and
surrounding temperature  higher load on a machine
would discharge a battery faster and increase its failure
probability  temperature is also known to affect a
battery s performance      we make the following
assumption on p 
l   load running on its machine
p   fp b  t  l    
one thing to notify here is that we keep our batteries
full most of the times  to simplify the equations  we
assume   to be full all the time and remove the variable
from the equations 
v   fv  b  t   i   fi  b t 
p   fp  b  t  l 

instead  we would like to look at some values we
can measure from outside  voltage and charge current
of a battery can be easily measured  fig     and they
should be determined by battery status  b  and other
variables such as surrounding temperature and fullness
 how fully charged a battery is  of a battery  we
simplify these and represent them as the followings 

later when we train our machine learning models
from our test results  we can enforce this assumption by
leaving out the tests done with not fully charged
batteries   where batteries have been newly inserted or
discharged in the near past 

v  voltage  i  charge current     fullness
t  temperature around the battery
v   fv b  t   
i   fi b  t    

unfortunately  we still have b  a hidden variable  in
our equation  we need make a bold yet reasonable
assumption to replace b with measurable values  v and
i  let s assume that b can be estimated from v  i and t 

another data we have is battery test results  at
google  we periodically run load tests on batteries and
store the results    whether a battery managed to keep a
machine up during the test   here  we define a

b   fb v  i  t 
this leads to 
p   fp b  t  l    fp fb v  i  t   t  l 
  fx  v  i  t  l 
with this assumption  we are going to build a
machine learning model to predict p from v  i  t and l 
   model training
a  choosing a model

figure    battery model

one problem with the model we just proposed is that in
contains external variables  t and l that are not related
to a batterys status  this makes things trickier  as we
would not want to replace a battery when it has no
problem but is likely to fail due to high temperature and
high load  we would have to exclude and normalize

fisuch external factors and replace the batteries that are
more likely to fail in general 
as it would be very difficult to achieve this with a
classification model  i decided to use regression models
that would predict the battery failure probability  with
an accurate regression model  we should be able to
compare a battery at a certain situation against how an
average battery would perform under the same external
condition  this should give us a good estimate on how
bad a battery is  i e   a batterys failure rate     avg
failure rate under the same condition    from these  we
can simply replace the top n  of the batteries with the
highest badness estimate 
b  battery data
to train a model  we create a data instance from
each battery test result  we use voltage  charge current
and temperature values measured right before the test as
input features  load of a machine could not be used as a
feature as its value changes very fast over time and is
unpredictable 
measurement data is not stable at all  there were a
lot of meaningless and flawed measurement data and i
had to carefully filter them out  for the time series data 
such as v  i and t  i created a number of features by
calculating average  hi lo  median and std deviation of
the data over intervals  with different interval sizes 
c  model selection
for each battery type  i trained logistic regression and
support vector regression models with grid search
parameter selection and forward search feature selection
techniques        linear  polynomial and rbf kernels
were used for svr  features have been scaled be
improve the models  to find the right parameters and
features  parameters and features have been tested on a
small           examples  dataset with equal positive
and negative data sizes  for validation    fold cv was
used  svr with linear and polynomial kernels were
dropped  as they ran much slower than rbf kernel 
showing similar accuracy  different battery types show
different characteristics and different features were
selected for battery types 

model   battery type
logistic regression
svr w o feature selection
svr w  feature selection

type a
      
     
     

type b
      
     
     

table      fold cross validation accuracies  logistic
regression was done with      data samples and svr
was trained with      data samples 
d  applying the model
as services have been designed fault tolerant and can
live with some failures  false negative rate  not catching
some bad batteries  is not our major concern  instead 
we would like to reduce false positive rate 
as batteries are mostly good  we have a lot more
negative  pass  instances than positive  fail  instances 
this makes our models very conservative and increases
false positive rate  to address this  i weighted positive
cases by a weight parameter w and which was
roughly optimized with data distribution 
here i would like to show that our machine model
performs better than the heuristics we have set up
before  one of our heuristics shows the following
accuracy 
type a
type b
recall
prec
recall
prec
heuristics
     
    
     
   
svr
     
    
     
    
   
    
   
   
table    recall and precision of positive class  fails 
with the same precision or recall  our model shows a
lot better coverage  accuracy  we can also compare our
own machine learning models and see how weighting
influences false positive rate  fig   shows that svr
performs much better than logistic regression in all
cases  for battery type b  our model has shown quite
astounding prediction result  surpassing our former
heuristics by far  even for type a  we have been able to
predict with    x more accuracy than mere random
selection  this would save us    x good batteries 

fireferences
    sanjay ghemawat  howard gobioff  and shun tak
leung  the google file system    th acm
symposium on operating systems principles  october
    
    anton andersson  battery lifetime modelling 
ume university  january     
    chih chung chang and chih jen lin  libsvm   a
library for support vector machines        software
available at http   www csie ntu edu tw  cjlin libsvm
    r  e  fan  k  w  chang  c  j  hsieh  x  r  wang 
and c  j  lin  liblinear  a library for large linear
classification journal of machine learning research
                   

figure    precission recall curves for battery type a
and battery type b 

   conclusion and future work
we have been able to predict more accurately than ever
with machine learning models  having an accurate
prediction model would help us keep machines more
stable and also reduce the number of good batteries
being replaced  it would be interesting to extend the
models into a concrete replacement schemes in our
future work 

fi