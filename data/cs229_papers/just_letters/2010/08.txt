online dynamics estimator for adaptive
uav control with uncertain model
william grossman and marcus hammond
december         
abstract  small  low cost unmanned aerial
vehicles  uavs  are more prone to actuator
failure and manufacturing variability than
their larger  more expensive counterparts  to
build a controller that was robust to this
variability and these failure modes a linear
quadratic regulator  lqr  was implemented to
make the aircraft follow a desired trajectory 
and then at regular intervals  a discrete time
continuous state and action model was fit to the
state transition and input histories using least
squares methods  the method was successfully
implemented on several simple systems as a
proof of concept  but initial attempts to apply
the algorithm to a more complex aircraft
model failed to explore the space thoroughly
enough to generate a faithful approximation of
the system dynamics 

control  the input was updated at a frequency of
   hz  however  a number of simplifications
from real world applications were made  for
instance the assumption that measurements were
available for all state variables  in practice  this is
not true  and kalman filters or similar estimators
are used to generate estimates of the state based
on available measurements 
due to time constraints and complications
arising during implementation on the airplane
simulator  the scope of the estimation was scaled
back to trying to learn a model for only the
longitudinal dynamics of the aircraft  in essence 
this assumes that the estimate of the parameters
influencing lateral dynamics is good enough
and does not affect the longitudinal dynamics  for
conventionally configured aircraft flying near a
trim solution  this decoupling is a valid
assumption     

i  introduction
ii  control strategy
small  cheap uavs have widespread potential
applications in a number of fields  however 
unlike their larger  more expensive cousins  they
suffer from manufacturing variability and lowcost components prone to failure  this poses an
interesting control problem  how does one design
a controller that can account for  and even learn
changes in a dynamic model of a uav in order to
tailor its control strategy to the particular
platform 
this problem can be thought of as having two
distinct
components 
calculation
and
implementation of an optimal control policy given
the current estimate of system dynamics  and
generation of a new estimate based on the inputoutput state transition histories recorded over
some finite time 
to approximate the conditions that are
encountered during actual flights using digital

aircraft dynamics are governed by nonlinear
equations of motion  however  in this paper we
are concerned with flight near cruise condition  no
extreme maneuvering and far from aerodynamic
stall   so we can safely use a linear model to
characterize the behavior 
the continuous time linearized equations of
motion are given as follows 
x  t    ax t    bu t 

   

where x t  is the state vector at time t  and u t  is
the input at time t 
usingforward euler integral approximation  a
discrete time model can be derived 

     

fix t      x t 
t
x t        i   ta x t    tbu t 
x t       ad x t    bd u t 

have   assumed   access   to   the   full   state   of   the  
system    which   is   not    in   general    the   case   
however    the   purpose   of   this   project   was   to  
implement   and   test   a   machine   learning  
algorithm    as   opposed   to   designing   a   state  
estimator    if   the   algorithm   proved   successful  
on   the   idealized   system    we   could   then  
introduce  these  other  complications  and  test  it  
further    if   it   did   not   work   for   the   ideal   case    it  
certainly   would   not   work   with   measurement  
and  process  errors   
  
choosing  weighting  matrices  
   the  weighting  matrices  were  chosen  based  
on  brysons  rule        
  

x  t  



   

where ad    i ta   bd   tb  these are the
matrices we try to approximate  as described in
the next section 
lqr controller
general setup 
for a discrete time linear system the linear
quadratic regulator gives the control strategy that
minimizes the cost function 



 
 
 
  s  s    

 max
 des


q   
 
o
 
         
 


 
 
 sn max  sndes     


h

j lqr    x t  qx t    u t  ru t 
t

t

   

t   



where x t  is again the state  and u t  the input at
time t  q and r are positive semidefinite
weighting matrices allowing the engineer to
choose the relative penalties for error and the
expense of control effort  h is a time horizon 
the case where h approaches infinity is called
the infinite horizon  or steady state lqr  the u t 

that optimizes this equation is given by 
where

u t    k x t   x t  desired  
k    r   b t pb   b t pa        

  
 
   u max

r     
  

   

  

     

where si max si des and ui max are the maximum
allowable errors off of nominal and input
magnitude  respectively  it is important to choose
these errors carefully  as the parameters in the
dynamics matrix operate on very different scales 
a   m s error in velocity is tolerable  whereas a  
radian error in pitch angle is not  similarly  the
aircraft actuators are limited in their available
travel and even further limited by the tolerances
of the linearized model 

      

  
 and   p   is   the   solution   to   the   algebraic   ricatti  



 
  

o
        
     un  max 

equation   are    
   
p   q   a t pa  a t pb r   b t pb   b t pa   
                                      
note  that  normally   p  is  a  function  of  time  and  
is   calculated   by   setting   p h        q   and  
integrating   the   cost   function   backwards   in  
time    when   t   is   sufficiently   far   from   h    as   is  
always   the   case   when   h infinity    p   converges  
so   that   p t           p t     this   turns   the   difference  
equation  into  the  algebraic  equation        
   the   ricatti   equation   is   solved   iteratively   
and   then   the   calculated   value   of   p   is   used   to  
produce   the   control   gain   matrix   k    again    we  

iii  parameter estimation
after   letting   the   initial   control   policy   fly   the  
airplane   for   a   set   time    the   control   inputs   and  
state   history   can   be   used   to   compute   a   least  
squares   linear   model   of   the   aircraft   dynamics   
this   new   linear   model   will   account   for   any  
changes  in  the  dynamics  model  due  to  actuator    
     

fi

x     
x     
  
 






diag x      



 
  

 
 

 
 xn      
 

 

 
  
  

 
 
 

 
 x          diag x      
 

 x          
  

 
 


  


 
 
xn       


  
 

  
 

  
 


 
  
 

diag u      
  
 

diag xn     
  
 

 
  
 

 
  
 

diag u      
  
 

diag xn     

 

 a 
 

a
  
   
   
  
diag um     



a

  
n
 

 


 b  

 
b  



  
   

 
 
   
diag um     
bm


  
 

  
 

 
  
 

 
  
 


a  through an and b  through bm are the column vectors of the ad and bd
matrix  respectively  of the linear aircraft model  xn     is the nth state of the
aircraft at time   
  

  
failure    or   airframe   modification    in   practice   
we   found   the   condition   number   of   the   least  
squares   matrix   to   be   very   high    giving   low  
credibility  to  the  estimated  linear  model  of  the  
airplane   we  hypothesized  that  this  was  due  to  
the   relatively   stable   flight   of   the   aircraft   
limiting   the   state   and   control   input   data   to   a  
very   small   range    by   adding   control   inputs   that  
disturbed   the   planes   flight   path    we   were   able  
to   significantly   reduce   the   condition   number   of  
the   least   squares   matrix   and   obtain   a   higher  
fidelity   model   of   the   aircraft    however    the  
condition   number   was   still   much   higher   than  
we  would  have  liked   
to   perform   the   least   squares   estimate    we  
rearranged  equation     in  order  to  solve  for  ad  
and   bd    at   the   top   of   this   page    we   rearranged  
equation     to  a  form  that  can  be  used  to  solve  
for  ad  and  bd   
  
iv  simulation

  
  
  

  
quadratic  coefficients  used  in  the  dynamics    
equations   we  used  this  model  because  we  
wanted  a  realistic  simulator  to  test  our  control  
system    although   the   system   modeled   all   six  
degrees   of   freedom   of   an   airplane    out  
controller  only  used     of  them   
v  results
a  proof of concept on simple systems

airplanes are governed by rather complex
nonlinear equations  even the linearized equations
result in an  th order system with three oscillatory
modes and two real modes  one of which is
typically unstable       rather than immediately try
to test the viability of the learning algorithm on
this system  an incremental approach was taken 
the algorithm was applied to a second order
system  and then a  th order system before it was
implemented on the airplane 
 nd order system  pendulum with one input

for   our   control   policy   validation   and  
aircraft   dynamics   estimation    we   used   a      
degree of freedom   model   of   a   light   business  
jet    this   model   was   initially   built   by   robert  
stengal   for   use   in   his   textbook   on   flight  
dynamics        the   model   uses   wind   tunnel   test  
data   from   various   flight   conditions   and  
summarizes  these  values  into  linear  and    
  
  

  

  

figure      inverted  pendulum  on  a  fixed  base

     

fito start  the algorithm was told that it had two
states and one input  torque applied at the pivot  
then seeded with a random estimate of the a and
b matrices in the linearized model  based on this
estimate it formed a gain matrix k and began to
run the nonlinear simulator  generally it would
perform poorly on the first trial  as its estimate of
the system dynamics was random  this poor
performance gave it insight into the actual
dynamics  however  and the second attempt would
successfully drive the system to zero  initially  the
system would be driven to zero so quickly that the
third estimate would have very little information
and could not generate a good system
approximation  thus emerged a pattern in which
odd trials were unstable and even trials were
stable  a heuristic solution was implemented in
which the system estimate would only be updated
if the condition number of the matrix to be
inverted in the least squares procedure was below
a certain  albeit quite high  threshold  loosely 
this corresponds to some information threshold in
the input output pairs of the system 
to further test the robustness of the algorithm 
the magnitude and direction of gravity was
changed at random intervals  forcing the
algorithm to re estimate its parameters and update
its control strategy 

  

  
figure      gravity  flips  sign   system  destabilizes

  

  

figure        algorithm   learns   new   parameters    re stabilizes
 th order system  pendulum on cart with one input  

  

figure      inverted  pendulum  on  moving  cart  

  

in the second setup  figure     the pendulum is
mounted on a moving base and the single input is
a force that can be applied to the left or right  this
adds two more states to the state vector  making it
a  th order system with a single input  again  the
system was robust to variations in magnitude and
direction of gravity  although without the addition
of integral control  the system could find

  

figure      pendulum  stabilizes

     

fiequilibrium at nonzero position error  this was
observed to happen when gravity was inverted 
effectively turning the system from a normal
pendulum on a cart into an inverted pendulum on
a cart  the controller would chase after the
pendulum  trying to position the cart under the
mass to keep it from tipping over  and eventually
settle on a position far from the origin 
 plots for this system resemble the second
order one and are omitted for brevity 

to the high condition number of the matrix used to
calculate the dynamics equations  even with
pseudo random additions to the control inputs to
promote state space exploration  the condition
number was still too high to give a good dynamics
model  a potential solution to this problem might
be to assume a prior on the dynamics model and
incorporate this information into the regression
calculation  this has been done successfully in
similar contexts     
vii  references

b  implementation on full nonlinear
aircraft simulator

    abbeel   p    quigley   m       ng   a   using    
inaccurate  models  in  reinforcement  
learning  
    bryson   arthur   control  of  spacecraft  and  
       aircraft   princeton  university  press       
    bryson   a e   and  ho   y c   applied  optimal  
control   wiley  new  york          
    ng   a   cs       lecture  notes   reinforcement  
     learning        
    stengal   robert   flight dynamics  princeton
university press         

the positive results obtained on the simpler
test cases did not extend to the aircraft model  the
condition number of the matrix to be inverted was
on the order of     in the best of cases  and no
good estimate of system dynamics could be
extracted from the data  adding noise to the
inputs after calculating the lqr controller
resulted in an improvement in this condition
number of several orders of magnitude  but still
did not yield a good estimate of the dynamics 
the lqr controller did not explore the state
space extensively enough to generate a good
picture of the aircraft dynamic parameters 

figure      aircraft  response  to  lqr  control  based  on  initial  
estimate  of  system  dynamics  

  

vi  conclusions
although the initial implementation of the
algorithm worked well for the inverted pendulum 
it performed poorly on the aircraft simulator due
     

fi