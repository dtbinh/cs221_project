a machine learning approach for future career planning
yu lou
computer science
stanford university

ran ren
computer science
stanford university

yiyang zhao
computer science
stanford university

yulou stanford edu

rren stanford edu

zhaoyy stanford edu

abstract
in this paper  we work on the modeling of peoples career paths  we first collect a large number of peoples
profile and extract features from the descriptive information  hand rules and clustering algorithm has been applied
to help avoid the negative effect of natural language  we
model peoples career developments with markov chain 
and present our approach to estimate the transition probability matrix  finally  we solve the problem that given a
persons current career path and his her goal  what is the
best best career development recommendation for him her 
as a conclusion  we will analyze the results and discuss possible improvements of our model 

   introduction
     motivation
for college students  when facing various career options
upon graduation  it could be overwhelming to choose a job
that better fits with his her future career goals  also  for current employees  it could be unclear that whether changing
a job or pursuing advanced study will help to reach his her
ambition  this is when people start to looking for other people who have similar backgrounds to see what were their
decisions and where did they end up  instead of consulting
only a few acquaintance  we present a way to help people
learn from thousands of others with similar backgrounds 
and find best career steps that enable them to reach their
goals 

     problem definition
we model a persons career path with a sequence of
his her education or working experiences in time order 
each piece of experience regarding either work or education
is denoted as a node  education is defined by university  major and degree  while working experience is represented by
position and employer    gives a graphical representation 

figure    sample career paths

we view each persons profile and career path as
sequence with multiple nodes steps   x    x          each
node will be represented by various multinomial features
 vi    vi         vik    given a persons current career path and
his her goal  we try to discover the optimal career path  that
is  the path that has the highest probability to reach the goal
node 
this project consists of various challenges  for instance 
how to translate the descriptive information in ones
profile into features  also  as there are tens of thousands
non standard position titles  we need to find a way to group
the ones describing the same or similar positions together 
so as to avoid having billions of possible states in the
model and hence under fitting  moreover  the algorithm
for estimating the parameters and path recommendations
should be carefully chosen 
the rest of this paper is organized as follows  we describes the collecting of data and data preparation in section
   then in section    we presents our model and approach
for this problem  section   shows some of the main results
we get and analysis based on such results  finally  we conclude this project and discuss possible future extensions in
section   

fi   data preparation

     

     data collection

we use the k means clustering algorithm and choose k to
be an arbitrary number        also  instead of updating the
k means to be the centroids of each cluster  we set the new
means to be the phrase that has the highest total similarity
with all the phrases in the cluster 

we obtained about        profiles from linkedin as our
data source  each profile contains an average of     pieces
of education or working experience  as for working experience  the raw data consists  name of the company  position 
time period and optional description  education information also breaks down into  name of the university  degree 
major and time period  we first sorted the experiences of
one person by their beginning date  then  we pre process
the data in the following way in order to better model the
nature of peoples careers 

     data pre processing
instead of company name  we use company size and industry as feature to represent the employer  such information is obtained from linkedins company pages  using
company name as a multinomial feature would not cause
much problem for cases like google or goldman sachs  as
there are plenty of people working worked there  however 
for small companies and start ups  it would be hard for their
employees to find people with similar experience 
similarly  in order to generalize the university feature
and avoid under fitting  we collect last years university
rank from us news    and divided all universities into four
categories  top     top     top     and other  though university rank does not necessarily reflect the reputation of a
students program  e g  some school have bad overall rank
but is quite famous for certain department  like cmu   it
works well as an indicator in most cases and is relatively
easy to apply 
for degree and major  hand written rules are applied to
translate various representations to a standard set of degrees
and majors  however  for positions  we discovered that people use too many different terms for positions  it is impossible for us to hand write some rule to categorize those tens of
thousands positions into a reasonable number of categories 
therefore  we run a modified k means clustering algorithm
on position titles 

     clustering
     

     

algorithm

clustering result

after clustering  many semantically similar position titles
are grouped together  for example  software development engineer  programmer  software developer are
all grouped together with software engineer  and recruiting coordinator  technical recruiter are grouped
with recruiter  however  some acronyms  like vp  instead of clustered to be with vice president  just stand
alone as wordnet does not contain information regarding
this word 

   model
     markov chain
first  we assume peoples current job only depends on
his most recent job  or education   this is a simplified version of the problem  however  we can always index the state
by considering all history information to achieve markov
property 
thus  we can model a career path as a markov chain  i e 
the next state depends only on the current state 
p  xt   xt  xt    xt         x    x   
  p  xt   xt  xt    xt   
and we further assume the career path is a timehomogeneous markov chain  so that the process is described by a single  time independent transition matrix p 

figure    markov chain

distance

the distance between each two position titles is defined by
their averaged semantic similarity  the semantic similarity
is generated from the wordnet  similarity project     which
is a perl module that implements a variety of semantic similarity measures based on information from lexical database
wordnet    

     probability estimation
we need to estimate the transition matrix p n n     where
n is the total number of different states  and entry pi j represents the probability of going from state i to state j
pi j   p r xt   j xt    i 

fiwe have observation z  n  of peoples profile  which is
a sequence of states x    x         xn   and we also think a career path of length n is a random variable z  n    then the
probability of z  n  taking value of z  n 
p r z  n    z  n   
n
y
 p r x    x   
p r xt   xt  z  t     z  t    
 p r x    x   

t  
n
y

p r xt   xt  xt    xt   
 n   

p r xi     xi    

ni
y

 

p r xi t   xi t  xi t    xi t   

if we rewrite the likelihood in terms of pi j   we will get

 m
  n n
y
yy n
l p   
p r xi     xi     
pi jij 
i  

i   j  

here nij is the number of times that state i goes to states j
among all observations 
therefore  we want to maximize the log likelihood 
which is
  p    log l p 
 

once we have the model  we can use the model to predict
a career path according to users requirement  we allow
user to specify a concrete objective  a concrete objective is
defined by exact information he wants to achieve  software
engineer at facebook  trader at morgan stanley  etc    we
apply graph search technique to solve the problem 

     shortest path

t  

m
x

nij

   path prediction

the likelihood of all observations z 
given transition matrix p

i  

j  

nij
 i    
pi j

j  

l p 
m
y
 n  
 n  
 
p r zi i   zi i  
 

pi j     

nij
pi j   pn

 n  
 n  
z          zm m

i  
m
y

n
x

the solution to the problem is

t  

now 

we get

in the concrete objective case  we have a start state xs
representing users background so far  the objective can
also be converted into a state xo using the information provided  now we want to predict a path p    xi    xi         xin
which is most possible from xs   xi  to xo   xin   that is
p    arg max
p

  arg min

log p r xi     xi      

n x
n
x

p

nij log pi j

i   j  

i  

also notice the probabilities have the property that the
summation of probability of making a transition from state
i is equal to    that is
n
x

pi j    

now we are facing a constrained optimization problem 
we define the lagrangian of this problem to be
n
x

i    

i  

by setting
l
l
    
  
pi j
i

n 
x

log pit    it

t  
n 
x

 log pit    it

t  

so if we consider each state as a vertex  put  log pit    it
as weight on edge  it     it    solving the problem is equivalent to finding a shortest path between a single source and
a single destination on directed graph  and all weights are
positive  the problem can be solved using dijkstras algorithm 

   results

j  

l p        p   

p r xt     xit    xt   xit  

t  

  arg max
p

n 
y

n
x
j  

pi j  

on given queries  our model has generated plausible and
logical career path recommendations 
for instance  when a person with a computer science degree intends to reach a senior developer position in a large
non it related company  the generated path would first recommend a developer position in junior level in a it company  then try to switch over to that goal position  which
corresponds to our conventional opinion 
also  if a person with a computer science degree intends
to land a director position in a financial firm  the model

fiwould first recommend obtaining a degree in the financialrelated major  preferably masters  then climb the ladder up
through assistant manager  manager and eventually reach
director  this also conforms to the common understanding
that transition into another industry field is eased by obtaining a relevant degree 
however  due to the nature that the accuracy of our career path generation is largely to be measured against human common sense  it is difficult to provide means of automatic result evaluation  this is further elaborated in the
conclusion section 

   conclusion
our model gives convincing result on basic queries that
generally results in short stepped paths  however  despite
the effort  the models logical accuracy quickly falls off
when the expected length of the path increases  or in other
words  the level of goal position increases  one such interesting  however undesirable result comes from querying
the path from a college graduate to a large companys ceo 
the model gives just a single step conversion  the falloff
is most likely the result of the original data skew and our
preprocessing of the data  and is further explained later 
several reasons factored into the lack of desirable result 
first of all  the feature components that are relevant to the
career path module are difficult to be automatically quantified and compared  aside from the rankings of graduating
universities and the sizes of the company  both of which are
more considered as ranges rather than an exact number  the
values of other components  including the majors  position
titles and industry fields  are all distinct and incomparable to
each other  and can only be indexed or treated with binary
representations  except for the binary representation that
would create sparse features with thousands of components
of which only few of them are  s  the lack of proper mathematical representation seriously limits the machine learning
algorithms that are applicable to the proposed problem 
secondly  the raw data from linkedin is represented in
natural language format  and this added to the task of data
cleaning an additional level of processing requirement  the
entries in the raw data highly vary from person to person 
depending on their input  many position titles contain more
details than what we desire  which is more general  e g 
computer engineer  in addition  many titles are actually
meaning the same position  software developer vs  software engineer vs  programmer   our clustering algorithm
depends on similarity between words  so the actual accuracy
of similarity between title phrases is yet to be examined 
thirdly  our model is completely trained from real human input  so it may be largely skewed towards educationposition transition  which in our interpretation of the model
is a must have step in that persons career path  this results
a more accurate path generation in the first step when a per 

sons education info is the query input  however  when a senior position is the goal  there may not be enough multi step
entries in the profile that outweighs the number of direct
transition entries found  as a way of reducing the models
final search space and easing the data preparing phase  we
imposed strict format restrictions on parsing of the original
data  it is likely that the more transitions a person experienced  the more likely that format is violated  thus resulting
the profile filtered out  this is one of the areas that require
the most urgent optimization 
finally  as mentioned in the result section  the accuracy
of the generated paths is mostly to be measured against
common sense  so given a real profiles education info and
current position  the generated path may differ from that
persons actual experience  but this does not necessarily
mean that the accuracy is bad on this query 
as for future work and modifications  we intend to first
improve the quality of the transition from raw data in natural language format to the training input in mathematical
format  this includes a more powerful initial parser and a
better clustering algorithm to cluster major and position titles  or even company industry  then we would seek other
applicable learning algorithm to train the model  possibly
on binary component features  in addition  we would seek
ways to automatically evaluate the quality and accuracy for
the generated path 

references
    t  pederson  s  patwardhan  j  michelizze  and s  banerjee  wordnet  similarity        http   www d umn edu  tpederse similarity html 
    national universities rankings   us news       
http   colleges usnews rankingsandreviews com bestcolleges national universities rankings 
    wordnet        http   wordnet princeton edu  

fi