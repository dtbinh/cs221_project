rating modules on cnx org 
using network structure as a feature in regression
austen head
december         
abstract
machine learning methods are applied to features scraped from the website cnx org to predict page rating 
in addition to the explicit features that are scraped from the pages on this website  there is an implicit network
in these pages  through internet hyperlinks  key words  authors  etc    this paper explores the predictive power
that is gained by taking advantage of some aspects of this underlying network 

 

introduction

the website cnx org hosts scholarly content  users create modules which each contain a chunk of information
on a particular topic  users can also create collections which are sets of modules that are all related in some
way  each module and collection has a single author who can invite other cnx org members to be maintainers of
the page  on most pages  the only maintainer is the author   only the author and maintainers of a module are
able to edit that module  only the author and maintainers of a collection are able to choose which modules are
part of that collection  but cnx org encourages users to take other users modules for their own collections  for
example  the module galileos telescope is used in three collections  solar system  galileo project  history
of western art and civilization   the collection solar system has nine modules in it 
on november          cnx org hosted        modules and       collections  many modules are not in any
collection  and some are in multiple collections  the quality of the modules and collections is quite variable  it
is often difficult to find modules or collections that are accurate and informative  although cnx org has a rating
system for users to rate modules  there is no rating system for collections and modules can only be rated with  
to   stars by users who are logged in  each module has an average rating score from   to   by steps of     or
is not yet rated  the vast majority falls into this latter category   very few modules have ratings          star 
        stars          stars            stars          stars            stars          stars         unrated   and
those that do are mostly rated as   stars         
i will predict how good each module is  based on module ratings  based on the following features from the
pages   i    ratings   i  views  total   i  views           to           o  is it a module or collection   f n  language
its written in   f n  subject   n i  lenses its a part of   n i  collections it is a part of   n i  key words   n i  tags 
 n i  related modules   n  links to other mods or cols   i    links  any website    i    links  any cnx org page  
 i    images on the page   n i  collection contributors   n  author   n i  maintainers   i  revision dates   o  title 
 o  summary of article  for additional information on what these features mean  see figure    items marked with
an  i  are integer values   f  are factor valued  unordered with less than     levels    n  are network valued either
explicitly as in the case of related modules or implicitly as being two hops away on a bipartite network such
as two modules sharing a common collections it is a part of or a common key words   o  are features that i
omitted in my analysis  the feature is it a module or collection was omitted because there are no collections with
any ratings which makes the collection pages only useful through organizing the modules in network structures 
the title and summary of article were difficult to work with since there are many pages in foreign languages
and there are many pages which did not have a summary which made it impractical to try to use any sort of
naive bayes methods that are useful in problems such as spam classification  the features which are labelled both
 n i  have a network structure but counted the number of occurrences for example in tags i created the bipartite
network structure and also counted the number of tags each module had  this is just the degree of each module in
that bipartite graph   similarly  f n  were used both as factors  there are    languages including british english
and american english as separate languages  each page was exactly one language  there are   subjects  arts 
business  humanities  mathematics and statistics  science and technology  social sciences   each page is some
subset of these six 
 

fifigure    example module  galileos telescope and about galileos telescope  red boxes are for integer or
binary results  green boxes are for variables which have network structure  blue boxes are for factor variables which
can also be used for network structure 

because the network is so large  i cannot reasonably try to estimate the node ratings based on usual network
models such as exponential random graph models  instead what i propose is using the network structure to build
a feature which assigns a single value to each node and then use that feature to help predict the ratings 
the feature that i will get from this network is similar to the pagerank algorithm which assigns a single value
to each node via a random walk on a network 

 

making networks into features

for this project i learned how to use python  since that seemed like the easiest language to scrape data with   and
i learned how to use the necessary libraries in python  lxml and urllib   to scrape the data  i got permission from
cnx org to harvest data from their website  i collected the data  making        files each    lines long  one file
for each page  one line for page rating and for each of the    variables above   i imported all this data into r for
statistical analysis 
i constructed the data matrix pagedata with n           by p      matrix in which the columns are rating 
number of ratings  log total views   log week views   binary for art  binary for business  binary for math  binary
for humanities  binary for sciences  binary for social sciences  number of lenses  number of collections the module
is a part of    for pages that are themselves collections   number of key words  number of tags  number of related
modules  number of links  number of cnx links  number of images  number of revisions  a column of  s for an
intercept     columns of indicator functions for different languages  the number of total and weekly views is
converted to a log scale to make those distributions approximately normal instead of very skewed to the right 
then i made an adjacency matrix for each of the links and for the related modules  and bipartite adjacency
matrices for the collections  tags  maintainers  key words  subject  and language  for the adjacency matrices  i
used the pagerank algorithm  page et al       on each of them to get new vectors of length n  for the bipartite
adjacency matrices  i used the pagerank algorithm on aa   because after two steps on the adjacency matrix 
we are back on the original pages  so taking the pagerank algorithm on this gives the appropriate rankings  
we cannot store aa  in memory  but to use the pagerank algorithm we do not need to if we write it as b  
      aa   b            a a  b      which is all vector times sparse matrix multiplication  in all of these
cases i used the parameter in the pagerank algorithm of          i noticed that many of these pagerank values
were discrete on some few number of values  see figure    which makes sense since for example  related modules is
a sparse graph with degree strictly less than    and mostly isolated nodes   this by itself doesnt tell much about
how users will surf these pages  but when it is combined with the other adjacency matrices then it becomes more
relevant 
to alleviate this problem  i created one more adjacency matrix called mixed where i blended together each
of the other   matrices  specifically  i made each of the previous graph matrices stochastic and then summed
them together and approximated the first eigenvector of this resulting matrix  as in the spirit of pagerank   we
dont need to worry about getting trapped anywhere on this resulting weighted graph since every page is in one
language  and each language has at least one page in each subject  so we do not need to use the pagerank  value
 

fipagerank values for different adjacency matrices
links

collections

   

   

   

   

 

 

 

    

     

mixed

    

    

      

    

 

    

     
      

    

maintainers

 

 
      

    

tags

     

related

    

   

   

   

                       

subjects

language

   

   

   

   

   

 

 

       

    

keywords

   

   

   

   

x axis   pagerank   n 

   

   

   

   

   

   

   

y axis   frequency

figure    histograms of the pagerank values according to each of the network structures and the first eigenvector
of the mixed network 
to make sure we have ergodicity  this resulting matrix is not sparse  and it cannot be stored in memory  this is
not a problem though because of the associative property of vector multiplication on matrices  we are able to still
calculate the first eigenvector by keeping each of the matrices separate  in other words we solve b   ab by instead
solving b   ab    a    a         a   b   a  b   a  b        a  b  the right hand side of that equation we have
each of the ai is sparse so this is easy to do  so i constructed an n by   matrix of the pagerank weights for each
of the pages based on these network structures  for ease of interpreting these numbers  for the rest of the paper i
will normalize these vectors to each have a sum of n instead of a sum of   

 

modeling with network features

the goal in this data set is to predict the rating of the pages  in the previous section  i explained the    features
 rating  intercept     positive integer features    subject binary features     language binary features  that are
easily gotten from cnx org plus the additional   features that i constructed from the network structure  in this
section  i explore how those additional features improve our predictions in several different models  although we
are primarily interested in estimating the rating of each page we could also try to estimate the number of weekly
or total views for each page since this is not missing any data whereas we only have     modules with any rating 
more information about any of the following models can be found in hastie et al         
in python  i have about     lines of code to gather the data  in r i have about     lines of code to put the
data into proper formats and to get the pagerank data  in r i have about     lines of code to analyze the data 
please email me at ahead stanford edu if you are interested in seeing the code and the output from r 

   

linear regression

we do model selection here using forward backward stepwise model selection based on the akaike information
criterion  aic   features with a   indicate a p value less than       features with a    indicate a p value less than
        
when we do linear regression without the network features we include the following variables    week views 

 

fipage ratings vs predicted page ratings lm without networks
without networks

 

 
 

 

                            

 

 

 

 

 
 
 

 

                   

 
 

 

                                                

      

 
 

x axis   fitted values 
pageratinglm  fitted  

 

                                                      
  

 

 

 

 

 

                                           

 

 

              

                                               
 

                                
            
   
             
                                           

         

 

      

pagedata rated      

 

                                
                
                               
                

y x line

 

with networks

 
 

 

                   

                             
 

 

 
 

y axis   pagepageratinglm  fitted  
rating

figure    fitted values excluding and including network structure variables 
business subject  subject social sciences  number of collections  number related modules  negative   number of
images  negative   english  french  negative   macedonian  negative   portugeues  chinese  negative   we get an
adjusted r  value of       and an aic of      
when we do linear regression with the network features we include the following variables total views  negative  
 week views  negative   business subject  humanities subject   subject social sciences  number of images  negative  
french  negative   macedonian  negative   portugeues  chinese  negative     mixed network   collections network 
  tags network  negative    maintainers network  key words network  we get an adjusted r  value of        and
an aic of      
in both cases  the residuals are skewed to the left  but the set including network data is noticeably less skewed
to the left  see ratings vs fits in figure     and we do a much worse job of predicting the low ratings nearly correctly
than we do at predicting high ratings  recall  we have far fewer low ratings   in general  it seems as though the
network structures are useful in helping to predict rating 
from the perspective of the authors of those pages  it might be more interesting to try to predict page views
from these features  if instead of trying to predict rating we try to predict the total views  and we do not include
weekly views   then when we regress on the other features without networks  our adjusted r  value is        and
aic is      whereas with networks it is        and aic is      

   

generalized linear models

if we think of low ranks as rare events  which seems reasonable given the percentages of each rating  then we can
model     the rating as a poisson distribution and do a generalized linear model using the poisson exponential
family  then we can again do a forward backward stepwise selection to select which variables to include based on
aic  the resulting model without networks gives an aic of      and with networks gives an aic of      
since almost two thirds of these are rated as   stars  we might use a binomial family to see if we can correctly
predict which modules are   stars  when we do this using forward backward stepwise selection based on aic  then
we need to exclude languages from consideration since some languages did not contain both scores of   and scores
of less than    without networks  or languages  we get an aic of      with networks  without languages  we get
an aic of      note that these aic values are much lower since we are only considering the binary response of  
stars or less than   stars 

   

sparse linear regression via lasso

using the lasso method to do sparse linear regression to predict ratings  we find the value where features where
mallows cp makes a sudden drop or starts to increase  because there are some language features that only have
only a single value for all the ratings  we cannot include language in these models  also  in the model including
networks  we should remove the number each of the network items that we had been including before because
otherwise  we get a very large positive coefficient for the number of related pages and the pagerank network values
for related modules  in figure   we see that there are only a few values that the pagerank network values for
 

firelated modules can take on   this suggests that the number of related modules is very closely related to the
pagerank values we get for related modules and we should not be including both of those features in the model 
after removing these features  we see that for the model without network structures  the best choice  based on
mallows cp  is clearly to choose    non zero coefficients  for the model with network structure  it looks as though
the model with    features is a good candidate to consider  the model without network structure that includes
exactly    features has a residual sum of squares of      and an r  of         the model with network structure
that includes exactly    features has a residual sum of squares of      and an r  of        

   

recursive partitioning and regression trees  rpart 

this method does not work very well for this particular data set for either the models without networks or the model
with networks  using an ordinal response splitting method for the rpart function in r is more appropriate than
just using a categories for the rating  when we use the ordinal rpart we have an error rate of                   
without using network structure and                 using network structure  neither of these are of any practical
significance though considering if we always guess   stars then we have an error rate of                 

   

support vector machines

this method also does not work very well for this particular data set for either the models without networks or the
model with networks  in both the models without networks and with networks  svm always predicts a   with a
radial  with a linear kernel we run a   fold cross validation and get a test error rate of       for the model without
networks and       for the model with networks 
we can change this to a binary prediction of   or less than    in this case  using a radial kernel we minimize
the error rate with respect to the tuning parameter gamma  when we do this  we get a test error rate of      
for the model without networks and       for the model with networks  with a linear kernel we run a   fold cross
validation and get an error rate of       for the model without networks and an error rate of       for the model
with networks 

 

discussion

the purpose of this paper is to demonstrate that measures of network structure which assign values to the nodes can
be used in machine learning problems  although i opted to use the pagerank algorithm on the cnx org networks
there may be many other interesting values to choose to assign either real numbers  such as betweenness  centrality 
or influence  or factors  such as partitions  connected components  or community structure  
in all of these examples we do the same model selection process on both the features that include the network
structure and the features that do not  in every model  we either have that the model is either inappropriate for
the data or we have that the features including network structure do better than the features excluding network
structure 
with a more in depth exploration of which variables we are using in each model we can see that including
the mixed network adds information to the model that the features from individual adjacency matrices cannot  i
constructed the mixed network in a somewhat arbitrary combination of the different adjacency matrices though 
in future work  it would be interesting to examine how we could add these networks together with different weights 
and possibly try to find a way to optimize these weights 

references
hastie  t   tibshirani  r    friedman  j          the elements of statistical learning  data mining  inference and
prediction    edn  springer 
url  http   www stat stanford edu  tibs elemstatlearn 
page  l   brin  s   motwani  r    winograd  t          the pagerank citation ranking  bringing order to the
web 

 

fi