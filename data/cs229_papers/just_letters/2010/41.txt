high frequency trading strategy based on prex trees
yijia zhou            financial mathematics  stanford university
december         

  introduction
    goal
i am an m s  finanical mathematics student pursuing a career in professionl trading  therefore i wish to leverage
what i learned in the class to the development of a high frequency trading strategy based on pattern recognition 
specically  i wish to achieve two goals 
   the model should successfully predict future returns given historical data
   the model should lead to a consistently protable trading strategy with low risk

    challenge
high frequency nancial data  min by min  is known to be able to pass most martingale tests 

e  xt s  ft     xt
in plain english  it means given historical information  the best prediction of the future is the current state 
that is  the data usually has no predictive value at all in conventional methods 

a special technique must be

developed to extract information from nancial time series data 
another special challenge in high frequency trading is that the model must be able to make trading decisions
and update itself quickly to keep pace with the high frequency streaming data  therefore the algorithm complexity
is constrained 

  unsuccessful conventional regression classication methods
conventional regression classication methods work poorly  this is not surprising because of the nature of nancial
data 

    regression  time series model
apply arma p q  to historical data  use aic to determine optimal

xt   c   t  

p
x

p xtp  

i  

failure 

q
x

p  q  
q tq

i  

model diagnostics are poor  typical signicance level  out of dierent training set testing set combina 

tions        

reason 

the high frequency data is known to pass martingale tests  it is improbable that we can extract infor 

mation in time series methodology 

 

fi    classication  multinomial event model
discretize return into alphabet          



  ri   a
zi    
a  ri  b


 
ri   b
 a  b are decision variables  use a sliding window of

m




x 


the

 m     th

failure 

minutes 

 
 
 
   
 








element is seen as the class label 

i tried          min as sliding window length  but the average probability of prediction being right is

only      there is no dierence to rolling a die 

reason 

the conditional independence assumption

n
y

p  x         xn  y   

p  xi  y 

i  
is not valid beucase in terms of nancial data  because the precedence of events happening matters a lot in
nancial data  that is exactly the time series pattern i am looking for  

z            

and

z            

though both having     s and     s  are very dierent from each other in time series 

  methodology  theoretical framework
    leaning  tree construction
discretize returns into          rst  for the purpose of demonstration  i use a binary tree here  suppose i observe
a sequence

z                                      
it is parsed sequentially into a series of patterns that have not been observed before  for example 

     z        

but not     because it has been observed at

z        

similarly

z        

but not

z         z   
     thus z is

parsed to

z                                                                                       
these are the basis patterns  then i encode the data in a binary tree  the left child being event    the right
child being event    the node value being the number of occurence  each time we observe a new pattern  the values
of all nodes on the path grow by    for example  after updating the tree by

 

z        

i get

fiupdate after

z       

z        

tree
do this recursively and i get the fully grown tree for the sequence

z 

note that the value of each nodes equals the sum of its children plus    in implementation parsing  which can
take advantage of the tree to decide whether a pattern has appeared already  and updating are interweaved  the
tree is developed and used in a bayesian mindset  and that is why i call it tree of conditional frequencies 

    prediction
after the model has nished learning from historical data  we then need to use it in prediction and trading  with no
real time streaming market data yet  our best guess of what happens next is from the perspective of the root looking
at its children  now if i receive the streaming data

z         

the best estimation is then from the perspective of the

right node  the square block in the tree graph above indicates the scenario of

z          

by laplace smoothing

the estimation of the return in the next period is

p  z              

 
 
  p  z              
 
 

    trading
prediction alone does not suce  trading style matters  too  i need to optimize the trading policy



that works

best with the prediction model  think this way  a more aggressive trader may trade as long as one outcome is
more probable than the other  to fully take advantage of the law of large numbers  however  this may lead to
increased trading costs  and possible losses in a streak  thus larger risk  

 

fia more defensive trader initiates trades only when she is condent enough of the probability of one outcome
happening  therefore with each trade protability is more probable 

in this study i specify two trading styles

following the rules below 



aggressive trading





if i already have a long position  sell only if the most probable outcome is       vice versa 
if i have no position at hand  initiate trade if the most probable outcome is in        

defensive trading


i estimate

change the criterion for initiating holding long positions to



and discretizatio parameters

a  b

p    ft    p    or    ft     

using cross validation  in a base case i assume

a   b 

my historical

data are split evenly to   sections for cross validation 

    model evaluation
two criteria are useful in evaluating how the model summarizes the data  dene

compression ratio

 

length source 
length encoding 

internal node ratio

 

  internal nodes 
  leaves 

compression ratio measures the randomness of the historical nancial data  the larger compression ratio  the
less random the data are  internal node ratio measures the diversity of source patternsthe model is more predictive
if there are fewer frequent patterns in the data 

  empirical results
    data and trading assumptions
to make the study as representitative as possible  i retrived the   min   min    min market data of jpy usd
 foreign exchange  or fx   s p      equity index  and ibm  equity  
i assume a trading environment for institutional traders  that is        leverge  which magnies the prot and
loss by     times  is available in fx trading and      leverage is available in equities  the in and out trading cost 
including commissions and spreads  is   bps    bps        for fx and     cents for equities 

    results and interpretation
due to the limit of pages i show the graphs for aggressive trading style only  the defensive style results will be
summarized in a table later 
first  the compression ratio is steady against the training data size  this suggests the entropy predictibility of
nancial data does not vary 
the internal node ratio grows steadily in a

log n

fashion  due to the nature of trees 

 

fithe model works much better with foreign exchange assets  for equities  unfortunately  it is prone to overtting 
before trading return dropping dramatically  the daily return is insensitive to discretization parameters

a  b 

this is an excellent property 

using optimal model parameters  the returns  after trading costs  of aggressive defensive trading are
daily return

aggressive

defensive

jpy usd

     

     

s p    

     

     

ibm

      

     

it is obvious that fx still works the best  while defensive trading can largely enhance the performance of equities
trading 

  conclusions


kraft inequality says the expected codeword length must be greater than or equal to the entropy of the
encoded source 

that is  the  lossless  compression ratio cannot be arbitrarily large 

an asymptotically

optimal encoding technique is human code  which movitates this method 



market price data are clearly compressible  which implies that there are some  preferred paths   that is  the
ternary tree is not uniformly even  some parts are  bushier than others  this suggests that the chain of
event state is not completely  memoryless  the development of the next event state is  path dependent  



currency data has the nice  high frequency feature 



properly chosen trading strategies might earn decent return 



the training phase complexity is
data point 

o n log n  

the trading phase complexity is

o   

for each new streaming

this is excellent because the algorithm can run very fast so as not to delay making trading

decisions in a high frequency setting 

 

fi