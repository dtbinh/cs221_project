automated energy distribution in smart grids
john yu
stanford university

michael chun
stanford university

abstract
we design and implement a software controller that can distribute
energy in a power grid  first  locally weighted regression is performed on past data to learn and predict the energy demand  then 
reinforcement learning is applied to determine how to distribute
power given some state  we demonstrate that our software  in conjunction with smart grids and network communication systems  can
automatically and efficiently manage the power grid 

 

introduction

the goal of a resource distribution system that connects producers
and consumers is to ensure that the resource generated by the producer is optimally delivered to the consumer  by optimal  we mean
that the resource is delivered only to the consumers that need it in
a timely fashion  in this respect  todays electric power distribution
systems perform relatively well  blackouts are rare and electricity
bills are generally manageable     however  there is plenty of room
for improvement  for one  it is good that electricity prices are low 
but it would be even better if it was cheaper  one reason the prices
are not lower is due to the distribution cost  specifically  electric
power distribution very much remains a manual process  requiring
the work of many well qualified operators and analysists    hours
a day    days a week  this is a good reason to ponder whether we
might be be bettered served if there was a computer program that
can decide how the power should be distributed and act accordingly 
decresing or eliminating the need for human intervention 
a related area of improvement is energy demand prediction  over
the past couple of years  smart meters and smart power grids implementations have lead to an exponential increase in the amount of
information that is available to the power operator  this data allows
the operator to develop more efficient  fine grained power distribution methods  however  there is so much information available that
the operator cannot hope to process all the data without computer
automation  
as hinted above  at a high level  an energy distribution system needs
to two things 
   predict the energy demand 
   based on the prediction  make decisions
on where to guide energy 
clearly  if an automated system is to replace operators  it must be
able to carry out these tasks as well as humans can  before we go
into how the two tasks were tackled  we first present our model of
the energy distribution network 

   

energy model

figure   illustrates the model of the network that our control system
will operate under as well as our assumptions  in our model there
 e mail 

johnyu cs stanford edu

 e mail mschun cs stanford edu
  operators already do make heavy use of computer processing power to
do their work  but this same processing is a large component for our machine
controller as well 

figure    a simple energy distribution model 

are some number of rooms that have devices that need to be powered  laptops  printers  servers  etc    each room has a single power
substation that powers them  the power substations store energy  in
fact  we essentially treat them as large batteries that can be charged
and discharged  the substations can be charged by drawing power
from the power source in the center  by placing a power meter on
every device in the room and summing them up  we can determine
the amount of energy drawn from the substation that powers the
room  alternatively  we can place a meter on the substation itself 
if feasible 
it is easy to see how this model can be cascaded and abstracted to
represent much larger networks  for example  the power substations can be treated as leaf nodes  rather than laptops and printers  
the central power station can be treated as a substation that needs to
be charged by a larger parent station  so this model is simple but
scales well  we also assume that power flows one way  if station
a provides power to station b  then station b never sends power
to station a  although residential solar panels and other sources of
alternative energy are becoming more commonplace  the one way
power model is still by far how things work  so for demonstration
purposes we believe this is acceptable 
now  we place a stronger  more limiting constraint  which is that
the power source can only charge one power substation at a time at
a predefined rate  this simplifies our controllers behavior into the
following loop 
while system is running 
observe state
decide which station to charge next
charge the station by some amount
allowing the power source to charge multiple stations simultaneously is probably a more realistic representation  but it was avoided
because it greatly increases the number of possible actions the controller can take  this increases the processing time and complicates
the learning model  but it does not necessarily offer greater insight
into the energy distribution process  in other words  removing this
constraint will complicate but not change our learning model  so we
can still validate our proposal with the simpler model 
next we describe the data set that we used to train our controller
system 

fi   

training data

we used the dataset from the stanford powernet project         the
powernet data was gathered by placing a power meter into     devices  laptops  printers  and workstations  that are actively used in
the stanford university gates computer science building and collecting instantaneous power usage data every second  we restricted
our dataset to a    day period from september   to october         
we then divided the data into   local rooms  approximately one
room per physical floor of the building 

 

controller implmentation

as previously stated  our controller needed the ability to learn energy demand and also make decisions based on this learned data and
the current state  one way for a reinforcement algorithm to learn
the model of the energy demand is to simply let the controller operate for a while and learn what the resultant state is given state and
action  rewards can be learned the same way   however  we chose
to use locally weighted linear regression  to understand why  first
let us define what the state is for our learning model 

figure    training data distribution for group   in weekdays and
the regression estimates

we are interested in keeping the power substations charged at all
times  we want to keep the substations from reaching the empty
energy level  since this would lead to blackout  thus  our state is
the collective energy levels of all our substations  we also predefine
the rewards  when a substations energy level is more than half 
no rewards are given  reward is     otherwise  we give a negative
reward  in addition  we gave larger negative rewards as the energy
levels got closer to empty  to simulate this reward curve  a square
root function was used  i e 
reward   sqrt energy level 
the rewards for the substations were calculated individually and
summed to get the total reward of a particular state 
we previously defined the action of the controller as charging substation x  this is a deterministic action  commanding the controller to charge station a has a     percent probability of charging
station a by a predefined amount 
so does this mean we know the state transition probabilities  no 
since the room is full of electronic devices that are drawing power
at various rates from the substations  

figure    training data distribution for group   in weekdays and
the regression estimates

thus we must be able to somehow predict the energy demand  as
we noted  we use locally weighted regression to predict the energy
demand rather than allowing the reinforcement learning algorithm
to learn by trial and record  there are two  related  reasons for
this  first  the energy consumption rates are not fixed  they vary
from morning to afternoon and from weekday to weekend  thus 
the trial and record method  which really only works well in a static
environment  is impractical  second  there are an infinite number
of states  both in terms of the energy level of the substations and the
power consumption rates of the devices  trial and record is more
suited to a finite number of discrete states  which can be learned
with a finite number of trials 

the time of day to the aggregate power consumption at the substation  one drawback of regression is that it operates on data from the
past  while the past is generally a good indicator of the future  this
does mean the prediction is susceptible to unexpected events  such
as the school declaring a snow day  for example   however  trialand record also operates based on past data  so neither is favored
here 

note that locally weighted regression performs better under both
circumstances  using locally weighted regression  the controller
can predict the power consumption rate at any time during a given
day  thus  varying consumption rates are not an issue  also  by performing one regression per substation  a continuous curve can relate

locally weighted regression algorithm was used to learn the energy demand of the four rooms in gates building  this algorithm
is parameterized by a bandwidth parameter   which controls the
algorithm from being high bias or high variance 

  since

we do not know the rate at which power is being drawn  even if
we know the current state and how much the next action will charge which
station  we do not know the next state  the energy levels of the substations  

   

energy demand prediction

to find the optimal  value  regression was performed over  values
at                      minutes and compared the training success
rate  in our model  success rate is not straightforward because at
any given time of a day  energy usage could range from minimal

fitable    statistical measures for regression on group   in weekdays
taus std dev train success rate cv success rate
  
     
      
      
  
     
      
      
  
     
      
      
   
     
      
      
   
     
      
      

table    discretization with n    
actual amount discretized amount
       kwh
  
        kwh
  
      kwh
  
      kwh
  
       kwh
  

table    statistical measures for regression on group   in weekends
taus std dev train success rate cv success rate
  
     
      
      
  
     
      
      
  
     
      
      
   
     
      
      
   
     
      
      

 all devices being idle  to maximum  all devices under full load  
since we cannot pinpoint the exact usage  we defined a successfull prediction as the testdata lying within certain range from the
prediction  this range is one standard deviation from the predicted
regression value  in figure    we can see that the regression tightly
follows the dynamics in the dataset when  is low  similarly  regression loosely averages values when  is high  each data group has
a different distribution thus the optimal  cannot be shared among
different groups or different days  in figure    the energy usage distribution for group   in weekends is very different from the usage
from weekdays  therefore  the optimal  is different as shown in
table   and table   
finally  we verified that our  is neither high bias nor high variance
by performing    percent crossout validation where validation is
successful if a data is within one standard deviation away from the
regression value  the success rate algorithm turned out to be an
effective measure to identify optimal  because it resulted in the
highest crossout validation success rate 

   

making decisions

now that we have the ability to predict power demand  our transition function  simulator  is ready  and we can use the markov decision process to learn the behavior of the controller  the simulator
is capable of answering the following question 
given that the current energy levels at substation a  b  and c  are
x  y  and z  respectively  what will happen if substation b is charged
by some amount w 

figure    result of the simulation  the y axis indicates energy
levels of a station  and the x axis indicates time 

after discretization  we ran value iteration over all     different
states to calculate the value function for every state 

 

results

     

simulation

before using the regression data from the gates building  we ran
a simulation to test for correctness and see how our algorithm performs  our simulated network consisted of a single power source
and   substations  each substation consumed power at rates    
kwh     kwh     kwh  and    kwh  respectively  the source
is capable of providing     kwh of energy to a single station at
a time  note that the input of energy is exactly equal to output  so
we are providing just enough energy to meet energy demand  the
results are shown in figure   

armed with the simulator  the controller can calculate the value at
every state using value iteration     since the state space is continuous  we needed to decide whether to use value function approxmation or discretization of the states to calculate the value function 
we first tried to use value function approximation but found that
it is difficult to approximate parameters  and some function  of
state s  thus we resorted to discretization 

figure   shows how the energy levels fluctuated over a    hour
time period  we can note a couple of facts from the graph  one  the
energy levels of the stations frequently intersect with each other 
which means the decision making process is not biased toward a
single station  two  none of the energy levels reach    which means
the substations always had energy to provide when needed 

     

once we determined that the simulation is running as expected  we
proceeded to use the stanford powernet data 

discretization

we discretized the energy levels that the power substations contain 
for example  if the substation is capable of storing     kwh of
energy  and we want to discretize this into n     levels  then we
treated the energy levels as shown in table   
now suppose we have   substations  then one possible state might
be                   there are          different states 

     

real data

we used a slight variation of cross validation to test our algorithm
on powernet  the power usage data was split into two sets  a and
b  set a contained    percent of the data and set b contained the
other    percent  set a was used to run locally weighted regression

fifigure    testing with powernet  energy levels of the substaions
are on the y axis  and the time passed is on the x axis 
station  
    
    
    
    
    
    
    
    
    
    

station  
    
    
    
    
    
    
    
    
    
    

station  
    
    
    
    
    
    
    
    
    
    

station  
    
    
   
   
    
    
    
   
    
    

next action
 
 
 
 
 
 
 
 
 
 

table    state transition table  the left   columns form a state  and
the right column shows the next substation to charge 

figure    value iteration performance  as the number of energy
levels increase  the running time increases polynomially 

which we need to calculate values for  but exactly how slow is our
algorithm  and when does it become impractical to use 
we measured the time it takes to perform one cycle of value iteration  we also capped the number of iterations to      the results
are shown in figure   
for our simulation  we used n      so it took about    seconds per
iteration  this calculation was done once every hour  once the
values have been updated  it takes far less time to make decisions
based on incoming state  in the order of milliseconds   so our controller can behave in real time  however  one can easily see from
the graph that performance will quickly grow unacceptable  even
with only   stations 

 
and generate the parameters  based on this data  the simulator was
generated  essentially  the simulator was a table that listed what the
power consumption rates of each of the substations were at a given
time  the reinforcement algorithm them used this to learn the value
of taking a paticular action given some state  at every state 
then the controller algorithm was validated on set b  the controller
was fed with the current state of the substations and the power consumption rates on a specified day and time  retrieved from set b  
using this data  the controller made a decision that maximizes the
value  learned from set a   the controller was allowed to run for
   hours 
figure   shows the energy availability graph again  this time for
powernet data  compared to the simulation data  it appears that
there may be slightly higher bias  as rooms   and   generally tend to
stay above the starting amount       kwh   however  the energy
levels all stay well above    the power consumption rates ranged
from      kwh to    so we believe providing each substation with
a capacity of      kwh is reasonable 

   

performance

because we discretize the states  it is reasonable to assert that our
implementation does not scale to larger environments  for example 
if there are    substations that need to be managed  and we provide
   energy levels per substation  there are    billion states  each of

conclusion

we were able to develop a functional controller for an energy distribution system  note the level of granularity that our system can
operate under depends purely on the granularity of the power usage data available  and thus smart grid technology is a necessary
component to acheive fine grained power distribution 
locally weighted regression was performed mostly in matlab 
however  for the implementation of the simulator and reinforcement learning  we wanted to be able to describe a model of the
power distribution network  we chose to use python with the scipy
library  which provided flexibility and capabilities of a real object
oriented language while also providing the large mathematical tool
library that matlib provides 

 

future work

we primarily concerned ourselves with energy distribution of an
electric power network  but as our algorithms deal generally with
a resource distribution network linking producers and consumers 
this work is widely applicable to other scenarios  for example  our
algorithm would apply equally well to the city water distribution
system     the problem of delivering gasoline to the appropriate
station can also be solved by our approach 
  this

might be an even better application than electric grid  since here
the resource  water  really does flow in only one direction

fione limitation that we noted is that our network model is greatly
simplified  in reality  the power source can distribute power to multiple stations at the same time  and in differing amounts  and power
flow can be bi directional  and as analyzed above  we discretize
the states 
also  our system does not account for unexpected events  or forthcomiong events in the future  in particular  our system notes that
there are differences in power consumptions between weekdays and
weekends  but we do not account for special occasions such as holidays   
our system then has quite a bit of work to do before it can be used
in real settings  however  in our view  none of the limitations are
insurmountable  it is simply a matter of doing the necessary work 

   

acknowledgments

we thank maria kazandjieva for providing us with invaluable
power usage data of the gates building  we also thank quoc le
and andrew ng for giving us advice on choosing our final project
topic 

 

references

    dhaliwal  h    abraham  s         final report on the august          blackout
in the united states and canada  causes and recommendations  u s  canada power
system outage task force  u s department of energy 
    kazandjieva  m   heller  b   levis  p    kozyrakis  c         energy dumpster
diving  workshop on power aware computing and systems 
    kazandjieva  m   gnawali  o   heller  b   levis  p    kozyrakis  c         identifying energy waste through dense power sensing and utilization monitoring  stanford
powernet technical report 
    bellman  r  a         markovian decision process  journal of mathematics and
mechanics   

  power

consumption in residential area might far exceed the median
while business areas may be low

fi