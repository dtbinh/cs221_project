recommending accounts to twitter users
siddharth vijayakrishnan  svijaykr  gmail com 

introduction
twitter is a service that allows users to post short messages      characters  to their
profile page  it also allows users to  follow  other users whereby a user can see updates
from the users he follows on his twitter page  people usually follow friends  people they
know in real life  or accounts whose updates they find interesting  today  twitter has
more than    m users and more than     m visitors monthly  therefore  it is not easy to
find interesting accounts to follow the objective of this paper is to recommend accounts
to users that they might find interesting

data collection
twitter has an open api that allows anyone to get a list of a user s friends  provided the
account is not private  it is therefore easy to create a graph of the network  since there
are more than    m nodes in this graph with many times that many edges  it requires a
lot of computational power to process this entire graph  i therefore propose to focus on a
smaller subset  however  recently twitter has been more circumspect in allowing
unfettered access to the entire social graph and tweet stream  it allows this access termed
the  fire hose  to a small chosen set of companies only  through the public api  one can
only access a single user s tweet stream and his profile information and also the public
timeline of tweets  however  i was fortunate enough to discover a recent data set
compiled by kwak  lee and park    which contains over    m user profiles and links
back to their real user names  this allowed me to supplement the data set  which
contained only followers and following for a user  with other features like the recent
stream of tweets and user profile information 

inferring edge strength
in the simplest setting  a user being connected to another user can be used as a
preference signal  in recent times  given the explosive growth of twitter  there have
emerged a large number of  bot  accounts that seek to follow as many users as possible
in the hope that unwitting users will follow them back  therefore  looking at  followed 
accounts yields more information about the account holder s preferences rather
than  follower  accounts 
in a traditional item recommendation setting  users rate items on a scale of     or by an
up or down vote  in twitter  there is no explicit rating of accounts by other users 
however  we can construct some implicit signals from the user s content stream that are
analogous to recommendation  specifically  i look at three signals that are counted as up
votes  first  if a user follows another account  that is considered a positive rating for the
account that is followed  second  if a user retweets  i e  echoes a tweet to his own tweet
stream   that can also considered a positive rating  thirdly  if a user shares a  hashtag 
with another user  that is considered a positive rating for the user who is being followed 

fisharing a hashtag implies that the two tweets are related to the same topic  although they
may express two entirely different opinions  for e g  the recent controversy around
wikileaks elicited a storm of either vehement approval or disapproval from twitter users 
but they used the same  wikileaks hashtag  

preparing the data
the data set contains information on x million profiles  profile information is limited to
the user accounts followed by the user  since the data set is as of a certain date  the
information is not complete as of today  however  for my purposes  the data set
contained enough information to create training and test data sets 
since the data set represents a graph  to construct a utility matrix  i picked     random
accounts  including my own  to get a sense of whether the predicted accounts make any
sense  and recursively pick accounts three steps removed  snowball sampling   in social
networking theory  these are known as friends of friends and it has been shown that the
degree of influence drops off significantly after three steps  the sample thus collected
contained information on over        profiles  for each of the      i divided the follower
information into   groups      of the followers went into the training data set and the
remaining     went into the test data set 

profile similarity
the first step in creating a user profile is to collect all accounts followed and all accounts
followed by those accounts  they are arranged in a matrix as follows

user

u  

u  

    

u n

u  

 

 

 

 

u  

 

 

 

 

fig  

in the figure above  an element aij     if u i follows u j     otherwise
note that since relationships are not always symmetric  it could be the case that u  
follows u   but not vice versa  in this case  the value of the element representing the
interaction is set to    as referred to above  there are some  bot  accounts that follow
many thousands of users  since this introduces noise into the data and makes the
computation of similarity difficult  i leave out any account that has follows more than    
users from the graph      is again arbitrarily chosen  but it not unreasonable to impose a
limit  since intuitively  a user who follows more than a certain number of other users will
find it difficult to maintain strong interactions with all of them 

fito the representation above  i add the the number of times a user has replied to another
user in his list of followed accounts  since twitter allows an open communication
structure  where any user can directly respond to another user simply by using the
 username convention  there are a lot of tweets that are addressed to people not in the
immediate network  for some users  this was as high as      i ignore all tweets that are
not sent to an account which is not in the extended network  similarly  if two users share
a hashtag  that gets another vote  if a user  retweets   i e  echoes a tweet published by
another user into his own tweet stream   that gets another vote  it is conceivable that
each of these methods of interaction do not count the same  however  to keep the model
simple  i simply assign the same score     to all of them 

tweet similarity
another method of constructing a profile for the user is to analyze the stream of tweets
published by the user  these may include tweets originating from the user or tweets
originating from others users  retweets   it is possible to use several ir techniques to
analyze the content of the stream and classify them by topic  i however  opted to take the
easy way out and relied on the excellent service provided by opencalais online  this
service takes in arbitrary text  individual tweets in this case  and provides a list of topics
that the tweet belongs to  since the list of topics is quite small  a matrix similar to the one
above can be constructed  where each element represents the number of tweets that
pertained to that topic

evaluation metric
in the past  most recommendation problems have considered using rmse between the
actual and predicted values as an evaluation metric  while the rmse makes intuitive
sense in an item rating scenario  it doesn t make much sense in a binary classification
 interesting v s not interesting setting  such as this  therefore  i opted to use the top n
recommendation metric to evaluate the performance of various algorithms  the metric is
simple  for each account that i am making predictions for  i sort of the related  all
accounts three steps removed  in order of similarity  then i choose n and check how
many are actually present in the test data set for that user 
the evaluation metric m  

i chose the value of n to be   somewhat arbitrarily  since that is the number of profiles
twitter currently recommends to a user   under this metric  if m is    then it implies that
the algorithm failed to provide a single good recommendation  since it is meaningless
to recommend users already being followed to the target user  i exclude the first level of
accounts while coming up with the top n list of similar users 

firecommendation algorithms
i implemented two simple and well known methods of constructing recommendations 
the first termed collaborative filtering relies on finding similar items by looking at
the number of items on which two users ratings agree or disagree  in our setting  this
translates to the number of user accounts that are followed by both users as a proportion
of the total number of users that are followed by the pair  the second approach is to
cluster users based on some measure of similarity  i attempted both methods using
both profile similarity as well as tweet similarity  i believe this model can be extended
to include both similarity measures into a single normalized metric  but i did not
experiment with this approach 
jaccard distance

jaccard similarity s  ui and uj    
jaccard distance d       s
cosine distance
cosine   similarity c   ui   uj      ui        uj   

clustering
i tried to group users into target clusters based on both their profile similarities as well
as their tweet similarities  after the target clusters were formed  i picked the closest
n  equal to    users who were part of the target user cluster  who were already not
connected to the target user  i investigated the use of both k means and hierarchical
clustering and decided to use the hierarchical clustering technique since it was not
clear a priori how many clusters needed to be present  for the similarity measure  i used
cosine similarity 

fiexperiment results
the average evaluation metric obtained on the different combinations were as follows
algorithm

average prediction accuracy

c f using jaccard distance profile
similarty

    

c f using cosine distance profile
similarity

    

c f using jaccard distance tweet
similarity

    

c f using cosine distance tweet similarity

    

clustering using profile similarity

    

clustering using tweet similarity

    

as can been seen from the table above  the best performing algorithm on the
experimental data set was clustering using tweet similarity  overall  even though i
expected better results from all algorithms  it is heartening to note that only in about
    of the cases  did the algorithm fail to make even a single correct prediction  since
even a single correct prediction can increase the value of the service to the user  i
consider this a positive result 

further work
the two approaches represent a rather simple method to calculate good
recommendations  there are several other more sophisticated methods that seem
to have yielded better results in practice  in particular  i found three methods to be
particularly promising  the first is using singular value decomposition as detailed in     
as     points out  using this method appropriately resulted in a    reduction in rmse
on the netflix prize data set  the second is using restricted boltzmann machines as
detailed in      the final prize winning entry in the netflix challenge used a combination
of the two approaches detailed above along with accounting for temporal bias  which
is important as a users tastes evolve  finally  a recent set of papers     and     detail a
promising approach that models the social network as a directed graph and tries to learn
the edge weight using a supervised random walk with restarts approach  the authors

fiof the paper applied this technique to predicting links in the facebook social graph and
produced good results  this looks particularly promising since the facebook link graph is
similar to the twitter graph in many ways 

conclusion
to summarize  i tried to recommend twitter accounts to follow to users of the service by
utilizing their existing set of connections  to do this  i created a set of user profiles and
tweet profiles for     users and their connections   steps removed  i then applied two
well known recommendation algorithms and found clustering based on the content of
a users tweets to be more effective  i then studied a few more sophisticated algorithms 
but due to time considerations did not implement any of them 

references
    haewoon kwak  changhyun lee  hosung park  and sue moon what is twitter  a social
network or a news media   data downloaded from the torrent file found on http   an kaist ac kr 
traces www     html
    sarwar  badrul and karypis  george and konstan  joseph and riedl  john analysis of
recommendation algorithms for e commerce
    rajaraman  anand and ullman jeffrey d notes on recommendation systems http   
infolab stanford edu  ullman mining      slides recommendationsystems pdf
    salakhutdinov ruslan  mnih andriy  hinton geoffrey restricted boltzmann machines for
collaborative filtering 
    agarwal  a   chakrabarti  s     aggarwal  s          learning to rank networked entities  
    l  backstrom  j  leskovec  supervised random walks  predicting and recommending links in
social networks 

fi