action recognition in video
pierre kreitmann
abstract
automatic action recognition in video has a broad array of applications  from
surveillance to interactive video games  classic algorithms usually use handcrafted descriptors such as sift  see      or hog  see      to compute feature
vectors of videos  and have achieved promising results in the past  see       more
recently  quoc le and will zou at the stanford ai lab have proved that isa
features obtained from unsupervised learning achieve higher performance  while
being much faster to engineer that hand crafted features  their work is not yet
published  
sfa features have achieved good results in object recognition as well as
position and rotation extraction from artificial video signal  see       in this
work  we experiment using sfa features for action recognition 

 

evaluation framework

our pipeline for action recognition follows the pipeline presented in      it
first uses a dense detector to split the videos into spatio temporal chunks  it
computes the sfa feature vector of each of those chunks  and then clusters all
those feature vectors  from all the videos   finally  it defines the feature vector
of one video to be the vector  hi    where hi     if and only if one chunk in the
video is in the i th cluster  those feature vectors are then used by a svm with
a   kernel for classification 

 

one layer sfa

we first experiment with a one layer sfa  for all my experiments  we use movies
from the hollywood  dataset  see      at half the original resolution  ie  around
         px 
the size of the patches is        px  so the input dimension is      a first
sfa pass reduces the dimension to     then  quadratic expansion is performed 
and finally sfa selects the    slowest features  so that the output dimension
is     since the temporal size of each spatio temporal chunk is    frames  the
dimension of the feature vector of each spatio temporal chunk is     
with the full dataset  the accuracy measured is         for comparison 
a random guess would have an accuracy of        however  state of the art
 

fiaccuracy is around              in      using hog hof descriptors  but higher
accuracy has been obtained with isa by quoc le and will zou  though there
work is not yet published  
figure   shows that the accuracy doesnt increase much with the size of the
training set  indeed  using     movies gives approximately the same accuracy
as using using     movies   
accuracy    

  
our algorithm
random guess

  
  
  
 
   

   

   
   
   
   
   
   
number of movies used for the supervised learning

   

    

figure    accuracy as a function of the size of the training set

this suggests our relatively poor initial result is due to a high bias  which
means our model doesnt capture enough information about the videos  here
are possible causes for this bias  that will be explored in the next subsections 
 the number of clusters is too low  see      
 the number of chunks is too low  see     and      
 the size of the chunks fail to capture important information  see      

   

influence of the number of clusters

in the pipeline  the clustering process is used to compute the feature of each
movie  and make sure they all have the same size  more precisely  the size of
the feature vector is equal the number of clusters 
to determine the effect of the number of clusters k on our results  we measure
the accuracy obtained with different values of k  from      to       the other
parameters are kept constant and have the same value as in our first measure 
figure   shows that the accuracy globally increases until      clusters  and
then decreases  the best accuracy is obtained for k         and is worth        

   

influence of the number of chunks per movie

in hollywood   each movie comprises about        spatio temporal chunks  for
     px spatial patches   computing k means with all the chunks from all the
movies would require to store them all in memory  to avoid that  my version of
the pipeline only uses a few samples from each movie  in the first experiment  we
  the algorithm is not deterministic  it uses random variables for selecting the features
before k means  which explains the irregularities in our graph 

 

fiaccuracy    

  

  

  
    

    

    

    
    
number of clusters

    

    

    

figure    accuracy as a function of the number of clusters

take      random chunks from each movie   and compute k means with those
samples  here  we want to determine if the number of chunks sampled from
each movie has an influence on the accuracy 
figure   shows that above      chunks per movie  the number of samples
doesnt have much influence over the result  it proves that our initial value
       was sufficient  and cant be the cause of our low accuracy 
accuracy    

  

  

  
    

    

    

    
    
    
number of clusters

    

    

    

figure    accuracy as a function of the number of chunks sampled from each
movie

   

influence of the size of the patches

the computation of the feature vector of each movie relies on computing the
sfa feature vectors of every spatio temporal chunks in the movie  in our initial
setting  the spatial dimensions were        px  and each frame of the chunk
was converted into a    dimensional feature vector 
to investigate the effects of the spatial dimensions of the chunks on the
accuracy  we test our algorithm with        px and        px  and keep the
dimension of the feature vector constant       table   shows that there is a
small improvement when we use        patches  and that the accuracy then
remains approximately constant for bigger patches 

   

effect of spatial overlap

previously  our dense detector returned adjacent patches in the image  here 
we investigate the effects of selecting patches with a      overlap in the x and
 

fisize
       px
       px
       px

accuracy
      
      
      

table    accuracy as a function of the size of the patches
y directions  this results in a finer grid  which contains   times more patches 
we compare two different settings  the first one uses the      overlapping
grid  and selects      patches per movie  the second one doesnt use the overlapping grid  and also selects      patches per movie  but out of   times less
patches   both experiments have      clusters 
in the first case  with overlap   the accuracy is         while the second case
 without overlap  yields an accuracy of       

 

two layer sfa

our one layer sfa didnt produce very good results  we have tried several
modifications  but only a few of them had a significant positive influence on the
accuracy of our action detection algorithm  increasing the number of clusters
and the size of the patch  here  well investigate the use of a two layer sfa
detector instead 

   

structure

as before  we use our first layer histogram  with patches of        px  and     
clusters  then we feed a second layer with the output of the first layer  more
precisely  each node of the second layer takes its input from   adjacent nodes of
the fist layer  so  the input dimension of the second layer is              as in
the first layer  a first pass of sfa reduces this dimension to     then  quadratic
expansion is performed  and finally the dimension is reduced to    by another
pass of sfa 
each output of the second layer thus represents a        px patch  and
those patches overlap over    px  ie       in the two directions x and y 

   

results

the two layer descriptor gives an accuracy of         this is not an improvement with regard to the first layer descriptor 

 

conclusion

we have applied sfa to action recognition in video  and our initial results were
low           we have explored various possible ways to improve this accuracy 
 

fiand have obtained        with our best setting  a one layer sfa  using     
centroids  see       this is still far from state of the art performance  finding
ways to improve performance of sfa on natural images is an active research
problem  see      

 

acknowledgements

my work for this project was supervised by quoc le and will zou  and i thank
them for their guidance and their help  both for theoretical and technical problems 
my code uses the sfa tk toolkit for matlab  see      for training the sfa
features  and i was helped by the code given by quoc and will 

references
    p  berkes  sfa tk  slow feature analysis tookit for matlab       
    alistair bray and dominique martinez  kernel based extraction of slow features  complex cells learn disparity and translation invariance from natural
images  in in advances in neural information processing systems  mit
press       
    navneet dalal and bill triggs  histograms of oriented gradients for human
detection  in in cvpr  pages              
    mathias franzius  niko wilbert  and laurenz wiskott  invariant object
recognition with slow feature analysis  in vera kurkova  roman neruda 
and jan koutnk  editors  artificial neural networks   icann       volume
     of lecture notes in computer science  pages         springer berlin
  heidelberg       
    david g  lowe  object recognition from local scale invariant features       
    marcin marszalek  ivan laptev  and cordelia schmid  actions in context 
    heng wang  muhammad muneeb ullah  alexander klaser  ivan laptev 
and cordelia schmid  evaluation of local spatio temporal features for action
recognition  in british machine vision conference  page      sep      

 

fi