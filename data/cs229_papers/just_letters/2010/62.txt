title    way stop wait time prediction
group members      david held
as part of my research in sebastian thrun s autonomous driving team  my goal is to predict the wait time for a
car at a   way intersection  this will enable us to plan what our autonomous car should do at such an
intersection  by running the classifier on our car at in intersection  we could use the result to determine when we
should enter the intersection 
data was collected from actual cars approaching   way intersections  our car was parked near the intersection
of stock farm and oak road  and data was recorded of cars passing through the intersection  the data was
collected using a velodyne laser  which returns a point cloud of position and intensity information for points
surrounding the laser  using this sensor  we can track the position of each car that is driving through the
intersection  and observe how its position changes over time  although work has been done to automatically
detect and track cars from the point cloud data  for this project  i manually labeled the car positions at each
frame  with linear interpolation where possible  to ensure clean and accurate data 
work is also being done to predict which direction the car is turning  based on lane position  turn signal  and
other cues  however  for the purposes of this project  i am assuming that we know the turn direction perfectly 
rather than manually label this information  i automatically check in future frames which direction the car
actually turns and use that information a priori  as if we predicted it in real time  the only information that we
extract from these future frames is the turn direction  left  right  straight   we do not take advantage of knowing
any future position information 
the results of the car labeling can be seen in figure    the position of each car is manually marked using a
visual car marking and interpolation tool  each yellow square in figure   indicates the position of a car in a given
frame  after marking the positions of cars for some small number of frames  linear interpolation is used to
predict the position of the car at all time frames  the blue car shown at the bottom of the figure is a stationary
car which holds the laser used to record the above data 

figure    yellow rectangles indicate car positions light blue rectangles are wait regions  in which a car is
considered to be waiting to enter the intersection  light purple rectangles are pedestrian crosswalks 

fii have marked the tracks of    cars using the above tool  of these      will be used for training  and    will be
used for test  each of the    training cars represents     positive examples  for each time frame in which the
car will be entering the intersection within the next second  and     negative examples  each of the    cars in
the test set represent     positive examples and     negative examples 
to quantify how long each car has waited at the intersection  a region is delineated in each direction which is
marked as the  wait region   these regions are shown in light blue in figure    any car within this region is
considered to be  waiting  at the intersection  i am attempting to predict how long each car spends in this
region  measured from the time that the car first enters the region  until the time that the car leaves the region 
using this  wait region  allows us to measure wait times using position information alone  instead of relying on
noisy velocity estimates  the distribution of wait times can be seen in figure    the mean wait time for all cars is
       seconds  with values ranging from      seconds to      seconds 

figure    distribution of wait times at an intersection  for all cars in the training set 
my hypothesis will attempt to predict whether a car will leave the wait region in the next   second  thus  this
task is framed as a classification task  in which the positive class indicates that the car will enter the intersection
 leave the wait region  in the next second  and the negative class indicates that the car will continue to wait in
the wait region for the next second  each car is classified at each time step  based on the updated feature
values at that time step 
the problem could alternatively have been framed as a regression problem  attempting to predict the number of
seconds until the car enters the intersection  however  this seems both more difficult as well as less useful  for
example  if the car is going to wait    seconds before entering the intersection  it will not be very helpful to
attempt to predict that the car will be waiting more than    seconds and less than    seconds  the important
information to extract from this scenario is that the car cannot enter the intersection at the present moment 
as a baseline  i used as a sole feature the number of seconds the car has already been waiting to enter the
intersection  intuitively  cars that have been waiting for longer are more likely to leave the wait region and enter
the intersection  the distribution of this feature  scaled by a factor of      for both positive and negative
examples can be seen in figure   below 

fifigure    wait time  for a car waiting to enter an intersection  the top graph shows the range of values for
positive examples      for a car that is about to enter the intersection in the next second  or negative examples 
   for a car that is still waiting at the intersection  the middle and bottom plots show the distribution of waittimes for positive and negative examples 
an svm is trained using the training data described above  using a gaussian kernel  the baseline result is
shown as the blue line in figure    using only this feature  we obtain an average precision of        by adding  
more features  we are able to obtain an average precision of        finally  by changing the regularization
parameter c  we are able to achieve an average precision of       

fifigure    precision recall curves after training on an svm  each line is the result after adding a new feature 
six features were used to train the svm  the first feature  mentioned above  is the number of seconds that a car
has already been waiting at the intersection  each of the   other features that are added are indicator variables 
to produce the best results for the guassian kernel  this indicator is multiplied by the number of seconds that the
car has been waiting at the intersection  which is itself also used as a feature   this seemed to produce better
results than using the indicator variables directly  even with a quadratic kernel  which would represent a feature
vector that includes the product terms between individual features  the improved performance using the
gaussian kernel is probably because a quadratic kernel would include other second order terms that are less
useful 
the first indicator represents if the car being classified wants to drive straight  not turn  and if there is a car
waiting on the opposite side of the intersection  presumably  if the target car thinks that the opposite car might
turn left  then the target will wait for a little bit longer before entering the intersection  the next feature used is an
indicator of whether the target car is turning left and if there is a car waiting on the opposite side of the
intersection  which presumably might want to go straight   another indicator represents whether a car is
currently in the middle of the intersection  next  we have an indicator of whether there is a pedestrian crossing
the road in a place that blocks the target car from proceeding through the intersection  crosswalks are shown
as the purple regions in figure   above and figure   below 

figure    a pedestrian is marked in the top center as a small white square  the two cars  on the left and right 
need to wait for the pedestrian to cross before they can proceed through the intersection 
last  an indicator is used to represent whether a car wants to make a right turn  presumably this will cause it to
go faster through the intersection  
adding additional features causes the average precision to drop dramatically  this is most likely because we do
not have enough training examples to learn in a more expressive feature space  this can be demonstrated by
observing the change in training error as we add these features  interestingly  before adding these new features 
the training error is higher than the test error  this is most likely because the training set has many more
examples  and represents a much more diverse range of scenarios than the more limited scenarios that appear
in the test set  thus  while our features may be expressive enough to accurately classify cars in the test set 
they are not expressive enough to predict car wait times in the wide array of scenarios from the training set 
figure   shows the training error  run      blue  is a result of training with the   features described above  and
the svm gives an average precision of        adding   more features increases the average precision on the
training set to       the first new feature added is the area of the target car  generally  larger cars tend to wait
for a longer amount of time than smaller cars  next  the car s approach velocity is roughly estimated by

ficomputing the derivative of its position for successive frames  a car with a faster approach velocity might be
expected to drive more aggressively and wait for less time at the intersection  the remaining features indicate
the priority of the target car compared to other cars at the intersection  priority is determined by the order in
which the cars arrived at the intersection  although of these features improved the training error  we do not
currently have enough data to be able to use these features to reduce the test error  adding in any of these
features results in increasing the test error due to overfitting 

figure    training error  run      blue  is the training error using the   features described above and used for
obtaining the test error in figure    run     is the training error resulting from training the svm on   additional
features 
more features can additionally be added to further reduce the test error  more accurate information of pedestrian
location can be used to determine when a pedestrian is sufficiently out of the intersection to allow a car to
proceed  even if the pedestrian has not entirely left the cross walk   further  more detailed information about
the direction that a car is turning and the priority information of nearby cars can also be included  finally  a more
complicated framework can be used in which each car attempts to estimate the aggressiveness of each other
car  based on its approach velocity  behavior  such as inching forward toward the intersection   car type  color 
etc  based on this estimated aggressiveness  a car will determine whether it can safely enter the intersection  or
whether it will need to wait for the other cars 
it is also significant to mention that for the purposes of controlling an autonomous car  precision in the above
task is more important than recall  a high precision indicates that  if the classifier predicts that a car should go in
the next second  then indeed  a large percentage of the time  the target  human driven  car will actually go in the
next second  used on an autonomous car  the classifier can be used to predict if the autonomous car can safely
enter the intersection  a low precision corresponds to many false positives  this would be dangerous  because
in this case  the classifier would predict that the autonomous car should enter the intersection at an unsafe time 
on the other hand  a low recall corresponds to many misses  this indicates that the target  human driven  car is
entering the intersection  but we fail to predict this event  for classifying an autonomous car  this would simply
mean that our autonomous car would wait at an intersection longer than necessary  on the other hand  if we are
building a framework where we attempt to predict the actions of other cars  then we would want high recall  this
would correspond to accurately predicting when each of the nearby cars might enter the intersection 
this research will hopefully be useful as part of a longer term goal of building a planner to control an
autonomous car approaching an intersection  to decide how long it should wait  by continuing to further improve
the results  we will hopefully be able to accurately predict when our autonomous car can safely enter the
intersection 

fi