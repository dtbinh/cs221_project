market predictions using sentiment analysis and
state space models
jeffrey wong
december         

 

abstract

traders on wall street are constantly working and gathering information about
a variety of assets  they meet with clients from private companies  read the
news  and monitor the global economy  the more information a trader has  the
more likely he is to turn a profit  these traders comprise a large portion of
market activity  and hence drive stock market movements 
in order to determine whether or not an asset is worth purchasing  we wish
to know whether it is overvalued or undervalued  this can be estimated by
comparing the current stock price to the current value the traders assign to the
asset  if the current price is above this value  we can expect that fast moving
traders will sell the asset and the price will fall  and vice versa if the current
price is below the traders value 
in this study we try to determine a model to describe how a trader may value
an asset  first  we assume that the trader has some initial value in mind for the
asset  that value changes over time as the trader acquires more information 
we assume that the trader acquires information by reading the news  and hence
we will want to quantify how the traders opinion changes with the addition of
new news articles  the model we use in this study is a state space model  where
the observable values are stock prices  and the hidden state is the value assigned
by the traders  the state equation includes exogenous inputs which represent
shocks to the system as traders read the news  we model these exogenous
inputs through an aggregate sentiment score  which we define as the feelings
conveyed by finance authors for a particular asset  the underlying process 
which represents the value to the traders  can then be extracted using a kalman
filter 
after fitting a regression model to determine the evolution matrix of the
state equation  we find that the sum of squared errors is unacceptably high  and
therefore conclude that modeling stock prices in terms of a traders opinion  and
a traders opinion in terms of sentiment scores  is inappropriate 

 

fi 

background

financial movements in the markets have historically been an overwhelming
and unpredictable force  with millions of people on the trading floor  the markets move  respond to actions  and adapt quickly  recently however  traders
have been taking advantage of high powered technology and advanced statistical algorithms to assist them in their day to day trading  information is almost
instantly available  this field of algorithmic trading has exploded in the past   
years  with many statisticians trying to predict how certain parts of the market
will respond to changes in another  while other researchers have developed
dozens of new mathematical models to attempt to minimize risk and maximize
return  we will focus on the human factor 
in this study  we view the financial markets as a large game with many
players  the markets are like an auction house  and players sell and bid on
certain assets  the value of an asset is largely determined on its current finances
and its potential to grow  unfortunately  this kind of information is not available
on demand  the more information the players have  the better they can judge
the asset and determine its current value and the potential for that value to
increase  the opinion of a trader can change when he learns that a company
has released a new line of products  or when a company changes its business
strategy that increases its profit margins  the news is a crucial source of such
information  and the addition of new information is a primary factor in driving
movements in the market  therefore we are interested in studying to what
degree can news articles affect the markets 

 

project goals

a traders opinion has a direct impact on how the markets trade and how
different assets are valued on a given day  traders read news articles every day
in order to keep up with the global economy  and their opinion is influenced
by the sentiment of the articles authors  using financial news and business
journals  we would like to measure the sentiment an author has for a particular
asset or situation  and then measure its impact on a traders opinion  by doing
so  we hope to make predictions on the magnitude and direction of the market
whenever new news is released 
here  we will propose a two stage prediction process 
   just as the google bot crawls the web to index websites  we will produce
a spider that will crawl business articles and financials websites to generate a
document matrix that can be analyzed in a learning algorithm  from the output  we will create an aggregate sentiment score for the day  which represents
how positive or how negative people feel about a particular asset 
   the aggregate sentiment score will be used in a regression model to predict the value of an asset

 

fi 

models

below  we state a series of hypotheses that we would like to test in this study 
 a stocks price is a function of a traders opinion
 a traders opinion is influenced by the news articles he reads
 specifically  a traders opinion is an autoregressive time series with the
news causing exogenous shocks to the system
let yt be the percent change in stock price on day t  and let xt be a traders
opinion also on day t  define a variable wt to be the aggregate sentiment toward
a stock on day t  we may consider the following model 

xt

    xt      xt            k xtk   k   wt    ut

   

yt

  f  xt     vt

   

where ut and vt are random noise      describes the opinion of a trader on day
t as some linear combination of his opinion from   day ago    days ago  up to k
days ago  and what he sees on the news on day t      describes the stock price
as some linear function f with input parameter xt   the opinion of the trader
that day 
we will make the intuitive claim that the xt time series is a hidden process 
i e  we cannot explicitly measure a traders opinion on a given day  this leads us
to believe that a state space model  where xt is the unobservable state equation 
would be an appropriate model  rewriting  we claim

xt

    xt      xt            k xtk   k   wt    ut


xt 



 xt  
          k       k   wt    ut
 
    

yt

 

xtk







at x t   v t

thus  we can write the state space model


          k  k
xt
  
     
 
 

xt  

  
 
 
 
 
 
 
   
  


  
 

 
xtk  
 
     
 
 
 

as



 xt 
  xt 

    
  

xtk




 

 

wt    
   k  



ut

      
  
 

fi
yt

 



at

 

   

 

 






xt
xt 
  
 




   vt


   

xtk  
the significance of this is in the   step ahead forecast 
e yt    yt  

  e at   xt    at xt  

   

  at      xt      xt            k xtk   k   wt   

   

note that xt   is a function of lagged values from the past  the prediction
would be easy if these values of xt were observable  the best way to make the  
step ahead forecast will be to use the kalman filter to smooth the stock prices
and uncover the underlying process xt   then plug the smoothed values into     

 

learning algorithm and methodology

note  in this study we will train two learning algorithms      to run sentiment
analysis on news articles and determine an aggregate score for a certain asset
at time t  and     the state space model which will fit the data to a time series
that can be forecasted for time t     

   

sentiment analysis

for      we will construct a spider that can crawl links on financial websites
and download and parse the content of news articles  every day for two months
we read and label the articles ourselves  to build up our vocabulary  we will
create a frequency table from a sample of     news articles  we must be careful
to sample from news articles that have positive connotations as well as negative
connotations  it will also be helpful to sample articles that are covering different
market sectors  in this study  we use a vocabulary of roughly      words 
when crawling the web  we will generate a feature vector x i  for each article 
 i 
where xj is the amount of times the j  th word in the vocabulary appeared
in the i  th article  later  we expand our vocabulary to contain a bag of words
instead of single tokens  building these feature vectors for multiple articles gives
us a document matrix which we can use for training 
for this project  we are concerned with whether or not authors are writing
positively  neutrally  or negatively about an asset or situation  like a spam
classification problem  we may choose to use a linear svm where the labels are
either       or    for positive writing  neutral writing  or negative writing  using
the vocabulary above  we notice that positive articles tend to use words such
as earnings  growth  buy  surge  upgrade  acquire  launch  and call  negative
articles tend to use words such as charges  infringement  reject  struggle  downgrade  and plunge  on a naive algorithm with cross validation  our learning
algorithm produces the following confusion matrix 
 

fiaccuracy                    
c  
 
 
  

  
  
  

  
 
  

based on the above confusion matrix  we note that most of the error comes
from predicting positive articles as negative ones  and predicting negative articles as positive ones  this is a common natural language processing problem 
which we will discuss below 
     

natural language processing

sentinment analysis is very difficult to do because it is based on a fixed vocabulary  and the algorithm cannot detect the surrounding syntax  it is particularly
hard to understand the presence of negations  such as 
      had a great performance       vs        did not have a great performance      
while we see the word great as having positive connotation  our algorithm
needs to be aware of the word not which reverses its meaning  unfortunately 
these negatives do not necessarily occur right before the word that they modify 
in order to combat this difficulty  we will double the length of our feature
vector  suppose the initial size of the feature vector was n  we will allocate a
vector of size  n  where the first n values represent our vocabulary  and the latter
n values represent their negations  upon downloading content  the algorithm
will cache the location of all negation words in the article  as the spider looks
for word w from our vocabulary  it will check if any of the cached negation words
are also near w  if w is near a negation word  the algorithm increments the value
 i 
 i 
at xj n instead of xj   in this study we consider the following negations  no 
not  unable  rarely  never  without  barely  hardly 
other natural language processing problems are apparent in this study  for
example  suppose an article compares two companies  google and ibm  the
author may write positively about google and negatively about ibm  in which
case the algorithm will not be able to classify the article as a whole  in general  it
is difficult to match an adjective to the noun that it is describing  and likewise
with adverbs and verbs  in this case  we keep a lexicon of company names 
when performing sentiment analysis on company i  we will look for a word w
from our vocabulary and also use an extra byte to store the distance from w to
the nearest occurence of the company name i  if this distance is large  we hope
that this will nullify the presence of word w 
applying such techniques yields an improved confusion matrix 
accuracy                    

 

fic  
  
 
 

  
  
  

  
 
  

the above confusion matrix is a slight improvement  but our learning algorithm continues to report false negatives and false positives  this is likely
due to negation detection  and the inability to distinguish which words modify
which nouns 

   

state space model

here we will use the aggregate sentiment score found from the previous part to
construct a time series model  note that our state space model describes yt as
some linear function of xt   and xt is some autoregressive process with exogenous
inputs 
first  we can simplify our model by determining the order of the autoregressive component  if xt is ar p   then the p  th difference of the xt time series
should be stationary  for brevity  we will show the analysis on one company 
apple 
below  we plot the closing prices of apple and find that taking the first
difference makes the series stationary  thus we estimate
xt     xt      wt 

 

fithe state equation becomes 



 
xt
 
 
wt

 



wt
wt 

xt 
wt 


   

we would like to learn the parameters a        to fit our state space model 
let yt be the value of a stock at time t  and let yt be the value forecasted by
our model  if our goal is to have accurate   step ahead forecasts  then we may
consider fitting a        such that
yt    a  xt   a  wt
without loss of generality  we claim a     and make any necessary adjustments
to   and     the above is akin to a least squares regression problem  however 
we should note that changing   and   changes the evolution matrix  which
changes the smoothed values xt   instead of writing xt as a recursive process 
we will write it in closed form with respect to its initial value x    recall that
wt is an exogenous input that is already known 
lemma  if xt is ar    with exogenous inputs and initial value x    and has
the evolution equation xt     xt      wt  then we can write xt   t 
  x   
 
t 

w
 
 
 
 
 


w
 

w
 
 
 
 
t 
 
t 
 
 
proof  we illustrate the recursive process here 

x 

 

  x       w  

   

x 

 

  x       w  

   

 

     x      w        w 

    

 

   x 
   x 

    

x   
  
 
xt

 

      w      w 
 

     w 

      w      w 

t 
 
t 
  x        w                wt      wt 

    

    

then  we will fit       that satisfy
arg min  yt      xt    wt   
    

running this on the aapl data series  we find that            and
        below  we show the kalman filter applied to the aapl series with
these parameters  the underlying process xt is drawn through its points 

 

fiunfortunately  these parameters yield a sum of squared errors value of    
for the rpediction  and hence r          we repeat this on a portfolio of   
stocks and find that the r  value hovers around       hence  we must deduce
that this model is inappropriate for the data 

 

conclusion

in this study we tried to model a stock price as a function of traders opinions 
and traders opinions as an autoregressive time series that had exogenous inputs
from the opinions of authors writing financial articles  we implemented a two
stage learning process where we tried to analyze the sentiment of an author using
a linear svm  and then used an aggregate sentiment score to fit a state space
model  the end goal was to uncover an underlying process that drove stock
price movements by applying a kalman filter on the observed stock prices 
during this study  we encountered many natural language processing problems
that prevented our spider from accurately labeling a piece of financial text  furthermore  through regression diagnostics  we have determined that the claimed
state space model is not suitable for prediction 

   

further work

 improve the accuracy of the spider  particularly in negation detection and
the ability to recognize authors who are comparing two or more assets 
 collect more data   this study monitored stock prices during a very volatile
period from sept      nov    
 expand the size of the state space model to include more predictor variables  may be interesting to switch to gam  generalized additive modeling  

 

fi study interaction terms   how does sentiment on stock i affect a traders
opinion on stock j  and hence how does news about stock i affect the
stock price on j  this is particularly interesting when news is released on
competing companies 

 

fi