evaluating and classifying nba free agents
shanwei yan
in this project  i applied machine learning techniques to perform multiclass classification
on free agents by using game statistics  which is useful to evaluate players performances 
to do so  i implemented and compared a collection of supervised and unsupervised
learning algorithms on a dataset consisting of     free agent samples  no previous work
was accessible  and depending on the features i selected  nave bayes outperformed the
other algorithms and achieved an accuracy of     

introduction
nba  as a sports league  is different from many other leagues in rest of the world  because there is a
salary cap for each team  this salary cap regulates that the team whose total payroll is above this cap
will be penalized a huge amount of luxury tax  considering the heavy excessive finance burden  only a
few teams among    are willing to pay luxury tax like miami heat and brooklyn nets  this regulation
stops the basketball games from becoming a financial competition instead of an athletic one 
as a general rule  star players annual salary range from    million to    million  while inept or rookie
players annual salary can be as low as     thousand  since the sum of players salaries of one team can
be considered as a fixed number  assuming every team controls its payroll under the salary cap  in order
to improve a teams performance  it is very important for a manager to sign good rookies and those who
seem to be maimed player and get low paid  but can contribute a lot to the game  therefore  it is
surprising but also understandable that a team which spent    million can rank higher than a team
which spent    million  a good example is houston rockets  which use statistical analysis to evaluate a
players skills  and sign low cost but good players  it is interesting and inspiring to dig out how they do
that  and what the secrets are 
though many kinds of game statistics are available online  there is few prior work open to the public  in
this report  i investigated different machine learning algorithms to build multiclass classification models
to fairly evaluate players values  and find highly cost effective players  i am able to achieve high
precisions in classifying inept and super star players 

data and feature selection
the first question is what salary can represent a players value  nba regulates that once a player signs a
contract  no matter how his performances are in the following year  his salary wont be adjusted  for
example  suppose lebron james signs a contract which states that he can earn    million for the
following   years  then next year  he gets severe injured and plays as bad as a player who earn   million
annually  he can still earn    million  but not   million  therefore  it is not suitable to use all players
salaries as samples to train  because they can be highly biased  instead  i believe that it is fair to use

fiplayers statistics whose contracts are expiring  who are called free agents  the reason is that free
agents earn the new salary for year t   depending on their performances in year t  therefore  i gathered
and cleaned the data for the latest three regular seasons                       and             and
got     samples  the explanatory variables are game statistics  like ppg  points per game   rpg
 rebounds per game   ts  true shooting rate   etc  and the responsible variable is salary 
depending on the distribution of salary range  i decided to build multiclass classification models  then i
classified the salary data into   classes  the salary range for each class and priors are listed in table   
there are not many samples  which prevents me using more classes  on the other hand  too few classes
 i e    classes  make the classification problem meaningless 

name
low salary
middle class
good player
super star

table i   salary ranges
range
     million
  million     million
  million     million
    million

prior
         
        
        
        

in the dataset  there are hundreds of attributes indicating players performances  either per game or
overall season  due to the high dimensionality of the feature space  techniques such as forward or
backward searches are not effective  therefore  i turned to use a batch of attributes  the so called
efficiency to measure players values  according to tens of nba data analysis reports  different experts
defined efficiency by using different attributes and parameters  based on different points of views 
in order to find the efficiency with most predictive power  as a first step  i scored the existing efficiencies
according to the correlation with class labels  as a result    efficiencies ranked top among     they are
defined similarly and put more weights on offensive statistics but also take defensive skills into account 
next step is to select additional attributes so that players potentials are considered  and more defensive
statistics are used to balance offensive ones included in efficiency  finally i decided to use the  
efficiencies combining with other potential defense features which achieved the highest correct rate
when implementing the naive bayes algorithms on the overall dataset 

models and results
i explored both supervised and unsupervised learning algorithms for the classification task  in particular 
i used the following techniques  naive bayes  svms and k mean clustering  the accuracies of the
learning algorithms are evaluated using    fold cross validation  figure   shows the classification
pipeline 

fifigure    classification pipeline
naive bayes
randomly partition the original data set into    equal size subsets  each set consists of    to   
samples   and implement the naive bayes algorithm on the training set to build the classifier  since the
features i used were all continuous  then gaussian distributions were generated for each predictive
variable  one for each class  salary range   ran    fold cross validation for     times  and the results
were listed in table   
svm
i tried svms with four different kernels  including linear  u   v   polynomial     dimension   u   v     
radial basis  exp    dimension    u v       and sigmoid  ran    fold cross validation for     times  and
listed the results in table    among the   kernels used  radial basis had the highest accuracy  though the
performances of svms are generally worse than naive bayes classifier  one possible reason is that i
selected the features which have the best performance depending on naive bayes 
table    error rates of supervised learning
error rate
naive bayes
svm   linear kernel
svm   polynomial kernel
svm   radial basis kernel
svm   sigmoid kernel

k means clustering

mean
      
      
      
      
      

std
     
     
     
     
     

min
      
      
      
      
      

max
      
      
      
   
      

fii applied the unsupervised k means approach to cluster samples into different groups  though i
previously classified the salaries into   ranges  here i tried k     to    with starting points assigned
randomly  by running the k means clustering algorithm for     times  the clustering patterns are shown
in table   
the error rates for k      and   are respectively               and         according to the clustering
patterns of different k  it is hard to calculate the error rates for k   or     k   has the highest accuracies 
but in real nba world  it makes no sense to classify a free agent into only   class  whether he is a skilled
or inept player  the error rate of k   is close to those of naive bayes and svm  k   suffers from a very
high error rate  which may be caused by the small sample size 
table    k means patterns
k

pattern

 

class   and   are combined as one cluster  and class   and   form the other 

 

class   and some class   samples form one cluster  class   and class   form another cluster 
and the rest samples make up the other cluster 

 

compared to the original classification  class   and   enjoy the high accuracy  but class   has
relatively higher error rate 

 

class      and   are mixed and make up   clusters  while class   exclusively makes the other
cluster 

 

class   and    each forms   clusters  and class   and   forms   cluster respectively  which is
expected 

conclusion and future work
it can be seen that using efficiencies and potential   defense features in the classification models could
generally get good prediction accuracies  which would help to evaluate basketball players true values
and dig out under rated players  however it is not likely to improve the testing accuracy by elaborating
efficiencies or re selecting features  because the five efficiencies i used resulted in close error rates  on
the other side  improving the parameter settings in certain machine learning algorithms like svm  kmeans can improve the accuracies a little bit  another way to improve the accuracies i think is to
increase sample size  this may also help to test whether the selected features are good enough to
classify players performances or not 
another possibility of future work is to create an application tool  which uses the trained classifiers to
evaluate all players values  and then offers trade suggestions to team manager  players in the team who
earned much more than their contributions should be traded out for those players who earn equivalent
salary but better performances  this will be especially useful during the summer time  off season  or

fimid february  before the close date of trade   because it will help to establish a more competitive and
cost effective team 

references
    a  karatzoglou  d  meyer and k  hornik  support vector machine in r  journal of statistical software        
    a  karatzoglou  a  smola  k  hornik         kernlab an s  package for kernel methods in r  
    machine learning lecture notes  http   cs    stanford edu materials html

    michael lewis  money ball
    nba salary cap  http   en wikipedia org wiki nba salary cap
    player evaluation metrics 
http   www nbastuffer com component option com glossary func display itemid    catid    
    player stats  http   www nbastuffer com player stats

fi