building an image based shoe recommendation system
amrit saxena
stanford university
amrit cs stanford edu

neal khosla
stanford university
nealk cs stanford edu

abstract
we have developed an image based shoe recommendation system to help modernize the retail industry  this
system assesses a dataset of over        mens shoes and
extracts the shape  color  and texture associated with each
of these shoes  it then recommends shoes that are similar
to a users input image on the basis of these features  on
the whole  our algorithm takes seconds to compute and
has a recommendation accuracy of over     for each of
shape  color  and texture across the top    recommendations for each image 

 

introduction

in response to the relatively slow rate of technological
innovation in the retail industry  we set out to utilize
machine learning techniques to modernize the industry 
we identified real time recommendation systems for retail goods as an area with significant opportunities for
advancement  while e commerce platforms utilize techniques like collaborative filtering to power recommendations for users  recommendations in brick and mortar
stores are still very low tech and are generally driven by
word of mouth from friends and family and pitches by
salesmen  the problem lies in that it is difficult to build
a useful user profile vector and recommend things to people in real time as they shop physically  even if it were
possible to track this data  it is fairly difficult to compute
recommendations for items in the brick and mortar setting due to poorly defined taxonomies and a general lack
of data properly and consistently characterizing products
in retail database systems  we wanted to develop a mechanism that could provide extremely accurate and efficient
recommendations without having to depend on a large
amount of data points  as a result  we decided to leverage machine learning to build an algorithm that could
recommend retail goods on the basis of image similarity
as such a process would require no data outside of images of the goods 
our belief is that successfully computing recommendations on the basis of image similarity would be a
stepping stone towards building more robust recommendation systems that could significantly improve the way
in which people shop as it would allow for more cus 

vignesh venkataraman
stanford university
viggy stanford edu

tomized  flexible  and accurate guidance in identifying
desired goods  as this provides significant value to commercial entities and consumers alike  this is a problem
that many people are trying to tackle in the real world
right now  albeit with varying levels of success 
acknowledging that the problem that we were seeking to solve was a difficult one  we decided to initially
attempt to solve a simpler subproblem  we proceeded by
assessing shoes  a retail product that is not overly variable or complex  in order to maximize our chances of
substantive results  beyond the relative lack of complexity in shoe styles  footwear is also a significant industry
within the retail space and represents transactions of over
    billion per year     

 

dataset

for our analysis  we wanted to compile a dataset of
images with consistent lighting and positioning so that
we could focus on developing a robust algorithm without having to worry about making sense of the noise
in dirty images  as a result  we created a dataset by
scraping the data for all of the        different mens
shoes that were listed on zappos com at the time of
scraping  we chose to use images from zappos for our
project as the site contains a fairly exhaustive set of shoes
among its product listings and has images with exceptionally consistent lighting  positioning  and orientation 
for each shoe  we scraped a side view image of a leftshoe facing left  along with each of these images  we
scraped data about each of the products including the targeted gender  the name of the shoe  the brand of the shoe 
the shoe price  color  ratings per reviews on the website 
and zappos provided categorical taxonomy of the shoe 

 

process

in our efforts to create a robust recommendation system 
we began by analyzing and identifying what features
might define a shoe and its style  while we had initially
hoped to use our data  specifically the zappos taxonomy
of each shoe  as a metric for the success of our classification of style  we quickly concluded that zappos provided extremely poor taxonomies  nearly     of shoes

fiin the dataset were classified in the sneakers   athletic shoes category  because this provided taxonomy
lacked any real granularity  we pivoted to approach this
problem as an unsupervised learning problem  we then
shifted our focus to determining a feature set that would
enable us to accurately group similar shoes  through a
drawn out brainstorming process that involved both numerous discussions and cursory explorations of different
approaches  our group concluded that the three main features that defined shoes were shape  color  and texture 

a good job of differentiating between shoes with vastly
different shapes and styles and causing this method to
significantly underfit our dataset  thus  for our next approach  we went through all of our images and found
nine images that we determined were good representations of most of the distinct shapes and styles of mens
shoes  i e   low tops  sneakers  high tops  boots  slippers 
clogs  boat shoes  sandals  and flip flops   we then clustered on the basis of these initialized cluster centers and
achieved a shape classification accuracy of about     
subsequently  since the only relevant factor for this step
of our algorithm was shape  we decided to mask all of
the images as illustrated in figure    to compute these
masks  we utilized opencvs thresholding capabilities
     specifically  we applied the inverse binary thresholding function on grayscale images in order to turn the
background of the image black while whiting out the
contents of the shoe itself  the inverse binary thresholding function is defined by 

   shape   we identified that shoes with similar shapes
tend to belong to the same style categories and
therefore concluded that the shape of a shoe would
give us significant fundamental insight into the style
of a shoe 
   color   we also noted that from a visual perspective 
the color of a shoe is one of the first things that the
brain registers  and thus  that color might provide a
good feature to base recommendations on 

 
  
if src x y    thresh
dst x y   
maxval  otherwise
   

   texture   we decided that ascertaining the texture of
a shoe would make our recommendations far more
accurate as shoes with similar shapes and colors can
often be of vastly different styles  for example  a
low cut brown running shoe and a low cut brown
casual wear skate shoe will have extremely similar
shapes and colors  but the running shoe would have
a mesh like texture  while the skate shoe would
have a much smoother texture 
additionally  since this is an unsupervised learning problem  for each one of our accuracy calculations in this paper  we measured accuracy for a randomly selected sample of     shoes as this represents a statistically significant sample size at the     confidence level with a   
confidence interval 

   

figure    a mask computed for one of the shoes in our
dataset 
thus  by passing in     for our value of thresh and
    for our maxval  the background  which is entirely
whitespace  is transformed to black  similarly  any space
that isnt pure white  i e   the shoe itself  is transformed
to white  now  instead of running k means clustering
on the raw images themselves  we decided to utilize the
grayscale array representations of the masks of the images that we had selected as cluster centers before and
simply assigned each image in our dataset to the cluster
center that had the smallest matrix difference from it as
follows 

shape

to ascertain shoe shapes  we first tried a fairly rudimentary clustering approach to determine cluster centers corresponding to different styles of shoes  by using the category taxonomies from zappos website  we computed
prototypes for cluster centers for each one of the major
categories  to do this  we converted each image corresponding to a given category to a grayscale array and
computed the average grayscale array corresponding to
each category  once we had these initialized cluster centers  we ran k means on our entire dataset of images 
this technique resulted in a style classification accuracy
of about     on a randomly selected  statistically significant sample  as previously mentioned  we realized
that one of the primary reasons for this was that zappos
taxonomies were highly generalized and thus did not do

arg min non zero count cluster   image 
cluster

   

this approach worked very well  and we achieved a
shape based style classification accuracy of about     
 

fi   

color

perceived visual distance between two colors  i e   how
the human eye would classify their closeness       moreover  when compared to the rgb color space  there is
much greater uniformity of color spacing  meaning that
the relative distances between colors become meaningful measures of ranking color similarity  the conversion
from rgb into this space allowed us to calculate similarity between colors using a simple euclidean distance
function and accurately approximate similarity in color
as a human would perceive it  these cluster centers were
then precomputed for our entire dataset in order to optimize the speed of the algorithm for future color based
comparisons  finally  we sorted the four color values of
the cluster centers by ascending luminosity  allowing us
to make an ordered comparison of the color centroids 
the color similarity score of any two images in our data
set was calculated to be the sum of the square of the euclidean distance between each of the color centroids in
the l a b  color space  therefore  a smaller similarity
score represents a smaller difference between the color
distributions of two images and thus a smaller difference
in their visual color similarity because of the properties
of the l a b  color space  a randomly selected  statistically significant sample was fed into our color similarity engine and the top    results for each shoe were
manually verified as color matches or not  the similarity measure achieved an accuracy rate of      indicating
the success of our color feature construction and similarity matching 

our first attempt to create relevant color features for each
shoe involved computing color histograms over the entire image for each pixels rgb values  we then compared the histograms of all of the shoes using a correlation metric in the opencv comparehist function library
 for an elaboration of this see section           however 
this yielded mixed results  although we were able to correctly match the primary color of the shoe  the histogram
comparison was weighted too heavily by the frequency
with which each color appeared  the primary color of
the image was dominating the histograms structure  hindering our ability to differentiate based on secondary colors  this suggested that our initial approach would not
work  and we started to explore other methodologies 
our second approach sought to classify the colors of
the shoes by utilizing a modified form of k means clustering to identify the top four most prevalent color cluster
centers in a given image  more specifically  we ran the
scipy python librarys vq kmeans clustering function for
   iterations with randomly selected initial cluster centers until convergence  where convergence is defined to
be 

 ri  ri       gi  gi       bi  bi            

   

i

where  ri   gi   bi   is the cluster center that the current
pixel  ri   gi   bi   has been mapped to      both the
cluster centers and the mappings between pixels and
their closest cluster centers are returned for the iteration with the lowest overall error  figure   illustrates
an example output of this clustering algorithm run
on a shoe in our dataset where the four most prevalent
colors are shades of light grey  dark grey  blue  and white 

   

texture

to compute textural similarities between shoes  we first
employed a texture descriptor called local binary pattern  lbp   figure   depicts the basic concept behind the
lbp algorithm  lbp features are represented by first calculating the difference in grayscale value between each
pixel in the image and its   direct neighbors  then  the
signs of those calculated differences are noted  since
there are   neighbors  each with the possibility of having
a positive or negative difference  there are     possible
lbps  because we applied the vlfeat librarys lbp implementation to our dataset  we adhered to their standard
of reducing those     possible lbps to    quantized
lbp possibilities  which depend on the transitions between negative and positive differences when the neighbors are scanned in anti clockwise order  reducing the
number of quantized lbp possibilities to    allows the
computation of a more reliable histogram that is ultimately the final output of this algorithm     
after calculating the lbp features for each of our images  we compared their texture based similarity by utilizing opencvs comparehist function to calculate the
correlation between two histograms      this function

figure    an example of the output from the k means
based color clustering with four cluster centers that we
employed to match colors  in this image  the predominant colors are discovered to be blue  light grey  dark
grey  and white 
we then mapped the rgb cluster centers into the
ciel a b   l a b   color space  which is a more visual color metric according to its definition  the l a b 
color space is designed such that the mathematical distance between two points in the color space approximates
 

fifigure    a demonstration of the basic algorithm behind
local binary patterns  lbps      
denotes the distance between any two histograms h  and
h  as 
d h    h      p

i  h   i   h    h   i   h   
i  h   i   h     i  h   i   h    

figure    a depiction of the pyramid matching algorithm for a trivial example with   quantized features 
the image is divided into   different levels of resolution
for which feature histograms are computed and weighted
more heavily for higher resolution subdivisions     

   

where hk is the mean of the values in hk or n  i hk  i  
after implementing this basic version of lbps and
applying it to our dataset  it became evident that our
method of comparing textures was not properly functioning  first  we observed that the comparison of texture
as an additional factor in our similarity engine  along
with color and shape  was having no effect on the outputted set of recommended shoes  revealing that our engine was not weighting texture correctly  however  in
trying to determine how to reweight the algorithm  we
discovered that almost all texture histograms for all images were being categorized as     or more identical 
this led us to believe that our texture algorithm was
not giving us any insight into differences in texture between images and thus needed to be refitted  our first
attempt to solve this problem was to switch from comparing the histograms using the comparehist function
to measuring the kullback leibler divergence  kl divergence  between the two distributions  however  our
issues persisted  prompting us to reconsider our original lbp feature determinations  in order to investigate
this  we temporarily edited the recommendation algorithm to recommend shoes solely on the basis of texture
and were achieving less than     accuracy  after analyzing possible causes extensively  we concluded that
our algorithm was not weighting the more granular textures in the shoes heavily enough and was just matching the significant white region of the images  which did
not contain the shoe as similar  to address this  we decided to implement a modified version of spatial pyramid matching to get more granular features     spatial
pyramid matching works by creating histograms of features for progressively smaller sized subdivisions of each
image and weighting the more granular histograms more
when comparing two images histogram features  figure   depicts the idea behind spatial pyramid matching
for a trivial example with   quantized features 
for the purposes of our texture matching algorithm 
we leveraged this concept by creating lbp histograms

for progressively smaller subdivisions of our images for
use in calculating the similarity between two images  we
utilized vlfeats functionality that allows the user to
specify different resolution divisions of the image  enabling us to use the same lbp library by calculating extra histograms for finer resolutions than exclusively the
entire image  through iterative consideration of different grid sizes  we were able to settle on dividing our images into       and    subregions and improved our isolated texture recommendation accuracy to approximately
    

   

final algorithm

after identifying these features and optimizing their extractions  we worked to develop our algorithm to compare shoes based on the similarity of these features  initially  we hypothesized that our data and the problem we
were attempting to solve would be conducive to a clustering algorithm based on the features of each shoe because
it would allow us to find the intrinsic groupings or structure in the data if it existed  unfortunately  we quickly
discovered that such a structure did not seem to exist 
our attempts to run k means on our feature set yielded
very poor results as the clusters determined did not result
in recommendations that humans would label as similar
shoes and instead resembled what seemed to be an almost random assortment of shoes  as a result  we abandoned the more traditional machine learning clusteringbased approaches and developed our own filtering based
algorithm for determining similarity  as shown in algorithm   

 

results

because of the unstructured nature of this problem  determining a system for measuring the accuracy of our
 

fialgorithm    shoe recommendation algorithm
load image
load image mask
for each shoe    image in dataset do
shape scores shoe  
nonzero image mask  shoe mask 
end
for each shoe in top fourth of shape scores by num of
shoes in the same cluster center do
texture scores 
comparehist image lbps  shoe lbps 
end
for each shoe in top third of texture scores do
overall scores    color distance  
end
print top    shoes from overall scores

figure    this is a randomly selected output of our recommendation system where the shoe on the left is the
original image that the user queried and the   shoes on
the right are the top   recommended shoes 
problem  however  we also have room for improvement  beyond improving the        recommendation
error rate in each of our categories  our algorithms are
not ready for use with images that are not as clean as
the ones in our dataset  we believe that this problem
may be significantly more difficult when dealing with
data that is less homogenous and we could face serious
challenges in dealing with images involving inconsistent
lighting  positioning  or orientation  in particular  our algorithm for shape is quite dependent on positioning and
orientation  while our algorithms for color and texture
are particularly dependent on lighting and would require
similar orientation for any sort of reasonable comparison between two images  as such  future extensions of
our work include working with noisy images  extending
our analysis to other types of retail goods  e g  shirts 
pants  jackets  etc    and potentially exploring other algorithmic approaches such as deep neural networks  in the
coming months  we look forward to making our similarity score calculations more accurate  dealing with noisy
images  and building out a mobile application with this
technology that people can use to help them shop in the
brick and mortar setting 

recommendation engine was not possible in a traditional
sense  thus  in order to appropriately evaluate our system  we calculated accuracy by simulating the way a user
might judge the accuracy of our system  to do this  we
ran through a randomly selected  statistically significant
sample of images in our dataset and examined the    best
matches for each of these images  we then judged each
of the recommendations on whether it closely matched
the original shoe in each category of shape  color and texture  and computed a score from      for each of these
categories based on the number of shoes in the top   
that closely matched the original shoe in the respective
category  in other words  for each category of each imx
age  we had a score that was   
where x was the number
of recommended shoes that closely resembled the original shoes traits in that category  we then averaged the
ratings for all the shoes in order to receive an accuracy
score for our algorithm in suggesting similar textures 
colors  and shapes  thus  in total  our accuracy for each
attribute was
 recommended shoes that matched category
 total recommendations

references
    basic thresholding operations   opencv documentation 
http   docs opencv org doc tutorials imgproc threshold threshold html 
    cielab
color
models
technical
guide 
http   dba med sc edu price irf adobe tg models cielab html 

   

    lbp h file reference  http   www vlfeat org api lbp  h html 
    national
shoe
retailers
http   www nsra org  page about us 

using this method  we were able to determine our recommendation engine achieved     accuracy in suggesting similarly shaped shoes         accuracy in suggesting similarly colored shoes  and        accuracy in suggesting similarly textured shoes  figure   demonstrates
a standard output from our recommendation system 

 

association 

    opencv
histogram
documentation 
http   docs opencv org modules imgproc doc histograms html 
    scipy
cluster
vq
kmeans
documentation 
http   docs scipy org doc scipy reference generated 
scipy cluster vq kmeans html 
    p ing c huan wang   s tephen m iller   m  f  t  d   and
a bbeel   p  perception for the manipulation of socks 

conclusion

    s  l azebnik   c  s   and p once    j  beyond bags of features 
spatial pyramid matching for recognizing natural scene categories 
in proceedings of the ieee conference on computer vision and
pattern recognition  new york  june       vol  ii  pp            

as briefly alluded to in our results section  our initial results are encouraging in that they suggest that we have
developed a fairly successful first cut for attacking this
 

fi