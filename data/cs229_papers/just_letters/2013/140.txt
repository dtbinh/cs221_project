recognition of handwritten mathematical symbols with phog
features
nicolas d  jimenez lan nguyen
abstract converting handwritten formulas to latex
is a challenging machine learning problem  an essential
step in the recognition of mathematical formulas is the
symbol recognition  in this paper we show that pyramids
of oriented gradients  phog  are effective features for
recognizing mathematical symbols  our best results are
obtained using phog features along with a one againstone svm classifier  we train our classifier using images
extracted from xy coordinates of online data from the
chrohme dataset  which contains       character samples  we limit our analysis to    characters  the classifier
achieves a     generalization accuracy on these characters
and makes reasonable mistakes  we also demonstrate that
our classifier is able to generalize gracefully to phone
images of mathematical symbols written by a new user  on
a small experiment performed on images of    handwritten
symbols  the symbol recognition rates is       the code is
available at  https   github com nicodjimenez 
hand tex

i ntro
most previous research on mathematical formula
recognition has focused on online data  i e  the writers
strokes are recorded on a computer or tablet as a
sequence of xy coordinates  using such datasets presents
many advantages when trying to recognize full formulas 
most importantly  strokes can be individually labelled
using a gui based data collection engine  this makes
the location of each symbol easy to parse for a learning
algorithm  the chrohme dataset  downloadable at 
http   www isical ac in crohme    which
has become a standard for mathematical equation recognition  uses online data 
on the other hand  the restriction of mathematical formula recognition to online data limits the usefulness of a
mathematical formula recognition system  transcribing
latex expressions from handwritten sources can be a
painful experience even for seasoned veterans  it would
be very desirable for university students to be able to
take pictures of their homework using their phone and
have an engine return a typeset document  potentially 
such an engine could also automate mathematical note
taking in classrooms so that students can focus on the
content without the distraction of copying formulas 
in this paper we take a first step towards fulfilling
such an objective  we show that phog features used
in conjunction with a linear svm classifier is a highly
effective approach to recognizing mathematical symbols
extracted from online data  we then present encouraging
preliminary results of an opencv based pipeline that
uses images taken from a phone 
data p reparation
we use the crohme     dataset  downloadable at 
http   www isical ac in crohme   for our

project  which has become a standard for mathematical
equation recognition  this dataset contains       characters and      equations  since the data is online  it
provides a list of xy coordinates drawn by the user for
each symbol as well as the corresponding labels  each
symbol is comprised of multiple strokes  the dataset is
given in inkml format  which is an xml variant  a
description of the dataset was published in     
in order to create images from these xy coordinates 
intermediate xy coordinates were first linearly extrapolated from consecutive xy pairs  a properly scaled
bitmap was then created from these xy coordinates and
scaled to fit in the middle    pixel by    pixel subbox
of a    pixel by    pixel box  we do this so that if the
strokes are smoothed or dilated  the expanded symbol
will still be contained in the larger    pixel by    pixel
box  the symbol was centered in the    pixel by   
pixel subbox via its own bounding box  we note that
in some cases it may be beneficial to center the symbol
via its center of mass      these data preprocessing steps
are shown in figures     figures    finally  we apply
a gaussian smoothing filter with        to the pixels
and then normalize the pixel intensities to norm    this
process results in images such as the ones seen in figure
  in this paper  we do not consider image deskewing 
another common normalization step considered in other
papers 
we note that certain symbols such as sin  cos  tan
were excluded from this analysis  thus  we consider a
total of    symbols 

fig    

raw xy coordinates for  example

r ecognition
we explored three different feature representations for
the symbol images 
the first feature representation we consider is simply
the raw pixel intensities  to represent this as a feature

fiwe test a linear one vs one svm classifier as well
as a k nn classifier as implemented by the scikit learn
python library      to evaluate the performance of our
svm classifier  we perform three fold cross validation
on the data using a    hold out set  the results are
shown in table i  since phog features exhibit superior
performance  we compute the generalization error as a
function of the training set size using phog with a
linear svm as well as a k nn classifier and three fold
cross validation  these results are shown in figure   
fig    

linearly interpolated xy coordinates for  example

raw pixels   svm         pixels  c        
hog   svm  cell size        pixels  c   
phog   svm cell sizes                  pixels   c   
phog   k nn  k    

accuracy    
  
  
  
  

table i
t est set accuracy with three fold cross validation
using different representations of the symbol bitmaps  

f or all svm s   the one vs all approach was used  

fig     bitmap created from interpolated xy coordinates  the symbol
is centered in a    by    bitmap via its bounding box

vector  the bitmap representing the image in concatenated into a single vector  since we are using       
pixels to represent the images  the total size of the
feature vector is      
the second feature we explore is histograms of oriented gradients  hog   the idea behind hog feature
    is that an image can be represented by a localized
distribution of intensity gradients  thus hog features
appear well suited to handwriting recognition  as the
intensity gradients in a image of a handwritten symbol
will be due to the strokes themselves  in particular 
hog is implemented by dividing an image into small
connected regions known as cells  for each cell a
histogram of oriented gradients is created by compiling
the gradients of each pixel in a particular cell and
using these gradients to vote in an edge orientation
bin  in this study we use   edge orientations  the
histograms for all cells is then concatenated into a single
feature vector  an important parameter affecting this
computation is the cell size which is simply the pixel
dimensions across which pixel gradients will be pooled 
for the hog features  we found that a cell pooling size
of      worked best  we used an implementation of
hog features which is part of the scikit image python
library  this cell pooling size resulted in feature vectors
of length     
the hog features are easily generalized to pyramids
of hog features  phog       for phog features  hog
feature maps using different cell sizes are concatenated
into a single feature vector  this method enables us to
compute hog maps at different image scales  we found
that the phog features worked best when using we were
combining cell pooling sizes of          and      
this resulted in feature vectors of length     

fig     classification accuracy using phog features when using
different training set sizes 

a nalysis
from figure   we see that there is a strong trend
towards greater performance as the training set becomes
larger  this trend is apparent even as nearly all the data
is used for training the classifier  thus the generalization
error does not appear to have approached an asymptotic
limit  this suggests that incorporating more data would
continue to improve the performance of our classifier 
it is also unclear from this figure whether one would
expect k nn or linear svm to have better asymptotic
performance  although k nn has stronger theoretical
asymptotic guarantees and scales more naturally to massive training sets 
in figures we show the first few test set errors on
a particular iteration of the cross validation trials used
to generate the above table for the svm classifier  it
appears that the classifier generally makes reasonable
mistakes 
 

fi a    instead of y

 b    instead of  

 d    instead of  

 e  z instead of  

 f    instead of  

 g  y instead of y

 h    instead of t

 i    instead of  

fig    

examples of mistakes made by the algorithm 

a pplication to p hone c amera i mages with
n ew u ser

we perform this last step so that the symbol examples
taken from pictures can be properly compared to the
symbols extracted from the chrohme dataset  which
indeed consist of   pixel thick skeletons before the
application of the gaussian filter and normalization 
the steps are illustrated in figures        we were
able to easily attain      segmentation accuracy with
the images taken although this task was substantially
facilitated by the fact we use clean images with similar
lighting and writing conditions  our symbol classifier
attained     accuracy when classifying the    symbols
making up our dataset  although this is a small sample 
the results suggest that phog features are a viable
method for recognizing mathematical symbols in images
as well  we make the following observations 

to see how well our best phog based classifier
generalizes to phone images  we generate    handwritten
symbols by sampling randomly and with replacement
from the the symbols in the test data  the symbol strings
were written down on white paper using a black fountain
pen and pictures were taken using a htc sensation
smart phone  the person writing down these equations
did not contribute any training examples to the dataset 
we then apply the following steps using the opencv
    and scikit image     open source libaries to segment
the images into constituent symbols 






 c    instead of z

we blur the image to remove noise  opencv 
function  gaussianblur 
we apply an adaptive threshold to binarize the
image  opencv  function  adaptivethreshold 
we dilate the image to ensure symbols are fully
connected  opencv  function  dilate 
segment image by finding connected components
 opencv  function  findcontours 
skeletonize the image  scikit image function  morphology skeletonize 





 

some training data from the person writing the
symbols would probably improve the classification
accuracy  it is reasonable to expect the classifier
would have better performance if it could have
samples of the current writers handwriting 
more data seems necessary to build a robust system  given the great variety of ways a single
symbol may be written  a larger training set would
be necessary to train a classifier able to recognize
symbols in the variety of ways they may be written 

fiof classifying mathematical symbols  our best results are
obtained on online data such as the data that makes up
the chrohme dataset  where the generalization error
is approximately      when the classifier is used on
symbols in images of a new users handwriting  the
generalization performance drops to approximately     
in future work  image deskewing and incorporating
new features and classifiers should be explored  while
phog features appear to work well  classification accuracy could probably be improved if other feature
maps were considered simultaneously  for example  we
have observed that a common error is the confusion
between   and   or    see figures    it seems likely
that using the central moments of the image would
be useful information for disambiguating between these
symbols  the central moments are invariant to bounding
box repositioning and are able to properly characterize
the orientations of such symbols in the presence of noise 
on the other hand  phog feature vectors may be very
similar for a bitmap of a   and a    as these will contain
much overlap 
in addition  modern unsupervised feature learning
methods such as restricted boltzmann machines and
sparse autoencoders should be explored  recently  such
methods have been shown to exhibit classification performance that is superior to hand crafted features such
as hog in many visual recognition tasks  it would be
interesting to explore hog variants with parameters
learned in an unsupervised manner 
overall  we noticed the classifier was quite sensitive to
perturbations of the positioning of symbols within their
bounding box  this is highly undesirable  to circumvent
this  many authors expand the training set by jittering 
i e  applying random small shifts of images in the
training set within a single bounding box  this strategy
should be explored in future work on mathematical
equation recognition  another approach may be to use
a distance measure between hog feature vectors that is
invariant to small translations 
the next step in building a full system for recognizing
handwritten mathematical equations is to infer the intended latex expressions from the spatial relationships
between the predicted symbols  approaches using  d
context free grammars are presented in     and     and
will be explored in future work 

fig     rawrimage of equation taken with a htc smartphone camera
representing  x   b

fig    

fig    

image after blurring step 

image after adaptive thresholding step 

fig    

image following dilation step 

r eferences
    opencv   open source computer vision  http   opencv 
org  
    scikit image   image processing in python 
http   
scikit image org  
    navneet dalal and bill triggs  histograms of oriented gradients
for human detection  in computer vision and pattern recognition        cvpr       ieee computer society conference on 
volume    pages         ieee       
    yann lecun  leon bottou  yoshua bengio  and patrick haffner 
gradient based learning applied to document recognition  proceedings of the ieee                        
    subhransu maji and jitendra malik  fast and accurate digit
classification  technical report ucb eecs           eecs
department  university of california  berkeley  nov      
    harold mouchere  christian viard gaudin  dae hwan kim 
jin hyung kim  and utpal garain  icfhr      competition on
recognition of on line mathematical expressions  crohme       
in frontiers in handwriting recognition  icfhr        international conference on  pages         ieee       

fig      image segmentation as computed by opencv  findcontours
function 

c onclusion
using phog features in tandem with a one against
one linear svm classifier appear to be effective method
 

fi    f  pedregosa  g  varoquaux  a  gramfort  v  michel  b  thirion 
o  grisel  m  blondel  p  prettenhofer  r  weiss  v  dubourg 
j  vanderplas  a  passos  d  cournapeau  m  brucher  m  perrot 
and e  duchesnay  scikit learn  machine learning in python  
journal of machine learning research                    

 

fi