clustering of state vectors from cfd simulations for
construction of local reduced order models
kyle washabaugh
stanford university  stanford  ca              usa
a novel method for clustering computational fluid dynamics  cfd  solution vectors with the
goal of building efficient local reduced order models  roms  is proposed  in this method  the
clustering process is accelerated through the introduction of triangle inequality bounds to avoid
unnecessary computation during k means  and the accuracy of the resulting rom simulation is
improved through the introduction of a semi supervised clustering algorithm  the performance
benefits of the proposed method are demonstrated using two data sets generated from cfd simulations  for the larger of the two datasets the proposed method was able to cluster     gigabytes
of data       state vectors  into five clusters in under two minutes using     cpus 

i 

introduction

discretizing the navier stokes equations in space and time can easily produce models with many millions of degrees
of freedom  and has given computational fluid dynamics  cfd  a reputation for requiring vast computational
resources  because of this inherent high dimensionality  cfd problems are an intriguing application for model
order reduction  mor  methods 
the goal of mor is to greatly reduce the dimensionality a model by exploiting relationships between the degrees
of freedom  this implies that a high dimensional model  hdm  is a strong candidate for mor if its trajectories are
mostly confined to low dimensional affine subspaces of the state space  when this is the case  it is possible to project
the equations of the high dimensional model  hdm  onto the low dimensional subspace spanned by its trajectories 
greatly reducing the number of degrees of freedom in the model while retaining the accuracy of the original hdm   
this low dimensional projection subspace is typically represented by a reduced order basis  rob   which is
constructed from training snapshots of the fluid state that are precomputed using the hdm and then compressed
using a procedure such as proper orthogonal decomposition  pod   
the resulting reduced order model  rom  can efficiently produce accurate responses within the projection subspace  however  a fundamental trade off is that the rom will never be able to explore portions of the state space
outside this subspace  unfortunately  this trade off greatly complicates the task of building roms for parameterdependent problems  the complication arises because  although the trajectories of cfd models are typically confined
to low order subspaces  these subspaces can be strongly parameter dependent  as a result  a rom built for mach    
would not necessarily be able to capture the behavior at mach     
the simplest solution to this problem is to construct a global rob that includes the necessary projection
subspaces for all operating points of interest  typically  the hdm is evaluated at a representative set of operating
points to gather snapshots  and the rom is then queried for for predictive operating points  when a single rob is
used to reduce the dimension of an hdm  it must capture the dynamics of the hdm along the entire trajectory of
interest  this can result in a very large rob  and thus an inefficient reduced order model  an issue that is especially
troublesome for design applications  where the rob needs to capture the dynamics of the hdm at multiple design
points 
the mor method introduced in     alleviates this problem through the use of multiple local robs  in this
approach  a local rob is selected at each time step of the rom simulation based on the current state of the system 
ideally  each local rob captures only the local dynamics at a given point of the state space  resulting in small and
accurate models  such a concept is particularly well suited for the proper orthogonal decomposition  pod  method
in which the rob is built from snapshots of the system taken at various locations of the state space 
this local rob approach takes advantage of the fact that the state space of a nonlinear dynamical system
can often be partitioned into distinct characteristic regimes  in the context of cfd simulations  these state space
 graduate student  department of aeronautics and astronautics  william f  durand building  room      stanford university 
stanford  ca           

  of  
cs     machine learning   final project report

fipartitions could distinguish  for example  between solutions that are dominated by laminar vs  turbulent flow 
subsonic vs  supersonic flow  or transient vs  limit cycle behavior  as the state of the system transitions from one
regime to another during a rom simulation  an appropriate local rob can be chosen that best captures the physics
of the current system  and omits information that is not immediately relevant 
this work focuses on method of partitioning the cfd state snapshots into natural clusterings using the kmeans algorithms  due to length constraints  this write up will focus on the proposed clustering method and the
mathematical framework for local mor will unfortunately need to be left to the references  e g        this write up
is organized as follows  section ii describes a proposed approach to speed up k means using the triangle inequality 
section iii describes a partially supervised version of the k means algorithm should prove useful for creating accurate
roms  and the remaining two sections show numerical results for the proposed methods 

ii 

accelerating k means using the triangle inequality

in this work  it is proposed to accelerate the k means clustering algorithm using the triangle inequality to skip
unnecessary distance calculations  the idea is very simple  if the distances from a datum to the cluster centers were
calculated exactly at some previous k means iteration  and the uncertainty in these distances is incremented at each
subsequent iteration  then it is often possible to rule out that the datum has changed clusters without recalculating
any of the distances exactly  since there are no approximations introduced  it is easy to show that the iterations
of the accelerated algorithm are identical to those of the non accelerated algorithm  just substantially cheaper  
pseudo code for this method is included as alg    
not surprisingly  i was not the first person to think of this approach  it appears to have first been introduced
in      by elkan      to the best of my knowledge  my algorithm is subtly different than those that have been
proposed before due to the treatment of the bounds  in all methods that i have seen  the bounds are incremented
whenever a cluster center moves  and eventually become very loose  in my algorithm i also increment the bounds
whenever a cluster center moves  but before every k means iteration i evaluate the bounds exactly to prevent them
from becoming too loose  this is admittedly a minor detail  but numerical results show that the tighter bounds
result in significantly fewer unnecessary distance calculations 

iii 

semi supervised clustering for roms

as mentioned in the introduction  some degree of robustness to parameter changes can be built into a rom if it
is constructed using training simulations from a variety of operating points  for example  different free stream mach
number for a fluid simulation   the idea is that the robs will then have information corresponding to different
parameters  and should be more parametrically robust as a result  this approach can be sabotaged by a poor
clustering algorithm  however 
as will be shown in section v  it is often the case the snapshots from a single simulation are more similar to
themselves than they are to the snapshots gathered at other operating points  the result is that clustering with
the standard k means algorithm tends to produce some clusters that contain snapshots from only a single training
simulation  resulting in reduced order bases that are not likely to be parametrically robust 
in this work  i propose an algorithm that constrains the clusters to contain snapshots from every training simulation  this is performed by first clustering the data from each training simulation separately into the desired
number of clusters  and then taking two datasets at a time and performing a  low dimensional  combinatorial search
to establish which clusters from the two data sets should be agglomerated  this process is repeated until each cluster
contains snapshots from every training simulation  i have referred to this approach as semi supervised clustering
because i am introducing additional information into the algorithm to obtain clusters that are better suited for my
application  pseudo code for this method is included as alg    

iv 

accelerated k means application  unsteady ahmed body

the first dataset was generated using a single unsteady simulation of an ahmed body  which is a common cfd
benchmark in the automotive industry for turbulent flow around automobiles  this simulation was run at low mach
number with a reynolds number of            i used a des turbulence model for this simulation due to the massive
flow separation that occurs on the aft body  the fluid mesh has           fluid nodes  resulting in            degrees
of freedom in the hdm system  the dataset of      solution vectors totals     gigabytes  a detail of the mesh
is shown in fig    a   the drag history of the unsteady simulation is shown in fig    b   and a two dimensional
representation of the clustered            dimensional data is shown in fig    c   the color indicates the cluster  

  of  
cs     machine learning   final project report

fialgorithm   accelerated k means using the triangle inequality
input  state snapshots s
clusters
clusters
output  state clusters  wj  n
  state cluster centroids  wj  n
j  
j  
  
  
  
  
  
  
  
  
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

   

clusters
initialize the cluster centroids randomly as  wj  n
j  
while  k means has not converged  do
if  using tight er  bounds  then
store cluster centroids from this kmeans iteration 
end if
if  this is the first iteration  then
   
calculate di j   the distance from each snapshot si to each centroid wj
initialize ui j   the uncertainties associated with di j   to zero
   
clusters
assign snapshots to nearest cluster and calculate  wj  n
j  
else
for i           nsnaps do
for j           nclusters do
set c as the current cluster of snapshot si
if      di c  di j   ui c   ui j   then
update di c and set ui c    
if      di c  di j   ui j   then
update di j and set ui j    
if      di c  di j   then
assign snapshot i to cluster j
update cluster centers  increment the corresponding uncertainties for all snapshots  u j   u c  
end if
end if
end if
end for
end for
end if
if  using tight er  bounds  then
evaluate all ui j exactly using the current cluster centroids and the stored cluster centroids
end if
end while

algorithm   semi supervised clustering for roms
sets
input  sets of state snapshots  si  n
i  
clusters
cj  nclusters and centroids  w
b j  n
output  agglomerated state clusters  w
j  
j  
   for  each snapshot set index i  do
clusters
clusters
using accelerated k means  algorithm   
  
find  wi j  n
and  wi j  n
j  
j  
   end for
clusters
clusters
cj  nclusters    w  j  nclusters and  w
b j  n
   set  w
   w  j  n
j  
j  
j  
j  
   for  each snapshot set index i       do
  
for  each cluster index  j  do
clusters
b j to every centroid  wi k  n
  
calculate and store the distance from centroid w
k  
  
end for

  

perform a  small  combinatorial search to find the set of indices k that minimizes

nclusters
p
j  

   
   

clusters
cj  nclusters and  w
b j  n
agglomerate the paired clusters and update  w
j  
j  
end for

  of  
cs     machine learning   final project report

b j  wi k k  
kw

fithe accelerated k means algorithms converged using roughly half the distance calculations as the standard k means
algorithm  as reported in table   

 a  detail of ahmed body mesh

 b  drag history of simulation

 c   d representation of clustered data

figure    ahmed body dataset

table    performance of accelerated clustering algorithms for ahmed body data

k means algorithm

standard

accelerated  loose bounds 

accelerated  tighter bounds 

k means iterations
distances computed
distances skipped
wall clock time      cpus 
speedup

  
      
 
       sec
 

  
      
      
       sec
     

  
      
      
       sec
     

v 

semi supervised clustering application  drag polars at variable mach

the second dataset was generated using three separate quasi steady simulations where a naca     airfoil at
m                   and re          was swept from an angle of attack of      degrees to    degrees in increments
of     degrees  as the angle of attack and mach number increase  the shock on the airfoil strengthens considerably 
there is no shock present for any of these mach numbers at      degrees  but a very strong shock present for
      degrees  especially for the m        simulation   i used a spalart allmaras turbulence model and a wall
model for these simulations  the fluid mesh has        fluid nodes  resulting in         degrees of freedom in the
hdm system  a detail of the mesh is shown in fig    a  and the lift and drag history of the three simulations is
shown in fig    b  

lift

mach     
mach     
mach     

drag

 a  detail of naca     mesh

 b  lift vs  drag for simulations

figure    naca     dataset

  of  
cs     machine learning   final project report

fifigure   a  shows a two dimensional representation of the data which was clustered using the standard k means
algorithm  whereas fig    b  shows the results for the proposed semi supervised clustering method  examining the
results  it appears that the standard k means algorithm has found clusters that describe the flow physics well  but
that would be unlikely to lead to a parametrically robust rom  the snapshots corresponding to mach      at a high
angle of attack are placed in their own cluster   the proposed semi supervised k means algorithm  however  finds
clusters that contain snapshots from every simulation and would likely lead to a more useful rom 
mach     
mach     
mach     

mach     
mach     
mach     

 a  standard k means

 b  semi supervised k means

figure     d representation of clustered data clustered for the naca     dataset  the color indicates the cluster
number  from top to bottom  these lines correspond to the mach       mach       and mach      training simulations 

vi 

conclusions and future work

a method for clustering computational fluid dynamics  cfd  solution vectors with the goal of building efficient
local reduced order models  roms  was proposed  in the proposed method  the clustering process is accelerated
through the introduction of triangle inequality bounds to avoid unnecessary computation during k means  and the
accuracy of the resulting rom simulation is improved through the introduction of a semi supervised clustering
algorithm  the proposed method was implemented using c   mpi to allow for efficient parallel computation 
applications to two datasets generated by cfd simulations demonstrate that the proposed method is substantially
faster than the standard k means algorithm  by at least a factor of two for all simulations that i ran   and is able
to produce clusters that are better suited for constructing parametrically robust roms than the standard k means
algorithm 

references
  rewienski  m  and white  j   model order reduction for nonlinear dynamical systems based on trajectory piecewise linear approximations  linear algebra and its applications  vol       no             pp         
  lieu  t  and farhat  c   adaptation of aeroelastic reduced order models and application to an f    configuration  aiaa journal  
vol      no           pp           
  amsallem  d  and farhat  c   interpolation method for adapting reduced order models and application to aeroelasticity  aiaa
journal   vol      no           pp           
  amsallem  d   cortial  j   and farhat  c   toward real time computational fluid dynamics based aeroelastic computations
using a database of reduced order information  aiaa journal   vol      no           pp           
  chaturantabut  s  and sorensen  d   nonlinear model reduction via discrete empirical interpolation  siam journal on scientific
computing  vol      no           pp           
  carlberg  k   bou mosleh  c   and farhat  c   efficient non linear model reduction via a least squares petrovgalerkin projection
and compressive tensor approximations  international journal for numerical methods in engineering  vol      no           pp         
  sirovich  l   turbulence and the dynamics of coherent structures  part i  coherent structures  quarterly of applied mathematics 
vol      no           pp         
  amsallem  d   zahr  m   and farhat  c   nonlinear model order reduction based on local reduced order bases  international
journal for numerical methods in engineering  in press        pp      
  elkan  c   using the triangle inequality to accelerate k means  proceedings of the twentieth international conference on
machine learning  icml         pp     

  of  
cs     machine learning   final project report

fi