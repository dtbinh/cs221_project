whisky recommender
alex omid zohoor  ashkan eghtesadi

abstract
a whisky recommender system for users at
whiskybase com is implemented  two separate
algorithms are designed using content based filtering
and collaborative filtering  these two algorithms are
then optimally combined in a linear blend to
maximize performance  the final algorithm achieves
a     improvement over predicting the average
rating assigned to a whisky 

   introduction
we aim to build a whisky recommender
system to predict the rating that a user would assign
to a particular whisky  broadly  there are three main
approaches to such recommendation systems 
content based filtering  collaborative filtering  and
hybrid  combining content based and collaborativebased filtering       we have separately implemented
and optimized
content based filtering and
collaborative filtering algorithms  and then combined
them into a hybrid model 

   data
we collected data from whiskybase com
the biggest whisky database of the world
which is a website where users can rate scotch
whiskies on a scale of   to      there are a total of
      active users and        unique whiskies that
have been rated  since the data is not publicly
available in a clean form  we wrote python scripts to
scrape and organize relevant data from the website 
the vast majority of users in our dataset
rated relatively few whiskies  as shown in the
histogram below  there is a roughly exponential
relationship between the number of ratings  per user 
and number of users in our dataset 

we computed the average number of ratings
per whisky to be around    with a maximum of    
ratings for the most popular whisky 
we also collected the average rating for
each whisky  across all users   as provided on
whiskybase com  we assume that most users
consider this metric when deciding whether they
would enjoy a particular whisky  thus  we use this
metric to define the target performance of our
recommendation system  we aim to build a
recommender system that can better predict a users
rating of a whisky than that whiskys average rating 

   content based filtering
    linear regression
in content based filtering  we train a model
for each user using only that users previous whisky
ratings  to gauge the achievable performance of
content based filtering  we focus on the user with the
most ratings          whom we refer to as the golden
user  for each of the golden users rated whiskies  we
extract features and train a model     based on linear
regression  in which 
   

feature 



 

in all cases  we include an additional
  known as the intercept term 

    features and results
since our data was not provided  but needed
to be carefully scraped from whiskybase com  we
started with the following initial features which could
be most easily obtained  age  alcohol content  and
price  to boost performance  in all subsequently
described linear regression model training   we
perform basic feature selection by iterating through
all subsets of features  and choosing the one that
minimizes leave one out cross validation  loocv 
test error  we use loocv  rather than hold out cross
validation  since most users have far fewer ratings
than the golden user  using these initial features  we
generated the following learning curve 

fiusing this more complete set of features  we
obtained the following learning curve 

this learning curve shows a large gap
between the test error and target performance  the
error obtained by simply predicting each whiskys
average rating   which suggests high bias      to
address this  we added quadratic features and
obtained the following learning curve 

as expected  this reduced training error  but
actually increased test error  so using higher order
features lead to over fitting and increased variance 
based on these analyses  we concluded that a larger
set of features was needed  thus  we developed a
more sophisticated script to scrape the following
features from each whiskys associated page on
whiskybase com 
  
  
  
  
  
  
  
  
  
   

number of notes  user comments 
regional district of origin
alcohol content    abv 
average rating
page views
availability
size  ml 
price    
rank
age

adding richer features significantly reduced
bias  on this user  our content based model achieved
a    improvement in rmse over simply predicting
each whiskys average rating 
    feature preprocessing
in order to expand our feature set  it was
necessary to perform basic feature pre processing 
certain raw features were not available for all
whiskies  for example  a small number of whiskies
had unlisted age  rank  or price 
many young or blended whiskies are
intentionally released without an age statement  thus 
for age  we replaced missing values with a default
value of   years  which represents a reasonable lower
bound on typical whisky age  for all other unlisted
features  we replaced missing values with the
features average value 
unlike the other nine features  the raw
regional district of origin feature was not a
numerical quantity  but rather a text string with one
of sixteen unique values  to quantify this feature  we
assigned it a binary value    if district x   
otherwise   using loocv on the golden user  and
sweeping the district associated with this binary
feature  we generated the following plot 

fibased on this plot  we associated the most
discriminative district      with our binary regional
district of origin feature  this district corresponds to
the islay region of scotland  which makes intuitive
sense  as the islay region is distinctly known for
producing intensely smoky and peaty whiskies     
    overfitting considerations
since many users have fewer ratings than
available features       we also analyzed the effect of
overfitting  even though our feature selection
chooses the subset of features that yields the lowest
test error  as opposed to training error   if we allow
the number of features to exceed the number of
training examples  we still run the risk of overfitting
our model  to illustrate this  we randomly chose
subsets of   and    ratings from our users       total
ratings  we then performed feature selection on the
subsets of   and    ratings  imposing a maximum
allowed number of features  finally  we performed
loocv on the full set of ratings using the features
selected from each subset 

stored them in an m x n matrix m  we have m  
      active users and n          rated whiskies with
        total ratings  there are over    million
entries and only about         are nonzero  so we
have a very sparse matrix       density of nonzeroes   therefore  it is attractive to use low rank
approximation as a prediction algorithm     
formally  for matrices
and
  we
aim to minimize the objective function 
 

 





 

 

where we introduce  as a regularization parameter 
and define the frobenius norm   as 
for
any matrix   we can solve this by iterating through
the rows of x and y  denoted as xi and yj  as such 
 

 

 
 


and solving for and using least squares  for this
setting  we define a new rmse  let  s  denote the
size of the training set  then 


  

  where

is the rating user i

gave to whisky j and  is our prediction  to obtain
training and test sets  we used     hold out crossvalidation 
    results
since we do not know the rank a priori  we
swept rank and found that a rank of     could
sufficiently approximate m  as shown in the
following plot 

the plot above shows that although
increasing the maximum number of allowed features
monotonically reduces the test error for the subset  it
eventually tends to increase the test error on the full
set  the minimum test error for the full set roughly
corresponded to setting the maximum number of
features to one half of the training set size  thus  for
users with fewer ratings  m  than available features


 n   we set 

   collaborative filtering
    background
in the realm of collaborative filtering  we
use the whisky ratings of the community to predict
the whisky ratings of individual users  thus  to begin 
we construct no feature vectors and instead rely
solely on user ratings  to do so  first we collected all
the ratings in the whiskybase com database and

the following plot shows typical
convergence performance of the algorithm  x and y
are initialized using the svd of m  and we observe
convergence within around   iterations 

fi   results and conclusions
in order to test the performance of our
various methods across a full spectrum of user
demographics  we randomly selected    users    each
from   subgroups   the subgroups  based on total
ratings per user  were                     and      
the graph below summarizes the achieved
performance  

the red dashed line in the previous plot
shows the target performance  the error obtained by
simply predicting each whiskys average rating  
which this algorithm is able to beat  finding an
optimal value      of the regularization parameter 
increases our performance further  as shown in the
following plot 

the final test error is        which
represents a    improvement in rmse over simply
predicting each whiskys average rating 

   hybrid
combining content based and collaborative
models has been shown to improve the performance
of recommender systems      we implemented a
nave hybrid model by using a simple linear blend of
our content based and collaborative models 
   

   

 

 

   

since the performance of content based vs 
collaborative models varies from user to user  we
swept the weighting parameter  c  to optimize overall
performance for each user 

it seems that in general  the content based
model achieves better performance than the
collaborative model  this is especially apparent for
users with fewer ratings  which seems to make sense 
as beginner whisky drinkers may exhibit stronger
biases that deviate from the norm  which are more
easily captured by a content based model  for
example  one common trend would be for beginner
whisky drinkers to overrate whiskies  due to a lack of
experience 
to support the claim that the content based
model performs better on users with fewer ratings
due to stronger biases or limited experience as
opposed to overfitting  we compared the average test
error for users with   or    ratings with the average
test error for the random subsets of   and    ratings
taken previously from the golden user        ratings  
indeed the test error for users with   or    ratings
 rmse         was less than the test error for the
subsets of   and    ratings taken from the golden
user  rmse         
it should be noted that although the contentbased model generally performs better  the
collaborative model does still significantly improve
performance when combined in the hybrid model 
the graph below shows that the optimal weighting of
the hybrid model varies  but generally favors the
content based model  as expected 

 

please see appendix for details on system
performance measurement methodology 

fiappendix

on average  the final hybrid model achieved
a     improvement over simply predicting each
whiskys average rating 

   future work
    further testing
in the future  we plan to first evaluate the
developed content based  collaborative  and hybrid
models on a larger subset of users to reduce noise 
although    users is a reasonable starting point 
increasing the size of this subset would obviously
increase our confidence in the measured system
performance 
    content based filtering
in order to improve content based filtering
performance  we plan to add higher order features  of
course  since the    linear features would generate a
very large number of higher order features  we would
also need to implement a more sophisticated version
of feature selection  such as forward search  to reduce
computational overhead 
    collaborative filtering
though we initially implemented
collaborative filtering using a low rank
approximation algorithm  we plan to also explore
other methods  such as k nearest neighbors  k nn  
    hybrid
once we have implemented k nn
collaborative filtering  we could also implement a
hybrid approach known as content boosted
collaborative filtering  in this approach  all zero
entries in the original sparse ratings matrix are
replaced with their content based predictions  then
k nn collaborative filtering is performed on this
dense matrix  it has been shown that this approach
can outperform a simple linear blend      like the one
we originally implemented 

when individually evaluating the contentbased filtering and collaborative filtering models  we
used loocv and     hold out cross validation 
respectively  however  in order to evaluate a hybrid
model  we needed to use a consistent methodology
for both algorithms before linearly blending them 
for the sets of users with   and    reviews  we
performed loocv on both the content based method
and the collaborative method  for the sets of users
with              and      reviews  we performed
    hold out cross validation on both methods
 using identical holdout sets   we chose not to
perform loocv on the sets of users with more
reviews  due to the increased time required for
computation and the diminishing value of loocv
for larger datasets 

references
    jafarkarimi  h   sim  a t h   and saadatdoost  r  
a nave recommendation model for large
databases  international journal of information and
education technology  june     
    ng  a   advice for applying machine learning 
cs     machine learning  stanford university 
     
    jackson  m   michael jackson s complete guide
to single malt scotch   running press book
publishers         pp     
    montanari  a   recommendation systems 
ee   b  inference  estimation  and information
processing  stanford university       
    bell  r m   koren  y   and volinsky  c  the
bellkor solution to the netix prize  technical
report  at t labs       
http   www research att com volinsky netflix
    melville  p   mooney  r  j   and nagarajan  r 
content boosted collaborative filtering for
improved recommendations  proc  of the   th
national conference on articial intelligence
 aaai       pp              

fi