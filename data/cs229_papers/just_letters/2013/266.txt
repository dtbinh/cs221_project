unsupervised approaches to detecting anomalous behavior in the bitcoin
transaction network
jason hirshman
stanford university
department of mathematics
stanford  ca  usa
hirshman stanford edu

yifei huang
stanford university
department of computer science
stanford  ca  usa
yifei stanford edu

i  i ntroduction
bitcoin is an electronic crypto currency created in     
by satoshi nakamoto  pseudonym   at the time the original
bitcoin client was written  the idea of a purely peer to peer
 p p  digital currency which did not require a trusted thirdparty to confirm transactions   prevent double spending was
unique  in the bitcoin network  all transactions are public  effectively rendering double spending impossible  a criminal
who wishes to double spend or falsify some segment of the
transaction history must convince the majority of the bitcoin
network that his transaction history is correct  but in order
to do that  he must provide the appropriate proof of work 
under the assumption that the majority of the network is
honest  the criminal would have to have more computational
power than the majority of the network in order to falsify
the transaction history  as described in      since the onset
of bitcoin  several other crypto currencies have sprung into
existence  but bitcoin continues to be the most popular 
because transactions in the bitcoin network are specified
by the public keys of the payer and payee  some level
of anonymity is guaranteed provided public keys are not
traceable to real world identities  for criminal organizations
and others using bitcoin which require strong anonymity 
this is not enough  so a so called mixing service is
employed  the mixing service takes in bitcoins from a group
of individuals requiring strong anonymity  sends the coins
around randomly in an attempt to obfuscate their origins 
and then sends similar amounts of bitcoins back to new
addresses specified by the individuals using the service  this
is discussed in more detail in     
for our cs    project  we were interested in using
machine learning techniques to explore a dataset of bitcoin
transactions  in particular  we were interested in exploring
the anonymity guarantees of the bitcoin network  the questions we were hoping to answer are 
   can we cluster the dataset in order to make exploration
easier 
   can we detect attempts at money laundering   mixing
services 

stephen macke
stanford university
department of computer science
stanford  ca  usa
smacke stanford edu

   can we trace the outputs of a mixing service back to
its inputs 
while tracing mixing service outputs to the corresponding
inputs eluded us due to the complexity of mixing services 
we do believe we made some headway on their detection 
in the subsequent sections  we describe the dataset we are
using and the initial preprocessing performed upon it  we
then describe an initial attempt to explore the dataset by
clustering hubs  our term for users with high numbers of
transactions  based on a particular feature set  first using the
k means algorithm then by applying an unsupervised learning algorithm  rolx  which assigns our users to various
roles  finally  we note some interesting  anomalous behavior
that we were able to discover thanks to our unsupervised
restructuring of the dataset 
ii  data
the bitcoin dataset was obtained from      generously
made available by ivan brugere  it contains information on
all transactions up through may of       and provides a
nice relational structure  the relational schema is detailed
in figure   
a  resolving public keys into users
the dataset uses techniques from     in order to perform
an initial clustering of public keys into the coarser notion of a
user  briefly  two public keys may be assumed to belong to
the same entity if they both appear as inputs to a particular
transaction  since this means that whoever authorized the
transaction had access to both corresponding private keys 
thus  the users as given in the dataset are probably not
totally accurate  in reality some of them probably need to
be merged 
b  granularity of the data
the dataset indicates transactions at a user to user level 
but not at an address to address level  that is  it does not
specify  for a particular transaction  precisely which keys
were involved  or how many bitcoins moved to particular
keys  we are interested in this information for future work

fiwith this dataset  particularly  this finer grain detail is of
interest for trying to detect mixing  and also for trying
to further resolve public keys into users  fortunately 
even though this finer level detail is not explicitly stored 
the transaction keys and public keys associated with each
transaction are specified  and the finer detail may thus be
queried from the bitcoin blockchain 

the mean and variance of all the transactions amounts 
incoming transactions amounts  and outgoing transactions amounts
these correspond with so called egonet features as described in     
we normalized or whitened the feature vectors so that
all features were weighted equally  because the k means
results are sensitive to the initialization of the centroids 
the centroids were selected ramdomly from a gaussian
distribution with mean and covariance matrix estimated from
the data provided  k means was run with      iterations
for various number of clusters with different random initializations  to determine the optimal number of clusters 
we decreased the number of clusters until the drop in
error  or the sum of the distances from each point to its
corresponding centroid  was not as significant  through this
method  we determined that the optimal number of clusters
is    although  as we discuss shortly  two of these clusters
were necessary for only a few outlier observations 


b  clusters

   

a  summary of method
k means is a heuristic method used to partially solve the
np hard problem of clustering some number of observations
into k clusters  where the sum of the euclidean distances
between each observation to its centroid is minimized     
to better understand our dataset  we used k means to cluster
the users into groups with similar features  since the data
contains over     million users  defined as a set of public
keys   we selected the high transaction traffic users  hubs 
as defined previously  for preliminary analysis  this allowed
us to look at a more interesting subset of the data without
requiring enormous initial computational power  the subset
included users with     transactions or more  resulting in a
subgraph of       hubs 
for each hub  features were selected based on the properties of the hub and its children  or other users with whom
the hub has interacted with  the following    features were
selected 




the hubs degree  total   of transactions   in degree
 total   of receiving transactions   and out degree  total
  of sending transactions  
the mean and variance of the childrens total degree 
in degree  and out degree

  

hub count

 

    

variance of degree of hub children

   

   

iii  k m eans

   

   
hub count

figure    relational diagram for bitcoin data    

mean degree of hub children

   
   
   

 

 

 
 
mean degree

 

 
   

    

 

 
 
 
degree variance

 

 
    

figure    features corresponding to non outlier clusters  each
graph is for a particular feature  and each cluster corresponds to a
particular color  note  the darker turqoise in these graphs actually
corresponds with the lighter turqoise in the graphs of figure    the
reason it appears darker in this set is because the histograms are
denser  lastly  the pink outlier clusters do not appear in this set
because they are grouped very close to the   mark 

after clustering using k      the vast  vast majority of
hubs fell into three categories  corresponding to the three
colors in figure    the features which were most important
in determining these clusters were 
   mean node degree of other users transacted with 
   variance of node degree of other users transacted with 
unfortunately  this does not tell us very much apart from
the fact that some hubs have transacted with users with
more transactions than others  and that the users with more
transactions are spread over a wider range in terms of
number of transactions 
the interesting bits of our initial results come from the
other two clusters  one of which contains   hubs  and

fia  summary of method

hub count

   
   
   
   
      

   

   

                   
mean transaction value

       
   

transaction value variance at hub

hub count

   
  

iv  rol x

mean transaction value at hub

   

 

   
   

      

   
   
   
   
   
   
transaction value variance    
figure    frequencies at which feature values appear for
those features that contributed to the outlier clusters  both
colored pink  note that certain clusters do not appear because they are so close to the   mark  the turquoise 
though not an outlier cluster  is not so close to the   mark
to completely disappear 

the other which contains a single hub  as seen in figure
   the features which segmented out these clusters  both
colored pink  for the sake of simplicity  corresponded to
mean transaction amount and transaction variance of the
hub  for whatever reason  these hubs had enormous variance
in transaction amount when compared with the other hubs
 they tended to be both big spenders receivers and
inconsistent spenders receivers  this in and of itself is a
simple type of anomaly since it means that these hubs were
engaged in transactions which were worth very little  but
also in transactions worth many thousands of bitcoins 

to validate and expand upon the results of the k means
clustering  we attempted to assign roles to the different hubs
based on the same features      proposes an unsupervised
learning algorithm called rolx  role extraction  which
seeks to classify nodes of a graph into various classes termed
roles  these roles contain nodes with similar structural
features in the sense that they have the same connectivity
structure within the graph  for example  one role might contain those nodes that are part of highly connected subgraphs
or alternatively those nodes that have a disproportionate
number of incoming edges  rolx performs role discovery by
factoring the feature matrix into two nonnegative matrices 
given n nodes  or in our case  hubs  and f features 
construct a matrix vnf and factorize it into nonnegative
matrices gnr and frf where r is a chosen low rank  in
other words  find 
argminkv  gf k  g  f     g  rnr   f  rrf
g f

qp
 
where kak  
i j aij is the frobenius norm  this
factorization reduces the dimensionality of the data and
provides a representation of the feature matrix as linear
combinations of the r roles 
the factors are computed iteratively by applying the
multiplicative updates  given in      as follows 
 t   

fbj

 t   

gia

 t 

   fbj
 t 

   gia

  g t   t v  bj
  g t   t g t  f  t   bj

 v  f  t     t  ia
 g t  f  t     f  t     t  ia

for every j in the range         f   i in the range         n  and
a and b in the range         r 
however  before factorization  rolx first provides a
method for choosing an appropriate value for r  the algorithm calls for minimizing the model description length
which is defined to be the sum of the cost of representing
the model in memory and the cost of correcting the errors 
this minimization is done by computing the matrices g  f
for various values of r 
unfortunately  we were unable to follow this minimization
procedure  as it calls for using kl divergence to measure
the cost of error correction which is not feasible given the
presence of zero valued features  kl divergence was chosen
since     found that the model errors were not normally
distributed  but we believe that the frobenius norm can still
be applied to choose the parameter for our purposes since
we are not as concerned with whether two roles may be
merged or separated unnecessarily  as we are instead trying
to find the outlier roles with very few members 

fiprior to factorizing the feature matrix for our data  each
column was normalized by dividing the column by its mean
 a column corresponds to a single feature   in this way  the
non negativity of the data was preserved while still ensuring
that no one feature dominated the role selection  figure  
shows the results of factorizing the feature matrix with r
ranging from   to    it was found that when r was greater
than seven  the factor matrices were not of full rank which
means that more than seven roles were unable to isolated
when optimizing those matrices  r     was chosen as it
minimized the error  kv  gf k 
    

factorization error vs  matrix rank    roles 

    

small clusters  i e  the set of hubs in the anomalous clusters
was similar to the set of hubs in these two roles 
this overlap between the two algorithms validates our
later choice to investigate those users with high variance in
transaction values  intuitively  it makes sense that mixing
services would be involved in high variance transactions  as
they could service patrons of vastly different wealth 
v  e xample m ixing
before we investigate our outlier users  let us look
at an example of mixing in action  in order to get
an idea of what to look for  we ran a small number of our own bitcoins through the mixing service
http   app bitlaundry com   again  because all
bitcoin transactions are public  we were able to trace some
of the mixing through the blockchain 

factorization error

    
    
    
    
    
    
    
    
 

 

 
 
 
number of roles  r 

 

 

figure    we found the optimal number of roles occurred at
r     

b  roles
upon choosing the target number of roles  the factorization was once again completed  and the hubs were placed
into arrays according to their most prominent roles  the most
prominent role was chosen by taking the maximum over the
hubs row in the g matrix which contains the coefficients
for reproducing a hubs feature values by taking a linear
combination of the role characteristics in the f matrix 
two roles had between      and      members  three had
between     and      members  and two had   and   
members  these last two were examined more thoroughly
to determine whether there was overlap with the anomalies
found through clustering 
the weights in the f matrix reveals that these two roles
were distinguished by their heavy weight on the variance of
transaction values which also distinguished the anomalous
clusters from the more populous clusters  the two roles
only differed themselves in that one role most heavily
weighted the variance of the incoming transaction values
whereas the other most heavily weighted the variance of the
outgoing transaction values  moreover  there was overlap in
the membership of these roles with the membership of the

figure    example mixing in action  notice how the transactions appear to recursively split the bitcoins and send to
two new addresses 
as you can see  the mixer seems to be forming a complete binary tree of transactions  dividing the coins at each
successive address and sending to two new addresses  if we
trace further along  we will then find that some of these
addresses will then pool their bitcoins together with other
coins which were split up in a different series of transactions 
this continues for many iterations  making it quite difficult
to determine to whom the coins originally belonged by the
time they make it to their destinations 
vi  i nvestigation
because we do not have transaction details at the level
of individual public keys  we are limited by the analysis we
can perform with this dataset alone  fortunately  such finetuned granularity is available since  as previously mentioned 
the entire blockchain is publically available on sites such as
http   blockchain info 

filooking through some of the transactions involving
public keys on the anomalous users  we noticed some interesting behavior  as an example  let us follow some transactions of a particular user  heretofore referred to as user
x  in what follows  we will refer to public keys by the first
  characters of their sha     hashes  in june       when
bitcoin prices peaked at     per coin  we see that user x
sent     thousand bitcoins from address  mcz to addresses
 cc  and  q e   cc  received    thousand bitcoins  and
 q e received    thousand bitcoins  furthermore  we see
that on the same day   cc  sent    thousand bitcoins to
  uf  and    thousand bitcoins to   og  next    og sent
part of the    thousand coins it received to address  ehh as
part of a     thousand bitcoin transaction  the remainder
went to another address 
notice that  in the cases of  mcz   cc   and   og 
they sent all of their bitcoins to other addresses in a single
transaction by splitting the money between two receiving
addresses  we have only followed a single path along the
transaction tree  and the interesting thing is that if we follow
other paths  we see this behavior repeated  that is   q e
also sends all of its coins to precisely two addresses  each
of which send all of their coins to precisely two addresses 
and so on  it is as though user x is recursively splitting the
initial     thousand bitcoin fortune  as we described in the
previous section 
the really interesting thing  however  is what happens at
the end of some of these splits  in the case of   og  it
sent part of its coins to  ehh as part of a     thousand
bitcoin transaction  this means that other addresses were
also involved in this massive transaction  if we trace other
transaction paths down  we will see that  for example  money
from  q e also ends up going to  ehh as part of the same
    thousand bitcoin transaction  this result is summarized
in figure   

sum of money  but then sending portions to the same public
key  this seems suspicious  under normal circumstances  it
seems like somebody who wants to send money somewhere
all in the same day should have no need to route it to that
spot through a bunch of intermediate places  this suggests
that we could be looking at a mixing service or some other
suspicious service in action 
vii  c onclusion and f uture w ork
unsupervised learning techniques revealed anomalies in a
large bitcoin transaction network  we were able to identify
certain users that conducted transactions in an atypical
fashion  one that suggested some sort of money laundering 
unfortunately  we have no way of proving our suspicions 
as we do not have labeled data that points us to cases of these
hypothesized mixing services  however  our work here could
help pave the way for future clustering techniques  especially
by allowing one to choose features that are more revealing
of patterns in the data 
the unsupervised learning algorithms we applied  kmeans and rolx  ended up achieving our intended ends of
locating strange behavior in the network  through clustering
and role detection  we now have a much better idea of what
to look for in a suspicious transaction  or  in particular  a
string of suspicious transactions  additional work should be
done to both categorize and quantify these anomalies 
r eferences
    nakamoto  satoshi  bitcoin  a peer to peer electronic cash
system        http   bitcoin org bitcoin pdf
    bitcoin forum  https   bitcointalk org index php topic      
    brugere  ivan  bitcoin transaction
http   compbio cs uic edu data bitcoin 

network

dataset 

    reid  fergal  and martin harrigan  an analysis of anonymity
in the bitcoin system  security and privacy in social networks  springer new york                
    macqueen  james  some methods for classification and
analysis of multivariate observations  proceedings of the
fifth berkeley symposium on mathematical statistics and
probability  vol     no                
    henderson  keith  et al  its who you know  graph mining
using recursive structural features  proceedings of the   th
acm sigkdd international conference on knowledge discovery and data mining  acm       
    henderson  keith  et al  rolx  structural role extraction
  mining in large graphs  proceedings of the   th acm
sigkdd international conference on knowledge discovery
and data mining  acm       

figure    user x splits a large fortune  some of which ends
up at  ehh  from multiple intermediate addresses 
thus we see that user x appears to be splitting a large

    seung  d   and l  lee  algorithms for non negative matrix
factorization  advances in neural information processing
systems                    

fi