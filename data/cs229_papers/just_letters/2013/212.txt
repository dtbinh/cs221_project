tapdynamics  strengthening user authentication on
mobile phones with keystroke dynamics
grant ho

 

introduction

the convenience and ubiquity of mobile devices make them a rich source of personal data such as email and
financial information  unfortunately  this data is often guaded by only a simple drawing pattern or short
pin code  which recent literature has shown to be woefully insecure      as a particularly scary example 
bonneaus recent work suggests that an attacker can guess most users pin codes after only eleven attempts
     with the the rise of smartphone theft  we see a crucial need for stronger security mechanisms that protect
a users data on smartphones  our project aims to address this problem by strengthening user authentication
when a person unlocks logs into a phone  specifically  we construct and analyze four keystroke dynamic
classifiers that use a smartphones sensors to learn the key tap behavior of the true owner  after this training 
our classifiers can be used to determine whether a login attempt is being made by the true owner or by an
attacker who has guessed the owners pin 

 

background

the study of leveraging a users typing behavior to strengthen passwords is known as keystroke dynamics 
over one hundred papers have been published on keystroke dynamics      much of this work has focused
on desktop keyboards and examines three features  the duration of each key press  the latency between
keystrokes  and implicit measures of keystroke force through things like computer microphones          more
recent work has examined deploying keystroke dynamics on mobile devices          however  this work continues to use only keystroke timing features and often focuses on passwords that are ten characters or longer 
our work is different from the existing literature because we are the first to examine how to capitalize on new
sensor data on modern smartphones in order to apply keystroke dynamics to short  four digit pin codes 

 

methodology

   

threat and defense models

our project addresses the following threat model 
   alice has a mobile phone that is secured using a standard lock screen with a four digit pin
   an attacker  a thief  manages to steal alices phone through pickpocketting or common snatch and run
theft on a bus or train 
   the attacker now attempts to break into alices phone by iterating through common pins or guessing
her pin based on profiling and searchable online information 
as stated earlier  our defense is a keystroke dynamics classifier that learns to distinguish between alice
attempting to unlock her phone and someone else attempting to unlock her phone 

 

fi   

data collection

we built an open source  android login application     that collects the following biometric features when
a user enters in a pin code  the duration of each key tap  the latency between each key tap  the size of
each key tap  and all accelerometer readings over the course of a login attempt  our android app randomly
assigns a user one of five pin codes to enter for thirty times  these thirty trials were separated into two
blocks of fifteen with a thirty second pause in between each set of fifteen trials  we randomly assigned
each user a pin code from a fixed list of five pin codes  three of these pin codes are the most popular
pin codes and account for     of all users pin codes     and the remaining two pin codes were randomly
generated  unfortunately  crowd sourcing services like mechanical turk prohibit tasks from requiring users
to download install any software  such as android apps   so we were required to manually gather data for
this project  our procedure was submitted to stanfords irb and received clearance as non human subject
research because we randomly assign each user an id number and do not collect any personally identifiable
information  since receiving irb approval in november  we have gathered data from approximately fifty
five unique users which resulted in      data samples 

   

preprocessing

each training example  login attempt  consists of five key taps  one tap for each digit in the pin and a final
tap for the enter key  this resulted in five features for duration  four features for latency  and five features
for size  for the accelerometer readings  we found that our data had a variable number of readings per tap
and across training examples  making the raw accelerometer data infeasible for direct use as a feature  we
originally looked at incorporating accelerometer readings as a feature because we theorized that a user might
have a natural orientation for holding a phone during use  this natural orientation would then be perturbed
by the force of each key tap  our hope was that the accelerometer readings might be able to construct
an orientation and force profile that would be unique to each user  this project makes a first attempt at
generating this accelerometer profile by computing various statistics over all accelerometer readings in a
login attempt to create a total of twenty one accelerometer features per training example  specifically  we
compute statistics like the mean  min  max  variance  first quartile  second quartile  and third quartile for
the x y  and z components over all accelerometer readings in a training example  thus  each data sample
consist of thirty five features  which we extracted from the raw sensor data that our test phone collected 

   

classification techniques

we tested four classifiers for our experiments  our first classifier was the manhattan distance classifier 
which is a statistical classifier that computes the distance between the mean feature vector of a users training
data and the feature vector for an attempted login  if the distance between the login attempt and the existing
users data is within a certain statistical threshold  the classifier allows the attempt to successfully login  our
second classifier was the random forest classifier  which generates an ensemble of decision trees that vote
on a decision based on the feature data in our training sample  we chose these first two classifiers because
they are highly regarded in the literature           additionally  we tested gaussian discriminant analysis
because many of our features appear to be normally distributed  finally  we also tested an svm with a
linear kernel after discussions with the course staff and determining that the literature sparsely mentions
and shallowly assesses the efficacy of svms 

 

evaluation

for this project  we downloaded the data off of our phones and used a ruby script to process this raw
sqlite data into a csv file for analysis in matlab  to evaluate our construction  we use two commonly
used metrics in keystroke dynamics that assess the security and usability of our models 

 

fi   false acceptance rate  far    the percent of attacker data samples that we incorrectly label as the
true user  percent of attackers we accidentally accept   far allows us to measure the security of our
construction  since a low far means we are good at rejecting attackers 
   false rejection rate  frr    the percent of true user data samples that we incorrectly label as an
attacker sample  percent of users we accidentally lock out   thus  frr measures the usability of our
construction 
we used the following procedure to generate our results 
   for each pin code p  we selected all data for users with pin   p  call this dataset d 
 a  for each user in d  the first    samples became the positive training set and the remaining   
samples became the positive test set  we chose to split the dataset in this manner because during
data collection  our app inserted a    second pause between the first    and second    login trials 
we wanted to use this pause to test if we could still distinguish the true user after time has passed
between login attempts  which models real world where alice will make one login attempt  use
her phone  and then make the next login attempt later on when she needs her phone again 
 b  to generate our negative data sets  the first    samples from all other users in d became our
negative training set while the remaining    samples for all other users in d became our negative
test set 
 c  next  for each user in d  we trained and tested each classifier and computed the average far
and frr among all users in d to get the far and frr for each pin 
   finally  since each pin in our dataset has ten or eleven users each  we simply averaged the far and
frr over the five pins to obtain the far and frr for each classifier 
the following chart presents the overall far and frr for our four classifiers  which closely mirror the
far and frr for each pin      because of these results and paper length constraints  the rest of this paper
focuses on gda and svm 
model
manhattan distance
random forest
gda
svm  linear kernel 

far
     
    
    
    

frr
   
     
     
     

table    model error rates  far   false acceptance rate and frr   false rejection rate 
these results suggest that our top classifiers offer excellent security in terms of detecting and rejecting
attackers  unfortunately  the relatively high frrs raise concerns about the usability of our keystroke
dynamics construction because people might not want to use a system that accidentally locks them out of
their phone     of the time  thus  we looked for ways to improve the high frrs 
first  we realized that our data set is highly skewed with many more negative training examples than
positive examples  for each user  we divided the persons    trials into a training and test set of    positive
samples  however  our negative sets are generated by taking    samples from all other users with the same
pin  resulting in               negative training examples  we theorized that this overwhelming number of
negative training examples might explain our high frr because it inflates the prior attacker class probability
 
the manhattan distance classifier is incredibly time intensive to run  so we only obtained fars and frrs for the pins     
and       however  we feel comfortable reporting results in terms of total averages because even on these two pins  manhattan
distance was clearly outperformed by the others  e g  manhattan on      has far        vs  gda far        and frr
      vs  gda frr       

 

fi p y   attacker   and biases our classifier to reject a login attempt  to test this  we varied the negative
training set size by randomly selecting a certain number of login attempts from our pool of negative attacker
samples and compared the far frr for our classifiers against these different negative training set sizes
                                     these results showed that balancing our positive and negative training
set sizes yield significantly better false rejection rates  e g  for our svm  it lowered our ffr from      
at     negative examples to       at    negative examples   unfortunately  this came at the expense of
increasing our false acceptance rate       to       for our svm    to gain more insight  we compared
our test errors  both far and frr  with our trianing errors  for each training set size  we found that our
training error was approximately zero for both far and frr   dramatically better than our test error  this
suggested that our models were suffering from high variance  thus  to counteract this extreme overfitting 
we increased our positive training set to include the first twenty samples from each user  leaving our test
set with ten samples per user  and obtained the following plots 

from these results  we see that increasing the number of positive training examples helps correct overfitting  this technique appears to be most beneficial to svms because it reduced the frr while maintaining
the far within one or two percentages  these two optimzations achieved satisfying results for our svm 
using    positive training examples and    negative training examples  our svm has a far under    and
a frr under     we consider these to be extremely good results given that were using incredibly short
pins and our results beat the far frrs achieved in most existing literature           even though the
literature often uses pins or passwords of at least ten characters long          in light of these satisfying
results  we conducted an ablative feature analysis on our svm to determine the importance of each feature 
based on the optimal balance between far and frr from our plots  we performed our ablative analysis on
a training set of    positive examples and    negative training examples  
from the following table  we see that our tap size and accelerometer features boost our svms false
acceptance rate from       to      and improve its false rejection rate from       to       thus  we
conclude that our hypothesis was correct  new sensor data on smartphones provide features that can increase
the security and usability of keystroke dynamics on smartphones 
features removed  cumulative 
baseline  no features removed 
accelerometer statistics
key tap sizes
key tap duration
 

svm far
    
     
     
     

svm frr
    
     
     
     

we withhold tables and plots for these in between analyses because of page limit restrictions
we tried techniques to improve the performance of gda  like outlier removal to correct overfitting to outliers and make our
feature data more gaussian  but  these techniques didnt yield significant improvement and svms still outperformed it 
 

 

fi 

conclusion

our svms excellent results show that keystroke dynamics can be an effective means of enhancing the security
of a users data on smartphones  even on an extreme pin of       our svm achieves remarkable results
with a      far and a      frr  with an overall false acceptance rate of       password guessing becomes
an difficult way for thieves to break into your phone and access your data  even if an attacker correctly guesses
your pin  our classifier will likely reject the attacker based on his anomalous tap dynamics  moreover  our
false rejection rate of      seems to be low enough for this system to usable on real world smartphones 
finally  our ablative feature analysis shows that features like tap size and accelerometer readings improve
the efficacy of keystroke dynamics by over      which validates our hypothesis that smartphones sensors
offer rich  new features that have been underexplored in the literature 
for future work  our analysis indicates that increasing the number of positive training examples  the
number of true owner login examples  improves the usability of our classifier  thus  future work should
explore techniques like smote to create synthetic positive training examples that help balance the training
sets  additionally  we intend to explore different ways to extract features from our accelerometer data  right
now we simply use rough statistics to extract accelerometer features  while this significantly contributes
to our svm  we found that it actually caused worse performance  overfitting  on other models like gda
 not shown in this paper because of length constraints   using fewer  but more intelligent features from
the accelerometer data might improve the utility of this feature  similarly  an interesting machine learning
question to explore would be why our gda model performs worse when we balance the positive and negative
training set sizes  we theorized that balancing the training set sizes would at least improve the frr because
its prior class probabilites would be more balanced  but that proved to be false 

 

acknowledgements

i would like to thank dieterich lawson for writing the scripts for our manhattan distance and random
forrest classifiers and the ruby script to convert our sqlite database into a csv of features  i would also
like to thank sameep tandon for many insightful discussions on different machine learning techniques to try
as well as dan boneh for the original idea and recurring advice on this project 

references
    datagenetics         sep   pin analysis   online   available  http   www datagenetics com blog september      
    j  bonneau  s  preibusch  and r  anderson  a birthday present every eleven wallets  the security of customer chosen
banking pins  in financial cryptography and data security  springer        pp       
    k  s  killourhy and r  a  maxion  comparing anomaly detection algorithms for keystroke dynamics  in dependable
systems   networks        dsn    ieee ifip international conference on  ieee        pp         
    f  monrose and a  d  rubin  keystroke dynamics as a biometric for authentication  future generation computer
systems  vol      no     pp               
    j  roth  x  liu  a  ross  and d  metaxas  biometric authentication via keystroke sound 
    a  buchoux and n  l  clarke  deployment of keystroke analysis on a smartphone  in australian information security
management conference        p     
    e  maiorana  p  campisi  n  gonzalez carballo  and a  neri  keystroke dynamics authentication for mobile phones  in
proceedings of the      acm symposium on applied computing  acm        pp       
    g  ho   online   available  https   github com grantho tapdynamics 
    p  s  teh  a  b  j  teoh  and s  yue  a survey of keystroke dynamics biometrics  the scientific world journal  vol 
           
     r  a  maxion and k  s  killourhy  keystroke biometrics with number pad input  in dependable systems and networks
 dsn        ieee ifip international conference on  ieee        pp         

 

fi