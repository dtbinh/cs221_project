movie recommendations from user ratings
hans bystrm
stanford university
bystrom stanford edu

abstract
this paper demonstrates an implementation of k means clustering
and softmax regression classification for movie recommendation
based on the hetrec     movielens  k dataset  root meanssquare error  rmse  is used for evaluation of results  reasonable
performance is demonstrated 

   introduction

the dataset was divided into training set and test set  and the
model parameters  were trained on the training set to minimize
cost function j   
     

 
 

 

 

 

  

 

    log

       

      
 
     

 

       

 

 
 

 

 

      
       

a recommendation system is an important component in many
online services  the recommendation system can help the user
find interesting content or goods to consume which increases user
satisfaction  and for the service provider this leads to the value of
increased usage of the service 

prediction accuracy of the classification of users to clusters was
measured as

movie recommendation systems have attracted significant interest
in recent years  one example of this was the netflix prize     
where contestants were rated based on their algorithms rootmean square error  rmse  score  the root mean square error
is a measure of the algorithms error in the predictions of users
ratings of movies 

root mean square error  rmse  was used for evaluation and is
defined as follows 

this paper is exploring the approach of using k means to cluster
and label users  and to use a softmax regression classifier to
predict to which cluster the end user belong  based on user ratings
of movies  the recommendation system will then suggest the
highest rated movies from that cluster  prediction accuracy of the
classifier is calculated and compared with the root mean square
error of the assigned ratings compared to ratings in a test set 

   methods
k means clustering algorithm     is used to group users in to
clusters based on their ratings  this is the k means clustering
algorithm 
   initialize centroids               randomly 
   repeat until convergence    
for every i  set
       arg min          

 

 

for each j  set
   

                
   
           
   

users in the complete dataset were labeled based on cluster
assignment 
for classification  softmax regression     was used  with
hypothesis function
   

 

 
         
 
     

                                 
                               

rmse    

 
 s      

      r     
        

here  stest is the set of all user ratings in the test set      is the by
system predicted rating of item  movie  i by user u  and r   is the
ratings in the test set  in the approach used in this paper  the
predicted ratings     are the ratings represented by the centroid
that was assigned in the classification stage  and these are
compared with ratings in the test set  only for those movies that
each user has rated 
for comparison  a baseline prediction     was calculated as
                   
where   is the average rating in the dataset     is the bias in user u
ratings  and    is the offset in average of ratings for movie i 

   dataset
the hetrec     movielens  k dataset was used      which is a
subset and extension of movielens  m dataset      the dataset
contains ratings of       movies by      users  movies are rated
with score     

   implementation
    dataset preprocessing

 

 

            

     

      

     
      

dataset was loaded using python pandas into a matrix represented
as numpy array of size users x movies       x         element aij
represents the rating of movie j by user i  if this user did not rate
this specific movie the element is set to   
ratings from each user was centered around zero by removing
mean  element                 where    is the mean of all ratings
by user i  same as bias    in the baseline predictor  
the dataset was divided       into training set and test set  the
training set consisted of ratings from      users and the test
consisted of ratings from     users 

fi    algorithms

the baseline predictor showed an rmse         

k means was implemented in python using numpy 

the best achieved result with the approach described in this paper
was rmse          which is an improvement of       compared
with baseline 

softmax regression implementation was done with numpy and
scipy following the ufldl tutorial      the ground truth matrix was
represented as a scipy sparse matrix  the scipy optimize l bfgsb solver implementation was used to solve for the minimum of
the cost function j   

    processing
running the k means clustering algorithm with k     took    
seconds on a macbook air     ghz intel core i  with  gb
ram 
training the softmax classifier with k      on the training set
took     seconds  classifying     users took      seconds
 k        

   results
after running k means  the plot of the number of assigned users to
each cluster showed a power law curve for all values of      
where the majority of users were assigned to first cluster and then
a bump on the curve with     equally sized clusters  and then a
long tail with small clusters  the plot here below shows the
number of users assigned to each cluster for k      

the low accuracy of the prediction of which cluster a user belongs
to  while still maintaining a reasonable rmse  shows that several
cluster centroids are close to each other  each centroid can be
considered representing a certain preference or taste  and for this
dataset  users tastes does not seem to differ that much for some
groups of the users 

   discussion
implementation and evaluation of k means clustering and softmax
classification for movie recommendation was made based on the
hetrec     movielens  k dataset 
the softmax predictor showed good processing performance also
for large number of classes  k         a good prediction
processing performance is a requirement for implementation in a
commercial movie recommendation service 

the accuracy in prediction of labels by the softmax regression
classifier showed a drastic fall in the accuracy of predicted labels
with an increased k 

comparing the result of the accuracy in prediction of user ratings 
measured as the rmse improvement relative to baseline  with
results from bao and xia     who tested a number of different
methods on a variant of the same dataset  the approach in this
paper gives better result         than k nearest neighbor
         but performs less well than svd and its variants
        
as further work  a comparison test with svd  and in particular
asymetric svd  could be made on this specific dataset to get a
firmer comparison between the methods 

fi   references
    netflix  netflix prize webpage       
http   www netflixprize com 

    a  ng  cs    lecture notes        stanford university 
    ng  et al  ufldl tutorial        stanford university 
http   ufldl stanford edu wiki index php

    ekstrand  et al  collaborative filtering recommender
systems        foundations and trends in human
computer interaction vol     no     p      
    http   www grouplens org datasets hetrec      
    http   www grouplens org datasets movielens 
    z  bao  h  xia  movie rating estimation and
recommendation  cs         project  stanford university 

fi