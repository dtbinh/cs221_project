multi label classification and prediction of tags for online platform
questions
yeeleng scott vang

abstract
past studies have shown personalized tutoring offers students the best means to master new
concepts  the current open online course  mooc  platforms offer various means for instructors
to interact with students from vote polling to q a style format  in this project  a multi label
supervised classification framework is used to classify questions posted in a q a style platform
to predict the appropriate tags based on the text of the title and body alone 

   introduction
past studies have shown personalized tutoring offers student the best means to master new
concepts  as focus shift from the traditional brick and mortar classroom settings to online
offerings  a natural question then is to ask what online platform can best mirror personalized
tutoring  popular current platform such as piazza uses a q a style format that allows student to
post a question and instructors to answer  one of the main issue with these current platforms is
that there are often many repeated questions ask which ultimately leaves the collection of
questions indiscernible and unusable  while a small blame can be place on the offending
students  the existing search mechanism lacks intelligence to effectively return relevant results
thus leaving student frustrated with no other choice but to  repost  in hopes of receiving an
immediate answer  although piazza allows for manual tagging of questions by the original
poster  as with many things in life  if two students are asked to tag the same question  there is a
high probability that both will classify it with very different tags  with the total number of
questions aggregates during the entirety of the course  the number of search results returned
increases substantially but bares little relevance to what the student is asking  in this paper  i
will show a classification framework to provide intelligence to automate tagging of questions
based solely on the text of the question title and body  in particular i address this problem of
multi label classification using k many one vs all logistic regression and linear svm and
compare their performances 

   data set
data collection used is  facebook recruiting iii   keyword extraction     dataset from kaggle
and this collection represent questions asked from the stack exchange website  the training and
test files were provided in separate csv files  the training file consist of four columns  id  title 
body  and tags  the test file consists of the same first three columns as the training file minus
the tag column  due to the large size of the training set and computer memory limitation  only a
subset of the training file        data points  is used for this project       of these data points
are used to train the model and the remaining      points are tested against  some statistics are
provided in the following table 

fino  of data points
no  of unique tags
no  of occurence of tags
max no  of tags per question
avg  no  of tags per question

training set
    
    
     
 
     

test set
    
    
    
 
     

training set
tag
occurrences
c 
   
java
   
php
   
javascript
   
android
   
jquery
   
c  
   
python
   
iphone
   
asp net
   

test set
tag
occurrences
c 
   
php
   
java
   
javascript
   
android
   
jquery
   
c  
   
asp net
   
 net
  
html
  

table    data set statistics

   preprocessing
feature extraction was performed on the dataset to make the data useful for the learning
algorithm  this involves replacing all non ascii characters with white space as they would be
infrequent and useless as discriminative features  each data point s title and body corpuses is
combine into one larger corpus  this corpus is then represented using the bag of words
representation by tokenizing  counting  and normalizing using scikit learn    python library
vectorizer  tags are parsed into tokens and maintained in a list 

   classification methodology
classification of this data set was performed using logistic regression and svm with a linear
kernel 
since multiple labels are being predicted  scikit learn python library
onevsrestclassifier is use to model k many one vs all binary classifier for each unique tag 
logistic regression is chosen as a baseline  general classifier while svm is chosen as it has been
shown to be an effective text classifier in the literatures 
to verify the accuracy of the model  the scikit learn python library f  score is used to calculate
the f  score of the multi label classifier taking into account the average precision and recall
value for each tag instances  the learning models are tested for training set size of            
                        and      data points 

fi   result

figure    classifier f  score

   analysis
logistic regression performs slightly better than the linear svm  as the training set size
increases however  it is observed that the linear svm s performance approaches that of the
logistic regression model 
the overall accuracy of both models improves as a function of training set size but remained low
due to many factors  the framework of implementing k many one vs all models is
computationally expensive and intractable as the set of tags grow with the training set size  the
large size of the original dataset means the small subset of data points used for training suffers
from a high bias issue as many tags in the testing set was never seen in the training set 

   future work
as the result shows  there is still large room for improving f  score  some of these approaches
includes 
   instead of a batch framework  implement an online stochastic gradient descent classifier to
incorporate more training data points  although this would solve the issue of a large feature
matrix  there would still be concern of computation time having to train that many more onevs all classifiers with the growing possible collection of tags 
   try running on a cloud cluster  since computer memory is a limiting factor  potentially
limitless computer memory on a cloud cluster may provide a quick  scalable solution using
the current batch framework 
   instead of the simple   gram bag of word approach used here  use n gram bag of word
representation to accounts for syntactic meaning which may perform better as predictive
features 

fi   approach feature selection from a statistical perspective using topic model  this may
better discover correlation between text corpus and tag which would lead to superior
prediction accuracy 

   conclusion
in this project  a dataset of questions and tags were used to train an one vs all classifier to predict
the multiple tags of unlabeled questions  logistic regression and linear svm classifiers were
developed  trained  and tested on this dataset  the performance of the logistic regression and
linear svm classifier were comparable although overall f  score was still relatively low  this
seems to be an issue of high bias where much more training point is needed to better predict the
various tags that showed up in the test set and not the training set  with the enormous size of the
original dataset  better feature selection and online learning framework may improve the quality
and accuracy of the classifier 

reference
   
facebook recruiting iii   keyword extration  http   www kaggle com c facebook recruitingiii keyword extraction data
   
scikit learn  machine learning in python  pedregosa et al   jmlr     pp                  

fi