schuyler smith
cs     final project

        

autonomous hydrofoil
sailboat

 one meter long  rather than    meters  of the ac  
high performance hydrofoiling catamarans used in the
most recent americas cup 
model foiling sailboats have been built before  but because of the sensitivity and complexity of the controls 
human rc operators usually cant keep them  on foil 
for more than a few seconds at a time  using hydrofoils
at this scale is particularly difficult because some of the
techniques used by larger boats  such as the ac    do
not translate well  for example  a   m boat like the
ac   is relatively immune to waves  but a  m boat is
not  as a result  the passive stabilization methods used
by the ac   will be inherently less effective at small
scale  our design  therefore  uses actively stabilized
foils that remain completely submerged more reliably
and are less affected by waves  this and other features
make our design significantly more complex than existing designs  and as a result full human control will be
impossible 

hence  sailing our boat to its full potential is a nontrivial control problem  this paper will explore approaches
figure    a rendering of what our final boat will look i used to control the boat 
like  like the real ac    it will be a catamaran with
two hulls  the four hydrofoils can be seen projecting today  the boat is still incomplete  we only began
down beneath the boat  two near the center and two building the boat this quarter and plan to have it finattached to the two rudders near the back  the fi  ished by the end of the school year so we can enter
nal sail  shown here as a wireframe  will be rigid foam it in an autonomous sailing competition this summer 
hence  the results from this paper are from simulation
rather than fabric 
only  but i believe that my simulation is reasonably realistic  and that the methods described will translate well
to the real world 

introduction

method

the americas cup is one of the oldest and most prestigious sailing competitions in the world  the most re  the boat has three main classes of sensors that can be
cent one  held this past summer in san francisco  was used as input to a machine learning algorithm 
especially unusual because it allowed boats to hydrofoil
for the first time 
position provided by gps and an imu  accelerometer  gyroscope  compass 
a hydrofoil is a wing like structure mounted under the
hull of a boat  as the boat increases its speed  the foils wind speed and direction
create lift that can raise the boat out of the water 
which greatly reduces wetted area and hence drag  it height height above the water  this allows the boat
to detect when it is on foil  and compensate for
is far more efficient to move water around just the foild
waves 
than the entire hull  consequently  hydrofoil sailboats
can sail much faster than traditional boats  but they
in turn  the boat will be able to control the position
are much more difficult to control 
of the sail  the angle of the rudders  for steering   the
some friends and i have formed the stanford au  elevation of four foils  and a movable ballast system
tonomous sailing team  funded by stanford robotics  a weight that can be adjusted left and right to help
club  to design and build an autonomous scale model balance the boat  
 

fistates in the real world is impractical  because conditions do not vary quickly  for example  the boat must
perform well in a variety of wind speeds  but on any
given day the boat will only be exposed to a small range
of wind speeds 

to distill boat control into an optimization problem  i
separated higher level planning  route finding and steering  from the task of sailing  and delegated these two
tasks to the planner and the trimmer  respectively 
the trimmer is the focus of this paper  the advantage
of this approach is that since the path of the boat is out
of its control  the trimmer has only one thing it needs
to optimize   boat speed   so our reward function is very
well defined  the planner also doesnt lend itself well
to machine learning anyway  and is better implemented
with more traditional deterministic route finding algorithms 

second  experimentation in the real world carries with
it a high cost for mistakes  failure to stabilize the boat
will flip it very quickly  and righting it and restarting it
is something we would prefer not to have to do often 
an important first step in learning how to control the
boat is building a model of the dynamics of the boat and
state transitions  unfortunately  as a result of these
complications experimentation to build a deterministic
or stochastic model is difficult 

hence  we can formulate the task of the trimmer as a
markov decision process in the following way 
 b    
states will be represented as s    vb   
vw   h   s
where vb is the instantaneous speed of the boat
 direction is irrelevant to the trimmer  because we
can translate everything into boat centric coordinates    
vw is the velocity of the wind  relative to
 b is the rotation of the boat in three
the boat   
dimensions  pitch  yaw  and roll   and h is the
height of the boat above the water  hence  the
state space is seven dimensional 

to combat these  i use two main approaches  first 
to improve the models ability to generalize from very
incomplete data  i built a fairly detailed model of the
boat dynamics  which will be described in more detail in
the implementation section  to keep the model from
getting too complex and due to development time constraints  the model actually predicts only most likely actions  it doesnt model the full probability distribution 
that is  rather than modeling p   s  a  s         
we model t   s  a  s 

actions are represented as the control outputs a  
  s    f   b   a  where  s is the angle of the sail
 which has two sections    f is the angle of the
foils  and b is the position of the movable ballast 
there are four independently adjustable foils  but
we can exploit some more symmetry  and instead
adjust only the average angle  left right balance 
and front back balance  hence  the action space
has a total of six dimensions 

second  i used partial human control to guide exploration while learning the state space  left to random
exploration alone the boat tends to stay in one place 
slowly drift downwind  or flip over  instead  i used partial human assistance to aid learning  in simulation its
easier to control all aspects of the boat because i dont
have to do it in real time  since this wont be possible
for the real boat  i developed a bootstrapping method
where the computer manages an increasing subset of
rewards are boat speed  while conveniently easy the controls over time  for example  the foil but not the
to measure empirically  the relationship between rudder or sails   again  more details will be presented
states  actions  and rewards is obviously still com  in the implementation section 
plex 
once i have a model of state transitions i can perform value iteration as described in the lecture notes 
the state space and action space are both effectively
however  i found that this was needlessly complicated 
continuous  because of the fairly high dimensionality
since we want to optimize speed and speed is contin seven for the state space and six for the action space 
uous  recursively computing true values is not useful and limitations of the processor onboard the boat  disan action that increases the speed of the boat immedicretization of the state and action spaces ended up beately is always better in the long run than one that does
ing impractical  with a large number of discrete states
not  hence  we can just as easily take the value of a
processing requirements became too large  and value
state to be the reward for that state  the instantaneous
iteration took a very long time to learn all the valuspeed of the boat  then computing the optimal policy
ations  with a small number of discrete states sailing
is straightforward   we just have to choose the action
performance suffered because of the oversimplification 
that optimizes the reward of the predicted next state 
other requirements of the real boat also led to several
   s    arg max r t  s  a  
other complications  first  testing a wide variety of
aa
 

fihowever  this is still very complex to compute in prac  into modeling waves  i have a generic noise term in the
tice because we must optimize over all actions  as dis  height measurements  but we dont yet know exactly
cussed above  parameterizing the action space is out how sensitive the boat will be to significant waves 
of the question 
if performance on the real boat is significantly worse
it does seem reasonable  however  to want the controls than in simulation these are two of many areas i can
to change smoothly  the sail cant actually adjust it  investigate  but until the boat is complete i dont beself instantaneously anyway  for example   with that lieve its constructive to worry too much 
in mind  another approach i tried was to  rather than
optimize over all possible actions  only consider actions the state transition model that the algorithm learns is
that are small permutations from the current one  for based on a simplification of the simulation  in particexample  for each setting x we can try x  x     and ular  it encodes most of the same physics  with everyx    this is much more manageable  but with six thing heavily parameterized and with linear or quadratic
dimensions in the action space and three choices each error terms  the weights and offsets are learned in a
it still leaves          possible actions  unfortunately  manner similar to the method described in     
while this seemed very promising  it also doesnt per  to train the state transition model  we need robust
form very well  in my tests i couldnt reach a balance state exploration  as described above  this is bootbetween fine enough granularity to find local optima strapped with partial human control  at each stage
and coarse enough to respond quickly to changing con  the computer controls a subset of the action dimenditions 
sions and chooses actions based on the optimal pol
hence  my final approach to actually controlling the icy algorithm  described above  because the size of
boat is significantly different  rather than calculat  the action space is greatly reduced and optimal perforing optimal actions directly from the markov model  i mance isnt essential at this stage the disadvantages to
decided to use the model to train an artificial neural this approach discussed earlier are less important 
network that controls the boat directly  that is  rather
than using t   s  a  s to choose actions  i derived
a function f   s  a  normally this would be very
inefficient  because training neural networks can take a
long time and as described above time on the boat is at
a premium  however  training the neural network from
the model can be done offline  so this isnt an issue 

the final controller is a feedforward artificial neural network with two hidden layers  the input layer is fed
normalized state data  and the output layer produces
actions  i use a python library  arac  for the neural networks that is implemented in c   and open source  so
it can be compiled for arm and run efficiently directly
on the boats microcontroller 

to train the neural network i use a genetic algorithm
to optimize the weights between nodes  specifically  it
all of my code is written in python  using numpy  etc  tests the network in the simulator in    different conwhere appropriate  the final sailboat uses an arm  ditions  and measures the average speeds the network
based microcontroller comparable in power to a smart  acheived  on my quad core desktop the performance
phone 
of the network stops improving after about      genmost of the early work on this project was spent de  erations and around a day of cpu time  as mentioned
veloping the simulation i used to test everything  my above  this isnt a major drawback  because the learned
teammates have run fluid dynamic simulations of the weights can then be exported to the microcontroller 
sail and foils  my simulation uses the data from those which can then activate the final network extremely
runs to be as accurate as possible  from there  most of quickly 
the actual physics is straightforward  the boat is modeled as a rigid body  except for the control surfaces  
and calculating forces and torques is not complex 
results are overall better than i expected  a graph of
i know that my model has some weaknesses  for ex  the results of optimizing the final neural network are
ample  i made no attempt to simulate the boundary shown in figure    on the same test that the algolayer effect  in reality wind speed increases as you rise rithm uses i scored about a    controlling the boat by
further from the surface of the water  this changes hand in simulation  and the network acheives     times
the apparent speed and direction of the wind from the that performance in about    generations  final perbase to the tip of the sail  i also didnt put much effort formance is nearly twice my score  with practice im

implementation

results

 

fisure i could improve my manual score  but nonetheless
this is very impressive 
in figure   you can see a heat map of the boats performance at all points of sail  the boat performs very
similarly to other high performance sailboats  so this
somewhat validates my model  and our boat design  
like all sailboats  the boat performs poorly directly upwind  the top center of the map  and doesnt exceed
the speed of the wind downwind  bottom of the map  
however  it performs extremely well across the wind
 either side of the map   which is the most important
region 

future work
the most important part of future work will be testing
everything on the real boat  we only began building the
boat this quarter and plan to have it finished by the end
of the school year so we can enter it in an autonomous
sailing competition this summer 
i expect that ill need to make some changes to acheive
real performance similar to my simulations  however  i
hope that the structure of the model my system learns
is robust enough to translate without too much difficulty 
if performance regresses  there are several avenues i
can pursue  as mentioned above  there are some simplifications in my simulation and model that im aware
of  i can also rework the model to directly model uncertainty  that in particular may significantly improve
its performance in a real  noisier environment 

acknowledgements
while the design and coding presented in this report
are my own work  none of it would have been possible
without the work of my teammates on the stanford autonomous sailing team  wyatt smith  andrey sushko 
figure    a graph of the neural networks performance thomas teisberg  and connor anderson 
over time  as it was optimized by the genetic algorithm 

references
    pieter abbeel  varun ganapathi  andrew y  ng 
learning vehicular dynamics  with applications to
modeling helicopters  nips          
    pieter abbeel  adam coates  andrew y  ng  autonomous helicopter aerobatics through apprenticeship learning  ijrp       
    andrew y  ng  adam coates  mark diel  varun
ganapathi  jamie schulte  ben tse  eric berger and
eric liang  inverted autonomous helicopter flight via
reinforcement learning  international symposium on
experimental robotics       
    rmi coulom  reinforcement learning using neural networks  with applications to motor control  infigure    a heat map of the performance of the fi  stitut national polytechnique de grenoble       
nal controller at all wind speeds and directions  zero
wind is at the center  with directly upwind above that 
directly downwind below  and across the wind to either side  white is speed    varying linearly to solid
black at   wind speed  as expected  the boat cannot sail directly upwind nor downwind at more than the
wind speed  best performance is across the wind  the
sharp transition on either side from light gray to darker
gray is where the boat has enough wind transition to
foils  the odd patterns in the downwind region are  
inconsequential  because its more efficient to zig zag
diagonally and hit the much higher performance darkgrey regions to either side 

fi