cs      final project report
machine learning techniques for optimal sampling based motion planning
ross e  allen  ashley a  clark  and joseph a  starek
abstract a key question arising in optimal control and motion planning of dynamically constrained systems is how to
address the difficulty of  often non convex  collision avoidance
constraints in a real time fashion  one promising approach is
sampling based motion planning algorithms  which work by
drawing samples from the continuous set of configurations
available to the robot and attempting to link them together
in a graph to form a solution to the global problem  graph
construction requires that intermediate sample points be joined
together in an optimal fashion  this is achieved by solving a twopoint boundary value problem   pbvp   or steering problem 
for each graph edge  in practice  accomplishing this task in real
time is computationally intractable  on the order of thousands
or millions of edges  each requiring up to roughly tens ofseconds per solution for non convex problems   computational
efficiency can be gained by considering connections to only those
nodes within the local vicinity that are physically reachable
by the robot  i e   nodes within its reachability set  before attempting to steer between them  unfortunately  for the majority
of systems  computation of these sets is as difficult as the
original motion planning problem  once reachable nodes are
identified  however  further efficiency can be gained by using
an approximate cost function to estimate the best candidate
node to steer towards  and only then solving the full  pbvp to
that node  we propose the use of supervised machine learning
as a heuristic strategy for addressing these two facets of the
motion planning problem  approximating the reachable set of
a dynamic system  and approximating the optimal cost to go
function between any pair of states 

i  i ntroduction
with the recent rise in interest in autonomous vehicles 
including googles driverless car and the recently proposed
amazon prime air  the need has grown for rapid decisionmaking with hard constraints on safety and guaranteed
collision avoidance  the underlying question is  how does a
dynamic system select a collision free trajectory from points
a to b through an obstructed environment  not only is
feasible path planning required to meet mission goals  but
quite often it is desirable to find an optimal path in real
time that optimizes some objective  such as time  energy  or
fuel use  sampling based motion planning has emerged as
a promising approach to solving this problem  samplingbased algorithms first discretize the problem by drawing
samples from the continuous set of configurations available
to the robot and then attempt to link them together into a
connectivity graph that is amenable to artificial intelligence
search techniques  this simplifies calculations by allowing
obstacle constraints to be ignored  initially  and then performing collision checking a posteriori  they rely on the
assumption that configurations near each other are more
likely to be connected without passing through an obstacle 
their correctness hinges on the concept that once sufficiently
many intermediate connections have been explored  a global
path from start to goal will be discovered if one exists 
see fig    for an illustration  most planners fall into one
stanford university  department of aeronautics and astronautics
contact   rallen   aaclark jstarek  stanford edu

fig     illustrations of the motion planning problem and samplingbased motion planning 

of two categories  roadmap based planners that construct a
roadmap interconnecting all nodes  or tree based planners
that construct a spanning tree between all nodes 
for optimal motion planning  graph construction requires that
intermediate sample points be joined together in an optimal
fashion  achieved by solving an optimal two point boundary
value problem   pbvp   also called a steering problem  for
each graph edge  the optimal  pbvp  subject to obstacle
constraints  can be mathematically stated as 
minimize

j x  u  t 

subject to

x t   xfree for all t   t    tf  
u t   u for all t   t    tf  
x t    f  x t   u t   t 
x t      xinit   x tf     xgoal

u

   

where j is the cost function to be minimized  x is the state
vector  u is the control vector  xfree is the obstacle free state
space  and u is the set of admissable controls 
in practice  for heavily cluttered environments  discovering
a path could require on the order of thousands or millions
of edge computations and collision checks  solving such a
number of steering problems in real time is computationally
intractable  in order to reduce the number of these calculations  we may consider only connecting to nodes within
the local vicinity of the current state  for optimal motion
planning  the vicinity of a state is the set of states reachable
by the robot within a certain cost   called a reachability  or
its  reachable  set  connections need only be considered
to nodes within this set  and the order in which connection
attempts are made can further improve running time if the
cost to each of them is known or otherwise approximated
without solving each steering problem  to this end  we
propose the use of supervised machine learning to both
approximate these reachability sets and additionally estimate
optimal connection costs between node pairs 
the idea of applying machine learning techniques to improve
the running time of motion planning algorithms is not a
new one  burns     proposes an approximate  machine learning based approach for efficient roadmap construction that

fiattempts to reduce collision checking time  the approach
utilizes locally weighted gaussian regression to determine
the likelihood that a new sample or candidate edge is in
collision with the environment  based on the safety of its
neighboring nodes  the technique is useful for roadmapbased approaches with many edges  but likely yields limited
benefit for many tree based approaches  which only check
one edge at a time per iteration 
our proposed technique  on the other hand  would be applicable to all flavors of optimal sampling based motion
planning for most realistic scenarios    as reachability and
cost computations are integral to essentially every motion
planning algorithm  the approach may lead  within an acceptable error tolerance  to an effective  general way to improve
convergence rates of motion planning queries  in this paper 
we will show that with a training set of pre computed
 pbvp costs  we can accurately use     a locally weighted
regression algorithm for predicting cost function values and
    a support vector machine learning algorithm for nonlinear
binary classification of the systems reachable sets  to the
best of the authors knowledge  this is the first application
of machine learning to reachability classification  we apply
these learning algorithms to two systems of interest  the
dubins car model  see fig     and a deep space spacecraft
model  see fig     
ii  a pproach
here we outline the methodology behind our techniques 
a  cost prediction
for a given system  each motion planning query  represented
by eqn    differs only in the initial and final conditions of the
 pbvp  as a result  the optimal cost to go j  can be thought
of as a function of the endpoints x t    and x tf   parameterized by system dynamics  since motion planning algorithms
seek to connect only those nodes in close proximity  in terms
of cost  to one other  under mild assumptions  the solution
value to a similar query must be closely related and hence
can be interpolated from neighboring queries  this suggests
the use of local regression to estimate the optimal cost to go
for new motion plans  a simple  robust  and well developed
form of which is locally weighted linear regression  which
we employ here  in order to more effectively apply linear
regression techniques to general cost functions  likely nonlinear in the initial and final state variables   we compiled
a set of nonlinear combinations of state variables that we
hypothesized might be relevant to estimating the optimal
cost to go function  such as component norms  component
products  energy values  etc  we then ran a feature selection
algorithm to identify those that actually had a significant
impact on the approximation accuracy  this allows not only
a view of the trade off in approximation error and feature
vector size  but also an intuition for the control designer in
terms of choosing a feature vector for his or her relevant
application 
  though not proven here  it is believed the techniques of this paper require
lipschitz continuity of the objective function and the system dynamics with
respect to the control vector
  objective function and system dynamics regularity conditions  e g  
lipshitz continuity

model selection  locally weighted linear regression uses
optimal cost values of nearby feature vectors to interpolate
the value for a new query point  due to the large differences
in scale between feature vector components  the weights used
for regression were normalized to bring each of the components into the same unit scaling and improve interpolation
performance  we defined weights as 
fifi  i  fifi   
fifiv fifi
 i 
w   exp
   

 x i  j   x j
 i 

   j              n
with vj  
range  x j
where  is the bandwidth parameter  x i   rd is the ith
d
n
training point 
   r  r is the feature vector mapping 
and range  x j is the maximum extent of the j th feature 
with locally weighted linear regression  there is a tradeoff
between overfitting the data with a very small bandwidth
parameter  and underfitting the data with a very large bandwidth parameter  thus  we ran model selection over a range
of bandwidth parameters to determine the most appropriate
one for prediction  each parameters model was passed
through k fold cross validation  the bandwidth parameter
that yielded the lowest average percent error over all of the
k training sets was selected as the best bandwidth parameter
to use for cost prediction 
training method  for a fixed regression model  bandwidth
parameter   training for optimal cost estimation was performed using k fold cross validation  with k       error
was defined as the average percent error over all training
examples between the predicted cost and the actual cost as
returned by an optimal  pbvp solver 
feature selection  a backwards feature selection search
was run to obtain a trade off between feature count and
average cost prediction error  where the initial feature vector
was chosen to be an over approximation of the feature
set relevant to the prediction problem  for a given feature
set  once the best bandwidth parameter was determined via
model selection  the model was subsequently re fit to the
entire training set to yield parameter vector   the feature
vector component corresponding to the smallest magnitude
component of  was selected as the least relevant feature  and
removed from the feature set  this procedure was iterated
until one feature remained  yielding a priority ranking for
each feature in terms of its effect on cost estimation from
least to most relevant 
b  reachability classification
in the geometric case  without dynamic constraints   the
freedom of the robot to maneuver on straight lines in any
direction makes reachability easy to assess for shortest path
objective functions in unobstructed configuration spaces 
cost reachable sets form n spheres about the current node
x  rn   for dynamically constrained vehicles  on the other
hand  boundaries demarcating cost reachable sets are generally much more difficult to assess geometrically  analytical
descriptions often only exist for over  or underapproximations  numerical approximations become necessary  which

fiare known to be as difficult to compute  i e  exponential time 
as the original motion planning problem      the motivation
for a machine learning approach follows from the following
observation  by continuity of the system dynamics  reachable
sets are guaranteed to be simply connected  and therefore
reachable states must be separable from non reachable ones 
this suggests we can approximate the reachability boundary
using a non linear classifier  separating training examples
into reachable and non reachable sets  the classifier can
then be used to estimate whether new query point pairs
 xinit   xgoal   are reachable within the cost threshold used to
define the trained reachability boundary  for the applications
in this paper  a support vector machine  svm  algorithm
with a non linear kernel function was employed 

fig     dynamics for the dubins car model 

c  data generation
in order to train the locally weighted regression and svm
algorithms previously discussed  it was necessary to generate
true examples with known optimal cost to go  this was
accomplished by solving a large number of  pbvp problems
for our chosen systems and recording the inputs attributes
 initial and final states  and outputs  optimal cost   any  pbvps with infinite cost  i e   those with no feasible connection
between initial and final states  were neglected from training 
to ensure a well distributed sampling of the inputs attributes 
training data was generated using the halton sequence 
assuming a hypercubical feature space  each  pbvp was
solved by first discretizing the continuous optimal control problem using the chebyshev pseudospectral method 
transforming the optimal control problem into a nonlinear
programming problem  nlp   the existing software package
fmincon in matlab was then employed as the nlpsolver       training examples were generated for each of
our numerical demonstrations 
iii  a pplication and r esults
to evaluate the effectiveness of machine learning for motion
planning problems  we selected two example models  the
first  a dubins car  is a canonical model that has a well known
analytical solution useful for reachability set comparison 
the second  a spacecraft in deep space  is more complex
and more relevant to practical autonomous vehicle control 
a  dubins car
the dubins car models a simple non holonomic car like land
vehicle constrained by a maximum turning angle max with a
fixed forward speed v  r     this maximum steering angle
imposes a minimum turning radius min on the vehicle  the
dynamics of dubins car     is given as 
x   v cos 
y   v sin 
v
   u   tan 
l
where
the
set
of
admissible
controls
is
 v

u
 
 l tan max   lv tan max   hence the state is
represented as x    x  y     the control task is concerned
with minimizing the total path length  which is equivalent
to minimizing the traversal time j   tf  t  since v t    v
is constant  the scenario is depicted visually in figure   

fig     reachability sets for an instance of the dubins car vehicle
 
 min      v      l      for cost threshold horizon times t  pi
 

the cost limited reachable set for a given dubins car is
known analytically  and the projection of this set into the x y
plane is depicted in figure    heading constraints are also
accounted for in the analytical solution  but are not displayed
for the sake of simplicity 
the dynamics of the dubins car are invariant with respect
to its state  therefore  without loss of generality  we may
assume the initial state xinit is always the origin  and set the
feature vector to consist of combinations of the target state
only  in a real motion planning problem  the motion planning
query can always be transformed to this case 
in simulation  we began with a    element feature vector  as
shown in table i  the ordering of the elements in table i
was determined by backwards feature selection  from most
relevant feature to least relevant feature  as described in
section ii a  in figure    each data point represents the
average cost estimation error obtained with the n most
relevant features  with n being the value along the x axis 
results show that one can achieve     error from the true
cost with just eleven features 
given the same  pbvp training examples as for cost prediction  reachability was assessed using a nonlinear svm

fig     dubins car average percent error for cost prediction  per
feature set size 

fitable i  dubins car features from most important to least important 
   

     

     

  

y

xy

cos 

x cos 

y 

x

x 

x    y  

tan 

 
sin  
p
p

x 



p

y 

y

x

x    y       
sin 

x sin 
y cos 

tan  
y tan 



x

cos  

y sin 

 x 

 y 

 

classifier with a  th order polynomial kernel    the classification results on a test set of     new query points are shown
in figure    several kernel functions were attempted  as the
trials have shown  the   th order kernel seems sufficiently accurate  on the order of       errors were               and
      respectively for each of three cost thresholds  used to
establish the cost reachable boundary   j        j   
  and j         where  was the training set mean cost
and  the standard deviation  note that these results are not
shown directly superimposed on the reachability set in figure
  due to the complex three dimensional nature of the state
space 
b  deep space spacecraft
here we explore a more challenging dynamic system  a
three degree of freedom deep space spacecraft  for which
reachability sets cannot be described analytically  deepspace refers to the fact that the spacecraft operates in an
assumed gravitationally free environment  for simplicity and
clarity of exposition  we omit coupled attitude dynamics and
model the vehicle as a point mass that can be accelerated by
a thrust vector t that can point freely in any direction  we
consider motions sufficiently small such that propellant use
is negligible in comparison to the spacecraft structural mass 
and therefore its mass m can be considered approximately
constant  this allows system dynamics to be linear  with each
coordinate direction acting as classical double integrator 
x   vx
y   vy
z   vz

vx   tx   m
vy   tx   m
vz   tx   m

the vehicle is controlled by the thrust vector direction n 
s    the   sphere  and throttle           hence u   s   
        the control task is concerned with minimizing the
transfer time  j   tf  t    the scenario is illustrated in
figure   
the features examined for the spacecraft are shown in
table ii  listed in order of importance as determined by our
backwards search feature selection algorithm  the average
weighted linear regression estimation error obtained from
increasingly large sets of the top priority features is depicted
  the svm classifier was implemented using the matlab statistics
toolbox 

fig     trained reachability set for the dubins car example  any
blue circles above the cost threshold  shown as a solid black line 
represent false positives  while any red crosses below the threshold
are true negatives 

in figure    interestingly  it appears that only the top  
features out of the original    in our feature vector are
required for the average cost estimation error to fall below
     for an unseen  pbvp problem 
for the full feature set  reachability was assessed using a  thorder polynomial kernel  similar to the dubins car  in both
cases  the  th order polynomial kernel seemed to balance
the trade off between bias and variance for the classifier 
the classification of a     pt test set of new  pbvp query
points can be seen in figure    yielding errors       
        and        respectively  again for cost thresholds
j        j      and j        
c  execution time
the main purpose of this research is to reduce the amount of
time required by a motion planning algorithm to determine a
reachable set of states  along with the cost to connect to those
states  table iii confirms that by using machine learning
techniques  we are able to drastically reduce the computation
time necessary for these operations by as much as   orders
of magnitude 

fifig     dynamics for the deep space spacecraft 
table ii  deep space spacecraft features  from most important to
least important
   
qfifi fifi
 
fifixf fifi     v     
fifi fifi
fifixf fifi

     

     

 y   

yf 

yf

yf  y 

y 

 x   

xf  x 
zf  z 

z 

 z   

x 

xf

  s    

  v    

fifi fifi
fifixf fifi    v    

 yf  y    

y  

zf

 xf  x    

z  
x  

x f
zf 

 zf  z    


t
x f   xf   y f   z f

v     x    y    z   t

s    x x    y y    z z   t

iv  c onclusion
we have succesfully shown that machine learning algorithms
can be used as heuristics for estimating the steering costs and
reachability sets for dynamically constrained systems  by
training local regression algorithms and nonlinear classifiers
with numerical solutions to  pbvps  we can radically reduce
the computation time of the steering function  by up to
three orders of magnitude in our numerical experiments  for
an online  sampling based motion planning algorithm  the
effectiveness of our approach was demonstrated consistently
on two representative systems  the dubins car and a deepspace spacecraft  for the dubins car  we achieved an average
error of       for reachability set classification and      
error for cost estimation  for the deep space spacecraft  we
achieved an error of       for classification and       for
cost estimation  we are hence optimistic that these techniques
will help enable real time optimal sampling based motion
planning for real world applications 

fig     trained reachability set for the deep space spacecraft
example  blue circles above the cost threshold  shown as a solid
black line  represent false positives and red crosses below the
threshold are true negatives 
table iii  average computation time comparison for the two point
boundary value problem solver  the machine learning cost approximation  best fit model using all features   and the machine learning
reachability classification  average over all   cost thresholds  
application

 pbvp solver

ml cost

ml reachability

dubins car
spacecraft

     s
     s

    s
    s

     ms
     ms

r eferences
    brendan burns and oliver brock  sampling based motion planning
using predictive models  in proc  ieee conf  on robotics and
automation  pages           barcelona  spain  april       ieee 
ieee 
    dusan m  stipanovic  inseok hwang  and claire j  tomlin  computation of an over approximation of the backward reachable set using
subsystem level set functions  in dynamics of continuous  discrete
and impulsive systems  volume    of a  mathematical analysis  pages
        watam press       
    steven m  lavalle  planning algorithms  cambridge university press 
   west   th street  new york  ny             usa  july      

fig     deep space spacecraft average percent error for cost prediction  per feature set size 

fi