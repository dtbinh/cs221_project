collaborative filtering on sparse rating data for yelp com
jason fennell
jfennell yelp com
december         

abstract

yelp and netflix revolve around users rating entities  local businesses for yelp  movies for netflix  however  there is a fundamental difference in approach that changes the framing of
this problem  the whole of netflix com pushes
users toward casually rating a large number of
movies  yelp  on the other hand  is focused on
gathering high quality review content  and thus
strongly discourages rating a business without
a well thought review  this higher per ratingcost means the yelp rating dataset is far more
sparse than that of netflix  even restricting
to users and businesses with a significant number of reviews  only      of possible ratings
are known  this number is    for the netflix
dataset   dealing with this sparsity issue is the
focus of this paper 

we examine the problem of building a recommendation engine for yelp com  particularly the
problem of extremely sparse rating data  we
show that while click data does not directly
model rating data well  it can be used to improve
and extend the reach of neighborhood based rating interpolation methods 

 

introduction

yelp com is a website that aggregates user reviews of local businesses ranging from restaurants to flower shops  in order to build a community and grow as a business  yelp must ensure
that users are exposed the most relevant businesses for their needs  this is primarily accomplished through active user actions like searching on the site  however  as netflix  amazon
and other sites have shown  this misses the powerful avenue of passive suggestions proposed to
the user 
the focus of this paper is to create a recommendation engine for yelp based on the extensive public research that has been done as
part of the netflix challenge  at first glance 
yelp seems nearly identical to netflix in the applicability of a recommendation engine  both

we take a three step approach to the problem of sparsity  first  we build a netflix style
recommendation engine for the subset of active users businesses  those that have at least
   ratings  next we investigate the direction relationship between ratings and clicks  finally 
we build a recommendation engine that leverages click data to improve its recommendation
accuracy over the pure rating model  this clickbased model will also open the door to making
yelps recommendation engine much more general  giving personalized ratings to even to users
 

fiuser rating for each user  then the average business rating for each business  giving a substantial performance increase over global average by
accounting for user or business bias  we see
from the results in table   that business averages have more variability and thus explanatory
power than user averages 
for all of our further models in this paper we
first subtract the user average from each user
rating  then subtract the business average from
each business rating  we can then work with the
residuals without worrying about user business
biases  our final heuristic model  which serves
as a reasonable baseline to compare later models against  predicts the sum of the user and
business averages  we can see in table   that
this double centering of results produces a substantial       improvement over the global average model  these results are are somewhat
higher than comparable number in the neflix
challenge  which is expected given yelps sparser
data  as we previously mentioned  even restricting to users and businesses with a substantial
number of reviews  yelp has data on less than
     of user  business pairs whereas netflix has
data on about    of user  movie pairs 

who have few or no ratings 

 

related work

there are essentially two approaches to the problem of predicting unknown ratings  the first
family of approachs  called neighborhood methods  predict an unknown rating for a user as a
weighted average of the known ratings of similar users  the other family of approachs  called
laten factor methods  predict unknown ratings as
a product of auto detected latent features generally produced by some sort of rank reducing
matrix decomposition  we focus on the neighborhood methods in this paper as they are easier
to implement and  as we will see later  can have
their dependence on rating data weakened  for
more information on collaborative filtering and
the netflix callenge  see     which lists the papers
of the team that won the netflix challenge 

 

experiments

for all of our experiments we restrict ourselves
to users and business on yelp that have at least
   reviews  we train on     of our data and test
on the remaining held out      each user u is
represented as a vector that maps from business
b to the rating num clicks u had for b  businesses
are defined similarly  we measure performance
with root mean squared error 

method name
global avg
users avg
bizs avg
user   biz avg

test rmse
      
      
     
     

table    baseline models

   

baseline model

to establish a performance baseline we build sev    rating based model
eral nave heuristic models  our first model simply predicts the global average rating for every now that we have a baseline model and are workunknown rating  next we predict the average ing with double centered residuals we consider
 

fiusers are identified it is harder to find ones that
have actually rated the business in question 
the other main observation from this data is
that it does not outperform the baseline model
by very much at all  in fact it takes a neighborhood of size    for the user centric approach to
outperform the baseline by        this seems to
be a data sparsity problem  ratings are sparse
enough that finding any similar users in the first
place is a challenge  let alone similar users that
rated a particular business  however  we do see
decreasing rmse with increasing neighborhood
size  and the business centric approach does beat
out the baseline by for neighborhoods of k      
so neighborhood methods seem to have at least
some power 

predicting ratings as a weighted sum of ratings
by similar users on a given business  that is  the
predicted rating of user u on business b is
p
u  n  u b  wu   u ru   b
ru b   p
 
u  n  u b  wu   u
where r is the estimated rating  r are known
ratings  w are similarity scores between pairs of
users  and n  u  b  is the set of the k users most
similar to u  pearson correlation coefficients are
used to measure similarities  we experimented
with shrinking correlations toward zero based on
their support  as outlined in      but we found
that it actually hurt our performance 
note that the above explanation takes a usercentric approach  where ratings are predicted as
a weighted sum of the ratings from a neighborhood of users  it is equally valid and defined similarly to take a business centric approach where
ratings are a weighted sum of ratings from a
neighborhood of businesses  we try both approaches 
we list our results for rating based neighborhood models in table   for both user and business centric approaches and a range of neighborhood sizes  from which we can make several observations  first  the business centric approach
outperforms the user centric approach for all by
the trivial size neighborhood  we think that this
is due to there being greater variation in the set
of businesses rated by a user than there is in
the set of users that rate a business  users that
like thai restaurants will have rated a bunch
of thai restaurants  which will make businesscentric predictions of thai restaurants more reliable because it is easy to find similar businesses
rated by a given user  however  the exact set of
thai restaurants rated will vary a lot even among
other users that like thai  thus  even if similar

k nn
 
 
  
  
  
  

user
     
     
     
     
     
     

biz
     
     
     
     
     
     

table    rating based model rmse by neighborhood size

   

regression on clicks

we will now begin to examine the application of
click data to the recommendation problem  yelp
encouraging casual rating of businesses has the
potential to de emphasize quality reviews  which
are the foundational to yelps value as a website  clicks  on the other hand  are a source of
revenue  yelp thus has an incentive to gather as
many clicks as possible  so while they are noisier
than ratings we may be able to leverage clicks to
 

figiven user or business to interpolate between 
second  the similarity scores and interpolation
weights are less well determined with less data 
we showed in the previous section that clicks
cannot really help us address the first of these
problems  however  what we can do is use clicks
instead of ratings to calculate similarity scores 
this will allow for a better estimation of a neighborhood of similar users or businesses and their
relative importances 
for the click based approach we normalize
away the absolute number of clicks and only use
the presence vs  absence of clicks in the user or
business vectors  this is because  for instance 
the similarity scores of users that have    and
  clicks on a business  should not really be any
different than the similarity scores of users that
have   and    clicks on a business 
we show our results for the click based model
in table    the most important thing to notice
about this table is that the user centric model
is now beating out the baseline by a substantial  if not large  margin  this shows the validity of clicks as a similarity metric  which means
that this feature can be extended to users who
have not rated any yelp businesses at all  given
only click data we will be able to compute  based
on highly active users with similar click profiles 
businesses that a user would not find otherwise 
a more puzzling trend in the click based
data is that the business centric approach not
only does worse than the user centric approach 
but actually does worse than the rating based
business centric approach  it seems most likely
that the relative cost of making a click versus
making a rating will reverse the logic we outlined
in the rating based model section  it is easy to
make clicks so users that like thai places will
probably have clicked on many thai places and
provide a better basis for finding similar users 

address data sparsity problems 
with this in mind we have investigated the relationship between the clicks and ratings of the
set of users that we used for previous recommendation models  in particular we looked at clicks
from search results to individual businesses  we
found that about     of a users clicks were on
businesses that they had rated from which we
conclude two things  first  clicks and ratings
have a substantial enough overlap that clicks can
be useful for the prediction of ratings  second 
adding clicks to our model will bring in a substantial amount of extra information 
given that there seems to be a relationship between ratings and clicks we tried to estimate ratings from clicks by using least squares to train a
linear model that predicts rating with the number of times a user clicked on a business  the
resulting set of models had terrible predictive
power  with an average r  value of       looking into the individual models it appears that
linear term of the model tends to have a small
magnitude      average absolute value  while the
constant term of the model tended to the average rating of the user  essentially the regression
tried to minimize the effect of number of the
bad explanatory variable  while it is not particularly surprising that this model performed
poorly  this negative result does suggest that approaches that directly model ratings from clicks
will be less than fruitful 

   

click based model

based on the failure of a direct rating from clicks
model  we decided to use clicks in a more indirect
manner to help with the computation of similar
neighbors  note that in the original rating based
model sparsity of ratings hurts us in two ways 
first  there are just are not many ratings of a
 

fibusinesses  however  are subjected to a great
deal more clicks from a variety of users that we
cannot now discriminate between positive and
negative interest 
k nn
  
  
  
  

user
     
     
     
     

biz
     
     
     
     

table    click based model rmse by neighborhood size

 

conclusion

in this paper we examined building a recommendation engine on extremely sparse data  particularly the application of click data to the problem  we showed that clicks do not model ratings
well directly  but can be used to effectively boost
the performance of some neighborhood methods 
this result is particularly exciting is that it not
only increases the performance of the recommendations  but it also allows them to be made to a
broader range of users 

references
    robert m  bell and yehuda koren  scalable collaborative filtering with jointly derived neighborhood interpolation weights  in
icdm     proceedings of the      seventh ieee international conference on data
mining  pages       washington  dc  usa 
      ieee computer society 
    volinsky bell  koren  http   www  research 
att com volinsky netflix  
 

fi