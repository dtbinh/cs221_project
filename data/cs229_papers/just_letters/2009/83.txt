a generalized method to solve text based captchas
jason ma  bilal badaoui  emile chamoun
december         

 

 

abstract

we explored five main areas  comprising the segmentation portion of our method 

we present work in progress on the automated solving of text based captchas  our method consists
of two large components  firstly  we segment the text
from the background  afterwards  in order to identify the text  we extract features and use learning
algorithms to classify each character  in particular 
we developed a weighted k  means algorithm  which
is largely able to segment the text portion of the
captcha image  additionally  we developed an
algorithm to separate the individual characters  finally  we explored classifying the separated characters using several methods  including through support vector machines and optical character recognition algorithms  we also present some current challenges we face in this algorithm  and some ideas we
plan on exploring to overcome them 

 

segmentation

   
     

weighted k  means
k  means

we began by exploring k  means clustering of the colors  treating each pixel as a vector in r     by compressing the colorspace of the image  we hope to segment the text from the background  it is likely that
the text has different color values  as otherwise humans will not be able to identify the text easily  naturally  then  if we were able to cluster the pixels so as
to place the text and the background into separate
clusters  we would be able to more easily recognize
the text 
unfortunately  simple k  means does not perform
well in certain cases  especially when the both the
background and text vary in color  moreover  simple
k  means performs poorly when the text consists of
progressively differing colors  as the different parts of
characters will be placed in different clusters  other
weaknesses include when the text is obscured by lines
that extend across the text  as the lines themselves
will be clustered with the text 

background information

a completely automated public turing test for telling
computers and humans apart  or captcha  is used
in many web based applications  the most prevalent captchas consist of an image of a sequence of
distorted letters  which is purportedly difficult for a
computer to solve  but easy for humans  captchas
are used to prevent the automation of certain tasks 
for instance  they are often found on website registration forms  which helps ensure that each registration
is from a human  previous research has been traditionally focused on solving single specific types of
captchas 

     

weighted k  means

to surmount these challenges in simple k  means  we
investigated an enhanced algorithm in which we consider both the color and the location of the pixel 
specifically  for each pixel  the distance to the centroid is defined as a weighted combination of the euclidean distance between the respective colors  and
  data retreival
the euclidean distance between the geometric locawe began by obtaining      captchas from the tions of the pixels within the image  by adjusting
icq registration site      captchas from gmail  the weight of the two components  we hope to strike
    captchas from yahoo   and     captchas a balance and cluster pixels that are of a similar color
from kongregate  in addition  we used a small num  and location 
ber of captchas from other generators  in order to
whereas simple k  means performed poorly on cerensure that our algorithm is general 
tain captchas  with the proper weights and the
 

fiproper k  weighted k  means performs significantly
better 
below  we show three figures comparing the performance of weighted and unweighted k  means  figure   shows the original captcha  which is difficult to segment due to the background  figure  
shows the result when simple k  means is used  figure   shows the corresponding result for weighted k means  both algorithms used k      clusters  the
weighted k  means algorithm weighted the proximity
with a factor of w      by weighting the k  means
algorithm  we are able to cluster the text into a small
number of clusters  with each character completely
within one cluster 

to find the orientation of the text  we compute the
first principal component of all the points in the text 
subsequently  to simplify the discretization step  we
rotate the image so that this principal component is
horizontal  next  we project the image on the principal component  and find the points with highest
differences in intensity  we calculate the mean and
standard deviation of the changes in intensity and 
for all points that lie c standard deviations above the
mean  we make a vertical cut to divide the cluster
into two parts  with a continuous region of high difference  we make the cut at the regions median to
minimize information loss 

   

minimum spanning tree

one of the approaches we tried was using the minimum spanning tree to segment the captchas 
in essence  minimum spanning tree clustering techniques resemble k  means  with the extra advantage
of constructively building the clusters 
each pixel corresponds to a vertex in the graph 
neighboring pixels within a predetermined window
size will be connected by edges  the weight of each
edge being a weighted average between the color
intensity and proximity  similarly to weighted k means   we can build the minimum spanning tree
resulting from this graph 
first  let us lay out the theoretical foundations of
our mst clustering algorithm 
definition     for a data set d  c  d forms a
cluster in d only if for any arbitrary partition c  
c   c    the closest data point d to c   d  d  c   
is from c   
in essence  by this definition  we are trying to capture our intuition about a cluster  that is  distances
between neighbors within a cluster should be smaller
than any inter cluster distances 

figure    a captcha from icq

figure    unweighted k means

figure    weighted k means
     

   

vertical cuts segmentation

fundamental results

property     expansion property  if c  and c  are
two points of a cluster c  then all data points in the
as can be seen in figure    weighted k  means can
tree path  p   connecting c  and c  in the minimum
cluster multiple characters into the same cluster  as
spanning tree  must be from c 
classification requires individual letters  separation of
the proof of this result can be found in     
clusters is necessary  to accomplish this  we first deproperty     let c  and c  be such that c  is the
termine the orientation of the text  then  we disclosest
point to c    then either c  defines a cluster
cretize the image space into lines that are perpenalone 
or
c  and c  are in the same cluster 
dicular to the dominant orientation  characters are
separated by lines whose change in pixel density is
the proof of this result can be found easily by apgreatest 
plying the definition     
 

ficlose colors   and the clusters will not necessarily consist of characters only  namely because of the nature
we can get from the first fundamental result that of a captcha  characters and noise nearby might
a cluster is a connected component of the minimum be clustered in the same cluster   for example  afspanning tree  hence  clustering is only a matter of ter running weighted k  means on the captcha in
pruning certain edges from the minimum spanning figure    one of the clusters obtained is shown in
tree  the resulting graph will have a number of con  figure   
nected components  defining the clusters 
     

corollaries

     

exploration clustering algorithm

the algorithm consists of two steps 
   mandatory components  to avoid singleton
clusters  the algorithm first uses the second fundamental result to build agglomerative mandatory components  we start first with each vertex
considered as a component  for each point a in
a component c  we consider the component d of
as closest neighbor  if c    d  c    c  d  we
apply iteratively this rule to every component as
long as merging is occurring  we stop when the
process stabilizes 

figure    one cluster from weighted k means

our noise removal algorithm tackles these challenges  the algorithm is based upon the observation
that a cluster found by weighted k means consists of
a set of continuous components  the idea is then
to break a cluster into these continuous components 
each of these components would be considered a separate cluster provided it is not too small  to find
   exploration  in the exploration phase  we continuous clusters  we use again a graph structure
take every mandatory component m c  for each to connect neighboring cluster pixels  finding the
point b on the border of m c  we get its closest continuous components is equivalent to finding the
neighbor n in m c  if the distance between b connected components of the graph  by applying the
and n is less than m   s  d  where m is the algorithm on the cluster in figure    we get the folmean of distances in m c  d the standard devia  lowing clusters 
tion and s is a parameter we will call sensitivity 
we merge m c and the mandatory component
containing b  after doing this for every point
that was on the border  we update the mean and
the standard deviation and reiterate 

     

results
figure    separated cluster  after noise removal

unfortunately  the results were not satisfactory at all 
the mandatory component phase in the algorithm
produces a huge initial number of mandatory components  typically in a     x     picture  the number of
mandatory components is around        this made
the exploration phase very inefficient with mandatory
components being merged  due to similar small size 
and resulting in creating one very big cluster that
would contain more than     of the image 

figure    separated cluster  after noise removal

   

weighted k  means noise removal

as discussed earlier  the weighted k  means segmenta    normalized cuts
tion manages to create successfully clusters containing text  however  one cluster might contain more the apparent dissimilarities between the text and the
than one character  possibly if the k used is small background in captchas suggested the use of noror if the characters are close enough and have very malized cuts as a potential segmentation method     
 

fieffectively  in addition to measuring the total similarity within each cluster  the normalized criterion takes
into account the total dissimilarity between different
groups 
essentially  the algorithm models the image as a
weighted undirected graph  each pixel is a node in
the graph and is connected by edges to the other pixels in the image  moreover  a weight indicating the
degree of similarity between two pixels is assigned to
each edge 
thus  segments are formed by removing edges from
the graph  the normalized cut ratio is defined by
the weight of the cut to the weight of the edges in
a given segment  the normalized cut segmentation
algorithm seeks to minimize the normalized cut ratio 
in accordance with the overall goal of minimizing the
weight of the edges removed 
unfortunately  this algorithm did not perform too
well on our dataset since the text in the captchas
often progressively changes intensity which makes it
very hard to segment individual letters properly  effectively  it turns out that this algorithm often splits
the same letter into two or more clusters if the different parts of the character share more similarities
with the background that with each other 

the case of connected characters  the algorithm might
assign two halves of the same character to the two
neighboring clusters if the distance of each half to
the neighboring cluster is smaller than the distance
that separate them 

 

classification

we tried a variety of methods to classify the individual segmented characters  this comprises part two
of our method  our training data consisted of the
captchas collected  as described in the data retrieval section 

   

support vector machines

our first attempt was to try to classify characters using svm  we started first by generating a training set
consisting of all alphanumeric characters in different
shapes  fonts and sizes  using surf  we extracted
the features from each element in the training set 
for each training element  we ran k  means over the
features  k was heuristically fixed at      we then
trained a one versus one multi classifier svm using
the surf features of the centroids as inputs  the
aim was to use the trained svm on the segmented
    fuzzy c means clusterization
clusters from the previous section  however  the acwe applied fuzzy clustering to the segmented text curacy of the trained svm was very low  the svm
parts to try to further separate characters in the same had     accuracy  conceptually  this was not very
cluster  the fuzzy clustering algorithm can be de  surprising  consider for examples the characters e
scribed in the following steps 
and f  any interest point in f will be in e  however 
e should contain at least one more interest point  the
chose a number of clusters 
bottom right edge   running k  means could only be
harmful to the classification of either e or f  if k
assign randomly to each point coefficients
is big enough for e  the classification of f will be
that represent their degree of belonging in
harmed by added irrelevant features  the converse
a cluster 
would happen if k were small 
repeat until convergence  
compute the centroid of each cluster 
which is defined as the mean of all
points in the cluster weighted by their
degree of belonging to the cluster 

   

optical character recognition

another classification method we considered was optical character recognition  optical character recognition  ocr  is the electronic translation of textbased images into a computer editable form  given
update the coefficients to reflect the
the success of ocr technology in advanced identify
new degree of belonging to the cluster 
the segmented characters 
 
tesseract  which is widely considered as one of
although this algorithm performed well in separat  most accurate open source ocr engines available 
ing spaced out characters  it did not succeed in seg  was run on the segmented characters in an attempt
menting connected characters as is the case in google to recognize them 
although tesseract succeeded in identifying some
captchas  in particular  we found the assignment
of clusters in this algorithm to heavily depend on the characters  it turned out to not be suitable for our
physical location of points in the image  thus  in classification problem for the two following reasons 
 

fi   tesseract learns the font of the characters in
its training set  which consists of scanned electronic documents  therefore  tesseract will not
succeed in identifying characters whose font differs significantly from that training set  moreover  training tesseract on a customized dataset
is not feasible since the engine will not be able
to learn the font given that different types of
captchas do not have the same font 

that lenet   is successfully able to recognize handwritten characters leads us to believe that it might
perform very well on captchas if trained on a good
dataset  effectively  handwritten characters present
features that are very similar to captchas such as
a high degree of variability in font  distortion as well
as the spacing between individual characters 

   

   tesseract uses a dictionary to identify whole set
of words  as opposed to individual characters  in
that sense  tesseract does poorly when it comes
to identifying individual characters  in some
cases  it even tries to match a character to a full
word in its dictionary if such match is possible 

 

shape context features reflects the distribution of a
pixels neighboring points relative to it     thus  corresponding points on two related shapes will have
similar shape context features  in particular  letters
are defined by the relative locations of each pixels
neighbors  and thus shape context features are highly
robust to distortions in text  as capturing the dependencies between neighboring pixels is key to successful identification  for this reason  shape context
features will likely perform significantly better than
surf in a support vector machine 

work in progress

given the low success rate achieved by out of thebox character recognition packages and our intent to
continue work on the project  we are currently considering other classification methods outlined in the
next sections 

   

 

conclusion

the key step in solving captchas  segmentation to
extract individual letters  has been reasonably successful  through using a variety of algorithms  we
reduce color variations in the image  separate clusters  and reduce the noise in each cluster  from our
algorithms  we can retrieve with reasonable success
a set of binary images that represents each character
in the captcha  additionally  more work remains
to be done in classification  several ideas have significant potential in this area  these results show
promise for a generalized captcha solver  which
would render them ineffective and promote the need
of a improved system 

back propagation

one idea worth exploring is back propagation 
briefly  similar to the way humans reason about
captchas  a high confidence classification of a certain segment in a captcha provides us with valuable information about the structure of the text 
such as orientation  this information could be propagated back to the segmentation in order to obtain
better quality clusters  which will provide better results in general 

   

shape context features

lenet

indentifying individual characters from segmented references
text based captchas requires robustness to font
selection and image transformations  in that con      jianbo shi and jitendra malik  normalized cuts
text  we are currently exploring using convolutional
and image segmentation  ieee transactions on
neural networks to try to recognize images with minpattern analysis and machine intelligence       
imal preprocessing  convolution neural networks are
a form of multi layer neural networks designed to rec      jitendra malik serge belongie and jan puzicha 
ognize visual patterns from images  they are robust
shape matching and object recognition using
to distortions and geometric transformations and can
shape contexts  ieee transactions on pattern
recognize patterns with a high degree of variability
analysis and machine intelligence       
such as captchas 
one such convolutional network is lenet           y  bengio y  lecun  l  bottou and p  haffner 
gradient based learning applied to document
which is originally designed to identify handwritten
and machine printed character recognition  the fact
recognition  proceedings of the ieee       
 

fi    victor olman ying xu and dong xu  minimum
spanning trees for gene expression data clustering  genome informatics       

 

fi