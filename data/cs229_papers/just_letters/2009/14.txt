controller design for a wall landing airplane
alexis lussier desbiens  etienne le grand
 alexisld legrand  stanford edu
december         

abstract  plane perching on a wire has been
demonstrated with success in laboratory
conditions by  cory   tedrake         the
present paper focuses on designing a
controller for a small wall landing glider  we
use a simulator and a reinforcement learning
algorithm in a coarsely discretized state space
to design an optimal control for the landing 
analysis of this policy allows us to deduce a
simpler closed loop controller that is robust to
variations in initial speed and that only relies
on pitch and pitch rate measurement  a
controller of that class is now being
implemented on the real airplane 

problem description
the biomimetics   dextrous manipulation
laboratory  bdml  at stanford has been
working on allowing perching on vertical
surfaces for small uavs  the maneuver usually
goes like this  the plane flies toward the wall at
cruise speed        m s   detects the wall at  m 
pitches up to    degrees to rapidly decrease its
speed by increase drag and touches down at
about     m s  a specially designed suspension
then absorbs the impact and allows the microspines  claws  to engage the wall  when properly
executed  this maneuver is quite robust  always
maintains some forward speed  and thus
controllability  and the suspension provides a
large region of velocities and orientations at
which touchdown is possible  this envelope of
velocities and orientations is defined as 
pitch            x       m   s  y       m   s
unfortunately  the current maneuver is
sensitive to the initial airspeed of the plane  for
the same elevator deflection  the faster the plane

goes the larger the pitching moment created will
be  the previous feedforward controller was only
tuned for a specific airspeed and going faster
meant doing a looping  while going slower meant
not pitching up enough and crashing onto the
wall  although it would be possible to sense the
airspeed by adding a sensor  this would add
weight to an already heavy system 
to solve that problem  we first developed a
controller able to cope with a wide range of initial
speeds using reinforcement learning to design an
optimal feedback control  full states controller  on
a simulation model of our airplane  second  we
used this simulator to evaluate the initial flying
conditions at which the rl controller can
successfully bring the plane in the allowable
touchdown envelope  third  we observed the
optimal trajectories and deduced a simple
controller that is robust to variation of initial
airspeed and only uses the sensors currently on
the airplane 

simulator
the simulation model of the glider  inspired
by work from  cory   tedrake         had
already been developed at the bdml for a glider 
this model considers the wing and elevator as flat
plates and thus  the lift and drag coefficient can be
expressed as a function of the angle of attack    
c l  sin    cos    c d    sin      
a simple propeller model has been added to
simulate the prop wash on the control surfaces
and the variable thrust with respect to flying speed
during normal flight  the thrust of the propeller
can be expressed with a simple approximated
relationship 
t  t   t vinco min g

fiwhere t  is the static thrust and t  is a
negative coefficient that reduces the thrust as the
plane velocity increases  given the thrust of the
airplane  it is possible to use the propeller disk
theory to calculate the prop wash on the control
surfaces 
 t
 
vout 
 vinco
min g
adisk
where  is the air density and adisk is the
propeller disk area  note that although the thrust
was added to the model  the plane was flown as a
glider for the work presented in this paper 

bound j   and a wise choice of the scanning
direction  instead of discretizing the time  we
define a transition z   s  a  as the trajectory of the
plane between the state s and the moment when
the plane crosses one hyperplane of the
discretized space  as shown on the figure   in a  
dimensional case  also  we use the fact that the
transitions dont depend on the coordinates x and
y when the discretization step is constant on those
axis  hence  only      different simulations are
actually computed to find the whole set z   s  a  in
the case of a glider 

rl algorithm
like in  cory   tedrake         we
formulate our problem as an infinite horizon
optimal feedback control problem  our system
has
a
 
dimensional
state
space

s    x  y  x   y      
and
a
space
of
actions a   q e   t   with qe being the elevator
command and t the throttle command  for each
state s and each command a  the simulator gives
a transition function z   s  a  t    s     our controller
has to output a     s   such that if a  t    a     s t   
during the maneuver  the plane will arrive close
to the goal s g    x g   y g   x g   y g   g  g     in our





case  we define sg as    m   m   m s      m s 
  deg   deg s   in order to achieve this control 
we define recursively a cost function j with
j     s    min   s  s g   t q  s  s g    j max  

j i     s    min   j i   s    j   z   s  a    
a a

where

q  diag  q x   q y   q x   q y   q   q  
characterizes the cost of being off the goal in
each direction  note that we make sure that
j   grows rapidly in the x direction so that the
airplane reaches the other optimal touchdown
conditions as it touches the wall 
by discretizing the state space  we use a value
iteration algorithm to make j converge to j     in
order to be computationally tractable  we only
use    bins in each dimension  the convergence
is accelerated by the use of an upper

simulated trajectory
transition
initial  discretized  state
state s after transition
discretized states used
to interpolate j s 

discretized state space
of dimension  

fig    transition bounds    dimensional case

the optimal control is obtained by
a     s    arg min   j     z   s  a   
a a

because of the coarse discretization  we cannot
be sure that this is a near optimal control  in order
to validate it  we feed it back into the simulator
along with several different initial states 
thanks to an optimized algorithm  we were
able to run the value iteration algorithm on the    
states in about    seconds  several discretizations
 up to     states  and cost function initializations
have been implemented  all leading to slightly
different trajectories  the results presented below
come from the standard discretization of    bins
in each direction with a cost function that was
judged suitable for the needs of landing on a wall 

rl optimal trajectories
figure   illustrates the results from using the
rl controller in our simulator for initial velocities
between     red  and    m s  dark blue  on a
glider  on this figure  we can see that at the lower
initial velocities the plane pitches up at a slower
rate  it also doesnt pitch up all the way to   

fifig      trajectories obtained with the rl control policy for different initial speeds

degrees in order to maintain some lift and reach
the wall  but pitches up enough to allow the
suspension to contact the wall in a proper state 
at higher initial velocities  the airplane rapidly
pitches up to    degrees to shed some airspeed
before touchdown  for the initial velocities
tested  the rl generated trajectories reach the
wall with vx    m s  vy       m s and a pitch
between    and    degrees 

although the pitch rate is constant for a specific
trajectory  it varies according to the initial speed 
when the initial velocity is higher  the glider
pitches up faster in order to complete the
maneuver in a shorter amount of time 

fig    rl generated control

the control input on the elevator for these
different trajectories is illustrated on figure    we
can see that most control inputs initially kick the
elevator to    degrees to initiate the pitch up
maneuver  and then maintain the elevator to      degrees to sustain the rotation before dropping
back to     to    degrees to slow down the
rotation of the airplane 
one interesting characteristic of these
trajectories  as we can see on figure    is that
they maintain a constant pitch rate from t    
second up to the point when the desired
maximum pitch is reached  furthermore 

fig    pitch angle during the landing

although the rl showed us good trajectories
and controller input for a range of initial speeds 
this control scheme is difficult to implement on
the real airplane for two main reasons  the look up
table for the controller contains     entries and the
airplane doesnt have a full knowledge of its
states  although it might be possible to

fiapproximate the controller look up table by a
lower dimension function  it would be hard to
add enough sensors without getting excessively
heavy  on the current version of the airplane 
only attitude and acceleration measurements are
readily available  the distance from the wall is
briefly known as the sensor has a maximum
range of  m and becomes useless as the plane
pitches up to more than    degrees  the
ultrasound not being reflected anymore  

reached  according to the  measurement  

simple controller
to design a simple controller that will only
rely on the measurements available on the
airplane  it is required to change the dependence
of the desired pitch rate value on the initial
velocities to something that is related to the
initial velocity and that can be measured on the
airplane  one way to do this is to initially use a
short step function on the elevator and measure
the change in angular velocity 
as we said before  the moment created  and
thus the angular acceleration  depends on the
airspeed over the control surface  as the airplane
only has rate gyros  measuring acceleration
would require differentiation and we preferred to
use the change in angular velocity    as a
measure of the airspeed 
as shown on figure    when the optimal pitch
trajectories  t  are normalized by   the
trajectories collapse to a single trajectory with
various final pitch exit points related to the
measured   thus  a simple controller can be
characterized by 
   flying toward the wall until detection  at
 m 
   commanding an elevator step output of   
degrees during about    ms and measure the
change in angular velocity    
   tracking the  t   optimal trajectory as
found through rl  and fine tuned on the real
system  with a pd  proportional derivative 
controller 
   stop the tracking and maintain a small
angular velocity once the desired pitch angle is

fig    normalized pitch angles

the result of this algorithm can be seen on
figure   which shows that a simple pd controller
can easily maintain the pitch rate constant during
the maneuver and bring the airplane to the desired
pitch angle  the overshoot observed represents a
tradeoff with a fast rise time and doesnt critically
affect the performances 

fig    angular velocities with the simple
controller

fifig    simulated trajectories of the plane with the simple controller

figure   shows the resulting trajectories
generated with this controller  we can see that
each landing is successful and quite similar to the
trajectories created with the rl algorithm  the
simple controller only requires a little amount of
memory  uses sensors that are already onboard
and has only a few parameters  allowing us to
fine tune the trajectories using physical intuition 

conclusion
in this paper  we presented a solution for the
control of a wall landing airplane  using a
simulator  we used a value iteration algorithm to
make an infinite horizon cost function converge
in a coarsely discretized space  implementation
of several discretizations and cost function
initializations allowed us to obtain excellent
landings  one of them let us deduce a simple
controller that achieves quality landings for
different initial speeds in the simulator 
although the simple control algorithm
describe in this paper is working in simulation 
two main issues still need to be investigated
before implementing this controller on the
airplane  the low frequency and discrete nature of
the onboard controller    hz  and the low
bandwidth of the elevator servo       hz   even
if both of these reveal to be significantly
affecting the behavior of the controller  it is easy
to imagine a control law that chooses a
feedforward elevator displacement based on the
observed  

references
  cory  r  and tedrake  r   experiments in
fixed wing uav perching  proceedings of the
aiaa guidance  navigation  and control
conference  aiaa       
  lussier desbiens  a  and cutkosky  m  r 
landing and perching on vertical surfaces with
microspines for small unmanned air vehicles
 uavs   journal of intelligent and robotic
systems     oct       
  lussier desbiens  a  and asbeck  a  and
cutkosky  m  r   scansorial landing and
perching  proc    th international symposium on
robotics research  september       lucerne 
switzerland 

fi