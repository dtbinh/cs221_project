starcraft map imbalance prediction based on chosen build order
andrew spann  eleanor lin  and hyunseung kang
december         

abstract

one of the most important decisions in starcraft
consists of choosing which buildings a player constructs  buildings either allow the player to collect
more income  to produce more units for the players
army  or to allow high tech units into the players army 
we consider only the construction of buildings and not
individual troops  since the number of possible build
orders quickly becomes combinatorially intractable
otherwise  the important information we can learn
from buildings lies in the order they are built 
attempting to define a game state based on the mere
presence of buildings would not be valid  given that
troops and money reserves are not accounted for in the
state   the time at which a building is built matters
greatly because this information conveys intention to
either invest in long term resource gathering or raise an
army quickly for a decisive all in push  for example 
a terran players first two buildings usually will be
either a supply depot then a barracks or a barracks
then a supply depot  the order matters greatly 
building the supply depot before the barracks is
more common and allows the main base to produce
resource gathering units without ceasing  building a
barracks before a supply depot gives faster access to
military units but requires a pause in the production
of resource gathering units and thus implies unusually
early aggression  most buildings have prerequisites  so
the early build decisions are combinatorially limited
and can be represented cleanly as a tree  we only
need to concern ourselves with analyzing the earliest
few buildings  since after the opening minutes of the
game the player will have scouted the opponent and
further decisions will be reactionary 
we hypothesize that a mixed strategy nash equilibrium exists between the many possible opening
build orders and that experienced players choose their
opening builds accordingly as a function of the map
characteristics  we expect this condition to hold at
high levels of play because if it were not true then
there should exist a strategy profile that beats the
current top players  and any player using this strategy
profile would then become a top player  initially 
the player does not have any information on the
opponents actions  so in the field of game theory one
could compare starcrafts early building decisions to

we utilize the distribution of early building decisions
on starcraft maps to predict the winning percentages
in each racial matchup  tournament replays from     
games on   maps were parsed  the win rate on a given
map was predicted from a regression on the remaining
maps build order distributions and logistic space win
rates  the method is only highly effective at predicting
the outcomes for zerg vs protoss games  our data set
was found to be less biased than anticipated  showing
that starcraft is a balanced game despite a great
diversity of strategy profiles 

 

problem definition

the computer game starcraft has enjoyed such
widespread commercial success that south korea
employs    professional starcraft teams whose
matches are broadcast on korean television  in the
game of starcraft players choose to command the
armies of one of three races  terran  zerg  or protoss 
unlike chess pieces  which are the same for both
sides  the army compositions of each starcraft race
are entirely unique  a game between two players of
different races contains many asymmetries  despite
the many asymmetric factors influencing the game 
starcraft is considered to be a balanced game in that
all three races have successful professional players 
starcraft games are played on many different maps
which change the fundamental board layout  maps
differ from each other in attributes such as the ease of
acquiring resources  distance between bases  and the
openness of the terrain  figure   gives an example of
the characteristics of two commonly played starcraft
maps  in professional televised games  most maps
favor one races chances of winning over another
by a          split      the most common bias
is a cyclical terran   zerg   protoss   terran
relationship that prevents one race from dominating
the others  we wish to investigate whether the overall
winning percentage in a match between two given
races on a given map can be predicted from the early
game decisions made by the players 
 

fiandrew spann  eleanor lin  and hyunseung kang

page   of  

map
blue storm
gaia
katrina
python
tau cross
troy
zodiac

total games
    
   
   
    
   
   
   

tvz
   
   
   
   
  
  
  

zvp
   
   
   
   
   
   
  

pvt
   
   
   
   
  
   
  

table    number of replays in data set for each map 
figure    left  python  a standard map with races abbreviated as t   t erran  z   zerg  p  
nearby expansions and an open middle  right  troy  p rotoss 
a tricky map whose connectivity can change when
neutral buildings are destroyed  source     
replays  but was not considered due to our parsing
techniques failing on those replays 
a probabilistic simultaneous decision game  guided
by this intuition we test the claim that the overall
win rate of a race on a map can be expressed as a
function of the distribution of opening build orders 
so that maps with similar winning percentages exhibit
similar distributions of build orders 

 

approach

starcraft allows players to record replays of games for
future viewing  to compare the win rate and the
build order distribution  we collected approximately
six thousand replays and used a computer to analyze
them  this section details the process of obtaining and
parsing the data  details of the learning techniques
applied to the data are described in section   
note that we consider data for each of the three
asymmetric racial matchups differently  for example 
our analyses of zerg vs terran matches and zerg vs
protoss matches are kept completely separate since
we expect inherently different build order distributions
from the zerg player in those two matchups 

   

obtaining the data set

data was taken from the ladder stage replay packs
of the top    playoff finalists in the      teamliquid
starleague tournament  an archive was downloaded
containing the finalists       automatically collected
replays over the course of the three week ladder     
replay files deemed to be invalid due to not being  v 
games or being under   minutes  indicative of an internet disconnection  were discarded  mirror matchups
 i e  protoss vs protoss  were not considered  of
the remaining files    maps were considered to have
sufficient data  a total of      replays  the number
of replays for each map and matchup is summarized
in table    the map longinus had     additional

   

analyzing replay files

we need to parse the replay files to determine who
won each game and the buildings built by both
players  replay files contain neither video recordings
of the games nor copies of the games state at
different time periods  instead  the replays are a
history of all the users mouse clicks and keyboard
actions  starcraft uses these recorded actions to
deterministically recreate the course of the game  the
amount of money each player has and the deaths of
units and buildings are the results of actions  not
actions themselves  and thus not explicitly listed 
the replay file does not consist of plain text  but
its binary format can be parsed with a c   library
     to determine the winner of the game  we first
identify which player recorded the replay file  if the
game contains a cmd leavegame action from
the players opponent  the player recording the file
is considered to have won  otherwise this player lost 
attempting to compute the last player to make an
action will not determine the winner as this does
not uniquely determine whether the replay file was
recorded on the winners or losers computer  the
c   library is a fan project that is not officially
supported starcrafts creators blizzard  starcraft has
undergone several patches since the replay library was
released  so parts of the library appear to be broken 
even if the data we wish to collect is conceptually
straightforward  the c   library functions frequently
encountered pointer errors that hindered our ability to
do a deeper analysis 
the c   library comes with a standalone statistics tool called bwchart     that already contains
functionality for tabulating statistics in a collection
of game replays  unfortunately  bwchart is not
open source so we cannot modify it to collect data
and export in the exact format we want  however 
the functionality for computing build order was still

fiandrew spann  eleanor lin  and hyunseung kang

useful  we define build order to be an ordered
list of the first n objects that a player builds  we
must now determine the value of n and which objects
are informative  displaying the build order for a
game is straightforward  but knowing which parts
of the build order are relevant requires making a
decision  technically a players army units  buildings 
and upgrades could all be considered part of a build
order  since the number of entries in table   is
finite  including unit information into the build order
would lead to a distribution of all unique build order
instances yielding no information 
using our intuition of the game  we can safely
discard all information on unit production to restrict
the number of build orders to a feasible amount 
units are usually built continuously with any available
funds  so their specific order is implied by the existing
buildings  we decided to look at the first   buildings
built  and performed the analysis again using the first  
buildings not counting supply depots or pylons  due
to the way bwchart parses the data  zerg overlords
are considered units instead of supply buildings and
thus not counted  attempting to use more buildings
has several disadvantages  a long tail of infrequent
builds is present  some games end before enough
buildings are built  and by this time players will have
scouted their opponents and begun making building
decisions that are reactionary instead of simultaneous 

 

page   of  

again using the first three buildings 
our goal was to design an analysis that had no
prior knowledge of the relation between different build
orders  although one could attempt to define a metric
on the build order space measuring how close one
build order is to another and then kernelize the build
order distributions appropriately  there is no such
natural accurate metric that does not require a biased
existing knowledge of the game 

 

results

tables   through   on the next page show the winning
percentages in each matchup observed in our data set 
predicted based on the first two non supply buildings 
and predicted based on the first three buildings 
we also looked at the svd decomposition of
the build order distribution matrices to identify the
singular vectors for principal component analysis 
the singular vectors purportedly represent tradeoffs
in preferring some build orders over others and the
magnitudes of the elements of the singular vectors
corresponding to the largest eigenvalues of the matrix
are correlated with the more commonly played build
orders  in practice  attempting to extract starcraft
insight from these vectors was concluded to be nonsensical in the context of the game so this data is not
presented 

predicting win rates

the number of times each build order was used on
each map in each racial matchup was tabulated and
normalized  winning percentages were predicted from
the probability distribution of build orders using leaveone map out cross validation  for each map  data
on all of the other maps was used as a training set 
then the distribution of build orders was used to
predict the fraction of games won by a particular race 
splitting the maps into training and testing sets is
undesirable since there are only   maps and the rank
of the probability distribution matrix is a limit on the
effective number of useful build orders in predicting
the winning percentage 
the model was a linear regression on the build
order distributions with the winning percentages in the
training data set mapped into logistic space  a logistic
map was used for the winning percentages because
it complements the ladder systems assumption that
skill is distributed according to an elo system
and guarantees that the predicted winning rate lies
between    and       this analysis was performed
for each possible racial matchup and predictions were
made using the first two non supply buildings and

 
   

discussion
a surprisingly balanced game

the most striking observation about this data is
that all matchups on all maps but gaia are within
just a percentage point or two of being exactly
    winning percentage for each race  the overall
winning percentages in our data for each race were
not known at the time of the projects start  gaia
was developed as a world cyber games map  the
remaining maps originated in the korean professional
tournaments  it is interesting to note that in our data
set gaia actually exhibits reverse cyclical bias from the
canonical imbalance 
the observed winning percentages in our data
set were compared with those taken from korean
professional starcraft games     and against all ladder
games played on the iccup ladder     and no
correlation or trend was found  data not shown  
although the players in our data set are not full time
professionals  they represent the best talent outside of
korea or china and the replay collection is a complete
set of ladder history rather than only notable games 

fiandrew spann  eleanor lin  and hyunseung kang

page   of  

map
blue storm
gaia
katrina
python
tau cross
troy
zodiac

table    terran vs  zerg
actual   buildings   buildings
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

map
blue storm
gaia
katrina
python
tau cross
troy
zodiac

table    zerg vs  terran
actual   buildings   buildings
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

map
blue storm
gaia
katrina
python
tau cross
troy
zodiac

table    zerg vs  protoss
actual   buildings  
      
      
      
      
      
      
      
      
      
      
      
      
      
      

buildings
      
      
      
      
      
      
      

map
blue storm
gaia
katrina
python
tau cross
troy
zodiac

table    protoss vs  zerg
actual   buildings  
      
      
      
      
      
      
      
      
      
      
      
      
      
      

buildings
      
      
      
      
      
      
      

table    protoss vs  terran
map
actual   buildings  
blue storm       
      
gaia
      
      
katrina
      
     
python
      
      
tau cross
      
     
troy
      
      
zodiac
      
      

buildings
      
      
     
      
      
      
      

table    terran vs  protoss
map
actual   buildings  
blue storm       
      
gaia
      
      
katrina
      
       
python
      
      
tau cross
      
      
troy
      
     
zodiac
      
      

buildings
      
      
      
      
      
      
      

   

why some matchups are predicted poor but less atrocious  this   building distribution
better than others
has a     chosen most common build  there are

given that all but a couple of the win rate data
points are statistically indistinguishable from     in
our data set  it is little surprise that our predictions do
not always succeed  our model predicts some of the
matchups much better than others  looking at the
details of the build order distributions and regression
coefficients gives us insight into why this is the case 
the predictions on both sides of the terran vs
protoss matchup are outright terrible  if we were not
operating in logistic space  these predictions would not
be bounded in the            interval  the model
predicts heavily lopsided results but the maps are in
fact balanced  the reason for this is all of the build
order distributions are heavily skewed towards one
very common build  with such a high percentage
of the games having one path  the data for the
remaining build orders becomes noisy  both of the
  non supply building predictions and the terrans  
building prediction each contain a single build order
that accounts for over     of the games  the
predictions for   building protoss vs terran are still

a still a wide range of possible build orders in this
matchup  but intuitively the important decisions in
terran vs protoss are made a couple buildings later 
our approach of looking at just the earliest couple
buildings separates build orders into archetypes of fast
expand  rush  and tech  both sides of the protoss
vs terran matchup usually prefer to tech  there are
many variants of tech builds  but these nuances simply
arent captured by our categorization 
the best predictions occur when using   buildings
to predict a zerg player versus a protoss opponent 
one of the reasons that this model achieves such great
accuracy is that the zerg has three common openings
 hatchery spawning pool  spawning pool extractor 
and spawning pool hatchery  which each occur about
    of the time  going to three buildings actually
hurts these predictions  in the three building build
order distribution there are still three dominant build
orders  but now the  th and  th most common
build orders are branches from the original   that
place a creep colony  such an unusually early

fiandrew spann  eleanor lin  and hyunseung kang

defensive structure only makes sense as a reaction
to an opponents early rush  which violates the
assumption that decisions are made simultaneously
with no knowledge of the opponent 
the terran vs zerg and zerg vs terran predictions
are not horrible  but naively guessing     balance
would be better  the concentration of build order
distributions in these matchups are somewhere in
between the terran vs protoss and zerg vs protoss
matchups 
the build order distributions for protoss vs zerg
are fairly balanced like in zerg vs protoss  but the
predictions are not as good 
in particular  the
model underpredicts protosss chances on the map
troy  the three most common early builds are
two variants of forge first fast expand and double
gateway  traditionally  double gateway was the most
common protoss vs zerg build order but ever since
the televised      msl finals of bisu vs savior  fast
expand has become popular and double gateway is
seen as an uncomfortable build forcing short term
gambits  on troy the double gateway build allows
protoss to threaten to change the connectivity of the
map by destroying neutral buildings so this build order
is not weak 
in principle  the results for the   non supply and
  building analyses should be nearly identical for the
protoss matchups  since protoss must use a pylon as
the first building  the only information added in the  
building analysis is the pylon gateway pylon build 
the fact that this control test fails suggests that our
method is fundamentally nonrobust despite ostensibly
working well for zerg vs protoss 
many of our predictions struggle on the map
katrina 
katrina has a resource cluster behind
each players base that allows unusually early fast
expansions  the map shows an excess of     win rate
for protoss over terran in professional games     but
favors terran slightly in our data set 
our analysis does not take into account any knowledge of which build orders are conceptually similar 
it is possible that better results would have been
obtained by looking at build orders out to   or  
buildings then combining the many rare build orders
into the more common variations to reduce the number
of possible build orders to a reasonable amount  such
manual classification requires biased judgment on the
part of the researcher  furthermore  the same early
build order can convey multiple intentions  sometimes
instead of building in his own base the player builds
in close proximity to his opponents base 
the
most common proxy tactic is to build barracks or
gateways in an all in gamble to end the game in
the first few minutes  proxy buildings can also be
used economically to block a zerg opponents early

page   of  

expansion or prevent an opponent from harvesting his
gas geyser  in particular  protoss double gateway is
frequently played as both a proxy and not a proxy
and we cannot distinguish the two  for terran  proxy
buildings are usually signaled by building a barracks
before supply depot  but there are exceptions such as
the non committal fake bunker rush designed to make
zerg lose mining time by sending resource gatherers to
defend before military units can be created 
even if the winning percentages lined up perfectly 
the point of our analysis is not to tell one how to be a
better starcraft player  by analyzing a distribution
of chosen build orders  we cannot conclude which
build order is the best since we already assumed the
existence of a nash equilibrium  the conceptual idea
is that when players feel that a map encourages them
to rush or fast expand more frequently than normal
then this is reflected in the winning percentages 
however  the protoss vs zerg results show that
radically different build order distributions can still
lead to balanced results 

 

conclusion

we have taken data on thousands of replay files from
a high level tournament  except for the case of a zerg
player versus a protoss opponent  our model fails to
convincingly predict winning percentages better than
a naive coin toss  rather than being disappointed  this
is great news in the context of the game  the fact that
build order distributions have little correlation with
win rate means that the game is robust and allows
many viable opening moves instead of one forced line
of optimal play  it is amazing that each races winning
percentage is so close to     across all of the maps 
the game would not still be avidly played after   
years if it had devolved into a single dominant strategy 

references
    teamliquid
progaming
teamliquid net tlpd 

database 

www 

    teamliquid
starleague
ladder
replay
pack 
http   www teamliquid net forum 
viewmessage php topic id      
    bwchart       software program  created by
jca  http   bwchart teamliquid net 
    iccup ladder map statistics  www iccup com 
starcraft sc ladder maps html

fi