discovering visual hierarchy through unsupervised learning
haider razvi
hrazvi stanford edu

  introduction 
we present a method for discovering visual hierarchy in a set of images  automatically
grouping and organizing images has applications for personal use where personal
photographs can be arranged as overexposed or underexposed  urban or rural landscape 
closeups or family gatherings  lots of people etc  besides various other useful hierarchies 
this also has applications in the educational research domain where it would be
interesting and maybe useful to find out if a large dataset as the imagenet     can be
arranged in other interesting hierarchies  effective hierarchies allow for efficient
searching of images and better image recommendations  i e  other images similar to a
certain image of interest  
this problem is broken down into a problem of selecting appropriate features of interest
from an image and then organizing images based on these features  we must be able to
handle variations in scale  viewpoint  lighting  occlusion etc 
  extracting points of interest 
    mser 
the mser     method is used to detect blobs in images  blobs are patches in the image
that are either brighter or darker than their surroundings  blob detectors work differently
from edge detectors and provide complementary information about patches in the image 
such as their shape etc  these can be used to obtain regions of interest for further
processing  the mser algorithm basically sorts pixels by intensity and considers pixels
below a threshold to be black and those above it to be white  it does this for a range of
thresholds and determines regions based on the stability of a group of pixels w r t to the
change in thresholds  it is invariant to affine transformation of image intensities and is
quite robust to viewpoint and scale changes 
once the mser method returns points of interest  also called region seeds   lists of
pixels belonging to each region are extracted  the vlfeat library is used to do this     
binary images are generated for each feature by setting pixels not belonging to that
region as zero  finally sift based descriptors for these features are generated  this is
similar to the approach outlined in david lowes paper      the descriptors are    
dimensional vectors with values from       
the mser method can sometimes give incorrect results where it considers multiple
adjacent objects in the image as a single large feature region  two methods are used to
guard against this 
   all features which comprise more than     of the entire images pixels are rejected 
   all features which comprise between        of the images pixels are attempted to
be broken down into sub features  for this purpose a bounding circle of the feature is
calculated and sift is used to detect features within this bounding circle  note  we

fidont re run mser on the area within the bounding circle as mser would again
consider any pixels falling within this bounding circle to be one feature  this almost
always doesnt give the correct shape so running mser again isnt very useful 
figure   shows mser features extracted for a sample image alongwith a binary image
for one of the features  figure  e shows an example where mser goes wrong and
considers multiple objects as a single large feature  the calculated bounding circle is also
shown  figure  f shows an example where mser performs reasonably well 
to calculate the bounding circle for a detected feature  the binary image represented as a
  d matrix is linearly indexed  using the same conventions as matlab  with the top
left corner of the image taken as index   a white pixel with the maximum linear index wr
gives the bottom pixel in the right most column of the feature region while a white pixel
with the minimum linear index wl gives the top pixel in the left most column of the
region  the pseudocode is then 
  xr   yr    x y coordinates of wr
  xl   yl    x y coordinates of wl
cx    x r   x l      
cy    yr   yl      
cr     sqrt   cx   xr      cy   yr    
where  is a scaling factor and is empirically selected to be      
    sift 
sift     is a method for detecting and also encoding features in an image  it is invariant
to scale  orientation  affine distortion and is partially invariant to illumination changes  it
applies a difference of gaussians function to a series of smoothed and resampled images
defining the minima and maxima of the result as points of interest 
 figure   

 a  original image

 b  sift detected features

 c  mser detected features

 d  mser region contours

 e  mser detects all this
as a single large feature

 f  mser correctly detects
the truck in the background

fithe sift method tends to detect a lot of very small features in the image  its two
parameters the peak threshold and the  non  edge threshold are set to limit detection of
lots of very small points as features  figure  b shows sift based features detected for an
image  these are shown as circular patches where the line from the center of the circle
shows the features orientation 
  dataset   data biasing 
my dataset consists of     images across   categories  cars  scooters  faces  buildings 
yachts   there are    images per category  this is a relatively easy dataset as the
categories are quite distinct from each other  scooters and cars do share some similarity
in their features  shape of the wheels  in some cases headlights etc   this is specifically
done so as to see whether the algorithm will be able to distinguish between objects that
have some percentage of similar features but are distinct overall 
to improve clustering performance i initially take    images from each category and for
the categories cars and scooters i manually segment out the object  car scooter   for
faces  buildings and yachts i dont do any segmentation but pick out images which have
less cluttered backgrounds so that the majority of the features detected in the image will
actually belong to buildings  faces and yachts  i call this data biasing and run k means
clustering on only these     images to cluster the sift features into    and mser
features into    clusters as discussed previously  these cluster models are saved  figure  shows an example of a segmented out image  car  and a non segmented out image
 building   note the building image also has a few cars and people in it 

non segmented
image

segmented
image

 figure   

  representing images as feature vectors 
for each of the     original images  note  these are not the segmented images but rather
their original counterparts  sift and mser features are detected  taking each image
individually  its sift features are clustered into    clusters based on the saved sift
cluster model above  a    dimensional feature vector s is generated for this image  si
then contains the number of sift features of the image that mapped to cluster i  similarly
a    dimensional feature vector is also generated for an image based on its detected
mser features and the saved mser cluster model above  thus there is one   
dimension sift feature vector and one    dimensional mser feature vector produced
for each image 

fi  clustering images 
the em algorithm is used to cluster images based on only their    dimensional sift
feature vectors  a cluster is given an identity based on the category that has the maximum
number of images falling into that cluster  figure  a shows the clustering produced  the
crosses  x  represent images that were correctly clustered while the squares represent
incorrectly clustered images  similarly the em algorithm is used to cluster images based
on only their    dimensional mser feature vectors  the resulting clustering is shown in
figure  b 

 figure  

 a

 b

predicted cluster decomposition  sift 

actual cluster assignments  sift 

  

  
  

  

  

  
yacht
building

  

  

yacht
building

  

face
  

face

scooter

  

car

  

  

scooter
car

  

  

 

 

 

car

scooter

face

building

yacht

car

predicted cluster decomposition  mser 

scooter

face

building

yacht

actual cluster assignments  mser 

  

  

  

  
  

  
yacht

  

building

  

yacht

  

building

face

  

scooter
  

car

  

face
  

scooter
car

  
  

  

 

 

 

car

scooter

face

building

yacht

car

scooter

face

building

yacht

 figure   
figure   is another important figure  under the predicted cluster decomposition
heading it shows the number of images that were assigned by em to each cluster and the

ficolor coding shows which categories these assigned images actually belonged to  for
example in predicted cluster decomposition  sift     images were assigned by em
to the face category     of these images were actually faces while   were scooters and  
was a building  the complementary figures labeled actual cluster assignments show
for the    images belonging to each category how many ended up assigned to each
category  for example for actual cluster assignments  sift     of the face images
were assigned to the face category but    of them were assigned to the yacht category 
similar results are also shown for mser 
  combining sift   mser 
in the figures above note that sift is conservative about assigning face images to the
face category  it has high precision for that cluster but low recall as most face images
end up in the yacht category  mser behaves differently  the face cluster is the largest
and most face images do land into this cluster  however while mser has higher recall
for this cluster it has lower precision with images from yachts  cars etc also falling into
this cluster  i aim to combine the mser and sift features in an attempt to achieve better
results  the simplest approach i tried first was to concatenate the sift and mser feature
vectors for an image so that an image is now represented by one    dimensional feature
vector and then cluster images using em  this worked really well for cars and images
which had perfect results  all    cars ended up in one cluster with no images from any
other category and the same results were also true for scooters  faces improved too 
however accuracy for buildings especially suffered  the overall accuracy  percentage of
images correctly clustered  was     compared with       for mser only em
clustering and a nicer     accuracy for sift only em clustering  probably simply
combining sift   mser feature vectors isnt a good approach and im looking into
other schemes and consider this future work 
figure   gives clustering as produced by em run on sift only feature vectors  for
shortage of space i did not include all     images  the mosaic contains most of the
negative examples  incorrectly clustered images  but fewer than actual correctly clustered
images 
  references 
    imagenet  http   www image net org 
    j  matas  o  chum  m  urban  and t  pajdla  robust wide baseline stereo
from maximally stable extremal regions  in bmvc       
    lowe  david g          object recognition from local scale invariant features 
proceedings of the international conference on computer vision     pp          
    per erik forssen  david g  lowe  shape descriptors for maximally stable extremal
regions  iccv      
    g  csurka  c  bray  c  dance  l  fan  visual categorization with bags of
keypoints  in workshop on statistical learning in computer vision  eccv       
    d  martin  c  fowlkes  j  malik  learning to detect natural image boundaries using
brightness and texture  in nips      
    vlfeat  http   www vlfeat org 

fi figure   

fi