splice site prediction using multiple sequence alignment
ross bayer and konstantin davydov
collaborators  marina sirota  sam gross  serafim batzoglou

introduction
computational prediction of genes is
currently an area of active research  since
only    of the entire human genome codes
for proteins  ruling out the     of the
genome which does not directly result in
protein production would be of great value
to genomic research  while genes in simple
prokaryotic organisms like bacteria are
relatively easy to identify  since they begin
with a start codon  and terminate with a stop
codon   the situation in eukaryotic
organisms  such as mammals  is more
complicated  only certain parts of a gene
 known as exons  are actually transcribed
into proteins  while other subsequences
 known as introns  are removed before the
protein transcription process 
donor site

gt

translated
into protein

acceptor site

ag

not translated

translated
into protein

fig    splice sites

splicing refers to the machinery which
removes these introns from the sequence 
and splice sites are the locations in the
sequence which indicate to the splicing
machinery that splicing should occur   since

gene prediction in these more complex
organisms can no longer depend upon such a
simple strategy as looking at start and stop
codons  since introns can contain stop
codons which will not actually terminate the
gene   we need an accurate method of
predicting splice sites  i e  modeling
intron exon behavior  in order to accurately
predict the likelihood of a region being a
gene 
splice site recognition
splice sites fall into two categories  donor
sites at the   end of an intron and acceptor
sites at the   end of an intron  see fig     
these sites display certain characteristic
patterns  e g      of donor sites begin with
gt and acceptor sites tend to end with ag 
however  not all locations with base pairs
gt or ag are necessarily splice sites  some
occurrences of gt or ag occur outside of a
gene or inside an exon  these are typically
called decoys  as they do not in fact indicate
the presence of a splice site  see fig     
nonetheless  the clear presence of patterning
within the data makes this classification task
 between genuine splice site and decoy 
amenable to machine learning methods 
decoys

gt

ag
decoys

 

a codon is a dna triplet of three base pairs  each
such codon is mapped to an amino acid when
proteins are transcribed 
 
a less formal definition is that splice sites mark the
boundaries between exons and introns 

gt

ag
fig    decoys

fitraditional models have typically been
based on hidden markov models  though
the very strong independence assumptions
leave much to be desired  especially for the
modeling of long range interaction effects
which biologists generally believe are
present  support vector machines have also
been applied to the problem with some
success  however only using features from
the particular sequence of interest  we
extend this approach to also use features
from multiple aligned sequences  in
particular  mouse  rat  chicken  dog  fugu 
zebrafish  and chimpanzee  see fig     

human
mouse
rat
chicken
dog
fugu
zebrafish
chimp

ggcctagtat
ggccaagccg
agccaagcgc
 gcccagg cgccgagata
nncccagggt
     aggct
ggcctagtaa

fig    multiple alignment of species

sequence alignment is a thoroughly
studied field of research which does a good
job of comparing homologous sequences
from different genomes  we can use such
alignment data as a source for extracting
additional features  this information can be
quite useful since functionally important
patterns are more conserved over the course
of evolution  furthermore  having several
sequences with different evolutionary
distances from human  e g  zebrafish and
chimp  will be beneficial too  as it provides
more information about the evolutionary
history 
machine learning methodology
we used john platts sequential
minimal optimization algorithm for support

vector machines  as implemented by an
appropriate svm package for matlab
 libsvm    the domain of the features was
the base pair  a  t  c  or g  or alignment
information    for gap  n for no available
information    for unaligned  which we
represented with   values  where the value
corresponding to the base pair is   and the
other values are    i e  a is represented as   
              t is represented as             
    c as                  etc   we have one
feature for each location in the range
spanning   positions before a suspected
donor site to    positions after for each
sequence in the multiple alignment  in the
case of acceptor sites  the corresponding
range was from   positions before to  
positions after for each species  these
specific ranges were chosen based on
biological considerations 
separate svms were trained for the two
tasks of discriminating between donor sites
and decoy donor sites  and between acceptor
sites and decoy acceptor sites  a quadratic
kernel was chosen in order to model
interaction effects  possibly long range 
between the various base pairs  in addition 
different penalties were used in the cases of
misclassification of positive examples and
misclassification of negative examples 
since in this field of research  false negatives
are much more damaging than false
positives  this ratio was adjusted to be
       in line with a best approximation of
the ratio of true splice sites to decoys within
the actual human genome 
data
in
collaboration
with
serafim
batzoglous computational biology research
group  we obtained the full genome multiple
alignment  in fasta format  of human 
mouse  rat  chicken  dog  fugu  zebrafish 
 

see http   www csie ntu edu tw  cjlin libsvm  

fiand chimpanzee from the ucsc browser 
in addition  we obtained human gene
annotation files  in gtf format   which
label exons within well studied genes  this
was used as the source for supervised
learning  these annotation files were used
to extract known splice sites from the given
alignments using human as our reference
species  these splice site locations were
then used to generate positive examples for
our svm training by scanning through the
alignment file for each of the chromosomes 
particular attention was paid to the case of
splice sites on the negative strand  in which
case the corresponding sequence data had to
be reversed and complemented for the
format to be comparable 
in order to generate negative examples
 decoys   a high number of random positions
within the genome were chosen  each likely
with extremely high probability to not be a
splice site  a random position has probability
of about          of being a splice site  
the features for these random positions
were then extracted from the multiple
alignment  but only those which happened to
fall upon an ag or a gt were kept in order
to isolate decoys 
the ratio of positive to negative
examples was adjusted to be approximately
     bearing in mind that a higher false
negative penalty was used  training for
each svm model was done on a randomly
selected subset of the data in which each
example had     chance of being included
in the subset  and testing for cross validation
purposes was performed on the remaining
examples excluded from the training set
 approximately     of the data  
svm input
the resulting input to the svm consisted
of the label matrix and a features matrix 
the label matrix was a vector of labels 
 

see http   genes cs wustl edu gtf   html 

where a    corresponded to a positive label
 splice site  and a   corresponded to a
negative label  decoy   the features matrix
consisted of      features     positions   
letters    species  in the case of the donor
site model  and     features in the case of
the acceptor site model     positions instead
of     
computational challenges
there were several computational
challenges involved in this data generation
process  due to the prohibitively large sizes
of the sequence alignment files involved
 several gb per each of the   
chromosomes   extracting features from
these files had to be performed in a very
careful fashion  firstly  inefficient random
access would lead to vast slow downs due to
repeated seeks  secondly  reading in large
portions of the file at any time could use
considerable amounts of memory and in the
worst case scenario result in thrashing 
the approach taken to alleviate these
difficulties was to calculate beforehand all
the positions within the chromosome that
would be analyzed and potentially have
features extracted  as mentioned  this was
done based on the gtf annotation files 
followed by generation of random positions
for negative examples  these positions  and
positive negative status  were all stored
within a single vector  which was then
sorted in increasing order 
this allowed scanning of the alignment
file to be done in sequential order  since the
positions were known in advance  seeking
could be done to each correct position
directly  avoiding the unnecessary overhead
of reading in large buffers  and speeding up
file traversal time  in addition  the features
for each training example were built up
incrementally species by species  in other
words  all examples had their features for
human populated  then all examples had

fifor which the corresponding test set
accuracy is plotted below  see fig      as
expected  as we increased the number of
training examples  the test set accuracy
rapidly increased and then leveled off  for
the largest number of training examples
experimented on        examples   we
achieved a test set accuracy of about      
for both the donor and the acceptor models 
in general  the acceptor model performed
better than the donor model  one possible
explanation for this is that since the donor
svm used considerably more features  it
was more prone to over fitting for low
training set sizes  potentially leading to a
higher generalization error 
overall 
however  the results were very impressive
and suggest that this approach to splice site
recognition is an extremely fruitful avenue
of exploration 

their features for mouse populated  and so
on  this could be done since the length of
each chromosome was known in advance 
allowing direct calculation of the correct
location within the file 
this species
optimization ensured that the entire file
traversal was also in strictly sequential
order  reducing the total seek time to the
minimum possible  this strategy allowed
for minimal total access to the alignment
file  and made dealing with such huge files
quite practical 
results
we trained two separate svms  one to
recognize acceptor splice sites and one to
recognize donor splice sites  and ran the
resulting svm on the test data  the number
of training examples was varied gradually 

learning curves
   

  

  test set accuracy

  

  

  

  

  

  
 

   

   

   

   

    

    

    

    

    

    

training examples

donor sites  multiple alignment 

acceptor sites  multiple alignment 

fig    learning curve results

fi