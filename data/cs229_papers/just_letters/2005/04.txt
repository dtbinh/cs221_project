machine learning applied to terrain classification
for autonomous mobile robot navigation
john rogers  andrew lookingbill
cs     final project
i  i ntroduction
we work on the stanford ai lab team for the darpa funded learning applied to ground robotics  lagr  project  each
of the eight competing teams in this program write code for a standardized robot platform equipped with short range sensors
and two pairs of stereo cameras  the long term focus of the program is the advancement of the state of the art in computer
vision and offroad autonomous mobile robot navigation 
once a month the government team runs   tests in a row on the robot platform with each teams software at a remote location 
the robot is expected to demonstrate inter  and intra run learning  a priori information about the testing sites is limited  these
requirements make the application of online machine learning algorithms attractive  in addition  the large volume of log data
available from previous tests makes these algorithms easier to compare and evaluate  this paper describes our work with
online machine learning algorithms for long distance monocular perception  section ii describes our general classification
pipeline  sections iii v describe three different online algorithms we tested  and section vi reports the results of running these
algorithms on a standardized set of videos 
ii  a pproach
the lagr robot platform benefits from reliable stereo information coming from its two pairs of point grey bumblebee
cameras  this information can be used to train a classifier which operates on all the pixels in a monocular image  fig   a
shows a single frame from a stereo pair of images from a logged image sequence  the left and right images are passed to a
stereo algorithm which returns x y  and z coordinates in the robots frame of reference  using this information along with
a flat ground plane assumption it is trivial to determine which pixels in the right hand input image correspond to objects
which rise more than   cm above the ground plane on which the robot rests  these pixels can safely be assumed to belong to
obstacles  pixels corresponding to points close to the ground plane belong to traversable terrain  a set of these stereo based
classifications are shown in fig   b where green denotes traversable terrain and red indicates obstacles 
the short baseline of the stereo systems on the lagr robot platform limit their range  however  they are unable to classify
objects reliably at distances greater than  m from the robot  a terrain classifier that classified pixels anywhere in an image 
after having been trained with stereo classifications would be a powerful tool allowing correct scene segmentation at great
distances from the robot  these long range pixel classifications can be dropped into a  d hazard map such as the one shown in
fig   c  this map can then be used as the input to a global planner such as d   in this way  the long range pixel classifications
give the planner more useful information which  in turn  would allow greater navigation speeds 
this general learning framework  where the training data comes from examination of short range stereo data is generic  and
can be modified to test a variety of online learning algorithms  the following sections describe our experimentation with three
such algorithms 
iii  p erceptron
our implementation of the kernelized perceptron learning algorithm was formulated as follows 

i i
i
k
predictiono ne xamplek   sgn k 
i     k x   x  

   

where i is one if the ith example was misclassified and zero otherwise  for the data reported in this paper  a gaussian kernel
was used to allow for non linear decision boundaries without much risk of overfitting 
fig    shows example input output frame pairs from three different video sequences  the top frame in each pair is the
original monocular input image  while the bottom frame is the output of the trained classifier on that image  the nature of the
test video sequences as well as our metric for quantifying the quality of the classification is discussed in the results section 
iv  f orgetron
as an alternative to the perceptron algorithm we also implemented the forgetron algorithm      this algorithm performs well
in the type of online classification we are trying to implement  this algorithm smoothly trades off between limited memory
capacity and classifier accuracy by incorporating a decay parameter as well as a finite history of comparison examples  

fi a 

fig    

 b 

 c 

 a  right image from a stereo pair  b  stereo classifications for pixels  c  information from classified pixels being placed in a global map
 a 

 b 

 c 

fig     input output classification pairs from three different image sequences classified using the kernelized perceptron learning algorithm  red indicates
obstacles while blue indicates traversable terrain 

our implementation of the forgetron algorithm was formulated as follows 

ik   i i
predictiono ne xamplek   sgn k b
  k xi   xk  
i k  

   

where i is one if the ith example was misclassified and zero otherwise  and  is the decay parameter  for the data reported
in this paper we employed a gaussian kernel for the same reasons as described in the perceptron section above 
fig    shows example input output frame pairs from the same three video sequences that were used before  the top frame
in each pair is the original monocular input image  while the bottom frame is the output of the trained classifier on that image 
v  naive bayes
in addition to the two algorithms described above we also implemented a naive bayes classifier along the lines of the one
implemented for spam filtering in class  we maintain a large table of structures which has an entry for each of the    million
colors in the colorspace  any pixel which is classified by stereo as obstacle or traversable terrain has its respective counter
incremented in the histogram table  this makes training very efficient  it is well suited for online operation 
the naive bayes classifier produces inferences on   x   pixel blocks  we chose this size to allow regions to flow together
smoothly while removing a lot of false classifications on smaller single pixels  when operating on a   x   pixel region  the
classifier attempts to ascertain the joint log likelihood of the data conditioned on this block belonging to each class  whichever
class gives the higher likelihood is selected as the classification for this pixel block  fig    shows the usual example input output
frame pairs 

fi a 

 b 

 c 

fig     input output classification pairs from three different image sequences classified using the kernelized forgetron learning algorithm  red indicates
obstacles while blue indicates traversable terrain 

vi  r esults
to compare the effectiveness of these three online learning algorithms  we selected three different video sequences from
our log archives  the first video sequence was recorded during a government test in a wooded area  the second sequence was
recorded during a government test where the robot was driving in pine duff  the third sequence was recorded during one of
our local testing runs at upper stevens creek  in the santa cruz mountains 
the three video sequences comprise      frames in total  to gauge our algorithms performances  we set aside every
tenth frame in each data set as a testing frame and carefully generated a hand labeled comparison image for each one  this
hand labeled image classifies terrain all the way to the horizon  for each of the approaches we trained on the non test frames
until we encountered one of the frames for which we had hand labeled data  we then classified the frame using the training
accumulated thus far  simulating the actual behavior of the learning algorithm during a robot run   after classification we
compared the hand labeled frame with the machine classified frame and accumulated statistics about the false positive and
false negative rates 
the forgetron and naive bayes implementations were trained on all      images  and tested on      the perceptron
implementation  however  was only trained on     frames and then tested on     frames because of memory limitations 
the results of the comparison are shown in the table in fig   
examining the data reveals that the naive bayes classifier was biased towards false negatives  however  the combined error
rate of the naive bayes classifier          was significantly lower than that of the perceptron        and the forgetron       
it may seem that this error rate is high  but this is a very difficult application of these learning algorithms  they are trained on
only the extreme near field information which gets useful stereo classification  the algorithms are then tested on full images
with ranges out to the horizon  the best algorithms for use in this application will be ones who generalize well from near to
far range examples 
vii  c onclusions
due to the accuracy of the naive bayes classifier on the types of test data we provided  and its ease of implementation  we
decided to pursue a c implementation of the algorithm to run directly on the robot  this code has been incorporated into our
 d segmentation module and was included in the last code shipment to the government 
future work includes the addition of texture information or different color space representations as features for the classifier 
we purposefully made our implementation as modular as possible to facilitate these future changes  including texture energy
information will allow us to correctly classify obstacles even in environments where the obstacles and the traversable terrain
are similar colors which will become more important in the government testing as the winter ensues 

fi a 

 b 

 c 

fig     input output classification pairs from three different image sequences classified using the naive bayes classification algorithm  red indicates obstacles
while blue indicates traversable terrain 

fig    

classification error rates for the three online learning approaches

acknowledgments
the authors gratefully acknowledge the assistance and guidance of sebastian thrun and andrew ng 
r eferences
    dekel  o   shalev shwartz  s   singer  y   the forgetron  a kernel based perceptron on a fixed budge  to appear nips      

 

fi