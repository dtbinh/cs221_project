cs    machine learning final project   gould

 

a novel approach to user authentication through
machine learning of keyboard acoustic
emanations
stephen gould
sgould stanford edu

abstract recent work by asonov and agrawal     and
zhuang et al      has shown that acoustic emanations from
keyboards can be used to reconstruct the text that is being
typed  this  in theory  allows for the retrieval of confidential
information such as passwords by covertly recording sound from
the keyboard  and thus poses a significant security threat 
their techniques work because different keys produce different
acoustic signatures when struck by the typist  classifiers can be
built to detect these differences and language models help in
establishing priors for the various key combinations 
this paper looks at applying machine learning techniques to
the identification and authentication of users based solely on the
acoustic waveform generated as the user types on a keyboard 
this is possible because  not only do different keys produce
different sounds  but the same key sequence can produce different
acoustic waveforms when typed by a different user  classification
accuracies of up to     are reported on a small set of trial users 
in one novel application  this kind of system can be used
to biometrically harden users passwords by incorporating each
users typing behavior as part of the authentication procedure
 see monrose et al       
index terms machine learning  user authentication  keyboard acoustic emanations  computer security

i  i ntroduction

acoustic properties  more recently  zhuang et al      extended
this work by showing that it is possible to reconstruct text
that the user is typing after recording only    minutes of
data  their results improve accuracy by overlaying a language
model which provides priors for keystroke bigrams 
the work outlined in this report shows that it is also possible
to identify the users themselves  this can then be used as
a novel way to improve computer security  for example  by
hardening passwords with biometric information  monrose et
al      have shown that password hardening is possible by
direct measurements of users typing characteristics  through
modification of the computer systems device drivers   the
approach described below does not rely on direct measurements of keyboard timing  but rather extracts this information
as well as other features from the recorded sound  it allows
for the incorporation of features such as how hard the user
strikes each key  which has been identified by bergadano et
al      as valuable in distinguishing between users  this can
be done without the need for specialized computer hardware the computers microphone is all that is required  finally  the
work here has other novel applications outside of password
hardening which are discussed at the end of the paper 

t

his report discusses the outcome of research conducted
into the identification and authentication of computer
system users from keyboard acoustic emanations 
most users are comfortable with the familiar clicking sounds
emanating from their keyboard as they type  however  these
sounds  known as keyboard acoustic emanations  have been
shown to be a significant security risk in allowing the reconstruction of text from covert audio recordings      and      
a side channel attack in computer and communications
security is the ability for an adversary to obtain secret information through indirect observations of the system  for a
long time  researchers have known that private information can
be retrieved by monitoring electromagnetic radiation emitted
from different types of electronic equipment  for example 
data transmitted over older modems can be read by monitoring
the activity led on the modem which is highly correlated
with the data being sent  side channel attacks result from
weaknesses in a systems physical implementation rather than
underlying algorithms or protocols 
keyboard acoustic emanations are therefore a type of side
channel attack  asonov and agrawal     introduce the idea of
training a classifier to recognize keys based on their unique

fig     screen capture of windows gui application developed for capturing
acoustic data samples 

ii  data c ollection
since standard datasets of acoustic keystroke data are not
readily available  the first stage of this project was to develop
a tool for recording and labeling the sound of users typing
on keyboards  a windows gui application was written to

fics    machine learning final project   gould

 

record and save sample waveforms of different users typing
patterns along with some associated meta information such as
keystroke timing 
the gui samples the audio signal at a rate of      khz with
   bit quantization  in order to facilitate easy processing in
matlab  each sample waveform  training instance  is saved in
a separate  wav file with meta information in a corresponding
 txt file 
a total of     training examples were recorded from six
different users under similar environmental conditions  i e 
ambient noise   each user was asked to type username and
p ssw rd as if logging on to a computer system  all the data
samples  including those with misspellings  were included in
the training set    basic statistics of the training set are shown
in the table below 
fig    
captured audio signal for four keystrokes showing the energy
envelope used to detect each key press  also clearly visible are the touch 
hit and release peaks of each keystroke 

table i
t raining d ata s tatistics

chris
kendra
konstantin
naomi
ross
stephen

number of
samples
  
  
  
  
  
  

avg  length
 sec  
    
    
    
    
    
    

avg 
keystrokes
    
    
    
    
    
    

all data was collected on a dell latitude d    laptop using
the built in microphone 
iii  data a nalysis
a  overview
the acoustic signal produced by users as they type on
computer keyboards contains a suprisingly large amount of
information  fig    shows a sample audio waveform of four
consecutive keystrokes  clearly present in the waveform are
the  i  touch   ii  hit  and  iii  release peaks corresponding to
 i  when the users finger first touches the key   ii  when the
key reaches the bottom of its stroke  and  iii  when the key
rebounds after being released  respectively  this is consistent
with the findings of zhuang et al       the touch and hit peaks
are sometimes referred to collectively as the push peak 
there is typically        ms between a key being pushed
and that same key being released  and        ms between
consecutive keystrokes corresponding to an average typing
speed of         characters per minute  however  there can
be significant shortening in the duration between keystrokes
especially when a user is typing familiar text  such as his
username and password   in these cases  the hit peak from
a subsequent keystroke may coincide with the release peak
from the previous keystroke  although trivialized by zhuang et
al       this overlapping makes it extermely difficult to reliably
detect every keystroke as discussed in the next section 
it is quite obvious that each key click contains rich spectral
information that distinguishes it from background noise  see
  in a real implementation of an authentication system  the login software
would  as usual  reject attempts with invalid usernames or passwords before
invoking any biometric checking

fig     keyboard audio signal and corresponding frequency spectrogram
showing four seconds of continuous typing 

fig      the critical insight of asonov and agrawal    
is that due to differing mechanical properties  each key on
a keyboard will produce a different sound  they use that
difference to reconstruct text  our proposition is that different
typing patterns  corresponding  for example  to different users 
will produce different sounds for the same key or phrase  and
can therefore be used to identify users 
b  keystroke detection
although seemingly simple  keystroke detection required a
significant amount of work to get right  our first attempt was to
replicate the procedure outlined by zhuang et al      and detect
keystrokes by applying a threshold to the energy envelope of
the signal  computed by summing fourier coefficients from
   hz to   khz   zhuang et al      admit that this sometimes
makes mistakes which slightly affects the quality of their
results  our performance was  however  considerably lower
than theirs  which is most likely due to the use of the quieter
laptop keyboard over standard pc keyboards 

fics    machine learning final project   gould

early experimentation found the method as described to
be inadequate for obtaining accurate keystroke detection  the
procedure was improved by employing some general techniques described in the speech processing literature      the
most successful techniques were 
 high pass filtering the signal 
 clipping the audio signal to within two standard deviations of the mean to prevent excessivley high sample
values 
 raising the signal to a large odd power to accentuate
peaks 
 post filtering the detected keystrokes to disqualify any
keystroke within   ms of a previous keystroke 
while these steps gave better results than using the raw
signal  the results obtained still contained about a    detection
error    and is something that would require investigation in any
further work 
iv  f eature e xtraction
after detecting the keystrokes  a window of      ms surrounding each keystroke was used to extract features from the
waveform for use by the classifiers  among the many features
tried  four main classes of feature were found to be effective 
   inter key timing  inter key timing  or latency  measures
the time duration between consecutive keystrokes  monrose et
al       bergadano et al      and lau et al      have all identified
this as one of the main features in discriminating between
different users typing behavior  however  due to inaccuracies
in keystroke detection from the audio signal  and the short
input sequences being used for classification  this feature was
not as critical as one would think  as will be shown in the
results below 
the inter key time was associated with the second key in
each keystroke pair  so another issue to consider was that of
boundary conditions  i e  how to deal with the first key which
has no preceding keystroke  three policies were investigated 
all producing similar results 
 drop the first sample altogether  leaving m    feature
vectors for classifying the user from m keystrokes 
 assume some nominal constant value for the first
keystroke  for example  ms 
 set the inter key time for the first keystroke to be the
average of the inter key intervals for the entire sample 
in the results reported below  the first option was used when
inter key timing was the only feature used  while the second
option was used when inter key timing was used as part of a
larger feature vector 
   keystroke energy  bergadano et al      make the observation that keystroke energy provides good biometric information since users strike keys with different pressure  but that
special purpose keyboards would be required to make such
  by either missing actual keystrokes or falsely detecting non existent
keystrokes 
  in fact  even the system proposed by lau which measures key hit
times directly suffers from inaccuracies caused by poor resolution of the
software timers provided by the operating system and latency intorduced
by intermediate software layers  the best approach would be to replace the
keyboard devcie driver with a custom module to record key times precisely 

 

measurements  the audio signal produced for a key press is
strongly correlated to the energy imparted by the user  and
therefore makes a good surrogate for keystroke energy  this
feature is derived by summing the squared signal values in a
small region surrounding the hit peak 
   fourier coefficients  if the total keystroke energy is a
good feature for distinguishing between users  then the energy
in different frequency bands is also worth exploring  the
fourier coefficients feature computes the energy component in
equally spaced filter banks over the   khz sample space  the
features are then normalize by the total energy to compensate
for background noise effects 
   mel frequency cepstral coefficients  mfcc   research
in digital signal processing of speech signals has long identified mfccs as critical for automated speech recognition  see
deller et al        and are now used extensively in speech and
audio processing system  the mel frequency scale provides
a mapping between real frequency  measured in hz  and
perceived frequency  and was originally used to describe the
human auditory perception  there are a number of standard
scales cited in the literature  the scale used in this work is
defined as 


fhz
fmel        ln    
   
the mfccs are then computed as 

n
 
nx

mf cc   f 
hi j log ksj k


j  

i  

where s is the fourier transform of the waveform  and hi is
the i th mel frequency filter bank 
v  p robabilistic m odels
a  naive bayes model
let each training example be defined by a matrix consisting
of a sequence ofi m i  feature vectors  x  i   
h
 i 
 i 
 i 
x 
x 
      xm i    each feature vector representing
a single keystorke  the probability of a particular user  k  given
the data is then 



  
p y  i    k x  i    p x  i   y  i    k
z
where we have assumed equal priors on the y  i    and z is the
partition function  now  under the naive bayes assumption that
each keystroke is independent  we have 
m i 



  y   i   i 
 i 
 i 
 
p xj  y   k
p y   k x
z j  

the probability of each feature vector given the user was
modeled as a multivariate gaussian 


 i 
p xj  y  i    k  

 
n

  e

       k    

t



 i 
 i 
    xj k
 
xj k
k

fics    machine learning final project   gould

 

table ii
n aive bayes g aussian d iscriminant c lassifier  u sing    ms
w indow and    mfcc s   loocv c onfusion m atrix

fig     hidden markov model for single keystroke acoustics incorporating
both hit and release peaks 

c
ke
ko
n
r
s

c
  
 
 

ke
  
 
 

b  hidden markov model
as discussed above  the keystroke detection algorithm will
sometimes fail to detect actual keystrokes and ocassionally
produces erroneous keystrokes  in an attempt to remove the
keystroke detection algorithm from the classification procedure  a left to right hidden markov model  hmm  with states
for silence  hit peak  silence  and release peak was designed 
the hmm can then automatically detect keystrokes given a
sequence of feature vectors from the entire acoustic waveform 
the hmm has the added benefit of modeling temporal information  such as inter key timing  
each state of the hmm contained a single multivariate
gaussian to model the observation probability distribution
given that state  the hit and release states were initialized
with parameter estimates derived from feature vectors at the
estimated position of the keystrokes  while the silence states
were initialized with feature vectors extracted from the midpoint between two keystrokes  one hmm per user was then
trained using the entire sequence of feature vectors  each
generated from windows  ms apart  using the baum welch
re estimation algorithm 
vi  r esults
a  evaluating classification performance
classification performance was evaluated using leave oneout cross validation  loocv  on the entire training set of    
samples  a separate model was trained for each user  and the
test sample applied to each model  the predicted user label
was taken to be that of the model with highest posterior  in
the usual way 


arg max p y  test    k x  test 
k

the confusion matrices for the naive bayes and hidden
markov model classifiers using feature vector consisting of   
mfccs are shown below  the naive bayes classifier achieves
    accuracy while the hmm attains      results for other
features combinations are summarized in table iv 
b  evaluating authentication performance
the user authentication protocol evaluated works as follows 
a username passowrd combination is authenticated as being
typed by the real user by comparing a user specific statistical
model of the keystroke biometrics with a population model
 where the models are either naive bayes or hmms as
described earlier   although in this work  a separate population

ko
  
 
 
 

n
  
 

r
  
 

s
  

table iii
h idden m arkov m odel loocv c onfusion m atrix

c
ke
ko
n
r
s

c
  
 

ke
  
 

ko
  
 
 

n
  
 

r
  
 

s
  

model was trained for each real user  a single population model
could be envisioned for all users in a large system 
authentication performance was evaluated by assigning
each of the six users in the training set the role of imposter 
yimposter   in turn  then  for each 
user remaining  yreal
    
 i   i 
yimposter   train a user model
on
x
 
y
 
y
real

  and
a population model on x  i    y  i     yreal   yimposter   on
each iteration we keep track of the number of true false
positives negatives 


p
p x  i   u  
ntp   i y i   yreal   p x  i      t
   p 

p
p x  i   u  
nf p   i y i   yimposter   p x  i      t
    i  p  

p
p x  u  
ntn   i y i   yimposter   p x  i     t
 
p 


p
p x  i   u  
nf n   i y i   yreal   p x  i     t
 
p 
where t  the acceptance threshold  can be adjusted to tradeoff between far and frr  and  are the appropriate model
parameters 
the false acceptance rate  far  and false rejection rate
 frr  are then computed as 
f ar  

nf p
nf p  ntn

and f rr  

nf n
nf n  ntp

in most authentication schemes  it is desirable to keep the
frr as low as possible to prevent denying access to legitimate
users  while maintaining a sufficiently small frr to be of
practical benefit  results for far and frr for various feature
combinations are shown in table iv 
c  summary of results
the following table summarizes the results of a number of
experiments varying the window size and feature selection 
due to the prohibitively expensive cross validation process
involved in evaluating the hmm performance  most of the

fics    machine learning final project   gould

 

experiments were conducted using the naive bayes gaussian
discriminant classifier  and only the most promising feature
combinations used with the hmm classifier 
table iv
s ummary of r esults
model
naive bayes
 inter key timing 
naive bayes
 key energy  inter key
timing 
naive bayes
   ms window
normalized fourier 
naive bayes
   ms window mfccs 
naive bayes
   ms window mfccs 
naive bayes
   ms window mfccs 
inter key timing 
hmm
   ms window mfccs 
 ms increments 

classification
rate    
    

authentication
   far   frr 
          

    

          

    

          

    

          

    

          

    

          

    

          

it should be noted that since there were six users in the
training set  a random algorithm would achieve an accuracy
of       in the identification task  and far and frr of    
in the authentication task  the performance numbers of all
classifiers discussed in this report are significantly better than
random 
vii  d iscussion

and

f urther w ork

the results above clearly show that biometric information
can be extracted from keyboard acoustic emanations and used
to identify users with very high accuracy  the mel frequency
cepstral coefficients provide robust features for classification
with both naive bayes and hmm classifiers  the naive bayes
classifiers being much easier to implement and quicker to train 
the authentication results suffer from unacceptable large far
to be used in any practical application  but are still significantly
better than random 
keystroke detection  while error prone  did not seem affect
overall performance of the classification task  this is most
likely due to the user prediction being determined by as
the product of many individual feature vector posteriors  and
therefore tolerant to a small number of erroneous data points 
further work would still be beneficial in improving keystroke
detection and determining its affect on the authentication task 
one method for improved keystroke detection can include
a trained hmm  the optimal state sequence when given a
series of feature vectors can then be used to determine which
feature vectors pertain to hit and release peaks  and which are
background noise 
other work that follows from this project includes analyzing
the effect of increasing the size of the user space as well as
identification from free form typing instead of fixed username
and password  furthermore  the incorporation of other biometrics such as mouse movement patterns can be studied 

the work of zhuang et al      would also benefit from
being able to model artifacts introduced by a users typing
behavior versus those necessary for reconstruction of text  in
deed  monitoring a users typing behavior may lead to yet
other novel applications such as context sensitive assistance 
finally  although this research has shown that it is possible
to identify a user based on keyboard acoustic eminations 
there are still a lot of practical issues that would need to be
resolved in order to actually deploy a robust system  such
issues include filtering out background noise  dealing with
differences between keyboards  and tracking temporary and
permanent changes in typing patterns  for example when a user
injures a hand or finger   that said  this work has highlighted
what is possible and provides some insights that can be applied
in a range of similar research areas involving biometrics and
emanation security 
acknowledgment
the authors would like to thank the members of the cs   
class who volunteered the biometric typing samples for used
in this study  we are also grateful to dan boneh in discussions
regarding this subject matter 
r eferences
    d  asonov and r  agrawal  keyboard acoustic emanations  in ieee
symposium on security and privacy        pp      
    l  zhuang  f  zhou  and j  d  tygar  keyboard acoustic emanations
revisited  to appear in proceedings of the   th acm conference
on computer and communications security  november        online  
available  http   trust eecs berkeley edu pubs   html
    f  monrose  m  k  reiter  and s  wetzel  password hardening based on
keystroke dynamics  in ccs     proceedings of the  th acm conference
on computer and communications security  new york  ny  usa  acm
press        pp       
    f  bergadano  d  gunetti  and c  picardi  user authentication through
keystroke dynamics  acm trans  inf  syst  secur   vol     no     pp     
          
    j  john r  deller  j  g  proakis  and j  h  hansen  discrete time
processing of speech signals  upper saddle river  nj  usa  prentice
hall ptr       
    e  a  lau  e   enhanced user authentication through keystroke biometrics        computer and network security final project report       

fi