implementing machine learning algorithms on gpus
for real time trac sign classification
dashiell bodington  eric greenstein  and matthew hu
department of electrical engineering  stanford university
 dashb  ecgreens  matthu  stanford edu

abstract

real time trac sign classification at typical video
frame rates of    frames per second 
in this paper the impact of computer architecture
 cpu vs  gpu   algorithm  and training set size on
the accuracy and speed of trac sign classification
will be explored  first  we will discuss the methods we used  namely the dataset  features  and algorithms  as well as give a brief background of the
present research  results and discussion will follow
the methods section  finally  a conclusion and vision
for future work will be presented 

this paper investigates trac sign classification 
which is an important problem to solve for autonomous driving  linear discriminant analysis and
convolutional neural networks achieved an accuracy
of        and        respectively when classifying
eight dierent types of trac signs  the cnn was
implemented on a gpu for real time trac sign classification  testing time for the cnn on a gpu was
  ms image  which was    x as fast as running lda
on a cpu and     x as fast as running cnn on a
cpu  additionally  dierent types of classification errors and the eects of adding a new sign to the dataset
were explored 

 

 

methods

in literature  many dierent features and machine
learning algorithms are proposed for trac sign classification  some commonly used features include
histograms of oriented gradients  hog   haar like
features  and color histograms         linear discriminant analysis  lda   support vector machines
 svm   neural networks  subspace analysis  ensemble classifiers  slow feature analysis  kd trees  and
random forests have been investigated for trac sign
classification      this paper will examine two classification algorithms  lda and convolutional neural
networks  cnns   lda was chosen as a benchmark
algorithm  as it is fairly accurate and computationally
inexpensive  cnns give some of the highest accuracies reported for tsr  but they are computationally
intensive  a few groups have run cnns on gpus for
image classification with improved speeds           

introduction

trac sign recognition  tsr  is a computer vision
problem that has received significant attention due
to its relevance for autonomous driving  advanced
driver assistance systems  and mobile mapping  the
problem is split into two components  detection and
classification  road signs are designed to be easily
identified by human drivers and dier based on their
shape  color  icons  and text  however  trac sign
classification is made dicult for computers by varying illumination and weather conditions  occlusions 
and subsets of signs that are similar to each other 
many researchers have focused on improving the
accuracy of sign detection and recognition  but less
work has focused on improving processing time
through dierent hardware implementations  this
    dataset  preprocessing  hardware
paper will demonstrate how machine learning algorithms in multi core gpu architecture can reduce the lisa  laboratory for intelligent   safe automocomputing time compared to cpu methods to enable biles  trac sign dataset is a set of annotated images
 

fifigure    structure of the cnn implemented    
figure    image from the lisa dataset  left  and the     linear discriminant analysis
eight signs classified  right   the signs are  added
lane  stop ahead  speed limit     speed limit     stop  lda is a common classification technique  it models
the class conditional probabilities using multivariate
pedestrian crossing  merge  and keep right 
normal distributions and assumes the classes have a
common covariance matrix  ultimately  lda training solves for the directions that will represent the
and videos containing trac signs      it is comprised
axis that maximize the separation between multiple
of over       frames that contain over       signs of
classes  while simple  lda often gives very good re   dierent types  sign dimensions vary from  x 
sults in trac sign classification  with accuracies of
to    x     and are recorded from dierent perspecapproximately          in this report  matlab was
tives in grayscale and color  the wide variation in
used to run the lda on a cpu 
this dataset makes it ideal for realistic applications 
but for the purposes of our classification  images were
each cropped to a square area including only the sign     convolutional neural networks
of interest  all images were converted to grayscale
cnns have achieved several state of the art perforand scaled to   x   pixels 
mances in trac sign classification  in the second
we focused on classifying the eight most common
stage of the german trac sign recognition benchtrac signs in the dataset  pedestrian crossing  stop 
mark  gtsrb  held at ijcnn       two groups ussignal ahead  added lane  keep right  merge  speed
ing cnns obtained classification accuracies upwards
limit     and speed limit    signs  see figure     we
of      which is comparable to human accuracy     
trained our algorithms on     images of each sign
cnns are composed of three dierent types of layers 
and then tested them on an additional    images 
convolutional  subsampling  and fully connected layresulting in a training set size of      images and a
ers  figure   shows the structure of the cnn used
test set size of     images  images that were taken in
in this paper  raw grayscale images  scaled to   x  
the same time sequence were grouped and then the
pixels  were input into the cnn  iterative training is
groups were randomly divided into the training and
done by feeding images forward through the network 
test sets  thus preserving independence between the
and optimizing weights in the various layers through
sets 
stochastic gradient descent 
an intel i      k processor and nvidia geforce
in this report  cnns were implemented using
gtx     gpu were used to run all of the algorithms  cae  which is a publicly available deep learning
framework created by yangquing jia at uc berkeley
     cae supports several tools for accelerating cnn
calculations  such as nvidias cuda parallel com    histograms of oriented gradients puting platform  it can be further accelerated with
nvidias cudnn  a gpu accelerated library develhistograms of oriented gradients have been shown to oped specifically for neural networks and deep learnbe a good feature for classifying trac signs  and are ing  additionally  it is easy to switch between cpu
relatively fast to compute  the hog descriptor uti  and gpu calculations within cae  which suits the
lizes the images edge orientations and distribution purpose of this paper 
of intensity gradients in order to describe each image  the hog features were calculated using the
  x   pixel raw images  with the cell size  block size   
results and discussion
and block overlap tailored for performance  these
hog features  computed using matlab  served as table   gives a summary of the speed and accuracy
the inputs into the lda classifier 
results for the lda and cnn on cpu and gpu 
 

fitable    comparing the speed and accuracy of lda
and cnn on cpu and gpu
both the lda and cnn are highly accurate classifiers  achieving accuracies of        and        respectively  the lda results are superior to the        accuracies reported in literature  and the cnn
has similar accuracy to what is reported in literature
     this could be due to dierences in the training
and test sets 
in terms of training time  running lda was    x
as fast as running the gpu cnn  and     x as fast
as running the cpu cnn  for testing time  the gpu
cnn was the fastest  running    x as fast as lda and
    x as fast as the gpu cnn  the   ms testing time
using the gpu cnn is fast enough for real time classification  however  running a detection algorithm
before the recognition algorithm  which is needed to
solve the entire problem of trac sign recognition 
would take significant time  the overall speed of the
gpu cnn is due to the parallel processing capabilities of the gpu being well suited for the task of
training and testing neural networks 
to identify the types of mistakes the algorithms
made  confusion matrices were analyzed  since the
optimized algorithms made few errors  the confusion
matrices for the lda and cnn shown in figure  
are from less optimized versions that show interesting examples of errors  in the confusion matrix  the
columns represent the predictions made by the model
while the rows represent the true classification of the
image 
for the lda  there are two groups of signs that
are commonly misclassified  there is a cluster of errors in the top left corner of the plot  which consists of the added lane  pedestrian crossing  signal
ahead  and merge signs  these four signs all have the
same diamond shape  the second cluster of errors lies
on the bottom right corner of the confusion matrix 
the lda algorithm had diculty classifying the two
speed limit signs  which are extremely similar in both
their shape and inner symbol 
from these clusters of errors  we can see that sign
shape is a fairly important aspect for lda classifiers 
the lda algorithm separated the rectangular signs
from the diamond signs accurately  there are also
few errors associated with the stop sign  which has

figure    confusion matrices for lda  top  and
cnn  bottom 

a unique shape  the diculty of separating signs
with similar shape is expected given the fact that we
used hog as a feature  hog feature are descriptors that give a distribution of edge directions  so it
makes sense that hog features contain information
about sign shape but possibly miss other types of information that would help dierentiate between signs
of the same shape 
the confusion matrix for the cnn shows some
of the same misclassification tendencies as the lda
model  again  the most common errors are with
the two types of speed limit signs and the diamondshaped signs  overall  misclassifying speed limit signs
accounts for     of the misclassification error in the
lda and cnn algorithms  the majority of the
remaining error comes from the misclassification of
diamond shaped signs 
figure   shows a few examples of signs that are
dicult to classify  the leftmost image is only
  x   pixels and demonstrates the limited information sometimes available to the models  the lda
model classifies this as a speed limit sign  but the
cnn model  based on the same training data  is able
to correctly classify it as a stop sign  the center
and rightmost images show how poor lighting and
obstructions can make classification extremely dicult  similarly  in a blurred image  many of which are
 

fidataset aected classification accuracy  we added
images of the turn right sign to our test dataset and
measured the accuracy of our new classifier relative
to the size of the training set of the new sign  the
goal of this test was to determine how well our algorithms would perform with a small training set and
determine a rough threshold for the number of images
required to adequately retrain our classifier  additionally  we were interested in how a new sign aected
the classification of the other signs 
for this experiment  we created a training set ranging from   to    images and a test set of    images of
the new sign  we added the new sign datasets onto
the original training and test sets and then reran the
two algorithms  figure   plots the accuracy vs  new
sign training set size for both the lda and cnn 
from figure    we can see that both the lda and
cnn learn to classify the new sign fairly quickly 
within    images  both algorithms were able to correctly classify over     of the new test images  by
the time we reached    training examples  we were
able to consistently achieve over     accuracy for
both algorithms on the new sign  this shows that
adding a new sign to an existing classifier does not
take a significant number of training examples to
achieve high accuracy 
we also discovered that adding a new sign did not
significantly aect the accuracy of the classifiers on
the original testing set  the cnn received zero additional errors and the lda classifier received less
than    additional error on the original test set images when adding images of a new sign to the training
and test sets  these values remained fairly constant
as we continued to increase the size of the new sign
training set 
in terms of application  this result is useful  a
fully trained classifier can learn a new sign and begin
achieving high accuracy on it fairly quickly  additionally  we can be confident that adding the new
sign will minimally aect the accuracy of the rest of
the signs  these results would be applicable if a new
trac sign is introduced to a city  for example  it is
also impressive considering that the right hand turn
sign added is another diamond shaped sign  which
caused numerous errors in the lda and cnn algorithms previously 

figure    example of misclassified signs due to
small size  left   poor lighting  center   and occlusions  right 

figure    accuracy vs  new sign training set size
contained in our dataset   it is easy to imagine how
a merge and added lane sign or a pedestrian crossing
sign might be confused given their shapes and similar
content 
some of these misclassification errors can be solved
using the sequence of images that would be obtained
while driving  in a typical driving scenario  a sign
will start small in the field of view of the recording
device and may not be classified accurately  but as the
image grows closer  the amount of information available increases and the classification accuracy should
be higher  our analysis confirms the expectation that
larger size images are better classified  the median
side dimension of our test set of sign images is    pixels  but for images that are misclassified  the median
image side dimension is    pixels  this amounts to
    less information considering the total number of
pixels per image  additionally  lighting  obstructions 
and blur may be present in some images of a specific
sign but not others 
while the lda and cnn sometimes misclassified
the same image  there are examples for both cases
where the lda or cnn outperform one another 
this can be due to the properties of the algorithm or
because of the optimality of the training set  there
is a very strong dependence of the models accuracy
on the similarity between the training and testing
datasets  and the size and diversity of the training
dataset 
next  we explored how adding a new sign to the

 

conclusion

overall  this project provided interesting insight into
the problem of trac sign recognition  and our classification algorithms performed well  though the
classifiers were applied to a smaller dataset with
 

fifewer signs  both lda and cnn classifiers performed
nearly as well as other researchers results  having accuracies of        and        respectively 
not surprisingly  the cpu implementation of cnn
classification was the slowest  and cnn training was
the most time consuming process of either method 
running the gpu implementation of our cnn  however  was significantly faster than either cpu methods  this demonstrates the usefulness of large parallel computing for classification and reveals the
cpu gpu speedup we can expect  even on less
powerful devices  the gpu cnn testing time of
 ms image is fast enough to be applied to a real time
video feed 
though each classification method makes some errors  these errors follow predictable trends and are
highly dependent on the training of the algorithms 
it is most common for the classifiers to misclassify
within common sign shapes  such as dierent speed
limit signs and dierent diamond shaped signs  this
is expected  especially given small pixel dimensions 
blurry images  dicult lighting conditions  and occlusions 
when the training data is representative of the
testing conditions however  both models can achieve
accurate classification on a small number of samples 
adding the turn right sign to the established   sign
classifier showed that even with a small training set
for the new sign  the classifiers were able to accurately
classify it  furthermore  the classifier did not make
many additional errors on the original sign types 
with all the challenges of dealing with a small
dataset and small  blurry  and occluded images  the
accuracy and speed achieved by both algorithms is
impressive  these classification results oer insight
into successful trac sign recognition  and are a significant step towards complete recognition when applied in conjunction with detection methods 

 

temporal and movement information can also be
useful in tracking signs across the recorded field so
that multiple samples of the same sign can be captured to decrease noise and uncertainty 
detection  which is the isolation of a trac sign in a
scene  must be done to solve the full problem of trac
sign recognition  but it also complicates the process
significantly  we attempted to implement this  but
were unable to do this given time constraints  one
common practice is to use regional analysis to estimate which portions of an image may contain a trac
sign  and then to classify these areas using a classifier 

acknowledgement
we would like to thank milad mohammadi for his
guidance on the project 

references
    dalal  n   and triggs  b   histograms of oriented gradients
for human detection   computer vision and pattern recognition        cvpr       ieee computer society conference on  vol     ieee       
    viola  p   and jones  m   robust real time face detection  
international journal of computer vision                     
    stallkamp  j   et al   man vs  computer  benchmarking machine learning algorithms for trac sign recognition   neural
networks                    
    ciresan  d   et al   a committee of neural networks for traffic sign classification   neural networks  ijcnn   the     
international joint conference on  ieee       
    mussi  l   cagnoni  s   and daolio  f   gpu based road
sign detection using particle swarm optimization   intelligent systems design and applications        isda    ninth
international conference on  ieee       
    oh  k   and jung  k   gpu implementation of neural networks   pattern recognition                        
    mgelmose  a   et al   vision based trac sign detection and analysis for intelligent driver assistance systems 
perspectives and survey   ieee transactions on intelligent
transportation systems       

future work

    lisa
lab 
convolutional
neural
networks 
http   deeplearning net tutorial lenet html       

without changing the models we use  performance
could be improved by improving the robustness of
our training dataset  this can be done by simply obtaining more images of the same types of signs  or
by manipulating the current dataset  other research
groups have shown improved performance by including translated  scaled  or rotated variations of images
in their training dataset 
higher accuracy may also be possible with further
optimization of the networks  adding layers to the
cnn of dierent types and connections  or adding
features to the lda model may increase accuracy 

    jia  y  et al  cae  convolutional architecture for fast
feature embedding  http   cae berkeleyvision org        

 

fi