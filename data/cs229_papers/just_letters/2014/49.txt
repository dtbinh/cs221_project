event based stock market prediction
hadi pouransari  hamidreza chalabi

 

introduction 

there are various studies on the behavior of the market  in particular  derivatives such as futures and
options have taken a lot of attentions  lately  predicting these derivatives is not only important for the risk
management purposes  but also for price speculative activities  besides that accurate prediction of the markets direction can help investors to gain enormous profits with small amount of capital  tsaih et al         
stock market prediction can be viewed as a challenging time series prediction  kim         there are many
factors that are influential on the financial markets  including political events  natural disasters  economic
conditions  and so on  despite the complexity of the movements in market prices  the market behavior is
not completely random  instead  it is governed by a highly nonlinear dynamical system  blank        
forecasting the future prices is carried out based on the technical analysis  which studies the markets
action using past prices and the other market information  market analysis is in contradiction with the
efficient market hypothesis  emh   emh was developed in      by economist eugene fama  fama      a 
fama      b  whose theory stated that it is not possible for an investor to outperform the market because
all available information is already built into all stock prices  if the emh was true  it would not be possible
to use machine learning techniques for market prediction  nevertheless  there are many successful technical
analysis in the financial world and number of studies appearing in academic literature that are using machine
learning techniques for market prediction  choudhry and garg        
one way to forecast the market movement is by analyzing the special events of the market such as
earnings announcements  earnings announcement for each stock is an official public statement of a companys
profitability for a specific time period  typically a quarter or a year  each company has its specific earnings
announcement dates  stock price of a company is affected by the earnings announcement event  equity
analysts usually predict the earnings per share  eps  prior to the announcement date 
in this project  using machine learning techniques  we want to predict whether a given stock will be rising
in the following day after earnings announcement or not  this will lead to a binary classification problem 
which can be tackled based on the huge amount of available public data  this project consists of two major
tasks  data collection and application of machine learning algorithms  in    we will discuss our efforts to
collect the required data  in continuation in    features definitions and selections are described  we have
considered and discussed different machine learning algorithms in    in    the summary of our results and
possible extensions are explained 

 

data collection

data collection is one of the most crucial steps in every machine learning problem  for the purpose of this
project  we need two sets of data     the daily stock market information  and    the earnings calendar data 
there are different websites that provide the daily stock market information  e g   www google com 
finance and finance yahoo com   there are some available apis that can be used to fetch the historical
data of market information 
the earnings calendar data is much more challenging to gather  in the first part of the project  we
aimed to collect all the required data from publicly available web sites  although there are many available
web sites that provide daily information for the stock prices and earnings announcements  only a few of them
provides historical data  in particular  www nasdaq com and finance yahoo com provides historical data
for different companies  but there is no publicly available api to collect the earnings announcements data 
hence  in the first part of the project  we decided to collect these data using web scraping codes 
we wrote couple of python programs in order to collect the earnings data from aforementioned web sites 
the summary of data is as the following 

 

fi earnings data from nasdaq  for each company and for each announcement  we created a dictionary
that stores name  fiscal year  market cap  estimated eps  number of estimations  and eps 
 symb  date  name  fiscal year  cap  est  eps    est   eps   
 earnings data from yahoo  for each company and for each announcement  we created a dictionary
that stores names and announcement times 
 symb  date  name  time   
 stock prices data from yahoo  for each company and for every day  we created a dictionary that
contains stock volume  high stock value  low stock value  opening stock value  closing stock value 
 symb  date  vol   high  low  open  close   
these data are gathered for the period of time between jan   st       to nov   st      and stored in
structured databases  even though  we have stored all the required data for the purpose of this project  the
written codes provide the flexibility to implement the online learning algorithm 
the objective of the project is to predict sign of the jump   of the stock price right after earnings
announcement  different companies announce their earnings at different time of the day  before market or
after market   in order to calculate the price jump right after the earnings announcement  we need to have
the announcement time as well  for example  apple inc  announced its last earnings on october   th     
after market was closed  therefore  the correct jump for our consideration is the difference between the
opening price on october   st and the closing price on october   th  note that this calculation would be
different if the announcement time was before market  the earnings time data is not provided by nasdaq
website  therefore  we have written another crawler to collect the earnings time data from yahoo website 
finally  we merged the data obtained from these two sources  the overall data  daily stock prices   earnings
announcements  obtained for more than      companies over   years took about  gb of memory  this data
set is much more complete compared to many similar published works  for instance   bao et al        
considers only     data points for one company over the period of   months 

 

feature selection

having gathered a big data set for stock prices and earnings announcements  we are able to define various
numerical features out of it  for each company and for each earnings announcement  we consider all the
information from a year before the announcement date  this brings about one learning example data  note
that each company creates several learning examples  based on the number of earnings announcements it
has  
we have defined    numerical features for each learning example  in order to select the most useful
features among all of these    features  we used filter feature selection with scores assigned as the
absolute value of the correlation between features and the objective 
figure   illustrates the scores of different features 
here is the list of top    features according to their scores 
   surprise factor           
   eps      eps     
   eps         eps       eps        
   earning jump         
   standard deviation  high   low  close    mean  high   low  close  in last    days 
  jump

is defined as the difference between the opening stock price and the closing price of the previous day 
factor is defined as  eps   estimated eps  eps  this parameter quantifies how unexpected the announced eps

  surprise

is 

 

fi   standard deviation  high   low  close    mean  high   low  close  in last    days 
     billion   market cap      billions 
   standard deviation  high   low  close  in last    days 
   earning jump         
    earning jump         
note that our objective function is 
y   earning jump       
in the above definition the number inside the brackets shows the number of periods before the date of
learning example  for instance  jump     means the price jump in the last earnings announcement prior to
the current one 

figure    scores of features based on their correlations with the objective function 

 

machine learning algorithms

we have decomposed our data into two data sets  the first data set which is used as the training set includes
all the data prior to april  st       and the second one that is used as the test set consists of the data from
april  st      to november  st       basically  this corresponds to a cross validation method with about
    training set and     test set  in the following we are going to investigate different machine learning
algorithms for our prediction goal 

   

logistic regression with regularization

we first implemented the logistic regression by incorporating the regularization  here  we are seeking for
a vector  that maximizes the log likelihood function  to do this  we performed stochastic gradient descent
algorithm 
y      x     
             y  i   h   x i    x i 

 

 

  

   
 of iteration

fitraining error
test error

gaussian
     
      

linear
     
     

polynomial   rd degree 
     
     

sigmoid
      
     

table    obtained errors using svm with different kernels as applied to full data set    k training
examples  

the convergence plot for our stochastic gradient descent  sgd  algorithm is shown in figure    the obtained
training and test errors are       and        respectively  please note that as explained in    predicting the
market movement is a very difficult and challenging task  and our accuracy is in fact pretty reasonable  many
of the other previous works have obtained similar  or less  accuracies  bao et al         lee        kim       
choudhry and garg         for further verification of the results of the sgd  we also implemented the

figure    convergence of the stochastic gradient descent method for maximization of the log likelihood
function for the logistic regression method 
newtons method to obtain the  of logistic regression  the runtime of the newtons method was about the
same as sgd for the current size of feature vector     dimension     for interception   the training and
test errors were       and        respectively 

   

svm with different kernels

many similar works have used support vector machines  svms  in order to obtain a right balance between
the empirical error and the vc confidence interval  bao et al          generally  this results in a better
generalization performance compared to the logistic regression method  we used  pedregosa et al         in
order to implement svm with l   regularization and different kernels  in table    training and test errors
using the full data set for different kernel choices are tabulated  similar to  choudhry and garg         this
table shows that the gaussian kernel outperforms the others 
the regularization factor in svm provides a trade off between bias and variance errors  in figure   left 
we have shown how the training error drops as c coefficient increases  note that to obtain this figure we have
used all    features  not only the top    ones   this shows us that svm is capable of completely overfitting the
data  whereas the test error increases for large values of the coefficient c  moreover  in figurefig lc right  we
have demonstrated the learning curve achieved by c       the plot shows a reasonable trend  higher lower 
training test  error as the training set size increases 

 

fifigure    left  variation of the training error with the regularization coefficient using svm with gaussian
kernel  right  the learning curve obtained from a portion of the data set as our training set 

 

conclusion and future work

in general  the problem of stock market prediction is very challenging  and very high accuracies is not
achievable  nevertheless  machine learning techniques can provide reasonable market movement predictions 
that can be used by investors  the calculated results show that using support vector machines with gaussian
kernel and regularization outperforms the logistic regression  and svm with other kernels  in this study  we
were able to get a prediction with accuracy of      we should emphasize that the current dataset is very
valuable  and many extensions to the current algorithm can be applied to it 
first of all  we could expand the feature space to higher dimensions  and try other feature selection
methods such as wrapper model feature selection  secondly  as a natural extension to our work  one can
predict the value of the price jump  rather than just the sign of it  moreover  one can categorize companies
based on their mutual influence on each other  and find an individual learning parameter    for each category
 e g   it companies  energy related companies  health care companies  etc    additionally  for each feature 
one can compute the correlation matrix of that feature between different companies  this can be used as an
extra information for prediction purposes 

references
 bao et al         bao  y   lu  y   and zhang  j          forecasting stock price by svms regression  in artificial intelligence 
methodology  systems  and applications  pages         springer 
 blank        blank  s  c          chaos in futures markets  a nonlinear dynamical analysis  journal of futures markets 
             
 choudhry and garg        choudhry  r  and garg  k          a hybrid machine learning system for stock market forecasting 
world academy of science  engineering and technology            
 fama      a  fama  e  f       a   the behavior of stock market prices  journal of business  pages       
 fama      b  fama  e  f       b   random walks in stock market prices  financial analysts journal  pages      
 kim        kim  k  j          financial time series forecasting using support vector machines  neurocomputing               
 lee        lee  m  c          using support vector machine with a hybrid feature selection method to the stock trend
prediction  expert systems with applications                   
 pedregosa et al         pedregosa  f   varoquaux  g   gramfort  a   michel  v   thirion  b   grisel  o   blondel  m   prettenhofer  p   weiss  r   dubourg  v   vanderplas  j   passos  a   cournapeau  d   brucher  m   perrot  m   and duchesnay  e 
        scikit learn  machine learning in python  journal of machine learning research              
 tsaih et al         tsaih  r   hsu  y   and lai  c  c          forecasting s p     stock index futures with a hybrid ai system 
decision support systems               

 

fi