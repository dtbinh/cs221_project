real time dense map matching with naive hidden markov models  delay versus accuracy
cs     final project  stanford university
y  ahres  yahres stanford edu   a  jambulapati  jmblpati stanford edu 
l  janssen  ljanssen stanford edu   j  kangaspunta  juhana stanford edu 
abstract   in this paper  an algorithm for map matching
is proposed  based on a viterbi algorithm running over
a hidden markov model  the algorithm performs similarly to other existing algorithms for map matching 
but runs faster and forgoes the use of memory intensive
shortest path algorithms  the results for the algorithm
on data collected around palo alto are provided  and
various potential improvements are listed at the end 

 

introduction

for smartphone users it has become a quotidian experience
to find out where youre vehicle is located at a certain point
in time when driving your vehicle  however  matching noisy
mobile gps signals onto the correct road in a real time fashion
is still research of interest  on a commercial level these problems arise in privately owned taxi services  where the drivers
phone acts as an gps device  map matching algorithms must
be fast and accurate such that drivers can calculate the fare
of the service and can display the position of the driver to the
customer  accuracy versus output delay is most of the time a
trade off  and this work focuses on methods from cutting edge
research in map matching accuracy to increase the trade off
ratio for real world implementations 

solved 
our work focuses on the gap in recent work  the aim is
to create a real time hmm that replicates a computationally
undesired shortest path search algorithm without the explicit
knowledge whether a path exist to that road segment given the
frequency of the observations  also  the focus is on dense  hz
mobile gps data which is applicable to many applications 
modelling the complexities of the problem and finding good
features is key  by fusing and extending novel approaches we
focus on the delay versus accuracy metric to evaluate the model 
the article proceeds as follows  somel definitions are explained first in section    after that our methods for obtaining
the data  the algorithm  and the parameter learning is elaborated upon in consecutive sections  we provide results and
conclude with some notes on work in progress 

 

definitions

def    the graph  let the directed graph g be a localized
digital road map with nodes v  g and arcs eij   vi  vj  
then each curved street in real life is approximated by straight
arcs with start and end node a   v  v such that a  v  
def    sliding window  the sliding window is defined to
have fixed size t   a buffer of size    n   t imposes an
output delay  n   due to this buffer the viterbi algorithm
can use future observations to enhance accuracy 
def    state space  we define an observation as a package
of data  including gps data  that the device has provided to
the algorithm  for each observation ot we define the arcs a
within great circle distance  of ot as the state space s t    s t  
a   k ot  v kg      for t   t  n we define the optimal
path as a    a    a            att  n    the optimal path of the
algorithm we denote as a  
def    naive hmm  the sequential hmm is defined as the
tuple

matching gps signals to a graph based street can be done
in multiple ways  first of all  the map matching can proceed
in a real time fashion or on batched data basis  in the
literature both can be devided in four main groups  geometric
 bernstein     topological  white     probabilistic  ochieng   
and advanced methods not falling into any these categories 
the geometric approach only concerns about the shape of the
link between nodes  hence discarding information about how
the segments are connected  a straightforward search to the
closest node is an example of matching the observation to the
map  topological map matching extends that by taking the
relationship between entities in the vector based street map
into account  the class of probabilistic map matching involves
a confidence region around an observation  the matching then

is based on probabilistic features in this region  the hidden
  
 tr 
 em 
t 
s i   oi   pi   pi
  a 
markov model  hmm  developed by  baum    belongs to this
i tt t 
class  superb recent work in hmm for real time map matching
has been in the area of variable sliding windows with sparse
data and shortest path graph search     pre smoothing raw where p  tr  is the set of transition probabilities p  a 
t
i
t
data and shortest path graph search  szwed     regarding
 em 
aj  ai    a  s t   s t and pt
is the set of emission
batch data hmm   newson    found an almost flawless model
probabilities pt  ot  a  s t    a  is the assumed end arc  note
arguing that in batch mode the problem can be regarded as
that this naive hmm representation does not take into account
  for more information see  hart    algorithm  goh   
whether ai  aj is a link in g 

fi 

data

data is gathered by driving around in the palo alto and
stanford area  using the sensor log  alan    application on an
iphone         gps observations including difficult sections
such as complex junctions  highway branches and fly overs 
this data is obtained from the   routes depicted in figure   
the test data is gathered in the palo alto area and has     
observations  our set of map information was taken from
openstreetmap org 
figure    sliding window with buffer size n    

the retrieved latitude and longitude gps data is assisted
with wifi hotspot location and cellular triangularization by
    emission probabilities
the iphones hardware  in addition  the raw data provides the
implied heading and speed of the vehicle through the ios loca  to score our possible states  we implement some emission
tion api 
features 
emission feature    segment location distance  this
measure allows our model to determine the distance between
our gps estimated location and a possible segment  we define

 
  where  is a predefined standard
it as       exp  d o e 
   
deviation parameter and d o  e  is the minimum distance
between our observed node o and the segment e 
emission feature   
segment velocity orientation
distance  this measure determines the angle between our
vehicles estimated direction and a given road segments
direction  to compute this  we define a coordinate plane over
our map  and convert each road segment into a unit vector
f  e  and our observation into a unit vector f  o   our measure
is then f  o   f  e  
figure    routes driven for training data 
emission feature    speed limit constraint  this
measure prevents our model from transitioning to a road with
a drasticaly different speed limit when our vehicle is traveling
at high speeds  this is done to replace the use of shortest
  the algorithm
path in our algorithm  as most roads that are nearby to our
current segment share the same characteristics to our current
segment  we calculate the measure by setting it to   if our
using viterbi algorithm  at time t we search through the naive
current speed is over    miles per hour and if our current speed
hmm to find the local optimal path al    atn           at   conis    percent or higher over the segment being tested  and set
ditioned on  att   att              atn      in short  the viterbi to   otherwise 
implemented is a recurrence relation up to t  n    where the
optimal path is defined as follows 
the choice of these measures contain some implicit assumptions  however  the segment location distance measure


assumes that the observed gps error is normally distributed 
 em 
 tr 
r a ot   a      pt
max pt r a ot    a   
this assumption is a good approximation for the actual
as t 
truth  but it is not exact  in fact  raw gps data is rayleigh

 
al   argmax r a ot   a  
distributed  as when projected the error is normal in both
i tn t  as i
latitude and longitude  however  the gps data collected by
most smartphones is augmented with data from wifi beacons
figure   displays how the sliding window with buffer propa  and cell towers  these other factors complicate the raw
gates  the red states  or in other words arcs  are the states distribution  and convert it to a more normally distributed
conditioned on as the optimal path for t  t up to t  n     curve  as seen below  while our raw data is not a perfect fit
for a normal distribution  a normality assumption is accurate
enough for use in this model 
  comprehensive

overview see e g   forney   

 

fi   

learning weights

the weights vectors w tr  and w em  need to be obtained
to give each feature the correct weight when constituting
pt  ai  aj  ai   and pt  ot  ai  s t   for some ai   guessing
the weights first and running the viterbi algorithm we label
ai  aj as   and ai   aj as    for each ai  s t  and
aj  s t   post correcting manually for classification errors
gives the correct labeling of feasible transitions  holding the
emission weights constant  we run svm with l   regularization
on
the obtained labels and the feature scores  to do so  we
figure    gps error against gaussian 
use the scikit learn        python package that parses
in addition  the second feature assumes that the map pro  to the libsvm package to run the svm algorithm  since in
jection used is a perfect match for the three dimensional earth  general   s t        we have unbalanced labeling data as only
however  while the mercator projection used is not a perfect the transitioned state in the state space is assigned the label   
fit for the earth  the error that the projection introduces is so as only        is labeled   we run an svm model that takes
this into account  figure   displays a balanced impression
minimal that it does not affect the results significantly 
of the training data for obtaining w em  where we randomly
    state transitioning
deleted samples labeled    just for the sake of data visualization 
to reveal the hidden states in the hmm we have to model the
 tr 
running    fold cross validation to tune the cost parameter
state transitioning probabilities in the set pt for each a  s t
 tr 
and w em  svm
as a priori s t is unknown  we define   transition features that c we find that c     is optimal for both w
should replicate the shortest path algorithm well enough to models  figures  a and  b depict the minute differences in f 
give improbable transitions a low probability  for some i  j let scores and accuracy percentages for varying c      values 
pt  ai  aj  ai     w      w    such that k w tr  k      where
w tr    vec w    w    defines the weight vector 
transition feature    backtrack prevention  to prevent
our model from reneging on a previous decision and going back
to a previously visited state  we add a weight to our model
to improve the models tolerance of uncertain predictions by
underweighting segments in the state space that have been
previo usly traversed  the measure is defined as   for all
unvisited segments in the state space and   for all visited
f  score 
accuracy   
nodes minus the current one 
figure    tuning metrics 
transition feature    distance discrepancy  we also add
a feature to prevent the models prediction from changing too
drastically compared to the distance traveled in real life  to
calculate this measure  we first compute the distance between
our current observed gps node and the previously observed
gps node d ot   ot     and then compute the distance between
the midpoints of our previous segment and the segment we are
calculating the measure for  and call it d eot    e   then  our
measure is   d ot   ot     d eot    e          
   

   

   

   

   
 

 

 

 

 

 

 

 

 

           e 

     

     

    

     

    

accuracy  

f  score  

     

     

     

    

    

     

    

     

     
   

   

   

   
   
   
cost parameter

   

   

   

    
   

   

   

   
   
   
cost parameter

   

figure    impression of train data  red is label   

 

results

give error analysis in math notation given before 

e 
  metric and  

  metric 

 

 
m

m
x
i t n

i ai    ai  

   

   

fiwhere the subscript i denotes the ith segment in the ordered
set 
the accuracy of the algorithm was evaluated by using two
test sets of raw gps observations gathered by driving in san
francisco and palo alto  the total number of observations
in these test sets is      and the environment spans from
downtown streets in san francisco to freeway  the driving
routes for collecting the test sets were designed to replicate
common driving paths of taxi service companies and include
difficult areas  such as freeway overpasses and areas between
high buildings where gps data is exceptionally noisy  the
observations were collected at rate  hz 

features that allowed us to outperform current map matching
algorithms both in accuracy and delay  weve also studied
the tradeoff within this hmm model between output delay
and performance  this showed us that  by inducing artificial
delay  we can buffer the next values and compute the current
state with a better confidence  this study aimed to provide a
framework for future applications where the minimum delay
and accuracy of map matching is crucial 
in the future  we may improve the algorithm devised here
further  a discrete kalman filter may be added to process our
gps data and smooth out potential error spikes  in addition 
we may also try using different statistical distributions  such
as a hyperbolic secant distribution  to fit the gps error better
and improve the accuracy of our distance measure these are
relatively simple tweaks to the model  but given the limited
amount of time provided for the project  there was no time
remaining to implement them 
in the longer term  we may also add a maneuver detecting
feature to detect turn behavior at intersections  this would
allow us to further reduce the possibility of backtracks at
intersections  however  adding such a feature would be very
difficult to implement well  as the wide variety of intersections
means that the measure will likely be much more complex
than anything explored in this paper 

figure    convexity of classification error for fixed window size and variable
buffer  blue dashed is a sliding window of size    red dashed is a window of    
and black is a window of     the y axis is the classification error percentage 
and the x axis is the buffer size 

finally  we may consider detecting the gps standard deviation actively and change the models weights accordingly 
however  this is again nontrivial to implement well  as the only
way to obtain the standard deviation is to take many gps samples while the car is stationary  the error obtained in this way
is not an entirely reliable measure for the standard deviation 
meaning that any potenial gains in accuracy from increased
granularity would be at least partially offset by the error in the
as displayed in figure    there is a significant tradeoff resulting estimate 
between buffer size  delay  and accuracy  evaluating the
empirical test results  we can estimate that error as a function
of buffer size is convex  and the minimum error is achieved
approximately when buffer size is half of window size  this
  bibliography
observation can be explained intuitively  since when buffer size
is close to half of the window size  we have an equal amount
of information about future observations as we have from past  julier    julier  s j  and uhlmann  j k   unscented filtering
observations  therefore  the most confident estimations of the and nonlinear estimation    p              
states lie in the middle of the hidden markov model 
 goh    goh  c y  and dauwels  j  and mitrovic  n  and
asif 
m t  and oran  a  and jaillet  p   online map matching
because of the tradeoff between delay and accuracy  it can
based
on hidden markov model for real time traffic sensing
be concluded that no absolute window and buffer parameters
applications 
  p              
exist for this model and it is left for the implementer to decide
figure   displays the combined errors for the two test sets
given different sliding window and buffer size configurations 
as we can see from the figure  the errors are generally very low
and the algorithm performs well in the test scenario having
      classification error with the worst configuration and
       classification error with the best configuration 

how much accuracy can be sacrificed for lower values of delay 

 

 szwed    szwed  p  and pekala  k   an incremental
map matching algorithm based on hidden markov model   
p              

conclusions and future work

in this paper  we proposed a new approach for real time map
 quddus    mohammed a  quddus and washington yotto
matching and analyzed its performance on ground truth data  ochieng and lin zhao and robert b  noland  a general map
this hmm based approach relied on simple  yet powerful matching algorithm for transport telematics applications    p 
 

fi            
 quddus    mohammed a  quddus and washington y 
ochieng and robert b  noland 
current map matching
algorithms for transport applications  state of the art and
future research directions     p              
 bernstein    bernstein  d and kornhauser  a  an introduction to map matching for personal navigation assistants 
      
 white    christopher e  white and david bernstein and
alain l  kornhauser  some map matching algorithms for
personal navigation assistants    p             
 ocheing    ochieng  wy and quddus  ma and noland 
rb  map matching in complex urban road networks    p      
    
 baum    baum  leonard e  and petrie  ted  statistical
inference for probabilistic functions of finite state markov
chains  the institute of mathematical statistics  p           
    
 hart    hart  p e  and nilsson  n j  and raphael  b   a
formal basis for the heuristic determination of minimum
cost paths    p              
 newson    newson  paul and krumm  john  hidden
markov map matching through noise and sparseness  acm 
p              
 krakiwsky    krakiwsky  e j  and harris  c b  and wong 
r v c   a kalman filter for integrating dead reckoning  map
matching and gps positioning    p            
 alan    alan  h f  and arnrich  b  and ersoy  c  and
cinaz  b   sensor log  a mobile data collection and annotation application    p                
 forney    forney  g d   jr   the viterbi algorithm    p 
            

 

fi