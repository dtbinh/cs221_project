application of neural network in handwriting recognition
shaohan xu  qi wu  and siyuan zhang
stanford university
    serra mall
stanford  ca       usa
 shao   qiwu  siyuan  cs stanford edu

abstractthis document describes the application of
machine learning algorithms to solving the problem of
handwriting recognition  two models were explored  namely
nave bays and artificial neural network  and ann was found
to generate more accurate recognitions  by setting up our model
and training on the mnist database of handwritten digits  we
were able to achieve recognition of handwritten digits with
decent accuracy on testing data obtained from stanford students
as well as data from mnist database  possible future
improvements of this task are discussed in the end 
keywordshandwritten character recognition  nave bays 
artificial neural network

i 

fig     image processing flow

image processing is applied to the dataset using matlabii 
list below illustrate the basic steps 


read image  reads the image into matlab as an array
of rgb values 



convert image to gray scale  convert the array to a
gray scale array 



image cropping  get rid of the blank spaces near four
edges of the image 



resizing  resize the image to be       pixels
without changing the shape of the digit  this usually
means that the digit would fill all    pixels in one
dimension  while leaving blank some pixels in the
other dimension 

introduction and motivation

handwriting recognition can be divided into two categories 
namely on line and off line handwriting recognition  on line
recognition involves live transformation of character written by
a user on a tablet or a smart phone  in contrast  off line
recognition is more challenging  which requires automatic
conversion of scanned image or photos into a computerreadable text format 
motivated by the interesting application of off line
recognition technology  for instance the usps address
recognition system  and the chase quickdeposit system  this
project will mainly focus on discovering algorithms that allow
accurate  fast  and efficient character recognition process  the
report will cover data acquisition  image processing  feature
extraction  model training  results analysis  and future works 

ii 

data acquisition

the mnist database of handwritten digits i is used as
training sets  the mnist database has a training set of       
examples  and a test set of        examples     sets of data telephone numbers and zip codes   were randomly collected
among stanford students for testing purposes 

iii 

image processing

we use    by    pixels to represent all the images  all the
digits are size normalized without changing the shape to fit in
the fixed size  collected testing images need to be scanned
before being processed  the training dataset contains
individual digits  while the testing images need to be
partitioned into separated digits for further processing 

for testing images that consist of more than one digit  the
digits need to be separated prior to cropping and resizing 
digit separation is done through these steps in matlab 
 edge detection
 image dilation
 image filling
 blobs analysis  bounding boxes and centroids 
iv 

feature extraction

for each training example  i e  the digit image  i i   the
feature  x i   were selected to be all the gray scale pixel values
of an image  here the xs are     dimensional vectors in r    
and is are    by    matrixes  feature vector was arranged so
that the pixel values were extracting diagonally  and starting
from the upper left to the bottom right of a matrix iii
fig     diagonal based feature extraction of a gray scale image

   

finave bayes and neural network models are used to
determine the dimension  extraction sequence  and derivation
of features based on the training errors of each model  more
details about nave bays and neural network models will be
introduced later in model training section 
features determination processes 
a  dimension  after normalizing each image  although the
size and format are the uniform for each of them  the size of the
matrix  or the total number of features  still need to be
determined for optimization purposes  this task is done by trial
and error methods  and the results are summarized in the table
given below 
table i 

training error vs  feature dimension using nave
bays model

feature dimension
  
   
     
      

matrix size
  by  
   by   
   by   
    by    

training error
     
     
     
     

as can be seen  too few of features will compromise
accuracy  and too many features will create redundancy 
which increases run time significantly  therefore the total
numbers of features were chosen so that the accuracy is
maximized and redundant information is minimized 
b  extraction sequence  under what sequence the features
are extracted from the data influences the accuracy of
classification as well  three approaches   vertical  horizontal 
and diagonal   were investigated to explore their effects on the
classification accuracy  experiments were performed for both
naive bays and neural network models to ensure its
validation  and the diagonal extraction sequence is adopted
eventually  the training error for each case is shown below 
table ii 

training error vs  feature extraction sequence
feature extraction
sequence
vertical
horizontal
diagonal

training error
     
     
     

c  feature derivation  three types of feature extraction
approaches were investigated and summarized below 
  hole detection  after running nave bays  we found the
algorithm was doing badly on distinguishing resembled
numbers  e g    and    and   and     to improve the
performance of recognition  a convenient feature that was able
to detect whether there is a close circle in the picture was added 
for example  in most human written numbers    has a circle
while   doesnt    has a circle while   doesnt  the
modified algorithm did do better on distinguishing  s and  s 
however  the overall performance turned out to be worse 
  zoning  to further decrease the total number of features
input into the model  after processing  the image matrix was
portioned into   by   sub matrixes  each of    sub matrixes
was treated separately  the sum operation was first performed
on each diagonal line of a sub matrix  and then averaged to
obtain a single value as the representation of the entire zone 
total numbers of features were able to drop from     to    
while the training error increased by about    

  symmetry  similar to hole detection  a feature determining
whether the image is vertically and horizontally symmetric is
added to better distinguish resembled digits  however  with
this feature being added  the training error was increased by
around     
as a result  only processed raw data was extracted and used
as inputs for model training due to the fact that derived features
compromise the overall performance of classification 

v 

model training

based on features extracted from the example  nave bays
model was firstly used to obtain a quick and rough
understanding of the data and features  then neural network
was applied to generate a more accurate recognition 
a  nave bayes
the nature of the problem motivated us to apply naive
bayes algorithm first to get a rough idea of the problem  which
turns to be inacceptable with almost half of the time generating
a wrong estimation  however with some modifications  the
training error could be increased by around     
   model modification
a  introduces laplace smoothing  although character
recognition is different from spam email classification
problem  the case where the pixel of all examples for a given
position is zero still exists  therefore  laplace smoothing was
introduced to eliminate the problem of probabilities being
estimated to be zero  for all training examples labeled as d 
the probability of a particular binary pixel j being   is
computed and represented as     

   
b  adding punishment  punishment was added to correct
the case  where for a given position  the probability of the
pixel value being equal to one is high and the corresponding
pixel in the test example is found to be zero  so that the model
can better differentiate two resemble digits  this apprach is to
rescale the gray scale values from        to             instead 
b  nueral network    
in this section  we describe the construction of our neural
network model with the emphasis on the design of network and
feature extractors  for the input layer  the feature for each node
is the gray scale feature ranging from   to   representing how
black the pixel is  so according to the model we selected  we
have     input nodes  in the hidden layer  we tuned the number
of nodes and find     nodes with sigmoid function as feature
extractor works best for our model  which is shown in fig    
just like in the nave bayes model  where we projected our
feature space from        to             for punishment  the
feature space was projected from        to         for the
intuition that if a pixel that has always seen to be very close to
black or white in the training set is observed to be the opposite
color in the test set  we subtract a little when calculating the
score because they are less likely to be the same number 
   

fifig     artificial nueral network  ann  strucature

fig     training error vs  number of iterations

vi  results analysis
the diagonal based feature extraction of the processed raw
data is used to train the model  the processed raw data is
sufficient enough to capture most features of an image so that
no extra or derived features are needed 
classification error was simply calculated as the number of
misclassified digits divided by the total number of testing
examples  the optimized training error and generalization error
for both models has been summarized in the table given below 
table iii 

training error generalization error for both
models

naive bays
neural network

training error
           samples 
             samples 

generalization error
           samples 
          samples 

as can be seen  the naive bayes model generated a training
error of as low as       while a relatively high generalization
error of        the large difference between the training error
and generalization error is because that the naive bays model
failed to capture the characteristics of an image if the model
hasnt seen the image before  however  naive bays  as a quick
estimator for the determination of features extraction  led us to
the right direction and narrowed down the range of exploration 
the neural network model  in contrast  yielded much smaller
training and generalization errors of      and     
respectively  using processed raw data  the model was able to
classify the majority of handwritten digits except for the digits
that are fairly vague and even human reader cannot tell 

the figure shown above illustrates that as the number of
iterations increases the training error decreases exponentially 
when       iterations were run  the training error can be as
low as       and can be even lower if more iterations were run 
however  the balance between classification accuracy and
runtime needs to be considered during practice 

vii  future works
due to the limitation of time  only handwritten digit
recognition is implemented completely  english character
recognition is implemented partially without being optimized
yet  also  the current segmentation technique can only detect
characters that have clear boundaries  if two consecutive
characters were touching each other  they will be treated as one
single character  moreover  when testing the randomly
collected images  the ones that are written really large and thin
have poor performance during classification  after scanning
and resizing  the image lost lots of pixels during the shrinking
process  therefore to resolve some of the issues mentioned
previously the following tasks are recommended 


optimize image processing to retain the original
features of the image as much as possible no matter
the size  thickness  and angle of the character 



investigate better segmentation techniquesiv to allow
successful separation of characters touching each
other   might want to consider set a fixed width when
searching for individual letters 



introduce character recognition for different
languages  including english  mandarin  etc 

references
i

the mnist database of handwritten digits  http   yann lecun com exdb mnist 
iga zadnik  handwritten character recognition  training a simple nn for classification using matlab 
iii
j pradeep  e srinivasan  and s himavathi  diagonal based feature extraction for handwritten character recognition system using neural network
iv
o  matan  j  bromley  c  j  burges  j  s  denker  l  d  jackel  y  lecun  e  p  pednault  w  d  satterfield  c  e  stenard  t  j  thompson  reading
handwritten digits  a zip code recognition system
ii

   

fi