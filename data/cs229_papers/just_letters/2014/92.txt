skatbot  teaching a computer to play cards
ivan leung  pedro milani  ben han sung
abstract
this project taught a computer to play a popular german card game skat  gameplay data was collected using a
computer gameplay simulation and reduced to a set of appropriate feature vectors  we applied softmax regression and
support vector machines  svm  to predict the best card to play each turn  cross validation predicted human card outputs
with around      suit  and      rank  accuracy  for additional validation  we created an ai to play the game using
these algorithms  in a    game experiment  our skatbot outperformed the baseline random algorithm by      points on
average  but scored lower than the human team by      points  however  when the intrinsic variance of skat scores is
considered  the t test of difference of means  at          concludes that there is a significant difference between the
ability of skatbot and the random algorithm  but not between skatbot and the human team 
introduction
skat is a   player card game where two players team up against one  the cards are ordered by suit          and by rank       
   q  k      a  j   and each card rank has a point value  the standalone player chooses one suit as trump suit  which beats all cards of
other suits  each player starts with    cards and plays one card per round  in each round  players must play a card of the same suit as
the starting card unless they do not have any  the winner of a round wins the cards played and starts the next round  the team with the
most points after    rounds wins the game
one unique aspect of skat is that no communication is allowed between players  this means no one knows what cards the other
players have on their hands  however  knowing how the cards are probabilistically distributed is crucial to winning the game  there
are some complex card counting and non verbal communication strategies that we expect the computer to learn by analyzing human
playing patterns 
objective
we want to train the computer to predict the best card to play per turn  the prediction algorithm can be applied repeatedly to play
an entire game of skat  a simplifying assumption we make is that the computer always plays as a member of the two person team 
our card prediction strategy is a two step process     predict the suit of the best card to play  and    predict the rank  conditioned on
the chosen suit  from a dataset of    games between humans  we extracted     training examples for suit prediction and     for rank
prediction  each example represents one instance when the player had a choice and is labeled with the actual human decision 
features
suit examples have    features and rank examples have     intuitively chosen to provide essential information such as number of
cards on hand for each suit  the order of play  and whether cards on hand are winning  appendix    
models
choosing the suit  k      and the rank  k       are two multiclass classification problems  we used two algorithms 
  

softmax regression with l  regularization  we used gradient ascent to maximize 
 

 

   

  

 

   

 

        

                      log

     

   

multi class c svm  we used libsvms implementation with three different kernels
a 

linear 

b 

polynomial 

    

  
   

fic 

gaussian 

  

we did not consider using generative models  naive bayes is not appropriate because not every feature we have is binary  on the
other hand  since most features are binary  we did not think they would follow a strong multivariate gaussian distribution  so we ruled
out gaussian discriminant analysis 
results
we used    fold cross validation to determine the optimal model parameters  we used test accuracy and test illegal  the times
when the algorithm chose an illegal suit rank  to evaluate the results  with the goal of maximizing accuracy and minimizing illegal
predictions  fig    and   show sample results  left contour for accuracy  right contour for illegal  for svm and softmax regression
respectively  table   summarizes the training and testing results for the optimal model parameters of the respective algorithms 

fig     contour map for   accuracy  left  and   illegal  right  for svm
while this cross validation is commonly used to assess the performance
machine learning applications  we reckon that the mse might not be a good
metric in our case  during games of skat  there are times when more than
one card can be a good play  because our data set only marks the card that
was actually played as the correct output  the calculated error ignores the
possibility of multiple valid outputs  furthermore  there were some training
examples where the human player chose a poor card  if the computer chose a
better card  this would be considered a wrong choice by the above metric 

fig       accuracy  blue  and   illegal  green 
model

suit prediction

rank prediction

test
accuracy

training
accuracy

test
illegal

training
illegal

test
accuracy

training
accuracy

test
illegal

softmax

     

     

    

    

     

     

    

    

svm

linear

     

     

    

    

     

     

    

    

polynomial

     

     

    

    

     

     

    

    

gaussian

     

     

    

    

     

     

    

    

table    summary of test and train mse of suit and rank predictions using different algorithms 

training
illegal

fi  suboptimal moves

discussion
as another way to measure the performance of each prediction algorithm 
we played against a computer that used each of the four algorithms and counted
the number of moves we unanimously agreed were suboptimal  from    suit
decisions and    rank decisions observed in   games  we found that softmax
regression made the fewest obvious mistakes  table     so  we chose the softmax

suit

rank

softmax

    

    

svm linear

    

    

svm poly

    

    

svm gaussian

    

    

table      sub optimized moves of algorithms

algorithm for our last round of experimental testing 

this last round consisted of validating the skatbots performance in real gameplay  we compared the scores earned by a baseline
random algorithm  skatbot  softmax regression   and a human team against the same human player in    games each  the following
is the setup for our experimental validation 
null hypothesis  opponent   and opponent skatbot have the same mean skat score  h   o   s

   

alternate hypothesis  ha  o   s

   

to facilitate statistical power calculation  we also assumed a fixed effect model  in other words  we assumed that each algorithm
imposes a fixed effect  on the final skat score s 
so       o     where e so     o   and    n      

   

 

ss      s     where e ss    s  and    n      

   

o    s    

   

furthermore  we expressed the expected difference between two skat scores as the absolute difference between the opponents
effects  thus we define 
   e so    e ss      o   s 

   

table   summarizes the key findings of our experimental validation  in one set of test  we took the random algorithm to be
opponent    and in the second set of test  the human team played as opponent    the mean score of skatbot was      points higher
than that of the random  and the mean score of human players was      points higher than skatbot  when we compared skatbot and
random  we rejected h  at the         level  however  when we compared humans and skatbot  we failed to reject h  at the        
level  because of the high variance of the    games with human players 
metric

random

skatbot

human

mean score  points 

     

     

     

standard deviation

     

     

     

p value

     

 

     

statistical power        

     

 

     

table    summary of validation experiment testing for h   o    o 
we note that failing to reject h  is not sufficient to conclude that softmax and human players yield comparable performance in
skat  we also need to show that under our experimental conditions  we have a high probability of rejecting h  for some acceptable
margin   the statistical power given an effect difference of  is expressed as 

fi   

 

 
   

   
 
  
  
       
  

  
  
    
      

              

  

 

                

  
              



   

from experience playing skat  we would like skatbot to be comparable to human players within a   point margin  however  due
to the high intrinsic variance of skat scores  as seen from the high standard deviation of games played against the same opponent 
statistical power is only       at       at        we have approximately     power  which leads us to believe that the true score
difference between skatbot and human players is less than    points  though not ideal  a    point margin is still well within the score
variance for the same opponent  which ranges from       to       points  
conclusions and future work
we applied supervised learning to the problem of creating an ai to play a card game  our results were encouraging  since we
significantly outperform the baseline   but further work is needed to reach the theoretical bound  which is getting as many points as
the humans who trained the algorithm  
we used cross validation on shrinkage parameters to select the most relevant features for our learning algorithms  we did not
have time to do a detailed feature analysis  so this could be an area of improvement  indeed  during our experimental validation  we
observed instances where our prediction algorithm made questionable suit predictions  all rank predictions  though  seemed to be
acceptable  so the suit features probably need some work   we could also try using reinforcement learning in the future  instead of
supervised learning  the difficulty of this approach is representing all the possible game states and actions  however  it would be
interesting  from a theoretical standpoint  to find whether a computer learning by itself can outperform a computer being taught by
humans  a final possibility for future work would be to relax some simplifying gameplay assumptions  so our skatbot could play in
any situations 
appendix    features
suit features    i            

rank features    j             q  k      a  j  

       cards in suit i on hand

   am i playing first 

       cards in suit i remaining   not on hand

     points on the table

      have winning card in suit i 

   has opponent played 

       has opponent played a different suit on top of suit i 

   has teammate played 

       has teammate played a different suit on top of suit i 

   is my team winning 

    am i playing first 

   has opponent played a different suit on top of this suit 

      points on the table

   has teammate played a different suit on top of this suit 

    has opponent played 

   how many cards of suit are remaining in game and not on
hand 

    has teammate played 
    is my team winning 
       do i have a card with more than    points in suit i 

      do i have this card j
       is card j a winning card 
       if i have card j  does card j beat opponents card on the
table 

fiscripts
our datasets  matlab scripts  and code for the game are publicly available online here  https   github com bhnascar skatbot
references
ng  andrew  course notes for cs     fall       stanford ca 
owen  art   one categorical predictor at k levels   course notes for stats      fall       stanford  ca
mcleod  john  skat  august       http   www pagat com schafk skat html

fi