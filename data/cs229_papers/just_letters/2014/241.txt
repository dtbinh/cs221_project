predicting pace based on previous training runs
tiffany jin
tjin  stanford edu
cs     machine learning
december         

   introduction
the era of social fitness has drawn an increasing number of people to the world of distance running  in the united
states alone     million people completed a running race in       a     percent increase over those that did in
       furthermore  advances in gps technology means that more and more people can carry their smart phones or
a gps enabled watch in order to help track their run data  instead of merely gauging average pace  runners can
record their exact routes  as well as elevation changes and instantaneous pace  we can now definitively quantify
progress in terms of new record mileage or seconds shaved off a familiar run segment  additionally  online tracking
and analysis sites such as strava  have been able to document running history  large sets of running data are being
accumulated in both training and race situations  by studying the aggregated data from these websites  we can learn
more about the nature of run training as well as how to best prepare for a race 
this project demonstrates how various machine learning algorithms can be applied to aggregate run data to predict a
runners pace for a specific route or segment  using information about several different features from training runs  i
will use several regression models to make predictions on pace during any given run  after i determine an effective
model to predict the pace of any given training run  i will extrapolate this predicted pace to determine race pace by
including a race factor  which is a multiplier that accounts for faster pace on race day due to adrenaline 

   methods
features 
for the purposes of creating a model to predict pace  i used three features  elevation gain  run mileage  and most
recent   k      miles  race time  elevation gain and run mileage are raw data from veloviewer   while most recent
  k time was obtained from the site athlinks   these three features are appropriate to the task of figuring out how
fast a given person will run a given distance with a given elevation profile 
data 
strava is a mobile and online social fitness app that can be used to track routes  pace  elevation charts  and other
relevant data during a run  a sample strava activity is shown in figure    with an example of some of the data that
the site can record  the data on this site is stored in the form of  gpx   tcx  and  fit files  read only access is provided
to friends data in the basic form seen in figure   

figure    example of strava activity  relevant data includes distance  moving time  pace  and elevation change 

veloviewer is a website that compiles data from strava and allows users to further analyze results beyond stravas
capabilities  veloviewer uses the strava api in order to do this  due to privacy settings in the strava api  a user can

 

fionly analyze and export his or her own data  a partial sample of one users data is provided in figure    from this
summary data  i was able to attain elevation gain and mileage for each training sample 

figure    example of veloviewer data  note that the same relevant data is available  but is now in a summary form 

athlinks is another social fitness website geared at competitive endurance athletes  its primary purpose is to record
race results  unlike strava and veloviewer  privacy settings are less restrictive and one can access anyones race
history given just their names  using athlinks  i was able to look up each runners most recent   k race time and
add that to my feature set 
using matlab  i imported a total of     training examples from four different athletes  the data was randomly
divided into five parts for use in   fold cross validation during the training of four different regression models 

   regression models
four regression models were used to predict a run pace   is a vector of regression coefficients  used to make a
prediction on y given some parameters x  the feature set of elevation gain  mileage  and most recent   k race  
general regression equation  for all models  
                   
    basic linear regression 
basic linear regression is the simplest form of linear regression  and uses training examples x as well as
labels y in order to attain regression coefficients  
      
    locally weighted linear regression 
locally weighted linear regression more heavily weights training data that has similar features to the test
datas features when making a prediction       indicates the weight of a particular training example  and
 indicates the bandwidth parameter 
          
 
   
   
   exp 
   
        

 

fi    ridge regression 
ridge regression and lasso regression are regularization techniques  when features are not independent  
may be highly sensitive to small errors in y  ridge regression incorporates small positive values of k
to improve the conditioning of the problem and reduce the variance of the estimates 
             
        
    lasso regression 
lasso regression  on the other hand  uses an l  instead of l  constraint  unlike the previous models  there is
no easy solution for   as it is nonlinear 
 
 
minimize           
                   
         

   results
each of the models was run using   fold cross validation  with training mse  mean square error  the average of the
mse of those   training sets and test mse the average of the mse of those   test sets  after performing such cross
validation on four linear regression type models  i found that all of the models resulted in very similar generalization
errors  basic linear regression  as well as weighted  ridge regression  and lasso regression  showed little
improvements to the resulting test mse  mean square of errors   despite optimizing of parameters   k  and  
sample sizes and corresponding mse to each model is shown in table    and a bar graph comparing training and
test mse from each model is shown in figure   
model
basic linear
regression
locally weighted
regression
ridge regression
lasso regression

training
samples
   

test
samples
  

training mse  error in minutes 

test mse  error in minutes 

      

      

   

  

      

      

   
   

  
  

      
      

      
      

table    summary of results  four fifths of the total samples were training samples and one fifth were test samples for each
iteration during   fold cross validation  note that results are given in terms of mean square error rather than percent error 

   
   
   

training mse
test mse

      

             

      

      

      
      

      

   
   
   
   
 
linear regression weighted linear regression ridge regression

lasso regression

figure    bar graph showing mse  mean square errors  of training and test sets for each model 

 

fi   discussion
model limitations 
in comparison with simple linear regression  i expected weighted linear regression  ridge regression  and lasso
regression to make reductions to the resulting test error  however  this was not the case as none of the models test
errors differed significantly even after optimization using model parameters  more specifically  insignificant
improvements with locally weighted linear regression could be due to high variances in the data  increasing the
amount of training data available could perhaps reduce this variance and improve the usefulness of this regression
model  but would also cause an increase in computational time  another method of reducing the variance would be
to include many more features  then do feature selection to identify the most relevant features 
limited improvements with ridge regression can be explained because the three features used are not highly
correlated  ridge regression will improve a model when some features being used are not independent  elevation
gain and length of a run are somewhat correlated  as the longer a run the more opportunity for elevation gain 
however  these features appear to be independent enough such that this form of regularization is not necessary and
cannot limit the error any further 
limited improvements with lasso regression can be explained because the regression model is highly dependent on
only one of these features  most recent   k   lasso regression has a tendency to reduce less impactful features to
zero  providing a built in form of feature selection  while the hilliness of a run  elevation gain  and the length of a
run both have some impact on the pace with which that route is completed  the largest contributor to this pace is a
runners most recent   k time  as elevation gain and mileage were both already relatively insignificant features 
using lasso regression did not much improve the model 
finally  for all three models analysis could be limited by the linearity of these regression models  it is also possible
that this problem is non linear  and that using a non linear regression model might be able to reduce the error
further  it would be beneficial to try several other types of regression to get a better idea about model limitations  but
i think it is more likely that the high variance seen in the training data was due to the limitations of the feature set 
feature set limitations 
there were only three features used in training and evaluating this model  as stated previously  it is very likely that
inclusion of several other features would be essential to creating a robust model and accurate predictor  the most
important additional feature to be included would be heart rate  from the training data acquired  there was very high
error due to large variations in effort during each run  this makes sense  since some days we are motivated  while on
other days we are not  many training plans often incorporate slower  lower effort runs to prevent burnout  but the
current model does not take training plans into consideration  the simplest way to quantify effort would be to record
average heart rate for each run  normalizing for each athletes typical resting heart rate and maximum heart rate 
currently  the best measure of heart rate is a heart rate monitor  which is most commonly a chest strap paired with a
gps watch  as this method is cumbersome and often uncomfortable  heart rate data is only a small percentage of all
training runs  as technology continues to advance and built in optical heart rate sensors become more accurate  i am
confident that heart rate data will become ubiquitous 
another feature that would be useful to incorporate is a classification of type of training run  an interval run  during
which a runner sprints short segments and slowly jogs others  might have the same average pace as a steady
recovery run  while the statistics might appear otherwise similar  the resulting fatigue will be different and may
effect runs in the following few days  by including this classification  the model can include another feature to help
quantify effort and better predict pace  this can be done through stravas drop down menu in an individual activity 
or perhaps through an algorithm that can read an activity file and classify its data 
lastly  another aspect of run training to account for is training frequency  average miles run per week during the
last month could be a useful feature to have  this makes sense  as athletes who work out more often are likely to
improve and perform at close to his or her peak  in contrast  one who has not run or exercised in a while may be
performing at only a fraction of his or her potential  as well as a fraction of his or her last   k race pace  likewise 
the current model includes most recent   k time  but does not account for how recent such a   k occurred 
modifying this feature to be most recent   k pace during the last month or alternatively adding a feature such as

 

fitime since most recent   k time would allow us to account for this  since the raw data from veloviewer already
includes a timestamp  including these features would require only some data processing within matlab 
other considerations 
so far  these results were acquired from four different athletes  for a total of     training examples  just as several
more features may help to improve the model  having a much larger dataset could reduce variance and improve the
robustness of the prediction  similarly  in order to have more meaningful results  the training examples need to have
greater variety and range across all features  for example  training examples for different athletes should include
runs ranging from pancake flat routes to steep hill climbs  in addition  the data collected should include athletes with
increased variety in recent   k paces  including the edge cases of both elite runners and beginner athletes would be
helpful for model selection  in addition to revealing differences in the way different classes of runners approach and
respond to training and performance situations 

   future work
the next steps in refining this problem would be to define the model more clearly  as discussed  i would try several
other methods of regression to try to better fit the data and see if that would reduce the error  additionally  i would
like to add more features  since i think this would reduce a lot of the variation observed in the training examples  i
would like to add more training runs from a variety of different situations and athletes  from elite runners to those
who do not have any significant running experience  after the model has been appropriately refined  i would like to
collect race data and correlate race data with training data  this might be determined through a race factor that
would help predict run pace during a race by calculating how much faster a particular athlete will run during a race
compared to typical training 

   references
         state of the sport  part iii  race trends  running usa    th july        available 
http   www runningusa org      state of sport returnto annual reports  accessed    th december       
    strava  online   available  http   www strava com  accessed   th december       
    lowe  ben  veloviewer online   available  http   www veloviewer com  accessed   th december       
    athlinks online   available  http   www athlinks com  accessed   th december       

 

fi