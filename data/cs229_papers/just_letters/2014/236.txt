 

spectrum adaptation in multicarrier
interference channels
haleema mehmood
department of electrical engineering
stanford university

i  i ntroduction
digital subscriber lines  dsl  are an example of
multiuser interference channels  unless vectored   in a
multiuser interference channel  ic   multiple users share
a communication medium with no coordination on either
the transmitting or receiving ends  although dsl lines
do not share the actual copper wire between users  the
interference between adjacent lines in a single binder or
cable effectively makes it an ic  furthermore  dsl systems use discrete multitone modulation  dmt  which
means that each user divides its bandwidth into multiple
parallel  independent subcarriers or tones  this makes
the system a muticarrier  multiuser interference channel
    
although dsl systems are increasingly moving towards central control and coordination of spectrum and
bit allocation  traditionally  this has not been the case  a
central system may dictate total data rate and sometimes
power allocation at start up  but each user or modem
may be allowed to independently alter its bit and power
distribution in response to changes in channel or noise
characteristics during showtime  after system is on and
running   the purpose is to ensure that modems can
maintain good operating margins in events of variation in
channel and noise conditions  however  in the absence of
central control and coordination  distributed adaptation
can potentially cause system instability or long transient
periods due to interference coupling between dsl lines 
changes in dsl channel characterisitcs and noise
and internal or external interference occur infrequently
and stay the same over long durations of time  this
gives dsl lines sufficient time to adapt and adjust their
operating states according to the new conditions  the
problem with adaptation however is  if one user changes
its power allocation  it changes the interference it causes
to other users  this in turn causes other users to change
their own spectra as a response  causing a chain of
spectrum adaptations done by each user individually  but
affecting all users in the system because of the crosstalk

couplings between the users spectra 
this project aims to study if controlling the rate
at which users adapt their spectra affects convergence
behavior  the system is observed at discrete time steps 
the rate of adaptation is defined as the number of
subcarriers a modem is allowed to update during one
time interval  the intuitive idea is that large  sudden
changes in spectra by users may cause system instability 
smaller  slower changes may results in long transient
periods  yet a more stable system  given a particular
system is there an optimal policy or some good policies
that make the system go back to a stable state quickly 
this project uses reinforcement learning on a multiuser 
multicarrier  interference channel to
 study feasibility of allowing uncoordinated  independent adaptation of spectra by users 
 assess the effect of rate of bit and spectrum adaptation by individual users on system stability 
 find a control policy that ensures fast convergance
to a desired stable state 
ii  s ystem background
in discrete multitone modulation  dmt   each channel is divided into multiple subcarriers  transmission
over each subarrier depends upon the signal to noise
ratio  snr  over that subcarrier  the number of bits
that can be transmitted over a subcarrier k by user u is
given by
bk u   log     pk u  hk u u       

u
x

 
 hk u m    pk m  k u
    

m  m  u

here pk u is the transmit psd of user u on subcarrier k 
 
k u
is the variance of the gaussian background noise
and hk u m is the channel gain on subcarrier k from
users m to user u  the total number of users in the
system is u and the number of subcarriers for each user
is k   is the snr gap defined for a target bit error
ratio  and  is the target snr margin 
pk the total data
rate for each user u is then ru   k   bk u   and the

firate
pk is achieved subject to a per user power constraint
k   pk u  pt  
as the equation shows  the bits and powers over all
subcarriers are coupled because of the cross channel
couplings  a discrete bit loading procedure  the levin
campello  lc  algorithm can be run iteratively to assign
initial bits and powers to all users on all subcarriers 
once the system is initialized  an incremental update
procedure using bit swaps and gain adjustments  is
employed for further adpatation  the lc algorithm
calcualtes the entire spectrum and bit distribution  on
the other hand  adaptive bit swap and gain adjustment
procedures only vary the bit or power allocation on a
few tones at a time 
the iterative levin campello  ilc  algorithm has a
target snr margin  that each user should attain  the
margin is the extra power on each subcarrier beyond that
needed to support the bit allocation  provided as a safeguard against changes in channel and noise conditions 
usually a  db margin target is used in most dsl
systems  while absolute convegence means that when
the iterative algorithm concludes  each user should have
 db margin on each of its tones  such convergence seems
unattainable for discrete bit algorithms for most cases
     therefore the definition of convergence needs to
be relaxed  the criterion employed for this project is
that each user should have a final margin within some
tolerance of  db at the end of the procedure  afterall 
the margin is precisely meant to protect against changes
in the channel and so is the adaptive update procedure 
that is why we can allow the adaptive update procedure
to use up some of the margin  for a real system  this is
a very practical and safe assumption 

those tones to fix the subcarrier margins  at each time
step  therefore  each of the users measures the noise and
interfernce on its line  measures its subcarrier margins
and updates its bit and power allocations on certain
subcarriers  this is done in parallel by all users 
the problem above is formulated as a markov decision
process  mdp   value iteration is used to find the
optimal strategy after forming the model  the strategy is
tested by simulation and compared against other random
and strategic policies  the parameters of interest are 
states  s  the state for each user is defined as the
number of subcarriers with unacceptable margins  notice
that absolute margin values have not been used  only a
count of the number of tones with unacceptable margins
is used  this was done to simplify the analysis  the peruser state is further quantized to    values  table   shows
what the quantized states represent 
actions  a  the actions allowed to each user are
defined by the maximum number of subcarriers that are
allowed to be updated in one turn     actions are allowed
to each user  table   shows what the actions represent 
for this project  a   user system is analyzed  for such
a system  there are a total of     states and actions  the
states and actions follow similar partitioning of the space
of subcarriers for each user as shown in table iii
state transition probabilites  psa   the state transition probablities are learned by running a   user simulation  by running the simulation many times  the
   x   x     s s a  matrix of transition probabilities
is calculated 
note that the dsl system itself is deterministic  it is
the way the states and actions are defined  as number of
subcarriers and not the actual bit power margin values
on those subcarriers  that makes the state transitions
probabilistic  depending upon actions 

iii  mdp f ormulation
from the previous section  it is clear that given a
dsl system  the variables of interest are  pk u   bk u and
k u   given the power and bit distributions  the channel
coeffiecients and external noise can be used to calculate
the per subcarrier margins  the system is observed in
discrete time steps  it is assumed that each user has a
target data rate and a total power constraint that has to
be met at all times  the system is therefore always in
a state where the bits add up to the target rate and the
powers add up to satisfy the power constraint  the only
thing that is not satisfactory are the subcarrier margins 
let  be a threshold  in db   if     k u     k  u  then
the system has attained a stable state and no user needs
to update anything anymore  if the subcarrier margins are
not within this limit for certain users on certain tones 
then those users need to update their powers   or bits on

reward  r  the reward is a function of the state
only  with   reward for the desired state which has all
subcarriers satisfying the margin constraint  once this
state is reached  the system has converged  for all other
states  the reward is    i e  it is kept the same for all
unacceptable states  although different rewards can be
given to different states based on how many subcarriers
have unacceprable marings  but the focus of this project
is on ensuring fast convergence  that is why  all bad
states are given the same reward of    also  it was
not clear how giving different rewards was affecting
the learning process  and this particular reward function
was easier to work with than some of the other reward
functions that were tried 
 

fis a
numsub
s a
numsub

 
   
 
  

 
 
 
   

 
 
 
   

 
  
 
   

 
  
 
    

table i
p er   user s tates  actions and corresponding number of
bad   to   fix subcarriers

iv  s imulation
the model for the mdp is learned by system simulation  the simulation uses a channel model for two
mutually interfering copper cables of length      and
     feet  the    worst case interference model is used
and vdsl standard guidelines are used for operating
parameters  upstream transmission is simulated  with
     subcarriers for both users  the starting states are
generated by running ilc algorithm for varying number
of iterations  some other starting points are generated
changing subcarrier powers by   db and then allowing
users to adapt independently after that  the actions are
chosen randomly  independently for each user  some
simulation runs are done by fixing the action and always executing the same action no matter what state is
reached  the procedure exits when the acceptable state
is reached 
the adaptation algorithm takes as input  acceptable
margin tolerance  maximum number of subcarriers allowed to be updated  the noise and channel couplings 
the current bit and power allocation for the user  it
returns the updated bit and power allocation for the user 
fixing upto the maximum number of tones as needed
without violating spectral mask  maximum bit constraint
and total power constraints  the algorithm only swaps
bits  it does not add or delete bits  thus maintaining the
data rate  the algorithm however updates the power and
allowed powers are not discretized 
both users do the action  i e  run the adaptation
algorithm  independently  both users also have their
states indepently  however the model takes into account
a state pair and an action pair and combines it into one
overall system state and action  users act independently
without knowledge of or coordination with the other
user  but the end system state is dependent on both users
actions 

fig     best actions for state  state  for users   and  

fig     average performance for learned vs  random policies

action for user   for each possible state of the system
and the right side table shows the best learned action
for user    the results show that the best policy found
with the given amount of learning does not discourage
high rate of adaptation other than for the extreme case
of action       
figure   shows the result of running the system with
the learned policy from   different starting points and
counting the iterations  the red bar shows the average
number of iterations needed to converege using the
learned policy  this performance is compared against
the performance of randomly chosen policies  the figure
shows that the learned policy gives performance in the
top  rd percentile when compared with randomly chosen
policies  this means  that although the learned policy is
not the optimum policy  yet the algorithm has definitely
learned something of value  given more learning  the
policy should get better 
the last figure shows a histogram of average iterations
to convergence for the same   starting points  this time

v  r esults
figure   gives the policy learnt by value iteration run
on the model  the state for user   is mentioned in the
row header and the state for user   is mentioned in the
column header  the left side table gives the best learned
 

fidifferent update procedures for each type  can ensure
faster convergence and better operating points by prioritizing different subcarriers for different types of users 
vii  c onclusion
the project uses an example of a   user dsl interference channel to show that de centralized adaptation of bit
and spectrum allocation can converge to a stable  acceptable state  it shows that an adaptation policy based on
rate of adaptation does affect the speed of convergence
and good policies can be learned using reinforcement
learning  using a more realistic state representation  a
bigger and more flexible actions space  and a more
thorough learning procedure  much better performance
can be obtained  even the much simplified state and
actions space used gives a policy with promising results 
the approach needs to be extended for more complex
systems with realistic number of users  the project uses
centralized learning for proof of concept  in addition 
more advanced update algorithms can be used to speed
up the process of convegence by making users be polite
to each other 

fig     results showing possible improvement

however  no policy is fixed and random actions are done
in each iteration  each user independently picking its
own policy randomly in each state  the low end of the
histogram shows that a lot of iterations with randomly
chosen actions perform better than any of the random
policies or the learned policy  this means that assigning
particular actions and states as done for this project was
too restrictive  given more flexibility  or more degrees of
freedom in this case  given the same state and choosing
different actions  random means different each time
with a high probability   gives better performance than
strict state action pairing of the previous figure  the
conlusion is that the state action representation used was
not granular enough  nonetheless the results of figure  
still show that it is possible for dsl systems to learn
good policies for fast convergence 

r eferences
    j  m  cioffi  ee   c course reader  stanford university       
 online   available  http   www stanford edu class ee   c
    very high speed digital subscriber line transceivers  vdsl    itut recommendation g        dec       
    w  yu  w  rhee  s  boyd  and j  cioffi  iterative water filling for
gaussian vector multiple access channels  ieee trans  inform 
theory  vol      no     pp          jan       
    r  ferrari  r  lopes and j  m  t  romano  on the convergence of
iterative discrete bitloading for autonomous spectrum management
in dsl systems  simposi brasileiro de telecomunicaces   sbrt
     

vi  d iscussion
the project evolved from the following questions 
does allowing dsl modems to adapt their subcarrier bit
and psd allocations during showtime  to ensure good
operating conditions  cause system instability instead 
should the rate of adaptation be controlled to avoild
instability  the results of this project show that the
learned policy does not necessarily try to limit the rate of
adaptation  other than for the extreme case of both users
adapting all of their tones  the policy obtained using
value iteration also shows that modems can be allowed
to update their spectra and good control policies can be
found  this is a good result  however  the results found
so far do not make the system converge fast enough 
a different control technique can be applied to ensure
fast convergence  while the current algorithm for bit and
spectrum update is the same for all users  an algorithm
that marks users as preferred or not preferred and uses
 

fi