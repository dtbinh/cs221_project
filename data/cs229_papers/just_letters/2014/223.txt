algorithmic trading of futures via
machine learning
david montague  davmont stanford edu

lgorithmic trading of securities has become
a staple of modern approaches to financial
investment  in this project  i attempt to
obtain an effective strategy for trading a collection of    financial futures based solely on their
past trading data  all of the strategies that i consider are based on predictions of the future price
and volatility of the various securities under consideration  and so the majority of the effort in
this project has been directed toward using machine learning techniques to obtain predictions
for future price and volatility  this project was
inspired by the quantiacs futures competition 
to which i submitted a number of the trading
strategies i obtained during my work on this
project 

a

introduction
the contest

investments           for third place           for
second  and            for first  

the trading model
the trading model employed by quantiacs is somewhat
simplified relative to a real world trading scenario  in
particular  the daily closing price is what is used to
determine the buying selling price when orders are
placed on a given day  and orders may only be placed
once per day  however  the model does include small
fees meant to simulate the effects of slippage and trading commissions  and so may offer a relatively realistic
trading simulation for relatively long term investment
strategies  where trades are being performed on a daily
basis  as opposed to high frequency approaches with
many trades being performed each second  

the data
the backtesting data for the contest consisted of approximately      days of trading price and volume
data  from jan          to the present day  provided
by quantiacs for    different futures contracts  including various currencies  precious metals  agricultural
products  etc    more specifically  the data contained
the daily high  low  opening  and closing prices  and
daily trading volumes over this time period  in addition  the rules of the competition specified that on any
given day  the only legal input into the trading strategy was the previous     trading days worth of this
data for each of the    securities under consideration 

the goal of this project was to obtain a highperforming trading strategy for the quantiacs futures
contest      quantiacs is a quantitative trading platform that invests in crowdsourced trading systems 
and connects users trading systems with institutional
investors   sharing  a performance fee with the developer  the quantiacs futures contest was a competition
to obtain a trading strategy which invests in a collection of futures securities and attempts to maximize
the sharpe ratio  a measure of risk adjusted return 
over both a training period  jan          nov     
      and a live trading period  dec          jan 
           trading systems are ranked using the min  the objective
imum of the performance over these two intervals 
and the top three performing strategies  determined as mentioned above  the goal in the quantiacs futures
january           will receive guaranteed minimum competition is to obtain a trading strategy with opti 

page   of  

fimal performance as measured by the strategys sharpe
ratio  the sharpe ratio is determined by the ratio of
average return to average volatility  more specifically 
the sharpe ratio is computed as follows  let  ej  nj   be
the set of equity values of our portfolio over a period
of n trading days  starting with value e     define a
vector of daily  percent  returns  dj  nj   by
dj  

ej  ej 
 
ej 

return and volatility need only depend on that particular securitys past performance  in reality  it is
certainly not the case that the returns of the various
securities behave independently  but i still believe this
is a reasonable simplifying assumption for a prediction
model 
based on the above  i decided to attempt to predict
the future return and volatility of each of the futures
independently based on its past performance 

and compute the average daily and yearly return  using training examples
the fact that there are     trading days in a calendar on each trading day  the trading strategy is allowed
year  by
to use as input the past     days worth of trading
data for each future  in order to reduce the redun
  n
   n
n
y
dancy of my set of training examples  i downsample
e
n
rdaily   
    dj 
  
   
the trading days  generating a new training example
e 
j  
only once every five trading days for each security 
because of my assumption that each of the futures
ryearly        rdaily         
behaves independently  i obtained one training example for each security and each downsampled trading
next  compute the volatility by the formula
day for which data was available sufficiently far into
the future  so that future return and volatility could
voladaily   stdev  d         dn    
be computed   the raw training feature vector is
and estimate yearly volatility from this by assuming the       dimensional vector of the past     days of
that daily volatility is independent  obtaining
daily high  low  closing  and opening prices and trading volumes  but significant dimensionality reduction

volayearly      voladaily  
was performed in order to make the problem more
tractable 
finally  define the sharpe ratio by
sharpe e   

ryearly
 
volayearly

the various entries in the quantiacs futures competition are ranked in ascending order according to the
minimum of their sharpe ratio over the evaluation
period  jan          to nov            and their
sharpe ratio over the live trading period  dec         
to jan             thus  it is important to obtain a
strategy which both performs well on the backtesting
data from the past  and which also generalizes well to
live trading data 

supervised learning problems
one of the guiding principles behind my approach to
the contest was that accurate oredictions of the return
and volatility for each of the individual futures were
sufficient inputs to obtain an effective trading algorithm  where effectiveness is measured by the sharpe
ratio obtained   i also made the implicit assumption
that the various securities could be analyzed independently  so that predictions for a given securitys future

learning objectives
while i have defined the sharpe ratio for the portfolio
as a whole  the definition can also be readily applied
to individual securities  and provides some guidance
on how to choose return and volatility prediction objectives  in particular  inspired by the definition of the
sharpe ratio  i chose to use the following two supervised learning objectives for the return and volatility
prediction respectively 
 for return prediction  i consider a one parameter
family of objective functions  as shown above 
the quantity rdaily can be computed directly from
the quantity en  e    the performance of a given
future over n trading days  here e represents the
price of the specific futures contract   therefore 
i use rn    en  e    the percent increase in price
n days in the future  as the prediction objective 
here n is a freely chosen parameter  and after
some experimentation i settled on the choice n  
    although given more time a more principled
approach to the selection of this parameter may
be merited 

page   of  

fi for volatility  i take an approach similar to return  using the quantity used to measure volatility when computing the sharpe ratio as the
volatility prediction  more specifically  i use
vn    voladaily    stdev  d         dn    as the oneparameter family of objective functions  where dj
is defined the same as it was for the sharpe ratio  
also  i again made the  unprincipled  parameter
choice of n      

formulation of the problems
let xik represent the feature vector on day i for futures contract k   and let rn  i  k  be the value of rn
 the percent change in price n days in the future  for
security k starting on day i  and define vn  i  k  similarly  to obtain return and volatility predictions  i
applied a variety of machine learning algorithms to
obtain prediction functions r and v  which attempt
to minimize the mean squared error  i e   minimize the
quantities
xx
 r  xik    rn  i  k      and
i

k

xx
i

 v   xik    vn  i  k   

k

respectively 

features
as noted above  the raw feature vector is      dimensional  which is far too large for effective use of
most machine learning algorithms  especially considering that i only have approximately        training
examples   as a result  it is necessary to use a modified  lower dimensional feature vector  i consider two
distinct approaches to feature selection 
   i applied pca to a normalization of a    dimensional time downsampled subvector of the
original feature vector  obtained by taking the
values of each of the five types of variable every  
days for the past      and dividing it by the current days value  i decided on the specific number
of principal components to use by cross validation
 i go into more detail in the results section  

and    trading days to the exponential moving
average over     trading days  the on balance
volume indicator over        and    days  the percentage price oscillator  ppo   the percentage
volume oscillator  pvo   the rate of change
 roc  over        and     days  the ratio of the
simple moving average  sma  over     days to
the sma over     days  the relative strength index  rsi  over    days  and william  r over    
    and     days  definitions of these indicators
may be found in     

results
for both volatility and return prediction  i considered four regression algorithms  linear and regularized
 ridge  linear regression  implemented myself   neural networks  using the matlab neural network
toolbox   random forests  using the matlab treebagger function   and gradient boosted decision trees
 using the r package gbm  
as i show below  the volatility prediction problem
was significantly more tractable than the problem of
return prediction  so i began by performing feature
selection on the volatility prediction problem  and used
the results of that for the return prediction problem 
for both problems  i used a training set consisting
of      examples      of the data   and a test set
consisting of      examples      of the data   the
training vs  test division was chronological  so that the
training examples consisted of the initial     of the
data  and the test examples consisted of the final    
 it is important to segregate the data by time period
since the performance of the various futures is not
independent over the same time period   in addition 
wherever i refer to cross validation  i performed   fold cross validation on the initial     of the data  the
training data set   where each of the cross validation
folds was chosen to be a contiguous time block 

volatility prediction
before comparing the performance of the various machine learning algorithms  i performed feature selection
using linear regression  the results are contained in
the following table 

   i also generated a vector of    standard technical
features training r  cv r  test r 
indicators used by professional financial analysts
pca     
     
     
     
 normalizing them appropriately for comparison
ti     
     
     
     
between securities   the technical indicators i
ti    
     
     
     
used consisted of the average true range  atr 
computed over    and    trading days  the ratio
here pca stands for principal components analyof the exponential moving average over         sis  and ti for technical indicators  the number in

page   of  

fiparentheses is the dimension of the feature vector 
after performing principal components analysis on
the     dimensional subsampled and normalized feature vector  i obtained through cross validation an optimal number of principal components of     but even
after choosing this optimal number of principal components  linear regression using the    dimensional feature vector of all technical indicators performed much
better  and greedy backward elimination allowed me
to obtain a subset of seven of the technical indicators
which also gave some small improvements 
i interpreted the results of this feature selection
procedure as signifying that the    dimensional feature vector of technical indicators had much greater
explanatory power of the futures behavior  and so
decided to use these features when comparing the various machine learning algorithms performance when
predicting both volatility and return 
the following table contains the performance results for the various algorithms for volatility prediction  using only the seven features remaining after
backwards elimination during the variable selection
process 
algorithm
lr
nn
rf
gbm

training r 
     
     
     
     

cv r 
     
     
     
     

test r 
     
     
     
     

here lr refers to linear regression  nn to neural
networks  rf to random forests  and gbm to the
gradient boosted decision trees 
note that although i only report the r  values  rather
than the mse  the two are related in such a way
that a higher r  corresponds precisely to a smaller
mse  so that considering the r  value is sufficient to
analyze algorithm performance  considering both the
performance on the cross validation and the test data
set  the random forest model seemed to offer the
best performance  though this performance was only
marginally better than the linear regression model 

return prediction

figure    performance of grid search optimized strategy 

here the algorithm acronyms represent the same
things  except that rr here represents ridge regression  which offered some small improvements here over
ordinary least squares linear regression 
unsurprisingly  return prediction is much more challenging than volatility prediction  note that we have
reported values of r  rather than r  in the table above 
however  as i attempt to demonstrate later in the
section on theoretical algorithm performance  even
predictions with a relatively low value of r can generate surprisingly effective trading algorithms as long as
there is some correlation 
unfortunately  only gradient boosted decision trees
performed comparably to ridge regression in crossvalidation  and none of the algorithms performed close
to as well as ridge regression on the test set  with random forests and neural networks in fact performing
worse than using the mean for prediction  as a result 
i used the ridge regression predictions in my trading
algorithms  but i still believe there is significant potential for improvements in these predictions  and i think
such improvements are one of the primary ways that
i could improve my trading algorithm performance 

trading algorithms
description of algorithms

the following table contains the results of using the to make use of the volatility and return predictions  i
various algorithms to predict return performance using created a   parameter trading algorithm which weights
the predicted returns by a power of the predicted
the    technical indicators as the feature vector 
volatility  and uses this as the desired portfolio distribution  the chart below plots the performance of
algorithm training r cv r test r
this strategy for one specific choice of these three parr
     
           
rameters  chosen by grid search to obtain the optimal
nn
     
            
sharpe ratio 
rf
     
            
figure   shows the performance of this optimal
gbm
     
           

page   of  

fistrategy  which obtained a yearly return of      
this is a somewhat disappointing conclusion  but
and a yearly volatility of        for a sharpe ratio of there are several ways that i think the work could be
      to demonstrate the effectiveness of this approach improved with additional work that could lead to the
to strategy selection  i performed a similar selection generation of more effective strategies 
procedure on only the first half of the data  and was
 more effort could be put into the choice of preable to obtain a strategy obtaining a sharpe ratio of
diction objective  in particular  i have only in     on the first half of the data  and this strategy
vestigated predictions for n      days in advance 
obtained a sharpe ratio of      over the second half 
other choices may lead to more reliable predicthis shows that we should not expect the strategy
tions 
from figure   to perform equally well in the future 
but that it should still work to some extent 
 in both of the supervised learning problems  i
have only considered models which predict future
return and volatility for each security indepentheoretical algorithm performance
dently  however  the various securities seem to
i now consider the performance of an extremely basic
exhibit dependency over a fixed period of time 
trading strategy using as input only corrupted versions
i think a model which incorporates such depenof the predicted returns  with noise added to obtain
dence might be able to generate more effective
a specified correlation coefficient r  specifically  the
predictions  and is worth investigating 
strategy just takes the predicted returns and uses an
 recall that the feature vector of technical indiappropriate scaling as the desired equity distribution
cators already led to much improved predictions
 noting that negative numbers correspond to selling
of volatility over the pca approach to the raw
short   for each choice of r  thirty separate instances
data  similarly  i suspect that another set of feaof the random predictions were generated  and the
tures could also lead to improved predictions of
mean and standard deviations of the sharpe ratio of
return  and i believe that further investigation
the resulting strategies are included in the table 
into feature generation and selection could lead
r
 
            
   
   
to improved return predictions  and therefore immean                               
proved sharpe ratios  
sd
                             
 for the sake of just obtaining a high performing
strategy  which may not be a legal submission
this table demonstrates that even a small value of
to the quantiacs competition   i believe that it
r  is enough to obtain a good trading strategy  with
would be very beneficial to include outside data
r         r       being good enough for this very
that does not consist solely of past trading perforbasic strategy to be very effective  as a result  it
mance  for example  sentiment analysis of news
seems that an appropriately chosen strategy  which
articles related to the securities in question   in
also takes volatility into account  could reasonably
addition  using data from more than just the   
reliably achieve a sharpe ratio of   or greater with
futures under consideration in this competition
return predictions only slightly more accurate than
to train the model could also lead to performance
those i obtained from ridge regression  which achieved
improvements 
r       in cross validation and on the test data  

discussion and future work
according to      a sharpe ratio of   or better is considered good    or better is very good  and   or better
is considered excellent  as a result  the strategies
i obtained through my work on this project leave a
bit to be desired since they have achieved a sharpe
ratio of at best about     on the backtesting data  and
appear to perform less well on future data  though
still obtaining some positive returns   while it seems
that these strategies will still generate positive returns
on future data  i would not expect them to obtain a
sharpe ratio greater than   with very high probability 

references
    quantiacs  futures contest rules https   
quantiacs com contest futurescontestrules 
aspx
    technical
indicators
and
overlays
http   stockcharts com school doku php 
id chart school technical indicators
    understanding the sharpe ratio http 
  www investopedia com articles    sharpe 
ratio asp

page   of  

fi