predicting an aptamers target binding affinity using its
nucleotide sequence
andrew naber
naber stanford edu
june        

 

introduction

aptamers and their selection
modern molecular and cellular biology depends on markers that can very selectively bind to a target
molecule  unfortunately  the process of finding such a marker is generally slow  through trial and
error  and often in vivo  aptamers  short nucleotide sequences  are a promising type of marker
that can be generated and evaluated synthetically  currently  the process of aptamer selection
involves the generation of several thousand different nucleotide sequences and the measurement of
their target affinity using fluorescence  those aptamers with high affinity will fluoresce brightly 
through successively stronger washes  those aptamers that do not bind the target tightly are
removed and the batch is refined down to those aptamers that very tightly bind the target  new
technologies such as microfluidic chips and dna arrays are now enabling millions of aptamers to
be generated and evaluated in a single day  but it is still costly to run each batch  and only a small
number of the possible aptamers of a fixed length can be evaluated     a single batch generates
large amounts of information about the target binding characteristics of many different aptamers 
using this information  it could be possible to automatically classify proposed aptamers as tightly or
weakly binding and to create a model of the underlying function mapping the aptamers nucleotide
sequence to the its target affinity 

project goals
this project investigates how support vector machines  svm  can be used to classify proposed
aptamers after being trained on the fluorescence data from a previous batch  this will hopefully
reduce the number of batches required to converge to a good aptamer by focusing resources on
those aptamers with the most promising nucleotide motifs  different types of string kernels for the
svm  e g   spectrum and mismatch kernels  will be built and evaluated  further  by viewing the
function mapping aptamers to fluorescences as a gaussian process  the upper confidence bound
reinforcement learning algorithm will be used to develop a model that can be used to suggest highperforming aptamers for future batches  using the data from a single batch of aptamer selection 
these algorithms could ideally be used to suggest an additional fifty or so aptamers that are likely
to outperform any of the aptamers in the actual training set 

 

fi 

methods

the dataset consists of approximately       nucleotide sequences of length    along with their
associated fluorescences  the starting and stopping subsequences common to all of the aptamer
nucleotide sequences were not used in any computation 

   

string kernels

for many learning algorithms involving strings  kernels provide a computationally efficient means
of finding the inner product of high dimensional feature vectors without explicitly forming the
feature vectors and taking their inner product  there are many possible kernels that could be
used to measure the similarity of two aptamers  some are based only on the underlying nucleotide
sequence  e g   spectrum or mismatch kernels   but others are based on the structural properties
of the folded aptamer in solution  for this project  all kernels were based upon the underlying
nucleotide sequence of the aptamer 
     

spectrum kernel

the spectrum kernel as described in     is a commonly used kernel to compare two nucleotide
strings  it has been used successfully to identify evolutionarily related genes that are distant on
a chromosome  consider the set x of all finite length strings of characters from the alphabet
a    a  t  c  g   for k     the k spectrum feature vector of an x  x is the set of all the
k length contiguous subsequences that it contains  this feature vector is indexed by all possible
k
subsequences a of length k from a  concisely  k   x  r  with k  x     a  x  aa   where
a  x  is the number of times that subsequence a occurs in x  then  the k spectrum kernel is defined
as kk  x    x      k  x   t k  x     using tree structures  this can be calculated directly in linear time
in the length of the strings 
     

mismatch kernels

the mismatch kernels differ from the spectrum kernels by incorporating spatial information  the
simplest example is the   mismatch kernel which simply compares each nucleotide in a string with
the nucleotide at the same position in the other string  it returns the total number of such matches 
for k      there are several variations of this basic idea which instead compare substrings of length
k  the sliding k mismatch kernels use a sliding window of length k starting at each position within
the string  the chunk k mismatch kernels break the strings into non overlapping substrings of
length k and return the total number of these that match  because of the structural and chemical
similarities between a and t and those between g and c  i hypothesized that mismatches of a and
t should be penalized less than those of a and g or a and c and similarly for the other nucleotides 
so  for this project  i also created modified mismatch kernels return     for a mismatch between
either of the above pairs rather than    finally  the weighted mismatch kernel consisted of a sum of
chunk k mismatch kernels with weights of   k for k              note that the definitions of mismatch
kernels given here differ from those in the literature    

 

fi   

support vector machines

an svm learns a hyperplane from training data which can be used in binary classification  using
the kernel trick allows the svm to learn and use this hyperplane in the feature vector space without
explicitly computing feature vectors  employing this kernel trick with the kernels described above 
several svm were trained  the dataset was divided into training       and test       subsets 
the training data were then labeled using an arbitrary cutoff so that aptamers with fluorescences
in the top     of the dataset were labeled as     good  and those that were not were labeled as
   poor   the optimization was carried out using stochastic gradient descent  the logarithm of
the fluorescence was used in these computations 

   

gaussian process optimization using upper confidence bound

for the gaussian process upper confidence bound  gp ucb  algorithm it is assumed that the
underlying function f on the space of strings that determines the associated fluorescence is a sample
from a gaussian process with mean function  x    ef  x  and covariance function
k x    x     for

each step t in the algorithm  a new point xt  x that maximizes t   x    t t   x  is selected
and then a noisy measurement yt   f  xt     t where t is distributed n          is collected  then 
including all the noisy samples up to iteration t    we calculated the updated
 

t   x    k  t    x t  k      i   y 
and

 

   
 

t    x    k x  x   k  t    x t  k      i   k  t    x  

   

t

where k is the kernel matrix over all x            xt  and y    y            yt      the parameter t decreases with t and guarantees bounds on the regret        this algorithm was implemented using
the weighted mismatch kernel  as described above  and it was allowed to run for     iterations  the
logarithm of the fluorescence was used in these computations 

 

results

figure    predicted margins vs  fluorescence for four different kernels  see the following table for
the labels  the vertical red line indicates the fluorescence cutoff below which aptamers are labeled
as poor  and the horizontal red line indicates the zero margin below which aptamers were predicted
to be poor  that is  dots in the upper left quadrant are misclassified as good aptamers  while dots
in the lower right quadrant are misclassified as poor aptamers 

 

filabel
 
 
 
 

kernel
  spectrum
  mismatch  chunk 
  mismatch  sliding 
modified   mismatch  sliding 

training accuracy
     
     
     
     

test accuracy
     
     
     
     

figure    training and test accuracy for the svms in figure   

figure    the left graph shows the predicted margins vs  fluorescence  similar to those in figure    
and the right graph shows the predicted margins vs  ranked aptamer for the weighted mismatch
kernel  this kernel performed the best with a training accuracy of       and a test accuracy of
      

figure    the left graph shows the actual zero mean fluorescences in black and the expected mean
function in red against the ranked aptamer following one iteration of the gp ucb algorithm  the
right graph shows the same following two hundred iterations 

 

fi 

analysis

support vector machines five support vector machines were successfully trained and tested 
the weighted mismatch kernel performed the best with training and test accuracies of       and
       respectively  however  the   mismatch  sliding  and   mismatch  chunk  performed nearly
as well and were faster to compute  the modified   mismatch  sliding  did not perform as well as the
unmodified mismatch kernels  this indicates that binding of the aptamers is highly dependent on
the actual nucleotide at each position and not necessarily the cross nucleotide binding characteristics
of the nucleotide at each position  all mismatch kernels were significantly better than the spectrum
kernel  there is an important explanation for this  the spectrum kernel completely disregards
spatial information included in the nucleotide sequence  this information determines how the
aptamer loops on itself in its secondary structure  which strongly determines the tertiary folding
of the aptamer in solution  because it is this tertiary structure that actually fits into the target
molecule  it makes sense that the spatial information is important in predicting how tightly an
aptamer binds the target  these results suggest that a more accurate kernel would weight different
locations within the string depending on how strongly changing the nucleotide at that location
changes the performance of the aptamer  it would be expected that certain locations within each
string are very sensitive to changes  e g  locations which are involved in closing the loops of the
secondary structure  this weighting on the string could come from either prior physical knowledge
of aptamer secondary folding or from hyper parameter fitting 
gp optimization the gaussian process optimization using the upper confidence bound algorithm was successfully implemented on the entire dataset  as can be seen in figure    the mean
function does converge to the actual underlying fluorescence after approximately two hundred iterations  after tuning the parameter t   the regret was minimized and the optimal aptamer was
typically found following one hundred iterations  the performance of the ucb algorithm was
highly dependent on the quality of the kernel used  using the spectrum kernel usually resulted in
non convergence or convergence to a local maximum far from the global maximum  these results
suggest that it may be possible to use the model of the fluorescence function of the nucleotide
sequences as a gaussian process and then use it as a means of suggesting aptamers that could
have higher fluorescences that those in the dataset  in future work  monte carlo search techniques
combined with the gaussian process model will be used to suggest new aptamers 

 

references and acknowledgment

acknowledgment this project was conducted under the guidance of dr  john duchi for ee    
    cho et al         quantitative selection and parallel characterization of aptamers  proc natl
acad sci usa                     
    leslie et al         the spectrum kernel  a string kernel for svm protein classification  proc
pacific symposium biocomputing         
    c  leslie et al         mismatch string kernels for svm protein classification  neural
information processing systems 
    romero et al         navigating the protein fitness landscape with gaussian processes  proc
natl acad sci usa online e    e    
    srinivas et al         gaussian process optimization in the bandit setting  no regret and
experimental design  icml 
 

fi