cs      project
long short strategy using bank analysts recommendations
thomas ayoul  alexandre elkrief  nicolas meiller
mentor  youssef ahres
december         
abstract
in this project  we aim at trying to predict stock prices of the eurostoxx   index using machine
learning techniques applied to bank analyst recommendations  based on those predictions  we create a
long short trading strategy  we then back test this strategy and use different validation tools to improve
the model  we investigate two types of logistic regression models with different sets of features  we
then build strategies using sliding training sets and try other classifiers such as svm or random forests 
finally  we add trend following and mean reversion features 

 

introduction

banks and equity research houses have analysts covering and publishing research on stocks  in particular
blue chips stocks such as the ones forming the eurostoxx   index  aside from publishing research  they
provide a rating to predict the future performance of the stock and a price target  these analysts are
industry sector specialists and cover on only a small set companies  as a result  the ratings they publish
take into account fundamental economic factors  historical results of the companies as well as their specific
experience  we want to aggregate all these ratings which summed up all these factors using machine learning
techniques 

 

data acquisition and formatting

banks and stock brokers analysts publish their ratings  target prices and if they would advise to buy or sell
the stocks on bloomberg  for each feature  we use their average which can also be find on bloomberg 
the first step of the data acquisition process was pulling up the data from bloomberg  in the absence of a
working python bloomberg api on campus  we had to use excel to download the data  for each company of
the eurostoxx   index  we used the historical ratings from each equity analyst covering the stock  the price
target as well as the average rating and price target across all analysts  finally  we downloaded the end of
day prices  we used historical data from the january  st      to june   th      
the output from bloomberg being very poorly formatted  we started by writing a vba script to reformat
it  we then temporarily put the data in python dictionaries to allow us to move forward with the modelling
work  the sparsity of the ratings which are not published on a varying basis lead us to put the data in
data frames  which are much more convenient in order to deal with the concatenation of dates 

 

related work

financial times series predictions to build trading strategies is a field driving a lot of innovation in the
financial industry in particular in the hedge fund world  however  given the nature of their business model 
a lot of the work happening in this field remains private  machine learning driven algorithmic trading
 

fistrategies include pca  deep neural networks  boltzman machines   gbm and all forms of regressions 
another point that is even more opaque than the machine learning techniques used is the features chosen
to build the model  which are a key factor in whether the strategy is going to be successful or not  it is
therefore difficult to compare our performance with others  however  a strategy is generaly considered to
perform well if it achieves a success rate of above      other key metrics to evaluate a trading strategy
include its maximum draw down and its sharpe ratio 
s 

 

portfolio return  risk free rate
portfolio standard deviation

models

model     naive logistic regression
creating a long short strategy requires buy and sell signals  therefore  in order to fit the binary nature
of the outcomes we are trying to predict  we chose logistic regression as a first model  in this model  we
assume that all stocks behave the same way and have independent increments  we then model them as a single response vector  i e  we are assuming no difference between the stocks and put them all in the training set 
the features we wanted to use are the analyst ratings and target prices but we had to compute everything in return terms over a given interval t to have a comparable scale for all stocks  this gives the
following features matrix 
x     stockreturnt   analystt argetreturnt   ratingreturnt   averageratingt   eurostoxxreturnt  
where the return for a quantity s is computed as

st stnday
stnday

 

we are trying to predict whether a given stock price is going to raise or fall in the next nday days  as
a result the label associated will be 
 
  if stockreturnt nday    
y  
  otherwise

comments and results
in the first iteration of the model we use     of the data as training set  with no consideration of the
chronology of events  the model is then tested on the remaining     of the data  this model achieves an
error rate of     which isnt quite sufficient to build a successful trading strategy  indeed  as we can see in
the figures below  the resulting long short strategy can perform very well or very poorly  depending on the
stock 

 

fimodelling all stocks identically in a single response vector is a very strong assumption  it assumes that
stocks have no sector or industry specific components and that they are independent which doesnt seem to
be performing well  the way we trained our model also does not take into account the time series dimension
of stock prices  training of     of the data randomly means that we could be using prices target for the
year      to predict      which is a clear flaw  we therefore move on to building a second model to consider
the stocks as a whole in order to take correlations as well as the chronological component of stock prices into
account 

model     greedy logistic regression
in the second model  as we could not predict each stock individually  we try to predict the return of the
eurostoxx   over the next nday days  the response variable is therefore a buy or sell binary signal on the
index  defined as  
 
  if eurostoxxreturnt nday    
y  
  otherwise
similarly to model   everything is computed in terms of returns to to have a comparable scale across all
stocks  as we take all the stocks as a whole  every training sample will have information on all the stocks
and we will have a feature matrix composed of the same components as the one from the first model  except
that we separate the features in stock specific vectors  for stock i we have   features 
xi     stockreturnit   analystt argetreturnit   ratingreturnit  
this gives the following features matrix with     columns 
x    x    x         x    

comments and results
after optimizing the paramters the best possibl return period appears to be nday      days  this means
that upon each buy or sell signal from the model  the strategy is to buy the eurostoxx   for    days and
measure the return at the end of this period  in terms of training set  we train on     of the data and
predict on the remaining      this model achieves an error rate of      we then back test the strategy
giving the results in the figure below  we manage to create a strategy that outperforms eurostoxx by almost
    over the past year 

nevertheless  the error rate results seem to be very sensitive to the percentage of the data on which we
train the model  this is logical since the smaller the size of the training set  the bigger the gap between the
features we have and predictions were making  on the contrary  too big learning set takes lot of data that
are not relevant with current market 
 

fimodel     sliding logistic regression
as the size of the training set appears to be a decisive parameter for the previous model and as we did not
want to use too old data to predict we decided to train on a sliding window  for instance  at each moment
we will only use the information of last year to compute our prediction  it comes from the fact that the
markets are changing as well as the stocks prices  it also enables us to test our strategy on several different
periods  periods of growth as well as huge draw downs  such as the      economic crisis  we first of all
optimize the size of the sliding window as well as nbday   the horizon of forecasting 

it appears that the optimal number of days is around    trading days which corresponds to about   months
which is the time horizon of forecasting by the analysts 

does it work with other classifiers  
after optimizing the parameters we tried other classifiers such as svm or random forest 

the strategy that seems to perform the best is the one with random forest  however  a sharper analysis
shows that these strategies behave differently depending on the market fluctuations  these strategies are
making profit during huge draw downs such as the      crisis  for t around      on the graph   which is
really good  however  our strategies seem to be performing less well during calm periods  during these
periods mean reversion and trend following are performing well generally  as a result  we decided to add
these features to our data  however  in our model as they were treated as the other features  there were
no real difference  it may be because the time horizon of these approaches are quite different  a point of
further research would be to add a second layer to our model to benefit from both approaches 

 

fimoreover these strategies are much less volatile than eurostoxx  this is a good points for our strategies   we manage to produce bigger returns with smaller volatility  as it can be see in the following table 
the sharpe ratios of our strategies are thus much bigger than the eurostoxx 
classifiers
logistic regression
svm
random forest
eurostoxx

 

annualized volatility
     
      
      
      

cumulative returns
      
       
      
       

conclusion and further research

nowadays  a lot of trading strategies are only using mean reversions or trend following approaches  these
techniques are usually working quite well in calm periods  but are completely random during crisis  on the
contrary  our algorithms manage to predict most of the draw downs 
indeed the inclusion of bank analysts recommendations which are based on fundamental economic valuations allows for the strategies to incorporate a different and approach than exploiting only the time series
data 
the next step would be to develop a second layer that takes into account the study of the recommendation first then compare it to the mean reversion or trend following strategies  given the good results we
got and as students in computational finance  we will try to continue this project over the next quarters 

references
    tze leung lai  haipeng xing  statistical models and methods for financial markets      th edition  
    john c  hull  options  futures and other derivatives   th edition  
    jegadeesh  narasimhan  evidence of predictable behavior of security returns  journal of finance     
             

 

fi