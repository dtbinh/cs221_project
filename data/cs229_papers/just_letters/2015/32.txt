energy consumption prediction for optimum storage utilization
eric boucher  robin schucker  jose ignacio del villar
december         

introduction

methods and algorithms used

continuous access to energy for commercial and industrial sites across the united states to cover their
needs is essential for them to keep producing goods
and providing services  nonetheless  the price of electricity provided by utilities is variable throughout the
day  in addition  commercial and industrial customers
have to pay demand charges that are proportional to
the maximum power drawn from the grid during each
month  this rate structure makes these sites very
sensible to how they consume power on a minute to
minute basis 
solving this issue involves providing businesses
that use solar energy and storage with a system that
would allow them to optimize in real time the choice
between using the electricity they have produced and
buying from their utilities provider  this is exactly
what the startup elum does  to make this happen 
there is a need to have accurate predictions of the electricity consumption of each site at one or two days
horizon  using data provided to us by elum  we have
tried to solve this problem  and helped sites optimize
the resources they spend on energy 
there have been many attempts to solve this issue
in the past using extremely varied methods  nonetheless  the literature points to the linear regression
method  as in     and       the knn method  as in    
and       and specially neural networks            and
     

error used
error  

 
nsites

x  ypred  y  t  ypred  y  
y ty

site

this error  while not completely perfect  was made
so that we do not favor sites that consume more energy on average  greater y    nonetheless  this gives
us a good estimate for the overall error  note that y
and ypred represent the true consumption and the estimated consumption respectively 

linear regression
our first approach to the problem was to implement
a simple linear regression model  we randomly separated our data points into     training set and    
testing set  as features  we used what was available
to us  the date  thus  we trained a linear regression
model using the weekday and the hour of the day 
x
consumptionest  
i j xi j
i j

where i      is the weekday  i e  monday  tuesday     and j       is the hour of the day  for example 
x        if we want to predict a monday between
     am and      am  and x        any other time or
day of the week combination  this very simple model
gave us an average test error of     across all sites 
it is promising since this algorithm models the consumption over the whole year and thus any day could
be foretasted using only what weekday it is as information  this model corresponds to our baseline case 
and any other more sophisticated time series model we
need to beat this error to have potential  the difference
between test and train error is very small         vs
        and we only use             features to
predict over         points  thus  we believe that our
error is mostly from high bias rather than high variance  as a result we need to use more features in order
to reduce the error 

main objective
much research has been realized in the field of short
term load forecasting  the main objective of this
project is to accurately predict the next day energy
consumption needs for     businesses in the usa  the
input data is consumption over a certain period  up to
year  at   min intervals and we want to predict the consumption of the day after that period  admittedly  this
goal is complex  as we needed to predict     energy
consumption needs to complete a whole day of prediction  with a prediction every   minutes   nonetheless 
we considered this goal to be challenging and engaging enough for us to try to tackle it  to find what we
would consider a good method  we wanted to make
sure that it worked well on all the different sites 

more features
we have found site specific    min interval weather
data  from nrel nsrdb   including solar irradiance 
 

fi in order to predict the day in the test set  we look
at the last p days of the train set    query key  
and compare that query key to the keys stored in
our table  for each key in the table  the distance
to our query key is the norm of  query key   key  
then we select the k keys which have the lowest
distance 

temperature  wind speeds  relative humidity  and pressure for       intuitively  weather data  especially
temperature and solar irradiance  if the site has solar
panels  would play a large role in energy consumption  adding only linear terms in weather data did
not seem to help much  as the test error drop only
to        however  adding polynomial terms  especially temp    wind    wind  temp      helped a lot and
dropped the test error down to       again  the test
and train errors were very similar so we are not over
fitting  the distribution of errors can be found in figure    we also tried adding holiday data  but this resulted in a over fit for those days as they are very few
of them and we only have data for one year  looking at school consumption in particular  the academic
calendar has a huge impact as during the long summer
break  the electric consumption is far lower than any
other months  however  adding this feature did not
change the error significantly 

 our predicted value    a day  is then   i     key
that is closest to query key  i     second closest
etc 

predicted value  

k
x
value i 
distance i 
i  
k
x
i  

 
distance i 

figure  

knn key value pair
the variables that we can tune on this model  is
the number of days we look into the past to predict
the next day  p   size of key vector in days  and the
number of neighbors we include in the prediction  k  
as a test set  we tried to predict    random days  that
were never included in our training data  the lowest
error we obtained is       for p     and k      playing around with these values we see that this model
becomes worse as p increases  the k dependence is
not so strong and any value around   produces similar
errors  this method does not seem to work well on
our dataset as the best error is higher than using linear
regression without weather data 

figure  

linear regression model of a site that has an average
error  blue   true consumption  red   modeled
consumption 

fourier and std

figure  

in the case of time series such as energy consumption 
a standard approach is to use an algorithm which finds
periodicity patterns in the data and use theses patterns
to predict the future  a standard algorithm in this case
is the fourier analysis which approximates the data by
a sum of trigonometric functions  a more elaborated
version is the std   standard trend decomposition 
which approximates the function by a sum of periodic
functions with additional seasonal and trend functions
with lower or no periodicity  this enables more flexibility in our case as it allows the algorithm to take
into account a rising demand or significant changes in
equipment 
we have implemented both algorithm and unsurprisingly  std performs systematically better than
simple fourier analysis  however  we found out that
our error on the test set  i e  the day to be predicted 

error histogram for all sites using linear regression

k nearest neighbors
as mentioned in      a k nearest neighbor  knn  algorithm seems to be promising for this application  we
have implemented a knn in order to predict an entire
day  selected randomly  of our data set  the knn algorithm works in the following way  for each facility 
 looking at past and future data  stores the electricity consumption of p days  p       points 
as keys and the electricity consumption of the
day right after the p days as value
 using all the data in the train set      days  we
then have       p  key  value  pairs stored in a
table  see figure   
 

fivaried significantly with the number of days taken into
account during training  and more data points is not always better  we found that on average    weeks of data
yields the best results  see figure    ie the lowest test
error   our first hypothesis is that future points will be
more similar to data points that happened a few days
ago than what happened a long time ago as in general
weather patterns are usually on longer time scales  our
first hypothesis is that future points will be more similar to data points that happened a few days ago than
what happened a long time ago as in general weather
patterns are usually on longer time scales 

std error vs training size

neural nets   lstm
building on literature on the usage of neural nets for
time series prediction  we decided to implement an
lstm  lstm stands for long short term memory 
a kind of recurrent neural network algorithm that can
learn from experience thanks to memory gates  see
figure    

figure  

long short term memory
using the python package keras     we first implemented an lstm with a  tanh  activation before a
linear activation for the output  and started with a one
hidden layer lstm model with a time step of    the
model takes into account a sequence of   days stepwise and outputs the prediction for the following one 
the variables that we can tune on this model are  the
number of days we look into the past to predict the next
day  the number of hidden layers  and the number of
training epochs  we chose t   as it allows us to have
a complete view of a week and e     with dropouts
to avoid over fitting  we then tried to select the best
possible parameter for h  the number of hidden layers  unfortunately  different time series of different
sites behaved very differently  h       gave good
results overall and even outperformed std on some
sites  but simultaneously gave extremely bad results
for others  feature selection was a therefore a tough
process and our hope of finding an universal algorithm
did not seem very realistic in the case of neural nets 
adding more weather data did not improve our results
significantly  although our results on linear regression
suggest that including higher order terms or having a
deeper neural net might help 
we then went on with different models  looking
not at a vector but at each five minute value individually in the lstm and a size step of      despite being
a more classical approach  it return non significant results  we suspect that we did not have enough data to
really grasp the trends and admittedly were asking a
lot of our model  indeed  there is tremendous variability at the   minute levels even on two days that look
extremely similar from a distance 

figure  

best and worst std forecasts
e          e   vs e       

figure  

 

filastly  we tried a simple feed forward neural network on a   minute basis but the results were inconclusive  likely due to a not so surprising error propagation 

figure  

prediction of consumption of site   with lstm

limitations of models and next
steps
std is the model that works best       on average
across sites  even though it does not use any weather
data  see figures    and      this makes sense because std does not try to model the whole year and
only models the last two weeks and predicts the next
day from that  furthermore  std seems to be consistently underestimating  but with the right shape  which
could be why this error is still very high  we think that
this underestimation could be alleviated by augmenting our std with weather data and this would be our
main goal for future work  interestingly  it is hard to
tweak the model to become a one fit all algorithm as
very regularized sites are having variance issues while
less regularized ones are having bias issues 
another next step would be to improve our linear
regression model to only model a few weeks before
our query day rather than modeling the whole data that
we have in order to reduce the bias of the model  this
would be a fast implementation but we decided to explore other methods rather than the classic linear regression 
as we mentioned before  some limitations exist on
the neural network that we implemented  as is shown
in the bad performance on some sites  even though the
performance was good on other sites  we believe that
the key reason for that is the lack of data  only one
year  relative to the daunting task at hand  predicting a
vector of     values 

figure  

error vs hidden layer on lstm

conclusions
 neural nets lstm  while promising  gives us
good results on    sites  but on the remaining   
we get extremely bad results  error      linear
regression actually performs better than neural
nets lstm overall except in   sites 

figure  

histogram of errors for h      

 adding weather data is crucial to get an error
lower than     and currently our best algorithm
for prediction the consumption is linear regression  adding weather features to a linear regression model is straight forward and we were
able to integrate all the weather data we had in
our model  in contrast  as std or knn are
time series prediction model  augmenting them
with weather features was more challenging and
we were not able to implement a solution that
leveraged all of the weather information on our
hands 
 

fireferences

tion to the short term electric energy demand 
current topics in artificial intelligence  springer
berlin heidelberg  vol            

    amral  n   ozveren  c s   king  d   short term
load forecasting using multiple linear regression  universities power engineering conference 
      upec         nd international   vol   no  
pp                sept      

    hippert  h s   pedreira  c e   souza  r c   neural networks for short term load forecasting  a review and evaluation  power systems  ieee transactions on   vol     no    pp        feb     

    papalexopoulos  a d   hesterberg  t c   a
regression based approach to short term system
load forecasting  power systems  ieee transactions on   vol    no    pp            nov     

    lee  k y   cha  y t   park  j h   short term load
forecasting using an artificial neural network 
power systems  ieee transactions on   vol   
no    pp          feb     

    al qahtani  f h   crone  s f   multivariate knearest neighbour regression for time series data
a novel algorithm for forecasting uk electricity
demand  neural networks  ijcnn   the      international joint conference on   vol   no   pp     
    aug      

    bakirtzis  a g   petridis  v   kiartzis  s j   alexiadis  m c   a neural network short term load forecasting model for the greek power system  power
systems  ieee transactions on   vol     no   
pp          may     

    troncoso lora  a  riquelme santos  j m  
riquelme  j c   gmez expsito  a   martnez
ramos  j l   time series prediction  applica 

    keras io  keras  deep learning library for
theano and tensorflow  last accessed  december   th     

 

fi