robust streaming video traffic classification
jordan ebel  jebel stanford edu

i 

introduction

in order to provide reliable and fair internet service  internet
service providers  isp  use network management tools to
classify  report  or restrict the internet traffic of subscribers 
network management tools are critical to ensuring fairness and
quality of service for all subscribers on a network  but the
growth of streaming video  encrypted internet protocols  and
other traffic obscuring techniques are straining both networks
and network management tools 
streaming video is a bandwidth intensive class of internet
traffic responsible for an increasing percentage of total internet
usage      parallel to the growth of streaming video  protocols
that encrypt internet traffic are also growing in popularity     
in addition to encryption  consumers and video providers use
web proxies  nonstandard ports  and other traffic obscuring
techniques to attempt to avoid classification  clearly  there is a
need for high performance traffic classification systems to
enable critical network management services  while also
preserving consumers expected levels of privacy  security  and
performance 
current research in the area of internet traffic classification is
mostly centered on deep packet inspection  dpi  and machine
learning techniques  current work involves using automata    
   or bloom filters     to maximize performance when
matching header and payload contents to regular expressions 
these techniques are accurate and very fast  yet they can be
beaten by encrypting a packets header and payload 

feature sets  none of these works could be ideally applied to a
real  modern classification system  further  all of the related
works studied have weaknesses in that the internet is rapidly
evolving  and many of the protocols and traffic patterns studied
are now out of date 
this work aims to correct for the weaknesses found in related
machine learning traffic classification systems  this work tests
the algorithms nave bayes  logistic regression  support vector
machines  svm   and k means clustering against the modern
traffic patterns and protocols of the internet  we achieved
better than     accuracy using the svm algorithm with a
gaussian kernel function  and implemented the svm algorithm
in a real time classification system to demonstrate the
performance of the system  the input to the system is a flow of
internet packets  and the output is a classification for the packet
as a streaming video packet or another packet  our techniques
are agnostic to the transport and application layer of the packets
entirely  only making use of simple and easy to calculate
features from the transport layer and below  as a result  the
techniques presented in this paper are robust to modern traffic
obfuscation techniques and are suitable for implementation in
an actual classification system 

ii 

we tested the following classification algorithms   i  nave
bayes   ii  logistic regression   iii  svms  and  iv  k means
clustering 
i 

machine learning techniques are another area of intense
research  williams  et al  in     provide a thorough summary of
five supervised machine learning algorithms classifying traffic
into multiple classes  and conclude good performance can be
obtained using relatively simple features  the authors of    
and     both tested unsupervised learning algorithms on
classifying internet traffic and achieved average performance 
li  et al  in     achieved excellent performance of    
accuracy using the c    decision tree algorithm  however 
their model involved a very large amount of features  including
many expensive to compute flow based features  in addition 
their classifier only worked on tcp packets  and their
technique made use of port numbers as features  all of the
related machine learning works studied supported a limit set of
protocols  made use of port numbers  or involved very large

models

nave bayes

the nave bayes classifier is a generative supervised learning
classifier based on the nave bayes assumption and bayesian
probability  the nave bayes assumption assumes that given
the class  any two features are conditionally independent  the
nave bayes assumption can be expressed as 


               
  

the nave bayes assumption can be used to simplify the
bayesian probability  shown for a positive example 
         

             
  

firobust streaming video traffic classification
                  
updates the cluster centroid  the examples are assigned to the
         
nearest cluster according to 
  
a maximum a posteriori classifier is built by selecting the class
that maximizes the bayesian probability 
ii 

logistic regression

logistic regression is a discriminative supervised learning
classifier that models the probability of the positive class given
the input features  using the logistic function  the logistic
function  applied to the linear combination of parameters and
features  is 
            

 
     



to fit the parameters  logistic regression assumes the class
outcome is the result of a bernoulli trial and maximizes the log
likelihood of the probability  the maximization problems does
not result in a closed form expression for the parameters  so
numerical optimization techniques such as gradient ascent or
newtons method can be applied to solve for the parameters 
iii 

svm

support vector machines are a non probabilistic supervised
learning classifier that finds the maximum margin hyperplane
separating the input data in high dimensional space  the
classifier will use the hyperplane to make predictions about
new examples  based on which side of the hyperplane the
example lies  finding the hyperplane reduces to solving the
optimization problem 


 
min       
    
  

subject to the constraints 
                           
              
l  regularization is used to allow mislabeled data  penalized by
the cost parameter c  by taking the dual of this optimization
problem  the algorithm can be expressed in terms of only inner
products of features and parameters  this property can be
exploited to map the input data into a higher dimensional
feature space efficiently using a kernel function  allowing the
svm algorithm to learn in a higher dimensional space and
perform nonlinear classification 
iv 

k means clustering

k means clustering is an unsupervised learning classifier that
attempts to label input data into k clusters  it is an iterative
algorithm that assigns each example to the nearest cluster  then

    min    

 



this cluster assignment is based on the squared euclidean
distance  are therefore intuitively represents selecting the
nearest cluster  it can be shown that k means clustering is a
variant of coordinate descent  so it is guaranteed to converge 
however  the algorithm may converge to local optima  so
multiple trials of the algorithm should be completed to find the
best clustering result 

iii 

dataset

packet captures capturing streaming video traffic from a variety
of video providers  mixed with standard web traffic  were
collected on a personal computer  the packets were captured
and visually inspected using the wireshark      packet
analyzer  traffic was collected for approximately    seconds
for each packet capture  resulting in about        packets in
each capture  both the training and test datasets contained
approximately two thirds streaming video traffic  figure  
below shows six streaming video packets collected in one of
the training sets  the figure shows the arrival times  ip
addresses  and protocol information for each packet 

figure    steaming video packets captured

viewing the packet captures provided critical insights into the
data that were exploited when extracting features  streaming
video traffic appeared in the datasets in bursts  with a large
amount of very similar video packets arriving at nearly the
same time  in comparison  standard web traffic was more
irregular in characteristics and arrival time  these insights
were very important to collect more descriptive features 

iv 

features

the datasets were individually passed through a custom python
script to extract features  the python script used the dpkt
module      to examine packet contents and output a feature
matrix and category matrix for the dataset  while port numbers
and ip addresses were not used in feature extraction  they were
used to determine the true packet categories  the technique
employed to determine the true categories of packets is an area
for further work and improvement  video providers do not
publish their ip address ranges  and packets from different
providers varied widely in ip address  port number  and other
characteristics  some amount of packets was mislabeled 
which therefore introduced a small amount of error into the
system 

firobust streaming video traffic classification
the initial set of features included features describing each
the test and training error of each supervised learning algorithm
packet individually  these features included ip length  ip time
studied  all algorithms displayed subpar performance when
to live  ttl   ip protocol  and inter arrival time  the initial set
the full training set was used  this plot also supports the high
of features resulted in poor classification performance  in order
bias diagnoses as seen from the biplot  since each algorithm
to capture the burst like nature of streaming video traffic  a
displayed unacceptable test and training performance that did
window of sequential packets was examined  the mean and
not improve as more training examples were added 
variance of characteristics of each packet in the window were
collected and contributed significantly to algorithm
performance  these features included the mean and variance
of inter arrival times  ip protocols  and ip lengths 

v 

results and discussion

algorithm performance was measured using a combination of
performance metrics  test error  training error  recall  precision 
confusion matrices  and area under curves of both recallprecision and receiver operating characteristic curves  the
quality of the features extracted was measured by visual
inspection of the dataset in principle component space  and the
percentage of total data variance that was captured by the first
two principle components  high quality feature sets would
show clear clusters of examples in principle component space 
clear tradeoffs of features  and low amounts of total variance
captured by the first two principle components 
initially  a principle component analysis  pca  was completed
to gain insight into the dataset and the set of initial features 
figure   below is a biplot of a subset of the training dataset and
the features in principle component space  the biplot shows a
lack of clear clusters of the positive  streaming video  and
negative  other traffic  examples in the data  pointing to a high
bias issue  the principle component analysis revealed nearly
    of the variance in the dataset was explained by the first
two principle components  the biplot also revealed an overlap
of closely related features  such as total packet length and ip
packet length  overlapping features do not provide useful
information and were removed from future feature matrices 

figure    test and training errors using limited feature set 

figure   below is an updated biplot showing the dataset and
features  including the additional features describing a window
of packets  the biplot immediately reveals a much clearer
grouping of positive examples and negative examples  as
expected  the biplot shows related features  such as protocol
and the mean protocol over a window of packets  as being
closely related  the biplot also reveals interesting tradeoffs
between packet size vs  ttl  and protocol vs  offset  these
two tradeoffs run nearly parallel to the first and second
principle components respectively  and therefore represent the
primary sources of variances in the data  the tradeoff between
protocol and offset served as a primary distinguishing
characteristic between the positive and negative examples 

figure    biplot of training dataset with additional features

figure    biplot of training dataset

the performance of the supervised learning algorithms was
tested using the limited set of features  figure   below shows

with the additional features collected  pca revealed only
about     of the variance of the dataset was explained by the
first two principle components  the additional features
significantly improved the variance of the dataset and
correspondingly improved the performance of each algorithm 

firobust streaming video traffic classification
figure   below plots the test and training errors of each
false positive rate of      the svm algorithm was able to
algorithm  including the additional set of features  the plot
achieve a perfect true positive rate  and therefore correctly
reveals each algorithm achieved substantial performance
identify every streaming video packet 
improvements when including the additional features  the test
performance for each algorithm was especially improved 
indicating progress was made treating the high bias issue  the
svm algorithm performed very well  with both test and
training errors at acceptable limits 

figure    roc curves of supervised algorithms

figure    test and training errors including additional features

to further optimize performance  an analysis was completed on
the size of the window of packets  four fold cross validation
was performed on the training dataset to determine the optimal
number of packets to include in the window  figure   depicts
the cross validation error displayed by the svm algorithm for a
variety of window sizes  this test suggests a window size of
three packets provided optimal performance for the svm
algorithm 

the recall precision plot revealed a similar performance
relationship  figure   shows the svm as the top performing
algorithm  with auc totals of         versus        for
logistic regression and        for nave bayes  svm showed
high precision across a broad range of recall rates  suggesting
the svm algorithm was more selective  even while classifying
increasing amounts of packets as positive examples  the other
two classifiers showed very good precision at low recall rates
only  indicating they could selectively classify well only when
limiting their overall number of positive examples predicted 
since the dataset contained more positive examples than
negative examples  it is more useful for an algorithm to be
precise even as the algorithm predicts more positive examples 
as displayed by the svm algorithm 

figure    cross validation error using different window sizes

the performance of the supervised learning algorithms was
further tested by plotting receiver operating characteristic
 roc  and recall  precision curves  figure   below shows the
roc curves achieved by each supervised learning algorithm 
the svm algorithm was the best performer  with area under
the curve  auc  of         versus       and       for logistic
regression and nave bayes  respectively  at a relatively low

figure    recall precision curves of supervised algorithms

the results from the plots were supported by the confusion
matrices of the algorithms  shown in figure    the confusion
matrices show the nave bayes and logistic regression
algorithms operating at very high recall  where they correctly
classify most positive examples  however  they also
incorrectly classify many negative examples as positive  only

firobust streaming video traffic classification
the svm algorithm demonstrates good performance at a high
principle component space is shown in figure     the plot
level of recall  these results directly support the findings from
reveals a relatively clear grouping of the data into actual classes
the recall precision curves above 
 indicated by color   yet the clustering algorithm failed to
accurately group the examples into their respective classes
 indicated by marker type   since k means clustering assigns
examples to the nearest cluster center  it expects clusters to be
similar in size  this expectation was not true in the dataset
tested  further work should be completed in preprocessing the
dataset and running additional diagnostic tests to tune the
figure    confusion matrices
clustering performance 
the superior performance of the svm algorithm can be
attributed to the likely non linearly separable property of the
data  logistic regression and nave bayes produce linear
classifiers  whereas svm with a gaussian kernel  as was used
in this analysis  results in a nonlinear classifier that is better
suited for classifying complex  non linearly separable data 
future improvements of this work include more
experimentation with regularization of the data and the result
on the performance of the linear classifiers  the test error
curves above also show an interesting pattern  the nave bayes
classifier initially outperformed the logistic regression
classifier  until more training examples were included and
logistic regression overtook nave bayes  this result is directly
supported by research by jordan and ng  who found the same
two regimes of performance      
figure     clustering in principle component space
based on the results of the supervised learning classifiers  a
real time system using the svm algorithm with a gaussian
kernel was built to classify live traffic  the feature extraction
functionality was combined with the scikit learn      and scapy
     modules to capture  extract features  and classify real time
traffic  the system is shown operating on live traffic in figure
    further work is required tuning this algorithm to match the
performance of the svm presented in this paper 

vi 

classifying traffic is a critical capability that enables effective
internet network management  there is a need for modern
network management tools that effectively deal with growing
bandwidth due to streaming video and the increasing
prevalence of traffic obfuscation techniques  this work
detailed the use of pca to analyze and build a rich feature set
describing packet captures  the performance of classification
algorithms nave bayes  logistic regression  svms  and kmeans clustering were tested  the svm algorithm was the top
performing algorithm  and was implemented as a part of a real
time traffic classification system  the system was agnostic to
the transport and application layers of packets  and was
therefore robust to traffic obfuscation techniques  the system
fits the requirements of an effective  practical  and efficient
modern internet traffic classifier 

vii 

figure     real time traffic classifier in operation

to gain additional insight into the data  the k means clustering
unsupervised learning algorithm was tested to sort the data into
two classes  a plot of the output of the clustering algorithm in

conclusion

references

    lopes  marina        june      videos may make up   
percent of internet traffic by       cisco  reuters  available
at 
http   www reuters com article            us internetconsumers cisco systems iduskbn el  e        
    finley  klint        may      encrypted web traffic
more than doubles after nsa revelations  wired magazine 
available at  http   www wired com         sandvine report 

firobust streaming video traffic classification
    s  kumar  j  turner  et al  advanced algorithms for fast
and scalable deep packet inspection  presented at acm ieee
symposium 
     
 online  
available
at 
http   citeseerx ist psu edu viewdoc download doi            
     rep rep  type pdf
    f  yu  z  chen  et al  fast and memory efficient regular
expression matching for deep packet inspection  presented at
acm ieee symposium         online   available at 
http   www diku dk hjemmesider ansatte henglein papers yu  
   pdf
    s  dharmapurikar  p krishnamurthy  et al  deep packet
inspection using parallel bloom filters  presented at   th
symposium on high performance interconnects       
 online   available at  http   www arl wustl edu  todd hoti pdf
    n  williams  s zander  et al  a preliminary performance
comparison of five machine learning algorithms for
practical ip traffic flow classification  acm sigcomm
computer communication review         online   available
at 
http   citeseerx ist psu edu viewdoc download doi            
    rep rep  type pdf
    s  zander  t  nguyen  et al 
automated traffic
classification and application identification using machine
learning  presented at the ieee conference on local
computer networks       
 online   available at 
http   security riit tsinghua edu cn mediawiki images    e clc
n     automated traffic classification and application id
entification using machine learning pdf
    j  erman  m  arlitt  et al  traffic classification using
clustering algorithms 
presented at  nd annual acm
workshop on mining network data       
 online  
available
at 
http   www ce uniroma  it courses mmi memopaper  pdf
    w  li and a  w  moore  a machine learning approach
for efficient traffic classification 
presented at    th
international symposium on mascots         online  
available
at 
http   ieeexplore ieee org xpl articledetails jsp reload true tp
  arnumber         contenttype conference publication
s searchfield  dsearch all   querytext  dtraffic classi
fication c   
     see https   www wireshark org 
     see https   dpkt readthedocs org en latest 
     a  jordan  a  ng  on discriminative vs  generative
classifiers  a comparison of logistic regression and nave
bayes  advances in neural information processing systems 
       online   available at  http   papers nips cc paper     on discriminative vs generative classifiers a comparison oflogistic regression and naive bayes pdf
     see http   scikit learn org stable index html
     see http   secdev org projects scapy 

fi