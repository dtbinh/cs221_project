examining long term trends in company fundamentals
data
michael dickens
          

introduction
the equities market is generally considered to be efficient  but there are a few indicators that are known
to have some predictive power over future price changes  this suggests that the market has some room
for identifying inefficiencies  much work is done on applying machine learning to short term trading 
but there exists little research on using machine learning to identify long term inefficiencies  almost
all mutual funds and hedge funds rely on the judgment of humans to make long term bets about the
market  therefore  we have reason to believe a priori that there exist long term market inefficiencies
which can be found with machine learning 
to test this  i collect a set of fundamentals data across several thousand companies over a fiftyyear period  taken from the crsp compustat fundamentals annual database  first i apply linear
regression over these fundamentals to see if they predict future returns  i find that they do predict
returns better than any common indicators  but do not predict returns well on a risk adjusted basis 
then i use support vector machines to classify stocks as high or low predicted returns  i find that for
well tuned parameters  an svm can produce a classification where positive examples have high riskadjusted returns and where this result generalizes well to a large test sample 

terminology
fundamental  a unit of information about a company taken from its income statement  balance sheet 
or cash flow  e g  assets total  net income  net sales 
indicator  a unit of information about a company that ostensibly indicates something about a companys growth or value  and is typically derived from a ratio of fundamentals  e g  price to earnings 
return on equity  net assets 
stock  typically refers to a single share of a publicly traded company  here it is used slightly differently
to refer to a company and the fundamentals data 
strategy  a function applied over a stock that produces a single real number predicting how good
that stock is 
score  the real number returned by a strategy for a particular stock 

related work
very little published research has been done on applying machine learning to long term stock prediction  there exists plenty of literature on applying machine learning to other financial problems  but
minimal work has been published on fundamental analysis  one paper by huang et al             uses
support vector machines to predict stock market movement  but the authors do not use company fundamentals as features  the most comprehensive work i have found is a dissertation by andersen       
    which does apply machine learning over company fundamentals  but still uses only a limited set of
fundamentals and contains limited discussion of their significance 

 

fithere has been substantial previous work examining the predictive power of company fundamentals  fama and french            found a strong result by examining market deciles by size and book
to market ratio  greenblatt            published a book on how individual investors can outperform
the market by following simple fundamentals based strategies  and abbey and larkin            successfully reproduced his results  however  none of these use any strategies more sophisticated than
finding stocks that rank highly on one or two fundamentals  if these simple strategies can outperform
the market  perhaps we can find even better strategies by applying regression or classification using
these fundamentals as features 

dataset and features
getting data
first  i have to get useful data on company fundamentals and prices and import this data into a useful
format  i am using the crsp compustat merged fundamentals annual database available through
wharton research data services  this data has annual stock quotes for many companies  i wrote
software to import this data and produce an internal representation that maintains annual time slices
of the market where each slice has data on all companies available during that year 

identifying features
we can draw on companies published income statements and balance sheets to get fundamentals data 
these data give us basic features that we can find for all companies in the compustat database  these
features include items such as net tangible assets  debt in current liabilities  net income  etc  we can also
combine basic features to produce derived features  for example  price to earnings is computed as share
price divided by earnings  where earnings is net income minus dividends on preferred shares 
there exist a handful of derived features where conventional investing wisdom suggests that they
have some predictive power  common derived features include price to earnings  return on capital  return on assets  debt to equity  etc  i originally considered exclusively using these features  but i believed
it was possible that there exist features with predictive power that are not commonly used 
to identify useful derived features  i took a set of basic features and computed all possible ratios of
these features  ideally i would like to compute ratios of sums of features as well as other more complex
combinations of basic features  but this becomes prohibitively expensive as the number of possible
derived features expands rapidly 
i considered several methods for testing the predictive power of derived features  i decided to use
a scoring function that divides the stock market into deciles according to a given feature  then returns
the absolute value difference in average risk adjusted returns between the first and last deciles  i chose
this scoring function because it most accurately illuminates exploitable market inefficiencies  using
correlation coefficient as the score might find features with greater predictive power  but we care more
about predicting which stocks lie at the tail ends of the returns distribution than identifying stocks in
the middle  so this measure is less useful 
i was not able to find any features that had stronger predictive power than well known indicators 
earnings yield performed by far the best  followed by other metrics that are very similar to earnings
yield  a few unpopular features did have reasonably strong predictive power  but none did as well as
well known features such as earnings yield and return on capital  perhaps i would find useful results
by using more complex combinations of features instead of just ratios  but this quickly becomes computationally infeasible  the number of possible ratios is quadratic in the number of basic features  and if
we used something more complex like a ratio of two sums  the runtime would increase with the fourth
power of the number of features 

methods
measuring returns
to judge a basket of stocks that some ml algorithm selects  we need to calculate that baskets future
returns  to do this  we take the basket of stocks  compute the return on each of them  and take a
weighted average of the results based on some predetermined weighting function   the two most

 

fiobvious weighting functions are equal weighted and cap weighted  i e  each company is weighted in
proportion to its market capitalization   
to compute the return for a company over n periods  we look at the future price over those n periods
and compute the percentage price increase  this process is somewhat complicated by dividends and
taxes  to include dividends  we take returns one year at a time and add in dividends at the end of each
year   dividends typically compound quarterly  not annually  so this requires a little extra arithmetic  
to include taxes  we subtract income tax from the dividends each time they pay out and subtract capital
gains tax each time we sell shares of a company 
how do we decide what basket of stocks to examine  i consider two different methods 
deciles  we can measure a strategy by dividing stocks into deciles by their score for that strategy 
more predictive strategies should show greater differences between deciles  and especially a greater
range between the first and tenth deciles 
top n  measure returns on the n top ranked stocks according to a strategy  this method more
realistically reflects how a strategy would behave in practice for any investors who do not have enough
capital to replicate an index fund 
the top n method provides results that are more useful in practice  while the deciles method gives
a better sense of a strategys predictive power  here i primarily use the top n method 
note that we want to measure both returns and standard deviation  if a strategy gives x returns at
standard deviation y   we can use the strategy to get  x returns at standard deviation  y by using      
leverage  higher returns are not meaningful unless the standard deviation is appropriately low 

results
baseline result
there are a few simple well known fundamentals indicators that predict future stock returns  for a
novel strategy to be valuable  it must have better predictive power than any simple fundamental 
one of the most well known fundamentals is price to earnings  here i use a slight variation  earnings
yield  which is known to have somewhat better predictive power  a strategy must have better riskadjusted return than earnings yield to be worth using 

linear regression
to apply linear regression  i took a set of    indicators that are already known to be useful according to
conventional investing wisdom  linear regression can be applied over these indicators by taking the list
of indicators for a training example as the x value and using this to predict annual return  the y value  
i applied a linear regression using a subset of fundamentals and returns data from      as the training
set  then i tested a strategy where i buy the    stocks that are predicted to get the best returns according
to linear regression  i tested this strategy over the period      to       i compared the strategy against
earnings yield as a baseline  i also compared it against dividend yield because the regression weighted
dividend yield most heavily of all the fundamentals it used 
linear regression weakly outperforms both earnings yield and dividend yield  but does not have
better risk adjusted return  see table     i attempted some modifications to the regression but was not
able to produce substantially better results 
the regression plot of all stocks tested show that almost all stocks lie within a fairly thin band and
there are a few outliers that dramatically change the shape of the line  it would be unreasonable to
remove these outliers  any real world stock purchasing strategy cannot identify and remove outliers in
advance 
unlike with svm  i found that adding more indicators as features to the regression did not reduce
accuracy  the regression algorithm assigned weight   or near   to most indicators 
linear regression finds stocks with high return but not high risk adjusted return  because of the way
risk is calculated  it is not feasible to measure risk adjusted return over a training set  so we cannot use
risk adjusted return as the y axis for the regression  for future work on this subject  it would be useful
to find a way to measure risk over a training set  however  it is not obvious that this would work  even
over a linear regression that optimizes for return  it still barely has higher un adjusted return than a
simple dividend yield strategy 

 

fisupport vector machines
the problem of predicting long term stock returns can be conceptualized as a regression  returns fall
on a continuum  and we can predict a stocks position on the continuum  it is perhaps somewhat
unnatural to conceive of this problem as a classification problem  on the other hand  in practice we
want to classify stocks as buy or dont buy  i used support vector machines to classify stocks in
this way  a support vector machine produces a dividing hyperplane that categorizes stocks into buy
and dont buy categories  svm also allows the use of the kernel trick to efficiently classify over many
features 
before beginning this project  i hypothesized that  instead of using well known indicators like price
to earnings  i could produce more novel results by using combinations of basic company fundamentals 
as discussed in identifying features above  it appears unlikely that there exist any simple ratios that
have good predictive power  nonetheless  thanks to the kernel trick  its easy to implement an svm
that uses ratios of fundamentals as features 
similarly to with linear regression  i trained on a subset of stocks from a single year and tested on
the remaining stocks over every year  to convert returns into binary classification  i treated a stock as
a positive example if it got a one year return greater than some cutoff  i tried a range of values for this
cutoff to see what worked best  i initially used    a company that gets     returns solidly beats the
market  but its still sufficiently low that lots of stocks will perform this well  however  i found that this
cutoff was close enough to average market return that classification produced very noisy results with
limited predictive power  i found more success using     as the cutofflower values are too noisy  and
higher values produce too few positive examples 
i tested svm using basic fundamentals as features and using a kernel to produce their ratios  i also
tested svm with the same set of indicators used for the linear regression  both of these produced worse
risk adjusted returns than linear regression  they worked relatively well on the training set  but did
not generalize to the test set  using such a large number of features resulted in severe over training 
i was able to correct this problem by substantially reducing the feature set  i took three features
known to perform well individually  earnings yield  return on capital  dividend yield  and found that
svm dramatically outperformed the baseline earnings yield strategy with an extraordinary annualized
return of        even so  svm with these features did not perform substantially better than a simple
strategy that ranks stocks by earnings yield and return on capital  see greenblatt            or abbey
and larkin             
the svms predictive power is fairly sensitive to the training set  in the interest of caution  i wanted
to use a fairly small training set and as large a test set as possible  i used a subset of stocks from a
single year as the training set  but i found that which year i used had a nontrivial effect on the resulting
support vectors  when i trained on a subset of stocks from the year      instead of       the algorithm
produced an svm with very weak predictive power  i am wary of using many different training sets
and picking the best one  the more training sets i use  the more likely i am to get a strong positive result
just due to chance  i found an annualized return of       using just the year      and without testing
many years  so this positive result is not simply the result of trying lots of training sets  perhaps this
concern is overstated  but it is easy to become overly optimistic about an investment strategys ability
to beat the market  so i believe caution is warranted 

conclusion and future work
there do exist indicators such as earnings yield that have substantial predictive power  and it is possible to classify stocks using these indicators to produce good risk adjusted returns  we can produce
better risk adjusted returns by using svm to classify stocks according to several indicators with strong
predictive power 
more work should be done to test the robustness of this conclusion  does it apply independently in
multiple sectors of the market  does it hold in equities markets outside the united states  additionally 
more analysis is needed to determine if svm produces better risk adjusted return than simply ranking
stocks by a small set of useful indicators 

 

fitables
table    returns
name
earnings yield
dividend yield
linear regression
svm

risk adjusted
    
    
    
    

return
    
    
    
    

stdev
    
    
    
    

table    linear regression feature weightings

references
    abbey  boris s   and patrick j  larkin  can simple one and two factor investing strategies capture the
value premium  applied finance            
    andersen  a  c  a novel algorithmic trading framework applying evolution and machine learning for
portfolio optimization  doctoral dissertation  masters thesis  faculty of social science and technology management  department of industrial economics and technology management       
    fama  eugene f   and kenneth r  french  the crosssection  of expected stock returns  the journal of
finance            
    greenblatt  joel  the little book that still beats the market  john wiley   sons       
    huang  wei  yoshiteru nakamori  and shou yang wang  forecasting stock market movement direction
with support vector machine  computers   operations research             

 

fi