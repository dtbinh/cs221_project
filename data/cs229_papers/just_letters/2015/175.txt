uav coordination tables via learning from various
logic tables
rachael e  tompa
stanford university  stanford  ca       
the risk of unmanned aerial vehicle  uav  collisions continues to rise as the number
of uavs in the national airspace increases  many institutions are working on various
anti collision softwares that will implement various logics on uavs  the logics will produce
horizontal maneuver commands actions to avoid collision during encounters  due to the
nature of horizontal maneuvers  there needs to be a way to ensure that all of the uavs
maneuver safely with one another regardless of logic  one method to do this is to query a
coordination table before performing any maneuvers  a coordination table can be created
through combining various logics optimizing for safety and efficiency  and returning if the
uavs should maneuver in the same direction  different directions  or if one is going in a
neutral direction for specific uav spacing and headings 

i 

introduction and related work

currently  the number of unmanned aerial vehicles  uavs  in the national airspace is rapidly increasing
which has increased the risk of uav collisions  further  the anticipated region for uavs to fly is a limited
altitude band which means that anti collision efforts must occur in the horizontal plane rather than the vertical  one way to mitigate uav collisions is through equipping uavs with anti collision software  previous
work at stanford has started this process by modeling the problem as a markov decision process  mdp 
and solving for optimal policies  this representation uses value iteration to solve for the optimal policy and
considers multiple uav encounters by decomposing the encounter  solving each dual uav encounter  and
then recombining all encounters to create the overall optimal policy      the policies provide each uav a
bank angle or clear of conflict command to advise the pilot on how to proceed to optimally avoid collisions 
the policies consider different pilot responses  initial conditions  and the number of uav per encounter 
simulations of this method have provided positive results and collision mitigation  but other institutions
such as nasa and the faa are also developing their own policies via different methods  therefore resulting
in potentially different logics 
it is expected that eventually all uavs will include collision detection and mitigation but it is not
expected that only one method of mitigation will be used  since it is proposed that a variety of logic will
be implemented on various uavs it is important to have a method to coordinate all of the different logics
to ensure that even with different logics  the uavs are avoiding collision  this is not needed with large
aircraft because during large aircraft encounters the same logic is always used and during large aircraft
encounters the maneuver commands are in the vertical plane and therefor the maneuver directions should
always be opposite or neutral  one aircraft goes up and one aircraft goes down or only one aircraft maneuvers
up down   when maneuvering in a horizontal plane  the maneuver directions are not always opposite  an
example of this problem is better outlined in figure    one way to address the problem for uavs is to create
a standard coordination table that can be queried before any maneuvers are performed 
a coordination table is a mapping of uav headings and positions to the safe maneuver pairings  same
heading  opposite heading  neutral heading   this project is the first attempt at making a coordination
table for uav encounters and serves as a proof of concept  this project creates coordination tables for dual
uav encounters by running various policies through multiple encounters  quantifying the optimal policy per
encounter  combining the optimal policies into a super policy using nearest neighbors  and uses the super
policy to solve for coordination commands 

  of  
american institute of aeronautics and astronautics

fifigure    vertical vs  horizontal maneuvers 

ii 

dataset

policies  metrics  and encounters were needed to create a coordination table  the mdp in     defines
states s   actions a   a reward function r   and a transition function t   the mdp is solved with value
iteration and the optimal action is solved for using the bellman equation 
 
 
x

 
  
u  s    max r s  a   
t  s   s  a u  s    
   
aa

s  s

the reward function penalizes conflict  minimum separation  closeness  and actions  to create an assortment
of logics  the weights of the different penalties were adjusted and the corresponding policy was found 
example policies are shown in figure    these plots represent what the labeled uav  located at the
centroid with the heading as displayed by the center arrow  would be commanded to do if the other uav
was located at any position on the plot  with the heading as display by the top right arrow   the metrics used

 a  example good policy 

 b  example bad policy 

figure    example policies used in coordination table generation 
to determine the quality of a policy were safety and efficiency  a safer policy and therefore better policy will
result in fewer collisions and a more efficient policy will result in fewer aircraft commands during encounters 
it was important to have a variety of policies because it is unknown how good actual implemented logics
will be  to test the policies  they are ran on simulated encounters  for the experiments in this project     
encounters between two uavs were created using the generator in      all of the encounters are set up so
the initial conditions put the uavs on a collision trajectory 
  of  
american institute of aeronautics and astronautics

fiiii 

methods

creating a coordination table was a multi step process  to begin  the policy generator in     was used
to create    various of policies  using visual inspection and trial encounter simulations  six unique policies
were selected for experimentation  each of the selected policies were run through the same     encounters 
during each encounter  the safety and efficiency of the policy was recorded  the overall performance for
all     encounters for the policy was also recorded  for each encounter  the best policy was selected  the
best policy was defined as the policy that had the best safety  where ties were broken by selecting the most
efficient policy  where ties were broken by selecting the policy that had the best metrics for all     encounters
 safety always outweighs efficiency  
each policy is actually a set of commanded actions for specific nodes of a grid  the grid is seven
dimensional and for this project  only x position  y position  and heading were altered  the other components
are velocity and pilot response which were held fixed  a super policy was made on the same grid system 
the super policy was made using the encounter to optimal policy mapping  for each grid node of the
super policy  nearest neighbors was used to find the encounter with the closest initial position  the optimal
policy for the nearest neighbor encounter was the selected policy for the super policy grid node  in this
sense  the super policy is a combination of all of the policies  two example super policies are shown
in figure    the super policies are presented in the same fashion as the policies in figure    next  to

 a  example super policy 

 b  example super policy 

figure    example super policies 
convert the super policy into a coordination table  all of the actions were adjusted from bank angles to
pure directions  left  right  straight no command  the super polices from figure   are shown in pure
direction form in figure    in these plots  red is left  blue is right  and white is straight no command  this
matches the trends of figure   and figure    
finally  combining the ownship and the intruder policies  a coordination table was made  the coordination table shows when the ownship and intruder should perform a maneuver in the same direction  opposite
directions  or if at least one uav is commanded to go straight or no command 

  of  
american institute of aeronautics and astronautics

fi a  example super policy 

 b  example super policy 

figure    example pure direction plot where red is left  blue is right  and white is straight no command 

iv 

results and discussion

the coordination tables for the policies presented in figure   and figure   are presented in figure    in
these plots  red is opposite headings  blue is the same heading  and light blue is at least one aircraft has a
neutral heading command  straight no command   this first cut at a coordination table is promising  to
begin  for the initial investigation  the regions that have the same headings and regions that have different
headings are mostly as expected  when the uavs are going generally in the same direction  the maneuvers
are usually in opposite directions  when the uavs are going generally in the opposite directions  the
maneuvers are mostly in the same direction  further  since both uavs in the experiments were set to have
the same velocity  the region where at least one uav has a neutral maneuver command is logical  the neutral
region is of particular interest for future iterations  when creating the initial coordination tables the main
concern was on when the maneuvers for each uav should or should not match and therefore  the neutral
maneuvers were not really considered  in exploring the coordination tables  it has also become apparent
that there needs to be a way to communicate how to respond to neutral actions  also  as anticipated  many
of the coordination tables are symmetric or trend towards a line of symmetry 
looking at the policies  there are some other inconsistencies  two are shown in figure  a  first  not
all of the policies are symmetric  second  some of the maneuvers are opposite of what is anticipated  it is
expected that both the unsymmetrical nature and deviation from anticipated results are due to the state
space discretization and the limit of encounters used in the nearest neighbor selection of policies 

v 

conclusion and future work

the work for this project is a proof of concept for a larger research project that i am working on 
this project successfully showed that a coordination table can be created and has exposed areas that need
improvement  to begin  all of the created policies could be run for the encounters to make sure the optimal
policy was always selected  if deemed necessary  additional policies could also be created  further  all of
the policies should be run on more encounters  that are more diverse  currently  the method that     uses
to create an encounter initializes the uavs so that a collision is possible at the center and ensures that the

  of  
american institute of aeronautics and astronautics

fi a  example super policy 

 b  example super policy 

figure    example pure direction plot where red is left  blue is right  and white is straight no command 

encounter does not begin in a collision  the encounter generator tends to create a circular region of starting
positions  the starting positions for the current encounters used are shown in figure    future encounter

figure        encounter starting positions used for experiments 
generation will add diversity by changing the location of collision  enabling additional initial starting positions
that will benefit the nearest neighbor calculation hopefully enhancing the super policy 
if the additional policies and encounters do not alleviate the unsymmetrical trends and explain the
unexpected results  further investigation will be conducted  the initial investigation would look at the
effects of the state space discretization  currently  to contain the number of overall states  the state space is
discretized which potentially losses some of the information about the intermediate states not depicted on a
grid node  the discretization can be adjusted to better understand the inconsistencies  once these concerns
are addressed the coordination table effectiveness should be measured 
to understand how the coordination table preforms  simulations will be run where the uavs follow
different policies and query the coordination table before maneuvering  this process has two steps  first 
currently there is no framework to encounter simulations with different policies  second  there needs to
be a method to query the coordination table  when the coordination table is queried there needs to be
a process established for when maneuver pairs do not match what the coordination table dictates  once
it is established that coordination tables can be used to increase safety  they will be expanded to address
encounters with more than two uavs 

  of  
american institute of aeronautics and astronautics

fireferences
    h  y  ong and m  j  kochenderfer  short term conflict resolution for unmanned aircraft traffic management  proceedings
of the   th digital avionics systems conference  dasc   sep       

  of  
american institute of aeronautics and astronautics

fi