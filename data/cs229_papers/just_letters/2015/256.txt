scanning probe microscopy based on reinforcement learninga 
eric yue ma   b 
 

department of applied physics  stanford university  california  us

 dated     december      

keywords  machine learning  neural network  reinforcement learning  scanning probe microscopy
scanning probe microscopy  spm  has become
an indispensable tool for characterizing the
nanoscale  the core of its working principle involves raster scanning a sharp tip in contact with
a sample of interest  while maintaining a constant
tip sample interaction  this is achieved via standard proportional integral  pi  feedback in virtually all industrial implementations  here we explore    the possibility of using machine learning
to automatically find the optimal pi parameters
and    feedback based on a markov decision process  mdp  reinforcement learning model  free
from any explicit pi feedback  pi parameters
automatically selected by a neural network based
approach achieve excellent feedback performance 
the mdp model is shown to perform basic feedback  but with inferior performance than that of
pi feedback  possibly due to the intrinsic unpredictability of sample topography  these proofof concepts open up new opportunities for spm
feedback optimization under a wide range of conditions 

i 

introduction

scanning probe microscopy  spm  characterizes extremely small  often down to subatomic scale features 
and has become an indispensable tool for a growing community of scientists and engineers from condensed matter
physics  material science  quantum chemistry  molecular
biology and semiconductor industry  in an spm  a sharp
tip is brought close to the surface of the sample of interest  the interaction between the atoms on the tip
apex and those on the sample surface yields some measurable quantity  e g  the deflection of a micro cantilever in
atomic force microscope  afm   or the quantum tunneling current in a scanning tunneling microscope  stm   
through feedback on this quantity while moving the tip
on the sample surface in a raster scan fashion  a constant tip sample interaction is maintained  and high spatial resolution topography images can be obtained  many
other electrical  magnetic and chemical properties can be
simultaneously measured with specialized tips 

a  cs   

project final report 
mail  yuema stanford edu

b  electronic

to the best knowledge of the author  all current
commercially available spms utilize some variation of
a proportional integral  pi  feedback control scheme
 the derivative  d  in a standard proportional integralderivative  pid  feedback scheme is usually not used due
to the susceptibility to measurement noise   while the
pi feedback can handle most scanning conditions given
the optimal parameters  finding those parameters is often tedious and requires substantial empirical knowledge 
moreover  the optimal values can be drastically different for different tip type  sample surface roughness and
even scan speed  automatic  or semi automatic tuning
of pi parameters in an spm setting has previously been
proposed  based on the standard ziegler nichols or relay
method     but has not been widely available in common
spms 
here we aim to explore the possibility of using machine learning to improve the performance  robustness 
and ease of use of an spm  we aim to achieve two progressive goals     automatic tuning of pi feedback parameters using machine learning algorithms  and    a mdpbased reinforcement learning model capable of pixel bypixel feedback  free from an explicit pi feedback scheme 
its performance will be compared to the standard pi feedback with optimal parameters  preliminary conclusion
on the feasibility  advantages and disadvantages of such
mdp model will be drawn based on the results 

ii 

methods

a 

spm simulator

a simple but realistic spm simulator is implemented in
matlab  the state of the simulator is described by just
two quantities  zs is the height of the sample surface at
the point currently underneath the tip  measured with
respect to a fixed reference  zt is the height of a fixed
part of the tip  measured from the same reference  if zs
and zt are given  the simulator calculates the tip sample
interaction signal s which only depends on the difference
between zs and zt   s zs   zt     s zt  zs    fig   a  b  
the working principle of an spm is as follows  zs is
what we want to measure but it cannot be measured
directly  zt is measurable and controllable  usually via
a piezoelectric device  if s zt  zs   is a constant  zt 
zs is also a constant  when the tip moves across the
sample surface  zs changes in an unknown way according
to zs  x  y   if we control zt to maintain the value of s as

fi 
b 

pi feedback and automatic parameter tuning

we implement a pi feedback control with manually
adjustable parameters to demonstrate its behavior first 
in this model  the tip raster scans on the sample surface
in discrete time steps  t   with the following update rule
for zt   given parameters  p  i  and the set point s   
 i 

 i  

zt    zt

  p  s  s      i

t
x
 s  s   t 
 

fig      a  illustration of zs   zt and s  in this illustration an
atomic force microscopy  afm  configuration is used  where
s is the deflection of a micro cantilever with the tip at its
end  measured by the reflection of a laser beam  when the
tip is not in contact with the sample  there is   deflection 
 b  when the tip comes in contact with the sample surface 
the cantilever is deflected  thus s increases  in this case to a
predefined set point s     c  if s is maintained at s  while the
tip scans across the sample surface  zt  x  becomes a faithful
representation of zs  x   the feedback is never perfect  and
can be evaluated by the feedback error  s x   s    

close to a constant s   the set point  as possible  we
would have zt  x  y    zs  x  y    constant  for all x  y  zt
would thus contain all the information we want  usually
we are only interested in the variation of zs   and do not
care about the constant   fig   b  c  
for simplicity we model s zt  zs   with the configuration of an atomic force microscopy  afm   fig      in
which
s zt  zs     max    a  zt  zs    z     a      
here z  is the difference in height between the tip and
the sample when they just come into contact  the above
formula is from the fact that  for small deflection  the
change in laser beam position s is linearly proportional
to  zt  zs    which is in turn proportional to the tipsample contact force  since the cantilever is a linear spring
for small deflection   the deflection is obviously   when
the tip is not yet in contact with the sample  because
we are free to choose the reference point for zt   we can
set z  to be    also for simplicity we can assume all
the quantities are already properly non dimensionalized 
and set a        therefore the simplified formula for s
becomes
s zt  zs     max     zt  zs    

note that while in many common pid controllers the
feedback output replaces the previous value  in an spm
it is usually added to the previous value  to simulate the
real world behavior of pi feedback  a small white noise
term is added to the output of the simulator  i e  s  
s zt  zs       where  is a random variable with uniform
distribution between       and  controls the magnitude
of the noise 
now we make a few assumptions to simplify our simulation  first  we will only use  d line scans instead of
full  d scans to evaluate the performance of pi feedback
 i e  tip only moves in one direction x   this is because
 d scans are simply arrays of individual  d scans  second  we assume that each line scan takes   second  and
our pi controller operates at     hz  therefore t    
millisecond and the number of pixels in one scan is    
 reasonable values for real spms   third  we fix s  to be
  and the noise magnitude  to be      this roughly corresponds to setting the tip sample contact force at   nn
 common practice in real experiments  with a     nn
readout error  typical value  limited by the instrument  
results with a randomly generated  d sample topography and arbitrary combinations of pi parameters can
now be generated by executing the pi feedback within
the simulator  these results are used as the data set to
evaluate the performance of the feedback  brutal force
exploration of the parameter space is carried out to identify whether a globally optimal parameter combination
exists and whether there are multiple local minima 
we then attempt to find the optimal pi parameters
by fitting a small number of data points with a neural
network with one hidden layer and      hidden sigmoid
neurons  first in the full parameter space  and then within
the perimeter of the global minimum of the first step 
back propagation with bayesian regularization and      cross validation is used for training  finding the minimum of the fitted smooth function is trivial 
c 

mdp based feedback

finally we build a reinforcement learning model based
on mdp for pixel by pixel control of tip sample interaction without any explicit pi feedback  a discretized state
 s  s    the value of error  and action  zt   how much
and what direction to move the tip for the next point 
space is used  initially the transition probabilities are

fi 
assumed to be equal  and the value function v and policy  random  each line scan on a randomly generated
 d sample topography is a trial  after which the mdp
is updated  a new optimized value function v  is then
obtained via value iteration  which implicitly defines the
new policy  which acts greedily on v   

iii 
a 

results and discussions
pi feedback with manually adjustable parameters

results with four different combinations of  p  i  are
shown in fig     here zs  x  is a smoothed square wave
with moderate height  representing the cross section of
e g  a common optical grating  intuitively  if  p  i  is too
large  the tip tends to overreact and starts to self oscillate
 this is the case even if we do not add the noise term   if
 p  i  is too small  zt cannot follow zs   a moderate  p  i 
results in zt being a reasonably faithful representation of
zs   we are not going to discuss in detail the strategy
of tuning  p  i  manually  because our goal here is to
enable auto tuning of  p  i   even without much a priori
knowledge or experience 

b 

automatic tuning of pi parameters

one would naively think that it is a straightforward
optimization
p problem with the sum of absolute error
j p  i    i  s i  s    being the objective function  usually we can tolerate sharp but narrow spikes  but not
moderate and broad peaks in feedback error  thus absolute value works better than squared   and there is no
need to invoke any machine learning  however  the objective function cannot be written in closed form  and brutal
force calculations with the simulator  fig     show that
although a robust global minimum exists  the objective
function is non convex due to the existence of numerous
local minima that depend on the detailed topography
 fig   b  
we propose to implement a regression with a moderate
number of points    p  j    i  j     j p  i  j      each j from
a randomly generated line topography  zs    and then find
the global minimum of the fitted function j   p  i   one
can iterate in an increasingly small parameter space if
necessary  the motivation is two fold  first  in a real
experiment it is impractical to try hundreds of thousands combinations to map out the full parameter space
as in fig   b  it is however easy to do a  d scan with
a few hundred lines with different parameters for each
line  second  by fitting with a relatively small number
of points from randomly generated lines  we may avoid
the shallow  small scale and detail dependent local minima and obtain a function j   p  i  that is more suitable
for finding the global minimum  in a real sample there
are always random topography variations between lines 

fig     results of pi feedback simulation with different combinations of  p  i  values   a  b  if p and or i is too large 
the tip will self oscillate  with characteristics depending on
the specific combination   c  if p and i are too small  the tip
cannot track the sample surface well   d  an optimal combination of  p  i  makes zt a faithful representation of zs   zt
is offsetted for ease of comparison  note that the feedback
error is s  s  instead of zt  zs   the latter is unknown in real
experiments 

fi 

fig     the true topography  zs    a  and log sum error vs 
 p  i  plot  b  for two randomly generated lines  the other
parameters are identical to those used in fig     the plots in
 b  are     by     spanning a large parameter space  note
that log sum error function is non convex in small scales  with
local minima depending on the details  whereas the global
minimum is robust and well defined in large scales 

which will serve the same purpose as the randomness introduced in this simulation  
we use a neural network with one hidden layer for the
regression  neural networks are universal function approximators and are particularly suited for fitting highly
nonlinear functions  the specific procedure is as follows 
first      randomly generated line topography  zs   and
randomly picked  p  i  are fed into the simulator with
pi feedback  the feature matrix is simply all the  p  i 
values  the simulator returns the log sum error  which
is recorded in the target matrix  both matrices are then
used to train a neural network with one hidden layer
and    hidden neurons  using back propagation  bayesian
regularization on the weights  and       cross validation
 fig   a  b   the global minimum of the fitted function
is  easily  found  and a second iteration finds the precise
minimum with     additional data points and a second
neural network with   hidden neurons  fig   c  d   overall the neural network fitting agrees well with the true
value in fig   b   p  i  selected this way results in
excellent performance  fig   e  
we emphasize that such auto tuning procedure could
be highly practical and useful in real experiments  scanning at   hz  the     lines needed for a good result only
takes    minutes  the time for training and minimum
finding are negligible in comparison   a very reasonable
time for a typical hour long spm session  in addition 
the optimal  p  i  for different tip type  controller setting 
scan speed and sample roughness can be very different 
but by obtaining training examples under the exact same

fig     automatic pi parameter tuning based on neural network   a  the neural network consists of one hidden layer
with      hidden neurons   b  typical training curve with
    data points and    hidden neurons  back propagation
with bayesian regularization and       cross validation is
used for training   c  regression result with     data points
 grey  and    hidden neurons  showing good agreement with
those in fig   b   d  second iteration centered around the
minimum of the first pass result  with     data points  grey 
and   hidden neurons  the fine minimum is labeled by the
red cross   e  scan performance on a randomly generated
line topography with optimal  p  i  from  d   zt tracks zs
very well 

fi 
condition as real data taking  the selected  p  i  is guaranteed optimal for the specific measurement 
we note that several other methods  e g  biased random walk  may also overcome the many local minima to
arrive at the global minimum  likely at a faster speed 
the sampling fitting method may be more robust overall  but a real world implementation is needed to evaluate
and make conclusive comparisons 
c 

mdp based reinforcement learning feedback

in this section we explore the possibility of using reinforcement learning to realize pixel by pixel feedback control without any explicit feedback model  e g  pid feedback   at a high level  it is similar to the invert pendulum
problem  the physical dynamics is in fact simpler  as no
derivatives of location coordinates are involved  however
the random variation of zs between pixels  time steps 
may pose a significant challenge to efficient learning  ideally the model should learn about both the tip sample
interaction and the feature of zs   to achieve good tracking 
the mdp model is setup as in table i 
table i  mdp setup 
s

a

error  s  s    zt
discretized discretized

psa



r

depends on
tip sample
         s  s   
interaction
and zs

the implementation of the mdp follows the description in methods  a decision  how to update zt   is made
according to current state  error value  and policy at each
pixel  the mdp and the associated optimal value function and policy are updated after each complete line scan 
the typical results with the states being s  s         
discretized into    states  and actions being zt        
discretized into    states  and        are shown in fig 
  
it is evident that in general the model does track zs  
and the error does get smaller after more trials  but
the learning is quite stochastic and seems to stop after
a moderate number of trials  fig    a    although an
optimal performance has not been achieved  compare the
bottom panel in fig    d  with that in fig    e    having
more states in state or action space  tuning  or going
to a continuous value state space does not qualitatively
solve the issue  and more often makes the learning even
less robust 
one of the major causes of the non ideal performance
is likely the randomness in zs   going back to the inverted pendulum problem  it is obvious that if at every
time step  a random offset of pendulum angle or cart position comparable to the actual increment due to physics is
added  the mdp will not be able to learn or perform well 

fig     typical results with mdp based feedback   a  a
typical learning curve   b  a randomly generated  d zs map 
as the true value topography for the mdp model to track 
it contains     lines  hence     trials   c  the resulting zt  
 d  the line plots at various stages of the learning process  as
indicated by the arrows in  c   inset shows the pixel by pixel
behavior of zt  

similarly in the spm case  the error due to the unpredictable zs at the current point is comparable to that due
to tip sample interaction and the action taken in the last
point  therefore instead of learning about both the tipsample interaction and the feature of zs   the model ends
up learning about neither  a possible way to improve
is to learn at a single point first  but doing so would be
equivalent to measuring the tip sample interaction and
feed forward in subsequent scans  the potential flexibility to accommodate different scan speed and sample feature is also completely lost  therefore the lesson learned
is that an mdp based reinforcement learning model cannot learn well in a system with excess noise due to the
intrinsic randomness in the transition probabilities  e g 
stock market   certain form of partially observed mdp
 pomdp  may mitigate the problem  but is beyond the
scope of this work 

fi 
iv 

conclusion and future work

needed 
  k 

pi feedback is still the predictable  robust feedback
method for spm  a simple neural network fitting of a few
hundred line scans implemented in this work can reliably
find the optimal  p  i  parameters in a large parameter
space  making it practical for a wide range of tip sample
conditions 
a simple mdp based model on the other hand  does
not offer the same level of robustness and performance 
more advanced reinforcement learning model might be

h  ang  g  chong  and y  li  pid control system analysis  design  and technology  control systems technology  ieee
transactions on                   
  x  zhou  x  dong  y  zhang  and y  fang  automatic tuning
of pi controller for atomic force microscope based on relay with
hysteresis  in control applications  cca    intelligent control  isic        ieee  ieee        pp           
  d  y  abramovitch  s  hoen  and r  workman  semi automatic
tuning of pid gains for atomic force microscopes  asian journal
of control                   
  for the more technical minded  this is equivalent to making all
the location values in nm  nanometer   s in nn  nano newton 
and the spring constant of the cantilever   n m 

fi