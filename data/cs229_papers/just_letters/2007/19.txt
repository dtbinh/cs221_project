automatic construction of cell genealogical histories
matt jachowski
rajesh ranganath
introduction
many research projects in the biological sciences have benefited from software and hardware that allows the
automatic collection of large amounts of data  however  the full benefits of having this wealth of new data remain
unrealized as much tedious analysis is still done by hand  stem cell research is one sub field suffering from this
problem  stem cell researchers have collected time lapsed images of microwells populated with dividing stem cells 
this data has allowed new analysis of stem cell division patterns  the data promises many new discoveries  but
these discoveries are bottlenecked by the lack of automatic methods for generating cell genealogical histories 
initially  it may seem that an off the shelf method to identify cells  such as a binary svm  would be applicable to
this problem  but the lack of persistent features and the difficulty of solving the overlap problem using joint
classification leaves this method infesable to solve the cell genealogical history problem  therefore we propose a
more complex approach that hypothesizes cell count sequences  merges the hypotheses using a conditional random
field  and finally establishes correspondence throughout time using a kalman filter 
methodology
we achieve automatic construction of these cell genealogical histories from movies of dividing cells  our technique
involves five steps  in the first step  we apply the hough circle transform to identify regions highly likely to be cells 
next  we apply two algorithms  local maximum finding and weighted k medoids clustering algorithms  to
estimate cell counts  then  we input these two sequences of cell counts as observed variables for a conditional
random field to generate the most likely sequence of cell counts  given these determined cell counts  we match the
positions determined by reapplying the local maximum finding and weighted k medoids algorithms  finally  we
construct cell tracks by establishing interframe cell correspondence with a kalman filter 
identifying cell regions
each movie frame that we consider contains a microwell and
some number of cells contained within the well  to identify cell
regions  we first apply a bottom hat filter to the image to isolate
the microwell and cell boundaries as in     
in early stages of the project  we then proceeded by isolating the
 b 
 a 
microwell boundary  easily achieved through segmentation or
hough ellipse detection  and removing it from the image frame 
figure     a  original image   b  bottomhowever  we found this approach to be problematic as  in many
hat filtered image 
images  cells hug the wall of the microwell  causing these cells
to be either partially or fully removed by the microwell removal process 
by applying a hough circle tranform to detect cells directly from the filtered image  we found that we could achieve
reliable and robust cell region identification without explicitly removing the microwell  given an approximate range
of cell radii  which can be learned from a few expert labeled cell instances  we apply a series of hough circle
transforms for several radii in this range  we then sum the accumulators resulting from each of these transforms 
the resulting accumulator exhibits strong peaks at cell centers  after smoothing the accumulator  we threshhold to
leave only those regions most likely to be cell centers 

fifigure    accumulator resulting from hough
circle transform being applied to above image 

figure    smoothed and threshholded
accumulator  spikes represent likely cell regions 

estimating cell counts
given these likely cell regions  we then estimate cell counts with
two different clustering techniqes  the first technique finds local
maxima in the smoothed and threshholded accumulator  the
second technique repeatedly applies the weighted k medoids
clustering algorithm to the smoothed and threshholded
accumulator until it finds a reasonable k 
the k medoids algorithm is related to the k means algorithm 
differing in an added requirement that cluster centers be cluster
points  given k  the algorithm finds k clusters and the point
within each cluster with the minimal distance to all points within
the cluster  since each cluster point has a weight  its
accumulator count  and higher weights correspond to higher
likelihood of points being cell centers  we employ a weighted
version of k medoids to encourage k medoids cluster centers to
converge on cell centers  to optimize the weighted k means
objective function subject to the constraint that the centroids
belong to the set of input points  we use the partitioning around
medoids algorithm     finally  since k is unknown  we
implement an iterated process  where we first hypothesize one
cell  then two cells  and so on  until some value of k results in the
algorithm assigning cluster centers that are closer than the
approximate diameter of a cell  since two cell centers must be at
least one cell diameter apart  we can reject this clustering and
settle on k   as the probable cell count 

 a 

 b 

 c 

 d 

figure    estimates of cell counts positions
from the local maxima finding algorithm
 a b   and the weighted k medoids
algorithm  c d    a  and  c  are examples of
when the algorithms work well   b  and  d 
are examples of when the algorithms are
lacking 

conditional random field
given the cell counts estimated by k mediods and the local maxima finding algorithms  it may seem plausible to
simply use the cell count estimates of one of the previous frames to localize cells  but this leads to avoidable errors 
consider figures  b and  d where local maxima finding and k mediods fail to identify correct cell counts due to
hough responses created by the microwell boundary  another possible avoidable error can occur when one
technique outputs the correct cell count and the other fails to  due to assumptions made in each algorithm  the
combination of these errors can lead to different inaccurate sequences of cell counts from each algorithm 

fito produce a more accurate sequence of cell counts we implemented a first order conditional random field where
each state represents a fixed cell count  we use the two hypothesized count sequences returned by k medoids and
the local maxima algorithm as the observed variables of our model  the mathematical model of our conditional
random field is given below 

where x is the observed input   is the parse  a sequence of states   and fj is the jth feature
our condtional random field had two types of features  type   features and type   features  type   features are
functions of multiple sequences of observed variables  while type   features are functions of only one  the score at
time i is boosted by type   features if all the observed cell counts are equal to i  type   features are defined by the
following formula 
 i  i     x    i   i       i     
where  is the expected value of the observed sequence with respect to a normal distribution centered at i  and p is
the normal pdf 
using our crf model with the two hypothesized cell count sequences  we implemented the viterbi algorithm to
find the most likely state parse given the observed variables  since our states represent cell counts  the viterbi
algorithm output for the each position represents the most likely cell count 
finding cell centers given fixed cell counts
given the cell counts for each frame as determined by the crf  we reapply the local
maxima finding and weighted k medoid algorithms to pinpoint cell centers  in the case
of the weighted k medoid algorithm  the benefit of predetermined k is clear  we no
longer need to iterate through possible values of k  however  it is harder to force the
local maxima finder to return exactly k local maxima for any given frame  we resolve
this by applying the following method  if the result returns more than k local maxima 
pick the k points with the highest accumulator weights  otherwise return all of the local
maxima found 
we then apply the hungarian algorithm     to match the corresponding cell centers
from each algorithm  and output the single cell center in each pair with the highest
hough circle accumulator weight 

figure    the incorrect
cell counts displayed in
  b  and   d  have been
corrected by the crf 

error analysis  cell count and position error
we evaluate our cell count and position error on a     frame movie independent from the data used during the
project development  we define the overall cell count error to be the average of the per frame cell count errors  the
overall cell position error is calcuated as the average  over all frames  of the average cell position error in each frame
 in pixels  
cell count error  





cell position error  

counttrue i  countobserved i 
 

n frames  frame i  
counttrue i 

 
 

 postrue c  posobserved c   
n frames  frame i   n cells  cell c in
frame i  

ficell count error

histogram of per frame errors in cell counts      frame movie 
   

c rf m atc hedc enters

   

number of frames

   

method

c rf

weighted km edoid

   
l oc al m ax
  

weighted k  m edoid
c rf

  
  

loc al m axima

  
 

 

      

    

      

    

 

    

    

    

    

    

    

    

    

    

error bin

average per frame error in cell count

figure    cell count error is on the order
of      as expected  crf cell count
error is the lowest 

figure    a histogram of per frame cell count errors
shows that over half of the frames are labeled with
zero error in cell count 

method

the average cell count error is on the order of      as shown in figure    note that each frame in the     frame
movie analyzed had     cells  so any under  or over labeling  even if by one cell  had a signficant impact on the
error  as desired  the cell count error is smallest for the crfcell position error
determined cell counts  additionally  the cell count error for
the final cell finding algorithm  matching the results of the
local maxima finding and weighted k medoids algorithms
c rf m atc hedc enters
with pre determined k  is lower than either of the two
algorithms with unknown k  as shown in figure    over half
of the frames were labeled with zero error in cell count  and 
weighted kthe crf cell count eliminates the most egregious errors in
m edoid
the local maxima finder and weighted k medoids counts 
as shown in figure    the average cell position error is on the
order of   pixel  given that the cells are approximately  
pixels in diameter  and human labeling error is also on the
order of   pixel  the cell position labelings generated by our
method are excellent 

loc al m axima

 

    

    

    

    

 

    

average per cell error in position  pixels 

figure    cell position error is approximately  
pixel for cells with diameters of approximately
  pixels 

cell tracking and track merging

in the final step of the algorithm  we combine our cell position data to synthesize cell tracks through time  first level
cell tracking is achieved through use of a kalman filter      the state of cell i at frame k is given by 

 xki 
 i
y 
i
x k   ki  

 xk 
 y i 
 k
we observe cell positions  given by 

 x i 
z ik   ki  
 y k 

x ik  ax ik  w ik    

 

 
a
 

 


     

     
     

      

z ik  hz ik  v ik    

       

h  
        

w and v represent process and measurement noise drawn from gaussian distributions 

figiven a set of cell states for frame k    we calculate the cell states for frame k by applying the hungarian algorithm
to match observations in k with states from k    and then applying the appropriate kalman filter  any cells observed
in k   that are not observed in k are propagated according to the kalman filter prediction to get a probable location
in frame k  we allow such propagations to occur up to two frames in a row before we determine that a cell must
have died  this allows us to continue tracking a cell even if we fail to identify it for one or two frames  such a case
might occur when two cells temporarily overlap  or our method simply fails to identify the cell 
given these cell tracks  we then apply a higher level merging algorithm to merge tracks that represent the same cell
or descendents of the same cell  this algorithm determines a track label for each track based on its distance  in both
space and time  to other existing cell tracks  a typical result is shown in figure    the dataset we worked with was
entirely unlabeled  so figure   represents the result of our cell tracking and track merging algorithm applied to handlabeled cell position data 

figure    cell tracks generated from handlabeled cell position data  there are   parent
cells  one of the cells  red  divides  yielding
two children 

figure    cell tracks generated by our
algorithm  the plot correctly shows   parent
cells  and one of them  red  dividing  the plot
incorrectly crosses the green and blue paths 

conclusion
this paper details our technique for reconstructing cell genealogical histories  we accomplished this by first
identifying and accurately counting the cells  then using the counts to confidently localize the cells  given this data
we use the hungarian algorithm combined with a kalman filter to establish correspondence through time  our
method localized the cells accurately and produced promising cell histories as a final result 
moving forward we would ask the biologists to provide us with higher image and time resolution data to allow us to
leverage more complex techniques  such as inference on cell contour shape  to achieve more robust cell detection 
we would also like to incorporate the estimated cell positions into our crf to further improve our results  finally 
we would like to quantify cell histories and compare the results to published techniques such as     
references
    tracking stem cell genealogical trees in mircrowell ranganath and kakaradov  cs   b project      
    partitioning around medoids      
    hungarian algorithm matlab implementation by alex melin       
    kalman filter toolbox matlab implementation by kevin murphy       
    cell population tracking and lineage construction using multiple model dynamics filters and spatiotemporal
optimization  li  kang  kanade  takeo  proceedings of   th intl conference on miccai        pp          

fi