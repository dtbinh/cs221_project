ascertaining the relevance model of a web search engine
bipin suresh

abstract

we analyze the factors contributing to the relevance of a web page as computed by popular industry web
search engines  we also attempt to discover the underlying ranking model used by such search engines by
fitting known positive and derived negative examples for a set of queries 

introduction
as a marketing strategy for a web site s success  web site designers have discovered that ranking highly in
popular web search engines like google     yahoo     and msn live    has a large impact on revenue 
web search engines adopt a variety of features  like the page s link structure  description  site hierarchy 
freshness and pagerank  to rank pages for a given query  the score from the ranking function that a
search engine uses is hoped to be an approximation of the true relevance of the page  google claims it uses
about     such features    to come up with a final score  the entire set of features and their relative
weights  however  are left undisclosed 
consequently  the problem of what features to tune a page on to ensure it ranks well in these search engines
has turned into one of half guessing by industry experts    and adherence to generic guidelines   
published by the search engines themselves  search engine optimization  seo  has thus become a lucrative
venture  estimated to be      million in         
in this paper  we aim to determine the relative weights of these features by using a machine learned
classifier  our approach will be to model the ranking of a single commercial web search engine 
in section i  we do preliminary analysis of the data that we have procured  in section ii  we train a decision
tree based model to come up with a discriminator between pages that are ranked highly and those that are
not  purely on the features that we have chosen  in section iii  we try to make the decision boundary tighter
by contrasting the results of two popular search engines  and interpret the rules learnt in section v 

section i  dataset generation and analysis
dataset generation for the paper was obtained in two parts 
in the first part  we obtained pages that a current industry web search engine considers to be of good
quality for a certain set of queries  we did this by obtaining the top     web queries of the year      from
yahoo  buzz     and querying the search engine for the top    results for each query  this gave us      
pages which we shall henceforth consider to belong to the positive class 
in the second part  we extracted       random web pages from the open web directory dmoz     after
making sure that none of them belonged to the first class  we shall henceforth consider these to belong to
the negative class 
we then built a web crawler to crawl and extract information about the web pages  we also used the
yahoo  site explorer     which provides a means to collect information about the link structure of a page 
including the anchor text associated with each page  which is the concatenation of the anchor texts of all
links pointing to the page in question  

 

fifigure    in links
plot indicates that positive class documents are
connected to by a large number of other
documents 

figure    number of matches in anchor text
plot indicates that a large number of documents
refer to positive class documents with the queryterm as the anchor text 

in this paper  we attempt to completely characterize the relevance of a document as a function of its
primary attributes  primary attributes are defined to be those which a web site creator had control over 
entities such as the link structure and the content of the web page  we do not consider derived attributes
like pagerank  it is interesting to note that there are conflicting views of whether there is any discernable
correlation between the link structure of a page and its pagerank           there are two motivations
for this choice  one being the hope that we can describe a process for web page creators to improve their
rankings without having to resort to optimizing third party functions and  two  the fact that most of these
metrics are usually not made public by the commercial web search engines in any case 
before building a model out of the data set  we did some preliminary analysis to understand the nature of
the distribution of our features across the two classes 
we first define an out link to be any hyper link from the web page of interest to another uri on the web 
we also define an in link to be a hyperlink from any uri on the web to the web page  in our current
implementation  we do not differentiate between the source  or destination  of the out links  or in links  
internal links  links within the same website  are treated just as equally as external links  links to external
websites   figure     plots the distribution of the number of in links  the distribution seems to suggest
immediately the well ranked pages seemed to be better connected and recognized by other web documents 
for the next set of features  we first determined the following for every document that matched a query  the
position of the first occurrence of the query in the title and text of web page  the number of occurrences of
the query in the title and text of the web page and  the number of occurrences of the query in the anchortext associated with the web page   a value of    was assigned in case there was no match  
we have plotted the distribution of these features across the two classes in figure          and      the
number of occurrences of the query within the anchor text already seems to show a strong relationship with
the class of the document  the correlation is however not linear  pearsons correlation coefficient for the
data was a low       we will explore whether the relationship will be caught by our machine learned
model which we shall derive in the next section 

 

fifigure    first occurrence of the match in the
page title
plot indicates that negative class documents
usually dont match in the title of the page 

figure    number of occurrences of the match
in the page text
plot indicates that positive class documents
usually have quite a few matches in the body of
document 

section ii  classification
to discover an optimal discriminant rule for our dataset  we chose to train a decision tree based classifier
model  this model was chosen based on two reasons  because of literature hinting that web search engines
actually do use some form of decision trees to produce the final ranking functions     and  because of its
learning can be easily interpreted as human readable rules 
in the first experiment  we considered the following features 
    anchor text match  binary valued feature which indicates whether or not the query term is present in the
anchor text of the document 
    page title match  binary valued feature which indicates whether or not the query term is present within
the title tag of the pages html code 
    page text match  binary valued feature which indicates whether or not the query term is present in the
document text 
    in link count  number of documents linking to this web page 
    out link count  number of documents that this web page links to 
since the training sample was relatively small       positive class examples  and      negative class
examples   we chose to run a k fold cross validation process  with k     table     displays the recallprecision matrix from one of the folds 
the classifier performs reasonably  with a macro averaged recall of        and a macro averaged
precision of        
figure   shows the final rule learnt by the classifier  upon inspection  it is noticed that the classifier prefers
query dependent features  matches in various fields  to query independent features  like the connectedness
of the site  
considering how important the query dependent features seemed  we decided to explore a few more of
them  we introduced   more features to the set that we already had 
    page title firstocc  the position of the first match of the query term in the title of the document  it was a
  based system  where a value of   meant that the query term began at the very first position  a value of
   was assigned if there was no match in the page title 
    page title numocc  the number of times the query term matched in the title of document  a value of   
was assigned if there was no match in the page title 

 

fiprecision
     
     

positive class
negative class

recall
     
     

positive class
negative class

table    precision and recall for classifier based
on link and match features 

anchortextnumocc  
yes

yes

positive class

anchortextmatch

yes
yes

pagetextmatch

negative class

positive
class
no

pagetextnumocc   

yes

outlinkcount   

positive class

negative class

positive class

no

no

yes

yes

no

pagetextmatch

pagetitlematch

yes

no

recall
     
     

table    precision and recall for classifier based
on link and occurrence features 

pagetitlematch
no

precision
     
     

positive
class

anchortextnumocc   

no

positive class

no
yes

negative
class

positive
class

no

figure    decision tree with link and occurrence
features 

negative class

figure    decision tree with link and match
features 
    page text firstocc  same as page title firstocc feature  except that this time the matches were examined
in the page text 
    page text numocc  same as page title numocc feature  except that this time the matches were examined
in the page text 
    anchor text numocc  same as page title numocc feature  except that this time the matches were
examined in the anchor text 
we did not consider anchor text firstocc since the anchor text field was just a concatenation of all the
anchor texts of documents pointing to the page in question  and thus the first occurrence of a match in that
field wouldnt contain any useful information 
armed with these five new features  and the five from the previous experiment  we retrained the decision
tree 
the overall performance of the tree improved with these new features  as shown by the recall precision
matrix in table      the macro averaged precision and recall numbers improved to        and       
respectively 
the learnt rule was also updated  as depicted by figure    however  the general trend of the classifier
preferring query dependent features over query independent features still remained 

section iii  making the decision boundary tighter
having attained reasonable accuracies in the classification of well ranked pages of a search engine versus
randomly chosen pages  we attempted to make the decision boundary tighter  we did this by modifying the
data set  the positive class was  as before  the top    results for a given set of queries of a commercial web
search engine  the negative class however was changed to be the top    results for the same set of queries
of another web search engine which did not feature in the top    results of the first web search engine 
thus  the negative class had results which the first web search engine thought werent good enough  but the
second did 

 

fipositive class
negative class

precision
     
     

recall
     
     

pagetitlematch
no

yes

anchortextnumocc     

positive class

no

yes

table    precision and recall for google vs 
yahoo  search classifierer 

inlinkcout  

positive class

yes

inlinkcout       
yes

anchortextmatch
yes

negative class

no

negative class

no

negative class

no

positive class

figure    decision tree discriminating google
and yahoo  search results  
in our experiments  we used google as our primary search engine  and yahoo  search as our secondary
search engine  we then repeated the process outlined in sections i and ii to train a decision tree classifier
on the data set  table   shows the precision and recall of the classifier  while figure   shows the actual rule
learnt 
section iv  error analysis
though the classifier built was able to recall documents of the positive class with good accuracy  it seemed
to not able to distinguish the negative class examples from the positive ones  we studied the misclassified
negative class documents  and found that they were indeed a part of googles result set  but ranked below
position     the average rank of the misclassified negative class documents in the google result set was
    this could explain to some extent  why the classifier misclassified it in the first place 
section v  interpretation of learnt rules
studying the rules output by the decision tree gives us some insights into what the rules used by
commercial web search engines could be  it seems apparent  in all our experiments  that query dependent
features like matches in various fields override query independent features like the websites linkage  and
as a consequence  perhaps pagerank   this makes intuitive sense  having a high pagerank does not mean
that the page is good for all queries 
furthermore  matches in different contexts are weighed differently  with the title of the web page being the
most important to the actual text of the web page being least important  anchor text seems to be important
too  but as noted by the anchor text numocc feature  a large number of votes need to be cast in terms of
referrals for the anchor text to be significant 
the decision rule learnt by training on the google yahoo  data set from section iii is similar in spirit to
those learnt from section ii  an interesting insight into the differences between google and yahoo  search
however  seems to be that google is stricter on pages that have a lot of in links but otherwise dont match
the query  possibly to counter spam pages that harvest links  
conclusion
in this paper  we analyzed features used by commercial web search engines  and their effects on the
computed relevance  we were able to establish relationships between some of these features and the rank
bestowed upon them 
we also built a model of these features which reflects the underlying model used by these commercial web
search engines  in doing so  we were also able to establish that query matching features were deemed more
important than query independent features like the link attributes  and that matches in fields like the title
were more important than matches in fields like the page text 
the difference in two commercial web search engines  google and yahoo  search  hinted that thought the
two search engines produce quite similar result sets  google may be fighting spam pages which use linkharvesting harder than yahoo  search is 

 

fireferences
    http   www google com
    http   www search yahoo com
    http   www live com 
    google keeps tweaking its search engine   new york times  june  rd     
    http   www seomoz org article search ranking factors
    http   www google com support webmasters bin answer py answer       hl en
    http   www sempo org learning center research
    http   buzz yahoo com
    http   www dmoz org
     http   sitexpolorer search yahoo com
     ding et al  link analysis  hubs and authorities on the world wide web
     pandurangan et al  using pagerank to characterize web structure
     friedman  j  h   stochastic gradient boosting     feb      a 
     friedman  j  h   greedy function approximation  a gradient boosting machine    march     b 
     zhu  ji  rosset  saharon  zou hui  hastie  trevor  multi class adaboost   jan       
     ping li  christopher j c  burges  qiangwu learning to rank using classification and gradient
boosting
     zhaohui zheng  hongyuan zha  tong zhang  olivier chapelle  keke chen  gordon sun a general
boosting method and its application to learning ranking functions for web search

 

fi