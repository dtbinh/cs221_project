predicting tastes from friend relationships
chris bond and duncan findlay
december         

 

introduction

of obesity through social connections  researchers
found there is indeed a significant correlation between
social proximity and the spread of obesity  and that
the effect becomes insignificant after three degrees
of separation  the obesity researchers used logistic regression to predict the obesity of one subject
as a function of several variables  including the obesity of another subject  notably  they measured the
strength of the social influence factor by running their
regression both on the true social graph and another 
fabricated graph with the same topology and overall
incidence of obesity  but the incidences randomized 
if there were no social factor  they posited  the results of both runs should be the same  this study
also found that only same sex friendships predicted
obesity  and that if the friendship was not mutual
then it only predicted obesity for the participant who
recognizes the friendship 
in another study      researchers investigated
whether or not tagging in flickr displayed signs of
social influence  they looked at whether or not there
is a correlation between tags from one user to the application of tags from another user  although they
found there is indeed such a correlation  they did
not study the predictive power of social connections 
they used the same shuffle based test as the obesity
study to test how their model compared to a random
social graph  since this paper dealt with a directed
graph  they also compared the performance of their
model against its performances on the test data with
graph edges reversed 

in the last few years  online social networks have become an important part of peoples lives  they have
made data describing the connections between people
more accessible than it has ever been in the past  in
light of this new technology  we can now explore the
predictive power of social data 
in this paper  we present a method to predict target
variables that describe individuals based upon their
relationships to others and knowledge of the target
variables for some of those other individuals 
in the next section  we do a survey of the previous
research on using social graphs as predictive instruments  we then discuss in section   how we apply
machine learning to this problem by constructing an
appropriate support vector machine  in section    we
describe how we obtained test data from the facebook api     as well as the features and target variables that we used  in section    we analyze how our
algorithm performs when trained with the facebook
data using ten fold cross validation 

 

prior work

we found relatively little prior research on how social
connections can be used to predict tastes  most prior
work on social networks deals with finding cliques
and quasi cliques within social graphs  which is an
interesting but different problem  however  some of
these studies investigated the use of kernels for analyzing social graphs  which is relevant to our research 
in one paper      researchers investigated the use of  
preliminaries
kernel based distance for clustering a medieval peasant society and found that it did provide coherent the friend matrix f   given by     is an adjacency
clustering  they used the diffusion kernel  which is matrix for an undirected graph of friendships 
the discrete solution of the heat equation  we will

describe the diffusion kernel further in section   
  if users i and j are friends
fij  
   
we found one significant study on social influence 
  otherwise
albeit outside the realm of internet social networks 
since we want to make predictions solely based on
in this study      researchers examined the spread
 

fiunderstanding of the friend matrix  we cannot use
algorithms that require explicit representation of features for each training example  we need to use an
algorithm that requires only a notion of comparison
between two examples which are  in this case  nodes
in our friendship graph  thus we decided to use a
support vector machine  svm  method since these
tend to perform well for high feature models and allow us to use the kernel trick 
the difficulty lies in choosing a kernel function that
provides a notion of relevance or similarity between
users derived solely from the  complete  friend matrix  we need to choose a kernel function that appropriately exploits the friend relationships  since
f is not guaranteed to be positive semi definite  we
must find a function of f that forms a valid kernel 
and has the properties we desire 
the first kernel we tried was a very simple one 
as suggested in      we calculated the square of the
friend matrix  the square transformation   this
forces the matrix to be positive semi definite  and the
entries happen to correspond to the number of links
between users of length    i e  in terms of friends of
friends  
the second kernel we tried was the diffusion kernel  which was used with some success in     and described with greater detail in      the diffusion kernel
involves defining the laplacian of the friend graph as
shown in      and taking its matrix exponential to
define a kernel as described in      because it can
be expensive to compute the matrix exponential of a
large matrix  we optimized this by diagonalizing the
matrix by computing the eigenvalues and eigenvectors  as shown in      and using this representation
to calculate the kernel for different values of  much
more quickly  as shown in     

fij
if i    j
p
lij  
   
f
if
i j
k ik

 

k   el     r

   

l   u u  

   

k   u e u  

   

straightforward as one might expect  we first collected a small list of groups from a random set of
users whose profiles we could access  we requested
a list of users who were members of each of these
groups and also affiliated with the san francisco network  we then requested data for each of the possible
n n  
friend relationships  excluding users for whom
 
we could not determine friend relationships  due to
privacy constraints  or because they had no friends
among the users queried   lastly we fetched the accessible profile information for each user 
the facebook api only allows you to check
whether two specific users are friends  there is no way
to request the friend list of an arbitrary user  this
means that we need to independently discover both
users before determining if they are friends  on the
one hand  this seems like a disadvantage because it
means well have incomplete friend relationships with
which to train our model  on the other hand  it also
means our training data will be more representative
of the entire social graph  rather than being an arbitrary subgraph 
using the group based technique  we collected a
data set of      users  unfortunately  this proved to
be too much data to process in a timely manner  so we
deleted users that had less than    friends from our
set in an attempt to make the eigenvector calculation
more tractable  this left us will      users  we will
call this data set the trim set 
we collected another set of data by doing a
breadth first search of friends starting at one of the
authors  using the web interface  we stopped after
collecting data for      users  one consequence of
this technique is that any two users in this data set
are separated by a very short number of links  so it
provides an interesting contrast to the other data set 
we will refer to this data set as the  k set 
figure   shows the number of friends per user in
each data set 
we should note that neither of these techniques
provide a particularly random sample of users because they are heavily influenced by the seed
groups  in the first set  or by the starting user  in
the second set  
as target variables  we used whether users     are
interested in music      are single  and     were
born after       the distribution of positive and negative examples for each variable is shown in tables  
and   
we used    fold cross validation to train and test
our support vector machines for each data set  and

experiments

because of the numerous privacy restrictions built
in to the facebook api  data collection was not as
 

fi k set

   

trim set

  
  
  
frequency

frequency

  
  
  

  
  
  
  

  

 
 

 

  
   
friends per user

 

   

 

   
   
friends per user

   

figure    histogram of friends per user

y  i     
y  i     
total

music
  
   
   

single
   
   
   

      
   
   
   

same graph  since the square kernel is parameterless 
we represented it with a horizontal line  since the
diffusion kernel requires the parameter   we plotted
the training and test error for values of  between  
and   
lastly  with a dot dashed line  we plotted the test
error that would be obtained using a trivial policy 
which is to predict that all users are in the more common class 
there are several notable features of these graphs 
first  our test error  for all kernels  for predicting
whether a user is interested in music or  for the  k
set  whether a user is single is worse than that found
by the trivial algorithm  even though test error is low
for low values of   furthermore  when we ran the
algorithms against the randomly shuffled data set  we
saw the same low training error and high test error
 higher than the trivial policy error  for all data sets 
this confirms that there is minimal or no correlation
between whether a user is interested in music  or is
single  based on whether his or her friends are interested in music 
for predicting age  we found that with very low values of  the training error was extremely low  while
the test error was quite high  this suggests that the
system has high variance  as  approaches    the
diffusion kernel weights the first order relationships
much more than second and third level effects  and
these local effects make the algorithm much more
prone to overfitting  as  increases  we see that the
training error and test error converge somewhat  this

table    class distribution for  k set
y  i     
y  i     
total

music
  
   
   

single
   
   
   

      
   
   
   

table    class distribution for trim set
each class  with both the square kernel  and the diffusion kernel for numerous values of   we used a
simplified version of the smo algorithm described by
platt    
lastly  as a sanity check  we performed the same
experiments using the same friend matrix  but assigning the class labels to random users in the graph 

 

results

plots of our results are shown in figure    there
is one graph for each of the three classes across both
data sets  for each set of data and each class  we used
   fold cross validation to train and test our support
vector machine  the dashed lines on the graph show
the training error  while the solid lines show the test
error  results with both kernels are shown on the
 

fiinterested in music

 k set
   

   

   

   

   

   

   

   

   

relationship status

 

 

   

 

   

 

 

   

   

   

   

   

   

   

   

   

   

 

born after     

trim set

   

 

   

 

   

 

 

   

   

   

   

   

   

   

   

   

   

 

 

   

 
beta

   

 

 

 

   

 

   

 

 

   

 

   

 

 

   

 
beta

   

 

square kernel test error
square kernel training error
diffusion kernel test error
diffusion kernel training error
trivial algorithm error
figure    plots of training and test errors
 

fi    du  n   wu  b   pei  x   wang  b   and
xu  l  community detection in large scale social
networks  in webkdd sna kdd     proceedings of the  th webkdd and  st sna kdd     
workshop on web mining and social network analysis  new york  ny  usa         acm  pp    
   

suggests that at higher values of   the kernel generalizes better  since it avoids depending on these local
effects  the square kernel was prone to the same sort
of overfitting as the diffusion kernel for small values
of  
of the three classes we tried to predict  we were
best able to predict whether a user was born after
      this suggests that it is  of the three classes 
the one that is most likely to be in common between
friends 
the two data sets show somewhat different relationships between test and training error  in the
trim data set  training and test errors converge at
much lower values of   this might be because the
friend matrix is much more dense  on average  than
that of the  k set 

 

conclusion

 

references

    facebook 
facebook developers
http   developers facebook com       

api

    kondor  r  i   and lafferty  j  diffusion
kernels on graphs and other discrete structures 
in in proceedings of the icml         pp     
    
    muoz  a   and n de diego  i  m  from indefinite to positive semi definite matrices  lecture
notes in computer science                     

    platt  j  c  sequential minimal optimization 
a fast algorithm for training support vector mataken together these results suggest that the system
chines  tech  rep   advances in kernel methods has high variance and that we might do better with
support vector learning       
more data  allowing us to achieve better generalization results for the diffusion kernel at lower values of     villa  n   and boulet  r  clustering a medieval social network by som using a kernel based
  this makes sense intuitively  as human tastes and
distance measure  in esann     proceeding of
preferences naturally have high variance and so many
the   th european symposium on artificial neucomplicated dynamics are involved in friend relationral networks         pp       
ships  the basic premise taken in this research is that
people with similar interests and characteristics are
more likely to be friends with each other  that is obviously true to some extent  but there are also many
external factors that add noise to this and make it
difficult to predict on such a small scale 
it would be very interesting to repeat this analysis
with much more data  but this would require more
computing power than we have at our disposal 

    anagnostopoulos  a   kumar  r   and
mahdian  m  influence and correlation in social networks  in kdd     proceeding of the
  th acm sigkdd international conference on
knowledge discovery and data mining  new york 
ny  usa         acm  pp      
    christakis  n  a   and fowler  j  h  the
spread of obesity in a large social network over
   years  the new england journal of medicine
                      
 

fi