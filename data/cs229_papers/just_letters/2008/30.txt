machine learning classification of malicious
network traffic
keith lehnert and eric friedrich

   introduction
     intrusion detection systems  in our society  information systems are everywhere  they are used by corporations to store proprietary and other sensitive
data  by families to store financial and personal information  by universities to keep
research data and ideas  and by governments to store defense and security information  it is very important that the information systems that house this vitally
sensitive information be secure  in order for information systems to be secure  it
is paramount that they utilize robust security mechanisms  commonly found security mechanisms are passwords on accounts  encryption of sensitive data  virus
protection  and intrusion detection 
an intrusion detection system  ids  monitors activity at an access point and
can log or prevent activities that are marked as intrusions  intrusions occur when
malicious activity gains access to or affects the usability of a computer resource 
     industry standards  the main methods used by idss are rule creation  signature data comparison  and anomaly detection 
 with rule creation  the definitions of an unacceptable access must be predefined  these rules are tuned considerably in order to allow normal accesses
through while stopping attacks  the process of manually updating these rules
makes it very difficult to stay up to date 
 signature data comparison uses a set of known detection data and compares
it to current activity  processes with a high matching probability are marked
as intrusions 
 anomaly detection defines a set of allowable and normal usage behavior 
these patterns are then compared to current activity  accesses that do not
fall in line with the pattern definition are marked as malicious 
many of the most popular intrusion detection methods require a large amount of
support in order to be effective 
the industry standard ids is snort  this software uses a rule driven architecture
in order to view received packets and compare them against signature data  standard
 

fi 

keith lehnert and eric friedrich

protocol  and anomaly characterization  rules are updated on a weekly basis  and
are maintained manually  other tools such as untangle intrusion protection provides
thousands of built in signatures for comparison and provides updates automatically
at set intervals  the company is constantly tuning settings in order to provide a
more accurate system 
     research  machine learning has large implications for intrusion detection  because intrusions are becoming more sophisticated and computer information systems
are consistently become more complicated  by using machine learning techniques to
analyze incoming network data  we can decide to block malicious attacks before
they compromise an information system  research in the field of intrusion detection
seems to concentrate on a variety of support vector machine method  neural networks
and cluster algorithms  these algorithms can use unsupervised learning methods to
automatically update the algorithm based on new data 
     kdd data  one of the main challenges of intrusion detection is gathering
appropriate data for training and testing of an algorithm  although it is possible
to set up a machine to collect intrusion data  ground truthing the data could be
very difficult  and our algorithm effectiveness would hinge on the accuracy of the
ground truth procedure  creating a system where we provide attacks in order to
allow collection of data may not be indicative of reality 
because of this  we decided to utilize previous work done the field to allow us to
concentrate more fully on our algorithm  implementation  and validation  in      
the fifth international conference on knowledge discovery and data mining was
held  as part of this conference  the kdd    data set was created in order to
facilitate a competition for building a network intrusion detector  in particular  the
kdd    data set includes a standard set of data and a wide variety of intrusions
simulated on a military network  by utilizing this data  we can have more confidence
that our input truth is correct  and that the data itself is more indicative of reality 
   project approach
the goal of this research is two fold  first  we attempt to find the most effective
machine learning model for identifying network attacks  although scalability and
performance are major considerations in every commericial product  our results are
targeted at minimizing false positives and negatives  the approach to this work will
be done in steps  with additional complexity being added to the model at each level 
as a preface to developing any models  the data must first be put into a usable
format  we are using the kddcup    dataset  described above  which consists of
features that are either continous  numerically  valued or discrete  the discrete features in the provided dataset are in text format i e  tcp udp  and must be converted

fimachine learning classification of malicious network traffic

 

to a numeric value for processing by the learning algorithm  this small amount of
preprocessing is all that is required  as most of the data is already provided in a
machine friendly format  the class labels provided indicate which class of attack  if
any  the training example belongs to and are converted to labels of either attack
or safe before use 
the shogun     machine learning toolbox is used in an octave matlab environment for training and testing the learning algorithms  it provides several different
svm implementations along with multiple kernels  we examine two things  the relative importance of features in training the dataset and the choice of kernel algorithm 
by understanding what features are most relevant  the dataset can be trimmed to
include only the most useful data  using a reduced size training increases the speed
of training and classification  leading to a more efficient application 
similarly  the choice of kernel results in different levels of errors when applied
to the kddcup dataset  shogun offers four different kernels  gaussian  sigmoid 
linear  and polynomial  each kernel offers some parameters for tuning  for example
variance of the gaussian kernel can be specified  for the polynomial kernel  the
degree of polynomial used is an argument to the svm  this uses a kernel of the form
k x  x       x  x   d   where d is the given degree  all kernel tests were done with the
full    feature training set 
   results
     kernel selection  running several octave simulations with the shogun toolbox and kdd dataset demonstrated that the kernel used has a significant impact on
the accuracy of the results  specifically  the gaussian and sigmoid kernels performed
best  classifying only       of the       test examples incorrectly  in all cases the
svm was trained on a sample size of       training examples  the linear and polynomial kernels were much less accurate  note however  that the polynomial kernel is
only of degree    meaning that it cannot represent a high dimensional inner product
in the svm calculation  this result speaks to the high error rates of the linear
kernel as well  for the kdd training data  the linear kernel is unable to compute
the correct value of the inner product x  x   
table    error rates of shogun kernels
kernel
gaussian sigmoid linear polynomial d   
error   
    
    
     
    
by varying the degree of the polynomial kernel  we were able to show an effect on
the accuracy of the support vector machine classifier  namely  as the degree of the
polynomial increased  so did the accuracy of the svm  there is an anomaly with a

fi 

keith lehnert and eric friedrich

degree of     where the error spikes to     is currently unexplained  the maximum
accuary of the polynomial kernel does not exceed that of the gaussian kernel  even
in high dimensions  this suggests that the test data contains feature vectors which
are not present in the original training data and cannot be correctly classified 
table    errors of polynomials with varying degrees
degree
 
  
  
     
  
  
  
  
  
  
error                                                           

     feature selection  there are several motivating factors behind limiting the
feature set of the intrusion data for the svm  a smaller feature set may result in
significantly improved training and classification timing  depending on the intrusion
detection application  timing may be critical  additionally  some features may not
truly relate to the intrusion classification results and should be excluded 
running two feature permutations with the shogun toolbox on the kdd dataset
demonstrated which features are more likely to be useful in the svm training 

figure    errors of   feature permutations

fimachine learning classification of malicious network traffic

 

an obvious threshold for choosing features to use is features that have errors
consistently less than     of the time  this is a visual boundary on the output
data and gives us a subset of about eight features  these features correspond to the
protocol  service type  source bytes  destination bytes  logged in  count  server count 
and destination host same source port rate 
   conclusion
through the use of correct kernel choice and feature selection  we have shown that
it is possible to improve the accuracy and efficiency of a support vector machine
applied to an intrusion detection scenario  the choice of kernel should be made to
reflect the superior results provided by the gaussian and sigmoid kernels  similarly 
the best subset features to be trained on can be successfully identified using the
parametric methods described above  by combining the kernel and feature selection 
we arrive at an improved version of the algorithm  this more quickly and more
accurately predicts the safety of network traffic 
references
    s sonnenburg  g raetsch  c schaefer and b schoelkopf  large scale multiple kernel learning 
journal of machine learning research              july       k bennett and e p  hernandez
editors 
    a h  sung  s  mukkamala  identifying important features for intrusion detection using support
vector machines and neural networks  proceedings of the      symposium on applications and
the internet 
    j t  yao  s  zhao  l  fan  advanced support vector machine model for intrusion detection 
lecture notes in computer science  pg                springer berlin 
    pavel laskov and christin schfer and igor kotenko  intrusion detection in unlabeled data with
quarter sphere support vector machines  in proc  dimva             
    i  w  tsang  j  t  kwok  and p  m  cheung  core vector machines  fast svm training on
very large data sets  j  mach  learn  res   vol     pp                  online   available 
http   portal acm org citation cfm id                

fi