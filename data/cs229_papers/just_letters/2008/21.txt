grouping photos by face
huang wei chang

lei huang

xiangrui meng

abstract
image organizers such as imgseek and gift allow query by image content  qbic  
qbic help users find duplicate and similar photos  however  the similarity is measured
based on color  texture and shape  not in terms of people 
we implemented a query by face feature for organizing personal digital photos 
using face detection and recognition techniques  we used the opencv library to extract
faces and combined principal components analysis  pca  and locality preserving projections  lpp  for face matching  we observed acceptable accuracy in our experiment 

 

introduction

digital cameras have successfully dominated the consumer camera market  compared to
its film counterpart  the cost of taking and storing a digital photo is virtually zero  as a
result  the common size of a personal photo collection has increased remarkably and tools for
organizing digital photos become extremely popular  current generation of photo organizers 
such as acdsee  picasa and f spot  can automatically group photos by folder  album  tag 
date  etc  some organizers  e g   imgseek and gift  havequery by content function to find
photos having similar style of color  shape and texture 
our goal is to implement an interesting feature for photo organizing  that is  query by
face  we show a list of faces extracted from the photo being viewed  and for each face 
we try to find photos containing similar faces within the collection  it looks like the offline
version of facebooks photos of     application  the key difference is that we dont have
user generated tags  some photo organizers do provide name tagging functionality  which is 
however  rarely used  if we can achieve acceptable accuracy  this feature will certainly help
people rediscover their memories 
in section    we give a brief survey of related work  then we discuss face detection in
section   and two face recognition methods  pca and lpp  in section    as well as some
practical issues  in section    we demonstrate our gui and some result 

 

related work

several photo organizers  such as imgseek and the gnu image finding tool  gift   use
content based image retrieval systems  cbir   they allow query by image content  qbic 
and the similarity is commonly measured based on color  texture and shape  using qbic 
it is easy to find duplicate and similar photos  however  it doesnt read and understand
photos as a human does  in our opinion  the most desired feature for personal use is finding
photos containing the same person  this is how we distinguish our project from existing
cbir based photo organizers 
 

figrouping photos by face

chang  huang and meng

the most closely related to our work is the work by zhang et al  in      they allow users to
multi select a group of photos and assign names to these photos  then they try to propagate
names from photo level to face level by solving an optimization problem on face similarity
measures  however  our experience is that people do not do offline tagging very often  our
unsupervised group by face feature should be more practical than semi supervised face
annotation 
just before we finished this report  we found that google recently added face recognition
in picasa web albums      they provide a friendly interface that groups similar faces together
for quick name tagging  the precision of their query by face is very high  however  for
efficiency of tagging  they only return very limited results with high similarity at the cost of
losing recall rate 

 

face detection

our first step is extracting faces from photos  here we assume frontal face images only due
the majority of frontal faces in personal photo collections and the high accuracy of frontal
face detection  we use the opencv library in our project 
the function cvhaardetectobjects   in opencv supports objects detection  it will return a sequence of detected objects in one image  we use the haar classifier haarcascade frontalface alt xml for frontal face detection  which comes with the library  the classifier computes haar like features which includes edge features  line features and centersurround features  after some classifying stages  it decides if the region is likely to show the
object  to search for the object in the whole image one can move the search window across
the image and check every location using the classifier  we set scale factor as     so that
the window will increase by     after each scan and set min size as           the initial
window size is a lower bound of face sizes in our collection and it is also the optimal scale for
face recognition  moreover  we use flag cv haar do canny pruning to allow that
canny edge detector to reject some image regions that contain too few or too much edges
and thus can not contain the face  since haar like features consider the shape of the image
region  it can get higher accuracy than most color based classifiers 
the code for this part is provided as sample code by opencv  it is easy to integrate
in our photo organizer  which is a modified version of eye of gnome  eog   we save the
detected faces when photos are imported and build an index for searching 

 
   

query by face
preprocessing

after cutting out the face images  we still need to do several preprocessing steps before
applying the learning algorithm  first  the face images are mostly not of the same size  in
order to perform dimension reduction  we resize all face images to          scale  which is
also the suggested scale for face recognition 
secondly  face images from a personal collection are quite different to those from a face
database such as feret  in feret the background is generally very clean while in a personal collection the background varies a lot  which will lower the precision of face recognition 
so we mask out the background and only use the center part of a face  figure    

 

figrouping photos by face

chang  huang and meng

figure    mask out the background 
finally  to alleviate the problem of light condition and light color  we transfer the face
images from the rgb space to the gray level space and normalize all face images to zero
mean and unit variance 

   

feature space learning  pca and lpp

since our goal is query by face  we need to define some similarity or distance measure
between face images  a naive mathod is just to vectorize the images and then compute the
euclidean distances  however  that will be inefficient and not robust  therefore  we consider
learning some feature space from face images  we explore two different projections from the
image space to the feature space  principal components analysis  the eigenface space      and
locality preserving projection  lpp      
the eigenface approach is a standard way to analysis face images  so here we only show
the eigenfaces we learned  figure    and in the following we mainly describe the locality
preserving projection  which is one kind of manifold learning algorithms  since it is usually
believed that the manifold learning algorithms are more suitable than pca for data that is
possibly nonlinear distributed  such as face images   we are very interested in applying them
to our application and comparing the result 

figure    eigenfaces
briefly speaking  if the input space is high dimensional but the data are actually distributed over a low dimensional nonlinear manifold  the distance in the input space between
two data points is realiable only when they are close to each other  therefore  the lpp algorithm tries to learn a mapping into a lower dimensional space and simultaneously maintain
neighborhood structures  the algorithm we use can be summarized as the following steps 

 

figrouping photos by face

chang  huang and meng

   constructing the adjacency graph  we build a graph in which each node represents one
face image  and we add an edge between node i and node j if and only if i is among k
nearest neighbors of j or j is among k nearest neighbors i 
   computing the edge weight  if there
is one edge between i and j  we define the edge

i
j  
k
weight as wij   exp  kx x
 
 
   eigenmap 
p define d to be a diagonal matrix whose entries are column sums of w   that
is dii   j wji   then we solve the generalized eigenvector problem
x d  w  x t v   xdx t v 
and use the eigenvectors corresponding to the smallest l eigenvalues as our projection
directions 
please see the paper     for justification of the above algorithm 

   

additional rules

after mapping the face images into one feature space  we can use the euclidean distance between two feature vectors to find the nearest neighbors as the results for the query  however 
although we handle the photo retrieval part as an unsupervised problem  we still can take
advantage of some basic facts  first  face images from the same photo can not be from the
same person  second  denote xij to be the j th face in the i th photo  if we want to include
xkl into the query result of xij   then xkl shouldnt be nearer to any other face in the i th
photo than its distance to xij   in fact  this can be thought as an extension of the first rule 
we use those two facts as additional rules for our photo retrieval routine 

 

result

our image viewer is a modified version of eog  where we added a face browser  after user
chooses one face as query  we will show query results in the photo collection box 

figure    eog face

 

figrouping photos by face

chang  huang and meng

we found the precision of finding nearest neighbors in the pca space and in the lpp
space are close  we also manually labeled all the face images and found if the nearest
neighbors are outputed the error rate using the pca features is about     and error rate
using the lpp features is about     
furthermore  suppose we ask to retrieve k photos that contain the query person  since
in a personal photo collection only few people may appear many times  the presion will
degenerate quickly as k increases  figure   shows some sample queries from our experiment 

figure    sample queries  faces in the left column are the queries 
moreover  in a personal collection the photos can have very different illumination conditions  not only the angles of light  which are usually taken into account in standard face
databases  but also the intensity and the light color  if the light condition is controlled  the
intensity  or color  of skin can be a distinguishing feature for face retrieval  however  the
real situation is the lighting conditions are far more complicated than those of the standard
face database  simple preprocessing can not solve this problem well  therefore  this may be
one direction we can explore further 
finally  not surprisingly  because our feature spaces are learned for whole faces and no side
information about the faces is given  our system can not handle occlusion  poses  rotations
with large angle very well  that is also an interesting direction for us to investigate 

references
    picasa name tags  http   picasa google com support bin topic py topic       
    x  he and p  niyogi  locality preserving projections  in advances in neural information
processing systems     proceedings of the      conference  bradford book       
    m  turk and a  pentland  eigenfaces for recognition  journal of cognitive neuroscience 
                
    l  zhang  y  hu  m  li  w  ma  and h  zhang  efficient propagation for face annotation
in family albums  in proceedings of the   th annual acm international conference on
multimedia  pages         acm new york  ny  usa       
 

fi