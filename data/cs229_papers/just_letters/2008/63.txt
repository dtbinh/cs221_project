artificially intelligent adaptive tutoring system
william whiteley
stanford school of engineering
stanford  ca      
bill whiteley gmail com
abstract
this paper presents an adaptive tutoring system based on a markov decision process model 
applying this model to a tutoring system is a unique concept in computer based training  after a
detailed derivation of the model  results from experiments are presented that show the markov
decision process model is an effective tool for adding intelligence to computer based tutoring 

  introduction
intelligent tutoring systems are computer based learning systems designed to enhance the learning rate and
retention of students  modern tutoring systems of this type use software algorithms that adapt to the students
estimated knowledge of the material to deliver customized instruction  with these adaptations the tutoring system is
able to more effectively guide the student through learning problems 
computer based teaching systems have a long history dating back to the     s starting with the scholar    
program in       however  it was not until the late     s and     s that widespread research and realistic
deployments were realized  some well known intelligent tutoring systems from this time period include the pump
algebra tutor      andes     physics tutor  and the computer literacy software autotutor      these types of
intelligent tutoring systems were shown to produce learning gains of approximately     to     standard deviation
units compared with students learning the same content in a classroom     
throughout much of the previous research in this area  the pedagogical side of computer based tutoring systems was
often the primary focus  there are notable exceptions of published research that utilize neural networks  but more
often the intelligent tutor systems utilized nave bayesian statistics     to model a students knowledge and relatively
simple heuristics to choose what content to deliver 
in contrast  the project described in this paper utilizes a markov decision process  mdp  to not only model and
learn the students knowledge of a subject but also simultaneously choose the optimal mode of instruction  the
mdp framework described is very flexible and contains a number of parameters available to modify the behavior of
the mdp to mimic various pedagogical techniques  however  this project will defer the implementation of a specific
teaching method and instead focus on the fundamental framework that allows the use of an mdp to implement an
adaptive tutoring system 

  artificially intelligent adaptive tutoring framework
the mdp framework described in this paper is designed to tutor a student in a given subject area by instructing
them and providing exercises on the subjects supporting concepts  the mdp decides at each step in the process
which concept area to cover and whether to use a teaching or questioning mode  this section of the paper contains a
detailed description of the mdp used in this project  but first  for completeness  a very brief explanation of markov
decision processes is given 

fi    markov decision process  mdp 
a markov decision process is defined by a tuple  s a psa    r   where s is a set of possible states  a is the set of
possible actions  psa is the state transition probabilities   is the discount factor and is between   and    r is the
reward function  on executing action a in state s the probability of transitioning to state s is given by psa s  and the
reward is given by r s   a policy  maps actions to each state in the mdp  the value of any given state under the
policy  is the expected sum of discounted rewards obtained by following the policy from the current state forward 
the primary goal in mdps is to find an optimal policy that maximizes the value function in each state of the mdp 
the value function for a state s is defined in terms of the well known bellman equations 

v    s     r  s    

 ps   s     s   v    s   
s  s

therefore to find the optimal value function v
equation for each state 

 

and consequently the optimal policy

v     s     v      s     r  s     max 
a a

   we solve the following

 ps   s     s   v     s   

s  s
there are a number of methods used to solve this non linear equation including dynamic programming  policy
iteration and value iteration  this paper will utilize the commonly used value iteration method and will provide a
brief explanation of that technique next 

    value iteration
given a mdp  s a psa    r   the value iteration algorithm is used to find the optimal value function and is as
follows 
   for each state s  initialize v  s   to some starting value
   repeat until convergence
 
for each state s  update

v   s     r   s     max 
a a

 ps   s     s   v   s   
s  s

 
the updates to the value function for each state can be done all at once in a synchronous update or each time the
value function is calculated for a given state in an asynchronous manner  either method will cause the value
functions to converge to the optimal value 

    knowledge models
the knowledge model used in this project is based on two fundamental assumptions  the first assumption is that one
way to show mastery of a subject is the ability to answer random questions from the given subject area  for example 
if a student is able to answer five out of ten randomly drawn questions then it is likely that they have a moderate
understanding of the material  the second assumption is that when subjects are taught  they are normally broken
down into a set of supporting concepts  figure one is an example of a simple knowledge model of arithmetic  which
is also the subject and model used later in the experimental portion of this paper 

fiadd sub 
mul div

real number system

arithmetic
exponents

fractions

figure    example tutoring knowledge model of math subject

    adaptive tutoring markov decision process
the tutoring mdp used in this project is designed to teach a student a single subject area consisting of multiple
supporting concepts  through reinforcement learning it derives a student knowledge model for each of the
supporting concept areas and uses that model to determine what concept area to spend time on and whether to teach
or quiz the student 

      states
the tutoring mdp contains a tuple of states  l  c  ic  for each concept area  the state labeled l is the learning state
for a given concept  the c state is reached after answering a question correctly and the ic state represents answering
a question incorrectly  the set of all states for a subject area mdp is given by s   l   c   ic      ln  cn  icn  for n
supporting concepts 

      actions
the action set for the mdp utilized in this project contains two actions for each subject area  teach  t  and
question  q   thus for a given subject  the set of actions is given by a  t   q    tn  qn  for n supporting
concepts  figure two shown below illustrates the actions for a single concept  however  it is important to understand
that every action in the action set is possible in all states and the s  node in the figure below could represent any
state in the mdp 

psq

l

a   teach 

s 

c

a   question 
  psq

ic

figure     graphical representation of tutor mdp for a single concept

      transition probabilities
the set of transition probabilities psq contains two probabilities for each concept area  the first transition  which is
deterministic  is the probability of transitioning to the learn state given the teach action and is equal to one  the
second transition is the probability psq of answering a random question from the given concept area correctly 
hence  given the question  q  action for a subject area  the prior probability of transitioning to the correct  c  state
is psq and the prior probability of transitioning to the incorrect  ic  state is    psq  this transition probability is used
to estimate a students knowledge of a given concept and its use is illustrated in figure two above 
initially the transition probabilities psq for each of the concept areas are unknown and hence must be learned by the
intelligent tutor and furthermore they are strictly dynamic in nature and evolve as the student gains  or possibly

filoses  knowledge  this probability is calculated using the simple technique of counting the actual transitions as they
occur with one minor exception  when the current state is a learn state  then the psq for the learn states concept area
is boosted temporarily while in that learn state  this reflects the reality that immediately after learning a concept  a
student is more likely to answer questions correctly in that concept area  this is reflected in the behavior of the mdp
and makes the sequence of teach and then quiz in the same concept area very likely 
   questions answered correctly
  b if cur   state   ls i

  questions asked

 
   questions answered correctly
otherwise

  questions asked


 

ps iq

 
where b is a constant    

the initialization of the transition probabilities is a key parameter of the model and significantly impacts the student
experience  starting with high probabilities assumes a high level of student knowledge and conversely low
probabilities assume student ignorance  in addition the number of pseudo counts used to initialize the transition
probabilities is another key parameter of the model and impacts how fast or slowly the estimate of the student model
can change  how long it takes to convince the tutor that you are smart or ignorant  

      discount factor
the discount factor is used in a mdp to enforce the principal that immediate rewards are more valuable than future
rewards  this encourages the tutor agent to act greedily when choosing actions  the value of the discount factor
ranges from zero to one  various values were examined for the tutor mdp and a value of      was chosen  which
allowed rapid convergence and scaled the value functions to values near zero 

      reward function
the reward function is structured to provide a large positive reward for correct answer states  small positive rewards
for learning states  and a large fixed negative reward for incorrect answer states  however  the positive rewards for
learning and correct answers are necessarily diminished as a students knowledge increases  in essence this
presumes that a correct answer to a question which a student finds difficult is more valuable than a question which
the student answers easily  this dynamic allows the tutor to transition from concept areas where the students
knowledge is high and many questions have been answered to more difficult areas  to accomplish this  the reward
function for a correct answer is proportional to the probability    psq  of transitioning to the incorrect answer state
and uses the following equation where k is a fixed constant 

s c
 k       psq  

r   s      k       psq        s  l
  
s  ic

  bills intelligent tutoring system  bits 
bits uses the mdp model derived in the previous section to tutor students in arithmetic using the supporting
concepts of real numbers  addition   subtraction   multiplication   division  fractions and exponents  see figure one  
in the teaching mode  bits displays the rules used to solve problems from the particular concept area and then
shows two worked examples  in the quiz mode  bits displays a multiple choice math problem and  after receiving
an answer from the student  shows the correct answer 
in this project two students were first given a separate    question baseline test of the arithmetic concepts with no
teaching to assess their prior knowledge of the concept areas and provide a measuring stick to judge the tutoring
algorithm  then on a separate occasion each student was engaged in a fifty action bits tutoring session  the
results of this session are shown in the following section 

figiven the unwillingness of my drafted students to continuously be subjected to math problems  the key parameters
for bits were derived from running simulations with imaginary students  ultimately the transition probabilities
were initialized to     and the number of pseudo counts used for initialization was two  these parameters allow the
potential for significant progress across the four concept areas in only fifty actions  in a more realistic application
where the tutoring spans many sessions  these initial parameters would likely be chosen a little differently 

  bits experimental results
the bits experimental results for a single students tutor session are shown in the two figures below  figure three
shows the transition probabilities for each of the concept areas over the tutor session along with each areas baseline
results  the figure shows how the mdp quickly converges to high estimates of student knowledge in areas where
the student showed a high baseline of understanding  it also correctly learns the area where the student was a priori
weak in understanding  another interesting observation from figure three is that for each of the concept areas that
showed a relatively weak baseline  the student ultimately demonstrated learned knowledge above the initial baseline 
figure four shows the number of actions dedicated to each of the concept areas  this figure clearly shows that the
tutor spent more time on the areas of weak understanding and less time on areas of strong understanding 
overall the bits mdp performed well with both of the test students given a relatively simple subject  in future
work more features could be added to enhance the pedagogical effectiveness of the model  for example a parameter
could be used to induce a weak sequencing of the topics to make it more likely to teach concepts in a particular
order  also questions could be sub divided into multiple difficulty levels to increase the granularity of the estimate
of the students knowledge  there are many other interesting additions possible for the mdp tutoring model 

add sub mul div
exponents
fractions

real numbers

figure     learning results from mdp tutor

figure    mdp tutor focuses on knowledge
areas that need improvement

  references
    carbonell         al in ca   an artificial intelligence approach to computer assisted instruction  ieee transactions on man machine
systems             
    a t  corbett  j r  anderson  k r  koedinger  intelligent tutoring systems  handbook of human computer interaction  second  completely
revised edition  chapter          
    k  vanlehn  c  lynch  k  schulze  the andes physics tutoring system  lessons learned  international journal of artificial intelligence in
education              
    a c  grasser  p  chipman  b c  hayes  a  olney  auto tutor  an intelligent tutoring system with mixed initiative dialogue  education  iee
transactions on  volume     issue         

fi