portfolio replication with sparse regression
akshay kothkari  albert lai and jason morton



december         

suppose an investor  such as a hedge fund or fund of fund  holds a secret portfolio
of assets  which may change over time  suppose further that the investor makes public
the overall returns on this portfolio on a regular basis  as is the case wth hedge funds 
funds of hedge funds  and indexes of hedge funds  there are many reasons why we might
want to replicate the performance of this portfolio  one is to gain exposure to the same
sources of risk and return while avoiding the high fees and liquidity restrictions typically
imposed by these investment vehicles  alternatively  we may already be invested and
wish to hedge the risk of a signicant downturn in the fund or fund of funds  as we
cannot know its holdings  we are forced to estimate them statistically 
most practical strategies for replication available today make use of a rolling regression against fewer than ten factors  these factors are selected in advance by hand  we
instead investigate the use of l   regularized regression to choose the regressors from a
large universe of securities automatically  we consider four simple types of strategies to
replicate  one static and three dynamic  all based on one or more true weight vectors
hp  
   the buy and hold portfolio  given a total initial portfolio value of v dollars and
initial weight vector hp   this strategy buys v hpi of asset i at price si and simply
holds the assets for the duration  a good replication strategy for a buy and hold
portfolio should quickly converge to the true weights np in terms of the number of
shares v hpi  si initially bought of each asset and perform minimal or no further
reweightings or trades once the true portfolio is found  the weights in terms of
value of this strategy will change over time 
   the xed constantly rebalanced portfolio  given an initial weight vector hp   this
stratgy rebalances every period to hold asset i in proportion hpi of the total value
of the portfolio  selling and buying as necessary  a replication strategy for a
xed constantly rebalanced strategy will try to nd hp and thereby match the
rebalancing trades of the true strategy each period 
   the xed periodically rebalanced portfolio  a hybrid of the rst two  this strategy 
common in practice  e g  it is used by many etfs and mutual funds  rebalances
back to the initial weights hp every n periods  a replication strategy must implicitly nd both hp and n 
   the xed periodically rebalanced with change points portfolio  here the target
weight vector hp changes at several points over the course of the observed period 
where new securities may be added and existing ones dropped at the change point 


not in the class  but helped out and provided advice 

 

fiwe use real return series from the s p      and synthetic portfolios for types      for
type    we look at the performance of our method in replicating a few etfs which follow
this type of strategy 

 

algorithms

we experimented with a variety of algorithms for rolling regularized regression using
lasso regressors  and clipped stochastic gradient descent  we report on the most successful variant  this algorithm uses a rolling lasso estimator on the residuals to select
which portfolio weights to consider updating  and an unconstrained regression on the
winners to x the nal weight changes themselves 
the winners were deemed to be assets with coecients greater than one standard
deviation from than the mean  which is very close to zero due to the sparsity  because
we would like to have long only portfolios for simplicity  all coecients are constrained
to be positive 
input  return series of investible assets  rt   and benchmark asset  bt    a window w 
relative sparsity parameter   and unconstrained regression inclusion threshold  
output  vector of  continuosly rebalanced  portfolio weights t at each time point after
the initial w 

initialize  parameter vector w     
for each time point t 
 compute residuals etw     t   rtw     t t   btw     t   where rtw     t
is the w  p matrix of returns on the p investible assets during w







periods in the rolling window
let  be the l   regularized coecients of etw     t regressed on
rtw     t with sparsity parameter  
set    t    
clip all elements of      to  
let i    i              p    i      the set of assets appearing with
nonzero coecients in 
let  be the coecients of the unconstrained regression of etw     t
on r tw     t  i   the assets in i  
set t   t    

a stochastic version of this algorithm was also shown to be eective  however it did
not converge as quickly and had noisier results  the cost of extra computation in the
rolling window algorithm is not as serious an that of requiring more time  that is  in
a real world situation  one would rather spend more computing power than wait more
days for the regression to converge  so the rolling window algorithm was chosen 

 

fi 

experiments

the rst goal was to replicate a synthetic portfolio of ve equally weighted  constantly
rebalanced assets drawn from the s p      then using least angle regression as the
lasso regressor in our algorithm  determine if it is able to pick out the correct stocks  to
see the algorithm s response to a varying portfolio  it was run against synthetic portfolios
where the assets change weights  are added  and get dropped  it was seen that the longer
the window  the smoother the results and fewer false positives  however  longer windows
also resulted in slower convergence and becuase time is valuable  slow convergence rates
are very detrimental to algorithm performance  thus a rolling window of    days was
used 
figure    coecients output by algorithm on synthetic portfolio

as seen in figure    the change point was at day     where an asset was dropped
and then picked up again at day      here  the algorithm selects some extra coecients
before damping them back to zero  raising the shrink parameter results in faster convergenge  but creates more noise and instability  in these experiments  a shrink of     
was used 
once it was veried that the algorithm can identify the correct assets in a toy problem  the algorithm was run on real world data  which we chose to be several exchange
traded funds  the funds were regressed against the s p     from june      to november       the method to judge accuracy was to take one dollar initially invested in the
etf  and one dollar invested in the algorithm s cs    fund both at time t  and compare
the subsequent returns 
because it is not desirable to rebalance the portfolio daily due to the costs of trading 
the cs    fund samples the output of the algorithm every four weeks and rebalances
the portfolio to the new coecients  the cost of trading was not factored directly into
the algorithm and should be involved in future work  but monthly rebalancing suited
the purposes of the experiment  additionally  one wishes to avoid having to trade a
very large number of stocks of miniscule weight  thus only the assets with coecients
greater than      were included in the portfolio  these coecients do not necessarily
sum to one  so this subset of coecients is normalized to prevent gaining or losing extra
leverage  these coecients are the portfolio of the cs    fund 
recent events in the economy provided the unlucky opportunity to run the algorithm
on bullish as well as bearish markets  as shown in the figure    the cs    fund tracks
fairly well for the two etf s  the error is most apparent when the etf is experiencing
a high rate of change  in particular
mid      when the markets began falling 
p
the standard error w    ttw  actual  predicted        for a window is also plotted in
figure    the error rates are well below      until the sudden recent downturn beginning
 

fifigure    plots for replicating two etf s

in      where error rates climbed to       however  the error slowly shrank in recent
months  figures   and   indicate that greater number of coecients  or assets present in
the cs    fund  are associated with greater errors  determining whether it is a causal
relationship is worth investigating  it could be the case that a large error causes the
algorithm to select more assets in an attempt to make up for the error  or having too
many assets results in overtting 
figure    error vs  number of assets when replicating the ivv ishares etf

figure    error vs  number of assets when replicating the ive ishares etf

 

fi 

conclusion

as shown  the l  regularized regression with rolling windows works well with etfs 
the lars regression was very good at picking out the proper assets out of a large
universe  however to obtain the coecients  drastic improvement were obtained by
regressing the target again against the reduced universe consisting only of the assets
with larger coecients  in bullish as well as bearish years the tracking error was fairly
small  however sharp declines yielded large errrors  with monthly rebalancing  the cs
    fund replicates etf returns with a maximum mean square error of      and shows
much promise for further investigation 

 

future work

we would like to test the algorithm with existing hedge funds using the returns available
from tass database  also  we would like to model the costs associated with rebalancing
to nd the optimal rebalancing frequency  a metric that we overlooked in this project 

references
    b  efron  t  hastie  i johnstone and r  tibshirani  least angle regression  annals
of statistics               pp          
    a  lo and j  hasanhodzic  can hedge fund returns be replicated   the linear case 
journal of investment management              pp      
    a  ng  feature selection  l  vs  l  regularization  and rotational invariance  in
proceedings of the twenty rst international conference on machine learning      
    w  fung and d  hsieh  empirical characteristics of dynamic trading strategies  the
case of hedge funds  review of financial studies              

 

fi