cs    project  music search engine
shaoqing xiang
xsq     stanford edu
december      

   introduction

   qbh system composition

with the abundance of digital music files on the
internet  how to efficiently and effectively find a
music piece is crucial  conventional music search
systems utilize text information of the music 
such as the title of a song  a singers name  or the
lyrics of a song  in many cases  such text based
music search tool is not sufficient  often  a user
may remember how to sing part of a song he she
has once heard  and wants to find the complete
piece of music on the internet  but not knowing
any other information about the music  i e  tile 
composer name   the search can not be done with
conventional search tools  such scenario
demands the use of a query by humming  qbh 
music search system 

an overview of a qbh system is shown in
figure   

a qbh system is a search tool that takes audio
file  often a short piece of query melody hummed
or played by the user  as the searching input  and
by comparing the inputted audio file  query  with
the music files  references  in the database  the
qbh system finds the corresponding music files 
part of which is most similar to the query sound 
several approaches have been tried for this kind
of system in the past  and various comparing
algorithms are used  such as dynamic
programming      edit distance alignment     
and linear alignment matching     
in this project  i focus on the melody comparing
part of the qbh system  and have built a melody
comparing engine based on the linear alignment
matching algorithm 

figure   overview of a qbh system
the system is mainly comprised of two parts 
melody transcribing engine and melody
comparing engine  the melody transcribing part
takes the user query sound wav information
 often in the format of  wav file   divide it into
many  often       segments  and do
time frequency domain transformation to get the
frequency information of each segment  then the
transcribing engine determines the pitch of sound
each segment represents  and finally transcribes
the whole piece of query sound waveform to the
score or the melody contour it represents  a
melody
contour
is
the
mathematical
representation of a music score series  and it
records the sound pitch value at any position of a
song  
several past cs    projects have worked on
transcription of audio files  so in this project  i
focus myself on the melody comparing engine 

fithe task of the melody comparing engine is to
find out how similar the melody contour of the
query music is to the contour of each music piece
in the database  and then returns one or several
music pieces that have the highest similarity
score in the database 

finally  the comparing algorithm should be able
to tolerate small pitch interval error and small
melody rhythm mismatch  since it is often hard to
sing a song with exactly correct rhythm and tune 

several aspects need to be taken into
consideration for the melody comparing engine 
first  the user is singing part of a song  and we
have no prior knowledge about which part of the
song it is  in other words  we dont know the
exact location in each song to compare with the
query  secondly  users may sing in a different
tempo  speed  with the original song  so we dont
know how much to scale the query in the time
space before comparison  thirdly  not most people
can remember and sing with the absolute pitch of
a song  actually a song is recognized as having
the same melody when the pitch of all its notes
are transposed with the same amount  therefore
the absolute pitch of each note is not so important 
only the intervals between notes matters 

two features determine the shape of the query
melody contour  the rhythm and the pitch
intervals  my algorithm is based on the linear
alignment
matching
algorithm
 lam 
introduced in     to separately evaluate the
rhythm pitch similarity of the query and the
reference music  i further introduced pitch
transposition to ensure a better fit  the specific
comparing algorithm between a query and a
reference music piece having similar total amount
of notes is as following 

in the light of the analyze above  the comparing
should not be affected by the absolute pitch value
and time scale of the query  and the shape of the
querys melody contour is the real value that we
want to compare to the various contour shapes in
the music files from the database  and the
comparing of the query with each reference
music file is a learning process that the engine
finds out the time scale  position in the reference
music  and pitch transposition value that fit the
query contour shape best with the reference
contour shape  as figure   shows 

   comparing algorithm

the learning process for the best fit first starts
with aligning the notes onset time of the two
melody contours to get the largest rhythm
similarity  the query contour is first scaled to the
same time span with the reference contour  and
the beginning time of each note in the two
contours are compared in series  if the difference
is smaller than a dynamic threshold  i consider
this as a rhythm match  and rescale the whole
query contour to align the two matching notes
 under the constraint that all the formerly aligned
notes remain aligned after the rescaling   then 
the rhythm score is calculated according to the
total alignments found  this alignment algorithm
is tolerant to note insertion deletion and small
rhythm mismatch 
after the two contours are aligned with respect to
rhythm  a pitch score is calculated according to
the pitch difference between them  using a special
distance function  the transposition value that
corresponds to the least pitch difference is
applied to the query 

figure   melody contour shape fitting

the total similarity score is the weighted sum of

fithe rhythm   pitch score  figure   shows several
intermediate results during a matching iteration
between two contours  where red plot is the query 
and the blue plot is the reference melody 
resolution in beats     
  
  
  

midinote

  
  
  
  

this problem is solved as following  all notes
sequences that have comparable note amount
with the query are excerpted from the long
reference melody  and compared with the query
separately  the sequence with the highest
similarity score is the position in the reference
melody that mostly resembles the query melody 
and this maximum similarity score represents the
similarity between the query and the reference
melody 

  
resolution in beats     

  
  
  
  

midinote

  

the computational time for comparing a query of
   notes and a reference melody of     notes is
less than     second 

  
  

   test setup

  
  

  
  

since i have only built the melody comparing
engine  and dont have the music transcription
engine  the music files i use as the queries and
references need to be in a format that is easy to
retrieve music scores from  midi file is a good
option for this requirement  because unlike most
other formats  wav  mp   etc  which store the
waveform of music  midi directly stores pitch
value and onset time of the notes  i use matlab
midi toolbox version         to read midi file
into matlab 

  
  

midinote

  
  
  
  
  

  
  

  

midinote

  
  
  
  
  
  
  
  

 

 

 

 

 

  

  

time  beats 

figure   contour matching process
the detailed description of the comparing
algorithm can be found in      i introduced pitch
transposition to the query contour to further fit
the shape of two contours 
the above algorism works for comparing two
melody sequences with similar length  however 
in most cases  we need to compare a short query
melody with a much longer reference melody 

the reference music database i use is composed
of     mono channel midi files downloaded
from the themefinder music archive     and from
my own collections  the genres of the music
pieces are mainly classic and pop 
the query melodies is generated by me using
composing software called composer master
      it transfers music scores into a hearable
midi file  i compose the query melodies after
hearing and remembering some part of the
reference music pieces 
   queries are made  because i am not an expert
in music  inevitably there is un intended error in

fithe queries such as rhythm pitch variation  tempo
change and music note transpose  etc  this
simulates the real scenario in which the user
generates the query music by humming  and there
is likely to be variation of the melody he she
hums from the original piece  and the music
transcribing engine is also likely to introduce
error  in the    queries i have made  one is
intentionally made out of tune  and another one
has a very different rhythm with the original
piece  this is to test how my melody comparing
engine deals with largely distorted query input 

   test results and discussion
for      of the queries  the comparing engine
retrieves the correct songs in the database as the
most similar to the queries  for      queries  the
correct song is found among top   matches
retrieved by the comparing engine  figure  
shows the retrieving success rate vs  the number
of top matches allowed to display 
    

most queries can find their correct matches
within   songs that have the top similarity score 
the query which is intentionally made out of tune
find its correct match within   top search results 
and the query which is intentionally made poor in
rhythm is the one that fit worst with the database 
the correct match is among the top    search
results  this shows that rhythm similarity counts
more than pitch similarity  it can be explained by
the algorithm i use  the comparing process first
try to align the two melodies in rhythm  if the two
melody have a large difference in rhythm  then
the notes of the two melodies can not be correctly
aligned  so even if the query is perfect in pitch 
my later pitch score calculation will still return a
low value  because the notes are not aligned
correctly  this gives rise to problems  since
normally a song with correct pitch but poor
rhythm is considered to be closer to the original
piece than a song with correct rhythm but poor
pitch  in the future  the comparing need to be
improved that the rhythm matching and pitch
matching are no longer coupled together 

   

   conclusion

retrieving success rate

   
   
   
   
   
   
   

 

 

 

 
 
  
no  of top matches displayed

  

  

  

in this project i built a melody comparing engine
based on the lam algorithm  the engine is able
to retrieve the correct song for     of the queries
among the   top matches  future work needs to
be done to decouple the rhythm matching and
pitch matching process 

figure   retrieving success rate
vs  no  of top matches displayed

references
    sung phil heo  motoyuki suzuki  akinori ito  shozo makino  and hyun yeo chung  error tolerant
melody matching method in music information retrieval  a  nrnberger and m  detyniecki  eds   
amr       lncs       pp               
    thomas gersic  music melody matching machine  http   www gersic com

fi    ya dong wu  yang li  bao long liu  a new method for approximate melody matching 
proceedings of the second international conference on madune learning and cybernetics  wan     
november     
    midi toolbox version      http   www jyu fi musica miditoolbox 
    midi file archive from themefinder  http   composer themefinder org 

fi