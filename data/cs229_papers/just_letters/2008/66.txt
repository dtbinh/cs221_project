musical hit detection

december         

musical hit detection
cs     project milestone report

eleanor crane
sarah houts
kiran murthy
december         

 

problem statement

musical visualizers are programs that process audio input in order to provide aestheticallypleasing audio synchronized graphics  in popular music  musical instrumentation changes
known as hits are an important indicator of changes in the musics mood  ideally  a visualizer
should respond to a hit by also changing the mood of the displayed graphics to match the
music  this project will focus on using machine learning techniques to detect hits  and
therefore mood changes  in a song 

 
   

approach
data collection

our approach utilizes supervised learning to train a hit detection algorithm  the supervised
learning approach is used since it is easy for a human operator to label hits within a song 
additionally  a hit detector should operate on only a small segment of music data ahead
of the current playback location  facilitating hit detection in streaming music  thus  the
learning algorithm only takes into account music data in the vicinity of hits 
we start by selecting a set of songs containing strong mood changes and another set of songs
without mood changes  as the song plays  a human operator marks hit no hit locations in
the song  at each specified mark  two   second musical clips are extracted from the song 
one clip ending at the mark  pre mark clip  and one clip beginning at the mark  post mark
clip   these musical clips and their associated hit no hit labels are imported into matlab
where they are fed into a supervised learning algorithm 
page   of  

fimusical hit detection

december         

a gui assists the marking of hit no hit locations in songs  figure   shows a screenshot of
the gui 

figure    music hit no hit marking gui

dubbed mampe  the gui allows the user to load mp  songs and choose a data file to which
hit no hit labels and clip file names are stored  the gui also allows the user to play the
song  and as the song comes across a hit no hit  the user may click on a set of buttons to
automatically save the pre mark post mark clips 

   

feature selection

changes in song mood generally correspond to changes in 
 beat frequency
 beat amplitude
 instrumentation  current set of instruments playing 
from the pre and post mark clips  a feature describing the hit no hit status of the clips is
calculated  we note that musical mood changes correspond to changes in music amplitude
and instrumentation  while a change in amplitude can be assessed from the time domain  a
change in instrumentation is expressed much more clearly in the frequency domain  in order
to capture changes in amplitude and instrumentation with as few calculations as possible 
the power spectral densities  psds  of the pre and post mark clips are used to construct
the feature vector 
as figure   shows  the absolute value of the difference of the     point pre  and post mark
psds serves as our feature vector  it should be noted that deriving the feature from the psd
page   of  

fimusical hit detection

december         

figure    feature creation algorithm

yields better performance than deriving the feature from the fast fourier transform  fft  
in particular  figure   shows that the psd features learning curve shows improvement over
test set error as more training samples are added to the training set  while the fft features
learning curve does not show this improvement  this result implies that the psd contains
information more relevant to hits than the fft 

figure    learning curve with fft based feature  left  and psd based feature  right 

a likely explanation for the performance improvement is that the differenced psd better
captures changes in musical intensity  waveform energy  than the fft  and sudden changes
in musical intensity are very indicative of hits 

   

training the classifier

the hit detector takes the form of a support vector machine  svm   trained using a regularized  kernelized smo algorithm  to test the trained svm  hold out cross validation was
used       of the total data set was randomly held out of the training data in order to
calculate test error 
page   of  

fimusical hit detection

december         

the kernelization was chosen after our initial svm training using non kernelized features
yielded     training and test set error   an unacceptable level of performance  since the
training and test set error were similar  performance improvements could only be made by
reducing bias  thus  kernelization was used as a method to increase the dimensionality of
our feature space  several different kernels were evaluated  and a gaussian kernel resulted in
the best performance with     training and test set error  this performance was adequate
to reliably detect hits 

   

classification

given a set of contiguous pre mark and post mark sound clips  the classification will classify
the mark as a hit based on the result of kernelized classification expression 
m
x

i y  i  k x i    x    b   

i  

during real time song playback  the hit detector periodically computes the feature vector
from pre  and post mark clips relative to the current playback location  then uses the kernelized svm classification to classify whether that particular point in the song is a hit or a
non hit  additionally  the confidence of the hit can be judged by the functional margin of
the real time feature 

 

results

in order to test the hit detection algorithm  we developed a matlab gui to display hit
information via a simple visualizer while playing test songs  shown in figure    the visualizer
shows the low frequency portion of the fft of song data for the next second  the colors
correspond to the hit or non hit label that the algorithm has assigned to that moment during
the song  a non hit will be displayed in green and blue shades  whilst a hit will be shown
as a shade between yellow and red  increasing from yellow to red with increasing confidence
levels 
the online classifier correctly identified hits from many songs from popular music  however 
the classifier also produced erroneous hits no hits  leading to two key observations 
   though musical hits are instantaneous events  there are frequently build ups  such as
drum rolls or guitar riffs  leading up to that instant  as a result  the algorithm will
detect hits during this build up period with increasing confidence  for a brief period
after a hit  the change can still be apparent in the feature vector  causing a taper off
period back down from a hit classification to a non hit classification in the new section
after the hit 
page   of  

fimusical hit detection

december         

figure    hit display gui

   a high volume vocal track without any other change in underlying beat or instrumentation would frequently result in false hit identifications  this may have stemmed from
a lack of vocals in our pre  and post mark clips in our training data 
as matlab is not a real time operating environment  we were not able to identify hits in
real time  thus  we pre computed at hit classification of each second of the song to provide
a demonstration of how well the algorithm works while playing the song  a future version of
the classifier should include a multi threaded process which could easily perform the same
classification in real time 

 

future work

there are a number of areas that could be investigated to further enable correct hitclassification  as previously mentioned  hits are sometimes preceded by a crescendo in
the music which can decrease the probability of a correct detection  the build up error
could possibly be rectified by inserting a gap between the pre mark and post mark clips and
increasing the clip length  this would make the pre  and post mark clips more distinct 
allowing for better classification 
in order to implement a hit detection algorithm with a visualizer  the hit detections functional margin can be fused with other musical property sensors  such as beat detection in
order to detect tempo changes  for actual usage  this algorithm would need to be recast in
c or c   to enable real time hit detection and appropriate visualization 
page   of  

fi