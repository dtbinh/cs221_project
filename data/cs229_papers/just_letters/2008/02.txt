automatic robotic arm calibration using
parameter optimization techniques
project by  chetan kalyan
introduction 
robotic manipulation tasks need accurate calibration between sensors  eyes  and arms  standard manual
methods of calibration require recording  d coordinates of the end effector and in the arm and eye frames 
we propose to perform this calibration using optimization techniques on
the parameters of the robotic arm 
there are a few parameters in the arm which are assured to be accurate 
such as the join angles of each link in the arm and the length of some of
the links in the arm  however  the length of the last link can vary due to
wear and tear or due to the user adding add ons at the tips of the arm 
the state of the art is to manually measure the length of these links and
feed them to the arm  this is unreliable as manual measurements are
prone to errors 
the scope of this project is thus to reduce the calibration error of the arm
to a negligible level  this involves optimization over the lengths of the
links of the arm  using as few parameters as possible  this will allow us to
use the arm without having to perform time intensive manual
measurements 
normally  such an optimization over a large number of variables is a fairly
complicated process  since it involves finding gradients and hessians of all
the parameters involved in order to optimize  for our purposes  since the
optimization is primarily over numeric data  we opted to choose the levenberg marquardt algorithm  which
performs numeric minimization over repeated iterations of the algorithm  this suited our purposes  since the
functions governing the kinematics of the arm are sufficiently complicated to prevent easy calculation of
gradients 
optimizing the lengths of all the links as well as the rotation and translation matrices returned the best results 
this shows that the transformation of co ordinates from the arm frame to the sensor frame is also prone to
errors and can be optimized 
in subsequent sections  we describe the setting up of the optimization problem  the experimental set up and
the results that we obtained 

fifundamentals 

figure   schematic of arm parameters

we make the assumption that  even though the lengths of the links are not entirely accurate  the errors in  
to n are small and can be used to train our model effectively 
let jrs be the vector of the   join angles of the arm  the measurements of j are assumed to be accurate 
in order to predict the length of    we need to first find the position of the arm in a  d space  this means that
we need to be able to accurately say what the  x y z  co ordinates of the end effector are 
we have   frames of reference in this problem  the frame of the robotic arm r and the frame of the on board
sensor s 
let xsi be the value of  x y z  returned by the sensor for the ith training sample 
xri be the co ordinates of the arm in the robot space 
we need to find xri in terms of xsi  and match the two  in order to find the correct  x y z  for computation of   
how do we do this  we know the value of ji   the join angles of the ith training sample of the data set  we also
know   the vector of link lengths  we can hence find xri as a function of j and  as 

xr  cos j             sin j           sin j                 sin j       
yr  sin j             sin j           sin j                 sin j       
zr      cos j           cos j                   cos j     
we can use the rotation matrix r  r x  and the translation vector t r  to transform the robot space to the
sensor space  and thus match our robot and sensor co ordinates 

rs  r   xr   t

fioptimizing this reduces to a least squares problem  and once the optimal solution has been found  we can
proceed to use r t and j to find the optimized value of  as  

min r t    k  actual dist  between   pts on the board      rs  xr   xs     
here  k is a scaling factor which imposes a constraint on the optimization and ensures that the matrices are
not changed too much  we measure the distance between any   points on the board and use this distance to
constrain the optimizer to find the length of the links satisfying the distance equation 
in this optimization  we cannot find the gradient or the hessian efficiently  since the function governing xri is
complex  so  we use the levenberg marquardt algorithm to find local optima without finding gradient or
hessians  we iterate over this step till we reach the global optimum 

experimental set up 
procedure for execution of project 

data collection



transform coordinates to
required frames
of reference

optimize the
variables using
this data

verify against
originally
measured
calibration error

data collection  collect join angles of the arm at various positions  in order to find ji 

o on a board  draw some crosses  representing the xsis  these will be used as the points for data
collection 
o scan the board with the laser and record the positions of each data point  this gives us the coordinates in the sensor frame 

fio move the arm to each of the crosses and record join angles and pose at that position  this
gives us the parameters of the robot frame 


transform co ordinates from robot space to sensor space 
the transformation to sensor frame of reference allows us to compare the values from the arm and the
sensor values 



optimize the transformation  using levenberg marquardt algorithm  in matlab 
we ran the levenberg marquardt algorithm on the collected data for      iterations  initializing each
of the   optimization parameters  r t  theta  to some default values  not assured to be accurate  we
found that the algorithm stabilized somewhere around     iterations 



test the optimized parameters in calibration and find change in calibration error 
the output of the optimization was the   parameters   r t  theta   we used this output to re calibrate
the robot and check the calibration error against the original error 

results 
we collected    distinct data points  we ran the levenberg marquardt algorithm on this dataset with
default initializations and performed      iterations on the optimizer 
we then gave faulty initializations to the optimizer and checked for convergence to the correct values  we
found that the length of the last link was optimized to an error of less than  mm and the rotation and
translation matrices were also optimized to get better results 
calibration error   mean error between the predicted co ordinates and actual co ordinates of each sample in
the sensor frame
kinematics error  mean error between the predicted co ordinates and actual co ordinates of each sample in
the arm frame

length of last link

initial

optimized

initial

optimized

     

     

   

        

rotation matrix
change

      

      

translation vector
change

      

      

calibration error

         mm

         mm

         mm

      mm

fikinematics error

 

         mm

       mm

     mm

conclusion and further work 
thus  parameter optimization of robotic arm parameters is much more reliable and efficient than manual
configurations  in the future  we plan to expand the optimization technique to help in calibrating most  if not
all  parameters of the arm  thus reducing time and effort in calibration  we also plan to devise more
sophisticated ways of measuring calibration errors in a more varied environment 

acknowledgements 
i would like to thank mr  quoc viet le for his patience and his counsel throughout the project  i would also like
to thank everyone at the robot learning lab for their support  encouragement and help during my work 

references 
   the levenberg marquardt algorithm  implementation and theory  jorge j more  springer berlin  
heidelberg       
   ng  andrew  least squares method  parameter optimization 
cs      machine learning course notes       aut   available at
http   www stanford edu class cs    materials html

fi