exploiting a database to predict the in flight stability
of the f   
david amsallem and julien cortial
december         

 

introduction

among the critical phenomena that have to be taken into account when an airplane is designed  flutter is
perhaps the hardest to assess  this spurious aeroelastic behavior of the aircraft only appears at certain flying
speeds and is highly sensitive with respect to the aerodynamic and structural design of the airplane  while
the study of the flutter of an aircraft used to be exclusively done experimentally  aeroelastic computational
methods have been developed and successfully applied to full aircraft configurations in the last    years 
these computations involve expensive  non linear  large scale  millions of degrees of freedom   multiphysics
simulations and can only be applied to a few carefully chosen configurations  in those computations  the
output quantity of interest is typically the transient behavior of the lift of the aircraft from which flutter can
be assessed  in order to address the cost issue  reduced order modeling methods such as principal component
analysis  pca  have been successfully applied to the flutter problem  these computational methods are able
to capture the main properties of the system such as the linear stability of the aircraft at a much lower cost
than the full order simulations     
however  these reduced order models  roms  are not robust with respect to the flight condition and
hence have to be rebuilt when any parameter is modified  to alleviate the computational burden  a database
approach has been recently proposed  first  a limited number of reference flight conditions are chosen and
the corresponding roms are built offline  a cheap online interpolation is used to output a rom adapted to
the considered input parameters  the effectiveness and the robustness of the method has been proved when
applied to the aeroelastic behavior of two full aircraft configurations  f    and f    a      
the prediction for a particular input relied so far on an educated guess as well as an ad hoc trial anderror process in order to determine the interpolation parameters such as the number of points to use as well
as their location  the choice of these parameters is critical as the adapted rom can lead to accurate or
inaccurate time responses as shown in figure    the first interpolated rom  in red  gives a meaningless
approximation of the reference time response shown in blue whereas the second one  in green  is a good
approximation  in this work  we will always use the error in l   norm between the responses as an accuracy
criterion 
the main objective of the project is to bring the framework one step closer to an industrial strength
implementation  which could ideally be treated as a black box system by the final user instead of requiring
an extensive knowledge of the underlying principles  the ultimate goal would be to enable real time flutter
assessment  this implies to be able to exploit the discrete database  used as a training set  to reliably predict
the physical behavior at any arbitrary input feature in the domain of interest 
this report is organized as follows  first we present the problem specificities and the anticipated difficulties derived from empirical experience  then we describe the training methodology that was developed
concurrently with a cross validation process  finally we show that the resulting framework can be used to
make accurate predictions in a realistic test case 

 

overview

the solution vector for the flow around the aircraft at a given flight condition has ndof               entries 
each corresponding to one degree of freedom  dof  of an accurate numerical model for the considered physical
system  however  this full order model can be reduced using the pca method by projection onto a subspace
of dimension nrom       when the reduced space is properly chosen  experience has shown that this rom is
sufficient to investigate the flutter phenomenon of the aircraft at a specific flight condition that depends on  
parameters  namely the speed of the aircraft  mach number  and its attitude  angle of attack   the training
 

fifigure    comparison of the lift time response computed directly and two time responses computed using
two different interpolated roms 

set considered in this project is therefore a database of such roms constructed for a f    configuration 
where each training example corresponds to the mapping of a given flight condition to the corresponding
reduced basis stored as a ndof  nrom matrix 
while the considered problem has only   scalar input features  it exhibits the following specific properties 
 the output variables may change arbitrarily fast when the input features change  which may lead to
inaccurate predictions or even to ill posed interpolation schemes if the training examples are too far
apart 
 because of the high computational costs  it is desirable    to perform as much preprocessing as possible
to ensure an efficient online interpolation and    to limit the amount of offline computations as well 
both of these observations lead us to consider only local interpolation schemes  therefore  we postulate that
the exploitation of a database should begin with the definition a series of clusters in which we can reasonably
expect to derive meaningful local interpolation schemes 
furthermore  since our experience so far has clearly shown that extrapolation was defective  we want to
make sure that a proper interpolation is used on any point of the domain of interest  thus it appears more
relevant to define clusters in terms of subdomains covering the domain of interest in the feature space 
to sum up  our goal is to determine a unique and accurate interpolation scheme for each subdomain of
the parameter space 

 

training phase

   

database construction

using    cpus on a computational cluster  it takes about    minutes to compute each one of the    entries
in the database  which are reported as blue dots in figure   a   the convex hull  shown as a blue line  in
the parameter space  mach number and angle of attack  corresponds to the domain of interest 

   

triangulation and dual cells construction

the main goal is to partition the parameter domain in cells such that each cell contains one and only one
training point and such that the union of all these cells covers all the convex hull  except a very limited
region along its boundaries  this proceeds in two steps 
 step    triangulate the set of points in the database using delaunays triangulation  the resulting
triangles are shown in blue in figure   b  
 

fi step    consider the set of the centers of gravity of the triangles from step    for each interior point in
the database  define its dual cell as the polygon whose vertices are the centers of gravity of the adjacent
triangles  the resulting dual cells are reported in red in figure   b   notice that the dual cells cover
the interior of the database and that each cell contains one and only one point  shown in green in the
figure  

   

clustering

the idea is to define several clusters of training examples via the cells defined previously  these cells are first
partitioned into groups using a variant of the k means algorithm  then  for each of these groups  a cluster
is defined by the set of points inside every cell of the group as well as every neighboring point 
the k means algorithm is here applied to the set of dual cells in order to partition this set into clusters 
to balance accuracy  exhaustivity and computational cost  we have determined that it is optimal to have
about    points in each database subset  which means that each cluster of dual cells must have between  
and   dual cells  this gives therefore an upper and a lower bounds for the number of cells in any given
cluster  the algorithm proceeds as follows 
 step    specify an a priori number of clusters k  as well as lower and upper bounds on the number of
cells in each cluster 
 step    randomly determine the initial k cluster centers 
 step    run the k means clustering algorithm on the set of cells until convergence  the cell centers
are used to compute the distances 
 step    check that every cluster has a valid number of points  if any cluster has too many points 
a new cluster is added  its initial center being randomly chosen in the original cluster  if any cluster
does not have enough points  it is simply removed 
 step    if at least one cluster does not have the required size  go back to step    otherwise terminate
the algorithm 
the resulting grouping of the dual cells is reported in figure   c      clusters have been created  each
one containing between   and   cells and between   and    points of the database  after inclusion of the
neighboring points 

   

in cluster cross validation

inside each cluster  a cross validation process is used to select the best local model inside each cell  for the
sake of simplicity and to limit the computational time  two different interpolation models are defined 
 m    interpolation using n      pre computed points 
 m    interpolation using n      pre computed points 

each cluster c includes interior points xi   i           nic and boundary points xi   i           nbc   let us then
define the singletons si    xi    for i           nic and the set of boundary points s    xi   i           nbc   
leave one out cross validation is then applied as follows 
 evaluate each model mi   i        
for j           nic  
train the model mi on tj   s   sj  sj    snic  s   c sj   that is perform    interpolations
using ni points randomly chosen in tj   compare the    responses obtained by interpolation to the
response obtained directly at the training point and retain the most accurate one in the l   norm error 
the corresponding interpolation scheme  set of points that were used in the interpolation  becomes
the hypothesis hij  
denote by sj  hij   the l   norm error between the direct response at sj and the one obtained by
interpolation using the hypothesis hij  
compute the generalized estimation error for the model mi  
 pick the model mi with the lowest estimated generalization error and for each cell sj assign the
corresponding interpolation method as the interpolation method to be used whenever interpolation is
required inside the cell 
 

fithe interpolation parameters determined using this algorithm are shown in figure   d  and their corresponding retained models in figure   e   in figure   d   for each interior point represented by a dot in the
figure  the corresponding set of interpolation point is shown as a polygon of the same color enclosing it  in
figure   e   the cells where the model m  has been retained are reported in blue and the one for model m 
are in red 
in conclusion  this training step has assigned to each cell a unique interpolation scheme to be used whenever
an arbitrary rom whose input parameters belong to the cell is desired 

 a  training database and domain of interest

 b  triangulation and corresponding dual cells

 c  a possible set of groups of cells

 d  retained local interpolations schemes

 e  local interpolation models

 f  test points for the prediction phase

figure    training and prediction phases for the f    model

 

fi 

prediction

we take   points in the input feature domain representing a realistic flight test and compare the predicted
rom given by our methodology to the  supposedly  accurate rom obtained by a direct method  these  
points are represented as the   red dots in the parameter space in figure   f  
test point  
relative error    

 
    

 
    

 
    

 
    

 
    

table    accuracy of the interpolated rom versus the rom obtained by a direct method
the relative error of the time dependent stability analysis is given in table    it can be shown that the
results obtained by interpolation are very accurate  the corresponding time histories of the lift at the test
point   using the direct and the interpolation methods are shown in figure      very good agreement can
be seen as the error is of the same magnitude as the intrinsic error of a rom versus a full order model 

figure    lift time histories comparison for test point   

 

conclusion

the presented method enables a full scale and accurate database exploitation for real aircraft stability
investigation  which is of great importance for in flight flutter prevention  an interesting and important
extension of this work would be the definition of an improved database generation process  for instance 
when the produced prediction is not considered adequate  the database should be automatically locally
refined  the feasibility of a completely automated data gathering process could also be investigated 

references
    lieu  t   farhat  c  and lesoinne  m   reduced order fluid structure modeling of a complete aircraft
configuration  comput  methods appl  mech engrg   vol             pp            
    amsallem  d  and farhat  c   interpolation method for adapting reduced order models and application
to aeroelasticity  aaia journal  vol      no           pp            

 

fi