train your tv
zhi li  borja peleato
cs    class project  autumn          
abstract
we study the problem of predicting the viewers behavior in
an interactive tv application  using soccer matches as an example  based on the information extracted from the video
frames and the users region of interest  roi  trajectory history  we make the prediction of the viewers roi ahead of
time  we start with a generic probabilistic model  make simplifications and develop a tractable system  lastly  we verify
its performance through a set of experimental results and a
live demo 

   introduction
consider you are watching a live soccer match on tv  the
latest interactive tv technology enables customized viewing
experiences for users  you are enabled to pan tilt zoom the
video according to your viewing habits  for example  you
may want to have a clear view of where the ball is  alternatively  you may choose to view the details of a particular
player you like  in this project  our goal is to make the interactive tv even smarter  it can automatically learn the viewers
habits and adapt accordingly  there are at least two advantages of this approach  first  if we can successfully predict the
viewers region of interest  roi   we can do a pre fetching in
the streaming of the video and hence reduce the latency or
the image distortions  second  when the viewer is tired of
changing the roi  the smart tv can do this on his behalf 
prior work on coding and streaming for interactive tv applications has been studied in         in      the authors have
also experimented with predicting the viewers behavior using various tools  such as arma model  kalman filter and
motion vectors extracted from the compressed video  however  none of the above approaches involve any learning algorithms  thus they are non adaptive to each individual viewers
behavior  in this project  we develop a learning module which
allows the system to learn and adapt to each viewers behavior  thereby enhancing the viewing experiences 
this report is organized as follows  in section    we introduce the setup of the interactive tv system  in section   
we formulate the roi prediction problem and present our solutions  section   presents a set of experimental results to
demonstrate the effectiveness of our learning algorithm 

fig     user interface for interactive tv viewing 

   environment setup
we consider the following system environment  the fullframe video is captured by a high resolution camera and is
available at the server  the video streamed from the server
to the client includes two parts  a base layer overview video
and the enhancement layer roi video  refer to fig      at the
client side  the viewer indicates his roi  if the roi matches
the predicted one  then both the base  and enhancement layer
streams are decoded and rendered as a high resolution video
and displayed  if they do not match  then only the roi of the
base layer video is decoded and rendered as a low resolution
video  hence  better roi prediction would lead to higher
video quality 
our main objective in this project is to implement a module which can learn and accurately predict the viewers roi  in
order to facilitate such prediction  we will allow some streaming start up delay and send some overview video frames ahead
of time  the inputs to this module are the viewers roi trajectory history and the overview video up to the frame of prediction 
the performance will be evaluated based on the euclidean
distance between the predicted roi trajectory and the actual
one  to evaluate the prediction subjectively  we have built up

fithen based on the value of t n we generate t and f t n
separately  according to this assumption  we have 

   
training
window
current
time

look ahead
window

p f t n   t   t n     p f t n   t n  p t   t n   
time of
prediction

   

we can then write 
p t n   f t n   t

fig     timeline of the roi prediction problem 



 p t n  
p f t n   t  

 p t n  
 p f t n   t n p t   t n
p f t n   t  
p  t n   f t n   p  t n   t   p f t n  p t  
 
 
p t n  
p f t n   t  

 p f t n   t   t n
a live demo  the demo lets the user specify his roi during
the first     frames of the video  uses that information for
training  and makes predictions for the rest      frames 
in this project  we only focus on the streaming of a live
soccer match 
   problem formulation and solution
in this section  we start with a generic probablistic model  we
show that by making proper assumptions we can decompose
the problem into two parts  prediction using overview video
frames  section      and prediction using viewer roi trajectory history  section       in the end  we present an overall
block diagram of the proposed solution 
     probablistic model
suppose we have a sequence of overview video frames  fi   
on each frame the viewer can indicate a roi i   according
to the viewers indication  the roi video is rendered  the
parameters used to characterize the roi are  the position of
the roi center  x   y   and the roi zoom  i e   region size 
z   assume the roi region has fixed aspect ratio   then the
width and height of the region are z and z   respectively 
overall  i    xi yi zi  t  
we derive a probabilistic model for the roi prediction
problem  suppose currently we are at time t  we want to make
a prediction of the viewers roi n frames later  i e   t n   the
information available for our prediction includes the following  the overview video up to frame  t   n   i e   f t n  
         ft n    ft n    ft n    and the viewers roi trajectory
history up to frame t  i e   t            t    t    t    based
on all the information available  we make a prediction using 

t n   arg max p t n   f t n   t  
   

t n

we want to decompose p t n   f t n   t   into factors that
only depend on f and  separately  a heuristic way to do this
is to make the markovity assumption below 
f t n  t n  t  

   

that is  the information from the overview video f t n and
the trajectory history t can be considered independent given
the viewers roi at  t   n   a generative  but non causal  interpretation of this assumption is that we generate t n first 

   

notice that p t n   is the prior probability of the roi we
want to predict  here we adapt the frequentists point of view
and do not make any assumptions on it  therefore  we treat
p t n   as uniformly distributed  i e   a constant   our prediction rule simplifies to 


t n   arg max p t n   f t n p t n   t      
t n

the first term p  t n   f t n   can be interpreted as the prediction based on the available overview video frames and the
second term p  t n   t   as the prediction based on the viewers
trajectory history 
direct prediction of     x y z   using regression is
difficult  instead  we discretize each video frame into blocks
 say          and predict the probability that each block
is in the roi  writing this formally  let p x  y   where   
x  n     y  m be the position of the block  and let
it n  p  be the indicator function of block p being in the roi
at frame  t   n   we want to find out pr  it n  p    f t n  
and pr  it n  p    t    after they are found for every block 
we obtain a probability map  then we find  x y z   by
fitting the probability map with a rectangular area 
in the next two subsections  we derive models to compute
pr  it n  p    f t n   and pr  it n  p    t    respectively 
     prediction using video frames
we make the following simplifications 

pr it n  p    f t n   pr  it n  p    ft n  
  pr  it n  p    t n  p   p 

   

the first equation is due to the assumption that it n  p  is conditionally independent of the previous frames f t n  given
frame ft n     the second equation makes the assumption
that it n  p  depends only on a local patch t n around p and
  actually not quite  as we will see next  the features we extract from
the frames include movement intensity  which is also determined by previous
frames  but for notational simplicity  let us write as such 

fithe actual location p  e g   whether the roi is in the field or at
the audience do matter  
to compute pr  it n  p    t n  p   p   we select features
to reflect t n  p  and p  and use a logistic regression model 
we select the following local patch features 
 dist ball p   euclidean distance from the local
patch center to the ball  if the viewers roi follows the
ball  then the larger dist ball p   the less likely
p is in roi  ball detector for soccer sequence is readily
available in the literature      in this project  we assume
we know the ground truth where the ball is by manually
marking the ball position throughout the frames 
 m ov  p   local patch movement intensity  we compute this by measuring the difference between adjacent
frames  our assumption is that typical viewers would
be interested in viewing areas which invovle intense
movements 
 n u m p lay ers p   number of players within a
local patch  we first segment the players from each
video frame  and then count how many players are in
a local patch  our assumption is that the viewer would
be interested in areas with more players 

take this scheme as a benchmark for comparison  and we will
try to improve upon it using learning techniques 
the available information is the viewers recent roi trajectory history t         t    t    t   and his behavior
from watching previous matches                  n   alternatively  we could obtain the later set of trajectories from
other viewers watching similar programs  in our case  soccer matches  our hypothesis is that there exist some short
typical trajectories that viewers very commonly follow  examples of these would be moving to the scoreboard and back
to the field  parabolic following of goal kicks  u shape when
scanning through the audience  etc  some of these trajectories are not linear  and it would be difficult to capture them all
under a single set of linear regression parameters  hence  we
group similar trajectory segments into a single class and then
find a different set of regression parameters for each group 
past trajectories                  n are cut into overlapping segments of     frames  i e      seconds for frame rate
     this gives us a very large number segments on which to
run the k means algorithm  by means of cross validation we
found out that    was the optimal number of clusters for our
data  
for each cluster we chose the regression parameters to
minimize the mean square error  given by the normal equations  let              n be the set of segments that fall into
the i th cluster  build matrix

to capture the location information  we give each block
of the frame a label  and measure the percentage of each label
within a neighborhood area  say       of p  the constructed
a                                       n             t
feature vector is


p erc f ield p 
with    of their first     samples  and vector
 p erc goalm ou t h p  


 p erc au dien ce p  
b                         n      t

local label p    
 p erc scoreboard p    




p erc ads p 
with their     th sample  the parameters for a prediction
p erc ceilin g p 
with training window of     samples  i e     seconds  and
lookahead of    samples  i e     seconds  are given by ci  
overall  the feature vector x i   r  extracted from a frame
 at a   at b  the parameters and centroids of each cluster
at location p is 
are computed during an offline training phase and stored to be


used at the prediction time 
dist ball p 
while the viewer is watching the match  the position of


m ov  p 
 
x i    
the
roi
during the last     frames is kept  and compared once
 n u m p lay ers p  
per
second
with the centroids of all the clusters  the viewers
local label p 
trajectory is assumed to belong in the cluster whose centroid
is closest  once decided the cluster  the corresponding cogiven i   the target variable y  i    it  p  is straightforward to
 i   i 
compute  after obtaining a set of training examples  x   y    efficients are used to center our gaussian model for the predicted roi center  zoom factor was modeled by convolving
we run logistic regression to obtain parameter  
this gaussian distribution with a rectangle of the same size as
the current roi window 
     prediction using viewers trajectory history
the second term pr  it n  p    t   in our probabilistic model
represents the information given by the viewers trajectory
history  the straight forward option would be to perform a
linear extrapolation based on the last available positions  we

  the number of parameters increases with the number of clusters  too
many clusters causes overfitting  too few underfitting  with more data  this
number would have been much larger  for the milestone report we used a
larger trajectory dataset recorded on a shorter clip  the optimal number of
clusters was    

fivideo frame partioned into blocks  frame      

trajectory

region map
ceiling
scoreboard

 

ball
 
detection

audience

ceiling
scoreboard

audience

 

goalmouth

 
field

 
  

 

goalmouth
 
  
  

ads
  

  

  

  

segment

  

field

 
  

distance
to ball

region map

 

player
detection

 

movement
  
  
intensity

ads

number of
  
  
players

centroids

minimum
distance

   local
  

  

labels

training
feature vector

k means
clustering

least
squares

label

least
squares

linear
regression

 
 
 

logistic
regression

lse coeffs

least
squares
least
squares

training offline

query feature vector
probability map

prediction using video

prediction using trajectory history
prediction using trajectory history

 

 

 

 

 

 

 

 

  

  

 

  

  

  

  

  

  

  

combining
information

 

  

  

  

  

  

  

  

 
 
 
 
  
 

  

  

  

  

  

  

  

fig     illustration of the overall roi prediction scheme 
     prediction using combined information
each of the above prediction schemes results in a probability
map over the frame blocks  according to      we can estimate
the probability of a certain block being in the roi as the product of the individual probabilities in each of those maps  the
roi center is predicted as the center of mass of the resulting
probability map  and the region size as its standard deviation 
fig    gives a schematic illustration of the overall scheme 
   experimental results
the performance of our scheme is evaluated in terms of the
euclidean distance between the predicted roi and the ground
truth  the euclidean distance is computed based on vectors of
 x y z  t   we generated    user trajectories along     
frames  i e     x    seconds  and labeled them according to
the viewer behaviors  viewers could be either following the
ball  scanning the audience  looking at the players or having varying behaviors  for each of the experiments we randomly picked     of the candidate trajectories for testing and
used the rest for training  while playing the test trajectories 

we performed one prediction per second  obtaining over    
samples per trajectory  unless otherwise noted  the training
window and lookahead duration are set to   and   seconds 
respectively 
fig    shows the mean distance between the predicted and
the actual roi for different prediction schemes and viewing
behaviors  for each behavior  we show four bars corresponding to the prediction using video features  good for well localized behaviors  such as ball or players   recent trajectory
 good for varying behaviors   combination of the previous
two  and linear extrapolation  comparison benchmark   from
the plot  it is observed that the combined scheme always has
better performance than the linear extrapolation scheme 
in order to evaluate how our schemes escalate to more
challenging requirements  we also tested their performance
for different lookahead and training window durations  fig   
shows the relation between lookahead duration and performance  for short lookahead durations  trajectory predictions
are better  however  as we try to predict further in time  the
video features offer a more reliable source of information  we
find that as long as the algorithm has correctly identified the
viewers interest  it can lock on to them for a long period of

fi  

 

video information
trajectory history
video combined with trajectory
simple extrapolation

roi euclidean distance

 

video information
trajectory history
video combined with trajectory
simple extrapolation

   
roi euclidean distance

 

 
 
 
 

 

   

 

 
 

   
 

 
 

ball

audience

players

mixed

 

 

 
 
 
 
  
training window duration  sec  

  

  

fig     performance under different training window duration 

fig     performance under different viewer behaviors 
lookahead time  the performance of the combined scheme
does not degrade significantly  this implies that our learning
algorithm will be very useful for delay sensitive video streaming applications 

 
video information
trajectory history
video combined with trajectory
simple extrapolation

roi euclidean distance

 
 
 

   acknowledgments
 

we would like to thank aditya mavlankar for sharing the soccer sequence and the initial user interface  we would also like
to thank prof  andrew ng  ian goodfellow  honglak lee 
chuong  tom  do and tianshi gao for really helpful discussions 

 
 
 
 
 

 

 

 
 
 
lookahead time  sec  

 

 

 

   references
fig     performance under different lookahead duration 
time  it is also worth noting that the combined scheme corresponding to our probabilistic model is able to maintain a
lower error than each individual scheme for most of the tested
lookahead durations 
finally  fig    shows the relation between training window length and performance  longer training durations slightly
improve the accuracy of trajectory predictions  but at the cost
of increased complexity and reduced feature reliability 
   conclusions
although it might seem hard to perform a real time roi prediction for a viewer watching a soccer match  it turns out that
by analyzing his past behavior  and extracting some very simple features from a low resolution overview video  we can
perform much better than a simple linear extrapolation model 
furthermore  by using learning based techniques we are able
to make the system adaptive to individual viewers behavior 
one interesting observation is that when we increase the

    aditya mavlankar  pierpaolo baccichet  david varodayan  and bernd girod 
optimal slice size for
streaming regions of high resolution video with virtual
pan tilt zoom functionality  in proc  of   th european
signal processing conference  eusipco   sept       
    aditya mavlankar  jeonghun noh  pierpaolo baccichet 
and bernd girod  peer to peer multicast live video
streaming with interactive virtual pan tilt zoom functionality  in proc  of international conference on image processing  icip   oct       
    aditya mavlankar  david varodayan  and bernd girod 
region of interest prediction for interactively streaming
regions of high resolution video  in proc  of   th ieee
international packet video workshop  pv   nov       
    x  yu  c  xu  h w  leong  q  tian  q  tang  and
k w  wan  trajectory based ball detection and tracking with applications to semantic analysis of broadcast
soccer video  in acm conference on multimedia  nov 
     

fi