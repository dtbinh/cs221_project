predicting   dimensional arm trajectories from the activity of cortical neurons
for use in neural prosthetics
cynthia chestek  cs     midterm project review         
introduction
neural prosthetics is a relatively new field that involves recording from neural activity in the
cortex and decoding a useful signal that can be used to control an external device  there has been
considerable recent interest in using such a system to provide brain controlled robotic limbs to amputees 
however  due to the increased safety concerns and cost to patients undergoing neurosurgery  the viability
of brain controlled robotic limbs depends on the ability to control many more degrees of freedom than
currently available devices  and produce nearly arbitrary movement  while sufficiently articulated robotic
limbs can be created  it still an open question whether sufficient control information can be obtained using
the output of a few dozen neurons  significant prior work has been done with animals selecting fixed
targets by controlling a cursor on a screen with neural activity  one approach involves decoding the
desired end point directly  this approach has resulted in the highest rate of information transfer reported
to date      bps      however  controlling a robotic limb would require the second approach  which
involves decoding trajectories rather than end point  several groups have taken this approach  including
recent work in humans  which utilized a kalman filter for closed loop control of a cursor on a computer
screen  this group and others have also demonstrated the ability for humans and monkeys to control
robotic limbs with limited degrees of freedom in similar closed loop systems         
however  a practical clinical system for a brain controlled robotic limb could not involve training
on every possible reaching location the patient might require  therefore  this class project evaluates the
ability of several of these decoding algorithms to generalize to targets not seen in the training data set 
this will involve driving a two segment arm model in matlab with neural data obtained from rhesus
macaques making hand reaches to one of eight commanded targets  several methods were used including
linear regression with different position encoding schemes  a kalman filter using the neural firing rates as
a noisy measure of the desired position  and nave bayes encoding discrete movement steps  several
groups still use linear regression to reconstruct end point trajectories due to its ease of implementation and
fairly high performance        however  it does not constrain the endpoint to realizable arm movements 
a kalman filter does constrain the movements to reasonable trajectories  and represents the current state
of the art in human fda trials for brain computer interfaces      finally  nave bayes is similar to direct
endpoint systems that have the highest reported performance  though extending this into trajectory
decoding requires discretizing all aspects of the movement  these different approaches were first
compared according to overall ability to generate correct trajectories in this experimental paradigm  and
then evaluated based on how well the learned models generalized to targets left out of the training data 
methods
the neural data used for this project has been previously analyzed in      it was obtained from a
single rhesus macaque monkey  with a    electrode array implanted in pre motor cortex  each electrode
can record the activity of      neural units  the animal performed an eight target center out reach task 
while this activity was recorded for a total of     hours or      reaches  neural data was sorted using the
sahani spike sorting algorithm  which using automated clustering in principle component space  based on
the spike waveforms        figure  a  shows an example of the activity of individual neurons for a single
reach  which is the raw input to this learning algorithm  using the rate coding assumption that relevant
information is contained in a units average firing rate  the number of spikes was summed over into    
ms bins  to provide an estimate of firing rate across time  the input matrix also includes    copies of each
neurons firing rate with     ms lags up to   sec in the past  similar to     

fifigure  a  neural data for one reach

figure  b  example reach trajectory

for this data set  only the  x y z  position of the hand was recorded  therefore  a few assumptions
were necessary to extrapolate kinematics of the whole arm  from observation of animals performing
similar reaches  the shoulder position seems to remain fixed and the elbow position remains as low as
possible  presumably to minimize energy consumption  figure  b shows an example of a reach in three
dimensions  which is the desired output of the learning algorithm 
for the first method  linear regression was performed with limb position specified by either xyz
position of the hand  joint angles  or change in xyz position from the previous position  neural firing rates
are causally linked to muscle force through a significantly non linear relationship  therefore  its difficult
to predict which features of movement will result in the best linear estimation  so a few different features
of the motion were evaluated 

yhandpos   x neurfiring bmod el    

b     x t x     x t y    

the kalman filter used a linear estimation of hand position and velocity in the x y z directions
from firing rates as the measurement  similar to linear regression  as in      velocity was estimated from
distance traveled between sequential timesteps  the state equations for the filter are given in equations    
and      the measurement at time i is the firing rates of all the neurons  x i   this measurement is
assumed to be generated from a linear relationship with the kinematic variables y i  as well as a noise
term q i   which is assumed to be gaussian  the system also includes a term to describe how the state
propagates in time with a added random walk element  these   matrices  h  q  a  and w  were assumed to
be constant in time  full derivations of the closed forms of these solutions can be found in      both the
measurement noise q i  and movement distribution w i  was observed to be reasonably gaussian in the
training data set 

x  i     hy  i     q i      

x  i        ax  i     w i  

   

using a generative approach with nave bayes  nb   movement was encoded as a step of a given
length at a given angle each     ms timestep  several aspects of movement were discretized  first  a
model was created to differentiate moving vs stationary  the x position of the hand was categorized as
either touching or not touching the screen  movement in the y z plane used discrete steps in one of   
discretized angles  step size was simply equal to the average distance traveled during     ms of active
motion  firing rate was modeled as xi yj   poisson ij  for each neuron and each category  moving vs
not moving  touching vs touching  and    discrete angles   since e xi yj    ij  estimates were
determined as in      to attempt to better generalize to angles not seen in the training set  to accomplish

fithis  smoothness of lambda was enforced across the target angles y using linear interpolation in one
experiment  note that p y  was also enforced to be a uniform distribution  so that nb determined the most
likely target using p x yj  alone  as shown in     

   y  
 
   y
 i  

 nj

j   xn

i

 i  

  j 

 i  

   

max j p   x   y j      log 
n

 nj x

n

x 

e

 nj

     

i

results
overall performance
linear regression successfully recreated from neural data three dimensional trajectories highly
correlated with the original trajectories  figure   shows an example of a successful predicted reach  the
training set used to generate the model included the first     reaches in the data set  while the test set
included     subsequent reaches  correlation coefficients between the predicted and actual xyz
coordinates are shown in table    column    the fourth row gives the percentage of time in which the
hand came closest to the correct target  and the bottom row shows what percentage of the time the hand
stopped within     cm of the target  in   dimensions   to try and determine whether the neural activity
would be more closely tuned to alternate kinematic parameters  such as joint angle and change in position
 rather than the absolute position  regression was performed representing the output in those formats  the
results are shown in columns   and    angle encoding performed just as well as hand position encoding 
whereas decoding change in hand position led to cumulative errors that dramatically reduced
performance  finally  the kalman filter had very similar performance to the linear regression  as

shown in the fourth column
table   
hand
xyz

joint
angle

xyz

kalman
filter

x

    

    

y
z
 correct
 hit

    
    
     
     

    
    
   
    

    
 p       
    
    
   
   

    
 not sig 
    
    
   
   

figure    linear regression predicted reach

nave bayes was also applied to this problem  as described in the methods section  model
parameters ij were trained on the first     reaches in the data set and tested on     subsequent reaches 
the performance is shown in column   of table    nb outperformed linear regression in both correlation
with the actual reach position and error rate in hitting the target  figure   shows an example of a
successful reach using nb  note that the trajectory looks reasonable despite being discretized 
all together  these measurements together establish a baseline of these algorithms performance
on this particular dataset 

fitable  
nave
bayes
x
y

    
    

z
 correct
 hit

    
     
     

figure    predicted reach to left out target

figure    nave bayes predicted reach

generalization
all three algorithms were then trained with  using absolute position  with a dataset of     reaches
missing   of   of the targets  and tested on     reaches to that target  performance is shown in table   
while figure   shows examples of resulting trajectories  nave bayes predictably generalized the worst  it
consistently picked neighboring targets  as shown in figure    right   and only rarely hit the correct target
when guesses were oscillating between the two neighbors  linear regression fared somewhat better 
correlation coefficients remained fairly high  and it hit the target     of the time  compared to    
previously  the kalman filter had the best generalization performance at a     hit rate  this makes
sense  since linear regression often moved roughly in the correct direction with unreasonable abrupt
jumps from place to place  the kalman filter always produced reasonable trajectories that were also
roughly the correct direction 

linear
regression

kalman

nave
bayes

figure    reaches to novel targets

table   
x
y
z
 correct
 hit

linear regression
    
    
    
   
   

kalman filter
       notsig 
    
    
   
   

nave bayes
    
    
    
   
   

the generalization of nave bayes could be somewhat improved by finding the ij for each angle
and smoothing them according to a cosine fit  figure   shows an example of the smoothed ij for all   
possible angles in which the algorithm can take a step  this increased the generalization performance to
    for the missing target as shown in table    however  general performance on the other targets was
substantially reduced to     

fitable  
x
y
z

figure    cosine smoothed firing rates

 correct
 hit

novel target
    
    
    
 p       
   
   

other targets
    
    
    
   
   

discussion
all three models had good performance with a complete training set that included all   targets 
nave bayes performed the best  taking advantage of the limited number of possibilities  conversely 
nave bayes had the worse performance on novel targets  almost exclusively going to the targets near the
correct target  the kalman filter had the best performance on novel targets  presumably because it made
the strongest modeling assumptions about the system  not only did it include a linear estimate of position
and velocity from firing rates  but it also included a model for how the hand is capable of moving 
in the future  generalization will be a growing issue in neural prosthetic design  current systems
controlling a   d cursor take approximately     hour of model training for   hours of use  so it would be
difficult to use a more inclusive training set      transitioning to motion prosthetics  not only will systems
have to reach to novel locations  but users may also require control of speed and posture  it will not be
straightforward to infer average neural firing rate across all of these variables  even if the signal did not
have a significant noise component  therefore  given such limited input  learning algorithms will likely
have to make very strong and correct model assumptions about how the arm tends to move  however 
with such a system  it may be possible to achieve nearly arbitrary movement in a brain controlled arm
prosthetic 
references
i would like to acknowledge gopal santhanam  byron yu  and afsheen afshar for allowing me to use neural data
they had collected for another research program  also  prof  krishna shenoy provided guidance regarding the
appropriate algorithms and the open questions in the field of neural prosthetics 
    santhanam  g   ryu  s  i   yu  b  m   and k  v  shenoy  a high performance brain computer interface 
nature              
    taylor  d  m   tillery  s  i  h   and a  b  schwartz  information conveyed through brain control  cursor versus
robot 
    hochberg  l  r   serruya  m  d   friehs  g  m   mukand  j  a   saleh  m   caplan  a  h   branner  a   chen  d  
penn  r  d  and j  p  donoghue  neuronal ensemble control of prosthetic devices by a human with tetraplegia 
nature              
    yu  b  m   ryu  s  i   churchland  m  m   and k  v  shenoy  improving neural system performance by
combining plan and peri movement activity  proc  ieee embs  san francisco  ca sept            p          
    carmena  j  m   lebedev  m  a   henriquez  c  s   and m  a  l  nicolelis  stable ensemble performance with
single neuron variability during reaching movements in primates  j  neurosi                     
    lebedev  m  a   carmena  j  m   odoherty  j  e   zacksenhouse  m   henriquez  c  s   principe  j  c   and m 
a  l  nicolelis  cortical ensemble adaptation to represent velocity of an artificial actuator controlled by a brainmachine interface  j  neurosci                   
    wu  w   gao  y  bienenstock  e   donoghue  j  p  and m  j  black  bayesian population decoding of a motor
cortical activity using a kalman filter  neural computation                 
    m  sahani  latent variable models for neural data analysis  computational and neural systems program 
california institute of technology       
    santhanam  g   sahani  m   ryu  s  i   and k  v  shenoy  an extensible infrastructure for fully automated spike
sorting during online experiments  proc   th ieee embs  san francisco  ca                  

fi