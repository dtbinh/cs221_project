cs    final report  predicting cycles in the foregin exchange
market
manuel r  lopez morales

nicholas shelly

inna brodkin

autumn quarter     

abstract

 

training

bid  buy  price
ask  sell  price
     

     

     

dollar euro

professional foreign exchange  forex  traders successfully predict cycles in the market  we hypothesize that a machine learning algorithm would be able to
identify those patterns as well  in the current project 
we develop a trading algorithm which takes as input a
segment of the tick by tick history of the bid ask values
of the euro u s  dollar  eur usd  and makes the decision of buying or selling the pair with the purpose of
making a profit 
the project has three main phases  first  to acquire
and manipulate raw data to train the algorithm  second  to implement a neural network  nn  to predict
whether or not the most recent price is a local optimum
in a cycle  third  to implement a markov deicison process  mdp  algorithm to make the decision of buying
or selling the pair based on the nn prediction 
we predict the first and second derivatives of the
price trends using a nn trained online  the training
is done with the latest first and second derivatives of
the trends that could be computed  in our case  the
latest training occurs with the trend derivatives found
   ticks before the tick whose trend derivatives we are
predicting 
the nn successfully predicted        of the price
cycles of the eur usd pair between november  th and
 th         the mdp was not able to take advantage of
the predictions to make a profit  nevertheless  a hardcoded logic was able to generate a profit of    

     

     

    

     

     

     

     

     

      

      

      
      
     
time  miliseconds 

      

      

      
 

x   

figure    eur usd tick by tick bid ask prices on
november  th       

   

data

the data used during development  shown in figure   
consists of tick by tick bid ask prices of the eur usd
pair relative to time  the data shown corresponds to
one day of trading and contains         ticks  one tick
represents a change in bid ask  the frequency of the
change in the price depends on the liquidity of the market  or the volume of the pair being bought and sold by
all participants  it is important to note that access to
high quality data is expensive  most of the freely available data is trimmed  the data used in this project was
found freely in histdata com and  even though it does
not contain large gaps  the accuracy of the values is not
guaranteed 

we chose to do online training of the nn in order to use
the latest patterns found to predict the current trends 
the training proceeds as follows  process the latest data     cycle detection
to find the trend derivatives from    ticks ago  show
the bid and ask values tend to move together with a
these real values to the nn  and use backpropagation
constant difference  called spread  to detect cycles  we
to update the weights in all nodes 
analyze the average of the values  as figure   shows 
 ph d  candidate  department of aeronautics and astronauthe data contains vast fluctuations  the identification
tics  stanford university  mlopez   stanford edu
of data points that belong to cycles is not so straight m s  student  computer science department  stanford uniforward  our approach to identifying points that mark
versity  nshelly stanford edu
 software
engineer 
ketchum
trading  a minimum or maximum in the general trend was to
inna brodkin gmail com
smooth the data using locally weighted linear regres 

fishift  however  upon closer examination  it becomes
apparent that the shift of the values is not constant  in
some occasions  the predicted values match the behavior of the training values  at other times  the predicted
values lag significantly  a good way to see this this
variation in the lag is by comparing the peaks of the
training and predicted values in figures   and    the
spacing of the ticks in time is almost constant in figures   and    so the change in lag cannot be attributed
to the mere irregularity of the ticks in time 

      
raw data
smoothed data
     

      

eur usd

      

      

      

     

      
 

      

 

      
     

 

x   

smooth  st derivative
predicted  st derivative
     

     

     

     
     
time  miliseconds 

     

      

      
 

x   

 
 st derivative of price w r t  time

figure    comparison of raw data and smoothed data

 

 
sion  lwlr  on selected data points around the tick
being analyzed  figure   shows a comparison between
 
the raw data and the smoothed data 
interestingly  by modifying the weighting in the
 
lwlr  it would be possible to capture cycles of dif 
ferent sizes and  hence  train the algorithm to identify
large or small scale cycles 
 
     
     
     
     
     
     
     
      
      
the final stage in the cycle detection for the traintime
x   
ing data is identifying the points near the local minima
and maxima  using the first derivative of the smoothed figure    comparison of  st derivative values from
data and their corresponding tendency using the sec  smoothed data and the nn predictions
x   
ond derivative of the smoothed data  in this process
 
smooth  nd derivative
there is another arbitrary threshold introduced  the
predicted  nd derivative
range of the derivatives used to label data points as lo 
cal optima  we can see that the labeling ignores small
fluctuations in the major price changes  so only a po 
tentially profitable cycle is labeled as a cycle  the labeling of local maxima or minima is not used in the
 
training  only the first and second derivative values are
 
used for the training  the detection of local optima is
only a measure of the effectiveness and validity of using
 
derivatives to detect and predict cycles 
figure   shows the result of the classification of points
 
as belonging to local maxima  minima or neither by
using the entire data set 
 

 nd derivative of price w r t  time

 

 
     

 

predicting

we used a feedforward neural network to predict the
first and second derivatives of the price trend  for the
results reported here  we used a network with   layers
and   nodes  the learning rate was      
an interesting result we obtained from the nn was
that the derivatives of the price trend at tick i which
were predicted right after training with the price derivatives at tick i   are very similar to the known derivatives at tick i      in other words  the predicted values
seem to simply lag the training labels with a constant

     

     

     

     
time

     

     

      

      
 

x   

figure    comparison of  nd derivative values from
smoothed data and the nn predictions

 

fi      

raw data
local minima
local maxima

      

      

      

      

eur usd

eur usd

      

      

      

     

     

      

      

      

      

     

     

     

     

     
time

     

     

      

      

     

 

x   

figure    local optima recognition using the derivatives
of the smoothed data

   

cycle prediction

   

markov decision process

raw data
local minima
local maxima

     

     

     

     
time

     

     

      

      
 

x   

figure    local optima recognition using the derivatives
predicted by the nn

state description  in order to bias the model towards
correlating the making of a profit when buying during
figure   demonstrates the predictive capabilities of the
a local minimum and selling during a local maximum 
nn  by using only previous tick values and constant
the states were discretized coarsely 
online training  the nn is able to identify upward and
downward cycles  it is important to note that the trading portion of the algorithm does not act on these la        state space
bels  the labels shown here simply pinpoint when the
the position was discretized into three values  negafirst derivative is close to zero and the second derivative  close to zero  and positive  the predicted derivative is significantly positive or negative  the fact that
tives were normalized with respect to their own stanthe nn can predict accurately some local optima adds
dard deviation  their average can represent trends we
validity to the derivative predictions and  hence  merits
dont want to remove  and then categorized  the state
the inclusion of these predictions in the state space of
of the normalized first derivative was   if it was within
the markov decision process  mdp  used for making
     standard deviations away from zero and   otherthe decision of selling  buying or holding 
wise  the state of the normalized second derivative was
the nn predicted        of the price cycles between
labeled   if it was negative and farther than     stanth
th
november   and   that were detected using the
dard deviations away from zero  meaning the cycle is
lwlr  we counted a cycle as detected when the tick
strongly negative     if it was within     standard dethat the nn labeled as being a local maximum or minviations away to zero    if it was positive and farther
imum was within   ticks of a tick labeled in the same
than     standard deviations away from zero  meaning
way using the lwlr techniques 
the cycle is strongly positive  
the possibilities of action were only three  buy  sell
or do nothing  as a first iteration  we constrained the
 
trading
model to as it can be seen  the state space consisted of
to act upon the predicted trends  we implemented an only   states and   actions  hence  the value iteration
mdp algorithm  we were expecting the mdp to ac  algorithm converged rapidly 
count for the lack of accuracy in some of the predictions  given that the focus of our project was on the       rewards
prediction of the cycles  the mdp described here was
our first iteration in its design and a naive implemen  the rewarding scheme aimed to encourage the policy
tation  a more current version of the model is able to that makes a profit  rewards were given at the state in
make a profit  albeit unreliably  by changing the mean  which the policy made a profit and at the state in which
the policy entered the market before making the profit 
ing of the transition matrix 
for example  if the policy decided to buy while at state

 

the current position and the prediction of the first and
second derivatives were the only components in the

 

  here we use the term position  for brevity  as equivalent to
unrealized profits and losses  in other words  position in this
report refers to the profit or loss that would be made if the current
assets being held were sold immediately

fi   held on to the purchase  and then sold while at state
   both states   and   received a reward  the converse
also applied  although the negative reward was smaller
than the positive one  the positive reward was      the
negative one was       
additionally  to encourage the algorithm to hold on
to a purchase while its potential profit increases  the
state in which the policy decided to do nothing received
a reward when its position increased in value  if its position decreased in value  it received a negative reward 
in this case  the reward values were       and         

algorithm are more encouraging than those from the
hard coded decision 

 

conclusions

as figure   demonstrates  the prediction from the nn
can be used to label local optima  then  we hardcoded the decision to enter the market buy or sell
at those labeled points  do nothing until the predicted
first derivative reached a value close to zero  and liquidate the current position  e g  sell if we bought before 
if the predicted second derivative indicated a change in
the trend  with this hard coding  we achieved a profit
of      for the week of data analyzed  even though this
is far from being machine learning  the encouraging results add practical validity to the predictions  with
this method  the most profitable position was       
and the largest loss was        the percentages are
with respect to the initial investment 

we developed a technique to pre process and analyze
forex price data that yields practical predictions regarding the trend of the price  the data used comprised
of prices of the eur usd pair for     hours starting
on november  th        
to smoothen the data  we used locally weighted linear regression  lwlr  with a parameter that allowed
us to control the time scale of the trends to be observed 
to predict the first and second derivatives of the price
trend  given the latest price available  we used a neural network  nn   it was able to predict        of the
cycles identified with the lwlr 
to assess the applicability and practical validity of
the predictions  we used them  together with the latest
price available  as the state space in a markov decision process  mdp   our first implementation of the
mdp was not successful in making a profit  the structure of the transition matrix encouraged the policy of
do nothing to be the preferred action  nevertheless  two
alternatives to circumvent this problem arose 
hard coding a decision based on the nn predictions
of the price derivatives yielded a modest profit of     
during the week of data  this result confirms further
the usability of the predictions  in addition  an alternative mdp is in the works  the transition matrix in
this mdp relates price and derivative states with profitability states 
to conclude  we have shown that predicting the first
and second derivatives of the forex market is viable
and usable to make a profit  the automation of the
decision to buy or sell is a different matter 
future work involves optimizing the parameters of
the new mdp and implementing the sequence of training  predicting and trading described here in a real scenario 

     

 

     

performance

the mdp always chose the do nothing policy despite
the fact that in its training all of the states were reached
and all rewards were given 

   

alternatives

we tried two alternative ways of making a profit given
the high quality of predictions the nn outputs  we
hard coded a decision and are implementing an alternative take on the markov decision process 
     

hard coded decision

alternative mdp

a major flaw we now recognize with our initial iteration
in the mdp design is that we are assuming that the
states are in some way controllable by the system or
interrelated  by the nature of the forex market  a
combination of the first derivative  second derivative 
and current price is almost completely independent of
another such combination  as a consequence  the new
mdp we are working on contains a transition matrix
linking the state space described in section       and
a profitability state  not the state space itself  hence 
the transition matrix contains the probability of going
from a price and first and second derivative state to
a profitability state  the preliminary results of this

acknowledgements

we thank prof  ng and the ta team for their excellence
in teaching  the notes were an essential resource in the
making of this project  additionally  the book pattern
recognition and machine learning by christopher m 
bishop        was the main resource for understanding
the implementation of neural networks 

 

fi