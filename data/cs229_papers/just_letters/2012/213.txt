noname manuscript no 
 will be inserted by the editor 

side channel cryptanalysis using machine learning
using an svm to recover des keys from a smart card 
hera he  josh jaffe  long zou

december         

abstract cryptographic devices use power as they operate  variations in the amount of power consumed during an operation may leak information about data values being processed  methods such as differential power
analysis  dpa      have been used to recover keys by
exploiting such leaks  but dpa is tougher to apply to
leakage that depends only on the key  for this project
we attacked leakage from an   bit smart card performing des  decryptions with a    bit key  we explored
using an svm to exploit the side channel leakage 
using an svm classifier we reached near      classification accuracy using features drawn from measurements during the des key schedule  after training with
at least      samples out of our set of        this is
the first publication in which an svm has been used to
recover an entire key 

  introduction
many devices today use cryptography to perform security tasks  for example  most automobiles can be unlocked using a wireless key fob  parking meters in san
francisco accept payment from smart cards  sim cards
in mobile phones authenticate the phone to the base
tower  the security of such systems requires tamper resistance to prevent attackers from simply opening the
device  reading all the secrets from its memory  and
then using them to create clones 
but tampering is not the only threat  physical circuits use power and generate electromagnetic emissions
as they operate  power consumption is a property that
an attacker can measurefor example  by connecting
yhe  stanford edu 
pz   stanford edu
 

joshj stanford edu 

much of our analysis also applies to  des 

an oscilloscope to a target devices ground pin and monitoring the voltage as it rises or falls as the amount of
current through the chip varies with time  these variations carry information beyond what is communicated
by the ciphertext  so the power measurements constitute a side channeland this has traditionally been
exploited with attacks such as simple power analysis
 spa      and dpa  while dpa is often applied as a
black box attack method  template attacks  ta     
are a related approach that use a characterization stage
requiring known keys 
related work  it has recently been noted        
that the ta model is amenable to supervised learning 
one paper     used a least squares svm to extract
information from a byte operation during aes decryption  although not oriented towards key recovery  the
authors built a one byte classifier that achieved up to
      accuracy for certain parameter choices  another
paper     looked at  des in an fpga  and found that
an svm could reliably recover a few bits of the key
but would require a    bit search to complete the attack
on a     bit key  both papers found feature selection to
be critically important 
in this project were interested to see whether supervised learning could automate the process of decoding
spa leaks and key dependent statistical leaks  we also
revisited the question of feature selectionand found  in
contrast to previous results  that aggressive feature selection was not necessarily helpful 
the rest of this paper is structured as follows  in
section   we give an overview of the target device and
data collection process  and describe the features that
were used for supervised learning  in sections   and  
we discuss the problem formulation and how we arrived
at the final svm model  in section   we present the
results of our model  we conclude with some remarks

fi 

hera he et al 

fig     start of des decryption  each point represents   clock cycles  pc   ip  pc   and xor regions indicated 

about the significance of these results  lessons learned 
and future steps that could make this publishable in a
top tier side channel crypto conference 

  data set overview  the des smart card
this project focused on extracting a key from an  bit atmel smart card performing decryptions using the
data encryption standard  des      des is a block
cipher that uses a    bit key and has a    bit block
size  for this project  it is relevant to know that des
performs bit permutations on the input message  ip 
and key  pc    and then applies a round function   
times in a feistel structure  the round function performs a second key permutation  pc    then computes the exclusive or of a    bit round key with some
bits of the round input  xor   a   bit to   bit substitution  sbox  is performed on the xor output 
the des key schedule includes pc  and pc   this
project focused on data dependent variations in power
measurements during clock cycles in which the pc  
pc   and xor operations were performed 
power measurement traces were collected using 
 a zeitcontrol basic card version      programmed
for des decryption with chosen key 
 a dpa workstation smart card reader with   resistor in series with ground provided to smart card
 a tektronix dpo     oscilloscope connected to measure the voltage drop across the ground resistor
figure   shows a trace of power measurements over
one des decryption 
the smart card ran at  mhz  power measurements
were recorded at    mhz for    samples per clock cycle
or over one million power measurements per trace  we
stored a subset of each trace covering the des initialization and first four decryption rounds  the data collection spanned      unique keys and       ciphertexts   
 

we primarily worked with the first       

each key and ciphertext combination was repeated five
times  the traces were then aligned and each clock cycle was synchronized with a reference  to remove timing
jitter   the data were further reduced by averaging together all traces that correspond to a single key and
ciphertext combination  then selecting the   th sample
of each clock cycle as representative for that cycle  

  problem formulation
    problem description
we collected n         instances and held out n   
     of them to be test data  leaving n          to
be training examples  each training example consisted
of y  c  x    x    x    where the key y is a binary vector of length pk       input ciphertext c is a binary
vector of length pc       x    x    x  are power trace
measurements in pc  region  pc  region and xor region  vectors with length p          p         p       
respectively  we used spa and dpa to interpret the
portions of the power traces as labeled in figure   and
determine exactly where the pc   pc   and xor operations occur  we hope to recover keys y in the test
set 
we expect leaks during the pc  and pc  stages
to depend directly on bits of the key  while the power
measurements in the xor stage may depend on bits
of input ciphertext as well as bits of key  the analysis
focused on these regions separately  i e  we seek to find
three separate multi label classifiers y   g   x     y  
g   x    and y   g   c  x    
 
we also performed a comparison between this   th cycle
approach and that of using the average of all    measurements
over a cycle as representing that cycle  differences were minor 

fiside channel cryptanalysis using machine learning

 

    problem transformation  from multi label
classification to binary classification
we are looking for a classifier that assigns each instance
to a set of d      labels with binary classes  two main
methods have been proposed for tackling such problems
     the binary relevance  br  approach and the label power set  lp  approach  in the br approach 
the multi label problem is transformed into d separate
binary classification problems  this breakdown of the
classes may overlook possible interactions among the labels  however  the label power set method transforms
the multi binary label problem into single compoundlabel problem where the single label has  d possible
classes  here the interactions are encoded to the classification implicitly  but the exponential increase of the
number of classes makes the computation intractable
for large d 
the des block cipher tends to manipulate the key
primarily in    and   bit groupings  we decided to use
br first  figuring that operations that involve only one
bit of the key are likely to be have minimal interaction
and may be sufficient to recover the key  the problem
was therefore transformed into finding    separate binary label classifiers for each of the three regions  

achieving near      prediction accuracy in pc  and
pc  regions  and above     accuracy in xor region 
in order to get an effective svm classifier it is essential to choose an effective kernel function  find a good
set of kernel parameters  optimize the soft margin c 
and identify an informative set of features  in this section  we will discuss our choice of these variables and
how we arrived at our final svm model 
our first step was to fit a linear kernel svm with
l  regularization to all three regions  we quickly figured out that standardizing the features before feeding
into the svm classifier both reduced the model training time and improved the prediction accuracy  standardizing is especially important in the xor region to
normalize the binary valued ciphertexts and real valued
power trace measurements to the same scale 
this model is very successful for pc  and pc  regions  we reached      prediction accuracy with about
     training samples  see figure     however  svm
with linear kernel is not as successful in the xor region  as we increase the sample size towards       
the xor training accuracy and test accuracy converge
to around      see figure     this indicates an inadequacy of the linear kernel for xor region with just
standardized feature matrix  c x    

    choice of evaluation metric

    kernels and parameters

ideally we want to find a model that is accurate for most
target bits  preliminary trials with the svm showed
similar performance trend on all key bits  suggesting
that performance for any one bit was an acceptable
approximation for performance over all     hence to
reduce the training time  during the model selection
stage we evaluated models based only on the accuracy
for the first bit 

the failure of the linear kernel in xor indicates possible nonlinear relationship between the labels and the
input features  hence we experimented with different
kernels for svm  including polynomial kernels with different degrees  gaussian kernel and sigmoid kernel  table   shows the hold out cross validation accuracy for
different kernel  polynomial kernel with degree   has
slightly better performance than the linear kernel  while
other kernels made it worselittle better than random
guessing  we also tried optimizing the kernel parameters and the soft margin parameter c by grid searching
and cross validation  but the search in a wide range
still didnt save us from the poor performance  hence
we conclude the inappropriateness of all kernels other
than the polynomial kernel of degree   

  evolution of our svm model
    overview of svm results
once the problem has been broken into finding a binary
classifier for each bit of the key  we could use standard
classification methods like svm  with svm  we were
able to recover most of the key bits with high accuracy 
 
note that des is unusual in manipulating individual bits 
with other ciphers  bit groupings of   or more bits may be
more common  when operations involve several bits of a key
simultaneously  more complex models should probably be applied to capture the interactions among different classes  an
intermediate form of lp that focuses on k bit groupings limits
the exponential increase in classes to  k  

    feature engineering for xor region
our next goal was to push prediction accuracy in the
xor region to higher than        polynomial kernel
with   degrees expands the dimension of the feature
space from p    pc       to  p    pc               where
features are the pairwise product of the original inputs 
with only       training samples  overfitting is clearly

fi 

hera he et al 
first key bit  pc  region

first key bit  xor region
   

   

   

   

  

  

  

  

  

  

  
  
  
  

  
  
  
  

  

 

   

    

    

    

number of training samples

  
  
  

  

training  standardized 
test  standardized 
training  unstandardized 
test  unstandardized 

  
  

training  standardized 
test  standardized 
training  unstandardized 
test  unstandardized 

  

  

training  standardized 
test  standardized 
training  unstandardized 
test  unstandardized 

  
  

accuracy    

   

accuracy    

accuracy    

first key bit  pc  region
   

 

   

    

    

  
    

  

 

number of training samples

    

    

    

    

     

number of training samples

fig     training and test accuracy of svm with linear kernel for pc   pc   and xor regions respectively 
features for pc  and pc  only contains power traces x  and x  respectively  for xor regions features contain
both ciphertext c and power traces x 
kernel
polynomial d    
polynomial d    
polynomial d    
gaussian
sigmoid

nvec
    
    
    
     
    

train acc
    
    
    
    
    

test acc
     
     
     
   
     

table    comparisons of svm with different kernels 
nvec     of support vectors  n           n         

a problem  we have training accuracy of       and    
of our inputs became support vectors  the high dimension of the new feature space makes the data set linearly
separablebut clearly contains a lot of noise that is being fit by the model  we should not criticize this feature
mapping too much  because       is significantly better than random guessing  some of new features are
indeed informative  but we may be able to obtain a
better classifier by retaining the informative features
while removing some of the others  we accomplished
this with some judicious feature engineering  
the engineered features are obtained in the following way  beginning with the x  power measurements
standardized to have zero mean and unit variance  and
using ciphertext bits c        we computed   c  x     
   c    x          c    x                 c     x     the function
  is defined by       x    x and       x       x 
the result has                 elements  and corresponds to all terms in the degree   polynomial that
are a product of one bit of ciphertext and one power
measurement  training with this feature vector  however  was extremely slow due to the large number of
featuresand prediction accuracy remained low 
 

we could have used standard feature selection techniques 
based on forward search or looking at mutual information 
instead  we chose a feature engineering strategy based on rationale that we will lay out towards the end of this section 

so we next worked separately with each engineered
feature matrix    ci   x     training each bit of the key
with all    engineered feature matrices reveals that for
each key bit only one engineered feature matrix is informative  this fact is expected  given the structure of
the des algorithm  
this success of this engineered feature matrix can
also be justified in the following way  after the xor
operation ih   ci  kj the power features may leak
information about ih   if the power consumption is linearly proportional to ih   this could be expressed as 
pt   a   kj  ci     b

   

for some power measurement  pt   at time t  using the
following fact  for binary kj and ci  
 
      kj        ci     
   
 
and solving     for kj reveals that 

  
a
a
kj   
pt   b    ci     
 
a
 
 
substituting the unknown a    b with hpt i gives

kj  ci  

kj   pt  hpt i     ci        
but calculating the product of the centered power
trace  pt hpt i  and   ci    is exactly the same as flipping the sign of the standardized power trace according
to the value of ci which is how we obtained our engineered feature matrix  so if the power measurements
x  can be linearly separated by an svm according to
the value of a bit ih   then the feature matrix engineered
with bit ci can be linearly separated by an svm to reveal kj   ci  ih  
 
we also expect only    of the engineered feature matrices
to be informative  corresponding to the bits of r in round
   and we expect only a    bit round key  not the full    bit
key  to be be used in xor operations 
 
for explanation  see the extended version of this paper

fiside channel cryptanalysis using machine learning

 

first key bit  xor region     sets of engineered features

all key bits  xor regions  most informative set of engineered features

   

   

 

  

training accuracy
test accuracy

 

  

  

 

  

  

  

  

 

  

  
  
  

  

  
  

  
  
 

  

accuracy   

accuracy   

 

  

  
  
  

 
 

     
  

  
  
  
  
  
    

  
   
  

  

  

  

  

  
  

  

 

  

  

  
  
  

  

training  identifiable
test  identifiable
training  nonidentifiable
test  nonidentifiable

  

  

 

  

  

  

 

 
 

  

 

   

 

  
  
  
  
  
  
  
  
  
  
  
    
  
  
    
  
  
       
  
  
  
  
            
  
  
  
  
    
  
       
     
  
     
  
  
    
  
  
  
  

  

  

  

  

  

  

  

  

  

  

    

 

ith engineered feature matrix  i           

fig     training and prediction accuracy for the first
key bit based on    engineered feature matrices  the
numbers being displayed in the plot correspond to the
index of engineered feature matrix  being x in this case 
  results with engineered features in xor
region
we present the result of training for the  st key bit with
our engineered feature matrix in figure    all models
were trained with       samples and tested on     
samples  as shown in the plot  for the  st key bit  the
  th ciphertext is leaking information  giving a prediction accuracy over      while results trained from engineered feature matrices based on other bits of ciphertexts are basically random  this analysis was repeated
for all bits of the key  the leakiest bit of ciphertext corresponding to each key was identified  and the results
are reported in figure    note that in the xor region 
  bits of the key are not used  this is in accordance
with our result of   unidentifiably key bits with test
accuracy below     
  conclusion
initial power analysis of the des card shows high amplitude power leaks during the pc  and pc  operations  such leaks are challenging to exploit using traditional dpa  because it cant vary the keys  and spa
methods  because the signals are overlapping and complicated   template attacks provide an alternative  but
traditional ta methods are also complicated  in this
project we found that a very straightforward svm was
able to decode these leaks and recover the keys with
near perfect accuracyafter a relatively short training
process 
our results are compare favorably to previous research  in that we extracted a key  and also found feature selection to be less important  in the pc  and pc 

  

    

  

  

  

  

  

  

 

  

  

kth key bit  k           

fig     training and prediction accuracy for all key
bits based on the most informative engineered feature
matrix  the    key bits that are part of the decryption round key are all predicted with greater than    
accuracy 
regions   in the xor region we found that either using
a degree   polynomial kernel or using judicious feature
engineering could draw out the relationship between
key bit  ciphertext bit  and power measurement 
this work can be continued by applying these techniques to recover a key from a more modern device
 such as the asic in an fpga bitstream encryption
core   another interesting area to explore is applying
these techniques to evaluating leakage using a sequence
of specific test vectors 

references
   kocher  paul  josh jaffe  benjamin jun  differential
power analysis  crypto       pages         
   chari  suresh  josyula rao  and pankaj rohatgi  template attacks  ches                    
   fips pub       data encryption standard  national
bureau of standards  us dept  of commerce  jan       
   hospodar  gabriel  benedikt gierlichs  elke de mulder 
ingrid verbauwhede  joos vandewalle  machine learning in side channel analysis  a first study  jcen
      vol    issue            
   lerman  l   bontempi  g   markowitch  o  side channel attack  an approach based on machine learning 
cosade        
   tsoumakas  g   and i  katakis  multi label classification  an overview 
   r  e  fan  k  w  chang  c  j  hsieh  x  r  wang  and
c  j  lin  liblinear  a library for large linear classification  journal of machine learning research         
          
   chih chung chang and chih jen lin  libsvm   a library for support vector machines  acm transactions on
intelligent systems and technology                    
ijdwm    no                 

fi