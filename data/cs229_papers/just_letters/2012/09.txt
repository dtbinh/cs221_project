observing dark worlds  final report 
bingrui joel li           
abstract  dark matter is hypothesized to account for a large
proportion of the universes total mass  it does not emit or absorb
light  making detection of this elusive matter really hard 
however  this highly massive structure creates extensive spacetime warping which alters the path of light from background
galaxies  as a result  the ellipticity of galaxies that is observed on
earth is altered and this provides the opportunity to deduce the
position of dark matter halos from the shapes of these galaxies  in
this work  i aim to use machine learning algorithm to tackle this
challenging problem 

i  introduction
dark matter is postulated to constitute     of the matter in
the universe and     of the mass energy     einsteins
general theory of relativity predicts that light passing by a
highly massive object would bend and deviate from its
original path because of warped spacetime  creating an effect
known as gravitational lensing     the result of this effect is
galaxies in the background have their ellipticity altered and
this provides an opportunity to detect dark matter halos 
however  even without the presence of dark matter  galaxies
are naturally elliptical and the challenge is to separate the true
ellipticity of a galaxy from those resulting from the
gravitational effect that dark matters exerts on the light path 
ii  experimental data
a  dataset

have   halo  skies         have   halos and skies        
have   halos 

fig    definition of e  and e  to
describe galaxy ellipticity

fig    an example of sky with
three dark matter halos

b  data processing
the dimensions of each sky is   to      units in both the x
and y direction and has been split into pixels with a size of    
by     units  this means that we have a total of    x     
     pixels for each sky  each pixel is a training example with
features describing the ellipticity and distance of each galaxy
from this pixel  the class value of each pixel can take on a
value of    indicating the presence  or    absence of a dark
matter halo  
as can be seen  this is a binary classification problem with
an unbalanced dataset  in subsequent sections  i will talk about
some work on handling this unbalanced dataset to improve the
classification 
c  evaluation metric

the evaluation metric used to evaluate the algorithms ability
the dataset used in this work is obtained from kaggle    
in
identifying dark matter halos is identical to the one
which is a platform that hosts predictive modeling
described
in kaggle  the metric is basically m   f         g
competitions  one hosted competition is to predict the
where
f
is
the average radial distance from the user estimate
positions of dark matter halos from a sky filled with galaxies 
to
the
true
position
of the halo and g is represented by
the data consists of a training set of     skies with the
positions and ellipticity  e   e   of each of the        

galaxies in the skies  e  describes the elongation of the galaxy
in the x  y direction while e  is the elongation in the   
degrees angle direction  as shown in fig        the training
data also lists the positions of dark matter halos in each of the
where  is the angle between the predicted position with
    skies  the skies have been split into   equal sets of    
respect to the centre of the true halo position 
skies with each set having      or   skies respectively  an
example of a sky is shown in fig    where the center of the
blue spots show the position of dark matter halos and white
iii  experimental approach
spots are the galaxies     the final test dataset is the same as 
a   machine learning algorithm
the training dataset except that the positions and number of
halos in each of the test skies are not listed  these have to be
the machine learning algorithm tried was the support vector
predicted with the machine learning algorithm 
machine  svm   implemented with the libsvm      software 
a library for support vector machines  svm  obtained from
the training and test data were separated into   different
http   www csie ntu edu tw  cjlin libsvm  
groups  which have      and   halos respectively  skies      

fia   features
i designed   features to describe the ellipticity and distance
of each galaxy in a sky to a pixel  the features are the
tangential ellipticity  etan  of a galaxy as defined by the
following equation described in kaggle      

etan    e  cos      e  sin    
features         and   are based on this tangential ellipticity
value but differ in the number of galaxies included in the
calculation  galaxies within a certain distance from a pixel are

included
in the calculation and this distance differs among
features         and    features         and   have distance
values of                  and      units respectively  the
rationale behind this is the effect that a halo has on a galaxy
drops off as   r  where r is the distance between a galaxy and a
halo  understanding that galaxies closer to a halo will
experience a larger effect than galaxies further from it  we
form features         and   to consider galaxies at various
distances to a pixel  and each of these features value is the
mean ellipticity of the considered galaxies  this is done to
take into consideration that each feature includes different
number of galaxies in its calculation 
features         and   are based on the product of r and etan
and this makes physical sense since etan varies with   r  again 
the features represent the mean values of all considered
galaxies at distances                  and      units
respectively 
since every sky has a different number of halos and
galaxies  it makes sense to normalize the feature values for
each sky and each feature  normalizing the features is also a
requirement for the radial basis function of the svm  this is
accomplished by finding the z score of each feature which is
basically subtracting the mean from the actual value and
dividing over the standard deviation 

b  diagnostics and optimization
b   learning curve
due to the intensive computation required for the large
number of training examples      skies        pixels per sky
         pixels   i am choosing a selected group of skies to
begin training  the training examples have equal
representation from the three different sky types  one halo 
two halo and three halos   for a start  i chose features        
and   to train the algorithm since they represent distance
values at opposite ends and present as a good initial choice 
the svm parameters used are stated in section a 
to determine if the algorithm has a high bias or high
variance  i plotted the results from the experiment as a
learning curve in fig     this curve shows the training and
cross validation  cv  metrics against number of training
examples  the benchmark on the graph is the test metric value
for one of the publicly available algorithm  single halo
maximum likelihood  the desired performance is the test
metric obtained from the best performing publicly available
algorithm  lenstool maximum likelihood  as can be seen  the
training metric slightly increases as the number of training
skies increases while the cv metric stays high  both training
and cv metrics have almost similar values  this learning
curve exhibits the characteristics of an under fitted algorithm
with high bias  one way to overcome this is to introduce more
features 
   

learning curve

   
single halo maximum likelihood benchmark
 training metric  
 cv metric 

   
training cv metric

a radial basis function  rbf  kernel was used for the svm
with different weights applied to the   different classes of  
and    this is done to counter the effect of an unbalanced
dataset with very few  s  the algorithm was initialized with
a cost c of     weight w  of  e  and gamma is set at default
value of    number of features   the absolute value of the
decision value obtained from the svmtrain function in libsvm
is used to assess the confidence of the algorithms
classification  the higher the decision value  the more
confident the algorithms classification is 
a potential issue that can occur is regions near the halo
center will also have high decision values but do not
necessarily correspond to halo positions  in order to overcome
this  the algorithm has been specified to ignore pixels that are
within a certain distance to the pixel that has the highest
probability of being a halo center  the distance criteria used
initially is one tenth of the length of the sky image 

   
   
   
   
desired performance
   
   
 

 

  

  

  

  
  
  
number of training skies

  

  

  

  

  

fig    learning curve

b   training set selection
in order to do proper feature selection  it is important to
choose a good training set first 
in skies with multiple halos  it is reasonable to expect there
can be more fluctuations variations because each galaxys
ellipticity is a combination of random noise and effects from
multiple halos  this hints towards the possibility that training
on all   groups of skies may not necessarily give the best
cv test metric value  i would like to investigate if this is the
case by carrying out an experiment to identify which training
types or groups of types would be most suited as the training
set  types here refer to the skies with a certain number of

fihalos  the three types are one halo  two halos and threes
halos skies 
in training groups with one type  i selected training skies      one halo  to be group      skies            halos  to be
group     and skies            halos  to be group      for
training groups with   types  i chose skies              as
group         skies              as group        and skies                 as group         for the combined group       
    i selected skies              and          the cv skies
for all runs are skies         one halo            two halo 
and          three halo   the selection is done in this manner
so that the total number of training skies used in each run is
roughly the same 
the result of this experiment is shown in fig     which
demonstrates how cv metric changes with feature used  cv
metric     refers to cv metric obtained from training on
skies with   halo and cv metric         refers to cv metric
obtained from training on skies with     and   halos 
 cv
 cv
 cv
 cv
 cv
 cv
 cv

   

cv metric vs  features

   
   

single halo maximum likelihood benchmark

cv metric

   

metric
metric
metric
metric
metric
metric
metric

    
    
    
      
      
      
        

   
   
   
   

fig   decision maps obtained from training with groups            and        

the decision maps obtained from training on skies with  
halo  group      have high points in small and tight regions 
shown by the left figure on the first line in fig    when the
algorithm is trained on skies with increasing number of halos
      and          the decision values are high in increasing
areas of the map as shown in fig     this can be explained by
the multiple halo contributions on the ellipticity of a galaxy 
which generally lowers a galaxys ellipticity  making it
difficult to distinguish from random noise  because of this  it
is challenging to train an algorithm using skies with multiple
halos to accurately pinpoint halo positions  and training
results on skies with   halo have resulted in better results  fig 
   henceforth  group     will be chosen as the training group
for subsequent optimization 
b   feature selection

   

 

 

 

 

 

 

 

 

features

fig    cv metric vs  features

as can be seen from fig     training group      red line  and
group         green line  generally outperforms the other
groups across features  group            purple line  generally
performed worse than groups     and        across the features 
to understand why this is the case  i created heat maps of
decision values  fig     obtained from training with groups     
      and          henceforth  i will call these maps  decision
maps  the bright regions correspond to areas that the
algorithm has identified as potential halo locations and the
brightness has been scaled for each sky  the brighter the spot 
the higher the possibility of it being a halo compared to other
regions in the sky  blue spots correspond to actual halo
positions and red spots are the predicted halo positions  the
left and right decision maps on the first line in fig    represent
the cases when the algorithm is trained on groups     and      
respectively  and the figure on the next line represents the
decision map obtained by the algorithm when trained on group
        

to find the best feature subset  i performed a type of
wrapper model feature selection algorithm known as forward
search on the   features 
my forward search reveals that for group      the best
feature subset is     with a cv metric of        
in order to figure out if the current algorithm is under fitting
or over fitting  a new learning curve was created  fig    
training and cv metric has both improved from before  this
new learning curve exhibits the characteristic of an over fitted
algorithm with high variance  in order to improve this  the
svm parameters will be tuned 
learning curve  after tuning 

   

maximum likelihood benchmark
   

training cv metric

   

 training metric  
 cv metric 
   

   

desired performance

   

 

  

  
number of training skies

  

fig    learning curve after training set and feature selection

  

fib   svm algorithm parameters
to tune my svm  i varied parameters   gamma  c and w  
the cv metric as a function of gamma  c and w  are shown
in figs       and   respectively 
   

learning curve  after tuning 

   

maximum likelihood benchmark

cv metric vs  gamma
training cv metric

   

   

cv metric

after performing svm parameter tuning  i created another
learning curve  fig     to determine how well the algorithm is
currently performing 

 cv metric 

   

 training metric  
 cv metric 
 cv metric   
 training metric   

   

   

desired performance

   

   
   

     

 

 

 

 

       

 

    

 

 

 

       

 

   

 

 

 

       

 

 

  

gamma

fig    cv metric vs  gamma

 cv metric 

   

cv metric

  

it is found that the algorithm has slightly improved the best
cv metric from        to         the gap between training
metric and cv metric has narrowed and this is expected
considering that gamma was lowered which reduces overfitting  the small gap could signify a slightly over fitting
algorithm 

   

   

   

b   sliding window implementation

   

   
    

   

 
c value

  

   

fig    cv metric vs  c value

   

cv metric vs  w 

   
   
 cv metric 

cv metric

  

fig     learning curve after svm parameter tuning

cv metric vs  c value

   

  
number of training skies

   
   
   
   
   
  

  

  

  

 

  

 

  

 

  
w 

 

  

 

  

 

  

in order to tackle the slightly over fitting issue  i
implemented a sliding window algorithm  the window in my
algorithm has a size of n by n pixels  because the halos are
point like features  i do not need to implement a spatial
pyramid algorithm  which works best for objects of a finite
size  non point based   a variant form of non max suppression
was implemented where regions near to a local peak will be
ignored as possible halo locations  this does not alter the
decision values of the points but merely ignores those points
as possible halo positions  by varying the window size  it was
found that the best window size is n     fig      this is likely
because the algorithm is already performing very well and
changing the window size does not help improve the algorithm
anymore 

 

  

   
   

the optimal values for gamma  c and w  were found to be
        and  e   this makes intuitive sense because if the
algorithm is over fitting  which was shown in fig      gamma
should be lowered  c should be somewhat small but not too
small that the algorithm starts under fitting  thus there is a
minimum point of c     that minimizes cv metric  w 
should be large because of the unbalanced nature of the data
set where there is a small number of  s compared to  s
present in the data  in each sky  the ratio of  s to  s is given
by the number of halos divide by the number of pixels and
thus it will take values of                or        when
sliding window algorithm is not implemented 

   

cv metric

fig    cv metric vs  weight  

cv metric vs  window size

   

 cv metric 

   
   
   
   
 

 

 

 

 
window size

 

 

fig     cv metric vs  sliding window size

 

 

fic  final results
after tuning the algorithm  the optimal performing algorithm
has cv metric of        when the algorithm is tested on skies
that it has never seen before  skies                and
         test metric of       is achieved  this shows that the
algorithm is predicting halo positions very well and my
algorithm is performing better than my desired performance 
as a comparison  publicly available algorithms online have
test metric values of                 and         for the
single halo maximum likelihood  gridded signal
benchmark and lenstool maximum likelihood respectively 
the best performing algorithm  lenstool maximum
likelihood  has       lines in its code 

from these two examples  it can be seen that the regions of
high decision value  bright areas  correspond to regions of
large gradient in the feature map  this is interesting because it
signifies that the presence of a dark matter halo creates a large
effect on the ellipticity of nearby galaxies with this effect
dropping off rapidly with distance  and it is this rapid drop off
in ellipticity from the halo center that characterizes whether a
particular pixel contains the halo position  in the literature  this
effect is said to drop off by   r  which is a rapidly decreasing
function  thus  the algorithm has come up with a decisionmaking process that is in line with current physics
understanding of dark matter halos 
conclusion

d  map analysis
to understand the results achieved  i created heat maps of
each pixels feature value and compared it with the decision
value maps that show decision values and locations of
predicted  red spots  and actual halo  blue spots  positions 
the comparison is done to see if there is a relationship
between feature and decision value that can be identified
visually  the color scheme in the feature map  figs         and
   follows the rainbow sequence with red indicating the
highest value and blue indicating the lowest value 

the svm algorithm has been very successful in predicting
dark matter halos positions  this algorithm has a cv metric
of        and test metric of        for skies with multiple
halos  the svm is able to effectively identify the positions of
the multiple halos 
my exploration of different techniques has led to the
conclusion that selecting the right training set type was the key
breakthrough for this predictive algorithm to work well 
further work on this algorithm can be done on introducing
features that incorporate more complex physical model such
as gravitational lensing equations  although computationally
more intensive  a smaller bin size will likely help the accuracy
of the predicted haloss locations 
references
   

   
fig     feature map of sky    

fig     feature map of sky    

fig     shows a sky with three halos and fig     shows the
corresponding feature value  as can be seen  the blue spots
 actual halo position  match up well with the predicted halo
positions  red spots  
the algorithm was also successfully in identifying the three
halo positions in fig     

fig     decision map of sky    

fig     feature map of sky    
 

   

   

dark matter   wikipedia  the free encyclopedia 
enwikipediaorg 
 online  
available 
http   en wikipedia org wiki dark matter cite note   
 accessed     nov        
gravitational lens  enwikipediaorg   online  
available 
http   en wikipedia org wiki gravitational lens 
 accessed     nov        
competitions   kaggle  kaggle com   online  
available 
https   www kaggle com competitions 
 accessed     nov        
observing dark worlds  visualizing dark matters
distorting effect on galaxies  bayesianbiologist 
bayesianbiologist com 
 online  
available 
http   bayesianbiologist com            observingdark worlds visualizing dark matters distortingeffect on galaxies    accessed     nov        

fi