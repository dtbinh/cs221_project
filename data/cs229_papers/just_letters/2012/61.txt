cs    project reportcomplex overpass reconstruction
based on taxi gps data
yilong geng

 

abstract

in this project we try to reconstruct detail complex overpasses with sparsely sampled taxi gps
sequences  the goal is to learn about the shape and direction of the possible paths in a given target
area  we design algorithms to clean and select raw taxi gps data  extract features  cluster these
selected data and visualize the clustering result to get the possible paths  then we try to get the
shape and direction information of these paths  all of our experiments are conducted on a taxi gps
data set collected form beijing  china    

 

introduction

nowadays many very useful applications are based on geographic information systems  gis   one
example could be vehicle route planning and navigation  the functionality of these applications
highly depends on the completeness and correctness of the underlying maps  however  the maps
we have today are suffering from many errors and insufficient information  how can we refine and
update our maps  since human resource is very costly these days  its a good idea to develop some
automatic methods to do this job 
given that many vehicles have gps equipment and most of them run along streets  why dont we
make some smart use of these vehicle trajectories  we can imagine that these trajectories contain
very rich map information  the question is how to mine the information out 
with sparsely sampled gps point sequences of many different taxis  can we just draw the map
out  as shown in figure    by plotting together many gps sequences  we can only get a very vague
guess about the detail complex overpass structure  not to mention drawing the map out  what is
lacking here is the geometry and logic of the mapthe possible paths in this area  the shape of these
paths and the direction of these paths 

figure    how to reconstruct detail complex overpasses 

 

fifigure    roadmap of learning possible paths
a complete map refining system will contain two steps  first  given a target area the system will
learn about the map of this area from vehicle gps trajectories  second  the system will compare the
learned map information and the existing map and then update the map basing on the comparison 
this project will provide a novel map learning algorithm for the first step of the map refining
system  because overpasses are a kind of most complex structures in maps  this article will take
overpass reconstruction as an example to illustrate the algorithm  but we need to keep in mind that
this algorithm is supposed to learn map information of any given area 

 

problem set up

all the following materials will focus on reconstructing the overpass in a selected region  like in the
left part of figure    basing on sparsely samples gps sequences  the right part of figure   shows
the overlapping of these sequences  
the first question we need to ask is what do we need to know about the overpass  or the map in
this region   a good answer to this question would be all the possible paths that a vehicle might take
in this region  knowing that  we can draw the map  we know that each of the taxi gps sequences
going through this region necessarily takes one of these possible paths  hence we can learn about
these paths in two steps     cluster the taxi sequences which share the same path together  and   
learn about the shape and direction of these paths 

 

learning possible paths

in this section we will try to cluster gps sequences sharing the same path out 
the road map of the first stage of this projectlearning possible pathsis shown in figure   
in the first step data cleaning  we select out our desired datathose gps sequences who go
through the target areaand remove the dirty ones of them  the second step is feature extraction 
here we design three sets of features which separately corresponds to our baseline algorithm and
two complementary algorithms  the first two steps are implemented with c   the third step
is clustering  here we use a open sourced k means clustering packet     the final step is result
visualization  here we use matlab to draw different clusters in different colors onto a plain panel 
then we can see the paths that we found 

   

feature extraction

like in figure    the density of the gps points is very important to our reconstruction algorithm  if
the gps sequence of a single trajectory is sparse  like    seconds each in our data set  we will only
have about   to   points on the overpass  it means a single gps sequence in this region does not
necessarily look like the path  although it is on the path  it also means two gps sequences sharing
the same path do not necessarily look similar  so first we need to design features that make gps
sequences sharing the same path look similar 
the idea is to make the point sequences denser by regulation and interpolation  figure   shows
our designed feature  by connecting gps points by lines  we can get the approximate intersections
 

fifigure    example of taxi trajectory sequences

figure    feature extraction
of the trajectory and the boundary of the target area  then we get the trajectory segment between
the entering point and exiting point and evenly sample this curve segment to get a certain number
of intermediate points  these points  together with the entering point and exiting point  form
the feature of our clustering algorithm  through this process  we can expect our resulting point
sequences look like the path and look similar if they share the same path 
figure   plotted the extracted feature of all of
the gps sequences together  we can notice the hidden patterns in these features just by naked eyes 
that proves to some extent the correctness of our
way of feature extraction 
after we get the features of the gps sequences 
we can run k means algorithm or em algorithm
to cluster them  each cluster in the result would
represent a possible path in this region  by drawing
out original gps sequences in the same cluster  we
can then learn the shape and direction of this path 

   

clustering result and analysis

applying k means algorithm on the features in figfigure    extracted features
ure    we can get clusters like in figure   a  and figure   c   then we can trace back from features and
original gps sequences  by plotting gps sequences
in the same cluster together  we can get paths like
in figure   b  and figure   d  
each of the clusters in the clustering result represents a possible path in the target area  figure

 

fi a  clustered features example a

 b  clustered gps sequences example a

 c  clustered features example b

 d  clustered gps sequences example b

figure    two examples of clustered features and gps sequences
  a  and figure   b  represents the path on the main road that enters the target area from the north
and then takes a left turn  figure   c  and figure   d  represents the path on the side road that
enters the target area from the south and then exits from the north 
figure   shows all the clustered gps sequences 
each color representing one possible path  we can
see that our algorithm learned the geometry and
logic structure of this very complex overpass  we
have    clusters in total in this example     for the
main roads and    for the side roads  one can turn
right  go straight  turn right or make a u turn when
entering the intersection from one direction  there
are four directions to enter for both the main roads
and the side roads  

  learning path shape and
direction
now we have had a idea about what are all the possible paths in the target area  by plotting all the
gps sequences belonging to the same path together 
we can know about how the path goes by observation  but we still havent extracted the shape and
direction of the paths from the original gps data 

 

figure    clustered gps sequences

fithe shape and direction of a certain path can be represented by a sequence of points  there
are two factors we need to know about this sequence of pointsthe position of these points and the
order of these points 
like in figure    the easiest way to learn about
the shape and direction of the paths is by using
the cluster centers we learned at the last clustering
stage  but there are two problems in this approach 
first  since we tried to approximate path curves by
straight line segments in the feature design stage 
our cluster centers would suffer from shifting from
the original path curves  second  the number of
points in the cluster centers are decided by the need
of the clustering stage  it is the result of the trade off
between clustering performance and running time 
now we might want more points to better represent
the curve of the path  the points in a cluster center
might not be enough  these two reasons explains
why the reconstructed overpass in figure   looks so
bad 
figure    cluster centers
so we need an additional algorithm to learn
about the shape and direction of the paths  this
algorithm has two steps  the first step is to get the collection of points by applying k means algorithm on the gps points in the same cluster to represent a certain path  since we get these points
basing on the original gps data rather the designed feature  these points would have no shifting
problem  the second step is to learn the order of these points  each point now is the center of
a gps points cluster  since we have the order information of the original gps points  we can set
up a partial order relationship between the shape points basing on the order relationship of the
original gps points  then after we get the order of these points  we would know complete shape
and direction information of the paths  figure   shows examples of the reconstructed paths 

 

conclusion and future work

this project developed an algorithm to learn about map information from sparse gps sequences 
the input of this algorithm is a target area and a gps sequence data set  the output of this
algorithm is the shape and direction of the possible paths in the target area 
future work of this project would be developing algorithms to compare our learned map information with the existing map and thus refine and update the existing map 

figure    example of reconstructed path

 

fi 

references

     the taxi gps sequence data set is downloaded from http   sensor ee tsinghua edu cn 
     the open sourced k means clustering executable is downloaded from http   mercury webster edu aleshunas 
source   code   and   executables source   code   and   executables html

 

fi