predicting wallpaper preferences

peter a  melick
department of mechanical engineering
stanford university
stanford  ca      
pmelick stanford edu

abstract
an algorithm is proposed for suggesting mobile tablet wallpapers for a user  such
a method could theoretically be applied to an application which sends users wallpaper reccomendations from a library of images  which are sourced from other
users  a method for quickly determining what types of wallpapers a user will
like  which involves classification of the entire user base via k means clustering 
is described  in addition to the subject and potentailly the artist who created the
image  the model takes into account visual qualities of the image  including dominant colors and its visual busyness 

 
   

data collection   processing
web survey

in order to collect data on mobile wallpaper preferences a web survey was created and distributed to
the authors friends  family  and classmates  in addition to collecting information on demographics
and free form suggestions for the proposed service  the survey asked users to indicate whether or not
they would use an image as their mobile tablet wallpaper for     preselected images  the images
were chosen to roughly uniformly represent    categories  abstract  aircraft  animals  architecture 
cars  popular female media  popular male media  humor  nature  and space  within each category 
the images were selected to represent a range of visual attributes  as will be discussed in section   
as of this submission  the website is still live at screenflavor weebly com 
   

data set description

    total unique users from a wide variety of ages and genders took the survey  of them      rated
all     photos  users who only rated some of the images are elegantly incorporated in the proposed
algorithm  the initial form of the data was one  csv file for each photo  containing the ip address
and rating  yes or no  from each unique user  with a python script the data in these spreadsheets
were loaded into one user data array  each column of the array represents a user  and each row
contains a     yes   a     no   or a    did not see rate   this array was loaded into matlab for the
remainder of the processing 

 

image feature vector representation

a way to represent proposed wallpapers as vectors of image features was developed  in the freeform suggestions from the survey  the most commonly cited factors in wallpaper preference were the
subject of the image  the visual busyness  and the colors  including their intensity and brightness  
the vector representation was designed to include this information  the first    elements represent
the subject of the image  every image has a   in exactly one of those elements  the next three 
 

finumbers between   and    represent the busyness of the image  the rest of the elements of the
image feature vector  again numbers between   and    contain data on the images colors 
   

hue  saturation  and value

images were represented in hsv space instead of rgb space since hsv more closely aligns with
how humans perceive images     in this space  each image is represented as three arrays  the elements of which represent the hue  saturation  and value of each pixel of the image  all numbers
between   and    the following feature detection algorithms were used on the image data represented in this space 
   

busyness detection algorithms

several methods for detecting the busyness of an image were attempted  at first it was suspected
that the  d fft of an image would contain information about its busyness  in the form of the
strength of frequencies of pixel variations  several interpretations of data in the  d fft were tried 
but the central assumption of all was that large amplitude variations at high frequencies indicate
busyness  by subjectively assigning a busyness level        or    and computing the  d fft of
each image  an attempt was made to classify images according to busyness  both multi nomial
naive bayes and multi class svm approaches were applied to the classification problem  but neither
yielded convincing results      successful classification   ultimately  the data extracted  d fft
was determined not to be a good indicator of busyness  although it seems to have a correlation
on the edge cases  extraordinarily busy images and very uniform images  it does not provide much
information on the majority of images 
another method that did yield good busyness  altough is much slower than  d fft  was adapted
from one described by d  ganguly et al     it takes the average value of the the average difference
between a pixel and each of the   surrounding pixels  performing this calculation on each of the
three image components results in a busyness metric that seems to corresponds well to perceived
visual busyness in each of those components  for example  in the images in figure    the busyness
algorithm estimates the busyness of the busy color component of each image as greater than       
is the theoretical max   and the busyness of the other two as close to   

figure    examples of hue  saturation  and value busy images
as described  the busyness detection algorithm is quite slow even for fairly small     x     images 
for this reason  a granularity measure was introduced  instead of sampling the average difference
at every pixel  the algorithm samples at some specified interval  it then samples at a slightly finer
interval and compares the two busyness values  if the two are the same within some threshold  no
finer sampling is taken  otherwise  meaning finer sampling found more busy areas  finer and finer
samplings are taken until the busyness has converged  the actual busyness returned is that of the
finest sampling taken before convergence  with this algorithm  only very busy images have long runtimes  since coarse samplings converge quickly for non busy images  this worked extremely well 
and resulted in very good estimations of the busyness of the non sampled images with significantly
shorter runtime on the set of all the images 
 

fi   

colors

the representation of the colors in an image was fairly straightforward  the values in the color
histogram of a component of an image indicate how many pixels fall within each of the bins of
the histogram  to represent the colors   bins were used for hue  and   bins were used for each of
saturation and value  meaning a total of    elements of the feature vector were used to represent
color  bringing the total dimension of the feature vector up to      the value of the color elements
of an images feature vector are the number of pixels in a bin divided by the total number of pixels 

 
   

data analysis   results
user vector representation

each user is represented as a vector that is the sum of the ratings theyve given every photo times
that photos feature vector  divided by the sum of the absolute value of all the feature vectors  this
can be represented as
p
u  p

photos

photos

rating  p

abs rating  p 

where u is a user vector  p is the feature vector representing a photo  and both sums are over all
photos  each element of u is increased when a user upvotes a photo with a certain feature  rating  
    decreases when they downvote  rating       and remains the same if they have not seen that
photo  rating       therefore  user vector elements have values close to   when the user likes that
particular feature  values close to    when a user dislikes that particular feature  and values close to
  if the user is indifferent to that particular feature 
since it is assumed that some photos have an intrinsicly higher probability of being upvoted than
others  and since a user up downvoting a photo that most users down upvote should count for more
than a user up downvoting a photo that everybody up downvotes  a photos mean rating is subtracted
from all its ratings before computing the user vectors 
   

principal components

to ensure that the features selected were actually relevant in the user data  principal component
analysis was done on the user data set  the first eigenvector of the covariance of the user matrix
 whose columns are user vectors  has by far the largest eigenvalue  and has almost uniformly distributed elements  this is a good indicator that the user data has a good distribution of users who
like and dont like every feature  and it is not the case that  for example  all the users dont like busy
images 
   

predicting ratings

a central assumption of the proposed reccomendation system is that all the users could be classified
into a small number of types of users  all of whom share similar opinions on which type of photo
they would use for the mobile tablet wallpaper  users of a particular type are only shown photos that
some threshold  for now  more than half  of other users of the same type like  after a small number
of up downvotes  more on how small later  a user can be classified and the system will only show
photos with a high likelihood of upvote from that point on 
another advantage of this type of system  instead of just showing the photo closest to their vector 
is that it allows users to see a photos with features they have not yet indicated a preference for  but
which similar users have liked  for example  if a user indicates a strong preference for pictures of
cars in their first few up downvotes  they may by classified into the group of users who likes cars 
aircraft  and popular male media  and some visual attributes as well   then they can begin to see
photos they will probably like  without ever directly stating  or even neccessarily knowing  that they
like those features 
 

fi   

k means clustering   model testing

the k means clustering algorithm was used to find the clusters of similar users from the data  it
randomly picks users to be the cluster centroids  assigns each user to the closest centroid  and then
re computes the centroids  and repeats until convergence  in order to test the model  the centroids 
assignments  and prediction system  the     of the data set was used to train the model and     was
used to test the predictions  in order to limit the effects of local minima in the k means clustering
algorithm and different accuracies on different splits of data  the accuracy of a model is taken as the
average value of twenty accuracies computed on different sets of randomly split data 
by varying the number of centroids and computing accuracies as described  the relationship between
number of centroids and accuracy was measured  and is shown in figure    below 

figure    five centroids seems to be an appropriate number to cluster the data
the described model and testing yields     prediction accuracy on average with five clusters 
above five clusters the accuracy slowly increases roughly linearly with the number of clusters  but
with this relatively small dataset having many more clusters means having very few users per cluster 
having more users per cluster has the advantage of having more photos with very high likelihood of
upvote  and is more likely to bring in alternative features  as decribed in the cars aircaft example 
   

mixture of gaussians

as an alternative to k means  a mixture of gaussians model  with   gaussians  was fit to the data
using expectation maximization  the predicted ratings were modified to be a weighted average of
the ratings predicted by each cluster  the weightings are the probabilies that a user belongs to each
cluster   however this model did not provide more accurate results than k means and predictions
were much slower  its convergence was also dependent on the initialization of the means of the
guassians 
   

consensus threshold

this particular reccomendation system has a nice luxury   it can choose whether to predict or not  by
only showing photos that it is very confident a user will like  of course  this is limited by how many
very likely to be upvoted photos are available   by raising the number of similar users who must
agree that a photo is good before it is recommended to a new user  the prediction system can achieve
must higher successful prediction rates  the     success rate  with   clusters and       consensus
threshold  can be increased to     with a       consensus thresold  and     with a       consensus
threshold 
 

fi   

minimum ratings for classification

an advantage of the user clustering approach is that a user can be assigned to his her cluster given
only a few up downvotes  in order to justify and quantify this assumption  the data set was split and
the k means algorithm was run on it  then  for each test user  the minimum number of randomly
selected photos to successfully classify that user into their eventual cluster was calculated  the
results of      trials of this process are shown in figure    below 

figure    the number of up downvotes needed to correctly classify a user
ten ratings was enough to correctly classify a user in       of the trials  therefore  it should be
possible to begin showing users only photos they will very likely upvote after only about ten photos
at most 

 

future work

a mixture of another type of probability distributions could be fit to the data  since it appears to
not fit a mixture of gaussians very well  perhaps a mixture of poisson distributions would be more
appropriate  another good next step would be to implement a live trial of the test described and
simulated in determining the minimum ratings for classification  this would involve presenting
images to new users and choosing which to present to them based on the current classification of
their user vector 

 

acknowledgements

i would like to thank professor ng and the cs    staff for running an excellent course  and providing
me with the framework to perform my analyses  i would also like to acknowledge c c  chang and
c j  li for the use of their libsvm 
references
    d  cardani  adventures in hsv space  the advanced developers hands on conference july      
    d  ganguly  a novel approach for edge detection of images  international conference of computer and
automation engineering march      

 

fi