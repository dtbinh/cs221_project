 

predicting help seeking behavior in students learning to program
engin bumbacher  alfredo sandes  and daniel greene
introduction
recent  work   in  cs  education  has   leveraged  machine learning  techniques   to gain insight into the ways  in which students
approach  a  given  programming  assignment   piech  et  al    piech   sahami   koller   cooper      blikstein          created  a
graphical  model  of  how  students   in  an  introductory   programming  course  progressed  through  a  homework   assignment 
they   were  able  to  extract  characteristic   pathways   based  on  snapshots  of  student  codes   that  were  taken every  time a
student  attempted  to  compile  his her  code   the  authors   also  illustrated  the  relevance  of  their  approach  to  education  by
showing  that  their paths  predicted student midterm grades  this  suggests  that teachers  and students  may  be able to use
student path data to develop targeted instruction 
in  a  similar  approach   helminen  et  al    helminen   ihantola   karavirta      malmi          examined  the  pathways   that
students   took   to  solve  a  collection  of  scaffolded  programming  puzzles   that  require  reordering  a  set  of  shuffled  lines   of
code  they found several characteristic path shapes  including loops  branches  and dead ends 
encouragingly   all  of  the  work   mentioned  so  far  is   also  consistent with prior research on the psychology  of programming
 soloway      ehrlich          that  suggests   that  expert  programmers   have  a  mental  storehouse  of  characteristic
programming  idioms  and that they  can read and write code in larger conceptual chunks than novices  however  student
homework   assignments   are  untimed   allow  for  a  range  of solutions  and only  examine the final products  of student work 
thus   a  closer  examination  of  the  process   by   which  students  complete assignments  can reveal important distinguishing
information  such as the size of code chunks that get implemented in successive updates 
piech  et  al   worked  with  of  snapshots   of  code  generated  from  students   in  the fall of       but confirmed similar student
development  paths   in  data  from  a  summer  class  however  their work  only  focuses  on the first and simplest assignment
of  the  class   though  piech  et  al   have  been  able  to  predict  midterm  grades   based  on  the  student paths  during this  first
assignment   these  results   do  not  offer  any   insights   into  when  a  student  needs   help  at  a  certain  point  in  his   problem
solving  process   or  as   to  whether  there  is   a  causal  relation  between  teacher  help  that  a  student  received  and  his
progression  through  the  assignment   we  aim  at  addressing  this   question  by   doing  a  first  study   to  look   at  whether  help
seeking  behavior  of  students   correlates   with  their  coding  activities   for  an  assignment   we  use  different  ways   of
representing  student  by   the  body   of  code  snapshots  they   wrote  during  a  single  assignment  to  predict  whether  the
student got teacher help during the entire quarter or not 

data sources and overall goal
we  have  collected  a  range  of  data  from       students   enrolled  in  the  stanford  cs   a  course  on  basic   java
programming  our data consist of 
   text  snapshots  of  every   students   code   taken  every   time  a  student  tried  to  compile  his her  program   we  have data
for  assignments       karel  the  robot  problems        simple  java  graphics   and  calculations        a  simple  breakout
computer  game        the  game  hangman    and      a  graphing  program    there  are  about                    snapshots   for
each  assignment   across   all  students   for  findrange   the  assignment  analyzed  here   we  had        instances   in
findrange  the problem is to find the maximum and minimum of a sequence of numbers and output it 
   tracking  data  from  an  on campus   homework   help  service   every   day   class   tas   working  at  a  computer  lab  offer
personalized  help  to  students   who  visit   the  tas   track   who  visits   and  offer  brief  notes   including  the  name  of  the
student   the  time   and  usually   the  name  of  the  assignment   for  example   there  were  around       help center  visits   for
assignment   that came from about     distinct students 
   data  from  a  weekly   survey   that  asks   students   about  their  perceived  skill   perceived  difficulty   of  the  assignment  their
help seeking strategies  and demographic information 
this   project  is   the start of a larger machine learning project based in the lab of assistant professor paulo blikstein at the
school  of  education   our  data  is   potentially   sensitive   so  we  had  to  establish  irb  approval   anonymize  our  data   and

fi 

work   extensively   with  the  course  professor  and  tas   the  process   of  getting approval and collecting our data took  much
longer  than  we  thought   so we have had to scale back  some of our initial ambitions  here  so  for example  as  this  is  very
new data  we are still in the process of obtaining all grades for the course  assignments  midterm  and final test  
in  this   project   we  used  ta  help  data  across   the  quarter  and  data  from  assignment     problem      findrange    in  the
findrange  problem   students   are  tasked  with  writing  a  piece  of  software that will accept an arbitrary  list of numbers  and
output  the  maximum  and  minimum   solutions   to  the  problem  typically   take  one  of  two  forms      a  set  of  conditional
statements   nested  inside  of  a  loop   or  vice versa   we  have  a  sample  of       students   who  completed this  problem  for
our  ta  help  data        used no ta help       used it     times  and      more than    our goal is  to investigate whether
features   of  a  students   set  of  snapshots   can  be  used to predict the degree to which he she sought out help  this  can be
interpreted as an indirect metric of a student needing help  or as a way of identifying a student as a help seeking type 

methods
our  process   can  be  broken  down  into  three  stages    see figure     characterizing snapshots  characterizing students
based on the snapshots  and classifying by intervention data 
    characterizing  snapshots   our  first  step  was   to  develop  feature  sets   and  metrics   for  characterizing  the  data  at the
level  of  individual  snapshots   that  is   we  want to be able to make meaningful statements  about the similarity  of different
snapshots  we developed and tested three feature sets 
  constrained bag of words  we implemented a bag of words  model that modeled the counts  of the    java keywords  like
public   int   and  double   ignoring  unique  subject created  variable  names   as   irrelevant  sources   of  variance   as   a
metric  we simply use the euclidean distance between histograms of word frequencies  salton  wong    yang        

fig     a summary of the different approaches taken in this project
   non semantic   text  features   we  also  extracted  a  collection  of  relatively   simple  snapshot  text  features   that  are
non semantic     they   capture  a  minimum  of  information about the code  these features  include number of lines  number
of  comments   and  the  magnitude  of  changes   in  both  lines   and  comments   as   compared  to  the  previous   snapshot  in  a
students   sequence   here  as   well   we  used  the  euclidian  distance  as   the  metric   for  dissimilarity   measures   after
preprocessing the data by different means of normalization 

   semantic  text features  finally  we extracted a collection of features  that capture more of the meaning of the code itself
in  the  context  of  the  assignment   specific   to  this   findrange  assignment   the  codes   varied  the  most  along  the
dimensions   of  number  of  variable  declarations   number  of  functions   and  subfunctions   and  number  and  nesting  level  of
conditional statements and loops 
    characterizing  students   the  next  step  is   arguably   the  computationally   most  complex   of the three  our goal here is
to gather information at the level of a student  as opposed to a single snapshot  we tried two methods for this 

fi 

   cluster based  student  feature  selection   given  the  snapshot  characterization  from  step      we  created  a  new
feature  set  to  characterize  students   first   we  had  to  cluster  the  snapshots   into  representative  code  states   by
kernelized  k means    sewell      rousseau           the  difficulty   was   in  determining  an  optimal  number  of
clusters   we  chose  the  optimal  number  of clusters  using a combination of silhouette value maximization  wang 
wang      peng        and davies bouldin index  minimization  petrovic         we obtained    clusters  we then
built  a  new  feature set  at  the  level  of  individual  students   based  on  their  patterns   of  traversing  the  snapshot
clusters   specifically   tracked  their  sequence  of  transitions   from  cluster  to  cluster   their  frequency   of  cluster
changes   amount  of  time spent in any  given cluster  time to solution  and total count of clusters  visited  we then
trained  an  svm with a gaussian kernel on this  new feature set to predict the degree of intervention that a student
received 
   mean  or  final  code  snapshot   this   method  was   a  deliberately simple  alternative  to  the  first   we  simply
characterized  every   student  with  one  of  two  features   the  contents   of  his her  final  snapshot   or  the  contents   of
the  mean of the second half of his her snapshot series  based on the characterizations  of step    the idea behind
taking  a  mean  of  second  half  of  the  submissions   is   that  we  observed  noise  in  the  data  set  arising  from  the
following  facts       some  students   preferred  to  work   in  another  sdk  other  than  eclipse   and  therefore showed a
great  variability   in  the  features   sequence   since  they   would  copy   and  paste  their  own  code   and  compile
afterwards and    less noise was observed for the second half of the snapshots sequence 
    comparing  with  intervention  data   our  final  step  was   to  classify   the  ta  intervention  data  based  on  the  student
representations   we  performed  the  binary   classifications    help  vs   no  help   by  running a nonlinear svm with a multi layer
perceptron   and  the    level  classification   no  help  vs        visits   vs       visits   with  a  matlab  built in  k nearest neighbor
classifier to predict student help seeking based on student features 

results
a  summary   of  the  results   obtained  can  be  found  in  the  following  tables   in  figures              and    what is  common to all
the  results   is   that  despite  the  coarse  feature  representations   that  do  not  account  for  temporal  dimension  of  the
snapshots   nor  for  the  state  transitions   of  the  students   as   is   done  by   piech  et al   by  using the simple measures  alone 
we  have  been  able  to  show  that  there  is   a  correlation  between  the help seeking behavior across  the entire quarter and a
students assignment 

fig      results obtained from the student clustering approach

fig      a summary of our mean and final snapshot model feature choices resulting from feature selection

fi 

fig      a summary of the results achieved for each model choice
as  shown in figure    the approach of clustering students  based on the parameters  that capture their progression through
the  snapshot  states   produced  an accuracy  of        with a precision of        however  seen in figure    a very  simple
representation  of  a  student  with  only   a  mean  of  snapshots   or  even  just  the  final  snapshot was  able to produce a better
classification  with  more  than        though   the  precision  is   with        lower  for  the  representation  of  a  student  with  the
mean  of  snapshots   in  terms   of  ta  intervention  labeling   we  found  that  a  binary   labeling  produces   better  results   than
ternary   labeling   we  assume  that  in  order  to  make  the  distinction  between  a  student  who  seeks  more help than another
one   we  have  to  use  a  more  complex   representation  that  takes   into  account  the  temporal dimension of the progression 
when  it  comes   to  the  representation  of  student  snapshots   with  semantic   text  features   unsing  a  standard  feature
selection  model   we  found  differences   in  what  features   best  classify   ta intervention for the different models   see figure
     interestingly   though   the  nesting  of  the  conditional  statements   and  loops   does   have  a  strong  impact  on  the
classification results 
in  terms   of  student  clustering   applying  k means   to  the  dissimilarity   matrix   of  student  snapshots   represented  by
semantic   text  features   the  selection  model  suggested      clusters   as   a  good  representation   see  figure       indeed   as
indicated  by   the  distance  matrix   in  figure      the  snapshots   are  well  separated  into  the  clusters    as   further  indicated  by
the silhouette value of about       
these  results   are  especially   interesting  because  they   suggest  that  there  are  generalizable  characteristics   found  in  a
small  sample  of  code  from  one  assignment  early  in the class  that can be indicative for help seeking behavior across  the
entire quarter 

conclusions
using  a  simple  measure  of  a  students   progress   and  representation  of  his   code  in  a single assignment  we were able to
predict  with  accuracy   of  about        student  help seeking  behavior  across   the  whole  quarter   this   might  not  seem  very
accurate   but  in  light  of  the  fact  that  the  representation  is   very   simplistic   and  that  we  have  excluded  any   complex
measures   entailing  temporal  dimensions   these  results   indicate  that  there  is   structure  in  the  relationship  between  a
students   progression  through  an  assignment  and  his   help seeking  behavior  that  is   worth  to  be  further  examined 
interestingly   though  the most simple representation of a student by  means  of his  assignment is  the best predictor for his
help seeking behavior across the quarter 
this   project  is   the  start  of an extended investigation of cs   a data  we are in the process  of obtaining assignment and
test  grades   and  all  assignment  snapshots   we  are  also  collecting  data  from  a  weekly   survey   that  evaluates   student
motivation  and  perceived  difficulty   on  each  assignment   in  future  work   we intend to integrate our intervention data into a
markov model of assignment progress that can predict grades and suggest critical points for intervention 
note   we  thank   chris   piech   marcelo  worsley   and  paulo blikstein for their invaluable suggestions  and support on this
project 

fi 

fig     dissimilarity matrix plot of the k means clustering and   representative snapshots

references
blikstein  p          using learning analytics to assess students behavior in open ended programming tasks 
proceedings of the learning analytics and knowledge conferencd  lak     retrieved from
http   dl acm org ft gateway cfm id         ftid         dwn  
helminen  j   ihantola  p   karavirta  v     malmi  l          how do students solve parsons programming
problems an analysis of interaction traces  in proceedings of the eighth annual international computing
education research conference  pp           retrieved from
http   dl acm org ft gateway cfm id         type pdf
kapur  m          productive failure  cognition and instruction                
petrovic  s          a comparison between the silhouette index and the davies bouldin index in labelling ids clusters  in
proceedings of the   th nordic workshop of secure it systems  pp       retrieved from
http   svn xp dev com svn b frydrych klasyfikacjadanych klasyfikacjadanych doc materialy silhuetteindexregulast
opu pdf
piech  c   sahami  m   koller  d   cooper  s     blikstein  p          modeling how students learn to program  in
proceedings of the   rd acm technical symposium on computer science education  pp           retrieved from
http   dl acm org citation cfm id        
rabiner  l     juang  b          an introduction to hidden markov models  assp magazine  ieee            
rabiner  l     juang  b  h          fundamentals of speech recognition  retrieved from
http   www citeulike org group       article       
salton  g   wong  a     yang  c  s          a vector space model for automatic indexing  communications of the acm 
               
sewell  g    rousseau  p  j          finding groups in data  an introduction to cluster analysis  retrieved from
http   www lavoisier fr livre notice asp id oklwrla alsowq
soloway  e     ehrlich  k          empirical studies of programming knowledge  software engineering  ieee
transactions on              
wang  k   wang  b     peng  l          cvap  validation for cluster analyses  data science journal                 

fi