predicting movie and tv preferences from facebook profiles
johan lindell
stanford university

anders haponen
stanford university

johli    stanford edu

haponen stanford edu

december         

 

introduction

the project we selected was taken off the list of suggested
projects on the course website  the project idea was presented by head ta andrew maas in cooperation with
graham darcey and wayne yurstin of screaming velocity inc      it is a project that uses data collected from
facebook and tries to map it to data found on imdb to
suggest a tv show or movie that the algorithm thinks that
the user will like  due to using facebook we will also
have access to users likes  these can be used both in
training purposes and can be held out during testing to
approximate accuracy of our suggestions  we chose this
project for several reasons 
firstly  facebook and imdb are good pages to work
with when it comes to machine learning  not only are
they incredibly popular  but they both provide relatively
simple apis to work with  this means that we have to
spend less time working on how to obtain the data and
can spend more time selecting features and improving algorithms  we also like the idea behind the project  having computer generated suggestions  such as purchase tips
on amazon or friend recommendations on facebook  is
something we face daily and it would be interesting to see
for ourselves one of the ways it can be done  finally we
are both avid watchers of various tv series  something
that will make the project more fun to implement 

 

goal

the purpose of our project is to implement an algorithm
that will take a users facebook data as input  based on
the input it will then suggest a tv series or movie  where

the data concerning the media will come from imdbs
database or the dataset provided to us at the start of the
project  the goal is to get an algorithm whos suggestions
relate closely to the actual facebook likes as these are the
closest approximation to the truth that we can obtain easily 

 

methods

there are two major tasks within this project  one is gathering and parsing of data and the other one is using machine learning to come up with relevant suggestions  the
first part is described in section      for recommending
tv series we used two different approaches  described in
section     and section     respectively 

   

facebook data

the first problem we faced was the issue of gathering
data  facebook prevents users from accessing friends lists
of your friends when using their graph api  this strictly
limits users from gathering large amounts of data singlehandedly  this means that it would be hard for us get
enough data by ourselves  luckily we received tremendous help from graham darcay  he created a website
that with the permission of the visitor collects the users
and his friends facebook data      posting the link to
this website on piazza gave us a fair amount of data  at
the moment of writhing this we have access to an xmlfile with   k users  we created a python script to read
the xml data and output a matrix indicating which series each user liked as well as other information such as
gender  locale and other likes 

fi   

tv series correlation approach

from imdb  we proceeded to write a python script that
went through the database extracting the keywords for
our first approach to get an algorithm up and running
each show and reformatting  after this we checked this
was to use only the existing tv series likes from each
data against the shows we obtained though our facebook
user  with that data we tried to come up with an algodata to obtain keywords for more of them  with this we
rithm that would capture the correlation between different
could run k means on all the shows  using the keyword
tv series  similar to naive bayes with laplace smoothas features  to group the shows together in clusters  the
ing      the first step was training a large matrix   which
reasoning behind this was to determine which cluster the
elements would contain the probability that you like seuser was most in favor of and recommend a tv show from
ries i  given that you like series j  the i  j th element of
that cluster  to determine which cluster a user belongs to
this matrix is shown in equation   
we averaged the features of the users tv series likes and
pm
found the nearest cluster center retrieved form k means 
k
k
  x      xj         
pm i
the features we then used as input to our algorithm was
   
i j   k  
k
k     xj        n
user locale  gender as well as a tokenization of all words
k
where xi     means that user k liked series i  n is the retrieved from the facebook profile  the algorithm was
total number of tv series liked by all users and m is the then trained and tested using a svm 
total number of users 
once this matrix has been trained a measure of the
  evaluation metric
probability that a user likes the series l could be calculated using the users likes as follows 
one difficulty of this project is measuring the quality of
y
your recommendations  the reason for this is that it is
p l  
l k
difficult to exactly match the likes of a user when limiting
 k xk    
yourself to a small number of recommendations  one apdue to the low values of  the following measure is proach would be to cluster all tv shows  e g  by genre 
and if the recommendations are within the same clusmore feasible 
ter as the actual preferences of the evaluated person it
n
would be counted as a successful labeling  another apx
log p l   
  xk     log l k  
    proach to evaluating performance is to compare the alk  
gorithm against always recommending the most popular
to improve our performance we tried weighting these tv shows  e g  by recommend a larger number of tvprobabilities with other probabilities given other features  shows       and count how many of those the person
such as gender and locale  these probabilities were esti  actually liked  after doing this for each test user the fracmated similarly to the correlation matrix  e g  for calcu  tion of correct likes generated by the algorithm and the
lating the probability that a male liked a particular series most popular shows will indicate the performance of the
we simply calculated the fraction between the number of algorithm 
likes from males and the total number of likes that series
had  the locale information we had access to in the facebook data was location and language settings 

 
   

   

user and series clustering approach

result
tv series correlation approach

using the evaluation metric described in chapter   we got
approximately     improvement compared to just recommending the most popular series  table   lists the
testing error when weighting with different additional features 

the next step we took was to do keyword analysis on
the series  we did this in two parts  first we used the
more concise descriptions of shows provided by graham
and wayne  we then downloaded the keywords database
 

fiadditional features
none
gender
locale  location and language 
gender and locale

improvement from recommending popular series
       
       
       
       

table    improvements in recommendations

   

user and series clustering approach

using this method  clustering the series into ten clusters 
we could predict facebook users cluster belongings with
accuracy only slightly above the the fraction of occurrence of the most popular cluster  using these cluster
belongings to recommend series turned out to perform
worse than just recommending the most popular series 

 

figure    learning curve 
these metrics and tv shows  see next subchapter  this further reduced the amount of useful data  even the profiles
with the highest amount of data were quite sparse  as we
did not have access to for example their friends or their
comments 

discussion

using a simple approach we managed to achieve approximately     improvement when recommending series in
comparison to just recommending the most popular series  these relatively poor results were caused by many
factors  some of which are described in the following subchapter  figure   shows a learning curve for the correlation approach  which says quite a few things about the algorithm  since both the training curve and the test curve
seems to have converged when training on all our data
we would not have much use for more data of the type
we had  it also seems like the two curves will not converge to the same performance  indicating that our model
is slightly over fitting to our training data 

   

problems

     

sparse data

     

low correlation

after experimenting with combinations of features in the
tv series correlation approach we saw that for the data
we had there was no clear improvement in the result after
adding either gender  location or a combination of both to
the algorithm  in fact the only thing we could see improving the result beyond the simple approach of just recommending the most popular tv show was taking the other
likes of tv shows into consideration  it is possible that
this could be due to the sparsity of the data and that we
dont have enough meaningful data for the correlations to
appear 
     

facebook pages naming convention

in matching the likes from the facebook data to the tokens
from the imdb data we ran into the problem of the inconsistent naming convention of the often fan made pages
on facebook  partial names  forgotten punctuation or abbreviations create problems in connecting the pages with
their corresponding imdb tokens  we tried to minimize

a surprisingly high degree of facebook profiles where
just empty shells containing no data at all  this meant
that a large portion of our data set added nothing but parsing time to our algorithm  there were also a large amount
of low data profiles  containing only the locale and gender
of a user  as we couldnt find good correlation between
 

fithe damage with some basic string conversions  going all
lower case  removing non alphabetic chars and such but
there could still be a significant alteration of the results
if a very popular tv show has a poorly named facebook
page 
     

these would in all likelihood have a much higher average of tv series likes making it easier to see correlations
between shows  a possible argument against this would
be that this is tainting the algorithm with a user base that
is not representative of the end user  who is just an average facebook user and not an above average tv series
viewer  which would cause the recommendations to become poor  a counter point can be made in that recommendations based on people who have a large experience
with tv shows and can draw better comparisons is actually worth more when suggesting new shows to an average
user due to the nature of their expertise 

execution time vs data set

when working with the tv show correlation approach
which gave us the best result we ran in to the problem
of long execution times  training our correlation matrix
at the largest data set took upwards of    minutes  naturally it is not supposed to be a process that is repeated
too many times but it can still be frustrating when you
wish to try small changes  as shown in figure   we are
not reaching a convergence of training and test data at a
much earlier point of data size so reducing the data set is
not a viable solution  this can likely again be attributed
to the sparsity of the data  a higher percentage of the profiles having likes and a higher average of likes per profile
would allow us to reduce the size of the training set while
retaining performance  likewise a higher correlation with
other parameters than facebook likes could also allow us
to draw more precise conclusions from a smaller data set 

   

     

if we could improve the linking between facebook pages
and the corresponding imdb title we could get a very
cheap performance boost with regards to execution time 
this could of course be done with better string comparisons  there are really advanced algorithms for detecting
similarities between two strings and we could continue
doing this to an arbitrarily advanced level  a cheaper and
quicker variant could just be to take a look at the x 
most popular facebook pages and see if we have any of
them being uncounted for due to poor naming  this way
we could also account for duplicates which in the current implementation can cause some tv shows to be quite
underrepresented if both pages cannot be accurately accounted for  considering the amount of tv shows weve
seen from our data set so far it doesnt seem impossible
to make manually ensure that the most popular series are
correctly parsed 

future improvements

the following subchapters discuss some improvements
that could help performance and development 
     

collecting other data

the biggest problem faced when trying to suggest series
was the sparsity of each individual facebook profile  the
additional information we believe would have helped the
most would be the profiles of all the users friends  the
users comments as well as age  this would allow better categorization of each user which could lead to better
suggestions 
     

better linking

 

references

references
    screaming
velocity 
http   screamingvelocity com 

inc 

website 

    face
profile
scraper 
online 
http   screamingvelocity com stanford cs    index html

more refined data

one way of improving performance without slowing
down training time would be to attempt to recruit quality
data from the facebook pages of tv series enthusiasts 

    cs    course lecture notes two  online 
http   cs    stanford edu notes cs    notes  pdf
 

fi