creating tv movie recommendations from facebook
profile information
alejandro ayala hurtado  yeskendir kassenov  nick yannacone

motivation
while digital advertising has been pervasive for years  efforts to make it relevant 
interesting  and convincing to sites users are still ongoing  the best ads are those that a user
finds compelling enough to take into consideration  rather than merely scroll by    a reminder of
a concert shed meant to go to but forgotten about  or a nostalgic tv show from childhood  one
typical approach to solving the problem of ad relevancy is to use a recommendation system  broadly  a learning algorithm which decides what items for sale a user is most likely to find
interesting  based on some combination of that users past behavior  other similar users
preferences  and similarities between the sold items themselves  most of these approaches take
into account a users existing preferences when making new suggestions  for example  the most
visible recommendation system on amazons website is directly entitled customers who
viewed this item also viewed  directly relating a users browsing history to other interesting
items based on the tastes of other users 
for this project  however  we wanted to build a recommendation system without the aid
of a users existing preferences  at least not in the areas we were hoping to recommend  more
specifically  we aimed to provide relevant recommendations for popular tv shows and movies
based on other information  in our case we used gender  first language  and other cultural
preferences  e g  sports  music  and books  as this other information  our approach could be
useful  for example  for a site which specialized in selling music  but also wanted to deliver
relevant advertisements from film companies  and the first time a user visits a website 
demographic data  like the location of the visiting ip address  is all the recommender has
available to deliver high quality recommendations 

data collection
since our project has a corporate sponsor  graham darcey of screaming velocity  inc  
and since many other groups in the class are working on this project  we were able to acquire a
long list of user interest data scraped from the facebook profiles of friends of the members of
every project group  using a facebook graph api scraper written by graham  the resulting data
set includes a list of each users activities and interests  as reported by the pages they liked  as
well as each users locale  i e  language  and gender  unfortunately  it does not include age or
hometown  presumably because that information would have made the data set insufficiently
anonymized  nevertheless  we had a lot to work with 
we also received a mapping of popular tv shows and movies to their genres  also
courtesy of graham  with this information in hand  we experimented with a few different
methods naive bayes  pca  with logistic regression run on the resulting features  and kmeans clustering for matching users non movie tv interests with for the most part the genres
of tv shows and movies  rather than the tv shows and movies themselves  we did attempt to

fiuse the users movie and tv show interests to predict specific movies and tv shows but as we
describe later it was not very successful 

data preprocessing
for all the algorithms that we tried  we took the data that had been gathered through the
website graham had set up and isolated the unique strings from their likes interests description
as their features    for example whether they live in the u s   their gender  etc  each profile
was associated with a vector of binary features representing whether or not the corresponding
feature applied to them or not  for example  if somebody liked harry potter then that persons
profile had a one in the index of the feature vector corresponding to harry potter  to get the
values we were trying to predict we went through all the profiles and for the ones that had
specified their favorite movies or tv shows we figured out the genres of these shows and movies 
based on grahams mapping  and associated these profiles with a set of genres  since many
profiles did not specify a movie or tv show  these profiles were not associated with any genres 

analysis  nave bayes
we first decided to model which genres a user would like by creating a binary classifier
for each genre  given a users interests  such a classifier could predict  for example  whether or
not that user liked action films  once wed found a users preferred genres  we could turn them
into specific movie and tv show recommendations by creating a list of all the movies and shows
that were of the predicted genres  our first step in this direction was to implement a nave bayes
classifier for each genre  we trained each model on     of the user profiles  and tested each on
the remaining     
with the standard nave bayes approach  predict whichever classification has the highest
probability   each genres classifier tended to predict all  s    i e  that no one was interested in
that genre  given our training data  this was actually a very accurate approach    even the most
popular genre  comedy  was liked only by     out of       people  in the sense that only    
people had liked a movie or tv show that we could identify as a comedy  but as this example
illustrates  accuracy was not the best measure of our
algorithms success  instead  we considered precision
and recall  we introduced a new decision boundary
parameter to the nave bayes model that would make it
easier for a   to be predicted  and we could thereafter
generate precision recall graphs for a given classifier
by simply varying the decision boundary 

precision recall for different feature set sizes     
features  blue  vs       features  red  on comedy genre 

we started out using only the     most
common features in our bayesian classifiers  but soon
found that these classifiers had high bias  as a result 
we increased the number of input features  using     
to      features produced the best  i e  highestprecision  results  incidentally  the nave bayes
approach also justified our decision to consider genres 
rather than individual shows and movies  our classifier

fifor even the most popular show  how i
met your mother  was far less precise than
our genre classifiers 
one approach that did work well
was cleaning the input  our major
challenge in this problem was dealing with
the fact that most facebook users dont
share all their interests online  so that
many profiles listed no  or only a few 
interests for us to use  we also attempted to build classifiers based on trimmed input  wherein
we only trained the classifier on users whose profiles gave us at least three features  with this
modification  the precision readings from our bayesian classifiers were more stable over the full
range of recall values 
in this same vein  we noted that many users did not list any movies or tv shows in our
show genre map as interests  meaning that we couldnt compute genres for them  and
represented them in our data as if they didnt like any genres  since virtually everyone does like
some genre  even if he she might not talk about it on facebook  we also ran some algorithms
over a trimmed test set  consisting of our usual     test set without these users  over this test
set  nave bayes performed  comparatively  extraordinarily well  reaching over     precision
on the comedy genre  in practice  of course  wed have to give recommendations to all users 
regardless of how much we knew about them  however  for users who listed a non trivial
amount of interests  i e  would be in the trimmed input  and who liked at least some genres of
film  i e  would be in the trimmed test set  at least if their facebook interests accurately reflected
their real interests   our model would perform fairly well 
individual show classifiers were imprecise 

trimming test data  light blue  red  greatly increased precision 
while trimming input increased stability 

fianalysis  logistic regression
given that predicting genres
worked better than predicting
individual shows and movies  we
wondered whether the input features
might also benefit from some
summarization  as a result  we
decided to try running pca on these
features  then building and testing a
logistic regression model over the
resulting lower dimensional feature
set  the approach itself performed
well  it was actually better than the
nave bayes model for trimmed test
sets  more interesting  however  is
just how low dimensional an
adequate representation of our
feature space could be  even
reduction to a single dimension  from
logistic regression  red  gold  operated over a wider range of recalls
the otherwise      dimensional feature
than nave bayes  and performed better with a trimmed test set  even
space  produced quite good results 
after pca to just one dimension 
though reduction to    dimensions did
better  presumably  the data is so sparse that the input feature vectors are determined largely by
the presence or absence of the most common features    living in the us  being male  being
female  liking harry potter  and so on  as a result  the apparently high dimensional feature space
is quite well approximated by very low dimensional subspaces  and so pca works very well 

analysis  k means clustering
for our last approach  we divided the set of users as active  the users that have liked at
least one movie on facebook  i e  those in our trimmed test sets    and passive  the rest of the
users  more than     of users in our data set happened to be passive and incorporating
unsupervised learning would help us utilize this big amount of data 
we ran k means clustering on the data set  ignoring tv movie likes as before  to predict
the liked genres for a new user  we would identify the cluster he she would belong to and if the
genre was among most popular p genres in that cluster  as identified by that clusters active
users  we used     of active users and all passive users for training and tested the results on
    of the active users  the precision recall curve is generated by varying the parameters k and
p 
the intuition behind the model is that by running k means we find a group for each user
to which they belong based on similarities of their features  and the active members of those
groups represent every other member of their group  including the passive ones 
our first implementation was the straightforward use of the algorithm above  we
achieved high recall  but the algorithm gave a lot of false positives which led to low precision 
the reason was that only two clusters    u s  females and u s  males    represented most of the

fiusers  most of the users in the test set would be assigned to one of those big clusters and get a
positive result most of the time  since the chances of finding active users in that cluster who have
liked any popular genre would be high  therefore the main
challenge was to reduce the sizes of clusters thereby
reducing the number of false positive results  while
maintaining most of the relationships within the cluster 
we came up with two related solutions to this
problem 
we found that a third of all users had ones in their
feature vectors only at positions representing en us and or
male female and called those users common users  not
surprisingly the majority of common users were also
passive 
in our second attempt we removed common
passive users from our training set  this would mean that
the mean vectors of clusters of mostly common users were
less pulled toward the common users and would give more
freedom to other features to pull the means  also we
excluded the common active users from the clustering and
created their own two clusters  males from us and
females from us  and we would treat them as other
k means worked best once we reduced the
clusters 
impact of the features  residence in the us and
this attempt had fewer false positives and therefore
gender  common to most users 
improved the precision  however still about half of the
users in the training set were in the big clusters  whose means were close to those of the two
big clusters of our attempt 
therefore  our last attempt was a slight improvement of our second attempt  that is  after
removing all the common users and before the clustering process we nulled out the features of all
the users in the training set  i e  making an assumption that whether a person was from us or the
users gender were not useful in identifying whether the given genre is liked or not   thereby
letting the other features impact the clustering  this last approach had better precision than the
second one at the same recall levels 

conclusion
after trying out these different approaches it became clear that predicting movie and tv
show interests based on information in facebook profiles is a very difficult task  while the
supervised and unsupervised learning algorithms did do moderately well  the highest precision
we got was still around      the sparsity of the data  notably the fact that most profiles did not
include movie and tv show interests  made it more difficult for our supervised learning
algorithms to predict that a particular profile would like the genre that we were trying to predict 
a similar problem occurred with our k means clustering algorithm  in this case the lack of
similarities between profiles caused very few large clusters to form  for both of these types of
algorithms  we saw that testing on profiles that have at least one movie or tv show interest
increased their precision 

fi