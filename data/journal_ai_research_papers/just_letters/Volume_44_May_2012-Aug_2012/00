journal artificial intelligence research              

submitted        published      

c olin  planning continuous linear numeric change
amanda coles
andrew coles
maria fox
derek long

amanda   coles   kcl   ac   uk
andrew  coles   kcl   ac   uk
maria   fox   kcl   ac   uk
derek   long   kcl   ac   uk

department informatics  kings college london 
strand  london wc r  ls  uk

abstract
paper describe colin  forward chaining heuristic search planner  capable reasoning continuous linear numeric change  addition full temporal semantics
pddl      work make two advances state of the art terms expressive reasoning capabilities planners  handling continuous linear change  handling duration dependent effects combination duration inequalities  require tightly coupled temporal numeric reasoning planning  colin combines ff style
forward chaining search  use linear program  lp  check consistency
interacting temporal numeric constraints state  lp used compute bounds
values variables state  reducing range actions need considered
application  addition  develop extension temporal relaxed planning graph heuristic crikey    support reasoning directly continuous change  extend range task
variables considered suitable candidates specifying gradient continuous numeric
change effected action  finally  explore potential employing mixed integer programming tool optimising timestamps actions plan  solution
found  support this  contribute selection extended benchmark domains
include continuous numeric effects  present results colin demonstrate scalability
range benchmarks  compare existing state of the art planners 

   introduction
considerable progress development automated planning techniques
domains involving independent temporal metric conditions effects  eyerich  mattmuller 
  roger        coles  fox  long    smith      a  gerevini  saetti    serina        edelkamp 
      coles  fox  long    smith      b   development powerful heuristics propositional
planning shown offer benefits solution extended planning problems  including
planning uncertainty  palacios   geffner         planning numbers planning
time  however  combination integration metric temporal features  metric
quantities change time dependent ways  remains challenge received relatively little
attention 
interaction time numbers planning problems occur many ways 
simplest case  using pddl      fox   long         numeric effects actions updated
instantaneously  start end points actions known  and fixed 
point action execution  corpus domains past international planning competitions
adhere restrictions  time numbers interact least two complex ways  first 
actions variable  possibly constrained  durations  instantaneous  effects
c
    
ai access foundation  rights reserved 

fic oles   c oles   f ox   l ong

actions depend values durations  allows domain models capture effects
processes discretised step effects  adjusted according demands specific problem
instances  second  effects actions considered continuous across execution 
values metric variables time point depend long continuous effects
acting them 
example  problem sand loaded lorry modelled amount
sand loaded depends time spent loading  first approach capture increase
quantity loaded sand step function applied end loading action  second
approach  process loading sand modelled continuous linear function time
spent loading  amount sand lorry observed point throughout
loading process  safety device must engaged lorry three quarters
full  second models allow planner necessary access
underlying process behaviour make good planning choices integrate action
solutions  alternative models exploiting duration dependent effects split loading
action two parts around time point safety device must engaged 
alternatives become complicated relatively modest changes domain 
continuous change forms common many important problems  include  energy management  consumption replenishment restricted continuous resources
fuel  tracking progress chemicals storage tanks chemical plants  choreographing robot motion execution tasks  managing efficient use time 
cases  model using discrete time independent change adequate planning  however  discretisation always practical  find reasonable solution  or  indeed  find one all  identifying
appropriate granularity discretisation non trivial  perhaps requiring range choices
fine grained make discrete model infeasibly large  cases  numeric
change cannot appropriately discretised  unavoidably necessary access
values numeric variables execution actions  order manage interactions
numeric values 
paper present planner  colin  capable reasoning variable  durationdependent  linear change linear continuous numeric effects  key advance colin makes
able reason time dependent change use linear programs combine metric temporal conditions effects representation  colin satisficing
planner attempts build good quality solutions complex class problems  since colin
forward searching planner requires representation states  means compute progression states heuristic function guide search path initial goal
state  colin built planner crikey    coles  fox  long et al       a   however  crikey  
requires numeric change discrete cannot reason continuous numeric change  duration dependent change  where duration actions fixed state action
begins   able reason successfully problems characterised continuous change  coping efficiently wide range practical problems inspired real applications 
major contribution made colin 
organisation paper follows  section   explain features pddl    
colin handle  contrast repertoire crikey    section   define
problem addressed colin  section   outline background temporal
metric planning supports colin  before  section    describing details foundations colin lie crikey    colin inherits representation states crikey   
 

fic olin   p lanning c ontinuous c hange

well machinery confirming temporal consistency plans basis
heuristic function  section   describe systems literature addressed similar
hybrid discrete continuous planning problems colin designed handle  section  
explains state progression extended colin handle linear continuous change  section   describes heuristic guides search solutions  section    consider several
elements colin improve efficiency plan quality  without affecting fundamental
behaviour planner  since time dependent numeric change little explored 
benchmarks existence allow full quantitative evaluation  therefore present
collection continuous domains used analysis  show colin
fares these  appendix containing explanations technical detail detailed
summaries background work colin depends  ensures paper complete
self contained 

   language features c rikey   colin
colin builds crikey   handling continuous features pddl      c rikey   restricted management discrete change  colin handle full range linear continuous numeric effects  metric functions pddl     repertoire colin
scale up scale down  non linear updates  general form plan metrics  managing plan metrics defined terms domain variables remains challenge planning
yet fully confronted contemporary planner  colin handle restricted
form quality metric  exploits instrumented variable called total cost  allows
colin minimise overall cost shortest plan find using total time  the default
metric used temporal planners  
common crikey    colin cope timed initial literals  important feature
introduced pddl      hoffmann   edelkamp         pddl     backward compatible
mcdermotts pddl  mcdermott        therefore supports adl  pednault         colin
handle full adl  deal restricted form conditional effect seen
airplane landing problem described section     restricted form allows cost action
dependent state applied  general forms conditional effect cannot
handled 
collection features  colin able fully manage discrete continuous
numeric change occur directly result actions  pddl    fox   long       
supports modelling continuous change brought exogenous processes events 
triggered actions  model independent continuous behaviour brought
world rather planners direct action  key additional features pddl  
support processes events  colin handle features restricted
management continuous change expressed durative action device 
detailed explanations syntaxes semantics pddl     pddl    including
semantics implementations state representation state progression must constructed  readers refer work fox long              
 

fic oles   c oles   f ox   l ong

language
pddl    
pddl    

language feature
numeric conditions effects
continuous numeric effects

c rikey  
yes


colin
yes
yes

pddl    

pddl    

general plan metrics
use total cost
assign  to discrete variables 
scale up down
 t
durative actions



yes


yes


yes
yes

yes
yes

pddl    

duration inequalities

limited

yes

pddl    

tils
conditional effects
adl

yes



yes
partial


pddl    
pddl    
pddl    
pddl    

pddl
pddl

comment
basic treatment follows metric ff
modification state representation
modification heuristic

section
appendix b
section  
section  

limited form
treatment follows metric ff

section   

continuous effects
includes required concurrency
colin handles
duration dependent effects

limited effects

section  
appendix c
sections    
section  
section   

table    language features handled crikey   colin 

   motivation
number accounts planning successfully applied real problems 
frequency applications reported increasing  following examples involve domains hybrid discrete continuous dynamics  dynamics typically dealt
discretising time  packaging continuous numeric effects step functions  integrating
propositional planning techniques specialised solvers  examples hybrid
discrete continuous reasoning could exploited improve plan quality solution time 
operations refineries  boddy   johnson        lamba  dietz  johnson    boddy       
chemical plants  penna  intrigila  magazzeni    mercorio         continuous
processes reflect flows materials  mixing chemical reactions  heating cooling 
management power thermal energy aerospace applications power management critical  management solar panel arrays international space
station  knight  schaffer    b clement        reddy  frank  iatauro  boyce  kurklu  aichang    jonsson         example  knight et al         rely high fidelity power
model  turbospeed  provide support reasoning continuous power supply
different configurations solar panels  power management critical problem
space applications  including planetary rovers landers  inspiring temporal metriccontinuous rovers domain used one benchmark evaluation domains section     
chien et al         describe planner used support operations earth observing    eo    management thermal energy generated instruments sufficiently important on board planner uses  highly constrained  cpu cycles model
track value  eo   inspires temporal metric continuous satellite benchmark described
section    
management non renewable power contexts  battery powered devices 
battery management problem described fox et al         relies non linear model 
 

fic olin   p lanning c ontinuous c hange

colin must currently reduce discrete linear approximation  coupled iterated validation solution refinement  order optimise power use  battery management
example continuous problem cannot solved continuous dynamics
removed 
assignment time dependent costs aircraft landing domain  dierks        
continuous processes govern changing costs use runway landing
time deviates optimal landing time aircraft  problem inspires
aircraft landing benchmark domain described section    
choreography mobile robotic systems  many cases  operations robotic platforms
involve careful management motion alongside tasks  continuous motion
robot constrains accessibility specific tasks  inspection observation 
existing examples hybrid discrete continuous planning models reasoning problems kind include work using flow tubes capture constraints continuous
processes  leaute   williams        li   williams         problems involving autonomous
underwater vehicles  auvs  inspired temporal metric continuous auv benchmark presented section    

   problem definition
colin designed solve class problems temporal metric  feature linear
continuous metric change  refer class temporal metric continuous problems 
contains substantial subset problems expressed pddl     
step towards class temporal metric continuous problems  recall definition
simple temporal metric planning problem one time dependent metric
change  simple temporal metric problems represented tuple hi  a  g  i  where 
initial state  set propositions assignment values set numeric
variables  either sets may empty  notational convenience  refer
vector numeric values given state v 
a  set actions  hdur   pre     eff     pre   pre   eff i  where 
pre    pre   start  end  conditions a  state starts  ends  
conditions must hold  for detailed account subtleties semantics
action application  see fox   long        
eff    eff   start  end  effects a  starting  ending  updates world state
according effects  given collection effects eff x   x     a   consists of 
eff
x   propositions deleted world state 
eff  
x   propositions added world state 
eff nx   effects acting upon numeric variables 
pre invariant conditions a  must hold every point open interval
start end a 
dur duration constraints a  calculated basis world state
started  constraining length time pass start end
a  refer special parameter  duration  denoting duration a 
 

fic oles   c oles   f ox   l ong

g  goal  set propositions conditions numeric variables 
optionally   metric optimisation function  defined function values numeric
variables end plan  special variable total time  denoting makespan
plan 
solution problem time stamped sequence actions  associated durations 
transforms initial state state satisfying goal  respecting conditions imposed 
durations actions must specified explicitly  since possible action specifications
satisfied different duration values 
pddl     numeric conditions used pre     pre   pre   dur g expressed
form 
hf  v   op  ci  op                c  
v vector metric fluents planning problem  f  v  function applied
vector numeric fluents c arbitrary constant  numeric effects used eff   eff
expressed as 
hv  op  f  v i  op                  
restricted form numeric expressions set expressions linear normal form  lnf  
expressions f  v  weighted sum variables plus constant  expressible
form w v   c  vector constants  w  notable consequence permitting dur take
form set lnf constraints  duration  duration need evaluate single
fixed value  instance  may constrain value  duration lie within range values 
e g    duration v      duration v     numeric variables v  v    restricting
conditions effects use lnfs allows metric expressions captured linear
program model  fact exploit colin 
class temporal metric problems extended temporal metric continuous problems
two additions 
   action described additional component  set linear continuous
numeric effects  cont  form hv  ki  k    denoting increases v rate k
per unit time  corresponds pddl     effect  increase  v      t k   
   start end effects actions  eff n  eff na may  additionally  include parameter
 duration  denoting duration action  hence written 
hv  op  w v   k   duration    ci s t  op              c  k  
temporal metric continuous problems relationship time numbers complex temporal metric problems  first extension allows value variable v depend
length time elapsed since continuous effect acting upon began  second extension implies that   duration fixed  value variables depend duration
assigned action  fact   planners allow literal  duration appear effects 
even actions value parameter constrained take single fixed value
duration constraint  e g      duration       typical idiom name intended value
duration metric fluent initial state  e g      durationofaction       use
fluent effects 
 

fic olin   p lanning c ontinuous c hange

  durative action savehard
 parameters   
 duration     duration    
 condition
 and  at start  cansave  
 over      money      
 effect
 and  at start  not  cansave   
 at end  cansave  
 at start  saving  
 at end  not  saving   
 increase  money      t      

  durative action lifeaudit
 parameters   
 duration     duration  patience  
 condition
 and  at start  saving  
 at end  boughthouse  
 at end      money      
 effect  and  at end  happy     

  durative action takemortgage
 parameters   m   mortgage 
 duration     duration  durationfor  m  
 condition
 and  at start  saving  
 at start      money   depositfor  m   
 over      money   maxsavings  m    
 effect
 and  at start  decrease  money   depositfor  m   
 decrease  money      t  interestratefor  m   
 at end  boughthouse    

figure    actions borrower domain 

temporal metric continuous problems form significant subset problems expressible
pddl   language  fox   long         including linear continuous change within durative
actions  problems include non linear continuous change  explicitly represent
events processes  although use certain modelling tricks capture similar behaviours 
    example problem
running example temporal metric continuous domain use problem shown figure    this  borrower domain  borrower use mortgage buy house  domain
simplified order focus attention key aspects continuous reasoning proposed realistic application  furthermore  domain exploit variable duration actions 
even though ability handle key feature colin  example illustrates required
concurrency  means interesting interactions multiple actions affecting single continuous variable  allows us demonstrate differences alternative heuristics described
section    management required concurrency key feature colin  domains
variable durations discussed later paper 
domain  obtain mortgage necessary appropriate active savings plan
able lay deposit  conditions achieved saving hard  action
cannot applied parallel itself  preventing borrower building capital
arbitrarily high rate multiple parallel applications savehard  sake example
restrict saving periods durations    years produce interesting interactions
 

fic oles   c oles   f ox   l ong

  objects shortmortgage longmortgage   mortgage 
  init     money    
 cansave 
    patience    
    depositfor shortmortgage    
    durationfor shortmortgage     
    interestratefor shortmortgage      
    maxsavings shortmortgage    
    depositfor longmortgage    
    durationfor longmortgage     
    interestratefor longmortgage       
    maxsavings longmortgage     
  goal  and  happy   
  metric minimize  total time  

figure    example problem borrower domain 

durations mortgages sample problem  person starts saving tied
   year savings plan 
constraint able start mortgage leads required concurrency saving
taking mortgage  effects saving repaying interest therefore combine yield
different linear effects value money variable  saving action requires
variable remain non negative throughout duration savehard action  furthermore 
order qualify tax relief  mortgage carries maximum allowed level savings throughout
mortgage  which prevents mortgage taken late savings plan   finally 
lifeaudit action places constraint gap end saving action
point mortgage completed  and ensures borrower end
debt   action acknowledges borrowers happy manage complete
mortgages within short periods  limited patience  save hard 
simple problem instance consider shown figure    two possible solutions
shown figure    first solution borrower takes longer mortgage 
advantage start earlier requires lower deposit  money rises rate  
first part saving action  decreases   mortgage starts  rises rate
      the difference saving mortgage rates  saving action concludes 
continues decrease rate      mortgage ends  life audit action must start
saving action cannot end end mortgage action  second solution
borrower takes shorter mortgage  cannot start early requires much larger
deposit  consequence  life audit cannot start first saving action  mortgage
finishes late included inside life audit beginning within first saving action  meet
initial condition life audit  borrower must therefore perform second saving action
follow first  clearly first solution preferable since interested minimising
makespan 
 

fic olin   p lanning c ontinuous c hange

money

   units
  unit
takemortgage longmortgage
   units
savehard
lifeaudit
  units

money

   units
takemortgage shortmortgage
  units
   units

   units

savehard

savehard
lifeaudit
  units

figure    possible solutions borrower problem 

   background metric temporal planning
recent work discrete numeric planning built ideas introduced planner metricff  hoffmann         discrete numeric planning problem introduces numeric variables
planning domain hold real numeric value  or undefined  yet
given value   actions conditions expressed terms variables  effects
act upon them  provide heuristic guidance  metric ff introduced extension relaxed
planning graph  rpg  heuristic  hoffmann   nebel         metric rpg heuristic  supporting
computation relaxed plan problems involving discrete numeric change 
propositional rpg heuristic  performs forwards reachability analysis delete effects
actions relaxed  ignored   numeric effects  ignoring decrease effects always
relax problem  conditions require variable hold value less given constant 
thus  reachability analysis extends forwards  upper  lower  bounds values
numeric variables computed  decrease effects effect upon upper bound increase
effects effect upon lower bound  assignment effects replace value upper
 lower  bound incumbent lower  greater  value  respectively  would
assigned  deciding whether precondition satisfied given layer performed  optimistically 
 

fic oles   c oles   f ox   l ong

basis these  condition w v c    optimistically high value w v
computed using upper bound fluent v assigned value v corresponding
weight w positive  or  otherwise  using lower bound 
alternative use metric rpg proposed lprpg  coles  fox  long et al  
    b   linear program constructed incrementally capture interactions
actions  approach restricted actions linear effects  general metric ff 
provides accurate heuristic guidance handling metric problems perform
significantly better problems metric resources must exchanged one another order
complete solution 
numeric planning gives opportunity define metric optimisation functions terms
metric variables within problem description  example  objective minimise fuel consumption defined domains quantity fuel available metric variable 
optimisation function include special variable total time  representing makespan
 execution duration  plan  planners restricted weighted sum across variables
 although pddl     syntax allows unrestricted expression across variables   general 
planners yet capable optimising metric functions effectively  task finding plan
remains difficult  however  planners attempt optimise functions 
notable lpg  gerevini   serina         and  domains numeric effects
count action cost  lama  due richter   westphal        
although introduction pddl     led increased interest temporal planning  earlier
work planning time influential  ixtet  ghallab   laruelle        introduced
chronicles  consisting temporal assertions constraints set state variables  timelines chronicles single state variables  timelines since widely used
planners followed different trajectory development led pddl family languages  pell  gat  keesing  muscettola    smith        frank   jonsson        cesta 
cortellessa  fratini    oddi         ixtet pioneered use many important techniques 
including simple temporal networks linear constraints 
language introduced planner temporal graph plan  tgp   smith   weld       
allowed  constant  durations attached actions  semantics actions required
preconditions  pre  true entire duration action  effects actions 
eff  become available instantaneously ends  values affected variables treated
undefined inaccessible execution  although intended semantics  at least tgp 
values considered unobservable intervals and  therefore  plans
conformant respect possible values variables intervals  gp
solves problems using temporally extended version graphplan planning graph  blum
  furst        reason temporal constraints  temporal heuristic effective form
temporal planning developed haslum geffner        vidal geffner       
explored constraint propagation approach handling problems 
even using expressive temporal model defined pddl      many temporal planners make use restricted tgp semantics  exploiting simplification pddl     encoding
known action compression  compression performed setting pre weakest
preconditions actions  eff    eff   strongest add  delete  effects  propo   conditions w v c rewritten form negating sides  further  stating w v   c
rewritten pair conditions  w v c  w v  c

  

fic olin   p lanning c ontinuous c hange

action
q  p

p



p
action b
r
p

r

q s

action c

action


t  g

ordering achiever precondition
ordering deleter precondition

figure    problem sapa 
sitional case  terms action representation introduced earlier  are 
pre   pre     pre pre     eff  
  

 
eff      eff  
    eff   eff
 

 
eff     eff
    eff     eff     eff

many modern temporal planners  mips   xxl  edelkamp   jabbar        earlier versions lpg  gerevini   serina         make use action compression technique  however 
applying compression lead incompleteness  coles  fox  halsey  long    smith       
 in particular  failure solve certain temporal problems   issues surrounding incompleteness
first discussed reference planner crikey  fox  long    halsey        and  later 
problem structures causing said introduce required concurrency  cushing  kambhampati  mausam    weld         borrower domain one example problem
compression prevents solution  lifeaudit takemortgage actions initial
preconditions satisfied inside interval savehard action  since action
adds saving start  deletes end 
required concurrency critical ingredient planning continuous effects 
change occurs change occurs important throughout execution actions  order avoid producing poor quality plans or  indeed  excluding possible solutions  must allow
concurrency actions wherever problem description permits it  nave extension
compression approach would discretise continuous numeric change step function effects
occurring ends relevant actions  precluding possibility managing interaction
numeric variables execution actions continuous effects  therefore build
approach planner capable reasoning required concurrency  borrower domain  mortgage action must overlap saving action  cannot early  to meet
deposit requirement  late  to meet maximum savings constraint ensure
life audit performed early possible   example illustrates  problems include
reasoning continuous linear change typically require concurrency 
several planners are  currently  capable reasoning pddl     startend semantics 
opposed relying compression approach  earliest pddl     planner reasons successfully semantics vhpop  younes   simmons         partial order planner 
  

fic oles   c oles   f ox   l ong

planner depends heuristic guidance based relaxed planning graph used
ff  guidance fail problems required concurrency  nevertheless  search space
explored vhpop includes interleavings action start end points allow solution
problems required concurrency  v hpop suffers problems encountered
earlier partial order planners performance scales poorly many domains  psys  garrido 
fox    long        garrido  onainda    barber        graphplan inspired planner
produce plans domains required concurrency  time represented successive layers
graph  using uniform time increment successive layers  approach similar way
tgp uses plan graph represent temporal structure  tpsys supports model actions
separates start end effects actions dictated pddl     semantics 
another planner adopts graphplan based approach temporal planning lpgp  long
  fox      a   case time successive layers variable  instead using layers
graph represent passage fixed duration increments time  used represent
successive happenings time points state changes occur  time successive state changes allowed vary within constraints imposed action durations whose end
points fixed particular happenings  linear program constructed  incrementally  model
constraints solution program interleaved selection action choices 
approach suffers weaknesses graphplan planner  exhaustive iterative
deepening search impractical large problems  computation storage mutex relations becomes expensive larger problems  nevertheless  lpgp provides useful approach
treatment pddl     durative actions  splitting end points treated
instantaneous snap actions  solution  original  planning problem expressed
terms these  subject four conditions 
   start snap action paired end snap action  and end applied without
corresponding start applied earlier  
   start end action  invariants action pre respected 
   actions must currently executing state considered goal state 
   step plan occurs preceding step  time start end
action respect duration constraints 
apa  do   kambhampati        one earliest forward search planners solve temporal pddl     problems  works priority queue events  durative action started
end point queued time future executed  choice points
planner include starting new action  special wait action  advances time
next entry queue  corresponding action end point executed  allows sapa
reason concurrency solve problems required concurrency  unfortunately 
search space include necessary interleavings achieve complete search  example 
consider problem illustrated figure    solve problem  action must start  action
b must start early enough allow c complete ends  and deletes p   late enough
action start b ends end ends  actions required order
allow applied  achieving goal g  sapa starts action a  queue contain
end a  choices open start b immediately  end early
allow execute successfully  else complete a  advances time far allow b
  

fic olin   p lanning c ontinuous c hange

light match
light
unused match

light
unused match

light

mend fuse
needs fixing fuse

light

needs fixing fuse

fixed fuse

figure    required concurrency

exploit effect p a  preventing c executed  fact  simpler problem defeats sapa 
b end condition q instead end effect g c dispensed
with  however  additional complexity existing example impossible infer
start b examination b alone  timing constraints start b
depends actions c immediately obvious temporal constraints
affect placement b  difficulty adopting waiting approach hard
anticipate long wait next interesting time point depends interaction actions
yet even selected 
different approach forward search temporal planning explored crikey family
planners  coles  fox  halsey et al         coles  fox  long et al       a   planners use
action splitting approach used lpgp  work heuristically guided forward search 
heuristics planners use relaxed planning graph starting point  hoffmann   nebel 
       extend adding guidance temporal structure plan  pruning
choices easily demonstrated violate temporal constraints inferring choices
temporal constraints imply them  planners use simple temporal network model solve
temporal constraints action end points accumulated successive
action choices  split actions used extend lpg temporal version respects
semantics pddl      gerevini  saetti    serina         earlier versions lpg use compressed action models described above   recent work haslum        explored ways
heuristics temporal planning constructed  remaining admissible 
temporal fast downward  eyerich et al          based helmerts fast downward planner  helmert         uses approach slight refinement compressed action model 
allowing required concurrency managed  authors demonstrate planner
solve match problem shown figure    mistakenly claim sapa cannot solve
problem cannot consider applying action starting ending lighting
match  fact  sapa apply mend fuse action match lit  much
way done temporal fast downward  problem planners face situations
action must started time last happening  next queued
event  neither planner includes choice search space 
huang et al         developed temporal planner exploiting planning as satisfiability
paradigm  uses graphplan to sat encoding  starting lpgp action splitting compilation  using fixed time increment successive layers graph  approach
  

fic oles   c oles   f ox   l ong

adequate problems appropriate time increment identified  possible  general  time dependent effects domain  furthermore  approach
ineffective significant difference durations actions  time increment becomes short relative actions  planner produce optimal  makespan 
plans using iterative deepening search  planner combines existing ideas achieve objectives
mainly interest relationship sat based approaches temporal
planning  tm   lpsat discussed below 
c rikey    planners mentioned  capable solving simple temporal
planning problems described above  restricted management discrete change 
duration dependent change cannot handled planners  fact  planners
manage kind reasoning numbers outside durations actions  colin therefore
significantly extends competence pddl compliant temporal planners 

   c rikey   forward chaining temporal planner
temporal forward chaining planners two kinds choices make construction
plans  firstly  non temporal case  choice must made actions apply  these
choices considered planning element problem   secondly  choices must
made apply actions  these seen scheduling choices construction solutions   crikey    coles  fox  long et al       a   temporal forward chaining planner 
exploits distinction choices  using separate procedures make planning decisions  which actions start end  scheduling decisions  when place actions
timeline   decisions must checked consistency respect existing
temporal constraints confirm actions completely scheduled  section 
briefly describe crikey   performs planning scheduling  since architecture forms
basis colin work subsequently described paper  full details temporal
management crikey   provided coles et al 
crikey   uses forward chaining heuristic state space search drive planning decisions 
makes use enforced hill climbing  ehc  algorithm introduced  hoffmann   nebel 
      repeated  convenience  algorithm    ehc incomplete  solution cannot
found crikey   plans again  using weighted a  search  discuss search described within basic enforced hill climbing algorithm extended perform temporal
planning  order this  number modifications required  particular 
   get applicable actions s   planner must reason two actions per durative action 
start action end action  rather applying action immediately considering
finished  as non temporal case  
   get applicable actions s   apply a  s   invariant conditions durative actions must
maintained throughout execution  requires active invariants recorded
state order prevent application actions conflict them 
   goal state s   state goal state  i e  path solution plan 
actions must completed 
  

fic olin   p lanning c ontinuous c hange

algorithm    enforced hill climbing algorithm
data  p   ha  i  gi   planning problem
result  p   solution plan
  best heuristic evaluate heuristic i  
  best heuristic    
 
return    
  closed  i  
  open list  hi    i  
  open list      
 
hs  p element removed front open list 
 
applic s  get applicable actions s  
apply helpful filter  applic s   
 
  
foreach applic s 
  
  apply a  s  
  
    closed
  
add   closed  
  
p   p followed a 
valid plan p    
  
  
goal state s    
  
return p    
  
  
  
  
  
  
  
  

  

h evaluate heuristic s     
h   best heuristic
open list  hs     p   i  
best heuristic h 
break 
else
h  
append hs     p   onto open list 

return f ailure 

   valid plan p    temporal  scheduling  constraints candidate plans must respected 
particular  duration constraints durative actions must satisfied  discussed
section     
consider modifications turn  first  durative actions compiled
two non temporal actions  modified version lpgp action compilation  long   fox 
    a  used this  described coles et al          durative action a  form
hdur   pre     eff     pre   pre   eff i  split two non temporal  in fact  instantaneous  snap
actions form hpre  eff i 
a    hpre     eff  
aa   hpre   eff
  

fic oles   c oles   f ox   l ong

performing search snap actions  taking appropriate care ensure
constraints satisfied  restrictions expressivity imposed use action compression avoided  becomes possible search plan start end points
different actions coordinated  solving problems required concurrency  price
search space much larger  original action replaced two snap actions 
length solution plans doubled  circumstances blow up avoided
identifying actions compression safe  coles  coles  fox    long      a   i e 
use action compression compromise soundness completeness 
approach described coles et al   actions still split start end snap actions 
end points compression safe actions inserted either effects needed
invariants would otherwise violated another action chosen application  consequence 
one search decision point needed per compression safe action  choose apply start  
rather two  recent versions crikey   colin make use restricted action
compression technique search 
split actions start end points  modifications basic search algorithm
needed handle constraints arise consequence  crikey   makes use extended
state representation  adding two elements state tuple  resulting state defined
  hf  p  e  i  where 
f represents facts hold current world state  set propositions
currently true  w   vector  v  recording values numeric variables 
p ordered list snap actions  representing plan reach initial state 
e ordered list start events  recording actions started yet finished 
collection temporal constraints actions plan reach f  
purpose start event list e record information currently executing
actions  assist formation sound plans  entry e e tuple hop    dmin  dmax
where 
op identifier action  start snap action op  added plan 
index snap action added plan reach s 
dmin  dmax minimum maximum duration op  determined state
op started 
minimum maximum duration action depend state applied
 e g  duration recharge action may depend level charge time execution  
durations must computed based state preceding step i  however  given action
started  bounds duration remain fixed  pddl     allows actions durations
constrained conditions hold end action  actions supported
planners 
extended state definition leads corresponding extensions get applicable actions s  
before  snap action deemed logically applicable state preconditions pre
satisfied s  however  additional condition must satisfied  effects must violate
  

fic olin   p lanning c ontinuous c hange

active invariants  invariants active given state determined e denote
invariants state event list e as 
inv s    e op pre
ee

apply end snap action  aa   required entry e e whose operator entry
op equal a  prevents planner attempting apply ends actions
yet started 
assuming action  a  found applicable chosen step plan  function
apply a  s   applied temporally extended state  s  yields successor     hf     p     e       i 
first two elements updated non temporal case  f     apply a  f    p     p   a  
obtain     begin setting       furthermore      
        t i  t i    
t i  variable representing time step scheduled executed 
is  new step must come least  a small unit time  preceding step  separation
respects requirement interfering actions must separated least  fox   long        
strictly stronger required actions actually mutually exclusive 
accurate realisation pddl     semantics could implemented  would incur cost
offering little apparent benefit  finally  resulting value e    and whether   changed
further  depends whether start end snap action 
start action a  applied  e     e    ha  i  dmin  dmax i   dmin dmax correspond lower  upper bounds duration a  evaluated context
valuation f  
end action aa applied  start entry  e e   e op   a  chosen  e  
assigned value e     e   e  often case one instance
action open  one choice pairing  case multiple instances
action executing concurrently  search branches choice
e  e chosen  final modification made   encode duration constraints
action finished 
       e dmin t i  t e i  e dmax  
information encoded state currently executing actions  extension
needed goal state s  minor  state goal state satisfies non temporal version
goal state s   event list state  e  empty 
search strategy leads natural way handle pddl     timed initial literals  tils 
directly  dummy til actions introduced  comprising effects tils time
point  added plan earlier til actions already added 
delete invariants open action  special case  til actions create
entry e  facts f amended execution  do  however  produce
updated set temporal constraints  snap actions  til added step plan 
til must fall earlier preceding step  then         ts t i  t   ts  
  

fic oles   c oles   f ox   l ong

ts time stamp til prescribed happen  name denoting
start plan t        seen  constraints ensure til occur
appropriate time  step prior til must occur it  step
til must occur it 
changes described subsection ensure plans produced crikey   logically sound  check logical applicability  coupled maintenance e throughout
search  ensures preconditions  either propositional numeric  broken  use
get applicable actions s  guarantees actions logically applicable  guarantee adding snap action plan  judged applicable way  violate
temporal constraints  example  possible preconditions satisfied plan
p    a    b    ba   aa    p logically sound  however  duration b greater
duration p temporally sound  next section discuss function
valid plan p   modified identify reject temporally inconsistent plans 
    temporal plan consistency
state temporally consistent steps      n    plan  p   reaches
assigned values  t      t n      representing times execution corresponding
steps  respecting temporal constraints    checked use valid plan p     
called line    algorithm   function call trivial non temporal case 
temporal case serves check temporal consistency plan  state temporal
constraints cannot satisfied immediately pruned search  since extension action
sequence lead solution plan valid 
temporal constraints built crikey   state expressed form 
lb t b  t a  ub

lb  ub     lb ub

constraints conveniently expressible simple temporal problem  stp   dechter 
meiri    pearl         variables within stp consist timestamps actions 
inequality constraints specified form  crucially  purposes 
validity stp  and assignment timestamps events therein  determined
polynomial time solving shortest path problem within simple temporal network  stn  
directed graph representation stp  event stp represented vertex
stn  additional node t   represent time   time first action
plan  t     constrained fall within t    constraint form adds two edges
graph  one b weight ub  one b weight lb  attempting
solve shortest path problem t   event yields one two outcomes  either
terminates successfully  providing time stamp step  terminates unsuccessfully due
presence negative cost cycle within stn indicating temporal inconsistency  any
schedule would require least one step scheduled itself  
crikey    stp used check temporal consistency choices made reach
step s  based temporal constraints must hold plan p reach s 
additional constraints determined e  list actions started  yet
finished  variables vars stp partitioned two sets  variables  t i 
step p f variables  one f  i  entry hop  i  dmin  dmax e  variables
correspond times steps already added plan  might times
  

fic olin   p lanning c ontinuous c hange

start end points actions  time points might correspond starts actions
yet finished subset actions  only  associated f variables
associated pending end times actions  consistency terminology
introduced crikey    coles  fox  long et al       a   use refer time
next event plan occur  which could execution last actions applied  
time point next choice made  either start new action
completion existing one  therefore seen time associated final state 
s  generated current plan head  ever one timepoint called value
moves forward plan head extends  constraints follows 
  constraining variables ensure temporal consistency steps
plan reach  and include constraints introduced timed initial literals  
 dmin f  i  t i  dmax   hop  i  dmin  dmax e  is  future
action end point committed  but yet applied   recorded duration
constraint must respected 
  f  i  t n      hop  i  dmin  dmax e  is  future action end point
must come last step current plan  ensure future 
t now   t n    is  current time  the time next event
plan occur  least last event plan 
solving stp confirms temporal consistency decisions made far  stp
cannot solved  state pruned  plan induced startend action representation temporally invalid  last two categories constraints particularly important 
without them  pruning could undertaken basis plan p reach s  including
them  however  allows stp identify cases end point action never added
plan  would lead temporal inconsistency  goal states cannot contain
executing actions  i e  e must empty   allows crikey   prune states earlier
definitely path state end points added plan 
timed initial literals easily managed stp using dummy til actions described
earlier  constraints dummy til action already applied included  
dummy til action yet occur automatically treated end action yet
applied  thus  f variable added each  so  last step plan far
constrained come til event yet happen 

   planning continuous numeric change
challenging variants temporal numeric problems combine two arrive problems time dependent metric fluents  although problems exhibiting hybrid discrete continuous
dynamics studied research communities time  example  verification  yi  larsen    pettersson        henzinger  ho    wong toi        henzinger        
timed automata capture exactly kind behaviour  relatively little work
continuous dynamics planning community 
pddl     model mixed discrete continuous change extends propositional state transition model include continuous change state variables  state transition system
  

fic oles   c oles   f ox   l ong

discrete changes transition instantaneously states  system particular state  continuous change occur state variables time passes  soon discrete
change occurs system changes state  pddl    fox   long        extended allow
exogenous events processes  controlled nature  well durative actions  leads
formal semantics based theory hybrid automata  henzinger         action
causes discrete state change might trigger continuous process  continues time
event triggered leading new state  time later another action might taken 
early work exploring planning continuous processes includes zeno system penberthy weld         processes described using differential equations  zeno suffers
limitations partial order planners time  unable solve large
planning problems without significant aid carefully crafted heuristic function  importantly  fundamental constraint behaviour allow concurrent actions apply
continuous effects variable  imposes significant restriction kinds
problems solved  making zeno much less expressive colin  constraint
follows  part  way model requires effects specified differential equations  rather continuous update effects  simultaneous equations must consistent
one another rather accumulating additive effects  authors say must specify
entire continuous behaviour interval  of durative action  semantics insist
continuous behaviours result direct  explicit action 
another early planner handle continuous processes mcdermotts ptop system  mcdermott         heuristic search planner  using regression based heuristic  plausible
progression technique used within ptop guide search sufficiently powerful recognise
interactions could prevent future application actions  thereby restricting scalability
problems form consider here  ptop competed international planning competition       solved small subset problems  although  interestingly 
solved involved expressive combination adl temporal windows planner
could manage   ptop interesting variant heuristic forward search approach  since
avoids grounding representation  using approach similar means ends linear planning approach generate relaxed plan estimates number actions required achieve
goal given state 
    tm lpsat
recently  shin davis developed tm   lpsat  shin   davis         based earlier
lpsat system  wolfman   weld           lpsat first planner implement pddl  
semantics  implemented compilation scheme horizon bounded continuous
planning problem compiled collection sat formulas enforce pddl   semantics 
together associated set linear metric constraints numeric variables  compiled
formulation passed sat based arithmetic constraint solver  lpsat  l psat consists
dpll solver lp solver  sat solver passes triggered constraints lp solver 
hands back conflict sets form nogoods constraints cannot resolved 
solution horizon increased process repeats  otherwise solution decoded
plan  order support concurrency compilation exploits lpgp separation action
start end points  different versions tm   lpsat exploiting different solvers  lpsat
mathsat     audemard  bertoli  cimatti  kornilowicz    sebastiani       
  

fic olin   p lanning c ontinuous c hange

exploited  novelty tm   lpsat lies compilation decoding phases  since solvers
well established systems 
compilation scheme tm   lpsat implements full pddl   semantics  although
includes events processes  specific pddl    tm   lpsat handle variable duration durative actions  durative actions continuous effects duration dependent end effects 
continuous effects concurrent actions quantity two time points summed
actions active quantity period  therefore  tm   lpsat supports concurrent
updates continuous variables 
  lpsat interesting approach  theory capable solving large class problems
varied continuous dynamics  however  reported empirical data suggests planner
slow unable solve problems requiring plans steps  possible
experiment publicly available implementation system 
    kongming
hui li brian williams explored planning hybrid systems  li   williams              
work focussed model based control  using techniques based constraint reasoning 
continuous dynamics system modelled flow tubes capture envelopes
continuous behaviours  leaute   williams         dimensions tubes function
time  typically expanding allowed extend   requirement made
successive continuous behaviours must connected connecting start one tube  the precondition surface  cross section preceding tube  i e  intersection two spaces must
non empty  relevant work area development planner kongming 
described li williams 
kongming solves class control planning problems continuous dynamics  based
construction fact action layers flow tubes  within iterative plan graph structure
introduced graphplan  blum   furst         graph developed  every action produces
flow tube contains valid trajectories develop time  starting feasible
region  actions whose preconditions intersect feasible region applied reachable states time point computed using state equations system  initial
state system variables single known values  valid trajectory must pass
sequence flow tubes  must meet constraints specified dynamics actions
selected  mutex relation used graphplan extended continuous dynamics well
propositional fragment language  graph iteratively extended graphplan 
search plan conducted successive extension 
plan graph encoding problem continuous dynamics translated mixed
logical quadratic program  mlqp   metric objective functions used planner optimise behaviour defined terms quadratic functions state variables  example
problem considered li williams          d representation simple autonomous underwater vehicle  auv  problem auv glide  ascend descend avoiding
obstacles  language used version pddl     extended enable dynamics encoded 
continuous nature problem lies fact that  continuous action  auv
one continuous range positions determined control system  kongming
depends translation planning problems mlqps constraints describing dynamics problem must linear  since effects continuous actions involve product rate
  

fic oles   c oles   f ox   l ong

change time  one values treated variable  kongming
rate change variable  time discretised  contrasts colin rates
change remain constant continuously variable length intervals  discretisation time
kongming exploited support state updates within plan graph  successive layers graph
separated constant uniform time increment  approach suffers disadvantage
duration plan limited number happenings plan  since solver cannot
realistically solve problems tens layers plan graph 
kongming support concurrent continuous updates state variable  so 
respect  pddl     expressive extended language used kongming  part
due difficulty resolving precisely semantics dynamics described
actions used kongming  dynamic constraint specifies limits rate change
specific variable  unclear whether concurrent actions combined taking union
intersection bounds constraint specifies rate change given fluent 

    upmurphi
one recently developed planner uses pddl     reasons continuous processes
upmurphi  penna  intrigila  magazzeni    mercorio         upmurphi takes completely different approach considered far  instead reasoning continuous change directly 
upmurphi works guessing discretisation iteratively refining solution discretised problem validate original problem specification  iterative driver
coarseness discretisation  well planning horizon  making interestingly different
basic architecture tm   lpsat 
upmurphi begins continuous representation problem starts discretising it 
first actions discretised taking specific values feasible ranges  results
several versions action  upmurphi explores state space  explicitly constructing
current discretisation  plans constructed using planning as model checking
paradigm  cimatti  giunchiglia  giunchiglia    traverso         heuristic guide
search  plan found validated original continuous model  using
plan validator  fox  howey    long         invalid  discretisation refined
search resumes  upmurphi fails find plan one discretisation starts finer grained
discretisation  subsequent refinements lead ever denser feasible regions  increasingly
complex construct 
upmurphi used build partial policies handle uncertainty likely arise
practice execution hybrid control plans  controller table initially synthesised 
consisting  state action  pairs plan first constructs  however  table might lack
states could visited controller  robust  subsequent step
robustify controller randomly perturbing states finding new paths
new states  perturbed states reachable  probability distribution
used identify likely ones  called safe states  controller table
extended safe  state  action  pairs  controller table  policy  referred
universal plan 
  

fic olin   p lanning c ontinuous c hange

    approaches continuous reasoning
completely different way manage continuous quantities model continuous resource consumption production terms uncertainty amount consumed produced 
approach taken hao  algorithm  meuleau  benazera  brafman  hansen    mausam 
      markov decision process  mdp  constructed consisting hybrid states 
state contains set propositional variables collection distributions resource
consumption production values  states hybrid  standard value iteration approaches cannot used find policies  hybrid ao  approach described used
find best feasible policy  feasible region constructed hao  continuous distribution
resource values resource considered uncontrollable  unlike kongming 
assumed executive maintains control values region eventually
chosen  
planning continuous processes important applications and  many application areas planning  led development systems combine generic planning
technology carefully tuned domain specific performance achieve necessary combination problem coverage performance  good example work boddy
johnson        colleagues  lamba et al         planning oil refinery operations  work
uses quadratic program solver  coupled heuristically guided assignment discrete decision
variables  corresponding actions   solve real problems 

   colin  forward chaining planning continuous linear change
section describe crikey   extended reason duration dependent
continuous numeric change  building planner colin   continuous linear dynamics  
decided give planner specific name highlight capabilities  demonstrated section      key difference introduced continuous numeric change logical numeric
constraints longer neatly separated temporal constraints  values numeric
variables state depend timestamps durations actions  vice versa  relative
benefits handling temporal numeric constraints together  rather separating out 
apparent motivating domains outlined section   amply rehearsed
paper describing pddl    fox   long        
need cope integrated numeric temporal constraints raises number important
issues planning domains  first  checking whether action choice consistent
longer achieved using stp  numeric constraints interact temporal
constraints  stp sufficiently expressive capture this  second  changing values
numeric variables time brings new challenges determining action applicability 
precondition satisfied immediately following application action  might become
satisfied allowing certain amount time elapse  finally  need provide
heuristic guidance  cover first two issues section  defer discussion
heuristic guidance next 
    temporal numeric plan consistency linear programming
begin problem temporal numeric plan consistency  techniques used dealing
issue amended use solving issues encountered determining
  

fic oles   c oles   f ox   l ong

action applicability  considering definition stp given section      make observation stp could equally well written linear program  lp   crikey   
stp efficiently solved using shortest path algorithm  however  observation becomes
important wish reason continuous change numeric resources alongside temporal constraints  case  use lp capture temporal constraints numeric
constraints  including interaction two  describe lp built 
serving replacement valid plan s  function called search  invokes
stp solver crikey    diagram structure lp create shown figure   
plan p    a         an    an    reach state s  an  action recently added
plan   for simplicity  shows case event queue e empty  
construction lp begins variables  a subset of  constraints
stp  stp variable ti  the time stamp  snap  action ai   corresponding lp variable
stepi  shown across top figure     stp variable ei  for future end action
step i  corresponding lp variable estep   construct constraints corresponding
total ordering action steps  stp  step p still sequenced  i e 
stepi stepi  n         future end snap action later stepn 
 i e  estepi stepn  estep variables  
extend lp numeric constraints problem  beginning effects
actions  since numeric effects discrete continuous  create two additional
vectors variables per step plan  first these  vi   represents values state
variables v immediately prior ai executed  in case step    vi equal values
v initial state  i   second  vi    contains values v immediately ai executed 
figure    variables v  enumerated v     vm  and  similarly  v    shown
 
v      vm 
  avoid proliferation indices index values
time stamp figure    vi ith value v time step corresponding layer
variable appears  use two vectors layer required order represent
discrete changes caused actions  snap action cause value variable different
immediately execution  represent within lp  action step effect
variable v vi    vi     otherwise  discrete effect hv     w v   k   duration    ci 
constraint introduced define value vi    
vi    vi   w v   k  ce i  cs i     c
functions cs i  ce i  denote time stamp variables corresponding start
end action step i  step end action  ce i    step   cs i 
step variable start action finished step i  similarly  step initiates action 
cs i    step   ce i  either estep action yet finished or  otherwise 
step variable end action started step i  therefore  substituting ce i  cs i 
 duration captures relationship effect action duration 
   note identities implemented efficiently simply introducing unnecessary additional
variable  similarly  variable subject effects conditions added lp 
introduced becomes relevant 
   effects using operator     i e  decrease effects  first term right hand side negated 
assignment effects  operator    first term right hand side  i e  vi   omitted entirely  the value
v assignment depend value v beforehand  

  

fic olin   p lanning c ontinuous c hange

metric fluents v   v m 
snapactions   n  corresponding timepoint variables

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v 

v

v

v

v

v

v

a 

v 

v 

v 
step  

v 

v m 

v m 

state  

state  

v
n 

step n 

 

v 
   

v m 

 

   

v m 

 

a 

   

v m 

 

   


v m 

step  

 

   

   

step  

a 

v 

   

   
state  

 

v 

v 

v m 

 

v m 
state n

   

 

   

v

active continuous change affecting  some  variables
actions cause instantaneous step changes fluent values
temporal constraints
actions sequenced separated 
step i   stepi   
action starts durative action  a  ended action j 
dmin a     step j step    dmax a 
metric variable constraints  step effects

metric variable constraints  continuous effects

variables updated action effects 

variables updated active continuous effects 
v j   vj   vj  stepi   stepi  

v j state i   v j state updated effect
including timedependent stepeffects

values state i    v j determined
accumulated effects active continuous effects

figure    diagrammatic representation lp used colin  note subscripts attached
v v   fluents diagram indices vector fluents state 
indices step represent different time steps plan  metric fluents
notionally indexed time step  shown diagram order
avoid clutter 

continuous numeric change occurs steps plan  rather instant
execution step itself  capture continuous effects  building lp consider
step turn  start plan  recording gradient total  linear  continuous
change acting upon variable v v  v denotes gradient active ai 
execution action ai   restrictions language handled colin  described
section    total order constraints snap actions  value variable vi
known constant within interval successive actions  continuous change
linear  gradient variable v changed either starting action  initiating
  

fic oles   c oles   f ox   l ong

adjustment prevailing continuous effect v given dv
dt    k  k    ending
action  terminating effect initiated start   values constants computed
follows   
variables  v       is  continuous numeric change active
variable start plan 
ai continuous numeric effect v vi     vi  
ai initiates continuous numeric effect 

dv
dt

ai terminates continuous numeric effect 

   k  vi     vi   k 
dv
dt

   k  vi     vi k 

basis values  add constraints lp 
vi     vi    vi    step i   step  
again  distinction vi vi  important  vi determined basis continuous
change interval steps    immediately prior discrete effect
may occur step 
created variables represent values fluents step introduced
constraints capture effects actions them  consider constraints arise
preconditions snap action  invariants must respected starts
ends actions  constraints durations actions plan 
numeric precondition form hv           w v   ci  must hold order apply step i 
add constraint lp 
vi        w vi   c
action starting stepi ending stepj   invariants added lp
 
form  vectors variables  vi    vj 
   vi     vj    vi v  j excluded
pddl     semantics require invariants action hold end points  
case end action  starting i  yet appeared plan  invariants
imposed vectors variables vi  onwards  must end future  invariants
must violated step current plan point started 
finally  add duration constraints  action starting stepi   denote variable
corresponding time finishes ce i   ce i    step j end action
inserted plan step j  ce i    estep otherwise  as defined above   then 
duration constraint a  form h duration           w v   ci  add constraint 
ce i  step        w vi   c
process constructs lp captures numeric temporal constraints govern
plan  interactions them  stp crikey    solution lp
contains values variables  step      step n    i e  assignment time stamps actions
plan  prevent lp assigning variables arbitrarily large  but valid  values  set
   variables trivially shown constant  i e  action effect referring variable 
removed lp replaced throughout values initial state 

  

fic olin   p lanning c ontinuous c hange

plan action

delta value lp variable
m     

savehard start

lp constraints

step 

  

m 

  

m  
m     
takemortgage start
m   

 
 

  m 

 

step 

step   

step      

m 

  m        step  step   

 

m  

  m   

 

step 
m 

lifeaudit start
m   

 
 

savehard end

  step   
 

m  

 

 
    step 

step       step      

step   

m  

  m 

step 

step   

m 

  m          step  step   

m     

 

 

step   
 

m  



 
    step 

  step       step     

step   

m  
lifeaudit end

 

 

  m 

step 
m 

takemortgage end

 

  step       step      
step     

m  
m      

 

  m 

step 

step   

  step     

m 

  m      step  step   

 

m  

  m 

table    variables constraints borrower problem
lp objective function minimise step n   last step plan far 
purposes valid plan s  function  lp built plan p reach state cannot
solved  prune state search space need consider further 
path legal goal state  way  lp scheduler used replacement
stp order determine plan validity 
    example  lp borrower problem
order illustrate lp construction plan consider example borrower problem introduced section      recall one solution plan problem following structure 
  
  
  
  
  
  

savehard start
takemortgage start longmortgage
lifeaudit start
savehard end
takemortgage end longmortgage
lifeaudit end 

lp six step borrower solution plan contains variables constraints shown
table    six step variables represent time stamps six snap actions plan 
variable represents money saved borrower  initial state      
  

fic oles   c oles   f ox   l ong

hence m       starting savehard action instantaneous numeric effects  introducing
constraint m     m   if effect m  instance instantaneous increase
savings k  constraint would m     m    k   due invariant condition
savehard action  savings remain zero  constraint m     added  seen
constraint duplicated mi m i execution savehard action 
ensure invariant continues hold  notice  also  action takemortgage started 
invariant action  the savings level remains less equal maxsavings cap 
appears  applies values execution  additional constraints capture
discrete change connecting value m i mi   cases example values
equal  one constraint shows discrete effect  m     m    captures deduction
deposit caused initiating takemortgage action 
previously described  temporal constraints lp take two forms  first 
constraints form step i   step     forcing step i   follow step   enforcing sequencing snap actions  second  duration constraints restrict duration actions  e g 
step    step       forces step   the end point savehard  occurs precisely    units  the
duration savehard  step    start snap action 
final constraints consider modelling continuous numeric change  first
constraint type gives value m  execution savehard start
execution takemortgage start  constraint  m    m        step  step     based
value m       action currently executing continuous change
savehard  increases   per unit time  second constraint  m   
m          step  step     based value m                 found adding
active gradients actions started yet finished  illustrates
two actions active linear continuous effects variable simultaneously  note
savehard end applied  at step    gradient continuous change  m    becomes
   active continuous effect takemortgage action 
solving temporal constraints problem without considering metric fluents yields
solution step       step      step           step        step        
step            unfortunately  proposal violates constraint m      since 
m     m      m        step  step        m                 
   constraint start time takemortgage action cannot identified
dependent discrete initial effect action  active continuous effect
savehard action invariant savehard  simple example illustrates strength
using lp perform scheduling alongside resolution numeric constraints 
timestamps satisfy temporal numeric constraints 
    temporalnumeric search
performing state space search  state  s  snapshot world along plan trajectory  coming one action step another  absence continuous numeric change 
valuations define known precisely  propositions hold  values
numeric variables v  presence continuous numeric change  however 
hold  variable v undergoing continuous numeric change  or subject active durationdependent change  valuations state depend snap actions applied far 
  

fic olin   p lanning c ontinuous c hange

times snap actions applied much time passed since
last action applied  within representation state time stamps snap actions
plan fixed  during plan construction  lp used confirm plan
scheduled subject current constraints   valuation numeric fluents constrained
within ranges determined constraints temporal variables interactions
them 
consequence flexibility commitment values temporal continuously
changing variables  colin requires different state representation one used crikey   
rather representing values numeric variables single vector v  use two
vectors  vmax vmin   hold maximum minimum values  respectively 
numeric variable s  computation bounds variables achieved using small
extension lp described section      state s  reached plan p  where
last step p    add another vector variables lp  denoted vnow   another time stamp
variable  step   variables vnow represent values state variable point
 at time step   along state trajectory following   numeric variables time stamp
constrained additional action appended plan 
must follow previous step  i e  stepnow stepn
must precede coincide ends actions started yet
finished  i e  estep i   estep i  step
variable vnow vnow   compute value based continuous numeric
change 
vnow   vn    vnow  stepnow stepn  
finally  every invariant condition hv           w v   ci action started
yet finished 
vnow        w vnow   c
lp used find upper lower bounds variables  variables vnow vnow   two calls made lp solver  one objective set maximise vnow  
one minimise vnow   taken values vmax vmin s  simplest case  variable v subject  direct indirect  continuous duration dependent
change  value v time independent  vmax   vmin   value determined
successive application effects actions p   i e  mechanism used
crikey    indeed classical  non temporal  planning 
since upper lower bounds value variable  rather fixed assignment  action applicability function  get applicable actions s   must modified  crikey   
action said applicable state preconditions satisfied  colin  definition
means numeric precondition satisfied different  preserve completeness 
employ mechanism used metric relaxed planning graphs  discussed detail
section b  specifically  numeric precondition w x c  calculate optimistic value
w x using upper bound v x corresponding weight w positive  or  otherwise 
using lower bound  then  resulting value greater equal c  precondition
considered satisfied   as before  numeric conditions w x c  equivalent precondition appropriate form obtained multiplying sides inequality  
  

fic oles   c oles   f ox   l ong

plan action

delta value lp variable
m     

savehard start

lp constraints

step 

  

m 

  

m  
m     
takemortgage start
mnow  

 
 

  m 

 

step 

step   

step      

m 

  m        step  step   

 

m  

  m   

 

step   

stepnow



mnow

 

m now

m  

 

 
    stepnow

  mnow

step   

 

step       step      
 

 

 

 

table    variables constraints first stages borrower problem
constraints form w x   c replaced equivalent pair conditions w x c 
w x c  
test applicability action relaxed  serves filter  eliminating actions
certainly inapplicable  instance  precondition   b   could satisfied upper
bounds b    even assignment timestamps actions within lp attain
    conflicts needed attain b    rely subsequent lp consistency check
determine whether actions truly applicable  nonetheless  filtering applicable actions
basis variable bounds state useful tool reducing number candidates
must individually verified lp 
      e xample u se b orrower p roblem
briefly illustrate way variable constructed used context
borrower problem  consider situation selection first two actions  savehard start
takemortgage start   lp construction yields constraints shown table    solving
lp minimum maximum values stepnow gives values        respectively 
meaning earliest time third action applied     latest
     similarly  solving lp minimum maximum values mnow gives bounds

     information could  principle  constrain actions applied current
state 
    comments lp efficiency
lp solved every node search space  important process made
efficient possible  adding variable vectors lp step i  necessary
consider state variable  v  become unstable prior step i  one
following effects acting it 
   direct continuous numeric change  i e  changing v according gradient 
   practice  efficiency  colin actually solve lp minimum maximum values stepnow  
uses variable communicate constraints metric variables state 

  

fic olin   p lanning c ontinuous c hange

   direct duration dependent change  i e  change v dependent duration action
 whose duration non fixed  
   discrete change  magnitude change based one variables
falling either previous two categories 
variables meet one conditions omitted lp  values
calculated based successive effects actions applied step i  substituted
constant within lp constraints referring them  reduces number state variables
constraints must added lp reduces number times lp must
solved state find variable bounds  irrelevant variables eliminated
vector vnow   similar simplification that  applying plan a     an  reaches state
vmin   vmax   continuous numeric change acting v  v become stable  i e 
value independent times assigned preceding plan steps  case  first
step k v becomes unstable  value v determined simple application
discrete effects  hence v omitted vj   vj    n     j 
opportunity exploit lp solved state similar solved
parent state  represents plan  extra snap action appended end 
lower bounds time stamp variables lp therefore based values computed
parent states  suppose state expanded reach state   applying snap action  a 
step plan  point  lp corresponding plan built solved
objective minimise step   assuming plan indeed scheduled  if cannot 
  pruned successors generated it   value objective function
stored   lower bound time stamp a  states subsequently reached    
stored value used lp lower bound step appending actions plan
constrain hence increase value step   never remove constraints
order allow decrease 
well storing lower bounds time stamp variables  make use bounds
vmin  vmax state   generating successors it  state reached via plan
length i  applying action leads state   new action step i   inherits
constraints imposed previously step calculating variable bounds     therefore 
values vmax vmin serve upper lower bounds  respectively  vi   lp
built determine feasibility     similarly  combine discrete numeric effects
values vmax vmin give bounds v  i     variable v subject
effect  optimistically large  small  outcome effect computed basis vmax
    otherwise  variables upon
vmin   taken upper  lower  bound vi  
 
discrete effect  vi     vi  
finally  presence timed initial literals  tils  allows us impose stricter bounds
time stamp variables  step j plan dummy action corresponding til time t 
upper bound step     j  lower bound step k   j   k  or estep
variable      similarly  plan yet contain step corresponding til time
t  upper bound step variables   furthermore  til time corresponds
deadline deletes fact p present initial state  never added action 
never reinstated til  case 
plan step requires p precondition  step  
  

fic oles   c oles   f ox   l ong

estep end action end condition p  estep  
estep end action invariant condition p  estep t 

   heuristic computation
search algorithms described far paper make use heuristic guide planner
efficiently search space towards goal  introduced necessary machinery
support linear continuous numeric duration dependent effects turn attention
construction informed heuristic face time dependent change 
appendices b c revisit standard metric ff relaxed planning graph  rpg 
heuristic temporal rpg  trpg  used crikey    provide details approaches reference  depend initial construction reachability graph 
based plan graph introduced graphplan  blum   furst         graph consists alternating layers facts  f l  actions  al   trpg  convenience  index layers
earliest time could represent  although still enumerated consecutive integers
finitely many times relevant process construction  section
explain heuristic computation techniques introduced planners modified
reason interacting temporalnumeric behaviour  describe two variants heuristic 
basic version  active continuous change relaxed discrete step changes  refined
variant relaxation replaced careful approximation continuous
values  show  using borrower example  benefits refined approach 
heuristics based underlying use relaxed plan step count  use relaxed
plan makespan tie breaker ordering plans step count  step count dominates
heuristic first priority find feasible solution planning problem means
attempting minimise number choices must made resolved search 
course  emphasis rapidly finding feasible plan compromise quality plan 
particularly problems step count poorly correlated makespan  subsequent
attempts improve quality initial feasible solution  either iteratively improving
solution search using bound derived feasible solution prune
search space  possible  consider work 
    basic integrated heuristic computation continuous numeric effects
first version colin  coles  coles  fox    long      b  introduced three significant modifications trpg used crikey    order generate heuristic values presence
continuous duration dependent effects  first modification simply equips heuristic
means approximate effects continuous change 
action continuous effect equivalent dv
dt    k relaxed instantaneous
start effect hv      k dmax  a i  is  effect changing variable treated
integral effect upper bound duration action applied
start action  ensures behaviour relaxed  contrast to  say 
applying effect end action  dmax  a  calculated point
action added trpg  based maximum duration constraints refer
variables cannot change time  that is  state independent  
  

fic olin   p lanning c ontinuous c hange

constraints exist  duration allowed infinite  and variables affected continuous
effects action similarly uninformed bounds  
action discrete duration dependent effect variable v then  calculating
maximum  minimum  effect upon v  as discussed  non temporal case  appendix b    duration variable relaxed whichever dmin a  dmax  a  gives
largest  smallest  effect  relaxation effect achieved without changing timing 
associated start end action indicated action specification 
second modification affects action continuous numeric effect variable either end precondition invariant refers numeric variable 
invariant end precondition places constraint way process governed
action affect value variable  constraint reflected corresponding upper
lower bounds value variable  specifically  action decreases v rate k
invariant end precondition v c  upper bound v end action must
least k  dmin a  elapsed  a     c  elapsed  a  maximum amount time
could executing state evaluated    currently executing  otherwise 
maximum entries e   condition ensures variable could achieve
necessary value support application action  might appear strange bound
set higher c  reason relaxation accumulates increase effects ignores
decrease effects assessing upper bound  necessary  end action 
accumulated increases value variable allow outstanding consumption
order still meet c bound end action  corresponding condition
required action increases v rate k  invariant end precondition v c 
lower bound v cannot k  dmin a  elapsed  a     c  conditions
added explicit additional preconditions aa purposes constructing trpg 
third modification deals problem constructing appropriate initialisation
bounds numeric variables first layer trpg  crikey   values
initialised actual values metric variables  since values current state
change time passes without actions applied  true colin  since
actions started  yet finished  govern process  cause variables
change simply consequence time passing  basic heuristic proposed relies
able integrate continuous numeric change  determine variable bounds fl      
two stages  first  bounds variable v set according obtained lp
section      then  entry e e  corresponding start action  a 
continuous effect v positive gradient k  upper bound v f l      increased
k remaining e   here  remaining e  maximum amount time could elapse
state evaluated future end snap action paired start event e  maximum
remaining execution time calculated subtracting lower bound amount time
elapsed since start action maximum duration  case
gradient negative  lower bound decreased 
    refined integrated heuristic
time dependent change arises two sources  continuous numeric effects  initiated start snapactions  discrete duration dependent effects apply either end durative actions 
  

fic oles   c oles   f ox   l ong

purposes refined heuristic described section  treat continuous effects
discrete duration dependent effects ends actions way  attaching
continuous linear effect acting relevant variable effects appropriate snap action 
a  denoting set continuous effects g a   continuous effects  cont a   initiated
a    cont a  g a     is  gradient effects start include continuous
effects a  duration dependent effects end snap action aa split effect two
parts 
discrete effect aa   hv               w v   k dmin a    ci
gradient effect v  added g aa    effect defined hv  ki original effect used
operator      otherwise  hv  ki 
thus  instantaneously  end aa   effect available assuming smallest possible
duration used  executes greater duration  continuous effect applied
gradient change taken coefficient k  duration variable
corresponding effect a 
unfortunately  treatment proposed cannot applied duration dependent start effects  since effects always available start action  regardless duration  thus 
employ approach taken basic heuristic used colin  calculating maximum  minimum  effect a  affected variable  v   duration variable substituted
whichever dmin a  dmax  a  gives largest  smallest  effect 
collection linear continuous effects  g a   associated snap action 
a  adjust construction trpg  first  identify  variable  v  associated
maximum rate change  vmax  t   following layer al t   set sum
positive rates change  affecting v  snap actions al t  
v max  t   

x

x

aal t 

hv kig a 

k

definition relies restriction one instance action execute
time  restriction hold  clear finite bound p a  number instances
action execute concurrently  incorporate calculation v max  t 
follows 
x
x
v max  t   
p a 
k
aal t 

hv kig a 

finite bound exists  action could  principle  applied arbitrarily many times
parallel hence set v max  t       following layer al t  v max  t   
longer need reason upper bound continuous change v since upper bound
v become immediately layer  noted degradation
behaviour will  worst case  lead heuristic behaviour basic heuristic
where  again  arbitrarily many copies action execute concurrently  magnitude
increase decrease effects becomes unbounded  extension heuristic consider
   note that  experience  presence infinitely self overlapping actions continuous numeric change
often bug domain encoding  difficult envisage real situation parallel production
unbounded 

  

fic olin   p lanning c ontinuous c hange

continuous effects refined way worsen guidance situation 
remainder section  consider variables whose values modified actions
finite bounds number concurrently executing copies allowed 
armed upper bound value rate change variable following layer al t  
deduce maximum value variable time t    t  simply applying
appropriate change maximum value variable time t  remaining challenge
decide far advance t  construction trpg  construction trpg
crikey   time constrained advance next action end point  depending
whether new facts available following recent action layer  lines      algorithm     order manage effects active continuous processes  add third possibility 
time advance earliest value accumulated effect active continuous change
variable satisfy previously unsatisfied precondition  set preconditions interest
always finite  so  assuming variable subject non zero effect  bound
relevant advance always defined  or  set preconditions empty  advance required  
compute value time follows  numeric precondition may written
constraint vector numeric variables  v  form w v c  vectors constants w
c  define function ub follows 
x w i  y i  w i   
ub w  x  y   
w i  x i  otherwise
w i w

upper bound w v t  then  ub w  vmin  t     vmax  t     
earliest point numeric precondition w v c become satisfied
smallest value t  ub w  vmin  t     vmax  t     c 
example  suppose action precondition x    y z c  w  
h       i  assuming x  z numeric fluents case   substituting
previous equation yields 
ub h       i  hx  y  zimin  t     hx  y  zimax  t         xmax  t        ymax  t      zmin  t   
     xmax  t   t      xmax  t     
    y max  t   t      ymax  t     
   z min  t   t      zmin  t     
 the values x  z based starting points   accounts
instantaneous changes triggered actions al t    value t  produced computation
infinite  maximum possible rate increase expression x    y z must zero  
otherwise  t  time new numeric precondition first become satisfied due
active continuous effects and  earlier earliest point action end point
applied  next fact layer trgp f l t    
      mproving b ounds variables fact l ayer z ero
previously  setting bounds fact layer zero could thought consisting two stages 
finding initial bounds using lp then  passage time could cause bounds
diverge due active continuous numeric change  integrating change prior setting
   find t  requires simple rearrangement formula extract t  directly 

  

fic oles   c oles   f ox   l ong

bounds layer zero trpg  explicit model numeric gradients planning
graph  reconsider approach  intuition behind new approach
follows 
   variable v  create associated variable tnow  v  lp  solve lp
minimise value variable 
   fixing value tnow  v  lower bound  maximise minimise value v find
bounds point used bounds v fl       
   v     current state  vmax  t  values trpg offset v or 
similarly  v      vmin  t  values offset 
first steps based ideas described section      process subtly
different trying determine bounds v given point time  rather
appear reachable  before  tnow  v  must still come recent plan step
used determine value v  reflected pair constraints 
tnow  v  step
vnow   vi    vnow  tnow  v  step  
additionally  since variable associated single v  rather
appropriate v  constrain if  necessarily  v cannot referred  either
precondition  duration within effect  least certain steps plan  rather
weaker requirement recent step  purposes  observe
actions referring v require  delete add fact p  possible interaction p
require delete add form  tnow  v  must come plan step adds p 
formally  require delete add idiom holds p p true initial state  action
preconditions effects p  interaction action p characterised
one following patterns 
 
   p pre    a   p eff
   a   p eff    a 
 
   p pre  a   p eff
 a   p eff  a 
 
   p pre    a   p eff
   a   p eff  a 

 an action may exhibit either first two interactions  third  
lp variable corresponding point p added  denote step p  
determined one two ways  first  p present state evaluated  step p lp
variable corresponding plan step recently added p  otherwise  case   above 
know p eff  
 a  action currently executing  case  step p lp
variable estep corresponding end a  defined variable  add constraint
lp 
tnow  v  step p  
solving lp objective minimise tnow  v  finds earliest possible time
v referred to  then  fixing tnow  v  minimised value  minimise maximise
  

fic olin   p lanning c ontinuous c hange

bounds vnow   gives us bounds v appropriate early possible
actions plan far 
obtained variable bounds lp must  before  account fact
passage time causes bounds change active continuous numeric change  whereas
integrated change prior trpg  mechanism handling gradients directly trpg expansion  thus  start event queue entry e e corresponding
start action  a  continuous effect v positive  negative  gradient k 
add gradient effect upper  lower  bound v trpg  previously restricted integrated effect e remaining e   maximum remaining time action
must end  limit long gradient effect active  starts al      finishes
al remaining e    then  given fact layer value vmax  t  updated accordingly 
vmax  t   

xx

 k   hv  ki g op e   k     remaining e  

ee

similarly  vmin t  amended account effects hv  ki  k     
    using two variants integrated heuristic borrower problem
illustrate computation two heuristic functions choice point borrower
problem  example shows refined heuristic guides planner shorter makespan
plan basic heuristic  improved heuristic information leads selection
better choices helpful actions  consider situation following execution first action 
savehard start  figure    top  shows trpg relaxed plan constructed using basic
heuristic 
heuristic generates cost state    four actions shown relaxed plan 
together extra one end savehard action already started  relaxed plan
generates two helpful actions  start lifeaudit start takemortgage short  attempt start lifeaudit action quickly dismissed temporally inconsistent  depending
boughthouse becoming true ends  helpful action chosen  unfortunately  action selected interaction saving process deposit
requirement  at least five savings must acquired  forces action start earlier
time    constraint invisible trpg  continuous effect savehard
abstracted start effect  full ten savings therefore appear available immediately 
plan constructed using short mortgage  introducing second saving action
shown lower plan figure    start short mortgage pushed
late life audit cannot overlap end first savehard action finish
mortgage action 
lower part figure   shows happens refined heuristic used solve
problem  savehard action starts before  time heuristic relax
behaviour continuous savings process long mortgage  requires smaller deposit
initiate it  becomes available short mortgage  consequence this  relaxed
plan selects long mortgage  action starts early enough life audit overlap
end end savehard action  planner correctly guided optimal plan 
shown top figure    crucial difference two heuristics  refined
heuristic able access accurate information value savings timepoints
  

fic oles   c oles   f ox   l ong

   savehard start

saving

  


lifeaudit start
takemortgage start short

money          

money         

savehard end

cansave

takemortgage start long

   

    
lifeaudit end

savehard start
boughthouse

happy

takemortgage end short

   savehard start

saving

 



 

lifeaudit start
takemortgage start long

money      t 

money        t    

takemortgage start short

  

  

money    t    

   
lifeaudit end

savehard end

cansave

takemortgage end long

boughthouse

happy

figure    trpg relaxed plan borrower problem  following initial execution
savehard start time    constructed using original version colin  top
described section      revised version  bottom described section      
action layers depicted rounded rectangles fact layers ovals  action
layers labelled times constructed reachability analysis 

start savehard action  leads finer grained structure trpg 
seen fact six action layers arrival goal  rather four
case basic heuristic used  estimated makespan final plan       
makespan according basic heuristic         basic heuristic leads non optimal
solution requires extra savehard action  giving solution makespan        
contrast makespan      optimal plan 
benefit refined heuristic  extra work involved constructing modified
trpg  better helpful actions chosen makespan estimate therefore accurate  choice similar length plans made based makespan  trpg  constructed
refined heuristic borrower problem  even contain short mortgage action
early enough layer considered relaxed plan 
  

fic olin   p lanning c ontinuous c hange

    improving performance
section present two techniques use improve performance colin  first
technique  described section       generalisation earlier exploitation one shot actions  coles et al       a  situation encapsulate continuous processes  leading
faster plan construction problems action types  second technique  described
section       exploits lp defines constraints within final plan optimise plan
metric  leads better quality plans many cases 
     reasoning one shot actions
earlier work  coles et al       a  observed common modelling device
planning domains leads use actions applied once  call actions
one shot actions  arise  particular  collection resources
used once  key difference one shot actions imply trpg continuous
effects generated one shot actions lapse certain point reached 
one shot action continuous numeric effect v  a  first appears action layer
al t   gradient v due effect finishes  latest  al t   dmax  a   
end aa one shot action duration dependent effect v   implicit 
continuous effect acting v finishes  latest  layer al t   dmax  a  
termination point implied  cases  fact action one shot 
modify trpg construction reflect restrictions extending data recorded
action layer include  snap action action a  maximum remaining execution
time a  denoted rem t  a   one shot actions  layer al t  a  first appears 
rem t  a      dmax  a   aa first appears  rem t  aa     dmax  a  dmin a   actions
one shot rem t  a    rem t  aa   initialised   make three minor
changes layer update rules accommodate rem values  first  calculating active
gradient variable v following action layer al t  
x
x
v max  t   
p a 
k
aal t  rem a t   

hv kig a 

seen  subset actions execution time remaining considered  second 
next action layer al t   t  following al t   value positive rem decremented
t  amount time elapsed since previous layer  third  consequence this 
additional criterion must considered calculating time stamp next fact layer  t   
described section      since time remaining complete action may expire  may
need insert additional fact layer denote point rem value reaches  
continuous effects acting one variables need recalculated  time stamp
earliest layer is 
t      min rem t  a        al t  
one shot actions exploited still improving upper bound duration
action a  case actions state dependent duration constraints  i e  upperbound calculated based variables subjected effects actions   dmax  a  may
  

fic oles   c oles   f ox   l ong

gross over estimate duration a  suppose maximum duration bounded
formula w v   c  layer al t  a  appears  compute maximum duration
a  started layer  based variable bounds recorded f l t   could
use value determine bound remaining execution time a  however  future
layer f l t     variable bounds might changed  beginning al t     calculating
maximum duration based f l t     would allowed execute possibly longer period
time  allowing continuous effects persist longer 
remain faithful relaxation  possibility exploiting increased duration
 by starting t    must included trpg  well allowing possibility start
t  thereby obtaining effects sooner  therefore  one shot action allowed start
earliest layer al t  preconditions satisfied  giving initial maximum duration
dmax  a  t  based fact later f l t   but  later fact layer f l t    admits greater duration
 dmax  a  t     value dmax action layer t     remaining execution time
reconsidered  first  simple case  variables duration constraint changed f l t    
subject active continuous effects  case  apply pair dummy effects
fact layer t     t    dmax  a  t  
hrem a    t         dmax  a  t    dmax  a  t  i

hrem aa   t         dmax  a  t    dmax  a  t  i 
note increase rem values delayed layer t   because  order benefit
longer duration a  must started layer t   
complex case  variables duration constraint changed f l t   
duration affected continuous effects variables depends on 
situation  subsequent fact layer might admit marginally bigger duration last 
avoid recalculate new duration repeatedly  schedule pair dummy effects
based global  layer independent  maximum value duration a 
hrem a    t         dmax  a  dmax  a  t  i

hrem aa   t         dmax  a  dmax  a  t  i 
relaxation weaker might be  efficient compute 
     plan optimisation
plan metric specified pddl     problem files indicate measure quality
use evaluating plans  metric expressed terms task numeric variables
total execution time plan  by referring variable total time   use lp
colin offers opportunity optimisation plan respect metric  plan
 
consisting n steps  numeric variables vn 
end plan  stepn 
time stamp final step  i e  action dictating makespan plan  lp objective
set minimise function these  lp must solved minimise time stamp
last action  the makespan plan  order arrive lower bound time next
action  however  solved optimise plan metric 
  

fic olin   p lanning c ontinuous c hange

although possible consider ways use metric optimising lp value plan
construction  guide search  focussed much limited  less costly  use 
attempt post hoc optimisation  attempting exploit flexibility temporal structure
final plan optimise plan quality last stage plan construction 
order post hoc optimisation useful  planning problems must property
possible vary quality metric plan scheduling actions occur
different times  possible wide range interesting situations  scheduling aircraft
land close given target time possible  taking images satellites certain times day
view clearer  minimising wasted fuel penalising time elapsing starting
engine plane take off  last represents general class problems
may desirable minimise amount time two activities  different metric
total time taken plan execution  capture interesting cases  first extend
language supported colin allow limited subset adl conditional effects  allow
conditions action executed vary effects action metric value
plan  second  discuss milp built  based lp described section     
support post hoc plan optimisation 
planner handles conditional effects standard compilation  however  conditional
effects metric variables appear plan quality metric preconditions
actions dealt differently  call variables metric tracking variables
exploit fact rescheduling plan affect values variables without changing
validity plan  example shown figure      action land airplane 
conditional effects metric tracking variable total cost  domain structured
land actions must start beginning plan  end points represent actual
landing times aircraft problem  duration actions set correspond
earliest latest possible points plane could land  seen  propositional
effects action whether plane lands early late  plane landed 
longer flying  however  numeric effects  effects metric tracking variable
total cost  depend duration action and  particular  whether plane landed
early late  plane lands early  penalty paid certain rate per unit time plane
lands desired target value  plane lands late  fixed cost paid  addition
penalty  at different rate  per unit time plane lands desired target value 
considering action single action  pair conditional effects  planner decide
upon actions needed construct sound plan  in planes landed  whilst
leaving subsequent optimisation phase decision whether plane landed
early  late  time 
general  straightforward exploit lp described section     attempt reschedule actions plan optimise value plan metric  provided metric function
linear   however  plan contains actions conditional effects metric tracking variables 
becomes possible exploit representation effects extended lp  using integer
variables  order offer powerful optimisation step  conditional effect either
activated not  introduce     variable represent case effect 
variable connected corresponding constraints determine whether condition
associated effect true not 
deal two kinds constraints     variables milp encoding plan optimisation problem  one special case actions scheduled fixed time windows
  

fic oles   c oles   f ox   l ong

  durative action land
 parameters   p   plane  r   runway 
 duration  and      duration  earliest  p        duration  latest  p   
 condition
 and
 at start  takeoff  
 over  flying  p  
 at end  scheduled  p  r   
 effect
 and
 at start  flying  p  
 at end  landed  p  
 at end  not  flying  p   
 when  at end      duration   target  p   
 at end
 increase  total cost 
    earlypenaltyrate  p      target  p   duration     
 when  at end     duration  target  p   
 at end
 increase  total cost 
    latepenalty  p 
    latepenaltyrate  p      duration  target  p       
 
 

figure    pddl domain conditional effects airplane landing problem  literal
takeoff special proposition manipulated dummy action force landing
actions anchored point time 

governed timed initial literals affect whether conditions satisfied
case satisfaction conditions determined status continuous effects
controlled actions plan  so  example  cost action might depend whether
continuously changing value passed threshold time action executed  
cases handled straightforward encoding linkage value
    condition variable corresponding conditions  the details given appendix d  
extended conditional effects allow affect  duration variable
action  similar devices encoding milp 
milp solved single final step construction plan  optimising
plan metric quality rescheduling actions best exploit precise timing actions
interaction  limited conditional effects  plan quality 

    continuous linear benchmark domains
colin one first planners support pddl     models featuring continuous linear change
duration dependent effects  currently benchmarks available exploit fea   specifically  duration dependent effects depend non fixed durations 

  

fic olin   p lanning c ontinuous c hange

tures  support evaluation foster future comparisons planners designed
solve problems  produced number domains features   
first domains extension metric time variant rovers domain 
     international planning competition  ipc        long   fox      b   focus
action navigate  responsible moving rover one location another  original
model  discrete effect  start action  decrease energy level rover
  units  coupled precondition must least   units energy available 
replace continuous numeric effect energy  condition energy
must least zero action  duration original action specified   
use effect gradient      written thus  action net effect conditions 
energy decreased   units  must become negative  continuous change models
accurately use power navigate action  whilst power use may actually linear 
closer linear instantaneous  make model still realistic 
introduce new action domain  journey recharge  shown figure    exploiting
interaction continuous numeric effects variable  use action capture
option rover tilting solar panels face sun whilst navigating two points 
account power use reorienting solar panels  start end action     
units energy used  benefit consumption that  whilst action executing 
energy rover increased according constant positive gradient  final modification
domain  alter duration constraint existing recharge action  original
encoding  constraint is 
    duration           energy  x    recharge rate  x    

forces duration action sufficient restore level charge     full capacity   new formulation  replace      duration constraint specifies
maximum duration battery charged  need restored full capacity
every time action applied  following three modifications  domain used
standard ipc      benchmark problems  addition this  created
problems considering single rover  issue battery power management much
greater importance 
next domains extension time variant satellite domain 
taken ipc       here  continuous variant domain  make three key changes
domain model  first  original formulation  proposition used indicate whether
power available operate instrumentation given satellite  switching instrument
required deleted fact  switching added again  thus 
scope parallel power usage  instrumentation effectively used unit power  now  use
numeric variable represent power  preconditions effects variable replacing
preconditions effects proposition previously used  second  exploiting potential
differing power requirements  instruments operated one two modes 
cooled  uncooled  cooled mode  active sensor cooling used reduce sensor noise  enabling
images taken less time  cooling  however  requires additional energy  third 
finally  compulsory sunrise phase start plan  satellites
   p ddl domain problem descriptions evaluation tasks available online appendix maintained
jair paper 

  

fic oles   c oles   f ox   l ong

  durative action journey recharge
 parameters   x   rover  y   waypoint  z   waypoint 
 duration      duration     
 condition  and  over  moving  x  y  z  
 over      energy  x      
 at start      energy  x       
 at end
     energy  x       
 
 effect  and  at start  decrease  energy  x       
 increase  energy  x      t  recharge rate  x   
 at end
 decrease  energy  x       
 
 

figure    journey recharge action continuous numeric rovers domain

move shaded planet  direct sunlight  leads increase
power availability  modelled linear continuous numeric effect attached action  sunrise 
must applied  interaction effect preconditions powering instruments
ensures operated sooner power available  problem files use
domain slightly modified versions ipc competition problems  updated define power
availability numeric variable encode power requirements cooled uncooled
sensor operation  problems domain characteristics similar
borrower problem used running example 
exploring use continuous numeric effects  next domain models operations
cooperating autonomous underwater vehicles  auvs   auvs move waypoints
underwater perform two sorts science gathering operations  first taking water
sample given waypoint  performed auv appropriate location 
whose water sample chamber empty  second taking image target interest 
requires two auvs cooperate  one illuminate target torch  one take
image it  auv domain inspired problem described maria fox
invited lecture      international conference automated planning scheduling 
data acquired  must communicated ship surface  satellite
rovers domains  auvs energy constrained finite battery power
power usage actions continuous throughout execution  interesting continuous
numeric aspects domain arise use model drift  introduce variable
record far auv drifted nominal position  update two ways  first 
activity plan contained within action drift small  positive continuous numeric
effect drifted distance  second  add localise action sets drifted distance
zero  duration  and hence energy requirements  depending drifted distance prior
application  drifting affects domain actions  simplest case  sample
water take image given location  auv cannot drifted two metres  hence
introducing need first localise case  interestingly  auv shining
torch  drifting affects much light falling target  thus  shine torch action
auv  v three effects amount light falling given target  t 
  

fic olin   p lanning c ontinuous c hange

start   increase  light level  t           distance from waypoint  v   
throughout   decrease  light level  t      t  fall off   
end  decrease  light level  t  remaining contribution  v making
illumination 
constant  fall off  pessimistically derived formul involving inverse square
law  giving linear approximation decay illumination levels due drift  then 
take image action itself  duration function  light level  t   less light available  longer requires take image 
final domain use airplane landing domain  dierks         first posed challenge kim larsen invited lecture      international conference automated
planning scheduling  problem models scheduling landing aircraft airport
runway  plane  three landing times specified  earliest possible landing time 
latest possible landing time  target  desired  landing time  since time must allowed
airplanes clear runway landed  use runway heavily subscribed resource  possible planes land ideal time  planes can  therefore 
land early late  incurs penalty  penalty modelled duration dependent
effect  shown earlier paper  figure      section      able construct
set airplane landing problems using real data edinburgh airport arrivals board  results
running colin problems reported section    

    evaluation
colin temporal planner  able solve problems required concurrency  handle
discrete continuous metric variables  first question address costly
extension underlying crikey   system allow colin manage continuous effects  colin
particularly powerful planner general pddl     planners similar
expressive power available comparison continuous problems  however  extensions
necessary support continuous reasoning add overhead cost solving problems
continuous effects  compare performance colin temporal
planners selection temporal problems without continuous effects  section       order
evaluate much overhead paid colin setting managing  redundant  structures 
comparison state of the art planners pay price 
move considering performance colin problems continuous dynamics  second question is  much improvement obtain using refined
heuristic instead basic heuristic  dealing problems continuous change 
planners discussed section   able scale large complex problems  compare
two versions colin  present performances new benchmark problems continuous processes  setting foundation future comparative evaluation alternative approaches
problems 
third question considered concerns quality solutions produced colin 
comparison optimal solutions found  colin satisficing planner
perform efficiently wide range continuous planning problems  interested
understanding much solution quality must sacrificed order obtain efficiency
achieved colin 
  

fic oles   c oles   f ox   l ong

finally  consider question  expensive move solving stp  sufficient purely discrete temporal planning  solving lp  necessary handling continuous
effects   particular  practical solve multiple lps performing heuristic state evaluations 
since lp construction solution central architecture colin important
relied upon scale appropriately range complexity problems colin
expected solve 
following experiments consider large number domains domain variants 
temporal comparisons use simple time time variants depots  driverlog  rovers 
satellite zeno  ipc       airport pipes no tankage ipc      
airport variant used strips temporal variant 
comparisons basic refined heuristics continuous domains  use
new continuous benchmark domains introduced section     airplane landing  rovers  satellite
cooled  the satellite variant sensor cooling  auv domain 
post hoc optimisation experiments use airplane landing problem  cafe domain introduced empirical analysis crikey    coles  fox  halsey et al          variant
airport amount fuel burned minimised  version satellite time
windows  rewards obtained scheduling observations tighter windows 
cases use competition benchmark sets instances available  continuous rovers satellite domains used ipc      complex time problem sets 
instances work continuous domain variants possible get better makespan plans
them  respecting continuous dynamics  possible instances
solved using discrete domain variants  generated increasing sized instances airplane landing domain number planes landed increased  in nth instance
problem  n planes must landed   wrote problem generator auv domain
increases number auvs  waypoints goals instances  they range   auvs   
waypoints   goal    auvs     waypoints   goals   experiments run    ghz
pentium machine  limited    minutes  gb memory 
     comparison existing temporal planners
temporal planners actually solve full range temporal problems  already
observed  many temporal planners cannot solve problems required concurrency  even within
class problems required concurrency  easier problems  solved
left packing actions within plan harder ones possible  left
packing mean actions must executed concurrently actions plan
started time other  property means approach adopted sapa 
extending forward search include choice either start new action else advance time
earliest point currently executing action terminates  sufficient solve problem 
contrast  problem cannot left packed require possibility advancing time
intermediate point execution action order coordinate correct interleaving
actions it  describe problems requiring temporal coordination  one
planners handle problems requiring temporal coordination lpg s  gerevini
et al         
therefore compare colin lpg td  lpg s  sapa temporal baseline planner developed temporal satisficing track      international planning competition  neither
  

fic olin   p lanning c ontinuous c hange

depots simple time

driverlog simple time
   

colin solution time  s 

colin solution time  s 

   

  

 

   

  

 

   
lpg td used
temp baseline used

    
    

   

 
  
best solution time  s 

lpg td used
lpg s used
temp baseline used
    
    

   

   

rovers simple time

   

satellite simple time
   

colin solution time  s 

   

colin solution time  s 

 
  
best solution time  s 

  

 

   

  

 

   
lpg td used
temp baseline used

    
    

   

 
  
best solution time  s 

lpg td used
temp baseline used
    
    

   

   

 
  
best solution time  s 

   

zeno simple time
    

colin solution time  s 

   

  

 

   

    
    

lpg td used
temp baseline used

   

 
  
best solution time  s 

   

    

figure     comparison time taken solve problems simple temporal planning benchmarks 
colin compared best lpg  td  lpg  s  sapa temporal baseline planner 
problem file shape colour points indicate planner
best therefore used plot  planners appearing particular dataset
best problems collection 

temporal baseline planner  sapa lpg td solve problems requiring kind temporal
coordination  temporal baseline planner compiles away temporal information  using action
  

fic oles   c oles   f ox   l ong

depots time

driverlog time
   

colin solution time  s 

colin solution time  s 

   

  

 

   

  

 

   
lpg td used
temp baseline used

    
    

   

 
  
best solution time  s 

lpg td used
temp baseline used
    
    

   

   

rovers time
   

colin solution time  s 

colin solution time  s 

   

satellite time

   

  

 

   

  

 

   
lpg td used
lpg s used

    
    

 
  
best solution time  s 

   

 
  
best solution time  s 

lpg td used
lpg s used
temp baseline used
    
    

   

   

 
  
best solution time  s 

   

figure     comparison time taken solve problems complex temporal planning benchmarks  first set   colin compared best lpg td  lpg s  sapa temporal
baseline planner  problem file shape colour points indicate
best  planners appearing particular dataset best
problems collection 

compression  solves problems non temporal metric propositional problems 
solutions found  using metric ff core planning system  temporal information
reintroduced annotating plan suitable timestamps based critical path analysis 
details published planner  source code brief information available
ipc      web site  approach cannot therefore solve problems required concurrency  fast effective simpler problems temporal actions sequenced 
straightforward identify many cases action compression applied safely
analysis implemented colin reduce overhead reasoning action end points
unnecessary  therefore  behaviour temporal baseline planner similar
colin actions safely compressed  figures           show cpu time
comparisons colin best performances sapa  lpg td  lpg s temporal baseline planner  across wide representative collection temporal benchmark domains 
figure    shows performance simple temporal problems  action durations fixed 
figures       show results complex temporal problems  including
  

fic olin   p lanning c ontinuous c hange

airport strips temporal
    

   

   
colin solution time  s 

colin solution time  s 

zeno time
    

  

 

   

    
    

 
  
best solution time  s 

   

 

   

lpg td used
lpg s used

   

  

    
    

    

lpg td used
temp baseline used

   

pipes no tankage temporal

 
  
best solution time  s 

   

    

pipes tankage temporal
    

   

colin solution time  s 

colin solution time  s 

   
  

 

  

 

   
   

lpg td used
temp baseline used
    
    

   

 
  
best solution time  s 

    
    

   

lpg td used
temp baseline used

   

 
  
best solution time  s 

   

    

figure     comparison time taken solve problems complex temporal planning benchmarks  second set   colin compared best lpg td  lpg s  sapa temporal baseline planner  problem file shape colour points indicate
best  planners appearing particular dataset best
problems collection 

duration actions determined context executed  although none
action effects depend this   problems metric variables  none problems
feature required concurrency forms temporal coordination  figures  planners
appearing dataset best problems domain 
analysis figures      shows colin indeed pay overhead computation time
solution temporal problems feature continuous dynamics  overhead particularly significant simple temporal problems interesting temporal structure
temporal baseline planner tends perform well  overhead paid colin lower
complex temporal problems  temporal reasoning required sometimes challenging  makespan results figures           show colin produces good quality
plans  especially complex temporal problems  although temporal baseline planner still
competitive terms cpu time makespan  suggests temporal structure 
even complex temporal benchmarks  quite simple planner well ignoring
temporal structure present  rather trying reason generating plans 
  

fic oles   c oles   f ox   l ong

depots simple time

driverlog simple time

   

   

   
colin solution quality

colin solution quality

  

  

  

  

lpg td used
lpg s used
sapa used
temp baseline used

 
 

  

  
  
best solution quality

  

   

   

   

lpg s used
sapa used
temp baseline used

  

 
   

 

  

   
   
   
best solution quality

   

satellite simple time

   

   

   

   

   

   
colin solution quality

colin solution quality

rovers simple time

   

   
   
   
   

   
   
   
   

lpg td used
lpg s used
sapa used
temp baseline used

  
 
 

  

   

   
   
   
best solution quality

   

   

lpg td used
lpg s used
temp baseline used

  
 
   

 

  

   

   
   
   
best solution quality

   

   

   

zeno simple time
    

colin solution quality

    

    

    

    

lpg td used
lpg s used
sapa used
temp baseline used

    

 
 

    

    
    
    
best solution quality

    

    

figure     comparison plan quality simple temporal planning benchmarks  colin compared best lpg td  lpg s  sapa temporal baseline planner  problem file shape colour points indicate best  planners
appearing particular dataset best problems
collection 

detailed results experiments  showing raw runtime quality comparisons planners used experiment  presented appendix e 
  

fic olin   p lanning c ontinuous c hange

depots time

driverlog time

   

    

   
   
colin solution quality

colin solution quality

   
   
   
   

   

   

   
   

lpg td used
lpg s used
sapa used

  
 

lpg td used
lpg s used
sapa used
temp baseline used

 
 

  

   

   
   
   
best solution quality

   

   

   

 

   

rovers time

   
   
best solution quality

   

    

satellite time

   

   

   

   
colin solution quality

colin solution quality

   
   
   
   

   

   

   

   
lpg td used
lpg s used
sapa used

  

lpg td used
lpg s used
sapa used
temp baseline used

   

 

 
 

  

   

   
   
   
best solution quality

   

   

   

 

   

   
   
   
best solution quality

   

   

figure     comparison plan quality complex temporal planning benchmarks  first set  
colin compared best lpg  td  lpg  s  sapa temporal baseline planner 
problem file shape colour points indicate best 
planners appearing particular dataset best problems
collection 

     solving problems continuous linear change duration dependent effects
focus section examining scalability colin continuous benchmark
domains developed and  specifically  comparing two variants trpg discussed section    are  basic heuristic  discretises time  refined heuristic 
capable handling continuous numeric change directly  continuous benchmarks 
described section     characterised sophisticated temporal structure  including required
concurrency  giving rise interesting opportunities concurrent behaviour  problems time dependent effects continuous effects  reach temporal
planners used last experiment  problems used experiment designed rely
exploitation features  baseline planner ignored continuous dynamics
would unable solve problems 
results comparing basic refined heuristics shown figure     beginning
airplane landing domain rovers domain variant  performance either
  

fic oles   c oles   f ox   l ong

zeno time

airport strips temporal

   

    

   
   
colin solution quality

colin solution quality

   
   
   
   

   

   

   
   

lpg td used
lpg s used
sapa used

  
 

lpg td used
lpg s used
temp baseline used

 
 

  

   

   
   
   
best solution quality

   

   

   

 

   

  

  

  

  

  

  

   

    

pipes no tankage temporal

  

colin solution quality

colin solution quality

pipes no tankage temporal

   
   
best solution quality

  

  

  

lpg td used
lpg s used
temp baseline used

 

lpg td used
lpg s used
temp baseline used

 
 

  

  
  
best solution quality

  

  

 

  

  
  
best solution quality

  

  

figure     comparison plan quality complex temporal planning benchmarks  second
set   colin compared best lpg td  lpg s  sapa temporal baseline
planner  problem file shape colour points indicate
best  planners appearing particular dataset best
problems collection 

heuristic used  relaxed plans found same  expected  two
domains interaction time numbers relatively limited  airplane landing
problem  action durations affect variable used measure plan cost used
preconditions  thus  selection actions trpg unaffected  rovers domain  continuous change arises consuming power navigate actions  producing power
recharging  capturing time dependent nature precisely effect relaxed plans  nature relaxation leads rarely require recharge actions 
conditions needed affected whether effects integrated
not  nevertheless  two domains illustrate guaranteed like for like situations 
heuristic guidance same  refined heuristic negligibly expensive
compute  despite additional overheads tracking gradient effects trpg expanded 
seen colin scales well across airplane landing instances  although
manages solve      rovers problems  these well within two minutes  
  

fic olin   p lanning c ontinuous c hange

rovers continuous time

airplane landing edinburgh time
    

   

basic heuristic
refined heuristic

refined heuristic
basic heuristic
   
  

time

time  s 

  
 

 

   
   

    

    
 

  

  

  
  
  
problem number

  

  

  

 

  

 

 

satellite cooled time
    

  

  

satellite cooled makespan
    

basic heuristic
refined heuristic

basic heuristic
refined heuristic

   
   

makespan

   

time  s 

 
  
problem number

  

   
   
   

 

   
   

   

   
 

 

 

 

  
  
problem number

  

  

  

  

 

 

 

auv time

  
  
problem number

  

  

  

  

auv makespan

     

   

basic heuristic
refined heuristic
    

   

   

   
makespan

time

 

  

   

 

   

   

   

    

basic heuristic
refined heuristic

 
 

  

  
  
problem number

  

  

 

  

  
  
problem number

  

  

figure     comparison basic refined trpg variants continuous domains  boxed
graphs makespan comparisons satellite cooled auv domains  placed
right corresponding runtime graphs 

satellite cooled domain  runtime taken find plans using refined
heuristic comparable using basic heuristic  problems  e g         
slower  others  e g          faster  interesting comparison make
makespan data  shown right   seen  refined heuristic generally produces
  

fic oles   c oles   f ox   l ong

better quality plans  difference quality due refined heuristic better capturing
relationship time numbers  leading better actions chosen relaxed plan 
way example  consider state reached beginning sunrise action 
basic heuristic  lp used obtain bounds power availability state 
free reign much time allow elapse  lower bound found slightly
zero  corresponding allowing time elapse   upper bound found
peak power availability  corresponding applying entirety sunrise action  
building trpg bounds  cooled sensor operation immediately available 
hence goals always achieved first actions using sensor cooling  duration
actions lower  making attractive  resulting relaxed plan  hence
helpful actions  therefore lead search use sensor cooling 
refined heuristic  lp used obtain bounds power availability
state  bounds must obtained soonest possible point  thus  lowerbound still slightly zero  upper bound slightly
zero  positive gradients effect power availability variables included
trpg  influencing layers different actions become applicable  specifically 
actions without sensor cooling lower power requirements  hence appear earlier
layers  then  goals first achieved actions using sensor cooling  where increased
duration acquiring image without cooling compensated sufficiently able
start taking image sooner  relaxed plan  hence helpful actions  use
sensor cooling goals  seen situation closely analogous
differences alternative mortgages borrower domain 
extent trade off influences plan quality varies problems  depending
initial orientation satellites  images required  least benefit arises
satellite requires substantial reorientation point towards first target case 
time taken allows energy level rise sufficiently support sensor cooling  greatest benefit
arises opposite situation  satellite requires minimal reorientation then  switching
sensor cooled mode require substantial amount time elapse support
energy requirement precondition 
aid understanding scalability implications results  satellite problems
based used      ipc  similar fundamental size  however  continuous
reasoning added makes underlying problems fundamentally much
difficult solve 
auv domain  use refined heuristic increases problem coverage    
problems solved rather     applying wilcoxon matched pairs signed ranks test
paired time taken data mutually solved problems  find reject null hypothesis
refined heuristic better basic heuristic  p       observing performance planner  difference performance arises due way drifting
process handled two approaches  specifically  accounted difference
bounds fact layer zero trpg calculated  consider state action
auv communicate image data started  domain encoding ensures
communication completed  auv cannot perform activities  point  prior
evaluating state using trpg heuristic  lp used give bounds values state
  

fic olin   p lanning c ontinuous c hange

variable  considering variable recording far communicating auv drifted
variable  distance from waypoint auv    abbreviated dfw  
basic heuristic employs approach set section      single timestamp
variable introduced  must come action started  along additional
variable constraint dfw   maximising minimising value additional
variable yields bounds dfw   lower bound infinitesimally larger
prior starting action  due time elapsed  upper bound corresponds
allowing large amount time elapse 
refined heuristic employs approach set section        here  timestamp
variable introduced task variable  case concerned tnow  dfw   
prior case  constrained action applied  additionally 
however  domain model enforces action refer value
variable communicate action finished  specific tnow must come
 future  end action applied  bounds dfw  found following
remaining steps section        lp solved minimise value tnow variable 
value variable fixed minimum lp solved maximise
minimise value dfw   critically  tnow variable must come end
action applied  rather start  lower bound dfw  larger 
increase lower bound dfw  affects whether  trpg  preconditions
form      dfw   c  considered satisfied initial fact layer  satisfied 
delayed earliest layer localise action reduces value dfw  
difference affect relaxed plan found  solution extraction  action requiring
     dfw   c  chosen  localise action necessary achieve trpg 
action added relaxed plan  cannot come earlier end
communicate action applied  is  point bounds dfw  calculated 
sort localisation necessary ultimately applied  thus  bounds
refined heuristic lead better relaxed plans found  containing localise actions
would otherwise omitted 
give indication difficulty problems  auv problems range problems
  auvs    waypoints    objectives   goals harder end   auvs    
waypoints    objectives   goals  major hurdle preventing colin scaling even
larger problems inability see implicit deadline created shine torch
action started  auv shining torch finite energy  planner starts shinetorch action one auv  preparation another auv take image  adds
plan actions involving second auv unrelated taking image  delay
lead insufficient energy shine torch long enough gain required
exposure photograph taking action eventually started  leads planner dead
end forced resort best first search  much less effective ehc
domain  implicit deadlines occur many planning problems temporal coordination
issues colin faces could avoided using branch ordering heuristic promotes
actions whose applicability time limited due ends currently executing actions  perhaps
relaxing unnecessary ordering constraints imposed colin due total order search 
scope paper  interesting avenues future work 
  

fic oles   c oles   f ox   l ong

  durative action burning fuel
 parameters   a   airplane 
 duration
     duration        engines  a   
 condition  and  at start  not burning fuel  a  
 at end  taking off  a   
 effect  and  at start  can start engines  a  
 at start  not  not burning fuel  a   
 increase  wasted fuel      t  engines  a   
 
 

figure     burning fuel action added airport domain
     post hoc plan optimisation
section evaluate effectiveness post hoc plan optimisation strategy  described
section     plan optimisation phase occurs planning complete never change
actions plan  lifting partial order prior scheduling  veloso  perez   
carbonell         provide scheduler little flexibility order actions 
long ordering constraints remaining  greedy  partial order lifting respected 
scheduler reduce plan cost altering time points actions occur and 
possible  durations  minimising objective plan makespan effect
plan quality domains metric sensitive times actions applied 
since  default  colin minimises makespan solution final lp completed plan 
benchmark domains literature  make use one existing suitable
domain introduce new variations existing benchmarks  order test feature 
first domain  existing domain property  airplane landing
domain  used earlier section  described section     here  penalties incurred
landing depend whether  extent  early late  therefore  given
sequence landings  times assigned impact quality plan 
next two benchmark problems variants problems introduced international
planning competitions       long   fox      b        hoffmann   edelkamp        
first  consider modified version satellite domain  modify domain adding
time windows  modelled using tils  clear view given objective 
photograph objective taken time window  quality plan improves 
better quality picture preferable  problem introduce three time windows
objective  bounded random duration  taking photograph objective
preferred  second adapted benchmark taken ipc     airport domain 
airplane landing problem described previously concerned scheduling landing times
aircraft  airport domain concerned coordinating ground traffic  moving planes
gates runways  eventually take off  whilst respecting physical separation must
maintained aircraft safety reasons  add domain metric minimise
total amount fuel burnt aircrafts engines starting eventually takes
off  capture pddl      add action shown figure     action must occur
planes engines started cannot finish plane started take off
 hence duration least startup action   two points increases
  

fic olin   p lanning c ontinuous c hange

amount fuel wasted rate proportional number engines fitted aircraft 
larger planes  for number engines greater  waste fuel per unit time 
satellite airport domains use standard problem sets competitions 
adding minor changes needed support modifications made  whilst leaving underlying
problems unaltered 
final domain consider cafe domain  first used evaluate crikey  coles  fox 
halsey et al          domain  tea toast must made delivered table
cafe  kitchen  however  one plug socket  preventing two items made
concurrently  restriction allows problem number interesting metric functions 
minimise total time serve customers  the plan makespan   minimise time
delivery tea toast given table  minimise amount items cooled
delivered table  consider latter two variants here 
results experiments presented figure     starting top left 
airplane landing domain  post hoc optimisation gives modest improvement plan quality 
due limited scope optimisation  even partial order lifting  order
planes going land fixed plan  adjusted precise times
planes going land within ordering 
moving airport domain variant burning fuel action figure    top right
post hoc scheduling able give large improvements plan quality  original plans 
optimisation  burning fuel action given plane started point prior
relevant can start engines fact needed ended point relevant
taking off fact true  necessarily timely manner  following post hoc optimisation 
due objective function used  burning fuel action starts late possible finishes
early possible 
cafe domain  results two metrics used shown central graphs
figure     two diagonal lines correspond original plans  given problem  two
plans identical  evaluation metric differs  two lower lines show quality
plan scheduling respect relevant metric  observing post scheduled plans 
actions scheduled one would intuitively expect  minimising total delivery
window times  items given table delivered succession  even first item loses heat
waiting second item prepared  contrast  minimising heat loss items
delivered tables soon prepared  even delay two
items delivered 
finally  results variant satellite domain observation windows shown
bottom left figure     whilst marked improvements previous two
domains  scheduler able make headway better scheduling observations 
original plan given problem will  satellite  fix observations make 
order made  remains enough flexibility able improve plan
quality  reducing plan cost around factor   
     comparison optimal solutions
investigated difference quality optimal solutions solutions produced
colin order form impression close optimal colin get  this  ran
colin admissible heuristic uses makespan estimate produced trpg  using
  

fic oles   c oles   f ox   l ong

airplane landing edinburgh
     

airport fuel loss
    

colin standard
colin optimise

     

    

     

    

     

    

solution quality

solution quality

colin standard
colin optimise

     
     
    

    
    
    

    

    

    

   

    
 

 
 

  

  

  
  
  
problem number

  

  

  

  

 

 

 

cafe  delivery window 
    

 

  
  
problem number

  

  

  

cafe  heat loss 

colin standard
colin optimise

  

   

colin standard
colin optimised

  

  

    
delivery window metric

  

heat loss metric

  
   

   

  

  
  

  
  

   
  
   

  

  

 

 
 

 

 

 

  
  
problem number

  

  

  

  

 
 

 

 

 
  
  
problem number

  

  

  

  

satellite reward
    

colin standard
colin optimise

solution quality

    

   

   

   

   

 
 

 

 

 

  
  
problem number

  

  

  

  

figure     quality plans produced colin without post hoc optimisation  four
graphs  lower better 

value used colin results presented figures        call
variant optimalcolin 
auv rover domains  variable duration actions domain
durations chosen small actions used plan   length actions
might chosen  example  relocalise slightly drifted  recharge used
negligible amount power  domains  optimal search consider plans comprising
almost entirely actions duration optimal makespan  example scale this 
  

fic olin   p lanning c ontinuous c hange

problem
      instance
  
  
  
  
  
  
  

optimalcolin
makespan time  secs 
      
    
      
    
      
    
      
    
      
    
      
     
 

colin

makespan
      
      
      
      
      
     
      

time  secs 
    
    
    
    
    
    
    

table    comparison makespans solution time airplane landing problems solved optimalcolin colin using refined heuristic  problem   could solved
optimalcolin within   hour bound 

auv problem    solved colin  find plan makespan         careful analysis
hand suggests plan cannot improved  optimal  optimalcolin must consider plans
       steps order prove plan optimal  means problem
completely reach optimal planning 
similar problem arises rovers domain  recharge action little
long  series  long recharge actions applied  reaching ostensibly different states 
without making progress  clearly  potential  duration actions arise
continuous temporal domain  problem search space explosion arise
temporal domain orders magnitude differences longest shortest
possible actions 
however  airplane landing satellite cooling domains  variable duration
actions domains made arbitrarily short search  therefore  optimalcolin
principle able solve problems domains  fact  given   gb memory   hour
runtime instance  able solve   airplane landing instances  shown table   
table shows  time required solve problems increases fast  problem   could
solved      seconds  problem         seconds  problem   could solved within
hour available  basis decided unnecessary extend time available
optimalcolin would unlikely cope large instances 
table   shows colin sacrifices optimality speed  sacrifice important 
pay terms time required solve problems  colin able solve    airplane
landing problems  instance taking       seconds solve 
found optimalcolin could report candidate solution first satellite domain instance  within     seconds  however  could prove within time available solution
optimal  include it 
     costs associated lp scheduling
transition crikey   colin switch solving stp state solving
lp  important issue consider impact time taken evaluate
  

fic oles   c oles   f ox   l ong

feasibility plan constructed reach every state considered search  default mode
operation  colin uses stp evaluate state unless temporalnumeric constructs
necessitate use lp  evaluate whether appropriate  or whether always using
lp would faster   compare overheads stp solving lp solving equivalent
problems  created variant colin that  every state s  schedules plan reach independently using three different schedulers  original stp solver used standard version
colin  equivalent lp solved using cplex  ibm ilog cplex optimization studio 
equivalent lp solved using clp  lougee heimer         stp solver used incremental stp algorithm due cesta oddi         previously used crikey    lp
solvers used tighter variable bounds described section      order evaluate
cost associated use lp instead stp  modified colin collect data revealing
costs technique applied node evaluated search plan 
possible compare performance straightforwardly  simply running colin using stp
versus colin lp  minor variations caused numerical accuracy lead
different trajectories followed  masking intended comparison  aside  interesting observe minor  and essentially uncontrollable  differences computed makespans
relaxed plans lead significant variations performance  relaxed plans equal h values
sorted makespan estimates search  
wish compare stp lp approaches  necessary consider domains
reason  is  without continuous numeric duration dependent effects 
order consider problems scheduling interesting necessary  in contrast
temporally simple problems section       consider domains required concurrency 
currently benchmarks exist  planners attempt solve problems 
use representatives competition domains features  compiled timed initial
literal domains ipc      use airport  with time windows  pipesnotankage  with deadlines   use match lift driverlog shift domains  halsey        
completeness  include results domain scheduler strictly necessary 
pipesnotankage temporal domain ipc     
figure    shows mean time spent scheduling per state  using approach  problems
domains  exclude graph data problems solved
planner less second  accuracy profiling data sufficiently reliable
measure time spent scheduler overall time taken small  since
interesting variation results domains present data together across three
graphs  sorted scheduling time per node using cplex  intended nominal
analogue hard scheduling problems given planning problem are  increase
scheduling time cplex generally corresponds increase scheduling time clp
stp solver  except easier problems noise sufficient tip balance
figures small  note differing y axis scales three graphs  sorting problems
according difficulty allows us display data appropriate range distinguish
results  sake maintaining reasonable y axis ranges final problem  problem    
omitted graphs  problem figures cplex    ms  clp    ms
stp   ms 
results figure    are  course  indicative scalability colin  running
three schedulers state  significantly slower usual configuration  practice 
domains continuous duration dependent effects  colin automatically
  

fic olin   p lanning c ontinuous c hange

low difficulty
   

stp
clp
    cplex

mst state  ms 

    
    
   
    
   
    

 

 

 

 

 

 

 

 

          
problem number

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

medium difficulty

mst state  ms 

   

stp
clp
    cplex
 
   
   
   
   
  

  

  

  

  

  

  

  

           
problem number
high difficulty

  
mst state  ms 

  
  

stp
clp
cplex

  
  
  
  
 
 
  

  

  

  

  

  

  

  

           
problem number

  

  

  

  

  

figure     mean scheduling time  mst  per state temporal planning problems  problem
number appears leftmost three corresponding columns case 

disable lp scheduler use efficient stp solver  further  planner
run profiling enabled  subject significant overheads 
  

fic oles   c oles   f ox   l ong

 
 
 
 
 
 

  
   
   
   
    
 
       
   
  
  
   
    
    

  

     

  
 
       

     
      
 
   
              
 
      
    

figure     time spent various activities solvers  cplex clp  viewed proportion total time spent cplex  slice labelled milpsolvercpx clp
time spent destructor milp solver cplex clp  housekeeping operation implementations  which written c    

considering relative performance stp lp solvers  clear overheads incurred necessary  for domains continuous effects  move using lp rather
stp  mean ratio time spent scheduling problems cplex
spent using stp solver       figure clp       analysis data suggests
ratios change problem difficulty increases  rather overhead constant factor
harder problems 
despite increased scheduling overheads still worth noting solving scheduling problem relatively small fraction cost reasoning done state  plan
given state scheduled check feasibility state evaluated using temporal rpg heuristic described section    well known  analysis performance
forward search planners  majority search time spent evaluating
heuristic  give indication relative cost scheduling versus heuristic computation
give admissible estimate mean fraction time spent  per state  running scheduler
versus computing heuristic  estimate guaranteed overestimate true mean
states scheduler demonstrate temporal problem solution 
states rpg heuristic never evaluated  heuristic evaluation actually applied
fewer states scheduler  nonetheless  data shows that  across problems  using
stp solver scheduling accounts average less    state evaluation time  clp
cplex figures         respectively  suggests that  although scheduling
add overhead solving problems  relatively small compared cost heuristic
computation 
perhaps surprising observation made figure    clp generally solves
scheduling problems much efficiently cplex  given reputation cplex
highly efficient commercial lp solver wanted investigate case problems 
  

fic olin   p lanning c ontinuous c hange

performed analysis profiling data  breaking results function call 
observe time spent various aspects constructing solving lp thorough clp
cplex library calls  data  presented figure    shows time spent function
fraction total time taken cplex schedule plans  each summed across problems  
used section clp data represents time saved using clp versus cplex 
presentation means equally sized slices pies represent length time
taken either solvers respective methods 
important insight gain data time
lp solvers spent solve function  indeed observed search portion
negligible  barely visible  majority time is  fact  spent adding rows lp
matrix  i e  adding constraints lp actually solved  comparing cplex clp 
takes   times longer  average  add row matrix  lps created
identical  hence involve adding number rows matrix  portion
chart corresponds methods  many take longer search 
pre processing steps adding new columns  variables  setting upper bounds  since
adding rows matrix significant portion time taken constructing then solving
lps colin  results large overhead  lps created colin small simple
solve  compared difficult industrial sized problems cplex designed 
results suggest that  fact  best type lp solver use task relatively
light weight lp solver  overheads  create models efficiently  even perhaps
would scale large scale problems  notable  although less marked  difference
two lp solvers time spent destructor  called free memory used
lp solver state evaluated  here  takes    times longer  average 
call destructor cplex destructor clp  less impact rowadding overheads  since lp deleted per state  rather per lp constraint 
general  would normally noticeable issue solving single difficult lp  however 
colin  number lps solved equal number states evaluated  overhead
become noticeable 
one interesting outcome study if  future  colin extended
non linear continuous change  requiring use mathematical programming solver state
 along research developments   overheads may well prohibitive  search
within solver  greater overhead would occur due change  fact
major contributor time overheads using lp 

    conclusions
range problems solved effectively planners grows  range
opportunities technology applied real problems  recent years  planning extended solve problems real temporal structure  requiring temporal coordination  problems
include metric resources interactions use causal structure plans 
shown range extended still further  include linear continuous process
effects  extension power planners demands several steps  first model
extension form allows relationship constraints imposed plans
new expressiveness  actions used solve problem  properly expressed 
second step develop means represent world state consistently  order
  

fic oles   c oles   f ox   l ong

characterise space search plan conducted  third step develop
way compute progression states using action models extended representation 
step complete  is  principle  possible plan  search space constructed
searched using classic simple search techniques  practice  process unlikely lead
solutions many interesting problems fourth step  order make search possible
large spaces  construct informed heuristic guide search 
paper built earlier work completed first steps  adding third
fourth steps allow us solve planning problems continuous effects  tools
used achieve well established operations research tools  lp solvers extensions
milp solvers  contributions made show tools harnessed
check consistency states  model state progression compute heuristics successfully guide search large spaces develop planning problems 
additional contribution established collection benchmark problems
direction research planning  planning community witnessed creation
benchmarks propagation powerful aid development technology  supporting
clear empirical evaluation challenging researchers improve results others 
shown colin solve interesting complex problems  remains much room
improvement  apart extending capability planner improving informedness
heuristic improving early pruning dead end states  opportunity
extend still range problems expressed solved  particular 
interested problems non linear continuous effects  power thermal curves 
seems possible non linear effects might approached similar approach used
colin  adapting nlp solver role lp solver colin  alternatively  might
possible approximate non linear effects piecewise linear effects  much way
auv domain described paper  performing process automatically 
planning becoming increasingly key technology robotic systems become powerful
complex begin see limits low level control strategies managing
control systems  autonomy demands powerful predictive control planning
offers possible solutions problem  planning continuous effects important
tool collection offer tackling new demands 

acknowledgments

authors wish thank handling editor  malte helmert  anonymous reviewers
considerable contributions paper  authors wish thank members planning group helpful discussions long gestation work 
authors wish acknowledge epsrc support work  specifically
grants ep g         ep h         
  

fic olin   p lanning c ontinuous c hange

appendix a  glossary
name
 i  v 
 i  v 
action compression

al

ce i 
cs i 

dec i  v 

dmin  dmax 

e
eff  
x
eff
x
eff nx
estepi

elapsed a 

f  i 

description
lower bound assignment effects variable v due actions layer reachability graph 
upper bound assignment effects variable v due actions layer reachability graph 
technique simplifying structure durative actions
treating simple non durative action union
effects ends durative action union
preconditions 
action layer reachability graph constructed heuristic purposes 

first use
  

function returning variable corresponding end time
snap action position current plan 
function returning variable corresponding start time
snap action position current plan 

  

set  discrete  decreasing effects variable v layer
reachability graph 
rate change variable v  associated state
achieved execution plan 
minimum  maximum  duration action  use dmin a 
 dmax a   relevant action required explicit
dmin a  t   dmax a  t   value anchored action
layer al t  

  

event list recording action start times durative actions
whose end points yet included plan 
propositional add effects action  x  present  indicates whether start end action 
propositional delete effects action  x  present 
indicates whether start end action 
numeric effects action  x  present  indicates
whether start end action 
name lp variable corresponding time
durative action finish  started ith step plan 
finished within plan constructed far 
maximum time action could executing
state heuristically evaluated 

  

variable stn crikey   corresponds time
currently incomplete action eventually finish 

  

  
 

  

  

  
  

 
 
 
  

  

  

fic oles   c oles   f ox   l ong

name
fl

description
fact layer reachability graph constructed heuristic purposes 

first use
  

inc i  v 

set  discrete  increasing effects variable v layer
reachability graph 
invariants active state s 

  

left packing

structure plans concurrency concurrent actions start simultaneously 

  



name variable created represent time end
current plan stp lp used check temporal consistency state 

  

hop    dmin  dmax

event record crikey state  containing durative action  op 
started step i  minimum maximum duration
action 

  

pre
pre
pre  
p a 

conditions required complete action 
invariant conditions durative action 
conditions required initiate action 
bound number instances durative action
may execute concurrently 

 
 
 
  

remaining e 

maximum amount remaining time action
event record e could continue executing following state
heuristically evaluated 
information associated durative action al t  reachability analysis constructed colin  indicating much time
could continue execute layer 

  

stepi

name lp variable corresponding time
action ai applied plan 

  

t i 

variable stp crikey   represents time
step plan executed 
property planning problems require concurrency order manage interactions actions
deadlines 
action effects refer  duration  causing numeric fluents
change different amounts according length action
causing effect 

  

inv s 

rem t  a 

temporal coordination

time dependent change

  

  

  

  

 

fic olin   p lanning c ontinuous c hange

name

description
used describe continuous change  complete account
use semantics  see original discussion use
pddl      fox   long        

first use
 

ub w  x  y 

function used calculate bounds effects continuous numeric change 

  

v

used represent vector metric fluents associated
planning domain  values state  vector treated
indexable  v i  ith entry v 
vector values metric fluents start state  immediately following step effects application action 
vectors lower upper bounds values numeric variables state  during plan construction  

 

symbol used represent vector constants equal dimension
size vector metric fluents relevant planning
problem 

 

 t

v 
vmin   vmax

w

  

  
  

fic oles   c oles   f ox   l ong

appendix b  metric relaxed planning graph heuristic
relaxed planning graph  rpg  heuristic metric ff  hoffmann       
popular numeric planning heuristic last decade  widely used many planners 
intuition behind heuristic generalise delete relaxation include numeric variables 
case propositions  relaxation simply ignore propositional delete effects so 
 relaxed  actions applied  set true propositions non decreasing  case numbers 
relaxation replaces exact assignments numeric variables bound constraints upper
lower bounds  applying relaxed actions extends bounds reducing lower bounds
decrease effects increasing upper bounds increase effects  checking whether numeric
precondition satisfied simply matter testing whether constraint satisfied
value within bounds  delete relaxed problem solved  non optimally  polynomial
time  number actions resulting relaxed plan taken heuristic estimate
distance evaluated state goal 
purpose rpg support heuristic computation  relaxed planning undertaken
two phases  graph expansion  solution extraction  graph expansion phase purpose
build rpg  identifying facts actions become reachable  rpg consists
alternate fact layers  consisting propositions hold optimistic bounds v  action
layers  containing actions whose preconditions satisfied preceding fact layer  case
propositional preconditions  precondition satisfied relevant fact contained
previous layer  case numeric preconditions  satisfied assignment
variables appearing precondition  consistent upper lower bounds  lead
satisfied  define function ub w  x  y  as 
x w j  y j  w j   
ub w  x  y   
w j  x j  otherwise
w j w

 this function defined section      
then  denoting fact layer set propositions  f l i   upper lower variable bounds
 vmin  i   vmax  i    precondition w v c action layer considered true iff 
ub w  vmin  i   vmax  i   c
seed graph construction  fact layer   contains facts true s  thus  action layer
  consists actions whose preconditions satisfied fact layer    fact layer   set
optimistic outcome taking fact layer    applying actions action layer   
formally  considering propositions  applying actions action layer i  i e  actions al i 
leads fact layer     where 
f l i        f l i   eff    a    al i  
considering numbers  action layer set optimistic increase decrease effects
variable v across actions are  respectively 
inc i  v      ub w  vmin  i   vmax  i     c        al i  s t  hv      w v   ci eff n  a  
dec i  v      ub w  vmax  i   vmin  i     c        al i  s t  hv      w v   ci eff n  a  
  

fic olin   p lanning c ontinuous c hange

exchange minimum maximum bounds v two expressions important 
causes expression extreme possible appropriate direction  similarly 
optimistic upper lower bounds v  following available assignment effects  are 
 i  v    max  ub w  vmin  i   vmax  i     c    al i  s t hv     w v   ci eff n  a  
 i  v    min  ub w  vmax  i   vmin  i     c    al i  s t hv     w v   ci eff n  a  
new bounds become 
vmax  i      j    max a  i  v j    vmax  i  j   
vmin  i      j    min a  i  v j    vmin  i  j   

x

x

inc i  v j   

dec i  v j   

is  find upper  lower  bounds v j  next layer  choice
applying largest  smallest  single assignment effect  sum increase  decrease  effects  computed bounds variables layer      graph expansion continues
iteratively  finding actions applicable action layer      hence facts layer     
on  graph expansion terminates one two cases  either fact layer satisfies propositional
numeric goals  addition layers would never lead preconditions
satisfied condition signalled new propositions appearing accumulation
larger smaller bounds variables would lead numeric preconditions becoming
satisfied  case  relaxed problem cannot solved hence  original problem 
plan starting reach g  heuristic value state set  
assuming graph expansion terminates goals reached  second phase extract
solution planning graph  recursive procedure  regressing goals back
initial fact layer  fact layer augmented set goals  facts numeric preconditions 
achieved layer  beginning inserting top level goals g planning
graph first layers appeared  solution extraction repeatedly picks latest
outstanding goal planning graph selects way achieve it  propositional goals 
single action  with effect adding goal  chosen  preconditions inserted goals
achieved  again  earliest possible layers   satisfy numeric goal w v c layer
i  actions effects acting upon variables  with non zero coefficients  v chosen 
net increase w v  k  sufficient allow residual precondition w v c k
satisfied fact layer    point  residual precondition added goal achieved
layer    or earlier possible   preconditions actions chosen support
precondition added goals achieved previous layers 
solution extraction terminates outstanding goals achieved fact layer    since
true state evaluated need supporting actions  actions selected
solution extraction form relaxed plan goal  length  number actions 
relaxed plan forms heuristic estimate  h s   additionally  actions relaxed plan
chosen action layer   form basis helpful actions s  used restrict
states explored enforced hill climbing search  action effect common
actions chosen action layer   considered helpful 
  

fic oles   c oles   f ox   l ong

appendix c  temporal reasoning relaxed planning graphs
several approaches proposed building temporal relaxed planning graphs  trpgs  
three additional features trpgs attempt manage  compared rpgs 
   temporal structure durative actions  aa applied a  applied
it 
   action durations  end effects actions available appropriate delay
started 
   pddl     startend semantics  allowing effects preconditions attached
starts ends actions 
trpg employed sapa  do   kambhampati        satisfies first two these 
third  sapa  action compressed temporally extended action obeying
tgp semantics  discarding delete effects  relaxation  building tgp  style planning
graph  smith   weld         use compression time stamped tgp representation
captures durations start before end relationships  use compression causes
heuristic find false dead ends cases required concurrency 
trgp used crikey  coles  fox  halsey et al         avoids action compression 
ignores durations actions  non temporal rpg built terms snap actions used
search  additional precondition end snap action particular dummy fact 
added corresponding start  appeared preceding fact layer  use snap actions
means preconditions effects lost  ensuring heuristic longer identifies false
dead ends created approach used sapa   limitation heuristic
forced separation start end action  ordering constraint 
crikey    coles  fox  long et al       a   heuristic constructed combine
strengths earlier heuristics  accounting durations actions  whilst
respecting startend semantics  briefly describe construction trpg  since
basis heuristic used colin  structure trpg similar constructed
metric ff  instead fact layer assigned index  assigned time stamp
 indicating minimum amount time must pass initial layer facts
layer question appear   capture durations actions  record  end action aa  
earliest layer tmin  aa   appear  value set   actions already
executing state evaluated  as need first insert start action
rpg   actions  value initialised   commencing trpg construction 
build trpg follow algorithm    first  number initialisation steps performed 
time zero fact layer fl     initialised  at line    contain facts true      set
ea initialised contain end snap actions must appear trpg action
executing  end reachable  i e  appear trpg   else state dead end 
ea empty  satisfies goals g  line      trpg need built  since plan
complete 
following initialisation  trpg expanded  beginning     using fact layer
f l t  determine action layer al t   preconditions action satisfied fact layer
    simplicity omit handling numeric fluents explanation performed exactly
earlier description rpg heuristic implemented metric ff 

  

fic olin   p lanning c ontinuous c hange

algorithm    building temporal rpg crikey   
data    hf  e    state evaluated
result  r   hfls  alsi  relaxed planning graph
  fl     f  
  fls hfl    i 
  als h i 
    
  ea  
  prev al  
  prev fl fl     
  foreach aa
 
 e e   e op   a   
  
tmin  aa    
  
else
  
tmin  aa     
  
ea ea  aa   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

g fl     ea   return goal state 
 
fl  t     prev fl  
al  t   aa   pre aa   fl  t  tmin  aa   t  
foreach aa al  t  prev al
fl  t     fl  t     eff    aa   
al  t  al  t   a    pre a    fl  t   
foreach a  al  t  prev al
fl  t     fl  t     eff    a    
tmin  aa     min tmin  aa      dmin a   
als als   al  t  
fls fls   fls t     
prev al al  t  
g fl  t     ea al  t 
return r   hfls  alsi 
prev fl    fl  t    
prev fl fl  t     
   
else
prev fl fl  t     
ep    tmin  aa     pre aa   fl  t  tmin  aa     t  
ep    min ep  
else  
return dead end 

  

fic oles   c oles   f ox   l ong

fl  t  whether appear al  t  depends whether start end snap action 
first simpler case  line     that  start snap action a  applicable  added al  t 
tmin  aa   set   dmin a   dmin a  priori lower bound duration
a  state independent measure minimum duration a  i e  minimum duration
constraint referring constants  taken value dmin a   otherwise 
minimum duration constraints depends state action applied 
dmin a      certain time must elapse start end
action  state dependent terms cannot evaluated since trpg determines relaxed state 
real state 
second case  covering end snap actions  preconditions end action aa
become satisfied fact layer fl  t   addition aa al  t  depends whether start
action occurred sufficiently far past  line      tmin  aa   aa added
al t     tmin  aa       aa postponed al tmin  aa     otherwise  start
action yet appear  aa postponed relevant start appears 
determined actions newly appear al  t   fact layer fl  t     updated
non temporal rpg case  taking fl  t   optimistically  applying effects
actions al  t   f l t     al t  contain necessary goals end snap actions
 line     must decided fact layer consider next  clearly  infeasible create
new fact layers spacing fl     fact layer goals appear  fortunately 
unnecessary  many fact action layers graph would identical 
instead  determine next fact layer consider follows 
new facts fl  t   true fl  t   line      next layer expand
fl  t     appearance new potentially useful facts makes necessary consider
whether actions become applicable layer 
fl  t       fl  t   know visiting fl  t     futile  case  line     
time stamp next fact layer visit earliest future point postponed
end action becomes applicable 
min tmin  aa     pre aa   f l t  tmin  aa     t 
minimum values  or undefined  state pruned
procedure exits early  signalling result search procedure 
trpg successfully constructed  that is  starting state dead end  graph
returned contains finite set fact action layers  associated real time value 
assuming graph expansion terminates goals reached  relaxed solution extracted 
solution extraction procedure used metric ff needs one minor modification suitable
use trpg  end action aa chosen support goal given fact layer 
action already executing state evaluated  corresponding start a  must
scheduled selection  at layer first appeared   purpose corresponds
dummy facts crikey  end action chosen  start must executed 
final remark trpg  timed initial literals  tils  included employing
machinery introduced delay ends actions appropriate layer  dummy til
actions  tilj    tilm   yet applied tmin  tilj          since tilj could applied
first action layer  intuition state evaluated snapshot world 
  

fic olin   p lanning c ontinuous c hange

taken earlier end previous action  later point
next til event occurs  due constraints discussed section       minimum timestamps
later tils  tilk  tilj      tilm    set relative time point 
tmin  tilk     ts tilk   ts tilj   

appendix d  post hoc plan optimisation
appendix contains details milp construction briefly described section      
d   optimising time windows
first let us consider simple case action conditional effect metric tracking
variable reward  where objective problem maximise reward   effect
occurs depends truth value single proposition p time specifier ts relative
action  either start  all  end  
 when  ts  p    at end  increase  reward  k    
case p manipulated actions  without allowing milp introduce new
actions completely change order plan steps  with complexity modifications
would entail   little scope optimisation  case truth value p dictated
timed initial literals  tils   interesting case  changing time stamps
start end  lp variables step step j    condition satisfied 
direct effect metric function  relationship encoded within lp  way
example  consider case p becomes true time false b  then  again  becomes
true c false d  case  two time windows could potentially satisfy
condition effect  whether action wholly partially within one
windows depends time specifier attached p 
ts  at start  a   step   lie within one time windows 
ts  at end  aa  step j   lie within one time windows 
otherwise  ts  over all  a  aa lie within one time windows 
three cases  question must answered value variable lie within
known range  case requires conjunction two conditions hold and 
two cases  one hold  given step variable step   time window  a  b  
introduce  mi lp binary variable switch ab corresponding observation 
constraints take logical form 
switch ab  step   a   step   b 
thus  switch variable takes value    time stamp point p needed must
fall within time window  a  b  vice versa  introducing two additional binary variables 
denoted ga lb  logical constraint represented series inequalities  using n
  

fic oles   c oles   f ox   l ong

denote large number  
step  a     switch ab
step    b   switch ab
step   n ga
step n lb
switch ab ga lb







 
 

b
 

first two constraints encode forwards implication  switch ab set    step
lie range  a     b    a non zero amount separation  epsilon  needed
pddl semantics avoid inspecting value p time changed
til   latter three constraints encode reverse implication  step strictly greater
strictly less b  ga lb hold value   thus  switch ab  
returning example  time specifier all  windows  a  b 
 c  d   constraints added are 
switch ab 
switch ab 
switch ab
switch cd 
switch cd 
switch cd
switch p









 step   a   step   b 
 step j   a   step j   b 
 switch ab  switch ab   
 step   c   step   d 
 step j   c   step j   d 
 switch cd  switch cd   
 switch ab switch cd  

is  switch ab   entirety action falls within  a  b   switch cd   falls
within  c  d  switch p   either hold  final switch variable used capture
benefit effect itself  holds value    increase value reward end
plan k  is  apply conditional effect  variable reward already appear
objective function form lp variable reward  n   n last step plan 
thus  modify constraints define reward  n k switch p added value 
change ensure variable providing value reward objective function
include reward k condition time executed holds 
generalising  extend case conditional effect depends truth
formula f consisting conjunction time specified propositional facts   ts  p       tsj pj    
 tsi pi   f   create constraints  indicated above  switch variable switch pi
take value   pi holds time specifier tsi   gives us list switch variables
   switch p     switch pj    then  encode fact conjunction f must hold  create
variable switch f add constraints 
j switch f     switch p            switch pj  
switch f     switch p            switch pj   j
defined thus  switch f takes value   iff switch variables takes value   
precisely case conjunct satisfied  then  much before  updating
constraint dictating value lp variable reward  n   add k switch f value 
d   optimising numeric dependent conditions
perhaps complex case time windows conditions conditional effect
depend values numeric variables domain   the pddl     definition  hoffmann
  

fic olin   p lanning c ontinuous c hange

  edelkamp        include case tils change values numeric variables    
consider case here   simple case  time specifier numeric
conditions either start end  complicated case one
time specifiers all  case  potentially  snap actions plan 
start end action condition belongs  could affect whether condition
associated effect met  must therefore check status condition
point execution action  suppose action o  stepk stepl
variables denoting start end time stamps action  conditional effect
numeric precondition lnf 
 over      w v  c    at end  increase  reward  k   
encode this  need add constraints ensure conditional outcome occurs iff w
v c times within o  since change linear   as conditions
o  need check values numeric variables immediately immediately
action time step within o  immediately following start immediately
end itself  thus  variables corresponding values v must examine
list 
 
 
  vl   
       vl    vl 
e    vk    vk     vk  
stated earlier  case start at end conditions somewhat easier  start 
e    vk    end  e    vl    irrespective time specifier  basis list e 
capture whether condition met  adding switch variable switch indicate whether
condition met vectors  switch variables  switch t     switch tn   element     s 
list e  indicating whether met single vector  constraints  where
small number  then 


w e x  n    n   c  switch

x     s 



w e x   c     n switch tx

x     s 

switch     switch t            switch ts   s 
first quantification ensures switch      lower bound c imposed w v
element e  second quantification ensures vector v index x e satisfies
w v c  corresponding switch variable switch tx take value    third
constraint ensures switch variables switch tx take value    switch must  too  set
   appropriately constrained switch variable update constraint governing
value lp variable reward  n  the value reward end plan  increase
value k switch 
d   optimising time dependent conditions
final extension allow conditional effects refer truth values timed
propositions  values numeric variables  value duration action 
    timed initial fluents used domain models  unofficial extension language 
semantics extension straightforward timed initial literals 

  

fic oles   c oles   f ox   l ong

situation appears example airplane landing problem  section       value
 total cost  updated conditional effect  condition effect depend
 duration  consider example order show milp extended
handle updates  first  previous cases  need add constraints ensure
milp solver chooses obtain conditioned outcome conditioned effect  condition
must met  so  example  introduce new variable binary switch variable
condition  new constraints  land action plane  p  starting finishing
time stamps action step n step respectively  add pair constrained switch variables 
sake example give meaningful names early late  constraints
added lp then 
target p step   step n
step step n
target p   step step n
step step n






n early
n  n   target p  early
n late
 target p     late

new constraints ensure plane lands early  variable early take value
   vice versa  similarly  lands late  late must take value   vice versa  case
example  conditional effects action mutually exclusive  though true
general case 
defined early late switch variables  objective function milp must
augmented reflect conditional outcomes action  two terms must added one
switch variable effect obtained switch variable    abbreviating terms
earlypenaltyrate  latepenaltyrate latepenalty epr  lpr lp  respectively 
objective terms plane p are 
early  epr p   target p  step step n   
late  lpr p    step step n   target p    late  lp p 
note unlike previous cases  objective function quadratic  objective
contains terms switch variable multiplied constant step variable 
arises as  unlike previous cases  conditional effect duration dependent fixed  constant value k  whilst raises computational cost optimising milp  cost acceptable  incurred once  solution plan found 

appendix e  details empirical evaluation colin
graphs presented show detailed runtime quality comparisons analysed section     comparative data graphed  since graphs sometimes superimpose curves one
another  making difficult see colin performing  tables     show raw time
quality results colin compared average best times qualities problems  best
times qualities reported corresponding quality time  respectively 
solution  planner s  generated best result 

  

fic olin   p lanning c ontinuous c hange

depots simple time
    

   

   

  

time  s 

time  s 

driverlog simple time
    

colin
lpg td
lpg s
sapa
temp baseline

  

 

 

   

   

    

colin
lpg td
lpg s
sapa
temp baseline

    
 

  
problem number

  

  

 

 

 

rovers simple time
   

  

time  s 

time  s 

  
  
problem number

  

  

  

  

  

  

  

  

satellite simple time
   

colin
lpg td
lpg s
sapa
temp baseline

  

 

 

   

colin
lpg td
lpg s
sapa
temp baseline

 

   

    

    
 

 

 

 

  
  
problem number

  

  

  

  

  

  

  

  

 

 

 

 

  
  
problem number

zeno simple time
     

    

colin
lpg td
lpg s
sapa
temp baseline

time  s 

   

  

 

   

    
 

 

 

 

  
  
problem number

figure     comparison time taken solve problems various simple temporal planning benchmarks planners colin  lpg td  lpg s  sapa temporal baseline planner 
planners appearing particular dataset solve problems
collection 

  

fic oles   c oles   f ox   l ong

depots simple time
   

driverlog simple time
    

colin
lpg td
lpg s
sapa
temp baseline

   

    

    
makespan

   
makespan

colin
lpg td
lpg s
sapa
temp baseline

   

    

   

    

   

   

 

 
 

  
problem number

  

  

 

 

 

rovers simple time
   

   

   

makespan

makespan

   

  
  
problem number

  

  

  

  

  

  

  

  

satellite simple time
   

colin
lpg td
lpg s
sapa
temp baseline

   

 

   
   

colin
lpg td
lpg s
sapa
temp baseline

   

   

   
   
  
 

 
 

 

 

 

  
  
problem number

  

  

  

  

  

  

  

  

 

 

 

 

  
  
problem number

zeno simple time
    
    

colin
lpg td
lpg s
sapa
temp baseline

makespan

    
    
    
    
    
 
 

 

 

 

  
  
problem number

figure     comparison plan quality problems various simple temporal planning benchmarks planners colin  lpg td  lpg s  sapa temporal baseline planner 
planners appearing particular dataset solve problems
collection 

  

fic olin   p lanning c ontinuous c hange

depots time
   

driverlog time
     

colin
lpg td
lpg s
sapa
temp baseline

  

colin
lpg td
lpg s
sapa
temp baseline

    

time  s 

time  s 

   

 

  

 
   
   

    

    
 

  
problem number

  

  

 

 

 

 

rovers time
   

  

  

  

  

  

  

  

  

satellite time
    

colin
lpg td
lpg s
sapa

   

time  s 

  

time  s 

  
  
problem number

 

colin
lpg td
lpg s
sapa
temp baseline

  

 
   
   

    

    
 

 

 

 

  
  
problem number

  

  

  

  

 

 

 

 

  
  
problem number

figure     comparison time taken solve problems complex temporal planning benchmarks  first set  planners colin  lpg td  lpg s  sapa temporal baseline
planner  planners appearing particular dataset solve problems
collection 

  

fic oles   c oles   f ox   l ong

zeno time
    

airport strips temporal
    

colin
lpg td
lpg s
sapa

   

   

time  s 

  

time  s 

colin
lpg td
lpg s
temp baseline

  

 

 

   

   

    

    
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  

pipes no tankage temporal
     

    

  

  

  

  

  

  

  

  

pipes tankage temporal
     

colin
lpg td
lpg s
temp baseline

    

colin
lpg td
lpg s
temp baseline

   
time  s 

   
time  s 

  
  
  
problem number

  

  

 

 

   

   

    

    
 

  

  

  
  
  
problem number

  

  

  

  

 

  

  

  
  
  
problem number

figure     comparison time taken solve problems complex temporal planning benchmarks  second set  planners colin  lpg td  lpg s  sapa temporal baseline
planner  planners appearing particular dataset solve problems
collection 

  

fic olin   p lanning c ontinuous c hange

depots time
    

driverlog time

colin
lpg td
lpg s
sapa
temp baseline

    

    
    

colin
lpg td
lpg s
sapa
temp baseline

makespan

makespan

    

    

    
    
    

   

    
 

 
 

 

 

 

  
  
problem number

  

  

  

  

 

 

 

 

rovers time
   

    

   

    

   

    

makespan

makespan

  

  

  

  

  

  

  

  

satellite time
    

colin
lpg td
lpg s
sapa

   

  
  
problem number

   

   

   

   

   

   

   

   

 

colin
lpg td
lpg s
sapa
temp baseline

 
 

 

 

 

  
  
problem number

  

  

  

  

 

 

 

 

  
  
problem number

figure     comparison plan quality complex temporal planning benchmarks  first set 
planners colin  lpg td  lpg s  sapa temporal baseline planner  planners
appearing particular dataset solve problems collection 

  

fic oles   c oles   f ox   l ong

zeno time
   

airport strips temporal
    

colin
lpg td
lpg s
sapa

   

   

colin
lpg td
lpg s
temp baseline

   

makespan

makespan

   

   
   

   

   

   
   
  
 

 
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  

pipes no tankage temporal
   
   

  

  

  

  

  

  

  

  

pipes tankage temporal

colin
lpg td
lpg s
temp baseline

   
   

colin
lpg td
lpg s
temp baseline

   
makespan

   
makespan

  
  
  
problem number

  
  

  
  

  

  

  

  

 

 
 

  

  

  
  
  
problem number

  

  

  

  

 

  

  

  
  
  
problem number

figure     comparison plan quality complex temporal planning benchmarks  second
set  planners colin  lpg td  lpg s  sapa temporal baseline planner  planners appearing particular dataset solve problems collection 

  

fic olin   p lanning c ontinuous c hange

colin

time
quality
depotssimpletime
 
    
      
 
    
      
 
             
 
     
      
 
 
 
    
      
 
 
  
    
      
  
  
  
    
      
  
  
  
    
      
  
    
      
  
  
  
  
    
      
  
driverlogsimpletime
 
    
      
 
    
       
 
    
      
 
    
       
 
    
       
 
    
       
 
    
      
 
    
       
 
    
       
  
    
      
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
  
  
  
  

average
time
quality

best
time

planner

quality

planner

lpg  td tbl

            
              
             
            
              
                
             
             
              
             
              
              
             
             
              
             
               
              
             
               
             
                

lpg  s td

             
              
             
             
             
              
            
              
              
              
              
            
              
              
                
                
               
              
                
              

lpg  s

     
     
     
     
     
       
     
     
     
     
     
     
     
     
     
     
     
     
     
      
      
      

      
      
       
      
       
       
      
      
       
      
       
       
      
      
       
      
      
       
       
       
      
       

            
            
             
             
              
              
            
              
              
           
              
              
            
           
              
            
             
             
             
              
            
              

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
       
     
      
      
     

      
       
      
       
      
      
      
       
       
      
       
       
       
       
       
        
       
       
        
       

           
             
            
             
            
             
            
             
             
            
             
            
              
              
             
                
               
               
                
              

tbl
lpg  td
lpg  td
lpg  td
lpg  td
tbl
lpg  td
lpg  td
tbl
lpg  td
lpg  td
tbl
tbl
lpg  td
tbl
lpg  td
tbl
tbl
lpg  td
tbl
lpg  td
tbl
lpg  td tbl
lpg  s tbl

tbl
lpg  td tbl
lpg  td
tbl
tbl
lpg  td tbl
tbl
tbl
tbl
lpg  td
lpg  td
tbl
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td

sapa
lpg  s

tbl
lpg  td
lpg  s
lpg  s
lpg  s
lpg  td
lpg  td
lpg  td
lpg  td
lpg  s
lpg  s
lpg  td
lpg  td

sapa
lpg  td
lpg  td
lpg  s
lpg  td
lpg  s

lpg  s

sapa
lpg  s

sapa
sapa
sapa
sapa
lpg  s
sapa
sapa
tbl
lpg  s
sapa
sapa
lpg  td
lpg  s
tbl
lpg  td
lpg  td

table    results simple domains  best results show best time  corresponding quality 
planner s  achieved time best quality  corresponding time  planner s 
achieving quality  tbl temporal baseline planner following tables 

  

fic oles   c oles   f ox   l ong

colin

time
quality
roverssimpletime
 
    
      
 
    
      
 
    
     
 
    
      
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
satellitesimpletime
 
    
      
 
    
      
 
    
     
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
  
    
       
  
    
       
  
    
       
  
             
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
             
  

average
time
quality

best
time

planner

quality

planner

tbl
tbl
lpg  td
tbl
lpg  td tbl
lpg  td
tbl
tbl
lpg  td tbl
tbl
tbl
tbl
tbl
tbl
tbl
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td

             
             
                
                 
             
             
             
             
                 
              
              
             
                 
              
                 
                
                
             
            
              

colin

tbl

             
             
             
             
             
            
             
             
             
             
             
             
             
             
             
             
             
             
              
               

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

      
      
      
      
       
       
      
       
       
       
       
       
       
       
       
       
       
       
       
       

           
            
            
            
             
              
            
             
              
             
             
            
             
             
             
              
              
             
              
              

     
     
     
     
     
     
     
     
     
     
     
     
     
     
      
      
      
     
     
     

      
      
      
      
      
      
      
      
      
      
      
       
       
       
       
       
       
      
       
       

           
             
            
             
            
            
            
             
             
             
             
             
             
             
              
              
              
             
              
              

colin  tbl

tbl
lpg  td tbl
tbl
tbl
tbl
lpg  td tbl
lpg  td tbl
lpg  td
lpg  td tbl
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td

lpg  s

sapa
sapa
tbl
tbl
lpg  s
tbl
sapa
sapa
colin

sapa
sapa
lpg  td
sapa
sapa
sapa
tbl
tbl
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  s

tbl
lpg  s
lpg  td
lpg  s
lpg  td
lpg  td
lpg  td
lpg  s
lpg  td
lpg  s
lpg  s
lpg  s
lpg  s
lpg  s

sapa

table    results simple domains  best results show best time  corresponding quality 
planner s  achieved time best quality  corresponding time  planner s 
achieving quality 

  

fic olin   p lanning c ontinuous c hange

colin

time
zenosimpletime
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
  
    
  
    
  
   
  
    
  
  
     
  
      
  
      
  
  
     
  
     

quality
       
       
       
       
       
       
       
       
        
        
       
        
       
        
        
        
        
        

average
time
quality
     
     
     
     
     
     
     
     
     
     
     
     
     
       
      
       
       
      
      
      

       
       
       
        
       
        
        
       
        
        
       
        
        
        
        
        
        
        
        
        

best
time

planner

quality

planner

         
             
             
              
            
             
             
             
             
             
            
              
             
             
              
              
              
             
              
             

tbl
tbl
tbl
lpg  td tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl
tbl

              
              
             
              
            
             
             
             
             
             
               
                
             
                   
              
              
              
                 
              
             

colin
colin

tbl
colin

tbl
tbl
tbl
tbl
tbl
tbl
sapa
sapa
tbl
sapa
tbl
tbl
tbl
lpg  s
tbl
tbl

table    results simple domains  best results show best time  corresponding quality 
planner s  achieved time best quality  corresponding time  planner s 
achieving quality 

  

fic oles   c oles   f ox   l ong

colin

time
quality
airportstripstemporal
 
    
      
 
    
       
 
    
       
 
    
       
 
    
      
 
    
      
 
    
      
 
    
       
 
    
       
  
    
       
  
    
      
  
    
       
  
    
       
  
    
       
  
    
       
  
    
       
  
             
  
             
  
             
  
  
     
     
  
             
  
             
  
             
  
             
  
  
  
  
  
  
  
  
  
  
  
             
  
             
  
             
  
  
  
             
  
  
  
  

average
time
quality
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
      
       
      
      
     
     
     
      
      
     
      
      
     
     
       
      
      
      
      
      
      
       
      
      
       
      
       
       

      
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

best
time
            
              
             
             
            
             
             
            
              
             
            
             
             
             
             
              
              
              
              
              
             
             
             
             
              
              
             
              
              
              
              
              
               
               
               
              
               
              
                
                
               
                
               
                
                

planner

quality

planner

tbl

             
              
              
              
              
              
              
              
              
              
              
             
              
             
             
             
            
              
              
              
              
             
                 
                 
              
               
          
               
               
              
              
               
               
               
               
              
                 
                 
                
          
                 
                
               
                
                

lgp  td

lgp  td tbl

tbl
tbl
tbl
tbl
tbl
tbl
lgp  td
tbl
tbl
tbl
tbl
tbl
tbl
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
tbl
tbl
tbl
tbl
lgp  td
lgp  td
tbl
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td

lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td

tbl
lgp  s

tbl
tbl
tbl
tbl
tbl
lgp  td
tbl
lgp  td
tbl
lgp  s
lgp  s
tbl
tbl
lgp  s
tbl
tbl
lgp  td
lgp  td
tbl
lgp  td
lgp  td
lgp  td
lgp  td
lgp  s
lgp  s
lgp  td
lgp  s
lgp  s
lgp  td
lgp  td
lgp  td
lgp  td

table    results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

fic olin   p lanning c ontinuous c hange

colin

time
quality
depotstime
 
    
      
 
    
     
 
 
     
       
 
 
 
     
       
 
 
  
     
       
  
  
  
    
       
  
  
  
    
      
  
  
  
  
  
    
      
  
driverlogtime
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
 
    
       
  
    
       
  
    
       
  
    
        
  
    
        
  
    
       
  
    
       
  
  
  
  
  

average
time
quality

best
time

planner

quality

planner

tbl
tbl
tbl
lgp  td
lgp  td
lgp  td
tbl
lgp  td tbl
lgp  td
tbl
lgp  td
lgp  td
tbl
tbl
lgp  td
tbl
tbl
lgp  td
tbl
lgp  td
tbl
lgp  td

             
             
              
              
              
              
              
              
              
                
              
              
              
              
              
             
           
              
              
              
               
              

lgp  td

tbl

          
               
               
              
               
          
            
               
          
               
              
                  
               
              
              
                
           
               
            
                

lgp  td

     
     
     
      
     
     
     
     
     
      
     
     
     
     
     
     
     
     
     
     
     
      

      
      
       
       
       
       
       
       
        
       
       
       
      
       
       
      
      
       
       
       
      
       

              
              
              
              
               
              
              
               
                
              
               
               
              
              
               
              
            
               
              
                
              
               

     
     
     
     
     
     
     
     
     
     
     
       
     
     
      
      
     
      
       
      

       
       
       
       
       
       
       
       
       
       
       
        
        
        
       
        
        
        
        
        

             
             
             
             
             
          
            
             
          
             
             
             
          
           
             
                 
           
            
            
            

lgp  td tbl

tbl
tbl
tbl
lgp  td
lgp  td tbl
tbl
lgp  td
tbl
tbl
tbl
lgp  td
lgp  td
tbl
lgp  s
lgp  td
lgp  td
lgp  td
lgp  td

lgp  td

tbl
lgp  td

tbl
lgp  td
lgp  s
lgp  td

tbl
sapa
lgp  s
lgp  s
sapa
lgp  s
lgp  s
lgp  s
lgp  td
tbl
lgp  s
lgp  s
sapa
lgp  td

sapa
sapa
lgp  s
sapa
lgp  td
tbl
sapa
lgp  td
sapa
sapa
sapa
sapa
sapa
colin
lgp  s
lgp  td

tbl
lgp  td
lgp  s

table     results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

fic oles   c oles   f ox   l ong

colin

time
quality
pipesnotankagetemporal
 
    
     
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
 
    
      
  
    
      
  
    
      
  
    
      
  
    
      
  
    
      
  
    
      
  
    
     
  
    
      
  
    
      
  
    
     
  
    
      
  
    
     
  
  
    
      
  
     
      
  
  
    
      
  
    
      
  
    
      
  
    
      
  
  
    
      
  
     
      
  
     
      
  
     
      
  
  
  
  
  
    
      
  
  
      
    
  
  

average
time
quality
     
     
     
     
     
     
     
     
     
     
       
       
     
     
     
     
     
     
     
     
     
     
     
      
     
     
     
      
     
     
     
     
      
      
      
      
      
      
     
      
      
       
      

     
      
      
      
      
      
      
      
      
      
     
      
      
      
      
      
      
      
     
      
     
      
      
       
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
     
      
      

time
           
            
            
            
             
            
            
             
            
            
           
            
            
             
            
             
           
            
           
           
           
           
             
               
             
            
             
             
            
            
              
            
              
                
              
                
              
              
            
              
           
            
             

best
planner
tbl
tbl
tbl
tbl
lgp  td tbl
tbl
tbl
lgp  td
tbl
tbl
tbl
tbl
tbl
lgp  td
tbl
lgp  td
tbl
tbl
tbl
colin

tbl
tbl
colin
lgp  td
lgp  td

tbl
colin
colin

tbl
tbl
tbl
tbl
colin

tbl
lgp  td
tbl
lgp  td
tbl
tbl
lgp  td
tbl
tbl
tbl

quality

planner

            
             
             
            
             
             
             
             
            
             
           
                
            
            
             
            
              
             
           
               
            
           
             
              
            
             
            
             
            
            
             
            
              
                
         
               
              
               
            
              
            
            
             

lgp  td
colin
colin

tbl
lgp  td
colin
colin
lgp  s

tbl
colin

tbl
lgp  s

tbl
tbl
colin

tbl
lgp  s
colin

tbl
lgp  s
lgp  td

tbl
colin
colin

tbl
lgp  td

tbl
colin

tbl
tbl
lgp  td
tbl
colin

tbl
lgp  s
lgp  td
lgp  td
lgp  td

tbl
lgp  td
lgp  td

tbl
tbl

table     results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

fic olin   p lanning c ontinuous c hange

colin

time
quality
pipestankagetemporal
 
    
     
 
    
      
 
    
      
 
    
      
 
    
      
 
    
     
 
    
      
 
    
      
 
  
    
     
  
    
      
  
  
    
     
  
     
      
  
     
      
  
  
     
      
  
     
      
  
    
      
  
  
  
  
     
      
  
      
      
  
     
      
  
    
      
  
      
      
  
     
      
  
      
      
  
  
  
      
      
  
  
    
      
  
     
      
  
      
    
  
  
     
      

average
time
quality
     
     
     
     
     
     
     
     
       
      
       
      
     
       
      
        
       
       
       
     
      
      
       
       
       
     
       
       
       
       
       
       
       
       
      
       
      
      

     
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
     
      
      

time
           
           
            
            
            
            
            
             
              
            
             
             
            
            
              
                
              
             
             
            
              
              
              
                
              
             
               
              
              
                
                  
             
               
             
              
            
             
              

best
planner
tbl
tbl
tbl
tbl
tbl
tbl
tbl
colin
lgp  td

tbl
colin
lgp  td
colin

tbl
colin
lgp  td
colin

tbl
colin

tbl
lgp  td
lgp  td
colin
lgp  td
colin
colin
colin
colin

tbl
tbl
tbl
tbl
lgp  td
colin
colin

tbl
tbl
colin

quality

planner

            
           
             
            
             
            
             
             
            
            
                
             
              
                
             
                
              
             
             
            
              
              
              
              
              
             
               
              
               
                
                  
               
               
             
              
             
             
              

lgp  s

tbl
colin

tbl
colin

tbl
lgp  td
colin

tbl
colin
lgp  s

tbl
lgp  td
lgp  td

tbl
lgp  td
colin

tbl
colin
tbl
tbl
lgp  td
colin

tbl
tbl
colin
colin
colin
lgp  td
lgp  td

tbl
colin
lgp  td
colin
colin
colin

tbl
colin

table     results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

fic oles   c oles   f ox   l ong

colin

time
roverstime
 
    
 
    
 
    
 
    
 
    
 
     
 
    
 
    
 
  
    
  
    
  
    
  
  
  
  
  
    
  
    
  
  
     
satellitetime
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
  
    
  
    
  
    
  
     
  
    
  
    
  
     
  
     
  
    
  
     
  

quality
      
      
     
      
       
       
       
       
       
       
       

       
       
       
       
       
      
      
      
      
       
       
      
       
       
       
       
      
       
       
      
       
       

average
time
quality

best
time

planner

quality

planner

lgp  td

               
              
            
         
              
               
                 
          
               
                 
              
                  
               
               
               
          
              
               
               
               

colin

     
     
     
     
     
      
     
     
     
     
     
     
     
     
     
     
     
     
     
      

      
      
      
      
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

         
             
         
         
            
              
               
          
          
               
            
               
               
               
               
          
              
               
               
               

     
     
     
     
     
     
     
     
     
     
     
     
      
      
      
      
      
     
      
      

       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

             
             
             
             
              
             
             
              
               
              
              
               
              
              
               
               
              
              
              
              

colin
lgp  td
lgp  s  lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  s  lgp  td tbl
lgp  td
colin  tbl

tbl
tbl
tbl
tbl
tbl
lgp  td tbl
lgp  td
tbl
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
lgp  td
tbl
lgp  td
lgp  td

              
              
             
             
                 
             
              
              
             
              
              
              
               
             
               
               
              
              
              
                   

lgp  s
colin
lgp  td

sapa
colin

sapa
lgp  td
lgp  s

sapa
colin

sapa
lgp  s
lgp  s
lgp  td
lgp  td
colin
lgp  td
lgp  td
colin
colin
colin
colin
colin

sapa
colin
colin
colin
colin
lgp  td
colin
colin
colin
colin
lgp  s
colin
colin
colin
lgp  td

table     results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

sapa

fic olin   p lanning c ontinuous c hange

colin

time
zenotime
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
  
    
  
    
  
     
  
    
  
      
  
    
  
      
  
      
  
      
  
  

quality
     
      
      
      
     
      
     
      
      
      
      
      
      
       
       
       
      
      

average
time
quality
     
     
     
     
     
     
     
     
     
     
     
     
     
       
     
      
       
      
      
      

     
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
       
      
       
      

best
time

planner

quality

planner

           
           
              
             
              
              
              
              
              
              
              
              
              
              
               
             
               
              
               
               

colin   lpg  td

            
             
             
             
            
             
             
             
              
             
              
              
             
                
               
               
               
             
                
              

lpg  td

colin   lpg  td
lpg  td
lpg  s
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td
lpg  td

lpg  td
colin
colin
colin

sapa
lpg  s
lpg  td

sapa
lpg  s

sapa
sapa
lpg  td
sapa
sapa
sapa
colin
lpg  td
lpg  s
lpg  td

table     results complex domains  best results show best time  corresponding quality  planner s  achieved time best quality  corresponding time 
planner s  achieving quality 

  

fic oles   c oles   f ox   l ong

references
audemard  g   bertoli  p   cimatti  a   kornilowicz  a     sebastiani  r          sat based approach solving formulas boolean linear mathematical propositions  proceedings   th international conference automated deduction  vol        pp         
springer verlag  lnai series 
blum  a     furst  m          fast planning planning graph analysis  proceedings
international joint conference artificial inteligence  ijcai  
boddy  m  s     johnson  d  p          new method global solution large systems continuous constraints  proceedings  st international workshop global
constraint optimization constraint satisfaction  cocos   vol       lecture notes
computer science  pp          springer 
cesta  a     oddi  a          gaining efficiency flexibility simple temporal problem 
proceedings  rd international workshop temporal representation reasoning
 time  
cesta  a   cortellessa  g   fratini  s     oddi  a          developing end to end planning
application timeline representation framework  proceedings   st conference
innovative applications artificial intelligence  ia ai  
chien  s  a   tran  d   rabideau  g   schaffer  s  r   mandl  d     frye  s          timeline based
space operations scheduling external constraints  proceedings international
conference ai planning scheduling  icaps   pp       
cimatti  a   giunchiglia  f   giunchiglia  e     traverso  p          planning via model checking 
decision procedure r  recent advances ai planning   th european conference
planning  ecp  pp         
coles  a  i   fox  m   halsey  k   long  d     smith  a  j          managing concurrency
temporal planning using planner scheduler interaction  artificial intelligence           
coles  a  i   fox  m   long  d     smith  a  j       a   planning problems requiring temporal
coordination  proceedings   rd aaai conference artificial intelligence  aaai
    
coles  a  i   fox  m   long  d     smith  a  j       b   hybrid relaxed planning graphlp
heuristic numeric planning domains  proceedings   th international conference automated planning scheduling  icaps   pp       
coles  a  j   coles  a  i   fox  m     long  d       a   extending use inference temporal planning forwards search  proceedings   th international conference
automated planning scheduling  icaps     
coles  a  j   coles  a  i   fox  m     long  d       b   temporal planning domains linear
processes  proceedings   st international joint conference artificial intelligence
 ijcai   aaai press 
cushing  w   kambhampati  s   mausam    weld  d          temporal planning really
temporal planning   proceedings international joint conference ai  ijcai   pp 
         
  

fic olin   p lanning c ontinuous c hange

dechter  r   meiri  i     pearl  j          temporal constraint networks  proceedings principles knowledge representation reasoning  kr   pp        toronto  canada 
dierks  h          finding optimal plans domains restricted continuous effects
uppaal cora  icaps workshop verification validation model based planning
scheduling systems 
do  m  b     kambhampati  s          sapa  multi objective metric temporal planner  journal
artificial intelligence research  jair              
edelkamp  s          taming numbers durations model checking integrated planning
system  journal artificial intelligence research  jair              
edelkamp  s     jabbar  s          cost optimal external planning  proceedings   st
national  american  conference artificial intelligence  aaai   aaai press 
eyerich  p   mattmuller  r     roger  g          using context enhanced additive heuristic
temporal numeric planning  proceedings   th international conference
automated planning scheduling  icaps        aaai press 
fox  m     long  d          pddl     extension pddl expressing temporal planning
domains  journal artificial intelligence research  jair             
fox  m     long  d          modelling mixed discrete continuous domains planning  journal
artificial intelligence research  jair              
fox  m   howey  r     long  d          validating plans context processes exogenous
events  proceedings   th national conference artificial intelligence   th
innovative applications artificial intelligence conference  aaai   pp           
fox  m   long  d     halsey  k          investigation expressive power pddl    
proceedings   th european conference artificial intelligence  ecai  
fox  m   long  d     magazzeni  d          automatic construction efficient multiple battery
usage policies  proceedings   st international conference automated planning
scheduling  icaps  
frank  j     jonsson  a  k          constraint based attribute interval planning  constraints 
             
garrido  a   fox  m     long  d          temporal planning system durative actions
pddl     proceedings   th eureopean conference artificial intelligence
 ecai   pp         
garrido  a   onainda  e     barber  f          temporal planning system time optimal
planning  proceedings   th portuguese conference artificial intelligence  pp 
        springer 
gerevini  a   saetti  a     serina  i          approach temporal planning scheduling
domains predictable exogenous events  journal artificial intelligence research
 jair              
gerevini  a   saetti  a     serina  i          temporal planning problems requiring concurrency action graphs local search  proceedings   th international
conference automated planning scheduling  icaps  
  

fic oles   c oles   f ox   l ong

gerevini  a     serina  i          fast plan adaptation planning graphs  local systematic search techniques  proceedings  th international conference artificial
intelligence planning systems  aips   pp         
ghallab  m     laruelle  h          representation control ixtet  temporal planner 
proceedings  nd international conference artificial intelligence planning systems
 aips   pp       
halsey  k          crikey   co ordination temporal planning  ph d  thesis  university
durham 
haslum  p     geffner  h          heuristic planning time resources  proceedings
 th european conference planning  ecp     pp         
haslum  p          admissible makespan estimates pddl    temporal planning  proceedings icaps workshop heuristics domain independent planning 
helmert  m          fast downward planning system  journal artificial intelligence  jair  
           
henzinger  t          theory hybrid automata  proceedings   th annual symposium logic computer science  invited tutorial   pp          ieee computer society
press 
henzinger  t   ho  p  h     wong toi  h          user guide hytech  e  brinksma 
w r  cleaveland  k g  larsen  t  margaria  b  steffen  editors  tool algorithms
construction analysis systems   tacas      volume      lecture notes
computer science  pp       
hoffmann  j          metric ff planning system  translating ignoring delete lists numeric state variables  journal artificial intelligence research  jair              
hoffmann  j     edelkamp  s          deterministic part ipc    overview  journal
artificial intelligence research  jair              
hoffmann  j     nebel  b          planning system  fast plan generation heuristic
search  journal artificial intelligence research  jair              
huang  r   chen  y     zhang  w          optimal temporally expressive planner  initial
results application p p network optimization  proceedings international
conference automated planning scheduling  icaps  
knight  r   schaffer  s     b clement         power planning international space station
domain  proceedings  th international workshop planning scheduling
space  iwpss  
lamba  n   dietz  m   johnson  d  p     boddy  m  s          method global optimization
large systems quadratic constraints  proceedings  nd international workshop
global optimization constraint satisfaction  cocos   vol       lecture notes
computer science  pp        springer 
leaute  t     williams  b          coordinating agile systems model based execution
temporal plans  proceedings   th national conference ai  aaai  
li  h     williams  b          generative systems hybrid planning based flow tubes  proc 
  th int  conf  aut  planning scheduling  icaps  
  

fic olin   p lanning c ontinuous c hange

li  h     williams  b          hybrid planning temporally extended goals sustainable
ocean observing  proceedings international conference association
advancement ai  aaai   special track sustainability ai 
long  d     fox  m       a   exploiting graphplan framework temporal planning 
proceedings   th international conference automated planning scheduling
 icaps   pp       
long  d     fox  m       b    rd international planning competition  results analysis 
journal artificial intelligence research  jair           
lougee heimer  r          common optimization interface operations research  ibm
journal research development              
mcdermott  d          reasoning autonomous processes estimated regression
planner  proceedings   th international conference automated planning
scheduling  icaps  
mcdermott  d  v               ai planning systems competition  ai magazine              
meuleau  n   benazera  e   brafman  r  i   hansen  e  a     mausam         heuristic search
approach planning continuous resources stochastic domains  journal artificial
intelligence research  jair            
palacios  h     geffner  h          compiling uncertainty away conformant planning problems
bounded width  journal artificial intelligence research  jair              
pednault  e  p  d          adl  exploring middle ground strips situation
calculus  proceedings international conference knowledge representation  kr  
pp         
pell  b   gat  e   keesing  r   muscettola  n     smith  b  d          robust periodic planning
execution autonomous spacecraft  proceedings international joint conference
ai  ijcai   pp           
penberthy  s     weld  d          temporal planning continuous change  proceedings
  th national conference ai  aaai   pp            aaai mit press 
penna  g  d   intrigila  b   magazzeni  d     mercorio  f          upmurphi  tool universal planning pddl  problems  proceedings   th international conference
automated planning scheduling  icaps        pp        aaai press 
penna  g  d   intrigila  b   magazzeni  d     mercorio  f          pddl  benchmark problem 
batch chemical plant  proceedings international conference ai planning
scheduling  icaps   pp         
reddy  s  y   frank  j  d   iatauro  m  j   boyce  m  e   kurklu  e   ai chang  m     jonsson 
a  k          planning solar array operations international space station  acm
transactions intelligent systems technology         
richter  s     westphal  m          lama planner  guiding cost based anytime planning
landmarks  journal artificial intelligence research  jair              
shin  j     davis  e          processes continuous change sat based planner  artificial
intelligence              
  

fic oles   c oles   f ox   l ong

smith  d     weld  d  s          temporal planning mutual exclusion reasoning  proceedings   th international joint conference ai  ijcai   pp         
veloso  m   perez  m     carbonell  j          nonlinear planning parallel resource allocation 
proceedings darpa workshop innovative approaches planning  scheduling
control  pp         
vidal  v     geffner  h          branching pruning  optimal temporal pocl planner based
constraint programming  artificial intelligence                 
wolfman  s     weld  d          lpsat system application resource planning 
proceedings   th international joint conference artificial intelligence  ijcai  
yi  w   larsen  k     pettersson  p          uppaal nutshell  international journal
software tools technology transfer       
younes  h  l  s     simmons  r  g          vhpop  versatile heuristic partial order planner  
journal artificial intelligence research  jair              

  


