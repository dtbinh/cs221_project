journal artificial intelligence research                  

submitted        published      

logical difference
lightweight description logic el
boris konev
michel ludwig

konev liverpool ac uk
michel ludwig liverpool ac uk

department computer science
university liverpool  uk

dirk walther

dirk walther upm es

departamento inteligencia artificial  facultad de informatica
universidad politecnica de madrid  spain

frank wolter

wolter liverpool ac uk

department computer science
university liverpool  uk

abstract
study logic based approach versioning ontologies  view  ontologies
provide answers queries vocabulary interest  difference
two versions ontology given set queries receive different answers 
investigate approach terminologies given description logic el extended
role inclusions domain range restrictions three distinct types queries 
subsumption  instance  conjunctive queries  three cases  present polynomialtime algorithms decide whether two terminologies give answers queries
given vocabulary compute succinct representation difference nonempty  present implementation  cex   developed algorithms subsumption
instance queries apply distinct versions snomed ct nci ontology 

   introduction
terminologies lightweight ontologies used provide common vocabulary
domain interest together descriptions meaning terms built
vocabulary relationships them  used areas medical
informatics  bio informatics  semantic web capture domain semantics promote interoperability  terminologies often large complex  example  widely
used medical terminology snomed ct  systematized nomenclature medicine clinical
terms  contains         term definitions  ihtsdo         another example
national cancer institute ontology  nci  consisting        axioms  golbeck  fragaso  hartel  hendler  oberhaler    parsia         engineering  maintaining 
using terminologies complex laborious task  practically unfeasible
without appropriate tool support  article  focus principled logic based
approach support terminology versioning 
dealing multiple versions information unit nothing new computing  version control well established computer technology  although modern version
control systems provide range operations including support collaborative development  branching  merging  etc   operations extend rely basic operations
c
    
ai access foundation  rights reserved 

fikonev  ludwig  walther    wolter

detecting representing differences versions  paper  focus
basic problem versioning 
need versioning support recognised ontology research community
ontology users  large number approaches tools developed 
review currently existing support ontology versioning  distinguish three approaches
describe according difference ontologies compute 
   versioning based syntactic difference  syntactic diff  
   versioning based structural difference  structural diff  
   versioning based logical difference  logical diff  
syntactic diff underlies existing version control systems used software development  conradi   westfechtel         such as  example  rcs  cvs  sccs   works
text files represents difference versions blocks text present one
version another  ignoring meta information document  observed
already work noy musen         ontology versioning cannot rely purely
syntactic diff operation since many syntactic differences  e g   order ontology axioms 
affect semantics ontologies  therefore  ontology versioning based syntactic
difference essentially limited comparing rather informal change logs  oliver  shahar 
shortliffe    musen        
structural diff extends syntactic diff taking account information
structure ontologies  suggested dealing structured hierarchical documents uml diagrams  database schemas  xml documents  see  e g  
ohst  welle    kelter        references within   ontologies  main characteristic
structural diff regards structured objects  is a taxonomy  noy   musen         set rdf triplets  klein  fensel  kiryakov    ognyanov 
      set class defining axioms  redmond  smith  drummond    tudorache       
jimenez ruiz  cuenca grau  horrocks    llavori         changes ontologies mostly
described terms structural operations  example  adding deleting class  extending class  renaming slots  moving class one place hierarchy another 
adding deleting axiom  class renaming  etc   sometimes basic logical properties
ontologies  e g   equivalence different structural forms concepts  taken
account  palma  haase  corcho    gomez perez        jimenez ruiz et al          ontology versioning based structural diff form available current ontology
editors ontology management systems either natively plugins  noy   musen 
      klein et al         jimenez ruiz et al         
though helpful  structural diff still deficiency unambiguous semantic foundation syntax dependent  moreover  tailored towards
applications ontologies based induced concept hierarchy  or mild
extension it   capture modern applications ontology based data access  obda   poggi  lembo  calvanese  giacomo  lenzerini    rosati        lutz  toman 
  wolter        ontologies used provide user oriented view data
   

fithe logical difference lightweight description logic el

make accessible via queries formulated solely language ontology without
knowledge actual structure data  
logical diff recently introduced  konev  walther    wolter       
kontchakov  wolter    zakharyaschev        completely abstracts representation ontology  here  ontology regarded set axioms formulated logical
language formal unambiguous semantics  view  ontologies provide
answers queries vocabulary interest  typical queries include subsumption
queries concepts and  ontology used access instance data  instance
conjunctive queries  logical diff motivated view  two versions ontology
give answers class queries relevant application domain  may
deemed difference regardless syntactic structural form  queries
producing different answers versions may considered characterisation
difference itself  way one can  example  define exactly differences visible
querying instance data exactly differences expressed subsumptions
concepts 
make approach work practice  least two problems addressed 
ontology languages classes queries computational complexity
even detecting two ontology versions differ certain vocabulary least
one exponential harder ontology classification sometimes undecidable 
even computational complexity increase  searching differences
ontologies within certain vocabulary requires techniques different used standard reasoning  lutz  walther    wolter        lutz
  wolter        cuenca grau  horrocks  kazakov    sattler        
set queries producing different answers two versions empty 
typically infinite and  therefore  cannot presented user such  thus 
techniques succinctly characterise elements present user
required 
aim paper provide first steps toward solutions problems
terminologies  aka classical tboxes  given description logic elhr extends
description logic el underlying owl   el profile role inclusions domain
range restrictions  baader  brandt    lutz         main contributions follows 
   argued syntax dependence regarded advantage rather deficiency
context versioning  goncalves  parsia    sattler        jimenez ruiz et al          example  jimenez ruiz et al  argue logical equivalence ontologies permissive  even
o  strongest assumption semantic point view conflicts may still exist  might
result presence incompatible annotations  statements act comments carry
logical meaning   mismatch modelling styles  example  may written simple language
owl   el profile contain    a v b u c   o  may contain    b c v a  
even though   explicit use negation disjunction means o  outside el profile 
agree jimenez ruiz et al  goncalves et al  various applications
structural rather logical difference appropriate  even syntactic diff applications ontology
versioning  practice  see logic based approaches complementary structural approaches 
interesting analysis nci versions taking account structural logical differences given
work goncalves et al 

   

fikonev  ludwig  walther    wolter

subsumption  instance  conjunctive queries  present polynomial time algorithms
decide whether two elhr  terminologies give different answers query
respective class queries given signature concept role names  note
use terms signature vocabulary synonymously  
besides polynomial time decision procedure detecting differences  develop
succinct presentation  typically infinite  difference  presentation computed polynomial time well 
present two different types polynomial time algorithms deciding existence
logical differences terminologies computing succinct representation
it  first type algorithms conceptually transparent keeps two
input terminologies separate reduces  a substantial part of  difference problem
instance checking problem abox  algorithms are  however  sufficiently
efficient large inputs  example  substantial performance problems occur
computing differences versions snomed ct joint signature since
constructed abox typically quadratic size input terminologies  second
variant algorithms  based dynamic programming  efficient practice 
developed detail acyclic elhr  terminologies 
present implementation  cex   based second type algorithms
computes succinct representation difference acyclic elhr  terminologies
concept instance query case  addition  prototype implementation
abox based algorithm used estimate efficiency 
important tool investigation  present description logics  elran
elran u u   capture subsumption differences instance query difference elhr  terminologies  result presented general elhr  tboxes can 
therefore  exploited future work versioning general elhr  tboxes 
present experiments using cex  illustrate efficiency algorithms
potential applications terminologies snomed ct nci  plugin protege
discussed  cex  extends functionality first version cex  konev  walther   
wolter        owldiff plugin  kremen  smd    kouba         implements
algorithms developed konev  walther  wolter  based snomed ct 
investigate performance abox based algorithms practice 
paper based on  extends work konev  walther  wolter        
improve readability  number proofs deferred appendix 

   preliminaries
let nc   nr   ni countably infinite mutually disjoint sets concept names  role
names  individual names  el concepts c built according rule
c   



 

 

  c ud

 

r c 

nc   r nr   c  range el concepts  set elhr  inclusions
consists
concept inclusions c v d  ran r  v ran r  u c v d 
   

fithe logical difference lightweight description logic el

concept equations c d 
role inclusions r v s 
c el concepts r  nr   elhr  tbox finite set elhr inclusions  inclusions form ran r  v ran r uc v referred range
restrictions  inclusions form r   v referred domain restrictions 
elhr  tbox called elhr  terminology concept inclusions equations
form
v c c 
ran r  v c 
r   v c 
nc r nr   c el concept c       c      u    etc  
concept name occurs left hand side  note that  concept inclusions
form r   v c  concept r   often denoted dom r   terminology acyclic
 or unfoldable  process exhaustively substituting definitions place defined
concept names terminates  example  terminology contains concept inclusion
mother v hasmother mother
acyclic  formally  consider relation concept names setting
b exists elhr  inclusion form c v c b
occurs c  terminology acyclic transitive closure  
irreflexive 
description logic  instance data represented abox assertions form   a  
a a  r a  b   a  b ni   nc   r nr   abox non empty finite
set abox assertions  said singleton abox contains exactly one abox
assertion  obj a  denote set individual names a  knowledge base k  kb 
pair  t   a  consisting tbox abox a  assertions form c a 
r a  b   a  b ni   c el concept  r nr   called instance assertions  note
instance assertions form c a  c concept name c    
occur aboxes 
semantics elhr given interpretations    i      domain
non empty set  function mapping concept name subset ai
  role name r binary relation ri   individual name
element ai   extension c concept c defined induction follows 
 i
 c u d i
 r c i
ran r i

  
  
  
  


c di
 d   e c    d  e  ri  
 d   e    e  d  ri  

satisfies
concept inclusion c v d  symbols    c v d  c di  
   

fikonev  ludwig  walther    wolter

concept equation c d  symbols    c d  c   di  
role inclusion r v s  symbols    r v s  ri si  
assertion c a   symbols    c a   ai c  
assertion r a  b   symbols    r a  b    ai   bi   ri  
say interpretation model tbox  abox a    
  a   elhr  inclusion follows tbox every model model
  symbols         used denote follows empty tbox
sometimes write r vt    r v s  instance assertion follows kb  t   a 
every individual name occurs occurs obj a  every model  t   a 
model   symbols  t   a       important ways querying elhr  tboxes
kbs
subsumption  check whether      elhr  inclusion tbox  
instance checking  check whether  t   a       instance assertion kb
 t   a  
conjunctive query answering 
define latter  call first order formula q  x  conjunctive query form
 y   x   y    conjunction expressions a t   nc   r t    t     r nr  
t  t    t  drawn ni sequences variables  x  y   let  x   x            xk   let
interpretation mapping  x  y   set  a    ai obj a  
say vector  a   a            ak  match q  x  satisfies following
conditions 
 t  ai every conjunct a t   
  t      t     ri every conjunct r t    t     
 xi     aii   k 
set    q  a  if  if  exists  a  match q  x  i  let
 t   a  kb  sequence  a members obj a  certain answer q  x 
kb  t   a   symbols  t   a     q  a      q  a   every model  t   a  
three types querying elhr  tboxes studied extensively  complexity
subsumption instance checking ptime  baader et al          combined
complexity answering boolean conjunctive queries  i e   deciding whether  t   a     q
conjunctive query q without free variables  conp complete  rosati        data
complexity ptime  rosati         information reasoners subsumption checking
elhr found work delaitre kazakov         kazakov  krotzsch 
simancik         mendez suntisrivaraporn         lutz et al         present
approach efficient conjunctive query answering elhr  
   

fithe logical difference lightweight description logic el

    normal form
often convenient consider normalised elhr  terminologies  let elhr terminology concept name  call
primitive nc     a nc   c    a nc   v c    
pseudo primitive nc    a nc   c   
note concept names occur primitive pseudo primitive  
call concept name non conjunctive pseudo primitive exists
concept form r c r c   otherwise  called conjunctive
  thus  conjunctive if  if  exists concept name b
b exist c            cn   n    c  u u cn   let x
finite set
concepts  say concept f conjunction concepts x f
form dx d  x called conjunct f and  concept name 
called atomic conjunct f   sometimes write f instead x 
elhr  terminology normalised consists elhr  inclusions following
form 
r b  f   a  b concept names f non empty conjunction
concept names every conjunct b   f non conjunctive  
e v r b  e v r    e v f   b concept name  e either concept
name  form s    ran s   f non empty conjunction concept
names every conjunct b   f non conjunctive  
following lemma shows  elhr  terminology normalised yielding
model conservative extension original terminology 
lemma    every elhr  terminology   one construct polynomial time normalised terminology   polynomial size  t   sig t   sig t            
every model exists model j     j x   x j
every x sig t    moreover    acyclic acyclic 
normalised terminologies sense defined minor modification normalised terminologies defined baader         straightforward extension
proof given baader provided appendix 
    canonical model
define canonical model  ik   elhr  knowledge bases k  ik constructed
polynomial time gives answers instance queries k  i e   ik    if 
if  k      instance assertion   construction similar canonical
model introduced lutz et al         
let sub t   denote set subconcepts concepts used   rol t   set
role names occurring   take fresh individual names xran r  d every r rol t  
sub t   set
niaux     xran r  d   r rol t   sub t    
   

fikonev  ludwig  walther    wolter

define generating interpretation wk kb k    t   a  follows 
w k
aw k
r wk

awk

   obj a  niaux  
    a obj a    k    a a    xran r  d niaux      ran r  u v a  
     a  b  obj a  obj a    s a  b     v r 
  a  xran s  d   obj a  niaux   k    s d a     v r 
  xran s  d   xran s    d    niaux niaux      ran s  u v s   d       s  v r  
   a  obj a  

path wk finite sequence d  r  d  rn dn   n    d  obj a  and    n 
wk
 di   di     ri  
  use paths wk   denote set paths wk   p paths wk   
tail p  denotes last element dn p 
canonical model ik knowledge base k restriction wk domain
elements path wk tail d  following result summarises
main properties ik  
theorem    let k    t   a  elhr  kb 
   ik model k 
   ik computed polynomial time size k 
   xran s  d ik obj a   c el concept c   ran r  
k    c a  if  if  aik c ik  
   ran s  u v c if  if  xran s  d c ik  
proof theorem   given appendix  follows point   ik gives
answers instance queries k itself 

   logical difference
section  introduce three notions logical difference tboxes
derived notion  inseparability  intuitively  logical difference two tboxes t 
t  set relevant formulas t     t      vice
versa  course  formulas relevant depends application domain  many
applications subsumptions concepts relevant  tboxes employed
access instance data  answers instance even conjunctive queries relevant
well  addition  applications large scale terminologies snomed ct
nci typically small subset vocabulary terminology relevant 
thus  meaningful notion logical difference take account formulas
given certain signature interest  signature subset nc nr  
given concept  role  concept inclusion  tbox  abox  query e  denote sig e 
signature e  is  set concept role names occurring it  call e
 concept   concept inclusion   tbox   abox   query  respectively  sig e   
similarly  el  concept c el concept sig c  elhr  inclusion
elhr  inclusion sig    
first notion logical difference introduce corresponds applications
subsumptions relevant 
   

fithe logical difference lightweight description logic el

definition     concept difference    concept difference elhr  tboxes t 
t  set cdiff  t    t    elhr  inclusions t     t       
say t  t   concept inseparable  symbols t  c
t    cdiff  t    t     
cdiff  t    t       
 concept inseparability t  t  means t  replaced t 
application concerned elhr  inclusions   following example
shows  however   concept inseparable terminologies give different answers
instance query data 
example    let t     ran r  v a    ran s  v a    b a  u a     t         r  s  b  
one show t  t   concept inseparable  however   abox  
 r a  c   s b  c    t    a     b c   t    a      b c  
take account differences tboxes relevant tboxes
used access instance data  consider  instance difference 
definition     instance difference    instance difference tboxes t  t 
set idiff  t    t    pairs form  a      abox  instance
assertion  t    a      t    a        say t  t   instance
inseparable  symbols t  t    idiff  t    t      idiff  t    t       
contrast elhr   shown lutz wolter        el tboxes
difference  concept inseparability  instance inseparability 
paper extend result elhr  tboxes without range restrictions  the proof
given corollary     
theorem    let t  t  elhr  tboxes without range restrictions signature 

t  c
t  if  if  t  t   
sometimes  instance queries sufficiently expressive  conjunctive queries
employed  case  following notion difference appropriate 
definition     query difference    query difference tboxes t  t 
set qdiff  t    t    pairs form  a  q  a     abox  q  x  conjunctive query   a tuple individual names  t    a     q  a 
 t    a      q  a   say t  t   query inseparable  symbols t  q  
qdiff  t    t      qdiff  t    t       
observed lutz wolter        already  even el  instance inseparability
imply  query inseparability  following simple example 
example    let t     a v r b   t         a  b   t  t   instance
inseparable   query inseparable  consider  abox    a a  
 query q   x b x    t    a     q  t    a      q 
   refer reader conclusion paper brief discussion claim 

   

fikonev  ludwig  walther    wolter

shown lutz wolter        example   essentially situation
difference  instance inseparability  query inseparability
el  two notions become equivalent el universal role admitted instance
queries  e g   example    conjunctive query x b x  corresponds instance query
u b a  universal role u   contrast  elhr subtle differences
instance query case 
example    let t     a v s    v r    v r     t     a v r     u r        
 a  r    r     t  t   concept  instance inseparable 
 query inseparable  show latter  let    a a   let q   x r   a  x  r   a  x   
 t    a     q  t    a      q 
seen  concept inseparability imply  instance inseparability
 instance inseparability imply  query inseparability  converse
implications  however  hold 
lemma     elhr  tboxes t  t  signatures  
t  q t 



t  t 



t  c
t   

proof  first implication follows observation every instance query
regarded conjunctive query  second implication  note first v r
cdiff  t    t       s a  b    r a  b   idiff  t    t     let c v cdiff  t    t    
one construct  abox ac individual el concepts d   
 t   ac      d   a  if  if     c v d   cf  lemma      thus  ac   d a  
idiff  t    t    
introduced three notions difference elhr  tboxes  investigate two problems   i  detect whether difference two elhr terminologies and  so   ii  represent differences 
follows assume fresh symbols used normalised form terminologies occur signature compute difference
terminologies  obtain following lemma direct corollary lemma   
lemma     elhr  terminologies t    t  normalised forms t     t  
defined lemma    following hold 
cdiff  t    t      cdiff  t     t     
idiff  t    t      idiff  t     t     
qdiff  t    t      qdiff  t     t     
on  unless stated otherwise  consider normalised terminologies only 
   

fithe logical difference lightweight description logic el

   case el terminologies
investigating logical difference elhr  terminologies  illustrate main
ideas behind proofs considering  concept difference el terminologies 
el terminology elhr  terminology consisting el inclusions only  is  concept
inclusions form v c concept equations form c  start
observation even acyclic el terminologies t  t  cdiff  t    t   
contains inclusions least exponential size only  thus  searching witness
inclusions cdiff  t    t     one deal case witness inclusions
least exponential size 
example     consider
t     a  v b    a  bn    bi   r bi u s bi       n 
t     a  v f     fi v r fi   u s fi         n 
   a    a    r  s   concept inclusion cdiff  t    t    minimal size given
cn v a   
c    a  ci     r ci u s ci     
clearly  cn exponential size  note  however  use structure sharing define
size cn number subconcepts  cn polynomial size 
derive basic properties el terminologies using sequent calculus 
    proof system el
derive basic properties el gentzen style sequent calculus presented hofmann         see figure    calculus operates sequents form c v d 
c  el concepts  symbol v treated syntactic separator  derivation
 or  equivalently  proof   sequent c v finite rooted tree whose nodes labelled
sequents  whose root labelled c v d  whose leaves labelled axioms
 instances ax axtop  whose internal nodes labelled result
application one inference rules labels children  length
derivation number rule applications derivation 
example     let    a b  ub    f v b     derivation sequent r  f ub    v
r a shown below  root derivation labelled r  f u b    v r a
two leaves b  v b  b  v b    respectively 
 ax 

b  v b 
 pdefl 
 ax 
f v b 
b  v b 
 andl  
 andl  
f u b  v b 
f u b  v b 
 andr 
f u b  v b  u b 
 defr 
f u b  v
 ex 
r  f u b    v r a
   

fikonev  ludwig  walther    wolter

cvc

 ax 

cv 

 axtop 

cve
 andl  
c ud

cve cvd
 andr 
c vdue
ca v
 defl 
avd

cvd
 ex 
r c v r d

v ca
 defr 
dva

ca v
 pdefl 
avd

dve
 andl  
c ud

ca

v ca

figure    gentzen style proof system el terminologies 
notice basic calculus hofmann        considers el without constant  
terminologies without concept inclusions  take care    added
rule  axtop    pdefl  rule representing inclusions form v c  cutelimination  completeness  correctness shown straightforward extension
proof given hofmann 
terminology concepts c  d  write   c v if  if  exists
proof c v calculus figure   
theorem     hofmann   el terminologies concepts c  d  holds
   c v if  if    c v d 
apply calculus derive description syntactic form concepts c
   c v d  non conjunctive  
lemma     let normalised el terminology  r role name  concept name
el concept 
   assume
  

l

ai u

 in

l

rj  cj v a 

 jm

pseudo primitive   ai concept names   n  cj elconcepts   j m  m  n    exists ai     n 
   ai v a 
   assume
  

l
 in

l

ai u

rj  cj v r d 

 jm

ai concept names   n  cj el concepts   j m 
m  n   
exists ai     n     ai v r d
exists rj     j m  rj   r    cj v d 
   

fithe logical difference lightweight description logic el



proof  use theorem     first  prove point    let c    in ai u  jm rj  cj
assume    c v a  pseudo primitive   let proof c v a 
note that  since pseudo primitive  and concept name   inspecting form
conclusions inference rules  one see root derivation
derived either ax  andl   andl   defl  pdefl  show
exists ai     n     ai v induction n   m  i e 
number conjuncts c  easy see n           v definition
terminologies  
base case n       trivial  root derived one
ax  defl  pdefl  so  conclude c   a    i e  n           set
ai   a   
assume n        root derived either andl 
andl   cases  premise used application either inference rule
sequent c   v either c   c   u c   u c   el concept d 
thus  c   contains less conjuncts c  but still least one   conclude
   c   v holds theorem     applying induction hypothesis  hence
exists concept name ai conjunct c      ai v a  finally  still
note ai conjunct c 


prove point    let c    in ai u  jm rj  cj assume    c v r d 
let proof c v r d  note due form right hand side sequent
c v r d  rule used derive root one ax  andl  
andl   defl  pdefl  ex  prove either exists ai     n 
   ai v r d  exists rj     j m  rj   r    cj v
induction n   again  similarly above  n     
n        rule used derive root one ax  defl 
pdefl  ex  two subcases 
root derived defl pdefl  n          c   a    i e 
   ai v r d ai   a   
root derived ax ex  n           c   r   c   
r    r  c    d  obviously    c  v holds  otherwise  rule ex
used derive root   c  v holds  implies    c  v d 
thus  case  rj   r    cj v holds j     
case n m     proved induction analogously proof point   above 
apply lemma    elements cdiff  t    t    
theorem     primitive witness el   let t  t  el terminologies
signature  cdiff  t    t     either c v v member cdiff  t    t    
sig   concept name c  el concepts occurring  
proof  let   c v cdiff  t    t     proof induction construction
d       t     c v      d  u d    one c v di          
cdiff  t    t    apply induction hypothesis    r d  then  lemma    
   

fikonev  ludwig  walther    wolter

either  i  exists conjunct c  concept name  t     v d   ii 
exists conjunct r c  c t     c  v d   
case  i  follows t      v otherwise t     c v c v  
cdiff  t    t    due    c v a  hence  v cdiff  t    t    
finally  case  ii  obtain t      c  v d  otherwise    c v r c    t     r c  v
c v   cdiff  t    t    again  thus  c  v d  cdiff  t    t    apply
induction hypothesis 
theorem     every inclusion c v  concept difference t  t  contains basic witness inclusion concept name either right hand side
left hand side  define
set left hand  concept difference witnesses  cwtnlhs
 t    t     set
nc exists concept v cdiff  t    t   
set right hand  concept difference witnesses  cwtnrhs
 t    t     set
nc exists concept c c v cdiff  t    t    
rhs
regard concept names cwtnlhs
 t    t    cwtn  t    t    succinct and 
certain sense  complete representation  concept difference t  t 
define set  concept difference witnesses
rhs
cwtn  t    t       cwtnlhs
 t    t     cwtn  t    t     

follows  first present polytime algorithm computing cwtnrhs
 t    t     polytime algorithm computing cwtnlhs
 t
 

 

already

given

lutz
wolter       
   

 for el tboxes   briefly present since extension developed consider elhr  terminologies  algorithms together decide  concept inseparability since 
theorem     t  t   concept inseparable if  if  cwtn  t    t     
cwtn  t    t           
    computing cwtnrhs
 t    t   
let assume want decide whether cwtnrhs
 t    t     thus  want
decide whether exists  concept c t     c v t      c v a 
general strategy follows  let
noimplyt     a     c   t      c v a  c el  concept  
aim algorithm checks whether noimplyt     a  contains c t    
c v a  two sets c concepts call c cover c
exists c c    c v d  thus  c noimplyt     a  cover
noimplyt     a  noimplyt     a  exists c c    c v d 
note c cover noimplyt     a   exists  concept c
c v cdiff  t    t    if  if  exists c c t     c v a 
thus reduced original problem construction appropriate cover c
deciding subsumption problem t     c v a  c c  unfortunately  general 
finite cover exists  following example illustrates situation 
   

fithe logical difference lightweight description logic el

example         let    a  b  r  t      noimplyt     a  contains concepts atomic conjunct  clearly  noimplyt     a  contains
finite cover 
    let      a  b  r  t      a r a   noimplyt       a  contains
     a  concepts contains finite cover 
    let       a  b    b    t       a b  u b      b    b    cover
noimplyt         a  
consequence  instead directly constructing cover noimplyt     a   first
construct transparent small covers
noimplyt     a   c   depth c  n  
n    depth c  role depth c  i e   number nestings existential
restrictions c   covers denoted noimplynt     a   n    singleton
sets non conjunctive t  finite sets containing k concepts
b  u ubk t    based sequence  present two distinct algorithms computing
cwtnrhs
 t    t    
   encode infinite sequence noimplynt     a   n    polynomial size abox
at      way obtain reduction original problem instance
checking problem knowledge base  t    at       certain sense  abox
at    encodes  in general infinite  cover noimplyt     a  
   employ terminology t  dynamic programming approach decide
concepts noimplynt     a  relevant deciding whether cwtnrhs
 t    t    
although less transparent  large terminologies latter approach considerably
efficient  develop acyclic terminologies 
el terminology   concept name signature   set
pre
 a     b      b v a  
finite covers noimplynt     a   n    defined figure    n     
set noimplynt     a  consists concepts without role names  distinguish conjunctive non conjunctive a  note non conjunctive  noimplynt     a 
singleton set  example        shows always case conjunctive a  n      distinguish pseudo primitive concept names  conjunctive
concept names  definition form r c  again  nonn
conjunctive a  noimplyn  
t     a  singleton set  note concepts covers
 c   depth c  n  c el  concept   n    illustrate definitions using
el terminologies example    
example         let    a  b  r  t      b non conjunctive t 
noimply t     a     b  noimply t     b     a   b pseudo primitive
t    noimply t     a     b u r  a u b   noimply t     b     a u r  a u b   
   precisely depth a       depth c  u c      max depth c     depth c      depth r d   
depth d      

   

fikonev  ludwig  walther    wolter

set  inductively 
all   

l

a 

l

alln  
 


a 

a  u

a 

l

s alln  



define noimply t     a  follows 
non conjunctive t   
l

noimply t     a     

a    

a   pre
 a 
 

conjunctive f t   
 

noimply t     a   

noimply t     b  

bf

define  inductively  noimplyn  
t     a 
pseudo primitive t   
l

noimplyn  
t     a     

a  u

a    pre
 a  

l

s alln   



 

conjunctive f t   
noimplyn  
t     a   

 

noimplyn  
t     b  

bf

r b t   
n  
noimplyn  
t     a     c t    
n  
  
c t
 

l

a  u

a    pre
t   a  

l

l

s alln u

r e  

r
enoimplyn


r  s

   

 b 

figure    definition noimplynt     a 

    let      a  b  r  t      a r a   b non conjunctive t  
noimply t       a     b  noimply t       b     a   b pseudo primitive t  
 

 

noimply t     b     a u r  a u b    r a t   noimplyt       a     b u r b  
t   

    let       a  b    b    t       a b  u b     b  b  non conjunctive
noimply t         b       b    noimply t         b       b     conjunctive t   
 

 

   

fithe logical difference lightweight description logic el

and  definition  noimply t         a     b    b     since contain role names 
 

noimply t         x    noimplynt         x   x  a  b    b    n     
 

 

following lemma shows correctness definition noimplynt     a  
lemma     let t  normalised el terminology  signature  nc  
noimplynt     a  cover noimplyt     a   c   depth c  n   namely  n   
c   t      c v a  c noimplynt     a  
c   el  concepts n   depth d   t      v a     c v
c noimplynt     a  

particular  n  noimplynt     a  cover noimplyt     a  
proof d c   assume first pseudo primitive t    noimplynt     a  consists
c   a    pre  a   a  u f   f  possibly empty  conjunction concepts
t 

form s fi   lemma     t      c v atomic conjuncts c
  pre
t   a  
prove c  concept names pseudo primitive
t    proof

induction n  n     r b t    assume t     a    pre  a   a  v a 
t 

r b t    lemma    must exist a    pre
t   a 
 

t     v a  contradicts definition
set pret   a    n    
conjunctive f t    let c noimplynt     a    bf noimplynt     b   hence
exists atomic conjunct b f c noimplynt     b   t  normalised  b
non conjunctive  i e  property c  already proved b  thus  t      c v b 
implies t      c v otherwise t     c v b would hold 
induction step  assume c  proved n   
element noimplyn  
let r b t  let ctn  
t     a   assume
   
n  
t     ct    v a  lemma    two possibilities 

t     a    pre  a   a  v r b  similarly above  claim follows lemma   
t 

fact r b t   
r exists e noimplynt     b  t     e v b  excluded
induction hypothesis 
derived contradiction  case f t    conjunctive t    considered
analogously case n     
c   let n     assume first non conjunctive  let  concept
depth d d     t      v a  conjuncts   pre
t   a 
obtain    a   pre  a  a  v d  assume conjunctive t  f t   
t 

let  concept depth d      t      v a  t      v b 
conjunct b f   induction     c v  unique b must non conjunctive 
c noimply t     b   therefore    c v c noimply t     a  
induction step  assume c  shown n  let  concept
t      v depth d    n     
   

fikonev  ludwig  walther    wolter

 a  let pseudo primitive t    atomicdconjuncts aredincluded
n
 
  pre
a   pre  a  u s all  
t   a      c v follows immediately c  
t 

 b  let r b t    let ctn  
element noimplyn  
t     a  assume
   
d 

l

l

eu

eq 
n  
q    pre
t   a   hence     ct    v
distinguish two cases 

s d   

 s d   q 



eq 

e  consider conjunct s d  d 

   r     ctn  
v s d    required 
   
  r  sufficient show exists e noimplynt     b 
   e v d    suppose exist e  then   the
contraposition of  induction hypothesis  t     d  v b  contradicts
t      v  as r b t    
 c  conjunctive t  f t    case analogous case
conjunctive t  n     
corollary     normalised el terminologies t  t  nc following
conditions equivalent 
exists el  concept c t     c v t      c v a 
exists n   c noimplynt     a  t     c v a 
observe direct application corollary    yield procedure comn
puting cwtnrhs
 t    t    gives bound n set noimplyt     a   point
present two ways avoiding problem  as well problem concepts
noimplynt     a  exponential size   firstly  instead working covers construct abox encoding covers  contrast concepts  aboxes admit encoding
structure sharing
cycles so  intuitively  admit polynomial reconstruction
infinite concept n  cnoimplyn  a  c 
t   
abox at    constructed figure    normalised el terminology
concept name sig t    set

 a   non conjunctive
non conjt  a   
 b            bn    b  u u bn
note construction at    similar construction noimplynt     a  
assertions individual play role concepts alln   n   
assertions individuals play role sets noimplynt     a   n    fact  one
readily show at       c a   c noimplynt     a  non conjunctive
t  and  conversely   a involved proof  shows whenever at       d a  
el concept d  exist n   c noimplynt     a     c v d 
illustrate construction at    using el terminologies example    
   

fithe logical difference lightweight description logic el

let
 a   sig t    non conjunctive t        ni  
set individual names  non conjunctive t    define sets at     a  assertions
follows
pseudo primitive t   
at     a     a   a     a    pre
t   a    r a       r   
r b t   
at     a    a   a     a    pre
t   a  
 s a       r     
 r a   b       b   non conjt   b   r  
let
 

at        a        a      r        r  

at     a 

asig t   
non conjunctive t 

figure    construction at     
example         let    a  b  r  t     
at       a b    b a    r a      r b       
   a     b     r       
    let      a  b  r  t      a r a  
at         a b    b a    r a      r b        a   
a     a      b      r          
    let       a  b    b    t       a b  u b    
at           b   b     b   b     a    
a      a       b         b         
obtain following characterisation cwtnrhs
 t    t    
theorem     let t  t  normalised el terminologies signature 
following conditions equivalent  
cwtnrhs
 t    t    
exist n   c noimplynt     a  t     c v a 
   

fikonev  ludwig  walther    wolter

 t    at         a b   b non conjt   a  
equivalence points     follows corollary     give detailed
proof equivalence points     follows general results
elhr  terminologies present below 
example     normalised form terminologies example    
 
  
t     a  v b    a  bn    bi   bi  
u bi  
      n 
 
  
 bi   r bi       n   bi   s bi       n 

t     a  v f     fi fi  u fi         n 
 fi  v r fi         n   fi   v s fi         n  
   a    a    r  s   abox at    graphically represented
r 
r 

r 
r 

f   
a   a 

r 
r 


a   a 


f   

f  

a   a 

a   a 

 

r 

n

f   

r 
a 
a 

n

 

r 

a 
a 

f  

a   a 

 

a 
f  

 

a 

clear  t    at         a   a     fact   t    a     a   a    holds already
restriction at    individuals  a      
theorem     el terminologies t  t  signature   set cwtnrhs
 t    t   
computed polynomial time 
proof  suffices give polynomial time algorithm decides every whether
cwtnrhs
 t    t     first  abox at    computed polynomial time
quadratic size t    theorem     cwtnrhs
 t    t    iff  t    at         a b  
b non conjt   a   latter condition checked polynomial time since
instance checking polynomial time el tboxes 
regarding efficiency approach  observe typical terminologies large
  abox at    indeed quadratic size t  since   pre
t   a  typically contain
concept names   thus  large terminologies straightforward
implementation rather elegant algorithm work efficiently one would
store abox quadratic size instance checking it  refer reader
table   discussion prototype implementation approach applied
modules snomed ct 
describe second approach computing cwtnrhs
 t    t     works
acyclic el terminologies  recall cwtnrhs
 t
 

      if  if  ex
ists el  concept c t      c v t     c v a  thus 
  cwtnrhs
 t    t    if  if  every el  concept c c noimplyt     a 
   

fithe logical difference lightweight description logic el

procedure notwitness e 
e pseudo primitive
t 


notwitness e       pre
t   e  pret   a 
end
 e e  u u ek
t   
notwitness e     ki   notwitness ei  
end
e r e   t 
   
r
  notwitness e



notwitness e       pre
t   e  pret   a 
else



r a  t 



notwitness e     fifi non conjt   a    notwitness e    


pre  e  pre  a 
t 
t 
end
end
end procedure
figure    computation notwitness e  
holds c noimplyt     a   approach based computing witness
relation nw   sig t      nc     sig t      nc    defined follows 
 e  a  nw

if  if 

   noimplyt     a  noimplyt     e 

observe cwtnrhs
 t    t    if  if   a  a    nw  hence  compute
set cwtnrhs
 t
 

 


sufficient
compute relation nw  practice  crucial
   

compute relation nw rather complement  typical terminologies concept
names unrelated sense subsume other  thus  relation
nw much smaller complement  which contains  among others  pairs  e  a 
subsume t  t    
determine pairs  e  a  nw  aim computing every concept name
e sig t    set concept names sig t    property    holds 
set called notwitness e  computed figure    following
modifications      consider sig t    non conjunctive t 
take conjunctive concept names account later      consider fresh concept
name occurring sig t    sig t    informally standing possible concepts 
thus  procedure  notwitness e  given figure   recursively associates every
e sig t    subset set
   all       sig t       non conjunctive t   
nw relation
  sig t      nc      sig t      nc    all   
   

fikonev  ludwig  walther    wolter

note unlike approach computing cwtnrhs
 t    t    presented previously  approach described handle two terminologies separately 
previous approach abox at    could precomputed t  re used
compare t  terminology t    whereas terminologies analysed
simultaneously  prove correctness procedure notwitness e  
lemma     normalised acyclic el terminologies t  t    signature  
e sig t    following holds  notwitness e  if  if 
 e  a  nw 
proof  prove e sig t    following two conditions
equivalent 
notwitness e  
n   c noimplynt     a   t      c v e 

sufficient since n  noimplynt     a  cover noimplyt     a   lemma     
e   sig t    claim trivial  e sig t    proof induction relative
relation t  sig t    sig t     whose definition found page       note
since considered terminologies acyclic sig t    finite  relation t 
well founded 
distinguish possible definitions e t    suppose e pseudoprimitive t      follows definition noimplynt     a 
lemma    exist n   c noimplynt     a  t     c v e if 

if  t     b v e b     pre
t   a    note b     pret   a   
t      b v e holds if  if  every b   t     b v e implies b pre
t   a  
n

thus  every n c noimplyt     a   t      c v e if  if  pret   e  pre
t   a 
if  if  notwitness e  
assume e e  u u ek t    then  concept c  t      c v e if 
if  t      c v ei   k  hence  applying induction hypothesis
obtain every n c noimplynt     a   t      c v e if  if  notwitness ei  
  k  if  if  notwitness e  
finally  assume e r e   t    notice that  since
    sig t    sig t      in

particular  pseudo primitive t     pret   all      thus  definition
every n    noimplynt     all     alln    applying induction hypothesis assume
lemma holds e     implies
  notwitness e     if  if 
n    t     alln v e     distinguish following cases  analogously
case distinction procedure notwitness e   see figure    
r
     concept form s g  nr   r   
t      s g v r e     similarly  notwitness e      holds every n  
t      alln v e     hence   concept form s g  obtain t      s g v r e  
otherwise t     alln v e   would hold n   depth s g   where depth s g 
role depth s g   so  lemma     two cases analogous case e
pseudo primitive considered above 
assume r
  notwitness e      is  n   
n 
 
t     v e  
   

fithe logical difference lightweight description logic el

first  observe definition form r a  t   
  
unique c noimplynt   
 a  t     c v e r alln  conjunct c  and
non conjunctive t  definition set    definition form r a 
t    n   c noimplynt     a   lemma    t      c v e
n 

 
 
if  if  pre
t   e  pret   a   and  n      every c noimplyt     a  
 
 
t      c v  
conclude case r
  notwitness e       
n
n    c noimplyt     a   t      c v e  if  if  r a 

 

 
t    pre
t   e  pret   a    c noimplyt     a  

 
 

 a     
s      c v e   noticem that  definition     noimplyt   

 
bnon conjt  a    noimplyt     b   thus    c noimplyt     a   
 

t      c   v e   holds if  if     b non conjt   a   
 
 
 
c   noimplym
t     b   t      c v e   if  if  b non conjt   a    b
 
notwitness e   holds applying induction hypothesis 
thus  t      c v e  n   c noimplynt     a   if  if 
notwitness e  
corollary     let t  t  normalised acyclic el terminologies signature 
cwtnrhs
 t    t        sig t      b non conjt   a  b   notwitness a    
proof  first  observe cwtnrhs
 t    t     sig t    must hold otherwise
 concept c t     c v if  if     c v a  thus  
cwtnrhs
 t    t     now  nc have 
cwtnrhs
 t    t   

iff

iff

iff
iff

sig t     by observation  and  definition 
exists  concept c t      c v t    
cva
sig t    exists b non conjt   a 
 concept c t      c v b t     c v  as
otherwise t     c v would hold 
sig t    exists b non conjt   a 
 a  b    nw  by definition relation nw 
sig t    exists b non conjt   a 
b   notwitness a   lemma    

acyclic terminologies  obtain alternative proof theorem    
theorem     acyclic el terminologies t  t  signature   cwtnrhs
 t    t   
computed polynomial time using procedure notwitness e  
proof  compute set cwtnrhs
 t    t     sufficient corollary    compute
sets notwitness e  every e sig t     assuming t  t  classified
result classification cached  notwitness e  computed e sig t    
worst case  time o   t       t        
example     acyclic terminologies t    t  signature example    
notwitness a       a    
   

notwitness b       a   

fikonev  ludwig  walther    wolter

concept names x sig t     notwitness x      particular a 
 
notwitness a     conclude a  concept difference witness 
    computing cwtnlhs
 t    t   
recall set left hand  concept difference witnesses  cwtnlhs
 t    t     set
nc exists concept c v c cdiff  t    t    
tractability computing cwtnlhs
 t    t    el proved lutz wolter       
arbitrary el tboxes reduction simulation checking  formulate main
steps employ technique dealing logical difference
elhr  terminologies 
two interpretations i  i  say relation i  i 
 simulation if  if  following conditions hold 
 d  e  ai    e ai   
 d  e   d  d    ri  r   exists e   d    e   
 e  e    ri   
i  e i  write  i    d   i    e  exists  simulation relation i  i   d  e  s  checked polynomial time
whether  i    d   i    e  various polynomial time algorithms checking existence
simulations developed  clarke   schlingloff        crafa  ranzato    tapparo 
      van glabbeek   ploeger         simulations characterise expressive power
el concepts following sense 
lemma     lutz   wolter         let i  i  interpretations  signature  i   
e i   
 i    d   i    e 



el  concepts c  c i  e c i   

follows  
cwtnlhs
 t    t   



 ik    a     ik    a 

ki    ti   a     a a   iki canonical model ki          
see this  recall theorem   every el concept c  c iki if  if 
 ti   a     c a   latter condition equivalent ti    v c  have  therefore 
proved 
theorem     lutz   wolter         el tboxes t  t  signatures   set
cwtnlhs
 t    t    computed polynomial time 
following example illustrates use simulations canonical models
determine cwtnlhs
 t    t    
example     let    a  r  b    b   
t     a v r f    f  v f  u f    f  v r b    f  v r b    
t     a v g  u g    g  v r g     g  v r g     g   v r b    g   v r b   
   

fithe logical difference lightweight description logic el

check whether cwtnlhs
 t    t    consider kbs k     t     a a    k   
 t     a a     cwtnlhs
 t    t    iff  ik    a     ik    a   canonical models
ik  ik  k  k    respectively  illustrations canonical models ik  ik 
shown below 
xran r  b 
b 

xran r  b 
b 

r

xran r  b 
b 

r

r

r



r

xran r  g  

xran r  f 

ik  

xran r  b 
b 
xran r  g  

r

r







ik 

 ik    a     ik    a  point xran r  f  neither  simulated xran r  g  
 simulated xran r  g     concept inclusion cdiff  t    t    left hand side
given v r   r b    u  r b     

   elhr  instance difference
polynomial time algorithms inseparability logical difference elhr based
extensions ideas used section   el  is  however  one important
difference  introduce new logics  elran elran u u   concept difference
captures exactly instance and  respectively  query difference elhr   prove analogue theorem    languages and  thereby  instance query difference
elhr   introduce sequent calculus characterises elran  consequences
elhr  terminologies  start investigation instance difference case since
transparent concept difference case  recall el difference
instance concept difference  
    elran  concept difference
recall example   showing elhr  concept inseparability imply  instance
inseparability 
t     ran r  v a    ran s  v a    b a  u a    

t     

   r  s  b  

notice abox    r a  c   s b  c    exhibiting instance difference
t  t    c range r s  example suggests ran r  ran s 
could used complex concepts  kind difference made visible concept
language 
definition     elran    c ran  concepts constructed using following syntax rule
c   



 

ran r 

 

c ud

 

r c 

nc   c  range c ran  concepts r nr   set elran  inclusions
consists concept inclusions c v role inclusions r v s  c c ran concept  el concept  r  nr  
   

fikonev  ludwig  walther    wolter

clearly  every elhr  inclusion elran  inclusion  additionally  elran  inclusions
concept ran r  occur everywhere concepts left hand side inclusions 
gives us additional concept inclusions  concept difference 
example     t  t  example    t     ran r  u ran s  v b 
t      ran r  u ran s  v b  thus  using c ran  concept ran r  u ran s  simulate
abox  r a  c   s b  c   example   make  difference could
observed elhr visible elran  
show example    generalised arbitrary tboxes  end 
consider following straightforward generalisation  concept difference differences elran  
ran
r
definition     elran
 difference   el  difference elh  tboxes t  t 
ran
set cdiff ran
 t    t    el  inclusions t     t       

prove equivalence  instance difference elhr  concept differran
ence elran   first associate every abox individual set ca a
ran
c  concepts  assume given  let  inductively  obj a  
l
l
  ran
  
ca a
a  u  
ran r   
a a a


n   ran
  
ca a

l

a a a

a  u  

r b a a

l

ran r   u  

r b a a

l

n ran
  
r ca b

r a b a

set
n ran
ran
  n   
ca a
   ca a
n ran
 a  fordall n      moreover  lemma shows
that  intuobserve    ca a
ran specific concept   
ran  a  
itively  infinite conjunction ca a
ca a
conversely  associate abox c ran  concept  construction straightforward  however  care taken since introduce structure sharing
associate distinct individual names distinct occurrences subconcepts  given
c ran  concept c  first define path c finite sequence c  r  c  rn cn  
c    c  n    ri    ci   conjunct ci       n  use paths c 
denote set paths c  p paths c   tail p  denotes last element
cn p 
now  let aran ap p paths c  individual names set inductively 

ac     s ap   aq     p  q paths c   q   p c     c    
  a ap     conjunct tail p   p paths c   
    ap       conjunct tail p   p paths c   
  r aran   ap     ran r  conjunct tail p   p paths c   
example     let c    r  a u ran v    u  s   t  a u ran v    u  t  b u ran s     
c ran  concept  ac represented graphically follows 
   

fithe logical difference lightweight description logic el




v

b






r

v

aran



ac

indicate ac aran   individuals identified paths c  note
different occurrences u ran v  c correspond different individuals ac  
lemma     let elhr  tbox  abox  c  d  c ran  concepts  let
a  obj a  
n ran
 t   a     d   a    if  if  exists n      ca a
v d   
 

   c  v d  if  if   t   ac       d   ac    
below  employ lemma transfer analogue theorem    elran
elhr  instance differences  now  note following consequence 
corollary     two elhr  tboxes t  t    cdiff ran
 t    t      if  if 
idiff  t    t       
n ran
proof   a  d   a     idiff  t    t     exists n   ca a
v
 
ran
d  cdiff ran
 t
 

  
conversely 

c
v


cdiff
 t
 

  

 a
 

 a
  

 
 
 
 
 
 
 
c
c


 
 
idiff  t    t    

note theorem   follows corollary    since elhr  tbox without
range restrictions    c v if  if     c   v d  c   obtained c
replacing concept form ran r  c   
    proof system elhr
gentzen style proof system elhr consists rules given figures     
cut elimination  correctness  completeness proof system shown similarly
corresponding proofs given hofmann        
theorem     elhr  terminologies c ran  concepts c d  holds
   c v if  if    c v d 
generalise lemma    elhr  terminologies 
lemma     let elhr  terminology  concept name r d el concept 
assume
l
l
l
  
ran si   u
aj u
rk  ck v r d 
 il

 jn

 km

ck     k m  c ran  concepts l  m  n    least one following
conditions holds 
   

fikonev  ludwig  walther    wolter

r  c u ran r   v
 exran 
r c v
bvd
 dom 
r c v
r   v b
avd
 ran 
ran r  v
s c v
 sub 
r c v

ran r  v

ran s  v
 ransub 
ran r  v

r v

figure    additional rules elhr  terminologies 
 e   exists rk     k m     rk v r    ck u ran rk   v d 
 e   exists aj     j n     aj v r d 
 e   exists rk     k m     rk    v r d 
 e   exists si     l     ran si   v r d 
assume pseudo primitive
l
l
  
ran si   u
aj u
 il

 jn

l

rk  ck v a 

 km

ck     k m  c ran  concepts l  m  n    least one following
conditions holds 
 a   exists aj     j n    aj v a 
 a   exists rk     k    rk    v a 
 a   exists si     l    ran si   v a 
proof  prove first part lemma  second part proved analogously 



let c    il ran si   u  jn aj u  km rk  ck assume    c v r d
holds  then    c v r d theorem     implies exists
derivation sequent c v r d  proof proceeds induction depth
d  i e  maximal length path root one leaves d 
notice l   n      root derived andl 
andl   lemma follows induction hypothesis 
otherwise  l   n        note l     n     possible since
      v r d definition terminology   c   a  c   ran s      e  
 e    respectively  hold already  remains consider case c   r   c    then 
rule used derive root one ax  ex  exran  dom
sub  consider cases one one 
   

fithe logical difference lightweight description logic el

root derived ax  considering form inference rule 
r    r c    d  hence    r  v r    c  u ran r    v d  implies
 e   holds 
root derived ex  r    r   c  v d  hence     r  v r
   c  v holds theorem     thus     c  u ran r    v
infer  e   holds again 
root derived dom    b v r d r     v b  
theorem        b v r d hence     r     v r d  is   e  
holds 
root derived exran  obtain   r    c  u ran r     v r d 
since sequent r    c  u ran r     v r d derivation shorter length
d  apply induction hypothesis  hence  either    r     v r d 
is   e   holds     r  v r     c  u ran r     u ran r    v d  hence  e  
holds    c  u ran r    v  c  u ran r     u ran r    
root derived sub  obtain   s c  v r d r  v  
induction hypothesis  either    s   v r d     v r   
c  u ran s  v d  seen    r     v r d     r  v r
   c  u ran r    v d  respectively  hence  e    e   holds 

prove extension theorem    elran  consequences elhr  terminologies 
give rather detailed description simple witness inclusions contained members
cdiff ran
 t    t    since going use result analysing concept
difference elhr  
theorem     primitive witness elran  differences   let t  t  elhr  terminologies
signature  cdiff ran
 t    t     either exist  r  s  sig  
ran
r v cdiff  t    t    form c v d  one
   c   v ran r  u c   v a 
   v d    r   v d  ran r  v d 
 
member cdiff ran
 t    t     r sig    sig   concept name  c
subconcept c d  subconcept d 
ran  concept el concept 
proof  let c v cdiff ran
 t    t     c c
prove theorem induction structure d 
notice      t     c v    concept name  inclusion
point   exists    d  u d    one c v di           cdiff ran
 t    t    
apply induction hypothesis anddwe infer

inclusion

point  


point   exists    r d    let c    il ran si   u  jn aj u  km rk  ck  
then  lemma     one  e   e   holds  cases  e   e   directly entail
inclusion point   point   exists  case  e    either rk v r cdiff ran
 t    t   

   

fikonev  ludwig  walther    wolter

t     ck u ran rk   v d  t      ck u ran rk   v d   as otherwise t     c v would
hold   apply induction hypothesis d  conclude inclusion
point   point   exists 
    instance difference witnesses
similarly theorem    concept difference el terminologies derived extension  theorem     elran   show every member  a   
idiff  t    t    gives rise basic witness either abox instance query
atomic  keep formulation succinct give abstract description relationship  a    idiff  t    t    witness using signature  a    
interested reader problem derive stronger relationship  a   
witness proof 
theorem     primitive witness elhr  instance differences   let t  t  elhr terminologies signature  idiff  t    t     least one following
conditions holds 
     r a  b    s a  b   idiff  t    t     r  sig   
    a  a b   idiff  t    t     concept name sig    individual b 
abox sig a  sig   
    a  d b   idiff  t    t     singleton abox a  individual b a  elconcept sig a   sig d  sig   
proof  let  a    idiff  t    t     distinguish following cases 
 a    s a  b    t    a     s a  b  if  if  r a  b  t    
r v s   t    a      s a  b  obtain t      r v s  thus    r a  b    s a  b   idiff  t    t   
point   holds 
 b  assume   d b  el concept d  lemma     n  
n ran
n ran
v d  theorem     one  i  r v s   ii  v d     iii 
v t      ca b
t     ca b
r   v d     iv  ran r  v d     v  c v a   vi  ran r uc v member cdiff ran
 t    t    
n ran
d 
r sig    sig   concept name  c subconcept ca b
subconcept d   i  r v cdiff ran
 t    t       r a  b    s a  b   idiff  t    t   
point   holds 
let f v g denote member cdiff ran
 t    t    cases  ii   vi  above  conran
sider abox af associated c  concept f point   lemma    
sig af   sig    af   g af    idiff  t    t    
case  ii   obtain f   concept name  hence af    a af    point  
holds  case  iii   obtain af    r af   a       a     point   lemma applies
 after removing   a    af    similarly   iv   af    r aran   af    
point   lemma holds  finally  cases  v   vi   g sig   concept
name  hence point   lemma applies 
theorem    justifies following finite representation  instance difference elhr  terminologies  corresponds exactly three distinct points theorem  assume t  t  given  let
   

fithe logical difference lightweight description logic el

set role  instance difference witnesses  iwtnr
 t    t     consist r v
t     r v t      r v s 
set right hand  instance difference witnesses  iwtnrhs
 t    t     consist
exists  a  a a   idiff  t    t    
set left hand  instance difference witnesses  iwtnlhs
 t    t     consist
exists c a    a a    c a   idiff  t    t    r
exists c c  c   c   b   r a  b    c c   idiff  t    t    
set  instance difference witnesses defined
rhs
lhs
iwtn  t    t       iwtnr
 t    t     iwtn  t    t     iwtn  t    t     

theorem     observe iwtn  t    t             if  if  idiff  t    t       
set iwtnr
 t    t    easily computed polynomial time analysed
paper  thus  aim present polynomial time algorithms computing
lhs
iwtnrhs
 t    t    iwtn  t    t    
    computing iwtnrhs
 t    t   
compute iwtnrhs
 t    t    two different ways  first  present transparent
abox approach works arbitrary elhr  terminologies  second present
efficient dynamic programming approach works acyclic elhr  terminologies
only  approaches introduced section     el terminologies  start
abox approach exhibit  abox at    depending t 
non conjunctive exists abox  a  a d   idiff  t    t    if 
if   t    at         a a   certain individual name   case conjunctive
reduced condition defining concept names 
deal elhr  terminologies rather el terminologies extend
structure at    significantly  describe model theoretic properties at     
require notion  range simulation  capture model theoretically expressive
power c ran  concepts  the concepts used describe  instance difference terms subsumption  cf  lemma      two aboxes a    a  designated
individual names a  a    say relation obj a    obj a   
 simulation if  if 
 s    a    a    s 
 s      a  b  a a  a    a b  a   
 s   r    a  b  r a  a    a    exists b   a    b   
r b  b    a   
say  range simulation if  addition 
 rs  r    a  b  exists c r c  a  a    exists
c  r c    b  a   
follows write
   

fikonev  ludwig  walther    wolter

 a    a     a    a    exists  simulation  a    a     a    a    
 a    a    ran
 a    a    exists  range simulation  a    a   

 a    a    
following lemma shows range simulations characterise c ran  concepts 
lemma     let a  a   aboxes designated individual names a  a   
ran  concepts
 a    a    ran
 a    a      t   a       c a    implies  t   a       c a    c
c 
proof  apply lemma     let  range simulation a  a 
 a    a    s  one prove induction n n    obj a   
b obj a    
n ran
 b  
    a  b  s  a     ca
   a
ran assume  a    a    ran
 a    a     t   a       c a    holds c
n ran
concept c  then  lemma     exists n      ca   a  v c  moreover 
n ran
 a    a    ran
 a    a        a     ca   a   a     implies
 t   a       c a     required 

construction   given figure    normalised elhr terminology signature  advise reader recall definition   given
figure   el terminologies consider additional ingredients required
elhr  terminologies  remind reader definition non conjt  a 
section     

 a   non conjunctive
non conjt  a   
 b            bn    b  u u bn
figure    use following sets  nc r nr  
prec
 a      b nc      b v   
predom
 a      r nr      r   v   
preran
 a      r nr      ran r  v   
prerole
 r      nr      v r   
following example illustrates definition    
example     t     ran r  v a    ran s  v a    b a  u a     t         r  s  b 
defined example   
at       b     r       s       r b      s b      r    b    s    b    
holds  t    at         b b    t    at          b b   

   

fithe logical difference lightweight description logic el

let
 a   sig t   non conjunctive       ni  
set individual names  non conjunctive   define sets    a  assertions
follows
pseudo primitive  
   a      a   a     a    prec
 a   
  r a       r   predom
 a   
  r        r   preran
 a    
r b   nr let


 
     s  b       b   non conjt  b   prerole
 r     predomt  a  prerant  b     

set
   a      a   a     a    prec
 a   
  s          preran
 a   

  s a          prerole
 r  predomt  a    

  s a        s      
let
      a        a      r        r  

 

   a 

asig t  
non conjunctive

figure    construction   elhr  terminologies 
lemma     every normalised elhr  terminology signature following
conditions equivalent  aboxes a  sig t   non conjunctive  
obj a  
    t   a      a a  
   obj at      a  a  ran
 at       
lemma    proved appendix 
lemma     let t  t  normalised elhr  terminologies  signature  
let at    abox constructed figure    following conditions equivalent 
exists  abox  t    a     a a   t    a      a a  
 t    at         a b   b non conjt   a  
   

fikonev  ludwig  walther    wolter

proof  assume exists  abox obj a   t    a     a a   t    a     
a a   then   t    a      a a   b non conjt   a    t    a      b a   hence 
lemma      a  a  ran
 at      b    then  lemma      t    at         a b   
required 
conversely  suppose  t    at         a b   b non conjt   a  b
obj at       notice that  lemma      t    at          b b    hence  t    at          a b  
at    b witness point   
theorem     let t  t  normalised elhr  terminologies signature 
iwtnrhs
 t    t    computed polynomial time 
proof  lemma     iwtnrhs
 t    t    if  if  b non conjt   a 
 t    at         a b    remains observe at    constructed polynomial
time checking whether  t    at         a b   polynomial time 
briefly describe dynamic programming approach computing set
r
iwtnrhs
 t    t    acyclic terminologies extended el elh   extension
notwitness e  algorithm figure   elhr given figure    figure   
procedure notwitness e  recursively associates every e sig t    subset
   all       sig t       non conjunctive t    
conditions notwitness e  become complex since one take

account sets preran
 e  predomt  e   prove correctness notwitness
algorithm  observe following consequence lemma    
corollary     let t  t  normalised acyclic elhr  terminologies signature 
ran  concept c c v cdiff ran  t       
iwtnrhs
   
 t    t          c

proof  first  let iwtnrhs
 t    t     exists  abox  t    a    
a a   t    a      a a   hence  point   lemma    exists n  
n ran
n ran
ran  concept  conversely  assume
ca a
v cdiff ran
 t    t     note ca a c
exists c ran  concept c c v cdiff ran
 t    t     point  
lemma      ac   a ac    idiff  t    t     i e  iwtnrhs
 t
 
t    
 

formulate correctness notwitness algorithm way
corollary    
theorem     let t  t  normalised acyclic elhr  terminologies signature 
iwtnrhs
 t    t        sig t      b non conjt   a  b   notwitness a    
proof extension proofs lemma    corollary     namely  one
show sig t    b sig t    b non conjunctive
t  following conditions equivalent 
b notwitness a  
ran  concepts c      c v b implies     c v a 
c
 
 

using corollary     thus obtain every   iwtnrhs
 t    t    if  if 
ran
exists c  concept c t      c v t     c v if  if  exists
b non conjt   a  b   notwitness a  
   

fithe logical difference lightweight description logic el

procedure auxpp  e 


prec
t   e    prerant   e    predomt   e   
return  all 
else

auxconcept        prec
t   e  prect   a   

auxran        prerant   e  preran
t   a   

auxdom        predomt   e  predom
t   a   
return auxconcept auxran auxdom
end
end procedure
procedure notwitness e 
e pseudo primitive t 
notwitness e     auxpp  e 
else e e  u usek t 
k
notwitness e     i   notwitness ei  
else e r e   t 
 
prerole
t   r    notwitness e  
notwitness e     auxpp  e 
else



pseudo primitive  

auxrole prim   

prerole
t   r  predomt   a 


t b t   










prerolet   r  prerolet   t  predomt   a  







prerolet  r  prerolet  t 
 
 
auxrole exist    fifi

 



 
predom
 a 

b

non conj


t   b 
t 




 
  





 
preran
 b
  

exists
e

non conjt   e    
t 




  
 
  

b notwitness e     preran
t   e  
notwitness e      auxrole prim auxrole exist   auxpp  e 
end
end
end procedure





















figure    computation notwitness e  elhr  
    tractability iwtnlhs
 t    t   
prove tractability iwtnlhs
 t    t    reduction simulation checking
case el terminologies  theorem     
theorem     let t  t  elhr  tboxes let signature  set
iwtnlhs
 t    t    computed polynomial time 
proof  concept name
iwtnlhs
 t    t   


   

 ik    a     ik    a 

fikonev  ludwig  walther    wolter

ki    ti   a     a a   iki canonical model ki           indeed 
  a a    c a   idiff  t    t     el  concept c  if  if  theorem   
c ik 
  c ik    condition is  lemma     equivalent  ik    a     ik    a  
latter condition checked polynomial time 
similarly  role name r
r iwtnlhs
 t    t   



 ik    a     ik    a   ik    b     ik    b 

ki    ti   a      r a  b    iki canonical model ki           again 
latter condition checked polynomial time 

   elhr  concept difference
section present polynomial time algorithms deciding  concept inseparability
computing succinct representation concept difference elhr  terminologies 
algorithms essentially reduction instance difference case 
start introducing succinct representation  concept difference  let
t  t  elhr  terminologies  since cdiff  t    t    cdiff ran
 t    t     follows
theorem    c v cdiff  t    t    exists inclusion least one
following forms
 i  c   v a 
 ii  ran r  u c   v a 
 iii  v d   
 iv  r   v d   
 v  ran r  v d 
cdiff  t    t     r sig    sig   concept name  c   subconcept c
d  subconcept d  notice particular case  ii  c   el concept 
hence  case  instance difference  obtain following representation
 concept difference  assume t  t  given  let
set role inclusion  concept difference witnesses  cwtnr
 t    t     consist
r v t     r v t      r v s 
set right hand  concept difference witnesses  cwtnrhs
 t    t     consist
exists el concept c either c v cdiff  t    t   
additionally exists role name r ran r  u c v cdiff  t    t    
set left hand  concept difference witnesses  cwtnlhs
 t    t     consist
exists el concept c v c cdiff  t    t    
role names r exists el concept c either r   v c
cdiff  t    t    ran r  v c cdiff  t    t    
set  concept difference witnesses defined
rhs
lhs
cwtn  t    t       cwtnr
 t    t     cwtn  t    t     cwtn  t    t     

   

fithe logical difference lightweight description logic el

observe cwtn  t    t             if  if  cdiff  t    t        obtain
lhs
sets cwtnr
 t    t    cwtn  t    t    coincide corresponding witness sets
instance difference  allows us re use results developed
detecting instance differences 
lemma     let t  t  normalised elhr  terminologies signature 
following holds 
r
   cwtnr
 t    t      iwtn  t    t    
lhs
   cwtnlhs
 t    t      iwtn  t    t   
rhs
   cwtnrhs
 t    t    iwtn  t    t   
lhs
proof  point   follows directly definition  proving cwtnlhs
 t    t    iwtn  t    t   
rhs
cwtnrhs
 t    t    iwtn  t    t    similar lemma     finally  prove
lhs
lhs
iwtn  t    t    cwtn  t    t     assume iwtnlhs
 t    t     exists elconcept d a    a a    d a   idiff  t    t     t     v t      v
lhs
and  therefore  cwtnlhs
 t    t     argument r iwtn  t    t    similar 

presented polynomial time algorithms compute iwtnlhs
 t    t   
rhs
iwtnr
 t
 

  
thus 

remains

analyse
cwtn
 t
 

  
 
 
 
 


    tractability cwtnrhs
 t    t   
prove tractability cwtnrhs
 t    t    modifying abox at    introrhs
duced prove tractability iwtnrhs
 t    t     recall iwtn  t    t    iff  t    at        
a b   b non conjt   a   cf  lemma      satisfying condition
cwtnrhs
 t    t    since abox at    cannot always captured set el concepts
 cf  example     modification at    motivated observation abox
contain individual range two distinct role names  el concepts
rather c ran  concepts sufficient capture consequences abox  thus 
going modify at    minimal way resulting abox contain
individual name range two distinct role names 
definition     abox role splitting pair assertions r a  c   s b  c 
a  individual names a  b  c distinct role names r  s 
following lemma states main property role splitting aboxes 
lemma     let t  t  normalised elhr  terminologies  signature
let role splitting  abox  t    a     a a   t    a      a a  
cwtnrhs
 t    t    
n ran
n ran
proof  lemma     exists n   t     ca a
v t      ca a
v a 
assume first exist b obj a  r r b  a  a  then 
n ran
definition since role splitting  ran r  occurs ca a
direct scope
n ran
existential restriction r  hence ca a equivalent el  concept 
done  assume exists r b  a  a  then  since role splitting 
n ran
ca a
equivalent concept ran r  u c  c el  concept  case
t     ran r  u c v t      ran r  u c v a  required 

   

fikonev  ludwig  walther    wolter

 abox sig a  nr      define role splitting unfolding
individuals   ar   obj a   r sig a  nr   setting
    a ar     a a  a  r sig a  nr     r as   br     r a  b  a  sig a  nr   
example     consider t     ran r  v a    ran s  v a    b a  u a     t       
 r  s  b     r a  c   s b  c   example     t    a     b c   t    a     
b c   notice role splitting unfolding    r ar   cr    r as   cr    s br   cs    s bs   cs   
contain individual range one role
c



cr



cs
r

r



r



b

ar




br



bs

 t          b cr     t          b cs   
apply role splitting unfolding abox   figure    following
result concept version lemma    proved appendix reduction
lemma     abox ac corresponding el concept c introduced
lemma     simplicity  consider signatures containing least one role name 
lemma     every normalised elhr  terminology   signature nr     
concept name non conjunctive   role name r   el  concepts c
following conditions equivalent   c   ran r  u c 
    v a 

r nr    a  r obj at      ad   ad   ran
 at      a  r   

following lemma proved similarly lemma     using lemma    instead
lemma    
lemma     let t  t  normalised elhr  terminologies  signature
nr      following conditions equivalent 
cwtnrhs
 t    t    
exists r  t    at         a  b  r   b non conjt   a  
proof  assume cwtnrhs
 t    t     then  either exists el  concept c
t     c v t      c v a  additionally exists r t    
ran r  u c v t      ran r  u c v a  hence    c   ran r  u c 
respectively  t      v b  b non conjt   a   lemma     exists

r  a  r obj at      ad   ad   ran
 at       b  r    then  lemma   
 t    at         a  b  r    t    ad      a ad   holds lemma    
converse direction  easy see  b  r obj at       b obj at      

 at       b  r   ran
 at      b    implies  t    at          a  b  r   lemma    
consequently  obtain cwtnrhs
 t    t    applying lemma    using fact
abox at    role splitting 
   

fithe logical difference lightweight description logic el

finally  obtain tractability result 
theorem     let t  t  elhr  terminologies signature  set
cwtnrhs
 t    t    computed polynomial time 
rhs
proof  nr     cwtnrhs
 t    t      iwtn  t    t     computed
polynomial time theorem    
otherwise nr    result follows lemma    fact at   
constructed polynomial time size t   

   elhr  query difference
investigate query difference elhr  terminologies  introduce language
elran u u extends elran universal role intersections roles  show
concept differences elran u u correspond query differences elhr   elran u u
prove analogue theorem     states inclusion concept
difference contains inclusion either left hand side right hand side
atomic  using correspondence concept difference elran u u query
difference elhr obtain meaningful definition succinct representation
query difference qdiff  t    t     finally  provide polynomial time algorithms deciding
 query inseparability computing succinct representation query difference 
    elran u u  concept difference
start section defining language elran u u  
definition     elran u u    let u  the universal role  fresh logical symbol  c u u concepts constructed using following syntax rule
c   



 

c ud

 

r c

 

u c 

nc   c  range c u u  concepts r   r  u u rn r            rn nr
n    set elran u u  inclusions consists concept inclusions c v role
inclusions r v s  c c ran  concept  c u u  concept  r  nr  
semantics additional constructors straightforward setting  interpretation i 
 r  u u rn  i   ri  rni  
ui    
note regard universal role u logical symbol  i e   u   nr sig u c   
sig c  concept c  assuming u logical symbol reflects fact firstorder translation uses non logical symbols  example  signature first order
translation x a x  u a contain non logical symbols exception
itself 
convenient decompose c u u  concepts  set c u  concepts defined
set c u u  concepts without universal role  every c u u  concept c equivalent
   

fikonev  ludwig  walther    wolter

concept form d  u u d  u u u dk   d            dk c u  concepts 
see this  observe concept c subconcept u d equivalent u d u c    
c   obtained c replacing occurrences u d    example 
u r  b u u e  equivalent concept u e u u r  b u    
u u
u   set c u u  c u   concepts whose signature
following denote c
 c
contained  
clearly  every elran  inclusion elran u u  inclusion  addition  role conjunctions
universal role elran u u  inclusions used capture differences
elhr  tboxes cannot captured elhr  inclusions 
example     first reconsider example    recall
t     

t     a v r b  

   a  b  

t     v u b t      v u b and  universal role regarded
logical symbol  sig a v u b    thus  employing universal role elran u u
simulate query difference   a a    x b x   using subsumption v u b 
second  reconsider example    recall
t     a v s    v r    v r    

t     a v r     u r      

   a  r    r    

t     v  r  u r      t      v  r  u r       thus  simulate query
difference   a a    x  r   a  x  r   a  x    using subsumption v  r  u r      
introduce appropriate notion  concept difference elran u u  
ran u u
definition     el
 difference   elran u u
 difference elhr  tboxes t 

ran u u
ran u u
 inclusions t    
 t    t    el
t  set cdiff
t       

extend lemma    concepts use universal role conjunctions
roles 
lemma     let elhr  terminology r d c u  concept r   t  u u tq
conjunction role names  assume
l
l
l
  
ran si   u
aj u
rk  ck v r d 
 il

 jn

 km

ck     k m  c ran  concepts l  m  n    least one following
conditions holds 
 e u   exists rk     k m  rk vt t           rk vt tq      ck uran rk   v
d 
 e u   exists aj     j n     aj v r d 
 e u   exists rk     k m     rk    v r d 
 e u   exists si     l     ran si   v r d 
   

fithe logical difference lightweight description logic el

u universal role    c v u d  c c ran  concept
c u  concept  least one following holds 
 e u   exists subconcept r c   c    c   u ran r v d 
 e u   exists concept name c    v u d 
 e u   exists role name r c    r   v u d 
 e u   exists role name r c    ran r  v u d 
 e u      c v d 
 e u   exists subconcept  ran r  u c     c    r c   v d 
theorem     primitive witnesses elran u u    let t  t  elhr  terminologies
ran u u
signature  cdiff
 t    t     either exist  r  s  sig  
ran u u
r v cdiff
 t    t    form c v d  one
   c   v
   v d    r   v d  ran r  v d 
member cdiff ran u u
 t    t     sig   concept name  r sig   role

 
ran
name  c c  concept  d  c u u  concept  sig c      sig d    sig   
proof  let c v cdiff ran u u
 t    t     c c ran  concept c u u  concept 

prove result induction structure d  proof verydsimilar
proof theorem

   consider case   u d  only  let c    il ran si   u
 jn aj u  km rk  ck   then  lemma     one  e u   e u   holds 
cases  e u   e u   directly entail existence inclusion point  
theorem  case  e u   exists subconcept r c   c t     c   uran r  v d   
t      c   u ran r  v d  otherwise t     r c   v r d    i e 
 t    t     apply
t     c v would hold  thus  c   u ran r  v d  cdiff ran u u

induction hypothesis d  infer inclusion point   point   exists 
 t    t    otherwise t     c v
similarly  case  e u    c v d  cdiff ran u u

d    i e  t     c v due   u d    applying induction hypothesis d   
obtain inclusion point   point   exists 
finally  case  e u   exists subconcept ran r  u c   c t     r c   v
d    observe first every model t  every c   exists d 
 ran r  u c    i   implies exists d    r c    i   assume
t     r c   v d    would follow every model t  every c  
exists d   d i   i e  t     c v u d  would hold  infer r c   v d 
ran u u
cdiff
 t    t    applying induction hypothesis d    conclude
inclusion point   point   exists 
    query difference witnesses
start connecting concept differences elran u u query differences
elhr  terminologies  direction query differences elhr concept differences
elran u u straightforward  observe every assertion c a  c c u u  concept
   

fikonev  ludwig  walther    wolter

regarded boolean conjunctive query qc a   example  assertion  u aur b  a 
equivalent conjunctive query xy  a x r a  y b y    details translation
provided appendix   obtain  where ac abox defined lemma     
lemma     two elhr  tboxes t  t  signature   c v
cdiff ran u u
 t    t    if  if   ac   qd ac   qdiff  t    t    

follows distinguish assertion c a  c c u u  concept
conjunctive query qc a   follows lemma    qdiff  t    t       
cdiff ran u u
 t    t       

come  considerably involved  direction query differences concept
differences elran u u   following lemma provides rather abstract description
inclusions qdiff  t    t    reflected members cdiff ran u u
 t    t    stating

given signature 
lemma     two elhr  tboxes t  t  signature   qdiff  t    t    
 t    t    sig     sig   
exists   cdiff ran u u

interested reader extract detailed description proof given
appendix  proof lemma    given appendix model theoretic employs
close relationship conjunctive query entailment homomorphisms  chandra
  merlin         intuition behind result  however  rather straightforward 
 t   a     q  a  conjunctive query q  x     y   x   y   elhr  tbox   every
model  t   a  mapping variables  x  y  a
 match q  x  i   t   a  models essentially forest shaped  consist
tree shaped models attached abox individuals  cf  lutz et al         
forest shaped models  individuals  y mapped individuals
mapped trees attached abox individuals  mapping  however 
exists already conjunctive query q   q homomorphic image q   q  
essentially forest shaped  individuals mapped abox individuals form trees
attached core q   mapped abox individuals  words 
obtain q   partitioning q core subsets correspond c u u  concepts 
now  exists  abox conjunctive  query q  a   t    a     q  a 
 t    a      q  a   find conjunctive  query q   behaviour
q essentially forest shaped   a  q     one obtain required elran u u inclusion c v d  captures subtree query q    a c u u  concept  c
 a c ran  concept  abox a  intuition last step exactly
lemma    
note result holds general tboxes terminologies 
lemma    theorem     directly obtain following description primitive witnesses query differences 
theorem     primitive witness elhr  query differences   let t  t  elhr terminologies signature  qdiff  t    t     least one following
conditions holds  for individual names a  b  
     r a  b    s a  b   qdiff  t    t     r  sig   
   

fithe logical difference lightweight description logic el

    a  a b   qdiff  t    t     concept name sig   abox
sig a  sig   
    a  d b   qdiff  t    t     singleton abox c u u  concept
sig a   sig d  sig   
observe theorem    coincides theorem    exception point  
concept c u u  concept  can  therefore  define following finite
representation  query difference  assume t  t  given  define set
qwtnr
 t    t    role  query difference witnesses set role  instance differr
ence witnesses  i e   qwtnr
 t    t      iwtn  t    t    
qwtnrhs
 t    t    right hand  query difference witnesses set right hand
rhs
 instance difference witnesses  i e   qwtnrhs
 t    t      iwtn  t    t    
qwtnlhs
 t    t    left hand  instance difference witnesses set
exists c u u  concept c   a a    c a   qdiff lhs
 t    t    r
u u
exists c  concept c   r a  b    c c   qdiff  t    t   
c   c   b 
set  query difference witnesses defined
rhs
lhs
qwtn  t    t       qwtnr
 t    t     qwtn  t    t     qwtn  t    t     

theorem     qwtn  t    t             if  if  qdiff  t    t        algorithms
rhs
computing qwtnr
 t    t    qwtn  t    t    presented section instance
difference  thus remains consider qwtnlhs
 t    t    
    tractability qwtnlhs
 t    t   
u u  concepts
prove tractability qwtnlhs
 t    t    first capture expressive power c
using stronger form simulation interpretations  let i  i  interpretations   simulation i  i  called global intersection preserving
 simulation if  addition 

every i  exists d  i   d  d    s 
 d  e  s  d  i    r    r    d  d    ri     
    exists e 
 e  e     d    e    ri  r r 
write  i    d 
 i    e  exists global intersection preserving  simulation
i  i   d  e  s 
lemma     let i  i  finite interpretations  signature  i    e i   

u u
 i    d 

c c
  c i  e c i   
 i    e 
checked polynomial time whether  i    d 
 i    e  
   

fikonev  ludwig  walther    wolter

proof straightforward extension proof lemma    polynomialtime algorithm deciding existence  simulations 
observe theorem   properties canonical model ik kb k
extended c u u  concepts  in appendix  proof given c u u  concepts
well   namely  c u u  concepts c   
k    c   a  if  if  aik c ik  
   c u v c  if  if  xc d c ik  
follows concept name  
qwtnlhs
 t    t   



 ik    a   
 ik    a  

ki    ti   a     a a            every role name r


r qwtnlhs
 ik    a   
 t    t   
 ik    a   ik    b     ik    b 
ki    ti   a     r a  b            thus  obtain following tractability
result 
theorem     let t  t  elhr  terminologies signature  set
qwtnlhs
 t    t    computed polynomial time 

   implementation experiments
section  describe experimental evaluation theoretical work developed above  experiments employ cex  tool   cex   implemented
polynomial time algorithms which  given acyclic elhr  terminologies t  t  signature input  compute witnesses concept difference cdiff  t    t   
instance difference idiff  t    t     
cex  written ocaml reasoner cb  kazakov        internally used
classification engine  implementation cex   employed algorithms
developed paper  detail  instance difference case acyclic elhr terminologies t  t   
compute iwtnr
 t    t     cex  performs straightforward comparison role
inclusion chains entailed terminologies t  t   
compute iwtnrhs
 t    t     cex  uses notwitness algorithm figure  
employs theorem    
compute iwtnlhs
 t    t     cex  checks existence  simulation
canonical models  theorem     
   available open source license http   www csc liv ac uk  michel software cex  
   extended version cex  computing witnesses query difference qdiff  t    t    well
presented  konev  ludwig    wolter         addition  konev et al  describe experiments comparing
query difference witnesses concept instance difference witnesses presented
paper 

   

fithe logical difference lightweight description logic el

output iwtnlhs
 t    t    partitioned three sets 
set left hand atomic  instance difference witnesses  iwtnlhs a
 t    t    

defined set concept names exists el concept c
  a a    c a    idiff  t    t     equivalently v c cdiff  t    t     
set left hand domain  instance difference witnesses  iwtnlhs dom
 t    t    

defined set role names r exists el concept c
  r a  b    c a   idiff  t    t     equivalently  r   v c cdiff  t    t     
set left hand range  instance difference witnesses  iwtnlhs ran
 t    t    

defined set role names r exists el concept c
  r a  b    c b   idiff  t    t     equivalently  ran r  v c cdiff  t    t     
obviously  holds that 
lhs a
iwtnlhs
 t    t    iwtnlhs dom
 t    t    iwtnlhs ran
 t    t    
 t    t      iwtn



concept difference case  recall
r
cwtnr
 t    t      iwtn  t    t    

lhs
cwtnlhs
 t    t      iwtn  t    t    

use algorithms instance case  set
 t    t      iwtnlhs x  t    t   
cwtnlhs x

rhs
x  a  dom  ran   compute iwtnrhs
 t    t     cex  exploits cwtn  t    t   
rhs
rhs
iwtn  t    t     lemma     first computes iwtn  t    t    checks using
straightforward variant notwitness algorithm concept differences whether
cwtnrhs
 t    t    
following three subsections describe experiments conducted 
experimental settings follows  programs run pcs equipped
intel core   duo e     cpu   gib main memory  version       cex 
used 

    comparing different versions snomed ct
applied cex  compare january       sm  a  july       sm  b  version snomed ct  sm  a sm  b contain               concept names  respectively  versions use    role names  contain role inclusions
domain range restrictions present  consequently  one infer corollary    iwtn  sm  b  sm  a    cwtn  sm  b  sm  a   follows consider
cwtn  sm  b  sm  a  only 
experiments used signatures ranging called snomed ct subsets 
employed uk deployment snomed ct specific areas  compared sm  a sm  b     signatures computing cwtn  sm  b  sm  a 
sets   considered signatures always contain    snomed
ct role names  comparisons resulted non empty difference reproduced
   

fikonev  ludwig  walther    wolter

table    none cases  differences regarding role inclusions detected 
table    second column gives number concept names respective subset  
third fifth column number concept witness differences  observe
number differences correlate size considered signatures   i e 
exist signatures somewhat comparable size  induce greatly varying
number difference witnesses  see e g  subsets diagnosis manumat  
order determine many difference witnesses computed cex  obtained
straightforward comparison class hierarchies already  computed
sets
clswtnlhs
 sm  b  sm  a        b   v b cdiff  sm  b  sm  a   

clswtnrhs
 sm  b  sm  a      b     v b cdiff  sm  b  sm  a   
considered comparison signatures   results obtained
depicted table    one see often great number differences cannot
detected considering classification difference only 
last three columns table    give cpu times required computing
concept witnesses 
first  times given cex  directly applied full terminologies
sm  a sm  b 
second  times given one first extracts  modules using module extraction tool mex  konev  lutz  walther    wolter        sm  a and  respectively 
sm  b applies cex  extracted  modules  observe  module
extracted mex  query  and  therefore   concept  instance  inseparable
whole terminology  thus  computed concept witnesses same 
finally  times given if  addition computing concept witnesses full
terminologies sm  a sm  b  cex  computes examples concept inclusions
logical difference explain witnesses  discuss feature cex 
below 
one observe extracting mex modules leads significant improvement
performance cex   course  signature large  e g   diagnosis
finding   resulting modules almost large snomed ct effect
less significant  secondly  one observe additional computation example concept inclusions logical difference roughly doubles times needed
comparison 
finally  evaluate practical feasibility using abox approach compute
sets iwtnrhs
 sm  b  sm  a   implemented computation aboxes  
together abox reasoning algorithm checking second condition lemma    
tested implementation subsets snomed ct used evaluating performance cex   limit size aboxes   speed
computations  first computed modules using mex  results obtained
   

fithe logical difference lightweight description logic el

shown table    size  modules computed mex  i e  t  sm  b t 
sm  a  shown columns two three  respectively  expected definition     one observe number concept role membership assertions
present aboxes at    grow large  even modules signatures
thousand concept names 
     considered subsets implementation ran available physical
memory  indicated time value    possible concept membership consequences
abox computed  overall  observed longest execution time
  hours set specmatyp  conclusion  one see straightforward
implementation abox approach practically useful terminologies
signatures thousand concept names 
    comparing different versions nci thesaurus
used cex  tool compare distinct versions nci thesaurus 
distributed releases nci thesaurus contain language constructs part
elhr  such disjunction value restriction   obtain elhr  terminologies 
removed inclusions contain non elhr constructor original terminologies 
typically  affected       inclusions present distributed nci
versions  elhr  versions generated way contain role inclusions well
domain range restrictions 
similarly work goncalves et al          compared    consecutive
elhr  versions nci thesaurus ranging versions      j      d 
exception      f      d  could parsed correctly  version      h
later versions nci thesaurus acyclic  hence  could
handled cex  tool 
two consecutive versions ncin ncin   within considered range 
computed sets cwtn  ncin     ncin   iwtn  ncin     ncin   signatures  
sig ncin   sig ncin      overview set sizes cwtnrhs
 ncin     ncin  
lhs a
cwtn  ncin     ncin   obtained found figure    comparisons
sorted chronologically along x axis according release dates nci ontology
versions  whereas corresponding number left hand atomic difference witnesses
right hand difference witnesses found y axis  one see number righthand difference witnesses remained fairly low throughout different versions  however 
occasional spikes occurred number left hand atomic difference witnesses
maximum value       comparing versions      d      d  moreover  none
comparisons except shown figure   left hand role domain left hand role
range difference witnesses identified  overall  witnesses regarding role inclusions
detected found every two considered consecutive versions ncin
ncin     sig ncin   sig ncin     
cwtn  ncin     ncin     iwtn  ncin     ncin   
running time     seconds     mib memory required average
computing witnesses example inclusions idiff  ncin     ncin    computing witnesses example inclusions cdiff  ncin     ncin   average took     seconds
used     mib memory 
   

fikonev  ludwig  walther    wolter

subset name
admin
adminproc
cdacarest
crcareneur
crcareresp
devicetyp
diagimg
diagnosis
drgadrcon
endosfind
endosproc
epcream  a
epenema  a
epenema  b
epeye  
epiuds  
famhist
finding
foodadrcon
ffoodaller
invest
labinvest
labinvmeth
labisolate
labmorph
labspec
labtopog
lifestyle
manumat
nofoodall
nonhuman
pbcl
pbhllng
pf
provadv
sf
socpercir
specmatyp
treatment
vmp
vtm

  nc  
    
    
   
    
    
    
    
     
    
   
  
   
  
 
   
 
   
      
    
   
     
    
    
     
    
    
     
     
     
   
    
    
    
  
    
   
    
    
     
     
    

 cwtnrhs
 
 
 
 
  
  
  
  
    
   
 
 
 
 
 
 
 
 
     
  
 
    
  
   
   
  
 
   
  
 
 
  
   
 
 
 
 
 
  
    
 
 

 clswtnrhs
 
 
 
 
 
  
  
  
   
   
 
 
 
 
 
 
 
 
    
  
 
   
  
  
   
  
 
   
  
 
 
  
   
 
 
 
 
 
 
    
 
 

 cwtnlhs a
 

  
 
 
   
   
  
  
     
  
  
 
 
 
 
 
 
  
     
  
 
    
    
    
   
  
  
   
   
  
  
   
    
  
 
   
 
 
  
    
  
  

 clswtnlhs
 
 
 
 
  
  
  
 
    
  
 
 
 
 
 
 
 
 
     
  
 
    
   
    
   
  
 
   
   
 
  
   
   
 
 
   
 
 
  
    
 
 

time  s 
cwtn  
full ontologies
      
      
      
      
      
      
      
      
       
      
      
      
      
      
      
      
      
       
      
      
      
      
      
      
      
      
       
      
      
      
      
      
      
      
      
      
      
      
      
      
      

time  s 
cwtn  
module extraction
    
    
    
     
     
    
     
      
     
    
    
    
    
    
    
    
    
       
    
    
     
     
     
     
    
     
     
     
     
    
     
     
    
    
    
    
    
     
      
     
    

time  s 
cwtn
examples
      
      
      
      
      
      
      
       
       
      
      
      
      
      
       
       
      
       
       
      
      
      
       
       
       
       
       
      
       
      
       
       
      
      
      
      
       
      
       
       
      

table    subset comparisons t    sm  b t    sm  a resulting non empty
difference

   

fithe logical difference lightweight description logic el

subset name
admin
adminproc
cdacarest
crcareneur
crcareresp
devicetyp
diagimg
diagnosis
drgadrcon
endosfind
endosproc
epcream  a
epenema  a
epenema  b
epeye  
epiuds  
famhist
finding
foodadrcon
foodaller
invest
labinvest
labinvmeth
labisolate
labmorph
labspec
labtopog
lifestyle
manumat
nofoodall
nonhuman
pbcl
pbhllng
pf
provadv
sf
socpercir
specmatyp
treatment
vmp
vtm

  nc  

 sig t    nc  

 sig t    nc  

   a a    a a  at      
 in thousands 

   r a  b    r a  b  at      
 in thousands 

time  s 

    
    
   
    
    
    
    
     
    
   
  
   
  
 
   
 
   
      
    
   
     
    
    
     
    
    
     
     
     
   
    
    
    
  
    
   
    
    
     
     
    

    
    
   
    
    
    
     
      
    
    
   
    
  
  
   
 
    
      
    
   
     
    
     
     
    
    
     
     
     
   
    
    
    
   
    
    
    
     
      
     
    

    
    
   
    
    
    
     
      
    
    
   
    
  
  
   
 
    
      
    
   
     
    
     
     
    
    
     
     
     
   
    
    
    
   
    
    
    
     
      
     
    

     
     
   
    
    
     
     
       
     
   
  
   
 
 
   
 
    
        
    
   
      
     
     
      
     
    
      
      
       
   
     
     
    
  
    
    
     
      
       
      
     

    
   
  
   
   
   
    
     
    
   
  
   
  
  
   
 
   
     
   
  
    
    
    
    
   
   
    
    
     
   
   
    
   
  
   
   
   
    
     
    
   

       
       
    
       
       
       
        
       
      
     
      
    
    
     
    
      
      
     
       
       
       
       
      
     
        
        
      
    
      
      
       
        
       

table    performance abox approach computing iwtnrhs
 sm  b  sm  a 

   

fikonev  ludwig  walther    wolter

     
nr right hand witnesses
nr left hand atomic witnesses
     

     

     

     

     

    

 

lhs a
figure    sizes cwtnrhs
 ncin     ncin   consec  ncin     ncin   cwtn
utive elhr  versions ncin ncin   nci thesaurus

t 
     j
     a
     d
     d
     e
     d
     e

t 
     n
     a
     d
     c
     d
     d
     d

  nc  
     
     
     
     
     
     
     

  nr  
  
  
  
   
   
   
   

 cwtnrhs
 
   
   
   
   
    
   
    

 cwtnlhs a
 

    
    
     
    
     
    
   

 cwtnlhs dom
 

 
 
  
 
   
   
 

 cwtnlhs ran
 

 
 
  
 
   
   
 

lhs
figure    detailed results cwtnrhs
 t    t    cwtn  t    t    selected versions
nci thesaurus using shared signatures   sig t    sig t   

   

fithe logical difference lightweight description logic el

peaks atomic left hand difference witnesses mostly resulted changes
general concepts  mentioned already  goncalves et al         provide indepth analysis nci versions  systematic comparison methods used goncalves
et al  logical diff introduced paper would interesting  beyond
scope paper  one interesting observation made is  however 
peak atomic left hand witnesses observed versions      d      d
correlates fact according goncalves et al  large number non redundant
axioms added version      d  however  comparable number non redundant
axioms added version      g  peak atomic left hand right hand
witnesses observed analysis 
    scalability analysis
demonstrated previous sections cex  capable finding logical difference two unmodified versions snomed ct distinct versions
nci thesaurus restricted elhr   order see cex s performance scales 
tested randomly generated acyclic terminologies various sizes  randomly
generated terminology contains certain number defined  primitive concept names
role names  ratio concept equations concept inclusions fixed 
ratio existential restrictions conjunctions  random terminologies
generated varying number defined concept names using parameters sm  a 
   role names  equality inclusion ratio        exists conjunction ratio       
every chosen size  generated    samples consisting two random terminologies
described above  applied cex  find logical difference two terminologies joint signature  figure    shows average memory consumption cex 
   randomly generated terminologies various sizes     a  maximum length
conjunctions fixed two  m        b  number conjuncts conjunction randomly selected two m  seen performance
cex  crucially depends length conjunctions     b   curves break
point cex  runs physical memory    instance  case m    
happens terminologies       defined concept names  finally  note
time required cex  compare two random terminologies highly varied
across different samples  maximum time required cex         seconds 
    additional user support analysing differences
far discussed experiments cex  one computes set concept
instance difference witnesses two terminologies  clearly  witnesses
provide sufficient information detailed analysis logical difference two
terminologies  thorough analysis  required consider examples
cdiff  t    t    idiff  t    t    show certain concept names concept instance
difference witnesses  thus  whenever searches concept names
exists c c v cdiff  t    t     cex  output example concept inclusions
c v cdiff  t    t     similarly  requested  cex  compute example inclusions
   cases classification terminologies cb already requires   gib
memory 

   

fikonev  ludwig  walther    wolter

    

    

    

memory consumption mib

memory consumption mib

    

   

   

   

    

    

    

    

   
   

m   

m  

m   

 

number concept names

  
  

  
  

  
  

  
  

  
  

  
  

  
  

  
  

  
  

  
 

  
  
 
  
  
 
  
  
 
  
  
 
  
  
 
  
  
  
  
  
  
  
  
  
  
  
 
    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
    
  
  
  
  
  
  
  
  

 

number concept names

 a  short conjunctions

 b  long conjunctions

figure     memory consumption cex  randomly generated terminologies
illustrating left hand concept differences v c  r   v c  ran r  v c  examples
instance difference case  know example    even minimal examples
exponential size input terminologies  practice  however  snomed ct
nci additional computation example inclusion every concept instance
difference witness doubles times required computation  described
already  observed table    computation times examples
shown last column computation times without examples shown
 th column  examples computed cex  often reasonable size  instance 
consider subset specimen material type  specmatyp  table    holds
 i  exist    right hand  concept witnesses  i e   cwtnrhs
 sm  b  sm  a        
 sm  b  sm  a  
 ii  set left hand atomic  concept difference witnesses  cwtnlhs a

contains    concept names 
point  i   ii   longest concepts c  c v cdiff  sm  b  sm  a 
v cdiff  sm  b  sm  a  computed cex  twelve concept role
name occurrences  thus far smaller exponential worst case suggests  
computed difference witnesses example concept inclusions
witnesses  interest explain example concept inclusion entailed one
terminology other  computing minimal subsets terminology entail
example concept inclusion promising approach explaining logical differences
known axiom pinpointing justification  supported cex  
investigated extensively various description logics including el  schlobach   cornet 
      baader  penaloza    suntisrivaraporn        kalyanpur  parsia  horridge    sirin 
      horridge  parsia    sattler        penaloza   sertkaya         illustrate
approach  consider subset specimen material type  specmatyp  table   
cex  outputs
venipunctureforbloodtest cwtnlhs a
 sm  b  sm  a  

   

fithe logical difference lightweight description logic el

   

laboratorytest v laboratoryprocedure u evaluationprocedure
bloodtest laboratorytest u rolegroup  hasspecimen  bloodspecimen

   

    venipunctureforbloodtest  rolegroup hasfocus  bloodtest 
u venipuncture
u  rolegroup   proceduresitedirect venousstructure 
u  method punctureaction   

figure     minimal axiom set
computes following concept inclusion  slightly simplified hand  member cdiff  sm  b  sm  a  
  

venipunctureforbloodtest
v rolegroup hasfocus evaluationprocedure

using axiom pinpointing one compute minimal set inclusions sm  b
entails concept inclusion above  set shown figure     axioms    
terminologies  sm  a contains
laboratorytest v laboratoryprocedure
instead axiom    explains difference two terminologies  note
concept role names shaded grey  seen interaction
 concepts heavily depends inclusions built mainly non concepts  actually none inclusions required derive     inclusion 
finally note cex  text based tool  order make accessible
ontology users  protege plugin  logdiffviz    created  calls cex  visualises
ontology versions differences hierarchical structure  logdiffviz
provides basic axiom pinpointing  plugin distributed self contained java archive
file  jar  cex  bundled 

   related work
describe relationship work presented paper existing work
logical difference inseparability ontologies  related work versioning distinction syntactical  structural  logic based approaches versioning
discussed introduction already presented here  problem
deciding whether two ontologies  inseparable signature investigated many ontology languages different notions inseparability concept
inseparability  instance inseparability  conjunctive query inseparability  model theoretic
inseparability  i e    reducts models first ontology coincide  reducts
models second ontology   inseparability closely related notion conservative extensions since one ontology conservative extension another ontology
contains ontology subset inseparable w r t  signature
   available http   protegewiki stanford edu wiki logical difference vizualiser  logdiffviz 

   

fikonev  ludwig  walther    wolter

smaller ontology  thus  algorithmic results deciding conservativity directly relevant inseparability well  tractability results presented paper sharp
contrast known results  start general el tboxes  general eltboxes deciding inseparability conservative extensions exptime complete problems
concept  instance conjunctive queries  problems undecidable modeltheoretic inseparability model theoretic conservative extensions  lutz   wolter        
 we note  however  model theoretic case unexpected positive algorithmic results
obtained konev  lutz  et al         acyclic el alc extensions
inverse roles   alc standard extensions without nominals deciding concept
inseparability conservative extensions  exptime complete  ghilardi  lutz    wolter 
      lutz et al         lutz   wolter        alcqio deciding concept inseparability conservative extensions becomes undecidable  lutz et al         cuenca grau
et al          nothing known alc complexity inseparability instance
conjunctive queries  dl lite dialects  calvanese  giacomo  lembo  lenzerini   
rosati         complexity concept  instance  query inseparability ranges
pspace hard  and exptime  description logic underlying owl   ql standard  np complete dl litehorn   p   complete dl litebool  konev  kontchakov 
ludwig  schneider  wolter    zakharyaschev        kontchakov et al          dllitebool model theoretic inseparability decidable  kontchakov et al         dllitecore concept  instance  query inseparability ptime  konev et al         
contrast work presented paper  however  attempt made present
logical difference user two ontology inseparable  mentioned above 
work konev et al          cex  extended conjunctive query difference case
acyclic elhr  terminologies various experiments based nci thesaurus
discussed 
work discussed far concerned logical difference inseparability description logic tboxes  difference description logic concepts
investigated  example  work teege         brandt  kusters  turhan
       besides interest kind difference problems considered well
techniques employed rather different  inseparability conservativity
ontologies given ontology languages expressive description logics  including first order logic  considered work kutz mossakowski       
       similar relationships theories investigated answer set
programming  pearce   valverde        eiter  fink    woltran        pearce   valverde 
      
finally  note lemma    abox constructed figure   appear capture describe fundamental properties el elhr  terminologies 
applied investigate seemingly unrelated problems query containment ontology
based data access using el terminologies  bienvenu  lutz    wolter      b  first order
rewritability instance queries  bienvenu  lutz    wolter      a  

    conclusion
paper  presented polytime algorithms decide concept  instance 
query inseparability w r t  signature elhr  terminologies compute represen   

fithe logical difference lightweight description logic el

tation difference non empty  experiments using cex  based snomed
ct nci show outputs given algorithm mostly reasonable size
analysed users  many extensions  applications  open problems remain
explored  mention them 
    motivated study  inseparability terminologies problem comparing different versions terminology regarding say
certain signature  potential promising applications found area
decomposing composing ontologies  example  importing ontology
ontology    i e   forming     often important ensure  
interfere signature   words    conservative extension
sense consequences   signature coincide
consequences  cuenca grau et al         ghilardi et al         vescovo 
parsia  sattler    schneider         observed already   inseparability generalises conservative extensions and  therefore  algorithms used check whether
one terminology conservative extension another terminology  algorithms checking
conservative extensions used extract modules ontologies  cuenca grau
et al         kontchakov  pulina  sattler  schneider  selmer  wolter    zakharyaschev       
konev et al          would interest explore applications inseparability
testing algorithms extract modules terminologies check conservativity 
    inseparability defined paper mean one terminology
replaced another terminology every context  various applications inseparability
modularity important ensure t  t   inseparable  t 
t   inseparable well  ontology   called replacement
property konev  lutz  walther  wolter        exploited discussed 
example  work cuenca grau et al         kontchakov et al         
notions inseparability introduced paper replacement property 
see this  let    a  a    b  b    

t   

v r b
a  r b  




t   

v r b
a  v r b  


 

t  t   query inseparable  and  therefore   concept  instance inseparable  
t  even  concept inseparable t       b v b      indeed 
observe  t       v a     t        v a   
important open research problem determine complexity of  develop
algorithms strong versions inseparability replacement property el
elhr  terminologies 
    elhr rather weak description logic  would great interest explore
far techniques developed elhr applied ontologies contain additional constructors  still consist mainly elhr  inclusions  unlikely tractable
sound complete algorithms interesting extensions exist  seems worth exploring algorithms sound incomplete extensions algorithms presented
paper  results direction presented goncalves  parsia  sattler
       
   

fikonev  ludwig  walther    wolter

acknowledgments
research supported epsrc grant ep h          would thank
william gatens development logdiffviz protege plugin three anonymous
reviewers helpful comments 

appendix a  proofs section  
lemma   every terminology   one construct polynomial time normalised
terminology   polynomial size  t   sig t   sig t             every
model exists model j     j x   x j every
x sig t    moreover    acyclic acyclic 
proof  given terminology   construct normalised terminology   five steps follows 
first  remove occurrences   conjunctions  replace c occurrence r c 
c concept name    fresh concept name add concept
definition c terminology  repeat last step exhaustively 
second  replace every ri  bi inclusion right hand side form f u
r   b  u u rm  bm  m     bi either concept name bi      f
conjunction concept names f         fresh concept name
bi  add concept definition bi  ri  bi terminology 
third  replace every inclusion form r   two inclusions v r  
r   v terminology 
fourth  consider concept name sequences b            bn 
f            fn   conjunctions concept names  terminology
contains concept definitions f  bi fi       n  bi conjunct
conjunct fn   let fn  conjunction concept names fn except a  let 
 
recursively  fi 
result replacing conjunct bi  fi  conjunction
 
    n  replace concept definition f  terminology
primitive concept definition v f    
fifth  inclusion f   v f   r   v f   ran r  v f   f
conjunction concept names  replace every conjunct b f b f  
terminology  f   conjunction non conjunctive concept names  f    
see construction indeed yields normalised terminology     observe
steps         ensure inclusion one following forms  r b 
f   e v r b  e v r    e v f   b concept name  e either concept
name  form s    ran s   f conjunction  possibly conjunctive 
concept names  step   breaks cycles concept definitions step   takes care
conjuncts conjunction concept names f right hand side inclusion
form f   v f   r   v f   ran r  v f non conjunctive concept names 
readily verified   acyclic acyclic none steps introduces cycles
concept definitions 
show   obtained polynomial time   polynomial
size  t    let n number inclusions c maximal length inclusions
right hand side   clearly  steps        increase number
inclusions c n  raising total number inclusions  nc  steps  
   

fithe logical difference lightweight description logic el

  increase number inclusions  length right hand sides 
length right hand side inclusion increase sum lengths
right hand sides inclusions  i e    nc  upper bound right hand
side  upper bound running time steps construction
therefore   n  c    hence  size   running time construction
o n  c    
notice every new concept name occurs left hand side unique concept
definition c     thus  every model expanded model j  
interpreting fresh concept names sig t       sig t   setting aj   c  
moreover  readily checked       
prove extended version theorem   according el concepts
concepts form ran r  evaluated correctly canonical model ik  
c u u  concepts  which introduced definition     
theorem   extended version  let k    t   a  elhr  kb 
   ik model k 
   ik computed polynomial time size k 
   xc d ik obj a   c  c u u  concept form ran r  

k    c   a  if  if  aik c ik  
   c u v c  if  if  xc d c ik  
proof  point   follows fact instance checking elhr done polynomial time 
first prove point   el concepts c  sub t    proof simultaneous
induction construction c    interesting step c    r d   
start proof direction left right  assume first k    c   a  
 a  xran r  d    rik       ran r  u d    v d    thus  induction
hypothesis  xran r  d  d ik   c ik   required  assume    c ud v c   
 xc d   xran r  d    rik       ran r  u d    v d    induction
hypothesis  xran r  d  d ik   xc d c ik   required 
conversely  assume aik c ik   exists ik  aik   d  rik
d ik   assume first   b obj a   induction hypothesis  k    d   b  
exists s a  b  vt r  thus  k    c   a   required  assume
  xran s  f   k    s f  a   vt r xran s  f d ik   induction
hypothesis     ran s  u f v d    thus  k    c   a   required 
assume xc d c ik   exists xran s  f    c u v s f   vt r
xran s  f d ik   induction hypothesis     ran s  u f v d    thus    c u v
r d    required 
prove point   concepts form c    ran r   assume k     ran r   a  
exist b s b  a  vt r  ran r ik   conversely 
   

fikonev  ludwig  walther    wolter

assume ran r ik   then  definition ik   exist b s b  a 
vt r  hence k     ran r   a   required 
assume    c u v ran r   have  c   ran s   vt r  xc d
ran r ik since path wk tail xc d   converse direction similar 
follows proved far ik model  t   a   thus
proved point    remains prove point   
prove point   arbitrary c u u  concepts c    interesting step c    s d   
  r  u u rn  
assume first k    c   a   c ik since ik model k  similarly 
   c u v c    xc d c ik since xc d  c u d ik ik model  
conversely  assume c ik   exists ik  aik   d  ik
d ik   assume first   b obj a   induction hypothesis  k    d   b  
every ri     n  exists si si  a  b  si vt ri   thus  k    c   a  
required 
assume   xran s  f   k    s f  a   vt ri   n
xran s  f d ik   induction hypothesis     ran s  u f v d    thus  k    c   a  
required 
assume xc d c ik   exists xran s  f    c u v s f   vt ri  
  n  xran s  f d ik   induction hypothesis     ran s  u f v d    thus
   c u v s d    required 

appendix b  proofs section  
proofs  require models infinite sets concepts  introduce notation
well known result existence minimal models  let  possibly
infinite  set c ran  concepts  which introduced definition      elhr  tbox 
either c u u  concept  which introduced definition     c ran  concept  write
   say included w r t  if  every model  
di follows c c   following observation follows fact
c u u c ran  concepts equivalent horn formulas  in sense chang
keisler        
lemma     elhr  tboxes sets c ran  concepts exists model
following equivalent  c u u c ran  concepts d 
   d 
di  
come proof lemma     convenience reader formulate
result again 
lemma     every elhr  tbox   abox a  c ran  concepts c  d   
a  obj a  
n ran
 t   a     d   a    if  if  exists n      ca a
v d   
 

   

fithe logical difference lightweight description logic el

   c  v d  if  if   t   ac       d   ac    
n ran
 a   
proof  prove point    direction right left observe    ca a
 
n ran
n    thus     ca a  v d  implies  t   a     d   a    
ran      then  using compactness 
assume  t   a     d   a     show ca a
 
 
n ran
find n      ca a  v d    required 
ran       take  every obj a   model point
assume ca a
 

 

ran    c 
da c ran  concepts c  da c ia if  if  ca a
models exist lemma     may assume mutually disjoint  take
following union models ia  

  aobj a  ia  

ai   aobj a  aia   nc  

ri   aobj a  ria   da   db     r   a  b  a  r  vt r   r nr  

ai   da   obj a  
claim    c ran  concepts c obj a  following holds ia  
c ia iff c  
proof induction construction c  interesting cases c   ran r 
c   r d direction right left 
let
c assume first c   ran r   let c ia  d    d  ri  
 d    d  aobj a  ria   claim follows definition  otherwise    da   d    db
n ran
every n    hence 
b r   b  a  r  vt r  thus  ran r    ca a
ran


ca a    ran r  obtain c  
assume
r d c ia   take d   d  d    ri d  di  
c  
 

 
 d    a  obj a  r   c ia follows immediately induction hypothesis 
otherwise    da d    db b r   a  b  r  vt r  induction
ran    d  compactness  exists concept e c ran
hypothesis  d  dib   hence  ca b
a b
n ran
every n     
   e v d  r   a  b  a  obtain r   e ca a
ran    r    d obtain c ia using r   v r  finishes proof
then  ca a


claim 
now  c v   let c   i e  ia obj a  
claim   c ia   implies dia c ia dia   conclude
di applying claim   again  similarly  one show c   di every
c ri si every r v   follows model  
construction i   ai   bi   ri every r a  b  a  moreover  a a 
ran    a  implies aia ai ai
obj a   holds ca a

ran      
claim  thus infer model  t   a      d   a    ca a
 
 
ia

implies da    d    ai    d i   claim    hence   t   a      d   a   
derived contradiction 
proof point   simple application definition 
   

fikonev  ludwig  walther    wolter

prove cut elimination  correctness  completeness calculus elhr
given figures      start basic observations  easily proved
induction length derivations 
lemma     elhr  terminology   c ran  concepts c  role names r 

       v d    c v d 
     c v v ca ca     c v ca  
     c v r d   c v r  d u ran r   
     c v r d  r   v b     c v b 
     c v ran r  ran r  v     c v a 
     c v r d  r v     c v s d 
     c v ran r  r v     c v ran s  
lemma     cut elimination   elhr  terminology   c ran  concepts c  d  e 
  c v   v e   c v e 
proof  let d  derivation c v d  derivation v e  let li
length di           proof lemma induction lexicographical
ordering pairs  l    l    
case l      l       well cases l  ends one
andl   andl   andr  ex  defl  defr pdefl virtually
proof hofmann         assume d  ends dom  last sequent form
r d  v e  sequent b v e  lemma     item      c v r d 
implies   c v b  induction hypothesis    c v e 
cases d  ends exran  ran  sub  ransub dealt
similar way using lemma     items       
theorem     let elhr  terminology  c  d  c ran  concepts    
c  v d  if  if    c  v d   
proof  easily checked proof system rules sound   c  v d   
   c  v d   
conversely  assume    c  v d    prove   c  v d  construct
interpretation based derivability sequents   show model
  consequence obtain c i d i conclude   c  v d  based
properties i 
domain set well formed pairs x   hc  rc i  c c ran  concept
rc finite set role names
l
nr      c u
ran r   v ran s   rc  
rrc

   

fithe logical difference lightweight description logic el

introduce following abbreviation  let
l
ran rc    
ran r  
rrc

c ran  concepts c interpreted
i c     hd  rd      d u ran rd    v c  
r nr interpreted
i r      hc  rc   hd  rd i    r rd
   c u ran rc    v r  d u ran rd     
note i c  nonempty every c  consider r c    s nr     c v ran s   
 
finite  r c finite 
notice that  ax andr    c v c u ran rc   so 
lemma        c u rr  ran r   v ran s   s    c v ran s   r c  
c






is  c  r c well formed pair and  obviously  c  r c i c  
show i c    c c ran  concepts c  proof induction
construction c 
   i       
well formed pair hc  rc i    c u ran rc   v   axiom 
   i c u d    i c  i d  
let hc  rc i d  u d        c u ran rc    v  d  u d     since    d  u d    v
d    lemma        c u ran rc    v d    is  hc  rc i d     similarly 
hc  rc i d    
conversely  suppose hc  rc i d    hc  rc i d    holds  is     c u
ran rc    v d     c uran rc    v d    andr     c uran rc    v  d  ud    
is  hc  rc i d  u d    
   i r c     x   i c     x  y  i r   
suppose well formed pair hd  rd hd  rd i r c    
 d u ran rd    v r c  then  lemma     item       d u ran rd    v r  c u ran r   
consider rrc    s nr      c u ran r   v ran s    clearly  r rrc and  similarly
argument r c above  hc  rrc well formed pair  ax andr   
curan r  v curan rrc    ex    r  curan r   v r  curan rrc    lemma    
   d u ran rd    v r  c u ran rrc     then  definition   hd  rd   hc  rrc i  i r 
and  since    c u ran rrc    v c  hc  rrc i c  
conversely  let  hd    rd    hd    rd  i  i r  hd    rd  i c   is     d  u
ran rd     v r  d  uran rd      r rd       d  uran rd     v c  ex
  r  d  u ran rd     v r c  and  lemma        d  u ran rd     v r c 
is  hd    rd  i r c  
   i ran r      y   x    x  y  i r   
first show i ran r      hc  rc   r rc    r rc    
c u ran rc   v ran r   is  i ran r    hc  rc   r rc    suppose hc  rc
i ran r    is     c u ran rc    v ran r   then  since hc  rc well formed pair 
r rc   is  i ran r    hc  rc   r rc   
   

fikonev  ludwig  walther    wolter

suppose hc  rc i ran r    is  hc  rc r rc   let
denote  c u ran rc     induction length derivations one see sequent
form r d v ran s  derivable nr   therefore  hr d  wellformed pair  hr d    hc  rc i  i r   conversely  let  hd    rd    hd    rd  i  i r 
then  particular  r rd    is  hd    rd  i ran r   
show model   need show axioms true
i 
   i x  i cx    whenever x cx x v cx  
let hc  rc i x   is     c u ran rc    v x  lemma     item     
 c u ran rc    v cx   is  hc  rc i cx   
   i cx   i x   whenever x cx  
let hc  rc i cx    is     c u ran rc    v cx   since ax defr
  cx v x  lemma        c u ran rc    v x  hc  rc i x  
    x  y  i r  i a   whenever ran r  v  
let  hc  rc   hd  rd i  i r   is     c u ran rc    v r  d u ran rd   
r rd   since r rd and  as  ax ran    ran r  v a  andl   andl 
   d u ran rd    v a  is  hd  rd i a  
    x  y  i r  x i b   whenever r   v b  
let  hc  rc   hd  rd i  i r   is     c u ran rc    v r  d u ran rd   
r rd   notice that  lemma     item       c u ran rc    v b  is 
hc  rc i b  
   i s  i r   whenever v r  
let  hc  rc   hd  rd i r       c uran rc    v r  duran rd    r rd  
lemma     item       c u ran rc    v s  d u ran rd     since r v  
ax ransub    ran r  v ran s     d u ran rd    v ran s  andl 
andl   since hd  rd well formed  rd   thus   hc  rc   hd  rd i  i s 



   c  v d    i c    i d     since c    r c  i c    



c    r c  i d        c  u ran r c     v d      c  v c  u ran r c    
  c  v d  lemma    
proof lemma     let normalised elhr  terminology signature  additionally  let  abox  sig t   non conjunctive obj a  
direction            direct consequence construction  
b obj a  b sig t   non conjunctive  t   a      b b 
b obj at     
assume  t   a      a a   obj at      define  range simulation setting 
b obj a  b sig t   non conjunctive b obj at      
 b  b   if  if   t   a      b b  
 b    b obj a  
show indeed  range simulation  a    verifying
conditions  s   s    rs  introduced page     hold 
   

fithe logical difference lightweight description logic el

 s  

 t   a      a a  obj at      immediately follows  a    s 

 s   let  b    b b  b   prove b      
  b b sig t   non conjunctive   obtain definition
 t   a      b b   moreover  holds b   prec
 b  otherwise  t   a     b b  
thus  definition    b  b b           immediately
follows b      definition    
 s   now  let  b    r b  b    r   prove exists
  obj at      b        r               immediately follows
definition   r         b      holds definition s 
  b b sig t   non conjunctive follows definition
 t   a      b b   additionally  infer r   predom
 b  otherwise
 t   a      r    b  would imply  t   a     b b  
consider cases b defined   b pseudo primitive   obtain
definition    b  r b       holds  b      definition
s 
b r   b     distinguish following two cases  r  
 

 
prerole
 r    obtain r    prerolet  r   predomt  b   thus r b      
definition   holds  b      definition s  case
 

 
r prerole
 r    r prerolet  r     predomt  b   furthermore   t   a     
 
 
b b   t   a       r  b   b   easy see must exist bi   non conjt  b    
  
    
r   preran
 bi    t   a      bi  b    r b   bi      
 
definition    b   b   bi     definition s 
 rs  let  b    r c  b  r   show exists
  r              b b sig t   non conjunctive   obtain
definition  t   a      b b   furthermore  r   preran
 b 
otherwise  t   a     b b   thus  definition    b  r    b      
    follows definition   r         
converse direction            assume obj at      a  a  ran

 at        sufficient show n
n ran
    ca
va
   a

implies  t           a a   lemma     obtain lemma   
 t   a      a a  holds 
thus  prove induction n every concept name b sig t  
n ran
non conjunctive b obj at          ca
v b 
   b
let n     b sig t   non conjunctive b obj at      follows

l
l
l
  ran
 
ca
 
b
u
ran s 
u
ran s 
   b
b    prec
 b 

s preran
 b 

   

ar bt
bnon conjt  b 


sprerole
 r   predomt  a prerant  b  

fikonev  ludwig  walther    wolter

  ran
hence  one see every subconcept form ran s  occurs ca
 
   b

obtain   preran
 b   b non conjunctive   holds either b
pseudo primitive b r   b     hence  lemma    conclude
  ran
    ca
v b 
   b
n      let b sig t   non conjunctive b obj at     
distinguish following two cases  b pseudo primitive   obtain
n ran
ca
 
   b

l

l

b  u

s preran
 b 

b    prec
 b 

l

ran s  u

ran s 

ar bt
bnon conjt  b 


sprerole
 r   predomt  a prerant  b  

u

l

s cs

s predom
 b 
n ran
v b 
c ran  concepts cs   follows lemma        ca
   b
 
 
b r  b   obtain
n ran
 
ca
   b

l
b    prec
 b 

u

l

b  u

s preran
 b 

l

ran s 

ar bt
bnon conjt  b 


sprerole
 r   predomt  a prerant  b  

l

s cs u


 
s  prerole
 r  predomt  b  

l

ran s  u

n  ran
s ca
      

b    non conjt  b    
     predom  b preran  b      
sprerole
 r




b

c ran  concepts cs   easy see conditions  e     e    e   lemma   
n ran
v b hold  condition  e   would fulfilled 
hold  thus     ca
   b
n ran
n  ran
b    non conjt  b    
ca
observe every subconcept s ca
   b
      
b

n  ran


  
  
 
prerole
 r      predomt  b  prerant  b     obtain     cat        v b
b

n  ran
u ran s  v b   lemma   
induction hypothesis  thus      ca
   b   
every b    s  infer condition  e   hold and  therefore 
n ran
v b 
    ca
   b

appendix c  proofs section  
proof lemma     let normalised elhr  terminology signature
nr      additionally  let nc concept name non conjunctive
  let r role name  let c el  concept  finally  let   c
  ran r  u c 
first observe obtain lemma        v holds if  if 
 t   ad       a ad    additionally  lemma      t   ad       a ad   if  if 
obj at      ad   ad   ran
 at        thus  sufficient show following
equivalence 

ran

 ad   ad   ran
 at       r    a  r obj at      ad   ad    at      a  r  

   

fithe logical difference lightweight description logic el

next note abox ad role splitting c el concept   ran r  u c 
  s b  ad   ad   b obj ad    sig ad        r aran   ad    
assume first obj at       ad   ad   ran
 at       let obj ad  obj at    
corresponding  range simulation  define relation obj ad   obj at    
setting every obj ad    every obj at     every role name r
r obj at     
 a  r  

 a    s c  a  ad sig ad   c obj ad   
  r

note well defined ad role splitting 
show  range simulation exists r sig a t    a  r
obj at      ad    a  r     prove conditions  s   s   condition  rs 
page     hold 
 s   exists s c  ad   ad sig ad   c obj ad   
exists   obj at     s           ad      range simulation 
i e  s      s    a  s      a  s obj at      hence   ad    a  s    
otherwise  easy see exists r  a  r obj at    
obj at     sig at       thus   ad     s   ad    a  r    
 s   let  a  r   a a  ad obj ad    obj at     
r sig at      follows definition  a    s  hence   range
simulation  a       implies a r     definition
   
 s   let  a  r   s a  a    ad a  a  obj ad    obj at      r sig at    
  definition obtain  a    s  additionally   range
simulation  exists   obj at      a        s           thus 
s r   s      definition    a    s    definition
ad role splitting 
 rs  let  a  r   s c  a  ad a  c obj ad    obj at      r sig at    
  definition    a    holds r   s   range simulation 
exists   obj at     s          r            hence  r r    r     holds
definition    
converse direction  assume exists r  a  r obj at    



 ad   ad   ran
 at      a  r   holds  let obj ad   obj at     corresponding
 range simulation  define relation obj ad   obj at     setting every
obj ad   every obj at     
 a   



r sig at        a  r    

straightforward verify obj at      range simulation
 ad     s 
   

fikonev  ludwig  walther    wolter

appendix d  proofs section  
proof lemma     require preliminary observations  let ac abox
associated c ran  concept c  lemma      then  elhr  terminology   c ran concept c c u u concept d     c v if  k    d ac   
k    t   ac    theorem    extended version  
   c v if  if  ik    d ac    ik canonical model k 
note    c v u d if  if  dik    d  d  ik
r   t  u u tn    d  d    rik if  if  exists role name
 d  d    sik vt ti                n  summarise consequences require
proof below 
 i  c u  concept occurrences si   ri   u       u ri mi intersections roles 
  k     c v if  if  exist role names si     k 
si vt ri j   k    j mi    c v d    d  obtained
replacing si si  
 ii  c u  concept     c v u d if  if  exists sequence
r             rn  ik     r     rn   d  aran   ik     r     rn   d  ac   
first case  exists subconcept  ran r  u c     c  up commutativity
associativity u     r c   v r     rn   d  second case
   c v r     rn   d 



assume c    il ran si  u  jn aj u  km rk  ck    c v r   d 
let r            rk occurrences role intersections r   d  ri   ri   u       u
ri mi     k   i   find role names si     k  si vt ri j
  k    j mi    c v d    d  obtained replacing ri
si   applying lemma       c v s   d  using t  vt r  j     j m 
   d  v d  obtain one conditions  e u     e u     e u     e u   must
hold 
second part lemma  first prove induction n   every c ran concept c every c u  concept    c v r    rn  d least one
following conditions holds
 e n   exists subconcept r c   c    c   u ran r v d 
 e n   exists concept name c    v u d 
 e n   exists role name r c    r   v u d 
 e n   exists role name r c    ran r  v u d 
n      let c c ran concept c u  concept    c v r   d 
obtain least one conditions  e u     e u     e u     e u   must hold
first part lemma  hence  one  e n     e n     e n     e n   satisfied 
n      let c c ran concept c u  concept    c v r    rn  d 
apply first part lemma again  conditions  e u     e u     e u  
fulfilled  conclude conditions  e n     e n     e n   satisfied 
   

fithe logical difference lightweight description logic el

case  e u   holds  exists subconcept r c   c    c   u ran r  v
r    rn  d  induction hypothesis obtain least one conditions
 e n     e n     e n     e n   fulfilled    c   u ran r  v r    rn  d  thus
   c v r    rn  d r sig c  every subconcept c   subconcept
c 
now     c v u d c ran  concept c c u  concept d   ii 
distinguish following two cases 
exists subconcept ran r  u c   c sequence r             rn      
r c   v r     rn     d  n          r c   v condition  e u  
holds  n    obtain least one conditions  e n     e n     e n   
 e n   satisfied   e n   holds  exists subconcept r   c    r c  
   c    u ran r    v d  r c     r   c         c   u ran r  v d 
 c   u ran r   occurs top level concept c     c v holds 
thus  condition  e u    otherwise  exists subconcept s   c   u ran r   u e 
c  e u   satisfied    c   u ran r  u e u ran s  v d  r c      r   c      r   c   
subconcept c    thus  c  condition  e u   holds  finally  one
conditions  e n     e n     e n   satisfied  one  e u     e u     e u   holds
 ii  
exists sequence r             rn       c v r     rn     d  n      condition
 e u   holds  n     least one conditions  e n     e n     e n     e n  
holds  then   ii   conclude one conditions  e u     e u     e u   
 e u   satisfied well 

give translation c u u  assertions conjunctive queries  similar
construction abox c ran  concept given section      first  given c u  concept
c  define path c finite sequence c  r  c        rn cn   c    c  n   
ri    ci   conjunct ci       n  ri conjunctions role names   let
xp p paths c  pairwise distinct variable names set
xc     s xp   xq     p  q paths c   q   p r c     conjunct r  
  a xp     conjunct tail p   p paths c   
let  x sequence
v variables xc except xc   conjunctive query qc a
obtained  x  xc replacing xc
va  finally 
v   d  uu d  u uu dk
obtain conjunctive query qd a  x    ik xd     we assume distinct

variables used every xdi     k   x sequence variables except
xd    replacing xd  a 
prove lemma    require preparation  query answering closely related
existence certain homomorphisms interpretations  let signature 
set individual names  i    i  interpretations  function f   i  i  called
 o    homomorphism
f  ai      f  ai    o 
   

fikonev  ludwig  walther    wolter

ai  implies f  d  ai   
 d    d    ri  implies  f  d     f  d     ri  r  
known  chandra   merlin        exists  o    homomorphism i 
i  i     q  a  conjunctive  query q using individual names
 a   a            ak o  i     q  a  
proof slightly refine notion  o    homomorphism considering partial  o    homomorphisms domains satisfy certain conditions  namely 
every n    call partial  o    homomorphism level n homomorphism
domain contains elements reachable  role chain length n either
named individual element without  predecessor  prove
every elran u u  inclusion c v depth c   depth d  n  t     c v implies
t     c v d  exists partial level n homomorphism certain model
 t    a  certain model  t    a  
consider partial homomorphisms certain interpretations only 
introduce first  let finite set individual names interpretation 
called o named exists   ai   model called o forest
 f   everysd o named  exists one d 
 d    d  rnr ri  

 f   infinite sequences d    d           di     di   rnr ri  
di o named 

 f    d  d    rnr ri d  o named  o named 
let finite set individual names  n    signature  partial function f
o forest model   called  o  n    homomorphism
 

 h   o  ai domain f f  ai     ai  
 

 h   d  d  domain f r    d  d    ri implies  f  d   f  d     ri  
 

 h   domain f   ai implies f  d  ai  
 h   exist chain d            dm    di   di    
length   n o named di   domain f  



r r





one prove following
lemma     suppose o forest    interpretation every    
exists  o  m    homomorphism     assume well    q  a  q
conjunctive  query using individual names  a   a            ak o 
     q  a  
proof  assume  a  match q  x     y  q     x   y    a consists
elements o   f    f   definition o forests  h    h  
definition partial homomorphisms  exists      v   v  x  y  
domain  o  m    homomorphism f   take  o  m    homomorphism f  
 a    match q  x         v    f   v    v  x  y  
   

fithe logical difference lightweight description logic el

finally  need technique constructing  o  m    homomorphisms  let
interpretation       let
u
tim  u  d     c c
  depth c  m  c   

where  above  depth c  role depth c  i e   number nestings existential
restrictions c 
lemma     let finite signature let     suppose o forest  
interpretation
 

 

 

 in    ai   bi   ri implies  ai   bi   ri   a  b r  
 

 in   tim  u  ai   tim  u
 ai    o 
 
 

 d    
 d  tm  u
 in   exists d  tm  u

i 
exists  o  m    homomorphism g    
proof  construct g constructing sequence functions f            fm        
follows  domain dom f    f  consists
ai

 
 
 
exist  d   d  r ri   ai set f   ai     ai  
every remaining dom f    choose d  according  in   set f   d    d    observe
tm  u
 d  tim  u
 f   d   dom f    
 

suppose fn constructed
 fn  d   dom fn   
 d  tmn  u
 in   tmn  u

i 
 in   n      dom fn   if  if  o named exists sequence
d  r i d  r i rni dn   d  o named ri d 
dom f    

construct fn   consider dom fn   o named d   d  d    r ri  
 
 

u
 

domain fn   consists   let rd d    r    d    r   rd d   
  rr   r  
d d
l
u
rd d
tmn  u
 d 
  

mn   u  
 d  
dti

 in   
u
rd d
  

l

timn  u
 fn  d  
 

mn   u  
dti
 d  
 

thus  choose e  fn  d   e  ri r rd d  timn   u  d   
tmn   u
 e  set fn    d      e  defines fn     observe fn   welli 
defined  f    observe fn   properties  in    in     f   

set g    nm fm   readily checked g required 
   

fikonev  ludwig  walther    wolter

position prove lemma    
lemma    qdiff  t    t     exists   cdiff ran u u
 t    t    sig    

sig   
proof  assume t  t  given let  a  q  a   qdiff  t    t     let     sig a 
sig q   assume that  contrast shown 
t    

  



t    

elran u u  inclusions sig      
consider model    t    a        q  a   lemma     obtain contradiction
exists obj a  forest model  t    a  every n    
exists  obj a   n      homomorphism fn    
 
take  every obj a  model ia  t  da ia c ran c u u concepts c 
 
da c ia t  ti    a     c


 

 


ran
c   
ti    a     c c
   

interpretations ia  exist lemma     define unfolding
ia ia    path

ia  finite sequence d  r  d        rn dn   n    ri     ri   set ri  
 
role names r ri   iff  di   di     ria     n  path p  tail p  denotes
last element p  let ia consist paths ia  set
 

aia    p ia   tail p  aia   
ria     d  drd    ia ia   r r  
ia o forest     moreover  c u u  concepts c p ia  
  

p c ia



 

tail p  c ia  

particular  ia still model t   
take following  disjoint  union interpretations ia  

  aobj a  ia  

ai   aobj a  aia   nc  

ri   aobj a  ria   da   db     r   a  b  a  r  vt  r   r nr  
ai   da   obj a  
show obj a  forest  model  t    a  exist  obj a   n   homomorphisms   n      first observe following 
claim    el concepts c ia  
c c ia
   

fithe logical difference lightweight description logic el

proof induction construction c  interesting case c   r d
direction left right 
assume c ia   take d   d  d    ri

d  di    d  d    a  obj a  ria    c ia follows immediately induction
hypothesis  otherwise    da   d    db b r   a  b  r  vt  r 
induction hypothesis  d  dib   hence      t  ti    b     d  compactness 
exists concept e ti    b  t     e v d  obtain r   e ti    a  
t     r   e v r   d obtain da c ia using r  vt  r    
claim    obj a  forest model  t    a  
obj a  forest model follows construction  remains
show model t    role inclusions r v t  follows construction
ri si   suppose c  v c  t    c  el concept     c  v c  follows
claim   condition ia models t    assume c    ran r 
let ran r i      da a  c i since ia models t      da  
exists r   b  a  r  vt  r  ran r    ti    a   t  ti    a     c   
hence      da c ia   i e  da c i claim   
claim    every n     exists  obj a   n      homomorphism    
lemma     sufficient show conditions  in     in     in    condition  in  
follows directly     condition  in   proved induction construction c 
interesting step c   s d   r  u u rm   let obj a  c
 
tin   u  ai    take d   ai   d    d  di   d  ia   then      t  ti    a    
   u
 
 ai    assume
s d     compactness  t  ti    a     s d  hence c tin 
 
d    ia   r             rk  b d    bi ri   a  b    k
 
every   exists   j rj  vt  ri   tin   u  bi   
 

 

 u
 b        every   j exists
induction hypothesis tn 
i 
   u
 
 
  j k rj vt  ri   c tin 
 ai    required 
 

 in    let c   dtn    u  d  d     ai obj a  


   exists b obj a  t  ti    b     u c  compactness    
   u
   u
 
 d  tn 
 d     required 
t  ti    b     u c  hence  exists d  tn 

i 
 
  ai obj a   then   in   shown above  d    ai required 
finishes proof lemma    

references
baader  f   brandt  s     lutz  c          pushing el envelope further  proceedings
 th international workshop owl  experiences directions  owled
       vol      ceur workshop proceedings  ceur ws org 
baader  f   penaloza  r     suntisrivaraporn  b          pinpointing description
logic el    proceedings   th annual german conference artificial intelligence  ki        vol       lecture notes computer science  pp       
heidelberg berlin  germany  springer verlag 
   

fikonev  ludwig  walther    wolter

baader  f          terminological cycles description logic existential restrictions 
proceedings   th international joint conference artificial intelligence
 ijcai        pp          san francisco  ca  usa  morgan kaufmann 
bienvenu  m   lutz  c     wolter  f       a   deciding fo rewritability el  proceedings   th international workshop description logics  dl       
bienvenu  m   lutz  c     wolter  f       b   query containment description logics revisited  proceedings   th international conference principles knowledge
representation reasoning  kr       
brandt  s   kusters  r     turhan  a  y          approximation difference description logics  proceedings  th international conference principles
knowledge representation reasoning  kr      pp          san francisco  ca 
usa  morgan kaufmann 
calvanese  d   giacomo  g  d   lembo  d   lenzerini  m     rosati  r          data
complexity query answering description logics  proceedings tenth
international conference principles knowledge representation reasoning
 kr        pp         
chandra  a  k     merlin  p  m          optimal implementation conjunctive queries
relational data bases  proceedings  th annual acm symposium theory
computing  stoc      pp        new york  ny  usa  acm 
chang  c  c     keisler  h  j          model theory  vol     studies logic
foundations mathematics  elsevier  amsterdam  netherlands 
clarke  e     schlingloff  h          model checking  handbook automated reasoning 
vol  ii  chap      pp            elsevier  amsterdam  netherlands 
conradi  r     westfechtel  b          version models software configuration management  acm computing surveys  csur                  
crafa  s   ranzato  f     tapparo  f          saving space time efficient simulation
algorithm  fundamenta informaticae                  
cuenca grau  b   horrocks  i   kazakov  y     sattler  u          modular reuse ontologies  theory practice  journal artificial intelligence research  jair      
       
delaitre  v     kazakov  y          classifying elh ontologies sql databases 
proceedings  th international workshop owl  experiences directions
 owled        vol      ceur workshop proceedings  ceur ws org 
eiter  t   fink  m     woltran  s          semantical characterizations complexity
equivalences answer set programming  acm transactions computational logic 
      
ghilardi  s   lutz  c     wolter  f          damage ontology  case conservative extensions description logic  proceedings tenth international
conference principles knowledge representation reasoning  kr       
pp          menlo park  ca  usa  aaai press 
   

fithe logical difference lightweight description logic el

golbeck  j   fragaso  g   hartel  f   hendler  j   oberhaler  j     parsia  b         
national cancer institutes thesaurus ontology  journal web semantics        
     
goncalves  r  s   parsia  b     sattler  u          analysing multiple versions ontology 
study nci thesaurus  proceedings   th international workshop
description logics  dl        vol      ceur workshop proceedings  ceurws org 
goncalves  r  s   parsia  b     sattler  u          concept based semantic difference
expressive description logics  proceedings   th international workshop
description logics  dl       
hofmann  m          proof theoretic approach description logic  proceedings
  th annual ieee symposium logic computer science  lics        pp     
     washington  dc  usa  ieee computer society 
horridge  m   parsia  b     sattler  u          justification oriented proofs owl 
proceedings  th international semantic web conference  iswc        vol 
     lecture notes computer science  pp          berlin heidelberg  germany 
springer verlag 
ihtsdo         snomed clinical terms user guide  international health terminology standards development organisation  ihtsdo   available
http   www ihtsdo org publications introducing snomed ct  
jimenez ruiz  e   cuenca grau  b   horrocks  i     llavori  r  b          supporting
concurrent ontology development  framework  algorithms tool  data   knowledge
engineering                 
kalyanpur  a   parsia  b   horridge  m     sirin  e          finding justifications
owl dl entailments  proceedings  th international  nd asian semantic
web conference  iswc   aswc     pp          berlin heidelberg  germany 
springer verlag 
kazakov  y          consequence driven reasoning horn shiq ontologies  proceedings
  st international conference artificial intelligence  ijcai        pp      
     
kazakov  y   krotzsch  m     simancik  f          unchain el reasoner  proceedings   th international workshop description logics  dl        ceur
workshop proceedings  ceur ws org 
klein  m  c  a   fensel  d   kiryakov  a     ognyanov  d          ontology versioning
change detection web  knowledge engineering knowledge management 
ontologies semantic web  vol       lecture notes computer science 
pp          springer verlag  berlin heidelberg  germany 
konev  b   lutz  c   walther  d     wolter  f          semantic modularity module
extraction description logic  proceedings   th european conference
artificial intelligence  ecai        vol      frontiers artificial intelligence
applications  pp        amsterdam  netherlands  ios press 
   

fikonev  ludwig  walther    wolter

konev  b   walther  d     wolter  f          logical difference problem description
logic terminologies  proceedings  th international joint conference automated reasoning  ijcar        vol       lecture notes computer science 
pp          berlin heidelberg  germany  springer verlag 
konev  b   kontchakov  r   ludwig  m   schneider  t   wolter  f     zakharyaschev  m 
        conjunctive query inseparability owl   ql tboxes  proceedings
  th conference artificial intelligence  aaai        menlo park  ca  usa 
aaai press 
konev  b   ludwig  m     wolter  f          logical difference computation cex    
proceedings  th international joint conference automated reasoning
 ijcar        lecture notes computer science  berlin heidelberg  germany 
springer 
konev  b   lutz  c   walther  d     wolter  f          formal properties modularisation 
modular ontologies  pp        springer verlag  berlin heidelberg  germany 
kontchakov  r   wolter  f     zakharyaschev  m          logic based ontology comparison
module extraction  application dl lite  artificial intelligence           
         
kontchakov  r   pulina  l   sattler  u   schneider  t   selmer  p   wolter  f     zakharyaschev  m          minimal module extraction dl lite ontologies using
qbf solvers  proceedings   st international joint conference artificial
intelligence  ijcai        pp          san francisco  ca  usa  morgan kaufmann 
kutz  o     mossakowski  t          conservativity structured ontologies  proceedings
  th european conference artificial intelligence  ecai        vol     
frontiers artificial intelligence applications  pp        amsterdam 
netherlands  ios press 
kutz  o     mossakowski  t          modular consistency proof dolce  proceedings   th conference artificial intelligence  aaai        menlo park  ca 
usa  aaai press 
kremen  p   smd  m     kouba  z          owldiff  practical tool comparison
merge owl ontologies  proceedings   th international workshop web
semantics  pp          los alamitos  ca  usa  ieee computer society press 
lutz  c   toman  d     wolter  f          conjunctive query answering description
logic el using relational database system  proceedings   st international
joint conference artificial intelligence  ijcai        pp            menlo park 
ca  usa  aaai press 
lutz  c   walther  d     wolter  f          conservative extensions expressive description logics  proceedings   th international joint conference artificial
intelligence  ijcai        pp          menlo park  ca  usa  aaai press 
lutz  c     wolter  f          deciding inseparability conservative extensions
description logic el  journal symbolic computing                 
lutz  c     wolter  f          foundations uniform interpolation forgetting expressive description logics  proceedings   nd international joint conference
   

fithe logical difference lightweight description logic el

artificial intelligence  ijcai        pp          menlo park  ca  usa  aaai
press 
mendez  j     suntisrivaraporn  b          reintroducing cel owl   el reasoner 
proceedings   nd international workshop description logics  dl       
vol      ceur workshop proceedings  ceur ws org 
noy  n  f     musen  m  a          promptdiff  fixed point algorithm comparing
ontology versions  proceedings   th national conference artificial intelligence  pp          menlo park  ca  usa  aaai press 
ohst  d   welle  m     kelter  u          differences versions uml diagrams 
proceedings  th european software engineering conference held jointly
  th acm sigsoft international symposium foundations software engineering
 esec   sigsoft fse     pp          new york  ny  usa  acm 
oliver  d  e   shahar  y   shortliffe  e  h     musen  m  a          representation
change controlled medical terminologies  artificial intelligence medicine         
     
palma  r   haase  p   corcho  o     gomez perez  a          change representation
owl   ontologies  proceedings  th international workshop owl  experiences directions  owled        vol      ceur workshop proceedings 
ceur ws org 
pearce  d     valverde  a          uniform equivalence equilibrium logic logic programs  proceedings  th international conference logic programming
nonmonotonic reasoning  lpnmr        vol       lecture notes computer
science  pp          berlin heidelberg  germany  springer 
pearce  d     valverde  a          synonymous theories knowledge representations
answer set programming  journal computer system sciences                
penaloza  r     sertkaya  b          complexity axiom pinpointing el
family description logics  proceedings   th international conference
principles knowledge representation reasoning  kr        menlo park  ca 
usa  aaai press 
poggi  a   lembo  d   calvanese  d   giacomo  g  d   lenzerini  m     rosati  r         
linking data ontologies  journal data semantics             
redmond  t   smith  m   drummond  n     tudorache  t          managing change 
ontology version control system  proceedings  th international workshop
owl  experiences directions  owled        vol      ceur workshop
proceedings  ceur ws org 
rosati  r          conjunctive query answering el  proceedings     
international workshop description logic  dl        vol      ceur workshop
proceedings  ceur ws org 
schlobach  s     cornet  r          non standard reasoning services debugging
description logic terminologies  proceedings   th international joint conference artificial intelligence  ijcai        pp          san francisco  ca  usa 
morgan kaufmann 
   

fikonev  ludwig  walther    wolter

teege  g          making difference  subtraction operation description logics 
proceedings  th international conference principles knowledge representation reasoning  kr     pp          san francisco  ca  usa  morgan
kaufmann 
van glabbeek  r  j     ploeger  b          correcting space efficient simulation algorithm 
proceedings   th international conference computer aided verification
 cav        vol       lecture notes computer science  pp          heidelberg berlin  germany  springer verlag 
vescovo  c  d   parsia  b   sattler  u     schneider  t          modular structure
ontology  atomic decomposition  proceedings   nd international joint
conference artificial intelligence  ijcai        pp            menlo park  ca 
usa  aaai press 

   


