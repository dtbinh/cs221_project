journal artificial intelligence research                  

submitted        published      

modular reuse ontologies  theory practice
bernardo cuenca grau
ian horrocks
yevgeny kazakov

berg comlab ox ac uk
ian horrocks comlab ox ac uk
yevgeny kazakov comlab ox ac uk

oxford university computing laboratory
oxford  ox   qd  uk

ulrike sattler

sattler cs man ac uk

school computer science
university manchester
manchester  m    pl  uk

abstract
paper  propose set tasks relevant modular reuse ontologies  order formalize tasks reasoning problems  introduce notions
conservative extension  safety module general class logic based ontology
languages  investigate general properties relationships notions
study relationships relevant reasoning problems previously
identified  study computability problems  consider  particular  description logics  dls   provide formal underpinning w c web ontology
language  owl   show problems consider undecidable algorithmically unsolvable description logic underlying owl dl  order achieve
practical solution  identify conditions sufficient ontology reuse set symbols safelythat is  without changing meaning  provide notion safety
class  characterizes sufficient condition safety  identify family safety
classescalled localitywhich enjoys collection desirable properties  use notion
safety class extract modules ontologies  provide various modularization algorithms appropriate properties particular safety class use 
finally  show practical benefits safety checking module extraction algorithms 

   motivation
ontologiesconceptualizations domain shared community usersplay major role semantic web  increasingly used knowledge management
systems  e science  bio informatics  grid applications  staab   studer        
design  maintenance  reuse  integration ontologies complex tasks 
software engineers  ontology engineers need supported tools methodologies
help minimize introduction errors  i e   ensure ontologies
consistent unexpected consequences  order develop support  important notions software engineering  module  black box behavior  controlled
interaction  need adapted 
recently  growing interest topic modularity ontology engineering  seidenberg   rector        noy      a  lutz  walther    wolter        cuenca
grau  parsia  sirin    kalyanpur      b  cuenca grau  horrocks  kazakov    sattler 
c
    
ai access foundation  rights reserved 

ficuenca grau  horrocks  kazakov    sattler

       motivated above mentioned application needs  paper 
focus use modularity support partial reuse ontologies  particular 
consider scenario developing ontology p want reuse set
symbols foreign ontology q without changing meaning 
example  suppose ontology engineer building ontology research
projects  specifies different types projects according research topic
focus on  ontology engineer charge projects ontology p may use terms
cystic fibrosis genetic disorder descriptions medical research projects 
ontology engineer expert research projects  may unfamiliar  however 
topics projects cover and  particular  terms cystic fibrosis
genetic disorder  order complete projects ontology suitable definitions
medical terms  decides reuse knowledge subjects wellestablished medical ontology q 
straightforward way reuse concepts construct logical union
p q axioms p q  reasonable assume additional knowledge
medical terms used p q implications meaning
projects defined p  indeed  additional knowledge reused terms provides new
information medical research projects defined using medical terms 
less intuitive fact importing q may result new entailments concerning
reused symbols  namely cystic fibrosis genetic disorder  since ontology engineer
projects ontology expert medicine relies designers q 
expected meaning reused symbols completely specified q 
is  fact symbols used projects ontology p imply
original meaning q changes  p change meaning symbols
q  say p q conservative extension q
realistic application scenarios  often unreasonable assume foreign ontology
q fixed  is  q may evolve beyond control modelers p  ontology
engineers charge p may authorized access information q or 
importantly  may decide later time reuse symbols cystic fibrosis
genetic disorder medical ontology q  application scenarios
external ontology q may change  reasonable abstract particular q
consideration  particular  given set external symbols  fact
axioms p change meaning symbol independent
particular meaning ascribed symbols q  case  say p safe
s 
moreover  even p safely reuses set symbols ontology q  may still
case q large ontology  particular  example  foreign medical
ontology may huge  importing whole ontology would make consequences
additional information costly compute difficult ontology engineers
charge projects ontology  who medical experts  understand  practice 
therefore  one may need extract module q  q includes relevant information  ideally  module small possible still guarantee capture
meaning terms used  is  answering queries research projects
ontology  importing module q  would give exactly answers whole
medical ontology q imported  case  importing module
   

fimodular reuse ontologies  theory practice

observable effect projects ontology importing entire ontology  furthermore  fact q  module q independent particular p
consideration 
contributions paper follows 
   propose set tasks relevant ontology reuse formalize
reasoning problems  end  introduce notions conservative extension 
safety module general class logic based ontology languages 
   investigate general properties relationships notions
conservative extension  safety  module use properties study relationships relevant reasoning problems previously identified 
   consider description logics  dls   provide formal underpinning
w c web ontology language  owl   study computability tasks 
show tasks consider undecidable algorithmically unsolvable
description logic underlying owl dlthe expressive dialect owl
direct correspondence description logics 
   consider problem deciding safety ontology signature  given
problem undecidable owl dl  identify sufficient conditions safety 
decidable owl dlthat is  ontology satisfies conditions
safe  converse  however  necessarily hold  propose
notion safety class  characterizes sufficiency condition safety 
identify family safety classescalled localitywhich enjoys collection desirable
properties 
   next apply notion safety class task extracting modules
ontologies  provide various modularization algorithms appropriate
properties particular safety class use 
   present empirical evidence practical benefits techniques safety
checking module extraction 
paper extends results previous work  cuenca grau  horrocks  kutz   
sattler        cuenca grau et al         cuenca grau  horrocks  kazakov    sattler        

   preliminaries
section introduce description logics  dls   baader  calvanese  mcguinness 
nardi    patel schneider         family knowledge representation formalisms
underlie modern ontology languages  owl dl  patel schneider  hayes    horrocks         hierarchy commonly used description logics summarized table   
syntax description logic l given signature set constructors 
signature  or vocabulary  sg dl  disjoint  union countably infinite sets ac
atomic concepts  a  b          representing sets elements  ar atomic roles  r  s         
representing binary relations elements  ind individuals  a  b  c          representing constants  assume signature fixed every dl 
   

ficuenca grau  horrocks  kazakov    sattler

dls

constructors
con
   a  c  u c    r c
pp  c
pp

axioms   ax  
tbox
abox
c  c  v c    c  r a  b 
pp
pp
pp
pp

rol
rbox
el
r
alc pp
pp
trans r 
 
r
  h
r   v r 
  f
funct r 
  n
   n s 
  q
   n s c 
 
 i 
r ar  ac  a  b ind  r i  rol  c i  con  n   rol simple
role  see  horrocks   sattler         
table    hierarchy standard description logics

every dl provides constructors defining set rol  general  roles  r  s          
set con  general  concepts  c  d           set ax axioms             
union role axioms  rbox   terminological axioms  tbox  assertions  abox  
el  baader  brandt    lutz        simple description logic allows one
construct complex concepts using conjunction c  u c  existential restriction r c
starting atomic concepts a  roles r top concept    el provides role
constructors role axioms  thus  every role r el atomic  tbox axioms
el either concept definitions c general concept inclusion axioms  gcis 
c  v c    el assertions either concept assertions   c role assertions r a  b  
paper assume concept definition c abbreviation two gcis v c
c v a 
basic description logic alc  schmidt schau   smolka        obtained el
adding concept negation constructor c  introduce additional constructors
abbreviations  bottom concept shortcut    concept disjunction c  c 
stands  c  u c     value restriction r c stands  r c   contrast
el  alc express contradiction axioms   v   logic extension
alc where  additionally  atomic roles declared transitive using role
axiom trans r  
extensions description logics add features inverse roles r  indicated
appending letter name logic   role inclusion axioms  ris  r  v r    h  
functional roles funct r    f   number restrictions    n s   n      n    qualified
number restrictions    n s c   n      q     nominals  a    o   nominals make
possible construct concept representing singleton set  a   a nominal concept 
individual a  extensions used different combinations  example alco
extension alc nominals  shiq extension role hierarchies 
   dual constructors    n s     n s c  abbreviations    n     s     n     s c  
respectively

   

fimodular reuse ontologies  theory practice

inverse roles qualified number restrictions  shoiq dl uses
constructors axiom types presented 
modern ontology languages  owl  based description logics and  certain extent  syntactic variants thereof  particular  owl dl corresponds shoin
 horrocks  patel schneider    van harmelen         paper  assume ontology
based description logic l finite set axioms l  signature
ontology  of axiom   set sig o   sig    atomic concepts  atomic roles
individuals occur  respectively   
main reasoning task ontologies entailment  given ontology axiom
  check implies   logical entailment    defined using usual tarski style
set theoretic semantics description logics follows  interpretation pair  
 i      non empty set  called domain interpretation 
interpretation function assigns  every ac subset ai   every r ar
binary relation ri   every ind element ai   note
sets ac  ar ind defined interpretation assumed fixed
ontology language  dl  
interpretation function extended complex roles concepts via dlconstructors follows 
   i
 c u d i
 r c i
 c i
 r  i

 
 
 
 
 


c di
 x   y hx  yi ri c  
  c
 hx  yi   hy  xi ri  

   n r i     x     y   hx  yi ri   n  
   n r c i     x     y   hx  yi ri c   n  
 a i    ai  
satisfaction relation    interpretation dl axiom  read
satisfies   model   defined follows 
   c  v c  iff c i c i  
   r  v r  iff r i r i  

     c iff ai c  
   r a  b  iff hai   bi ri  

   trans r  iff x  y  z   hx  yi ri hy  zi ri hx  zi ri   
   funct r  iff x  y  z   hx  yi ri hx  zi ri   z   
interpretation model ontology satisfies axioms o 
ontology implies axiom  written         every model o  given
set interpretations  say axiom  an ontology o  valid every
interpretation model  respectively o   axiom tautology valid
set interpretations  or  equivalently  implied empty ontology  
say two interpretations    i     j    j   j   coincide subset
signature  notation  i s   j  s     j x   x j every x s 
say two sets interpretations j equal modulo  notation  i s   j s  
every exits j j j  s   i s every j j exists
i s   j  s  
   

ficuenca grau  horrocks  kazakov    sattler

ontology medical research projects p 
p 

genetic disorder project project u focus genetic disorder

p 

cystic fibrosis euproject euproject u focus cystic fibrosis

p 

euproject v project

p 

focus   v project

e 

project u  genetic disorder   
u cystic fibrosis  v

e 

focus cystic fibrosis v focus genetic disorder

  

ontology medical terms q 
m  cystic fibrosis fibrosis u located in pancreas u origin genetic origin
m  genetic fibrosis fibrosis u origin genetic origin
m  fibrosis u located in pancreas v genetic fibrosis
m  genetic fibrosis v genetic disorder
m  defbi gene v immuno protein gene u associated with cystic fibrosis
figure    reusing medical terminology ontology research projects

   ontology integration knowledge reuse
section  elaborate ontology reuse scenario sketched section    based
application scenario  motivate define reasoning tasks investigated
remainder paper  particular  tasks based notions conservative
extension  section       safety  sections          module  section       notions
defined relative language l  within section  assume l ontology
language based description logic  section      define formally class
ontology languages given definitions conservative extensions  safety
modules apply  convenience reader  tasks consider paper
summarized table   
    motivating example
suppose ontology engineer charge shoiq ontology research projects 
specifies different types projects according research topic concerned
with  assume ontology engineer defines two conceptsgenetic disorder project
cystic fibrosis euprojectin ontology p  first one describes projects genetic
disorders  second one describes european projects cystic fibrosis  given
axioms p  p  figure    ontology engineer expert research projects 
knows  example  every instance euproject must instance project  the
concept inclusion axiom p   role focus applied instances
project  the domain axiom p    may unfamiliar  however  topics
projects cover and  particular  terms cystic fibrosis genetic disorder
mentioned p  p   order complete projects ontology suitable definitions
   

fimodular reuse ontologies  theory practice

medical terms  decides reuse knowledge subjects wellestablished widely used medical ontology 
suppose cystic fibrosis genetic disorder described ontology q containing axioms m  m  figure    straightforward way reuse concepts
import p ontology qthat is  add axioms q axioms p
work extended ontology p q  importing additional axioms ontology
may result new logical consequences  example  easy see axioms m m 
q imply every instance cystic fibrosis instance genetic disorder 
q        cystic fibrosis v genetic disorder 

   

indeed  concept inclusion       cystic fibrosis v genetic fibrosis  follows axioms
m  m  well axioms m  m   follows axioms   m  
using inclusion     axioms p p  ontology p prove
every instance cystic fibrosis euproject instance genetic disorder project 
p q        cystic fibrosis euproject v genetic disorder project 

   

inclusion   however  follow p alonethat is  p       ontology
engineer might aware entailment      even though concerns terms primary
scope projects ontology p 
natural expect entailments     imported ontology q result
new logical consequences         terms defined main ontology p 
one would expect  however  meaning terms defined q changes
consequence import since terms supposed completely specified within
q  side effect would highly undesirable modeling ontology p since
ontology engineer p might expert subject q supposed
alter meaning terms defined q even implicitly 
meaning reused terms  however  might change import  perhaps due
modeling errors  order illustrate situation  suppose ontology engineer
learned concepts genetic disorder cystic fibrosis ontology q
 including inclusion      decided introduce additional axioms formalizing
following statements 
every instance project different every instance genetic disorder

every instance cystic fibrosis 
   

   

      
every        
project focus cystic fibrosis  focus genetic disorder

   

note statements         thought adding new information
projects and  intuitively  change constrain meaning medical
terms 
suppose ontology engineer formalized statements         ontology
p using axioms e  e  respectively  point  ontology engineer introduced modeling errors and  consequence  axioms e  e  correspond    
     e  actually formalizes following statement  every instance project different every common instance genetic disorder cystic fibrosis  e  expresses
   

ficuenca grau  horrocks  kazakov    sattler

every object either focus nothing  focus cystic fibrosis 
focus genetic disorder  kinds modeling errors difficult detect 
especially cause inconsistencies ontology 
note that  although axiom e  correspond fact      still consequence
    means constrain meaning medical terms 
hand  e  consequence     and  fact  constrains meaning medical
terms  indeed  axioms e  e  together axioms p  p  p imply new axioms
concepts cystic fibrosis genetic disorder  namely disjointness 
p        genetic disorder u cystic fibrosis v  

   

entailment     proved using axiom e  equivalent to 
  v focus  genetic disorder cystic fibrosis 

   

inclusion     p  imply every element domain must projectthat
is  p       v project   now  together axiom e   implies     
axioms e  e  imply new statements medical terms 
cause inconsistencies used together imported axioms q  indeed 
        obtain p q        cystic fibrosis v    expresses inconsistency
concept cystic fibrosis 
summarize  seen importing external ontology lead undesirable
side effects knowledge reuse scenario  entailment new axioms even inconsistencies involving reused vocabulary  next section discuss formalize
effects consider undesirable 
    conservative extensions safety ontology
argued previous section  important requirement reuse ontology q
within ontology p p q produces exactly logical consequences
vocabulary q q alone does  requirement naturally formulated
using well known notion conservative extension  recently investigated context ontologies  ghilardi  lutz    wolter        lutz et al         
definition    deductive conservative extension   let o  two lontologies  signature l  say deductive s conservative extension
o  w r t  l  every axiom l sig   s     iff o      
say deductive conservative extension o  w r t  l deductive
s conservative extension o  w r t  l   sig o    

words  ontology deductive s conservative extension o 
signature language l every logical consequence constructed
using language l symbols s  already logical consequence o   
is  additional axioms   o  result new logical consequences
vocabulary s  note deductive s conservative extension o  w r t  l 
deductive s   conservative extension o  w r t  l every s  s 
notion deductive conservative extension directly applied ontology
reuse scenario 
   

fimodular reuse ontologies  theory practice

definition    safety ontology   given l ontologies o    say
safe o   or imports o  safe way  w r t  l o  deductive conservative
extension o  w r t  l 

hence  first reasoning task relevant ontology reuse scenario formulated
follows 
t  

given l ontologies o    determine safe o  w r t  l 

shown section     that  given p consisting axioms p p   e   e   q
consisting axioms m m  figure    exists axiom    cystic fibrosis v  
uses symbols sig q  q     p q      according definition   
means p q deductive conservative extension q w r t  language
l expressed  e g  l   alc   possible  however  show
axiom e  removed p resulting ontology p    p    e    p  q
deductive conservative extension q  following notion useful proving deductive
conservative extensions 
definition    model conservative extension  lutz et al         
let o  two l ontologies signature l  say model
s conservative extension o    every model o    exists model j
i s   j  s   say model conservative extension o  model
s conservative extension o    sig o    

notion model conservative extension definition   seen semantic
counterpart notion deductive conservative extension definition    latter
defined terms logical entailment  whereas former defined terms models 
intuitively  ontology model s conservative extension o  every model
o  one find model domain interprets symbols
way  notion model conservative extension  however  provide
complete characterization deductive conservative extensions  given definition   
is  notion used proving ontology deductive conservative
extension another  vice versa 
proposition    model vs  deductive conservative extensions  lutz et al        
   every two l ontologies o  o  o  signature l  model
s conservative extension o  deductive s conservative extension o 
w r t  l 
   exist two alc ontologies o  deductive conservative
extension o  w r t  alc  model conservative extension o   
example   consider ontology p  consisting axioms p p   e  ontology
q consisting axioms m m  figure    demonstrate p  q deductive
conservative extension q  according proposition    sufficient show p  q
model conservative extension q  is  every model q exists model
j p  q i s   j  s   sig q  
   

ficuenca grau  horrocks  kazakov    sattler

required model j constructed follows  take j identical except interpretations atomic concepts genetic disorder project 
cystic fibrosis euproject  project  euproject atomic role focus 
interpret j empty set  easy check axioms p p   e 
satisfied j hence j    p    moreover  since interpretation symbols q
remains unchanged  i sig q    j  sig q  j    q  hence  p  q model
conservative extension q 
example statement   proposition  refer interested reader
literature  lutz et al         p       

    safety ontology signature
far  ontology reuse scenario assumed reused ontology q fixed
axioms q copied p import  practice  however 
often convenient keep q separate p make axioms available demand
via reference  makes possible continue developing p q independently 
example  ontology engineers project ontology p may willing depend
particular version q  may even decide later time reuse medical terms
 cystic fibrosis genetic disorder  another medical ontology instead  therefore 
many application scenarios important develop stronger safety condition p
depends little possible particular ontology q reused  order
formulate condition  abstract particular ontology q imported
focus instead symbols q reused 
definition    safety signature   let l ontology signature l 
say safe w r t  l  every l ontology o  sig o  sig o    s 
safe o  w r t  l  is  o  deductive conservative extension
o  w r t  l 

intuitively  knowledge reuse scenario  ontology safe signature w r t 
language l imports safe way ontology o  written l shares
symbols o  associated reasoning problem formulated
following way 
t  

given l ontology signature l 
determine safe w r t  l 

seen section      ontology p consisting axioms p p   e   e  figure   
import q consisting axioms m m  figure   safe way l   alc 
according definition    since sig p  sig q     cystic fibrosis  genetic disorder  
ontology p safe w r t  l 
fact  possible show stronger result  namely  ontology containing
axiom e  safe    cystic fibrosis  genetic disorder  w r t  l   alc  consider
ontology o                     v cystic fibrosis       genetic disorder v   
since e  equivalent axiom      easy see o  inconsistent  indeed e  
    imply contradiction      v    entailed o    hence  o 
deductive conservative extension o    definition    since sig o  sig o    s 
means safe s 
   

fimodular reuse ontologies  theory practice

clear one could prove ontology safe signature s  simply find
ontology o  sig o  sig o    s  o  deductive conservative
extension o    clear  however  one could prove safe s 
turns notion model conservative extensions used purpose 
following lemma introduces property relates notion model conservative
extension notion safety signature  intuitively  says notion
model conservative extension stable expansion new axioms provided
share symbols original ontologies 
lemma   let o  o  o  o  l ontologies signature l
model s conservative extension o  sig o  sig o    s  o 
model s   conservative extension o  o  s    sig o    
proof  order show oo  model s   conservative extension o  o  according
definition    let model o  o    construct model j o 
i s    j  s   
   
since model s conservative extension o    model o    definition  
exists model j  i s   j   s   let j interpretation
j  sig o    j   sig o  j  s    i s    since sig o  s    sig o   s sig o    
 sig o  sig o     i s   j   s   interpretation j always exists  since
j  sig o    j   sig o  j     o  j    o  since j  s    i s    sig o    s   
   o    j    o    hence j    o  i s    j  s    proves     
lemma   allows us identify condition sufficient ensure safety ontology
signature 
proposition    safety signature vs  model conservative extensions 
let l ontology signature l model s conservative
extension empty ontology o      is  every interpretation exists
model j j  s   i s   safe w r t  l 
proof  order prove safe w r t  l according definition    take
shoiq ontology o  sig o  sig o    s  need demonstrate o 
deductive conservative extension o  w r t  l 
   
indeed  lemma    since model s conservative extension o     
sig o sig o    s  oo  model s   conservative extension o  o    o 
s    sig o     particular  since sig o    s    o  deductive
conservative extension o    required prove     
example   let p  ontology consisting axioms p p   e  figure   
show p  safe    cystic fibrosis  genetic disorder  w r t  l   shoiq 
proposition    order prove safety p  sufficient demonstrate p 
model s conservative extension empty ontology  is  every s interpretation
exists model j p  i s   j  s  
consider model j obtained example    shown example    j
model p  i sig q    j  sig q  q consists axioms m m  figure   
particular  since sig q   i s   j  s  

   

ficuenca grau  horrocks  kazakov    sattler

    extraction modules ontologies
example figure   medical ontology q small  well established medical
ontologies  however  large may describe subject matters designer p interested  example  medical ontology q could contain information
genes  anatomy  surgical techniques  etc 
even p imports q without changing meaning reused symbols  processing
is  browsing  reasoning over  etcthe resulting ontology p q may considerably
harder processing p alone  ideally  one would extract  hopefully small  fragment q  external medical ontologya modulethat describes concepts
reused p 
intuitively  answering arbitrary query signature p  importing
module q  give exactly answers whole ontology q
imported 
definition     module ontology   let o  o  o   o  l ontologies 
say o   module o  w r t  l  o  deductive s conservative
extension o     sig o  w r t  l 

task extracting modules imported ontologies ontology reuse scenario
thus formulated follows 
t  

given l ontologies o  o   
compute module o   o  w r t  l 

example    consider ontology p  consisting axioms p p   e  ontology q
consisting axioms m m  figure    recall axiom     consequence axioms m   m  m  well axioms m   m  m  ontology q 
fact  sets axioms actually minimal subsets q imply   particular 
subset q  q consisting axioms m   m   m  m   q       
demonstrated p  q  deductive conservative extension q    particular
p  q        then  according definition     q  module p  q w r t 
l   alc extensions  since p  q deductive s conservative extension
p  q  w r t  l   alc   sig p     indeed  p  q      sig   p  q       
similarly  one show subset q imply module q
w r t  p   
hand  possible show subsets q     m   m   m  
q     m   m   m   q modules p  q w r t  l   shoiq  so  definition     need demonstrate p  q deductive s conservative extension
p  q  p  q    sig p    w r t  l  usual  demonstrate stronger
fact  p  q model s conservative extension p  q  p  q 
sufficient claim   proposition   
order show p  q model s conservative extension p  q   
sig p     consider model p  q    need construct model j p  q
i s   j  s   let j defined exactly except interpretations
atomic concepts fibrosis  pancreas  genetic fibrosis  genetic origin defined
interpretation cystic fibrosis i  interpretations atomic roles located
   

fimodular reuse ontologies  theory practice

origin defined identity relation  easy see axioms m m  m 
satisfied j   since modify interpretation symbols p    j
satisfies axioms p    moreover  j model m   genetic fibrosis
genetic disorder interpreted j cystic fibrosis genetic disorder i 
model q    implies concept inclusion    cystic fibrosis v genetic disorder  
hence constructed model j p  q i s   j  s   thus p  q
model s conservative extension p  q   
fact  construction works replace q  subset q implies
  particular  p  q model s conservative extension p  q    way 
demonstrated modules p q exactly subsets q imply
 

algorithm implementing task t  used extracting module
ontology q imported p prior performing reasoning terms p  however 
ontology p modified  module extracted since module q 
p q might necessarily module modified ontology  since extraction
modules potentially expensive operation  would convenient extract
module reuse version ontology p reuses specified
symbols q  idea motivates following definition 
definition     module signature   let o  o   o  l ontologies
signature l  say o   module o   or s module o    w r t 
l  every l ontology sig o  sig o    s  o   module
o  w r t  l 

intuitively  notion module signature uniform analog notion
module ontology  similar way notion safety signature uniform
analog safety ontology  reasoning task corresponding definition   
formulated follows 
t  

given l ontology o  signature l 
compute module o   o   

continuing example     possible demonstrate subset q implies
axiom   fact module    cystic fibrosis  genetic disorder  q  is 
imported instead q every ontology shares q symbols s 
order prove this  use following sufficient condition based notion model
conservative extension 
proposition     modules signature vs  model conservative extensions 
let o  o   o  l ontologies signature l o  model
s conservative extension o     o   module o  w r t  l 
proof  order prove o   module o  w r t  l according definition    
take shoiq ontology sig o  sig o    s  need demonstrate
o   module o  w r t  l  is  according definition     o 
deductive s   conservative extension o   w r t  l s    sig o  
   
   

ficuenca grau  horrocks  kazakov    sattler

indeed  lemma    since o  model s conservative extension o     sig o   
sig o  s  o  model s    conservative extension o  
s     sig o   particular  since s    sig o  s     o  deductive
s   conservative extension o   w r t  l  required prove     
example    let q example     demonstrate subset q  q
implies module    cystic fibrosis  genetic disorder  q  according
proposition     sufficient demonstrate q model s conservative extension
q    is  every model q  exists model j q i s   j  s  
easy see model j constructed example     required
property holds 

note module signature q necessarily contain axioms
contain symbols s  example  module q  consisting axiom m   m 
m  q contain axiom m  mentions atomic concept cystic fibrosis
s  note even minimal module q  might still axioms
m  mention symbols all 
    minimal modules essential axioms
one usually interested extracting arbitrary modules reused ontology 
extracting modules easy process afterwards  ideally  extracted modules
small possible  hence reasonable consider problem extracting
minimal modules  is  modules contain module subset 
examples       demonstrate minimal module ontology signature
necessarily unique  ontology q consisting axioms m m  two minimal modules q     m   m   m    q     m   m   m    ontology p     p   p   p   e  
well signature    cystic fibrosis  genetic disorder   since minimal sets axioms imply axiom    cystic fibrosis v genetic disorder   depending
application scenario  one consider several variations tasks t  t  computing minimal modules  applications might necessary extract minimal
modules  whereas others minimal module suffices 
axioms occur minimal module q essential p
always removed every module q  thus never need imported
p  true axioms occur minimal modules q  might
necessary import axioms p order lose essential information q 
arguments motivate following notion 
definition     essential axiom   let o  l ontologies  signature
axiom l  say essential o  w r t  l contained
minimal module o  w r t  l  say essential axiom o  w r t 
l  or s essential o    contained minimal module o  w r t  l 
example axioms m m  q essential ontology p 
signature    cystic fibrosis  genetic disorder   axiom m  essential 
certain situations one might interested computing set essential axioms
ontology  done computing union minimal modules  note
   

fimodular reuse ontologies  theory practice

notation

input

task

checking safety 
t 

o  o    l

check safe o  w r t  l

t 

o  s  l

check safe w r t  l

extracting  all     union of   minimal  module s  
t  a s u  m 

o  o    l

extract modules o  w r t  l

t  a s u  m 

o    s  l

extract modules o  w r t  l

o  o  ontologies signature l
table    summary reasoning tasks relevant ontology integration reuse
computing union minimal modules might easier computing minimal
modules since one need identify axiom belongs minimal module 
table   summarized reasoning tasks found potentially relevant
ontology reuse scenarios included variants t am  t sm  t um
task t  t am  t sm  t um task t  computation minimal modules
discussed section 
variants tasks t  t  could considered relevant ontology reuse 
example  instead computing minimal modules  one might interested computing
modules smallest number axioms  modules smallest size measured
number symbols  complexity measure ontology  theoretical
results present paper easily extended many reasoning
tasks 
    safety modules general ontology languages
notions introduced section   defined respect ontology language 
far  however  implicitly assumed ontology languages description
logics defined section  that is  fragments dl shoiq  notions considered section   applied  however  much broader class ontology languages 
definitions apply ontology language notion entailment axioms
ontologies  mechanism identifying signatures 
definition     ontology language tuple l    sg  ax  sig       sg set
signature elements  or vocabulary  l  ax set axioms l  sig function
assigns every axiom ax finite set sig   sg called signature  
   entailment relation sets axioms ax axioms ax  written
     ontology l finitesset axioms ax  extend function sig
ontologies follows  sig o     sig   

definition    provides general notion ontology language  language l
given set symbols  a signature   set formulae  axioms  constructed
symbols  function assigns formula signature  entailment
relation sets axioms  ontology language owl dl well description
   

ficuenca grau  horrocks  kazakov    sattler

logics defined section   examples ontology languages accordance definition    
examples ontology languages first order logic  second order logic  logic
programs 
easy see notions deductive conservative extension  definition     safety
 definitions      modules  definitions         well reasoning tasks
table    well defined every ontology language l given definition    
definition model conservative extension  definition    propositions involving
model conservative extensions  propositions           extended
languages standard tarski model theoretic semantics  higher order logic 
simplify presentation  however  formulate general requirements
semantics ontology languages  assume deal sublanguages shoiq
whenever semantics taken account 
remainder section  establish relationships different
notions safety modules arbitrary ontology languages 
proposition     safety vs  modules ontology  let l ontology language 
let o  o    o   o  ontologies l  then 
   o  safe w r t  l iff empty ontology module o  w r t  l 
   o    o   safe o   o   module o  w r t  l 
proof     definition    o  safe w r t  l iff  a  o  deductive conservative
extension w r t  l  definition     empty ontology o     module
o  w r t  l iff  b  o  deductive s conservative extension o     w r t  l
  sig o   easy see  a   b  
   definition    o    o   safe o   w r t  l iff  c  o    o    o       o 
deductive conservative extension o   w r t  l  particular  o  deductive
s conservative extension o   w r t  l   sig o   implies  definition    
o   module o  w r t  l 
provide analog proposition    notions safety modules
signature 
proposition     safety vs  modules signature  let l ontology language 
o  o   o    ontologies l  subset signature l  then 
   o  safe w r t  l iff empty ontology o     s module o  w r t  l 
   o    o   safe sig o     w r t  l  o   s module o  w r t  l 
proof     definition    o  safe w r t  l iff  a  every sig o    sig o 
s  case o  safe w r t  l  definition     o     s module
o  w r t  l iff  b  every sig o    sig o  s  case o    
module o  w r t  l  claim   proposition     easy see  a 
equivalent  b  
   definition    o    o   safe sig o     w r t  l iff  c  every o 
sig o    o     sig o  sig o      o    o   safe w r t  l 
   

fimodular reuse ontologies  theory practice

definition     o   s module o  w r t  l iff  d  every sig o   sig o  s 
o   module o  w r t  l 
order prove  c  implies  d   let sig o    sig o  s  need
demonstrate o   module o  w r t  l 
   
 
 
 
 
 
 
let    o    note sig o   o    sig o    sig o   o     sig o  sig o    
 sig o    o     sig o   sig o     sig o      hence   c  o    o   safe
  o   w r t  l implies claim   proposition    o   module
o  w r t  l     

   undecidability complexity results
section study computational properties tasks table   ontology
languages correspond fragments description logic shoiq  demonstrate
reasoning tasks algorithmically unsolvable even relatively inexpressive dls  computationally hard simple dls 
since notions modules safety defined section   using notion
deductive conservative extension  reasonable identify  un decidability
complexity results conservative extensions applicable reasoning tasks table    computational properties conservative extensions recently studied
context description logics  given o  language l  problem
deciding whether deductive conservative extension o  w r t  l   exptimecomplete l   alc  ghilardi et al          result extended lutz et al 
        showed problem   exptime complete l   alciq undecidable l   alciqo  recently  problem studied simple dls 
shown deciding deductive conservative extensions exptime complete
l   el lutz   wolter         results immediately applied notions
safety modules ontology 
proposition    given ontologies o  l  problem determining whether
safe o  w r t  l exptime complete l   el    exptime complete
l   alc l   alciq  undecidable l   alciqo  given ontologies o  o   
o   o  l  problem determining whether o   module o 
exptime complete l   el    exptime complete l   alc l   alciq 
undecidable l   alciqo 
proof  definition    ontology safe o  w r t  l iff o  deductive
conservative extension o  w r t  l  definition    ontology o   module
o  w r t  l o  deductive s conservative extension o     sig o  w r t 
l  hence  algorithm checking deductive conservative extensions reused
checking safety modules 
conversely  demonstrate algorithm checking safety modules
used checking deductive conservative extensions  indeed  deductive conservative
extension o  w r t  l iff o o  safe o  w r t  l iff  claim   proposition    
o    module o    o  w r t  l  

   

ficuenca grau  horrocks  kazakov    sattler

corollary    exist algorithms performing tasks t   t  a s u m table  
l   el l   alciq run exptime   exptime respectively 
algorithm performing tasks t   t  a s u m table   l   alciqo 
proof  task t  corresponds directly problem checking safety ontology 
given definition   
suppose   exptime algorithm that  given ontologies o  o  o  
 
  determines whether o   module o  w r t  l   alciq  demonstrate
algorithm used solve reasoning tasks t am  t sm t um
l   alciq   exptime  indeed  given ontologies o    one enumerate
subsets o  check   exptime subsets modules o 
w r t  l  determine modules minimal return them 
one them  union depending reasoning task 
finally  prove solving reasoning tasks t am  t sm t um
easier checking safety ontology  indeed  claim   proposition    
ontology safe o  w r t  l iff o    module o  w r t  l  note
empty ontology o    module o  w r t  l iff o    minimal
module o  w r t  l 
demonstrated reasoning tasks t  t  a s u m computationally
unsolvable dls expressive alcqio    exptime hard alc 
remainder section  focus computational properties reasoning
tasks t  t  a s u m related notions safety modules signature 
demonstrate reasoning tasks undecidable dls expressive
alco 
theorem     undecidability safety signature  problem checking
whether ontology consisting single alc axiom safe signature undecidable w r t  l   alco 
proof  proof variation construction undecidability deductive conservative extensions alcqio  lutz et al          based reduction domino tiling
problem 
domino system triple    t  h  v                 k  finite set tiles
h  v horizontal vertical matching relations  solution domino
system mapping ti j assigns every pair integers i  j   element  
hti j   ti j   h hti j   ti   j v   periodic solution domino system
solution ti j exist integers     n   called periods
ti m j   ti j ti j n   ti j every i  j   
let set domino systems  ds subset admit solution
dps subset ds admit periodic solution  well known  borger  gradel 
  gurevich        theorem        sets   ds dps recursively inseparable 
is  recursive  i e  decidable  subset d  domino systems
dps d  ds  
use property reduction  domino system d  construct
signature   s d   ontology   o d  consists single alc axiom
that 
   

fimodular reuse ontologies  theory practice

 q   

  v a  ak

              k 

 q   

u at  v
f
v rh    ht t  ih at   
f
v rv    ht t  iv at   

    t  k

 q   
 q   

 tk
 tk

figure    ontology otile   otile  d  expressing tiling conditions domino system
 a  solution   o d  safe   s d  w r t  l   alco 

 b  periodic solution   o d  safe   s d  w r t  l   alco 
words  set d  consisting domino systems   o d 
safe   s d  w r t  l   alco  dps d  ds   since   ds dps
recursively inseparable  implies undecidability d  hence problem
checking s safe w r t  l   alco  otherwise one use problem
deciding membership d   
signature   s d   ontology   o d  constructed follows  given
domino system    t  h  v    let consist fresh atomic concepts every
two atomic roles rh rv   consider ontology otile figure   constructed d  note
sig otile     s  axioms otile express tiling conditions domino system
d  namely  q     q    express every domain element assigned unique tile
   q     q    express every domain element horizontal vertical matching
successors 
let atomic role b atomic concept s  b
  s  let      
where 

hf
     v s 
 ci vdi  otile  ci u di    rh  rv  b u rv  rh  b 
say rh rv commute interpretation    i     domain
elements a  b  c  d  d  ha  bi rh   hb  d  rv   ha  ci rv  
hc  d  rh   d    d    following claims easily proved 
claim   

otile  d  model rh rv commute  solution 

indeed model        otile  d  used guide construction solution
ti j follows  every i  j    construct ti j inductively together elements
ai j hai j   ai j   rv hai j   ai   j rh   set a    element
 
suppose ai j i  j   constructed  since model axioms  q   
 q    figure    unique   k ai j   set
ti j    t  since model axioms  q     q    ai j exist b  c
t    t   hai j   bi rh   hai j   ci rv   ht  t  h  ht  t   v   b at   
c at     case assign ai j      b  ai   j    c  ti j      t    ti   j    t    
note values ai j ti j assigned two times  ai   j   ti   j  
constructed ai j   ai j     however  since rv rh commute i  value
   

ficuenca grau  horrocks  kazakov    sattler

ai   j   unique   q     value ti   j   unique  easy see
ti j solution d 
claim   

model otile o  rh rv commute i 

indeed  easy see otile       v s  rh  rv  b u rv  rh  b    hence 
   i     model otile o  exist a  b  c  d  d  hx  ai si
every x   ha  bi rh   hb  d  rv   d  b   ha  ci rv   hc  d  rh  
d   b i   implies d     d    so  rh rv commute i 
finally  demonstrate   o d  satisfies properties  a   b  
order prove property  a  use sufficient condition safety given proposition   demonstrate solution every interpretation
exists model j j  s   i s   proposition    imply safe
w r t  l 
let arbitrary interpretation  since solution  contra positive
claim   either     model otile       rh rv commute i 
demonstrate cases construct required model j
j  s   i s  
case         i     model otile exists axiom  ci v di  
otile      ci v di    is  exists domain element
cii   dii   let us define j identical except interpretation
atomic role define j sj    hx  ai   x    since interpretations
symbols remained unchanged  cij   dij   j       v
s  ci u dj     implies j      so  constructed model j
j  s   i s  
case      suppose rh rv commute    i      means
exist domain elements a  b  c  d  d  ha  bi rh   hb  d  rv  
ha  ci rv   hc  d  rh   d     d    let us define j identical except
interpretation atomic role atomic concept b  interpret j
sj    hx  ai   x    interpret b j b j    d     note  rh  rv  b j
 rv  rh  b j since d     d    so  j       v s  rh  rv  b u rv  rh  b  
implies j      thus  constructed model j
j  s   i s  
order prove property  b   assume periodic solution ti j
periods m  n    demonstrate s safe w r t  l  purpose
construct alco ontology o  sig o  sig o    o        v   
o         v    imply safe o  w r t  l   alco  and  hence 
safe w r t  l   alco 
define o  every model o  finite encoding periodic solution ti j
periods n  every pair  i  j      j n introduce
fresh individual ai j define o  extension otile following axioms 
 p     ai   j   v rv   ai   j  

 p     ai   j   v rv   ai   j   

i    i     

mod

 p     ai j    v rh   ai j   

 p     ai j    v rh   ai j    
j    j     
f
 p      v  im   jn  ai j  

mod n

   

fimodular reuse ontologies  theory practice

purpose axioms  p    p    ensure rh rv commute every model
o    easy see o  model corresponding every periodic solution
periods n  hence o         v    hand  claim    since o  contains
otile   every model o  o  rh rv commute  possible
o  models  o        v   
direct consequence theorem    proposition    undecidability
problem checking whether subset ontology module signature 
corollary    given signature alc ontologies o  o   o    problem
determining whether o   s module o  w r t  l   alco undecidable 
proof  claim   proposition     s safe w r t  l o    s module
w r t  l  hence algorithm recognizing modules signature l used
checking ontology safe signature l 
corollary    algorithm perform tasks t   t  a s u m l  
alco 
proof  theorem    directly implies algorithm task t   since task
corresponds problem checking safety signature 
solving reasoning tasks t am  t sm  t um l least hard
checking safety ontology  since  claim   proposition     ontology
s safe w r t  l iff o     the minimal  s module w r t  l 

   sufficient conditions safety
theorem    establishes undecidability checking whether ontology expressed
owl dl safe w r t  signature  undecidability result discouraging leaves
us two alternatives  first  could focus simple dls problem
decidable  alternatively  could look sufficient conditions notion safety
is  ontology satisfies conditions  guarantee safe 
converse  however  necessarily hold 
remainder paper focuses latter approach  go further 
however  worth noting theorem    still leaves room investigating former
approach  indeed  safety may still decidable weaker description logics  el 
even expressive logics shiq  case shiq  however  existing
results  lutz et al         strongly indicate checking safety likely exponentially
harder reasoning practical algorithms may hard design  said 
follows focus defining sufficient conditions safety use practice
restrict owl dlthat is  shoiqontologies 
    safety classes
general  sufficient condition safety defined giving  signature
s  set ontologies language satisfy condition signature 
ontologies guaranteed safe signature consideration 
intuitions lead notion safety class 
   

ficuenca grau  horrocks  kazakov    sattler

definition     class ontologies  safety class   class ontologies language
l function o   assigns every subset signature l  subset o s 
ontologies l  class o   anti monotonic s  s  implies o s    o s    
compact o s sig o   o s   subset closed o  o 
o  o s  implies o  o s   union closed o  o s  o  o s  implies
 o  o    o s  
safety class  also called sufficient condition safety  ontology language l
class ontologies o   l case  i  o s  
 ii  ontology o s  s safe l 

intuitively  class ontologies collection sets ontologies parameterized
signature  safety class represents sufficient condition safety  ontology o s 
safe s  also  w l o g   assume empty ontology belongs
every safety class every signature  follows  whenever ontology belongs
safety class given signature safety class clear context 
sometimes say passes safety test s 
safety classes may admit many natural properties  given definition     antimonotonicity intuitively means ontology proved safe w r t 
using sufficient condition  proved safe w r t  every subset s 
compactness means sufficient consider common elements sig o 
checking safety  subset closure  union closure  means  o  o    satisfy
sufficient condition safety  every subset  the union o  o    satisfies
condition 
    locality
section introduce family safety classes l   shoiq based
semantic properties underlying notion model conservative extensions  section   
seen that  according proposition    one way prove s safe show
model s conservative extension empty ontology 
following definition formalizes classes ontologies  called local ontologies 
safety proved using proposition   
definition     class interpretations  locality   given shoiq signature s 
say set interpretations local w r t  every shoiq interpretation
exists interpretation j i s   j  s  
class interpretations function i   given shoiq signature returns set
interpretations i s   local i s  local w r t  every s  monotonic s  s 
implies i s    i s     compact every s    s   s  s     
i s    s   i s    s   s  s  symmetric difference sets s 
s  defined s  s     s    s  s    s   
given class interpretations i    say o   class ontologies o   based
i   every s  o s  set ontologies valid i s   i   local
say o   class local ontologies  every o s  every
o  say local  based i    


   

fimodular reuse ontologies  theory practice

r
example    let ia
   class shoiq interpretations defined follows  given
r
signature s  set ia  s  consists interpretations j rj   every atomic
r
role r
  aj   every atomic concept
  s  easy show ia
 s 


local every s  since every interpretation         interpretation
j    j   j   defined j      rj   r
  s  aj  
  s  x j    x
r
r
r
remaining symbols x  j ia  s  i s   j  s   since ia
 s    ia
 s   
r
r
every s  s    case ia    monotonic  ia    compact  since
r
r
 s    defined differently
 s    ia
every s  s  sets interpretations ia
elements s  s   
r
r
given signature s  set axa
 s  axioms local w r t  based ia
 s 
r
consists axioms every j ia  s   case j     
r
r
r
 s  
 s  iff axa
   defined oa
class local ontologies based ia


proposition     locality implies safety  let o   class ontologies shoiq
based local class interpretations i    o   subset closed union closed
safety class l   shoiq  additionally  i   monotonic  o   anti monotonic 
i   compact o   compact 
proof  assume o   class ontologies based i    definition   
every shoiq signature s  o s  iff valid i s  iff j    every
interpretation j i s   since i   local class interpretations 
every shoiq interpretation exists j i s  j  s   i s   hence
every i s  every shoiq interpretation model j i s 
j  s   i s   implies proposition   safe w r t  l   shoiq  thus
o   safety class 
fact o   subset closed union closed follows directly definition   
since  o  o    o s  iff  o  o    valid i s  iff o  o  valid i s  iff
o  o s  o  o s   i   monotonic i s    i s    every s  s   
o s    implies valid i s    implies valid i s   
implies o s     hence o   anti monotonic 
i   compact every s    s   s  s     
i s    s   i s    s   hence every sig o  valid
i s    iff valid i s     so  o s    iff o s     particular  o s  iff
o s sig o   since  s  s sig o    sig o     s   sig o   sig o      hence 
o   compact 
r
corollary    class ontologies oa
 s  defined example    anti monotonic
compact subset closed union closed safety class 

example    recall example   section    demonstrated ontology
p  q given figure   p     p           p   e   deductive conservative extension
q    cystic fibrosis  genetic disorder   done showing every
s interpretation expanded model j axioms p p   e  interpreting
symbols sig p      empty set  terms example    means
   

ficuenca grau  horrocks  kazakov    sattler

r
r
p  oa
 s   since oa
   class local ontologies  proposition     ontology
p  safe w r t  l   shoiq 


proposition    example    suggest particular way proving safety ontologies  given shoiq ontology signature sufficient check whether
r
 s   is  whether every axiom satisfied every interpretation
oa
r
ia  s   property holds  must safe according proposition    
turns notion provides powerful sufficiency test safety works
surprisingly well many real world ontologies  shown section    next
section discuss perform test practice 
    testing locality
r
section  focus detail safety class oa
    introduced example     ambiguity arise  refer safety class simply locality  
r
definition axa
 s  given example    easy see axiom
r
local w r t   based ia  s   satisfied every interpretation fixes interpretation atomic roles concepts outside empty set  note defining
locality fix interpretation individuals outside s  principle 
could done  reason elegant way describe interpretations 
namely  every individual needs interpreted element domain 
canonical element every domain choose 
order test locality w r t  s  sufficient interpret every atomic concept
atomic role empty set check satisfied interpretations
remaining symbols  observation suggests following test locality 

proposition     testing locality  given shoiq signature s  concept c  axiom
ontology let  c  s      s   o  s  defined recursively follows 
 c  s     

    s 
   a  s 
    a   s 
   c  u c    s 
   c    s 
   r c    s 
     n r c     s 

    
 
  otherwise   a 
   a  
   c    s  u  c    s  
   c    s  
  sig r    otherwise   r   c    s  
  sig r    otherwise      n r   c    s   

 c  v c    s       c    s  v  c    s   
   r  v r    s      v   sig r      s  otherwise
  r     v sig r      s  otherwise    r  v r    
   a   c  s 
     c  s  
   r a  b   s 
    v r
  otherwise   r a  b  
   trans r   s    v r
  otherwise   trans r  
   funct r   s    v sig r    otherwise   funct r  

 o  s     
   s 
   s     

   notion locality exactly one used previous work  cuenca grau et al         

   

 a 
 b 
 c 
 d 
 e 
 f  
 g 
 h 
 i 
 j 
 k 
 l 
 m 
 n 

fimodular reuse ontologies  theory practice

r
then  oa
 s  iff every axiom  o  s  tautology 

proof  easy check every atomic concept atomic role r  c  s  
r s  words  atomic concepts roles
eliminated transformation   easy show induction every
r
interpretation ia
 s   c      c  s  i    iff       s   hence
r
axiom local w r t  iff    every interpretation ia
 s  iff       s 
r
every sig   interpretation ia  s  iff    s  tautology 
example    let      ontology consisting axiom   m  figure   
demonstrate using proposition    local w r t  s     fibrosis  genetic origin  
local w r t  s     genetic fibrosis  origin  
indeed  according proposition     order check whether local w r t  s 
sufficient perform following replacements  the symbols s  underlined  

m 

 by  f  
 by  b  
  
 
z
  
 
z
genetic fibrosis fibrosis u origin genetic origin

   

similarly  order check whether local w r t  s    sufficient perform
following replacements  the symbols s  underlined  
 by  b  
 by  b  
  
 
z     
z
m  genetic fibrosis fibrosis u origin genetic origin

   

first case obtain  m   s        fibrosis u   shoiq tautology 
hence local w r t  s  hence proposition   s   safe w r t  shoiq 
second case  m   s       genetic fibrosis u origin   shoiq
tautology  hence local w r t  s   

    tractable approximation locality
one important conclusions proposition    one use standard capabilities available dl reasoners fact    tsarkov   horrocks         racer
 moller   haarslev         pellet  sirin   parsia        kaon   motik        testing
locality since reasoners  among things  allow testing dl tautologies  checking tautologies description logics is  theoretically  difficult problem  e g 
dl shoiq known nexptime complete  tobies         are  however 
several reasons believe locality test would perform well practice  primary
reason sizes axioms need tested tautologies usually
relatively small compared sizes ontologies  secondly  modern dl reasoners
highly optimized standard reasoning tasks behave well realistic ontologies 
case reasoning costly  possible formulate tractable approximation
locality conditions shoiq 
   recall constructors   c  c    r c     n r c  assumed expressed using   
c  u c    r c    n r c   hence  particular  every role r sig r     occurs either
r  c     n r  c   r v r  r v r   trans r    funct r    hence eliminated  atomic
concepts
  eliminated likewise  note necessarily case sig     s   s 
since    s  may still contain individuals occur s 

   

ficuenca grau  horrocks  kazakov    sattler

definition     syntactic locality shoiq   let signature  following
grammar recursively defines two sets concepts con s  con s  signature s 
con s        c   c u c   c u c   r  c   r c      n r  c       n r c    
con s          c   c  u c   

  atomic concept  r  possibly inverse of  atomic role r
  s  c
con s          
concept  r role  c con s   c i 
axiom syntactically local w r t  one following forms      r v r 
    trans r        funct r        c v c      c v c         c   denote
r
axa
 s  set shoiq axioms syntactically local w r t  s 
r
shoiq ontology syntactically local w r t  axa
 s   denote
r
oa  s  set shoiq ontologies syntactically local w r t  s 

intuitively  syntactic locality provides simple syntactic test ensure axiom
r
satisfied every interpretation ia
 s   easy see inductive definitions


con  s  con  s  definition    every interpretation    i    
r
ia
 s  case  c  i    c  i   every c con s 

c con s   hence  every syntactically local axiom satisfied every interpretation
r
ia
 s   obtain following conclusion 
r
r
proposition    axa
 s  axa
 s  

further  shown safety class shoiq based syntactic locality
enjoys properties definition    
r
proposition    class syntactically local ontologies oa
   given definition   
anti monotonic  compact  subset closed  union closed safety class 
r
r
   safety class proposition     anti monotonicity oa
  
proof  oa



shown induction  proving con  s    con  s     con  s    con s   
r
r
axa
 s    axa
 s    s  s    one show induction
r
r
r
r


axa  s  iff axa  s sig     oa
   compact  since oa
 s 
r
r

iff axa  s   oa    subset closed union closed 

example     example    continued  easy see axiom m  figure  
syntactically local w r t  s     fibrosis  genetic origin   indicate sub concepts
con s    

m 

con s     matches  
con s     matches r  c 
z
  
 
z
  
 
genetic fibrosis fibrosis u origin genetic origin
   
 
 z
 
con s     matches c u c  

easy show similar way axioms p  p   e  figure   syntactically local w r t     cystic fibrosis  genetic disorder   hence ontology p   
 p           p   e   considered example    syntactically local w r t  s 

   

fimodular reuse ontologies  theory practice

r  s 
ia

r     

r
ia
 s 
r
ia
 s 
rid  s 
ia

rj

aj

r  s 
ia





r
ia
 s 



r
ia
 s 



rid  s 
ia

j j
 hx  xi   x j  

r     

rj

aj



j

j j
 hx  xi   x j  

j
j

table    examples different local classes interpretations
converse proposition    hold general since semantically
local axioms syntactically local  example  axiom    a v b 
local w r t  every since tautology  and hence true every interpretation  
hand  easy see syntactically local w r t     a  b  according
definition    since involves symbols only  another example  tautology 
gci    r a v r b   axiom semantically local w r t     r   since
   s     r  v r   tautology  syntactically local  examples show
limitation syntactic notion locality inability compare different
occurrences concepts given signature s  result  syntactic locality
detect tautological axioms  reasonable assume  however  tautological axioms
occur often realistic ontologies  furthermore  syntactic locality checking
performed polynomial time matching axiom according definition    
proposition    exists algorithm given shoiq ontology sigr
nature s  determines whether oa
 s   whose running time polynomial
 o     s    o   s  number symbols occurring respectively  
    locality classes
r
locality condition given example    based class local interpretations ia
  
particular example locality used testing safety  classes
local interpretations constructed similar way fixing interpretations
elements outside different values  table   listed several classes
local interpretations fix interpretation atomic roles outside either
empty set   universal relation   identity relation id  
interpretation atomic concepts outside either empty set set
elements 
local class interpretations table   defines corresponding class local
ontologies analogously example     table   listed classes together
examples typical types axioms used ontologies  axioms assumed
extension project ontology figure    indicate axioms
local w r t  locality conditions assuming  usual  symbols
underlined 
seen table   different types locality conditions appropriate
r
different types axioms  locality condition based ia
 s  captures domain
axiom p   definition p   disjointness axiom p   functionality axiom p 

   assume numbers number restrictions written using binary coding 

   

ficuenca grau  horrocks  kazakov    sattler

r


r


rid


r


r


rid


 

 

 

 

 

 

 

 

 

 

 

 

p  project u bio medicine v

 

 

 

 

 

 

p  funct has focus 

 

 

 

 

 

 

p  human genome   project

 

 

 

 

 

 

p  focus human genome  gene 

 

 

 

 

 

 

 

 

 

 

 

 



  ax

axiom

p  focus   v project
p 

e 

biomedical project project u
u focus bio medicine

focus cystic fibrosis v
v focus cystic fibrosis

table    comparison different types locality conditions

neither assertions p  p   since individuals human genome gene prevent
us interpreting atomic role focus atomic concept project empty
r
 s   atomic roles concepts outside
set  locality condition based ia
interpreted largest possible sets  capture assertions generally
poor types axioms  example  functionality axiom p  captured
locality condition since atomic role focus interpreted universal
relation   necessarily functional  order capture functionality
rid  s  rid  s   every atomic role outside
axioms  one use locality based ia

interpreted identity relation id interpretation domain  note
modeling error e  local given locality conditions  note
possible come locality condition captures axioms p p   since
p  p  together imply axiom     human genome  u bio medicine v  
uses symbols only  hence  every subset p containing p  p  safe
w r t  s  cannot local w r t  s 
might possible come algorithms testing locality conditions
classes interpretation table   similar ones presented proposition    
r
example  locality based class ia
 s  tested proposition    
case  a  definition  c  s  replaced following 
 a  s 

   
  otherwise  

 a   

r
rid  s   checking
remaining classes interpretations  ia
 s  ia
locality  however  straightforward  since clear eliminate
universal roles identity roles axioms preserve validity respective
classes interpretations 
still  easy come tractable syntactic approximations locality
conditions considered section similar manner done section      idea used definition     namely define two sets
con s  con s  concepts signature interpreted empty

   

fimodular reuse ontologies  theory practice

con s      c   c u c   c u c

con s          c   c  u c 

  r c     n r c

r    
ia

 

r    
ia

 

r
ia
   

  r  c      n r  c  

r
ia
   

  r  c     n r  c

rid    
ia

  rid  c        rid  c    

rid    
ia

     rid  c      

r  s      c v c   c v c     c
axa
r
ia
   

  r v r   trans r     funct r  

r
ia
   

  r v r   trans r     r  a  b 

rid    
ia

  trans rid     funct rid  

where 
    r   r   rid   s 
sig r    sig r    sig rid     s 
con s  
c con s   c i 
c concept  r role

figure    syntactic locality conditions classes interpretations table  
set and  respectively  every interpretation class see situations dl constructors produce elements sets  figure   gave recursive
r  s  correspond classes r  s 
definitions syntactically local axioms axa

interpretations table    cases recursive definitions present
indicated classes interpretations 
    combining extending safety classes
previous section gave examples several safety classes based different local
classes interpretations demonstrated different classes suitable different
types axioms  order check safety ontologies practice  one may try apply
different sufficient tests check succeeds  obviously  gives
powerful sufficient condition safety  seen union safety classes
used tests 
formally  given two classes ontologies o     o      union  o  o     
class ontologies defined  o  o    s    o   s o   s   easy see definition   
o     o     safety classes union  o  o      safety
class  moreover  safety classes anti monotonic subset closed 
union anti monotonic  respectively  subset closed well  unfortunately unionclosure property safety classes preserved unions  demonstrated
following example 
r
r
example    consider union  oa
oa
    two classes local ontologies
r
r
oa    oa    defined section      safety class union closed since 
example  ontology o  consisting axioms p p  table   satisfies first
locality condition  ontology o  consisting axioms p p  satisfies second locality
condition  union o  o  satisfies neither first second locality condition
and  fact  even safe shown section     


shown proposition     every locality condition gives union closed safety class 
however  seen example     union safety classes might longer unionclosed  one may wonder locality classes already provide powerful sufficient
   

ficuenca grau  horrocks  kazakov    sattler

conditions safety satisfy desirable properties definition     surprisingly
case certain extent locality classes considered section     
definition     maximal union closed safety class   safety class o     extends
safety class o     o   s  o   s  every s  safety class o     maximal unionclosed language l o     union closed every union closed safety class o    
extends o     every l o   s  implies o   s  

r
r
proposition    classes local ontologies oa
   oa
   defined section    
maximal union closed safety classes l   shiq 

proof  according definition     safety class o   maximal union closed
language l  exists signature ontology l   i 
 
o s    ii  safe w r t  l   iii  every p o s   case p
safe w r t  l  is  every ontology q l sig q  sig o p 
case p q deductive conservative extension q  demonstrate
r
r
possible o     oa
   o     oa
  
r
first consider case o     oa    show modify proof
r
case o     oa
   
let ontology l satisfies conditions  i  iii  above  define ontologies
p q follows  take p consist axioms v r   v every atomic
r
concept atomic role r sig o    s  easy see p oa
 s   take q
consist tautologies form v v r   every a  r s  note
sig o p  sig q  s  claim p q deductive sig q  conservative
extension q 
   
r
intuitively  ontology p chosen way p oa
 s  p q
r
models ia
 s   q ontology implies nothing tautologies
uses atomic concepts roles s 
r
r
since
  oa
 s   exists axiom
  axa
 s   let
      s       defined proposition     shown proof
r
proposition     iff    every ia
 s   now  since    p q
r
models ia  s   case p q      proposition     since
r
contain individuals  sig     sig q  and  since
  axa
 s  
tautology  thus q       hence  definition    p q deductive
sig q  conservative extension q     
r
o     oa
   proof repeated taking p consist axioms   v
r   v a  r sig o    s  modifying      discussed
section     
difficulties extending proof proposition    locality
classes considered section      first  clear force interpretations roles
universal identity relation using shoiq axioms  second  clear
define function      cases  see related discussion section       note
proof proposition    work presence nominals  since
guarantee      s  contains symbols  see footnote  
r
r
p        hence probably room extend locality classes oa
   oa
  
l   shoiq preserving union closure 
   

fimodular reuse ontologies  theory practice

   extracting modules using safety classes
section revisit problem extracting modules ontologies  shown
corollary    section    exists general procedure recognize extract
 minimal  modules signature ontology finite time 
techniques described section    however  reused extracting particular
families modules satisfy certain sufficient conditions  proposition    establishes
relationship notions safety module  precisely  subset o 
s module provided   o  safe sig o     therefore  safety class
o   provide sufficient condition testing modulesthat is  order prove
o  s module o  sufficient show   o  o s sig o      notion
modules based property defined follows 
definition     modules based safety class  
let l ontology language o   safety class l  given ontology
signature l  say om o   based s module   om
o s sig om    

remark    note every safety class o    ontology signature s  exists
least one o   based s module o  namely itself  indeed  definition     empty
ontology     belongs o s  every o   s 
note follows definition    om o   based s module iff
om o   based s   module every s  s   s sig om    

clear that  according definition     procedure checking membership
safety class o   used directly checking whether om module based o   
order extract o   module  sufficient enumerate possible subsets
ontology check subsets module based o   
practice  however  possible avoid checking possible subsets
input ontology  figure   presents optimized version module extraction algorithm 
procedure manipulates configurations form om   ou   os   represent
partitioning ontology three disjoint subsets om   ou os   set om
accumulates axioms extracted module  set os intended safe w r t 
sig om    set ou   initialized o  contains unprocessed axioms 
axioms distributed among om os according rules r  r   given axiom
ou   rule r  moves os provided os remains safe w r t  sig om   according
safety class o    otherwise  rule r  moves om moves axioms
os back ou   since sig om   might expand axioms os might become longer
safe w r t  sig om    end process  axioms left ou  
set om o   based module o 
rewrite rules r  r  preserve invariants i i  given figure    invariant i 
states three sets om   ou os form partitioning o  i  states set os
satisfies safety test sig om   w r t  o    finally  i  establishes rewrite
rules either add elements om   add elements os without changing om  
words  pair   om     os    consisting sizes sets increases lexicographical
order 
   

ficuenca grau  horrocks  kazakov    sattler

input 

ontology o  signature s  safety class o  

output 

module om based o  
unprocessed


configuration  om   ou   os  




module

safe

initial configuration  

 o 

termination condition  ou  

rewrite rules 
r   om   ou      os   om   ou   os   

 os     o s sig om   

r   om   ou      os   om      ou os  

 os       o s sig om   

invariants om   ou   os  
i     om   ou   os

    o    o   
invariant om   ou   os   om
u

      o     
i     om     os     lex   om


i   os o s sig om   
figure    procedure computing modules based safety class o  
proposition     correctness procedure figure    let o   safety
class ontology language l  ontology l  signature l  then 
    procedure figure   input o  s  o   terminates returns o  based s module om o 
    if  additionally  o   anti monotonic  subset closed union closed 
unique minimal o   based s module o  procedure returns precisely
minimal module 
proof      procedure based rewrite rules figure   always terminates
following reasons   i  every configuration derived rewrite rules  sets om  
ou os form partitioning  see invariant i  figure     therefore size
every set bounded   ii  rewrite step    om     os    increases lexicographical
order  see invariant i  figure     additionally  ou    always possible
apply one rewrite rules r  r   hence procedure always terminates
ou     upon termination  invariant i  figure    partitioned om os
invariant i   os o s sig om     implies  definition     om
o   based s module o 
    now  suppose that  addition  o   anti monotonic  subset closed  union  o   based s module o  demonstrate
closed safety class  suppose om
induction every configuration om   ou   os derivable     rewrite
    prove module computed
rules r  r   case om om
procedure subset every o   based s module o  hence  smallest
o   based s module o 
    rewrite rule r  change
indeed  base case om   om
set om   rewrite rule r  have  om   ou      os   om      ou os  
 os       o s sig om    
   
   

fimodular reuse ontologies  theory practice

input  ontology o  signature s  safety class o  
output  module om based o  
initial configuration  

 o 

termination condition  ou  

rewrite rules 
r  

om   ou      os   om   ou   os   

   o s sig om   

r   om   ou      os os   om      ou os   os      o s sig om    
sig os   sig   sig om  
figure    optimized procedure computing modules based compact subsetclosed union closed safety class o  
                     
suppose  contrary  om om




  o   based s module o    o s sig o       since o  
since om


      since
 
subset closed     o s sig om
om o   anti monotonic 
   o s sig om     since invariant i  figure    os o s sig om   
o   union closed  os    o s sig om     contradicts      contradiction
   
implies rule r  preserves property om om

claim     proposition    establishes procedure figure   terminates
every input produces module based given safety class  moreover  possible
show procedure runs polynomial time assuming safety test
performed polynomial time 
safety class o   satisfies additional desirable properties  based classes
local interpretations described section      procedure  fact  produces smallest
possible module based safety class  stated claim     proposition    
case  possible optimize procedure shown figure    o   union closed 
then  instead checking whether  os     o s sig om    conditions rules
r  r   sufficient check    o s sig om    since already known
os o s sig om     o   compact subset closed  instead moving
axioms os ou rule r   sufficient move axioms os contain
least one symbol occur om before  since set remaining
axioms stay o s sig om     figure   present optimized version
algorithm figure   locality classes 
example    table   present trace algorithm figure   ontology
consisting axioms m m  figure    signature    cystic fibrosis  genetic disorder 
r
safety class o     oa
   defined example     first column table lists
configurations obtained initial configuration     applying rewrite
rules r  r  figure    row  underlined axiom one
tested safety  second column table shows elements sig om  
appeared current configuration present preceding
configurations  last column indicate whether first conditions rules r 
r
r  fulfilled selected axiom ou is  whether local ia
   
rewrite rule corresponding result test applied configuration 
   

ficuenca grau  horrocks  kazakov    sattler

om   ou     os

new elements sig om  

    m   m   m   m   m    cystic fibrosis  genetic disorder

   o s sig om    
yes



r 

 

  m   m   m   m    m 



yes



r 

 

  m   m   m    m   m 







r 

 

m    m   m   m   m   

fibrosis  located in  pancreas 
origin  genetic origin





r 

 

m   m    m   m   m   

genetic fibrosis





r 

 

m   m   m    m   m   



yes



r 

 

m   m   m    m    m 







r 

 

m   m   m   m      m 



table    trace procedure figure   input q    m           m   figure  
   cystic fibrosis  genetic disorder 

note axioms tested safety several times different configurations 
set ou may increase applications rule r   example  axiom
  m  tested safety configurations        m  configurations
     note different results locality tests obtained cases 
m  m  local w r t  sig om   om     became non local
new axioms added om   easy see that  case  syntactic locality
produces results tests 
example  rewrite procedure produces module om consisting axioms m 
m   note possible apply rewrite rules different choices axiom
ou   results different computation  words  procedure
figure   implicit non determinism  according claim     proposition   
r
computations produce module om   smallest oa
   based
s module o  is  implicit non determinism procedure figure  
impact result procedure  however  alternative choices
may result shorter computations  example could selected axiom m 
first configuration instead m  would led shorter trace consisting
configurations       only 

worth examining connection s modules ontology based
particular safety class o   actual minimal s modules o  turns
o   based module om guaranteed cover set minimal modules  provided
o   anti monotonic subset closed  words  given s  om contains
s essential axioms o  following lemma provides main technical argument
underlying result 
lemma    let o   anti monotonic subset closed safety class ontology language l  ontology  signature l  let o  s module w r t  l
om o   based s module o  o     o  om s module w r t  l 
   

fimodular reuse ontologies  theory practice

proof  definition     since om o   based s module o    om
o s sig om     since o    o    o    om   om o   subset closed  case
o    o  o s sig om     since o   anti monotonic  o  om  
o    o  o s sig o      hence  o  o   based s module o    particular o 
s module o  w r t  l  since o  s module w r t  l  o  s module
w r t  l 
corollary    let o   anti monotonic  subset closed safety class l om
o   based s module o  om contains s essential axioms w r t  l 
proof  let o  minimal s module w r t  l  demonstrate o  om   indeed 
otherwise  lemma     o  om s module w r t  l strictly contained
o    hence om superset every minimal s module hence  contains
s essential axioms w r t  l 
shown section      axioms m m  essential ontology
signature considered example     seen example locality based
s module extracted contains axioms  accordance corollary    
case  extracted module contains essential axioms  general  however  localitybased modules might contain non essential axioms 
interesting application modules pruning irrelevant axioms checking
axiom implied ontology o  indeed  order check whether   
suffices retrieve module sig   verify implication holds w r t 
module  cases  sufficient extract module subset signature
which  general  leads smaller modules  particular  order test subsumption
pair atomic concepts  safety class used enjoys nice properties
suffices extract module one them  given following proposition 
proposition    let o   compact union closed safety class ontology language
l  ontology a  b atomic concepts  let oa o   based module
   a  o  then 
         a v b   b v   o   oa     
         b v a     v b  o   oa     
proof     consider two cases   a  b sig oa    b  b
  sig oa   
 a  remark    case oa o   based module    a  b  
since sig   s  definition    definition    case    implies
oa     
 b  consider o     b v    since sig b v      b  b
  sig oa     b v  
o   o   compact  definition    case  b v   o s sig oa    
since oa o   based s module o  definition       oa o s sig oa    
since o   union closed  case  o   oa    b v   o s sig oa     note
b v   oa   since b   sig oa    hence  o   oa    b v     o    oa   and 
definition     oa o   based s module o    now  since     a v b  
case o      a v    hence  since oa module o     a  
oa     a v   implies oa     a v b  
   

ficuenca grau  horrocks  kazakov    sattler

   proof case analogous case    case  a  applicable without
changes  case  b  show oa o   based module    a  o   
   v b   and  hence  since o        v a   case ob       v a  
implies o      b v a  
r   
corollary    let shoiq ontology a  b atomic concepts  let oa
r    locality classes based local classes interpretations form r   
oa

r
r   
ia     respectively  table    let oa module    a  based oa
r         a v b  iff     a v b  iff
ob module    b  based oa

ob     a v b  
r       v a  r    
proof  easy see  b v   oa


proposition    implies module based safety class single atomic concept
used capturing either super concepts  case     sub concepts  case
   b a  provided safety class captures  applied empty signature 
axioms form b v  case       v b   case     is  b super concept
sub concept ontology module  property
used  example  optimize classification ontologies  order check
subsumption v b holds ontology o  sufficient extract module
   a  using modularization algorithm based safety class
ontology  b v   local w r t  empty signature  check whether subsumption
holds w r t  module  purpose  convenient use syntactically tractable
approximation safety class use  example  one could use syntactic locality
conditions given figure   instead semantic counterparts 
possible combine modularization procedures obtain modules smaller
ones obtained using procedures individually  example  order check
r    based module
subsumption     a v b  one could first extract oa
 
   a  o  corollary    module complete super concepts
o  including bthat is  atomic concept super concept o 
r    based module    b 
super concept m    one could extract oa
 
m  which  corollary     complete sub concepts b m    including a 
indeed  m  s module m     a  b  m  s module original
ontology o  proposition     therefore  case m  s module o 

   related work
seen section   notion conservative extension valuable formalization ontology reuse tasks  problem deciding conservative extensions
recently investigated context ontologies  ghilardi et al         lutz et al        
lutz   wolter         problem deciding whether p q deductive s conservative
extension q exptime complete el  lutz   wolter           exptime complete
w r t  alciq  lutz et al          roughly owl lite   undecidable w r t  alciqo
 roughly owl dl   furthermore  checking model conservative extensions already undecidable el  lutz   wolter         alc even semi decidable  lutz
et al         
   

fimodular reuse ontologies  theory practice

last years  rapidly growing body work developed
headings ontology mapping alignment  ontology merging  ontology integration 
ontology segmentation  kalfoglou   schorlemmer        noy      a      b   field
rather diverse roots several communities 
particular  numerous techniques extracting fragments ontologies purposes knowledge reuse proposed  techniques rely syntactically
traversing axioms ontology employing various heuristics determine
axioms relevant not 
example procedure algorithm implemented prompt factor
tool  noy   musen         given signature ontology q  algorithm retrieves fragment q  q follows  first  axioms q mention
symbols added q    second  expanded symbols sig q    
steps repeated fixpoint reached  example section     
 cystic fibrosis  genetic disorder   q consists axioms m m  figure    algorithm first retrieves axioms m   m   m  containing terms  expands
symbols mentioned axioms  contains symbols q 
step  remaining axioms q retrieved  hence  fragment extracted
prompt factor algorithm consists axioms m  m   case  promptfactor algorithm extracts module  though minimal one   general  however 
extracted fragment guaranteed module  example  consider ontology
q    a a  b v c     c v b   ontology q inconsistent due
axiom a  axiom  and particular  thus logical consequence q  given
   b  c   prompt factor algorithm extracts q     b v c   however  q       
q  module q  general  prompt factor algorithm may fail even q
consistent  example  consider ontology q      v  a   v b      a v r a  
   a   easy see q consistent  admits single element models 
satisfied every model  is  q      case  prompt factor
algorithm extracts q     a v b   imply  
another example seidenbergs segmentation algorithm  seidenberg   rector        
used segmentation medical ontology galen  rector   rogers        
currently  full version galen cannot processed reasoners  authors
investigate possibility splitting galen small segments processed
reasoners separately  authors describe segmentation procedure which  given set
atomic concepts s  computes segment ontology  description
procedure high level  authors discuss concepts roles
included segment not  particular  segment contain
super  sub  concepts input concepts  concepts linked
input concepts  via existential restrictions  super concepts  subconcepts  included concepts  restrictions  intersection  union 
equivalent concepts considered including roles concepts contain 
together super concepts super roles sub concepts
sub roles  description procedure entirely clear whether works
classified ontology  which unlikely case galen since full version
galen classified existing reasoner   or  otherwise  super 
sub  concepts computed  clear axioms included
   

ficuenca grau  horrocks  kazakov    sattler

segment end  since procedure talks inclusion concepts
roles 
different approach module extraction proposed literature  stuckenschmidt
  klein        consists partitioning concepts ontology facilitate visualization
navigation ontology  algorithm uses set heuristics measuring
degree dependency concepts ontology outputs graphical
representation dependencies  algorithm intended visualization technique 
establish correspondence nodes graph sets axioms
ontology 
common modularization procedures mentioned lack
formal treatment notion module  papers describing modularization
procedures attempt formally specify intended outputs procedures 
rather argue modules based intuitive notions 
particular  take semantics ontology languages account  might
possible formalize algorithms identify ontologies intuitionbased modularization procedures work correctly  studies beyond scope
paper 
module extraction ontologies investigated formal point view
 cuenca grau et al       b   cuenca grau et al         define notion module qa
ontology q atomic concept a  one requirements module q
conservative extension qa  in paper qa called logical module q  
paper imposes additional requirement modules  namely module qa
entail subsumptions original ontology atomic concepts involving
atomic concepts qa   authors present algorithm partitioning ontology
disjoint modules proved algorithm correct provided certain safety
requirements input ontology hold  ontology consistent 
contain unsatisfiable atomic concepts  safe axioms  which
terms means local empty signature   contrast  algorithm
present works ontology  including containing non safe axioms 
growing interest notion modularity ontologies recently
reflected workshop modular ontologies  held conjunction international
semantic web conference  iswc        concerning problem ontology reuse 
various proposals safely combining modules  proposals 
e connections  cuenca grau  parsia    sirin      a   distributed description logics
 borgida   serafini        package based description logics  bao  caragea    honavar 
      propose specialized semantics controlling interaction importing
imported modules avoid side effects  contrast works  assume
reuse performed simply building logical union axioms modules
standard semantics  establish collection reasoning services 
safety testing  check side effects  interested reader find literature
detailed comparison different approaches combining ontologies  cuenca
grau   kutz        
   information see homepage workshop http   www cild iastate edu events womo html

   

fimodular reuse ontologies  theory practice

   implementation proof concept
section  provide empirical evidence appropriateness locality safety
testing module extraction  purpose  implemented syntactic locar
r
lity checker locality classes oa
   oa
   well algorithm
extracting modules given figure   section   
r
first  show locality class oa
   provides powerful sufficiency test
r
safety works many real world ontologies  second  show oa
   based
modules typically small compared size ontology modules
extracted using techniques  third  report implementation ontology
editor swoop  kalyanpur  parsia  sirin  cuenca grau    hendler        illustrate
r
r
combination modularization procedures based classes oa
   oa
   
    locality testing safety
r
run syntactic locality checker class oa
   ontologies
library     ontologies various sizes complexity import
 gardiner  tsarkov    horrocks          ontologies p import ontology q 
check p belongs locality class   sig p  sig q  
turned    ontologies library import ontologies 
   syntactically local  and hence semantically local s     
non local ontologies    written owl full species owl  patel schneider et al  
      framework yet apply  remaining   non localities due
presence so called mapping axioms form b    
  b   s 
note axioms simply indicate atomic concepts a  b   two ontologies
consideration synonyms  indeed  able easily repair non localities
follows  replace every occurrence p b   remove axiom
ontology  transformation    non local ontologies turned local 

    extraction modules
section  compare three modularization  algorithms implemented
using manchesters owl api  
a   prompt factor algorithm  noy   musen        
a   segmentation algorithm proposed cuenca grau et al         
r
a   modularisation algorithm  algorithm     based locality class oa
   

aim experiments described section provide throughout comparison quality existing modularization algorithms since algorithm extracts
modules according requirements  rather give idea typical size
modules extracted real ontologies algorithms 
   library available http   www cs man ac uk  horrocks testing 
   section module understand result considered modularization procedures
may necessarily module according definition      
   http   sourceforge net projects owlapi

   

ficuenca grau  horrocks  kazakov    sattler

 a  modularization
nci
 a 
modularization
nci

 b  modularization
modularization
galen small
 b 
galen small

 c  modularization
modularization snomed
 c 
snomed

 d  modularization
modularization galen full
 d 
galen full

 e  small
small modules

galen full
 e 
modules
galen full

 f  large
large modules

galen full
 f 
modules
galen full

figure    distribution sizes syntactic locality based modules  x axis gives
number concepts modules y axis number modules extracted
size range 

   

fimodular reuse ontologies  theory practice

a   segmentation

a   loc  based mod 

  atomic

a   prompt factor

concepts

max    

avg    

max    

avg    

max    

avg    

nci

     

    

     

  

    

   

    

snomed

      

   

   

   

   

   

    

go

ontology

     

 

   

 

   

   

    

sumo

   

   

   

   

   

 

    

galen small

    

   

   

   

   

  

   

galen full

     

   

   

   

   

    

   

sweet

    

    

    

    

    

   

   

dolce lite

   

   

   

   

   

    

    

table    comparison different modularization algorithms

test suite  collected set well known ontologies available web 
divided two groups 
simple  group  included national cancer institute  nci  ontology  
sumo upper ontology    gene ontology  go     snomed ontology    
ontologies expressed simple ontology language simple structure 
particular  contain gcis  definitions 
complex  group contains well known galen ontology  galen full    
dolce upper ontology  dolce lite     nasas semantic web earth environmental terminology  sweet      ontologies complex since use many
constructors owl dl and or include significant number gcis  case
galen  considered version galen small commonly used
benchmark owl reasoners  ontology almost    times smaller original
galen full ontology  yet similar structure 
since benchmark ontology modularization use cases
available  systematic way evaluating modularization procedures  therefore
designed simple experiment setup which  even may necessarily reflect
actual ontology reuse scenario  give idea typical module sizes 
ontology  took set atomic concepts extracted modules every atomic
concept  compare maximal average sizes extracted modules 
worth emphasizing algorithm a  extract module
input atomic concept  extracted fragment module whole signature 
typically includes fair amount concepts roles 
  
   
   
   
   
   
   

http   www mindswap org      cancerontology ncioncology owl
http   ontology teknowledge com 
http   www geneontology org
http   www snomed org
http   www openclinical org prj galen html
http   www loa cnr it dolce html
http   sweet jpl nasa gov ontology 
   

ficuenca grau  horrocks  kazakov    sattler

r
r
 a  concepts dna sequence  b  oa
 s  based module  c  oa
 s  based module
microanatomy nci
dna sequence nci
micro anatomy fragment  b

figure    module extraction functionality swoop
results obtained summarized table    table provides size
largest module average size modules obtained using
algorithms  table  clearly see locality based modules significantly
smaller ones obtained using methods  particular  case sumo 
dolce  galen snomed  algorithms a  a  retrieve whole ontology
module input signature  contrast  modules obtain using algorithm
significantly smaller size input ontology 
nci  snomed  go sumo  obtained small locality based modules  explained fact ontologies  even large  simple
structure logical expressivity  example  snomed  largest locality based
module obtained approximately      size ontology  average size
modules      size largest module  fact  modules
obtained ontologies contain less    atomic concepts 
galen  sweet dolce  locality based modules larger  indeed 
largest module galen small      size ontology  opposed      
case snomed  dolce  modules even bigger    size
ontologywhich indicates dependencies different concepts
ontology strong complicated  sweet ontology exception  even
though ontology uses constructors available owl  ontology heavily
underspecified  yields small modules 
figure    detailed analysis modules nci  snomed 
galen small galen full  here  x axis represents size ranges ob   

fimodular reuse ontologies  theory practice

tained modules y axis number modules whose size within given range 
plots thus give idea distribution sizes different modules 
snomed  nci galen small  observe size modules
follows smooth distribution  contrast  galen full  obtained large number
small modules significant number big ones  medium sized modules
in between  abrupt distribution indicates presence big cycle dependencies
ontology  presence cycle spotted clearly figure   f   figure
shows large number modules size           concepts 
cycle occur simplified version galen thus obtain smooth
distribution case  contrast  figure   e  see distribution
small modules galen full smooth much similar one
simplified version galen 
considerable differences size modules extracted algorithms a 
a  due fact algorithms extract modules according different requirements  algorithm a  produces fragment ontology contains input atomic
concept syntactically separated rest axiomsthat is  fragment
rest ontology disjoint signatures  algorithm a  extracts fragment
ontology module input atomic concept additionally semantically
separated rest ontology  entailment atomic concept
module atomic concept module hold original ontology  since
algorithm based weaker requirements  expected extracts smaller
modules  surprising difference size modules significant 
order explore use results ontology design analysis 
integrated algorithm extracting modules ontology editor swoop  kalyanpur
et al          user interface swoop allows selection input signature
retrieval corresponding module   
figure  a shows classification concepts dna sequence microanatomy
r
nci ontology  figure  b shows minimal oa
   based module dna sequence 
r
obtained swoop  recall that  according corollary     oa
   based module
atomic concept contains necessary axioms for  least   entailed  super concepts
o  thus module seen upper ontology o  fact  figure  
shows module contains concepts path dna sequence
top level concept anatomy kind  suggests knowledge nci
particular concept dna sequence shallow sense nci knows
dna sequence macromolecular structure  which  end  anatomy kind  one
wants refine module including information ontology necessary
r
entail path dna sequence micro anatomy  one could extract oa
  based module micro anatomy fragment  b  corollary     module contains
sub concepts micro anatomy previously extracted module  resulting
module shown figure  b 

    tool downloaded http   code google com p swoop 

   

ficuenca grau  horrocks  kazakov    sattler

   conclusion
paper  proposed set reasoning problems relevant ontology
reuse  established relationships problems studied computability  using existing results  lutz et al         results obtained section   
shown problems undecidable algorithmically unsolvable logic
underlying owl dl  dealt problems defining sufficient conditions
solution exist  computed practice  introduced studied
notion safety class  characterizes sufficiency condition safety
ontology w r t  signature  addition  used safety classes extract modules
ontologies 
future work  would study approximations produce small
modules complex ontologies galen  exploit modules optimize ontology
reasoning 

references
baader  f   brandt  s     lutz  c          pushing el envelope  ijcai     proceedings nineteenth international joint conference artificial intelligence 
edinburgh  scotland  uk  july    august          pp          professional book
center 
baader  f   calvanese  d   mcguinness  d  l   nardi  d     patel schneider  p  f   eds   
        description logic handbook  theory  implementation  applications 
cambridge university press 
bao  j   caragea  d     honavar  v          semantics linking importing
modular ontologies  proceedings  th international semantic web conference
 iswc        athens  ga  usa  november            vol       lecture notes
computer science  pp       
borger  e   gradel  e     gurevich  y          classical decision problem  perspectives
mathematical logic  springer verlag  second printing  universitext       
borgida  a     serafini  l          distributed description logics  assimilating information
peer sources  j  data semantics            
cuenca grau  b   horrocks  i   kazakov  y     sattler  u          logical framework
modularity ontologies  ijcai     proceedings twentieth international
joint conference artificial intelligence  hyderabad  india  january       pp     
     aaai 
cuenca grau  b     kutz  o          modular ontology languages revisited  proceedings
workshop semantic web collaborative knowledge acquisition  hyderabad  india  january         
cuenca grau  b   parsia  b     sirin  e       a   combining owl ontologies using econnections  j  web sem               
cuenca grau  b   parsia  b   sirin  e     kalyanpur  a       b   modularity web ontologies  proceedings tenth international conference principles knowledge
   

fimodular reuse ontologies  theory practice

representation reasoning  kr        lake district united kingdom  june
           pp          aaai press 
cuenca grau  b   horrocks  i   kazakov  y     sattler  u          right amount 
extracting modules ontologies  proceedings   th international conference world wide web  www        banff  alberta  canada  may            
pp          acm 
cuenca grau  b   horrocks  i   kutz  o     sattler  u          ontologies fit
together   proceedings      international workshop description logics
 dl        windermere  lake district  uk  may      june          vol      ceur
workshop proceedings  ceur ws org 
gardiner  t   tsarkov  d     horrocks  i          framework automated comparison description logic reasoners  proceedings  th international semantic
web conference  iswc        athens  ga  usa  november            vol      
lecture notes computer science  pp          springer 
ghilardi  s   lutz  c     wolter  f          damage ontology  case conservative extensions description logics  proceedings tenth international
conference principles knowledge representation reasoning  kr       
lake district united kingdom  june            pp          aaai press 
horrocks  i   patel schneider  p  f     van harmelen  f          shiq rdf
owl  making web ontology language  j  web sem              
horrocks  i     sattler  u          tableaux decision procedure shoiq  proceedings
nineteenth international joint conference artificial intelligence  ijcai     
edinburgh  scotland  uk  july    august          pp          professional book
center 
kalfoglou  y     schorlemmer  m          ontology mapping  state art 
knowledge engineering review          
kalyanpur  a   parsia  b   sirin  e   cuenca grau  b     hendler  j  a          swoop 
web ontology editing browser  j  web sem                 
lutz  c   walther  d     wolter  f          conservative extensions expressive description
logics  proceedings twentieth international joint conference artificial
intelligence  ijcai      hyderabad  india  january       pp          aaai 
lutz  c     wolter  f          conservative extensions lightweight description logic
el  proceedings   st international conference automated deduction
 cade      bremen  germany  july              vol       lecture notes computer science  pp        springer 
moller  r     haarslev  v          description logic systems  description logic
handbook  chap     pp          cambridge university press 
motik  b          reasoning description logics using resolution deductive
databases  ph d  thesis  univesitat karlsruhe  th   karlsruhe  germany 
noy  n  f       a   semantic integration  survey ontology based approaches  sigmod
record               
   

ficuenca grau  horrocks  kazakov    sattler

noy  n  f       b   tools mapping merging ontologies  staab    studer  staab
  studer         pp         
noy  n     musen  m          prompt suite  interactive tools ontology mapping
merging  int  journal human computer studies  elsevier         
patel schneider  p   hayes  p     horrocks  i          web ontology language owl abstract
syntax semantics  w c recommendation 
rector  a     rogers  j          ontological issues using description logic represent
medical concepts  experience galen  imia wg  workshop  proceedings 
schmidt schau  m     smolka  g          attributive concept descriptions complements  artificial intelligence  elsevier              
seidenberg  j     rector  a  l          web ontology segmentation  analysis  classification
use  proceedings   th international conference world wide web
 www        edinburgh  scotland  uk  may              pp        acm 
sirin  e     parsia  b          pellet system description  proceedings      international workshop description logics  dl       whistler  british columbia 
canada  june            vol      ceur workshop proceedings  ceur ws org 
staab  s     studer  r   eds            handbook ontologies  international handbooks
information systems  springer 
stuckenschmidt  h     klein  m          structure based partitioning large class hierarchies  proceedings third international semantic web conference  iswc       hiroshima  japan  november             vol       lecture notes computer science  pp          springer 
tobies  s          complexity reasoning cardinality restrictions nominals
expressive description logics  j  artif  intell  res   jair              
tsarkov  d     horrocks  i          fact   description logic reasoner  system description 
proceedings third international joint conference automated reasoning
 ijcar        seattle  wa  usa  august              vol       lecture notes
computer science  pp          springer 

   


