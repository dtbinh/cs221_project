journal of artificial intelligence research                  

submitted       published      

a constraint satisfaction framework for executing
perceptions and actions in diagrammatic reasoning
bonny banerjee
b  chandrasekaran

banerjee    osu edu
chandra cse ohio state edu

laboratory for artificial intelligence research
department of computer science   engineering
the ohio state university  columbus  oh        usa

abstract
diagrammatic reasoning  dr  is pervasive in human problem solving as a powerful adjunct to symbolic reasoning based on language like representations  the research reported
in this paper is a contribution to building a general purpose dr system as an extension
to a soar like problem solving architecture  the work is in a framework in which dr is
modeled as a process where subtasks are solved  as appropriate  either by inference from
symbolic representations or by interaction with a diagram  i e   perceiving specied information from a diagram or modifying creating objects in a diagram in specied ways
according to problem solving needs  the perceptions and actions in most dr systems built
so far are hand coded for the specic application  even when the rest of the system is built
using the general architecture  the absence of a general framework for executing perceptions actions poses as a major hindrance to using them opportunistically  the essence of
open ended search in problem solving 
our goal is to develop a framework for executing a wide variety of specied perceptions and actions across tasks domains without human intervention  we observe that
the domain task specic visual perceptions actions can be transformed into domain taskindependent spatial problems  we specify a spatial problem as a quantied constraint
satisfaction problem in the real domain using an open ended vocabulary of properties  relations and actions involving three kinds of diagrammatic objects  points  curves  regions 
solving a spatial problem from this specication requires computing the equivalent simplied quantier free expression  the complexity of which is inherently doubly exponential 
we represent objects as conguration of simple elements to facilitate decomposition of
complex problems into simpler and similar subproblems  we show that  if the symbolic
solution to a subproblem can be expressed concisely  quantiers can be eliminated from
spatial problems in low order polynomial time using similar previously solved subproblems  this requires determining the similarity of two problems  the existence of a mapping
between them computable in polynomial time  and designing a memory for storing previously solved problems so as to facilitate search  the ecacy of the idea is shown by time
complexity analysis  we demonstrate the proposed approach by executing perceptions and
actions involved in dr tasks in two army applications 

   introduction
the research reported in this paper is a contribution to building problem solving agents
in articial intelligence  ai  that use diagrams  much as people do  but most of ai does
not  given the almost exclusive emphasis in ai on language like or predicate symbolic representations  diagrammatic reasoning  dr  is an emerging area of research in a number
c
    
ai access foundation  all rights reserved 

fibanerjee   chandrasekaran

of elds  including ai  glasgow  narayanan    chandrasekaran        chandrasekaran 
kurup    banerjee         logic  barwise   etchemendy        allwein   barwise        
and psychology  tversky        tricket   trafton         while all research in dr is in
one way or other dealing with diagrams  dierent research issues are addressed by dierent
researchers  the research reported in this paper considers dr as a problem solving activity
in which an agent  human or articial  makes use of two forms of representation  a spatial
representation in the form of  d diagrams and a symbolic representation that contains information in a predicate symbolic form similar to logic and natural language  a schematic
dr architecture  as proposed by chandrasekaran et al                      is illustrated in
figure   
problem
spatial problem in
specification language

spatial
problem
solver

problem
solver
solution to the
spatial problem

diagram

solution

inference
rules
symbolic
information
traditional ai
problem solver

figure    the diagrammatic reasoning architecture 

    diagrammatic reasoning as a problem solving activity
the dr architecture shares the idea of problem solving as search in problem state space
 laird  rosenbloom    newell        newell         in this approach  starting from an
initial state  the agent applies operators to bring about state transitions to reach the goal
state  a goal is either reached or decomposed into subgoals by the use of general and
domain knowledge  reaching a goal or subgoal requires information which is generated in
the traditional problem solving architectures  e g   soar in laird  newell    rosenbloom 
      act r in anderson        by inference using predicate symbolic representation  in the
dr architecture  the agent can extract information from diagrams by applying perceptionlike operations in addition to inference using predicate symbolic representation to reach the
goal subgoal  the agent can also create or modify objects in a diagram that propose new
states from which the goal might be reached with subsequent perceptions and inferences 
to illustrate our conceptualization of dr  let us consider a real world problem  an
army commander  planning strategic operations  uses a terrain map to chalk out a path for
his troops to safely travel from one base camp location l  to another l  within a given
time  the information he has is regarding the nature of the terrain  e g   slow go or no go
regions  altitude of dierent parts of the terrain  the speed at which his troops can travel in
dierent kinds of terrain  and an estimate of the maximum repower range of the enemy 
the commander  being a veteran in the eld  is well aware of the possibility that his troops
might be ambushed along any path by the enemy who might be hiding in the neighboring
regions  his problem solving might proceed as follows  a diagram consisting of the part of
   

fiexecuting perceptions and actions in diagrammatic reasoning

the terrain map of interest for this particular problem is given  along with the peripheries
of the no go regions and the two points  l  and l   see figure   a    the commander
draws one of the shorter paths from l  to l  maintaining a maximum distance from the
neighboring no go regions  see figure   b    he knows what kinds of spatial relations
between points on the route and the points where the enemy could be hiding correspond to
ambush potential  he then uses that knowledge to perceive  and mark  the portions of the
path that are prone to ambush due to enemies hiding behind the neighboring no go regions
 see figure   c    if no such portion is found  the path is inferred to be safe  if the length
of a safe path can be traversed in the given time  it is considered a suitable path for the
operation  if the path drawn is not safe or does not satisfy the time constraint  another path
is drawn  see figure   d   and analyzed  this procedure continues until all paths have been
exhausted  if a suitable path is still not found  the least risky path might be considered
for the operation  in the worst case  the commander might infer that this operation is not
possible  a problem in a similar vein  as described above  has been considered by forbus 
usher  and chapman        
in the above example  it is noteworthy how the problem solver  the commander  opportunistically brings together symbolic knowledge  such as  the repower range of enemies 
and perception and action on a diagram to solve a real world problem  such a phenomenon
is characteristic of dr whenever it is used to solve problems in dierent domains  such as 
economics  geometry  engineering  computer aided design  military  and so on  we observe
that executing the perceptions and actions require solving purely spatial problems with
no involvement of domain knowledge  these spatial problems can be described in terms
of diagrammatic objects  such as  points  curves  and regions  and spatial properties  e g  
length of a curve  and relations  e g   point on a curve  involving them  for example  perceiving the portions of a path prone to ambush due to enemies hiding behind a mountain
range requires computing the set of points q on a curve  the path  c  such that q is within
a specied distance  the repower range  d from some point p on a curve  the mountain
range  c   see figure    b    formally  this can be written as
riskyp ortionsof p ath q  c    c    d   on q  c   p  on p  c   distancelesst han p  q  d 
distancelesst han p  q  d   distance p  q   d
where p is a point  in this paper  we propose a general and ecient framework for spatial
problem solving to autonomously execute perceptions and actions in dr 
    what do we mean by a diagram 
definition    diagram  a diagram d is a set of labeled  d objects  o    o       on   all
located clearly inside  i e   no intersection or touching  a common region  or bounding box 
b  the objects are of three types  points  curves  regions 
definition    diagrammatic object  a diagrammatic object o is a   tuple   l  t   e  
where l is a label  t is a type  point  curve or region   and e is its spatial extent  the
spatial extent of a diagrammatic object is the set of points constituent of the object 
   

fibanerjee   chandrasekaran

 a  the given diagram consisting of two points  l 
and l    and three region obstacles 

 b  one of the shorter paths between l  and l 
avoiding the obstacles is drawn 

 c  portions of the path prone to ambush are perceived and marked 

 d  another path is drawn and will be analyzed
for risk 

figure    diagrammatic reasoning by an army commander for nding a safe path for transporting his troops from l  to l  within a given time 

definition    diagrammatic image  the diagrammatic image  i  of a diagram is the
set of points constituent of all objects in the diagram  thus  if d   o    o       on   is a
diagram where oi   l oi   t  oi   e oi      then its diagrammatic image i d  is given by
n

i d   
e oi  
i 

this denition of a diagram  due to chandrasekaran et al                      supports
the functional representation of a diagram in an articial agent  a diagram on an external
medium  e g   piece of paper  computer screen  is  at one level  an image consisting of pixels
with dierent intensities  at another level  it is an interpreted representation consisting of
spatial objects in some domain of interest  the abstract diagram is ideal  i e   the points
are dimensionless  curves have no thickness  etc  in an external diagram  points and curves
consist of at least one pixel with nite dimensions  we will need to interchange between
the two forms of diagrams for reasoning and interaction purposes  in the rest of the paper 
   

fiexecuting perceptions and actions in diagrammatic reasoning

the term diagram will refer to an abstract diagram only  unless otherwise stated  we are
interested only in diagrams that are line drawings with no color or intensity variation  such
diagrams form a substantial class of diagrams in everyday use 
    perceptions and actions in diagrammatic reasoning
definition    perception  a perception is an act of extracting a new piece of information from a diagram  the new piece of information satisfies constraints specified in terms
of properties and relations among existing objects in the diagram and is a boolean or a real
number or a diagrammatic object s   thus  a perception p is a mapping from a diagram d
to a set of booleans  t rue  f alse  or real numbers  or a set of diagrammatic objects d
satisfying constraints c 
c

p   d  t rue  f alse     d  

i d    i d 

definition    action  an action is an act of introducing a new object s   or modifying
or deleting an existing object s  in a diagram satisfying constraints specified in terms of
properties and relations among existing objects  thus  an action a is a mapping from a
diagram d to a new set of diagrammatic objects d satisfying constraints c 
c

a   dd  

i d    i d  

in the last couple of decades  numerous dr systems have been built for dierent applications in dierent domains  in the following we review some well known dr systems
where a problem solving agent reasons using diagrams  this review will help realize the
role of perception and action in dr  and the spatial problems implicit in such perceptions
and actions 
sketchy  pisan        is a computer implementation of a model of graph understanding  it recognizes the diagrammatic objects   points  lines  regions  and a vocabulary of
properties and relations that includes coordinate at point  right of  above  inside  steeper 
bigger  vertical  change in slope  touches  intersects  on line  on border  forms border  etc  for
representing conceptual relationships in domains  such as  thermodynamics and economics 
a domain translator is responsible for converting domain specic conceptual questions into
domain independent graphical relations  examples of perception from a supply demand
graph in economics include how price eects the supply  demand  and market price of the
product  which requires solving visual problems  such as  at what point is supply equal to
demand   corresponding spatial problem  compute the intersection of two curves   what
is the price for the supply line when the quantity is       corresponding spatial problem 
compute a point on a curve whose one coordinate is given   are the quantity and price
directly proportional   corresponding spatial problem  check whether the slope of a curve
between two points is a positive constant or not   are the quantity and price inversely
proportional   corresponding spatial problem  check whether the slope of a curve between
two points is a negative constant or not   etc  actions in this model are not required due
to the nature of its task  examples of graphs understood by sketchy are shown in figure
  
   

fibanerjee   chandrasekaran

 a  graph from economics

 b  graph from thermodynamics

figure    examples of graphs understood by sketchy  reproduced with permission from
pisan        

figure    an example of a deected frame analysis  from civil engineering  by redraw 
reproduced with permission from tessler et al         

   

fiexecuting perceptions and actions in diagrammatic reasoning

the redraw system  tessler et al         combines diagrammatic and symbolic reasoning to qualitatively determine the deected shape of a frame structure under a load  a
structural analysis problem in civil engineering  it uses a vocabulary of properties and relations including get angular displacement  get displacement  symmetrical p  connected to 
near  left  above  rotate  bend  translate  smooth  etc  on three kinds of diagrammatic objects  lines  splines  circles  though most properties and relations are domain independent 
some  such as  bend reect the assumptions implicit in the domain and the task and can
be dened accordingly  perceptions and actions are called inspection and manipulation operators in the system  the underlying representation is a combination of a grid based and
cartesian coordinates  shapes are represented using the grid where each element in the
grid corresponds to a point in the diagram while lines are represented by a set of coordinate
points  examples of perception and action include deecting a beam in the same direction
as the load  checking whether a beam and column are perpendicular at a particular rigid
joint  etc  which require solving visual problems  such as  bend beam  in the negative
direction of the y axis  corresponding spatial problem  compute a curve with a given slope
at a given point   make the angle between beam  and column  at joint     degrees without modifying beam   corresponding spatial problem  compute a curve such that it makes
a particular angle at a given point with a given curve   get the angle between beam  and
column  at the ends connected by joint   corresponding spatial problem  compute the
angle between two curves at a given point   etc  an example of a deected frame analysis
by redraw is shown in figure   
the archimedes system  lindsay        assists a human in demonstrating theorems
in euclidean geometry by modifying creating diagrams according to his instructions and
thereafter perceiving inferencing from the diagram  it operates on two diagrammatic objects   points and line segments  and recognizes shapes  such as  square  triangle  path 
etc  the underlying representation is array  or grid based  the perceptions  called retrieval
processes  are of dierent classes  such as  verify relationship  test for a condition  etc  the
actions  called construction processes  are also of dierent classes  such as  create an object
with certain properties  transform an object  etc  executing the perceptions and actions require solving spatial problems  such as  create a segment parallel to a given segment through
a given point  rotate an object and check whether it coincides with another object  etc  an
example of a geometry theorem demonstrated by archimedes is shown in figure   
the diamond  jamnik         a system for proving mathematical theorems  uses a
sequence of actions on diagrams assisted by a human to prove specic ground instances and
then generalizes by induction  it uses a mixture of cartesian and topological representations
to represent a dot  equivalent to a point in cartesian representation  as a diagrammatic
object in the discrete space  and a line and an area  or region  as diagrammatic objects in the
continuous space  elementary shapes  such as  row  column  ell  and frame  are constructed
from dots  while derived shapes  such as  square  triangle  rectangle  etc  are constructed
from the elementary or other derived shapes  the vocabulary consists of atomic or onestep operations  e g   rotate  translate  cut  join  project from  d to  d  remove  insert a
segment  etc    spatial problems in this system are composite operations composed from the
atomic ones  such as  draw a right angled triangle  translate and rotate a triangle  etc  the
system does not need to execute perceptions as information from a diagram is perceived by
   

fibanerjee   chandrasekaran

figure    an example of a geometry theorem demonstrated by archimedes 

figure    an example of a mathematical theorem proven by diamond  the theorem is
after nelson        

   

fiexecuting perceptions and actions in diagrammatic reasoning

a human who decides what actions to be applied during the proof search  an example of a
mathematical theorem proven by diamond is shown in figure   
georep  ferguson   forbus        takes as input a line drawing in vector graphics
representation and creates a predicate calculus representation of the drawings spatial relations  five primitive shape types are recognized  namely line segments  circular arcs  circles
and ellipses  splines  open and closed   and positioned text  properties and relations  such
as  proximity detection  orientation detection  e g   horizontal  vertical  above  beside   parallelism  connectivity  e g   detecting corner  intersection  mid connection  touch   etc  are
deployed to accomplish its task  the underlying representation is vector graphics or line
drawings  systems  such as  magi  ferguson         juxta  ferguson   forbus        
and coadd are built using georep for symmetry detection  critiquing diagrams based on
their captions  and producing a description of the units  areas  and tasks from a course of
action diagram  respectively  georep  due to the limitation of its task  does not need to
execute any action  examples of visual problems in georep include guring out which cup
contains more liquid  corresponding spatial problem  compare the areas of polygons representing the cups   determine whether a gure is symmetric or not  corresponding spatial
problem  check whether one polygon is congruent to the reection of the other polygon  
etc  an example of ambush analysis by georep is shown in figure   

figure    an example of ambush analysis by georep  reproduced with permission from
forbus et al         

the preceding discussion leads to the observation that all dr systems require perceiving from and or acting on diagrams  and that every perception action requires solving
a domain independent spatial problem  thus  a general purpose dr system for solving
problems for applications across multiple domains would require solving a large variety of
non trivial domain independent spatial problems  these spatial problems can be described
   

fibanerjee   chandrasekaran

in terms of three diagrammatic objects  points  curves  regions  and spatial properties and
relations involving them 
    the problem
how are the perceptions and actions solved in a dr system  typically  the human developing a dr system identies a priori the problem solving steps including a set of perceptions
and actions  and hand codes ecient algorithms for solving each of them  if the problem
solving steps need to be altered in future and as a result  a new perception arises  the
developer has to write another algorithm for obtaining its solution  thus  algorithms need
to be hand coded for each perception action  clearly  this is inconvenient and time consuming in developing a dr system  and does not allow fast and easy experimentation with
dierent problem solving strategies for the same problem  these drawbacks are further
magnied when the goal is to build a general purpose dr system where a very large variety of perceptions and actions are possible which is not feasible to ascertain a priori  and
develop and store algorithms for  hence  our goal is to investigate a spatial problem solver
 sps  for eciently solving spatial problems implicit in perceptions actions without human
intervention  
    contributions
in this paper  we make the following contributions 
   we observe that the wide variety of visual perceptions actions for dr applications can
be transformed into domain task independent spatial problems  we developed a language
for specifying spatial problems  i e   spatial relations or actions  as quantied constraint
satisfaction problems  qcsps  in rst order logic using a xed set of mathematical logical
operators in the real domain and an open ended vocabulary of properties  relations and
actions  any spatial relation or action involving only points that can be expressed using
those operators and real variables in rst order logic can be included in the vocabulary 
further  any spatial relation or action involving curves and or regions that can be expressed
using the relations on p  c  and or inside p  r  where p is a point  c is a curve  r is a region 
and any relation action involving only points in rst order logic can be included in our
vocabulary  the vocabulary grows richer as more spatial relations and actions are specied 
   any spatial relation or action that can be included in the vocabulary is solvable by our
sps  real qcsps are known to be computationally intractable  so a substantial part of the
spatial problem solving literature concentrates on constraint satisfaction problems  csps  
we developed a general framework for solving spatial problems specied as qcsps  the
framework bypasses the process of quantier elimination  qe   the computational bottleneck and a doubly exponential problem  by taking the help of previously solved similar
spatial problems  we show that  if the symbolic solution to a problem can be expressed
   the reader should keep the dr architecture in mind  as shown in figure    there are two problem
solvers  the main problem solver which will be always referred to as the problem solver  this might
be a human  and the spatial problem solver which will be referred to as the sps  this strictly has no
human intervention   the problem solver is responsible for the entire problem solving strategy including
converting domain specific perceptions and actions into domain independent spatial problems  the sps
is responsible only for solving the domain independent spatial problems that it receives from the problem
solver  it is important to not get confused between the roles played by the two 

   

fiexecuting perceptions and actions in diagrammatic reasoning

concisely  quantiers can be eliminated from spatial problems in low order polynomial time
using similar previously solved problems  the framework leaves room to be more ecient
and convenient by incorporating future results in at least two possible directions  learning
constraints from examples  automatic constraint acquisition  and carefully exploiting a rich
portfolio of qe algorithms 
the rest of the paper is organized as follows  in the next section  we discuss the language
for specifying a spatial problem to the sps  section   describes the sps  section   analyzes
the computational complexity of the sps  section   shows how the proposed sps can be
augmented to a traditional ai problem solver  soar  for reasoning with diagrams in two
real world applications  finally  we end with discussion and conclusion 

   specification language
in this section  we discuss a high level language that is nite  extensible  human usable 
and expressive enough to describe a wide variety of  d spatial problems relevant to dr 
the problems specied in this language will be accepted as input by the sps and solved
without human intervention  the specication language is independent of the sps  i e  
the problem specication remains unchanged even if the underlying representation and
reasoning strategy of the sps change 
    diagrammatic objects
the specication language recognizes three kinds of diagrammatic objects  points  curves 
regions 
point  a point is the basic diagrammatic object  the other objects are dened in terms
of a set of points 
curve  a curve is the set of points on it  we approximate a curve piecewise linearly 
thus  if curve c is approximated by the sequence of n points  p    p       pn    then c is the set
of points that lies on its constituent line segments  i e 
c   p   on p   p    p      on p   p    p         on p   pn    pn    
where p   x  y   x  y    and  pi   pi     is the line segment from pi to pi     we call the
points  p    p       pn   vertex points  for the sake of simplicity of specication  the problem
solver will write the sequence of vertex points  p    p       pn   to specify a curve c 
region  a region is the set of points inside its boundary  the boundary of a region is a
closed curve which is approximated piecewise linearly  thus  a region is a simple  convex
or concave  polygon  any simple polygon can be triangulated such that a point inside the
region is inside one of the triangles  thus  if the boundary of region r is approximated by
the sequence of n points  p    p       pn    then
r   p   inside p   r       inside p   r          inside p   r  m   
where m is the number of triangles in region r after triangulation   r  i  is the ith triangle
of r  and p   x  y   x  y    for the sake of simplicity of specication  the problem solver
will write the sequence of vertex points  p    p       pn   of the boundary curve to specify a
   

fibanerjee   chandrasekaran

region r  whether a sequence of vertex points corresponds to a curve or a region will be
determined automatically by the system from the context of the property relation predicate 
more on how we dene on and inside in section     
further  the sps can be asked to recognize the kind of diagrammatic object s  obtained
as the solution to a spatial problem  this is achieved by the function recognize dext  
where dext is an external diagram  i e   constituted of pixels unlike an abstract diagram  
for example  the set of all points behind a curve c with respect to a given point p can be a
region object or a curve object depending on the nature of c and its location with respect
to p  in order to recognize the output  the sps colors the corresponding set of pixels on an
external diagram where each pixel at some predetermined resolution corresponds to a point 
the set of colored pixels are grouped such that two adjacent pixels always belong to the
same group  each group of pixels constitutes a diagrammatic object  the boundary pixels
of each group is determined  if a group consists of less than three pixels  we consider it as
a point object  if a group consists of more than two pixels and its width  both horizontal
and vertical  is always less than three pixels  we consider it as a curve object  otherwise 
the group constitutes a region object 
    vocabulary
unlike certain well known qualitative spatial reasoning calculi  e g   intersection calculus
in egenhofer        cardinal direction calculus in frank        region connection calculus
in randell  cui    cohn         we are not interested in nding a minimal set of spatial
relations nor is our vocabulary based on a closed set of predicates  rather  our vocabulary
is based on a closed set of operators  to be discussed shortly in section       the spatial
relations and actions that can be included in our vocabulary are as follows 
   any spatial relation or action involving only points that can be expressed using the
xed set of operators and real variables in rst order logic 
   any spatial relation or action involving points  curves or regions that can be expressed
in rst order logic using the xed set of operators  real variables  any relation action from
    and the relations on p  c  and or inside p  r  where p is a point  c is a curve  r is a
region 
   any spatial relation or action involving points  curves or regions that can be expressed
in rst order logic using the xed set of operators  real variables  and any relation action
from    and    
thus  our vocabulary is open ended and addition of new properties and relations is
encouraged when a problem cannot be easily expressed using the existing ones  the observation is that  a human often encounters new perceptions actions but most of them can be
specied using the already known ones  however  having a large vocabulary helps specify
new ones more conveniently  from the dr literature  pisan        tessler et al         lindsay        jamnik        ferguson   forbus        chandrasekaran et al         banerjee  
chandrasekaran         we have identied a vocabulary of properties  relations and actions
based on their wide usage for expressing a variety of real world spatial problems in dierent
domains  the same vocabulary will be used in this paper as a starting point for specifying
spatial problems  in what follows are a few examples of properties  relations and actions in
our vocabulary 
   

fiexecuting perceptions and actions in diagrammatic reasoning

properties  associated with each kind of object are a few properties  location of a
point  location  closedness and length of a curve  and location  area and periphery of a
region  where the periphery of a region refers to its boundary curve  the user can also
dene particular shapes  e g   circle  triangle  annulus  etc   for curves and regions as
appropriate for reasoning in his domain  dierent shapes might have their own specic
properties  such as  radius of a circle  height of a triangle  etc  which can be easily associated
with the objects in our vocabulary by the user  dr also requires solving spatial problems
concerning a discrete set of points  for such problems  properties  such as  centroid s 
and v ariance s   where s is a set of points  are included in the vocabulary 
relations  the vocabulary also contains a few widely used relations  or relational
predicates  involving points  such as  lef tof  p    p     t opof  p    p     collinear p    p    p    
between p    p    p    where p    p    p  are points  any other relation involving points can be
included in the vocabulary as needed  on p  c   where p is a point and c a curve  is the
fundamental relation involving a curve while inside p  r   where p is a point and r a region  is the fundamental relation involving a region in our vocabulary as any other relation
involving curves or regions uses on and or inside  some of the relational predicates involving curves or regions in our vocabulary are intersect c    c     intersectionp oints q  c    c    
t ouches c    c     subcurveof  c    c    where c    c  are curves  and subregionof  r    r    where
r    r  are regions 
actions  further  there is a set of predicates for identifying emergent objects or modications of existing objects  for example  t ranslate q  o  tx   ty   returns a translation of object
o for tx units along x axis and ty units along y axis  rotate q  o  c    returns a rotation of
the object o with respect to point c as center for  degrees in the anti clockwise direction 
ref lect q  o   a  b   returns a reection of object o with respect to the line segment  a  b 
 i e   from point a to point b   scale q  o  c  sx   sy   returns a scaling of the object o with
respect to point c for sx units along x axis and sy units along y axis  when o is a curve or
region  each of these predicates is dened using the corresponding action involving a point
and the predicates on and or inside 

    the language
this is the language in which the problem solver  human or articial  species a spatial
problem to the sps  the internal representations of objects  properties  relations  and the
problem solving strategies are hidden from the problem solver  the specication language
remains unchanged even if the underlying representation or problem solving strategy is
changed  we use rst order predicate logic as the specication language  previously reported
by banerjee and chandrasekaran        
operators  the language recognizes a set of boolean operators         a set of arithmetic operators            a set of relational operators               and the quantiers
      the brackets    are used to express precedence while the brackets    are used to
express a set  in this paper  we will often use certain combination of operators  such as   
    etc  for the sake of brevity 
   

fibanerjee   chandrasekaran

domain  the language allows the problem solver to specify the domain as a set from
which the variables can assume values  unless otherwise stated  the domain is the real plane
  for a point variable and the real line  for a non diagrammatic variable 
functions  further  the language recognizes two functions  m aximize f   x  y        c 
and m inimize f   x  y        c   which maximizes and minimizes the function f with respect
to the variables  x  y       satisfying the boolean combination of constraints c  which might
involve quantiers  and returns the maximum and minimum value of f respectively along
with the conditions on the variables 
quantified constraint satisfaction problem  an instance of a constraint satisfaction problem  csp  consists of a tuple   v  d  c   where v is a nite set of variables 
d is a domain  and c   c        c k   is a set of constraints  a constraint c i consists of a pair
  s i   ri   where s i is a list of mi variables and ri is a mi  ary relation over the domain d 
the question is to decide whether or not there is an assignment mapping each variable to
a domain element such that all the constraints are satised  all of the variables in a csp
can be thought of as being implicitly existentially quantied 
a useful generalization of the csp is the quantied constraint satisfaction problem 
where variables may be both existentially and universally quantied  an instance of the
qcsp consists of a quantied formula in rst order logic  which consists of an ordered list
of variables with associated quantiers along with a set of constraints  a qcsp can be
expressed as follows 
 v       vm    q xn      x     v       vm   x       xn  
q xn      x     qn xn      q  x 
where qi         x       xn   is the set of quantied variables   v       vm   is the set of free
variables  v   v       vm   x       xn    and  is a quantier free expression called the matrix 
such representation of a quantied expression   where it is written as a sequence of quantiers followed by the matrix  is referred to as prenex form  example of a qcsp is as follows 
subcurveof  c    c   p  on p  c     on p  c 
where c    c are curves in     in this example  there are two constraints 
   p  c     on  
   p  c   on  
further  v   p  and d       the variables c  c  are given  the question here is to
decide whether there is an assignment mapping p to an element in   such that the logical
combination of constraints is not satised  if such an assignment exists  then c  is not a
subcurve of c  otherwise it is 
decision  function and optimization problems  in the proposed specication
language  a spatial problem  is expressed as a qcsp where v consists of variables of type
point  curve or region and d       solving a spatial problem involves 
   when there are no free variables in v  i e   all variables in v are quantied   deciding
whether or not there exists a mapping from v to d satisfying c 
   

fiexecuting perceptions and actions in diagrammatic reasoning

   when there are free variables in v  computing the conditions on the free variables
such that a mapping from v to d satisfying c exists 
thus  a spatial problem can be classied as a decision or a function or an optimization
problem in the real domain  the rst case constitutes a decision problem and yields a true
or false solution  the second case constitutes a function problem which involves computing
the diagrammatic object s  described by the conditions on the free variables  if a spatial
problem requires computing the best mapping from v to d satisfying c  it is called an
optimization problem 
let us consider an example  given a curve c and two points p  q  the spatial problem
behindcurve q  c  p  is dened as deciding whether or not q is behind c with respect to
p  this might be specied as deciding whether or not the curve c and line segment  p  q 
intersect  thus 
behindcurve q  c  p   intersect c   p  q  
for particular instances of q  p  c  the solution to this problem is t rue or f alse  hence
it is a decision problem  see figure     for particular instances of p  c  and generalized
coordinates of q i e   q   x  y   the solution to the same problem is a logical combination
of conditions involving x and y  which when plotted constitutes a region object  see figure
    hence  it is a function problem  while a decision problem merely requires checking
whether or not a given instance of an object satises the constraints or not  a function
problem requires computing all conditions for a general object to satisfy the constraints 

figure    the behindcurve as a decision problem  one of the points q is behind c with
respect to p while the other one is not 

again  given a curve c and two points p  q  the spatial problem f urthestbehindcurve q 
c  p  is dened as deciding whether or not q is the furthest point behind c with respect to
p  this might be specied as deciding whether or not q lies behind c with respect to p and
   

fibanerjee   chandrasekaran

figure    the behindcurve as a function problem  the shaded region r is behind c with
respect to p 

distance between p and q is maximum  thus 
f urthestbehindcurve q  c  p   behindcurve q  c  p   b  behindcurve b  c  p  
comparedistance b  p  q  p 
comparedistance a  b  c  d   distance a  b   distance c  d 
for particular instances of q  p  c  the solution to this problem is t rue or f alse  hence it
is a decision problem  for particular instances of p  c  and generalized coordinates of q i e  
q   x  y   the solution to the same problem is a logical combination of conditions involving
x and y  which when plotted constitutes a single point object  assuming there is only one
furthest point behind c with respect to p  which is dependent on the nature of c and how
the distance function is dened  see figure     
an alternative way of specifying the same problem f urthestbehindcurve q  c  p  is by
explicitly asking to maximize the distance between p and q where q satises the constraint
behindcurve q  c  p   written as 
f urthestbehindcurve q  c  p   m aximize distance q  p    q   behindcurve q  c  p  
this outputs the conditions involving x and y  which constitutes a single point object  the
m aximize  or m inimize  function assumes the pool of candidates from which to choose the
best are those that satisfy the set of constraints  this fact has to be stated explicitly if not
using the m aximize  or m inimize  function which makes the specication more dicult
to come up with and also cumbersome  on the ip side  the specication of a problem
using the m aximize  or m inimize  function cannot be used as a decision problem  that
is  whether or not a particular instance of an object is the best candidate that satises the
   

fiexecuting perceptions and actions in diagrammatic reasoning

q

figure     the f urthestbehindcurve as an optimization problem  the point q is the
furthest point behind c with respect to p 

constraints cannot be computed from this specication  unlike the former specication  a
problem of this type  which computes the best candidate out of a pool of candidates  is
called an optimization problem 
definition    spatial problem  a spatial problem  or problem  is a qcsp where a
variable  quantified or free  can only be of type point  and the domain is    
thus  a spatial problem  is a mapping from a diagram d satisfying a logical combination of constraints c to a set of booleans  t rue  f alse  or real numbers  or diagrammatic
objects d   i e  
c

   d t rue  f alse   d
solving a spatial problem requires eliminating the quantiers and solving algebraic equations inequalities to arrive at the most simplied expression  the computational bottleneck
in solving a spatial problem is quantier elimination  qe  which is inherently doubly exponential  davenport   heintz         more recently  brown and davenport        have
shown that real qe is doubly exponential even when there is only one free variable and all
polynomials in the quantied input are linear  in this paper  we will concentrate primarily on qe as part of spatial problem solving and hence  our solution will be an equivalent
quantifier free expression but not necessarily the most simplified one  theoretically  the
best complexity for qe achieved so far is o s l    ki     d l   ki   where s is the number
of polynomials  their maximum degree is d and coecients are real  l is the number
 of free
variables  ki is the number of variables in the ith quantier block while k  
ki is the
number of quantied variables  basu  pollack    roy         however  this algorithm is
too complicated to yet have a practical implementation  the most general and elaborately
implemented method for real qe is the cylindrical algebraic decomposition or cad  collins
   

fibanerjee   chandrasekaran

k 

  hong         complexity of which is  sd o      another implemented method  qe by
virtual substitution  weispfenning         is restricted to formulas in which the quantied
variables occur at most quadratically  the complexity of this method is doubly exponential
in the number of blocks of variables delimited by alternations of the existential and universal quantiers  thus  while there exist general algorithms for qe  for large real world
problems  it soon becomes too time consuming 

   spatial problem solver
in this paper  we concentrate on developing an ecient sps without sacricing its generality 
the goal of our design of the sps is to bypass the general qe algorithms as much as possible 
either by taking the help of previously solved similar problems in memory to obtain the
solution or by using a set of more practical algorithms each of which is developed for a
limited class of problems  here we describe the overall control mechanism of the sps  see
figure     
in many domains  such as  military  spatial problems involve diagrammatic objects that
are arbitrary shaped  e g   mountainous regions  and often cannot be approximated enough
by well dened shapes so that the solution can reliably depend on the specics of the shape 
for example  the solution to the problem of nding all places behind a mountain where one
can hide from the enemy depends critically on the particular shape of the mountain  due
to such nature of domains  we choose to represent curves piecewise linearly and regions
as polygons  piecewise linear curves and polygonal regions are unions of line segments
and triangular regions respectively  which facilitate decomposition of complex problems
into simpler and similar subproblems  we observe that similar subproblems involving
both existential and universal quantiers occur regularly in the spatial problem solving
process which are solved by one of the qe algorithms  e g   cad   thereby incurring doubly
exponential time  we minimize this enormous computational cost by reusing the solutions
of subproblems previously solved 
given a spatial problem  in the specication language  the sps replaces numerical values in the problem by symbolic variables  and then transforms the symbolic problem from
specication to a modeling language  to be described shortly  by progressively replacing
objects predicates by base objects predicates in their internal denitions  if a denition
cannot be found  it ags an error and halts till provided  as a rst step  the sps decomposes  into disjunctions and or conjunctions of subproblems i in prenex form  as we will
see later  all of these subproblems i are similar to each other in that if one of them can be
solved  solution to any of the others can be computed from it  next  it searches the memory
for problems similar to i   the memory contains symbolic problems and their corresponding quantier free symbolic solutions  if i can be mapped to one of these problems  its
solution is readily obtained by reverse mapping from the corresponding symbolic solution
in memory  obtaining a solution in such a way completely bypasses the qe process  which
is the computational bottleneck of the sps  thereby reducing the computational costs considerably  if sps cannot map i to any problem in memory  it sends i to the problem
classier that classies and sends it to the appropriate qe algorithm  the problem classier and combination of qe algorithms have been borrowed from mathematica  wolfram 
       once the sps solves a new subproblem  the subproblem and its solution are stored
   

fiexecuting perceptions and actions in diagrammatic reasoning

problem i in
specification language

convert problem to modeling language  search
vocabulary and replace terms in specification by their
definitions  if exists  otherwise request their definition

problem i in
modeling language
decompose problem i into conjunctions and or
disjunctions of subproblems in prenex form

for the first subproblem i   
search memory for a
similar subproblem

match found

memory

match not found

compute the solution of
subproblem i  with the
help of the solution to
the matched problem

problem classifier and
combination of constraint
solvers and quantifier
elimination algorithms

subproblem i 
and its
solution

compute solutions of other subproblems
from the solution of i  and combine them

solution

figure     flow diagram of our spatial problem solver 
in memory so that the solution can be used when a similar problem is encountered in future 
thus  the sps grows more ecient as it solves more problems  finally  the sps computes
the solution to the given problem  by combining the solutions of all its subproblems 
unfortunately  for some problems  quantiers cannot be eliminated symbolically in reasonable time  the sps tries for a prescribed time  after which it resorts to more practical
   

fibanerjee   chandrasekaran

methods  such as  techniques especially suited for low degree polynomials  e g   dolzmann 
sturm    weispfenning        and approximate methods for obtaining a subset of the solution sucient for immediate purposes  e g   ratschan        lasaruk   sturm         it
has been shown  in integer linear programming  e g   leyton brown  nudelman    shoham 
      and satisability testing  e g   xu  hutter  hoos    leyton brown         that the
best on average solver can be out performed by carefully exploiting a portfolio of possibly
poorer on average solvers  and accordingly  researchers have experimented with dierent
ways of selecting a portfolio of solvers  see for example  xu et al         pulina   tacchella 
      sayag  fine    mansour        streeter  golovin    smith        gebruers  hnich 
bridge    freuder        omahony  hebrard  holland  nugent    osullivan         as
none of these work involve solving qcsps over the real domain  they are not directly usable
for our purposes and will not be further discussed in this paper  however  we do expect
the same result to extend to qcsp solvers over the real domain  and building and smartly
selecting from a portfolio of qcsp solvers is a promising line of future research  in our
approach  once a subproblem is deemed symbolically unsolvable in the prescribed time 
its specication is stored in memory so that in future  a similar problem can be directly
subjected to practical methods  thereby saving the prescribed time 
    modeling language
this is the language in which a problem is described in terms of the underlying representations of objects properties relations in a form that can be readily subjected to algebraic
manipulation  the location of a point p is represented as a pair  x  y   x  y    as its
coordinates 
notation  the x  and y coordinates of a point p are denoted by p x and p y respectively 
the distance between two points  p and q  is given by
distance p  q  



 p x  q x      p y  q y  

the location of a curve c is represented by the sequence of vertex points  p    p       pn   
notation  the number of vertex points in a curve c is denoted by   c   the ith vertex
point is denoted by c i   and the ith line segment is denoted by  c i   c i       
a line segment ls is specied by its pair of vertex  or terminal  points  the x  and
y coordinates of ls are represented parametrically as
fx  ls  t   ls    x   t   ls    x  ls    x 
fy  ls  t   ls    y   t   ls    y  ls    y 
where t is a parameter     t     the relation on p  ls   where p is a point  is given by
on p  ls   t     t     fx  ls  t    p x  fy  ls  t    p y
length of a line segment ls is given by

   

fiexecuting perceptions and actions in diagrammatic reasoning

length ls   distance ls     ls    
length of a curve c is given by


  c  

length c  

length  c i   c i       

i 

the location of a region r is represented by the location of its periphery which is a
piecewise linear closed curve  as discussed in section      internally a region is triangulated
 computable in linear time as shown in chazelle        seidel          with the aim of
reducing and simplifying computations  more on this in section      
notation  on triangulation  the number of triangles in a region r is denoted by    r 
while the ith triangle in r is denoted by  r  i  
the area of a triangle  is given by
area   

 
 

 


 i  x   i        y   i        x   i  y

i 

note that the area of a triangle is positive if the sequence of vertex points on its periphery are
given in a counter clockwise direction  otherwise it is negative  area of a region r is given by
   r 

area r  



area  r  i  

i 

the relation inside p     where p is a point and  is a triangle  is given by
inside p      i  lef tof  p    i    i         
lef tof  p  ls   area  ls     ls     p      
where ls is a line segment 
the action t ranslate q  c  tx   ty   where q   x  y   c is a curve  and tx   ty are real numbers  is given by
t ranslate q  p  tx   ty    q x   p x   tx  q y   p y   ty
t ranslate q  c  tx   ty    a  on a  c   t ranslate q  a  tx   ty  
definition    base object  a base object is the simplest form of a diagrammatic object 
a point is its own simplest form  a line segment is the simplest form of a curve  a
triangular region is the simplest form of a region  thus  internally  there are three base
objects  point  line segment  triangle 
definition    base predicate  a base predicate is a predicate which accepts only the base
objects as arguments 
   vik        discusses an implementation in mathematica 

   

fibanerjee   chandrasekaran

examples of base predicates include lef tof  p    p     between p    p    p     on p  ls  
inside p     where p  p    p    p  are points  ls is a line segment   is a triangular region 
  c  

lemma    on p  c   i 

on p   c i   c i       

proof  the proof follows from our representation of a curve  as described in section     
   r 


lemma    inside p  r   i 
inside p   r  i  

proof  the proof follows from our representation of a region  as described in section     
the relations included in the vocabulary are internally dened in terms of base predicates  for example  the predicate  intersect c    c    where c    c  are curves  is dened in
terms of base predicates as
intersect c    c   
 a  on a  c     on a  c   
  c   

 a  i  

  c   

on a   c   i   c   i         j  

on a   c   j   c   j       

    decomposing a problem
definition    decomposition  decomposition is the process of replacing the relational
predicates  involving free variables of types curve and region  in a spatial problem  quantified expression  by conjunctions disjunctions of base predicates and taking those conjunctions disjunctions to the front of the expression  the expression following those conjunctions disjunctions is a subproblem 
example  decomposition of the problem intersect c    c     a  on a  c     on a  c   
occurs as follows 
intersect c    c     a  on a  c     on a  c   
  c   

 a  i  

  c   

on a   c   i   c   i     j  

on a   c   j   c   j       bef ore decomposition 

  c      c    
j  a  on a   c   i   c   i     on a   c   j   c   j     

 i  

  c   

 i  

  c   

j  

 af ter decomposition 

intersect   c   i   c   i         c   j   c   j       

where intersect   c   i   c   i         c   j   c   j        is a subproblem  however  the question
  c      c   
arises  is intersect c    c     i   j   intersect   c   i   c   i       c   j   c   j       
that is  can we replace the  by a  
theorem    a problem is equivalent before and after decomposition if and only if it does
not contain the following forms 
   

fiexecuting perceptions and actions in diagrammatic reasoning

f  

p  on p  c   inside p  r 

f  

p  on p  c   inside p  r 

f  

p  inside p  r   inside p  r   

f  

p  inside p  r   inside p  r   

 complement of f  

 complement of f  

where c is a curve  r  r  are regions  and c  r  r  are free variables 
proof  as discussed in section      in our framework  on p  c  and inside p  r  are the two
fundamental relations using which any other relation involving a curve or region is specied 
also  in our framework  point is the only quantiable variable       are the only quantiers  and        are the boolean operators sucient to express any boolean expression 
thus  any spatial problem involving only curves  and points but no regions  is a logical
combination of smaller problems of the following form 
qp  rel p  c  where q        rel   on  on 
any spatial problem involving only regions  and points but no curves  is a logical combination of smaller problems of the following form 
qp  rel p  c  where q        rel   inside  inside 
any spatial problem involving both curves and regions  and points  is a logical combination
of smaller problems of the following form 
qp  rel   p  c   rel   p  r 
where q        rel    on  on   rel    inside  inside         
any spatial problem involving two curves  c and c     and points  is a logical combination
of smaller problems of the following form 
qp  rel   p  c   rel   p  c   
where q        rel    on  on   rel    on  on         
again  any spatial problem involving two regions  r and r     and points  is a logical combination of smaller problems of the following form 
qp  rel   p  r   rel   p  r   
where q        rel    inside  inside   rel    inside  inside         
we symbolically solved each of the above problems     total  in two ways  directly and by
decomposing  for p   x  y   c   p    p       pn    n      pi   xpi   ypi    c    a    a       au  
   

fibanerjee   chandrasekaran

 u      ai   xai   yai    r   q    q       qm    m      qi   xqi   yqi    and r    b    b       bv  
 v      bi   xbi   ybi    it turned out that the solutions from the two ways were equivalent
for all problems  except the four cases stated in the theorem statement  note that f   is
the specication for computing whether a curve c is entirely inside a region r or not  let
lsi be the ith line segment of c     i  n     and j be the j th triangular region of r
    j  m      we found
p  on p  c   inside p  r 
m 
 p   n 
i  on p  lsi      j  inside p  j   
m 
 p  n 
i  j   on p  lsi    inside p  j   
m 
 n 
i  j   p  on p  lsi    inside p  j   

that is because  for c to be entirely inside r  it is not necessary for all line segments of c to
be inside a triangle of r  a line segment of c can span across multiple triangles of r and c
can still be inside r  figure    a  shows an example where c is inside r but a line segment
of c spans across two triangles of r  in such a case  the solution to the problem will be
t rue when computed directly but will be f alse when computed via decomposition  the
rst case f   in the theorem statement can be explained similarly  the forms f   and f  
can be rewritten as follows 
f   

p  on p  c   inside p  r 
 p  on p  c   inside p  r  where r  b  r

f   

p  on p  c   inside p  r 
 p  on p  c   inside p  r  where r  b  r

where b is the rectangular region  boundary  containing the diagram as discussed in section
     note that each of the rewritten forms is equivalent before and after decomposition 
again  f   is the specication for computing whether a region r is entirely inside a region
r  or not  let   i be the ith triangle of r      i  v     and j be the j th triangular
region of r     j  m      we found
p  inside p  r   inside p  r   
v 
 p   m 
j  inside p  j      i  inside p    i   
v 
 p  m 
j  i   inside p  j    inside p    i   
v 
 m 
j  i   p  inside p  j    inside p    i   

   

fiexecuting perceptions and actions in diagrammatic reasoning

r

r
c

 a  curve c is inside region r but each line
segment of c is not inside one triangle of r 

r 

 b  region r is inside region r  but each triangle of r is not inside one triangle of r   

figure     examples to show the decomposition of curves and regions for problems containing the forms f    f    f    f   

that is because  for r to be entirely inside r    it is not necessary for all triangles of r to
be inside a triangle of r    a triangle of r can span across multiple triangles of r  and r can
still be inside r    figure    b  shows an example where r is inside r  but a triangle of r
spans across two triangles of r    in such a case  the solution to problem will be t rue when
computed directly but will be f alse when computed via decomposition  the third case
f   in the theorem statement can be explained similarly  the forms f   and f   can be
rewritten as follows 
f   

p  inside p  r   inside p  r   
 p  inside p  r   inside p  r    where r   b  r 

f   

p  inside p  r   inside p  r   
 p  inside p  r   inside p  r    where r   b  r 

again  each of the rewritten forms is equivalent before and after decomposition 

theorem    any subproblem resulting from decomposing a problem contains base predicates
only 
proof  a problem  is decomposable due to the presence of relational predicates  involving
free variables of types curve and region  in its specication  as stated in section      a
problem involving a curve or region can be specied in our framework using a relation s 
involving only points and the relation on or inside  thus  a relation rel q  c  involving a
point q and a curve c can be rewritten as 
rel q  c   a  on a  c   rel  q  a 
or
   

fibanerjee   chandrasekaran

rel q  c   a  on a  c   rel  q  a 
where rel is a base predicate involving the points q and a  in both cases  the expression
on the right hand side of  contains base predicates only  let  be a problem involving
points and curves but no regions  let us replace in  each occurrence of non base predicates
involving a curve  such as  rel q  c   by their equivalent expression consisting of on and
base predicates involving points and line segments only  then the resulting expression for 
consists of base predicates involving points only and on  by lemma    a non base on can
be rewritten as disjunctions of base on  therefore  the resulting expression for  consists
of base predicates involving points only 
similarly  a relation rel q  r  involving a point q and a region r can be rewritten as 
rel q  r   a  inside a  r   rel  q  a 
or
rel q  r   a  inside a  r   rel  q  a 
where rel is a base predicate involving the points q and a  if  is a problem involving
points and regions but no curves  replacing each occurrence of non base predicates involving
a region  such as  rel q  r   by their equivalent expression consisting of inside and base
predicates involving points only  and then using lemma    results in an expression for 
consisting of base predicates involving points and triangular regions only  both the above
processes can be employed when  involves both curves and regions  thus  any subproblem
resulting from decomposing a problem will contain base predicates only 
    mapping to a similar problem
definition     similarity  we define two spatial problems  quantified expressions  to be
similar if there exists a one to one correspondence between their variables  free and quantified  
given two similar problems    and     and the solution   of     the goal is to construct
a one to one mapping  between the variables of   and   such that the solution of  
can be obtained by replacing the variables in   by the corresponding variables  thereby
completely bypassing the qe process  the computational bottleneck of sps  the one toone mapping exists if   and   are logically equivalent  however  equivalence checking
for logical expressions is np hard  dershowitz   jouannaud        goldberg   novikov 
       thus  equivalence checking cannot be used to determine similarity eciently 
problem features  let  be the quantier free expression when  is expressed in
prenex form  i e  
 v       vm    q xn      x     v       vm   x       xn  
where no variable xi appears more than once in q and q contains no redundant variables 
a quantier block qb of q is a maximal contiguous subsequence of q where every variable
in qb has the same quantier type  the quantier blocks are ordered by their sequence of
appearance in q  qb   qb  i qb  is equal to or appears before qb  in q  each quantied
   

fiexecuting perceptions and actions in diagrammatic reasoning



   
p 

v

p 

p 

v

p 



p 

p 
figure     parse tree for the matrix of a problem in conjunctive normal form 

variable xi in  appears in some quantier block qb xi    and the ordering of the quantier blocks imposes a partial order on the quantied variables  the variables in the same
quantier block are unordered 
let    q    and    q    while   and   be the parse trees for   and   respectively  for example  the matrix  of a problem  in conjunctive normal form might look like 
  p    p   p      p   p   p        
where each pi is a predicate  if  is a subproblem  each pi is a base predicate  the parse
tree of the above sentence is shown in figure    
two trees    and     are isomorphic if there exists a bijection         that preserves adjacency and root vertex  i e    u  is adjacent to  w   u is adjacent to w  and
 root        root      it follows that two isomorphic trees have the same maximum height
and the same number of vertices at any height  let l be the maximum height of  and i
be the number of vertices at height i  the function   dened as

               




i i

i 

where i is an integer     denotes a sequence  and i is the ith smallest prime number 
maps a sequence of integers to an unique integer  from a problem   a tuple    can be
constructed as follows 

   

fibanerjee   chandrasekaran

    

  l 
   vertices at dierent heights of parse tree  
  quantier blocks 
order of quantier blocks 
   variables in dierent quantier blocks   

definition     structural equivalence  two spatial problems  quantified expressions  
  and     are structurally equivalent if they satisfy all of the following conditions 
              
     and   are isomorphic to each other  where   and   are the parse trees of the matrices
of   and   respectively 
   the contents  predicate or boolean operator         of each pair of corresponding nodes
of   and   are identical 
   there exists a one to one correspondence between the variables in the arguments of
predicates contained in each pair of corresponding nodes of   and     moreover  any two
mappings obtained from two pairs of corresponding nodes of   and   do not contradict
each other 
as we will see in section    structural equivalence of two problems can be computed
in time linear in the size of their parse trees  note that if two problems are structurally
equivalent  they will be logically equivalent but not vice versa  for example  the expressions  p  p    q and q  where p and q are base predicates  are logically equivalent  but
not structurally equivalent since their parse trees are not isomorphic  in general  logical
equivalence does not imply structural equivalence when there are redundancies  redundant
variables and or predicates  in one or both problems  for the sake of computational eciency  we will use structural equivalence to determine the similarity of two problems 
theorem    all subproblems obtained by decomposing a problem are always similar 
proof  let us assume  for a contradiction  there exists a problem  that decomposes into
subproblems such that two of them  j and k   are dissimilar  without loss of generality 
assume that all subproblems of  except k are similar to j   then 

n

  ni     ni         ipp   qi  i     ip i  i     ip    qk k          
j   i  i     ip     i   n       i   n          ip  np   
qj   qi  i     ip     i   n       i   n          ip  np  
n

 ni     ni         ipp    qi  i     ip qk   i  i     ip  k  
 ni     ni         ipp   qi  i     ip i  i     ip
n

thus  all subproblems of  are similar which contradicts our assumption  hence the proof
follows 
intuitively  in the proposed framework  while a curve is represented by an arbitrary number of vertices  a line segment is always represented by its two end points  similarly  while
   

fiexecuting perceptions and actions in diagrammatic reasoning

the periphery of a region is represented by an arbitrary number of vertices  the periphery
of a triangular region is always represented by three vertices  hence  two line segments or
triangular regions are always represented similarly and dier only in the coordinates of their
constituent vertices  unlike two curves or regions  the base predicates are dened in terms
of base objects  points  line segments  and triangular regions  thus  when a predicate is
dened as conjunctions or disjunctions of base predicates  the base predicates are always
similar  decomposition of a problem into subproblems merely replaces one or more of its
predicates by similar base predicates  hence  all the subproblems have to be similar 
    memory organization
memory in the sps is hierarchically organized and stores problems in disjoint classes based
progressively on a problems features in   see figure      after decomposing a problem
into subproblems and computing their   if the subproblems have the same value for  
sps checks whether or not their parse trees are isomorphic and a mapping exists between
their variables  since the memory hierarchy has a constant height  insertion of a problem or
searching for a potential class of similar problems can be executed in constant time  also 
the features that classify the problems are discriminative enough to create a large number
of classes  leaf nodes   each class containing only a few problems  thereby reducing search
to a few problems belonging to a class 

   computational complexity
we will now analyze the time complexity of the algorithms used in our framework  in our
implementation  a problem  is a data structure consisting of two elds  p arset ree and
solution  the p arset ree stores the lexicographically sorted parse tree of the matrix of
 while the solution stores the symbolic solution to  in a concise form  a parse tree
can be constructed in time o t  where t is the number of base predicates and boolean
operators        in   the boolean operators occupy the non leaf nodes in the parse tree
while the base predicates occupy the leaf nodes  lexicographically sorting a tree requires
lexicographically sorting the contents of the children of each non leaf node in the tree  let
t be the number of boolean operators and ti be the number of children of the ith boolean
t

operator  thus 
ti   t     note that since each base predicate is always followed by
i 

a boolean operator  t   t where  is a constant  lexicographically sorting a list of the
contents of the children of a node requires o ti logti   time  thus  the total time required
t

for repeating this process for all non leaf nodes is
o ti logti    since the average number
i 



of children per node is

i 



tree is

t

i 

 
t

t


o 

ti  

t 
  the total time required to lexicographically sort a
t

t 
t 
log      o t  

t
t
   

fibanerjee   chandrasekaran

l
l 

   

lk

     vertices at different

     vertices at different

levels of parse tree 

levels of parse tree 

d

 

   

dm

  qb 

q 

   

  qb 

qr

   

order of qbs

o 

   

   

order of qbs

os

   

     variables in

     variables in

different qb s 

different qb s 

e

 

   

et

   

problems

problems

figure     hierarchical problem classication in memory  at each height in the hierarchy 
the branches correspond to the dierent values of the features captured by  
for example  l  through lk correspond to the k dierent maximum heights of
parse trees for the matrices of spatial problems 

given two problems          the algorithm similar         computes whether   and
  are similar to each other or not  see figure      since computing  requires o t  time 
line   requires o t  time  since checking whether two trees are isomorphic or not requires
o t  time  as shown in aho  hopcroft    ullman         line   requires o t  time  lines  
through    requires o t  time  thus  the algorithm runs in o t  time 
given an unsolved problem  and a similar solved problem similar   the algorithm
computesolutionf romsimilarp roblem   similar   computes the solution to  by variable mapping from similar  see figure      v ariablem ap is a list where each entry is
a pair   v  vsimilar    v being a free variable in  and vsimilar is the corresponding free
variable in similar   let the size of v ariablem ap be k    the lines   through    requires
o tk    time since the number of nodes in similar is t and the number of arguments in any
predicate is small  lines    through    requires o k    time where  is the size of the
solution to similar   thus  the algorithm runs in o tk    k    time 
finally  given an unsolved problem  and a memory m emory that stores problems hierarchically  as described in section       the algorithm eliminatequantif iers   m emory 
computes the solution to  by variable mapping from a similar problem in m emory  if such
a problem exists  otherwise solves  using a problem classier and combination of constraint
   

fiexecuting perceptions and actions in diagrammatic reasoning

similar        
   if             
  
return f alse
   else
  
      p arset ree
  
      p arset ree
  
if isomorphic           f alse 
  
return f alse
  
else
  
for each node in  
   
if the predicate or boolean operator at the corresponding node in   does
not match 
   
return f alse
    return t rue

figure     algorithm for deciding whether two problems         are similar or not by
computing structural equivalence  a problem is a quantied expression 

computesolutionf romsimilarp roblem   similar  
      p arset ree
   similar  similar  p arset ree
   similar  similar  solution
     similar
   for each node in similar
  
if the node contains a predicate  say p   
  
for j    to   arguments in p
  
v  variable occupying j th argument of p in 
  
vsimilar  variable occupying j th argument of p in similar
   
if v ariablem ap contains v    f alse 
   
v ariablem ap add   v  vsimilar   
    for i    to  v ariablem ap 
   
replace all occurrences of v ariablem ap i     in  by v ariablem ap i    
    return 

figure     algorithm for computing the solution to a problem  by mapping variables
from a similar problem similar   the problem is a quantied expression and the
solution is the equivalent quantier free expression 

solvers and qe algorithms  as described in section     the algorithm is shown in figure
   
   

fibanerjee   chandrasekaran

let there be n subproblems to a problem  in a problem  some of the predicates are already base predicates while the rest are not which can be written as conjunctions disjunctions
of base predicates thereby leading to decomposition of a problem into subproblems  for
example  in section      the problem riskyp ortionsof p ath q  c    c    d  is dened in terms
of the base predicate distancelesst han p  q  d   i e   distance p  q   d  and the nonbase predicates on q  c    and on p  c     each of these non base predicates can be written
as disjunctions of base predicates  such as  on q   c   i   c   i        and on q   c   j   c   j  
      respectively  thereby leading to decomposition of riskyp ortionsof p ath into subproblems  each of the subproblems inherits the base predicates from the problem  e g  
distancelesst han p  q  d   and also includes the new base predicates  e g   on q   c   i   c   i 
      on q   c   j   c   j         obtained from the non base predicates  let  be the number
of polynomials in the base predicates of a problem and  be the number of polynomials due
to the newly obtained base predicates in a subproblem  since all subproblems are similar 
each of them will have     polynomials  the total number of polynomials s in a problem
is o    n  
let d be the maximum degree of any polynomial in a subproblem  since all subproblems
are similar  each of them will have maximum degree d  the maximum degree of polynomials
in a problem will also be d if objects are represented piecewise linearly  in which case d    
if the objects are not represented piecewise linearly  the degree will be much larger than
two which might lead to a situation where the problem might not be solvable in reasonable
time 
let k be the number of quantied variables in a problem  then each subproblem
also has k quantied variables  let the computational complexity of using a general qe
algorithm for solving a problem be t  n  while that for solving a subproblem is t      where
k 
t is a doubly exponential function  such as  when using cad  t  n     sd o      note
that t  n   nt      i e   it is more ecient to solve each subproblem using a general qe
algorithm than to solve the whole problem using the same algorithm 
in algorithm eliminatequantif iers   m emory   lines   through   require o n  time 
lines   and   require o t  time each  since line    requires o t  time  lines    through
   require o mt  time  line    requires time t     while lines    through    require
o  n   tk   k     time  thus  the entire algorithm runs in o t     mt  n   tk   k    
time  note that  is the size of the symbolic solution  and if the symbolic solution
can be expressed concisely   is small  since the number of boolean operators is of the
order of number of base predicates and each base predicate is dened in terms of at
least one polynomial  t   o s    o    n   thus  the complexity of the algorithm is
o t        m    n    k   s    n    k     it can be seen that
nt       t        m    n    k   s    n    k 
or 

      d o   

k 

m
    n 
  k       n    k 

is true provided  is not large  that is  it is more ecient to solve a problem by variable
mapping than to solve each subproblem using a general qe algorithm provided the size of
the stored symbolic solution is not large  for every decomposable problem  the complexity
of qe can be reduced as above 
   

fiexecuting perceptions and actions in diagrammatic reasoning

eliminatequantif iers   m emory 
    solution  
   decompose  into subproblems i  qi i      i  n
p

np
n 
n 

nk
where   i     i         ip    qi i   n  
k 

  
  
  
  
  
  
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   

i 
for k  p to  
for j    to nk
i  the ith operator   or   in decomposed  from right to left
ii  
construct the parse tree for the matrix  
compute   
f lag   
for j    to m
m emory j  j th problem in m emory
if similar m emory j         t rue 
similar  m emory j
f lag   
break loop
if f lag     
   solution  computesolutionf romqealgorithms    
similar   
for i      f lag        to n
i  solution  computesolutionf romsimilarp roblem i   similar  
 solution   solution i i  solution
return  solution

figure     algorithm for computing the solution to a spatial problem  taking the help
of previously solved similar problems in m emory  thereby bypassing quantier
elimination whenever possible  the problem is a quantied expression and the
solution is the equivalent quantier free expression 

when a problem is encountered by the sps for the rst time  it is solved by decomposing into subproblems  solving the rst subproblem using a general qe algorithm and
then obtaining the solution of the rest of the subproblems by mapping their variables to
the rst subproblem  since a subproblem and its solution are stored in memory  if a similar
subproblem is encountered in future  the sps bypasses the qe algorithm completely and
solves it by variable mapping  in such a case  line    of the algorithm is never executed 
and the time complexity of solving the problem is
 m   nk   s   nk 

   

fibanerjee   chandrasekaran

which is a considerable savings compared to the complexity of solving the entire problem
k 
using a general qe algorithm  e g   complexity of cad is  sd o       provided  is not
large  as the sps solves more problems  the probability to encounter a similar problem in
memory increases thereby leading to the above scenario which incurs a complexity of low
order polynomial as compared to doubly exponential  
example  to illustrate the problem solving process  let us consider the spatial problem behindcurve q  c  p   described in section       for a point p   px   py   and a curve
c   p    p       pn   where pi   xi   yi   is a point  decomposition of the problem occurs as
follows 

 behindcurve q  c  p 
 intersect c   p  q  
 a  on a  c   on a   p  q  
 a   n 
i   on a   pi   pi        on a   p  q  
 n 
i    a  on a   pi   pi       on a   p  q   

 n 
i    qi i  

 n 
i   i
thus there are  n     subproblems i   where
i  on a   pi   pi       on a   p  q  
qi  a
i  a  on a   pi   pi       on a   p  q  
from figure      i                               for i            n     by theorem   
all i s are similar since they are the subproblems of the same problem  if the sps does
   it should be noted that approximating a continuous curve by a sequence of line segments has its drawbacks  for example  a point p that is on a continuous curve c might not be on the piecewise linear
approximation of c  the sps can accept a parameter that specifies the maximum length of a line
segment to be used in the approximation  as of our current implementation  we leave the onus of determining this maximum length on the problem solver  in this context  it deserves mention that loss
of information is inevitable in almost any kind of approximation  for example  when the space in a
diagram is approximated by a finite number of pixels  as shown by banerjee and chandrasekaran        
the diagrammatic objects lose certain spatial information that might be detrimental to spatial problem
solving which can be avoided by knowing the minimum allowable resolution  or maximum length of one
side of a square pixel  

   

fiexecuting perceptions and actions in diagrammatic reasoning



on a  p  p   

on a  p q  

figure     parse tree for the matrix of the rst subproblem of the behindcurve problem 

not nd a problem in memory similar to the rst subproblem     it is sent to the problem
classier who sends it to the appropriate qe algorithm  the problem denition  its tuple
  parse tree  and solution are then stored in memory as follows 
   q   p    p     p   a  on a   p    p      on a   p  q  
    x  y     x    y      x    y       px   py   
  px  x      px  x      x   x     py x   py x   px y  x  y  px y    xy         x  px  
   x   px     x  x      py x   py x   px y  x  y  px y    xy           
where the arguments of   are the free variables  the other subproblems are solved by
replacing the variables in   by the mapped variables  if a problem similar to   is found
in memory    will also be solved by replacing the mapped variables  just as the other
subproblems 
note that  for example  the behindcurve problem  in the absence of an appropriate
vocabulary of properties relations  would have been specied as  see redlog in weispfenning        
behindcurve  x  y     p  x   p  y     p  x   p  y        pn x   pn y      px   py   
 ax   ay   t     t     px   t x  px     ax  py   t y  py     ay  n 
i   ti      ti 
   pi x   ti  pi   x  pi x     ax  py   ti  pi   y  pi y     ay  
here the total number of quantiers is n      dependent on the number of line segments
forming the curve which can be huge for complicated curves as in many real world applications  in our sps  due to appropriate decomposition of problems into subproblems  the
number of quantiers in any subproblem is always xed    in this case  irrespective of the
spatial complexity of the object s   curve in this case   the symbolic solutions of these
simple subproblems can be stored for future use which is not possible in systems like redlog  needless to say  though solving the problem using both the systems produce the same
solution  ours is much faster 
   

fibanerjee   chandrasekaran

   applications
in this section  we illustrate how the sps can be deployed in conjunction with a problem
solver  human or articial  such as  soar   for solving spatial problems without human intervention as needed for dr  two applications will be considered  entity re identication
and ambush analysis  that are deemed very important in the military domain  the subproblems that the sps autonomously decomposes each spatial problem into will be shown 
problems in military domain involve a wide variety of objects with arbitrary properties and
relations  and hence  help to illustrate the expressiveness of the specication language and
the eciency and generality of the sps 
for the implementation  we used bisoar  due to kurup and chandrasekaran         a
bimodal version of soar  laird et al          where the problem solver uses two kinds of operators  predicate symbolic operators that are applied on information in predicate symbolic
form and perception like operators that are applied on a diagram  to bring about state
transitions to reach the goal state from an initial state  a human is responsible for providing
the broad problem solving strategy for a class of problems  given a specic problem from
that class  bisoar uses the predicate symbolic and perception like operators accordingly 
since we have used bisoar in a number of dierent domains  e g   military  euclidean geometry  physics  civil engineering  banerjee   chandrasekaran       provide some examples 
and still continue to do so  it knows several dierent problem solving strategies and operators  both predicate symbolic and perception like  the emphasis of this section is not on
how eciently bisoar solves problems but on how eciently the perception like operators
can be executed without incorporating any knowledge that jeopardizes the generality of a
general purpose problem solver  for each spatial problem  we will compare the performance
of our proposed sps with the cad algorithm in terms of actual computation time which
is determined by taking the average of at least    runs  as we will see  the sps excels by
a signicant margin in most cases 
    entity re identification
the entity re identication problem is a core task in the us armys all source analysis
system  asas   asas receives a new report about sighting of an entity t  of type t  e g 
tanks   the task is to decide if the new sighting is the same as any of the entities in
its database of earlier sightings  or an entirely new entity  reasoning has to dynamically
integrate information from dierent sources  database of sightings  mobility of vehicles 
sensor reports  terrain and map information  to make the decision  we will follow a novel
capability using failure of expectation  if h were true  o should have been observed  but
since it was not  h is likely not the case  where h and o are hypotheses and observations
respectively  josephson   josephson        chandrasekaran et al          in the following 
we consider a simple version of the problem to illustrate how the task is solved using dr
and the spatial problems involved therein 
figure    a  shows the terrain of interest  mountainous with the closed regions marking
impassable areas for entities of type t  e g   tanks   let t  be an entity newly sighted at
time t  located at point p  while t    t  are the two entities that were located at points p   
p  when last sighted at times t    t  respectively  t  and t  were retrieved from the database
as having the potential to be t  based on their partial identity information  also  in the
   

fiexecuting perceptions and actions in diagrammatic reasoning

t 

t 

t 

 a  terrain  impassable regions  and sighted tanks 

 c  a short path between t  and t   

 b  a short path between t  and t   

 d  a path from the only plausible homotopy
class 

figure     reasoning steps for entity re identication
area of interest  there are three enemy regions or obstacles  r    r    r     as shown in figure
   a   with a given repower sight range d of the enemy  reasoning proceeds as follows  if
t  can reach p  within the time t   t    then t  might be t    similarly for t    since each
mountainous region  or obstacle  is a hiding place for enemies with a repower range d 
the existence of an entity shows that it most probably did not traverse through a territory
within the repower range  further  there might be sensor elds that report to the database
when they sense entities  if no entity was sensed by a sensor eld between the times t  and
t    then t  could not have followed a path that passed through that sensor eld  such
constraints have to be taken into account while reasoning  all information might not be
available in the database at once  in what follows is a simple scenario and a discussion of
the spatial problems as they occur 
the problem solver  e g   a commander  wants to know whether there exists a contiguous
safe region containing the points p  and p    he species the problem saf eregion as follows 
saf eregion q   r    r       rn    d 

   

fibanerjee   chandrasekaran

 a   ni  inside a  ri     distance q  a   d
   ri  


 a   ni  j 

   ri  


 a   ni  j 

inside a   ri   j     distance q  a   d

inside a   ri   j     distance q  a   d

   ri  

a  inside a   ri   j    distance q  a   d

   ri  

a  inside a   ri   j    distance q  a   d

   ri  

saf eregion  q    ri   j    d 


 ni  j 

 ni  j 

 ni  j 

where q   x  y   decomposition of the problem by the sps is shown above  the subproblem is symbolically solved and the solution stored in memory along with the subproblem
specication  in order to compare the actual times required to solve the problem  we constructed a very simple diagram consisting of four polygonal regions depicting obstacles  see
figure    a    the four regions are
r                                            
r                               
r                                 
r                                                      
while d     triangulation of the regions produced seven triangles  once a subproblem is
symbolically solved and stored  solving the problem required      seconds while solving the
same using the cad algorithm required     seconds 
the diagram with the shaded safe region is input to the recognize function which computes the vertices and boundaries of the shaded region  as shown in figure    b   next the
problem solver wants to know whether there exists a path between points p  and p  safely
avoiding the obstacles and enemy repower range  and whether that path can be traversed
in time t   t    let v be the velocity of the sighted entity  a piece of symbolic knowledge
available from the database  then  the maximum length of path traversable in the given
time is l   v   t   t     let l  l be a rational number  then  the problem of path
existence between two points s and t such that the path lies inside a region r and is less
than a given length l can be specied as 
p athexists s  t  r  l 
 q  inside q  r   distance s  q    distance q  t   l
   r 


 q   i 
inside q   r  i     distance s  q    distance q  t   l

   

fiexecuting perceptions and actions in diagrammatic reasoning

r 

r 

r 

r 

r 

r 

r 

r 



 a  the unshaded polygons are obstacles  the
shaded region is the safe region  as computed by
the sps 

 b  the points shown are vertices of the boundaries of the safe region as computed by the
recognize function 

s

s

r 

r 

r 

r 

r 

r 

r 

r 

t

t



 c  paths lying in the safe region and less than a
given length between two points  as computed by
the sps 

 d  paths lying in the safe region and less than a
given length between two points  as computed by
the cad algorithm 

figure     a simplied scenario to illustrate the performance of the proposed sps as compared to the cad algorithm for entity re identication 

   r 


 i 
q  inside q   r  i    distance s  q    distance q  t   l

   r 


 i 
p athexists  s  t   r  i   l 

   

fibanerjee   chandrasekaran

decomposition of the problem by the sps is shown above  the subproblem is symbolically
solved and stored  again  we resort to the simple diagram in figure    to compare the actual
computation times for the p athexists s  t  r  l  problem  where s           t          
r  recognize saf eregion  x  y    r    r       rn         and dierent sets of regions ri and
dierent values of l  triangulation of r produced            and    triangles for  r      r    
 r      r    and  r    r    r    r    respectively  once a subproblem is symbolically solved and
stored  the computation times required for solving the problem using the proposed sps is
signicantly less than that using the cad algorithm  see table    

table    comparison of computation times  in seconds  between the cad algorithm and
our proposed sps for the p athexists s  t  r  l  problem  where s           t 
         r  recognize saf eregion  x  y    r    r       rn         a     ghz pc with
  gb ram       mb virtual memory and    bit operating system was used  the
implementation was done in m athematica  below  res refers to result  t 
refers to t rue  f  refers to f alse  and oom  refers to out of memory 

l
   
    
    
    
    
    
    
     
     

 r   
cad sps res
            f
            f
            f
            t
            t
            t
            t
            t
            t

 r   
cad sps res
              f
              f
              t
              t
              t
              t
              t
              t
              t

 r   
cad sps res
             f
             f
              t
             t
              t
             t
              t
              t
              t

 r   
cad sps res
oom        f
oom        f
oom        t
oom        t
oom        t
oom        t
oom        t
oom        t
oom        t

 r    r    r    r   
cad sps res
oom        f
oom        f
oom        f
oom        f
oom        t
oom        t
oom       t
oom        t
oom        t

in general  the p athexists s  t  r  l  problem can be specied as 
p athexists s  t  r  l 
 q    q       qn    a  on a   s  q    q       qn   t    inside a  r    length  s  q    q       qn   t    l
 q    q       qn    a  on a  c   inside a  r    length c   l
 q    q       qn    a  on a  c   inside a  r    length c   l
   r 


 q    q       qn    a  on a  c    k 
inside a   r  k      length c   l

   r 


 q    q       qn    a  on a  c    k 
inside a   r  k      length c   l

   

fiexecuting perceptions and actions in diagrammatic reasoning

   r 


 k 
q    q       qn    a  on a  c   inside a   r  k     length c   l

   r 


 k 
p athexists  s  t   r  k   l 

where c   s  q    q       qn   t  and r  br  note that even though c is a curve  on a  c 
cannot be decomposed since c is not a free variable  see denition of decomposition in
section       also  note that the above problem contains the form f   discussed in t heorem
   so r has been used 
if there exists a path between points p  and p  safely avoiding the obstacles and enemy
repower range such that it can be traversed in time t   t    then the problem solver wants
to compute the path s   the problem can be specied as 
f indp ath q  s  t  r  l 
 inside q  r   distance s  q    distance q  t   l
   r 


  i 
inside q   r  i     distance s  q    distance q  t   l

   r 


 i 
inside q   r  i    distance s  q    distance q  t   l

   r 


 i 
f indp ath  q  s  t   r  i   l 

where q   x  y   since there are no quantiers  solving the problem by decomposition and
variable mapping does not achieve reduction in computation time by anysignicant amount 
the region consisting of all paths that satisfy the constraints  l        is shown in
figure    c   the quality of the solution depends on the recognize function  for example 
the solution shown in figure    d  is more accurate than in figure    c  as the recognize
function failed to determine the vertices of the safe region accurately  an alternate denition
of the semi linear motion planning problem can be found in weispfenning         where a
semi linear path consists of n translations along straight lines each of which is parallel to
one of the given k vectors 
from the results  the problem solver infers that t  might be t    next he repeats the
same for entities t  and t    and nds that there exists a path between points p  and p 
safely avoiding the obstacles and enemy repower range such that it can be traversed in
time t   t    so t  might be t  as well  the sensor database informs that there are two
sensor elds  sensor   sensor   in the area of interest but there has been no report from
them of any passing vehicle  problem solver wants to verify whether any of the paths passes
through any of the sensor elds  he species the problem intersect r    r    to compute the
intersection of two regions r  and r   
intersectregions r    r   
 q  inside q  r     inside q  r   
   r   


 q   i 

   r   


inside q   r    i      i 

inside q   r    j   

   

fibanerjee   chandrasekaran

   r   


 i 

   r   


j 

intersectregions   r    i    r    j  

he
computes
the
problem
intersectregions paths     s    where paths    recognize f indp ath q  p    p    r  l   and
s  is the region covered by sensor   in our scenario in figure    c   the solution is t rue 
next the problem solver wants to know whether there exists a path between points p  and
p  safely avoiding the obstacles and enemy repower range such that it can be traversed in
time t   t    he computes p athexists p    p    r     l   where r    recognize paths    s    
which returns t rue  the inference follows that t  might be t    the same reasoning is
repeated for t  and t    intersect paths     s    returns t rue while p athexists p    p    r     l 
returns f alse  see figure    b    the inference follows that t  cannot be t    hence  the
problem solver identies t  as t   
the entity reidentication problem could also have been solved by computing the shortest paths between the pairs p    p  and p    p  avoiding the sensors and checking whether
their lengths satisfy the time constraints  that requires computing the shortest path between two points p  and p  safely avoiding the obstacles and enemy repower range  i e  
lying entirely within the safe region r   since such a path will not have any loop and will
share its intermediate vertices  if any  with the vertices of r  the path can have at most
  r  intermediate vertices  let s  r   p    p     m    s   and c   q    q       qm   be
the shortest path  where q   p    qm  p    qi  r     i  m      then  the problem of
computing the shortest path can be specied as
f indshortestp ath r  c 
 m inimize length c    c     c        c m       curveinsideregion c  r  
where curveinsideregion c  r  is the constraint that can be specied and decomposed as
follows 
curveinsideregion c  r 
 a  on a  c   inside a  r 
 a  on a  c   inside a  r 
 a  on a  c   inside a  r 
  c  

 a   i 

   r 

a  on a   c i   c i         inside a   r  j  

   r 

curveinsideregion   c i   c i         r  j  

  c  


j 

  c  


j 

 i 
 i 

   r 


on a   c i   c i           j 
inside a   r  j    

   

fiexecuting perceptions and actions in diagrammatic reasoning

where r  br  since the above problem is of the form f    r had to be used  once a subproblem is symbolically solved and stored  solving the problem curveinsideregion c  r  
where
c                                                                                                    
r  recognize saf eregion  x  y    r    r    r    r         
by sps required      seconds while solving the same using the cad algorithm required        seconds  see figure    a    the shortest path obtained by solving the
f indshortestp ath r  c  problem is shown in figure    b  

 a  a path c between two points lying inside the
shaded region r 

 b  shortest path between two points as computed
from the f indshortestp ath r  c  problem 

figure     paths between two points lying inside the safe  shaded  region 

    ambush analysis
there are two main factors  range of repower and sight  that determine the area covered
by a military unit  presence of terrain features  such as  mountains  limit these factors
and allow units to hide from opponents  these hidden units not only enjoy the advantage
of concealing their resources and intentions from the opponents but can also attack the
opponents catching them unawares if they are traveling along a path that is within the
sight and repower range of the hidden units  thereby ambushing them  thus  it is of
utmost importance for any military unit to a priori determine the areas or portions of a
path prone to ambush before traversing them  we had already described in section     how
a problem solver  e g   an army commander  reasons using diagrams to gure out the safest
path to transport his troops from one base camp to another in a given time  in this section 
given a curve or region as a hiding place and the repower and sight ranges  we show how
   

fibanerjee   chandrasekaran

the regions and portions of path prone to ambush is eciently computed by the proposed
sps 
given a curve c and the repower and sight range d  the spatial problem
riskyregion q  c  d  is dened as the set of all points covered by that range from c  thus 
the problem specication is 
riskyregion q  c  d 
 a  on a  c   distance a  q   d
  c  

 a   i 

on a   c i   c i          distance a  q   d

  c  

a  on a   c i   c i         distance a  q   d

  c  

riskyregion  q   c i   c i        d 

 i 
 i 

where q   x  y   in order to compare the actual computation times required to solve the
problem  we constructed a very simple diagram consisting of two curves  path and mntn 
where
path                                                                  
                           
mntn                                                                                
the solution to the problem riskyregion q  mntn  d  is the shaded region shown in figure
   a  where mntn is an obstacle for hiding  e g   mountain range  and d      the problem
riskyregion q  r  d  for a region r can be specied by replacing the predicate on p  c  by
inside p  r  
again  given a curve c  as a path  a curve c  for hiding  and a repower range d  the
problem riskyp ortionsof p ath q  c    c    d  is dened as parts of c  covered by that range
from c    thus 
riskyp ortionsof p ath q  c    c    d 
 on q  c     p  on p  c     distance p  q   d
  c   

 p   i  
d
  c   

j  

  c   

j  

 i  
 i  

  c   

on q   c   i   c   i       j  

  c   

  c   

on p   c   j   c   j       distance p  q  

p  on q   c   i   c   i      on p   c   j   c   j      distance p  q   d
riskyp ortionsof p ath  q   c   i   c   i         c   j   c   j        d 

   

fiexecuting perceptions and actions in diagrammatic reasoning

 a  the shaded region  as computed from the
problem riskyregion q  mntn       is the risky
region prone to ambush due to enemies hiding at
mntn  the portions of path inside the risky region are the risky portions of the path 

 b  the bold parts of path  as computed
from the problem riskyp ortionsof p ath q  path 
mntn       are the risky portions of the path 
the shaded region  as computed from the problem behindcurvewrtriskyp ath q  mntn  path  
is where enemies could be hiding from troops traveling on path 

 c  troops traveling on rskyprtn    a risky portion  in bold  of path  should be careful of being
ambushed by enemies hiding in the shaded region because rskyprtn  is within firepower range
from that region  computed from the problem
behindcurvewrtriskyp athdistance q  mntn 
rskyprtn        

 d  troops traveling on rskyprtn    a risky portion  in bold  of path  should be careful of being
ambushed by enemies hiding in the shaded region because rskyprtn  is within firepower range
from that region  computed from the problem
behindcurvewrtriskyp athdistance q  mntn 
rskyprtn        

figure     a simplied scenario to illustrate the performance of the proposed sps for ambush analysis 

   

fibanerjee   chandrasekaran

where q   x  y   alternatively  the same problem can be specied as
riskyp ortionsof p ath q  c    r    d 
 on q  c     inside q  r   
  c   

  i  

   r   


on q   c   i   c   i           j 

   r   

on q   c   i   c   i         inside q   r    j  

   r   

riskyp ortionsof p ath  q   c   i   c   i         r    j   d 

  c   


j 

  c   


j 

 i  

 i  

inside q   r    j   

where r   recognize riskyregion  x  y   c    d   and q   x  y  
the solution
to the problem riskyp ortionsof p ath q  path  mntn  d   where d      is the parts
of path inside the shaded region shown in figure    a   figure    b  shows the
risky portions of the path  rskyprtn    rskyprtn   in bold as obtained from
recognize riskyp ortionsof p ath q  c    c    d   
rskyprtn                                   
rskyprtn                                 
note that the latter specication is free from quantiers while the former is not  however 
the solution computed from the latter specication might have less accuracy than the same
from the former due to the use of recognize function  if the hiding place is a region r
instead of the curve c    the problem riskyp ortionsof p ath q  c    r  d  can be specied by
replacing the predicate on p  c    by inside p  r   the portions of the path marked in figure
  c  is computed from this specication 
the region behind c  where the enemies might be hiding is the set of all points that are
behind c  with respect to each point on the risky portions of curve c    thus  if c is a risky
portion of a path  we have
behindcurvewrtriskyp ath q  c    c 
 a  on a  c   behindcurve q  c    a 
 a  on a  c   intersect c     a  q  
 a  on a  c    b  on b  c     on b   a  q   
  c  

 a  b   i 
  c  

 i 

  c   

j  

  c   

on a   c i   c i           j  

on b   c   j   c   j          on b   a  q  

 a  b  on a   c i   c i         on b   c   j   c   j         on b   a  q   

   

fiexecuting perceptions and actions in diagrammatic reasoning

  c  

 i 

  c   

j  

behindcurvewrtriskyp ath  q   c   j   c   j         c i   c i       

where
q   x  y   the solution to the problem behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp ath q  mntn  rskyprtn    is the shaded region shown in figure    b   if the hiding place is a region r instead of the curve c    the problem
behindcurvewrtriskyp ath q  r  c  can be specied by replacing the predicate on p  c   
by inside p  r  
however  the enemies might be hiding not anywhere behind a mountain but within
a distance from where they can ambush the friendly units  hence  a more reasonable problem for the commander from the friendly side to compute would be
behindcurvewrtriskyp athdistance q  c    c  d  where d is the distance from where the
enemies can ambush them  the problem is specied as 
behindcurvewrtriskyp athdistance q  c    c  d 
 a  on a  c   behindcurve q  c    a   distance a  q   d
 a  on a  c   intersect c     a  q    distance a  q   d
 a  on a  c    b  on b  c     on b   a  q     distance a  q   d
  c  

  c   

 a  b   i  on a   c i   c i           j  
distance a  q   d
  c  

on b   c   j   c   j          on b   a  q   

  c   

 i  j  
 a  b  on a   c i   c i         on b   c   j   c   j         on b   a  q    
distance a  q   d
  c  

 i 
     d 

  c   

j  

behindcurvewrtriskyp athdistance  q   c   j   c   j         c i   c i  

where
q

 x  y  
the solutions to the problems behindcurvewrtriskyp athdistance q  mntn  rskyprtn    d 
and behindcurvewrtriskyp athdistance q  mntn  rskyprtn    d   where d      are the
shaded regions shown in figure    c      d  respectively  if the hiding place is a region r
instead of the curve c    the problem behindcurvewrtriskyp athdistance q  r  c  d  can be
specied by replacing the predicate on p  c    by inside p  r   a comparison between the
cad algorithm and our proposed sps of actual times required to compute the problems
relevant to ambush analysis as discussed above is shown in table   

   

fibanerjee   chandrasekaran

table    comparison of computation times  in seconds  between the cad algorithm and
our sps for the dierent problems relevant to ambush analysis  a     ghz pc
with   gb ram       mb virtual memory and    bit operating system was used 
the implementation was done in m athematica  all of the following are function
problems where q   x  y  
p roblem
riskyregion q  mntn     
riskyp ortionsof p ath q  path  mntn     
behindcurve q  mntn          
behindcurvewrtriskyp ath q  mntn  path 
behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp athdistance q  mntn  rskyprtn       
behindcurvewrtriskyp athdistance q  mntn  rskyprtn       

sps
    
   
    
    
    
     
    
   

cad
    
    
    
      
     
     
     
     

   discussion
spatial problem solving has been an area of active research since sutherlands sketchpad
        the need to access  communicate and manipulate spatial information precisely
 much as engineers and scientists do  using a high level language  much as common people
use  has been one of the frontiers in ai  it has been well known that such capabilities
are oered by rst order predicate logic and that  rst order logic is generally intractable
except for limited domains  under the umbrella of qualitative spatial reasoning  qsr  
researchers have investigated a plethora of spatial calculi  the most prominent of which are
mereotopological calculi  clarke        bennett         cardinal direction calculus  frank 
            skiadopoulos   koubarakis         double cross calculus  freksa          and   intersection calculi  egenhofer        egenhofer   franzosa         ip op calculus
 ligozat         dipole calculus  moratz  renz    wolter        schlieder        dylla  
moratz         and the various region connection calculi  randell et al         bennett  isli 
  cohn        gerevini   nebel        cohn  bennett  gooday    gotts        duntsch 
wang    mccloskey        gerevini   renz         there are two main points of distinction
between qsr and our approach to spatial problem solving as reported in this paper 
   the dierent qsr calculi emphasize dierent aspects of space  such as  ontological issues  topology  distance  orientation  shape  etc  depending on the spatial aspect of interest  the calculus is based on a minimal set of spatial relations 
for example  the   intersection calculus  egenhofer   franzosa        is
based on nine spatial relations  r    r    r    r    r    r     r     r     r     between two spatial regions  the double cross calculus  freksa        is based on fteen spatial relations
 lf  lp  lc  ll  lb  sf  sp  sc  sl  sb  rf  rp  rc  rl  rb  among three points  etc  our framework
is not based on a minimal set of spatial relations  it is based on a xed set of mathematical logical operators  see section       any spatial relation among points that can be
expressed using real variables and the xed set of operators in rst order logic is included in
our vocabulary  any spatial relation involving curves and or regions that can be expressed
   

fiexecuting perceptions and actions in diagrammatic reasoning

in rst order logic using spatial relations among points and the relations on and inside is
included in our vocabulary 
   the spatial problems of interest to the qsr community are csps involving either
points  e g   double cross calculus  or regions  e g      and   intersection calculi  region
connection calculi  and a closed set of their properties relations often limited to the binary
domain  a general purpose sps for helping a human perceive from and act on diagrams
in dierent real world applications will need to solve qcsps involving points  curves and
regions and an open ended vocabulary of their properties relations actions over the entire
real domain  which is what our framework oers  since qe is the computational bottleneck
of our sps  we concentrate our eorts on the real qe algorithms  as discussed towards the
end of section     
naturally  the question arises  how convenient is it for a human to specify a spatial
problem as a qcsp  while we acknowledge that the process of specifying a spatial problem
as a qcsp is not as eortless as explaining it to another human in a natural language  we
have taken the rst step in making the process less strenuous by oering a vocabulary of
predicates that is open ended  not all qcsp solving systems  such as  redlog  dolzmann
  sturm        and qepcad  brown         oer such a vocabulary for spatial problem
solving which makes it dicult for a user to specify a problem as he has to dig deep into an
ocean of equations and inequalities and cannot communicate naturally in terms of high level
predicates   we are still far from building systems that can understand communication in
natural language  however  research in automatic constraint acquisition from examples
is already underway  vu and osullivan        discuss recent advances in that direction 
while we did not use any of those ideas or results in our work  it is not dicult to see how
those ideas in conjunction with the work reported in this paper will be able to build a more
convenient and ecient spatial problem solving framework 

   conclusion
dr requires perceiving specied information from a diagram or modifying creating objects
in a diagram in specied ways according to problem solving needs  a number of dr systems
have been built in the last couple of decades  in each of which the developers have ascertained
a priori and hand coded the required perceptions and actions  this approach of building
dr systems defeats the very purpose of open ended exploration  the essence of human like
problem solving  our goal  in this paper  was to develop a general and ecient framework
for executing perceptions and actions as relevant to reasoning with  d diagrams across a
wide variety of domains and tasks  we make two important contributions 
   we observe that the wide variety of visual perceptions actions for dr applications can
be transformed into domain task independent spatial problems  this observation makes it
possible to use the well established constraint satisfaction framework for spatial problem
solving  we developed a language in which to specify spatial problems as qcsps in the
real domain using an open ended vocabulary of properties  relations and actions involving
three kinds of diagrammatic objects  points  curves  regions  solution to a spatial problem
is the equivalent simplied quantier free expression  that reduces the goal to developing
a general and ecient sps for solving  d spatial problems without human intervention 
   to be fair  redlog and qepcad were not developed for solving only spatial problems but any qcsp 

   

fibanerjee   chandrasekaran

   the spatial problems were specied as qcsps in rst order logic  qe  an inherently
doubly exponential problem  was the computational bottleneck of the sps  we represented
the objects  points  curves  regions  as conguration of simple elements to facilitate decomposition of complex problems into simpler and similar subproblems  we showed that  if
the symbolic solution to a subproblem can be expressed concisely  qe can be achieved in
low order polynomial time by storing problems and their solutions in memory so that when
a similar problem is encountered in future  it can be solved by mapping its solution from a
similar previously solved problem  the sps grows more ecient as it solves more problems 
even though we used the cad algorithm for qe and compared the complexity results with
that of cads  this approach is by no means limited to any particular algorithm  the complexity of any qe algorithm can be signicantly improved for spatial problem solving by
using the idea of problem decomposition and variable mapping  as discussed in this paper 
the framework leaves room to be more ecient and convenient by incorporating future
results in at least two possible directions  learning constraints from examples  automatic
constraint acquisition  and carefully exploiting a rich portfolio of qe algorithms for solving
new problems 

acknowledgments
this research was partially supported by participation in the advanced decision architectures collaborative technology alliance sponsored by the u s  army research laboratory
under cooperative agreement daad              we thank the anonymous reviewers for
their constructive comments 

references
aho  a  v   hopcroft  j  e     ullman  j  d          the design and analysis of computer
algorithms  addison wesley 
allwein  g     barwise  j          logical reasoning with diagrams  journal of logic 
language and information                
anderson  j  r          rules of the mind  lawrence erlbaum associates  hillsdale  nj 
banerjee  b     chandrasekaran  b          perceptual and action routines in diagrammatic
reasoning for entity re identication  in proc    th army science conf   orlando  fl 
banerjee  b     chandrasekaran  b          a constraint satisfaction framework for visual
problem solving  in benhamou  f   jussien  n     osullivan  b   eds    trends in
constraint programming  chap      pp          iste  london 
banerjee  b     chandrasekaran  b          a spatial search framework for executing
perceptions and actions in diagrammatic reasoning  in goel  a  k   jamnik  m    
narayanan  n  h   eds    diagrammatic representation and inference  lecture notes
in ai  vol        pp          springer  heidelberg 
barwise  j     etchemendy  j          a computational architecture for heterogeneous
reasoning  in gilboa  i   ed    proc   th conf  theoretical aspects of rationality and
knowledge  pp       morgan kaufmann 
   

fiexecuting perceptions and actions in diagrammatic reasoning

basu  s   pollack  r     roy  m  f          algorithms in real algebraic geometry  springerverlag 
bennett  b          logical representations for automated reasoning about spatial relationships  ph d  thesis  school of computer studies  the university of leeds 
bennett  b   isli  a     cohn  a  g          when does a composition table provide a
complete and tractable proof procedure for a relational constraint language   in proc 
ijcai workshop spatial and temporal reasoning  nagoya  japan 
brown  c  w          qepcad b  a program for computing with semi algebraic sets using
cylindrical algebraic decomposition  acm sigsam bulletin                
brown  c  w     davenport  j  h          the complexity of quantier elimination and
cylindrical algebraic decomposition  in proc  intl  symp  symbolic and algebraic computation  pp        acm  ny 
chandrasekaran  b   josephson  j  r   banerjee  b   kurup  u     winkler  r         
diagrammatic reasoning in support of situation understanding and planning  in proc 
  rd army science conf   orlando  fl 
chandrasekaran  b   kurup  u     banerjee  b          a diagrammatic reasoning architecture  design  implementation and experiments  in proc  aaai spring symp  
reasoning with mental and external diagrams  computational modeling and spatial
assistance  pp          stanford university  ca 
chandrasekaran  b   kurup  u   banerjee  b   josephson  j  r     winkler  r          an
architecture for problem solving with diagrams  in blackwell  a   marriott  k    
shimojima  a   eds    lecture notes in ai  vol        pp          springer verlag 
chazelle  b          triangulating a simple polygon in linear time  discrete and computational geometry            
clarke  b  l          a calculus of individuals based on connection  notre dame journal
of formal logic             
cohn  a  g   bennett  b   gooday  j  m     gotts  n          rcc  a calculus for region
based qualitative spatial reasoning  geoinformatica            
collins  g  e     hong  h          partial cylindrical algebraic decomposition for quantier
elimination  journal of symbolic computation                 
davenport  j  h     heintz  j          real quantier elimination is doubly exponential 
journal of symbolic computation                
dershowitz  n     jouannaud  j  p          rewrite systems  in handbook of theoretical
computer science  vol  b  chap     pp          elsevier  north holland  amsterdam 
dolzmann  a     sturm  t          redlog user manual  edition     for version     
tech  rep  mip       fmi  universitt passau  passau  germany 
dolzmann  a   sturm  t     weispfenning  v          real quantier elimination in practice 
in matzat  b  h   greuel  g  m     hiss  g   eds    algorithmic algebra and number
theory  pp          springer  berlin 
   

fibanerjee   chandrasekaran

duntsch  i   wang  h     mccloskey  s          relation algebras in qualitative spatial
reasoning  fundamenta informaticae                 
dylla  f     moratz  r          exploiting qualitative spatial neighborhoods in the situation
calculus  in freksa  c   knau  m   krieg brckner  b   nebel  b     barkowsky  t 
 eds    spatial cognition iv  reasoning  action  and interaction  vol       of lecture
notes in computer science  pp          springer 
egenhofer  m  j          reasoning about binary topological relations  in gunther  o  
  schek  h  j   eds    proc   nd symp  large spatial databases  vol      of lecture
notes in computer science  pp          springer 
egenhofer  m  j     franzosa  r  d          point set topological relations  intl  journal
of geographical information systems            
ferguson  r  w          magi  analogy based encoding using symmetry and regularity 
in proc    th annual conf  cognitive science society  pp          atlanta  ga 
ferguson  r  w     forbus  k  d          telling juxtapositions  using repetition and
alignable dierence in diagram understanding  in holyoak  k   gentner  d     kokinov  b   eds    advances in analogy research  pp          soa  new bulgarian
university 
ferguson  r  w     forbus  k  d          georep  a exible tool for spatial representation
of line drawings  in proc    th natl  conf  ai  pp          austin  tx 
forbus  k  d   usher  j     chapman  v          qualitative spatial reasoning about sketch
maps  in riedl  j     hill  r   eds    proc    th annual conf  innovative applications
of ai  pp        acapulco  mexico  aaai press  menlo park  ca  isbn                  
frank  a  u          qualitative spatial reasoning with cardinal directions  in kaindl  h 
 ed    proc   th austrian conf  ai  vol      of informatik fachberichte  pp         
springer 
frank  a  u          qualitative spatial reasoning about distances and directions in geographic space  journal of visual languages and computing            
freksa  c          using orientation information for qualitative spatial reasoning  in frank 
a  u   campari  i     formentini  u   eds    spatio temporal reasoning  vol      of
lecture notes in computer science  pp          springer 
gebruers  c   hnich  b   bridge  d     freuder  e          using cbr to select solution
strategies in constraint programming  in proc   th intl  conf  case based reasoning 
pp          springer 
gerevini  a     nebel  b          qualitative spatio temporal reasoning with rcc   and
allens interval calculus  computational complexity  in proc    th european conf  ai 
pp          ios press 
gerevini  a     renz  j          combining topological and qualitative size constraints
for spatial reasoning  in proc   th intl  conf  principles and practice of constraint
programming  pp          springer 
   

fiexecuting perceptions and actions in diagrammatic reasoning

glasgow  j   narayanan  n  h     chandrasekaran  b          diagrammatic reasoning 
cognitive and computational perspectives  aaai press 
goldberg  e     novikov  y          on complexity of equivalence checking  tech  rep 
cdnl tr            cadence berkeley labs  ca 
jamnik  m          mathematical reasoning with diagrams  from intuition to automation 
csli press  stanford university  ca 
josephson  j  r     josephson  s  g          abductive inference  computation  philosophy 
technology  cambridge university press  cambridge  ma 
kurup  u     chandrasekaran  b          a bimodal cognitive architecture  explorations in
architectural explanation of spatial reasoning  in aaai spring symp  control mechanisms for spatial knowledge processing in cognitive intelligent systems  stanford
university  ca 
laird  j  e   newell  a     rosenbloom  p  s          soar  an architecture for general
intelligence  artificial intelligence          
laird  j  e   rosenbloom  p  s     newell  a          universal subgoaling and chunking 
kluwer academic publishers 
lasaruk  a     sturm  t          weak quantier elimination for the full linear theory
of the integers  a uniform generalization of presburger arithmetic  technical report
mip       fmi  universitt passau  germany 
leyton brown  k   nudelman  e     shoham  y          learning the empirical hardness
of optimization problems  the case of combinatorial auctions  in proc   th intl  conf 
principles and practice of constraint programming  pp         
ligozat  g          qualitative triangulation for spatial reasoning  in frank  a  u    
campari  i   eds    spatial information theory  a theoretical basis for gis  vol     
of lecture notes in computer science  pp        springer 
lindsay  r  k          using diagrams to understand geometry  computational intelligence 
               
moratz  r   renz  j     wolter  d          qualitative spatial reasoning about line segments 
in proc    th european conf  ai  pp          ios press 
nelson  r  b          proofs without words  exercises in visual thinking  the mathematical association of america  washington  dc 
newell  a          unified theories of cognition  harvard university press  cambridge 
ma 
omahony  e   hebrard  e   holland  a   nugent  c     osullivan  b          using casebased reasoning in an algorithm portfolio for constraint solving  in van dongen  m 
r  c   lecoutre  c     roussel  o   eds    proc   rd intl  csp solver competition 
pp       
pisan  y          visual reasoning with graphs  in  th intl  workshop qualitative reasoning
about physical systems  nara  japan 
   

fibanerjee   chandrasekaran

pisan  y          a visual routines based model of graph understanding  in proc    th
annual conf  cognitive science society  pp          pittsburgh  lawrence erlbaum
associates  isbn                
pulina  l     tacchella  a          a multi engine solver for quantied boolean formulas 
in proc    th intl  conf  principles and practice of constraint programming  pp 
       
randell  d  a   cui  z     cohn  a  g          a spatial logic based on regions and connection  in nebel  b   swartout  w     rich  c   eds    proc   rd intl  conf  principles
of knowledge representation and reasoning  pp          morgan kaufmann 
ratschan  s          ecient solving of quantied inequality constraints over the real
numbers  acm trans  computational logic                
sayag  t   fine  s     mansour  y          combining multiple heuristics  in proc    rd
intl  symp  theoretical aspects of computer science  vol       of lecture notes in
computer science  pp          springer 
schlieder  c          reasoning about ordering  in frank  a  u     kuhn  w   eds   
spatial information theory  a theoretical basis for gis  vol      of lecture notes
in computer science  pp          springer 
seidel  r          a simple and fast incremental randomized algorithm for computing
trapezoidal decompositions and for triangulating polygons  computational geometry 
theory and applications              
skiadopoulos  s     koubarakis  m          composing cardinal direction relations  artificial intelligence                  
streeter  m  j   golovin  d     smith  s  f          combining multiple heuristics online 
in proc    nd conf  ai  pp            aaai press 
sutherland  i  e          sketchpad  a man machine graphical communication system  in
proc  spring joint computer conf   pp         
tessler  s   iwasaki  y     law  k          qualitative structural analysis using diagrammatic reasoning  in glasgow  j   narayanan  n  h     chandrasekaran  b   eds   
diagrammatic reasoning  cognitive and computational perspectives  chap      pp 
        aaai press  menlo park  ca  isbn               
tricket  s  b     trafton  j  g          toward a comprehensive model of graph comprehension  making the case for spatial cognition  in barker plummer  d   cox  r    
swoboda  n   eds    lecture notes in ai  vol        pp          berlin  springerverlag 
tversky  b          some ways that maps and diagrams communicate  in freksa  c  
brauer  w   habel  c     wender  k  f   eds    spatial cognition ii  integrating
abstract theories  empirical studies  formal methods  and practical applications 
vol       of lecture notes in computer science  pp        berlin  springer verlag 
vik  s          an implementation of a near linear polygon triangulation algorithm for
general polygons  senior thesis at macalester college  st  paul  minnesota  available
online at http   sigbjorn vik name projects triangulation pdf 
   

fiexecuting perceptions and actions in diagrammatic reasoning

vu  x  h     osullivan  b          a unifying framework for generalized constraint acquisition  intl  journal on ai tools                 
weispfenning  v          the complexity of linear problems in elds  journal of symbolic
computation              
weispfenning  v          semilinear motion planning in redlog  applicable algebra in
engineering  communication and computing             
wolfram  s         
the mathematica book   th edition  
http   documents wolfram com  

available online at

xu  l   hutter  f   hoos  h  h     leyton brown  k          satzilla  portfolio based
algorithm selection for sat  journal of artificial intelligence research             

   

fi