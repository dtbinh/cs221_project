journal artificial intelligence research                  

submitted       published      

effective algorithm phase transitions
directed hamiltonian cycle problem
gerold jager

gej informatik uni kiel de

computer science institute 
christian albrechts university kiel 
d       kiel  germany

weixiong zhang

weixiong zhang wustl edu

department computer science engineering 
washington university 
st  louis  missouri        united states

abstract
hamiltonian cycle problem  hcp  important combinatorial problem
applications many areas  among first problems used studying intrinsic properties  including phase transitions  combinatorial problems  thorough theoretical
experimental analyses made hcp undirected graphs  limited
amount work done hcp directed graphs  dhcp   main contribution work effective algorithm dhcp  algorithm explores
exploits close relationship dhcp assignment problem  ap 
utilizes technique based boolean satisfiability  sat   combining effective algorithms ap sat  algorithm significantly outperforms previous exact dhcp
algorithms  including algorithm based award winning concorde tsp algorithm 
second result current study experimental analysis phase transitions
dhcp  verifying refining known phase transition dhcp 

   introduction
undirected graph g    v  e  hamiltonian contains hamiltonian cycle  hc  
cycle visits vertex exactly once  given graph  hamiltonian cycle problem
 hcp  find hc prove hc exists graph  decision version
hcp among first problems proven n p complete  karp         hcp
well known problem many applications different areas  e g   hamiltonian cycle
game game theory  stojakovic   szabo         problem finding knights tour
chessboard artificial intelligence  henderson   apodaca         dna physical
mapping biology  grebinski   kucherov         much research done
hcp undirected graphs  reviews  see work bondy         christofides        
chvatal         gould         vandegriend         gutin moscato        
particular  many algorithms developed hcp  angluin   valiant       
bollobas  fenner   frieze        frieze      a  posa        vandegriend         reviewed
stony brook algorithm repository  skiena         one effective algorithm
hcp based related traveling salesman problem  tsp  undirected weighted
graph  problem finding hc minimum total weight 
c
    
ai access foundation  rights reserved 

fijager   zhang

hcp canonical problem understanding intrinsic properties combinatorial problems  one problem property called phase transition  consider
undirected graph gn m edges randomly chosen possible n n      edges
n vertices  expected keeping size n  i e   number vertices 
constant increasing number edges m  probability random graph gn m
hamiltonian increases      surprisingly  probability hamiltonian
gn m exhibits sharp  dramatic transition      transition occurs approximately   dc n  log n   log log n   c  bollobas        cheeseman  kanefsky  
taylor        komlos   szemeredi         furthermore  experimentally shown
constant c            probability gn m hamiltonian
     vandegriend   culberson         phase transitions hcp studied
different control parameters  example  called general constrainedness
parameter  frank  gent   walsh         phase transition result hcp motivated substantial amount research phase transitions combinatorial problems 
particularly tsp  zhang   korf        boolean satisfiability  monasson  zecchina 
kirkpatrick   selman        
study consider hcp directed graphs  call directed hcp 
dhcp short  addition known applications hcp mentioned above 
interesting application dhcp dhcp heuristics used solve
bottleneck tsp  kabadi   punnen         contrast extensive amount work
hcp undirected graphs  research dhcp rather limited  angluin
  valiant        bang jensen   gutin        kelly         first exact algorithm
dhcp developed martello         algorithm outputs fixed number h
hcs reports cannot find h hcs given directed graph  setting h     
gives rise algorithm dhcp  recent years  algorithms based sat
encoding introduced problem  e g   absolute encoding  hoos       
relative encoding  prestwich        see velev   gao         furthermore 
probabilistic heuristic dhcp complexity o n      proposed  frieze      b  
shown random class gn m probability  given instance
hc found algorithm therefore exists  changes      n grows
infinity   n log n cn  c constant  dhcp  phase transition result
similar hcp obtained well  namely phase transition occurs
  dc n  log n   log log n c  mcdiarmid         constant c expected
close   
note research tsp alluded dhcp algorithm  using
technique   point reduction  asymmetric tsp  atsp  distance city
city j may necessarily equal j converted symmetric
tsp  number vertices doubled  jonker   volgenant         using
transformation  determine whether directed graph hamiltonian solving
symmetric tsp using renowned concorde algorithm  applegate  bixby  chavatal  
cook               concorde solved many large benchmark instances  cook        
including tsp instance         cities  applegate et al          date
largest solved practical tsp instance 
main contribution paper effective exact algorithm dhcp 
algorithm  utilize methods two well known combinatorial problems  i e   assign   

fialgorithm directed hamiltonian cyce problem

ment problem  ap  boolean satisfiability  sat   therefore denote algorithm
ap sat  using random graphs many real world instances  experimentally compare
ap sat algorithm dhcp algorithm martello         tsp based approach takes advantage tsp solver concorde  applegate et al              
above mentioned sat encodings dhcp  hoos        prestwich        
results show ap sat algorithm significantly outperforms algorithms 
second contribution experimental study refinement known phase
transition result existence hc random directed graph  mcdiarmid        
similarly done hcp  vandegriend   culberson        

   algorithm
consider directed unweighted graph g    v  e  nodes v edges e 
purpose solving dhcp  consider problem determining whether
exists collection cycles  may necessarily complete cycles  visiting
vertex exactly once  call problem directed assignment problem dap
short  algorithm explores exploits intrinsic relationship dhcp
dap  precisely  ap sat algorithm searches hc space dap
solutions  first solves dap  dap solution forms hc  dap solution
exists  algorithm terminates  dap solver returns solution hc 
algorithm tries patch subcycles solution hc using well known
karp steele patching method  karp   steele         hc found either  dap
patching steps iterated  difference another dap solution might
found  cases considered study  algorithm find hc
determine solution exists two steps  algorithm fails solve
problem iterative steps  attempts enumerate dap solutions
formulating dap boolean satisfiability problem repeatedly solving problem
using sat solver adding constraints eliminate dap solutions
encountered  discuss details steps rest section 
    solving assignment problem
given n vertices matrix c    cij   i jn rn n costs pairs
vertices  nassignment problemo ap  find vertex permutation
pn
  arg min
i   ci  i    n   n set permutations             n  
note ap solution viewed collection cycles visiting vertex exactly
once 
many algorithms developed ap  bertsekas        goldberg   kennedy 
      jonker   volgenant          for experimental comparison ap algorithms see
dellamico   toth         efficient one hungarian algorithm  based
konig egervarys theorem complexity o n     ap sat algorithm
use implementation hungarian algorithm jonker volgenant              
   

fijager   zhang

unweighted directed graph g    v  e   dap solved applying ap
algorithm ap instance defined matrix c    cij   i jn

cij


  
  
 

  

 i  j  e     j
 i  j 
  e   
  j
  j

map costs arcs g   costs remaining arcs   
ap algorithm returns solution cost    dap solution g  since every arc
taken ap solution arc g  hand  returns solution cost
greater    dap solution g least one arc solution
belong g 
first step ap sat algorithm dap algorithm  hc g  one
exists  solution dap  distinguish three cases end first
step 
cost ap solution greater    g hc  dhcp
instance solved solution 
ap solution cost   solution consists one cycle  found
hc dhcp instance solved 
ap solution cost   ap solution one cycle  cannot
determine  based ap solution  whether g hamiltonian 
continue next steps ap sat algorithm 
    karp steele patching
dap solution provide definitive answer problem  i e   case
ap solution cost   ap solution contains one cycle  continue
search hc g  first patch subcycles attempt form hc  use
karp steele patching  ksp  purpose  effective atsp heuristic  glover 
gutin  yeo   zverovich        goldengorin  jager   molitor        karp   steele        
operation patching two cycles c  c  ap solution defined follows 
two fixed arcs  v    w    c   v    w    c  first deleted two arcs  v    w   
 v    w    joining two cycles added  cost patching c  c  using  v    w   
 v    w    equal
 c    c      c v    w      c v    w     c v    w      c v    w    
i e    c    c    difference total cost inserted arcs total cost
deleted arcs  step choose patch two cycles largest
number vertices  two cycles  two arcs chosen way
patching cost minimum among possible arc pairs  k   cycles 
repeat patching step k   times form one cycle end  apply ksp
ap instance defined section      patching procedure provides hc  ap sat
algorithm terminated  otherwise  continue next step 
   

fialgorithm directed hamiltonian cyce problem

    solving variant aps
dap may multiple solutions  dap solutions may hcs 
increase chance finding hc apply ap step multiple times  since
computational cost ap ksp algorithms low  key avoid finding
dap solution again  accomplish this  slightly alter arc costs
corresponding ap instance find dap solutions  enhanced ksp
needed  increase possibility finding hc  words  add perturbation
component create multiple variant ap instances boost overall chance finding
hc  note worst case dhcp instance contains hc  procedure
productive 
main idea create variant ap instance reduce chance subcycles
current ap solution chosen subsequent rounds solving aps 
done perturbing costs arcs g follows  arc
current dap solution increase cost one  create ap instance different
section      generalize ap instance follows  let ci j cost arc
 i  j  e  let


   n max  ci j    i  j  e     

i e   greater n times largest cost arc g  set costs
edges e   ap instance section     special case ap instance 
costs ci j arcs  i  j  e    critical notice dap solutions 
including hc  must costs less   before  solution contains hc 
algorithm terminates  otherwise  subcycles patched using ksp possibly
find hc  repeat step multiple times arc  appeared many
previous dap solutions  unlikely appear next dap solution 
arc  never occurred previous dap solution  likely appear
next dap solution 
let r maximal number ap ksp calls  i e   number variant ap instances
solved  observed experiments r   n  see step   pseudo code
appendix  good choice  discussed detail section     
    implicitly enumerating dap solutions using sat
ap patching based steps discussed may still miss solution dhcp
instance  consider implicitly enumerate dap solutions finding
solution dhcp  exists  idea systematically rule dap
solutions discovered far search  end  first formulate
dap boolean satisfiability  sat  problem  dechter        forbid dap solution
adding new constraints sat model  elementary technique adding new
constraints purpose enumerating sat solutions applied
general sat problem  e g   see jin  han   somenzi         notice cannot
easily done ap framework constraints cannot properly added
ap  moreover  take advantage research effort devoted
sat  particular  use effective sat solver called minisat  een   sorensson 
            
   

fijager   zhang

conjunctive normal form  cnf   sat instance set boolean variables
conjunction clauses  disjunction literals boolean
variables negations  clause satisfied one literals true 
instance satisfied clauses satisfied  sat problem find truth
assignment variables satisfy clauses satisfiable  determine
assignment exists  sat first problem shown n p complete  cook       
garey   johnson        karp        
formulate dap sat  solution dap must obey following
restrictions 
vertex i               n  exactly one arc  i  j      j  exists dap solution 
vertex i               n  exactly one arc  j  i   j    i  exists dap solution 
first introduce integer decision variable xi j arc  i  j  e xi j     holds
arc  i  j  appears dap solution  represent constraints
following integer linear program  ilp  
  pn
xi j                  n
pj    i j e
   
n
i    i j e xi j     j              n
xi j         i  j  e  thus total  n constraints  note
use variables  one variable arc graph  substantially
smaller n  variables sparse graphs  represent integer linear program    
sat model similar work lynce marques silva         replace
integer variables xi j boolean variables yi j   enforce  n restrictions sat
formulation  need introduce constraints clauses  one restriction     means
exactly one n involved boolean variables vertex set true
rest must false  represent this  introduce  n  auxiliary variables
z    z            z n    n zs one restriction  without loss generality  consider
first restriction  z    z            zn associated  use zk represent least one
y      y              y  k true  precisely  z variables defined follows 
z    y    equivalently  y    z     y    z    
zk   y  k zk  equivalently  zk y  k    zk zk     zk y  k zk   
k                 n 
addition  need enforce one y  i                 n true 
means y  k true  none y  i   k true  formulated

zk  y  k k                 n 
finally  zn must true  restrictions     represented similarly 
sat based representation allows us exclude non hamiltonian dap solution
previously found search  done introducing new clauses explicitly
   

fialgorithm directed hamiltonian cyce problem

forbidding subcycles solution  let subcycle  v    v            vk   v    
add clause
yv   v        yvk   vk yvk  v 
current sat instance  result  updated sat instance satisfiable 
meaning corresponding dhcp instance contain hc  gives rise
new dap solution  allow previous dap solution 
summary  ap  patching related steps failed find solution  apsat algorithm transforms problem instance sat instance  collects
previous dap solutions  includes least two subcycles  excludes
subcycles dap solutions adding new clauses described above 
resulting sat model solved  sat model satisfiable  dhcp
algorithm terminates result problem instance hamiltonian 
sat model satisfiable solution one cycle  algorithm stops hc 
sat model satisfiable  solution one subcycle  new clauses
introduced sat model rule solution  algorithm repeats
solve revised formula  since finite number dap solutions  algorithm
terminates  worst case dap solutions contain hc  sat part
algorithm enumerate dap solutions  overview  outline main
steps ap sat algorithm pseudo code appendix 
    general remarks
present experimental results  comment method proposed
help appreciate features 
   ap sat algorithm consists three main components  namely ap step 
ksp step sat step  might interesting know components important one  this  distinguish completeness
efficacy algorithm  necessary step completeness sat
step section      step without previous steps leads correct dhcp
algorithm  hand  ap sat algorithm effective ap
ksp steps called often sat step called called
times  example  instance dap solution exists existing hc
found previous steps  sat part invoked all  indeed 
experiments showed sat step invoked test instances 
regarding relative time needed ap ksp steps  consider density problem instances  instance small number arcs 
cases hc solution  dap solution 
case algorithm terminates first ap step need make
ksp call  hand  instance large number arcs require
many ap steps  many dap solutions may exist hcs  thus hc
solution may found ksp  expected behavior could validated
experiments  time ksp steps smaller instances small number
arcs  larger instances large number arcs  see figure    
   

fijager   zhang

   ap sat algorithm able solve hcp special case dhcp 
less effective case  reason symmetric case  arc
reverse arc often present dap solution  resulting many small cycles two
vertices solution  thus general enumerate large number dap
solutions  worst case hc exists  dap solutions
enumerated  giving rise long running time 
   easily revise ap sat algorithm identify hcs directed graph 
finding solutions desirable many applications  e g   problem finding knights tour chessboard  henderson   apodaca        kyek  parberry  
wegener         algorithms problem  see already mentioned algorithm
martello        algorithm frieze suen         revision works
follows  hc exists  algorithm remains same  consider case
least one hc exists  first hc found  original ap sat algorithm
terminates case  revised algorithm stage saves first hc 
continues search next hc  pseudo code appendix 
need replace stop save rows            note
revised algorithm  sat part always invoked least one hc exists 
furthermore original ap sat algorithm revised algorithm works
symmetric case  less effective 
   ap sat algorithm used restart scheme  i e   repeatedly solved series ap
instances  derived modifying costs arcs appeared previous
ap solution  although restart scheme random restart scheme 
developed constraint problems artificial intelligence  gomes  selman   kautz 
       follow design principle trying avoid encounter
solutions subsequent runs  two schemes fundamentally different 
name indicated  random restart scheme depends random choices made
variable value selections process search variable assignment
constraint problem  contrast  restart scheme random  arcs
current ap solution receive higher costs subcycles current ap
solution less likely chosen again  words  restart scheme used
somewhat deterministic depends solution structures problem 
   method used exclude subcycles solution current dap instance subsequent sat solving process follows principle popular idea
adding no good constraints constraint satisfaction problem  frost   dechter 
      richards   richards        zhang  madigan  moskewicz   malik         specifically  subcycles forbidden introducing additional constraints 

   experimental results
implemented ap sat algorithm  dhcp algorithm martello        
dhcp algorithms based absolute sat encoding  hoos        relative
sat encoding  prestwich        c   compared algorithm based
award winning concorde tsp program  applegate et al                al   

fialgorithm directed hamiltonian cyce problem

gorithm martello implemented version terminates whenever hc 
one exists  found  sat based algorithms used ap solver jonker
volgenant              minisat sat solver een sorensson              
apply concorde  dhcp instance first transformed asymmetric tsp instance transformation section     symmetric tsp instance
  point reduction method  jonker   volgenant         implementation    point
reduction works follows graph g    v  e  v    v    v            vn   
   make copy vertices v    v            vn   create vertex set v       v     v    
        vn    
   define new complete graph g  vertex set v v    symmetric  cost
function c    v v            

      j n
       j n   vi   vj   e
c   vi   vj      

       j n   vi   vj  
 e
c   vi   vj             j n
c   vi    vj              j n
directed hc exists g tsp tour cost n exists g    note
contrast general version   point reduction value required
here  tried   point reduction method  principle similar   point
reduction  uses two  instead one  copies vertex set uses cost values
        details   point reduction  see work karp        
experimental results  included here  showed   point reduction runs
slower average   point reduction  therefore  rest comparison 
consider   point reduction 
  point reduction  concorde started worst possible solution value
initial upper bound terminated soon lower bound indicates hc
impossible 
addition comparison  experimentally analyzed ap sat algorithm
including asymptotic behavior  applied study phase transitions dhcp 
experiments carried pc athlon     mp cpu   gb
memory 
    comparison dhcp algorithms
experiments first tested random asymmetric instances gn m parameters
n                              dcn log n log log n c c                                
n c generated    random instances measured cpu time
instances  furthermore  tested real world random instances dimacs
challenge  johnson et al               non random instances  reinelt              
whereas tsplib contains    single asymmetric tsp instances sizes        
dimacs challenge contains    asymmetric problem generators called amat  coin  crane 
disk  rect  rtilt  shop  stilt  super  tmat  using generators generated   
   

fijager   zhang

instances         vertices         vertices         vertices        
vertices  leading     instances  for    problem generators    instances  overall 
transform asymmetric tsp instances back dhcp instances  seems reasonable
keep arcs small weights ignoring ones large weights 
words  generate dhcp instance chose smallest arcs corresponding
asymmetric tsp instance  interesting note difficult problem instances
problems tsplib dimacs appear degree parameter c around
   value used experiments  contrast  difficult instances
random graphs occur degree parameter c      see section      
investigate variation running time  present one subfigure problem
class  i e     random classes sizes                             
dimacs classes amat  coin  crane  disk  rect  rtilt  shop  stilt  super  tmat  y axis
gives average times plus     confidence intervals  values seconds 
random classes x axis describes degree parameter c  dimacs
classes describes size n  results random instances summarized
figure   dimacs instances figures       tsplib class consists
   single instances completely different sizes  structures difficulties  present
results table    experiment single algorithm single instance required
least   hour terminate due high memory requirement  set cpu
times      seconds 

figures     table   show two sat encodings competitive
ap sat  concorde martello algorithm  furthermore  ap sat concorde
stable martello algorithm  concorde failed solve    dimacs instances
   coin    crane    rect    stilt    super types  within maximal allowed time   hour 
whereas ap sat algorithm failed   instances  among   instances
ap sat failed    stilt types  remaining instance  super      could
solved increased maximal allowed time   hour   hours  see table    
martello algorithm unable solve instances     larger size
high memory requirement  instances  failed   random instance size
    degree parameter         dimacs instances     coin     crane     disk     rect 
  stilt types     tsplib instances  see table     nevertheless  martello algorithm
outperformed concorde smaller easier instances  indicating former
worse asymptotic running time  overall  observed ap sat algorithm
clearly superior four algorithms  among      instances       random
instances      dimacs instances    tsplib instances  tested     instances 
one four algorithms faster ap sat  problem instances include  
random instances  namely   size     degree parameter        size     degree
parameters                respectively    dimacs instances  namely coin        rect      
stilt       stilt       stilt       stilt       stilt       stilt       tsplib instance
br    see table    
   

fialgorithm directed hamiltonian cyce problem

figure    comparison algorithms random instances 
size    
apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

apsat
concorde
martello

      

average running time

average running time

size    

     
   
  
 
   
    

    
     

     
      

      

                                                           

                                                           

degree parameter c

degree parameter c

size    

size    
apsat
concorde
martello

   
  
 
   
    

apsat
concorde

      

average running time

     

     
   
  
 
   
    

     

     

      

      

                                                           

                                                           

degree parameter c

degree parameter c
size     
apsat
concorde

      

average running time

average running time

      

     
   
  
 
   
    
     
      

                                                           

degree parameter c

   

fijager   zhang

figure    comparison algorithms dimacs instances  part   
coin instances
apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

average running time

average running time

amat instances

apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

    

    

     

     

      

   

   

    

      

    

   

   

size

      
     
   
  
 
   

apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

    

    

     

     
   

   

    

      

    

   

   

size

     
   
  
 
   

average running time

average running time

      

apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

    

    

     

     
   

    

rtilt instances
apsat
concorde
martello
abs  encoding
rel  encoding

   

    

size

rect instances

      

    

disk instances
apsat
concorde
martello
abs  encoding
rel  encoding

average running time

average running time

crane instances

      

    

size

    

      

    

size

   

   

    

size

   

    

fialgorithm directed hamiltonian cyce problem

figure    comparison algorithms dimacs instances  part   
stilt instances
apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

average running time

average running time

shop instances

apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

    

    

     

     

      

   

   

    

      

    

   

   

size

      
     
   
  
 
   

apsat
concorde
martello
abs  encoding
rel  encoding
      
     
   
  
 
   

    

    

     

     
   

   

    

tmat instances
apsat
concorde
martello
abs  encoding
rel  encoding

average running time

average running time

super instances

      

    

size

    

      

    

size

   

   

    

size

   

    

fijager   zhang

table    comparison algorithms tsplib instances 
instance  size 

ap sat

concorde

br       
ftv       
ftv       
ftv       
p       
ftv       
ftv       
ry  p     
ft       
ftv       
ftv       
ft       
ftv       
kro   p      
ftv         
ftv         
ftv         
ftv         
ftv         
ftv         
ftv         
ftv         
rbg         
rbg         
rbg         
rbg         

    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
   
    
    
    
    
    
    
     
    
    

running time algorithm
martello absolute encoding
     
 
 
 
 
 
 
    
 
    
 
 
 
    
    
    
    
    
    
    
    
    
    
    
    
    

   

    
    
    
    
     
    
    
     
     
     
      
     
       
       
       
    
    
    
      
       
    
    
    
    
    
    

relative encoding
    
 
 
    
    
    
    
     
    
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
     

fialgorithm directed hamiltonian cyce problem

    analysis ap sat
efficacy ap sat algorithm may due following reasons  instances
hc likely dap solution either  therefore algorithm
terminates first ap call  hand  instances hc likely
multiple hcs  one found quickly ap ksp steps 
difficult case many dap solutions  none
hcs  case ap ksp steps may fail  sat part invoked find
hc disprove existence hc 
following analyze instances ap sat fails requires much
time  analyze number r computing variant ap instances  which set
size instance n  see end section       therefore investigated three
procedures ap sat  namely ap  ksp sat  observed sat part
invoked         instances tested  considered    two
instances  stilt     super       ap sat terminate   hour 
hard  analyze    hard instances increased maximal allowed time
  hour   hours  table   present running times ap  ksp sat 
number calls three procedures  numbers ap ksp calls
given column  two numbers equal different one  see
pseudo code appendix   furthermore  add two additional pieces information 
whether instance hc whether unknown  whether ap sat terminated
instance   hours  table    memory means part terminated due
high memory requirement  note solution status instance stilt       no
hc  known  since concorde contrast ap sat able solve it 
table   shows running time ap ksp contributed majority
total running time ap sat      hard instances  i e   coin      
rect       two instances stilt     super     sat invoked
all    instances  ap sat terminate      instances  i e   stilt      stilt       stilt       stilt        stilt        sat part terminate
reasonable amount time algorithm stopped due high memory requirement
sat 
order determine r  re ran instances table   three different values
r  i e   r      r   n    r    n  results  not presented  showed ap sat
unable terminate r   n  i e     instances stilt       stilt       stilt      
stilt        stilt        stilt       failed stop values r 
remaining    instances  increasing r   n r    n reduce running times 
reasonable two instances coin       rect      large ap ksp time 
hc  hand  two instances ones
ap sat ran faster using smaller values r  namely coin       using r   n  
rect      using r     
thus conclude r increased  rather decreased  hard
estimate memory requirements time sat part  one alternative
difficult instances would start ap sat smaller parameter r stop
sat part time one unsuccessful call  complete apsat algorithm restarted larger r  instances  however  choice
   

fijager   zhang

table    comparison performance ap  ksp  sat procedures ap sat
algorithm    hard instances 
instance
br  
coin      
rect     
rect     
stilt     
stilt     
stilt     
stilt     
stilt     
stilt     
stilt     
stilt     
stilt      
stilt      
stilt    
super    

running time
ap
ksp
sat
 
 
   
      
     
    
    
    
    
    
    
    
    
 
    
   
    
     
    
    
    
    
    
    
    
    
    
     
             
     
    
memory
     
    
memory
                       
                       
        
      
 
        
      
 

number calls
ak ksp sat
  
   
    
 
   
 
   
 
   
 
   
  
   
 
   
 
   
 
   
 
   
 
   
 
    
 
    
 
   
 
    
 

hc

termin 






yes




unknown
unknown
unknown
unknown
unknown
yes

yes
yes
yes
yes
yes
yes
yes
yes
yes






yes

figure    comparison performance ap ksp procedures ap sat random
instances size      
ap
ksp

 

average running time

   
 
   
 
   
 
   
 
   
 
   
 
                                                           

degree parameter c

r relevant  difficult problem instances required perform comprehensive
analysis r 
finally  figure   compare times used ap ksp random instances
size      degree parameter c                                
observe ap time consuming ksp  smaller c effect
obvious instances solved result hc first
ap call  thus ksp need invoked all 
   

fialgorithm directed hamiltonian cyce problem

    phase transitions dhcp
random undirected graphs gn m   arcs randomly chosen possible
n n      arcs n vertices graph  komlos szemeredi        proved phase
transition c dn  log n   log log n   c c     hcp  vandegriend culberson        experimentally verified theoretical result  constant c     
      dhcp  arcs randomly chosen possible n n    arcs 
mcdiarmid proved phase transition   cdn log n log log n c c            
experiments aimed verify result determine multiplicative constant c 
directed graph may contain twice many arcs undirected counterpart  would
expect number arcs doubled well phase transition point  therefore
tested   dc n  log n   log log n c c                                                      
                                                expected phase transition occur
c      considered problem instances n                                        
vertices chose      independently generated random graphs n c 
phase transition result shown table   figure    first parameter
c second parameter percentage hamiltonian graphs among graphs
considered  observe phase transition dhcp similar hcp 
particular  evident figure   phase transition becomes sharper  i e  
crossover among phase transition curves  problem size increases 
characteristic phase transitions complex systems  crossover occurs around
degree parameter c        substantially different expected value
   short  observations verified existence phase transition dhcp 
phase transition occurs dc n  log n   log log n c approximately c       
furthermore  constant c        probability gn m hamiltonian
     comparison  undirected graphs  constant          
found  vandegriend   culberson        

    asymptotic behavior ap sat
interesting characteristic algorithm asymptotic behavior  quantify
behavior ap sat algorithm  revisited experiments section      i e  
experiments verified phase transitions dhcp  described earlier  considered random problem instances n                                         vertices
chose      independently generated random graphs n c 
measure worst case asymptotic behavior ap sat  measured cpu times
algorithm difficult instances  i e   instances degree parameter
c        see section       results found figure    x axis
problem size y axis average time required  since both  x  y axis
logarithmic scale log log curve figure   nearly linear  average running
time ap sat considered polynomial number n vertices
graph  reasonable  random instances sat part called  see
section       ap ksp combined complexity worse o n    
   

fijager   zhang

table    phase transition random instances 
c
   
   
   
   
    
    
    
    
    
    
    
    
    
   
    
    
    
    
    
    
    
    
    
 
    
    
    
    
    
    
    
    
    
   
    
    
    
    
    
    
    
    
    
   
   
   
   
   
   
   
   
 

   
 
 
   
    
    
    
    
    
    
    
    
  
    
  
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   

   
 
 
 
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
  
    
    
  
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   

   
 
 
   
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
  
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
  
    
    
   
    
    
   

size
    
 
 
   
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
   
    
    
   
   

    
 
 
   
    
    
  
  
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
  
    
    
    
    
    
    
    
  
    
  
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   

    
 
 
   
    
    
  
    
  
    
    
    
    
    
    
    
    
    
    
    
    
  
    
  
    
    
    
    
    
    
    
  
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
   
    
   
   
   

    
 
 
   
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
    
    
    
  
    
    
    
    
    
    
    
    
    
    
   
   
    
   
   
   

fialgorithm directed hamiltonian cyce problem

figure    phase transition random instances 
   
size    
size    
size    
size     
size     
size     
size     

existence hcs  

  

  

  

  

 
   

   

   

 

   

   

degree parameter c

   

   

   

 

fijager   zhang

figure    asymptotic behavior ap sat algorithm 
      
apsat

average running time

     
   
  
 
   
    
     
      

   

   

   

    

    

    

    

size

   summary
hamiltonian cycle problem  hcp  important  canonical combinatorial problem 
surprisingly  hcp directed graphs  called directed hcp dhcp 
effective exact algorithm developed  main result work novel
effective exact algorithm dhcp  algorithm utilizes existing algorithm
assignment problem existing method boolean satisfiability  sat   work
includes new sat formulation hcp ap  potentially extended
problems tsp  experimental results random real problem
instances showed new algorithm superior four known algorithms including
one algorithm takes advantage award winning concorde tsp algorithm  furthermore  first phase transition result combinatorial problems done hcp
later extended dhcp  paper experimentally verified existence
phase transition dhcp refined location phase transition
appears using new exact dhcp algorithm 

acknowledgments
thank david s  johnson at t labs   research gregory gutin royal holloway
university london many discussions related work insightful comments
manuscript  research supported part nsf grants iis        
dbi         weixiong zhang 

   

fialgorithm directed hamiltonian cyce problem

appendix a  pseudo code ap sat algorithm
input directed non complete graph g    v  e   v     n 
  define matrix c section           
  define subcycle collection set w     
               n
 
solve ap instance matrix c solution value g  ap solution
 v    vi      v    vi             vn    vin      vn   vin    number cycles k 
 
g
 
stop hc 
 
else k    
 
stop hc ap solution 
 
apply ksp cycles  receive solution value h complete
cycle  w    w            wn   w    
  
h    
  
stop hc  w    w            wn   w    
  
             n
  
cvt  vit   cvt  vit    
  
  n max  ci j    i  j  e      
  
ci j    i  j 
  e 
  
add subcycle ap solution w  
   start sat model explained section     
   subcycle  v    v            vk    vk   v    w add clause
yv   v        yvk   vk yvk  v  sat model 
   solve sat model 
   variable setting exists model 
  
add k subcycles solution sat model w  
  
k    
  
stop hc
subcycle 
  
goto    
  
else stop hc 
output hc g  proof hc exists g 

references
angluin  d    valiant  l g          fast probabilistic algorithms hamiltonian circuits
matchings  j  comput  system  sci                 
   

fijager   zhang

applegate  d l   bixby  r e   chvatal  v    cook  w j          concorde code 
http   www tsp gatech edu concorde html
applegate  d l   bixby  r e   chvatal  v    cook  w j          traveling salesman
problem  computational study  princeton university press 
applegate  d l   bixby  r e   chvatal  v   cook  w j   espinoza  d   goycoolea  m 
  helsgaun  k          certification optimal tour        cities 
oper  res  lett               
bang jensen  j    gutin  g          chapter   in  digraphs  theory  algorithms applications  springer  london  free available 
http   www cs rhul ac uk books dbook 
bertsekas  d p          new algorithm assignment problem  math  program     
        
bollobas  b          random graphs  academic press  london 
bollobas  b   fenner  t i    frieze  a m          algorithm finding hamiltonian
paths cycles random graphs  combinatorica               
bondy  j a          basic graph theory  paths circuits  graham  r l   grotschel 
m   lovasz  l   eds    handbook combinatorics          north holland  amsterdam 
cheeseman  p   kanefsky  b    taylor  w m          really hard problems
are  mylopoulos  j   reiter  r   eds    proc    th international conference
joint artificial intelligence  ijcai            morgan kaufmann 
christofides  n          graph theory algorithmic approach  academic press  new
york 
chvatal  v          hamiltonian cycles  chapter    lawler  e l   lenstra  j k   rinnooy
kan  a h g   shmoys  d b   eds    traveling salesman problem  guided tour
combinatorial optimization  john wiley   sons  chichester 
cook  s a          complexity theorem proving procedures  proc   rd ann  acm
symp  theory computing  stoc           
cook  w j          tsp homepage 
http   www tsp gatech edu 
dechter  r          constraint processing  morgan kaufmann 
dellamico  m    toth  p          algorithms codes dense assignment problems 
state art  discrete appl  math                  
een  n    sorensson  n          extensible sat solver  giunchiglia  e   tacchella  a 
 eds    proc   th international conference theory applications satisfiability
testing  sat   lecture notes comput  sci                
een  n    sorensson  n          minisat code 
http   minisat se
   

fialgorithm directed hamiltonian cyce problem

frank  j   gent  i    walsh  t          asymptotic finite size parameters phase
transitions  hamiltonian circuit case study  inform  process  lett                
frieze  a m       a   finding hamiltonian cycles sparse random graphs  j  combin  theory ser  b             
frieze  a m       b   algorithm finding hamilton cycles random directed
graphs  j  algorithms            
frieze  a m    suen  s          counting hamilton cycles random directed graphs 
random structures algorithms            
frost  d    dechter  r          dead end driven learning  proc    th national conference
artificial intelligence  aaai            aaai press 
johnson  d s           th dimacs implementation challenge  traveling salesman problem 
http   www research att com  dsj chtsp 
garey  m r    johnson  d s          computers intractability  guide theory
n p completeness  freeman  new york 
glover  f   gutin  g   yeo  a    zverovich  a          construction heuristics
asymmetric tsp  european j  oper  res               
goldberg  a v    kennedy  r          efficient cost scaling algorithm assignment problem  math  program              
goldengorin  b   jager  g    molitor  p          tolerance based contract or patch heuristic asymmetric tsp  erlebach  t   ed    proc   rd workshop combinatorial algorithmic aspects networking  caan   lecture notes comput  sci              
gomes  c p   selman  b    kautz  h          boosting combinatorial search
randomization  proc    th national conference artificial intelligence  aaai  
         aaai press 
gould  r j          updating hamiltonian problem survey  j  graph theory       
        
grebinski  v    kucherov  g          reconstructing hamiltonian circuit querying
graph  application dna physical mapping  ir    r      centre de recherche
en informatique de nancy 
gutin  g    moscato  p          hamiltonian page 
http   alife ccp   ac uk memetic  moscato hamilton html
henderson  r    apodaca  e          knight egodeth  zen raptured quietude  booksurge publishing 
hoos  h h          sat encodings  search space structure  local search performance 
proc    th international joint conference artificial intelligence  ijcai           
morgan kaufmann 
   

fijager   zhang

jin  h   han  h    somenzi  f          efficient conflict analysis finding satisfying
assignments boolean circuit  halbwachs  n   zuck  l d   eds    proc    th
international conference tools algorithms construction analysis
systems  tacas   lecture notes comput  sci                
johnson  d s   gutin  g  mcgeoch  l a   yeo  a   zhang  w    zverovich  a         
experimental analysis heuristics atsp  chapter    in  gutin  g   punnen 
a p   eds    traveling salesman problem variations  kluwer 
jonker  r    volgenant  a          transforming asymmetric symmetric traveling
salesman problems  oper  res  lett                
jonker  r    volgenant  a          shortest augmenting path algorithm dense
sparse linear assignment problems  computing             
jonker  r    volgenant  a          ap code 
http   www magiclogic com assignment html
kabadi  s n    punnen  a p          bottleneck tsp  chapter    in  gutin  g   punnen  a p   eds    traveling salesman problem variations  kluwer 
karp  r m          reducibility among combinatorial problems  miller  r e   thatcher 
j w   eds    complexity computer computations          new york  plenum 
karp  r m    steele  j m          probabilistic analysis heuristics  chapter   in  lawler 
e l   lenstra  j k   rinnooy kan  a h g   shmoys  d b   eds    traveling salesman problem  guided tour combinatorial optimization  john wiley   sons 
chicester 
kelly  l          hamilton cycles directed graphs  phd thesis  university birmingham  united kingdom 
komlos  m    szemeredi  e          limit distribution existence hamiltonian
cycle random graph  discrete math            
kyek  o   parberry  i    wegener  i          bounds number knights tours 
discrete appl  math                 
lynce  i    marques silva  j          efficient haplotype inference boolean satisfiability  proc    st national conference artificial intelligence  aaai   aaai press 
martello  s          enumerative algorithm finding hamiltonian circuits directed graph  acm trans  math  software               
mcdiarmid  c j h          cluster percolation random graphs  math  program  stud            
monasson  r   zecchina  r   kirkpatrick  s   selman  b    troyansky  l          determining computational complexity characteristic phase transitions  nature     
    
prestwich  s          sat problems chains dependent variables  discrete
appl  math                  
posa  l          hamiltonian circuits random graphs  discrete math              
   

fialgorithm directed hamiltonian cyce problem

reinelt  g          tsplib traveling salesman problem library  orsa j  comput    
        
reinelt  g          tsplib library 
http   www iwr uni heidelberg de groups comopt software tsplib   
richards  e t    richards  b          non systematic search no good learning 
j  automat  reason                 
skiena  s          stony brook algorithm repository 
http   www cs sunysb edu  algorith files hamiltonian cycle shtml
stojakovic  m    szabo  t          positional games random graphs  random structures algorithms                  
vandegriend  b          finding hamiltonian cycles  algorithms  graphs performance 
master thesis  university alberta  canada 
vandegriend  b    culberson  j          gn m phase transition hard
hamiltonian cycle problem  j  artificial intelligence res             
velev  m n    gao  p          efficient sat techniques absolute encoding permutation problems  application hamiltonian cycles  proc   th symposium abstraction  reformulation approximation  sara           
zhang  w    korf  r e          study complexity transitions asymmetric
traveling salesman problem  artificial intelligence            
zhang  l   madigan  c f   moskewicz  m h    malik  s          efficient conflict driven
learning boolean satisfiability solver  proc  ieee acm international conference computer aided design  iccad           

   


