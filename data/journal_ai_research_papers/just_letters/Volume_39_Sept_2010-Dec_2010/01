journal artificial intelligence research                 

submitted       published     

implicit abstraction heuristics
michael katz
carmel domshlak

dugi tx technion ac il
dcarmel ie technion ac il

faculty industrial engineering   management 
technion  israel

abstract
state space search explicit abstraction heuristics state art costoptimal planning  heuristics inherently limited  nonetheless  size
abstract space must bounded some  even large  constant  targeting
shortcoming  introduce notion  additive  implicit abstractions 
planning task abstracted instances tractable fragments optimal planning 
introduce concrete setting framework  called fork decomposition 
based two novel fragments tractable cost optimal planning  induced admissible
heuristics studied formally empirically  study testifies accuracy
fork decomposition heuristics  yet empirical evaluation stresses tradeoff
accuracy runtime complexity computing them  indeed 
power explicit abstraction heuristics comes precomputing heuristic
function offline determining h s  evaluated state fast lookup
database  contrast  fork decomposition heuristics calculated
polynomial time  computing far fast  address problem 
show time per node complexity bottleneck fork decomposition heuristics
successfully overcome  demonstrate equivalent explicit abstraction
notion database exists fork decomposition abstractions well  despite
exponential size abstract spaces  verify empirically heuristic search
databased fork decomposition heuristics favorably competes state art
cost optimal planning 

   introduction
heuristic search  either progression space world states regression space subgoals  common successful approach classical planning 
probably popular approach cost optimal planning  is  finding plan
minimal total cost actions  difference various heuristic search
algorithms optimal planning mainly admissible heuristic functions employ 
state space search  heuristic estimates cost achieving goal given
state guarantees overestimate cost 
useful heuristic function must accurate well efficiently computable  improving
accuracy heuristic function without substantially worsening time complexity
computing usually translates faster search optimal solutions  last
decade  numerous computational ideas evolved new admissible heuristics classical
planning  include delete relaxing max heuristic hmax  bonet   geffner         critical path heuristics hm  haslum   geffner         landmark heuristics hl   hla  karpas  
domshlak        hlm cut  helmert   domshlak         abstraction heuristics
c
    
ai access foundation  rights reserved 

fikatz   domshlak

pattern database heuristics  edelkamp        merge and shrink heuristics  helmert 
haslum    hoffmann         focus work abstraction heuristics 
generally speaking  abstraction planning task given mapping  
states planning tasks transition system states abstract
transition system that  states s  s  s  cost  s   s    upperbounded cost s    abstraction heuristic value h  s  cost
 s  closest goal state abstract transition system  perhaps well known
abstraction heuristics pattern database  pdb  heuristics  based projecting
planning task onto subset state variables explicitly searching optimal
plans abstract space  years  pdb heuristics shown
effective several hard search problems  including cost optimal planning  culberson  
schaeffer        edelkamp        felner  korf    hanan        haslum  botea  helmert 
bonet    koenig         conceptual limitation heuristics  however 
size abstract space dimensionality must fixed   recent merge andshrink abstractions generalize pdb heuristics overcome latter limitation  helmert
et al          instead perfectly reflecting state variables  merge and shrink
abstractions allow imperfectly reflecting variables  demonstrated formal
empirical analysis helmert et al   flexibility often makes merge and shrink
abstractions much effective pdbs  however  merge and shrink abstract
spaces still searched explicitly  thus still fixed size  quality
heuristics estimates still obtained many problems  limitation critical
obstacle many others 
goal paper push envelope abstraction heuristics beyond explicit
abstractions  introduce principled way obtain abstraction heuristics limit neither dimensionality size abstract spaces  basic idea behind
call implicit abstractions simple intuitive  instead relying abstract problems
easy solve small  rely abstract problems belonging
provably tractable fragments optimal planning  key point that  least theoretically  moving implicit abstractions removes requirement abstractions size
small  contribution  however  showing implicit abstractions far
theoretical interest only  specifically 
   specify acyclic causal graph decompositions  general framework additive implicit abstractions based decomposing problem hand along causal
graph  introduce concrete family abstractions  called fork decompositions  based two novel fragments tractable cost optimal planning 
following type analysis suggested helmert mattmuller         formally analyze asymptotic performance ratio fork decomposition heuristics
prove worst case accuracy selected domains comparable
 even parametric  state of the art admissible heuristics  empirically evaluate accuracy fork decomposition heuristics large set domains
recent planning competitions show accuracy competitive
state art 
   necessarily apply symbolic pdbs which  tasks  may exponentially reduce
pdbs representation  edelkamp        

  

fiimplicit abstraction heuristics

   key attraction explicit abstractions state to goal costs abstract
space precomputed stored memory preprocessing phase
heuristic evaluation search done simple lookup  necessary condition would seem small size abstract space  however 
show equivalent pdb merge and shrinks notion database
exists fork decomposition abstractions well  despite exponential size abstract spaces latter  databased implicit abstractions based proper
partitioning heuristic computation parts shared search
states parts must computed online per state  empirical evaluation
shows equipped databased fork decomposition heuristics favorably
competes state art cost optimal planning 
work revision extension formulation results presented katz
domshlak               turn based ideas first sketched katz
domshlak      a  

   preliminaries
consider classical planning tasks corresponding state models single initial state
deterministic actions  specifically  consider state models captured sas 
formalism  backstrom   nebel        nonnegative action costs  planning task
given quintuple   hv  a  i  g  costi  where 
v set state variables  v v associated finite domain
d v   subset variables v   v   denote set assignments v  
d v       vv   d v   complete assignment v called state    d v  
state space   initial state  goal g partial assignment v  
state goal state iff g s 
finite set actions  action pair hpre a   eff a i partial assignments
v called preconditions effects  respectively  av denote actions
affecting value v  cost   r   real valued  nonnegative action cost
function 
variable v value d v   instantiation v denoted v    
partial assignment p  v p  v denotes subset state variables instantiated p 
turn  v   v p   p v     denote value v   p  v      v  singleton 
use p v  p v      sequence actions variable v v   v denote
restriction actions changing value v  is  v maximal subsequence
consisting actions av  
action applicable state iff s v    pre a  v  v v pre a    applying
changes value v v eff a   eff a  v   resulting state denoted sjak 
sjha            ak ik denote state obtained sequential application  respectively
applicable  actions a            ak starting state s  action sequence s plan
g sjha            ak ik  cost optimal  or  follows  optimal  s plan
sum action costs minimal among s plans  purpose  optimal  planning
finding  optimal  i plan  pair states s    s  s  cost s    s    refer
  

fikatz   domshlak

p 

b

c 

f
c


c 





c

c



e
p

c 

c

p

g
p 

 a 

 b 


c

b




f


e

c

e



b

c



e

f

g

g
c

 c 

c

 d 

figure    logistics style example adapted helmert        illustrated  a  
goal deliver p  c g p  f e using cars c    c    c 
truck t  making sure c  ends f   cars may use city roads  thin
edges   truck may use highway  thick edge   figures  b    c  
 d  depict  respectively  causal graph problem  domain transition
graphs  labels omitted  c  c   left    center   c   right  
identical domain transition graphs p  p   

cost cost optimal plan s  s    h  s    mins  g cost s  s    custom notation
cost optimal s plan   finally  important roles follows played
pair standard graphical structures induced planning tasks 
causal graph cg   digraph nodes v   arc  v  v     cg  
iff v    v   exists action  v  v     v eff a   v pre a  
v eff a    case  say  v  v     induced a  succ v  pred v 
respectively denote sets immediate successors predecessors v cg   
domain transition graph dtg v    variable v v arc labeled digraph
nodes d v  arc        labeled pre a  v    v   cost a 
exists graph iff eff a  v        either pre a  v    v   v pre a   
illustrate various constructs  use slight variation logistics style example
helmert         example depicted figure  a  sas 
  

fiimplicit abstraction heuristics

v

   p    p    c    c    c    t 

d p      d p       a  b  c  d  e  f  g  c    c    c    t 
d c      d c       a  b  c  d 

d c       e  f  g 
d t     d  e 

   p    c  p    f    e  c    a  c    b  c    g 

g    p    g  p    e  c    f   

actions corresponding possible loads unloads  well single segment movements vehicles  instance  action captures loading p  c  c 
pre a     p    c  c    c   eff a     p    c     actions example unit cost 
causal graph example  well domain transition graphs state
variables  depicted figures  b  d 
heuristic functions used informed search procedures estimate cost  of
cheapest path  search node nearest goal node  focus statedependent  admissible abstraction heuristics  heuristic function h state dependent
estimate search node depends problem state associated node 
is  h   r       heuristics use days state dependent  though
see  e g   richter  helmert    westphal       karpas   domshlak       different
case   heuristic h admissible h s  h  s  states s  h  h  two
admissible heuristics  h   s  h   s  states s  say h  dominates h   
set admissible heuristics h            hm   pointwise maximum always
admissible heuristic  dominating individual heuristic set  sets admissible heuristics  pointwise sum admissible dominates pointwise
maximum  many recent works cost optimal planning based additive ensembles admissible heuristics  includes critical path heuristics  haslum  bonet   
geffner        coles  fox  long    smith         pattern database heuristics  edelkamp 
      haslum et al          landmark heuristics  karpas   domshlak        helmert  
domshlak         particular  katz domshlak      a        yang et al        
      independently introduced general criterion admissible additive ensembles
heuristics  called former work action cost partitioning  criterion formalized follows  let   hv  a  i  g 
planning task  costi   r    m
i  
pcosti

family cost functions i   costi  a  cost a  actions a   hi  m
i  
set

arbitrary
admissible
heuristic
functions


 
hv 
a 
i 
g 
cost
i 
respectively 


p


i   hi admissible heuristic   set cost functions  costi  i  
seen partition action costs cost 

   abstractions abstraction heuristics
semantics planning task given induced state transition model  often
called transition graph  

  

fikatz   domshlak

definition   transition graph tuple    s  l  tr  s           finite
set states  l finite set transition labels  tr l set  labeled 
transitions  s  initial state    set goal states      l r  
transition cost function 
state subset states   t  cost s      cost  of
cheapest respect   path  state   along transitions t 
state   reachable s  cost s         
path s    plan t  cheapest plans called optimal 
states transition graph t   induced planning task   hv  a  i  g  costi
states   transition labels t   actions a  transition
 s  a  sjak  tr iff applicable s  initial state s    i  set goal states
     s   g   transition cost function     cost 
proceed
formally specifying notion abstraction  definition abstraction resembles
prieditis         right beginning specify general notion
additive abstraction  informally  additive abstraction refer set abstractions
interconstrained requirement jointly overestimate transition path costs
abstracted transition graph 
definition   additive abstraction transition graph    s  l  tr  s          
set pairs  hti   i m
i   where    m 
ti    si   li   tri   s i   si     i   transition graph 
  si function  called abstraction mapping 
 s      s i    s  si      and 
pairs states s  s  holds

x
i  

cost i  s    s     cost s  s    

   

words use particular notion abstraction  term abstraction
usually associated simplifying original system  reducing factoring details
less crucial given context  details reduced better
preserved depends  course  context  instance  context formal
verification  abstract transition graphs required decrease reachability
states  is  path s  original transition graph 
path  s   s    abstract transition graph  clarke 
grumberg    peled         addition  reachability increased little
possible  beyond that  precise relationship path costs original
abstract transition graphs secondary importance  contrast  abstractions
designed induce admissible heuristic functions heuristic search  relationship
path costs captured eq    must obeyed  however  requirements
beyond general requirement eq    overestimate distances
  

fiimplicit abstraction heuristics

states unnecessary  hence  particular  definition   generalizes notion
abstraction helmert et al         replacing condition preserving individual
transitions labels  is    s   l   s      s  l  s     weaker condition stated
eq     reader  course  may well ask whether generality condition
eq    beyond condition helmert et al         really delivers practical gain 
later show answer question affirmative  now  proceed
adding requirements essential making abstraction usable basis heuristic
functions 
definition   let planning task states s  let  hti   i m
i   additive
abstraction transition graph t      o poly        and  states
 p
m  cost cost i  s   si    ti computable time o poly        
 
ha  s   
i   cost i  s   si   abstraction heuristic function  
note admissibility ha implied cost conservation condition eq     illustrate connection abstractions admissible heuristics  consider three
well known mechanisms devising admissible planning heuristics  delete relaxation  bonet
  geffner         critical path relaxation  haslum   geffner          pattern database
heuristics  edelkamp        
first  typically considered way  delete relaxation planning task
        
  hv  a  i  g  costi correspond abstraction ht     s    l    tr    s     s 
 
 
transition
graph
t   
assuming
unique
naming


variable
values



des
noting d    vv d v   abstract states s  power set d   
labels l     a  a    a   transitions come two sources  abstract state
s  s  original action applicable s     s    a  s  jak  tr 
 s    a    s  eff a   tr    minor abuse notation  initial state
     s   g   abstraction
goal states abstraction s     s 
 
 
 
mapping   simply identity function  easy show that  state
      h   s   h   s  delete relaxation
planning task   cost    s   s 
estimate cost goal  aside  note delete relaxation
abstraction ht      particular exemplifies nothing definition   requires
size abstract state space limited size original state space 
event  however  abstraction ht      induce heuristic terms definition  
computing h   s  known np hard  bylander        
situation critical path relaxation exactly opposite  computing
corresponding family admissible estimates hm polynomial time fixed m 
computation based computing shortest paths abstraction
planning task  state graph hm computed and or graph  and
or graph transition graphs   actual computation hm corresponds
computing critical tree  and shortest path  goal  best
knowledge  precise relation critical path abstraction heuristics currently
open question  helmert   domshlak        
overall  abstraction heuristics toolbox planning days appear
explicit homomorphism abstractions  whose best known representative probably
   assume reader familiar two relaxations  not  discussion safely
skipped 

  

fikatz   domshlak

pattern database  pdb  heuristics  given planning task state variables v  
pdb heuristic based projecting onto subset variables v v  
homomorphism abstraction maps two states s    s  abstract state iff
s   v     s   v    inspired  similarly named  domain specific heuristics search
problems  n     puzzles rubiks cube  culberson   schaeffer        hernadvolgyi   holte        felner et al          pdb heuristics successfully exploited domain independent planning well  edelkamp              haslum et al  
       key decision constructing pdbs sets variables problem
projected  edelkamp        haslum et al          however  apart need
automatically select good projections  two limitations pdb heuristics size
abstract space dimensionality  first  number abstract states
small enough allow reachability analysis exhaustive search  moreover 
o    bound  s   typically set explicitly fit time memory limitations
system  second  since pdb abstractions projections  explicit constraint  s  
implies fixed dimensionality constraint  v     o     planning tasks with  informally 
many alternative resources  limitation pitfall  instance  suppose  i  
i  
sequence logistics problems growing size  vi     i  package
transported  i  vehicles  starting i  h account
movements vehicles essential solving  helmert   mattmuller        
aiming preserving attractiveness pdb heuristic eliminating bottleneck fixed dimensionality  helmert et al         generalized methodology
drager  finkbeiner  podelski        introduced called merge and shrink
 ms  abstractions planning  ms abstractions homomorphisms generalize pdb
abstractions allowing flexibility selection pairs states contracted 
problems state space viewed synchronized product projections onto
single state variables  starting atomic abstractions  product
computed iteratively composing two abstract spaces  replacing product 
pdb size abstract space controlled limiting number
product compositions  ms abstractions controlled interleaving iterative composition projections abstraction partial composites  helmert et al        
proposed concrete strategy interleaved abstraction refinement scheme empirically demonstrated power merge and shrink abstraction heuristics  pdbs 
however  ms abstractions explicit abstractions  thus computing heuristic values based explicitly searching optimal plans abstract spaces  hence 
merge and shrink abstractions escape fixed dimensionality constraint pdbs 
constraint abstract space fixed size still holds 

   implicit abstractions
focusing o    bound posted explicit abstractions size abstract
space  first observation explicit abstractions necessarily way
proceed abstraction heuristics  given planning task states s  suppose
transform different planning task
   transformation induces abstraction mapping   state
space  
  

fiimplicit abstraction heuristics

   transformation   well computing state s 
done time polynomial      
planning task to planning task transformations mind  define
call  additive  implicit abstractions 
definition   additive implicit abstraction planning task set pairs


   hi   i m
i    i  i   planning tasks  ht i    i i  
additive abstraction t   
let us examine notion implicit abstractions closely  first  implicit
abstractions allow natural additive combination admissible heuristics abstract
tasks  composition formulated theorem    extending original criterion
admissibility additive heuristics described section    second  formulated
theorem    implicit abstractions composed via functional composition
abstraction mappings  two easy to prove properties implicit abstractions allow us
take desired step implicit abstractions implicit abstraction heuristics 
theorem    admissibility  let planning task    hi   i m
i   additive implicit abstraction
 
if 


 



m 
h


admissible
heuristic
 

pm
function h s    i   hi  i  s   admissible heuristic  
proof  proof straightforward  let    s  l  tr  s           transition graph
  let state s    m  let ti    si   li   tri   s i   si     i  
transition graph  
first  hi admissible heuristic   si si   
hi  i  s   cost i  s   si   
now  state s      definition    s    si    eq   

x
i  

thus
h s   


x
i  

cost i  s    s     cost s  s    

hi  i  s  

giving us admissible estimate


x

i  

h  s  

cost i  s    s     cost s  s    


theorem    composition  let planning task    hi   i m
i   addimi
tive implicit abstraction   if 
i j   i j i j   additive
  m  ai   m h

implicit abstraction   a   
 h
 



i 

additive implicit abi j
i j
j  
i  
straction  
proof  let    s  l  tr  s           transition graph     m 
let ti    si   li   tri   s i   si     i   transition graph     j mi   let
        transition graph   need show
ti j    si j   li j   tri j   s i j   si j
i j
i j
i j abstraction mapping definition    i j abstraction
mappings 
  

fikatz   domshlak

s i j   i j  s i     i j  i  s       i j  s    
   
   s  si  thus i j  i  s     i j  s  si j
p
 
 
si   s i si   cost si   s i  
j   cost i j  si    i j  si     thus s  s 

cost s  s   


x
i  

cost i  s    s    
 

mi
x
x
i   j  
mi
x
x
i   j  

cost i j  i  s    i j  i  s     
cost i j  s   i j  s     


together  theorems     suggest following scheme deriving abstraction heuristics  given additive implicit abstraction    hi   i m
i     individual abstract
tasks belong tractable fragments optimal planning  use practice
 sum the  true costs admissible estimates costs   otherwise  optimal planning abstract tasks cannot proven polynomial time
solvable  abstract tasks  obtaining admissible estimates
true costs  
definition   let planning task states s  let    hi   i m
i  
additive implicit abstraction     o poly         and  allp
states

  m  h  i  s   polynomial time computable  ha  s   
i   h  i  s  
implicit abstraction heuristic function  
compared explicit abstraction heuristics pdb heuristics merge andshrink heuristics  direction implicit abstraction heuristics is  least principle 
appealing neither dimensionality even size state spaces induced
implicit abstractions required bounded something restrictive  all 
pitfall  however  implicit abstraction heuristics correspond tractable fragments
optimal planning  palette known fragments extremely limited  backstrom
  nebel        bylander        jonsson   backstrom        jonsson        katz   domshlak      b   fact  none far appeared us convenient automatically devising useful problem transformations above  fortunately  show next boundaries
tractability expanded right way  allowing us successfully materialize
idea implicit abstraction heuristics 
following  key role played causal graphs induced planning
tasks  informally  basic idea behind call causal graph decompositions
abstract given planning task along subgraph causal graph  goal
obtaining abstract problems specific structure  naturally  numerous possibilities
obtaining structure oriented abstractions  present one decomposition
tailored abstractions around acyclic subgraphs  informally  decomposition
seen sequential application two kinds task transformations  dropping
preconditions  pearl         certain form of  breaking actions conjunctive effects
single effect actions 
  

fiimplicit abstraction heuristics

definition   let   hv  a  i  g  costi planning task  let g    vg   eg  
acyclic subgraph causal graph cg    planning task g   hvg   ag   ig   gg   costg
acyclic causal graph decomposition respect g
   ig   i vg    gg   g vg   

   ag   aa ag  a  ag  a     a            al a    set actions vg
that  topological respect g ordering variables  v            vl a     
v eff a   vg     l a  
 
eff a  v  
v   vi

eff a   v   
unspecified  otherwise

   

 v  vi   eg v   v eff a   v   vi
pre a  v  
pre ai   v    eff a  v  
 v  vi   eg v v eff a  


unspecified  otherwise
   action a 

x
a  ag  a 

costg  a    cost a  

   

hard verify definition   planning task acyclic
causal graph decomposition g   causal graph cg g   exactly subgraph g underlying decomposition  illustrate notion acyclic causal graph decomposition 
consider planning task   hv  a  i  g  costi five state variables v    u  v  x  y  z  
two unit cost actions    a    a    figure  a  initial state    u      v      x           z      
goal g    u      v      x           z       causal graph cg   depicted figure  a 
figures  b c show two subgraphs g  g  cg    respectively  well action sets ag   a       a     a     a     ag   a       a     a     a     figure   b   action
sets ag   a       a     a     a     ag   a       a     a     a     figure   c           let
  hv  ai   i  g  costi planning task ai   agi  a   agi  a    costi  a       
ai   two planning tasks  individually  satisfy conditions definition   respect gi   thus acyclic causal graph decompositions
respect gi  
proceed specifying implicit abstractions defined via acyclic causal graph
decompositions 
definition   let   hv  a  i  g  costi planning task states s  let g    gi  

 vgi   egi   m
i   set acyclic subgraphs causal graph cg       hgi   i i  
acyclic causal graph abstraction g if  set cost functions
 costi   r    m
i   satisfying
 


x
i  

costi  a  cost a  

have    m 
  

   

fikatz   domshlak

a    h x           z        x           z     i

a     h x        x     i
a     h x             y     i
a     h x      z        z     i

a     h y        y     i
a     h z        z     i
a     h y      z      x        x     i

a    h u      v      x        u      v      x     i

a     h x        x     i
a     h x      u        u     i
a     h x      v        v     i

a     h u        u     i
a     h v        v     i
a     h u      v      x        x     i

u

a 

a 

x

a 
a 



x
a 

a  

a 

v

z

u

a  

a   a  



v

 a 

u

 b 

a  

z



v
a  

a  

z
a  

x
 c 

figure     a  actions causal graph cg   planning graph example
illustrating definition     b  subgraph g  cg   induced action sets
ag   a    ag   a      c  subgraph g  cg   induced action sets
ag   a    ag   a     arcs cg   subgraphs g  g 
labeled actions inducing arcs 

gi   hvgi   agi   igi   ggi   costgi acyclic causal graph decomposition  
hv  a  i  g  costi respect gi  
abstraction mapping   si projection mapping  s    s vgi   
theorem   acyclic causal graph abstractions planning tasks additive implicit
abstractions tasks 
proof  let   hv  a  i  g  costi planning task  let    hgi   i m
i  
acyclic causal graph abstraction set subgraphs g    gi    vgi   egi   m
i    
let    s  l  tr  s           transition graph   and    m  ti  
 si   li   tri   s i   si     i   transition graph gi   need show abstraction mapping definition   
first  definitions     
s i   igi   i vgi     s   vgi      s    
  g thus  s    s vgi   g vgi     ggi   providing us
 s  si   
now  state action pre a  s   s  state gi
pre a  vgi    s   let action sequence   ha    a            al a  constructed
eq     inductively prove applicable  s   first  v vgi  
either pre a    v    pre a  v   pre a    v  unspecified  thus     ha  applicable
 s   inductive hypothesis j   ha    a            aj applicable  s  
 
let s     s jj k  eq       j   j  aj changes value vj   eff a  vj     
  

fiimplicit abstraction heuristics

change vj   along j   likewise  since actions constructed
eq    unary effect   v            vj   variables vgi affected along j   hence 
v vgi   v   vj       j   j  s   v    eff a  v    pre aj     v   otherwise 
s   v     s  v   pre aj     v  specified  pre aj     v    pre a  v     s  v  
implies aj   applicable s  and  result  j     ha    a            aj   applicable
 s   finalizing inductive proof  likewise  exactly arguments affect
l a 
 aj  j    s  immediately imply that    ha    a            al a  i   sjak     s jk 
next  a  eqs     

x

x

i   a  agi  a 

costgi  a   


x
i  

costi  a  cost a  

   

now  let s  s  pair original states cost s  s        let    
 
ha            ak sequence
pk labels along cheapest path t  that 
 
cost s      cost      j   cost aj    decomposition path sequences
actions eq    ap not p
neccesarily cheapest  path  s   s    ti  
k
 
thus cost i  s    s    j   a  ag  aj   costgi  a     providing us



x
i  

 

cost i  s    s   
   



x
k
x

x

 

costgi  a    

i   j   a  agi  aj  
k
x

k x

x

x

costgi  a   

j   i   a  agi  aj  

cost aj     cost s  s    

j  


thus  decompose given task set tractable acyclic causalgraph decompositions    g            gm    solve tasks polynomial
time  derive additive admissible heuristic   proceed considering
concrete acyclic causal graph decomposition  note definition   leaves decision
actual partition action costs rather open  follows adopt
straightforward  uniform action cost partition thescost action equally
split among non redundant representatives
i   agi  a   however  better
choice action cost partition sometimes made  fact  sometimes even
optimized  katz   domshlak       

   fork decompositions
proceed introducing two concrete acyclic causal graph decompositions that 
combined certain variable domain abstractions  provide us implicit abstraction heuristics  called fork decomposition heuristics based two novel
fragments tractable cost optimal planning tasks fork inverted fork structured
causal graphs 
definition   planning task variables v   variable v v  
  

fikatz   domshlak

    v fork subgraph gvf cg   nodes vgvf    v  succ v  edges
egvf     v  u    u succ v   
    v ifork  short inverted fork  subgraph gvi cg   nodes vgvi  
 v  pred v  edges egvi     u  v    u pred v   
sets v forks v iforks denoted gf    gvf  vv gi  
 gvi  vv   respectively 
planning task state variables v  v fork v ifork
acyclic digraphs  allowing us define three implicit abstractions follows 
definition   planning task   hv  a  i  g  costi 

    acyclic causal graph abstraction af    hfv   vf i vv gf called
f abstraction  set abstract planning tasks f    fv  vv called
f decomposition  
    acyclic causal graph abstraction ai    hiv   vi i vv gi called
i abstraction  set abstract planning tasks    iv  vv called
i decomposition  
    acyclic causal graph abstraction afi    hfv   vf i  hiv   vi i vv
gfi   gf gi called fi abstraction  set abstract planning tasks
   fv   iv  vv called fi decomposition  

definition   better understood considering fi abstraction problem
logistics example  figure   schematically illustrates process  simplify
example  eliminate gfi single node subgraphs  obtaining
afi    hfc    cf   i   hfc    cf   i   hfc    cf   i   hft   tf i   hip    pi   i   hip    pi   i  
considering action sets problems    fc    fc    fc    ft   ip    ip     see
original driving action one nonredundant  that is  changing variable 
representative three abstract planning tasks  load unload action
one nonredundant representative five tasks  instance  action drive c  from a to d one nonredundant representative tasks  fc    ip    ip    
action load p   into c   at a one nonredundant representative tasks
 fc    fc    fc    ft   ip     since assume uniform partition action costs  cost
driving load unload action relevant abstract planning task thus set
         respectively  theorem   afi additive implicit
abstraction   theorem  

x
hfi  
hf   hi  
   
v

v

vv

admissible estimate h   question good estimate is 
optimal cost solving running example     taking reference well known
admissible heuristics hmax  bonet   geffner        h   haslum   geffner        
hmax  i      h   i        considering fi abstraction  optimal plans
tasks follows 
  

fiimplicit abstraction heuristics

fc    load p   into c   at c  unload p   from c   at d  load p   into t at d 
unload p   from t at e  load p   into c   at e  unload p   from c   at g 
load p   into c   at f  unload p   from c   at e 
fc    load p   into c   at c  unload p   from c   at d  load p   into t at d 
unload p   from t at e  load p   into c   at e  unload p   from c   at g 
load p   into c   at f  unload p   from c   at e 
fc    load p   into c   at c  unload p   from c   at d  load p   into t at d 
unload p   from t at e  drive c   from g to e  load p   into c   at e 
drive c   from e to g  unload p   from c   at g  drive c   from g to e 
drive c   from e to f  load p   into c   at f  drive c   from f to e 
unload p   from c   at e  drive c   from e to f 
ft   load p   into c   at c  unload p   from c   at d  drive t from e to d 
load p   into t at d  drive t from d to e  unload p   from t at e 
load p   into c   at e  unload p   from c   at g  load p   into c   at f 
unload p   from c   at e 
ip    drive c   from a to d  drive c   from d to c  load p   into c   at c 
drive c   from c to d  unload p   from c   at d  drive t from e to d 
load p   into t at d  drive t from d to e  unload p   from t at e 
drive c   from g to e  load p   into c   at e  drive c   from e to g 
unload p   from c   at g  drive c   from g to e  drive c   from e to f 
ip    drive c   from g to e  drive c   from e to f  load p   into c   at f 
drive c   from f to e  unload p   from c   at e  drive c   from e to f 
hence 
hfi   hf

c 

 

 
 

  hf

 

 
 

 

c 

 

hf
 
 

c 

 

 
 

hf

 
 

 
 



 

 
 

 

hi

 

 
 

p 

 

 
 

 

hf

 

 
 

p 

 

 
 

     

   

hfi appears least promising 
unfortunately  despite seeming simplicity planning tasks   turns
implicit fork decomposition abstractions definitions   fit requirements
implicit abstraction heuristics definition    causal graphs planning
tasks f form directed forks directed inverted forks  respectively  and 
general  number variables planning task large   v    
problem even satisficing planning sas  fragments fork inverted
fork causal graphs np complete  domshlak   dinitz         fact  recent results
chen gimenez        show planning sas  fragment characterized
nontrivial form causal graph np hard  moreover  even domain transition graphs
state variables strongly connected  as example   optimal planning
fork inverted fork structured problems remain np hard  see helmert           
respective results   next  however  show end story
fork decompositions 
  

fikatz   domshlak



b

c 

p 

c 

cg  

f
c 





p 

g

p 

c 



e
c 

c

c 

p 

 fv   iv  vv
fc 

c 

p 

c 

p 

c 

c 



ip 

p 

cg 
cg p ip   

cg fcfc    
cg 

figure    schematic illustration fi decomposition running logistics example
hardness optimal planning problems fork inverted fork causal
graphs casts shadow relevance fork decompositions  closer look proofs
corresponding hardness results domshlak dinitz        helmert             
reveals particular rely root variables large domains  exploiting
observation  show reliance incidental characterize two substantial
islands tractability within structural fragments sas   
theorem    tractable forks  given planning task   hv  a  i  g  costi fork
causal graph rooted r v    d r        time complexity cost optimal planning
polynomial      
proof  observe that  planning task theorem  fork structure
causal graph cg   implies actions unary effect  leaf variable
v succ r  preconditions actions affecting v itself  algorithm based
following three properties satisfied optimal plans  
 i  leaf variable v succ r   path v i v  g v  induced
dtg v    either cycle free contains zero cost cycles  case
otherwise nonzero cost cycles eliminated v preserving
validity  violating assumed optimality   without loss generality 
follows assume path v dtg v    cycle free  case fork
causal graphs  always select optimal satisfies requirement
v succ r   thus   v    d v     
 ii  fixed sequence value changes r  forks leaves become mutually
independent  is  ability change value one affect
ability change value others 
  

fiimplicit abstraction heuristics

 iii  r binary valued  v v    r  demanding leaf variable
terms number value changes required r action preconditions
along v   value changes r along   except for  possibly 
final value change g r   thus  particular   r   maxvsucc r   d v   
begin introducing auxiliary notations   d r        let d r          
i r       let  r  alternating     sequence starting     
odd   even positions  sequence  r    r       action
change rs value      r       action change rs value  
action restore value    otherwise    r         maxvsucc r   d v    let
  r   set nonempty prefixes  r  g r  unspecified  otherwise  let
set nonempty prefixes  r  ending g r   note that    r      
problem trivially unsolvable  follows assume case 
v succ r   let dt g v dt g v subgraphs domain transition graphs
dtg v     obtained removing dtg v    arcs labeled r     r     
respectively 
algorithm incrementally constructs set r valid plans   starting
r    
    v succ r   pair vs values x  d v   compute cheapest
 that is  cost minimal  paths v   x  y  v   x  y  x dt g v dt g v  
respectively  pairs values x  y  one even paths may  course 
exist 
    sequence   r    v succ r   construct layered digraph lv   
       node layers l            l     l  consists i v        
 i 

li consists nodes d v  path v  x  y  node x li 
constructed step      x li    li   lv    contains arc
 i 
 x  y  weighted cost v  x  y   

      r    let k       candidate plan constructed follows 

 a  v succ r   find cost minimal path i v  g v  lv    
path exists  proceed next prefix   r    otherwise  note
i th edge path  taking us x li  li   corresponds
 i 
cost minimal path v  x  y  x y  let us denote path x
svi  

 b  set r   r         a           a k  k   sequence obtained
arbitrary merge sequences  svi  vsucc r    cheapest action
changing value r value  
    r     fail  otherwise return   argmin r cost    
straightforward verify complexity procedure polynomial
description size   prove correctness  show procedure returns
plan solvable task   returned plan   satisfies cost     cost  
optimal plan  
  

fikatz   domshlak

given solvable task   let optimal plan v leaf variables
v cycle free  let r   ha          ak i  numbering actions along r starts
a  simplify indexing later on  v succ r   actions r divide v
subsequences v changing actions v    v       kv   separated value changes
required r  is    k  actions iv preconditioned
value r  any  two actions iv a  i  
preconditioned r 
v
pre a  r     pre a    r   let   r   value sequence      k    r       
v succ r   v path i v  g v  lv     therefore added
r algorithm  meaning algorithm finds solution  now  r 
then  v succ r   let sv  sv        svk cost minimal path i v  g v 
lv    svi sequence actions changing value v preconditioned
either r     nothing odd i  r     nothing even i  thus 
cost sv  sv        svk    

k
x
i  

cost svi   cost v   

sequence obtained arbitrary merge sequences  svi  vsucc r   
cheapest action changing value r       a            a k  k
applicable sequence actions achieves goal values v succ r 
well r 
cost      cost s   a            a k  k    

k
x

cost a i     

i  

cost r    

k
x
i  

x

cost s  

cost v     cost   

vsucc r 

hence  solvable  algorithm returns plan   plan must
optimal  finally  solvable  r necessarily remains empty  thus
algorithm fails 

theorem   concerns tractability tasks fork structured causal graphs
roots binary domains  earlier work reported additional tractability
result fork structured causal graphs domains variables fixed
size  though necessarily binary valued  katz   domshlak         discuss
result detail because  least far  found helpful
context devising effective abstraction heuristics 
theorem    tractable inverted forks  given planning task   hv  a  i  g  costi
inverted fork causal graph sink r v    d r     o     time complexity
cost optimal planning polynomial      
proof  let  d r     d  observe inverted fork structure causal graph cg  
implies actions unary effect  sink r preconditions
actions affecting r itself  hence  follows assume g r  specified  otherwise
  

fiimplicit abstraction heuristics

given path ha            i r  g r  dtg r    
   hi
am      hg pred r   
foreach v pred r  xv    i v 
        
foreach v pred r 
pre ai   v  specified pre ai   v     xv
pre ai   v  reachable xv dtg v    fail
append actions induced cost minimal path
pre ai   v  xv dtg v   
xv    pre ai   v 
      append action ai
return
figure    detailed outline step     planning algorithm inverted fork structured
task 

breaks set trivial planning problems single variable each  likewise 
properties follows that  optimal plan   path
r i r  g r  induced dtg r    either cycle free contains zerocost cycles  latter safely eliminated   thus assume r
cycle free  given that  simple algorithm finds cost optimal plan time
     d           follows 
    create   ar  d    cycle free paths i r  g r  dtg r    
    variable v pred r   pair vs values x  d v   compute
cost minimal path x dtg v     whole set cost minimal paths
computed using  d v    applications floyd warshall algorithm
domain transition graphs sinks parents pred r  
    i r  to g r  path dtg r    generated step      construct plan
based path r  cheapest paths computed      simple
construction  depicted figure    possible values parent variable
changed independently values variables inverted fork 
    take cheapest plan among constructed      plan constructed
step      unsolvable 
already observed that  cost optimal plan   r one i r  to g r 
paths generated step      v pred r   let sv denote sequence values
d v  required preconditions actions along r   v pred r  
v corresponding  possibly cyclic  path i v  g v  dtg v     traversing
values    nodes  sv order required sv   turn  plan generated
    consists cost minimal paths v pred r   therefore  least one
  

fikatz   domshlak

plans generated     must cost optimal   minimization step     select
one them 

theorems     clarify gap fork decompositions implicit abstraction
heuristics  bridge gap abstracting task given fork
decomposition   abstracting domains fork roots inverted fork
sinks meet requirements tractable fragments  note that  itself  idea
domain decomposition new general  hernadvolgyi   holte       
domain independent planning particular  domshlak  hoffmann    sabharwal        
fact  shrinking step algorithm building merge and shrink abstractions
precisely variable domain abstraction meta variables constructed merging
steps  helmert et al         
definition    let   hv  a  i  g  costi planning task states s  v v state
variable                   set mappings d v  sets              
respectively     hi   i m
i   domain abstraction if  set
cost functions  costi   r    m
i   satisfying
 


x
i  

costi  a  cost a  

   

have    m 
abstraction mapping states
u v  

 
 s u   
 s  u   
s u  

u v
 
u    v

and  extending partial assignments v   v  s v         s  v     
  hv  ai   ii   gi   costi planning task
   ii    i   gi    g  
   ai    ai   hi  pre a     eff a  i   a  

   action a 

costi  ai     costi  a  

   

say domain decomposition   hv  a  i  g  costi respect  
theorem   domain abstractions planning tasks additive implicit abstractions
tasks 
proof  let   hv  a  i  g  costi planning task    hi   i m
i   domain
abstraction                   let    s  l  tr  s           transition
graph     m  let ti    si   li   tri   s i   si     i   transition graph
  need show abstraction mapping definition   
first  definition   
  

fiimplicit abstraction heuristics

s i   ii    i     s    
  g thus  s   g    gi   providing us
 s  si   
now  state action pre a  s   s  state
pre ai      pre a    s   thus  ai applicable  s   show
applying ai  s  results  s jai k    sjak  
   effect variables v v eff a     v eff ai     eff ai    s jai k
eff ai      eff a    sjak  
   variables v   v eff a    sjak v    s v   s jai k v   
 s  v   thus
 s jai k v     s  v     s v      sjak v      sjak  v  
next  a  eqs     

x

costi  ai    

i  


x
i  

costi  a  cost a  

    

now  let s  s  pair states cost s  s      let     ha            al
sequence
labels along cheapest path s  t  that  cost s  s      cost     
pl
j
j   cost a    decomposition path actions definition   
 not
cheapest  path  s   s    ti   thus cost i  s    s    
pl neccesarily
j
j   costi  a    providing us

x
i  

cost i  s    s    

x
l
x
i   j  

costi  aji    

l x

x
j   i  

    

costi  aji  

l
x

cost aj     cost s  s    

j  


put notion domain abstraction framework implicit abstractions 
ready connect fork decompositions implicit abstraction heuristics  given
fi abstraction afi    hfv   vf i  hiv   vi i vv planning task   hv  a  i  g  costi 
fv   associate root v cg fv   mappings fv    fv             fv kv  
kv   o poly        fv i   d v          abstract fv
f i kv  
afv    hfv i   v i
i  
iv   associate sink v cg iv   mappings iv    iv             iv kv   
kv    o poly        iv i   d v                 bv i    bv i   o    
k 

i  v  
abstract iv aiv    hiv i   v i
i  

  

fikatz   domshlak

theorem    theorem    composition theorem    immediately


kv 
kv
   
 
f

 hfv i   v i
afi  
vf i   hiv i   v i
vi i 
    
vv

i  

i  

additive implicit abstraction   hence  theorem   


kv 
kv
x x
x

hfi  
hi
hf  
vv

v i

i  

i  

v i

    

admissible estimate h   and  theorems      hfi computable
time o poly        
finalizes construction concrete family implicit abstraction heuristics 
illustrate mixture acyclic causal graph domain abstractions above 
use running logistics example  one bothersome question extent
abstracting fork decompositions using domain abstractions affects informativeness
heuristic estimate  though generally degradation unavoidable  show
answer question sometimes somewhat surprising 
begin extreme setting  let domain abstractions roots forks
sinks inverted forks binary valued domains  among multiple options choosing mapping sets  fv    iv    use simple choice distinguishing different values variable v basis cost i v  dtg v    
specifically  v v   set fv   iv   and  value d v 
  max  d v  d i v       
 
   d i v      
fv i      iv i     
    
   otherwise
example  problem fc  decomposed  see domain transition graph c 
left figure  c  two problems  fc     fc       binary abstract
domains c  corresponding partitions   a    b  c  d     a  d    b  c  
d c     respectively  yet another example  problem ip  decomposed  see
domain transition graph p  figure  d  six problems ip               ip     along
abstractions d p    depicted figure  a  now  given fi decomposition
mappings  fv   iv  vv above  consider problem ip       obtained abstracting
along inverted fork p  abstracting d p    using
 
    c 
ip         
 
    a  b  d  e  f  g  c    c    c    t 
hard verify that  original actions affecting p    left ip    
actions conditioned c  c    so  information lost  remove
ip     variables c  t  well actions changing  only  variables 
   information lost still keep either fork inverted fork variable  

  

fiimplicit abstraction heuristics



c



b

c



e

c

f

g

c

 a 


c



b

c





c

e

c

f

g



c

b

c



e

c

d p    fp    



c

f



g

b

c



e

c

c

d p    fp    

f

g

c

d p    fp    

 b 
figure    domain abstractions d p      a  binary valued domain abstractions  values inside outside dashed contour mapped      respectively 
 b  ternary valued domain abstractions  values mapped
abstract value shown nodes color borderline 

redistribute cost removed actions representatives
originals   latter revision action cost partition obtained directly
replacing cost partitioning steps corresponding eqs          single  joint
action cost partitioning applied final additive implicit abstraction afi eq    
satisfying

kv
x x
cost a 

vv



 

x

costfv i  fv i  a      

i   a  f  a 
g

kv
x

x


costiv i  iv i  a      

    

i   a   a 
g
v

v

follows  uniform action cost partition refer partition cost
action equally split among nonredundant representatives final additive
implicit abstraction 
overall  computing hfi eq     binary valued domain abstractions
 
uniform action cost partition provides us hfi  i         
  knowing

original costs integers safely adjust h  i        hence  even
severe domain abstractions above  estimate hfi example task
lower h   
let us slightly refine domain abstractions sinks inverted forks
ternary range            mappings  fv   remain unchanged   iv   set
  

fikatz   domshlak



   d i v        i  

d v    v i         d i v        i  


   d i v        i  

 

    

example  problem ip  decomposed ip               ip     along abstractions
d p    depicted figure  b  applying computation hfi eq    
new set domain abstractions gives hfi  i            which  again  safely
adjusted hfi  i        note value higher hfi      obtained using
 generally intractable  pure fork decomposition abstractions eq     first view 
outcome may seem counterintuitive domain abstractions applied fork
decomposition  one would expect coarser abstraction provide less precise estimates 
this  however  necessarily case employed action cost partition ad hoc 
instance  domain abstraction sink inverted fork may create independence
sink parent variables  exploiting domain abstraction specific
independence relations leads targeted action cost partition via eq     
see surprising estimate improvement obtained  note
domain abstraction eq     applied example  truck moving actions
drive t from d to e drive t from e to d appear three abstractions ft   ip  ip   
domain abstraction appear five abstractions ft     ip       ip       ip    
ip       however  closer look action sets five abstractions reveals
dependencies p  cg ip       cg ip        p  cg ip       redundant 
thus keeping representatives move d e move e d corresponding abstract
tasks entirely unnecessary  hence  all  two truck moving actions appear
two post domain abstraction tasks  moreover  abstractions truck moving
actions fully counted  contrast predomain abstraction tasks portion
cost actions allocated ip  simply gets lost 

   experimental evaluation  take
evaluate practical attractiveness fork decomposition heuristics  conducted empirical study wide sample planning domains international
planning competitions  ipc             plus non ipc schedule strips domain  
domains selected allow comparative evaluation other  baseline
state of the art  approaches planners  supported pddl features
time evaluation 
later formally prove that  ad hoc action cost partitions uniform
partition  none three fork decompositions definition   dominated
two  hence  implemented three additive fork decomposition heuristics  hf  
hi   hfi   within standard heuristic forward search framework fast downward
planner  helmert        using algorithm full duplicate elimination  hf
heuristic corresponds ensemble  not clearly redundant  fork subgraphs
   schedule strips appears domains distribution ipc       later became aware
fact domain excluded competition encoding generated problems
various planners 

  

fiimplicit abstraction heuristics

domain



airport ipc 
blocks ipc 
depots ipc 
driverlog ipc 
freecell ipc 
grid ipc 
gripper ipc 
logistics ipc 
logistics ipc 
miconic strips ipc 
mprime ipc 
mystery ipc 
openstacks ipc 
pathways ipc 
pipes notank ipc 
pipes tank ipc 
psr small ipc 
rovers ipc 
satellite ipc 
schedule strips
tpp ipc 
trucks ipc 
zenotravel ipc 

  
  
 
  
 
 
  
 
  
  
  
  
 
 
  
  
  
 
 
  
 
 
  

total

   

hf

  
  
 
 
 
 
 
 
  
  
  
  
 
 
 
 
  
 
 
  
 
 
 

 s
  
  
  
  
  
  
  
  
  
  
  
  
   
   
  
  
  
  
   
  
  
  
  
   

hi

  
  
 
  
 
 
 
 
  
  
  
  
 
 
  
 
  
 
 
  
 
 
 

 s
  
  
  
  
  
  
  
  
  
  
  
  
   
   
  
  
  
  
   
  
  
  
  
   

hfi

  
  
 
 
 
 
 
 
  
  
  
  
 
 
 
 
  
 
 
  
 
 
 

 s
  
  
  
  
  
  
  
  
  
  
  
  
   
   
  
  
  
  
  
  
  
  
  

ms     

ms     


  
  
 
  
 
 
 
 
  
  
  
  
 
 
  
  
  
 
 
  
 
 
  


  
  
 
  
 
 
 
 
  
  
  
  
 
 
  
 
  
 
 
 
 
 
  

   

 s
  
  
   
   
   
   
  
  
  
  
  
  
   
  
  
  
   
  
   
  
   
  
   
   

 s
  
  
  
   
  
   
  
  
  
  
  
  
   
   
  
  
   
   
   
 
   
  
   
   

hspf


  
  
 
 
 
 
 
 
  
  
 
  
 
 
  
 
  
 
 
  
 
 
 

 s
  
   
  
  
   
 
  
  
  
  
  
  
   
   
  
  
   
  
  
  
  
   
  

   

gamer

  
  
 
  
 
 
  
 
  
  
 
 
 
 
  
 
  
 
 
 
 
 
  

 s
  
   
  
  
  
   
   
   
  
   
  
  
   
   
  
  
  
  
   
 
  
  
  
   

blind

  
  
 
 
 
 
 
 
  
  
  
  
 
 
  
  
  
 
 
  
 
 
 

 s
  
  
  
  
  
  
  
  
  
  
  
  
   
   
  
  
  
  
  
  
  
  
  
   

hmax

  
  
 
 
 
 
 
 
  
  
  
  
 
 
  
  
  
 
 
  
 
 
 

 s
  
  
  
  
   
   
  
  
  
  
   
  
   
   
  
  
  
  
  
  
   
  
  
   

table    summary experimental results  per domain  denotes number
tasks solved planner  per planner domain  number tasks solved
planner given absolute number  s  percentage
solved planners   s   last row summarize number solved
instances 

causal graph  domains roots abstracted using leave one value out
binary valued domain decompositions follows 
 
    
d v    fv i     
 
    
   otherwise
hi heuristic inverted fork subgraphs  domains
sinks abstracted using distance to goal value ternary valued domain decompositions  eq     


   d   g v      i  

d v    v i         d   g v      i    
    


   d   g v      i  
ensemble hfi heuristic union hf hi   action cost
partition three heuristics call uniform 
make comparison two baseline approaches  namely blind heuristic
value   goal states   otherwise  hmax heuristic  bonet   geffner 
       well state of the art abstraction heuristics  represented mergeand shrink abstractions helmert et al          latter constructed
   distance from initial value reasonable evaluation initial state  leave onevalue out fork roots distance to goal value inverted fork sinks typically much
attractive evaluation states examined  

  

fikatz   domshlak

linear  f  preserving abstraction strategy proposed authors  two
fixed bounds size abstract state spaces  notably  s          s          
four  baseline merge and shrink  heuristics implemented helmert et al 
       within planning system fork decomposition heuristics  allowing
fairly unbiased comparison  compare gamer  edelkamp   kissmann 
      hspf  haslum        planners  winner runner up sequential
optimization track ipc       algorithmic side  gamer based bidirectional
blind search using sophisticated symbolic search techniques  hspf uses
additive critical path heuristic  experiments conducted  ghz intel e    
cpu   gb memory  using     gb memory limit    minute timeout 
exception gamer  used similar machines   gb memory  
gb memory limit  done provide gamer environment
configured 
table   summarizes experimental results terms number tasks solved
planner  impression fork decomposition heuristics table   somewhat
mixed  one hand  performance three fork decomposition based planners
comparable one settings merge and shrink heuristic  clearly
testifies framework implicit abstractions theoretical interest only 
hand  planners  except merge and shrink heuristic
 s           failed outperform baseline hmax heuristic  important
us that  unfortunately  three fork decomposition based planners failed outperform
even basic blind search 
this  however  end story fork decomposition heuristics 
hope found detailed results tables      appendix  appears
table     on  e g   logistics ipc  domain  hf almost consistently leads expanding
fewer search nodes  better two merge and shrink heuristics
domain  ms        difference hitting four orders magnitude  however  time
complexity hf per search node substantially higher ms       
two expanding rate approximately           nodes per second  respectively 
outcome simple  time limits  and memory limit     gb  hf
solves tasks logistics ipc  ms       task      solved hf        
seconds   standard time limit half hour used table    
follows examine possibility exploiting informativeness fork decomposition
heuristics falling trap costly per node heuristic evaluation 

   back theory  h partitions databased implicit abstraction
accuracy low time complexity desired yet competing properties heuristic
functions  many powerful heuristics  abstraction heuristics particular  computing
h s  state isolation impractical  computing h s  polynomial
description size   often efficient enough performed search node 
however  costly heuristics obstacle largely overcome sharing
computation evaluations h different states  possible 
shared parts computing h problem states precomputed memorized
search  reused search evaluations h different
  

fiimplicit abstraction heuristics

states  mixed offline online heuristic computation henceforth called h partition 
define time complexity h partition complexity computing h
set states  given subset k problem states   s  h partitions time
complexity computing  h s        expressed o x   ky    o x  o y  
are  respectively  complexity  offline  pre search  online  per node parts
computing h s  
days h partitions adopted various optimal planners using criticalpath heuristics hm      haslum et al          landmark heuristics hl hla  karpas
  domshlak         pdb merge and shrink abstraction heuristics  edelkamp 
      helmert et al          without effective h partitions  optimal search
heuristics would scale well  h partitions constitutes state
art cost optimal planning  instance  attractive property pdb abstractions
complexity natural h  partition  instead computing h  s    h   s  
scratch evaluated state  impractical tiny projections   practice
precompute store h  s    abstract states s    per node
computation h  s  boils hash table lookup h   s   perfect hash
function  terms  time space complexity pdb h  partition set
k states o  s   log  s       a     k  o  s     respectively  precisely
makes pdb heuristics attractive practice  respect  picture mergeand shrink abstractions much similar  order composites
formed choice abstract states contract crucial complexity
natural h  partitions  time space complexity concrete linear abstraction
strategy helmert et al  respectively o  v   s   log  s       a     k  v    o  s    
similarly pdb abstractions  per node computation h  s  merge and shrink
abstraction lookup data structure storing h   s   abstract states
 s    hence  pre search computation ms abstractions
costly pdbs  online part computing heuristic values still extremely
efficient  per node efficiency provides merge and shrink heuristics impressive
practical effectiveness numerous ipc domains  helmert et al         
sum up  say fixed size abstract spaces induced explicit abstractions pdbs merge and shrink limitation key obtaining
effective h partitions  contrast  escaping limitation implicit abstractions might
trap us pay high price search node evaluation  show  however  time per node complexity bottleneck fork decomposition heuristics
successfully overcome  specifically  show equivalent pdbs mergeand shrink notion database exists fork decomposition abstractions well  despite
exponential size abstract spaces  course  unlike pdb merge and shrink
abstractions  databased fork decomposition heuristics  and cannot  provide us
purely lookup online computation h  s   online part h  partition
nontrivial sense complexity cannot o     comes next
prove existence effective h partitions fork inverted fork abstractions 
section   empirically show h partitions lead fast pre search
per node computations  allowing informativeness fork decomposition heuristics
successfully exploited practice 

  

fikatz   domshlak

theorem   let   hv  a  i  g  costi planning task fork causal graph rooted
binary valued variable r  exists h  partition that  set k states 
time space complexity h  partition is  respectively  o d   v      ar     kd v   
o d   v       maxv d v  
proof  proof modification polynomial time algorithm computing
h  s  state task used proof theorem    tractable forks   given
state s  let d r            s r       follows  two roots
values d r   denotes opposite value      r     r    dtg  v dtg  v
defined exactly proof theorem   
    two values r d r  root variable  leaf variable v v    r  
pair values     d v   let p    r cost cheapest sequence
actions changing v   provided r   r   whole set  p    r   leaves
v v   r  computed straightforward variant all pairs shortest paths 
floyd warshall algorithm dtg v r time o d   v    
    leaf variable v v    r          d v   let g i cost
cheapest sequence actions changing s v  provided sequence   r   
     i  value changes r  values  p    r   step      set  g i  
given solution recursive equation


ps v   s r   
i  






min g   i    p    s r   
      odd
 

g i  
 

   i    p    s r   
min
g
 
 



 


even



 


g
     
 i   
   d v        given that 

h  s   

min

cost    

  r  


x

gg v      

vv   r 

p  
cost     i   cost a i     a i  cheapest action changing
value r  i     i  
note step     already state independent  heavy step     not  however 
state dependence step     mostly overcome follows  v v    r  
d v          r d r   let g i  r   cost cheapest sequence
actions changing g v  provided value changes r induce     sequence length
starting r   set  g i  r    given solution recursive equation


 
i  

p g v  
r

g   i   r     p    r      
 
g i  r     min
 


g
     
 i   r   
  

    

fiimplicit abstraction heuristics

  

 

 

r   

  

 
 

 
 

 

 
   

 
 

   
 
  

 

 

 
 
   

 
 

 

 

 
   

 

 

 

 

   
 
  

 

 
 

 

 

 

 
 
 
 
 
 
 
 
 
 
 
 
 
 

cost  

v   

v    v    v   

u  

u   u   u   u   u  

 
  
  
  
  
   
   
 
  
  
  
  
   
   

   
   
   
   
 
 
 

   
 
 
 
 
 


 
 
 
 
 
 


 
 
 
 
 

   
   
  
  
 
 
 

   
   
  
  
 
 

           
           
     
 
     
 
 
 
 
 
 
 
 
 
 

     
 
     
 
 
 
 
 
 
 
 
 
 
 
 
 


 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 

 a 

 
 
 
 
 
 
 

 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 

 b 

figure    database fork structured problem binary valued root variable r
two children v u  g r       g v       g u        a  depicts
domain transition graphs r  top   v  middle   u  bottom   numbers
edge precondition r cost respective
action   b  depicts database created algorithm  instance  entry
row r            column v     captures value gv      r      computed
eq      shaded entries examined online computation
h  r      v      u      
solved time o d   v     note equation independent
evaluated state s  yet  g i  r    allow computing h  s  given state via

h  s   

min



cost    

  r s r   

x

gs v      s r  

    

vv   r 

 r r   defined similarly  r  respect initial value r r 
new formulation  computation performed online  per
search node  final minimization   r s r    eq      lightest
part whole algorithm anyway  major computations  notably  p    r  
 g i  r     performed offline shared evaluated states 
space required store information o d   v    contains fixed amount
information per pair values variable  time complexity offline computation o d   v      ar      ar   component stems precomputing costs cost   
time complexity online computation per state o d v      v   comes
internal summation comes size   r s r    

figure  b shows database created fork structured problem binary valued
root r  two children v u  g r       g v       g u       domain transition
  

fikatz   domshlak

graphs v u depicted figure   a   online computation h  s  eq    
   r      v      u      sums shaded entries four rows
entries  minimizes resulting four sums  minimum obtained
row r            
theorem   let   hv  a  i  g  costi planning task inverted fork causal graph
sink r  d r     b   o     exists h  partition that  set
k states  time space complexity h  partition o b v   ar  b    d   v    
k v   ar  b    o  v   ar  b    d   v     respectively    maxv d v  
proof  proof theorem    proof theorem   based modification
polynomial time algorithm computing h  s  used proof theorem  
 tractable inverted forks  
    parent variable v v    r   pair values     d v   let p  
cost cheapest sequence actions changing     whole set  p    
computed using floyd warshall algorithm domain transition graph
v time o d   v    
    given state s  cycle free path   ha            s r  g r  dtg v    
let g cost cheapest plan based   cheapest paths
 p     computed step      g computed
g  


x
i  

cost ai    


x
x

pprei  v  prei    v   

i   vv   r 

pre            prem   values required parents r along path  
is  v v    r         


s v  
i  



g v  
       g v  specified
prei  v   
 

pre a
  v  
 



m 

pre a
  v 

specified





pre  v 
otherwise
i 
that  h  s    min g  
note step     state independent  step     not  however  dependence
step     evaluated state substantially relaxed  o   
different values r  possible consider cycle free paths g r  values r 
path   parent variable v v    r   know first value
v required would be  given that  precompute cost optimal plans induced
assuming parents start first required values  remainder
computation h  s  delegated online  modified step     follows 
r d r  cycle free path   ha            r g r 
dtg r     let proxy state


v r
r  
 v    g v  
    pre ai   v  unspecified  


pre ai   v     argminj  pre aj   v  specified 
  

fiimplicit abstraction heuristics

is  nontrivial part captures first values v    r  required along    given
that  let g cost cheapest plan based   cheapest
paths  p     computed      g computed
g  


x





cost ai    

i  

x

pprei  v  prei    v   

vv   r 

where  v v    r         


 v  
i  



g v  
       g v  specified
prei  v   
 

pre ai   v     m  pre ai   v  specified



pre  v   otherwise
i 
storing pairs  g     accomplishes offline part computation  now  given
search state s  compute

h  s   

min

s t 
 r  s r 



g  

x

ps v  s  v   

    

vv   r 

number cycle free paths g r  dtg r      ar  b     g
path computed time o b v     hence  overall offline time complexity
o b v   ar  b    d   v     space complexity  including storage proxy states
  o  v   ar  b    d   v     time complexity online computation per state via
eq     o  v   ar  b      v   comes internal summation  ar  b  upper
bound number cycle free paths s r  g r  

figure   b  shows database created inverted fork structured problem
ternary valued sink variable r  two parents u v  g r       g u       g v      
domain transition graphs u v depicted top figure   a   actual
identities actions affecting two parents important here  actions affecting
sink r
a    h u      r        r     i
a    h v      r        r     i

a    h u      r        r     i

a    h v      r        r     i 
domain transition graph r depicted bottom figure   a   online computation h  s  eq        r      v      u      sums shaded entries
four rows entries  minimizes resulting four sums 
minimum obtained lowest row 
  

fikatz   domshlak

 

 

  

 

  

  

 

 
 

 

   

 

u  

u  

 

 

 

 

 

v  

v  

  

   

r



ha    a 
  ha    a 
ha    a 
ha  a 
ha 
 
ha 

 a 



g

u  

u   u  

v   

u      v    
u      v    
u      v    
u      v    
u      v    
u      v    

   
   
   
   
   
   

   
   
  
 
  
 

 
  
 
  
     
      
     
      

 
   
   
   
 
   

v    v   
 
 
 
 
 
 

 
   
   
   
 
   

 b 

figure    database inverted fork structured problem o    bounded sink
variable r two parents u v  g r       g u       g v      
 a  depicts domain transition graphs u  top left   v  top right   r
 bottom   numbers edge preconditions
cost respective action  respectively   b  depicts database created
algorithm  shaded entries examined online computation
h  r      u      v      

   experimental evaluation  take ii
evaluate practical attractiveness databased fork decomposition heuristics 
repeated empirical evaluation section    databased versions
heuristics  detailed results evaluation relegated tables      
appendix  summarized table    domain  column
captures number tasks domain solved least one planner
suite  per planner domain  number tasks solved planner given
absolute number  s  percentage solved planners
  s   boldfaced results indicate best performance within corresponding domain 
last three rows summarize performance planners via three measures 
first number tasks solved    domains  basically performance
evaluation measure used optimization track ipc       domains equally
challenging equally discriminate planners performance  second
domain normalized performance measure
s p   

x
domain

 tasks solved planner p
 
 tasks solved planners

finally  third measure corresponds number domains w planner
question solved least many tasks planner 
overall  table   clearly suggests heuristic search databased fork decomposition
heuristics favorably competes state art optimal planning  particular 
   ease presentation  omit case v required neither along   goal 
variables simply ignored accounting cost  

  

fiimplicit abstraction heuristics

domain



airport ipc 
blocks ipc 
depots ipc 
driverlog ipc 
freecell ipc 
grid ipc 
gripper ipc 
logistics ipc 
logistics ipc 
miconic strips ipc 
mprime ipc 
mystery ipc 
openstacks ipc 
pathways ipc 
pipes notank ipc 
pipes tank ipc 
psr small ipc 
rovers ipc 
satellite ipc 
schedule strips
tpp ipc 
trucks ipc 
zenotravel ipc 

  
  
 
  
 
 
  
  
 
  
  
  
 
 
  
  
  
 
 
  
 
 
  

total

w

   

hf

  
  
 
  
 
 
 
  
 
  
  
  
 
 
  
  
  
 
 
  
 
 
  

 s
   
  
   
   
   
   
  
   
  
  
  
   
   
   
  
  
  
  
   
   
   
  
   

   
     
  

hi

  
  
 
  
 
 
 
  
 
  
  
  
 
 
  
 
  
 
 
  
 
 
  

 s
  
  
  
   
  
  
  
  
  
  
  
  
   
   
  
  
  
   
   
  
   
  
   

   
     
 

hfi

  
  
 
  
 
 
 
  
 
  
  
  
 
 
  
 
  
 
 
  
 
 
  

 s
  
  
   
   
  
  
  
  
  
  
  
   
   
   
  
  
  
  
   
   
   
  
   

   
     
 

ms     

ms     


  
  
 
  
 
 
 
  
 
  
  
  
 
 
  
  
  
 
 
  
 
 
  


  
  
 
  
 
 
 
  
 
  
  
  
 
 
  
 
  
 
 
 
 
 
  

 s
  
  
   
   
   
   
  
  
  
  
  
  
   
  
  
  
   
  
   
  
   
  
   

   
     
  

 s
  
  
  
   
  
   
  
  
  
  
  
  
   
   
  
  
   
   
   
 
   
  
   

   
     
 

hspf


  
  
 
 
 
 
 
  
 
  
 
  
 
 
  
 
  
 
 
  
 
 
 

 s
  
   
  
  
   
 
  
  
  
  
  
  
   
   
  
  
   
  
  
  
  
   
  

   
     
 

gamer

  
  
 
  
 
 
  
  
 
  
 
 
 
 
  
 
  
 
 
 
 
 
  

 s
  
   
  
  
  
   
   
  
  
   
  
  
   
   
  
  
  
  
   
 
  
  
  

   
     
 

blind

  
  
 
 
 
 
 
  
 
  
  
  
 
 
  
  
  
 
 
  
 
 
 

 s
  
  
  
  
  
  
  
  
  
  
  
  
   
   
  
  
  
  
  
  
  
  
  

   
     
 

hmax

  
  
 
 
 
 
 
  
 
  
  
  
 
 
  
  
  
 
 
  
 
 
 

 s
  
  
  
  
   
   
  
  
  
  
   
  
   
   
  
  
  
  
  
  
   
  
  

   
     
 

table    summary experimental results databased versions forkdecomposition heuristics  per domain  denotes number tasks solved
planner  per planner domain  number tasks solved planner
given absolute number  s  percentage solved
planners   s   boldfaced results indicate best performance within
corresponding domain  last three rows summarize number solved instances  domain normalized measure solved instances  s   number
domains planners achieved superior performance  w  

forks heuristic hf exhibited best overall performance according
three measures  terms absolute number solved instances  three
fork decomposition heuristics outperformed planners suite  contribution
databasing success fork decomposition heuristics dramatic  looking
back results fully online heuristic computation depicted table    note
total number solved instances fork decomposition heuristics hf   hi   hfi
increased             respectively  made whole difference 
performed comparative evaluation planning domains
recent ipc       ipc      domains differ previous domains actions
various costs  and  importantly  many actions zero cost  latter
issue heuristic search planners heuristic functions cannot differentiate
subplans cost zero  differ length  case  comparative
side evaluation ipc      domains differ several points previous
one  first  neither merge and shrink hmax heuristics  implementation
supporting arbitrary action costs  hence  comparison gamer  hspf  
blind search  second  ensure admissibility blind search  latter
modified return non goal states cost cheapest applicable action  finally 
planners run  ghz intel e     cpu   gb memory  using   gb memory
  

fikatz   domshlak

domain



elevators strips ipc 
openstacks strips ipc 
parcprinter strips ipc 
pegsol strips ipc 
scanalyzer strips ipc 
sokoban strips ipc 
transport strips ipc 
woodworking strips ipc 

  
  
  
  
  
  
  
  

total

w

   

hf

  
  
  
  
  
  
  
 

 s
  
  
  
   
   
  
   
  

   
    
 

hi

  
  
  
  
 
  
  
 

 s
  
  
  
   
  
  
   
  

   
    
 

hfi

  
  
  
  
 
  
  
 

 s
  
  
  
   
  
  
   
  

   
    
 

hspf


 
  
  
  
 
  
 
 

 s
  
   
   
   
  
  
  
  

   
    
 

gamer

  
  
 
  
  
  
  
  

 s
   
  
  
  
  
  
   
   

   
    
 

blind

  
  
  
  
  
  
  
 

 s
  
  
  
   
   
  
   
  

   
    
 

table    summary experimental results  per domain  denotes number
tasks solved planner  per planner domain  number tasks solved
planner given absolute number  s  percentage
solved planners   s   boldfaced results indicate best performance
within corresponding domain  last three rows summarize number
solved instances  domain normalized measure solved instances  s  
number domains planners achieved superior performance  w  

limit    minute timeout  results evaluation summarized table   
detailed results refer reader tables       appendix  overall 
results show fork decomposition heuristics much competitive
ipc      domains well 

   formal analysis  asymptotic performance ratios
empirical evaluation concrete set benchmark tasks standard important
methodology assessing effectiveness heuristic estimates  allows us study
tradeoff accuracy heuristics complexity computing them 
however  rightfully noted helmert mattmuller         evaluations almost
never lead absolute statements type heuristic h well suited solving problems benchmark suite x  relative statements type heuristic h
expands fewer nodes heuristic h  benchmark suite x  moreover  one would probably obtain formal evidence effectiveness heuristic proceeding
implementation  especially complicated heuristic procedures underlying proofs theorems      formal analysis effectiveness
fork decomposition heuristics using methodology suggested exploited helmert
mattmuller motivated primarily desire formal evidence 
given planning domain heuristic h  helmert mattmuller        consider
asymptotic performance ratio h d  goal find value  h  d        

    states problems d  h s   h  d  h  s    o h  s   
    family problems  n  nn solvable  non goal states  sn  nn
sn n   limn h  sn       h sn    h  d  h  sn     o h  sn    
  

fiimplicit abstraction heuristics

domain

h 

hk

hpdb

hpdb
add

hf

hi

hfi

gripper
logistics
blocksworld
miconic strips
satellite

   
   
   
   
   

 
 
 
 
 

 
 
 
 
 

   
   
 
   
   

   
   
 
   
   

 
   
 
   
   

   
   
 
   
   

table    performance ratios multiple heuristics selected planning domains  ratios
h    hk   hpdb   hpdb
add helmert mattmuller        

words  h never worse    domain   h  plus sublinear term  
become bad  h  d  h  plus sublinear term  arbitrarily large inputs  note
existence uniqueness  h  d  guaranteed h d 
helmert mattmuller        study asymptotic performance ratio standard admissible heuristics set well known benchmark domains first four
ipcs  results gripper  logistics  blocksworld  miconic  satellite
shown first four columns table   
h  estimate corresponds optimal cost solving well known delete
relaxation original planning task  generally np hard compute  bylander        
hk   k n    family heuristics based relaxation cost
achieving partial assignment approximated highest cost achieving
sub assignment size k  haslum   geffner         computing hk exponential
k 
hpdb hpdb
add heuristics regular  maximized over  additive pattern
database heuristics size pattern assumed o log n  
n    v    and  importantly  choice patterns assumed optimal 
results provide us baseline evaluating fork decomposition heuristics
hi   hfi   first  however  theorem   shows three heuristics worth
analyzing alone strictly informative two  depending
planning task and or state evaluated  
hf  

theorem    undominance  uniform action cost partition  none heuristic
functions hf   hi   hfi dominates another 
proof  proof example two tasks        illustrate following
two cases  hf  i    hfi  i    hi  i  hf  i    hfi  i    hi  i   two tasks
defined set binary valued variables v    v    v    v    u    u    u    
initial state    v       v       v       u       u       u        goal
   theorem   formulated proven uniform action cost partition use throughout
paper  including experiments  per step optimal action cost partitions  katz   domshlak        
trivial show hfi dominates hf hi planning tasks 

  

fikatz   domshlak

a 

u 

u 

u 

v 

v 

v 

a 
a 
a 
a 
a 
a 
a 
a 
a 

h v       u       u       u         v      i
h v       u       u       u         v      i
h v       u       u       u         v    i
h u         u      i
h u         u      i
h u         u      i
h u         u      i
h u         u      i
h u         u      i

 a 

 
f

 


 


   
   
   
 
 
 
 
 
 

 
 
 
   
   
   
   
   
   

   
   
   
   
   
   
   
   
   

 c 

u 

u 

u 

v  v  v 

v  v  v 

v  v  v 

guf  

guf  

guf  

u  u  u 

u  u  u 

u  u  u 

v 

v 

v 

gvi  

gvi  

gvi  

a 
a 
a 
a 
a 
a 
a 
a 
a 
a 
a  
a  
a  

 b 

h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h v       u         v      i
h u         u      i
h u         u      i
h u         u      i

 
f

 


 


   
   
   
   
   
   
   
   
   
 
 
 

 
 
 
 
 
 
 
 
 
   
   
   

   
   
   
   
   
   
   
   
   
   
   
   

 d 

figure    illustrations proof theorem     a  causal graphs        b  fork
inverted fork subgraphs  same  causal graph      
action sets  c     d      well costs action representatives
abstract problem along subgraphs  considering example
first row table  c   action a    single representative
three fork abstractions  well representative inverted fork abstraction
 g   hence  cost representatives f decomposition     
v 

cost sole representative i decomposition   

g    v       v       v        difference     action sets  listed
figure  c d  actions unit cost actions  two tasks induce identical
causal graphs  depicted figure  a  hence  collections v forks v iforks
tasks identical  depicted figure  b  fractional costs tasks
action representatives corresponding abstract problems given figure  c d 
figure   shows optimal plans abstract problems f decompositions  f  
  g f    g f    g f    f     g f    g f    g f    i decompositions  i     g    g    g  
u 

u 

u 

u 

u 

u 

v 

v 

v 

 i     g    g    g    fi decompositions  fi    f  i  fi    f  i  
v 

v 

v 

last column tables captures estimates three heuristics initial
states       respectively  together  two cases show none forkdecomposition heuristic functions hf   hi   hfi dominates other  and  since
  

fiimplicit abstraction heuristics

h
hf

hi

h



task
 g f
u 
 g f
u 
 g f
u 
 g
v 
 g
v 
 g
v 
 g f
u 
 g f
u 
 g f
u 
 g
v 
 g
v 
 g
v

optimal plan

cost

ha    a    a    a 

 

ha    a    a    a 

 

ha    a    a    a 

 

ha 

 

ha    a    a 

   

ha    a    a 

   

ha    a    a    a 

 

ha    a    a    a 

 

ha    a    a    a 

 

ha 

   

ha    a    a 

   

ha    a    a 

   

h i 

h
hf

 

hi

    

    

h

 



task

optimal plan

 g f
u 
 g f
u 
 g f
u 
 g
v 
 g
v 
 g
v 
 g f
u 
 g f
u 
 g f
u 
 g
v 
 g
v 
 g
v

ha    a    a 

 

ha    a    a 

 

ha    a    a 

cost

h i 
 

 

ha     a 

   

ha     a 

   

ha     a 

   

ha    a    a 

   

ha    a    a 

   

ha    a    a 

   

ha     a 

   

ha     a 

   

ha     a 

   

 

    

 

 a 

 b 

figure    illustrations proof theorem    optimal plans abstract problems  a      hf  i    hfi  i    hi  i    b     
hf  i    hfi  i    hi  i  

variables binary valued  claim holds conjunction arbitrary variable
domain abstractions 

one conclusion theorem   worth studying asymptotic performance
ratios three heuristics  last three columns table   present results
hf   hi   hfi gripper  logistics  blocksworld  miconic  satellite
domains  studied performance ratios max hf   hi   hfi    five
domains appear identical hf    note ratio max
necessarily identical max ratios  thus analysis worthwhile   taking
conservative position  performance ratios fork decomposition heuristics
table   worst case sense
 i  neither optimize action cost partition  setting uniform rest
paper  eliminate clearly redundant abstractions 
 ii  use domain abstractions  up to  ternary valued abstract domains only 
domains fork roots abstracted using leave one out binary valued
domain decompositions eq     domains inverted fork sinks
abstracted using distance from initial value ternary valued domain decompositions
eq     
overall  results fork decomposition heuristics table   gratifying  first 
note performance ratios hk hpdb    every subgoal
set size k  for hk   size log n   for hpdb   reached number steps
depends k  respectively  log n    n  h  sn   grows linearly n
five domains  leaves us hpdb
add state of the art  tractable
  

fikatz   domshlak

and  admissible heuristic compare with  table   shows asymptotic performance
f
ratio hf heuristic least good hpdb
add five domains  h
 
pdb
superior hpdb
add miconic  getting quite close h   comparing hadd
fork decomposition heuristics  crucial recall ratios devised helmert
mattmuller hpdb
add respect optimal  manually selected set patterns 
contrast  selection variable subsets fork decomposition heuristics completely
nonparametric  thus requires tuning abstraction selection process 
rest section prove asymptotic performance ratios hf   hi  

h table   five domains  begin brief outline results
obtained  familiarity domains assumed  next  domain addressed
detail  provide informal domain description well sas  representation 
prove lower upper bounds ratios three heuristics 
gripper assuming n     balls moved one room another  three
heuristics hf   hi   hfi account required pickup drop actions 
o    portion move actions  however  former actions responsible    
optimal plan length    cost   now  basic uniform action cost partition 
hf   hi   hfi account whole  o   n       total pickup drop
actions cost  respectively  providing ratios table    
logistics optimal plan contains least many load unload actions move actions 
three heuristics hf   hi   hfi fully account former  providing lower bound
     instance three heuristics achieve exactly     consists two
trucks t    t    airplanes  one city  n packages initial goal
locations packages trucks pair wise different 
blocksworld arguments similar helmert mattmuller        hpdb
add  
miconic three heuristics fully account loads unload actions  addition  hf
accounts full cost move actions passengers initial locations 
half cost move actions  provides us lower
bounds          respectively  tightness     hi hfi shown
task consisting n passengers   n     floors  initial goal locations
pair wise different  tightness     hf shown task consisting n
passengers  n     floors  elevator passengers initially floor n     
passenger wishes get floor i 
satellite length optimal plan problem n images taken k
satellites moved end positions  n   k  three heuristics fully
account image taking actions one satellite moving action per satellite
above  providing lower bound      tightness     three heuristics
shown task follows  two satellites instruments  i li    i  l
i l    

respectively  l   n n  pair instruments  i  l   i  take images
modes  m    mi    set directions  dj  nj   set image objectives
   note slight modification uniform action cost partition results ratio    
three heuristics  optimizations  however  outside scope here 

  

fiimplicit abstraction heuristics

right

lef

robot

right
b 

b 



bn

   
f
gright

lef
bn

   

b 

right

robot
bn

b 

f
glef


 a 

   

robot

bn

f
grobot

lef

b
gbi   b balls

 b 

figure     grippers  a  causal graph  b  corresponding collection v forks
v iforks

 oi  ni   that    l  oi    d    mi   and  l   n  oi    di   m    
finally  calibration direction pair instruments  i  l   i  di  
    gripper
domain consists one robot robot two arms arms    right  lef t   two rooms
rooms    r   r    set balls n balls  robot pick ball arm
arm arms arm empty  release ball b balls arm arm arm currently
holds b  move one room another  balls robot initially room
r   arms empty  goal move balls room r   natural
description planning task sas  follows 


variables v    robot  arms balls domains
d robot    rooms

d lef t    d right    balls  empty 

b balls   d b    rooms  robot  

initial state    b   r    b balls   robot   r   right   empty  lef   empty  
goal g    b   r    b balls  
actions
  m ove r  r       r  r    rooms 

 

 p ickup b  arm  r   drop b  arm  r    b balls  arm arms  r rooms  

move robot  ove r  r      h robot   r    robot   r   i 

pickup ball 
p ickup b  arm  r    h b   r  arm   empty  robot   r    b   robot  arm   b i 

drop ball  drop b  arm  r    h b   robot  arm   b  robot   r    b   r  arm   empty i 

 parametric n  causal graph task depicted figure   a 
  

fikatz   domshlak

frobot

action
 

ove r  r  
p ickup b  arm  r 
drop b  arm  r 

farm empty

 
 
 

 
 
 

farm b

farm b 

 
 
 

 
 
 

farm   
 
 
 

ib
 
 
 

ib 
 
 
 

f





 

 
n
 
n  
 
n  

 
n  
 
 n  
 
 n  

 
 n  
 
 n  

table    number representatives original gripper action abstract task 
well partition action costs representatives
frobot

fright empty
fright b
fright b 
flef t 
ib
ib 

p ickup b  right  r     h robot   r   b   r     b   robot i
p ickup b  right  r      h right   empty    right   b i 
p ickup b  right  r      h right   b  b   r     b   robot i
p ickup b  right  r      h right   empty    right   b i 
p ickup b  right  r      h right   b  b   r     b   robot i
p ickup b  right  r     h right   b  b   r     b   robot i
p ickup b  right  r     h right   b  b   r     b   robot i
p ickup b  right  r      h right   empty    right   b i 
p ickup b  right  r      h right   b  robot   r   b   r     b   robot i
p ickup b  right  r     h right   empty    right   b i

table    sets representatives original action p ickup b  right  r   abstract
tasks

      fork decomposition
since variables robot  right  lef goal value  collection v forks
v iforks figure   b  domains inverted fork sinks ternary valued 
domains fork roots abstracted eq      leave one out   thus
f    frobot    fright    flef t     empty  balls  
   ib   b balls  

   frobot    fright    flef t     empty  balls   ib   b balls  
original action  number representatives abstract task  well
cost assigned representative  listed table    table   illustrates derivation numbers via decomposition example action p ickup b  right  r  
fork decomposition abstractions  action one nonredundant representative
frobot   two representatives fright empty fright b   one representative
fright b  b  balls    b   one representative flef t  balls  empty  
two representatives ib   one representative ib  b  balls    b  
 
 
results cost  n  
representative f   n  
representative  
 
 n   representative  
given that  optimal plans abstract tasks follows 
  

fiimplicit abstraction heuristics

h

task
frobot

hf

fright 
flef t 

hi

ib
frobot

hfi

fright 
flef t 
ib

optimal plan
hp ickup b    right  r            p ickup bn   right  r   
  ove r   r    drop b    right  r            drop bn   right  r  i
hp ickup b    lef t  r            p ickup bn   lef t  r   
  drop b    lef t  r            drop bn   lef t  r  i
hp ickup b    right  r            p ickup bn   right  r   
  drop b    right  r            drop bn   right  r  i
hp ickup b  right  r      p ickup b  right  r      ove r   r    drop b  lef t  r   
hp ickup b    right  r            p ickup bn   right  r    ove r   r   
  drop b    right  r            drop bn   right  r  i
hp ickup b    lef t  r            p ickup bn   lef t  r   
  drop b    lef t  r            drop bn   lef t  r  i
hp ickup b    right  r            p ickup bn   right  r   
  drop b    right  r            drop bn   right  r  i
hp ickup b  right  r      p ickup b  right  r      ove r   r    drop b  lef t  r   

cost

 

 n  
 n  

 

 n
 n  

n  

 n
 n  

n  

 
 
  n
n  
 
 n  
 n  
n  

n

 n
 n  

n  

 n
 n  

n  

 
 n  

 
  n  

h i 

 n  n 
 n  

 n  
n  

 
 n
 

   n  
 n  

n

assuming n     balls moved one room another  cost optimal
plan original task  n   n even   n n odd  therefore 
asymptotic performance ratios heuristics hf   hi   hfi gripper             
respectively 
    logistics
logistics task consists k cities  x airplanes  trucks n packages 
city associated set li    li          lii   locations within city  union

locations cities denoted l   ki   li   addition  precisely one location
city airport  set airports la    l           lk    l  truck
move within city located  airplanes fly airports 
airplanes denoted u    u            ux    trucks    t            ty   
packages p    p            pn    let ti    t   i t  li   denote trucks city i 
p   p  p  p  p  p  denote partition packages follows 
package p     p p   i p   g p  la   initially airport
needs moved another airport 
package p     p p   i p  la li   g p  lj   la      j  initially
airport needs moved non airport location another city 
package p     p p   i p  li   g p  li   needs moved within one
city 
package p     p p   i p  li   la   g p  la   li   needs moved
non airport location one city airport city 
package p     p p   i p  li   la   g p  lj   la      j  needs moved
non airport location one city non airport location another city 
natural logistics task description sas  follows 
variables v   u p domains
u u   d u    la  

  k  ti   d t    li  

p p   d p    l u t 
  

fikatz   domshlak

u  ux

t 

ty

u
p       

p 

pi pn
 a 

u        ux


pn

guf   u u

p       

pn

gtf  
 b 

t        ty
p

gpi   p p

figure     logisticss  a  causal graph  b  corresponding collection v forks
v iforks

initial state  la  x l  lk  l n  
goal g    p    l            pn   ln    l n  
actions
a 

k    
 

i   lli tti



   
lla uu


 lt p  t  l   u t p  t  l    p p    m t t  l  l       l  li    l  


 la p  u  l   u a p  u  l    p p    m a u  l  l      l  la    l    


load package p onto truck location l  lt p  t  l    h p   l    l    p   t i 
unload package p truck location l  u t p  t  l    h p   t    l    p   l i 
move truck location l location l    t t  l  l      h t   l    t   l   i 
load package p onto airplane u l  la p  u  l    h p   l  u   l    p   u i 
unload package p airplane u l  u a p  u  l    h p   u  u   l    p   l i 
move airplane u location l l    a u  l  l      h u   l    u   l   i 
 parametrized n  x  y  causal graph logistics tasks depicted figure   a 
      fork decomposition
since variables u u goal value  collection v forks viforks figure   b  domains inverted fork sinks abstracted
eq      distance from initial value   domains fork roots abstracted
  

fiimplicit abstraction heuristics

fu l fu l  fu l   fu   l ft l ft l  ft l   ft   l ip m f

action
 

t t  l  l  
a u  l  l   

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 
 
 

 
 

 
 
ni   ni
 
 
ni   ni

 a 
i p  la li
i p  li   la
p p  p p  p p  p p  p p 
p p 
fu l ft l ip   m ip   ip   ip   ip   ip   ip   ip   ip   ip   ip   f

action
l li
l lj
la p  u  l   u a p  u  l 

lt p  t  l   u t p  t  l 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
nf
 
nf
 
nf

 
 
 

 
nf   
 
nf   
 
nf   

 b 
figure     number representatives original logistics action abstract
task  well partition action costs representatives 
tables  a   b  capture move load unload actions  respectively

eq      leave one out   thus 
f  

   
uu lla

 

 

 fu l  

 

 

k    
 
i   tti lli

 ip    
 ip    
pp
pp  p  p 
   
uu lla

 fu l  



 ft l   

 
pp 

k    
 
i   tti lli

 ip     

 ft l  

 
pp

 ip    

 

 ip    

pp  p  p 

 
pp 

 ip     

p
total number forks nf    f      u    la     ki    ti    li    total number
inverted forks ni    i      p         p       p         p         p     action
a  number representatives abstract task  well cost assigned
representative  given figure     row tables figure   
corresponds certain logistics action  column  except last three  represents
abstract task  entry captures number representatives action
corresponding task  last three columns show portion total cost
given action representative task  three heuristics question 
      lower bound
note optimal plan logistics task contains least many load unload
actions move actions  thus  following lemma provides us lower bound
    three heuristics question 

  

fikatz   domshlak

lemma   logistics task  hf   hi   hfi account full cost load unload
actions required optimal plan task 
proof  logistics task  optimal plans task contain amount
load unload actions package p p follows 

p p   

  actions one load onto airplane  one unload airplane 

p p      actions one load onto airplane  one unload airplane  one load
onto truck  one unload truck 
p p   

  actions one load onto truck  one unload truck 

p p      actions one load onto truck  one unload truck  one load onto
airplane  one unload airplane 
p p      actions two loads onto trucks  two unloads trucks  one load
onto airplane  one unload airplane 
consider fork decomposition f   optimal plan abstract tasks
contain number load unload actions exactly  the effects actions
remain unchanged tasks   cost representative load unload
action n f   nf abstract tasks  therefore  heuristic hf fully accounts
cost required load unload actions 
consider fork decomposition   domain decomposition
index abstraction  optimal plan abstract task ip m include one load
one unload actions follows 
p p   

one load onto airplane one unload airplane 

p p        

one load onto airplane one unload airplane 

p p        

one load onto truck one unload truck 

p p   

one load onto truck one unload truck 

p p        

one load onto truck one unload truck 

p p        

one load onto airplane  one unload airplane 

p p        

one load onto truck one unload truck 

p p        

one load onto airplane one unload airplane 

p p        

one load onto truck one unload truck 

cost representative load unload actions    thus heuristic hi fully
accounts cost required load unload actions 
finally  consider fork decomposition   optimal plan forkstructured abstract tasks contain number load unload actions f  
cost representative load unload actions nf    nf abstract
tasks  addition  load unload actions appear exactly one inverted
fork structured abstract task  therefore heuristic hfi fully accounts cost
required load unload actions 

  

fiimplicit abstraction heuristics

t 
p 

t 

   

pn

p 

gtf 

t 

   

t 

pn

p
gpi   p p

gtf 

figure     collection v forks v iforks logistics task used proof
upper bound    

      upper bound
instance three heuristics achieve exactly     consists two trucks t    t   
airplanes  one city  n packages initial goal locations packages
pairwise different  trucks initially located yet another location 
 
formally  l    li   n
i        t    t     sas encoding logistics task
follows 
variables v    t    t    p            pn   domains
  d t    l 

p p   d p    l t 
initial state    t    l    t    l    p    l            pn   ln   
goal g    p    ln             pn   l n   
actions    lt p  t  l   u t p  t  l    l l  t  p p    m t t  l  l      t   l  l   
l  
collection v forks v iforks task depicted figure     domains
inverted fork sinks abstracted eq      distance from initial value  
domains fork roots abstracted eq      leave one out   therefore

f    ft   l ft   l   l l  
   ip     p p   

   ft   l ft   l   l l   ip     p p   
total number forks thus nf    n     total number inverted forks
ni   n  partition action costs logistics tasks described figure    
p   p  thus action cost partition follows 
ft l

action
 

t t  l  l  
lt p  t  l 
u t p  t  l 

 
 
 

ft l 
 
 
 

ft l  
 
 
 

ft   l
 
 
 

  

ip  
 
 
 

ip    

f





 
 
 

 
 
 
 n  
 
 n  

 
n

 
n  
 
 n  
 
 n  

 
 

fikatz   domshlak

given that  optimal plans abstract task
h

task

hf

ft   l
ft   l
ipi   
ft   l
ft   l
ipi   

hi
hfi

optimal plan
hlt p    t    l             lt pn   t    ln    u t p    t    ln              u t pn   t    l n  i
hlt p    t    l             lt pn   t    ln    u t p    t    ln              u t pn   t    l n  i
hm t t    l    li    lt pi   t    li    t t    li   ln i    u t pi   t    ln i  i
hlt p    t    l             lt pn   t    ln    u t p    t    ln              u t pn   t    l n  i
hlt p    t    l             lt pn   t    ln    u t p    t    ln              u t pn   t    l n  i
hm t t    l    li    lt pi   t    li    t t    li   ln i    u t pi   t    ln i  i

cost

 

 n
 n  
 n
 n  
 
  
n
 n
 n  
 n
 n  

 n    
 n    
n
 n    
 n    
n

 
n  

 

 
 n  

h i 
 n
 n    
 n  

 n
n  

optimal plan original task  e g   hm t t    l    l     lt p    t    l     t t    l    l     lt p    t    l    
t t    l    l             lt pn   t    ln    t t    ln   ln      u t p    t    ln      t t    ln     ln      u t p    t    ln     
t t    ln     ln              u t pn   t    l n  i 

cost  n  providing us upper bound
    three heuristics  putting lower upper bounds together  asymptotic
ratio three heuristics question     
    blocksworld
blocksworld task consists table table  crane c  n     blocks b  
 b            bn      block either table  top block 
held crane  crane pick block currently holds nothing 
block block top it  crane drop held block table
top block 
consider blocksworld task follows  blocks initially form tower
b            bn   bn   bn   table  goal move form
tower b            bn    bn     bn bn table  is  goal swap
lowest two blocks tower  natural description task sas  follows 
variables v    b  clearb   b b   c  domains
d c     empty  b 

b b   d b     table  c  b    b  
d clearb      yes  no  

initial state
   c   empty  bn     table  clearb    yes 
 
 bi   bi       n 

 

 clearb     b b    b      
goal g    bn   table  bn     bn   bn    bn      bi   bi       n    
actions    pt  b   dt  b    b b   p  b  b     d b  b       b  b    b 
pick block b table  pt  b    h c   empty  b   table  clearb   yes    cb  b   c i 
pick block b block b   
p  b  b      h c   empty  b   b    clearb   yes  clearb    no    c   b  b   c  clearb    yes i 
  

fiimplicit abstraction heuristics

c

clearb        clearbn  

c
b
gbi   b  bn    bn   bn    

clearb 

clearb

c
b 

b

bn 

bn

clearb
bn  

bn 

gcf
 a 

bn

bn  

f
gclear
 b b
b

 b 

figure      a  causal graph  b  corresponding collection v forks v iforks
blocksworld task used proof

drop block b table  dt  b    h c   b  b   c    c   empty  b   table i 
drop block b block b   
d b  b      h c   b  b   c  clearb    yes    c   empty  b   b    clearb    no i 

schematic version causal graph task depicted figure   a  since
variables bn    bn   bn   goal values different values initial
state  collection v forks v iforks figure   b   leave one out 
eq      domain abstraction variable c  c fork gcf breaks n     abstract
tasks  sinks v iforks gbi n    gbi n   gbi n   go process domain
decomposition  distance from initial value  eq       however  due structure
domain transition graphs block variables  domain decomposition results
single abstract task v iforks  thus
f   fc empty    fc b   b b   fclearb   b b  
  ibn       ibn      ibn        

  fc empty    fc b   b b   fclearb   b b  ibn       ibn      ibn        
technically straightforward verify that  abstract task f      
exists plan  i  involves representatives actions
 p  bn    bn    dt  bn     p  bn   bn      dt  bn    pt  bn      d bn     bn    pt  bn     d bn    bn       
    
 ii  involves representative original action once  even together
plans account total cost eight actions eq      total cost
plans  and thus estimates three heuristics  upper bounded   
optimal plan original task  e g   hp  b    b     dt  b     p  b    b     dt  b             p  bn   bn      dt  bn   
pt  bn      d bn     bn    pt  bn     d bn    bn      pt  bn     d bn    bn             pt  b     d b    b   i  cost
  

fikatz   domshlak

e

p 



e
p 

pn

gef

 a 

e
pn

 b 

p
gpi   p p

figure     miconics  a  causal graph  b  corresponding collection v forks
v iforks

 n  hence  asymptotic performance ratio three heuristics blocksworld
domain   
    miconic
miconic task consists one elevator e  set floors f   passengers p  
elevator move  f   floors floor load and or unload passengers 
natural sas  description miconic task follows 
variables v    e  p domains
d e    f 

p p   d p    f  e  
initial state    e   fe    p   fp   p p    f   p      
goal g    p   fp    p p    f   p    
actions    in p  f    out p  f     f f  p p    m ove f  f        f  f     f   
load passenger p e floor f   in p  f     h e   f  p   f     p   e i 
unload passenger p e floor f   out p  f     h e   f  p   e    p   f  i 
move elevator floor f floor f     ove f  f       h e   f     e   f    i 
 parametrized n  causal graph miconic tasks depicted figure   a 
figure   b depicts corresponding collection v forks v iforks  domains
inverted fork sinks abstracted eq      distance from initial value  
domains fork roots abstracted eq      leave one out   thus 
f    fe f   f f   
   ip     p p   

   fe f   f f    ip     p p   
total number fork structured abstract tasks thus nf    f      f  
total number inverted fork structured abstract tasks ni    i      p   
action a  number representatives abstract task  well cost
assigned representative  given table   
  

fiimplicit abstraction heuristics

action
ove f  f    
in p  f  
in p    f  
out p  f  
out p    f  

fe f fe f   fe f    ip   ip     f
 
 
 
 
 

 
 
 
 
 

 
 
 
 
 

 
 
 
 
 

 
 
 
 
 

 
 
 
nf
 
nf
 
nf
 
nf

 
 
ni   ni
  nf   
  nf   
  nf   
  nf   

table    number representatives original miconic action abstract task 
well partition action costs among representatives

      lower bounds
first  miconic special case logistics domain  lemma   applies analogously  package p  corresponding passenger  thus  p p  
three heuristics account full cost load unload actions required optimal
plan task 
let us focus abstract tasks f    fe f   f f    recall task fe f
induced e fork and  terms domain decomposition  distinguishes
floor f somewhere else  without loss generality  set floors f
restricted initial goal values variables  optimal
plan move elevator floor f neither initial goal location
passenger elevator  let    i p    p p   fg    g p    p p    costs
optimal plans abstract task fe f follows 
f fg   let p  p  p pair passengers initial goal locations f  
respectively  is  i p    g p      f   f   i e   plan fe f move
elevator f order load passenger p    move elevator back
f order unload passenger p    therefore cost plan fe f
 
least   p
 f         see last three columns table    first component
summation comes summing costs representatives load unload
actions passengers  second component sum costs
representatives two respective move actions  similarly  f    i e  
plan fe f move elevator f order load passenger p 
move elevator f order unload p  therefore  well  cost
 
plan fe f least   p
 f       

f   fg   let p p passenger initially f   is  i p    f   f   i e  
plan fe f move elevator f order unload p  thus
cost plan fe f least

  p  
 f  

       otherwise  f    i e   plan

fe f move elevator f order load p  move elevator
f order unload p  hence  case  cost plan fe f
least

  p  
 f  

    
  

fikatz   domshlak

f fg     let p p passenger must arrive floor f   is  g p    f  
f   i e   plan fe f move elevator f order load p 
move elevator back f order unload p  hence  well 
 
cost plan fe f least   p
 f        otherwise  f    i e   plan

fe f move elevator f order unload p  thus cost plan

fe f least

  p  
 f  

      

f   fg   f   i e   plan fe f include move f order

 
 
load unload passengers  thus cost plan fe f least   p
 f        
otherwise  f    i e   elevator initially set locations 
 
thus cost plan fe f least   p
 f    

putting case by case analysis together 

 fg  fi  

 
i e  fg
  p      fi fg      fi   fg    
 


  p      f f      f   f            fg  fi     i e  f   f

g

g

g
 
 
 
hf  i 
 fg  fi   

  p
 
 
 f

f
 
 
 f
 
f
 
 
 
 
 
i e 

f
 
f

g

g
g


 


  p      f f      f   f      fg  fi         
i e    fg

g

g
 
 

note value second case lowest  gives us lower bound hf
estimate eq     
 fg    
 
   fi fg    
    
 
 
now  let us provide upper bound length    cost  optimal plan
miconic task  first  let p   p denote set passengers initial goal
locations fg   let m p     fg   denote length optimal traversal
floors fg that  passenger p p     visit i p  comes visit
g p   given that  case by case basis   not necessarily optimal  plan miconic
task hand follows 
hf  i    p      fi   fg    

i e  fg   collect passengers i e  any  traverse floors
  fg collect passengers floors  move elevator first
floor f optimal path traversing floors fg   drop passengers
whose destination f   collect new passengers any  keep moving along
collecting dropping passengers initial target floors 
traverse fg     dropping remaining passengers destinations 
cost plan  and thus optimal plan  upper bounded eq    
below 
h  i    p      fi   fg     m p     fg      fg     
    
i e    fg   collect passengers i e  any  traverse floors
  fg collect passengers floors making sure traversal
ends first floor f optimal path traversing floors fg  
follow collecting dropping passengers initial target floors 
traverse fg     dropping remaining passengers destinations 
first case  cost plan upper bounded eq     
   

fiimplicit abstraction heuristics

i e      traverse floors   fg collect passengers floors 
move along optimal path traversing floors fg collecting
dropping passengers initial target floors  traverse floors
fg     dropping remaining passengers destinations  well 
cost plan upper bounded expression eq     
lemma   miconic task passengers p  

hf  i 
h  i 



  p   
  p    

proof  recall p   p set passengers initial goal locations
fg   first give two upper bounds length optimal traversal
floors fg that  passenger p p     visit i p  comes visit
g p   theorem       helmert       
m p     fg      fi fg      g     

    

 g     size minimum feedback vertex set directed graph g    
 v     e      v     fg e   containing arc f f   passenger
p p   initially floor f arrive floor f    
note  g     trivially bounded number graph nodes v     addition 
observe that  order nodes v     arcs e   partitioned forward
 
backward arcs  one subsets must contain  e    arcs  removing
g   nodes origins arcs smaller subset e   results
directed acyclic graph  hence  set removed nodes  not necessarily minimum 
 
feedback vertex set g     size set larger  e      putting two
bounds  g     together eq     obtain


 p    
 
m p   fg   min   fi fg     fi fg    
 
    
 
disjointness fg   fg   fact goal
passengers p      fg      p    p      eqs       
  p      fi   fg      fg  fi      fi fg     
hf

 
h
  p      fi   fg      fg       m p     fg  

    

f

interested lower bound ratio hh   right hand side
inequality minimized  thus safely set  fi   fg        fg      
 p    p      obtaining
 

 
  p      p   p
   fi fg     
hf
  p    p         fi fg    
 

 
 
h
  p      p    p       m p     fg  
  p     p        m p     fg  

    

let us examine right most expression eq     respect two upper bounds
m p     fg   eq     

minimum obtained   fi fg    m p     fg     fi fg  
 
 fi fg      p      last inequality reformulated
  fi fg    p       
   

fikatz   domshlak

allows us provide lower bound right most expression eq     
f
thus hh
hf
  p    p         fi fg    
  p        fi fg    p       
  p    



 
h
  p     p        m p     fg  
  p         fi fg    p     
  p  
    
 

 

minimum obtained  fi fg     p      m p     fg    fi fg     p     
  fi fg    last inequality reformulated
  fi fg    p         
allows us provide lower bound

hf
h

via eq    

  p    p         fi fg    
  p        fi fg    p       
  p    
hf



 

 
 
 
h
  p     p      m p   fg  
  p        fi fg    p   
  p  
    
note lower bounds
lemma 

hf
h

eq     eq     required claim


      upper bounds
miconic task heuristic hf achieves performance ratio exactly    
consists elevator e  floors f    fi  ni     passengers p    pi  ni     passengers
elevator initially f    target floors passengers pairwise
disjoint  sas  encoding miconic task follows 
variables v    e  p domains d e    f p p   d p    f  e  
initial state    e   f    p    f            pn   f    
goal g    p    f            pn   fn   
actions    in p  f    out p  f     f f  p p    m ove f  f        f  f     f   
causal graph task corresponding collection v forks  consisting
one e fork  depicted figure     domain e abstracted eq    
 leave one out   providing us
f    fe f    fe f            fe fn   
costs action representatives abstract tasks given table  
nf   n      optimal plans abstract tasks f
task optimal plan
fe f 
fe f 
fe fn

cost

hin p    f             in pn   f     ove f    f     out p    f             out pn   fn  i
hin p    f             in pn   f     out p    f             out pn   fn    ove f    f     out p    f   i
hin p    f             in pn   f     out p    f             out pn    fn     ove f    fn    out pn   fn  i

   

 
 
 
 
 
 

 
 
 

 n
n  
 n
n  
 n
n  

 

hf  i 

n  

 n  
 

fiimplicit abstraction heuristics

optimal plan original task  hin p    f             in pn   f     ove f    f     out p    f    
cost  n  providing us
f
upper bound     h heuristic miconic  putting upper bound together
previously obtained lower bound      conclude asymptotic performance
ratio hf miconic     
miconic task heuristics hi hfi achieve exactly     consists
n
elevator e  floors f    fi   n
i     passengers p    pi  i     initial target floors
passengers elevator pairwise disjoint  task description sas 
follows 
ove f    f     out p    f     ove f    f             out pn   fn  i 

variables v    e  p domains d e    f p p   d p    f  e  
initial state    e   f    p    f            pn   fn   
goal g    p    fn             pn   f n   
actions    in p  f    out p  f     f f  p p    m ove f  f        f  f     f   
causal graph task corresponding collection v forks v iforks
depicted figure     domains inverted fork sinks abstracted eq    
 distance from initial value   domains fork roots abstracted
eq      leave one out   provides us
   ip               ipn      

   fe f    fe f            fe fn   fe fn             fe f n   ip               ipn      
costs action representatives abstract tasks given table  
nf    n     ni   n  optimal plans abstract tasks
h

task

optimal plan

hi

ipi   
fe f 

hm ove f       in pi      ove fi   fn i    out pi   fn i  i
hm ove f    f     in p    f             in pn   fn   
out p    fn              out pn   f n  i
hm ove f    f     in p    f     ove f    f     in p    f             in pn   fn   
out p    fn              out pn   f n  i
hm ove f    fn    in pn   fn    ove fn   f    
in p    f             in pn    fn     out p    fn              out pn   f n  i
hin p    f             in pn   fn    out p    fn              out pn   f n   
ove f    fn      out p    fn    i
hin p    f             in pn   fn    out p    fn              out pn    f n    
ove f    f n    out pn   f n  i
hm ove f       in pi      ove fi   fn i    out pi   fn i  i

hfi

fe f 
fe fn
fe f

n  

fe f n
ipi   

cost

 

h i 

n
 

 n    

 
n  

  
 n
   n  

 
n  

 

 n
 n  

n

 
n  

 

 n
 n  

 
n  

 

 n
 n  

 
n  

 

 n
 n  

 
n  

 

 
 n  

 
n

 n  

 n  
n  

n

n

optimal plan original task  hm ove f    f     in p    f     ove f    f     in p    f    
ove f    f             in pn   fn    ove fn   fn      out p    fn      ove fn     fn      out p    fn     
ove fn     fn              out pn   f n  i  cost  n  providing us upper bound
    hi hfi heuristics miconic  putting upper bound together
previously obtained lower bound      conclude asymptotic performance ratio
hi hfi miconic     

   

fikatz   domshlak

    satellite
satellite domain quite complex  satellite tasks
consists satellites s 
finite set instruments onboard    ss   set image
modes m  mode m  set im instruments supporting
mode m  likewise  set directions l  image objectives lm  functions
cal     l  p      l  p   s    l s  s  cal calibration target
direction function  p  initial direction function  p goal pointing direction
function 
let us denote oi    o    d sm    im   subset images
taken instrument i  os   iis oi subset images taken
instruments satellite s  sm    s   im      subset satellites
take images mode m  problem description sas  follows 
variables v    oni   ci   i  domains
  d s    l 

  d oni     d ci            
  d o           

initial state    s   p   s    s   oni      ci       i   o       o  
goal g    s   p  s    s     o       o  
actions
 

a 
 t urn s  d  d       d  d    l   swon i  s   cal i  s   swof f  i     
ss

 t akeim o  d  s  i       d  m  o  sm   im   

turn satellite  urn s  d  d      h s   d    s   d   i 

power instrument  swon i  s    h oni        i      oni     i 
power instrument  swof f  i    h oni        oni      ci     i 

calibrate instrument  cal i  s    h ci      oni        cal i     ci     i 
take image  akeim o  d  s  i    h o      ci        d    o     i 

      fork decomposition
causal graph example satellite task representative subset collection
v forks v iforks depicted figure     since variables  oni   ci   i s  s 
goal value  collection v forks v iforks follows general
case 
satellite s  s fork leaves os  
   

fiimplicit abstraction heuristics

o 

o 

o 

o 

s 

c 

s 

s 

c 

c 

c 

on 

on 

on 

on 

c 

c 

o 

c 

o 

c 
o 

gsf  
s 

o 

c 
o 

f
gc
 
s 

c 

c 
o 

f
gc
 
c 

o 
f
gc
 

c 

on 
o 
on 

on 

 a 

goi  
 b 

figure     satellite example task  a  causal graph  b  representative subset
collection v forks v iforks

instrument i  ci  fork leaves oi  
image objective    d  m  o  o ifork parents  ci   im  sm  
root domains forks rooted instruments inverted fork sinks
binary first place  root domains forks rooted satellites
abstracted eq      leave one out   provides us
f    fs d   s  l   fci   i  
   io   o  

   fs d   s  l   fci   i   io   o  
total number forks thus nf    s   l     i  total number inverted
forks ni    o   action a  number representatives abstract
task  well cost assigned representative  given figure    
      lower bounds
first  note optimal plan satellite task contains   actions per image
objective one action per satellite s  i s     g s   show
three heuristics fully account cost least one action per image
objective one action per satellite  provide us lower
bound     asymptotic performance ratios three heuristics 
lemma   satellite task  hf   hi   hfi fully account cost least
one take image action akeim o  d  s  i  image objective o 
proof  image objective    d  m  o  actions akeim o  d  s  i    h o  
   ci        d    o     i appear optimal plans  sm    l  fork abstract tasks rooted
   

fikatz   domshlak

fs d

action
 

urn s  d   
swon i  s 
cal i  s 
swof f  i 

 
 
 
 

fs d 
 
 
 
 

fs d  

fs   d

 
 
 
 

 
 
 
 

fci
 
 
 
 

fci 
 
 
 
 

oi os   oi   os
io
io
io
f
 
 
 
 

 
 
 
 

 
 

 
 
 
 

 
 
 

 
 o  


 
 o    

 

 

 
 oi  
 
 oi  

 
 oi    
 
 oi    

 a 

action
akeim o  d  s  i  
   d  m 

s  sm s    sm i  im i    im
fs   d 
fs   d 
fci 
fci 
io io 
 

 

 

 

 

 

f





 
 sm   l   im  

 

 
 sm   l   im    

 b 
figure     number representatives original satellite action abstract
task  well partition action costs representatives 
table  a  shows turn  switch on  switch off  calibrate actions 
table  b  shows take image actions

satellites   im   fork abstract tasks rooted instrument calibration status variables ci  
one inverted fork abstract task sink o  together costs action
representatives abstract problems  see figure     
hf   cost representative
tasks 

 
 sm   l   im  

 sm    l     im   fork abstract

hi   cost representative   one inverted fork abstract task 
hfi   cost representative
tasks 

 
 sm   l   im    

 sm    l     im       abstract

therefore  o  cost one akeim o  d  s  i  action fully accounted
three heuristics 

lemma   satellite task  hf   hi   hfi fully account cost least
one turn action urn s  d  d    s  i s     g s  
proof  s  satellite i s     g s   action urn s  i s   d    appear
optimal plan fs i s    action urn s  d  g s   appear optimal plan
fs g s    os   action urn s  d  g s   appear optimal plan
io   together costs action representatives abstract problems  see
figure    
hf   cost representative

 
 

  fork abstract tasks 
   

fiimplicit abstraction heuristics

hi   cost representative
hfi   cost representative

 
 os  

 os   inverted fork abstract tasks 

 
 os    

 os       abstract tasks 

therefore  s  i s     g s   cost one urn s  d  d    action
fully accounted three heuristics 

h
h

together  lemmas     imply that  h  hf   hi   hfi    satellite
    

      upper bound
satellite task three heuristics achieve ratio exactly     consists
two identical satellites    s  s    l instruments each    is                l   l  
            l   instruments  i  l i  two modes each  m  mi   set
n     directions l    di   d            dn   set n image objectives    o               oi  
 di   mi     l oi    di   m    l   n  calibration direction
instruments  i  l   i  di   sas  encoding planning task follows 
variables v    oni   ci   i  
initial state    s   di   s   oni      ci       i   o       o  
goal g    o       o  
actions
 

a 
 t urn s  d  d       d  d    l   swon i  s   cal i  s   swof f  i     
ss


 
ss

 t akeim  di   mi    di   s  i     

n
 


 t akeim  dj   m     dj   s  i       

j l  

causal graph task depicted figure   a  state variables  oni   ci  
i  goal value  thus collection v forks v iforks task
figure   b  domains inverted fork sinks binary  domains
fork roots abstracted eq      leave one out   provides us
f    fs d   fs   d   l   fci   i  
   io   o  

   fs d   fs   d   l   fci   i   io   o  
total number forks task nf    n    l     total number inverted
forks ni   n  costs action representatives abstract task given
 
figure      os      os      o    n   oi     n l       sm         im       l   imi       
 l    n     
optimal plans per abstract task depicted table    optimal plan
original problem  hswon    s   urn s  di   d     cal    s   urn s  d    di    akeim o    di   s     
   

fikatz   domshlak

s 


o 

c 

ok

oi

cl  

cl

ci

ol  



s 

o       

o       

gsf

gsf  

cl i

c l


oni

on 

ci



s 

ci

oi

ol        
f
gc
 i




cl i

s 

c        c l

onl i

onl

onl  

on l

oi

oi

goi     l

goi   l   n

 a 

 b 

figure      a  causal graph  b  corresponding collection v forks v iforks
satellite task used proof upper bound    

h

hf

hi

hfi

task

optimal plan

cost

ht akeim o    di   s    l             akeim ol   di   s     l  
fs d
akeim ol     dl     s     l           akeim on   dn   s     l i
ht akeim o    di   s              akeim ol   di   s  l  
f
s   d
akeim ol     dl     s  l           akeim on   dn   s  l i
ht akeim oi   di   s    l   i  
f
ci  
akeim ol     dl     s     l           akeim on   dn   s     l i
ht akeim oi   di   s  i  
fci   is 
akeim ol     dl     s  l           akeim on   dn   s  l i
ioj     j l ht urn s  di   dj    cal j  s   urn s  dj   di    akeim oj   di   s  j i
ioj   l   j n ht urn s  di   d     cal    s   urn s  d    dj    akeim oj   di   s    i
ht akeim o    di   s    l               akeim ol   di   s     l  
fs d
akeim ol     dl     s     l           akeim on   dn   s     l i
ht akeim o    di   s              akeim ol   di   s  l  
f
s   d
akeim ol     dl     s  l           akeim on   dn   s  l i
ht akeim oi   di   s    l   i  
f
ci  
akeim ol     dl     s     l           akeim on   dn   s     l i
ht akeim oi   di   s  i  
fci   is 
akeim ol     dl     s  l           akeim on   dn   s  l i
ioj     j l ht urn s  di   dj    cal j  s   urn s  dj   di    akeim oj   di   s  j i
ioj   l   j n ht urn s  di   d     cal    s   urn s  d    dj    akeim oj   di   s    i

 

l
 n  

 

nl
 n  l  

n  

l
 n  

 

nl
 n  l  

n  

 
 n  

 

nl
 n  l  

l

nl
 
   n  l  
 n  
 
 
  nl  
  
n
 
 
 
  
n
nl  

l
l
nl

h i 

n

l
 n  

 

nl
 n  l  

n  

l
 n  

 

nl
 n  l  

n  

 
 n  

 

nl
 n  l  

l

nl
 
   n  l  
 n  
 
 
  nl    
n  
 
 n  
 
 
  nl  
 
n  
 
 n  l  

l

n     
n
nl  

n 

l

 n
n  

 

n
nl  

nl

table    optimal plans abstract tasks overall heuristic estimates
satellite task used proof upper bound    

swof f            swon l    s   urn s  di   dl     cal l    s   urn s  dl    di    akeim ol    di   s  l    
swof f  l     swon l  s   urn s  di   dl    cal l  s   urn s  dl   di    akeim ol   di   s  l   urn s  di   dl     
akeim ol     dl     s  l           urn s  dn    dn    akeim on   dn   s  l i 

   

cost  l    n   

fiimplicit abstraction heuristics


l   n n  provides us asymptotic performance ratio     three
heuristics 

    summary
considered heuristic search cost optimal planning introduced domain independent
framework devising admissible heuristics using additive implicit abstractions 
implicit abstraction corresponds abstracting planning task hand instance
tractable fragment optimal planning  key motivation investigation escape restriction explicit abstractions  pattern database merge and shrink
abstractions  abstract spaces fixed size  presented concrete scheme additive
implicit abstractions decomposing planning task along causal graph suggested
concrete realization idea  called fork decomposition  based two novel fragments tractable cost optimal planning  studied induced admissible heuristics
formally empirically  showed favorably compete informativeness
state of the art admissible heuristics theory practice  empirical
evaluation stressed tradeoff accuracy heuristics runtime complexity computing them  alleviate problem expensive per search node runtime
complexity fork decomposition heuristics  showed equivalent explicit
abstractions notion database exists fork decomposition abstractions 
despite exponential size abstract spaces  subsequent empirical evaluation
heuristic search databases fork decomposition heuristics showed
favorably competes state art cost optimal planning 
basic principles implicit abstraction framework motivate research
numerous directions  importantly  i  discovering new islands tractability
optimal planning   ii  abstracting general planning tasks islands  likewise  promise combining implicit abstractions techniques deriving admissible heuristic estimates  first step towards combining implicit abstractions
polynomial time discoverable landmarks planning tasks recently taken
domshlak  katz  lefler         believe various combinations techniques might well improve informativeness heuristics  without substantially increasing runtime complexity 

acknowledgments
work authors partly supported israel science foundation grants       
        

   

fikatz   domshlak

appendix a  detailed results empirical evaluation
hf
task

hi

h nodes time nodes

hfi
time nodes

time

ms    

ms    

nodes

nodes

time

hspf

time

nodes

 
    
  
    
  
    
  
    
  
    
  
    
  
    
           
            
  
    
  
    
  
    
  
    
           
           
             

 
  
  
  
  
  
  
   
     
  
  
  
  
  
  

time

blind
nodes time

hmax
nodes time

airport ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
   
   

       
       
       
       
       
        
        

      
       
        
       
       
        
        
           

      
       
       
       
       
         
         

       
       
        
        

       
       
        
        
           
           

       
       
         
         

      
       
       
       
       
       
       
           
            
       
       
       
       
           
           
             

          
             
           

   

     

    
       
      
    
       
       
    
        
       
    
       
       
     
       
       
      
        
        
      
        
        
                 
         
                             
    
       
       
     
       
       
      
        
        
      
        
        
                 
         
                 
         
                         
             
            
          
         
            
          

blocks ipc 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
       
       
       
      
 
    
 
    
       
       
  
       
       
       
       
  
    
  
    
       
       
 
      
       
       
      
 
    
 
    
       
       
  
       
        
        
       
  
    
  
    
        
        
  
       
        
       
       
  
    
  
    
        
        
  
        
        
        
       
  
    
  
    
        
        
  
       
        
        
       
  
    
  
    
         
        
  
                 
        
       
  
    
  
    
         
        
  
                            
        
  
    
  
    
         
         
  
                             
        
         
                   
         
                                    
          
          
                               
                                    
         
         
                              
                                    
         
         
                               
                                     
          
           
                                 
  
                                
        
        
                               
  
                          
                                  
            
          
           
                                 
            
            
           
                                 
  
           
  
               
           
  
           
  
              
           
  
           
  
           
  
           
  
          
  
            
  
             
  
           
  
           

depots ipc 
  
  
  
  
  
  
  

  
  
  
  
  
  
  

        
         

        
          

        
          

       
  
    
  
    
        
        
        
  
    
                    
         
                                                                 
                            
            
                                     
             
             

grid ipc 
  
  

  
  

        

    

    

         

        
          
                            

         

        
            

table    runtimes cost optimal heuristic search planners airport 
blocksworld  depots  grid domains  description planners given section    fork decomposition heuristics computed
fully online  column task denotes problem instance  column h denotes optimal
solution length  columns capture run time number expanded
nodes 

   

fiimplicit abstraction heuristics

hf
task

h

nodes

hi

hfi

time

nodes

time nodes

time

    
     
    
     
     
    
    

  
     
   
     
     
   
    

    
  
           
    
   
          
           
    
   
         

    
     
    
     
     
    
     

hspf

ms    

ms    

nodes

time

nodes

time

nodes

      
       
       
       
         
        
       
           
          
       
          
             

 
  
  
  
  
  
  
    
  
  
     
      

    
    
    
    
    
    
     
     
     
     
     
     

  
     
   
     
     
    
     

blind
time

nodes

time

hmax
nodes
time

driverlog ipc 
  
  
  
  
  
  
  
  
  
  
  
  

 
  
  
  
  
  
  
  
  
  
  
  

  
     
   
    
     
   
   

           
            

             
                       
                         

    
        
  
    
          
     
    
          
    
                        
                           
                 
     
                          

           
             

    
    
    
    
     
    
     

              

freecell ipc 
  
  
  
  
  

 
   
    
               
                
  
  

   
    
   
    
                         

       
           
           
            
             

       

       
         
    
    
                     
           
                                     
                                        
            
              

gripper ipc 
  
  
  
  
  
  
  

  
   
    
   
    
   
    
       
       
  
    
        
   
    
  
    
    
    
         
    
       
       
   
    
         
    
    
        
          
          
    
          
         
    
    
          
     
    
                                      
          
          
           
          
     
    
                                           
                                                        
    
  
                                                                     
  
                            
                             

logistics ipc 
  
  
  
  
  

  
  
  
  
  

           
   
    
   
    

    
    

    
    

    
   

     
    

  
    
   
    
  
  
    
   
    
   
  
    
   
    
  
  
    
    
         
  
    
   
    
   
 
    
  
    
  
  
    
    
         
  
    
   
    
  
  
    
    
         
  
    
    
         
  
                        
          
  
                      
  
                  
  
                        
  
                      
  
    
  
    
         
            
  
    

    
    
    
    
    
    
    
    
    
    
      

             
            
        
       

            
            
       
       
            

             
    
    

      
      

    
    

     
     

    
    

       
       
       
       
       
      
       
       
       
       
       
       
       
       
       
       
            
             
            

  
    
  
    
  
    
  
    
  
    
 
    
  
    
  
    
  
    
  
    
           
             
           
             
           
          

     
    
    
      
     
    
      
     
      
      

    
    
    
    
    
    
    
    
    
    

    
    
    
     
    
   
      
    
      
      

    
    
    
    
    
    
    
    
    
    

    

    

   
    

logistics ipc 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

      
      
      

  
  
  
  
  
 
  
  
  
  
   
      
    
     
     
  

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

            
             

mprime ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

   
    
            
         
    
    
    

     

  
    
            
 
    
    
    
  

    

                          
 
    
   
    
            
          
          

  
    
           
  
    
    
    
   

    

           
 
    
          
          

      
          
        
      
             
          
             
           
      
           

       
       
       

   

     

            

         
            
     

       
           

         
            

         

    

             
          
           
            
            

          
            
  

    

  

  
    
 
    
   
    
         
            
         
   
    

    
   
  
  
     
  
   

    

  

    

     
 
    
  
    
  
    
  
           
    
  
    
  

    
    
    
     
     
    
    

      
            
       
      
       
         
           
         
        

      
            
       
       
       
          
       

             
        
            
          
          
          
         
         
                        
         
         
         
  

    

  
    
           
 
    
   
    
              
  
    
          
           
   
    
    
    
           
          
 
    
            
            
 
    
   
    
   
    
   
    
 
    
  
    
    
    
  
    
  
    

table     similar table   driverlog  freecell  gripper  logistics ipc  
logistics ipc   mprime domains 
   

fikatz   domshlak

hf
task

h

nodes

hi
time

nodes

hfi
time nodes

time

ms    

ms    

nodes

nodes

time

time

hspf

nodes

blind
time

nodes

time

hmax
nodes time

miconic strips ipc 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

      
 
    
      
      
 
    
      
      
 
    
      
      
 
    
      
      
 
    
      
       
  
    
       
       
  
    
       
       
  
    
       
       
  
    
       
       
  
    
       
       
   
    
       
        
   
    
        
        
   
    
        
       
   
    
        
        
   
    
        
        
   
    
        
        
   
    
        
        
   
    
        
        
   
    
        
        
   
    
        
         
    
              
         
    
              
         
    
              
         
    
              
         
    
              
               
               
               
               
                
               
                
               
                
               
                                   
                                   
                                   
                                   
                                    
                                      
                                      
                                      
                                      
                                      
             
                           
                           
             
             

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
         
       
         
       
         
       
          
       
          
       
          
       
          
       
           
       
          
       
                       
                       
                      
                         
           
       
                          
                          
                          
                          
                          
                           
                          
                           
             
                          

 
    
 
    
 
    
 
    
 
    
  
    
  
    
  
    
  
    
  
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
    
     
    
     
    
           
           
           
           
           
             
             
            
             
             
              
              
              
              
              

      
      
      
      
      
      
      
      
      
      
       
       
       
       
       
       
       
       
       
       
        
        
        
        
        
       
        
        
        
        
         
        
         
        
         
        
         
        
         
        
         
         
         
         
         
         
         
         
         
         
          
          
          
          
          
          
          
          
          
          
                       
                       
                       
                       
                       
                       
                       
                       
                       
                       
                           
                           
                           
                           
                           
                            
                            
                            
                            
                            

mystery ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 


 
 

 

 

 
 

 
 
 
 
 
 

      
          
       
      
      
          
      

      
         
      

      
      
          
       
      
       

 
    
           
 
    
 
    
            
  
    
              

        
 
    
           

  
    
   
  
  

    
     
    
    
    

      
         
       
      
      
          
      

      
        
      

      
      
          
      
       
       

      
          
       

 

    

  

    

       

         

      
      
          
      
       
                          

 
    
           
        

         
      
      
           
                         
      
         
      
      
      
           

      
         
       
      
       
           

 

    

  
    
           
        
        
         

       
            
        

    
    
    

      
      
           
         
        
       
                           
            
        
         
      
           
            
       
         
         
        
        
             

table     similar table   miconic mystery domains 
   

 
    
 

 
 
    
   

    
    
    
    

      
       
       
       
      
           

fiimplicit abstraction heuristics

hf
task

h

hi

hfi

ms    

ms    

time

nodes

nodes

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                                         
                                         

  
  
  
  
  
      
      

nodes

time

nodes

time

nodes

time

time

hspf

nodes

blind

hmax
nodes
time

time

nodes

time

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                  
                  

    
    
    
    
    
      
      

    
    
    
    
    
    
    

    
    
    
    
    
      
      

    
    
    
    
    
     
     

    
    
     
      

    
    
    
    

  
   
    
      

    
    
    
    

openstacks ipc 
  
  
  
  
  
  
  

  
  
  
  
  
  
  

    
  
    
  
    
  
    
  
    
  
           
           

pathways ipc 
  
  
  
  

 
  
  
  

    
    
     
      

    
    
    
     

    
    
     
     

    
    
    
    

    
    
     
     

    
    
    
    

 
    
     

    
    
    

      
        
           
           

    
   
     
     

    
    
    
     

pipesworld notankage ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
 
  
 
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  

   
    
    
    
    
    
          
          
            
          
            

   
    
    
    
    
    
          
          
            
          
            

   
    
    
    
    
    
          
          
            
           
            

             
             

            

            

      
      
 
    
        
  
    
        
       
   
    
         
   
    
      
      
   
    
         
   
    
        
       
   
    
          
    
    
       
       
         
          
    
    
         
        
          
          
    
    
         
       
         
          
    
    
         
         
                      
     
    
            
                                      
             
             
               
                                                             
                                                                  
           
                        
     
    
              
            
                           
             
             
          
         
           
    
    
                         
             
             
             

pipesworld tankage ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
 
  
 
  
 
  
  
  
  
  
  
  

  
    
   
    
   
    
   
    
    
    
   
    
                                      
                                         
                      
           
                                      

      
        
         
          
         
          

      
       
       
        
       
        

 
    
        
   
    
         
         
          
                      
         
          
          
          
                         

  
    
   
    
    
    
           
    
    
     
    
             

             

             

             
             

             
             

           
                         
            
             
              
           
             

tpp ipc 
  
  
  
  
  
  

 
 
  
  
  
  

 
 
  
  
   

    
    
    
    
    

 
  
  
  
    

    
    
    
    
    

 
 
  
  
    

    
    
    
    
    

      
      
       
       
       
            

      
      
       
       
       
           

 
 
  
  
   

    
    
    
    
    

 
  
   
   
     

    
    
    
    
    

 
    
  
    
  
    
   
    
     
    
              

trucks ipc 
  
  
  
  
  
  
  
  
  

  
    
    
    
    
    
    
       
       
   
    
         
   
    
  
    
    
    
    
    
    
         
       
    
    
          
   
    
  
                                   
                       
    
                
    
    
                                                                        
    
                         
    
  
              
           
             
  
             
                                                                                                               
  
           
              
  
             

table     similar table   openstacks  pathways  pipesworld notankage 
pipesworld tankage  tpp  trucks domains 

   

fikatz   domshlak

hf
task

h

nodes

hi
time

nodes

hfi
time

nodes

time

ms    

ms    

nodes time

nodes

time

hspf

nodes

blind
time

hmax
nodes time

nodes

time

    
 
    
  
    
  
    
  
    
  
    
  
    
  
    
   
    
  
    
   
    
 
    
  
    
  
    
   
    
 
    
   
    
 
    
  
    
  
    
    
    
  
    
   
    
  
    
   
    
  
    
  
    
  
    
  
    
         
    
    
    
    
    
    
  
    
  
    
  
    
   
    
    
    
    
    
  
    
  
    
  
    
  
    
     
           
    
  
    
   
    
  
    
  
     
         
    
    
  
    
   
    
   
    
   
    
  
    
  
    
    
           
    
   
    
    
    
                
    
   
    
   
    
   
    
    
    
   
    
   
    
    
           
                          
    
   
    
    
    
  
    
   
    
   
    
    
     
                  
    
  
    
  
    
    
    
    
    
   
    
   
    
   
    
    
    
   
    
   
    
     
          
    
   
    
    
                   
                    
    
   
    
   

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
       
       
        
       
      
       
       
       
        
        
        
       
       
        
         
       
       
         
       
       
           
        
       
        
        
        
       
           
         
          
        
         
        
          
            
         
        
         
           
       
         
        
         
        
          
         
              

    

   

psr small ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
  
  
  
 
  
 
 
 
  
  
  
 
  
  
 
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  
  
  
   
   
   
  
  
    
    
  
  
    
  
  
      
  
  
   
   
   
  
      
    
     
   
    
   
     
      
    
   
    
  
    
   
    
   
     
    

   

    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
  
    
  
    
    
   
    
   
    
    
   
    
   
    
    
   
    
   
    
    
  
    
  
    
    
  
    
  
    
    
   
    
   
    
    
    
    
    
    
    
  
    
  
    
    
  
    
  
    
    
    
    
    
    
    
  
    
  
    
    
  
    
  
    
                                  
    
  
    
  
    
    
  
    
  
    
     
          
          
    
   
    
   
    
    
   
    
   
    
    
  
    
  
    
                                  
    
    
    
    
    
     
          
          
    
   
    
   
    
    
    
    
    
    
    
   
    
   
    
                               
                                  
    
    
    
    
    
    
   
    
   
    
    
    
    
    
    
             
    
  
    
  
    
    
    
    
    
    
    
   
    
   
    
    
    
    
    
    
    
   
    
   
    
                             
    
    
    
    
    

    

   

    

   

      
 
       
  
       
  
       
  
       
  
      
 
       
  
      
 
      
 
      
 
       
  
       
  
       
  
       
  
       
  
        
  
       
  
       
  
         
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
         
   
       
  
        
  
       
  
                
          
    
       
  
       
  
       
  
          
    
       
  
         
  
       
  
       
  
       
  
                
       
  
           
    
                   
    
       
  

    

rovers ipc 
  
  
  
  
  
  
  

  
 
  
 
  
  
  

   
    
   
    
   
    
       
       
  
    
         
        
  
    
  
    
  
    
      
      
  
    
        
        
   
    
   
    
   
    
       
       
   
    
         
        
  
    
  
    
  
    
      
      
  
    
        
        
                                                                                                           
                                                                    
             
             

satellite ipc 
  
  
  
  
  
  

 
  
    
  
    
  
  
    
   
    
  
    
    
   
    
  
                      
                             
                               

  
    
   
    
   
    
           
            

       
       
       
       
       
       
         
       
                       
                         

  
    
  
   
    
    
    
          
     
           
             

      
      
      
      
      
      
      
      
       
       
       
       
       
       
          
        
                         
                         
                        

 
    
 
 
    
  
  
    
    
   
    
    
   
          
                 
                  
            

    
    
    
    

  
   
    
      

    
    
    
    

              

zenotravel ipc 
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
  
  
  
  
  
  
  

 
  
  
  
   
    
    
    

    
    
    
    
    
    
    
     

 
  
  
  
   
    
    
    

    
    
    
    
    
    
    
    

            

 
  
  
  
   
   
    
    

    
    
    
    
    
    
     
     

    
    
    
    
    
    
    

      
       
        
        
          
          
           
            

table     similar table   psr  rovers  satellite  zenotravel domains 

   

fiimplicit abstraction heuristics

hf
task

h nodes

hi
timenodes

hfi
timenodes

ms    
time nodes

ms    

timenodes

hspf

time nodes

blind
hmax
time nodes time nodes
time

schedule strips
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
  
    
  
    
  
    
 
  
        
        
    
 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
 
    
 
    
 
    
 
  
                        
 
 
    
 
    
 
    
 
  
    
  
    
  
    
 
  
    
  
    
  
    
 
 
    
  
    
 
    
 
  
              
  
    
 
  
    
  
    
  
    
 
  
    
  
    
  
    
 
                             
 
 
    
  
    
  
    
 
                              
                          
 
   
              
  
    
 
                             
 
                              
 
                                
 
                                 
 
                            
 
                             
                                  
 
                             
             
           
 
            
 
                                 
 
                               
             
            
 
                                  
             
           
                                     
 
          
           
              
             
             

        
        
        
       
 
 
 
 
 

      
      
      
      
      

        
        
        
        
        
        
        
        
 
 
 
 
 

      
      
      
      
      

        

 
 
 
 
 
 
 
 
 
 

      
      
      
      
      
      
      
      
      
      

       
 
    
      
 
    
      
 
    
        
  
    
        
   
    
      
 
    
      
 
    
       
 
    
      
 
    
       
 
    
               
    
       
  
    
              
    
         
   
    
        
        
  
    
                     
                    
                     
                     
         
   
    
                        
           
                      
                       
                       
             
             
                      
                        
                     
                        

             

table     similar table    non ipc  schedule strips domain 

   

fikatz   domshlak
hf
task

h

nodes

hi
time

nodes

hfi
time

nodes

time

ms    

ms    

nodes

nodes

time

hspf

time

nodes

 
    
  
    
  
    
  
    
  
    
  
    
  
    
           
            
  
    
  
    
  
    
  
    
           
           
             

 
  
  
  
  
  
  
   
     
  
  
  
  
  
  

time

blind
nodes time

hmax
nodes time

airport ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
    
      
 
    
      
 
  
    
       
  
    
       
  
  
    
        
  
    
       
  
  
    
       
  
    
       
  
  
    
       
  
    
       
  
   
    
        
   
    
       
  
   
    
        
   
    
       
  
     
                     
    
           
  
                                                
  
  
    
       
  
    
       
  
  
    
       
  
    
       
  
   
    
        
   
    
       
  
   
    
        
   
    
       
  
     
                     
    
           
  
     
                     
    
           
                                                        
                 
              
                                            
   
                     
          
          
                                                          
   
                       
           
           
   
            

   

     

    
       
      
    
       
       
    
        
       
    
       
       
     
       
       
      
        
        
      
        
        
                 
         
                             
    
       
       
     
       
       
      
        
        
      
        
        
                 
         
                 
         
                         
             
            
          
         
            
          

blocks ipc 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
  
  
  
 
 
  
  
  
  
  
   
  
  
  
  
  
   
  
   
  
    
  
    
  
    
  
     
  
   
         
  
    
  
    
          
         
          
  
  
  
  
  
  
  
  
  

    
       
  
    
      
 
    
    
       
  
    
       
  
    
    
       
  
    
      
 
    
    
        
   
    
       
  
    
    
        
  
    
       
  
    
    
        
   
    
       
  
    
    
        
   
    
       
  
    
    
         
   
    
       
  
    
    
         
    
    
        
  
    
               
    
    
        
         
                     
    
          
          
                     
    
         
         
                      
    
         
         
                       
    
          
           
                      
    
        
        
                                                          
                              
          
           
                                           
           
     
     
               
     
              

 
    
       
       
  
    
       
       
 
    
       
       
  
    
        
        
  
    
        
        
  
    
        
        
  
    
         
        
  
    
         
        
  
    
         
         
                   
         
                               
                              
                               
                                 
                               
                                  
                                 
                                 
           
           
           
           
           
           
           
          
            
             
           
           

depots ipc 
  
  
  
  
  
  
  

  
   
    
        
   
    
       
  
    
  
    
        
        
  
    
    
         
    
    
        
  
    
                    
         
         
                                                                                                
                 
                                           
         
                                           
                                     
                 
                            
                 
                            

driverlog ipc 
  
  
  
  
  
  
  
  
  
  
  
  

 
  
    
       
  
    
      
  
     
                     
    
       
  
   
    
        
   
    
       
  
    
               
    
    
       
  
     
                     
    
         
  
   
    
        
   
    
        
  
   
    
         
    
    
       
                                                      
                                         
          
  
    
               
    
    
       
  
     
                     
    
          
                                                          

 
  
  
  
  
  
  
    
  
  
     
      

    
  
    
        
       
          
                          
    
   
               
         
                                        
                                         
    
                                 
                                          
     
     
                 
                   
             
     

table     runtimes cost optimal heuristic search planners airport 
blocksworld  depots  driverlog domains 
description
planners given section    fork decomposition heuristics via
structural pattern databases  column task denotes problem instance  column
h denotes optimal solution length  columns capture run time
number expanded nodes 
   

fiimplicit abstraction heuristics

hf
taskh

nodes

hi
time

nodes

hfi
time

nodes

time

ms    

ms    

nodes

nodes

time

time

hspf

nodes

blind
time

nodes

time

hmax
nodes
time

freecell ipc 
  
  
  
  
  

 
  
  
  
  

   
    
   
    
        
     
    
     
    
          
                                      
                                         
              

       
           
           
            
             

       

       
         
    
    
                     
           
                                     
                                        
            
              

grid ipc 
  
  

  
  

   
    
              

    

    

   

    

        
         
                           

    

    

   
    
             

gripper ipc 
  
  
  
  
  
  
  

  
   
    
   
    
        
       
       
  
    
        
   
    
  
    
    
    
    
         
       
       
   
    
         
    
    
  
     
    
     
    
          
          
         
    
    
          
     
    
  
     
    
     
    
          
          
          
           
          
     
    
  
                   
                 
                                                        
    
                                                                                                                  
                                                                            
                             

logistics ipc 
  
  
  
  
  
  

  
  
  
  
  
  

     
            
    
           
   
    
    
   
    
    
            
             

     
     
    
    

            
            
         
        
             

             
            
        
       

            
            
       
       
            

             
    
    

      
      

    
    

     
     

    
    

       
       
       
       
       
      
       
       
       
       
       
       
       
       
       
       
            
             
            

  
    
  
    
  
    
  
    
  
    
 
    
  
    
  
    
  
    
  
    
           
             
           
             
           
          

     
    
    
      
     
    
      
     
      
      

    
    
    
    
    
    
    
    
    
    

    
    
    
     
    
   
      
    
      
      

    
    
    
    
    
    
    
    
    
    

    

    

   
    

logistics ipc 
       
       
       
       
       
      
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

  
  
  
  
  
 
  
  
  
  
  
    
  
  
  
  
  
  
   
     
  
      

    
   
    
   
    
   
    
    
    
   
    
  
    
    
    
   
    
    
    
    
           
            
    
     
            
           
    
     
    
    
    
    
    
     

    
       
    
        
    
       
    
         
    
        
    
       
    
         
    
       
    
         
    
         
    
          
                   
    
          
                  
                 
    
          

  
  
  
  
  
 
  
  
  
  
   
      
    
     
     
  

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

            
             

mprime ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

   
    
  
    
     
    
           
   
    
 
    
    
    
    
    
              
    
    
  
    
                            
     
                 
 
    
   
    
     
    
    
    
   
    
          
             
            
  
    
           
  
    
 
    
   
    
   
    
     
    
   
    
   
    

            
         
            
           
  
    
            
    
    
   
    
  
    
  
    
     
    
  
    
   
    

       
         
       
         
            
        
    
 
    

    
    
    

        
         

      
          
        
      
             
          
             
           
      
           

       
       
       

   

     

            

         
            
     

       
           

    

             
         
          
                        

         

            
            

            
            
       
           
      
       
       
       
          
       
       

      
            
       
      
       
         
           
         
        

      
            
       
       
       
          
       

             
        
            
          
          
          
         
         
                        
         
         
         
  

    

  
    
           
 
    
   
    
              
  
    
          
           
   
    
    
    
           
          
 
    
            
            
 
    
   
    
   
    
   
    
 
    
  
    
    
    
  
    
  
    

table     similar table    freecell  grid  gripper  logistics ipc  
logistics ipc   mprime domains 

   

fikatz   domshlak

hf
task

h

nodes

hi
time

nodes

hfi
time

nodes

time

ms    

ms    

nodes

nodes

time

time

hspf

nodes

blind
time

nodes

time

hmax
nodes time

miconic strips ipc 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
      
      
      
      
      
 
      
      
      
      
      
 
      
      
      
      
      
 
      
      
      
      
      
 
      
      
      
      
      
 
       
       
       
      
      
 
       
       
       
      
      
 
       
       
       
      
      
 
       
       
       
      
      
 
       
       
       
      
      
  
       
        
       
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
       
        
        
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
        
        
        
       
       
  
         
         
         
       
       
  
         
         
         
       
       
  
         
         
         
       
       
  
         
         
         
       
       
  
         
         
         
       
       
  
         
                     
       
       
  
         
                     
       
       
  
          
                     
       
       
  
          
                     
       
       
  
          
                     
       
       
  
          
                     
       
       
  
          
                     
         
       
  
          
                     
         
       
  
          
                     
         
       
  
                                  
          
       
  
                                    
          
       
  
                                    
          
       
  
                                   
          
       
  
                                    
           
       
  
                                    
          
       
                                           
                       
                                           
                       
                                           
                      
                                           
                         
                                           
           
       
                                                                      
                                                                      
                                                                      
                                                                      
                                                                      
  
                           
                 
                          
  
                           
  
             
  
                          

 
    
 
    
 
    
 
    
 
    
  
    
  
    
  
    
  
    
  
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
    
     
    
     
    
           
           
           
           
           
             
             
            
             
             
              
              
              
              
              

      
      
      
      
      
      
      
      
      
      
       
       
       
       
       
       
       
       
       
       
        
        
        
        
        
       
        
        
        
        
         
        
         
        
         
        
         
        
         
        
         
         
         
         
         
         
         
         
         
         
          
          
          
          
          
          
          
          
          
          
                       
                       
                       
                       
                       
                       
                       
                       
                       
                       
                           
                           
                           
                           
                           
                            
                            
                            
                            
                            

mystery ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 


 
 

 

 

 
 

 
 
 
 
 
 

      
      
      
         
          
        
       
      
       
      
      
      
      
      
         
          
         
      
       
      
                                        
           
           
          
      
      
        
       
       
      
      
      
          
                     
           
                       
      
      
      
       
      
         
         
         
       
        
      
      
       
       
       
       
       
          
           
          

      
          
       

 

    

  

    

       

         

      
      
          
      
       
                          

 
    
           
        

         
      
      
           
                         
      
         
      
      
      
           

      
         
       
      
       
           

 

    

  
    
           
        
        
         

       
            
        

    
    
    

      
      
           
         
        
       
                           
            
        
         
      
           
            
       
         
         
        
        
             

table     similar table    miconic mystery domains 
   

 
    
 

 
 
    
   

    
    
    
    

      
       
       
       
      
           

fiimplicit abstraction heuristics

hf
task h

nodes

hi
time

nodes

hfi

ms    

ms    

nodes

time

nodes

nodes

time

    
    
    
    
    
    
    
    
    
    
            
            

    
    
    
    
    
     
     

  
  
  
  
  
      
      

    
  
    
  
    
  
    
  
    
  
           
           

    
    
    
    
    
    
    

    
    
    
    

 
    
     

time

time

hspf

nodes

blind
time

hmax
nodes
time

nodes

time

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                    
                    

    
    
    
    
    
    
    

    
    
    
    
    
      
      

    
    
    
    
    
     
     

    
    
    
    

  
   
    
      

    
    
    
    

openstacks ipc 
  
  
  
  
  
  
  

  
  
  
  
  
  
  

    
    
    
    
    
      
      

    
    
    
    
    
    
    
    
    
    
           
           

pathways ipc 
  
  
  
  

 
  
  
  

    
    
     
      

    
    
    
    

    
    
     
     

    
    
    
    

    
    
     
     

    
    
    

      
        
           
           

    
   
     
     

    
    
    
    
          
            

pipesworld notankage ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
 
  
 
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  

   
    
   
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
          
          
    
    
    
    
    
    
    
     
          
          
    
                                          
      
      
     

                               
                                 
                             

                                          
              
     
          
          
    
                                          
             

      
      
        
       
      
      
        
       
       
       
         
        
         
       
         
         
            
             
                      
                         
           
              
            
             
             
          
         
                         
             

 
    
        
  
    
   
    
         
   
    
   
    
         
   
    
   
               
    
    
                    
    
    
                     
    
    
                    
    
    
                      
     
    
                                     
             
               
                                      
                                       
                        
     
    
             

      

    

             

             

    
    
             
             

pipesworld tankage ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
  
    
   
    
   
    
      
      
  
   
    
    
    
   
    
        
       
 
     
          
          
    
         
       
         
           
                 
          
        
 
    
          
    
    
    
         
       
  
     
          
          
    
          
        
                                          
  
           
                                             
                         
  
            
                 
             
  
              
                
           
                                                           

 
    
        
   
    
         
                    
                      
                    
                     
                        

  
    
   
    
    
    
           
    
    
     
    
             

             

             

             
             

             
             

rovers ipc 
  
  
  
  
  
  
  

  
   
    
   
 
  
    
  
  
   
    
   
 
  
    
  
                      
                        
  
       

    
   
    
    
  
    
    
   
    
    
  
    
                 
                   
     

       
       
  
    
         
   
    
      
      
  
    
        
   
    
       
       
   
    
         
   
    
      
      
  
    
        
   
    
                                                                  
                                         
              
             

    
  
    
    
   
    
    
   
    
          
    
                
                   

       
       
       
       
       
       
         
       
                       
                          

satellite ipc 
  
  
  
  
  
  

 
  
  
  
  
    
  
    
         
          

    
  
    
   
    
   
          
           
            

  
    
  
   
    
    
    
          
     
           
             

    
    
    
    

  
   
    
      

    
    
    
    

               

table     similar table    openstacks  pathways  pipesworldnotankage  pipesworld tankage  rovers  satellite domains 

   

fikatz   domshlak

hf
task h

nodes

hi
time

nodes

hfi
time

nodes

time

ms    

ms    

nodes

nodes

time

time

hspf

nodes

blind
time

hmax
nodes time

nodes

time

    
 
    
  
    
  
    
  
    
  
    
  
    
  
    
   
    
  
    
   
    
 
    
  
    
  
    
   
    
 
    
   
    
 
    
  
    
  
    
    
    
  
    
   
    
  
    
   
    
  
    
  
    
  
    
  
    
         
    
    
    
    
    
    
  
    
  
    
  
    
   
    
    
    
    
    
  
    
  
    
  
    
  
    
     
           
    
  
    
   
    
  
    
  
     
         
    
    
  
    
   
    
   
    
   
    
  
    
  
    
    
           
    
   
    
    
    
          
     
    
   
    
   
    
   
    
    
    
   
    
   
    
    
           
                           
    
   
    
    
    
  
    
   
    
   
    
    
     
                   
    
  
    
  
    
    
    
    
    
   
    
   
    
   
    
    
    
   
    
   
    
     
    
     
    
   
    
    
                   
                    
    
   
    
   

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
       
       
        
       
      
       
       
       
        
        
        
       
       
        
         
       
       
         
       
       
           
        
       
        
        
        
       
           
         
          
        
         
        
          
            
         
        
         
           
       
         
        
         
        
          
         
              

    

   

psr small ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
       
       
       
  
       
       
       
  
       
       
       
  
       
       
       
  
       
       
       
 
       
       
       
  
       
       
       
 
       
       
       
 
       
       
       
 
        
        
        
  
        
        
        
  
        
        
        
  
       
       
       
 
       
       
       
  
         
        
        
  
         
         
         
 
       
       
       
  
       
       
       
  
         
         
         
  
       
       
       
  
       
       
       
  
                                   
  
       
       
       
  
       
       
       
 
        
        
        
  
        
        
        
  
        
        
        
  
       
       
       
  
                                   
  
         
         
         
  
          
         
         
  
        
        
        
  
         
         
         
  
        
        
        
  
          
          
          
  
                                     
  
         
         
         
  
        
        
        
  
         
         
         
  
                                    
  
       
       
       
  
         
         
         
  
        
        
        
  
         
         
         
  
        
        
        
  
          
          
          
  
         
         
         
                                             
  
  
        
        
        

      
 
       
  
       
  
       
  
       
  
      
 
       
  
      
 
      
 
      
 
       
  
       
  
       
  
       
  
       
  
        
  
       
  
       
  
         
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
       
  
         
   
       
  
        
  
       
  
                
          
    
       
  
       
  
       
  
          
    
       
  
         
  
       
  
       
  
       
  
                
       
  
           
    
                    
       
  

    

tpp ipc 
  
  
  
  
  
  

 
 
  
  
  
  

      
      
      
      
       
      
       
       
       
       
       
       
        
         
         
                                         

      
      
       
       
       
            

      
      
       
       
       
           

 
 
  
  
   

    
    
    
    
    

 
  
   
   
     

    
    
    
    
    

      
       
       
        
          
             

trucks ipc 
  
  
  
  
  
  
  
  
  

  
         
         
         
       
       
  
         
         
         
         
       
  
          
          
          
                       
                                                                       
                                                            
  
                                                                     
  
                           
  

   
    
         
        
    
    
          
        
    
                
         
    
                              
           
             
             
                                      
           
             
             

zenotravel ipc 
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
  
  
  
  
  
  
  

      
      
      
       
       
       
       
       
       
       
       
       
        
        
        
         
         
        
         
         
         
         
         
         
                                         
                                         
            
          
           

      
      
      
      
      
      
      
      
       
       
       
       
       
       
          
        
                          
                          
                         

 
    
 
    
  
    
   
    
   
    
          
           
            

 
  
    
    
     
      
      

    
    
    
    
    
    
    

      
       
        
        
          
          
           
            

table     similar table    psr  tpp  trucks  zenotravel domains 
   

fiimplicit abstraction heuristics

hf
task

h

hi

hfi

nodes timenodes time nodes

ms    
time nodes

ms    

timenodes

hspf

time nodes

blind
hmax
time nodes time nodes
time

schedule strips
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 
      
      
      
 
      
      
      
 
      
      
      
 
       
       
       
 
                
        
 
      
      
      
 
      
      
      
 
      
      
      
 
      
      
      
 
      
      
      
 
                
        
 
      
      
      
 
       
       
       
 
       
       
       
 
      
       
      
 
                
       
 
       
       
       
 
       
       
       
 
                 
        
 
      
       
       
 
                  
        
                                  
 
                 
       
 
                 
        
 
                 
        
 
                  
        
 
                            
 
                
        
 
                 
        
 
                            
 
                 
        
 
                             
             
            
                                  
 
                  
        
 
                  
        
 
                               
 
                            
 
                             
 
                             
 
                            
            
           
            
           
 
         
          
            
           
 
         
           

        
        
        
       
 
 
 
 
 

      
      
      
      
      

        
        
        
        
        
        
        
        
 
 
 
 
 

      
      
      
      
      

        

 
 
 
 
 
 
 
 
 
 

      
      
      
      
      
      
      
      
      
      

       
 
    
      
 
    
      
 
    
        
  
    
        
   
    
      
 
    
      
 
    
       
 
    
      
 
    
       
 
    
               
    
       
  
    
              
    
         
   
    
        
        
  
    
                     
                    
                     
                     
         
   
    
                        
           
                      
                       
                       
             
             
                      
                        
                     
                        

             

table     similar table     non ipc  schedule strips domain 

   

fikatz   domshlak

hf
task

h

nodes

hi

hfi

hspf

blind

time

nodes

time

nodes

time

nodes

time

nodes

time

    
    
    
     
     
      
    
    
     
     
     
      
    
      
      
      
      
      

     
    
      
      
       
       
     
     
      
       
       

    
    
     
     
      
       
    
     
     
      
      

    
    
      
      
       
       
     
     
      
      
       

    
    
     
     
      
      
    
     
     
      
      

     
    
      
      

     
     
      
      

     
     
      
       
       

    
    
     
     
      

     
     

      
      

      
      
       
       

    
    
     
      

     
      
        

    
      
       

     
      
       

     
      
       

      

      

      
       

    
     

       

       

  
   
   
    
    
   
     
     
    
    
     
     
      
      
      
      
      
     
      
      
      

    
    
    
    
    
    
     
     
     
     
      
     
      
      
       
      
      
      
       
       
      

   
   
    
    
     
    
      
      
      
     
      
      
       
       
        
       
       
      

    
    
    
    
    
    
    
    
    
    
    
    
     
     
      
     
      
     

       

     

  
  
   
   
    
     
  
   
    
      
 
  
   
    
     
      

    
    
    
     
     
      
    
    
     
      
    
    
    
    
      
      

  
    
    
        

    
    
    
      

  
    
       

    
    
     

  
    
      

    
    
    

     
     
     
        
        
        
  
  
  
        
        
        

    
    
    
      
      
      
    
    
    
      
     
     

elevators strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

    
    
     
     
      
      
     
     
      
      
      
       
     
      
       
       
       
      

openstacks strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

   
   
    
    
     
    
      
      
      
     
      
      
       
       
        
       
       
       

    
    
    
    
    
    
    
    
    
    
     
     
      
     
      
      
      
     

   
   
    
    
     
    
      
      
      
     
      
      
       
       
        
       
       
       

    
    
    
    
    
    
    
    
    
    
    
    
     
     
      
      
      
     

   
   
    
    
     
    
      
      
      
     
      
      
       
       
        
       
       
       

    
    
    
    
    
    
    
    
    
    
     
     
      
     
      
      
      
     

       

      

       

     

       

      

    
    
    
     
      
      
    
    
    
      
    
    
    
    

  
   
   
     
      
       
  
    
      

    
    
    
    
     
      
    
    
    

  
   
   
     
      
       
  
    
     

    
    
    
    
      
      
    
    
    

  
   
     
      

    
    
    
     

  
   
    
      

    
    
    
     

    
    
    
      
      
      
    
    
    
      
      
      

     
     
     

    
    
    

     
     
     

    
    
    

     
     
     

     
     
     

  
  
  

    
    
    

  
  
  

    
    
    

 
 
 

    
    
    

parcprinter strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

      
      
      
      
       
       
      
      
      
       
      
      
      
      
       
       

  
   
   
      
       
       
  
    
     
       
  
   
    
     

scanalyzer strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  
  
  
  
  
  

     
     
     
       
       
        
  
  
  
       
       
        

table     runtimes cost optimal heuristic search planners elevators 
openstacks strips     parcprinter  scanalyzer domains  description planners given section    fork decomposition heuristics via structural pattern databases  column task denotes problem instance 
column h denotes optimal solution length  columns capture run time
number expanded nodes 

   

fiimplicit abstraction heuristics

hf
task

h

hi

nodes

hfi

hspf

blind

time

nodes

time

nodes

time

nodes

time

nodes

time

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
    
     
      
     
      
      

  
  
   
   
   
   
   
     
    
     
     
     
     
     
     
     
      
     
      
      
      
     
      
       
      
       
       

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
      
     

  
  
   
   
   
   
   
     
    
     
     
     
     
     
     
     
      
     
      
      
      
     
      
       
      
       
       

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
    
      
      
      
      
      

 
  
  
  
  
   
  
    
   
    
    
     
     
     
     
    
      
     
     
     
      
     
      
      
      
       
      

    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
      
     
     
     
     
     
      
      
      
       
      

  
  
   
   
   
    
   
     
    
     
     
     
     
     
     
     
      
     
      
      
      
     
       
       
      
       
       

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     

   
   
   
      
  
   
     
       
     
     
      
      
      
     
       
      
     
       
       
   
      
       
       
        

    
    
    
    
    
    
    
      
    
    
     
     
    
    
      
     
    
      
      
    
     
      
      
       

   
   
   
     
      
   
     
       
     
     
      
     
      
    
       
      
     
      
       
   
      
       
       
       
        
        

    
    
    
    
    
    
    
     
    
    
    
    
    
    
     
    
    
    
     
    
     
     
     
     
      
      

   
   
   
     
    
   
     
       
     
     
      
     
      
    
       
      
     
      
       
   
     
       
       
       
        
        
       

    
    
    
    
    
    
    
     
    
    
     
    
     
    
      
     
    
    
      
    
     
      
      
      
       
      
       

    
   
   
      

    
    
    
      

    
     

    
      

      
      
      

      
      
      

       
      

      
      

      
      

      
      

    
    
    
      
       
     
      
        
      
      
      
       
       
      
        
      
      
       
        
   

    
    
    
    
     
    
    
     
    
    
    
     
     
    
      
    
    
     
      
    

       

      
  
   
      
       
   
    
      
  
    
     
      

    
    
     
      
    
    
     
    
    
     
      

  
   
      
       
   
     
      
  
    
     
      

    
    
     
      
    
    
     
    
    
     
      

  
    
      

    
    
      

   
     
      
  
    
      

    
     
      
    
    
     

  
    
      
       
   
     
      
   
    
      
       

    
    
    
     
    
    
    
    
    
    
     

   
   
     
  
     
      
  
    
    

    
    
      
    
     
      
    
    
    

    
     

    
    

    
       

    
     

   
      
      

    
    
     

pegsol strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 

  
  
   
   
   
    
   
     
    
     
     
     
     
     
     
     
      
     
      
      
      
     
       
       
      
       
       

sokoban strips ipc 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  
 
  
  
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  

transport strips ipc 
  
  
  
  
  
  
  
  
  
  
  

  
   
   
   
   
   
   
   
   
   
   

  
    
      
       
   
     
      
  
    
      
       

    
    
     
      
    
    
     
    
    
    
     

woodworking strips ipc 
  
  
  
  
  
  
  
  
  

   
   
   
   
   
   
  
   
   

    
    

    
    

    
    

    
    

    
    

    
    

   
      
       
  
     
     

    
     
      
    
    
    

   
      
       
  
     
      

    
     
      
    
    
    

   
      
       
  
     
     

    
     
       
    
    
     

table     similar table    pegsol  sokoban  transport  woodworking domains 
   

fikatz   domshlak

references
backstrom  c     nebel  b          complexity results sas  planning  computational
intelligence                 
bonet  b     geffner  h          planning heuristic search  artificial intelligence        
        
bylander  t          computational complexity propositional strips planning 
artificial intelligence                   
chen  h     gimenez  o          causal graphs structurally restricted planning  proceedings   th international conference automated planning scheduling
 icaps   pp        sydney  australia 
clarke  e   grumberg  o     peled  d          model checking  mit press 
coles  a  i   fox  m   long  d     smith  a  j          additive disjunctive heuristics
optimal planning  proceedings   th international conference automated
planning scheduling  icaps   pp       
culberson  j     schaeffer  j          pattern databases  computational intelligence         
       
domshlak  c     dinitz  y          multi agent off line coordination  structure complexity  proceedings sixth european conference planning  ecp   pp         
domshlak  c   hoffmann  j     sabharwal  a          friends foes  planning
satisfiability abstract cnf encodings  journal artificial intelligence research 
           
domshlak  c   katz  m     lefler  s          abstractions met landmarks  proceedings   th international conference automated planning scheduling
 icaps   pp        toronto  canada 
drager  k   finkbeiner  b     podelski  a          directed model checking distancepreserving abstractions  valmari  a   ed    proceedings   th international
spin workshop model checking software  vol       lecture notes computer
science  pp        berlin heidelberg  springer verlag 
edelkamp  s          planning pattern databases  proceedings european
conference planning  ecp   pp       
edelkamp  s          symbolic pattern databases heuristic search planning  proceedings international conference ai planning scheduling  aips   pp 
       
edelkamp  s          automated creation pattern database search heuristics  proceedings  th workshop model checking artificial intelligence  mochart  
edelkamp  s     kissmann  p          optimal symbolic planning action costs
preferences  proceedings   st international joint conference artificial
intelligence  ijcai   pp            pasadena  ca  us 
felner  a   korf  r  e     hanan  s          additive pattern database heuristics  journal
artificial intelligence research             
   

fiimplicit abstraction heuristics

haslum  p          additive reversed relaxed reachability heuristics revisited  proceedings  th international planning competition 
haslum  p   bonet  b     geffner  h          new admissible heuristics domainindependent planning  proceedings twentieth national conference artificial intelligence  aaai   pp           
haslum  p   botea  a   helmert  m   bonet  b     koenig  s          domain independent
construction pattern database heuristics cost optimal planning  proceedings
  th national conference artificial intelligence  aaai   pp           
haslum  p     geffner  h          admissible heuristics optimal planning  proceedings fifth international conference artificial intelligence planning systems
 icaps   pp         
helmert  m          complexity results standard benchmark domains planning 
artificial intelligence                  
helmert  m          planning heuristic based causal graph analysis  proceedings
  th international conference automated planning scheduling  icaps  
pp          whistler  canada 
helmert  m          fast downward planning system  journal artificial intelligence
research             
helmert  m     domshlak  c          landmarks  critical paths abstractions  whats
difference anyway   proceedings   th international conference automated planning scheduling  icaps   pp          thessaloniki  greece 
helmert  m   haslum  p     hoffmann  j          flexible abstraction heuristics optimal
sequential planning  proceedings   th international conference automated
planning scheduling  icaps   pp          providence  ri  usa 
helmert  m     mattmuller  r          accuracy admissible heuristic functions selected planning domains  proceedings   rd aaai conference artificial
intelligence  pp          chicago  usa 
helmert  m          understanding planning tasks  domain complexity heuristic
decomposition  vol       lecture notes computer science  springer 
hernadvolgyi  i     holte  r          psvn  vector representation production systems 
tech  rep           university ottawa 
jonsson  a          role macros tractable planning causal graphs  proceedings international joint conference artificial intelligence  ijcai     
pp           
jonsson  p     backstrom  c          state variable planning structural restrictions 
algorithms complexity  artificial intelligence                   
karpas  e     domshlak  c          cost optimal planning landmarks  proceedings
international joint conference artificial intelligence  ijcai      pp      
      pasadena  ca  usa 
   

fikatz   domshlak

katz  m     domshlak  c       a   structural patterns heuristics  icaps    workshop heuristics domain independent planning  progress  ideas  limitations 
challenges  providence  ri  usa 
katz  m     domshlak  c       b   structural patterns tractable sequentially optimal
planning  proceedings   th international conference automated planning
scheduling  icaps   pp          providence  ri  usa 
katz  m     domshlak  c          structural patterns heuristics via fork decomposition 
proceedings   th international conference automated planning scheduling  icaps   pp          sydney  australia 
katz  m     domshlak  c          structural pattern databases  proceedings
  th international conference automated planning scheduling  icaps   pp 
        thessaloniki  greece 
katz  m     domshlak  c          optimal admissible composition abstraction heuristics 
artificial intelligence              
pearl  j          heuristics   intelligent search strategies computer problem solving 
addison wesley 
prieditis  a          machine discovery effective admissible heuristics  machine learning 
           
richter  s   helmert  m     westphal  m          landmarks revisited  proceedings
twenty third national conference artificial intelligence  aaai   pp         
chicago  il  usa 
yang  f   culberson  j     holte  r          general additive search abstraction  tech 
rep  tr       university alberta 
yang  f   culberson  j   holte  r   zahavi  u     felner  a          general theory
additive state space abstractions  journal artificial intelligence research     
       

   


