journal artificial intelligence research                  

submitted       published      

constraint satisfaction framework executing
perceptions actions diagrammatic reasoning
bonny banerjee
b  chandrasekaran

banerjee    osu edu
chandra cse ohio state edu

laboratory artificial intelligence research
department computer science   engineering
ohio state university  columbus  oh        usa

abstract
diagrammatic reasoning  dr  pervasive human problem solving powerful adjunct symbolic reasoning based language like representations  research reported
paper contribution building general purpose dr system extension
soar like problem solving architecture  work framework dr
modeled process subtasks solved  appropriate  either inference
symbolic representations interaction diagram  i e   perceiving specied information diagram modifying creating objects diagram specied ways
according problem solving needs  perceptions actions dr systems built
far hand coded specic application  even rest system built
using general architecture  absence general framework executing perceptions actions poses major hindrance using opportunistically essence
open ended search problem solving 
goal develop framework executing wide variety specied perceptions actions across tasks domains without human intervention  observe
domain task specic visual perceptions actions transformed domain taskindependent spatial problems  specify spatial problem quantied constraint
satisfaction problem real domain using open ended vocabulary properties  relations actions involving three kinds diagrammatic objects points  curves  regions 
solving spatial problem specication requires computing equivalent simplied quantier free expression  complexity inherently doubly exponential 
represent objects conguration simple elements facilitate decomposition
complex problems simpler similar subproblems  show that  symbolic
solution subproblem expressed concisely  quantiers eliminated
spatial problems low order polynomial time using similar previously solved subproblems  requires determining similarity two problems  existence mapping
computable polynomial time  designing memory storing previously solved problems facilitate search  ecacy idea shown time
complexity analysis  demonstrate proposed approach executing perceptions
actions involved dr tasks two army applications 

   introduction
research reported paper contribution building problem solving agents
articial intelligence  ai  use diagrams  much people do  ai
not  given almost exclusive emphasis ai language like predicate symbolic representations  diagrammatic reasoning  dr  emerging area research number
c
    
ai access foundation  rights reserved 

fibanerjee   chandrasekaran

elds  including ai  glasgow  narayanan    chandrasekaran        chandrasekaran 
kurup    banerjee         logic  barwise   etchemendy        allwein   barwise        
psychology  tversky        tricket   trafton         research dr
one way dealing diagrams  dierent research issues addressed dierent
researchers  research reported paper considers dr problem solving activity
agent  human articial  makes use two forms representation spatial
representation form  d diagrams symbolic representation contains information predicate symbolic form similar logic natural language  schematic
dr architecture  proposed chandrasekaran et al                      illustrated
figure   
problem
spatial problem
specification language

spatial
problem
solver

problem
solver
solution
spatial problem

diagram

solution

inference
rules
symbolic
information
traditional ai
problem solver

figure    diagrammatic reasoning architecture 

    diagrammatic reasoning problem solving activity
dr architecture shares idea problem solving search problem state space
 laird  rosenbloom    newell        newell         approach  starting
initial state  agent applies operators bring state transitions reach goal
state  goal either reached decomposed subgoals use general
domain knowledge  reaching goal subgoal requires information generated
traditional problem solving architectures  e g   soar laird  newell    rosenbloom 
      act r anderson        inference using predicate symbolic representation 
dr architecture  agent extract information diagrams applying perceptionlike operations addition inference using predicate symbolic representation reach
goal subgoal  agent create modify objects diagram propose new
states goal might reached subsequent perceptions inferences 
illustrate conceptualization dr  let us consider real world problem 
army commander  planning strategic operations  uses terrain map chalk path
troops safely travel one base camp location l  another l  within given
time  information regarding nature terrain  e g   slow go no go
regions  altitude dierent parts terrain  speed troops travel
dierent kinds terrain  estimate maximum repower range enemy 
commander  veteran eld  well aware possibility troops
might ambushed along path enemy might hiding neighboring
regions  problem solving might proceed follows  diagram consisting part
   

fiexecuting perceptions actions diagrammatic reasoning

terrain map interest particular problem given  along peripheries
no go regions two points  l  l   see figure   a    commander
draws one shorter paths l  l  maintaining maximum distance
neighboring no go regions  see figure   b    knows kinds spatial relations
points route points enemy could hiding correspond
ambush potential  uses knowledge perceive  and mark  portions
path prone ambush due enemies hiding behind neighboring no go regions
 see figure   c    portion found  path inferred safe  length
safe path traversed given time  considered suitable path
operation  path drawn safe satisfy time constraint  another path
drawn  see figure   d   analyzed  procedure continues paths
exhausted  suitable path still found  least risky path might considered
operation  worst case  commander might infer operation
possible  problem similar vein  described above  considered forbus 
usher  chapman        
example  noteworthy problem solver  the commander  opportunistically brings together symbolic knowledge  such as  repower range enemies 
perception action diagram solve real world problem  phenomenon
characteristic dr whenever used solve problems dierent domains  as 
economics  geometry  engineering  computer aided design  military  on  observe
executing perceptions actions require solving purely spatial problems
involvement domain knowledge  spatial problems described terms
diagrammatic objects  as  points  curves  regions  spatial properties  e g  
length curve  relations  e g   point curve  involving them  example  perceiving portions path prone ambush due enemies hiding behind mountain
range requires computing set points q curve  the path  c  q within
specied distance  the repower range  point p curve  the mountain
range  c   see figure    b    formally  written
riskyp ortionsof p ath q  c    c    d  on q  c   p  on p  c   distancelesst han p  q  d 
distancelesst han p  q  d  distance p  q 
p point  paper  propose general ecient framework spatial
problem solving autonomously execute perceptions actions dr 
    mean diagram 
definition    diagram  diagram set labeled  d objects  o    o       on  
located clearly inside  i e   intersection touching  common region  or bounding box 
b  objects three types points  curves  regions 
definition    diagrammatic object  diagrammatic object   tuple   l    e  
l label  type  point  curve region   e spatial extent 
spatial extent diagrammatic object set points constituent object 
   

fibanerjee   chandrasekaran

 a  given diagram consisting two points  l 
l    three region obstacles 

 b  one shorter paths l  l 
avoiding obstacles drawn 

 c  portions path prone ambush perceived marked 

 d  another path drawn analyzed
risk 

figure    diagrammatic reasoning army commander nding safe path transporting troops l  l  within given time 

definition    diagrammatic image  diagrammatic image  i  diagram
set points constituent objects diagram  thus  d   o    o       on  
diagram oi   l oi   t  oi   e oi      diagrammatic image i d  given
n

i d   
e oi  
i 

denition diagram  due chandrasekaran et al                      supports
functional representation diagram articial agent  diagram external
medium  e g   piece paper  computer screen  is  one level  image consisting pixels
dierent intensities  another level  interpreted representation consisting
spatial objects domain interest  abstract diagram ideal  i e   points
dimensionless  curves thickness  etc  external diagram  points curves
consist least one pixel nite dimensions  need interchange
two forms diagrams reasoning interaction purposes  rest paper 
   

fiexecuting perceptions actions diagrammatic reasoning

term diagram refer abstract diagram only  unless otherwise stated 
interested diagrams line drawings color intensity variation 
diagrams form substantial class diagrams everyday use 
    perceptions actions diagrammatic reasoning
definition    perception  perception act extracting new piece information diagram  new piece information satisfies constraints specified terms
properties relations among existing objects diagram boolean real
number diagrammatic object s   thus  perception p mapping diagram
set booleans  t rue  f alse  real numbers set diagrammatic objects
satisfying constraints c 
c

p    t rue  f alse   

i d   i d 

definition    action  action act introducing new object s   modifying
deleting existing object s  diagram satisfying constraints specified terms
properties relations among existing objects  thus  action mapping
diagram new set diagrammatic objects satisfying constraints c 
c

  dd  

i d    i d  

last couple decades  numerous dr systems built dierent applications dierent domains  following review well known dr systems
problem solving agent reasons using diagrams  review help realize
role perception action dr  spatial problems implicit perceptions
actions 
sketchy  pisan        computer implementation model graph understanding  recognizes diagrammatic objects   points  lines  regions  vocabulary
properties relations includes coordinate point  right of  above  inside  steeper 
bigger  vertical  change slope  touches  intersects  line  border  forms border  etc 
representing conceptual relationships domains  as  thermodynamics economics 
domain translator responsible converting domain specic conceptual questions
domain independent graphical relations  examples perception supply demand
graph economics include price eects supply  demand  market price
product  requires solving visual problems  as  point supply equal
demand   corresponding spatial problem  compute intersection two curves  
price supply line quantity       corresponding spatial problem 
compute point curve whose one coordinate given   quantity price
directly proportional   corresponding spatial problem  check whether slope curve
two points positive constant not   quantity price inversely
proportional   corresponding spatial problem  check whether slope curve
two points negative constant not   etc  actions model required due
nature task  examples graphs understood sketchy shown figure
  
   

fibanerjee   chandrasekaran

 a  graph economics

 b  graph thermodynamics

figure    examples graphs understood sketchy  reproduced permission
pisan        

figure    example deected frame analysis  from civil engineering  redraw 
reproduced permission tessler et al         

   

fiexecuting perceptions actions diagrammatic reasoning

redraw system  tessler et al         combines diagrammatic symbolic reasoning qualitatively determine deected shape frame structure load 
structural analysis problem civil engineering  uses vocabulary properties relations including get angular displacement  get displacement  symmetrical p  connected to 
near  left  above  rotate  bend  translate  smooth  etc  three kinds diagrammatic objects lines  splines  circles  though properties relations domain independent 
some  as  bend reect assumptions implicit domain task
dened accordingly  perceptions actions called inspection manipulation operators system  underlying representation combination grid based
cartesian coordinates shapes represented using grid element
grid corresponds point diagram lines represented set coordinate
points  examples perception action include deecting beam direction
load  checking whether beam column perpendicular particular rigid
joint  etc  require solving visual problems  as  bend beam  negative
direction y axis  corresponding spatial problem  compute curve given slope
given point   make angle beam  column  joint     degrees without modifying beam   corresponding spatial problem  compute curve makes
particular angle given point given curve   get angle beam 
column  ends connected joint   corresponding spatial problem  compute
angle two curves given point   etc  example deected frame analysis
redraw shown figure   
archimedes system  lindsay        assists human demonstrating theorems
euclidean geometry modifying creating diagrams according instructions
thereafter perceiving inferencing diagram  operates two diagrammatic objects   points line segments  recognizes shapes  as  square  triangle  path 
etc  underlying representation array  grid based  perceptions  called retrieval
processes  dierent classes  as  verify relationship  test condition  etc 
actions  called construction processes  dierent classes  as  create object
certain properties  transform object  etc  executing perceptions actions require solving spatial problems  as  create segment parallel given segment
given point  rotate object check whether coincides another object  etc 
example geometry theorem demonstrated archimedes shown figure   
diamond  jamnik         system proving mathematical theorems  uses
sequence actions diagrams assisted human prove specic ground instances
generalizes induction  uses mixture cartesian topological representations
represent dot  equivalent point cartesian representation  diagrammatic
object discrete space  line area  or region  diagrammatic objects
continuous space  elementary shapes  as  row  column  ell  frame  constructed
dots  derived shapes  as  square  triangle  rectangle  etc  constructed
elementary derived shapes  vocabulary consists atomic onestep operations  e g   rotate  translate  cut  join  project  d  d  remove  insert
segment  etc    spatial problems system composite operations composed
atomic ones  as  draw right angled triangle  translate rotate triangle  etc 
system need execute perceptions information diagram perceived
   

fibanerjee   chandrasekaran

figure    example geometry theorem demonstrated archimedes 

figure    example mathematical theorem proven diamond  theorem
nelson        

   

fiexecuting perceptions actions diagrammatic reasoning

human decides actions applied proof search  example
mathematical theorem proven diamond shown figure   
georep  ferguson   forbus        takes input line drawing vector graphics
representation creates predicate calculus representation drawings spatial relations  five primitive shape types recognized  namely line segments  circular arcs  circles
ellipses  splines  open closed   positioned text  properties relations 
as  proximity detection  orientation detection  e g   horizontal  vertical  above  beside   parallelism  connectivity  e g   detecting corner  intersection  mid connection  touch   etc 
deployed accomplish task  underlying representation vector graphics line
drawings  systems  as  magi  ferguson         juxta  ferguson   forbus        
coadd built using georep symmetry detection  critiquing diagrams based
captions  producing description units  areas  tasks course
action diagram  respectively  georep  due limitation task  need
execute action  examples visual problems georep include guring cup
contains liquid  corresponding spatial problem  compare areas polygons representing cups   determine whether gure symmetric  corresponding spatial
problem  check whether one polygon congruent reection polygon  
etc  example ambush analysis georep shown figure   

figure    example ambush analysis georep  reproduced permission
forbus et al         

preceding discussion leads observation dr systems require perceiving and or acting diagrams  every perception action requires solving
domain independent spatial problem  thus  general purpose dr system solving
problems applications across multiple domains would require solving large variety
non trivial domain independent spatial problems  spatial problems described
   

fibanerjee   chandrasekaran

terms three diagrammatic objects points  curves  regions  spatial properties
relations involving them 
    problem
perceptions actions solved dr system  typically  human developing dr system identies priori problem solving steps including set perceptions
actions  hand codes ecient algorithms solving them  problem
solving steps need altered future result  new perception arises 
developer write another algorithm obtaining solution  thus  algorithms need
hand coded perception action  clearly  inconvenient time consuming developing dr system  allow fast easy experimentation
dierent problem solving strategies problem  drawbacks
magnied goal build general purpose dr system large variety perceptions actions possible feasible ascertain priori 
develop store algorithms for  hence  goal investigate spatial problem solver
 sps  eciently solving spatial problems implicit perceptions actions without human
intervention  
    contributions
paper  make following contributions 
   observe wide variety visual perceptions actions dr applications
transformed domain task independent spatial problems  developed language
specifying spatial problems  i e   spatial relations actions  quantied constraint
satisfaction problems  qcsps  rst order logic using xed set mathematical logical
operators real domain open ended vocabulary properties  relations
actions  spatial relation action involving points expressed using
operators real variables rst order logic included vocabulary 
further  spatial relation action involving curves and or regions expressed
using relations on p  c  and or inside p  r  p point  c curve  r region 
relation action involving points rst order logic included
vocabulary  vocabulary grows richer spatial relations actions specied 
   spatial relation action included vocabulary solvable
sps  real qcsps known computationally intractable  substantial part
spatial problem solving literature concentrates constraint satisfaction problems  csps  
developed general framework solving spatial problems specied qcsps 
framework bypasses process quantier elimination  qe  computational bottleneck doubly exponential problem taking help previously solved similar
spatial problems  show that  symbolic solution problem expressed
   reader keep dr architecture mind  shown figure    two problem
solvers main problem solver always referred problem solver  this might
human  spatial problem solver referred sps  this strictly
human intervention   problem solver responsible entire problem solving strategy including
converting domain specific perceptions actions domain independent spatial problems  sps
responsible solving domain independent spatial problems receives problem
solver  important get confused roles played two 

   

fiexecuting perceptions actions diagrammatic reasoning

concisely  quantiers eliminated spatial problems low order polynomial time
using similar previously solved problems  framework leaves room ecient
convenient incorporating future results least two possible directions learning
constraints examples  automatic constraint acquisition  carefully exploiting rich
portfolio qe algorithms 
rest paper organized follows  next section  discuss language
specifying spatial problem sps  section   describes sps  section   analyzes
computational complexity sps  section   shows proposed sps
augmented traditional ai problem solver  soar  reasoning diagrams two
real world applications  finally  end discussion conclusion 

   specification language
section  discuss high level language nite  extensible  human usable 
expressive enough describe wide variety  d spatial problems relevant dr 
problems specied language accepted input sps solved
without human intervention  specication language independent sps  i e  
problem specication remains unchanged even underlying representation
reasoning strategy sps change 
    diagrammatic objects
specication language recognizes three kinds diagrammatic objects points  curves 
regions 
point  point basic diagrammatic object  objects dened terms
set points 
curve  curve set points it  approximate curve piecewise linearly 
thus  curve c approximated sequence n points  p    p       pn    c set
points lies constituent line segments  i e 
c  p   on p   p    p     on p   p    p        on p   pn    pn    
p  x  y   x     pi   pi     line segment pi pi     call
points  p    p       pn   vertex points  sake simplicity specication  problem
solver write sequence vertex points  p    p       pn   specify curve c 
region  region set points inside boundary  boundary region
closed curve approximated piecewise linearly  thus  region simple  convex
concave  polygon  simple polygon triangulated point inside
region inside one triangles  thus  boundary region r approximated
sequence n points  p    p       pn   
r  p   inside p   r      inside p   r         inside p   r  m   
number triangles region r triangulation   r  i  ith triangle
r  p  x  y   x    sake simplicity specication  problem solver
write sequence vertex points  p    p       pn   boundary curve specify
   

fibanerjee   chandrasekaran

region r  whether sequence vertex points corresponds curve region
determined automatically system context property relation predicate 
dene inside section     
further  sps asked recognize kind diagrammatic object s  obtained
solution spatial problem  achieved function recognize dext  
dext external diagram  i e   constituted pixels unlike abstract diagram  
example  set points behind curve c respect given point p
region object curve object depending nature c location respect
p  order recognize output  sps colors corresponding set pixels
external diagram pixel predetermined resolution corresponds point 
set colored pixels grouped two adjacent pixels always belong
group  group pixels constitutes diagrammatic object  boundary pixels
group determined  group consists less three pixels  consider
point object  group consists two pixels width  both horizontal
vertical  always less three pixels  consider curve object  otherwise 
group constitutes region object 
    vocabulary
unlike certain well known qualitative spatial reasoning calculi  e g   intersection calculus
egenhofer        cardinal direction calculus frank        region connection calculus
randell  cui    cohn         interested nding minimal set spatial
relations vocabulary based closed set predicates  rather  vocabulary
based closed set operators  to discussed shortly section       spatial
relations actions included vocabulary follows 
   spatial relation action involving points expressed using
xed set operators real variables rst order logic 
   spatial relation action involving points  curves regions expressed
rst order logic using xed set operators  real variables  relation action
    relations on p  c  and or inside p  r  p point  c curve  r
region 
   spatial relation action involving points  curves regions expressed
rst order logic using xed set operators  real variables  relation action
      
thus  vocabulary open ended addition new properties relations
encouraged problem cannot easily expressed using existing ones  observation that  human often encounters new perceptions actions
specied using already known ones  however  large vocabulary helps specify
new ones conveniently  dr literature  pisan        tessler et al         lindsay        jamnik        ferguson   forbus        chandrasekaran et al         banerjee  
chandrasekaran         identied vocabulary properties  relations actions
based wide usage expressing variety real world spatial problems dierent
domains  vocabulary used paper starting point specifying
spatial problems  follows examples properties  relations actions
vocabulary 
   

fiexecuting perceptions actions diagrammatic reasoning

properties  associated kind object properties location
point  location  closedness length curve  location  area periphery
region  periphery region refers boundary curve  user
dene particular shapes  e g   circle  triangle  annulus  etc   curves regions
appropriate reasoning domain  dierent shapes might specic
properties  as  radius circle  height triangle  etc  easily associated
objects vocabulary user  dr requires solving spatial problems
concerning discrete set points  problems  properties  as  centroid s 
v ariance s   set points  included vocabulary 
relations  vocabulary contains widely used relations  or relational
predicates  involving points  as  lef tof  p    p     opof  p    p     collinear p    p    p    
between p    p    p    p    p    p  points  relation involving points
included vocabulary needed  on p  c   p point c curve 
fundamental relation involving curve inside p  r   p point r region  fundamental relation involving region vocabulary relation
involving curves regions uses and or inside  relational predicates involving curves regions vocabulary intersect c    c     intersectionp oints q  c    c    
ouches c    c     subcurveof  c    c    c    c  curves  subregionof  r    r   
r    r  regions 
actions  further  set predicates identifying emergent objects modications existing objects  example  ranslate q  o  tx   ty   returns translation object
tx units along x axis ty units along y axis  rotate q  o  c    returns rotation
object respect point c center degrees anti clockwise direction 
ref lect q  o   a  b   returns reection object respect line segment  a  b 
 i e   point point b   scale q  o  c  sx   sy   returns scaling object
respect point c sx units along x axis sy units along y axis  curve
region  predicates dened using corresponding action involving point
predicates and or inside 

    language
language problem solver  human articial  species spatial
problem sps  internal representations objects  properties  relations 
problem solving strategies hidden problem solver  specication language
remains unchanged even underlying representation problem solving strategy
changed  use rst order predicate logic specication language  previously reported
banerjee chandrasekaran        
operators  language recognizes set boolean operators         set arithmetic operators            set relational operators               quantiers
      brackets    used express precedence brackets    used
express set  paper  often use certain combination operators  as   
    etc  sake brevity 
   

fibanerjee   chandrasekaran

domain  language allows problem solver specify domain set
variables assume values  unless otherwise stated  domain real plane
  point variable real line non diagrammatic variable 
functions  further  language recognizes two functions aximize f   x  y        c 
inimize f   x  y        c   maximizes minimizes function f respect
variables  x  y       satisfying boolean combination constraints c  which might
involve quantiers  returns maximum minimum value f respectively along
conditions variables 
quantified constraint satisfaction problem  instance constraint satisfaction problem  csp  consists tuple   v  d  c   v nite set variables 
domain  c   c        c k   set constraints  constraint c consists pair
    ri   list mi variables ri mi  ary relation domain d 
question decide whether assignment mapping variable
domain element constraints satised  variables csp
thought implicitly existentially quantied 
useful generalization csp quantied constraint satisfaction problem 
variables may existentially universally quantied  instance
qcsp consists quantied formula rst order logic  consists ordered list
variables associated quantiers along set constraints  qcsp
expressed follows 
 v       vm   q xn      x     v       vm   x       xn  
q xn      x    qn xn      q  x 
qi        x       xn   set quantied variables   v       vm   set free
variables  v   v       vm   x       xn    quantier free expression called matrix 
representation quantied expression   written sequence quantiers followed matrix  referred prenex form  example qcsp follows 
subcurveof  c    c  p  on p  c    on p  c 
c    c curves     example  two constraints 
   p  c      
   p  c    
further  v   p        variables c  c  given  question
decide whether assignment mapping p element   logical
combination constraints satised  assignment exists  c 
subcurve c  otherwise is 
decision  function optimization problems  proposed specication
language  spatial problem expressed qcsp v consists variables type
point  curve region       solving spatial problem involves 
   free variables v  i e   variables v quantied   deciding
whether exists mapping v satisfying c 
   

fiexecuting perceptions actions diagrammatic reasoning

   free variables v  computing conditions free variables
mapping v satisfying c exists 
thus  spatial problem classied decision function optimization
problem real domain  rst case constitutes decision problem yields true
false solution  second case constitutes function problem involves computing
diagrammatic object s  described conditions free variables  spatial
problem requires computing best mapping v satisfying c  called
optimization problem 
let us consider example  given curve c two points p  q  spatial problem
behindcurve q  c  p  dened deciding whether q behind c respect
p  might specied deciding whether curve c line segment  p  q 
intersect  thus 
behindcurve q  c  p  intersect c   p  q  
particular instances q  p  c  solution problem rue f alse  hence
decision problem  see figure     particular instances p  c  generalized
coordinates q i e   q  x  y   solution problem logical combination
conditions involving x y  plotted constitutes region object  see figure
    hence  function problem  decision problem merely requires checking
whether given instance object satises constraints not  function
problem requires computing conditions general object satisfy constraints 

figure    behindcurve decision problem  one points q behind c
respect p one not 

again  given curve c two points p  q  spatial problem f urthestbehindcurve q 
c  p  dened deciding whether q furthest point behind c respect
p  might specied deciding whether q lies behind c respect p
   

fibanerjee   chandrasekaran

figure    behindcurve function problem  shaded region r behind c
respect p 

distance p q maximum  thus 
f urthestbehindcurve q  c  p  behindcurve q  c  p  b  behindcurve b  c  p 
comparedistance b  p  q  p 
comparedistance a  b  c  d  distance a  b  distance c  d 
particular instances q  p  c  solution problem rue f alse  hence
decision problem  particular instances p  c  generalized coordinates q i e  
q  x  y   solution problem logical combination conditions involving
x y  plotted constitutes single point object  assuming one
furthest point behind c respect p  dependent nature c
distance function dened  see figure     
alternative way specifying problem f urthestbehindcurve q  c  p 
explicitly asking maximize distance p q q satises constraint
behindcurve q  c  p   written as 
f urthestbehindcurve q  c  p  aximize distance q  p    q   behindcurve q  c  p  
outputs conditions involving x y  constitutes single point object 
aximize  or inimize  function assumes pool candidates choose
best satisfy set constraints  fact stated explicitly
using aximize  or inimize  function makes specication dicult
come cumbersome  ip side  specication problem
using aximize  or inimize  function cannot used decision problem 
is  whether particular instance object best candidate satises
   

fiexecuting perceptions actions diagrammatic reasoning

q

figure     f urthestbehindcurve optimization problem  point q
furthest point behind c respect p 

constraints cannot computed specication  unlike former specication 
problem type  computes best candidate pool candidates 
called optimization problem 
definition    spatial problem  spatial problem  or problem  qcsp
variable  quantified free  type point  domain    
thus  spatial problem mapping diagram satisfying logical combination constraints c set booleans  t rue  f alse  real numbers diagrammatic
objects   i e  
c

  d t rue  f alse 
solving spatial problem requires eliminating quantiers solving algebraic equations inequalities arrive simplied expression  computational bottleneck
solving spatial problem quantier elimination  qe  inherently doubly exponential  davenport   heintz         recently  brown davenport       
shown real qe doubly exponential even one free variable
polynomials quantied input linear  paper  concentrate primarily qe part spatial problem solving hence  solution equivalent
quantifier free expression necessarily simplified one  theoretically 
best complexity qe achieved far o s l    ki     d l   ki   number
polynomials  maximum degree coecients real  l number
free
variables  ki number variables ith quantier block k  
ki
number quantied variables  basu  pollack    roy         however  algorithm
complicated yet practical implementation  general elaborately
implemented method real qe cylindrical algebraic decomposition cad  collins
   

fibanerjee   chandrasekaran

k 

  hong         complexity  sd o      another implemented method  qe
virtual substitution  weispfenning         restricted formulas quantied
variables occur quadratically  complexity method doubly exponential
number blocks variables delimited alternations existential universal quantiers  thus  exist general algorithms qe  large real world
problems  soon becomes time consuming 

   spatial problem solver
paper  concentrate developing ecient sps without sacricing generality 
goal design sps bypass general qe algorithms much possible 
either taking help previously solved similar problems memory obtain
solution using set practical algorithms developed
limited class problems  describe overall control mechanism sps  see
figure     
many domains  as  military  spatial problems involve diagrammatic objects
arbitrary shaped  e g   mountainous regions  often cannot approximated enough
well dened shapes solution reliably depend specics shape 
example  solution problem nding places behind mountain one
hide enemy depends critically particular shape mountain  due
nature domains  choose represent curves piecewise linearly regions
polygons  piecewise linear curves polygonal regions unions line segments
triangular regions respectively  facilitate decomposition complex problems
simpler similar subproblems  observe similar subproblems involving
existential universal quantiers occur regularly spatial problem solving
process solved one qe algorithms  e g   cad   thereby incurring doubly
exponential time  minimize enormous computational cost reusing solutions
subproblems previously solved 
given spatial problem specication language  sps replaces numerical values problem symbolic variables  transforms symbolic problem
specication modeling language  to described shortly  progressively replacing
objects predicates base objects predicates internal denitions  denition
cannot found  ags error halts till provided  rst step  sps decomposes disjunctions and or conjunctions subproblems prenex form 
see later  subproblems similar one
solved  solution others computed it  next  searches memory
problems similar   memory contains symbolic problems corresponding quantier free symbolic solutions  mapped one problems 
solution readily obtained reverse mapping corresponding symbolic solution
memory  obtaining solution way completely bypasses qe process 
computational bottleneck sps  thereby reducing computational costs considerably  sps cannot map problem memory  sends problem
classier classies sends appropriate qe algorithm  problem classier combination qe algorithms borrowed mathematica  wolfram 
       sps solves new subproblem  subproblem solution stored
   

fiexecuting perceptions actions diagrammatic reasoning

problem
specification language

convert problem modeling language  search
vocabulary replace terms specification
definitions  exists  otherwise request definition

problem
modeling language
decompose problem conjunctions and or
disjunctions subproblems prenex form

first subproblem i   
search memory
similar subproblem

match found

memory

match found

compute solution
subproblem i 
help solution
matched problem

problem classifier
combination constraint
solvers quantifier
elimination algorithms

subproblem i 

solution

compute solutions subproblems
solution i  combine

solution

figure     flow diagram spatial problem solver 
memory solution used similar problem encountered future 
thus  sps grows ecient solves problems  finally  sps computes
solution given problem combining solutions subproblems 
unfortunately  problems  quantiers cannot eliminated symbolically reasonable time  sps tries prescribed time  resorts practical
   

fibanerjee   chandrasekaran

methods  as  techniques especially suited low degree polynomials  e g   dolzmann 
sturm    weispfenning        approximate methods obtaining subset solution sucient immediate purposes  e g   ratschan        lasaruk   sturm        
shown  integer linear programming  e g   leyton brown  nudelman    shoham 
      satisability testing  e g   xu  hutter  hoos    leyton brown        
best on average solver out performed carefully exploiting portfolio possibly
poorer on average solvers  accordingly  researchers experimented dierent
ways selecting portfolio solvers  see example  xu et al         pulina   tacchella 
      sayag  fine    mansour        streeter  golovin    smith        gebruers  hnich 
bridge    freuder        omahony  hebrard  holland  nugent    osullivan        
none work involve solving qcsps real domain  directly usable
purposes discussed paper  however  expect
result extend qcsp solvers real domain  building smartly
selecting portfolio qcsp solvers promising line future research 
approach  subproblem deemed symbolically unsolvable prescribed time 
specication stored memory future  similar problem directly
subjected practical methods  thereby saving prescribed time 
    modeling language
language problem described terms underlying representations objects properties relations form readily subjected algebraic
manipulation  location point p represented pair  x  y   x   
coordinates 
notation  x  y coordinates point p denoted p x p y respectively 
distance two points  p q  given
distance p  q 



 p x q x      p y q y  

location curve c represented sequence vertex points  p    p       pn   
notation  number vertex points curve c denoted   c   ith vertex
point denoted c i   ith line segment denoted  c i   c i       
line segment ls specied pair vertex  or terminal  points  x 
y coordinates ls represented parametrically
fx  ls  t  ls    x    ls    x ls    x 
fy  ls  t  ls    y    ls    y ls    y 
parameter       relation on p  ls   p point  given
on p  ls  t      fx  ls  t    p x fy  ls  t    p y
length line segment ls given

   

fiexecuting perceptions actions diagrammatic reasoning

length ls  distance ls     ls    
length curve c given


  c  

length c 

length  c i   c i       

i 

location region r represented location periphery
piecewise linear closed curve  discussed section      internally region triangulated
 computable linear time shown chazelle        seidel          aim
reducing simplifying computations  more section      
notation  triangulation  number triangles region r denoted    r 
ith triangle r denoted  r  i  
area triangle given
area  

 
 

 


 i  x  i        y  i        x  i  y

i 

note area triangle positive sequence vertex points periphery
given counter clockwise direction  otherwise negative  area region r given
   r 

area r 



area  r  i  

i 

relation inside p     p point triangle  given
inside p     i  lef tof  p    i    i         
lef tof  p  ls  area  ls     ls     p      
ls line segment 
action ranslate q  c  tx   ty   q  x  y   c curve  tx   ty real numbers  given
ranslate q  p  tx   ty   q x   p x   tx q y   p y   ty
ranslate q  c  tx   ty   a  on a  c  ranslate q  a  tx   ty  
definition    base object  base object simplest form diagrammatic object 
point simplest form  line segment simplest form curve 
triangular region simplest form region  thus  internally  three base
objects point  line segment  triangle 
definition    base predicate  base predicate predicate accepts base
objects arguments 
   vik        discusses implementation mathematica 

   

fibanerjee   chandrasekaran

examples base predicates include lef tof  p    p     between p    p    p     on p  ls  
inside p     p  p    p    p  points  ls line segment  triangular region 
  c  

lemma    on p  c  i 

on p   c i   c i       

proof  proof follows representation curve  described section     
   r 


lemma    inside p  r  i 
inside p   r  i  

proof  proof follows representation region  described section     
relations included vocabulary internally dened terms base predicates  example  predicate  intersect c    c    c    c  curves  dened
terms base predicates
intersect c    c   
a  on a  c    on a  c   
  c   

a  i  

  c   

on a   c   i   c   i        j  

on a   c   j   c   j       

    decomposing problem
definition    decomposition  decomposition process replacing relational
predicates  involving free variables types curve region  spatial problem  quantified expression  conjunctions disjunctions base predicates taking conjunctions disjunctions front expression  expression following conjunctions disjunctions subproblem 
example  decomposition problem intersect c    c    a  on a  c    on a  c   
occurs follows 
intersect c    c    a  on a  c    on a  c   
  c   

a  i  

  c   

on a   c   i   c   i     j  

on a   c   j   c   j       bef ore decomposition 

  c      c    
j  a  on a   c   i   c   i     on a   c   j   c   j     

i  

  c   

i  

  c   

j  

 af ter decomposition 

intersect   c   i   c   i         c   j   c   j       

intersect   c   i   c   i         c   j   c   j        subproblem  however  question
  c      c   
arises intersect c    c    i   j   intersect   c   i   c   i       c   j   c   j       
is  replace  
theorem    problem equivalent decomposition
contain following forms 
   

fiexecuting perceptions actions diagrammatic reasoning

f  

p  on p  c  inside p  r 

f  

p  on p  c  inside p  r 

f  

p  inside p  r  inside p  r   

f  

p  inside p  r  inside p  r   

 complement f  

 complement f  

c curve  r  r  regions  c  r  r  free variables 
proof  discussed section      framework  on p  c  inside p  r  two
fundamental relations using relation involving curve region specied 
also  framework  point quantiable variable       quantiers         boolean operators sucient express boolean expression 
thus  spatial problem involving curves  and points regions  logical
combination smaller problems following form 
qp  rel p  c  q       rel  on  on 
spatial problem involving regions  and points curves  logical combination smaller problems following form 
qp  rel p  c  q       rel  inside  inside 
spatial problem involving curves regions  and points  logical combination
smaller problems following form 
qp  rel   p  c  rel   p  r 
q       rel   on  on   rel   inside  inside       
spatial problem involving two curves  c c     and points  logical combination
smaller problems following form 
qp  rel   p  c  rel   p  c   
q       rel   on  on   rel   on  on       
again  spatial problem involving two regions  r r     and points  logical combination smaller problems following form 
qp  rel   p  r  rel   p  r   
q       rel   inside  inside   rel   inside  inside       
symbolically solved problems     total  two ways directly
decomposing p  x  y   c  p    p       pn    n     pi  xpi   ypi    c   a    a       au  
   

fibanerjee   chandrasekaran

 u     ai  xai   yai    r  q    q       qm    m     qi  xqi   yqi    r   b    b       bv  
 v     bi  xbi   ybi    turned solutions two ways equivalent
problems  except four cases stated theorem statement  note f  
specication computing whether curve c entirely inside region r not  let
lsi ith line segment c    n    j j th triangular region r
   j     found
p  on p  c  inside p  r 
m 
p   n 
i  on p  lsi     j  inside p  j   
m 
p  n 
i  j   on p  lsi   inside p  j   
m 
n 
i  j   p  on p  lsi   inside p  j   

because  c entirely inside r  necessary line segments c
inside triangle r  line segment c span across multiple triangles r c
still inside r  figure    a  shows example c inside r line segment
c spans across two triangles r  case  solution problem
rue computed directly f alse computed via decomposition 
rst case f   theorem statement explained similarly  forms f   f  
rewritten follows 
f   

p  on p  c  inside p  r 
p  on p  c  inside p  r  r b r

f   

p  on p  c  inside p  r 
p  on p  c  inside p  r  r b r

b rectangular region  boundary  containing diagram discussed section
     note rewritten forms equivalent decomposition 
again  f   specication computing whether region r entirely inside region
r  not  let   i ith triangle r     v    j j th triangular
region r    j     found
p  inside p  r  inside p  r   
v 
p   m 
j  inside p  j     i  inside p    i   
v 
p  m 
j  i   inside p  j   inside p    i   
v 
m 
j  i   p  inside p  j   inside p    i   

   

fiexecuting perceptions actions diagrammatic reasoning

r

r
c

 a  curve c inside region r line
segment c inside one triangle r 

r 

 b  region r inside region r  triangle r inside one triangle r   

figure     examples show decomposition curves regions problems containing forms f    f    f    f   

because  r entirely inside r    necessary triangles r
inside triangle r    triangle r span across multiple triangles r  r
still inside r    figure    b  shows example r inside r  triangle r
spans across two triangles r    case  solution problem rue
computed directly f alse computed via decomposition  third case
f   theorem statement explained similarly  forms f   f  
rewritten follows 
f   

p  inside p  r  inside p  r   
p  inside p  r  inside p  r    r  b r 

f   

p  inside p  r  inside p  r   
p  inside p  r  inside p  r    r  b r 

again  rewritten forms equivalent decomposition 

theorem    subproblem resulting decomposing problem contains base predicates
only 
proof  problem decomposable due presence relational predicates  involving
free variables types curve region  specication  stated section     
problem involving curve region specied framework using relation s 
involving points relation inside  thus  relation rel q  c  involving
point q curve c rewritten as 
rel q  c  a  on a  c  rel  q  a 

   

fibanerjee   chandrasekaran

rel q  c  a  on a  c  rel  q  a 
rel base predicate involving points q a  cases  expression
right hand side contains base predicates only  let problem involving
points curves regions  let us replace occurrence non base predicates
involving curve  as  rel q  c   equivalent expression consisting
base predicates involving points line segments only  resulting expression
consists base predicates involving points on  lemma    non base
rewritten disjunctions base on  therefore  resulting expression consists
base predicates involving points only 
similarly  relation rel q  r  involving point q region r rewritten as 
rel q  r  a  inside a  r  rel  q  a 

rel q  r  a  inside a  r  rel  q  a 
rel base predicate involving points q a  problem involving
points regions curves  replacing occurrence non base predicates involving
region  as  rel q  r   equivalent expression consisting inside base
predicates involving points only  using lemma    results expression
consisting base predicates involving points triangular regions only 
processes employed involves curves regions  thus  subproblem
resulting decomposing problem contain base predicates only 
    mapping similar problem
definition     similarity  define two spatial problems  quantified expressions 
similar exists one to one correspondence variables  free quantified  
given two similar problems        solution       goal construct
one to one mapping variables     solution  
obtained replacing variables   corresponding variables  thereby
completely bypassing qe process computational bottleneck sps  one toone mapping exists     logically equivalent  however  equivalence checking
logical expressions np hard  dershowitz   jouannaud        goldberg   novikov 
       thus  equivalence checking cannot used determine similarity eciently 
problem features  let quantier free expression expressed
prenex form  i e  
 v       vm   q xn      x     v       vm   x       xn  
variable xi appears q q contains redundant variables 
quantier block qb q maximal contiguous subsequence q every variable
qb quantier type  quantier blocks ordered sequence
appearance q  qb  qb  qb  equal appears qb  q  quantied
   

fiexecuting perceptions actions diagrammatic reasoning



   
p 

v

p 

p 

v

p 



p 

p 
figure     parse tree matrix problem conjunctive normal form 

variable xi appears quantier block qb xi    ordering quantier blocks imposes partial order quantied variables  variables
quantier block unordered 
let   q      q        parse trees     respectively  example  matrix problem conjunctive normal form might look like 
p   p  p     p  p  p       
pi predicate  subproblem  pi base predicate  parse
tree sentence shown figure    
two trees        isomorphic exists bijection       preserves adjacency root vertex  i e    u  adjacent  w  u adjacent w 
 root        root      follows two isomorphic trees maximum height
number vertices height  let l maximum height
number vertices height i  function   dened

               






i 

integer     denotes sequence  ith smallest prime number 
maps sequence integers unique integer  problem   tuple   
constructed follows 

   

fibanerjee   chandrasekaran

    

  l 
   vertices dierent heights parse tree  
  quantier blocks 
order quantier blocks 
   variables dierent quantier blocks   

definition     structural equivalence  two spatial problems  quantified expressions  
      structurally equivalent satisfy following conditions 
              
       isomorphic other      parse trees matrices
    respectively 
   contents  predicate boolean operator         pair corresponding nodes
    identical 
   exists one to one correspondence variables arguments
predicates contained pair corresponding nodes       moreover  two
mappings obtained two pairs corresponding nodes     contradict
other 
see section    structural equivalence two problems computed
time linear size parse trees  note two problems structurally
equivalent  logically equivalent vice versa  example  expressions  p p   q q  p q base predicates  logically equivalent 
structurally equivalent since parse trees isomorphic  general  logical
equivalence imply structural equivalence redundancies  redundant
variables and or predicates  one problems  sake computational eciency  use structural equivalence determine similarity two problems 
theorem    subproblems obtained decomposing problem always similar 
proof  let us assume  contradiction  exists problem decomposes
subproblems two them  j k   dissimilar  without loss generality 
assume subproblems except k similar j   then 

n

 ni     ni         ipp   qi  i     ip i  i     ip   qk k        
j  i  i     ip    i  n      i  n         ip np   
qj  qi  i     ip    i  n      i  n         ip np  
n

ni     ni         ipp    qi  i     ip qk   i  i     ip k  
ni     ni         ipp   qi  i     ip i  i     ip
n

thus  subproblems similar contradicts assumption  hence proof
follows 
intuitively  proposed framework  curve represented arbitrary number vertices  line segment always represented two end points  similarly 
   

fiexecuting perceptions actions diagrammatic reasoning

periphery region represented arbitrary number vertices  periphery
triangular region always represented three vertices  hence  two line segments
triangular regions always represented similarly dier coordinates
constituent vertices  unlike two curves regions  base predicates dened terms
base objects points  line segments  triangular regions  thus  predicate
dened conjunctions disjunctions base predicates  base predicates always
similar  decomposition problem subproblems merely replaces one
predicates similar base predicates  hence  subproblems similar 
    memory organization
memory sps hierarchically organized stores problems disjoint classes based
progressively problems features  see figure      decomposing problem
subproblems computing   subproblems value  
sps checks whether parse trees isomorphic mapping exists
variables  since memory hierarchy constant height  insertion problem
searching potential class similar problems executed constant time  also 
features classify problems discriminative enough create large number
classes  leaf nodes   class containing problems  thereby reducing search
problems belonging class 

   computational complexity
analyze time complexity algorithms used framework 
implementation  problem data structure consisting two elds p arset ree
solution  p arset ree stores lexicographically sorted parse tree matrix
solution stores symbolic solution concise form  parse tree
constructed time o t  number base predicates boolean
operators          boolean operators occupy non leaf nodes parse tree
base predicates occupy leaf nodes  lexicographically sorting tree requires
lexicographically sorting contents children non leaf node tree  let
number boolean operators ti number children ith boolean


operator  thus 
ti      note since base predicate always followed
i 

boolean operator    constant  lexicographically sorting list
contents children node requires o ti logti   time  thus  total time required


repeating process non leaf nodes
o ti logti    since average number
i 



children per node

i 



tree



i 

 





o 

ti  

t 
  total time required lexicographically sort


t 
t 
log     o t  



   

fibanerjee   chandrasekaran

l
l 

   

lk

     vertices different

     vertices different

levels parse tree 

levels parse tree 



 

   

dm

  qb 

q 

   

  qb 

qr

   

order qbs

o 

   

   

order qbs

os

   

     variables

     variables

different qb s 

different qb s 

e

 

   

et

   

problems

problems

figure     hierarchical problem classication memory  height hierarchy 
branches correspond dierent values features captured  
example  l  lk correspond k dierent maximum heights
parse trees matrices spatial problems 

given two problems         algorithm similar         computes whether  
  similar  see figure      since computing requires o t  time 
line   requires o t  time  since checking whether two trees isomorphic requires
o t  time  as shown aho  hopcroft    ullman         line   requires o t  time  lines  
   requires o t  time  thus  algorithm runs o t  time 
given unsolved problem similar solved problem similar   algorithm
computesolutionf romsimilarp roblem   similar   computes solution variable mapping similar  see figure      v ariablem ap list entry
pair   v  vsimilar    v free variable vsimilar corresponding free
variable similar   let size v ariablem ap k   lines      requires
o tk   time since number nodes similar number arguments
predicate small  lines       requires o k   time size
solution similar   thus  algorithm runs o tk   k   time 
finally  given unsolved problem memory emory stores problems hierarchically  as described section       algorithm eliminatequantif iers   emory 
computes solution variable mapping similar problem emory 
problem exists  otherwise solves using problem classier combination constraint
   

fiexecuting perceptions actions diagrammatic reasoning

similar        
               
  
return f alse
   else
  
     p arset ree
  
     p arset ree
  
isomorphic           f alse 
  
return f alse
  
else
  
node  
   
predicate boolean operator corresponding node  
match 
   
return f alse
    return rue

figure     algorithm deciding whether two problems       similar
computing structural equivalence  problem quantied expression 

computesolutionf romsimilarp roblem   similar  
    p arset ree
   similar similar  p arset ree
   similar similar  solution
   similar
   node similar
  
node contains predicate  say p   
  
j     arguments p
  
v variable occupying j th argument p
  
vsimilar variable occupying j th argument p similar
   
v ariablem ap contains v    f alse 
   
v ariablem ap add   v  vsimilar   
       v ariablem ap 
   
replace occurrences v ariablem ap i     v ariablem ap i    
    return

figure     algorithm computing solution problem mapping variables
similar problem similar   problem quantied expression
solution equivalent quantier free expression 

solvers qe algorithms  as described section     algorithm shown figure
   
   

fibanerjee   chandrasekaran

let n subproblems problem  problem  predicates already base predicates rest written conjunctions disjunctions
base predicates thereby leading decomposition problem subproblems 
example  section      problem riskyp ortionsof p ath q  c    c    d  dened terms
base predicate distancelesst han p  q  d   i e   distance p  q  d  nonbase predicates on q  c    on p  c     non base predicates written
disjunctions base predicates  as  on q   c   i   c   i        on q   c   j   c   j  
      respectively  thereby leading decomposition riskyp ortionsof p ath subproblems  subproblems inherits base predicates problem  e g  
distancelesst han p  q  d   includes new base predicates  e g   on q   c   i   c   i 
      on q   c   j   c   j         obtained non base predicates  let number
polynomials base predicates problem number polynomials due
newly obtained base predicates subproblem  since subproblems similar 
  polynomials  total number polynomials problem
o    n  
let maximum degree polynomial subproblem  since subproblems
similar  maximum degree d  maximum degree polynomials
problem objects represented piecewise linearly  case   
objects represented piecewise linearly  degree much larger
two might lead situation problem might solvable reasonable
time 
let k number quantied variables problem  subproblem
k quantied variables  let computational complexity using general qe
algorithm solving problem  n  solving subproblem     
k 
doubly exponential function  as  using cad   n     sd o      note
 n  nt      i e   ecient solve subproblem using general qe
algorithm solve whole problem using algorithm 
algorithm eliminatequantif iers   emory   lines     require o n  time 
lines     require o t  time each  since line    requires o t  time  lines   
   require o mt  time  line    requires time     lines       require
o  n   tk  k    time  thus  entire algorithm runs o t     mt  n   tk  k   
time  note size symbolic solution  symbolic solution
expressed concisely  small  since number boolean operators
order number base predicates base predicate dened terms
least one polynomial    o s    o    n   thus  complexity algorithm
o t        m    n   k  s    n   k    seen
nt              m    n   k  s    n   k
or 

      d o   

k 


    n 
  k      n    k

true provided large  is  ecient solve problem variable
mapping solve subproblem using general qe algorithm provided size
stored symbolic solution large  every decomposable problem  complexity
qe reduced above 
   

fiexecuting perceptions actions diagrammatic reasoning

eliminatequantif iers   emory 
    solution
   decompose subproblems qi     n
p

np
n 
n 

nk
i     i         ip    qi   n  
k 

  
  
  
  
  
  
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   

i 
k p  
j   nk
ith operator     decomposed right left
ii  
construct parse tree matrix  
compute   
f lag  
j  
emory j j th problem emory
similar m emory j         rue 
similar emory j
f lag  
break loop
f lag     
   solution computesolutionf romqealgorithms    
similar  
   f lag        n
 solution computesolutionf romsimilarp roblem i   similar  
 solution  solution  solution
return  solution

figure     algorithm computing solution spatial problem taking help
previously solved similar problems emory  thereby bypassing quantier
elimination whenever possible  problem quantied expression
solution equivalent quantier free expression 

problem encountered sps rst time  solved decomposing subproblems  solving rst subproblem using general qe algorithm
obtaining solution rest subproblems mapping variables
rst subproblem  since subproblem solution stored memory  similar
subproblem encountered future  sps bypasses qe algorithm completely
solves variable mapping  case  line    algorithm never executed 
time complexity solving problem
 m   nk  s   nk

   

fibanerjee   chandrasekaran

considerable savings compared complexity solving entire problem
k 
using general qe algorithm  e g   complexity cad  sd o       provided
large  sps solves problems  probability encounter similar problem
memory increases thereby leading scenario incurs complexity low
order polynomial compared doubly exponential  
example  illustrate problem solving process  let us consider spatial problem behindcurve q  c  p   described section       point p  px   py   curve
c  p    p       pn   pi  xi   yi   point  decomposition problem occurs
follows 

behindcurve q  c  p 
intersect c   p  q  
a  on a  c  on a   p  q  
a   n 
i   on a   pi   pi       on a   p  q  
n 
i    a  on a   pi   pi      on a   p  q   

n 
i    qi  

n 
i  
thus  n    subproblems  
on a   pi   pi      on a   p  q  
qi
a  on a   pi   pi      on a   p  q  
figure      i                                         n    theorem   
similar since subproblems problem  sps
   noted approximating continuous curve sequence line segments drawbacks  example  point p continuous curve c might piecewise linear
approximation c  sps accept parameter specifies maximum length line
segment used approximation  current implementation  leave onus determining maximum length problem solver  context  deserves mention loss
information inevitable almost kind approximation  example  space
diagram approximated finite number pixels  shown banerjee chandrasekaran        
diagrammatic objects lose certain spatial information might detrimental spatial problem
solving avoided knowing minimum allowable resolution  or maximum length one
side square pixel  

   

fiexecuting perceptions actions diagrammatic reasoning



on a  p  p   

on a  p q  

figure     parse tree matrix rst subproblem behindcurve problem 

nd problem memory similar rst subproblem     sent problem
classier sends appropriate qe algorithm  problem denition  tuple
  parse tree  solution stored memory follows 
   q   p    p     p  a  on a   p    p     on a   p  q  
    x  y     x    y      x    y       px   py   
 px x     px x    x  x   py x  py x   px x  px y    xy        x px  
  x  px   x x    py x  py x   px x  px y    xy          
arguments   free variables  subproblems solved
replacing variables   mapped variables  problem similar   found
memory    solved replacing mapped variables 
subproblems 
note that  example  behindcurve problem  absence appropriate
vocabulary properties relations  would specied  see redlog weispfenning        
behindcurve  x  y     p  x   p  y     p  x   p  y        pn x   pn y      px   py   
ax   ay   t      px   t x px     ax py   t y py     ay n 
i   ti     ti
  pi x   ti  pi   x pi x     ax py   ti  pi   y pi y     ay  
total number quantiers n      dependent number line segments
forming curve huge complicated curves many real world applications  sps  due appropriate decomposition problems subproblems 
number quantiers subproblem always xed    case  irrespective
spatial complexity object s   curve case   symbolic solutions
simple subproblems stored future use possible systems redlog  needless say  though solving problem using systems produce
solution  much faster 
   

fibanerjee   chandrasekaran

   applications
section  illustrate sps deployed conjunction problem
solver  human articial  such as  soar   solving spatial problems without human intervention needed dr  two applications considered entity re identication
ambush analysis deemed important military domain  subproblems sps autonomously decomposes spatial problem shown 
problems military domain involve wide variety objects arbitrary properties
relations  hence  help illustrate expressiveness specication language
eciency generality sps 
implementation  used bisoar  due kurup chandrasekaran        
bimodal version soar  laird et al          problem solver uses two kinds operators predicate symbolic operators applied information predicate symbolic
form perception like operators applied diagram bring state
transitions reach goal state initial state  human responsible providing
broad problem solving strategy class problems  given specic problem
class  bisoar uses predicate symbolic perception like operators accordingly 
since used bisoar number dierent domains  e g   military  euclidean geometry  physics  civil engineering  banerjee   chandrasekaran       provide examples 
still continue so  knows several dierent problem solving strategies operators  predicate symbolic perception like  emphasis section
eciently bisoar solves problems eciently perception like operators
executed without incorporating knowledge jeopardizes generality
general purpose problem solver  spatial problem  compare performance
proposed sps cad algorithm terms actual computation time
determined taking average least    runs  see  sps excels
signicant margin cases 
    entity re identification
entity re identication problem core task us armys all source analysis
system  asas   asas receives new report sighting entity t  type  e g 
tanks   task decide new sighting entities
database earlier sightings  entirely new entity  reasoning dynamically
integrate information dierent sources database sightings  mobility vehicles 
sensor reports  terrain map information make decision  follow novel
capability using failure expectation  h true  observed 
since not  h likely case  h hypotheses observations
respectively  josephson   josephson        chandrasekaran et al          following 
consider simple version problem illustrate task solved using dr
spatial problems involved therein 
figure    a  shows terrain interest mountainous closed regions marking
impassable areas entities type  e g   tanks   let t  entity newly sighted
time t  located point p  t    t  two entities located points p   
p  last sighted times t    t  respectively  t  t  retrieved database
potential t  based partial identity information  also 
   

fiexecuting perceptions actions diagrammatic reasoning

t 

t 

t 

 a  terrain  impassable regions  sighted tanks 

 c  short path t  t   

 b  short path t  t   

 d  path plausible homotopy
class 

figure     reasoning steps entity re identication
area interest  three enemy regions obstacles  r    r    r     as shown figure
   a   given repower sight range enemy  reasoning proceeds follows 
t  reach p  within time t  t    t  might t    similarly t    since
mountainous region  or obstacle  hiding place enemies repower range d 
existence entity shows probably traverse territory
within repower range  further  might sensor elds report database
sense entities  entity sensed sensor eld times t 
t    t  could followed path passed sensor eld 
constraints taken account reasoning  information might
available database once  follows simple scenario discussion
spatial problems occur 
problem solver  e g   commander  wants know whether exists contiguous
safe region containing points p  p    species problem saf eregion follows 
saf eregion q   r    r       rn    d 

   

fibanerjee   chandrasekaran

a   ni  inside a  ri    distance q  a 
   ri  


a   ni  j 

   ri  


a   ni  j 

inside a   ri   j    distance q  a 

inside a   ri   j    distance q  a 

   ri  

a  inside a   ri   j   distance q  a 

   ri  

a  inside a   ri   j   distance q  a 

   ri  

saf eregion  q    ri   j    d 


ni  j 

ni  j 

ni  j 

q  x  y   decomposition problem sps shown above  subproblem symbolically solved solution stored memory along subproblem
specication  order compare actual times required solve problem  constructed simple diagram consisting four polygonal regions depicting obstacles  see
figure    a    four regions
r                                           
r                              
r                                
r                                                     
   triangulation regions produced seven triangles  subproblem
symbolically solved stored  solving problem required      seconds solving
using cad algorithm required     seconds 
diagram shaded safe region input recognize function computes vertices boundaries shaded region  shown figure    b   next
problem solver wants know whether exists path points p  p  safely
avoiding obstacles enemy repower range  whether path traversed
time t  t    let v velocity sighted entity piece symbolic knowledge
available database  then  maximum length path traversable given
time l   v  t  t     let l l rational number  then  problem path
existence two points path lies inside region r less
given length l specied as 
p athexists s  t  r  l 
q  inside q  r  distance s  q    distance q  t  l
   r 


q   i 
inside q   r  i    distance s  q    distance q  t  l

   

fiexecuting perceptions actions diagrammatic reasoning

r 

r 

r 

r 

r 

r 

r 

r 



 a  unshaded polygons obstacles 
shaded region safe region  computed
sps 

 b  points shown vertices boundaries safe region computed
recognize function 





r 

r 

r 

r 

r 

r 

r 

r 







 c  paths lying safe region less
given length two points  computed
sps 

 d  paths lying safe region less
given length two points  computed
cad algorithm 

figure     simplied scenario illustrate performance proposed sps compared cad algorithm entity re identication 

   r 


i 
q  inside q   r  i   distance s  q    distance q  t  l

   r 


i 
p athexists  s  t   r  i   l 

   

fibanerjee   chandrasekaran

decomposition problem sps shown above  subproblem symbolically
solved stored  again  resort simple diagram figure    compare actual
computation times p athexists s  t  r  l  problem                   
r recognize saf eregion  x  y    r    r       rn         dierent sets regions ri
dierent values l  triangulation r produced               triangles  r      r    
 r      r     r    r    r    r    respectively  subproblem symbolically solved
stored  computation times required solving problem using proposed sps
signicantly less using cad algorithm  see table    

table    comparison computation times  in seconds  cad algorithm
proposed sps p athexists s  t  r  l  problem          
         r recognize saf eregion  x  y    r    r       rn             ghz pc
  gb ram       mb virtual memory    bit operating system used 
implementation done athematica  below  res refers result 
refers rue  f refers f alse  oom refers memory 

l
   
   
    
    
    
    
    
    
     

 r   
cad sps res
            f
            f
            f
           
           
           
           
           
           

 r   
cad sps res
              f
              f
             
             
             
             
             
             
             

 r   
cad sps res
             f
             f
             
            
             
            
             
             
             

 r   
cad sps res
oom        f
oom        f
oom       
oom       
oom       
oom       
oom       
oom       
oom       

 r    r    r    r   
cad sps res
oom        f
oom        f
oom        f
oom        f
oom       
oom       
oom      
oom       
oom       

general  p athexists s  t  r  l  problem specied as 
p athexists s  t  r  l 
q    q       qn    a  on a   s  q    q       qn   t   inside a  r   length  s  q    q       qn   t   l
q    q       qn    a  on a  c  inside a  r   length c  l
q    q       qn    a  on a  c  inside a  r   length c  l
   r 


q    q       qn    a  on a  c   k 
inside a   r  k     length c  l

   r 


q    q       qn    a  on a  c   k 
inside a   r  k     length c  l

   

fiexecuting perceptions actions diagrammatic reasoning

   r 


k 
q    q       qn    a  on a  c  inside a   r  k    length c  l

   r 


k 
p athexists  s  t   r  k   l 

c  s  q    q       qn   t  r br  note even though c curve  on a  c 
cannot decomposed since c free variable  see denition decomposition
section       also  note problem contains form f   discussed heorem
   r used 
exists path points p  p  safely avoiding obstacles enemy
repower range traversed time t  t    problem solver wants
compute path s   problem specied as 
f indp ath q  s  t  r  l 
inside q  r  distance s  q    distance q  t  l
   r 


 i 
inside q   r  i    distance s  q    distance q  t  l

   r 


i 
inside q   r  i   distance s  q    distance q  t  l

   r 


i 
f indp ath  q  s  t   r  i   l 

q  x  y   since quantiers  solving problem decomposition
variable mapping achieve reduction computation time anysignicant amount 
region consisting paths satisfy constraints  l       shown
figure    c   quality solution depends recognize function  example 
solution shown figure    d  accurate figure    c  recognize
function failed determine vertices safe region accurately  alternate denition
semi linear motion planning problem found weispfenning        
semi linear path consists n translations along straight lines parallel
one given k vectors 
results  problem solver infers t  might t    next repeats
entities t  t    nds exists path points p  p 
safely avoiding obstacles enemy repower range traversed
time t  t    t  might t  well  sensor database informs two
sensor elds sensor   sensor  area interest report
passing vehicle  problem solver wants verify whether paths passes
sensor elds  species problem intersect r    r    compute
intersection two regions r  r   
intersectregions r    r   
q  inside q  r    inside q  r   
   r   


q   i 

   r   


inside q   r    i     i 

inside q   r    j   

   

fibanerjee   chandrasekaran

   r   


i 

   r   


j 

intersectregions   r    i    r    j  


computes

problem
intersectregions paths     s    paths   recognize f indp ath q  p    p    r  l  
s  region covered sensor   scenario figure    c   solution rue 
next problem solver wants know whether exists path points p 
p  safely avoiding obstacles enemy repower range traversed
time t  t    computes p athexists p    p    r     l   r   recognize paths   s    
returns rue  inference follows t  might t    reasoning
repeated t  t    intersect paths     s    returns rue p athexists p    p    r     l 
returns f alse  see figure    b    inference follows t  cannot t    hence 
problem solver identies t  t   
entity reidentication problem could solved computing shortest paths pairs p    p  p    p  avoiding sensors checking whether
lengths satisfy time constraints  requires computing shortest path two points p  p  safely avoiding obstacles enemy repower range  i e  
lying entirely within safe region r   since path loop
share intermediate vertices  any  vertices r  path
  r  intermediate vertices  let r  p    p       s   c  q    q       qm  
shortest path  q  p    qm p    qi r        then  problem
computing shortest path specied
f indshortestp ath r  c 
inimize length c    c     c        c m      curveinsideregion c  r  
curveinsideregion c  r  constraint specied decomposed
follows 
curveinsideregion c  r 
a  on a  c  inside a  r 
a  on a  c  inside a  r 
a  on a  c  inside a  r 
  c  

a   i 

   r 

a  on a   c i   c i        inside a   r  j  

   r 

curveinsideregion   c i   c i         r  j  

  c  


j 

  c  


j 

i 
i 

   r 


on a   c i   c i          j 
inside a   r  j    

   

fiexecuting perceptions actions diagrammatic reasoning

r br  since problem form f    r used  subproblem symbolically solved stored  solving problem curveinsideregion c  r  

c                                                                                                   
r recognize saf eregion  x  y    r    r    r    r         
sps required      seconds solving using cad algorithm required        seconds  see figure    a    shortest path obtained solving
f indshortestp ath r  c  problem shown figure    b  

 a  path c two points lying inside
shaded region r 

 b  shortest path two points computed
f indshortestp ath r  c  problem 

figure     paths two points lying inside safe  shaded  region 

    ambush analysis
two main factors range repower sight determine area covered
military unit  presence terrain features  as  mountains  limit factors
allow units hide opponents  hidden units enjoy advantage
concealing resources intentions opponents attack
opponents catching unawares traveling along path within
sight repower range hidden units  thereby ambushing them  thus 
utmost importance military unit priori determine areas portions
path prone ambush traversing them  already described section    
problem solver  e g   army commander  reasons using diagrams gure safest
path transport troops one base camp another given time  section 
given curve region hiding place repower sight ranges  show
   

fibanerjee   chandrasekaran

regions portions path prone ambush eciently computed proposed
sps 
given curve c repower sight range d  spatial problem
riskyregion q  c  d  dened set points covered range c  thus 
problem specication is 
riskyregion q  c  d 
a  on a  c  distance a  q 
  c  

a   i 

on a   c i   c i         distance a  q 

  c  

a  on a   c i   c i        distance a  q 

  c  

riskyregion  q   c i   c i        d 

i 
i 

q  x  y   order compare actual computation times required solve
problem  constructed simple diagram consisting two curves  path mntn 

path                                                                 
                           
mntn                                                                               
solution problem riskyregion q  mntn  d  shaded region shown figure
   a  mntn obstacle hiding  e g   mountain range      problem
riskyregion q  r  d  region r specied replacing predicate on p  c 
inside p  r  
again  given curve c  path  curve c  hiding  repower range d 
problem riskyp ortionsof p ath q  c    c    d  dened parts c  covered range
c    thus 
riskyp ortionsof p ath q  c    c    d 
on q  c    p  on p  c    distance p  q 
  c   

p   i  

  c   

j  

  c   

j  

i  
i  

  c   

on q   c   i   c   i       j  

  c   

  c   

on p   c   j   c   j       distance p  q 

p  on q   c   i   c   i      on p   c   j   c   j      distance p  q 
riskyp ortionsof p ath  q   c   i   c   i         c   j   c   j        d 

   

fiexecuting perceptions actions diagrammatic reasoning

 a  shaded region  computed
problem riskyregion q  mntn       risky
region prone ambush due enemies hiding
mntn  portions path inside risky region risky portions path 

 b  bold parts path  computed
problem riskyp ortionsof p ath q  path 
mntn       risky portions path 
shaded region  computed problem behindcurvewrtriskyp ath q  mntn  path  
enemies could hiding troops traveling path 

 c  troops traveling rskyprtn    risky portion  in bold  path  careful
ambushed enemies hiding shaded region rskyprtn  within firepower range
region  computed problem
behindcurvewrtriskyp athdistance q  mntn 
rskyprtn        

 d  troops traveling rskyprtn    risky portion  in bold  path  careful
ambushed enemies hiding shaded region rskyprtn  within firepower range
region  computed problem
behindcurvewrtriskyp athdistance q  mntn 
rskyprtn        

figure     simplied scenario illustrate performance proposed sps ambush analysis 

   

fibanerjee   chandrasekaran

q  x  y   alternatively  problem specied
riskyp ortionsof p ath q  c    r    d 
on q  c    inside q  r   
  c   

 i  

   r   


on q   c   i   c   i          j 

   r   

on q   c   i   c   i        inside q   r    j  

   r   

riskyp ortionsof p ath  q   c   i   c   i         r    j   d 

  c   


j 

  c   


j 

i  

i  

inside q   r    j   

r  recognize riskyregion  x  y   c    d   q  x  y  
solution
problem riskyp ortionsof p ath q  path  mntn  d       parts
path inside shaded region shown figure    a   figure    b  shows
risky portions path rskyprtn    rskyprtn  bold obtained
recognize riskyp ortionsof p ath q  c    c    d   
rskyprtn                                  
rskyprtn                                
note latter specication free quantiers former not  however 
solution computed latter specication might less accuracy
former due use recognize function  hiding place region r
instead curve c    problem riskyp ortionsof p ath q  c    r  d  specied
replacing predicate on p  c    inside p  r   portions path marked figure
  c  computed specication 
region behind c  enemies might hiding set points
behind c  respect point risky portions curve c    thus  c risky
portion path 
behindcurvewrtriskyp ath q  c    c 
a  on a  c  behindcurve q  c    a 
a  on a  c  intersect c     a  q  
a  on a  c   b  on b  c    on b   a  q   
  c  

a  b   i 
  c  

i 

  c   

j  

  c   

on a   c i   c i          j  

on b   c   j   c   j         on b   a  q  

 a  b  on a   c i   c i        on b   c   j   c   j        on b   a  q   

   

fiexecuting perceptions actions diagrammatic reasoning

  c  

i 

  c   

j  

behindcurvewrtriskyp ath  q   c   j   c   j         c i   c i       


q  x  y   solution problem behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp ath q  mntn  rskyprtn    shaded region shown figure    b   hiding place region r instead curve c    problem
behindcurvewrtriskyp ath q  r  c  specied replacing predicate on p  c   
inside p  r  
however  enemies might hiding anywhere behind mountain within
distance ambush friendly units  hence  reasonable problem commander friendly side compute would
behindcurvewrtriskyp athdistance q  c    c  d  distance
enemies ambush them  problem specied as 
behindcurvewrtriskyp athdistance q  c    c  d 
a  on a  c  behindcurve q  c    a  distance a  q 
a  on a  c  intersect c     a  q   distance a  q 
a  on a  c   b  on b  c    on b   a  q    distance a  q 
  c  

  c   

a  b   i  on a   c i   c i          j  
distance a  q 
  c  

on b   c   j   c   j         on b   a  q  

  c   

i  j  
 a  b  on a   c i   c i        on b   c   j   c   j        on b   a  q   
distance a  q 
  c  

i 
     d 

  c   

j  

behindcurvewrtriskyp athdistance  q   c   j   c   j         c i   c i  


q

 x  y  
solutions problems behindcurvewrtriskyp athdistance q  mntn  rskyprtn    d 
behindcurvewrtriskyp athdistance q  mntn  rskyprtn    d      
shaded regions shown figure    c      d  respectively  hiding place region r
instead curve c    problem behindcurvewrtriskyp athdistance q  r  c  d 
specied replacing predicate on p  c    inside p  r   comparison
cad algorithm proposed sps actual times required compute problems
relevant ambush analysis discussed shown table   

   

fibanerjee   chandrasekaran

table    comparison computation times  in seconds  cad algorithm
sps dierent problems relevant ambush analysis      ghz pc
  gb ram       mb virtual memory    bit operating system used 
implementation done athematica  following function
problems q  x  y  
p roblem
riskyregion q  mntn     
riskyp ortionsof p ath q  path  mntn     
behindcurve q  mntn          
behindcurvewrtriskyp ath q  mntn  path 
behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp ath q  mntn  rskyprtn   
behindcurvewrtriskyp athdistance q  mntn  rskyprtn       
behindcurvewrtriskyp athdistance q  mntn  rskyprtn       

sps
    
   
    
    
    
     
    
   

cad
    
    
    
      
     
     
     
     

   discussion
spatial problem solving area active research since sutherlands sketchpad
        need access  communicate manipulate spatial information precisely
 much engineers scientists do  using high level language  much common people
use  one frontiers ai  well known capabilities
oered rst order predicate logic that  rst order logic generally intractable
except limited domains  umbrella qualitative spatial reasoning  qsr  
researchers investigated plethora spatial calculi  prominent
mereotopological calculi  clarke        bennett         cardinal direction calculus  frank 
            skiadopoulos   koubarakis         double cross calculus  freksa          and   intersection calculi  egenhofer        egenhofer   franzosa         ip op calculus
 ligozat         dipole calculus  moratz  renz    wolter        schlieder        dylla  
moratz         various region connection calculi  randell et al         bennett  isli 
  cohn        gerevini   nebel        cohn  bennett  gooday    gotts        duntsch 
wang    mccloskey        gerevini   renz         two main points distinction
qsr approach spatial problem solving reported paper 
   dierent qsr calculi emphasize dierent aspects space  as  ontological issues  topology  distance  orientation  shape  etc  depending spatial aspect interest  calculus based minimal set spatial relations 
example    intersection calculus  egenhofer   franzosa       
based nine spatial relations  r    r    r    r    r    r     r     r     r     two spatial regions  double cross calculus  freksa        based fteen spatial relations
 lf  lp  lc  ll  lb  sf  sp  sc  sl  sb  rf  rp  rc  rl  rb  among three points  etc  framework
based minimal set spatial relations  based xed set mathematical logical operators  see section       spatial relation among points
expressed using real variables xed set operators rst order logic included
vocabulary  spatial relation involving curves and or regions expressed
   

fiexecuting perceptions actions diagrammatic reasoning

rst order logic using spatial relations among points relations inside
included vocabulary 
   spatial problems interest qsr community csps involving either
points  e g   double cross calculus  regions  e g        intersection calculi  region
connection calculi  closed set properties relations often limited binary
domain  general purpose sps helping human perceive act diagrams
dierent real world applications need solve qcsps involving points  curves
regions open ended vocabulary properties relations actions entire
real domain  framework oers  since qe computational bottleneck
sps  concentrate eorts real qe algorithms  discussed towards
end section     
naturally  question arises convenient human specify spatial
problem qcsp  acknowledge process specifying spatial problem
qcsp eortless explaining another human natural language 
taken rst step making process less strenuous oering vocabulary
predicates open ended  qcsp solving systems  as  redlog  dolzmann
  sturm        qepcad  brown         oer vocabulary spatial problem
solving makes dicult user specify problem dig deep
ocean equations inequalities cannot communicate naturally terms high level
predicates   still far building systems understand communication
natural language  however  research automatic constraint acquisition examples
already underway  vu osullivan        discuss recent advances direction 
use ideas results work  dicult see
ideas conjunction work reported paper able build
convenient ecient spatial problem solving framework 

   conclusion
dr requires perceiving specied information diagram modifying creating objects
diagram specied ways according problem solving needs  number dr systems
built last couple decades  developers ascertained
priori hand coded required perceptions actions  approach building
dr systems defeats purpose open ended exploration essence human like
problem solving  goal  paper  develop general ecient framework
executing perceptions actions relevant reasoning  d diagrams across
wide variety domains tasks  make two important contributions 
   observe wide variety visual perceptions actions dr applications
transformed domain task independent spatial problems  observation makes
possible use well established constraint satisfaction framework spatial problem
solving  developed language specify spatial problems qcsps
real domain using open ended vocabulary properties  relations actions involving
three kinds diagrammatic objects points  curves  regions  solution spatial problem
equivalent simplied quantier free expression  reduces goal developing
general ecient sps solving  d spatial problems without human intervention 
   fair  redlog qepcad developed solving spatial problems qcsp 

   

fibanerjee   chandrasekaran

   spatial problems specied qcsps rst order logic  qe  inherently
doubly exponential problem  computational bottleneck sps  represented
objects  points  curves  regions  conguration simple elements facilitate decomposition complex problems simpler similar subproblems  showed that 
symbolic solution subproblem expressed concisely  qe achieved
low order polynomial time storing problems solutions memory
similar problem encountered future  solved mapping solution
similar previously solved problem  sps grows ecient solves problems 
even though used cad algorithm qe compared complexity results
cads  approach means limited particular algorithm  complexity qe algorithm signicantly improved spatial problem solving
using idea problem decomposition variable mapping  discussed paper 
framework leaves room ecient convenient incorporating future
results least two possible directions learning constraints examples  automatic
constraint acquisition  carefully exploiting rich portfolio qe algorithms solving
new problems 

acknowledgments
research partially supported participation advanced decision architectures collaborative technology alliance sponsored u s  army research laboratory
cooperative agreement daad              thank anonymous reviewers
constructive comments 

references
aho  a  v   hopcroft  j  e     ullman  j  d          design analysis computer
algorithms  addison wesley 
allwein  g     barwise  j          logical reasoning diagrams  journal logic 
language information                
anderson  j  r          rules mind  lawrence erlbaum associates  hillsdale  nj 
banerjee  b     chandrasekaran  b          perceptual action routines diagrammatic
reasoning entity re identication  proc    th army science conf   orlando  fl 
banerjee  b     chandrasekaran  b          constraint satisfaction framework visual
problem solving  benhamou  f   jussien  n     osullivan  b   eds    trends
constraint programming  chap      pp          iste  london 
banerjee  b     chandrasekaran  b          spatial search framework executing
perceptions actions diagrammatic reasoning  goel  a  k   jamnik  m    
narayanan  n  h   eds    diagrammatic representation inference  lecture notes
ai  vol        pp          springer  heidelberg 
barwise  j     etchemendy  j          computational architecture heterogeneous
reasoning  gilboa  i   ed    proc   th conf  theoretical aspects rationality
knowledge  pp       morgan kaufmann 
   

fiexecuting perceptions actions diagrammatic reasoning

basu  s   pollack  r     roy  m  f          algorithms real algebraic geometry  springerverlag 
bennett  b          logical representations automated reasoning spatial relationships  ph d  thesis  school computer studies  university leeds 
bennett  b   isli  a     cohn  a  g          composition table provide
complete tractable proof procedure relational constraint language   proc 
ijcai workshop spatial temporal reasoning  nagoya  japan 
brown  c  w          qepcad b  program computing semi algebraic sets using
cylindrical algebraic decomposition  acm sigsam bulletin                
brown  c  w     davenport  j  h          complexity quantier elimination
cylindrical algebraic decomposition  proc  intl  symp  symbolic algebraic computation  pp        acm  ny 
chandrasekaran  b   josephson  j  r   banerjee  b   kurup  u     winkler  r         
diagrammatic reasoning support situation understanding planning  proc 
  rd army science conf   orlando  fl 
chandrasekaran  b   kurup  u     banerjee  b          diagrammatic reasoning architecture  design  implementation experiments  proc  aaai spring symp  
reasoning mental external diagrams  computational modeling spatial
assistance  pp          stanford university  ca 
chandrasekaran  b   kurup  u   banerjee  b   josephson  j  r     winkler  r         
architecture problem solving diagrams  blackwell  a   marriott  k    
shimojima  a   eds    lecture notes ai  vol        pp          springer verlag 
chazelle  b          triangulating simple polygon linear time  discrete computational geometry            
clarke  b  l          calculus individuals based connection  notre dame journal
formal logic             
cohn  a  g   bennett  b   gooday  j  m     gotts  n          rcc  calculus region
based qualitative spatial reasoning  geoinformatica            
collins  g  e     hong  h          partial cylindrical algebraic decomposition quantier
elimination  journal symbolic computation                 
davenport  j  h     heintz  j          real quantier elimination doubly exponential 
journal symbolic computation                
dershowitz  n     jouannaud  j  p          rewrite systems  handbook theoretical
computer science  vol  b  chap     pp          elsevier  north holland  amsterdam 
dolzmann  a     sturm  t          redlog user manual  edition     version     
tech  rep  mip       fmi  universitt passau  passau  germany 
dolzmann  a   sturm  t     weispfenning  v          real quantier elimination practice 
matzat  b  h   greuel  g  m     hiss  g   eds    algorithmic algebra number
theory  pp          springer  berlin 
   

fibanerjee   chandrasekaran

duntsch  i   wang  h     mccloskey  s          relation algebras qualitative spatial
reasoning  fundamenta informaticae                 
dylla  f     moratz  r          exploiting qualitative spatial neighborhoods situation
calculus  freksa  c   knau  m   krieg brckner  b   nebel  b     barkowsky  t 
 eds    spatial cognition iv  reasoning  action  interaction  vol       lecture
notes computer science  pp          springer 
egenhofer  m  j          reasoning binary topological relations  gunther  o  
  schek  h  j   eds    proc   nd symp  large spatial databases  vol      lecture
notes computer science  pp          springer 
egenhofer  m  j     franzosa  r  d          point set topological relations  intl  journal
geographical information systems            
ferguson  r  w          magi  analogy based encoding using symmetry regularity 
proc    th annual conf  cognitive science society  pp          atlanta  ga 
ferguson  r  w     forbus  k  d          telling juxtapositions  using repetition
alignable dierence diagram understanding  holyoak  k   gentner  d     kokinov  b   eds    advances analogy research  pp          soa  new bulgarian
university 
ferguson  r  w     forbus  k  d          georep  exible tool spatial representation
line drawings  proc    th natl  conf  ai  pp          austin  tx 
forbus  k  d   usher  j     chapman  v          qualitative spatial reasoning sketch
maps  riedl  j     hill  r   eds    proc    th annual conf  innovative applications
ai  pp        acapulco  mexico  aaai press  menlo park  ca  isbn                  
frank  a  u          qualitative spatial reasoning cardinal directions  kaindl  h 
 ed    proc   th austrian conf  ai  vol      informatik fachberichte  pp         
springer 
frank  a  u          qualitative spatial reasoning distances directions geographic space  journal visual languages computing            
freksa  c          using orientation information qualitative spatial reasoning  frank 
a  u   campari  i     formentini  u   eds    spatio temporal reasoning  vol     
lecture notes computer science  pp          springer 
gebruers  c   hnich  b   bridge  d     freuder  e          using cbr select solution
strategies constraint programming  proc   th intl  conf  case based reasoning 
pp          springer 
gerevini  a     nebel  b          qualitative spatio temporal reasoning rcc  
allens interval calculus  computational complexity  proc    th european conf  ai 
pp          ios press 
gerevini  a     renz  j          combining topological qualitative size constraints
spatial reasoning  proc   th intl  conf  principles practice constraint
programming  pp          springer 
   

fiexecuting perceptions actions diagrammatic reasoning

glasgow  j   narayanan  n  h     chandrasekaran  b          diagrammatic reasoning 
cognitive computational perspectives  aaai press 
goldberg  e     novikov  y          complexity equivalence checking  tech  rep 
cdnl tr            cadence berkeley labs  ca 
jamnik  m          mathematical reasoning diagrams  intuition automation 
csli press  stanford university  ca 
josephson  j  r     josephson  s  g          abductive inference  computation  philosophy 
technology  cambridge university press  cambridge  ma 
kurup  u     chandrasekaran  b          bimodal cognitive architecture  explorations
architectural explanation spatial reasoning  aaai spring symp  control mechanisms spatial knowledge processing cognitive intelligent systems  stanford
university  ca 
laird  j  e   newell  a     rosenbloom  p  s          soar  architecture general
intelligence  artificial intelligence          
laird  j  e   rosenbloom  p  s     newell  a          universal subgoaling chunking 
kluwer academic publishers 
lasaruk  a     sturm  t          weak quantier elimination full linear theory
integers  uniform generalization presburger arithmetic  technical report
mip       fmi  universitt passau  germany 
leyton brown  k   nudelman  e     shoham  y          learning empirical hardness
optimization problems  case combinatorial auctions  proc   th intl  conf 
principles practice constraint programming  pp         
ligozat  g          qualitative triangulation spatial reasoning  frank  a  u    
campari  i   eds    spatial information theory  theoretical basis gis  vol     
lecture notes computer science  pp        springer 
lindsay  r  k          using diagrams understand geometry  computational intelligence 
               
moratz  r   renz  j     wolter  d          qualitative spatial reasoning line segments 
proc    th european conf  ai  pp          ios press 
nelson  r  b          proofs without words  exercises visual thinking  mathematical association america  washington  dc 
newell  a          unified theories cognition  harvard university press  cambridge 
ma 
omahony  e   hebrard  e   holland  a   nugent  c     osullivan  b          using casebased reasoning algorithm portfolio constraint solving  van dongen  m 
r  c   lecoutre  c     roussel  o   eds    proc   rd intl  csp solver competition 
pp       
pisan  y          visual reasoning graphs   th intl  workshop qualitative reasoning
physical systems  nara  japan 
   

fibanerjee   chandrasekaran

pisan  y          visual routines based model graph understanding  proc    th
annual conf  cognitive science society  pp          pittsburgh  lawrence erlbaum
associates  isbn                
pulina  l     tacchella  a          multi engine solver quantied boolean formulas 
proc    th intl  conf  principles practice constraint programming  pp 
       
randell  d  a   cui  z     cohn  a  g          spatial logic based regions connection  nebel  b   swartout  w     rich  c   eds    proc   rd intl  conf  principles
knowledge representation reasoning  pp          morgan kaufmann 
ratschan  s          ecient solving quantied inequality constraints real
numbers  acm trans  computational logic                
sayag  t   fine  s     mansour  y          combining multiple heuristics  proc    rd
intl  symp  theoretical aspects computer science  vol       lecture notes
computer science  pp          springer 
schlieder  c          reasoning ordering  frank  a  u     kuhn  w   eds   
spatial information theory  theoretical basis gis  vol      lecture notes
computer science  pp          springer 
seidel  r          simple fast incremental randomized algorithm computing
trapezoidal decompositions triangulating polygons  computational geometry 
theory applications              
skiadopoulos  s     koubarakis  m          composing cardinal direction relations  artificial intelligence                  
streeter  m  j   golovin  d     smith  s  f          combining multiple heuristics online 
proc    nd conf  ai  pp            aaai press 
sutherland  i  e          sketchpad  man machine graphical communication system 
proc  spring joint computer conf   pp         
tessler  s   iwasaki  y     law  k          qualitative structural analysis using diagrammatic reasoning  glasgow  j   narayanan  n  h     chandrasekaran  b   eds   
diagrammatic reasoning  cognitive computational perspectives  chap      pp 
        aaai press  menlo park  ca  isbn               
tricket  s  b     trafton  j  g          toward comprehensive model graph comprehension  making case spatial cognition  barker plummer  d   cox  r    
swoboda  n   eds    lecture notes ai  vol        pp          berlin  springerverlag 
tversky  b          ways maps diagrams communicate  freksa  c  
brauer  w   habel  c     wender  k  f   eds    spatial cognition ii  integrating
abstract theories  empirical studies  formal methods  practical applications 
vol       lecture notes computer science  pp        berlin  springer verlag 
vik  s          implementation near linear polygon triangulation algorithm
general polygons  senior thesis macalester college  st  paul  minnesota  available
online http   sigbjorn vik name projects triangulation pdf 
   

fiexecuting perceptions actions diagrammatic reasoning

vu  x  h     osullivan  b          unifying framework generalized constraint acquisition  intl  journal ai tools                 
weispfenning  v          complexity linear problems elds  journal symbolic
computation              
weispfenning  v          semilinear motion planning redlog  applicable algebra
engineering  communication computing             
wolfram  s         
mathematica book   th edition  
http   documents wolfram com  

available online

xu  l   hutter  f   hoos  h  h     leyton brown  k          satzilla  portfolio based
algorithm selection sat  journal artificial intelligence research             

   


