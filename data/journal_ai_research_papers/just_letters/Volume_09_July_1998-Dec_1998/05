journal artificial intelligence research                 

submitted       published      

gn m phase transition hard hamiltonian
cycle problem
basil vandegriend
joseph culberson

department computing science  university alberta 
edmonton  alberta  canada  t g  h 

basil cs ualberta ca
joe cs ualberta ca

abstract

using improved backtrack algorithm sophisticated pruning techniques  revise previous observations correlating high frequency hard solve hamiltonian cycle
instances gn m phase transition hamiltonicity non hamiltonicity 
instead tested graphs          vertices easily solved 
artificially restrict degree sequence bounded maximum degree 
although increase diculty  frequency hard graphs still low 
consider regular graphs based generalization knight s tours  observe
frequent instances really hard graphs  average degree bounded
constant  design set graphs feature algorithm unable detect
hard algorithm  vary average degree o   
o n   far found class graphs correlated gn m phase transition
asymptotically produces high frequency hard instances 

   introduction

given graph g    v  e    jv j   n  je j   m  hamiltonian cycle problem find
cycle c    v    v            vn   vi    vj    j    vi   vi       e  vn   v      e  
np c problem  expect solving require exponential time worst case
arbitrary graphs  assuming p    np   however  recent years researchers examining
various np c problems sat graph coloring discovered majority
graphs easy algorithms solve  graphs specific characteristics
graphs lie within narrow band  according parameter  seem hard
solve problems 
known  posa        komlos   szemeredi        random graph model
 gn m   edge density increases sharp threshold  the phase transition 
edge density probability hamiltonian cycle   
probability    previous research  section      suggested high correlation
dicult problems instances generated edge density near phase transition 
using improved hamiltonian cycle backtrack algorithm  section    employs various
pruning operators iterated restart technique  observe hard instances
transition large n  section   describes results gn m related random graphs 
attempt find higher frequency hard graphs  section   examine low
degree random graph class call degreebound graphs  however  graphs
usually easy backtrack algorithm  although find hard graphs  analysis
graphs indicates test non hamiltonian instances discussed section     
c      ai access foundation morgan kaufmann publishers  rights reserved 

fivandegriend   culberson

section   examine graph class based generalization knight s tour problem 
graphs significantly harder algorithm general  section   present
constructed graph class produces exponential behavior backtrack algorithm 
experimental results provide evidence average degree graph
sucient indicator hard graphs hamiltonian cycle problem  backtrack
algorithm  phase transition regions gn m degreebound graph models
generally asymptotically easy 

   discussion hardness previous work
concept hardness instances hard regions within graph classes  considered
empirical basis  easy define  order clarify mean  section
present notions hardness  relating previous work 

    hardness 

problem size n set n instances  hamiltonian cycle problem  n
set undirected graphs n vertices  discussion hardness particular
instance problem always respect algorithm  or set algorithms  
general  different algorithms perform differently instance  furthermore 
particular instance hamiltonian cycle associated algorithm either correctly answers outputs cycle o n  time  meaningfully talk hardness
instance  must assume fixed algorithm  or finite class algorithms 
appropriate large  infinite  class instances  consider algorithm
performs instance  hardness instance always measure performance
relative algorithm 
left question much work algorithm must consider
instance hard it  note single instance distinction polynomial
exponential time moot  ideally  would require algorithm take
exponential  i e       number steps size n increases  note empirical
corroboration practically impossible sets large instances  practice 
must content evidence failure complete within reasonable time
larger instances 
would instance exhibit robustness consider hard
given algorithm  ideally  graph problems would minimum require instance
remain hard high probability random relabeling vertices  relabeling
vertices produces isomorphic copy graph  preserving structural properties
degree  connectivity  hamiltonicity  cut sets  etc  design algorithms typically
based identifying using properties  far possible eciency
independent arbitrary assignment labels 
let us refer  probabilistic  problem class pair  n   pn    pn  x 
probability instance x given selecting n   problem classes
sometimes called ensembles artificial intelligence literature  hogg         usual
classes graph problems gn p  generate n vertex graph  pair
vertices included edge probability p  gn m distinct edges
   

fithe gn m phase transition hard hamiltonian cycle problem

selected random placed graph  two models related  palmer       
paper use gn m model 
consider mean average run times definitions  primary reason
exponentially small sets exponentially hard instances  impractical
determine average reasonable assurance  example     n instances
require  n   n   time remainder solved o n    time average time
quadratic  frequency increases       n average time exponential  even
n       would utterly impractical distinguish two frequencies
empirical studies 
furthermore  similar reasons  want promote class benchmark class
testing comparing algorithms  low frequencies hard instances generally
sucient  say problem class maximally hard  with respect algorithm
set algorithms  instances generated according distribution hard
probability going one n goes infinity 
example maximally hard classes  empirical evidence suggests variety
hidden coloring graph generators based gn p model maximally hard large
variety graph coloring algorithms  culberson luo         hard classes
closely related coloring phase transition random graphs  general  phase
transition defined parameterized probability distribution set instances 
parameter varied past certain threshold value  asymptotic probability
existence solution switches sharply zero one 
phase transitions commonly considered identified hard subsets particular problem  cheeseman  kanefsky    taylor         many np c problems
characterized  constraint  parameter measures constrained instance is 
evaluation problem using constraint parameter typically divides instances
two classes  solvable  unsolvable  sharp transition
occurring them  problem highly constrained  easily determined
solution exists  constraints removed  solution easily found 
different researchers  cheeseman et al         frank   martel        frank  gent   
walsh        examined phase transitions random graphs hamiltonian cycle
problem  obvious constraint parameter average degree  or average connectivity 
graph  degree increases  graph becomes less constrained  becomes easier
hamiltonian cycle exist algorithm find one  researchers
examined hamiltonicity changes respect average degree  frank et
al         frank martel        experimentally verified using gn m
model phase transition hamiltonicity close phase transition biconnectivity  occurs average degree approximately ln n  or   n ln n       
cheeseman et al         experimentally confirmed theoretical predictions komlos
szemeredi        phase transition  for hamiltonian cycle problem  occurs
average degree ln n   ln ln n  papers provided empirical evidence
time required backtrack algorithms increased region phase transition
noted existence hard instances appeared associated
transition 
   note average degree equals  m n 

   

fivandegriend   culberson

mentioned above  k colorable gn p class appears maximally hard known
algorithms respect phase transition defined n  p k  k n  logb n
b          p   hamiltonian cycle gn m class hand appear
maximally hard value m  fact  large n algorithm almost never takes
o n  backtrack nodes o nm  running time 
use much weaker requirement say instance quadratically hard
requires least n  search nodes backtrack algorithm described section    note

 n    search nodes would take algorithm
 n    time  practical reasons 
use weaker definition robustness  say instance robustly quadratically
hard algorithm uses least n  search nodes iterated restart feature used
multiplying factor     see section   program details   say class
minimally hard constant     probability hard instance
least n     
section   examine gn m random graphs using backtrack algorithm graphs
     vertices  empirical evidence collect suggests contrast
graph coloring situation  hamiltonian cycle gn m class minimally quadratically
hard  even near phase transition  even drop minimal robustness
requirement 
note dispute claim hard instances likely phase
transition values m  rather claim even transition
probability generating hard instance rapidly goes zero increasing n 

    random graph theory phase transition

results unexpected one reviews theoretical work graph class 
since asymptotically graph becomes hamiltonian edge added last
degree   vertex  bollobas         algorithm checks minimum degree  
detect almost non hamiltonian graphs  graph hamiltonian  various
researchers  angluin   valiant        bollobas  fenner    frieze        proven
existence randomized heuristic algorithms almost always find hamiltonian
cycle low order polynomial time  particular  shown  bollobas et al        
polynomial time algorithm ham
 
 
 

 
cn     
 e  c cn   c
lim
pr
 ham
finds

hamilton
cycle 
 
e
n  
 
 
 
cn    
  n   ln n   ln ln n   cn   
furthermore  authors point out  best possible result sense
asymptotic probability gn m graph hamiltonian 
probability minimum degree    words  probability finding
cycle probability one existing  given trivial check
minimum vertex degree graph  leave much room existence hard
instances  for ham similar algorithms  
another relevant theoretical result polynomial time algorithm
probability going one  finds hamiltonian cycle graph hidden
   

fithe gn m phase transition hard hamiltonian cycle problem

hamiltonian cycle together extra randomly added edges broder  frieze    shamir 
       algorithm work  average degree vertex needs constant 
claim result easily extended case average degree growing
function n  another indication hamiltonian graphs near phase transition
easy solve algorithm 
non hamiltonian graph hard algorithm must contain feature
preventing formation hamiltonian cycle algorithm cannot easily detect 
suppose backtrack algorithm check vertices degree one  algorithm may
require exponential backtrack determining non hamiltonicity graph 
since way detect trying possible paths failing  however 
degree one vertices easily detectable  good indicators hard instances 
disappear phase transition 
similarly  algorithm might check articulation points  result waste
exponential time easy instances  n      probability
articulation point existing  in gn m   goes zero fast probability existence
vertex degree less two  features lead non hamiltonicity course 
k cuts leave k    components  bondy   murty         could
require time proportional nk detect  assumption np  co np
must exist set non hamiltonian instances polynomial proof
status 
however  seems phase transition larger feature less likely
occur  fact  theoretical results summarized indicate must happen 
although know hard graphs exist  may expect localized types hard
graphs frequent near phase transition elsewhere using gn m
generate instances  expect probability instances go zero n
increases 

   overview backtrack algorithm
backtrack algorithm comes vandegriend         based upon prior work
backtrack hamiltonian cycle algorithms  kocay        martello        shufelt   berliner 
       three significant features discuss  first  employs variety
pruning techniques search delete edges cannot hamiltonian
cycle  pruning usually based upon local degree information  second 
start search algorithm performs initial pruning identifies easily detectable
non hamiltonian graphs  third feature use iterated restart technique 
additionally  program provides opportunity order selection next vertex
path extension using either low degree first ordering  high degree first ordering 
random ordering  normally use low degree first ordering 
level search  adding new vertex current path  search pruning
used  pruning identifies edges cannot hamiltonian cycle removes
graph   note algorithm backtracks  adds edges deleted
current level search back graph   first graph configuration
pruning looks vertex x   neighbours a  b degree    since edges
incident b must used hamiltonian cycle  edges incident
   

fivandegriend   culberson

x deleted  second graph configuration pruning looks path
p    v            vk   forced edges  so v        vk   degree     k   n edge v    vk

cannot hamiltonian cycle deleted  result pruning  degree
vertex drops    hamiltonian cycle possible algorithm must
backtrack  use operators may yield new vertices degree   therefore
pruning iterated changes occur 
pruning iteration takes o n  time scan vertices check vertices two
degree   neighbors  o n  time extend forced degree two paths  since iterations
terminate unless new vertex degree two created  n iterations occur 
o m  edges deleted  backing descendant  edges replaced
 o m   next branch taken  thus  easy upper bound pruning time
node searching vertex degree o d n    m    overly pessimistic 
note along branch root search tree leaf  n vertices
converted degree    note along branch edge deleted
once  degree high seldom take branches success 
implementation several vertices two neighbors degree two
beginning iteration  redundant edges removed single pass taking time
proportional n plus number edges removed checked  practice  gn m
graphs typically takes o n   m  time per search node easy hamiltonian instances
evidenced cpu measurements  harder instances taking twice long
per search node 
start recursive search  algorithm prunes graph described
above  algorithm checks see graph minimum degree    connected 
cut points  conditions true  graph nonhamiltonian algorithm finished 
non hamiltonian instances may easy hard detect  depending
vertex algorithm chooses starting point  cases local features
exist could detected algorithm starts near them  otherwise algorithm
may backtrack many times feature without recognizing feature
matters  seemingly hard instance gn n       discussed section    
case  one type  thrashing   common problem backtracking algorithms 
example  hogg williams        noticed sparse set hard   coloring problems
phase transition  baker        showed instances
often hard result thrashing  could made easy backjumping
dependency directed backtracking 
improve algorithm s average performance use iterated restart technique 
idea maximum limit number nodes searched 
maximum reached  search terminated new one started maximum
increased multiple k  so mi     kmi    initially    kn  experiments 
used k      incrementing search interval way  algorithm eventually
obtain search size large enough exhaustive search thus guarantee eventual
completion  total search never double largest size allocated 
although random restarts sometimes effective non hamiltonian graphs 
frequently effective hamiltonian instances  search  edges added
set hamiltonian edges  net effect prune edges graph 
   

fithe gn m phase transition hard hamiltonian cycle problem

hamiltonian graph hard  algorithm must select set edges causes
reduced graph become non hamiltonian  non hamiltonian subgraph must
hard solve  iterated restart  instance remain hard algorithm must
make mistakes high probability  result  expect fewer hard hamiltonian
instances 
random restarts integral part randomized algorithms  motwani   raghavan 
      used frequently local search techniques escape local
optima  johnson  aragon  mcgeoch    schevon        langley        selman  levesque 
  mitchell        gomes  selman    kautz         discussion impact
restarts found analysis experiments gn m graphs section   
algorithm provides possibility checking components cut
vertices recursive search pruning completed search node 
overhead extra work o n   m  per search node rarely seems pay off  except
noted checks used study 
experimental results reported remaining sections run variety
machines  fastest     mhz pentium ii  cpu times reported
either machine  adjusted using observed speed ratios similar tests 
algorithm terminated execution    minutes   experimental results frequently
reported ratio number search nodes number vertices  node
ratio used feel provides better basis comparing results across different
graph sizes  since many results o n   note number search nodes
calculated number recursive calls performed 
used several different methods verifying correctness algorithm
experimental results  algorithm independently implemented twice  performs
automatic verification hamiltonian cycles found  performed multiple sets experiments generalized knight s circuit graphs compared results  graph hamiltonian
not  theoretical predictions  initial sets experiments gn m graphs degreebound graphs executed using two different pseudo random number generators 
repeated multiple times  source code available appendix 

   gn m random graphs

consider random graphs         vertices   dn    previous work
 cheeseman et al         komlos   szemeredi        expect phase transition occur
ln n   ln ln n  thus specify constraint parameter  or degree parameter 
k     ln n   ln ln n  

    gn m using restart

premiere experiment  generate gn m graphs number vertices n              
steps    n                 steps      n        n         size n 
degree parameter k ranges                step size      k                    step size
   since time limit    minutes least two orders magnitude greater typical running
time  limit rarely used  slower machines limit increased  knight s tour graphs
reported section   run slower machine    minute time limit  although instances
run much longer 

   

fivandegriend   culberson

   
   
   
   
   
   
    
    

  hamiltonian

  

  

  

  

 
   

   

 

   
   
degree parameter k

   

   

 

figure      hamiltonian graphs function graph size degree parameter
gn m graphs 
     ranges k   generate      graphs data point execute
backtrack algorithm graph  grand total      million graphs 
     million     vertices 
use pruning described section    check components articulation points
initial pruning  use iterated restart multiplicative factor   
check components articulation points recursive search 
expect phase transition biconnectivity similar phase transition hamiltonicity  cheeseman et al         expect phase transition
minimum degree greater   almost identical phase transition hamiltonicity  bollobas        komlos   szemeredi         experimental results matched
expectations closely  larger graphs          vertices  percentage
hamiltonian graphs plotted degree parameter figure    found
    point half graphs hamiltonian occurs degree parameter
k              interestingly  curves pass close fixed point near k     
seems approaching vertical line point  is  appear
converging k   phase transition  precisely theory predicts 
   

fithe gn m phase transition hard hamiltonian cycle problem

n
                             
nodes    n    n    n    n    n    n    n
table    maximum search nodes gn m large n
graphs solved  either determined non hamiltonian 
hamiltonian cycle found  primarily interested asymptotic behavior  since
theories concerning relation phase transition hard regions necessarily
asymptotic nature  graphs     vertices more  longest running time
   seconds  graph      vertices using         or    n  search nodes find
hamiltonian cycle 
        non hamiltonian graphs range detected initial
pruning graph  thus search nodes expanded          hamiltonian
gn m graphs  vast majority                  used n search nodes  means
algorithm need backtrack all   quadratically hard graphs
found range  table     lists maximum number search nodes expressed
factor n illustrate linearity search tree 
results appear differ frank et al          found graphs
took orders magnitude search nodes solve   their hardest graph took
  million nodes   believe due two factors  firstly  algorithm used
generate results paper initial check biconnectivity
use pruning techniques used algorithm  secondly importantly 
small random graphs used      vertices  probability obtaining certain hard
configurations  such biconnected non hamiltonian non biconnected minimum
degree    much higher n larger  discussed section     
experiments small gn m graphs  between       vertices  confirm conjecture  case find small number quadratically hard graphs 
hard graphs  consider purposes paper  hard graph less
    vertices takes least         search nodes solve  hard
graphs set runs given table     
note hardest took less two minutes solve  making designation
 very hard  questionable  also  note smallest graph set    vertices 
somewhat larger    vertex examples found frank et al          likely
articulation point checking initially better pruning  finally 
hard graphs non hamiltonian  occur classes produce less    
hamiltonian graphs  hardest hamiltonian graph contrast required        search
nodes  graph    vertices degree parameter     
figure   plot number graphs quadratically hard small
graphs  n        non hamiltonian graphs detected initial
pruning  one non hamiltonian graph n      required search       n nodes   notice
number quadratically hard hamiltonian graphs far less number
quadratically hard non hamiltonian graphs  peaks larger n  accordance
discussion random restarts section   
      error measurement  means algorithm might backtracked
maximum     n search nodes 

   

fivandegriend   culberson

vertices degree parameter seconds search nodes ratio
  
    
    
               
  
    
    
              
  
    
    
             
  
    
    
             
  
    
    
             
  
    
    
               
  
    
     
               
table    hardest small graphs

  
non ham
ham

number hard instances

  

  

  

  

  

 
  

  

  

  
  
  
number vertices

  

  

figure    number quadratically hard graphs small n 

   

fithe gn m phase transition hard hamiltonian cycle problem

ran additional tests n       steps    degree parameter
ranging           step size       generating      graphs point 
case  invoked articulation point checking search node  graphs
solved without timing out  hard graphs found  nonhamiltonian  one    vertex graph required           search nodes  required close
   minutes solve  unclear whether extra checking helped  smallest graph
requiring least         nodes    vertices  smallest requiring million
   vertices  overall  results similar first set experiments
small graphs 

    gn using restart
clearly  edges add graph  likely hamiltonian 
seems graph hamiltonian  adding edges makes less likely
hard  attempt find hard graphs larger n  modified gn m generator
instead adding fixed number edges  instead added edges every vertex
degree least two  stops  sense produces graphs exactly
gn m phase transition  since minimum degree two condition asymptotically
distinguishes hamiltonian non hamiltonian graphs high probability  refer
distribution gn model 
initially ran      graphs generator n          hard
instances found  increased search        graphs n  included
search n         graphs  found one hard graph     vertices 
even second attempt using    million search nodes  still unsolved 
post mortem analysis  checked cut sets size     would leave  
   or more  components found none  checked pruned graph using
odd degree test mentioned section      failed show non hamiltonian 
finally  set fast machine unlimited time restarts  three search nodes
less     seconds later proven non hamiltonian 
detailed analysis  see appendix  shows graph small feature
easily detected one starting points selected  use exponentially
growing sequence searches  use restarts  test     random starts
  second time limit   trials succeeded  using     search nodes prove
graph non hamiltonian 
ran        gn graphs even value n        smallest
instances requiring least         search nodes n         graphs requiring
million nodes found n        two n       one n      two
n       two  one     one     initially timed out  solved second
attempts     hour  neither susceptible attack     restarts
    vertex graph 
table     shows number non hamiltonian graphs n     
except one mentioned detected initial pruning  remaining graphs
easily shown hamiltonian  maximum search ratio     
clearly probability non hamiltonian graphs drawn gn decreasing
n  seems likely probability hard instances going zero 
   

fivandegriend   culberson

n
                        
non ham                
 
table    number non hamiltonian graphs gn

n k        k        k       

   
    
    

    
    
    

    
    
    

    
    
    

table    cpu seconds per      search nodes gn m graphs

    gn m without using restart

wanted know important restart feature asymptotically  ran      gn m
graphs n           parameter settings premiere experiment 
time using backtrack algorithm without iterated restart feature  before 
non hamiltonian instances detected initial pruning  one quadratically hard
hamiltonian graph found n        degree parameter       required
             n  search nodes took      seconds  graphs nearly
quadratic  example n          graphs required     n        n   
    n      n  search nodes  seems asymptotically  even absence
iterated restarts  gn m class provide hard instances high probability 

    gn m summary

based set timing runs  present table     indication running time per
search node increases number vertices n degree parameter k 
times usually short  cannot get reliable numbers n        times shown
evaluation      search nodes  averaged  total cpu divided total
nodes searched  graphs solved less    n search nodes  instances
require significantly search nodes  time per      nodes seems increase
somewhat  examples large n unable provide exact
estimates  n           average time per      nodes instances requiring
 n search nodes      seconds k              k             k        
note includes least one instance took  n search nodes  table indicates
growth approximately linear n   m 
experimental evidence clearly indicates gn m random graphs asymptotically
extremely easy everywhere  despite existence phase transition  results temper
findings various researchers  cheeseman et al         frank et al         frank
  martel        studying phase transitions hamiltonian cycle problem  cheeseman et al  s explanation observed increase diculty near phase transition
 on border  between regions low high connectivity  many
   n        value n least one instance requiring  n search nodes
three values k  times           come separate runs      graphs per
sample point 

   

fithe gn m phase transition hard hamiltonian cycle problem

almost hamiltonian cycles quite different       numerous
local minima make hard find hamiltonian cycle  if one   search procedure based local information diculty    cheeseman et al         
unfortunately  observations accurate  observed hardness due
algorithms limited size graphs tested  intrinsic properties
hamiltonian cycle problem respect phase transition gn m graphs 
shown ecient backtrack algorithm finds phase transition region gn m graphs
easy general 

   degreebound graphs
intuitively  reason hard generate hard instance gn m
time add enough edges make minimum degree two  rest graph
dense finding hamiltonian cycle easy  alternatively  see create
non hamiltonian property feature  must regions low degree 
time meeting minimal requirements make instance hard solve  problem
characterized one high variance vertex degrees  region
get even hard graphs gn m n small enough average degree
low 
avoid consequences degree variation  section use different
random graph model gn d    p    d    p           n number vertices
di   pi percentage vertices degree i  example g     d         d        
represents set graphs     vertices    degree      degree
   refer graph generated model degreebound graph  paper
consider graphs whose vertices degree     
quite dicult generate graphs given degree sequence equal probability  wormald         instead  adopt two variations generate graphs selecting
available edges  case vertex assigned free valence equal desired final
degree  version   pairs vertices selected random order  added edges
two vertices least one free valence each  continues either free
valences filled  a successful generation  vertex pairs exhausted  a failure  
failure occurs  process repeated scratch  initial tests indicate    
attempts fail general  eciency reasons  implementation array vertices
holds vertex once  pairs vertices  v  w selected random array
v    w   v  w  already edge   v  w  added edge  free
valence v w reduced one  free valence vertex zero 
vertex deleted array  step repeated small number  twice
maximum degree  vertices remains  possible pairs remaining vertices
generated tested random order 
version   array initially holds vertex v deg v  times  pairs vertices
randomly selected  equal edge exist  edge added 
copies two vertices deleted array  repeated array
empty      successive attempts failed add edge  latter case taken
failure  process repeated scratch  method seldom fails 
   

fivandegriend   culberson

neither two methods guarantees uniform distribution graphs
given degree sequence  example  given degree sequence five vertices f             g 
seven possible  labeled  graphs  one consists two components  edge
triangle  six four paths  thus six isomorphic one another 
    permutations pairs vertices          generate graph two components 
four path         distinct permutations  remaining permutations          yield legal graph  thus  first graph      times likely
six  course  four path  counting isomorphic graphs        times
likely two component graph 
hand  version   test program  not generator prohibits degree
one vertices  consistently generated first graph        often
others  based several million random trials 

    experimental results degreebound graphs

test graphs               vertices  step size                vertices mean
degree varying                step size                 step size      elsewhere  
generate      graphs data point  execute algorithm graph 
collect results  test repeated two versions 
figure   shows percentage graphs hamiltonian mean degree
graph size varies    clear transition mean degree      near    chance
hamiltonian cycle  mean degree    for robinson wormald       predict
almost      chance hamiltonian cycle uniformly distributed graphs  
phase transition  would expect slope grow steeper graph size increases 
figure   shows increase steepness 
note double points curve n       due unavoidable discretization  since total degree graph must even  generators detect
total degree specified odd  one minimum degree vertices selected degree
incremented  thus  example  whether fraction degree   vertices specified     
      number degree three vertices     discretization effects occur n       
          lessened impact 
table     summarize observed hard instances graphs  note
several instances exceeded time bounds  although certainly least
quadratically hard  included quadratically hard instances  frequency
hard instances appears decreasing n graphs  particular
quadratically hard non hamiltonian instances      vertices  except
hard solve program 
interestingly  turns o n   m  time test shows
unresolved instances non hamiltonian  test described brie section     
implemented test separate program tested unresolved graphs 
results indicated last column table      remaining five graphs
remain unresolved  test included initial pruning program 
instances enumerated last column table     would solved  proven nonhamiltonian  without search 
   graphs  mean degree     plus fraction degree   vertices 

   

fithe gn m phase transition hard hamiltonian cycle problem

   
version  
n      
   
   
   
   
    
    

  hamiltonian

  

  

  

  

 
  

  

  

  
  
  
  vertices degree  

  

  

   

   
version  
n      
   
   
   
   
    
    

  hamiltonian

  

  

  

  

 
  

  

  

  
  
  
  vertices degree  

  

  

figure      hamiltonian graphs degreebound graphs 
   

   

fivandegriend   culberson

version  
number quadratically hard timed
vertices hc
hc
total hc
   
 
 
 
 
   
  
 
 
 
   
 
 
  
  
   
 
 
  
  
   
 
 
  
  
    
 
 
 
 
    
 
 
 
 
version  
number quadratically hard timed
vertices hc
hc
total hc
   
 
 
 
 
   
 
 
 
 
   
  
 
  
  
   
 
 
  
  
   
 
 
  
 
    
 
 
 
 
    
 
 
 
 
table    number hard graphs degreebound graphs
thus  although classes may provide small rate hard instances current
program  clear even minimally hard  furthermore  appears exist
simple improvements program would eliminate hard instances 
figure   illustrate distribution graphs timed out 
quadratically hard graphs similar distributions  concluded
hard instances seem distributed mean degree range           
backtrack program little faster degreebound graphs gn m graphs 
would expect given fewer total edges       vertices  times per      search
nodes ranged      seconds easiest  no backtrack  instances      seconds
harder ones 

    analysis degreebound graphs

analysis degreebound graph class led us conjecture prime factor
determining hamiltonicity graph whether graph degree  
vertex   neighbours degree    label  d  configuration  or  d  event  
graph  d  configuration non hamiltonian  following informal analysis
provides evidence conjecture 
let e  n    represent expected number  d  configurations graph n
vertices  let d    n number degree   vertices d          n number
d     n  n             assuming
degree   vertices  note mean degree    d    
n
n
equal probability combinations 
   

fithe gn m phase transition hard hamiltonian cycle problem

number failed
version  

 
 
 
 

  

 
  
   

     degree  

   
    
number vertices

  
    

number failed
version  

 
 
 
 

  

 
  
   

     degree  

   
    
number vertices

  
    

figure    distribution timed instances degreebound graphs
   

fivandegriend   culberson

  mean degree     hc point
vertices experimental
theoretical
   
    
    
   
    
    
   
    
    
   
    
    
   
    
    
    
    
    
    
    
    
table    experimental approximate theoretical values location    
hamiltonian point degreebound graphs various sizes 

e  n      d 

 d 

 n   
 

 

n       n
  n  n      n     
   n       n    n  
   n      n     
 

restrict asymptotic case  n      gives us

e  n    n    n   n  n       
 

e  n         probability configuration  d  approaches   
want find n            n      occurs   o n       
since hamiltonian cycle cannot exist e   d        tells us phase transition
asymptotically occurs mean degree equals    asymptotically  degreebound graphs
    expected non hamiltonian degreebound graphs    
expected hamiltonian  ignoring conditions   agrees results
robinson wormald        proved almost   regular graphs hamiltonian 
let   n     gives us e  n       substituting equation expression
mean degree gives us       n       table     lists mean degrees different values n
using formula along experimentally determined values point    
graphs hamiltonian  remarkably similar  suggests  d 
configuration major determinator whether degreebound graph hamiltonian not  minor effects  which ignored  come propagation deleted edges
pruning less probable cases mentioned section      since
 d  configuration detected algorithm search started 
implies phase transition easy algorithm  since non hamiltonian
graphs instantly detected  matches experimental observations 

    non hamiltonicity test sparse graphs

preparing final version paper  observed  d  configuration
could replace vertex degree three component several vertices  general 
   

fithe gn m phase transition hard hamiltonian cycle problem

three vertices degree two form minimal cut graph nonhamiltonian  fact  replace three vertices minimal cut odd number
c degree   vertices  claim non hamiltonicity remains true 
checking possible subsets size c would expensive  fortunately
even general condition includes special cases tested
linear  i e o n   m   time  let f set edges forced hamiltonian
cycle one exists  example  edges incident vertex degree two forced  let
g    g   f graph formed deleting forced edges g  let c        ch
components g   define forced degree component ci number end
points forced edges  from f   ci   component odd forced degree  g
non hamiltonian 
proof correctness test simple  observe hamiltonian
cycle g traversing cycle time enter component  must
corresponding exit  since forced edges act cut set  that separates components  
edges available act entries exits component  forced edges
must used  therefore  hamiltonian cycle must even number
forced edges connecting component components  contributing one
forced degree component  forced edge internal  with end points in 
component contributes two forced degree  hamiltonian cycle total
forced degree component must even 
obtain results last column table      first initial pruning 
applied test pruned graphs  using forced edges incident degree
two vertices 

   generalized knight s circuit graphs
section examine graph class based upon generalized knight s circuit problem
size knight s move allowed vary along size  rectangular  board  instance generalized knight s circuit problem graph defined
  tuple  a  b     n a  b size knight s move n  size
board  vertices graph correspond cells  thus jv j   nm  two
vertices connected edge possible move one vertex
moving steps along one axis b along other   see vandegriend      
information problem  
graph class easy way define phase transitions since
clear parameter separates hamiltonian graphs non hamiltonian
graphs  although vandegriend       shows ways identifying groups
non hamiltonian graphs   thus find hard graphs  look graphs take significant amount time solve relative size  perform   trial per graph  problem
instance  report ratio search nodes number vertices 
examined total     generalized knight s circuit graphs ranges a  b  n 
 specific a  b  n triplets allowed vary    b    n         
ranged size        vertices      instances examined      graphs       
found hamiltonian     graphs        found non hamiltonian 
   

fivandegriend   culberson

search nodes   trials   trials

 n
 
   
 n
  
    
  n
  
    
  n
  
   
  n
 
   
   n
 
   
   n
 
   
   n
 
   
    n
 
   
    n
 
   
    n
 
   
     n
 
   
     n
 
   
     n
 
   
table    histogram search node ratio backtrack algorithm     hamiltonian
generalized knight s circuit instances 
remaining    graphs        backtrack algorithm failed  reached    minute
time limit   implies graphs hard backtrack algorithm 
majority       non hamiltonian graphs solved without search  however  significant number remaining graphs took many search nodes solve   
graphs        took   n nodes   graphs        took    n nodes 
hardest graph took      n search nodes  n         majority
non hamiltonian graphs easy  significant percentage generalized knight s
circuit graphs quite hard algorithm 
larger variance hardness observed hamiltonian graphs  table   shows
distribution respect number search nodes required  unlike gn m
degreebound graphs  graphs could solved n search nodes  almost
graphs required least  n search nodes      graphs required least   n
nodes      required least    n nodes hardest graph required      n nodes
 n        

   hard constructed graph class
worthwhile designing algorithm determine conditions
frequently might fail perform badly might do  measure
terms bad approximation is  long exact algorithm may take
worst case  long tradition designing instance sets foil specific combinatorial algorithms  johnson        mitchem        olariu   randall        spinrad   vijayan 
       special classes intended general  frequently based
certain features constructs together randomization hide features  culberson   luo        brockington   culberson        kask   dechter        bayardo jr   
   

fithe gn m phase transition hard hamiltonian cycle problem

schrag         gn m class frequently used study graph algorithms possible
graphs 
section consider special construction hamiltonian graph
extremely hard  exponential increase diculty size  backtrack algorithm 
consists mostly special constructs tied together randomly chosen edges 
bears resemblance graphs meredith graph  bondy   murty        used
disprove certain theoretical conjectures  graph remains dicult vary
neighbour selection heuristic pruning techniques used backtrack algorithm 
graph construct refer interconnected cutset  iccs   graph 
class intended merely show exponentially hard classes clearly exist
algorithm  many backtrack algorithms using similar approaches 
claim graphs intrinsically hard  polynomial time algorithm
solve particular class 
basic concept use constructing graphs non hamiltonian edge 
define edge cannot possible hamiltonian cycle  note
since graphs hamiltonian  vertex must incident least two edges
non hamiltonian  goal force algorithm choose non hamiltonian
edge point  key observation edge chosen  algorithm
must backtrack fix choice  multiples bad choices  backtracking
fix recent bad choice  algorithm must eventually backtrack earlier
point fix less recent bad choice  means recent choice must redone 
algorithm making bad choice again  amount work performed
algorithm least exponential number bad choices  see vandegriend       
details 
iccs graph composed k identical subgraphs iccss arranged circle 
force desired cycle degree   vertex subgraph  since
subgraph hamiltonian path connecting vertices  iccs graph
hamiltonian  due construction iccs subgraph  extra non hamiltonian edges
added different subgraphs  edges help prevent components
forming search  greatly reduces effectiveness component checking
search pruning  see figure    heavy lines forced edges must hamiltonian
cycle 
figure   contains sample iccs subgraph  non hamiltonian edges denoted
dashed lines  forced edges denoted heavy lines 
see dashed lines cannot part hamiltonian cycle observe
path iccss must enter exit sc vertex  two
sc vertices sequence path visit one si vertex  thus  path
uses least one vertex sc si   since initially jsc j   jsi j     
hamiltonian cycle enter exit iccss once  must alternate
sc si vertices  since st vertices one edge leading si vertex 
edges forced  allows us interconnect subgraphs without adding new
hamiltonian cycles connecting vertices sc two different subgraphs  since
additional edges non hamiltonian edges   interconnecting subgraphs
fashion  strongly reduce effectiveness checking components cut points
search  current implementation  vertex sc randomly choose
   

fivandegriend   culberson

iccss

iccss

iccss

iccss

figure    sample iccs graph 

si

sd
sc
st

st



sc vertices

subgraphs

connecting edges adjacent subgraphs

figure    sample iccs subgraph iccss  
   

fithe gn m phase transition hard hamiltonian cycle problem

vertex another sc add edge  thus  average number edges per vertex
little less two  since edges may repeated 
one additional design element added handle various degree selection heuristics
algorithm could use  stage search  neighbours current
endpoint partial path arranged list determine order
chosen backtrack algorithm    main heuristics  sorting list visit
lower degree neighbours first  sorting visit higher degree neighbours first  visiting
random order   our backtrack algorithm normally uses lower degree first heuristic  
sd vertex iccs subgraph used fool low degree first heuristic 
sd vertex incident two st vertices two vertices si   makes
degree    algorithm enters subgraph degree   connecting vertex 
reaches one st vertices  st vertex  choices sd vertex  degree
   one si vertex  degree jsc j      connected sd vertex
st vertex   jsc j     sd vertex lower degree thus
chosen first 
high degree first heuristic avoids following edge st vertex sd
vertex  instead goes si vertex  chooses one sc vertices  not
including sd st vertex  adjacent   point  choice
one si vertices  maximum degree   jsc j      one sc vertices different
subgraph  degree jsc j subgraph yet visited   since sc vertex
normally higher degree  algorithm follow non hamiltonian edge
vertex 
next neighbour chosen random  st vertex  algorithm
    chance making wrong choice  similarly  sc vertex algorithm
small chance following non hamiltonian edge  number subgraphs increased 
probability algorithm making right choices rapidly approaches   
another reason iccs subgraph expected hard backtrack algorithm
many possible paths two st vertices  non hamiltonian
edge previously chosen  backtrack algorithm try different
combinations paths  and fail form hamiltonian cycle  backtracks
bad choice 
performed experiments various iccs graphs  varied number subgraphs
     varied independent set size  jsi j       used backtrack
algorithm specified section   addition checking components cutpoints search  executed algorithm   times per graph  results
listed table   low degree first heuristic  experiments using degree
selection heuristics exhibited similar results 
performed similar experiments using randomized heuristic algorithm
 frieze        posa         due significant difference operation
algorithm backtrack algorithms  easily solved small iccs graphs  however
performance rapidly decreased graphs increased size 
average degree iccs graphs one subgraph lies within following range 
jsi j         js  j      jsi j       js j    




   

fivandegriend   culberson

n  s jsi j

  
  
  
  
  
  
  
  
  
  

 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 

min
median
max
  
  
   
   
   
     
      
      
       
                               
  
  
   
      
      
      
                             
  
  
   
       
       
       
         

table    search nodes required backtrack algorithm iccs graphs 
formula see size independent set increased  mean
degree increases linearly  however  number subgraphs increased  mean
degree remains constant  iccs graphs remain hard wide range mean
degrees  from o    o n    therefore average degree case relevant
parameter determining hardness 

   conclusions future work
backtrack hamiltonian cycle algorithm found gn m graphs easy solve  along
majority degreebound graphs  performed similar experiments  vandegriend        using randomized heuristic algorithm  frieze        posa       
high success rate gn m graphs  less degreebound graphs  interestingly 
existence phase transition problems clearly correspond high frequency dicult instances  suspect properties play important role
average degree  supported results generalized knight s circuit
graphs  highly regular  with many symmetries   majority
average degrees      compared mean degree   degreebound
graphs 
results surprising  since shown asymptotically
randomly generated graphs  edge added makes last vertex degree   
high probability graph hamiltonian  bollobas         addition  ecient
algorithms shown solve instances polynomial time high probability  bollobas et al          since vertices degree less   trivially detectable
counter indicator  hardly surprising asymptotically determining hamiltonicity
graphs gn m easy 
observe performance backtrack algorithm widely vary
single graph due selection initial vertex  multiple restarts backtrack
algorithm time limit reached often resulted superior performance  suggest
little randomization algorithm used empirically identifying intrinsically
hard random instances problem 
   

fithe gn m phase transition hard hamiltonian cycle problem

acknowledgements
research supported natural sciences engineering research council grant
no  ogp     

references

angluin  d     valiant  l  g          fast probabilistic algorithms hamiltonian circuits
matchings  j  comput  system sci                   
baker  a          intelligent backtracking constraint satisfaction problems  ph d 
thesis  university oregon 
bayardo jr   r  j     schrag  r          using csp look back techniques solve exceptionally hard sat instances  proc  second int l conf  principles practice
constraint programming  vol       lecture notes computer science  pp        
bollobas  b   fenner  t  i     frieze  a  m          algorithm finding hamilton
paths cycles random graphs  combinatorica                 
bollobas  b          evolution sparse graphs  bollobas  b   ed    graph theory
combinatorics  pp         academic press  toronto 
bondy  j  a     murty  u  s  r          graph theory applications  elsevier  amsterdam 
brockington  m     culberson  j  c          camou aging independent sets quasirandom graphs   johnson    trick  johnson   trick         pp        
broder  a  z   frieze  a  m     shamir  e          finding hidden hamiltonian cycles 
random structures algorithms                 
cheeseman  p   kanefsky  b     taylor  w  m          really hard problems are 
mylopoulos  j     reiter  r   eds    ijcai     proceedings twelfth international conference artificial intelligence  pp          san mateo  ca  morgan
kaufmann 
culberson  j  c     luo  f          exploring k colorable landscape iterated
greedy   johnson    trick  johnson   trick         pp          
frank  j   gent  i  p     walsh  t          asymptotic finite size parameters phase
transitions  hamiltonian circuit case study  information processing letters 
press 
frank  j     martel  c          phase transitions properties random graphs 
cp    workshop  studying solving really hard problems  pp        
frieze  a  m          finding hamilton cycles sparse random graphs  journal combinational theory  series b              
   

fivandegriend   culberson

gomes  c  p   selman  b     kautz  h          boosting combinatorial search
randomization  proceedings fifteenth national conference artificial intelligence  aaai      pp           aaai press  mit press 
hogg  t          search problems random   proceedings fifteenth
national conference artificial intelligence  aaai      pp           aaai press 
mit press 
hogg  t     williams  c  p          hardest constraint problems  double phase
transition  artificial intelligence              
johnson  d  s          approximation algorithms combinatorial problems  journal
computer system sciences             
johnson  d  s   aragon  c  r   mcgeoch  l  a     schevon  c          optimization
simulated annealing  experimental evaluation  part ii  graph coloring number
partitioning  operations research                  
johnson  d  s     trick  m  a   eds            cliques  coloring  satisfiability  second
dimacs implementation challenge         vol      american mathematical society 
kask  k     dechter  r          gsat local consistency  mellish  c  s   ed   
ijcai      proceedings fourteenth international joint conference artificial
intelligence  pp          san mateo  ca  morgan kaufmann 
kocay  w          extension multi path algorithm finding hamilton cycles 
discrete mathematics               
komlos  m     szemeredi  e          limit distribution existence hamilton
cycle random graph  discrete mathematics            
langley  p          systematic nonsystematic search strategies  artificial intelligent
planning systems  proceedings first international conference  pp          
martello  s          algorithm      enumerative algorithm finding hamiltonian
circuits directed graph  acm transactions mathematical software        
        
mitchem  j          various algorithms estimating chromatic number graph 
computer journal              
motwani  r     raghavan  p          randomized algorithms  cambridge university press 
new york 
olariu  s     randall  j          welsh powell opposition graphs  information processing
letters                
palmer  e  m          graphical evolution  introduction theory random graphs 
john wiley   sons  toronto 
posa  l          hamiltonian circuits random graphs  discrete mathematics              
   

fithe gn m phase transition hard hamiltonian cycle problem

robinson  r  w     wormald  n  c          almost regular graphs hamiltonian 
random structures algorithms                 
selman  b   levesque  h     mitchell  d          new method solving hard satisfiability
problems  proceedings tenth national conference artificial intelligence
 aaai      san jose  ca  pp          
shufelt  j  a     berliner  h  j          generating hamiltonian circuits without backtracking errors  theoretical computer science               
spinrad  j  p     vijayan  g          worst case analysis graph coloring algorithm 
discrete applied mathematics                
vandegriend  b          finding hamiltonian cycles  algorithms  graphs performance 
master s thesis  department computing science  university alberta  online
 http   www cs ualberta ca  basil   
wormald  n  c          generating random regular graphs  journal algorithms    
        

   


