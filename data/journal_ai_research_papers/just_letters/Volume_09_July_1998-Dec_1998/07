journal artificial intelligence research                 

submitted       published      

temporal description logic
reasoning actions plans
alessandro artale

artale irst itc it

itc irst  cognitive communication technologies division
i       povo tn  italy

enrico franconi

department computer science  university manchester
manchester m    pl  uk

franconi cs man ac uk

abstract

class interval based temporal languages uniformly representing reasoning
actions plans presented  actions represented describing true
action occurring  plans constructed temporally relating actions
world states  temporal languages members family description logics 
characterized high expressivity combined good computational properties 
subsumption problem class temporal description logics investigated
sound complete decision procedures given  basic language tl f considered
first  composition temporal logic tl   able express interval temporal
networks   together non temporal logic f   feature description logic 
proven subsumption language np complete problem  shown
reason expressive languages tlu  fu tl alcf   former
adds disjunction temporal non temporal sides language  latter
extends non temporal side set valued features  i e   roles  propositionally
complete language 

   introduction
representation temporal knowledge received considerable attention artificial intelligence community attempt extend existing knowledge representation
systems deal actions change  time  many logic based formalisms
developed analyzed logicians philosophers purposes 
class logical formalisms  properties expressive power computability
studied regards typical problems involving events actions 
paper analyzes theoretical point view logical computational
properties knowledge representation system allows us deal time  actions
plans uniform way  common approaches model actions based
notion state change   e g   formal models based original situation
calculus  mccarthy   hayes        sandewall   shoham        strips like planning
systems  fikes   nilsson        lifschitz          actions generally considered
instantaneous defined functions one state another means pre 
post conditions  here  explicit notion time introduced modeling language
actions defined occurring time intervals  following allen proposal  allen 
c      ai access foundation morgan kaufmann publishers  rights reserved 

fiartale   franconi

       formalism action represented describing time course
world action occurs  concurrent overlapping actions allowed  effects
overlapping actions different sum individual effects  effects may
directly follow action complex temporal relations may hold  instance 
consider motion pointer screen driven mouse  pointer moves
movement device pad   cause effect relation   two
events contemporary  common sense notion word 
class interval temporal logics studied based description logics inspired
works schmiedel        weida litman         class formalisms
state describes collection properties world holding certain time  actions
represented temporal constraints world states  pertain action itself 
plans built temporally relating actions states  represent temporal dimension classical description logics extended temporal constructors  thus uniform
representation states  actions plans provided  furthermore  distinction made
description logics terminological assertional aspects knowledge
allows us describe actions plans abstract level  action plan types 
instance level  individual actions plans   environment  subsumption
calculus main inference tool managing collections action plan types  action
plan types organized subsumption based taxonomy  plays role
action plan library used tasks known literature plan retrieval
individual plan recognition  kautz         refinement plan recognition notion proposed  splitting different tasks plan description classification  
involving plan type   specific plan recognition respect plan description  
involving individual plan  according latter reasoning task  system able
recognize type action plan taken place certain time interval  given set
observations world 
advantages using description logics high expressivity combined desirable computational properties   decidability  soundness completeness deduction procedures  buchheit  donini    schaerf        schaerf        donini  lenzerini 
nardi    schaerf        donini  lenzerini  nardi    nutt         main purpose
work investigate class decidable temporal description logics  provide complete algorithms computing subsumption  aim  start tl f   language
composition temporal logic tl   able express interval temporal networks  
together non temporal description logic f   feature description logic  smolka 
       turns subsumption tl f np complete problem  then  show
reason expressive languages  tlu  fu   adds disjunction
temporal non temporal sides language  tl alcf   extends
non temporal side set valued features  i e   roles  propositionally complete description logic  hollunder   nutt         cases show reasoning decidable
supply sound complete procedures computing subsumption 
paper organized follows  introducing main features description
logics section    section   organizes intuitions underlying proposal  technical
bases introduced brie overviewing temporal extensions description logics
relevant approach   together inter relationships interval temporal
modal logic   specifically intended time action representation reasoning 
   

fia temporal description logic reasoning actions plans

basic feature temporal language  tl f   introduced section    language syntax
first described section      together worked example illustrating informal
meaning temporal expressions  section     reveals model theoretic semantics tl f  
together formal definition subsumption instance recognition problems 
section   shows temporal language suitable action plan representation
reasoning  well known cooking domain blocks world domain taken
consideration  sound complete calculus feature temporal language tl f
presented details section    proof subsumption tl f np complete
problem included  calculus tl f forms basic reasoning procedure
adapted deal logics extended propositional part  algorithm
checking subsumption presence disjunction  tlu  fu   devised section     
section     non temporal part language extended roles
full propositional calculus  tl alcf    cases  subsumption problem still
decidable  operators homogeneity persistence presented section  
adequate representation world states  particular  possible solution frame
problem  i e   problem compute remains unchanged action  suggested 
section   surveys whole spectrum extensions description logics representing
reasoning time action  section concluded comparison state
change based approaches brie illustrating effort made situation calculus
area temporally extend class formalisms  section    concludes paper 

   description logics

description logics  formalisms designed logical reconstruction representation tools frames  semantic networks  object oriented semantic data models
  see  calvanese  lenzerini    nardi        survey  nowadays  description logics
considered important unifying formalism many object centered
representation languages used areas knowledge representation  important
characteristics description logics high expressivity together decidability 
guarantee existence reasoning algorithms always terminate correct
answers 
section gives brief introduction basic description logic  serve
basic representation language proposal  formal apparatus  formalism introduced  schmidt schau   smolka        elaborated  donini 
hollunder  lenzerini  spaccamela  nardi    nutt        donini et al               buchheit
et al         de giacomo   lenzerini              followed  way  description
logics considered structured fragment predicate logic  alc  schmidt schau  
smolka        minimal description logic including full negation disjunction  
i e   propositional calculus  notational variant propositional modal logic
k m   halpern   moses        schild        
basic types description logic concepts  roles  features  individuals 
concept description gathering common properties among collection individuals 
logical point view unary predicate ranging domain individu   description logics called frame based description languages  term subsumption languages  terminological logics  taxonomic logics  concept languages kl one like languages 

   

fiartale   franconi

c    j

 j
 j
 c j
c ud j
c td j
 p  c j
 p  c j
p cj
p qj
p qj
p 
p  q   f j
pq

 atomic concept 
 top 
 bottom 
 complement 
 conjunction 
 disjunction 
 universal quantifier 
 existential quantifier 
 selection 
 agreement 
 disagreement 
 undefinedness 
 atomic feature 
 path 

figure    syntax rules alcf description logic 
als  properties represented either means roles   interpreted binary
relations associating individuals given class values property   means
features   interpreted functions associating individuals given class
single value property  language alcf   extending alc features  i e  
functional roles  considered  syntax rules figure    alcf concepts  denoted
letters c d  built atomic concepts  denoted letter a   atomic roles
 denoted letter p    atomic features  denoted letter f    syntax rules
expressed following tradition description logics  baader  burckert  heinsohn 
hollunder  muller  nebel  nutt    profitlich        
meaning concept expressions defined sets individuals  unary predicates  meaning roles sets pairs individuals  binary predicates 
formally  interpretation pair    i     consisting set individuals  the
domain   function  the interpretation function   mapping every concept
subset   every role subset   every feature partial function
  every individual different element   i e   ai    bi    b
 unique name assumption    equations left column figure  
satisfied 
alcf semantics identifies concept expressions fragments first order predicate
logic  since interpretation assigns every atomic concept  role feature unary
binary  functional  relation   respectively  one think atomic concepts  roles
features unary binary  functional  predicates  seen follows 
atomic concept a  atomic role p   atomic feature f   mapped respectively
open formulas fa      p  ff      ff    satisfying functionality axiom
 y  z ff  x  y     x  z      z   i e   functional relation 
rightmost column figure   gives transformational semantics alcf expressions terms fol well formed formul  left column gives standard
extensional semantics  far transformational semantics concerned  concept c  
role p path p correspond fol open formulae fc      fp  ff     fp  ff    
   

fia temporal description logic reasoning actions plans

 i  
 i    

  c  i  
 c u d i  
 c d i  
  p  c  i  
  p  c  i  
 p   c  i  
p   qi  
p   qi  

true
false

n c

c   di
c   di
fa   j  b  a  b    p   b   c g
fa   j  b  a  b    p   b   c g
fa   dom pi j pi  a    c g
fa   dom pi   dom qi j pi  a    qi  a g
fa   dom pi   dom qi j pi  a     qi  a g

 p   i   n dom pi
 p q i   pi qi

 fc    
fc       fd    
fc       fd    
 x fp     x    fc  x 
 x fp     x    fc  x 
 x fp     x    fc  x 
  x fp     x    fq     x  
  x   fp     x    fq        
  x   fp     x    fq         x     
  x fp     x 
 x fp  ff  x    fq  x   

figure    extensional transformational semantics alcf  
respectively  worth noting extensional semantics left column gives
interpretation formulas right column following proposition
holds 

proposition      concepts vs  fol formul  let c alcf concept expression 

transformational semantics figure   maps c logically equivalent first
order formula 

terminology tbox finite set terminological axioms  atomic concept a 
called defined
concept   possibly complex  concept c   terminological axiom
 
form   c   atomic concept appearing left hand side terminological
axiom called primitive concept  acyclic simple tboxes considered  defined
concept may appear left hand side axiom  terminological
cycles allowed  i e   defined concept may occur   neither directly indirectly  
within definition  nebel         interpretation satisfies    c
ai   c  
example  consider unary relation  i e   concept  denoting class happy
fathers  defined using atomic predicates man  doctor  rich  famous  concepts 
child  friend  roles  
 
happyfather   man u   child    u  child  doctor u  friend  rich famous  
i e   men whose children doctors rich famous friend 
abox finite set assertional axioms  i e  predications individual objects  let
alphabet symbols denoting individuals  assertion axiom form
c  a   r a  b  p a  b   b denote individuals o  c  a  satisfied
interpretation iff ai   c   p  a  b  satisfied iff  ai   bi     p   p a  b  satisfied
iff pi  ai     bi  
   

fiartale   franconi

knowledge base finite set terminological assertional axioms  interpretation model knowledge base iff every axiom satisfied   logically
implies v c  written j  v c   ai c every model   say
subsumed c   reasoning problem checking whether subsumed c
called subsumption checking  logically implies c  a   written j  c  a   ai   c
every model   say instance c   reasoning problem
checking whether instance c called instance recognition 
acyclic simple tbox transformed expanded tbox
models  defined concept makes use definition defined concept 
way  interpretation defined concept expanded tbox depend
defined concept  easy see subsumed c acyclic simple
tbox expansion respect subsumed expansion
c respect empty tbox  expansion procedure recursively substitutes
every defined concept occurring definition defining expression  procedure
may generate tbox exponential size  proved  nebel        works
polynomial time reasonable restrictions  following interchangeably refers either
reasoning respect tbox reasoning involving expanded concepts
empty tbox  particular  devising subsumption calculus logics considered
here  always assumed defined concepts expanded 

   towards temporal description logics
schmiedel        proposed extend description logics interval based temporal
logic  temporal variant description logic equipped model theoretic
semantics  underlying description logic flenr   donini et al          differs
alcf contain     concepts  neither
negation disjunction  cardinality restrictions conjunction roles 
new temporal term forming operators temporal qualifier at  existential
universal temporal quantifiers sometime alltime  qualifier operator specifies
time concept holds  temporal quantifiers introduce temporal variables
constrained means temporal relationships based allen s interval algebra extended
metric constraints deal durations  absolute times  granularities intervals 
give example temporal description logic  concept mortal defined
by 
 
mortal   livingbeing u  sometime x   after x now   at x   livingbeing   
meaning livingbeing reference interval now  alive
interval x sometime reference interval now  schmiedel propose
algorithm computing subsumption  gives preliminary hints  actually 
schmiedel s logic argued undecidable  bettini         sacrificing main benefit
description logics  possibility decidable inference techniques 
schmiedel s temporal description logic  closed complementation  contains
proper fragment temporal logic hs proposed halpern shoham        
logic hs propositional modal logic extends propositional logic modal
formul kind hri   r     r basic allen s temporal relation hi
   

fia temporal description logic reasoning actions plans

   possibility necessity modal operators  example  modal formula
livingbeing   hafteri  livingbeing corresponds abovementioned mortal concept 
unfortunately  hs logic shown undecidable  least interesting classes
temporal structures   one gets decidability restricted cases 
set temporal models considered finite collection structures  consisting
finite set natural numbers    halpern   shoham       
weida litman              propose t rex  loose hybrid integration
description logics constraint networks  plans defined collections steps together
temporal constraints duration  step associated action
type  represented generic concept k rep   non temporal description logic  thus
plan seen plan network  temporal constraint network whose nodes  corresponding
time intervals  labeled action types associated steps plan
itself  example plan t rex show plan preparing spaghetti marinara 
 

defplan assemble spaghetti marinara
  step  boil spaghetti 
 step  make marinara 
 step  put together sm  
  step   before meets  step  
 step   before meets  step    

plan composed three actions  i e   boiling spaghetti  preparing marinara sauce 
assembling things end  temporal constraints steps establish
temporal order corresponding actions  structural plan subsumption
algorithm defined  characterized terms graph matching  based two separate
notions subsumption  pure terminological subsumption action types labeling
nodes  pure temporal subsumption interval relationships labeling arcs 
plan library used guide plan recognition  weida        way similar
proposed kautz         even work strong motivations  formal semantics
provided language reasoning problems 
starting assumption action duration time  proposal considers interval based modal temporal logic   spirit halpern shoham       
  reduces expressivity  schmiedel        direction  weida   litman 
       schmiedel s work lacks computational machinery  halpern shoham s
logic undecidable  expressive decidable logic obtained  providing sound
complete reasoning algorithms  differently t rex uses two different languages
represent actions plans   non temporal description logic describing actions
second language compose plans adding temporal information   extension description logic chosen time operators available directly term
constructors  view implies integration temporal domain semantic structure terms interpreted  giving formal way well founded
notion subsumption proving soundness completeness corresponding
procedure  example formalism  plan preparing spaghetti marinara
introduced represented follows 
   

fiartale   franconi

    y z w   y  before  meets  w  z  before  meets  w  
 boil spaghetti y u
make marinara z u
put together sm w 

assemble spaghetti marinara  

moreover  possible build temporal structured actions   opposed atomic
actions proposed t rex   describing world state changes occurrence action  fact  language allows feature representation order relate
actions states world  see section       kind expressivity captured
t rex  since uses non temporal description logic represent actions  main
application t rex plan recognition  according ideas kautz        closed
world assumption  cwa   weida        made  assuming plan library complete observed plan fully accounted single plan  cwa relied
here  following open world semantics characterizing description logics  weaker 
monotonic  deductions allowed plan recognition process  however  procedures recognizing necessary  optional impossible individual plan respect
plan description still applicable  plan library given closed world semantics 

   feature temporal language tl f
feature temporal language tl f basic logic considered here  language
composed temporal logic tl   able express interval temporal networks  
non temporal feature description logic f   note that  logic family temporal
description logics introduced paper identified composed string
first part refers temporal part language one refers
non temporal part 

    syntax
basic types language concepts   individuals  temporal variables intervals 
concepts describe entities world  states events  temporal variables denote
intervals bound temporal constraints  means abstract temporal patterns
form constraint networks expressed  concepts  resp  individuals  specified
hold certain temporal variable  resp  interval   way  action types  resp 
individual actions  represented uniform way temporally related concepts
 resp  individuals  
basic temporal interval relations allen notation  allen         figure   
used   b   meets  m    d   overlaps  o   starts  s   finishes  f   equal     
 a   met by  mi   contains  di   overlapped by  oi   started by  si   finished by  fi   concept
expressions  denoted c  d  syntactically built atomic concepts  denoted a  
atomic features  denoted f    atomic parametric features  denoted  g  temporal
variables  denoted x     temporal concepts  c  d  distinguished non temporal
concepts  e  f    following syntax rules figure    names atomic features
atomic parametric features alphabet symbols    symbol
intended operator  differentiating two syntactic types 
   

fia temporal description logic reasoning actions plans

relation

abbr 

inverse

before i  j  

b



meets i  j  



mi

overlaps i  j  



oi

starts i  j  



si

during i  j  



di

finishes i  j  

f





j

figure    allen s interval relationships 
temporal variables introduced temporal existential quantifier       excluding
special temporal variable    usually called now  intended reference interval 
variables appearing temporal constraints  tc  must declared within temporal
quantifier  exception special variable    temporal variables appearing
right hand side     operator called bindable  concepts must include unbound
 a k a  free  bindable variables  informally  bindable variable said bound
concept declared nearest temporal quantifier body occurs 
avoid usual formal inductive definition bound variable  moreover  chained
constructs form   c  y    x    y    x         non bindable variables   i e   ones
left hand side     operator   cannot appear once  note that  since
description logics fragment fol one free variable  mentioned
restrictions force temporal side language one free temporal variable 
i e   reference time   
usual  terminological axioms building simple acyclic tl f tboxes allowed 
using concept expression name referring defined concept  possible
use substitutive qualifier construct  impose coreference variable appearing
definition associated defined concept  statement c  y   x constrains
variable   appear definition defined concept c   corefer x
 see section     example   drawback use operator requirement
know internal syntactical form defined concept  namely  names
temporal variables 
let ot two alphabets symbols denoting individuals temporal intervals 
respectively  assertion   i e   predication temporally qualified individual entities  
statement one forms c  i  a   p i  a  b    g a  b   r i  j    c concept  p
feature   g parametric feature  r temporal relation  b denote individuals
o  j denote temporal intervals ot  
   

fiartale   franconi

tl

f

c    e j
cud j
c  x j
c  y   x j
  x   tc c
tc    x  r    j
 x  r     j
    r   
tc   tc j tc tc
r    r   j
j mi j f j      
x    x j j z j      
x   xjx x
e  f   j

 j
euf j
p qj

p e
p  q   f j
 g j
pq

 non temporal concept 
 conjunction 
 qualifier 
 substitutive qualifier 
 existential quantifier 
 temporal constraint 

 disjunction 
 allen s relations 
 temporal variables 
 atomic concept 
 top 
 conjunction 
 agreement 
 selection 
 atomic feature 
 atomic parametric feature 
 path 

figure    syntax rules interval description logic tl f
      clarifying example

let us informally see intended meaning terms language tl f  for
formal details see section       concept expressions interpreted pairs temporal
intervals individuals hi  ai  meaning individual extension concept interval i  concept intended describe action  interpretation
seen set individual actions type occurring interval 
within concept expression  special     variable denotes current interval
evaluation  case actions  thought refers temporal interval
action occurs  temporal existential quantifier introduces interval
variables  related possibly   variable way defined set
temporal constraints  evaluate concept interval x   different current one 
necessary temporally qualify x   written c  x   way  every occurrence
   

fia temporal description logic reasoning actions plans

 

 

basic stack block 

x

 

ontable block 



onblock block 

 

figure    temporal dependencies definition basic stack action 

  embedded within concept expression c interpreted x variable   informal

meaning concept temporal existential quantification understood
following examples action domain 
 
basic stack     x    x            block   ontable  x u   block   onblock  y  

figure   shows temporal dependencies intervals concept basic stack
holds  basic stack denotes  according definition  a terminological axiom  
action occurring interval involving  block ontable
onblock    interval could understood occurring time action type
defined  referring within definition explicit way temporally relate states
actions occurring world respect occurrence action itself 
temporal constraints  x       y  state interval denoted x meet
interval denoted     occurrence interval action type basic stack  
  meet y  parametric feature  block plays role formal parameter
action  mapping individual action type basic stack block stacked 
independently time  please note that  whereas existence identity  block
action time invariant  qualified differently different intervals time 
e g    block necessarily ontable interval denoted x 
let us comment introduction explicit temporal variables  absence
explicit temporal variables would weaken temporal structure concept since arbitrary
relationships two intervals could represented anymore 
example  implicit intervals possible describe situation
two concept expressions  say c d  hold two meeting intervals  say x  y  first
interval starting second finishing reference interval  i e   temporal pattern
 x meets y  x starts    y finishes    cannot represented   precisely  possible
represent temporal relations two intervals derivable
temporal propagation constraints imposed pairs variables  explicit
variables go general thrust description logics  gained expressive power
together observation variables limited temporal part
language main motivations using them  however  easy drop
limiting temporal expressiveness proposed bettini         see section    
assertion type basic stack i  a  states individual action
type basic stack occurred interval i  moreover  assertion implies
related  block   say b  type ontable interval j   meeting i 
type onblock another interval l  met i 
   since concept implicitly temporally qualified special   variable  necessary
explicitly qualify concepts   

   

fiartale   franconi

 s e   fh u  v    u    v   i   t   t   j u   u    v   v  g
 f  e   fh u  v    u    v   i   t   t   j v   v    u    ug
 mi e   fh u  v    u    v   i   t   t   j u   v  g
       meaning allen temporal relations 
e
 r       r e   e
hx  tcie   fv   x    t   j   x  r      tc  hv  x    v  y  i   g 
figure    temporal interpretation function 

i  a      b   block a  b     j  l   ontable j  b    onblock l  b   
m j  i    m i  l  

basic stack 

individual action object conceptual domain associated relevant
properties   states   world affected individual action via bunch
features  moreover  temporal relations constrain time intervals imposing ordering
change states world 

    semantics

section  tarski style extensional semantics tl f language given 
formal definition subsumption recognition reasoning tasks devised 
assume linear  unbounded  dense temporal structure    p       p
set time points   strict partial order p   structure  given
interval x temporal relation r  always possible find interval
 x  r     assumption linear time   means two points t 
t  t  t  set points ft j t  t  g totally ordered   fits intuition
nature time  pair  t    t    thought closed interval
points t  and  t    interval set structure defined set t  
closed intervals  u  v    fx   p j u x v  u    vg  
primitive interpretation    ht       consists set t    the interval set
selected temporal structure    set  the domain    function  the
primitive interpretation function   gives meaning atomic concepts  features
parametric features 

ai t    

f    t     partial
     

 gi   partial
   

atomic parametric features interpreted partial functions  differ atomic
features independent time 
order give meaning temporal expressions present generic concept expressions  figure   defines temporal interpretation function  temporal interpretation
function e depends temporal structure   labeled directed graph hx  tci
  x set variables representing nodes  tc set temporal constraints representing arcs   called temporal constraint network  interpretation
   

fia temporal description logic reasoning actions plans

aiv  t h   fa   j ht  ai   ai g   ait

 iv  t h      i
 c u d iv  t h   cvi  t h   dvi  t h
 p   q iv  t h   fa   dom pit   dom qti j pit  a    qti  a g    p   q it
 p   c  iv  t h   fa   dom pit j pit  a    cvi  t hg

 c  x  iv  t h   cvi  v  x   h
 c  y   x  iv  t h   cvi  t h fy   v  x  g
   x   tc  c  iv  t h   fa   j  w   w   hx  tcieh f   tg     cwi  t   g
fti   f t   partial
    j  a   a   dom f t   ht  ai   dom f    
f t  a    f  t  a 
 p q it   pit qti
 gti    gi
figure    interpretation function 
temporal constraint network set variable assignments satisfy temporal
constraints  variable assignment function v   x    t   associating interval value
temporal variable  temporal constraint network consistent admits non empty
interpretation  notation  hx  tciefx    t   x    t      g   used interpret concept expressions 
denotes subset hx  tcie variable xi mapped interval value ti  
possible interpret generic concept expressions  consider equations
introduced figure    interpretation function iv  t h  based variable assignment
v   interval set constraints h   fx     t        g assignments inner
variables  extends primitive interpretation function way equations
figure   satisfied  intuitively  interpretation concept cvi  t h set
entities domain type c time interval t  assignment
free temporal variables c given v   see  c  x  iv  t h   constraints
assignment variables scope outermost temporal quantifiers given h 
note that  h interprets variable renaming due temporal substitutive qualifier  
see  c  y   x  iv  t h   takes effect choice variable assignment 
equation    x   tc  c  iv  t h shows 
absence free variables concept expression   exception   
notational simplification natural interpretation function cti   equivalent
interpretation function cvi  t h v v       h     introduced 
set interpretations fcvi  t hg obtained varying   v   fixed h maximal wrt set
inclusion h      i e   set natural interpretations includes set interpretations
fixed h  fact  since h represents constraint assignment variables 
unconstrained set larger one  note that  feature interpretation natural
one used since admitted temporally qualify them 
   

fiartale   franconi

 
 

boil spaghetti

x

make spaghetti

 

boil

 

figure    temporal dependencies definition boil spaghetti plan 
interpretation satisfies terminological axiom    c iff ait   cti   every t 
concept c subsumed concept  c v d  cti dti every interpretation
every interval t  interpretation model concept c cti      t 
concept model  satisfiable  otherwise unsatisfiable 
tl f concept expression always satisfiable  proviso temporal
constraints introduced existential quantifiers consistent  latter condition
easily checked reduction concept normal form
minimal temporal network  see section     definition      computed 
interesting note relations s  f  mi really necessary 
possible express temporal relationship two distinct intervals using
three relations transpositions si  fi   halpern   shoham         following
equivalences hold 

 x  x     c  x  xy  y mi    x mi y   c  x
 x  x     c  x  xy  y    x f y   c  x
 x  x     c  x  xy  y    x y   c  x
assign meaning abox axioms  temporal interpretation function e extended
temporal intervals ie element t     ot   semantics
assertions following  c  i  a  satisfied interpretation iff ai   ciie   p i  a  b 
satisfied iff piie  ai     bi    g a  b  satisfied iff  gi  ai     bi   r i  j  
satisfied iff hie   j e     given knowledge base   individual said
instance concept c interval j  c  i  a  
able give semantic definition reasoning task already called
specific plan recognition respect plan description  inference service
computes individual action plan instance action plan type certain
interval  i e   task known instance recognition description logic community 
given knowledge base   interval i  individual concept c   instance
recognition problem test whether j  c  i  a  

   action plan representation  two examples
action description represents world state may evolve relation possible
occurrence action itself  plan complex action  described means
temporally related world states simpler actions  following introduces examples
action plan representations two well known domains  cooking domain  kautz 
   

fia temporal description logic reasoning actions plans

z

make marinara

x


 

make spaghetti

 

 

boil spaghetti
boil

w

 

put together sm

figure    temporal dependencies definition assemble spaghetti marinara 
      weida   litman        block world  allen         aim showing
applicability framework 

    cooking domain
let us introduce plan boil spaghetti 
 
boil spaghetti    x  x b      make spaghetti x u boil 
figure   shows temporal dependencies intervals concept boil spaghetti holds  definition employs   interval denote occurrence time
plan itself  way  possible describe different actions states world
concurring definition plan related it  variable  
explicitly present definition boil spaghetti  instead generic variable 
boil action take place time plan itself  make spaghetti
occurs it 
definition plan reused within definition plans exploiting
full compositionality language  plan defined boil spaghetti used
definition assemble spaghetti marinara 
 
assemble spaghetti marinara     y z w   y b w  z b w  
 boil spaghetti y u
make marinara z u
put together sm w 
case  precise temporal relations nodes two corresponding temporal
constraint networks asserted  e g   action put together sm takes place strictly
boil action  figure     observe occurrence interval plan assemble spaghetti marinara appear figure temporally related
interval 
plan subsuming assemble spaghetti marinara general plan defined below  prepare spaghetti  supposing action make sauce subsumes make marinara 
means among individual actions type prepare spaghetti
individual actions type assemble spaghetti marinara 
 
prepare spaghetti      y z        boil spaghetti y u make sauce z  
   

fiartale   franconi

 
  w

stack obj   obj  

clear block obj  

v

  z
 

holding block obj   clear block obj  

clear block obj  

on obj   obj  

x

figure     temporal dependencies definition stack action 
however  note boil spaghetti subsume prepare spaghetti  even
conjunct definition latter  could better explained observing
definition prepare spaghetti plan expanded 
 
prepare spaghetti      x z    x b     make spaghetti x u boil y u
make sauce z  
then  boil action occurs interval   different occurring
time prepare spaghetti   effect binding boil spaghetti temporal variable y  contrary  definition boil spaghetti boil action takes place necessarily time  subsumption prepare spaghetti boil spaghetti
fails since different temporal relations actions describing two plans
plans specified  particular  observe boil spaghetti plan denotes
narrower class plan expression
  x y   x b y    make spaghetti x u boil y 
subsumes prepare spaghetti boil spaghetti itself 

    blocks world domain

example expressive power temporal language  shown
represent stack action blocks world  detailed way
previous simple basic stack action used clarifying example  thus stacking action
involves two blocks  clear beginning  central part
action consists grasping one block  end  blocks one top another 
bottom one longer clear  figure     
representation borrows rat description logic  heinsohn  kudenko  nebel 
  profitlich        intuition representing action parameters means partial
functions mapping action involved action parameter  see section    
language  functions called parametric features  example  action stack
parameters  object   object   representing sense objects
involved action independently time  so  assertion   object  a  block a   
block a denotes first object involved action interval  hand 
assertion involving  non parametric  feature  e g    on i  block a  block b   
imply anything truth value intervals i 
concept expression  defines stack action  makes use temporal qualified
concept expressions  including feature selections agreements  expression   object   
clear block  x means second parameter action clear block
   

fia temporal description logic reasoning actions plans

interval denoted x    object     object   y indicates
interval object  object  placed  object   formal definition
action stack is 
 
stack     x z v w   x    y mi    z mi    v    w f    w mi v   
   object    clear block  x u   object     object   y u
  object    clear block  v u   object    holding block  w u
  object    clear block  z  
defined concept state properties prerequisites
stacking action properties must true whenever action succeeds 
action intuitively states  object   object  situation
objects clear start action  note world states described
intervals denoted v  w  z result action grasping previously clear block 
 
grasp     x w z    x    w f    w mi x  z mi    
   object    clear block  x u   object    holding block  w u
  object    clear block  z  
stack action redefined making use grasp action 
 
stack     x u v    x    y mi    u f    v    
   object    clear block  x u   object     object   y u
 grasp x  v  u 
temporal substitutive qualifier  grasp x  v  renames within defined grasp action
variable x v way making coreference two temporal variables 
temporal constraints peculiar renamed variable x inherited
substituting interval v  furthermore  effect temporally qualifying grasping action
u   variable associated grasping action   referring occurrence
time action   bound interval denoted u  binding
occurrence time grasping action    variable grasping action  
variable stacking action denote different time intervals  grasping action
occurs interval finishing occurrence time stacking action 
shown series outside observations action recognition
performed   i e   task called specific plan recognition respect plan description 
following abox describes situation blocks clear  grasped and or
other  generic individual action taking place time interval ia
blocks block a block b parameters 

 object  a  block a    object  a  block b  
o i    ia    clear block i    block a   fi i    ia    clear block i    block b  
mi i    i     f  i    ia    holding block i    block a  
mi i    ia    clear block i    block a   mi i    ia    on i    block a  block b 
system deduces that  context knowledge base composed
abox definition stack concept tbox  individual action
type stack time interval ia   i e   j  stack ia   a  
   

fiartale   franconi

c  x u d x
 c  x    x 
 c  x  u d  x 
c u   x   tc 

 
 
 
 

 c u d  x
c  x 
c  x  u d x 
  x   tc   c u d 
c doesn t contain free variables

  x  tc    c u


  y   tc     y    x         yp   xq  x       x   y   x       yp xq    tc    tc     x    c u d   x  
doesn t contain existential temporal quantifiers
p    q   c      p q    c
p    c u     p   c u p  
p    q    q      p q    p q 

 

prescriptions  x   y   x       yp xq   returns union two sets variables x  
occurrence y            yp substituted x            xq   respectively  elements occurring
x renamed fresh new identifiers  z  intended expression z
substitution renaming taken place  condition last rule forces application start
last nested existential temporal qualified concept 

figure     rewrite rules transform arbitrary concept existential concept 

   calculus tl f
section presents calculus deciding subsumption temporal concepts
description logic tl f   calculus based idea separating inference
temporal part inference description logic part  achieved first
looking normal form concepts  concept subsumption temporal language
reduced concept subsumption non temporal concepts subsumption
temporal constraint networks 

    normal form
every tl f concept expression reduced equivalent existential concept
form    x   tc   q  u q   x  u       u qn xn    q non temporal concept  i e  
element language f   concept existential form seen conceptual
temporal constraint network  i e   labeled directed graph hx  tc  q x arcs

labeled set arbitrary temporal relationships   representing disjunction  
nodes labeled non temporal concepts and  node x   temporal relation
 x   x   implicitly true  moreover  since normalized concepts contain free
variables substitutive qualifiers  following natural interpretation function  see
section      used 

proposition      equivalence ef  every concept c reduced linear time
equivalent existential concept  ef c    exhaustively applying set rewrite
rules figure    
   

fia temporal description logic reasoning actions plans

procedure

hx  tci  y  

covering 

    
    
z   fz   x j  z            y    tcg 
 s     z  

j j   graph hx  tc obtained deleting     temporal relation

mid
result

node nodes inconsistent
mid
  mid   fsg 

 s   mid
  t   mid 
result
  result   fsg 
return

result 

figure     procedure computes covering 
note  ef c   makes explicit possible chains features reducing nontemporal concept q conjunction atomic concepts  feature selections restricted
atomic concepts feature agreements   i e   q feature term expression  smolka 
      
normalization proceeds discovering possibles interactions nodes
intention making explicit implicit information  crucial temporal interaction occurs node always coincident set nodes every possible
interpretation temporal network 
definition      covering  given temporal constraint network hx  tci  let   x
z   fz    z            zp g x   p       z   z covering  v   hx  tcie  
v  y    fv  z     v  z             v  zp g w z   w covering y  z     
called uncovered  otherwise said covered z  
proposition      covering procedure  given temporal constraint network hx  tci
minimal form  see  e g    van beek   manchak         node   x procedure
described figure    returns possible coverings size   
idea behind covering whenever set nodes fz    z            zp g covering
disjunctive concept expression  qz        qzp   conjunctively added
concept expression qy   actually  since tl f concept disjunction allowed
sucient add node least commom subsumer  lcs   qz        qzp  
defined below 
definition      lcs  let q           qn  q  c f concept expressions  then  concept
q   lcsfq            qn g that  q  v q           qn v q c
q  v c           qn v c   c   q 
given concept existential form  temporal completion constraint network
computed described below 
definition      completed existential form  temporal completion concept
existential form   completed existential form  cef   obtained sequentially applying following steps 
   

fiartale   franconi

 closure  transitive closure allen temporal relations conceptual

temporal constraint network computed  obtaining minimal temporal network  see 
e g    van beek   manchak         

   collapsing  equality temporal constraint  collapse equal nodes
applying following rewrite rule 
  x n fxj g  tc xj  xi   q xj  xi   xi    xj xj      
  x   tc  xi   xj    q    
 x n fxi g  tc xi      q xi     xi    xj xj     
apply exhaustively first rule figure    

 covering    x let compute covering   fz            z ng following
procedure showed proposition      whenever covering empty  translate
qy applying following rewrite rule  qy   qy ui     n lcsfqi            qim g z  
fzi            zim g  qij  zij   hx  tc  q x i 

 parameter introduction  new information added node pres 

ence parameters  following rules show    symbol intended that 
time concept expression left hand side appears node
temporal constraint network  possibly conjoined concepts  right
hand side represents concept expression must conjunctively added
nodes  square brackets point optional parts  letters f   f   g   g  
possibly subscripts  denote atomic  parametric  features p q stand
generic features 
 g         gn   f   p     c
 g         gn   f   p     g   q 
 g         gn    f         fm
 g         gn g   p     f         fm   f   q  

 
 
 
 

 g         gn     
 g         gn     
 g         gn    f         fm  
 g         gn     u
 f         fm     

proposition      equivalence cef  every concept existential form reduced equivalent completed existential concept 

covering parameter introduction steps computed independently
  collapsing step conjoining resulting concept expressions  observe
that  obtain completed existential concept  steps normalization procedure
require linear time exception computation transitive closure
temporal relations  covering step  steps involve np complete temporal
constraint problems  van beek   cohen         however  possible devise reasonable
subsets allen s algebra problem polynomial  renz   nebel        
relevant properties concept cef admissible interval temporal
relations explicit concept expression node refinable without
changing overall concept meaning  stated following proposition 
proposition      node independence cef  let hx  tc  q x conceptual temporal constraint network completed form  cef   then  q   q
   

fia temporal description logic reasoning actions plans

f concept expressions c c  w q  exists interpretation
hx  tc   q u c   x iit    hx  tc  q x iit   interval t 

proof  proposition states information node cef independent
information nodes  fact  hx  tc   q u c   x iit   hx  tc  q x iit
concept expression one node implies new information node  two cases
distinguished 
i  covered nodes     collapsing  rule  covering  rule provide restrict
covered node specific f concept expression  indeed     collapsing  rule
provides collapsing two contemporary nodes conjoining concept expressions
them  hand   covering  rule adds covered node specific
f concept expression subsumes disjunctive concept expression implicitly
true covered node  note that  thanks  closure  rule  possible equal
temporal relations made explicit  two normalization rules cover possible
cases temporal interactions nodes 
ii  coincident nodes  every time invariant information spread nodes 
parametric features   concept time invariant semantics  timeinvariant concept expressions     g         gn       g         gn    f         fm  
n     arbitrary conjunction terms   parameter introduction  rule
captures possible syntactical cases completion concerning time invariant concept
expressions  induction syntax  proven adding node
concept expression changes overall interpretation 
 
last normalization procedure eliminates nodes redundant information 
final normalization step ends concept essential graph form 
normal form used checking concept subsumption 
definition      essential graph  subgraph cef conceptual temporal constraint network   hx  tc  q x obtained deleting nodes labeled timeinvariant concept expressions   exception   node   called essential graph
   ess   
proposition      equivalence essential graph  every concept completed existential form reduced linear time equivalent essential graph form 

theorem       equivalence normal form  every concept expression reduced

equivalent essential graph form  polynomial fragment allen s algebra
adopted  reduction takes polynomial time 
example  normal form shown   i e   essential graph   previously
introduced stack action  see section      
 
stack     x v w z   x    y mi    z mi    w f    v    y mi x  z mi x  w f x 
 v  o  d  s  x  z     s  si  y  w y  v b y  w z   v b z   w mi v  
   object    clear block u  object       x u
  object     object   y u
  object    clear block u  object       v u
  object    hold block u  object       w u
  object    clear block u  object       z  
   

fiartale   franconi

example  essential graph cef stack since redundant
nodes 

    computing subsumption

concept subsumes another one case every possible instance second
instance first  every time interval  thanks normal form  concept subsumption temporal language reduced concept subsumption non temporal
concepts subsumption temporal constraint networks  similar general procedure first presented  weida   litman         language non temporal
concepts less expressive   include features parametric features 
compute subsumption non temporal concepts   may possibly include
lcs concepts   refer  cohen  borgida    hirsh         following  write
 wf   subsumption non temporal f concepts taking account lcs concepts 
definition       variable mapping  variable mapping total function  
x      x   m         write m x   intend fm x   j x   x g  m tc 
intend f m x    r  m y    j  x  r      tcg 

definition       temporal constraint subsumption  temporal constraint  x   r   y  
said subsume temporal constraint  x   r   y    generic variable mapping m 
written  x   r   y    wm  x   r    y     m x      x    m y      y   r   e  r   e
every temporal interpretation e  
proposition       tc subsumption algorithm   x   r   y   wm  x   r   y  
m x      x    m y      y  disjuncts r  superset disjuncts
r   

proof  follows observation    temporal relations mutually disjoint
union covers whole interval pairs space 
 

definition       temporal constraint network subsumption  temporal constraint
network hx     tc  subsumes temporal constraint network hx     tc  variable mapping   x      x     written hx     tc  wm hx     tc  i  hm x      m tc   ie hx     tc  ie
every temporal interpretation e  
proposition       tcn subsumption algorithm  hx    tc  wm hx     tc i iff 
computing temporal transitive closure  exists variable mapping   x      x  
x i   y j   x   exist x m   y n   x   satisfy  x i  r i j   y j   wm
 x m  r m n   y n   

proof       since definition       x i  r i j   y j   wm  x m  r m n   y n   implies
 r i j  e  r m n  e every e   then  definition interpretation temporal
constraint network  easy see assignment variables v interpretation
hx     tc  assignment interpretation hm x      m tc   i 
     suppose one able find mapping  then  hypothesis 
possible variable mapping exists i  j r i j superset r m n  
   

fia temporal description logic reasoning actions plans

since  assumption  temporal constraint networks minimal  temporal relation
r m n cannot restricted  so  variable mapping temporal interpretation e   build assignment v hv  x m    v  x n  i    r m n  e
hv  x i    v  x j  i     r i j  e   now  extend assignment v way
v    hx    tc  i e v     hm x      m tc  i e   contradicts assumption
 
hx    tc  wm hx    tc  i 

definition       s mapping  s mapping conceptual temporal constraint network hx     tc    q x   conceptual temporal constraint network hx     tc    q x  
variable mapping   x      x   non temporal concept labeling node
x   subsumes non temporal concept labeling corresponding node  x     
hx    tc  ws hx    tc i 
algorithm checking subsumption temporal concept expressions reduces
subsumer subsumee essential graph form  looks s mapping essential graphs exhaustive search  prove completeness overall
subsumption procedure showed introduction lcs s preserves subsumption  model theoretic characterization lcs given showing
property  let s start build herbrand model f concept  let c   x  denote
first order formula corresponding concept c  see proposition       functionality features expressed set formul f   syntax induction easy
show c    x  existentially quantified formula one free variable  moreover 
matrices formula conjunction positive predicates  f   fc    x g logically
equivalent
f   fc     x g functionality axioms allow map every subformula
v
  
 y ff  x  y    y ff  x  y   c  x  existential quantifiers
c    x   which come first order conversion features  replaced    quantifiers 
now  f   fc      a g   constant substituting free variable x c      a 
obtained skolemizing    quantified variables   set definite horn clauses 

definition       herbrand model  let c f concept expression  define
minimal herbrand model hc minimal herbrand model mentioned
set definite horn clauses f   fc      a g 
lemma       f concept subsumption  let c  f concept expressions  hc   hd
minimal herbrand models obtained skolemizing first order set f  fc      a   d     a g 
then  c v iff hd hc  
proof  c v iff f   fc    x g j  d   x   iff f   fc     x g j  d    x   c    d  
obtained applying functionality axioms set fc    x   d   x g  i e   uni 

fying variables functional predicates  replacing existential
quantifiers    quantifiers  now  c      x  d     x  obtained skolemizing
   quantified variables following way  let c    x      y           yn x  y            yn  let
d    x      y            yk   z            zm  x  y            yk   z            zm      k n  skolemize
formula      y            yn   z            zm  x  y            yn      x  y            yk   z            zm   
let    x  indicate skolemized form  then  c      x       x  d     x       x   now 
since every existential quantification c     x   d    x  type     thesis true
   

fiartale   franconi

iff f   fc      a g j  d     a   constant substituting free variable x  see  van
dalen          now  showed lemma       c      a  d     a  minimal herbrand models hc   hd verify lemma hypothesis  then  f   fc      a g j  d     a  iff
hd hc  
 
able give model theoretic characterization lcs crucial
prove subsumption preserving property 
lemma       lcs model property  let q           qn f concept expressions  hq   
        hqn minimal herbrand models obtained skolemizing first order set f  
fq      a           q   n  a g  then  q   lcsfq            qn g iff hq   hq            hqn  
proof  first all  let show hq minimal herbrand model concept q
language f   every hqi seen rooted directed acyclic graph nodes
labelled  possible empty  set atomic concepts arcs atomic features
equality constraints nodes correspond features agreement  whithout loss
generality let us consider case hq   hq    hq    sucient show
hq rooted directed acyclic graph  let root hq    hq   
proved induction  ai     ai     hq  where first order translation
feature  ai     ai obtained result skolemization process  a    a 
ff   a  a              ai    ai  g hq  case     trivial  let      now   ai     ai   
hq iff fi ai     ai     hq    hq    ai   uniquely defined skolem function
ffi    where  function symbols ffi newly generated feature
skolemization process   then   ai     ai     hq    hq  iff  ai     ffi    ai      hq    hq 
iff fi    ai     ffi    ai      hq    hq    thesis true induction 
let us prove     direction  suppose absurd f concept c
that  q  v c   q  v c   c   q  then  q  v c iff hc hq    q  v c   iff
hc hq    hc hq    hq    i e   hc hq  q v c contradicts
hypothesis 
    direction proved analogous considerations 
 

proposition       lcs subsumption preserving property  let a  b  c  f concepts  u  b c   v iff u lcsfb  c g v d 
proof  u  b c   v iff u b v u c v d  now  u b v iff f  
fa     a   b      a g j  d    a  iff ha   hb j  d     a  iff hd ha   hb   reasons 
u c v iff hd ha   hc   then  hd ha   hb hd ha   hc   i e  
hd ha    hb   hc    i e   hd ha   hlcsfb c g   but  hd ha   hlcsfb c g iff
u lcsfb  c g v d 
 

following theorem provides sound complete procedure compute subsumption  completeness proof takes account temporal structure dense
unbounded  allows us introduce new node conceptual temporal constraint
network without changing meaning  remember that  redundant nodes 
time invariant information holds 
theorem       tl f concept subsumption  concept c  subsumes concept c  iff
exists s mapping essential graph c  essential graph c   
   

fia temporal description logic reasoning actions plans

proof  let t    hx     tc    q x   essential graph c    t    hx     tc    q x  
essential graph c   
      soundness   follows fact essential graph form logically equivalent starting concept  soundness procedures computing
tcn subsumption  proposition       subsumption non temporal
concepts  cohen et al         
      completeness   suppose s mapping exist  two main cases
distinguished 
i  mapping hx     tc  wm hx     tc  i  adding redundant
nodes t    equivalent conceptual temporal constraint network t    hx     tc    q x  
may obtained  let us consider extended network
way exists


variable mapping hx     tc  wm hx     tc  i  now  possible  
node x i   x    x i     x j x j    x     now  q i  wf q j   since x j
cannot coincide nodes x   neither covering otherwise hypothesis
mapping exist would contradicted  proposition     q j
time invariant node  whereas q i since t  essential graph  then  although
construction allows existence unique v   networks  follows
proposition        possible build instance t  instance t   
ii  possible mapping hx     tc  wm hx     tc  always
two nodes x i x j m x i     x j q i  wf q j   now  concept expression q j cannot refined  looking subsumption relationship q i   adding
f concept since proposition     would change overall interpretation 
hand  lcs introduction   would substitute specific concept disjunction implicitly presents node covering   subsumption invariant
concept substitution  showed lemma      
cases contradict assumption t  subsumes t   
 
      complexity subsumption

shown checking subsumption tl f concept expressions essential graph form np complete problem  therefore  polynomial reduction
np complete problem deciding whether graph contains isomorphic subgraph presented  shown subsumption computation  proposed theorem      
done non deterministic algorithm takes polynomial time size
concepts involved  first let us consider complexity computing subsumption
non temporal concepts 

lemma       f subsumpion complexity  let c  f concept expressions
contain lcs s  then  checking whether c vf takes polynomial time 
proof  see  cohen et al         
 
problem subgraph isomorphism brie recalled  given two graphs  g   
 v    e    g     v    e     g  contains subgraph isomorphic g  exists
   since subsumption computed respect fixed evaluation time  v maps different occurrences
  interval  justifies choice m        
   

fiartale   franconi

subset vertices v   v  subset edges e   e  j v   j j v  j 
j e   j j e  j  exists one to one function f   v     v   satisfying fu  vg   e  iff
 u   f  v g   e   
given
graph g    v  e    v   fv            vn g associate temporal concept expression 
 
c     v            vn          vi  b  a  vj            a v  u       u a vn   atomic concept
fvi   vj g   e   transformation allows us prove problem subgraph
isomorphism reduced subsumption temporal concepts 
proposition      given two graphs g  g   g  contains subgraph isomorphic g 
iff c  w c    c  c  corresponding temporal concepts expressions 
proof  temporal network edges labeled  before   after  relation always
consistent  minimal non directed   gerevini   schubert         then  temporal
concept essential graph form  proof easily follows since  every time g 
isomorphic subgraph g  one to one function f s mapping c 
c    true c  w c    hand  s mapping gives rise
subsumption one to one isomorphism g  g   
 

theorem       np hardness  concept subsumption tl f concept expressions
normal form np hard problem 

proof  follows proposition      reduction clearly polynomial 
np completeness proven 

 

theorem       np completeness  concept subsumption tl f concept expressions normal form np complete problem 

proof  prove np completeness necessary show proposed calculus
solved nondeterministic algorithm takes polynomial time  now  given two
temporal concepts  t  t    essential graph form  let j x   j  n  j x   j  n   
then  check whether t  w t    algorithm guesses one n n  variable mapping
t  t  verifies whether s mapping  too  last step done
deterministic polynomial time since  given mapping m  possible determine whether
hx    tc  wm hx    tc i checking n  n         edges looking subsumption
corresponding temporal relations  solved set inclusion procedure  
n  non temporal concept subsumptions computed polynomial time 
 

   extending propositional part language

propositional part temporal language extended powerful 
still decidable  description logic  possible either add full disjunction 
temporal non temporal levels  tlu  fu    propositionally complete
language non temporal level  tl alcf   
please note languages possible express full negation 
particular negation existential temporal quantifier  crucial 
    vi  b  a  vj    vj  b  a  vi    too 

   

fia temporal description logic reasoning actions plans

 c d  x
p    c  
 c  c    u
  x   tc   c d 

 
 
 
 

c  x d x
p ctp d
 c  u d   c  u d 
  x   tc  c   x   tc 

figure     rewrite rules computing disjunctive form 
makes difference logic based approaches  schmiedel        bettini       
halpern   shoham         dual    i e   universal temporal quantifier    makes
satisfiability problem   subsumption   propositionally complete languages
undecidable interesting temporal structures  halpern   shoham        venema 
      bettini         representation actions plans context plan
recognition  universal temporal quantifier strictly necessary  limitation makes
languages decidable  nice computational properties  capable supporting
kinds useful extensions  examples shown throughout paper may serve
partial validation claim  section     proposes introduction limited universal
temporal quantification maintains decidability subsumption 

    disjunctive concepts  tlu  fu
language tlu  fu adds basic language tl f disjunction operator  
usual semantics   temporal non temporal levels 

c    tl j c
e  f   f j e f

 tlu  
 fu  
showing modify calculus check subsumption  let us begin
clarifying example  gain expressivity allows us describe alternative realizations
given plan may have  let us consider scenario robot moving empty
room move either horizontally vertically  let s call rect move
involves simple sequence two basic moving actions  then  describe rect move
plan make use disjunction operator 
 
rect move     x      x  x     hor move x u ver move y  
  x y     x  x y    ver move x u hor move y 
      calculus tlu  fu
normal form

computing subsumption  normal form concepts needed  normalization procedure similar reported section      let us start reducing concept
expression equivalent disjunctive concept form 

  x     tc    g      x n  tcn  gn  q  qm

 

   

fiartale   franconi

gi conjunctions concepts form qik  xik   q contain
neither temporal information  disjunctions  i e   element language f  
proposition      equivalence disjunctive form  every concept c reduced
equivalent disjunctive form  df c    exhaustively applying set rewrite rules
figure    addition rules introduced figure    
possible compute completed disjunctive normal form  cdnf c    disjunct normal form interesting properties  crucial proof
theorem     concept subsumption  temporal constraints always explicit  i e  
two intervals related basic temporal relation  disjunction  either
implicit explicit  neither conceptual part temporal part  i e  
tl f concept  information node independent information
nodes contain time invariant  i e   redundant  nodes 
definition      completed disjunctive normal form  given concept disjunctive
form  completed disjunctive normal form obtained applying following rewrite
rules disjunct 
 temporal completion  rules definition     applied disjunct
exclusion covering step  replaced t introduction step 
disjunct unsatisfiable   i e   temporal constraint network associated
inconsistent   eliminate it 
 essential form  rules definition     applied disjunct 
 t introduction  reduce concepts containing basic temporal relationships 
  x    x   r s   x    tc c     x   x  r x   tc c   x   x  x   tc c
proposition      equivalence cdnf  every concept expression reduced
equivalent completed disjunctive normal concept 
subsumption

theorem     reduces subsumption cdnf concepts subsumption disjunction free concepts  results theorem      applied  following
theorem gives terminating  sound  complete subsumption calculus tlu  fu  
theorem      tlu  fu concept subsumption  let c   c  cm   d 
dn tlu  fu concepts cdnf  then  c v  i j   ci v dj  
proof  since easy show c        cn v iff  i ci v need prove
restricted thesis  ci v d  dn iff ci v d            ci v dn   every concept expression
cdnf corresponds existential quantified formula two free variables  moreover 
matrices formul conjunctions positive predicates  let us denote
formula corresponding concept c c    t  x   now  restricted thesis holds iff
true f   fci     a  b g j  d      a  b    d      a  b   now  let hb minimal herbrand model
f  fci     a  b g  then  f  fci     a  b g j  d      a  b    d      a  b  iff hb j  d      a  b    d      a  b  
since talking single model  d      a  b    d      a  b  valid hb either
d      a  b  d      a  b  valid hb   proves theorem  
 
   proof theorem comes idea werner nutt 

   

fia temporal description logic reasoning actions plans

consequence theorems           following complexity result holds 

theorem      tlu  fu subsumption complexity  concept subsumption tlu  fu
concept expressions normal form np complete problem 

    propositionally complete language  tl alcf
tl alcf uses propositionally complete description logic alcf  hollunder   nutt 
      non temporal concepts changing syntax rules tl f following
way 

e  f   fu j   j  e j p   q j p  j  p  e j  p  e  alcf  

interpretation functions extended take account roles 
p t  
pti   p t j  a  b  ha  bi   p t   ht  a  bi   p
seen section    alcf adds f full negation   thus introducing disagreement  p   q 
undefinedness  p    features  role quantification   p  e   p  e   
example expressive power gained  let us refine description world
states involved stack action  see section       suppose block described
saying lateral sides  role  bottom  top sides  features   then 
property clear could represented follows 
 
clear block   block u  lateral side clear u top side   has above  
says that  order clear  lateral side clear nothing
top side  now  situation block involved stack action
top another one reformulated following concept expression 
  object  top side has above    object  
furthermore  given definition clear blocks  derived that 
  object  top side has above    object   v   object     clear block 
i e   object  another object top it  clear object 
tl alcf possible describe states form incomplete knowledge
exploiting disjunction among non temporal concepts  example  let us say
agent action either human machine   agent  person robot  
      calculus tl alcf

section presents calculus deciding subsumption temporal concepts
description logic tl alcf   again  calculus based idea separating
inference temporal part inference description logic part   valcf    
adopting standard procedures developed two areas 
normal form

more  subsumption calculus based normalization procedure  first
step reduces concept expression equivalent existential form     x   tc   q  u
q   x  u       u qn xn    applying rewrite rules figure    augmented
   

fiartale   franconi

  
  
  c u d 
  c d 
   c
  p  c
  p  c
 f   c
 p   c
 p   q
 p   q
 f p   

 
 
 
 
 
 
 
 
 
 
 
 

 
 
 c  d
 c u  d
c
 p   c
 p   c
f   f    c
f   f     q   c   p   f q
p tq tp q
p tq tp q
f   f    p   

note  f denote atomic feature atomic parametric feature 

figure     rewrite rules transform arbitrary concept simple concept 
rule  p    q    q      p q    p q    q non temporal concept  i e   element
language alcf  
following normalization step need verify concept satisfiability
non temporal concept expressions  alcf concept e unsatisfiable iff e valcf   
algorithms checking satisfiability subsumption concepts terms alcf well
known  hollunder   nutt        
definition      completed existential form  temporal completion concept
existential form   completed existential form  cef   obtained sequentially
applying following steps 
 closure  collapsing  covering  reported definition      covering 
translate concept expression qy applying rewrite rule  qy   qy ui     n  qi 
      qim   
 parameter introduction  requires two phases 
   q translated disjunctive normal form  first simple form  obtained transforming q following rewrite rules reported figure    
disjunctive normal form obtained rewriting q  
simple form   using following rules  correspond first order
rules computing disjunctive normal form logical formul 
 c  c    u    c  u d   c  u d 
p    c d    p   c p  
   simple concept contains complements form  a  primitive concept 
sub concepts form p    p atomic  parametric  feature   corresponds first
order logical formula negation normal form 

   

fia temporal description logic reasoning actions plans

 g         gn   f   p     c
 g         gn   f   p     g   q 
 g         gn    f         fm
 g         gn g   p     f         fm   f   q  

 
 
 
 

 g         gn    f         fm
 g  
 g         gn     gn     
 g         gn   f   p     g   q 
 g         gn g   p     f         fm   f   q  

 
 
 
 
 

 g         gn     
 g         gn     
 g         gn    f         fm  
 g         gn     u
 f         fm     
 g         gn    f         fm  
 g    
 g         gn     gn      
 g         gn     
 g         gn     u
 f         fm     

figure     rewrite rules compute parameter introduction step 
   qj   ej        ejn   compute time invariant part  let us indicate
particular concept expression q  j    gives q  j computing
disjunct eji qj time invariant information e ji   eji valcf   
e ji      otherwise  rewrite every conjunct eji showed figure    
conjuncts considered rewrote    now  unless
e ji      q  j   e j        e jn must conjunctively added nodes 

proposition      equivalence cef  every concept existential form reduced equivalent completed existential concept 

tl f case  covering parameter introduction computed independently  consequence normalization phase  proposition      node
independence  true tl alcf concepts cef  observe that  obtain cef
concept  steps normalization procedure require computation transitive
closure temporal relations   np complete problem  van beek   cohen          computation alcf subsumption   pspace complete
problem  hollunder   nutt        
presentation last normalization phase  eliminate redundant
nodes  possible check whether concept expression satisfiable 
proposition      concept satisfiability  tl alcf concept cef  hx  tc  q x i 
satisfiable  with proviso temporal constraints satisfiable 
non temporal concepts labeling node x satisfiable  checking satisfiability
tl alcf concept cef pspace complete problem 
proof  direct consequence node independence established proposition     
true tl alcf concepts cef 
 
normalization procedure goes rewriting unsatisfiable concepts  
computing essential graph form satisfiable concepts  last phase
   

fiartale   franconi

complex temporal languages considered paper essentially
alcf express   concept means concept expression  e g        a  
consideration follows tl alcf redundant node derived
complex concept expression  e g   t a   g    g    a redundant nodes  
key idea time invariant information present   node thanks
cef  thus needed extract information   node computing
disjunctive normal form q    applying   translation  testing whether
q    valcf qi  given node xi  

definition      essential graph  subgraph cef tl alcf conceptual
temporal constraint network   hx  tc  q x obtained deleting nodes xi
q    valcf qi   exception   node   called essential graph    ess   

proposition       equivalence essential graph  every cef concept reduced
equivalent essential graph form  and  obviously  every concept reduced
equivalent essential graph form  
subsumption

overall normalization procedure reduces subsumption problem tl alcf
subsumption alcf concepts 

theorem       tl alcf concept subsumption  concept c  subsumes concept
c  exists s mapping essential graph c  essential
graph c   

theorem gives sound complete algorithm computing subsumption tl alcf concepts  the proof one theorem        subsumption problem pspace hard  since satisfiability subsumption alcf
concepts proven pspace complete  hollunder   nutt        

   extending expressivity states
following suggests extend basic language cope important issues
representation states   i  homogeneity allows us consider properties world  
peculiar states   remain true subinterval interval hold 
 ii  persistence guarantees state holding effect action continues hold
unless evidence falsity time  approach frame problem
presented  showing possible solution one  in famous problems ai
literature  following subsections shall interested semantically characterizing
actions states computational properties  extensions proposed
temporal languages full edged description logic time action 

    homogeneity

temporal literature homogeneity characterizes temporal behavior world states 
state holds interval time t  holds subintervals t  thus 
   

fia temporal description logic reasoning actions plans

 

 

simple stack block 

r
ontable block 
 

r
onblock block 

x



 

figure     temporal dependencies definition simple stack action 
block table whole day  one conclude table
morning  hand  actions necessarily homogeneous  linguistic
literature difference made activity performance verbs  distinction
comes fact activity verbs sub events denoted
verb  whereas performance verbs not  generally  activity verbs represent ongoing events 
example eat run  described homogeneous predicates  whereas
performance verbs represent events well defined granularity time  prepare
spaghetti  performance verbs example anti homogeneous events  occur
interval time t  occur subinterval t  would yet
completed 
language extended introducing homogeneity operator 

c    rc

 homogeneous concept 

semantics homogeneous concepts easily given terms semantics
temporal universal quantifier  rc  x  x     s  d  f       c  x  means rc
homogeneous concept holds interval remains true
subinterval  particular   x universally qualifies temporal variable x 
temporal constraint  x     s  d  f      imposes x generic interval contained   
moreover  always true rc v c   i e   rc specific concept c  
let us consider example accurate definition basic stack action
 see section        
 
simple stack     x   x            block   rontable  x u
  block   ronblock  y 
figure    shows temporal dependencies intervals simple stack
holds  difference basic stack action use homogeneity operator 
fact  since predicates ontable onblock denote states  homogeneity
explicitly declared  assertion simple stack i  a  says individual action
type simple stack occurred interval i  moreover  assertion implies
related  block  say b  type ontable interval j   meeting  
intervals included j   type onblock another interval l   met  
intervals included l 
simple stack i  a      b   block a  b     j  l  m j  i    m i  l   
      l      s  d  f      j         s  d  f    l  l   
ontable    b    onblock  
l  b  
   

fiartale   franconi

 

 r

instant stack block 

r
ontable block 
z

onblock block 

 

figure     temporal dependencies definition instant stack action 
note simple stack action subsumes instant stack action  whose temporal
dependencies depicted figure    
 
instant stack     z     f z           block   rontable  z u
  block   ronblock  y 
subsumption holds class intervals   obtained homogeneity state
ontable defined simple stack action   including x subintervals
subset class intervals block known table  according
definition instant stack   latter class includes subintervals z  
instant stack action defined without r operator  would
specialize simple stack action  fact  according weaker definition
instant stack  specifying object table z imply
object table subintervals z   particular  possible deduce
object table x subintervals  specified definition
simple stack action  moreover  weak instant stack action type would specialize
weak simple stack action type   i e   basic stack   too  thus  homogeneity helps
us define states actions accurate way  important inferences
captured 
seen above  definition homogeneity makes use universal temporal quantification  remember subsumption propositionally complete description logic
existential universal temporal quantification undecidable still
open problem becomes decidable absence negation  bettini         homogeneity operator restricted form universal quantification  even restricted
form interests us here  concept c rc contain temporal
operator  called simple homogeneous concept   expressiveness resulting logic
enough  example  correctly represent homogeneous nature states   artale 
bettini    franconi        algorithm compute subsumption tl f augmented
homogeneity operator proposed  even formal proof still available  good
arguments discussed conjecture completeness  would prove decidability
logic corresponding modal logics 

    persistence
section shows framework successfully extended general way
cope inertial properties  basic temporal language  property holding  say 
post condition action certain interval  guaranteed hold anymore
included subsequent intervals  reason propose extended
   

fia temporal description logic reasoning actions plans

 

  x

load gun 

loaded gun 

 



  
 

fire gun target 

   loaded gun 
x


loaded gun 

z

dead target 



figure     definitions actions load fire 
formalism  states represented homogeneous persistent concepts 
motivation introducing possibility representing persistent properties
language  section considers solve frame problem  particular
famous example yale turkey shooting scenario  sandewall        allen   ferguson 
       formerly known yale shooting problem 
inertia operator      introduced here  intuitively    c currently true
true preceding interval   say   evidence falsity c
interval current one i  thus  property individual type
c persists time  unless contradiction arises 
formalization inertia operator makes use epistemic operator k  donini 
lenzerini  nardi  schaerf    nutt         kc denotes set individuals known
instances concept c    

definition      inertia    c  j  a  iff
 i  start i  start j     c  i  a   
 h  start h  end i    end h  end j      k c  h  a  
start end two functions giving respectively starting ending point
interval   conditions endpoints simpler readable equivalents
interval relations   k c  h  a  means known type c
interval h  furthermore  following relation holds   a  j   c  j  a      c  j  a   i e     c
subsumes c   definition captured temporal language equipped
epistemic operator   k   homogeneity operator   r 
  c c   x y   x  b  m  o  fi  di     x  s  si  y  y     c  x u r  k c   y 
two action types defined  load   parameter  gun   fire  
parameters  gun  target  figure     
    x    x    gun   loaded x
 
fire     x z      f x        z   
  gun      loaded x  target   dead y  u  gun    loaded z
action load describes loading gun  action fire describes firing gun
target  effects firing gun becomes unloaded either target dead
load

   epistemic interpretation
pair  i  w   interpretation w set interpretations  kc  i w   j  w  c j  w   

   

fiartale   franconi



  i 

gun 

load 

fred  
gun
  j 
j
gun  
j 
j 

gun 

loaded 

fire 

  loaded 

 

 

 

gun 

loaded 

fred 

dead 

figure     actions instances yale shooting problem 
gun loaded   possibly inertia   firing  yale shooting problem
considers situation described following set assertions  abox  
load i  load action     gun load action   gun    a j  i   fire j  fire action   
 gun fire action   gun     target fire action   fred   
i e   beginning gun loaded  then  action firing gun target
fred performed  according semantics language  logical consequences
knowledge base are 
j   i    m i  i      loaded i    gun  
j   j    m j  j       loaded j    gun  
j   j    f  j  j        loaded j    gun  
j   j    m j  j      dead j    fred   
i e    see figure      i  load action makes gun loaded   ii  fire action
makes gun unloaded end   iii  since evidence contrary  gun
still loaded j  inertia   iv  since gun unloaded j    target fred must
dead 
since inertia operator useful describe behavior properties 
characterized homogeneous concepts  simple way representing persistence
context homogeneous concepts proposed 
proposition     let p property   i e   p    rp   homogeneous concept  
knowledge base  j  p  j  a     p  j  a  true   i e   j    p  j  a   
two intervals i  k exist that  j   start i  start j     p  i  a  
  fs i  k   f  j  k   p  k  a g satisfiable 
proof  entailment test verifies first part definition inertia 
satisfiability test verifies that  interval system knows
individual belongs p     interval p  a  deduced inertia   j
  exist interval h system knows p  a  false  indeed 
interval h would related interval k relation since supposed
p homogeneous  knowledge base  p  h  a    p  k  a    in h  k  would
inconsistent 
 
deduction p  j  a      p  j  a  obtained particular case stated
proposition 
   

fia temporal description logic reasoning actions plans

   related works
original formalism devised allen        forms  basis  foundation
work  predicate logic interval temporal networks introduced 
properties asserted hold intervals  events said occur intervals  approach general  suffers problems related semantic
formalization predicates hold occur  blackburn         moreover  computational properties formalism analyzed  study latter aspect was 
contrary  main concern 
description logic literature  approaches representing reasoning
time action proposed  beginning approaches based explicit notion
time surveyed  strips like approaches considered  section ends
illustrating approaches devoted temporally extend situation calculus 
bettini        suggests variable free extension existential universal
temporal quantification  gives undecidability results class temporal languages
  resorting undecidability results halpern shoham s temporal logic   investigates approximated reasoning algorithms  basically  extends alcn description
logics existential universal temporal quantifiers  but  unlike formalism 
explicit interval variables allowed  temporal quantification makes use set
temporal constraints two implicit intervals  reference interval current one 
framework  concept mortal defined as 
 
mortal   livingbeing u   after    not livingbeing 
schild        proposes embedding point based tense operators propositionally
closed description logic  proved satisfiability alct   point based temporal
extension alc   interpreted linear  unbounded discrete temporal structure 
pspace complete  ideas applied  fischer        neuwirth        back
system  note point based temporal ontology unable express variety
relations intervals 
baader laux        integrate modal operators time belief terminological
system looking adequate semantics resulting combined language  major
point paper possibility using modal operators inside concept
expressions front concept definitions assertions  following example
shows notion happy father  different modalities interact 
 bel john  happy father     married to  woman u  bel john pretty  u
hfuturei child graduate 
case  john s belief happy father someone married woman believed
pretty john  whose children graduates sometime future 
semantics kripke style  modal operator interpreted accessibility relation
set possible worlds  domain objects split  possible  different
domain objects  one depending given world  latter choice captures case of 
different definitions concept    bel john  a   b    bel peter  a  
c     since two formul evaluated different worlds  main restriction
modal operators satisfy specific axioms belief time 
hand  language provided complete terminating algorithm
   

fiartale   franconi

serve  authors propose      as basis satisfiability algorithms complex
languages  
description logics intended represent reasoning actions following
strips tradition  heinsohn  kudenko  nebel profitlich        describe rat
system  used wip project german research center ai  dfki   use
description logic represent world states atomic actions  second formalism
added compose actions plans reason simple temporal relationships 
explicit temporal constraints expressed language  rat actions defined
change world state cause  instantaneous strips like
systems  plans linear sequences actions  important service offered
rat simulated execution part plan  checking given plan feasible
and  so  computing global pre  post conditions  feasibility test similar
usual consistency check concept description  temporally project preand post conditions individual actions composing plan  respectively backward
forward  lead inconsistent initial  final intermediate state  plan
feasible global pre  post conditions determined side effect 
devanbu litman              describe clasp system  plan based knowledge
representation system extending notion subsumption classification plans 
build ecient information retrieval system  particular  clasp used represent plan like knowledge domain telephone switching software extending
use software information system lassie  devanbu  brachman  selfridge    ballard 
       clasp designed representing reasoning large collections plan
descriptions  using language able express temporal  conditional looping operators 
following strips tradition  plan descriptions built starting states actions 
represented using classic  brachman  mcguiness  patel schneider  resnick 
  borgida        terminological language  since plans constructing operators correspond
regular expressions  algorithms subsumption integrate work automata theory
work concept subsumption  temporal expressive power system capture
sequences  disjunction iterations actions action instantaneous  furthermore  state descriptions restricted simple conjunction primitive classic
concepts  rat  clasp checks instantiated plan well formed  i e   specified
sequence individual actions able transform given initial state goal state
using strips rules 
end reporting efforts made researchers situation calculus
field overcome strict sequential perspective inherent framework  recent works
enrich original framework represent properties actions different truth
values depending situation time  work reiter        
moving results showed pinto        ternovskaia         provides
new axiomatization situation calculus able capture concurrent actions  properties
continuous changes  natural exogenous actions   nature s control 
notion uent   models properties world   situation maintained 
action instantaneous responsible changing actual situation subsequent
one  concurrent actions simply sets instantaneous actions must coherent 
i e   action s collection must non empty actions occur time 
pinto        reiter        introduce time dimension essentially capture
   

fia temporal description logic reasoning actions plans

occurrence natural actions  due known laws physics   i e   ball bouncing
times prescribed motion s equations   dynamic behavior physical objects
  i e   position falling ball  realized introducing time argument
action function  properties world divided two different classes 
classical uents hold hold throughout situations  continuous parameters
may change value time spanned given situation 
devoted situation calculus time interval ontology work
ternovskaia         order describe processes   i e   actions extended time  
introduces durationless actions initiate terminate processes  matter
fact  processes become uents  instantaneous events   start fluent  finish fluent 
  respectively make true false corresponding uent  persistence
assumptions make uent true interval  example  blocks world
picking up process treated uent start picking up x   finish pickingup x   instantaneous actions enable falsify picking up uent 

    conclusions
main objective paper design class logical formalisms uniformly representing time  actions plans  according framework  action
duration time  parameters  ties temporal evolution
world  possibly associated time actions  model theoretic
semantics including temporal object domain developed  giving
meaning language formul well founded definition various reasoning
services  allowing us prove soundness completeness corresponding algorithms 
peculiar computational properties logic make effective representation
reasoning tool plan recognition purposes  action taxonomy based subsumption
set up  play role plan library plan retrieval tasks 
paper contributes exploration decidable realm interval based temporal
extensions description logics  presented complete procedures subsumption reasoning tl f   tlu  fu tl alcf   addition  subsumption problem
tl f proven np complete problem  subsumption procedures based
interpretation preserving transformation operates separation temporal non temporal parts formalism  thus  calculus adopt distinct
standard procedures developed description logics community temporal
constraints community  obtain decidable languages key idea restrict temporal expressivity eliminating universal quantification temporal variables 
propositionally complete description logic existential universal temporal
quantification undecidable  still open problem becomes decidable absence
negation  introduction homogeneity operator investigation impact
restricted form temporal universal quantification language tl f begun 
several extensions proposed basic temporal language  possibility
specify homogeneous predicates temporal behavior world states described
natural way  introduction non monotonic inertial operator gives
rise forms temporal prediction  another extension   considered paper
  deals possibility relating action elementary actions  decomposing
   

fiartale   franconi

partially ordered steps  artale   franconi         kind reasoning found
hierarchical planners nonlin  tate         sipe  wilkins        forbin  dean 
firby    miller        

acknowledgements
paper substantial extension revision  artale   franconi         work
partially supported italian national research council  cnr  project  ontologic
linguistic tools conceptual modeling    foundations data warehouse
quality   dwq   european esprit iv long term research  ltr  project       
first author wishes acknowledge ladseb cnr padova university
firenze supported part work  work carried paper
done second author working itc irst  trento  work owes lot
colleagues claudio bettini alfonso gerevini  introduced us many years
ago temporal maze  special thanks achille c  varzi  taking time review
technical details paper insightful comments philosophy events 
fausto giunchiglia  useful discussions feedback  thanks paolo bresciani 
nicola guarino  eugenia ternovskaia andrea schaerf enlightening comments
earlier drafts paper  werner nutt luciano serafini helped us deeper
insight logic  would thank carsten lutz helpful discussions
temporal representations  many anonymous referees checked many
errors previous versions paper  errors paper are  course  own 

references

allen  j  f          temporal reasoning planning  allen  j  f   kautz  h  a   pelavin 
r  n     tenenberg  j  d   eds    reasoning plans  chap     pp        morgan
kaufmann 
allen  j  f     ferguson  g          actions events interval temporal logic  journal
logic computation         special issue actions processes 
artale  a   bettini  c     franconi  e          homogeneous concepts temporal description logic  f baader  m lenzerini  w nutt    p f patel schneider  eds   
workshop notes int  workshop description logics  dl     pp        bonn 
germany  dfki  saarbrucken  tech  rep  dfki d       
artale  a     franconi  e          computational account description logic
time action  j doyle  e sandewall    p torasso  eds    proc    th
international conference principles knowledge representation reasoning 
pp       bonn  germany  morgan kaufmann 
artale  a     franconi  e          hierarchical plans description logic time
action  a borgida  m lenzerini  d nardi    b nebel  eds    workshop notes
int  workshop description logics  dl     pp      roma  italy  tech  rep        
workshop notes ijcai    workshop  the next generation
   

fia temporal description logic reasoning actions plans

plan recognition systems  challanges insight related areas ai  
montreal       
baader  f   burckert  h  j   heinsohn  j   hollunder  b   muller  j   nebel  b   nutt  w  
  profitlich  h  j          terminological knowledge representation  proposal
terminological logic  technical memo tm        dfki  saarbrucken  germany 
baader  f     laux  a          terminological logics modal operator  proc 
   th ijcai  pp          montreal  canada 
bettini  c          temporal extensions terminological languages  ph d  thesis  computer science department  university milan  italy 
bettini  c          time dependent concepts  representation reasoning using temporal
description logics  data   knowledge engineering               
blackburn  p          fine grained theories time  working papers  th intl 
workshop semantics time  space  movement  spatio temporal reasoning 
pp          
brachman  r  j   mcguiness  d  l   patel schneider  p  f   resnick  l  a     borgida  a 
        living classic  use kl one like language  sowa 
j   ed    principles semantic networks  morgan kaufmann 
buchheit  m   donini  f  m     schaerf  a          decidable reasoning terminological
knowledge representation systems  information systems             
calvanese  d   lenzerini  m     nardi  d          unified framework class based
representation formalisms  proc    th international conference principles
knowledge representation reasoning bonn  germany 
cohen  w   borgida  a     hirsh  h          computing least common subsumers
description logics   pp          san jose  ca 
de giacomo  g     lenzerini  m          tbox abox reasoning expressive description
logics  proc    th international conference principles knowledge
representation reasoning  pp          boston  ma  morgan kaufmann 
de giacomo  g     lenzerini  m          what s aggregate  foundations description logics tuples sets  proc     th ijcai montreal  canada 
dean  t   firby  j     miller  d          hierarchical planning involving deadlines  travel
time resources  computational intelligence        
devanbu  p  t     litman  d  j          plan based terminological reasoning  proc 
  nd international conference principles knowledge representation
reasoning  pp          cambridge  ma 
devanbu  p  t     litman  d  j          taxonomic plan reasoning  artificial intelligence 
         
   

fiartale   franconi

devanbu  p   brachman  r   selfridge  p     ballard  b          lassie   knowledgebased software information system  communication acm         
donini  f  m   hollunder  b   lenzerini  m   spaccamela  a  m   nardi  d     nutt  w 
        complexity existential quantification concept languages  artificial
intelligence              
donini  f  m   lenzerini  m   nardi  d     nutt  w          complexity concept
languages  tech  rep  rr        dfki  germany  preliminary version appears
proc   nd international conference principles knowledge representation
reasoning  kr     
donini  f  m   lenzerini  m   nardi  d     schaerf  a          deduction concept
languages  subsumption instance checking  journal logic computation 
               
donini  f  m   lenzerini  m   nardi  d   schaerf  a     nutt  w          adding epistemic
operators concept languages  proc    rd international conference
principles knowledge representation reasoning  pp          cambridge  ma 
fikes  r  e     nilsson  n          strips  new approach application theorem
proving problem solving  artificial intelligence             
fischer  m          integration temporal operators terminological representation system  kit report     technische universtitat berlin  germany 
gerevini  a     schubert  l          point based temporal disjointness  artificial
intelligence              
halpern  j  y     moses  y          guide modal logic knowledge belief 
preliminary draft  proc    th ijcai  pp          los angeles  ca 
halpern  j  y     shoham  y          propositional modal logic time intervals  journal
acm                  
heinsohn  j   kudenko  d   nebel  b     profitlich  h          rat  representation
actions using terminological logics  tech  rep   dfki  saarbrucken  germany 
hollunder  b     nutt  w          subsumption algorithms concept languages  tech 
rep  rr        dfki  germany 
kautz  h  a          formal theory plan recognition implementation  allen 
j  f   kautz  h  a   pelavin  r  n     tenenberg  j  d   eds    reasoning plans 
chap     pp          morgan kaufmann 
lifschitz  v          semantics strips       workshop reasoning
actions plans  pp        morgan kaufman 
mccarthy  j     hayes  p  j          philosophical problems standpoint
artificial intelligence  meltzer  b     michie  d   eds    machine intelligence 
vol     pp          edinburgh  uk  edinburgh university press 
   

fia temporal description logic reasoning actions plans

nebel  b          terminological reasoning inherently intractable  artificial intelligence 
            
nebel  b          terminological cycles  semantics computational properties  sowa 
j  f   ed    principles semantic networks  chap      pp           morgan kaufmann 
neuwirth  a          inferences temporal object descriptions terminological representation system  design implementation  kit report      technische universtitat
berlin  germany 
pinto  j  a          temporal reasoning situation calculus  ph d  thesis  department
computer science  university toronto 
reiter  r          natural actions  concurrency continuous time situation calculs 
proc    th international conference principles knowledge representation reasoning boston  ma 
renz  j     nebel  b          complexity qualitative spatial reasoning  maximal
tractable fragment region connection calculus  proc     th ijcai  pp 
        nagoya  japan 
sandewall  e          features fluents  representation knowledge dynamical systems  vol  i  oxford university press 
sandewall  e     shoham  y          non monotonic temporal reasoning  gabbay  d 
 ed    handbook artificial intelligence logic programming  oxford university
press 
schaerf  a          reasoning individuals concept languages  data   knowledge
engineering                  
schild  k  d          correspondence theory terminological logics  preliminary report 
proc     th ijcai  pp          sidney  australia 
schild  k  d          combining terminological logics tense logic  proceedings
 th portuguese conference artificial intelligence  epia    
schmidt schau  m     smolka  g          attributive concept descriptions complements  artificial intelligence               
schmiedel  a          temporal terminological logic  proc  aaai     pp         
boston  ma 
smolka  g          feature constraint logics unification grammar  journal logic
programming            
tate  a          generating project networks  proc    th ijcai  pp         
cambridge  ma 
   

fiartale   franconi

ternovskaia  e          interval situation calculus  workshop notes ecai   
workshop  logic change   pp          amsterdam 
van beek  p     cohen  r          exact approximate reasoning temporal
relations  computational intelligence             
van beek  p     manchak  d  w          design experimental analysis algorithms
temporal reasoning  journal artificial intelligence research          
van dalen  d          logic structure  springer verlag 
venema  y          expressiveness completeness interval tense logic  notre dame
journal formal logic                  
weida  r          closed terminologies temporal reasoning descriptions plan
recognition  ph d  thesis  department computer science  columbia university 
new york  ny 
weida  r     litman  d          terminological reasoning constraint networks
application plan recognition  proc    rd international conference
principles knowledge representation reasoning  pp          cambridge  ma 
weida  r     litman  d          subsumption recognition heterogeneous constraint
networks  proceedings caia    
wilkins  d          practical planning  morgan kaufmann  san mateo ca 

   


