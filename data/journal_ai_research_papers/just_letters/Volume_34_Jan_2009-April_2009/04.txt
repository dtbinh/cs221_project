journal of artificial intelligence research                  

submitted        published      

efficient informative sensing using multiple robots
amarjeet singh
andreas krause
carlos guestrin
william j  kaiser

amarjeet   ee   ucla   edu
krausea   caltech   edu
guestrin   cs   cmu   edu
kaiser   ee   ucla   edu

abstract
the need for efficient monitoring of spatio temporal dynamics in large environmental applications  such as the water quality monitoring in rivers and lakes  motivates the use of robotic sensors
in order to achieve sufficient spatial coverage  typically  these robots have bounded resources  such
as limited battery or limited amounts of time to obtain measurements  thus  careful coordination of
their paths is required in order to maximize the amount of information collected  while respecting
the resource constraints  in this paper  we present an efficient approach for near optimally solving the np hard optimization problem of planning such informative paths  in particular  we first
develop esip  efficient single robot informative path planning   an approximation algorithm for
optimizing the path of a single robot  hereby  we use a gaussian process to model the underlying phenomenon  and use the mutual information between the visited locations and remainder of
the space to quantify the amount of information collected  we prove that the mutual information
collected using paths obtained by using esip is close to the information obtained by an optimal
solution  we then provide a general technique  sequential allocation  which can be used to extend
any single robot planning algorithm  such as esip  for the multi robot problem  this procedure
approximately generalizes any guarantees for the single robot problem to the multi robot case  we
extensively evaluate the effectiveness of our approach on several experiments performed in field
for two important environmental sensing applications  lake and river monitoring  and simulation
experiments performed using several real world sensor network data sets 

   introduction
global climate change and corresponding impetus on sustainable practices for environment related
activities has brought forth the challenging task of observing natural phenomena exhibiting dynamics in both space and time  observing and characterizing these dynamics with high fidelity will
be critical for answering several questions related to policy issues for monitoring and control and
understanding biological effects on activity of microbes and other organisms living in  or dependent
on  these environments  monitoring algal bloom growth in lakes and salt concentration in rivers  as
illustrated in fig     are specific examples of related phenomena of interest to biologists and other
environment scientists  macintyre        ishikawa   tanaka        macintyre  romero    kling 
      
monitoring environmental phenomena  such as algal bloom growth in a lake  requires measuring physical processes  such as nutrient concentration  wind effects and solar radiation  among
others  across the entire spatial domain  one option to acquire data about such processes would be
to statically deploy a set of sensing buoys  reynolds fleming  fleming    luettich         due to
the large spatial extent of the observed phenomena  this approach would require a large number of
sensors in order to obtain high fidelity data  the spatio temporal dynamics in these environments

c
    
ai access foundation  all rights reserved 

fis ingh   k rause   g uestrin   k aiser

 a  confluence of san joaquin and merced river

 b  lake fulmor  san jacinto mountain reserve

figure    deployment sites used for performing path planning in field 
motivate the use of actuated sensors  robots carrying sensors together with an efficient approach
for planning the paths of these actuated sensors  these actuated sensors have been used in the past
 dhariwal et al         for measuring the phenomena at various locations and hence providing the
biologists with critical information about the state of the lake 
typically however  such robots have strict resource constraints  such as storage battery energy 
that limits the distance they can travel or the number of measurements they can acquire before the
observed phenomena varies significantly  these constraints necessitate careful motion planning for
the robots  coordinating their paths in order to maximize the amount of collected information 
while satisfying the given resource constraints  in this paper  we tackle this important problem of
seeking informative paths for a collection of robots  subject to constraints on the cost incurred by
each robot  e g  due to limited battery capacity 
in order to optimize the paths of these robots  we first need to quantify the informativeness of
any particular chosen path  in this work  we adopt an approach from spatial statistics and employ
probabilistic models of the spatial phenomena  using these models  informativeness can be viewed
in terms of the uncertainty about our prediction of the phenomena at unobserved locations  given
the observations made by the mobile robots at a subset of locations  the selected path   in particular  we use a rich class of probabilistic models called gaussian processes  gps   rasmussen  
williams        that has been shown to accurately model many spatial phenomena  cressie        
and apply the mutual information  mi  criterion  caselton   zidek        to quantify the reduction
in uncertainty achieved through selected robot paths 
unfortunately  the problem of finding an optimal collection of paths  maximizing the mutual
information criterion  is an np hard search problem  which is typically intractable even for small
spatial phenomena  in this paper  we will develop an approximation algorithm which efficiently
finds a provably near optimal solution to this optimization problem  the key insight which will
allow us to obtain such an algorithm is that the mutual information  and several other notions of
informativeness  as discussed in krause and guestrin        satisfies submodularity  an intuitive
diminishing returns property   making a new observation helps more if we have made only a few
observations so far  and less if we have already made many observations  krause et al         
the problem of optimizing the path of a single robot to maximize a submodular function over
the visited locations was studied by chekuri and pal         who developed an algorithm  recursivegreedy  with strong theoretical approximation guarantees  unfortunately  the running time of their
   

fie fficient i nformative s ensing using m ultiple robots

approach is quasi polynomial  it scales as m log m   for m possible sensing locations  this property
makes the algorithm impractical for most environmental sensing applications  with typical numbers
 m   of observation locations reaching to several hundreds and more  in this paper  we present two
techniques  spatial decomposition and branch and bound search  for overcoming these limitations of the recursive greedy approach of chekuri et al   making it practical for real world sensing
problems  we call this efficient approach for single robot path planning esip  efficient single robot
informative path planning  
we then provide a general approach  sequential allocation  which can be used to extend any
single robot algorithm  such as esip  to the multi robot setting  we furthermore prove that this
generalization only leads to minimal reduction  independent of the number of mobile robots  of the
approximation guarantee provided by the single robot algorithm  we combine esip with sequentialallocation to develop the first efficient path planning algorithm  emip  that coordinates multiple
robots  each having a resource constraint  in order to obtain highly informative paths  i e  paths that
maximize any given submodular function  such as mutual information  by exploiting submodularity  we prove strong theoretical approximation guarantees for our algorithm 
we extensively evaluate the effectiveness of our approach on several experiments performed
in field for two important environmental sensing applications  lake and river monitoring  the river
campaign was executed at the confluence of two rivers  merced river and san joaquin river  in california from august             fig   a displays an aerial view of the san joaquin deployment site 
the lake campaign was executed at a lake located at the university of california  merced campus
from august              fig   b displays an aerial view of lake fulmor  in both campaigns  the
networked info mechanical system  nims   jordan et al          a cable based robotic system  was
used to perform path planning while observing a two dimensional vertical plane  cross section   in
addition to analyzing data from these deployments  we provide extensive experimental analysis of
our algorithm on several real world sensor network data sets  including the data collected using a
robotic boat at lake fulmor  dhariwal et al         
this manuscript is organized as follows  we formally introduce the multi robot informative
path planning  mipp  problem in section    in section    we discuss the sequential allocation
approach for extending any single robot path planning algorithm to the multi robot setting while
preserving approximation guarantees  we then review the recursive greedy algorithm proposed by
chekuri et al   section     an example of such a single robot algorithm  subsequently  we present
our spatial decomposition  section    and branch and bound techniques  section    which drastically improve the running time of recursive greedy and make it practical for real world sensing
applications  in section    we evaluate our approach through in field experiments as well as in simulations on real world sensing datasets  in section    we review related work  and we present our
conclusions in section     the proofs for all our results are presented in the appendix 

   the multi robot informative path planning problem
we now formally define the multi robot informative path planning  mipp  problem  we assume
that the spatial domain of the phenomenon is discretized into finitely many sensing locations v  for
each subset a  v  let i a  denote the sensing quality  i e  the informativeness  of observing the
phenomenon at locations a  details on appropriate choices for the sensing quality i are given below 
we also associate with each location v  v  a sensing cost c v       quantifying the expenses of
obtaining a measurement at location v  when traveling between two locations  u and v  a robot in 

   

fis ingh   k rause   g uestrin   k aiser

curs a traveling cost c u  v       a robot traverses a path in this space  an st path p is a sequence
of l locations starting at node s  and finishing at t  the cost c p  of path p    s   vp
    v             vl  
l 
t  is the sum of sensing costs and traveling costs along the path  i e  c p   
i   c vi    
pl
c v
 
v
  
in
the
case
l
 
  
cost
of
the
path
p
will
only
involve
traveling
cost
between the
i  i
i  
starting and finishing locations c s  t   we will use the notation p to both refer to the sequence of
nodes in the path  and to the subset of sensing locations p  v  ignoring their sequence   for a collection of k paths p    p            pk    one for each robot  i p    i p       pk   denotes the sensing quality of the paths  which quantifies the amount of information collected by the k paths  the
goal of the mipp problem is to find a collection p of k paths  with specified starting and finishing
location si and ti  not necessarily different   such that each path has bounded cost c pi    b for
some specified budget b  and that the paths are the most informative  i e  i p  is as large as possible 
formally  the problem can be defined as 
max i ki   pi    subject to c pi    b   i              k  

pi v

   

in our lake monitoring example with the goal of performing surface monitoring using boats 
we first discretized the two dimensional surface of the lake into finitely many sensing locations  as
depicted in fig   b   for the single robot scenario  we then seek to find the most informative path
p   in terms of predicting the algal bloom content  starting from location s and finishing in location
t  the experiment cost c vi   corresponds to the energy required for making chlorophyll and related
measurements  indicators of amount of algal bloom   the traveling cost c vi    vi   corresponds to
the energy consumption when traveling from location vi  to vi   the budget b quantifies the total
energy stored in the boats battery 
    quantifying informativeness 
how can we quantify the sensing quality i  to model spatial phenomena  a common approach in
spatial statistics is to use a rich class of probabilistic models called gaussian processes  gps  c f  
rasmussen and williams         such models associate a random variable xv with each location
v  v  the joint distribution p  xv   can then be used to quantify uncertainty in the prediction
p  xv a   xa   xa   of phenomena at unobserved locations xv a   after making observations
xa   xa at a small subset a of locations  to quantify this uncertainty we use  for example 
the mutual information  mi  criterion  as discussed by caselton and zidek         for a set of
locations  p  the mi criterion is defined as 
mi a   h xv a    h xv a   xa  

   

where h xv a   is the entropy of the unobserved locations v   a  and h xv a   xa   is the
conditional entropy of locations v   a after sensing at locations a  hence mutual information
measures the reduction in uncertainty at the unobserved locations  therefore  in our lake monitoring
example  we would like to select the locations that most reduce the uncertainty in the algal bloom
content prediction for the lake environment  conveniently  in a gp  the mutual information criterion
can be computed efficiently and analytically  caselton   zidek         the effectiveness of mutual
information to select informative sensing locations was studied by krause et al          several
alternative information criteria such as entropy  ko et al          information disk model  bai et al  
      and alphabetical optimality criterion such as a   d  and e optimal have also been used to
associate sensing quality with observation locations in related problem domain 
   

fie fficient i nformative s ensing using m ultiple robots

    submodularity 
even if we do not consider the constraints on the length of the paths of the robots  the problem
of selecting locations that maximize mutual information is np hard  krause et al          hence 
in general  we most likely cannot expect to be able to efficiently find the optimal set of locations 
instead  our goal will be to efficiently find near optimal solutions  for which the sensing quality
 e g  mutual information   is provably close to the optimal sensing quality 
the key observation  which will allow us to obtain such strong approximation guarantees  is
that mutual information satisfies the following diminishing returns property  krause et al         
the more locations we have already sensed  the less information we will gain by sensing a new
location  this intuition is formalized by the concept of submodularity  a function f is submodular
 nemhauser et al         if 
a  b  v and s  v   b  f  a  s   f  a   f  b  s   f  b  

   

another intuitive property is that sensing quality is monotonic    which means that i a   i b  for
all a  b  v  hence  as we select more and more sensing locations  we will collect more and
more information  lastly  mutual information is normalized  i e  i       
we thus define our mipp problem as the problem of optimizing paths of length at most b for
k robots  such that the selected sensing locations maximize a normalized  monotonic submodular function i    this definition of the mipp problem allows our approach to be applied to any
monotonic submodular objective function  not just mutual information  this generalization is very
useful  as several other notions of informativeness can be shown to satisfy submodularity  krause
  guestrin        
    online vs offline path planning 
many robotic path planning applications  such as search and rescue  involve uncertain environments
with complex dynamics that can only be partially observed  informative path planning  selecting
the best locations to observe subject to given sensing constraints  in such uncertain environments
necessitates a trade off between exploration  gathering information about the environment  and
exploitation  using the current belief about the state of the environment most effectively   we distinguish two different classes of algorithms  nonadaptive  offline  algorithms  that plan and commit
to the paths before any observations are made  and adaptive  online  algorithms  that update and
replan as new information is collected  both the online and offline settings are np hard optimization problems  in this paper  we only discuss the approximation algorithms for the offline setting
that exploit the known belief about the environment for efficient path planning  we plan to work towards extending our approach for an exploration exploitation trade off to incorporate online model
adaptation in the future 

   approximation algorithm for mipp
the problem of optimizing the path of a single robot  i e  k      to maximize a submodular function of the visited locations  constrained by an upper bound  b  on the path cost  was first studied
by chekuri and pal         we will review their recursive greedy algorithm in detail in section   
   this monotonicity holds only approximately for mutual information  krause et al          which however is sufficient
for all purposes of this paper 

   

fis ingh   k rause   g uestrin   k aiser

 

algorithm sequential allocation

input  b  k  starting   finishing locations s            sk   t            tk   v
output  a set of informative paths p            pn
  begin
 
a    
 
for    i  k do
   performing path planning for the ith robot
 
pi  sp p  si   ti   b  ai    v  
   committing to the previously selected locations
 
ai  ai   pi  
 
return p            pk  
  end
algorithm    sequential allocation algorithm for multi robot path planning using any single robot path planning algorithm spp  output set of paths p            pk provides an approximation guarantee of      where  is the
approximation guarantee of single robot path planning algorithm sp p  

in our lake monitoring problem  we seek to plan multiple paths  one for each robot  one possibility is to apply the single path algorithm to the product graph  i e  plan a path over tuples of
locations simultaneously representing the locations of all robots  however  such straightforward
application of the single robot planning algorithm would lead to an increase in running time which
is exponential in the number of robots  and therefore intractable in practice  we are not aware
of any sub exponential approximation algorithm for this challenging multiple robot path planning
problem  in this paper  we present a simple algorithm for the multi robot scenario that can exploit
any approximation algorithm for the single robot case  such as the recursive greedy algorithm  as
discussed by chekuri and pal         and  almost  preserve the approximation guarantee  while
avoiding the exponential increase in running time 
our algorithm  sequential allocation  successively applies the single robot path planning algorithm k times to get the paths for k robots  hereby  when planning the jth path  the approach takes
into account the locations already selected by the previous j    paths  committing to the  approximately  best possible path at each stage before moving on to the next stage makes our approach
greedy in terms of paths 
the pseudocode of the algorithm is presented in algorithm   and fig    illustrates the approach
for three robots  the algorithm takes as input the budget constraint b  number of available robots
k  starting and finishing location for each available robot s            sk   t            tk and the complete set
of discrete observation locations v to select from  let us assume that we have a single robot path
planning algorithm  sp p   that takes as input a starting location si   a finishing location ti   budget
constraint b  a set of locations already selected for observation and a set of possible observation
locations that can be visited  in fig     all the three robots have same starting and finishing location 
while planning the path for the first robot  i       the input set of already selected observation
locations is empty  at each subsequent stage  we commit to the locations selected in all the previous
stages and pass the already observed locations as input to our next call to sp p   let ai  be the locations already visited by paths p            pi    and a      then the residual information  iai  for
a path p over unvisited locations is defined as iai   p    i ai  p i ai     it can be verified
that if i is a normalized  monotonic and submodular function  then so is the residual information
   

fie fficient i nformative s ensing using m ultiple robots

figure    illustration of sequential allocation algorithm for three robots  each with the same starting and finishing
location 

iai    thus  at stage i we use sp p to find the most informative path with respect to the modified
residual sensing quality function  in fig     when planning p    locations selected for p  are considered and the sensing quality function used is ip    similarly  while evaluating the path p    locations
selected for p  and p  are taken into account and the sensing quality function used is ip  p   
perhaps surprisingly  this straight forward greedy sequential allocation approach is guaranteed to perform almost as well as the black box algorithm used for path planning  more formally 
assume we have an   approximate algorithm for the single robot problem  i e  an algorithm which 
starting with budget b and a monotonic submodular function f   is guaranteed to find a path recovering at least a fraction of    of the optimal information achievable with the same budget  in
this case  the following theorem proves that the sequential allocation procedure has approximation
guarantee close to  as well 
theorem    let  be the approximation guarantee for the single path instance of the informative
path planning problem  then our sequential allocation algorithm achieves an approximation guarantee of        for the mipp problem  in the special case  where all robots have the same starting
 si   sj   i  j  and finishing locations  ti   tj   i  j   the approximation guarantee improves to
      exp             
the work by blum et al         proved theorem   for the special case of additive  modular 
sensing quality functions  in this paper  we extend their result to general submodular functions 
as an example of an  approximate algorithm for the single robot problem  in the next section 
we review the recursive greedy algorithm as proposed by chekuri and pal         this algorithm
has an approximation guarantee  of o log   p      where  p    is the number of locations visited
by an optimal solution p    hence  for this algorithm  the performance guarantee obtained for the
mipp problem through sequential allocation is o log   p     as well   
   in order to apply sequential allocation to the recursive greedy algorithm  we can  when planning the ith path  simply
pass the set of nodes visited by the previous i    paths as the input parameter r  as is illustrated in algorithm   

   

fis ingh   k rause   g uestrin   k aiser

 a 

 b 

 c 

 d 

figure    illustration of performance of simple greedy approaches compared to an optimal approach 

   a note on greedy path planning
the work by krause et al         considered the sensor placement problem  where a subset a  v
of k locations is selected in order to maximize the mutual information  without considering path
costs  by exploiting the submodularity property of mi  they proved that if the discretization v is
fine enough and the gp satisfies mild regularity conditions  greedily selecting locations based on
this criterion is near optimal  more specifically  the greedy algorithm  which we call greedysubset
in the following   after selecting the first i locations ai   picks the location with maximum residual
information i e  vi     argmaxv iai   v   and sets ai     ai   vi      greedysubset hence
iteratively adds locations which increase mutual information the most  using a result proposed by
nemhauser et al         on the performance of the greedy algorithm for submodular functions 
the work by krause et al         showed that greedysubset selects sets which achieve mutual
information of at least       e  opt   where opt is the optimal mutual information among
all sets of the same size  and  is a small error incurred due to the discretization 
the strong performance of the greedy algorithm in the unconstrained  no traveling costs between locations  case motivates the question of whether a simple greedy approach could perform
well in the more complex path planning setting considered in this paper  while it is difficult to
give a general impossibility statement for such a question  several natural extensions of the greedy
algorithm can be shown to perform arbitrarily badly 
for example  consider a setting where we define the cost c a  of a set of nodes as the cost
of the cheapest path connecting the nodes a  assuming locations ai have already been picked 
a natural extension of the greedy algorithm will be to add a location v which most improves the
benefit cost ratio
ia  v 
v    argmax i
 
vv a cai  v 
   

fie fficient i nformative s ensing using m ultiple robots

where cai  v    c ai   v    c ai   is the increase in cost after adding v to the already selected
locations ai  
fig    shows a small example illustrating that this intuitive greedy procedure can perform arbitrarily poorly compared to an optimal approach  the example is illustrated in fig   a  with s as
both the starting and the finishing location and  b as the total available budget  the reward associated with each observation location is displayed in parenthesis with the corresponding locations 
for the ease of illustration  we assume that the reward associated with each observation location is
some modular function  instead of a submodular function   traveling cost is associated with the
corresponding edges in the example  starting at location s  possible options for the first observation
location are to select either of o    g  or t  observation location o  will lead to a cluster of n   
b   locations each separated by a traveling cost  and with an associated reward of    except o 
that has an associated reward of    o  is separated from g  by a traveling cost of b   while the
rest of the locations in the cluster are assumed to be unreachable from any other location outside the
cluster  observation location g  will lead to a series of m    b   locations  each separated from
the previous one by  traveling cost and with an associated reward of   
as illustrated in fig   b  an optimal approach would select o  as the first location  paying a
traveling cost of b   and earning a very small reward   once the robot observes o    it can then
observe the rest of  b      locations in the cluster  each providing a reward of   and return back to
s while spending a total of  b as the traveling cost  thus  the total reward collected by an optimal
approach  for this example  will be   b         
as illustrated in fig   c  a greedy approach based on the reward cost ratio will select g  as the
first observation location  with the highest reward to cost ratio of     since o  is at a distance b  
away from g  and only provides a reward of   this approach will continue along the series  observing all the locations till gm and returning back to s  total reward collected by such an approach will
be  b  on the other hand  a simple greedy approach based on reward  as illustrated in fig   d 
will simply select t as the first observation location and return back to s  collecting a total reward
of    since the ratio b  can be arbitrarily large as      the reward collected by simple intuitive
greedy approaches   b or    can be arbitrarily poor when compared to the reward collected by an
optimal approach    b          
although  the reward function considered in the example was assumed to be a modular function  the submodular optimal reward can also be arbitrarily large  compared to submodular reward
collected by simple greedy approaches  the difference between the submodular and modular reward
will depend on the correlation of the selected observation locations   this insight necessitates the
development of more complex algorithms for path planning as considered in this paper 

   the recursive greedy algorithm
we will now review the recursive greedy algorithm as proposed by chekuri and pal  since it forms
the basis for our efficient single robot path planning approach  the basic strategy of the algorithm
is a divide and conquer approach  any path from the starting location  s  to finishing location  t 
has a middle location  vm   such that there are same number of locations  or different by at most   
on either side of vm in the s  t path  thus  the problem of finding a s  t path can be divided into
two smaller subproblems of finding smaller subpaths  s  vm and vm  t  and then concatenating
these small subpaths  while having the same number of locations  the subpaths on either side of the
middle node can have different costs  i e  the budget for the total path has to be split into two smaller

   

fis ingh   k rause   g uestrin   k aiser

 

algorithm recursive greedy  rg 

input  s t b r iter
output  an informative path p
  begin
 
if c s  t    b then
 
return infeasible 
 
p  s  t 
 
base case  iter   return p 
 
m  fr  p  
   trying each location as middle node
 
foreach vm  v do
   trying all possible budget splits
 
for    b   b do
   planning subpath on one side of the middle node
  
p   rg s  vm   b    r  iter     
   planning subpath on other side of the middle node 
committing to nodes selected in first subpath
  
p   rg vm   t  b  b    r  p    iter     
  
if fr  p   p      m then
  
p  p   p   
  
m  fr  p  
  
return p 
   end
algorithm    recursive greedy algorithm for single robot instance of mipp as proposed by chekuri and pal
        output path p provides an approximation guarantee of ix  p   ix  p     d    log ke  where i represent
the submodular reward function  p  represent an optimal path and k represent the number of nodes in the optimal
path 

budgets  not necessarily equal   one for each subpath  searching for the best middle location and
trying all possible budget splits on either side of the middle location  while optimizing the complete
s  t path  would result in an exhaustive search for the optimal solution and therefore will be prohibitively expensive  instead of performing this exhaustive search  the recursive greedy algorithm
follows a simple greedy strategy  wherein for each of the possible budget splits and each possible
middle nodes considered  one can first plan the optimal subpath on one side of the middle location 
then commit to the planned subpath and optimize for the subpath on the other side  such a path 
consisting of independently optimized subpath svm and a subpath vm t optimized subject to observation locations already selected in s  vm   may result in a suboptimal s  t path  nonetheless 
chekuri and pal proved that such a path has an approximation guarantee of o log   p      where
 p    is the number of locations visited by an optimal solution p   
in order to implement such a greedy approach  the recursive calls planning the second subpath will  similarly as done in sequential allocation  optimize a residual reward function which
measures the incremental gain taking into account the information already obtained by the locations selected in the first subpath  more formally  let the set p  refer to the locations selected in
the first subpath  and consider the residual submodular function fp  over a set of locations a as
   

fie fficient i nformative s ensing using m ultiple robots

fp   a    f  a  p     f  p     if p  is the set of locations in the second subpath  then it holds that
f  p      fp   p      f  p   p     hence  if the first recursive call  with submodular function f  
returns path p    and the second recursive call  with submodular function fp    returns path p    then
the sum of the scores of the subproblems exactly equals the score of the concatenated path 
let us now formalize the intuitive description of the recursive greedy algorithm  the pseudocode of the algorithm is presented in algorithm    the inputs to the algorithm are a starting
location s  a finishing location t  an upper bound on the path cost b  a parameter r that defines the
residual for the submodular function such that the function that needs to be maximized is defined as
fr  p    f  p  r   f  r   and a parameter i that represents the recursion depth  the maximum
number of locations that can be selected at each stage is calculated using the recursion depth as  i  
in the base case  recursion depth i       the algorithm simply returns the path p    s  t   if the
cost c s  t   b  
in the recursive case  the algorithm searches for a s  t path with maximum reward by iterating
over all possible locations  that can be reached with given budget constraint  as middle locations
 line     i e  locations that could possibly split the required path into two subpaths with equal number of locations on either side  for each such middle location  the algorithm explores all possible
splits of available budget  line    across the two subpaths on either side of the middle location 
reducing the recursion depth by    for each subpath  ensures that the same number of locations are
selected on either side of the middle location  however  before exploring the second subpath  the
algorithm commits to the locations selected in the first subpath by passing them as input through
the residual parameter  line      the two subpaths found in such a way are then concatenated to
provide a complete s  t path  the algorithm stores the best possible s  t path over the already
searched problem space  replacing it with a better path whenever such a path is found 
    structure of the search problem
it is instructive to consider the recursive structure generated by the recursive greedy algorithm 
fig    illustrates an example of such a structure when running recursive greedy for our lake sensing
application with the given starting  s  and finishing  t  location and an upper bound on the path cost
 b   the search using recursive greedy can be represented graphically as a sum max tree  at the
root is a max node representing the objective of finding a s  t path with maximum possible reward 
while the cost of the path is bounded by budget b  for each such max node  the children in the
search tree represent sum nodes corresponding to sum of rewards collected from the two subpaths
on either side of the middle location  therefore  at the end of the first iteration  the graphical representation will have a max node as root with several sum nodes as children  for each feasible middle
location and each possible budget splits around that middle location  a partial tree at the end of first
iteration is shown in fig   a 
for each sum node  formed at the end of the first iteration  the algorithm is then applied recursively on the left subpath  thus the first step of second iteration seeks to find a s  vm path with
maximum possible reward under the budget constraint corresponding to the respective budget split
for the sum node  then  their approach commits to the selected locations on the left side  and recurses on the right subpath  to search for a vm  t path   given these selected locations  as a result 
each sum node will have two max nodes as children  each representing an objective to find a subpath
of maximum reward on either side of the selected middle location  this algorithm is greedy in
that it commits to the locations selected in the first subpath before optimizing the second subpath 

   

fis ingh   k rause   g uestrin   k aiser

 a  recursive greedy during first iteration

 b  recursive greedy during second iteration

figure    illustration of recursive greedy algorithm  as proposed by chekuri and pal  for the lake sensing application 
sum max tree presents the graphical representation of the problem space 

a partial tree at the end of second iteration is shown in fig   b  despite the greedy nature  the
recursive greedy approach provides the following approximation guarantee 
theorem     chekuri   pal        let p     s   v    v            vk   t  be an optimal s t path
solution  let p be the path returned by rg s  t  b  r  i   if i  d    log ke  then ix  p  
ix  p     d    log ke 
 
hence  the recursive greedy solution p obtains at least a fraction of d  log
of the optimal
  ke
information  where k  n  i e  the total number of locations traversed by the optimal path will be
smaller than the total number of locations in the discretized spatial domain  referring back to theorem    for the mipp problem using recursive greedy as the single robot path planning approach 
   d    log ke 

    running time
by inspecting the recursive structure  the running time of the recursive greedy algorithm can be seen
to be quasi polynomial  more specifically  the running time of the algorithm is o  m b o log  m     
where b is the budget constraint and m    v  is the total number of possible observation locations 
so  even for a small problem with m      locations  the exponent will be    resulting in a very
large computation time  making the algorithm impractical for observing several real world physical
processes 
the large computational effort required by recursive greedy can be attributed to two issues    
the large branching factor at each of the max nodes of the recursion tree  sum nodes for each possible
middle node and each possible budget split across that middle node  and     possibly  unnecessary
recursion while exploring subtrees in problem space that can not provide us with an improved reward compared to current best solution  in the following sections  we propose two complementary
approaches  can be used independently of the others  which are intended to ameliorate these concerns  a spatial decomposition technique  and a branch and bound approach  spatial decomposition
   

fie fficient i nformative s ensing using m ultiple robots

starting node s

starting cell cs

ending node t

ending cell ct

cs

middle cell cm
ct
p   budget   b
p   budget   beb

incoming
path p 

a

b

 a  spatial decomposition of the phenomenon

d

c

smoothed path

exiting path
p 

cell center

 b  cell paths and travel within cells

 c  cell paths and path smoothing

figure    illustration of spatial decomposition in recursive esip using surface sensing in lake environment as an
example  the sensing domain   a   top  is decomposed into a grid of cells   a   bottom   recursive esip jointly optimizes
over cell paths   b   top  and allocations of experiments in the cells   b   bottom   within the cells  locations are connected
to cell center  recursive esip concatenates paths between cell and within cell paths   c   top  and finally heuristics are
applied in emip to smooth the path   c   bottom  
 discussed in section    seeks to reduce the high branching factor  i e  the number of sum nodes
in the search tree  by clustering the sensing locations and then running the recursive greedy over
these clusters instead of actual sensing locations  branch and bound  discussed in section    seeks
to avoid unnecessary recursion by maintaining a lower and an upper bound on the possible reward
from a subtree in the search tree and pruning the tree accordingly  these two approaches  together
with sequential allocation  discussed in section    provide an efficient algorithm for multi robot
informative path planning 

   spatial decomposition  approximating mipp as sd mipp
in this section  we explain in detail the process of spatial decomposition and the corresponding improvements in running time achieved through this process  our approach assumes that the traveling
cost between arbitrary locations is given by their euclidean distance 
an intuitive approach for improving the running time is to spatially decompose the sensing
region into smaller sub regions  each containing a cluster of sensing locations  we can thus think
about planning informative paths as deciding which sub regions to explore  and then deciding which
locations to sense within these sub regions  the idea of exploring the sub regions motivates the
decomposition of the sensing domain into smaller regions  cells   we can then run the recursivegreedy algorithm on these cells instead of the actual sensing locations  since the size of each cellular
region is small  traveling cost within each cell can be ignored    once we ignore the traveling cost
within the cells  sensing locations inside the selected cells can be chosen using the greedysubset
approach  as proposed by krause et al          taking advantage of its strong approximation guar   there may be robotic platforms where non holonomic motion constraints will make small motions much more challenging and thus traveling cost for smaller distances within a cell may become non negligible  for such systems 
with large traveling cost for smaller motions  some system specific constraints may be possible to account for while
performing cellular decomposition or the greedy algorithm may be constrained to not select locations that are too
close  

   

fis ingh   k rause   g uestrin   k aiser

antee in an unconstrained setting as discussed in section    fig    presents an illustration of our
approach and is explained as follows 
   we decompose the sensing region  containing finitely many discrete sensing locations  c f  
e    c    c            cn    c f   fig   a 
fig   a  top   into a collection of non overlapping cells v
bottom   the distance between two cells is defined as the distance between the centroids
of these cells  each cell ci contains a set of locations vi  v  representing sensing locations  such that the coordinates of these locations  in a euclidean metric space  lie within the
boundary of the containing cell 
   we approximate the original mipp problem with the spatially decomposed mipp problem  or
e in sd mipp  we jointly optimize over cell paths in v
e  c f   fig   b 
sd mipp problem on v 
top  using the recursive greedy algorithm  and over the allocation of observations within the
cells visited by the paths using the greedysubset algorithm  thus  when allocating measurements to a cell  we ignore the traveling cost within the cell  c f   fig   b  bottom   since
the cells are not very large  this simplification only leads to a small additional cost when the
sd mipp solution is transformed back to the original mipp problem 
   we transfer the  approximate  sd mipp solution  consisting of a cell path and an allocation
of observations to cells  c f   fig   c  top   back to the original mipp problem  we then smooth
the path  c f   fig   c  bottom  using heuristics  e g  the tour opt heuristics as discussed by
lin        
dual optimization of cell paths and budget allocation for observations within each visited cell
motivated splitting the available budget be into a budget bt for traveling between the cells and a budget be for making experiments at sensing locations within the visited cells  such a split can be easily
incorporated in recursive greedy algorithm as well but was not required as the paths in recursivegreedy were optimized over observation locations and not cells containing these locations  formally 
the sd mipp problem is the following  we want to find a path pc    cs   ci            cil   ct   
for each robot i with starting cell cs containing the starting node s and finishing cell ct containing
the finishing node t  with a travel cost of at most bt   this travel budget is measured in terms of
distances between centers of visited cells  and the cost of traveling within the cells is defined as   
in addition  for each visited cell cij in pc   we want to select a set of sensing locations aij   such that
the total experimental cost  for making observations within the visited cells  is upper bounded by
be   i e  c ai       ail    be   and that the information i ai       ail   is as large as possible 
the optimal sd mipp solution uses the optimal split of the budget be into bt and be   to simplify
the presentation  we rescale the costs such that the cells form a uniform grid of quadratic cells with
width l  and assume that the sensing cost cexp is constant over all locations  these assumptions
can easily be relaxed  but they allow us to relate the path costs to the number of cells traversed  to
simplify the discussion 
the following lemma states that there exists an sd mipp version  pc   of the mipp optimal
path  p     with  almost  the same cost  and the same information 
lemma    let p     s   v    v            vl   t  be an optimal s t path solution to mipp  constrained
by budget b  then there exists a corresponding sd mipp path pc    cs   ci            cil   ct   

traversing through locations ai       ail   with budget be of at most    b    l collecting the
same information 

   

fie fficient i nformative s ensing using m ultiple robots

algorithm  emip
e k  starting   finishing locations s            sk   t            tk
input  b 
output  a collection of informative paths p            pk
  begin
 
perform spatial decomposition into cells 
 
find starting and ending cells csi and cti  
 
r   
   path planning for each robot
 
for i     to k do
   trying different combination of traveling and
experimental budget
e do
for iter     to blog  bc
 
iter
e
 
be  b     
 
 
piter
recursive esip  csi   cti  be  r iter  
 
  
smooth piter
using tour opt heuristics 
    
  
pi  argmaxiter i piter
  
r  r  pi  
  
return p            pk  
   end
algorithm    emip algorithm for informative multi robot path planning  procedure from line   to line   
 

effectively implements esip algorithm  esip is then repeated  line    using sequential allocation described in
section    line    to get paths for each robot i 

we now present an algorithm for finding an approximately optimal solution to sd mipp  and
then we show that this solution 
gives us an approximate solution to the original mipp problem  with
just slightly increased cost of    b    l  for ensuring that the optimal solution for mipp exists in
the corresponding sd mipp setting 
    algorithm for sd mipp
e and then smooths out the paths over the
our emip algorithm solves the sd mipp problem on v
selected observation locations to provide a solution to mipp  let us first clarify the algorithmic
nomenclature specifically 
 recursive esip  implements an approach similar to recursive greedy for selecting a path over
e and greedily selects the observation locations within each visited cell using greedysubset 
v
 esip  iterates through different values of traveling budget by calling recursive esip with corresponding values of input be and i and smoothing the output path from recursive esip using
tour opt heuristics 
 emip  effectively implements sequential allocation with esip as the single robot path planning algorithm
the complete algorithm works as follows  an outer loop  line   in algorithm    implements
the sequential allocation algorithm for performing path planning for multiple robots  the procedure
   

fis ingh   k rause   g uestrin   k aiser

inside the outer loop  line   to line    in algorithm    implements the esip algorithm  this procedure iterates through different combination of traveling and experimental budget  allocating bt
    iter   out of the total budget be for traveling between the cells  and be    be  bt   for making experiments within the visited cells  stepping through bt in powers of   results in faster performance
 log  be instead of be iterations   if we increase the input budget be by a factor of    the exponential
increase in traveling budget is guaranteed to try traveling budget  bt     iter  btapp   where btapp
is the traveling budget for the best approximation path  since the overall budget be is increased by a
factor of    the remaining experimental budget is also guaranteed to be more than the experimental
budget corresponding to the best approximation path  therefore  exponential increase in traveling
budget will only increase the required budget be by at most a factor of    the esip procedure then
calls recursive esip  explained in algorithm     selecting the cells to visit  and greedily allocating
observations in the visited cells  finally  the esip procedure calls tour opt heuristics to smooth the
output path from recursive esip 
the recursive esip procedure takes as input a starting cell cs   a finishing cell ct   an experimental budget be   a residual r indicating the locations visited thus far  initially passed empty from
emip   and a maximum recursion depth  iter  initially passed log  bt from emip   we then 
   iterate through all possible choices of middle cells cm  such that there are  almost  equal
fe  of the available experimental
number of cells on either side of cm   and budget splits b
budget be   to spend for making experiments on the subpaths from cs to cm and cm to ct
fe can either be linearly  more accurate  or exponentially
 c f   fig   b   the budget splits b
 faster  spaced  as described below 
   recursively find a subpath p  from cs to cm   constrained by budget b     leaving the remaining
budget  be  b     for the other subpath p    reducing recursion depth  iter  by    for each
of the subpaths p  and p    ensures that equal number of cells are visited on either side cm  
the lowest level of recursion depth   signifies the cell selected for the corresponding path 
at the lowest recursion level  we then use the greedysubset algorithm  c f   section    to
select the sensing locations based on the residual information function ir and constrained by
budget b     as an illustration  the black locations in the middle cell cm in fig   b bottom 
are selected by the greedysubset algorithm with budget b       such that they provide the
maximum improvement in mutual information 
   we then commit to the locations selected in p    and recursively find a subpath p  from
cm to ct   with experimental budget be  b     committing to the locations selected in p 
requires that we greedily select the sensing locations at lowest recursion level based on the
residual information function irp   
   finally  we concatenate the locations obtained in p  and p  to output the best path from the
algorithm  c f   fig   c  top  

    linear vs  exponential budget splits
step   of the recursive esip procedure  as explained in section      considers different budget splits
fe to the left and right subpaths  similar to the recursive greedy algorithm  one can choose
b   b
fe                        be    be   to be linearly spaced  since the branching factor is proportional to
b
the number of considered splits  linear budget splits leads to a large amount of computation effort 
   

fie fficient i nformative s ensing using m ultiple robots

 

 
 
 
 
 
 

 
 

  
  
  
  
  
  

algorithm  recursive esip
input  cs   ct   be   r  iter
output  an informative path p from cs to ct
begin
if  d cs   ct      iter l  then return infeasible 
   greedy node selection within starting and finishing cell
p  greedysubsetbe  r  vi   vi  cs  ct   
if  iter      then return p 
reward  ir  p  
   trying each cell as middle cell
foreach cm  c do
   trying each possible budget split
fe do
for b    b
   planning subpath on one side of the middle cell
p   recursive esip  cs   cm   b     r  iter     
   planning subpath on other side of the middle cell
while committing to nodes selected in first subpath
p   recursive esip  cm   ct   be  b     r  p    iter     
if  ir  p   p      reward  then
p  p   p   
reward  ir  p  
return p 
end
algorithm    recursive esip procedure for path planning 

fe                               log  be     be   be 
an alternative is to consider only exponential splits  b
 
 
 
    be    be                in this case  the branching factor is only logarithmic in the experimental
budget  even though we are not guaranteed to find the same solutions as with linear budget splits 
we can both theoretically  as given by lemmas   and    and empirically  as illustrated in fig    c
and   d  show that the performance only gets slightly worse in this case  compared to a significant
improvement in running time  in addition to these two ways of splitting the budget  we also confe                               log  be     which further
sidered one sided exponential budget splits  i e  b
reduces the branching factor by a factor of   compared to the exponential splits defined above  although we do not provide theoretical guarantees for this third possibility  we experimentally found
it to perform very well  c f   section    
    algorithmic guarantees
our algorithm is greedy in two ways 
 at recursion depth    the sensing locations are selected greedily based on the mutual information criterion 
 before exploring the subpath p    recursive esip procedure commits to the locations selected
in subpath p   
   

fis ingh   k rause   g uestrin   k aiser

due to the these greedy steps  recursive esip is an approximation algorithm and does not necessarily find an optimal solution  the following lemma  however  guarantees a performance bound
for the path output by the esip procedure 
lemma    let pc    cs   c            ck   ct   be an optimal solution for single robot instance
e where an optimal set of locations are selected within each
of sd mipp  constrained by budget b 
b be the solution returned for esip  then i p 
b     e i p    
visited cell cj   let p
c
  log k
 

    solving the mipp problem
now  we need to transfer the approximately optimal solution obtained for sd mipp back to mipp 
a path over cells  with observation locations selected greedily within each visited cell  is transformed into a path over observation locations by connecting all locations selected in cell cij to the
cells center   as indicated in fig   b bottom   then connecting all selected centers to a path  fig   c
top   and finally expanding the resulting tree into a tour by traversing the tree twice  by traversing
each edge of the tree once in each direction  a set of nodes connected by a tree can be converted
into a set of nodes connected by a path   this traversal results in a tour which is at most twice as
long as the shortest tour connecting the selected vertices   of course  an even better solution can be
obtained by applying an improved approximation algorithm for tsp  such as the algorithm proposed
by christofides         the following theorem completes the analysis of our algorithm 
theorem    let p  be the optimal solution for the single robot instance of the mipp problem with
b achieving an information
budget constraint b  then  our esip algorithm will find a solution p


   e
    whose cost is no more than      b    l      l     in
b 
value of at least i p 
i p
  log  n
cexp


fe and no more than      b    l      l    n log     in the
the case of linear budget split for b
cexp

fe  
case of exponential budget split for b
the performance guarantee is w r t  the number of cells n instead of the number m of sensing
locations  as was the case in the work by chekuri and pal         however  the input budget
constraint is violated by an amount based on the size of cells during the spatial decomposition  this
violation in input budget constraint leads to a tradeoff between computation effort and additional
cost incurred that can be tuned based on specific application requirements  if the size of the cell is
small  in the limit reducing each cell to each observation location   the number of cells will be large
and will result in higher computation time with reduced additional cost  on the other hand  if the
size of the cell is large  the computation time will be small and the algorithm needs to pay higher
additional traveling cost 
running time analysis of esip is straightforward  the algorithm calls the routine recursive esip
log  b times  if ti is the time to evaluate the mutual information i  then the time for computing
greedy subset tgs  line    algorithm    is o nc  ti    where nc is the maximum number of
locations per cell  at each recursion step we try all the cells that can be reached with the available traveling budget  line    algorithm     for the possible experimental budget split  we try all
fe among the two subpaths p  and p   line   
 linearly or exponentially spaced  splits of be  b
e the following proposition states the
algorithm     the recursion depth would be log   min n  b   
running time for esip 

   

fie fficient i nformative s ensing using m ultiple robots

proposition    the worst case running
 time of esip for linearly spaced splits of the experimental
budget is o tgs log  b n b log  n   while for the exponentially spaced splits of the experimental
budget it is o tgs log  b  n log  b log  n
comparing this running time to the recursive greedy algorithm  o  m b o log  m       we note
a reduction from b to log  b in the base  and log of the number of locations  log  m   to log of the
number of cells  log  n   in the exponent  these two improvements turn the impractical recursivegreedy approach into a much more viable algorithm 
varying the number of cells  and correspondingly the size of each cell  results in a trade off
between the computation effort and the traveling cost within the cell that is ignored by the esip
algorithm  proposition   states that the computation effort is directly proportional to the number
of cells n  therefore as we increase the number of cells  corresponding computation effort for
the esip algorithm will also increase  on the other hand  reducing the number of cells will result
in increasing the size of each of the cell  since esip algorithm ignores the traveling cost within
the cell  larger cell size will imply larger traveling cost ignored by the esip algorithm and hence
larger overshoot in the cost of the resultant output path over the input budget b  lemma   states the
corresponding additional cost incurred by the output path calculated using esip algorithm in terms
of the cell size l  based on the specific application requirements  one can decide the appropriate number of cells and fine tune the trade off between computation effort and additional path cost
incurred  fig    f shows that the corresponding collected reward did not vary significantly as we
varied the number of cells for the application of observing temperature in a lake environment 

   branch and bound
the spatial decomposition technique effectively enables a trade off between running time complexity and achieved approximation guarantee  however  the esip algorithm still has to solve a
super polynomial  albeit sub exponential  search problem  in the following  we describe several
branch and bound techniques which allow further reduction in the computation effort making our
approach tractable for real world sensing experiments 
    problem representation
the specific structure of the search space representation motivated many of the proposed branch and
bound approaches  similarly to the recursive structure of the recursive greedy algorithm  discussed
in section     the recursive esip problem structure can also be represented as a sum max tree  as
shown in fig   a  a small difference exists in the selection of observation locations along the
solution path  in the case of recursive greedy  each of the sum nodes traversed in the selected
path represents a physical observation location  however  in the case of recursive esip  each sum
node in the selected path represents a cell in the corresponding traversed path  the observation
locations at the sum node are selected greedily  within the corresponding cell  based on the available
experimental budget  using the sum max tree problem structure  we now explain the proposed
branch and bound approaches to prune parts of the tree that will not provide any further improvement
over the currently known best solution path  all of the proposed branch and bound techniques are
outlined in the recursive esip procedure presented in algorithm   

   

fis ingh   k rause   g uestrin   k aiser

 

algorithm  recursive esip with branch and bound
input  cs   ct   be   r  iter  rewardlb  
output  an informative path p from cs to ct

 
 
 
 
 
 
 
 
  

begin
if  d cs   ct      iter l  then
return infeasible
p  greedysubsetbe  r  vi   vi  cs  ct   
if  iter      then
return p
f iltercells  ci ci s t  d cs   ci     iter l   and d ci   ct     iter l    
foreach cm  f iltercells do
fe do
for b    b

  

   calculating upper bound using greedysubset
u bp   calculateu b cs   cm   b     iter     r  
u bp   calculateu b cs   cm   be  b     iter     r  

  

if   u bp    u bp        rewardlb  then

  

  

   calculating lower bound for p 
heurp   heuristicop cs   cm   b     r  iter     
lbp   max ir  heurp     rewardlb  u bp    

  

   recursive search for p 
p   recursive esip  cs   cm   b     r  iter     lbp      

  

  

   calculating lower bound for p 
heurp   heuristicop cm   ct   be  b     r  p    iter     
lbp   max irp   heurp     rewardlb  ir  p     

  

   recursive search for p 
p   recursive esip  cm   ct   be  b     r  p    iter     lbp      

  

if  iresid  p   p      rewardlb  then
p  p   p   
rewardlb  iresid  p   p    

  
  
  
  
  

return p 
end

algorithm    recursive esip procedure with branch and bound approaches for efficient path planning  each
procedure corresponds to a max node in the search space with input rewardlb representing the calculated lower
bound  a sum node in the search space effectively combines the recursive calls to each of the subpaths  implemented in line    and line      since recursion reduces the traveling budget   iter l  by half  the initial pruning in
line   removes the cells that can not be reached in the next recursion step  line    and line    calculate the lower
bound for subpaths on either side of the selected middle cell  input  represents the scaling factor for one of the
b     e i p   
sub approximation heuristics  approximation guarantee for the output path p is given as i p 
  log  n

where i is the submodular reward function and p is the optimal path 

   

fie fficient i nformative s ensing using m ultiple robots

 a  sum max tree

 b  pruning of sum nodes

 c  tighter lower bounds

figure    illustration of our branch   bound approach   a  shows the sum max tree representing the search space  each
max node selects a middle cell and a budget allocation  and each sum node combines two subpaths on either side of the
selected middle cell   b  shows how upper bound at a sum node  e g  a value of    at sum     when smaller than the
lower bound of the parent max node  e g  a value of    for max    can be used to prune branches in the search tree   c 
shows how lower bound at a max nodes is tightened  e g  a value of   at max  is improved to   using upper bound of   
at sibling m axn  and lower bound of    at grandparent max    to allow further pruning which otherwise may not have
been possible  e g  pruning of sum  with upper bound value of    

    efficient search of the problem space
in a naive implementation of recursive esip  the entire recursion tree would eventually be traversed 
however  many of the considered subpaths may be highly suboptimal  several heuristics have been
proposed in the past for similar path planning problem with empirical efficiency claims  but without
any approximation guarantee  we use one such heuristic  c f   chao et al         hereafter referred
to as heuristicop  to calculate a solution path satisfying the budget constraints  while trying to maximize the collected reward  since such a path can be efficiently calculated with small computation
effort  we use this path as an initial known solution  the total reward collected in this path is used as
an input lower bound  input variable rewardlb in algorithm    for the root max node  since the
computation effort associated with heuristicop is small  it is also used at the rest of the max nodes
in the search tree to calculate the lower bound for these nodes  discussed in detail in section        
for each of the child sum nodes  an upper bound for the collected reward is calculated by exploiting the submodularity of the reward function  procedure calculateu b called in line    and   
   

fis ingh   k rause   g uestrin   k aiser

 

algorithm calculateub

input  cs   ct   be   iter  r
output  an upper bound ub on information gain
  begin
   selecting set of reachable cells
 
possiblecells  ci ci s t  d cs   ci     d ci   ct     iter l  
   greedy node selection within reachable cells
 
p  greedysubsetbe  r  vi   vi  possiblecells  
 
ub  iresid  p  
 
return u b 
  end
algorithm    procedure for calculating upper bound at max nodes  upper bound of child max nodes is added
to obtain upper bound at parent sum node 

in algorithm   and explained in detail in algorithm     we then only need to process the sum node
children with upper bounds greater than the current best solution  line    in algorithm     the
current best solution for the parent max node is updated when the collected reward from any of the
child sum nodes is greater than the previously known best solution reward  line    in algorithm    
fig   b presents a graphical illustration of this concept  after completely exploring branch
sum    the current best solution of value    is updated as a lower bound for max    a smaller lower
bound      at sum  results in pruning of sub branch rooted at sum    however  nodes such as sum 
with upper bound      higher than the current best solution       need to be explored further as they
can potentially provide a solution path with a better reward than the current best solution 
      u pper b ound on the sum n odes
algorithm   presents the calculateub procedure for obtaining an upper bound on the collected
reward at each max node and is used in recursive esip  line        in algorithm    for pruning the
search space  the upper bound at a sum node is calculated by adding the upper bound of each of the
child max nodes  we calculate the upper bounds by relaxing the path constraints  and then finding
an optimal set of reachable locations for each path  p  and p     since this problem itself is nphard  we exploit the submodularity of reward function and approximate it using the greedysubset
algorithm  fig    illustrates an example of calculating the upper bound  we first calculate the set
of reachable locations w r t  the remaining traveling budget  these locations are contained within
the cells ci reachable from cells cs and ct  line   in algorithm     such a boundary for reachable
locations is illustrated by an ellipse in fig    
then  we run the greedysubset algorithm to greedily select best possible be locations from all
the possible reachable locations  line   of algorithm     as an example  vi and vj are selected
using greedysubset in fig     since greedysubset guarantees a constant factor     e  approximation  nemhauser et al          multiplying the resulting information value by       e   provides
an upper bound on the information achievable by the path  and hence the corresponding max child
node   therefore  in fig    the reward collected from locations vi  mi vi    and vj  mi vj    when
multiplied by the factor       e   provides upper bound for the collected reward  however  since
the path cost constraint are relaxed  the total cost of observing vi and vj  dsi   dij   djt   may be

   

fie fficient i nformative s ensing using m ultiple robots

figure    illustration of calculating upper bound using greedysubset 
more than the available budget b  in fig   c  for example  we use calculateub to get upper bounds
   for max  and    for max    resulting in an upper bound of              for sum     
      l ower b ound on the max n odes  
effective pruning of subtree rooted at sum nodes would require calculating the lower bounds for the
parent max node efficiently  one way to calculate such lower bounds is by exploring one branch
completely  as explained in section       this procedure will be computationally expensive  instead  we implement two other ways for acquiring such lower bounds faster  using heuristicop  
 as explained above for obtaining the initial best solution   and based on the current best solution of
the grandparent max node  we then use the larger of two different lower bounds 
fig   c illustrates the graphical presentation of the procedure for calculating the lower bounds
using the current best solution of the grandparent max node  we call this procedure altlb  we calculate an upper bound  exploiting the submodularity  of    for max  node  for the node max    since
the grandparent node max  has a lower bound of     the subtree rooted at max  has to provide a
reward of at least             to be explored further  the lower bound of value   calculated using
altlb is tighter than the lower bound provided by the heuristic      and enabled pruning of branch
sum   with upper bound    
lines    and    in algorithm   illustrate the altlb procedure  while using altlb  the lower
bound for subpath p   in line      is calculated using the upper bound of subpath p    on the other
hand  while calculating the lower bound using altlb for subpath p   in line      the exact reward
from p   ir  p     is used instead of the upper bound  since the actual reward is always tighter than
the calculated upper bound  the lower bound calculated for subpath p   using altlb  will be tighter
than the lower bound calculated for subpath p    this motivates exploring the subpath with higher
experimental budget first such that the upper bound for the unexplored subpath  with lower experimental budget  is tighter making the lower bound for the first subpath tighter    the heuristic for
   we can even compute tighter online bounds for maximizing monotonic submodular functions  as discussed
by nemhauser et al         
   heuristicop was only proposed for modular functions but we found it to provide good solution paths even in the
submodular setting 
   we note that with higher experimental budget  greedysubset  used to calculate the upper bound  can potentially
select more locations that are far apart  since the path cost constraint are ignored   when path cost constraint is
incorporated  such locations will become infeasible and will make the upper bound loose 

   

fis ingh   k rause   g uestrin   k aiser

exploring the subpath with higher experimental budget first was also exploited to further improve
the computation effort 
maintaining a lower bound at each node in the search tree also makes our approach anytime 
i e  the search can be terminated at any point even before it is completed  the current best solution
from the graph already searched will be available after this early termination  early termination is
particularly advantageous in scenarios when it is required to obtain the best possible path traversed
by the robot with a hard upper bound on the available time to calculate such a path 
      n ode o rdering
the illustration in fig   b demonstrates that a better currently known solution will likely help in
increased pruning of the search tree  in order to improve the current best solution faster  at each
max node we explore the sum nodes in the decreasing order of their upper bounds  the intuitive
idea is that a higher upper bound is a likely indicator for higher reward value  thus the upper bound
in line    and    in algorithm   can be calculated separately and the rest of the computation  in
loops implemented in line   and    in algorithm    can then be executed in decreasing order of
upper bound  such an approach is similar to node ordering that is employed to improve the pruning
efficiency of depth first branch and bound  dfbnb   zhang   korf        
      s ub   approximation
upper and lower bounds derived as explained above can potentially be loose  we can address this
issue  and further trade off collected information with improved execution time  by introducing
several sub approximation heuristics  as a first heuristic  once the node ordering is performed  we
explore only the top k sum nodes  this heuristic  termed as sub approximation  ibaraki et al  
       is found to be effective in practice 
as a second heuristic  instead of comparing the lower bound of a parent max node directly with
the upper bound from the child sum nodes  when deciding which subproblems to prune   we scale
up the lower bound by a factor of       line    of algorithm     this scaling often allows us
to prune many branches that would not have been pruned otherwise  unfortunately  this optimistic
pruning can also potentially cause us to prune branches that should not have been pruned  and decrease the information collected by the algorithm  in practice  for sufficiently small  values  this
procedure can speed up the algorithm significantly  without much effect on the quality of the solution  this performance comparison for both computation effort and collected reward using several
real world sensing datasets is discussed in section     

   experimental results
we performed several experiments both in field as well as in simulation  using real world sensing
datasets  to demonstrate the usefulness of our proposed algorithm for several diverse environmental
sensing applications  in field experiments were performed using the networked infomechanical
system  nims   jordan et al          a tethered robotic system  real world sensing datasets used
for performing scaling and multi robot experiments in simulation were collected using either a
network of static sensors or a robotic boat 

   

fie fficient i nformative s ensing using m ultiple robots

 a  schematic representation of the system

 b  image captured while performing path planning

figure    aquatic based nims  nims aq is a platform in the nims family used for performing path planning in the
lake environment 

    in field experiments
several experiments were performed in field to demonstrate the applicability of modeling a phenomenon as a gaussian process and using emip to perform path planning for diverse aquatic sensing applications  these include a river monitoring application with the objective of studying salt
concentration  and lake monitoring for several applications of interest to limnologists  in each of
these applications  nims was used to monitor a cross section  two dimensional vertical plane in an
environment  in the aquatic environment  the phenomenon of interest is then modeled as a gaussian process and we use the mutual information criterion as submodular reward function  quantifying the informativeness of observation locations  the learned gaussian process model and mutual
information objective are then provided as input to emip and the subset of locations as output by the
algorithm are subsequently observed  again using nims as the robotic platform  in order to quantify
the efficiency of our approach  we predict the phenomenon at unobserved locations and compute the
root mean square  rms  error between the predicted phenomenon and the ground truth  calculated
by observing at all the uniformly spaced locations before and after the path planning experiment  
      robotic p latform  
the aquatic networked infomechanical systems platform  nims aq  is the latest in the family of
nims systems  jordan et al         pon et al         borgstrom et al          developed specifically
for aquatic applications and used during the lake deployment  the family of nims systems had
been successfully deployed for several terrestrial and aquatic sensing applications  in      alone 
nims was used in several successful campaigns in forests  la selva  costa rica and james reserve 
california   rivers  san joaquin  california and medea creek  california   lake  lake fulmor  california   and mountain ecosystems  white mountains  california  
fig   a displays the schematic view of the system  the basic infrastructure of the system includes a rigid sensing tower supported by two hobie floatcat pontoons  in a catamaran configuration  an actuation module resides on top of the sensing tower that drives the horizontal cable
and vertical payload cable  horizontal and vertical motion respectively  across a cross section of the
aquatic environment  power for the system is provided by two deep cycle marine batteries housed
on top of the pontoons  the horizontal drive cable is kept center aligned to the craft by using guide
   developed by hobie cat company 

   

fis ingh   k rause   g uestrin   k aiser

 a  observed distribution during a raster scan on august   

 b  predicted distribution after observing at locations
as output by emip

figure    distribution of electrical conductivity  microsiemens per centimeter  as observed at the confluence of san
joaquin river  california  points represent observation locations during the corresponding experiment 

pulleys that can be repositioned based on the type of aquatic environment in which nims aq is
sampling  flowing or still water conditions   fig   b shows nims aq performing path planning in
the lake environment 
      s ensing in a r iver e nvironment
the first in field application of our approach was executed at the confluence of two distinct rivers 
merced river and san joaquin river  in california from august             hereafter referred to as
san joaquin deployment   fig   a displays an aerial view of the san joaquin deployment site  the
scientific objective at the confluence zone is to characterize the transport and mixing phenomena
at the confluence of two distinct rivers  merced river  relatively low salinity  and the agricultural
drainage impacted san joaquin river  relatively high salinity  by observing several parameters that
may indicate the mixing behavior of the two streams  such river observations are useful for answering important questions pertaining to the spatio temporal variability of velocity and water quality
dynamics resulting from pollutant inputs  hydrodynamic mixing regimes  and biogeochemical cycling processes that are themselves distributed in time and space  understanding such mixing patterns are important for policy issues related to water distribution from river ecosystems  brekke
et al         
the total width of the observed cross section was    meters with the maximum depth of     meters  closer to the middle of the cross section   several experiments had been executed in the past
to characterize the mixing phenomena at this confluence site  singh et al       a  harmon et al  
       primary experimental design during these campaigns comprised of making observations at
uniformly spaced locations in a two dimensional cross section  hereafter referred to as raster scan 
and repeating these experiments several times to understand the spatial and temporal dynamics in
the environment  each of these experiments took several hours  thus restricting the experiments to
a very small number of cross sections  one or two  within the limited deployment time  however 
a detailed understanding of the confluence environment would require observing multiple crosssections  within the limited time frame  this necessitates the use of an adaptive sampling approach
that can model the observed phenomenon  make observations at a small number of locations based
on that model and then effectively predict the phenomenon at the unobserved locations 

   

fie fficient i nformative s ensing using m ultiple robots

mixing patterns were characterized at the confluence by observing electrical conductivity that
indicated the amount of salt concentration in the water  fig   a displays typical distribution at a
cross section in the confluence zone with x axis representing the distance along the cross section
and y axis representing the depth  low concentration of electrical conductivity towards the lower
x values is contributed by clear water from the merced river with the other end displaying high
concentration of salts carried by the san joaquin river  we first use the data from one such raster
scan performed on the first day of the deployment  displaying similar characteristics  to learn a
non stationary gaussian process model  using a covariance function parameterization as described
by krause and guestrin         the parameters are chosen by maximizing the marginal likelihood  rasmussen   williams         this non stationary process was learned by dividing the
complete region into smaller sub regions and combining the locally stationary gps from each of
these sub regions 
a total of     locations were observed during the raster scan and used for learning the gp
model  a set of    locations was selected out of the total of           using the emip algorithm
with the starting and finishing location on either end of the cross section as displayed in fig   a 
this set of    observation locations was then observed over the next few days  with the required
dwelling time  of    seconds for observing electrical conductivity  large reduction in number of observation locations resulted in a significant reduction in experimental time as well      compared
to the raster scan  
since the environmental phenomena exhibit spatial and temporal dynamics  we performed raster
scans before and after our experiment to get a measure of ground truth for electrical conductivity 
the predicted electrical conductivity  as computed after making the observations at the subset of   
locations selected using emip  is then compared with this ground truth  fig   b displays the predicted distribution of specific conductivity with points representing the observed locations as output
by emip  fig   a displays the distribution as observed using raster scan performed just before the
path planning experiment 
the rms error between the predicted distribution and the raster scan performed before the path
planning experiment was       s cm  on the other hand  the rms error between the predicted
distribution and the raster scan performed after the path planning experiment was       s cm 
the rms error between the two raster scans performed before and after the path planning experiment  indicating the temporal variation in the environment  was       s cm  low rms error for
our predicted distribution  when compared with the rms error between the raster scans performed
before and after the path planning experiment clearly indicates the effectiveness of our approach
for modeling and path planning in such environments  path planning experiments performed during
other days also demonstrated similar prediction accuracy  while maintaining the significant reduction in total experimental time 
      s ensing in a l ake e nvironment
the second set of in field experiments was executed at a lake on the campus of university of california  merced from august              hereafter referred to as lake deployment   this site was
chosen based on its convenience for being accessibly located on the university campus and its similarity to several other lakes that are of interest for diverse limnology applications  including the
study for growth patterns of algal bloom  nuisance algal bloom can impair the beneficial use of
   time for which the sensor has to be kept static to get an accurate measurement 

   

fis ingh   k rause   g uestrin   k aiser

 a  observed distribution during a raster scan on august   

 b  predicted distribution after observing at locations
as output by emip

figure     distribution of temperature  o c  at the little on uc merced campus  points represent observation locations
during the corresponding experiment 

aquatic systems  by blocking sunlight to underwater vegetation  consuming oxygen in the water 
and producing surface scum and odors  the growth pattern of algal bloom in a lake is dependent
on the spatial and temporal dynamics of temperature  dissolved nutrients and light occurring in different layers of its environment  thus  temperature is one of the critical parameter to observe in
the lake environment as it controls several physical processes occurring in such low flow aquatic
environments  in contrast to the san joaquin river environment where there is considerable water
flow  
the total width of the observed cross section was    meters  with a maximum depth of up to
     meters  similarly to the san joaquin deployment  we first learned the non stationary gp model
using the temperature data from one of the raster scans performed on august     fig    a displays
a typical surface distribution of temperature as observed during the raster scan at the lake  a total of
   locations were observed during the raster scan  a set of    locations was selected out of these   
locations       using the emip algorithm with the starting and ending location on either end of the
cross section as displayed in fig    a  this set of    observation locations was then observed the
next day using nims as the robotic platform  similar to san joaquin deployment  we performed
raster scans before and after our experiment to get a measure of ground truth for the temperature
distribution  the predicted temperature  as computed after making the observations at the subset of
locations selected using emip  is then compared with this ground truth  with a smaller dwelling time
of    seconds  required for measuring temperature  and having to cover the entire length of the lake
cross section  the reduction in experimental time was      when compared with the raster scan  
fig    b displays the predicted distribution of temperature with points representing the observed
locations as output by emip  fig    a displays the distribution as observed using raster scan performed after the path planning experiment  the rms error between the predicted distribution and
the raster scan performed after the path planning experiment was      o c  on the other hand  the
rms error between the predicted distribution and the raster scan performed before the path planning
experiment was      o c  the rms error between the two raster scans performed before and after
the path planning experiment  indicating the temporal variation in the environment  was      o c 
the low rms error between the predicted distribution and the raster scans  in comparison with the
temporal variation exhibited by the lake environment  indicates the effectiveness of our approach in
the low flow lake environment as well 
   

fie fficient i nformative s ensing using m ultiple robots

    experiments on sensing datasets
several experiments were performed in simulation using real world sensing datasets to analyze the
scaling of our algorithm for different approaches such as varying the experimental cost  exponential
increase in budget split  varying the size of the cells of the spatial decomposition and comparison of
several heuristics  among others  three different datasets  collected from real world sensing applications  were used for these experiments  the first dataset consists of measurements of the temperature
in lake fulmor  james reserve  hereafter referred to as lake temperature dataset   fig   b displays
the aerial view of lake fulmor  a robotic boat  part of networked aquatic microbial observing
system  namos   dhariwal et al          was used to collect the surface temperature data around
the lake  of width around    meters and length around     meters  as discussed earlier  understanding temperature distribution is of prime importance in limnology since it governs several physical
phenomena occurring in the lake environment  including the growth of algal bloom 
the average speed of the boat was approximately     m s  half of the total measurements     
different sensing locations  were used to learn a nonstationary gaussian process model by maximizing the marginal likelihood  rasmussen   williams         and the remaining measurements
were used for experimentation  we divided the lake into    cells  except during the experiments for
studying the effect of changing the size of the cell in spatial decomposition   with distance between
adjacent cell approximately    meters  based on the average speed  and motivated by a typical
measurement duration of roughly    seconds  we set the experiment cost to be      meters  except
during the experiment for understanding the effect of scaling the experimental cost  
as our second dataset  we used data from an existing deployment of    wireless sensor motes
to learn the amount of temperature variability at the intel research laboratory  berkeley  hereafter
referred to as berkeley temperature dataset   these sensing locations lie within a bounding region of
length    meters and width    meters  we divided the complete region into a uniform grid containing    equal sized cells  and determined the experimental cost to be   meters  approximate distance
to travel between adjacent cells   we learned a gp model as discussed by krause et al         
finally  we explored the performance of our algorithm on a precipitation dataset collected from
    regions of equal area  approximately    km apart  during the years            we followed the
preprocessing and model learning described in the work by krause et al          the large physical
spread of the sensing regions makes this dataset unconventional for a mobile robot path planning
application  to avoid this unrealistic scenario  we normalized the coordinates of the regions to lie
within a bounding region of length   meters and width   meters  while keeping the actual sensing
data observed at each location  we then divided the complete region into a uniform grid of    cells
with experimental cost as     meters  approximate traveling distance between adjacent cells  
for each of the plots comparing the performance of our algorithm  x axis represent the total
cost of the path including both the traveling cost between the selected locations and the sensing
cost at each selected location  translated into distance as discussed above   when comparing the
computation effort as a measure of performance  in seconds  y axis is drawn in logarithmic scale 
the computation effort is for running the code implemented in matlab on a     ghz dual processor
core with   gb ram  when comparing the collected reward as a measure of performance  y axis
represent the mutual information  submodular reward function  collected by making observations
at the selected locations 

   

fi 

  

  

recursive
greedy

 

  

collected reward

execution time  seconds 

s ingh   k rause   g uestrin   k aiser

 

  

 

  

emip

 

  

 

  
  

recursive
greedy

 

 

emip

 
  

  
               
cost of output path  meters 

  

   

   

   

   

cost of output path  meters 

 a  comparison of computation effort

 b  comparison of collected reward

figure     comparison of emip and recursive greedy on a subset of berkeley temperature dataset with    sensing

 

  

  

no subapproximation
subapprox     

no subapproximation
collected reward

execution time  seconds 

locations 

subapprox     

subapprox     
best possible   
subproblems

 

  
   

   

   

   

   

subapprox     

  

 

best possible   
subproblems
 
   

   

   

   

uniform density

   

   

   

cost of output path meters 

cost of output path meters 

 a  comparison of computation effort

 b  comparison of collected reward

figure     comparison of computation effort and collected reward for several sub approximation heuristics used to
improve the running time of emip on lake temperature dataset  significant improvement in execution time was observed 
particularly for longer paths  without significant reduction in collected reward 

      c omparison with r ecursive   greedy a lgorithm  
to compare the performance of our approach with the recursive greedy algorithm  as proposed by
chekuri et al   we selected a subset of    locations from the total of    locations from the berkeley
temperature dataset  a small subset of locations was selected since the running time of recursivegreedy is quasi polynomial and was very large for the complete dataset  fig    a and fig    b
display the comparison in the computation effort and collected reward on this smaller dataset for
the two algorithms  as is evident from the plots  our approach provides significant improvement in
running time  of several orders of magnitude at higher budget values  with  almost  the same collected reward  since the recursive greedy algorithm is essentially a search procedure with greedily
restricted search space  this result also indicates that an exhaustive search over all paths is intractable
for even a small real world sensing problem  the sudden jump in execution time of emip in fig    a
at budget       meters is due to an additional iteration step  c f   line   in algorithm    added due
to the increase in the input budget constraint  thereafter  additional increase in budget only results in increase in experimental budget  since the recursive esip computes efficiently for such a
small problem  additional increase in experimental budget does not increase the computation effort
significantly 

   

fie fficient i nformative s ensing using m ultiple robots

   

distance  meters 

   

lake boundary
starting
location

   
cells
   

emip path

   
  
 
 

possible observation
locations
  

   
   
   
distance  meters 

   

   

figure     illustration of a path selected using emip on lake temperature dataset 
      c omparison with u niform s ample s pacing  
we compared the performance of emip with a simple uniform sample spacing algorithm  referred
to as uniform density  for the case of uniform density  starting and finishing at given locations 
we greedily select two observation locations within each of the nearest cells and compute the corresponding path cost and path reward  uniform density algorithm will output the best possible path
amongst all possible simple uniform sample spacing algorithms due to greedy observation selection
within each cell  fig    b  compares the collected reward for uniform density with emip for the
lake temperature dataset  increased collected reward by emip  compared to uniform density  empirically justifies the complexity of emip  additionally  emip also provides a strong approximation
guarantee which is not possible for any uniform sample spacing algorithm  fig     illustrates a
path selected by emip for the lake temperature dataset  demonstrating that emip does not tend to
cause uniform sample spacing  for a few of the traversed cells  there was no location selected for
observation  while for others as many as three observation locations were selected from within the
cell 
      c omparison of s ub   approximation h euristics  
various sub approximation heuristics discussed in section   were compared empirically to analyze
their utility in improving the execution time and the corresponding reduction in collected reward 
if any  as is displayed in fig    a that compares these heuristics for computation effort  each of
these sub approximation heuristic provides improvement in the execution time over the scenario
when all branch and bound heuristics other than sub approximation heuristics were used  the most
improvement at higher values of input budget was observed when the lower bound is increased by
a factor of        or       fig    b displays the corresponding comparison of these heuristics
for collected reward  it was interesting to observe that none of the sub approximation approaches
resulted in considerable reduction in collected reward 

   

fi 

  

 

cost       

 

cost       
collected reward

execution time  seconds 

s ingh   k rause   g uestrin   k aiser

cost       

  

cost       

 

  

cost      
 

  
  

  
  
cost of output path  meters 

cost       
 
cost       
 

 

  

collected reward

linear variation
 

exponential variation
from both ends

 

  

  

exponential variation
from both ends

  

linear variation
  

 

exponential increase from  
 

  
   

exponential variation from  
   

   

   

   

 
   

   

   

   

   

   

   

cost of output path meters 

cost of output path meters 

 c  computation effort with variation in experimental
budget split using lake temperature dataset

 d  collected reward with variation in experimental budget split using lake temperature dataset

 

  

  

grid     cells
 

collected reward

execution time  seconds 

  
  
cost of output path  meters 

 b  collected reward with variation in sensing cost using
precipitation dataset

  

  

cost      

 
 
  

  

 a  computation effort with variation in sensing cost using precipitation dataset

execution time  seconds 

 

grid     cells

  

 

  

 

  

grid     cells

 

grid     cells

  

grid     cells

 

grid     cells

 

  

grid     cells
  

   

   

   

 
 

   

grid     cells
   

   

   

   

cost of output path meters 

cost of output path meters 

 e  computation effort with variation in grid size for
spatial decomposition using lake temperature dataset

 f  collected reward with variation in grid size for spatial decomposition using lake temperature dataset

figure     comparison of collected reward and computation effort with variation in several approaches used in emip 

   

fie fficient i nformative s ensing using m ultiple robots

      variation in s ensing c ost 
fig    a and fig    b compare the computation effort and collected reward as the sensing cost is
varied for the precipitation dataset  with the reduction in experimental cost  more locations were
observed for the same total input budget resulting in increased collected reward  however  for each
of the experiments  the computation effort was approximately the same  due to the diversity in
environmental applications  the sensing cost will depend on the sensors  settling time  and the scale
of dynamics occurring in the observed phenomena  this experiment indicates that emip can be used
over a diverse range of sensing costs  as per the demands of diverse environmental applications 
      variation in e xperimental b udget s plit 
as discussed in section    the strategy of exponentially increasing the experimental budget split
results in an increased additional path length required to guarantee the approximation factor for
the collected reward  we performed several experiments with the available datasets to analyze the
empirical performance of increasing the budget splits exponentially  fig    c and fig    d compares
the computation effort and collected reward for linear increase  one sided exponential variation
from   and two sided exponential variation from both   and budget b for the lake temperature
dataset  since a smaller number of budget splits are considered in recursive esip in the case of an
exponential increase  the computation effort will be smaller as compared to the linear increase in
the budget splits  interestingly  there was very small reduction in collected reward  for only a few
budget values  when the exponential increase was employed  hence  even though the theoretical
approximation guarantee with exponential increase in experimental budget is weaker  empirically
the collected reward for both the linear and exponential increase in budget splits was found to be
comparable over a wide range of input budgets 
      a nalysis of s patial d ecomposition  
as discussed in section    the conversion of an sd mipp solution  a cell path  into a solution for
mipp  a path over observation locations  will result in additional path length exceeding the input
budget b  this additional path length will depend on the size of the cell  or size of the grid covering
the complete spatial domain  in sd mipp problem and will result in trade off with the computation
effort  variation in grid size will result in corresponding variation in the traveling cost between the
neighboring cells  this will result in an opportunity to travel more cells for a denser grid with the
same input budget constraint  however  to keep the experimental cost constant across the varying
grid size  since the experiment cost only depends on observed phenomena and is independent of
the spatial decomposition   it was scaled accordingly  in proportion to the traveling cost between
the neighboring cells  fig    f compares the collected reward for varying grid sizes on the lake
temperature dataset  changing the grid size from    to    cells  it is interesting to observe that such
a change in grid size had  almost  negligible effect on the collected reward  on the other hand 
such increase in grid density resulted in a larger number of cells over which path planning is to be
performed thus leading to increased computation effort for the same input budget  the comparison
of the computation effort for the varying grid size is displayed in fig    e  note the drastic increase
in computation time as the grid discretization is made finer 

   

fi  

  

  robots

total rms error

total collected reward

s ingh   k rause   g uestrin   k aiser

  

  robots
  

  
  robots

  
  robots

  

  robot
 
   

   

   

   

   

 
   
   
   
   
   
   
average cost of output path per robot  meters 

   

average cost of output path per robot  meters 

 a  collected reward for same starting location

 b  rms error for same starting location
  

  

  robots

total rms error

total collected reward

  robot

  

  robots
  

single robot
  
 
   

   

   

   

 

  robots

  robots

 
   
   
   
   
   
average cost of output path per robot  meters 

   

average cost of output path per robot  meters 

 c  collected reward for different starting location

start  

  

  robot

 d  rms error for different starting location

boundary

cells

 

  

start  

  

start  

robot  
robot  

robot  

 e  paths selected using mipp

figure     analysis of experiments performed for multiple robots with different  optimized  starting location using the
lake temperature dataset 

      m ulti   robot e xperiments
we evaluated the performance of our emip multi robot algorithm in simulation using several sensing datasets  fig     displays the empirical analysis of several experiments using the lake temperature dataset  the first experiment was performed with each robot starting from the same starting
location  fig    a and fig    b display the collected reward and root mean square  rms  error
when the number of robots were varied from one to three  due to the sequential allocation ap 

   

fie fficient i nformative s ensing using m ultiple robots

proach  wherein we remove the locations that are already selected before selecting the locations for
the next robot  and information never hurts principle  collected reward increases as the number
of robots were increased and hence the corresponding root mean square error for prediction at the
unobserved locations gets reduced  however  the incremental change in performance from one to
two robots was larger than the incremental change from two to three robots  which is expected from
the submodularity  diminishing returns  property of mutual information 
fig    c and fig    d display the collected reward and rms error when a different starting location is chosen for each robot  in this scenario  a set of four starting locations is pre determined
with each location at one end of the lake  see for reference fig    e where three of the four starting
locations are marked   the starting location for each of the three robots was selected greedily based
on the collected information  with a different starting location selected on the opposite end of the
lake for the second robot  the incremental change in collected reward  and corresponding decrease
in root mean square error  as the number of robots was increased from one to two is much higher
than the corresponding change when the same starting location was chosen for the second robot
as well  however  similar to the scenario with same starting location  the incremental change as
the number of robots was increased from one to two is higher as compared to when the number
of robots was increased from two to three  due to submodularity of mutual information   fig    e
illustrates the selected paths for each of the three robots as selected using emip 

   related work
there is a large body of related work both in the theory of path planning and its applications  approximation algorithms have been proposed for several related problems  variants of path planning
have been studied in the field of operations research as the traveling salesman problem  tsp 
or the vehicle routing problem  vrp   in robotics  several path planning approaches have been
studied for applications such as simultaneous localization and mapping  slam  and search and
exploration  in sensor networks and geostatistics  a closely related work studies optimal placement
of static sensors modeling the phenomenon as gaussian processes  several adaptive sampling approaches have been studied to decide on the subset of locations to observe in order to understand the
phenomenon dynamics effectively  in addition  similar approaches are explored for planning paths
for mobile robots acting as data mules  collecting data sampled by the network of static sensors 
    operations research
an interesting special case of the mipp problem is given in the case where each node has a fixed
reward  and the goal is to find a path that maximizes the sum of these rewards  traveling salesman
problem with profits  tspp  feillet et al          such a sum of rewards is a modular  additive 
function  which is a special case of submodular functions  a subcategory of tspp is an optimization problem defined to maximize the collected reward while keeping the associated cost less than
some given budget b  this was studied as orienteering problem  op  or selective tsp  laporte  
martello         or maximum collection problem  kataoka   morito        in the literature  the
additivity assumption made in the orienteering problem is very unrealistic in our informative path
planning setting  as it assumes that the information provided by adjacent locations is independent 
whereas we would typically expect a strong amount of correlation  in fact  if the observations were
all independent  there would be no point in selecting observations for spatial prediction  in this

   

fis ingh   k rause   g uestrin   k aiser

paper  we hence study the more general orienteering problem with submodular reward functions 
proposed earlier as submodular orienteering problem  chekuri   pal        
      m ultiple   path e xtensions  
the extension of tspp to multiple paths was studied as vehicle routing problem with profits
 vrpp  in the literature  like tspp  several variants of vrpp have been previously considered 
the prize collecting vrp  pcvrp   tang   wang        is a class of vrpp where the objective is to determine a subset of all customers to visit so as to minimize the total distance traveled 
minimize the vehicles used and maximize the collected reward  the multi robot version of the op
 in the case of additive reward functions  was studied as the team orienteering problem by i ming
et al         and multiple tour maximum collection problem by butt and ryan        
      k nown a pproximations for the o rienteering p roblem  
the op is known to be np hard  golden et al          several versions of the op studied in the
literature can be classified into those for which the starting  and the finishing  location  root  is
pre specified or not  for the case of the unrooted op  when no starting location is specified   the approximation guarantees known for prize collecting tsp and k tsp can be easily extended  johnson
et al          there are several constant factor approximations known for the pc tsp and k tsp
problems with the best one being a   approximation  garg         however the same extension does
not apply for the rooted version of the problem as the best path for the unrooted version may not
contain the root and may be far away from the root thus leading to violation of the budget constraint 
for the rooted op  arkin et al         gave a        approximation for the op in geometric
settings  blum et al         gave the first constant factor approximation for the rooted op in general
undirected graphs  they also extended their algorithm for multi path op  the running time of their
algorithm  though polynomial  is very large  more specifically  o n  log       where  is the total
reward in the path   recently chekuri et al         gave a polynomial time algorithm for the op in
undirected graphs with an improved approximation guarantee of         our problem formulation
with specified starting location  s  and finishing location  t  falls under the category of rooted op
with submodular  non additive  reward function 
another classification of op can be done based on the symmetry of the space of the possible
locations  all of the above approximation guarantees hold true on symmetric spaces  undirected
graphs   obtaining good approximation algorithm for the directed  asymmetric  orienteering problem was stated as an open problem by blum et al          chekuri and pal        gave the first
approximation algorithm with o log n  guarantee that runs in quasi polynomial running time  the
running time was recently improved independently by two different works  chekuri et al        
nagarajan   ravi         each proposing a poly time approximation algorithm providing an approximation guarantee of o log  n   though using different approaches  the metric space conversion procedure used during our spatial decomposition approach limits emip to symmetric spaces
only 
      s equential a llocation  
blum et al         proposed a sequential allocation approach to extend algorithms for single robot
orienteering to the multiple robot setting  but only for the special case of additive  modular  reward
functions  in this paper  we generalize their result to submodular reward functions  after the initial
   

fie fficient i nformative s ensing using m ultiple robots

version of this paper was published  singh et al       b   we realized that our sequential allocation
procedure is an instance of maximizing a submodular function subject to a matroid constraint  calinescu et al          we can define a partition matroid on the disjoint union m   m       mk
of k ground sets mi   one for each robot  each set mi contains all feasible paths for robot i  the
collection i   m of all subsets p  i such that  p  mi       i e  each p corresponds to
a collection of paths  with the constraint that we can pick at most one from each set mi   forms
independent sets of the partition matroid  hence  the problem of finding a collection of maximally
informative paths is the problem of finding an independent set of a matroid maximizing a submodular function  current work in progress by goundan and schulz        provides general results on
the performance of a sequential allocation procedure in such a setting  which can be used to prove
the same sequential allocation results originally presented by singh et al       b  
    robotic applications
there is considerable work in path planning in the robotics community for several applications 
including simultaneous localization and mapping  slam  and search and exploration  several
different approaches have been studied for each of these applications  including auction based algorithms  data adaptive approaches and information gain based algorithms 
      s imultaneous l ocalization and m apping  
the goal of simultaneous localization and mapping  slam  is to build maps of an environment
by performing an exploration of the environment with an objective to estimate the robot position
and world features simultaneously  several approaches optimizing different objective functions had
been proposed to perform path planning for slam  bourgault et al         proposed an exploration
framework using an occupancy grid  og  environment model  performing spatial decomposition of
the observed environment  with an objective to maximize mutual information over the og map 
stachniss et al         developed a greedy algorithm for selecting the next location to visit to
maximize information gain about the map 
in contrast to such approaches  sim and roy        attempted to optimize the entire trajectory  not just the next step  but their algorithm introduces some approximations without theoretical bounds  simmons et al         proposed a distributed approach for exploration and mapping
with multiple robots by minimizing the overlap in information gain amongst multiple robots  they
provided quantitative results from simulation but did not provide any theoretical bounds for their
approach  there is little work in slam setting with an upper bound on the total cost of the path  in
addition  we are not aware of any approaches to slam which carry approximation guarantees for
either the single or multi robot cases  an interesting direction for future work would be to analyze
the applicability of our approach to the slam setting 
      s earch and e xploration  
the search and exploration application involves path planning for a robot with the goal of searching
for a moving target s  in a given environment  e g  target surveillance in security applications and
patient tracking in health care domain  performing path planning using stochastic inference provides
advantage of robustness to sensing and motion uncertainty though with an added complexity of computational intractability  roy and earnest        proposed an approach to effectively compute the
trajectories for target tracking based on maximizing mutual information  evaluated using the change
   

fis ingh   k rause   g uestrin   k aiser

in variance of the probability distribution   they used a particle filter approach  performing clustering over the particles followed by path planning over these clusters  lau et al         formulated the
target tracking in indoor environments as a generalization of an np complete optimal searcher path
 osp  problem  trummel   weisinger         they sought to optimize the probability of detection
within a given time horizon while accounting for the undetected target probability that is a function
of previously visited locations during the search  they used several branch and bound approaches
to speed up the search process  the objective of maximizing information gain subject to the budget
constraints on the path cost makes emip a suitable candidate for performing path planning for such
problems 
ryan        used an approach of partitioning the search space into subgraphs for multi robot
path planning  we take a conceptually similar approach  also reducing the search space by decomposing the space into regions and then performing path planning over those regions  however  we
address more complex utility functions  such as quantifying the informativeness of visited locations
and are not limited to specific graph structures such as stacks  halls  cliques  rings as is the case in
the work of ryan         recently  thompson and wettergreen        used our emip algorithm
for near term path planning while performing autonomous exploration of surficial units at amboy
crater in mojave desert  california 
      p lanning s ystems and a pplications  
certain applications in robotic path planning used plan graphs  blum   furst        to compute
an estimate of the resources and time required to achieve goals from states encountered in the
search process  in the case of over subscription planning problem  wherein only a subset of goals
that can be accomplished within the limited time or resources available for the planning system 
the work by smith        used an orienteering heuristic to provide an ordered set of goals to be
considered by the planner  briel et al         proposed several heuristics for efficiently solving
the over subscription planning problem  however  in each of the earlier proposed heuristics  the
reward function considered is modular  additive   emip can be used to efficiently solve the oversubscription planning problem in the submodular setting with strong approximation guarantees 
    sensor networks
phenomenon modeling to decide on the optimal placement of a set of static sensors is well studied
in the sensor networks and geostatistics communities  gaussian process models for spatial phenomena had been studied extensively  cressie         guestrin et al         proved that  in the case
of phenomena governed by gaussian process models  selecting the placement of sensors greedily
based on mutual information is near optimal  krause et al         extended this work to include
communication cost between sensors while optimizing the sensor placement  in the communication constrained setting  similar to the path planning problem considered in this paper  the greedy
algorithm performs badly  and more involved algorithms have to be developed  batalin et al        
showed that combining the static and mobile sensing devices  even in a simple scenario  can result
in significant improvement in sensing performance  in such a scenario  where a combination of
static and mobile sensing devices are available  several approaches for optimal placement of static
sensors can be combined with emip to observe a given phenomenon efficiently 

   

fie fficient i nformative s ensing using m ultiple robots

      data c ollection from a s ensor n etwork  
a different scenario where a mobile robot can be combined with a network of static sensors is to
improve the lifetime of the sensor network by performing the tours for collecting the data sampled
by the static network  somasundara et al         showed that the problem of collecting the data
when the environment shows both spatial and temporal dynamics is np complete and provided an
integer linear programming formulation for the same  they compared the performance of several
heuristics in simulation for both single and multi robot scenario  meliou et al         proposed a
nonmyopic approach for the application of data gathering tours using an algorithm for submodular
orienteering  sop  as a black box  they provided strong approximation guarantees and extensive
empirical evaluation that indicates the applicability of their approach for such applications  in this
setting  emip can be used as an orienteering algorithm to provide a better approximation guarantee
in addition to improved running time 
      a daptive s ampling for e nvironmental a pplications  
recent advances in robotics have opened up opportunities for high fidelity monitoring of dynamic
environmental sensing applications  rahimi et al         explored several policies for adaptively
sampling the environment  singh et al         proposed a multiscale adaptive sampling approach
with uniformly sampling the environment in the first stage followed by sampling at locations in order
to minimize the mean square error the most  they also extended their approach for multiple robots 
although without providing any theoretical bounds  using several in field experiments as well as
simulations using real world sensing datasets  we demonstrate here that several such environmental
phenomenon can be effectively sampled adaptively using emip 

    conclusions and future work
in this paper  we presented esip  an approximation algorithm for efficient planning of informative
paths  esip near optimally solves the np hard problem of maximizing the collected information
with an upper bound on path cost  our esip algorithm builds on the recursive greedy algorithm of
chekuri and pal         esip preserves the approximation guarantees of recursive greedy  while
overcoming its computational intractability through spatial decomposition and several branch and
bound approaches  we also presented a general approach  sequential allocation  which extends any
single robot algorithm  such as esip  to the multiple robot setting while providing a provably strong
approximation guarantee 
we also provide extensive empirical evaluation to demonstrate the effectiveness of our approach
for real world sensing applications  we performed several in field experiments for two important
environmental sensing applications  lake monitoring  at a small lake at uc merced campus  and
river monitoring  at san joaquin river  california   the networked info mechanical system  nims 
was used as the robotic system for performing path planning during each of these deployments to
demonstrate the practicality of our algorithm  we also performed extensive simulation experiments
using several real world sensor network data sets  with global climate change and corresponding
impetus on sustainable practices  we expect that such efficient path planning approaches can help
address the challenge of monitoring environment related activities effectively 
in the future  we plan to explore the applicability of our algorithm in other application domains
such as slam and search and rescue  we plan to work towards understanding the limitations of

   

fis ingh   k rause   g uestrin   k aiser

learning a static gp model in real world scenarios  and extend our approach for online model adaptation 

acknowledgments
we would like to thank maxim batalin for helpful discussions  bin zhang for providing the lake
data set and michael stealey  henry pai and victor chen for help during the river and lake deployment  this work was partially supported by nsf grants no  cns          cns          cns         ani           ccr          eccs          onr muri w   nf        and a
gift from intel  carlos guestrin was partly supported by an alfred p  sloan fellowship and an ibm
faculty fellowship  andreas krause was partially supported by a microsoft research graduate
fellowship 

appendix
theorem    let  be the approximation guarantee for the single path instance of the informative
path planning problem  then our sequential allocation algorithm achieves an approximation guarantee of        for the mipp problem  in the special case  where all robots have the same starting
 si   sj   i  j  and finishing locations  ti   tj   i  j   the approximation guarantee improves to
      exp             
proof of theorem    for the case when all the robots start and finish at the same location  let 
be the total reward collected by the optimal solution  additionally  define i to be the difference
between the reward collected by the optimal solution  and by the approximation algorithm  at the
end of stage i  hence       
let ai   p       pi be the nodes selected by the approximation algorithm up to stage i
 a       and let p     p            pk   denote the collection of paths chosen in the optimal solution 
   f  ai     i
consider the residual reward fai   we find fai  p      f  ai  p     f  ai    f  p  p
due to monotonicity of f   if there were no path pj with fai  pj    k  i   then j fai  pj    
i   fai  p     contradicting the monotonic submodularity of fai   hence there is such a path pj
with fai  pj    k  i   and thus the approximation algorithm is guaranteed to find a path pi such
 
that fai  pi    k
i  
the difference in the reward collected by the optimal solution and the reward collected by
algorithm   after stage i     is at most 
i          k i  
       k i    
thus after k stages  the difference in the reward is bounded by k      k k   exp      
hence  the reward collect by algorithm   is at least     exp       times the optimal reward 
resulting in approximation factor of       exp       
for the case when each robot has different starting and finishing location  let pi be the set
of nodes visited by the optimal path at stage i  let oi be the set of nodes visited by the optimal
path until stage i  i e   oi   ij   pj   with o     and o    p    the reward collected by the
   

fie fficient i nformative s ensing using m ultiple robots

approximation algorithm at stage i can be bounded as 
fai   pi       fai   pi    
after k stages  the total collected reward can be given as 
k
x

k
x
fai   pi       
fai   pi    

i  

   

i  

since the left hand side is a telescopic sum  we get 
k
x

fai   pi     f  ki   pi     f  ak   

   

i  

on the right hand side  rhs  
k
x
r h s       
fai   pi    
i  
k
x
       f  pi  ai     f  ai      
i  

adding oi  to both the terms and using the submodularity property  we get
k
x
r h s        f  oi  ai     f  oi   ai      
i  

      f  o         f  o   a     f  o   a           f  ok  ak     f  ok   ak      
rearranging the terms  we get 
 
r h s      f  ok  ak    

k 
x

 
 f  oi  ai    f  oi  ai      

i  

using the monotonicity  f  ok  ak     f  ok    and submodularity of f   f  oi  ai    f  oi 
ai     f  ai    f  ai      we get
 
 
k 
x
r h s      f  ok   
 f  ai    f  ai      
i  

      f  ok    f  ak      
using the monotonicity  f  ak    f  ak      we get
r h s       f  ok    f  ak     
substituting equation     and     into equation      we get 
f  ak        f  ok    f  ak     
   

   

fis ingh   k rause   g uestrin   k aiser

and thus 
f  ak            f  ok   
resulting in an approximation guarantee of        
the above theorem and proof is inspired by the proof of multi path orienteering provided
by blum et al         
lemma    let p     s   v    v            vl   t  be an optimal s t path solution to mipp  constrained by budget b  then there exists a corresponding sd mipp path pc    cs   ci            cin  

ct    traversing through locations ai       ail   with budget be of at most    b    l collecting
the same information 
proof of lemma    let p  be the optimal path for mipp  constrained by budget b  we need to ensure that when mipp is transformed into sd mipp  with pc as the corresponding optimal solution 
we have enough budget such that pc is feasible in the new problem domain  to recall  for the
new problem domain  sd mipp  traveling to a new cell costs l  distance between the centroids of
adjacent cells   irrespective of the sensing location within the cell 

l

 

 

 

 

 
 

figure     illustration for the increased budget requirement for sd mipp 
for the corresponding sd mipp  an optimal path may just make   experiments in   different
cells  cells       and   in fig      sharing a common vertex  with each sensing location in different
cell close to the common vertex  while only requiring an infinitesimally small traveling cost  increasing the budget by  l accounts for this case  furthermore  by paying only an additional cost
l for traveling between the two corners of an edge of a cell  pc can make experiments at   new
cells  cells     in fig      thus  the total number of cells visited by the pc is upper bounded by
  b l       hence  a budget of  b    l suffices to render pc a feasible sd mipp solution  now
to convert mipp from the two dimensional
euclidean distance into the corresponding l  distance 

the budget needs to be increased to  b to ensure that p  is feasible in the l  metric  accounting
for the conversion from euclidean distance into l    the total budget b required
for sd mipp  to

ensure the feasibility of the optimal solution in mipp  is upper bounded by    b    l 
lemma    let pc    cs   c            ck   ct   be an optimal solution for single robot instance
e where an optimal set of locations are selected within each
of sd mipp  constrained by budget b 
b
b     e i p    
visited cell cj   let p be the solution returned for esip  then i p 
c
  log k
 

proof of lemma    we will prove this by induction on the length n of the optimal path  let fg   
      e   be the constant factor due to the greedy selection of sensing locations within each cell 
   

fie fficient i nformative s ensing using m ultiple robots

also assume be be the budget constraint for sd mipp problem  for the case n      iter    
and algorithm   will select the greedy subset of nodes from the set cs   ct   this will give an
approximation guarantee of fg  krause et al         compared to the optimal set of the same number
of observations selected in this cell  and hence of the information obtained by the optimal sd mipp
path visiting only this cell  
now  assuming the induction hypothesis holds for n   k    we get 
fg
ix  p    
     log k    
fg

ix  p    
log k

ix  p  

this will hold true for traveling budget of bek   and experimental budget up to be  bek     let us
now analyze the case n   k  let p  be the optimal path from cs to ck   constrained by budget b    
since we increase the experimental budget split linearly  b   will vary from   to be  bek   where bek is
the traveling cost for visiting k cells  since this cost will be less than be  bek     using the induction
hypothesis 
fg
ix  p    
   
ix  p    
log k
similarly  with x     x  p  following approximation guarantee holds true for p   
ix    p    

fg
ix    p    
log k

by definition of our submodular function 
ix    p      i p   p   x   i p   x  
  ix  p   p     ix  p    
substituting in      we get
ix    p    

fg
 ix  p   p     ix  p     
log k

using monotonicity of i 
ix    p    

fg
 ix  p     ix  p   
log k

adding this to      we finally get 
fg
 ix  p      ix  p     ix  p   
log k
 fg   log k  ix  p   fg  ix  p      ix  p     
ix  p  

     log k  ix  p   fg  ix  p      ix  p     
since ix is a submodular function 
     log k  ix  p   fg  ix  p     
fg
 ix  p     
ix  p  
    log k

   

   

fis ingh   k rause   g uestrin   k aiser

the above proof is inspired by the analysis of the recursive greedy algorithm for submodular
orienteering proposed by chekuri and pal        
in the case of exponential budget splits  the budget needs to be increased  albeit sub linearly 
lemma    let pc    cs   ci            cin   ct   be an optimal sd mipp solution constrained
e let p be the solution returned by emip with exponential splits of the experimental
by budget b 
 
e then i p      e i p    
budget  started with increased budget n log    b 
c
  log n
proof of lemma    the set of paths which emip considers under exponential splits  let us call
them exponential paths  is in general a strict subset of the linear paths considered under linear
splits  the proof of lemma   indeed shows that the path returned by emip achieves at most a factor
   e
  log n less information than the optimal exponential path  we need to show that increasing the
 
budget by a factor of n log    be guarantees that the optimal linear path is a feasible exponential path 
every exponential path can be represented by a complete binary tree  whereby every internal node at
a given level in the tree corresponds to a choice of middle node and experimental budget allocation
to the left and right sub path at the corresponding recursion level  further  every leaf in the tree
corresponds to a set of observations selected in a visited cell  consider the tree t  representing the
e at each inner node  the restriction to exponential splits can lead to
optimal linear path with budget b 
a situation  where either the left or right sub path receives less experimental budget than allocated
by the optimal path  our proof strategy is to turn t  into a new tree t     which selects the same
observations and corresponds to a valid exponential path  in order to achieve this  we will annotate
each inner node v  which receives bv experimental budget in the optimal linear allocation  by a
new feasible exponential budget bv   bv   it then suffices to show that for the root r it holds that
    n log      b        log  n b   label the edges of t  with   and    such that the sub path
br
r
r
corresponding to the edge labeled with   receives the smaller part of the linear budget split  hence 
e
a leaf v on a path with k ones receives at most bv       k of the total linear budget requirement b 
m
 
 
let us derive the bounds bv bottom up  we prove by induction that bv        bv where m is the
height of v  distance from the leaves   this will suffice the condition br        log  n br   that we
want to prove  for the leaves v clearly bv    bv is sufficient  since no further split is done and hence
the reward collected by both linear and exponential split will be same  let v be an inner node with
children l and r  where w l o g   the left child l is annotated by    by construction  br  bv     by
induction hypothesis  bl        m  bl   and br        m  br   if we choose bv    bl     br   
then we can find a feasible exponential budget split allocating at least bl  to l and br  to r  this
split will require increasing the budget exponentially till we suffice r and allocating the rest to l 
to ensure that we always have a budget split that suffice r with exponential budget irrespective
of whether it represents p  or p    we need to do exponential splits from both sides  trying both
exponential increase from    bexp   and bv  bexp for the cases when r represents p  and p 
respectively  now we have bv        m  bl         m  br        m  bv        m  br 
     m bv  
theorem    let p  be the optimal solution for the single robot instance of the mipp problem
b achieving an information
with budget constraint b  then  our esip algorithm will find a solution p


   e
 

b
  in
value of at least i p     log n i p    whose cost is no more than      b    l      l cexp
 


 
fe and no more than      b    l      l    n log    in the
the case of linear budget split for b
cexp

fe  
case of exponential budget split for b
   

fie fficient i nformative s ensing using m ultiple robots

proof of theorem    let b be the budget requirement for sd mipp according to lemma    or
lemma   in the case of exponential splits  and p be the corresponding solution returned by emip 
let cexp be the cost of making an observation at each sensing location  maximum number of
sensing locations visited by p will be cb
  since we do not account for traveling to the sensing
exp
locations  an additional cost equivalent to traveling from the centroid of the visited cells to the
corresponding sensing location is to be paid when the solution from sd mipp is transformed
back to

get the solution for mipp  for each sensing location  a maximum additional cost of l   is incurred
for traveling to the sensing location and returning back to the centroid  where l is the length of the
cell  thus the additional cost for the
solution path for mipp problem  transformed from sd mipp

 
problem is upper bounded by bl
cexp   since emip only considers exponential budget splits into
traveling and experimental budget  an increase of the budget by another factor of   guarantees that
the split defined by the optimal mipp solution is feasible  combining this analysis with lemma  
and lemma   completes the proof 

references
arkin  e  m   mitchell  j  s  b     narasimhan  g          resource constrained geometric network
optimization  in symposium on computational geometry  pp         
bai  x   kumar  s   xua  d   yun  z     lai  t  h          deploying wireless sensors to achieve
both coverage and connectivity  in proceedings of the  th acm international symposium on
mobile ad hoc networking and computing  pp         
batalin  m  a   rahimi  m   yu  y   liu  d   kansal  a   sukhatme  g  s   kaiser  w  j   hansen  m  
pottie  g  j   srivastava  m     estrin  d          call and response  experiments in sampling
the environment  in proceedings of the  nd international conference on embedded networked
sensor systems  pp       
blum  a   chawla  s   karger  d  r   lane  t   meyerson  a     minkoff  m          approximation
algorithms for orienteering and discounted reward tsp  in annual symposium on foundation
of computer science  focs   p     
blum  a  l     furst  m  l          fast planning through planning graph analysis  artificial
intelligence               
borgstrom  p  h   stealey  m  j   batalin  m  a     kaiser  w  j          nims d  a novel rapidly
deployable robot for   dimensional applications  in ieee rsj international conference on
intelligent robots and systems  beijing  china 
bourgault  f   makarenko  a   williams  s   grocholsky  b     durrant whyte  h          information based adaptive robotic exploration  in ieee rsj international conference on intelligent
robots and systems  iros   pp         
brekke  l  d   miller  n  l   bashford  k  e   quinn  n  w     dracup  j  a          climate change
impacts uncertainty for water resources in the san joaquin river basin  california  journal of
the american water resource association             
briel  m  v  d   sanchez  r   do  m  b     kambhampati  s          effective approaches for partial
satisfaction  over subscription  planning  in in aaai  pp          aaai press 

   

fis ingh   k rause   g uestrin   k aiser

butt  s  e     ryan  d  m          an optimal solution procedure for the multiple tour maximum
collection problem using column generation  computers and operations research         
    
calinescu  g   chekuri  c   pl  m     vondrk  j          maximizing a submodular set function subject to a matroid constraint  extended abstract   in integer programming and combinatorial
optimization  ipco   vol       of lecture notes in computer science  pp         
caselton  w     zidek  j          optimal monitoring network design  statistics and probability
letters 
chao  i  m   golden  b  l     wasil  e  a          a fast and effective heuristic for the orienteering
problem  european journal of operations research             
chekuri  c   korula  n     pal  m          improved algorithms for orienteering and related problems  in proc    th annual acm siam symposium on discrete algorithms  soda    
siam  to appear 
chekuri  c     pal  m          a recursive greedy algorithm for walks in directed graphs  in annual
symposium on foundation of computer science  focs   pp         
christofides  n          worst case analysis of a new heuristic for the traveling salesman problem 
tech report cmu 
cressie  n  a  c          statistics for spatial data  wiley 
dhariwal  a   zhang  b   stauffer  b   oberg  c   sukhatme  g  s   caron  d  a     requicha  a  a 
        networked aquatic microbial observing system  in ieee international conference
on robotics and automation  icra  
feillet  d   dejax  p     gendreau  m          traveling salesman problem with profits  transportation science                
garg  n          saving an epsilon  a   approximation for the k mst problem in graphs  in acm
symposium on theory of computing  stoc   pp         
golden  b   levy  l     vohra  r          the orienteering problem  naval research logistics     
       
goundan  p  r     schulz  a  s          revisiting the greedy approach to submodular set function
maximization   working paper  mit 
guestrin  c   krause  a     singh  a  p          near optimal sensor placements in gaussian processes  in international conference on machine learning  icml  
harmon  t  c   ambrose  r  f   gilbert  r  m   fisher  j  c   stealey  m     kaiser  w  j         
high resolution river hydraulic and water quality characterization using rapidly deployable
networked infomechanical systems  nims rd   environmental engineering science        
       
i ming  c   golden  b     wasil  e          the team orienteering problem  european journal of
operation research             
ibaraki  t   muro  s   murakami  t     hasegawa  t          using branch and bound algorithms to
obtain suboptimal solutions  mathematical methods of operations research                

   

fie fficient i nformative s ensing using m ultiple robots

ishikawa  t     tanaka  m          diurnal stratification and its effects on wind induced currents
and water qualities in lake kasumigaura  japan  journal of hydraulic research            
    
johnson  d  s   minkoff  m     phillips  s          the prize collecting steiner tree problem  theory
and practice  in symposium on discrete algorithms  soda   pp         
jordan  b  l   batalin  m  a     kaiser  w  j          nims rd  a rapidly deployable cable based
robot  in ieee international conference on robotics and automation  icra   rome  italy 
kataoka  s     morito  s          an algorithm for the single constraint maximum collection
problem  journal of the operational research society of japan             
ko  c  w   lee  j     queyranne  m          an exact algorithm for maximum entropy sampling 
operations research                
krause  a     guestrin  c          near optimal observation selection using submodular functions 
in aaai nectar track 
krause  a   singh  a     guestrin  c          near optimal sensor placements in gaussian processes  theory  efficient algorithms and empirical studies  in journal of machine learning
and research  jmlr   vol     pp         
krause  a     guestrin  c          nonmyopic active learning of gaussian processes  an
exploration exploitation approach  in international conference on machine learning
 icml   pp         
krause  a   guestrin  c   gupta  a     kleinberg  j          near optimal sensor placements  maximizing information while minimizing communication cost  in proceedings of the fifth international conference on information processing in sensor networks  ipsn   pp      
laporte  g     martello  s          the selective travelling salesman problem  discrete applied
mathematics             
lau  h   huang  s     dissanayake  g          probabilistic search for a moving target in an
indoor environment  in ieee rsj international conference on intelligent robots and systems
 iros   pp           
lin  s          computer solutions of the traveling salesman problem  bell system technical
journal               
macintyre  s          vertical mixing in a shallow  eutrophic lake  possible consequences for the
light climate of phytoplankton  limnology and oceanography                
macintyre  s   romero  j  r     kling  g  w          spatial temporal variability in surface layer
deepening and lateral advection in an embayment of lake victoria  east africa  limnology and
oceanography                
meliou  a   krause  a   guestrin  c     hellerstein  j  m          nonmyopic informative path
planning in spatio temporal models  in association for advancement of artificial intelligence
 aaai   pp         
nagarajan  v     ravi  r          poly logarithmic approximation algorithms for directed vehicle
routing problems  in proc    th internat  workshop on approximation algorithms for combinatorial optimization problems  approx     vol       of lncs  pp          springer 
   

fis ingh   k rause   g uestrin   k aiser

nemhauser  g   wolsey  l     fisher  m          an analysis of the approximations for maximizing
submodular set functions  mathematical programming             
pon  r   batalin  m   gordon  j   rahimi  m   kaiser  w   sukhatme  g   srivastava  m     estrin 
d          networked infomechanical systems  a mobile wireless sensor network platform 
in proceedings of the fifth international conference on information processing in sensor networks  ipsn   pp         
rahimi  m   pon  r   kaiser  w   sukhatme  g   estrin  d     srivastava  m          adaptive
sampling for environmental robotics  in ieee international conference on robotics and
automation  icra  
rasmussen  c  e     williams  c  k          gaussian process for machine learning  adaptive
computation and machine learning  mit press 
reynolds fleming  j  v   fleming  j  g     luettich  r  a          portable autonomous vertical
profiler for estuarine applications  estuaries             
roy  n     earnest  c          dynamic action spaces for information gain maximization in search
and exploration  in american control conference 
ryan  m  r  k          exploiting subgraph structure in multi robot path planning  in journal of
artificial intelligence and research  jair   vol      pp         
sim  r     roy  n          global a optimal robot exploration in slam  in ieee international
conference on robotics and automation  icra  
simmons  r  g   apfelbaum  d   burgard  w   fox  d   moors  m   thrun  s     younes  h         
coordination for multi robot exploration and mapping  in association for advancement of
artificial intelligence  aaai   pp         
singh  a   nowak  r     ramanathan  p          active learning for adaptive mobile sensing networks  in proceedings of the fifth international conference on information processing in
sensor networks  ipsn   pp       
singh  a   batalin  m  a   chen  v   stealey  m  j   jordan  b   fisher  j   harmon  t   hansen  m    
kaiser  w  j       a   autonomous robotic sensing experiments at san joaquin river  in ieee
international conference on robotics and automation  icra   pp            rome  italy 
singh  a   krause  a   guestrin  c   kaiser  w  j     batalin  m  a       b   efficient planning of
informative paths for multiple robots  in international joint conference on artificial intelligence  ijcai   pp            hyderabad  india 
smith  d  e          choosing objectives in over subscription planning  in international conference
on automated planning and scheduling  icaps  
somasundara  a  a   ramamoorthy  a     srivastava  m  b          mobile element scheduling
with dynamic deadlines  in ieee transactions on mobile computing  vol     pp         
stachniss  c   grisetti  g     burgard  w          information gain based exploration using raoblackwellized particle filters  in robotics science and systems  rss  
tang  l     wang  x          iterated local search algorithm based on very large scale neighborhood for prize collecting vehicle routing problem  the international journal of advanced
manufacturing technology      
   

fie fficient i nformative s ensing using m ultiple robots

thompson  d  r     wettergreen  d          intelligent maps for autonomous kilometer scale science survey  in international symposium on artificial intelligence  robotics and automation
in space  isairas  
trummel  k  e     weisinger  j  r          the complexity of the optimal searcher path problem 
operations research                
zhang  w     korf  r  e          performance of linear space search algorithms  artificial intelligence                

   

fi