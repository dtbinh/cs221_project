journal artificial intelligence research                

submitted        published      

predicting performance ida  using
conditional distributions
uzi zahavi

zahaviu cs biu ac il

computer science department
bar ilan university  israel

ariel felner

felner bgu ac il

department information systems engineering
deutsche telekom labs
ben gurion university  israel

neil burch

burch cs ualberta ca

computing science department
university alberta  canada

robert c  holte

holte cs ualberta ca

computing science department
university alberta  canada

abstract
korf  reid  edelkamp introduced formula predict number nodes ida 
expand single iteration given consistent heuristic  experimentally demonstrated could make accurate predictions  paper show that  addition requiring heuristic consistent  formulas predictions accurate
levels brute force search tree heuristic values obey unconditional distribution defined used formula  propose
new formula works well without requirements  i e   make accurate predictions ida s performance inconsistent heuristics heuristic values
level obey unconditional distribution  order achieve introduce
conditional distribution heuristic values generalization unconditional
heuristic distribution  provide extensions formula handle individual
start states augmentation ida  bidirectional pathmax  bpmx   technique propagating heuristic values inconsistent heuristics used  experimental
results demonstrate accuracy new method variations 

   introduction overview
heuristic search algorithms a   hart  nilsson    raphael        ida   korf 
      guided cost function f  n    g n    h n   g n  actual distance
start state state n h n  heuristic function estimating cost n
nearest goal state  heuristic h admissible h n  dist n  goal  every state n
goal state goal  dist n  m  cost least cost path n m  h n 
admissible  i e  always returns lower bound estimate optimal cost  algorithms
guaranteed find optimal path start state goal state one exists 
c
    
ai access foundation  rights reserved 

fizahavi  felner  burch    holte

important question ask many nodes expanded algorithms
solve given problem  major advance answering question work done
korf  reid  edelkamp introduced formula predict number nodes ida 
expand  korf   reid        korf  reid    edelkamp         papers  formula
present  predictions makes  referred kre paper  prior
kre  standard method comparing two heuristic functions compare
average values  preference given heuristic larger average  korf 
      korf   felner        felner  korf  meshulam    holte         kre made substantial
improvement characterizing quality heuristic function distribution
values  developed kre formula based heuristic distribution
predict number nodes expanded ida  searching specific heuristic
cost threshold  finally  compared predictions formula actual
number nodes expanded ida  different thresholds several benchmark search
spaces showed gave virtually perfect predictions  major advance
analysis search algorithms heuristics 
despite impressive results  kre formula two main shortcomings  first
kre assumes addition admissible given heuristic consistent 
heuristic h consistent every pair states  n  h m  h n  dist m  n   
heuristic consistent  heuristic values nodes children thus constrained similar heuristic value node  heuristic inconsistent
consistent  i e  pair nodes n  h m  h n    dist m  n   inconsistency
allows nodes children heuristic values arbitrarily larger smaller
nodes heuristic value  term inconsistency negative connotation
something avoided  recent studies shown inconsistent heuristics easy
define many search applications produce substantial performance improvements
 felner  zahavi  schaeffer    holte        zahavi  felner  schaeffer    sturtevant       
zahavi  felner  holte    schaeffer         reason  important extend
kre formula accurately predict ida s performance inconsistent heuristics 
heuristics likely become increasingly important future applications 
second shortcoming kre formula works well levels
search tree heuristic distribution follows equilibrium distribution  defined
section         always holds sufficiently deep levels search tree 
heuristic values converge equilibrium distribution  addition  hold
levels heuristic values set start states distributed according
equilibrium distribution  however  shown  in section        kre
formula inaccurate depths practical interest single start states
large sets start states whose values distributed according equilibrium
distribution  cases  heuristic values levels search tree
actually examined ida  obey equilibrium distribution applying kre
cases result inaccurate predictions 
main objective paper develop formula accurately predict number
nodes ida  expand  given cost threshold  given heuristic set start
states  including currently covered kre  first extend kres idea
   general definition graph  case undirected graphs write consistency
definition  h m  h n   dist m  n  

  

fipredicting performance ida  using conditional distributions

heuristic distribution  unconditional  conditional distribution 
probability specific heuristic value constant  kre  conditioned
certain local properties search space  conditional distribution provides
insights behavior heuristic values search informed
 in context search tree  specific heuristic value produced 
allows better study heuristic behavior 
based conditional distribution develop new formula  cdp  conditional distribution prediction   predicts ida s performance set start states  regardless
heuristic values distributed  desired depth  not necessarily large 
whether heuristic consistent not  cdp recursive structure information
number nodes propagated root leaves search tree 
experiments cdps predictions least accurate kres  cdp much
accurate inconsistent heuristics sets start states non equilibrium
heuristic distributions  basic form  cdp particularly accurate single start
states  describe simple extension improves accuracy setting  finally 
adapt cdp make predictions ida  augmented bidirectional pathmax
method  bpmx   felner et al          inconsistent heuristics used  bpmx
useful addition ida   prunes many subtrees would otherwise explored 
thereby substantially reducing number nodes ida  expands 
throughout paper provide experimental results demonstrating accuracy
cdp scenarios using two benchmark domains used kre
sliding tile puzzle rubiks cube 
simplicity discussion  assume paper edges cost   
true many problem domains  generalization ideas case variable edge
costs straightforward  although practical implementation introduces additional
challenges  briefly described section       
paper organized follows  section   presents background material  section  
derives kre formula first principles discusses limitations  section   
notion conditional distribution heuristic values presented  new formula  cdp 
presented section      section   discusses subtle important way
experiments differ kres  experimental results presented sections     
extension cdp formula better handle single start states presented section   
section   proposes technique  based cdp  estimating upper lower bounds
number nodes ida  expand given unconditional distribution  section   
presents extension cdp predicting performance ida  bpmx applied 
related work discussed section     conclusions suggestions future work
given section     preliminary version paper appeared  zahavi  felner  burch 
  holte        

   background
two application domains used kre demonstrate accuracy formula 
experiments use exactly domains  section describe
well search algorithm different heuristic functions used
experiments 
  

fizahavi  felner  burch    holte

    problem domains
two classic examples ai literature single agent pathfinding problems
rubiks cube sliding tile puzzle 
      rubiks cube

figure          rubiks cube
rubiks cube invented      erno rubik hungary  standard version
consists       cube  figure     different colored stickers exposed
squares sub cubes  cubies     movable cubies   stable cubies
center face  movable cubies divided eight corner cubies 
three faces each  twelve edge cubies  two faces each  corner cubies move
among corner positions  edge cubies move among edge positions 
one   faces cube rotated              degrees relative
rest cube  results    possible moves state  since twisting
face twice row redundant  branching factor first move reduced
    addition  movements opposite faces independent  example  twisting
left face right face leads state performing moves
opposite order  pruning redundant moves results search tree asymptotic
branching factor           korf        
goal state  squares side cube color  puzzle
scrambled making number random moves  task restore cube
original unscrambled state         different reachable states 
      sliding tile puzzles
sliding tile puzzle consists square frame containing set numbered square tiles 
empty position called blank  legal operators slide tile
horizontally vertically adjacent blank blank position  problem
rearrange tiles random initial configuration particular desired goal
configuration  state space grows exponentially size number tiles increases 
shown finding optimal solutions sliding tile problem npcomplete  ratner   warmuth         two common versions sliding tile
puzzle       puzzle         puzzle    puzzle contains               
  

fipredicting performance ida  using conditional distributions

 

 

 
 

 

 

 

 

 

 

 

 

 

 

     

 

 

 

           

figure      puzzle    puzzle goal states
reachable states     puzzle contains      reachable states  goal states
puzzles shown figure   
classic heuristic function sliding tile puzzles called manhattan distance  computed counting number grid units tile displaced
goal position  summing values tiles  excluding blank  since
tile must move least manhattan distance goal position  move changes
location one tile one grid unit  manhattan distance lower bound
minimum number moves needed solve problem instance 
    iterative deepening a 
iterative deepening a   ida    korf        performs series depth first searches  increasing cost threshold time  depth first search  nodes n f  n 
expanded  threshold initially set h s   start node  goal
found using current threshold  search ends successfully  otherwise  ida  proceeds
next iteration increasing minimum f value exceeded previous
iteration 
    pattern databases  pdbs 
powerful approach obtaining admissible heuristics create simplified version 
abstraction  given state space use exact distances abstract space
estimates distances original state space  type abstractions use
paper sliding tile puzzles illustrated figure    left side
figure shows    puzzle state goal state  right side shows corresponding
abstract states  defined erasing numbers tiles except        
   estimate distance goal state    puzzle  calculate
exact distance abstract state corresponding abstract goal state 
pattern database  pdb  lookup table stores distance abstract goal
every abstract state  or pattern   culberson   schaeffer               pdb built
running breadth first search  backwards abstract goal whole abstract
space spanned  compute h s  state original space  mapped
corresponding abstract state p distance to goal p looked pdb 
   description assumes operators cost  technique easily extended
cases operators different costs 

  

fizahavi  felner  burch    holte

pdb lookup

state
  

 

 

  

 

     

 

 

     

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

     

  
 

 

           

goal state

goal pattern

 a 

 b 

figure    example regular lookups

example  pdb    puzzle based tiles            would contain entry
every possible way placing four tiles blank    puzzle positions 
pdb could implemented   dimensional array  p db  array indexes
locations blank tiles            respectively  lookup state
shown figure   would p db                    the blank position    tile  
position    tile   position     etc    paper  accessing pdb state
described referred regular lookup  heuristic value returned
regular lookup referred regular heuristic value 
pattern databases proven useful finding lower bounds combinatorial
puzzles  korf        culberson   schaeffer        korf   felner        felner  korf   
hanan        felner et al          furthermore  proven useful
search problems  e g   multiple sequence alignment  mcnaughton  lu  schaeffer    szafron 
      zhou   hansen        planning  edelkamp      a  
    geometric symmetries
common practice exploit special properties state space enable additional
heuristic evaluations  particular  additional pdb lookups performed given
single pdb  example  consider rubiks cube suppose pdb based
positions cubies yellow face  the positions cubies dont
matter   reflecting rotating puzzle enable similar lookups cubies
different color  e g   green  red  etc   since puzzle perfectly symmetric respect
color  thus     symmetric lookups pdb different heuristic
values obtained lookups pdb  heuristic values
admissible given state puzzle 
  

fipredicting performance ida  using conditional distributions

another example  consider sliding tile puzzle  line symmetry main
diagonal  assuming goal location blank upper left corner   configuration tiles reflected main diagonal reflected configuration
shares attributes original one  reflections usually used using
pdbs sliding tile puzzle  culberson   schaeffer        korf   felner        felner
et al               looked pdb 
    methods creating inconsistent heuristics
consistent heuristics  difference heuristic value neighboring nodes
constrained less equal cost connecting edge  inconsistent
heuristics  constraint difference heuristic values neighboring
nodes much larger cost edge connecting them 
kre formula designed work consistent heuristics therefore kre
papers report experiments done consistent heuristics only  contrast  new
formula  cdp  works types heuristics including inconsistent heuristics  therefore 
paper  addition usual consistent heuristics regular pdb lookups
manhattan distance experiment inconsistent heuristics  previously
described several methods producing inconsistent heuristics  zahavi et al          two
inconsistent heuristics used experiments random selection
heuristics dual evaluations 
random selection heuristics  well known method overcoming pitfalls
given heuristic employ several heuristics use maximum value  holte 
felner  newton  meshulam    furcy         example  multiple heuristics
based domain specific geometric symmetries ones described above 
using geometric symmetries additional storage costs associated
extra evaluations  even evaluations based pdbs 
although using multiple heuristics results improved heuristic value  therefore
likely reduce number nodes expanded finding solution  increases
time required calculate heuristic values nodes  might increase
overall running time search  instead using available heuristics
every heuristic calculation  one could instead choose consult one them 
selection made either randomly systematically  one
heuristic consulted node  time per node virtually
one heuristic available  even individual heuristics consistent 
heuristic values actually used inconsistent different heuristics
consulted different nodes  showed  zahavi et al         inconsistency
generally reduces number expanded nodes compared using heuristic
nodes almost low maximum heuristics
computed every node  rubiks cube  randomly chose one   
different lookups pdb arise    lines symmetry
cube 
dual evaluation  permutation state spaces rubiks cube  state
exists dual state sd located distance goal  felner
  

fizahavi  felner  burch    holte

et al         zahavi  felner  holte    schaeffer        zahavi et al          therefore 
admissible heuristic applied sd admissible s  puzzles studied
paper permutation state spaces  dual state puzzles
calculated reversing role locations objects  regular state uses
set objects indexed current location  dual state set
locations indexed objects contain  using pdbs  dual lookup
look sd pdb  performing regular pdb lookups states
generated search produces consistent values  however  values produced
performing dual lookup inconsistent identity objects
queried change dramatically two consecutive lookups  due
diversity  dual heuristic shown preferable regular heuristic  zahavi
et al          exact definition explanations dual lookup provided
original papers  felner et al         zahavi et al               
important note three pdb lookups  regular  dual  random  consult
pdb  thus  need amount memory share overall
distribution heuristic values  zahavi et al         

   kre formula limitations
section begins short derivation kre formula state spaces
state transitions cost    kre describe generalized account
variable edge costs  korf et al         
    kre formula
given state ida  threshold d  kre aims predict n  s  d   number nodes
ida  expand uses start state complete search
ida  threshold  i e   searches depth terminate search goal
encountered   written
n  s  d   


x

ni  s  d 

   

i  

ni  s  d  number nodes expanded ida  level threshold d 
one way decompose ni  s  d  product two terms
ni  s  d    ni  s  pex  s  d  i 

   

ni  s  number nodes level bf ssd   brute force search tree  i e  
tree created breadth first search without heuristic pruning  depth rooted
start state s  pex  s  d  i  percentage nodes level bf ssd
expanded ida  threshold d 
kre  ni  s  written ni   i e   without dependence start state s 
perfectly correct state spaces uniform branching factor b  ni  s 
cases simply bi   state spaces non uniform regular branching structure 
  

fipredicting performance ida  using conditional distributions

kre showed ni could computed exactly using recurrence equations independent s  however  base cases recurrences kre depend
using ni instead ni  s  reasonable strictly correct 
      conditions node expansion ida 
understand pex  s  d  i  treated kre  necessary reflect conditions
required node expansion  node n level bf ssd expanded ida 
satisfies two conditions 
   f  n    g n    h n  must less equal d  edges unit cost 
g n    condition equivalent h n  i  call nodes satisfy
condition potential nodes potential expanded 
   n must generated ida   i e   parent  at level    must expanded
ida  
kre restricted analysis heuristics consistent proved case
second condition implied first condition  words  given
heuristic consistent  nodes expanded ida  level bf ssd threshold
exactly set potential nodes level i   observation allows equation  
rewritten
ni  s  d    ni  s  pp ot en ial  s  i  i 

   

pp ot en ial  s  i  v  defined percentage nodes level bf ssd whose
heuristic value less equal v 
note although pp ot en ial s  i  di    pex  s  d  i  given heuristic consistent  pp ot en ial  s  i  i  overestimates pex  s  d  i  heuristic inconsistent 
sometimes large amount  see section        
      approximating pp ot en ial  s  i  v 
kre use three different approximations pp ot en ial s  i  v   kres theoretical analysis
pp ot en ial s  i  v  approximated equilibrium distribution  denote
peq  v   defined probability node chosen randomly uniformly
among nodes given depth brute force search tree heuristic value less
equal v  limit large depth  korf et al        p        kre proved that 
limit large d 

x
ni  s  peq  d i 
i  

would converge n  s  d  given heuristic consistent  final formula  the kre
formula  therefore 
   see section       discussion kre formula consistent heuristics 

  

fizahavi  felner  burch    holte

n  s  d   


x

ni  s  peq  d i 

   

i  

kre contrasted equilibrium distribution overall distribution 
defined probability state chosen randomly uniformly states
problem heuristic value less equal v  p        unlike equilibrium
distribution  defined search tree  overall distribution property
state space  overall distribution directly computed pattern database 
one pattern database used entries corresponds number
states original state space  approximated  complex settings 
computing heuristic values large random sample states  kre argued
rubiks cube overall distribution heuristic defined single pattern database
equilibrium distribution  sliding tile puzzles  two
distributions different 
heuristic used kres experiments rubiks cube defined maximum
three pattern databases  individual pattern database  overall distribution
computed exactly  kres experiments distributions combined approximate pp ot en ial s  i  v  assuming values three pattern databases
independent 
experiments sliding tile puzzles  kre defined three types states based
whether blank located corner position  edge position  interior
position  approximated pp ot en ial s  i  v  weighted combination overall distributions states type  weights used level exact
percentages states different types level 
experiments followed kre precisely use overall distribution individual rubiks cube pattern databases weighted overall distribution described
sliding tile puzzles  simplicity  reminder paper use phrase
unconditional heuristic distribution  notation p  v  refer probability
node heuristic less equal v  let exact context determine
distribution p  v  actually denotes  whether equilibrium distribution  overall
distribution  approximation pp ot en ial pex   likewise use
p v   lower case p  denote p  v  p  v     with p      p       p v  probability
state heuristic value exactly v according distribution p  
    limitations kre formula
kre formula  equation    two main shortcomings      predictions
accurate given heuristic inconsistent      even consistent heuristics
predictions inaccurate individual start states sets start states whose heuristic
values distributed according unconditional heuristic distribution  p  v  
turn examine detail 
  

fipredicting performance ida  using conditional distributions

consistent
 
 
 

   

expanded
generated
generated

 

inconsistent
  r
 

 

   

 

 
 

    n

figure    consistent versus inconsistent heuristics
      inconsistent heuristics
specifically mentioned kre papers one property required kre analysis
heuristic consistent  necessary kre formula aims
count number potential nodes level bf ssd   consistent heuristics 
heuristic value neighboring states never changes change g value 
illustrated left side figure    where number inside node heuristic
value   implies f  value nodes ancestor always less equal
f  value node  i e   f monotone non decreasing along path search tree  
therefore  easy prove consistent heuristics ancestors potential
node potential nodes  korf et al          consequently ida  expand
potential nodes bf ssd   hence  formula kre aims count
number potential nodes bf ssd used predict number nodes ida 
expand given consistent heuristic 
inconsistent heuristics reasoning apply  heuristic values neighboring states differ much cost edge connects them 
thus f  values along path search tree guaranteed monotonically
non decreasing  therefore  ancestors potential node guaranteed
potential nodes themselves  consequence potential node might never
generated  example  consider search tree right side figure    numbers
inside node show nodes heuristic value  assume start node r
ida  threshold    a node potential node f  value less equal
      potential nodes depth    all heuristic value     consider
potential node n  path node node potential node
 f  m                    generated expanded  therefore  node n
never generated  preventing ida  expanding it  since kre formula counts
number potential nodes  count node n thus overestimate number
expanded nodes inconsistent heuristic used 
amount kre overestimates number nodes expanded ida 
inconsistent heuristic large  illustrate this  consider state space
rubiks cube pdb heuristic defined locations    out     edge
cubies  regular method looking heuristic value pdb produces consistent
heuristic  discussed section     two alternative pdb lookups produce inconsistent
   unconditional distinguish conditional distribution introduce section    

  

fizahavi  felner  burch    holte


 
 
  
  
  
  

kre
   
     
      
       
         
           

regular
   
     
      
       
         
           

dual
  
   
     
      
         
          

random symmetry
  
   
     
      
       
          

table    rubiks cube   number nodes expanded ida  using regular  dual 
random symmetry pdb lookups different ida  threshold corresponding kre predictions 

heuristics dual evaluation random selection multiple heuristics 
rubiks cube    symmetries applied state create new
way perform pdb lookup it  thus     heuristics rubiks cube based
pdb random symmetry lookup chooses one randomly 
three lookups  regular  dual  random symmetry  consult pdb
distribution heuristic values  p  v   therefore kre predict
ida  expand number nodes regardless whether regular  dual 
random symmetry lookup done  experimental results table   show
substantially different number nodes actually expanded practice
methods 
row table   presents results specific ida  threshold  d   result
average        random initial states  generated making     random
moves goal state  kre column shows kre prediction based
unconditional heuristic distribution  last three columns table   show number
nodes ida  expands performs either regular  dual  random symmetry lookup
pdb  kre prediction within    actual number nodes expanded
ida  uses regular  consistent  pdb lookup  third column  substantially
overestimates number nodes expanded ida  uses dual random symmetry
inconsistent lookups pdb  fourth fifth columns  
      sets start states whose heuristics values obey
unconditional heuristic distribution
explained above  kre used unconditional heuristic distribution p  v  and 
theoretical analysis  proved use kre formula would give accurate predictions limit large depth  fact  accurate predictions occur soon
heuristic distribution depth interest closely approximates p  v   happens
large depths definition happen even shallow levels certain
circumstances  reason kre able produce extremely accurate predictions
experiments using unconditional heuristic distribution p  v  depths
start states experiments report average predictions performances
  

fipredicting performance ida  using conditional distributions

large number randomly drawn start states  spaces used kres experiments 
heuristic distribution large random set start states closely approximated
p  v  distribution used  caused heuristic distributions levels closely
approximate p  v  
however  set start states heuristic values distributed according
p  v   case non random sets start states single start state 
kre expected make good predictions small depths  words 
cases unconditional heuristic distribution p  v  expected good
approximation pex  s  d  i  
consider case single start state consistent heuristic  distribution
heuristic values search tree close start state highly correlated
heuristic value start state  therefore search trees
start states different heuristic values  example  great deal pruning likely
occur near top search tree start state large heuristic value  resulting
fewer nodes expanded start state small heuristic value  applying kre
two states produce prediction  therefore inaccurate
least one them  uses unconditional heuristic distribution p  v 
cases 
h
 
 
 
 
 

ida 
          
          
          
         
         

kre
         
         
         
         
         

table    results set       start states h value shown first column
 regular pdb lookup  ida  threshold      

table   demonstrates phenomenon rubiks cube one regular   edge pdb
lookup ida  threshold       ida  column shows average number nodes
expanded        start states  heuristic value h given row  kre
ignores heuristic values start states predicts           nodes
expanded ida  every start state  row      table   shows
accurate prediction performance averaged large random sample start
states  table   see low start states small heuristic values
high ones large heuristic values 
      convergence heuristic distributions large depths
described above  kre make accurate predictions level nodes level
actually obey unconditional heuristic distribution p  v   increases  distribution
heuristic values start converge p  v   rate convergence depends upon
state space  believed fairly slow sliding tile puzzles  faster
  

fizahavi  felner  burch    holte

rubiks cube  convergence occurs ida  threshold reached kre
provide accurate predictions set start states  including single start states  
order experimentally test repeated kre rubiks cube experiment but 
addition using large set random start states  looked individual
performance two start states  s    low heuristic value      s    
maximum value heuristic used experiment       kre used
      heuristic takes maximum   different pdbs  one based   corner
cubies two based   edge cubies each   heuristic admissible consistent 
billion random states sampled estimate p  v  maximum value   
average value       

kre

  
  
  
  
  
  
  
  

     
      
       
         
          
           
             
               

multiple start states
ida 
ratio
     
    
      
    
       
    
         
    
          
    
           
    
             
    
               
    

s 
      
       
         
          
           
             
              
               

single start state
ratio
s  
    
    
     
    
       
    
         
    
          
    
           
    
             
                    

ratio
    
    
    
    
    
    
    

table    rubiks cube   max         pdbs
table   presents results  kre column presents kre prediction
multiple start states columns presents actual number states generated  averaged
set random start states  ida  threshold  columns copied kre
journal paper  korf et al          ratio columns table   shows value predicted
kre formula divided actual number nodes generated  ratio found
close     multiple start states  indicating kres predictions
accurate 
results two individual start states tested shown single start
state part table  note states optimally solved depth     but 
kre  search depth run completion  cases kre formula
accurate small thresholds accuracy prediction increased threshold
increased  threshold      kre prediction roughly factor   small s 
    large s     large improvement smaller thresholds 
predictions become even accurate depth continues increase 
reason predictions improve larger values deeper depths
heuristic distribution within single level converges unconditional heuristic distribution  using dashed dotted lines various types  figure   a  shows distribution
heuristic values seen states           moves away s    solid line
figure   a  unconditional heuristic distribution  x axis corresponds different
heuristic values y axis shows percentage states specified depth
heuristic values less equal x value  example depth    which includes
  

fipredicting performance ida  using conditional distributions

   

   
unconditional heuristic distribution
depth    
depth    
depth    
depth    

  

   
cumulative percentage

cumulative percentage

   

unconditional heuristic distribution
depth    
depth    
depth    
depth    

  
  
  

  
  
  
  

 

 
 

 

 

 

 

  

  

 

 

heuristic value

 

 

 

  

heuristic value

 a  heuristic distributions s 

 b  heuristic distributions s  

figure    convergence heuristic distributions

start state only  heuristic value   seen  leftmost curve   depth   
heuristic values        seen  second curve left   on  figure
shows heuristic distribution successive depths converges unconditional
heuristic distribution  rightmost curve figure   a    depth     not shown   heuristic distribution probably quite close unconditional heuristic distribution  making
kre prediction quite accurate even single start state 
figure   b  shows heuristic distributions nodes            moves
away s     case unconditional heuristic distribution left
heuristic distributions shallow depths  heuristic distribution depth  
rightmost curve figure  comparing parts  a   b  figure   see
convergence unconditional heuristic distribution faster s   s   
explains kre prediction table   accurate s    

   conditional distribution cdp formula
present new formula cdp  conditional distribution prediction   overcomes two shortcomings kre described previous section  important feature
cdp extends unconditional heuristic distribution heuristic values p  v 
used kre conditional distribution 
    conditional distribution heuristic values
conditional distribution heuristic values denoted p  v context   context
represents local properties search tree neighborhood node influence
distribution heuristic values nodes children  specifically  pn  v  percentage
node ns children heuristic value less equal v  define
p  v context  average pn  v  nodes n satisfy conditions defined
  

  

fizahavi  felner  burch    holte

context  p  v context  interpreted probability node heuristic
value less equal v produced node satisfying conditions specified
context expanded  context empty denoted p  v  section   
use p v context   lower case p  denote probability node heuristic value
equal v produced node
p satisfying conditions specified context
expanded  obviously  p  v context    vi   p i context  
      basic   step model
conditioning context combination local properties search tree 
including properties node  e g  heuristic value   operator applied
generate node  properties nodes ancestors search tree  etc  simplest
conditional distribution p v vp    probability node heuristic value equal v
produced node value vp expanded  call   step model
value conditioned nodes one step away only  special circumstances 
p v vp   determined exactly analysis state space heuristic 
general must approximated empirically sampling state space 
sampling method p v vp   represented entry  v  vp   two dimensional
matrix     hmax      hmax    hmax maximum possible heuristic value  build
matrix first set values matrix    randomly generate state
calculate heuristic value vp   that  generate child state one
time  calculate childs heuristic value  v   increment  v  vp    repeat
process large number times order generate large sample  finally  divide
value cell matrix sum column cell belongs to  entry
 v  vp   represents percentage children generated value v state
value vp expanded 

vp

vp
 

v

 

 

 

  

 

 

 

 

  

 

                        

 

                        

                        

 

                        

 

                        

 

                        

  

                        

  

                        

 

                        

 

                        

 

v

 a  consistent heuristic

 b  inconsistent heuristic

figure    portion conditional distribution matrix rubiks cube consistent
inconsistent heuristics

  

fipredicting performance ida  using conditional distributions

figure   shows bottom right corner two matrices   edge pdb
rubiks cube  left matrix  a  shows p v vp   regular  consistent  lookup
pdb right matrix  b  shows p v vp   inconsistent heuristic created
dual lookup pdb  matrix  a  tridiagonal neighboring values
cannot differ    example  states heuristic value  
children heuristics         occur probabilities                
respectively  see column     contrast  matrix  b  tridiagonal  column   
example  see    time states heuristic value   children
heuristic values   
      richer models
ida  expands node  eliminates children operator pruning 
example  state spaces undirected operators  using studies 
parent node would generated among nodes children ida  would immediately
prune away  distribution p v vp   take account  order take
consideration necessary extend context conditional probability include
heuristic value parent node expanded  we refer parent node
gp   denote p v vp  vgp   call   step model conditions
information ancestors two steps away  p v vp  vgp   gives probability
node heuristic value equal v generated node expanded
heuristic value vp parent node expanded heuristic value
vgp   estimated sampling way done estimate p v vp    except
sample generates random state  gp  neighbors 
neighbors except eliminated operator pruning  naturally  results
sampling   step model stored three dimensional array 
context conditional distribution extended ways well 
sliding tile puzzles  kre conditions overall distribution type state
expanded  type indicates blank corner  edge  interior
location  experiments sliding tile puzzle below  extend p v vp  vgp  
type information  p v  t vp   tp  vgp   tgp   gives probability node type
heuristic value equal v generated node expanded heuristic
value vp type tp expanded nodes parent heuristic value vgp type tgp  
    new prediction formula  cdp  conditional distribution prediction 
section use conditional distributions described develop cdp  alternative kre formula predicting number nodes ida  expand
given heuristic  ida  threshold  set start states  shown experimentally  new formula cdp overcomes limitations kre works well inconsistent
heuristics set start states arbitrary ida  threshold 
overall approach follows  define ni  s  d  v  number nodes
ida  generate level heuristic value equal v start state
ida  threshold 
pdi given ni  s  d  v   number nodes ida  expand level
threshold v   ni  s  d  v   and  n  s  d   total number nodes expanded
complete iteration ida  threshold levels  quantity ultimately
  

fizahavi  felner  burch    holte

p p
interested in  di   di
v   ni  s  d  v   summations v runs
nodes heuristic values range          i  expanded level i 
ni  s  d  v  could calculated exactly  formula would calculate n  s  d  exactly
whether given heuristic consistent not  however  general method efficiently calculating ni  s  d  v  exactly  instead  ni  s  d  v  estimated recursively
ni   s  d  v  conditional distribution  exact details depend conditional
model used given subsections follow  use ni  s  d  v 
denote approximation ni  s  d  v   section       describe conditions
calculation is  fact  exact  therefore produces perfect predictions n  s  d  
general case predictions may perfect estimates 
present time analytical tools estimating accuracy show
experimentally  estimates often accurate 
    prediction using basic   step model
basic   step conditional distribution p v vp   used  ni  s  d  v  estimated
recursively follows 
d i  

ni  s  d  v  ni  s  d  v   

x

ni   s  d  vp   bvp p v vp  

   

vp   

bvp average branching factor nodes heuristic value vp   estimated
sampling process estimates conditional distribution   reasoning
behind equation ni   s  d  vp  bvp total number children ida  generates
via nodes expands level   heuristic value equal vp   multiplied
p v vp   get expected number children heuristic value v  nodes
level i  expanded heuristic value less equal  i    
hence summation includes vp values range           i      restricting
vp less equal  i    every recursive application formula 
ensure  even inconsistent heuristics  node counted level
ancestors expanded ida   base case recursion  n   s  d  v    
v   h s    values v 
based this  number nodes expanded ida  given start state s  threshold d 
particular heuristic predicted follows 
cdp   s  d   

x
di
x

ni  s  d  v 

   

i   v  

set  s  start states given instead one start state  calculation
identical except base case recursion defined using start states
s  is  define n   s  d  v  equal k k states heuristic
value v  rest formula remains  with substituted everywhere  
   general case equation branching factor depends context defines conditional distribution  since   step model  context heuristic value v  formally
allow branching factor depend it  practice  branching factor usually
heuristic values 

  

fipredicting performance ida  using conditional distributions

    prediction using richer models
  step conditional distribution p v vp   vgp   used  define ni  s  d  v  vp  
number nodes ida  generate level heuristic value equal v
nodes level   heuristic value vp start state ida 
threshold  ni  s  d  v  vp   estimated recursively follows 
d i  

ni  s  d  v  vp   ni  s  d  v  vp    

x

ni   s  d  vp   vgp   bvp  vgp p v vp   vgp  

   

vgp   

bvp  vgp average branching factor nodes heuristic value vp parent
heuristic value vgp   base case   step model level    level   
n   s  d  v  vp     vp    h s   number children start state
heuristic value v vp   h s   based   step model number nodes expanded
ida  given start state s  threshold d  particular heuristic predicted
follows 
cdp   s  d   

x
di d i  
x
x
i   v  

ni  s  d  v  vp  

   

vp   

set start states instead one  base case n   s  d  v  vp   
number children heuristic value v states heuristic value vp  
analogous definitions ni cdp used definition context 
example  using   step model set state types  one would define ni  s  d  v  t 
number nodes type ida  generate level heuristic value
equal v  estimate recursively follows 
d i  

ni  s  d  v  t  ni  s  d  v  t   

x

x

vp   

tp

ni   s  d  vp   tp   bvp  tp p v  t vp   tp  

   

based model number nodes expanded ida  given start state s  threshold
d  particular heuristic predicted follows 
cdp s  d   

x
di x
x

ni  s  d  v  t 

    

i   v   tt

    prediction accuracy
accuracy predictions arbitrarily good arbitrarily bad depending
accuracy conditional model used  following subsections examine
extreme cases 
principle  extending context never decrease accuracy predictions
additional information taken account  however  conditional model
estimated sampling  extended context result poorer predictions
fewer samples context  explanation   step model
accurate   step model rows h     h     table   section    
below 
  

fizahavi  felner  burch    holte

      perfect predictions
consider definition context includes heuristic value node expanded  vp contexts defined above  contains sufficient information allow
operator pruning correctly accounted for  use notation  v  x  refer
specific instance context  v heuristic value node expanded
x instantiation information context  e g   state type
information last model above   general form predictive model
context
cdp s  d   

x
di
x
i   v  

x

ni  s  d  v  x 

    

x
 v  x 
instance
context


d i  

ni  s  d  v  x   

x

x

vp   

xp
 vp   xp  
instance
context

ni   s  d  vp   xp   bvp  xp p v  x vp   xp  

    

bvp  xp average branching factor  operator pruning  nodes satisfying
conditions context  vp   xp    p v  x vp   xp   average nodes n satisfying
conditions context  vp   xp   pn  v  x   percentage ns children  operator
pruning  satisfy conditions context  v  x  
if  every context  vp   xp    nodes n satisfying conditions defined  vp   xp  
exactly branching factor bvp  xp exactly value pn  v  x 
contexts  v  x   simple proof induction starting correctness base cases 
n   s  d  v  x   shows ni  s  d  v  x    ni  s  d  v  x  i  i e   prediction
method correctly calculates exactly many nodes satisfy conditions
context every level search tree  follows cdp s  d  exactly
number nodes ida  expand given start state ida  threshold d 
practical setting predictions   step model guaranteed
perfect reasoning following conditions hold 
   heuristic defined exact distance goal abstract state space 
case single pattern database used 
   two states  s    s    map abstract state x set
operators  op         opk   apply them 
   states s  s  map abstract state x  operators op  op         opk  
apply s  s    s  child op s    s  child op s    map abstract
state  op x  
  

fipredicting performance ida  using conditional distributions

define context node heuristic value abstract state maps 
condition     guarantees every context  v  x   nodes satisfying conditions
 v  x  exactly branching factor bv x   true nodes n 
n  satisfy conditions context  v  x   map abstract state
x  condition     requires exactly set operators apply
both  conditions         together guarantee every context  vp   xp    nodes
satisfying conditions  vp   xp   exactly value pn  v  x  v x 
true nodes n  n  satisfy conditions context  vp   xp   
map abstract state xp   set operators applies both  operator
op creates child that  cases  maps specific abstract state  op xp    therefore
percentage children map particular abstract state
n  n   
straightforward implementation prediction method setting associates
counter abstract state  initialized number start states map
abstract state  counter abstract state x updated value
   d  adding it  operator op  current value counter
abstract state op y    x  algorithm computational complexity
o d  a       a  number abstract states effective branching
factor abstract space  complexity depends linearly d  contrast
typically exponential dependency number nodes ida  expand 
sufficiently large prediction arbitrarily faster compute search
itself  example  pdb    puzzle based positions   tiles
blank  roughly   billion abstract states   prediction      start states     
takes    time required execute search 
exact prediction setting two potential uses  first determine
searching single pdb feasible not  example  calculation might show
even first iteration ida   with threshold h start   take
year complete  second use prediction compare actual performance
alternative method executed set start states  e g  taking maximum
set pdbs  performance using single pdb without actually execute
ida  search single pdb 
      poor predictions
predictions made conditional model extremely inaccurate distribution
heuristic values independent information supplied context  illustrate
example based  x  sliding tile puzzle two heuristics  pdb based
locations tiles     blank  heuristic returns   every state 
given state blank goal position  position even number
moves goal position  heuristic value state taken pdb 
states heuristic value    search tree  heuristic used level
therefore opposite one used level   
  step model situation clearly hopeless predicting heuristic
distribution levels pdb used sufficiently large
distribution level converges unconditional distribution 
  

fizahavi  felner  burch    holte

hope   step model could make reasonably accurate predictions
pdb  considered itself  defines consistent heuristic therefore distribution heuristic values nodes children somewhat correlated heuristic
value nodes parent 
tested using  x  sliding tile puzzle  small enough could
build   step model using states state space error introduced
sampling process  test prediction accuracy model generated
       solvable states random and  explained detail next section  used
state start state combination ida  threshold ida  would actually
executed iteration threshold given state start state  means
different number start states might used value d  num column
table   indicates many start states used value  first column 
included table results       start states used 
ida  column shows average number nodes expanded ida  start
states used prediction column shows number predicted
  step model  ratio column prediction divided ida   one clearly see
improvement predictions increases  even deepest depth
sample provided       start states  prediction factor   smaller
true value  course  using constant heuristic value   alternate levels
something one would practice  obtained similar results  essentially
reason     puzzle switching  one level next  pattern
database based tiles     pattern database based tiles       see section      


  
  
  
  
  
  
  
  
  
  
  
  
  

ida 
     
     
     
     
     
     
      
      
      
      
      
      
       

cdp 
prediction ratio
  
    
  
    
  
    
   
    
   
    
   
    
   
    
     
    
     
    
     
    
     
    
      
    
      
    

num
     
     
     
      
      
      
      
      
      
      
      
     
     

table     x  sliding tile puzzle  alternating good heuristic   

   experimental setup
next two sections describe experimental results obtained running ida 
comparing number nodes expanded number predicted kre
  

fipredicting performance ida  using conditional distributions

cdp  experimented two application domains used kre  namely  rubiks
cube  section    sliding tile puzzle  section     domain evaluated
accuracy two formulas  consistent inconsistent heuristics  set
solvable start states generated random 
experiments reported here  start states used given ida  threshold
subject special condition  state used start state combination
threshold ida  actually performs iteration threshold start
state  example  would use start state      distance   
goal h s        addition  sliding tile puzzle  start state would
used ida  threshold h s  different parity  contrast 
experiments kre paper restrict choice start states way 
start states used every ida  threshold  
difference start states chosen large impact number
nodes ida  expands  table   illustrates    puzzle using manhattan
distance heuristic ida  threshold  first column         nodes
column unrestricted shows number nodes ida  expanded average
       randomly generated solvable start states  values column close
agreement corresponding results table   kre paper  korf et al         
number column shows many start states satisfy additional condition 
remove start states violate condition  ida  expands substantially fewer
nodes average  shown nodes column restricted  difference
increases increases       almost order magnitude difference
number nodes expanded two settings  difference needs kept
mind making comparisons experimental results reported kre
papers 


  
  
  
  
  
  
  
  

unrestricted
nodes
       
         
         
         
         
          
          
          

restricted
number
nodes
      
       
      
       
      
       
                
                
                
                
                

table       puzzle manhattan distance  effect nodes expanded start states
randomly chosen subject condition 

  

fizahavi  felner  burch    holte

   experimental results rubiks cube
begin rubiks cube experiments  heuristic used   edge pdb
heuristic described  section         experimented  consistent  regular
lookup  inconsistent  random symmetry dual lookups pdb 
cdp formula  two models used  cdp  cdp    denote   step   step
models  respectively 
outlined section        conditional distribution tables built generating one billion states  each generated applying     random moves goal state  
computing neighbors  incorporating heuristic information matrix representing one step model  two step model generated
grandchildren used heuristic information 
addition  order get reliable samples added following two procedures 
generating children grandchildren sampling used pruning
techniques based operator ordering used main search  see
description section         is  use sequence operators
would generated main search  done looking random
walk led initial state using last operator random walk
basis operator pruning 
order get reliable sample need entry table sufficiently
sampled  entries table low frequency  example  states
heuristic value   rare even sample billion states causing
table   row generated small sample  therefore  enriched
entries artificially creating random states heuristic value   
under sampled entries sampled similar way  one technique  example 
creating  with high probability  random state heuristic value x 
perform random walk length x random state heuristic value   
    rubiks cube consistent heuristics
table   compares kre cdp  cdp    accuracy three prediction methods
compared using regular lookups   edge pdb  results row
averages set      random states  row presents results ida  iteration


 
 
  
  
  
  

ida 
   
     
      
       
         
           

kre
prediction
   
     
      
       
         
           

ratio
    
    
    
    
    
    

cdp 
prediction ratio
   
    
     
    
      
    
       
    
         
    
          
    

cdp 
prediction ratio
   
    
     
    
      
    
       
    
         
    
           
    

table    rubiks cube consistent heuristic 
  

fipredicting performance ida  using conditional distributions

different threshold  d   given first column  second column  ida   presents
actual number nodes expanded ida  threshold  next columns report
predictions accuracy  ratio  prediction defined ratio
predicted number actual number expanded nodes  reported
kre paper  kre formula found accurate consistent heuristic
averaged large set random start states  table shows cdp  reasonably
accurate systematically underestimates one step model consider
nodes parent included among children  elaborate below 
cdp  predictions accurate  slightly accurate kres 
    rubiks cube start states specific heuristic values
table    presented  section         related discussion  show kre might
make accurate predictions start states restricted specific heuristic
value h  particular example shown  ida  threshold     kre always predict
value              exact value depends specific set start states used
ida  threshold    sufficiently large number nodes
independent start states  table   extends table   include predictions cdp 
shows versions cdp substantially outperform kre particular set
start states 

h
 
 
 
 
 

ida 
          
          
          
         
         

kre
prediction ratio
         
    
         
    
         
    
         
    
         
    

cdp 
prediction ratio
          
    
          
    
         
    
         
    
         
    

cdp 
prediction ratio
          
    
          
    
         
    
         
    
         
    

table    results different start state heuristic values  h  regular pdb
ida  threshold      

    rubiks cube inconsistent heuristics
experiments repeated inconsistent heuristics  dual randomsymmetry lookups performed   edge pdb instead regular lookup  thereby
creating inconsistent heuristic  discussed section        kre produces
prediction heuristics  consistent inconsistent  derived single pdb
overestimates inconsistent heuristics  table   shows cdp  extremely accurate 
prediction always within    actual number nodes expanded 
  step model used cdp  systematically underestimates actual number
nodes expanded regular dual lookups  see regular lookup table  
dual lookup table     understand why  consider happens node
right side figure   expanded  generates two children  node n  assuming
  

fizahavi  felner  burch    holte

kre
prediction



ida 

 
 
  
  
  
  

  
   
     
      
         
          

 
 
  
  
  
  

  
   
     
      
       
          

cdp 
ratio prediction ratio
dual
   
    
  
    
     
    
   
    
      
    
     
    
       
    
      
    
         
    
       
    
           
               
    
random symmetry
   
    
  
    
     
    
   
    
      
    
     
    
       
    
      
    
         
    
       
    
           
               
    

cdp 
prediction ratio
  
   
     
      
         
          

    
    
    
    
    
    

  
   
     
      
       
          

    
    
    
    
    
    

table    rubiks cube dual  random symmetry  inconsistent  heuristics
operators inverses case rubiks cube  copy parent r  shown ms
left child figure     child   levels deeper r therefore f  value
  greater rs  ida  threshold    child potential node
  step model conclude generate potential child probability
     whereas fact children remain operator pruning potential
nodes 

  r
 
 

  n

figure      step model may underestimate
reason   step model underestimate number nodes expanded
random symmetry lookups done child copy r constrained
heuristic value r different symmetries could chosen
different occurrences r  childs f  value correlation f  value r
explanation cdp  underestimates apply 
fact  different copies state uncorrelated h values effect operator
pruning needs taken account reduces number children 
done well within   step model calculating branching factor 
may advantages using wider context   step model results
random symmetry heuristic show minor case 
  

fipredicting performance ida  using conditional distributions

   experimental results   sliding tile puzzle
kre experiments sliding tile puzzle  three state types used  based
whether blank corner  edge  interior location  used state types
experiments used exact recurrence equations n  s  v  d  t  type dependent
version kre formula  heuristic used manhattan distance  md   experimented   step cdp includes type system recurrence equations 
results   step cdp included performed poorly early versions experiments 
  puzzle conditional distribution p  v  t vp   tp  vgp   tgp   needed cdp 
typed unconditional distribution p  v  t  needed type dependent kre formula
computed enumerating states   puzzle reachable goal 
   puzzle  possible exhaustive enumeration entire state
space conditional distributions estimated generating ten billion reachable
states random  uniform random sample used estimate p  v  t  kre 
state sample used gp sampling method described section      
p  v  t vp   tp  vgp   tgp    latter  however  basic sampling method extended
even processing ten billion gp states entries   dimensional
matrix missing sampled sufficiently  correct this  generate
gp  children  grandchildren update matrix accordingly  check
matrix already contains data gps great grandchildren  generate
gps great grandchildren update corresponding entries matrix  continues
long encounter contexts never seen before  introduces small
statistical bias sample  guarantees sample contains required
data 

h

 states

  
  
  
  
  

      
      
      
      
     

  
  
  
  
  
  

     
     
     
     
     
     

kre
ida 
prediction
ratio
  puzzle depth   
     
     
    
     
     
    
   
     
    
   
     
    
   
     
    
   puzzle depth   
                      
    
                      
     
                      
     
                     
     
                            
                          

cdp 
prediction ratio
     
     
   
   
  

    
    
    
    
    

           
          
          
         
         
       

    
    
    
    
    
    

table    sliding tile puzzles consistent heuristic  md  
prediction results kre cdp        puzzles shown table  
format above    puzzle predictions made ida  threshold
  

fizahavi  felner  burch    holte

   row corresponds group   puzzle states heuristic
value h  shown first column  ida  would actually used threshold
    second column gives number states group  clearly  shown
ida  column  states higher initial heuristic values ida  expanded smaller
number nodes  trend reflected kre predictions since kre take
h account  kre difference attributes different rows
different type distribution given group  thus  predicted number expanded
nodes kre similar rows  around         cdp formula takes heuristic
value start state account able predict number expanded nodes
much better kre  bottom part table   show results    puzzle
ida  threshold     similar tendencies observed 
    inconsistent heuristics sliding tile puzzle
next experiment inconsistent heuristic   puzzle  defined two pdbs 
one based location blank tiles     based location
blank tiles     create inconsistent heuristic  one pdbs consulted
regular lookup  choice pdb made systematically  randomly  based
position blank  different occurrences state guaranteed
lookup neighboring states guaranteed consult different pdbs
causes inconsistency  results presented table    variety ida  thresholds 
threshold num column indicates many start states used 
results show cdps predictions reasonably accurate  much accurate
kres overestimate factor    


  
  
  
  
  
  
  
  
  
  
  
  

num
      
      
      
      
      
      
      
      
      
     
     
   

ida 
    
    
    
    
    
    
     
     
     
     
     
       

kre
prediction
    
     
     
     
     
       
       
       
       
        
        
        

ratio
    
    
    
     
     
     
     
     
     
     
     
     

cdp 
prediction ratio
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
    
     
    
     
    
     
    
       
    

table     inconsistent heuristic   puzzle 
similar experiments conducted    puzzle  here  first pdb based
location blank tiles     based location
blank tiles      table    shows results ida  thresholds        recall
median solution length puzzle      numbers shown averages
  

fipredicting performance ida  using conditional distributions

       start states  cdp predictions    puzzle considerably worse
  puzzle  kre predictions degraded much more  reason
inaccuracy predictions discussed section        much accurate
predictions produced context extended include heuristic value
pattern databases  one search algorithm actually consults 


  
  
  
  
  
  
  
  

ida 
         
         
         
           
           
           
           
           

kre
prediction
             
             
               
               
               
                
                
                

ratio
       
       
       
       
       
       
       
       

cdp 
prediction
        
         
         
         
           
           
           
            

ratio
     
     
     
     
     
     
     
     

table     inconsistent heuristic    puzzle 

   accurate predictions single start states
seen cdp works well base cases recursive calculation
ni  s  d  v  seeded large set start states  matter heuristic values
distributed  however  actual number expanded nodes specific single start
state deviate number predicted cdp  conditional distribution reflects
expected values nodes share context  single start state
interest might behave differently average state context 
consider rubiks cube state heuristic value    cdp  predicts ida 
expand             state ida  threshold     table   shows
average  over        start states heuristic value                states expanded 
examining results individual start states showed actual number
expanded nodes ranged                          nodes 
order predict number expanded nodes single start state propose
following enhancement cdp  suppose want predict number expanded
nodes ida  threshold start state s  first  perform small initial search
depth r  use states depth r seed base cases cdp formula
compute formula ida  threshold r  cause larger set nodes
used calculating ni  s  d  v   thereby improving accuracy cdps predictions 
    rubiks cube    edge pdb heuristic
table    shows results four specific rubiks cube states heuristic value    of
regular   edge pdb lookup  ida  threshold set     chose
states least greatest number expanded nodes two states around
median  first column shows actual number nodes ida  expands state 
  

fizahavi  felner  burch    holte

next columns show number expanded nodes predicted enhanced cdp 
formula initial search performed depths  r             clearly 
initial searches give much better predictions original cdp   with r      
predicts             states  initial search depth    predictions
accurate 
h
 
 
 
 

ida 
         
         
         
          

cdp   r   
         
         
         
         

cdp   r   
         
         
         
         

cdp   r   
         
         
         
          

cdp   r   
         
         
         
          

table     single state  d       

    rubiks cube        heuristic
section       presented kre predictions two start states  s    heuristic value
   s     heuristic value     rubiks cube       heuristic 
repeat experiments cdp    tables       show results initial
search depth  r       tables show cdp  able achieve substantially
better predictions kre cases  initial search depth   usually
improved cdp  predictions 

  
  
  
  
  
  
  
  

ida 
      
       
         
          
           
             
              
               

kre
     
      
       
         
          
           
             
               

ratio
    
    
    
    
    
    
    
    

cdp   r   
      
       
         
          
           
             
              
               

ratio
    
    
    
    
    
    
    
    

cdp   r   
      
       
         
          
           
             
              
               

ratio
    
    
    
    
    
    
    
    

table           pdb  single start state s 
    experiments   puzzle   single start states
performed experiments enhanced cdp  formula states   puzzle
 consistent  md heuristic  use term trial refer pair single
start state given ida  threshold d  trials included possible values
start states ida  would actually perform search ida  threshold
d  predictions made trial separately  relative error  predicted actual 
trial calculated  results shown figure    four curves
figure  kre  cdp  enhanced cdp initial search depths  r   
  

fipredicting performance ida  using conditional distributions


  
  
  
  
  
  
  

ida 
     
       
         
          
           
             
               

kre
      
       
         
          
           
             
               

ratio
    
    
    
    
    
    
    

cdp   r   
     
       
         
          
           
             
               

ratio
    
    
    
    
    
    
    

cdp   r   
     
       
         
          
           
             
               

ratio
    
    
    
    
    
    
    

table           pdb  single start state s  

cumulative percentage

   
  
  
  
kre
cdp 
cdp   radius   
cdp   radius    

  
 
 

 

 

 

 

 

 

 

 

 

  

predicted   actual

figure    relative error   puzzle
    x axis relative error  y axis percentage trials
prediction relative error x less  example  y value     kre
curve x       means kre underestimated factor      
trials  rightmost point kre plot  x              indicates   
trials kres prediction    times actual number nodes expanded 
contrast cdp much larger percentage highly accurate predictions     
predictions within factor two actual number nodes expanded  figure
clearly shows advantage using enhanced cdp  initial search depth
        trials predictions within     correct number 

   performance range given unconditional distribution
experiments paper used   edge pdb rubiks cube illustrated fact number nodes ida  expands given pdb vary tremendously
depending pdb used  zahavi et al          see clearly  middle
three columns table    show data already seen tables      namely 
number nodes ida  expands   edge pdb used regular manner 
  

fizahavi  felner  burch    holte

dual lookups  random symmetry lookups  ida  expands ten times fewer
nodes   edge pdb consulted random symmetry lookups
consulted normal way 
raises intriguing question range performance achieved
varying conditional distribution unconditional distribution fixed 

 
 
  
  
  
  
correlation

cdp
   
     
      
       
         
           

regular
   
     
      
       
         
           
     

dual
  
   
     
      
         
          
     

random symmetry
  
   
     
      
       
          
     

cdp
  
   
     
      
       
         

table     range ida  performace   edge rubiks cube pdb

    upper limit
upper extreme  results nodes expanded  occurs consistent
heuristic used  ida  expands potential nodes  maximum
number nodes expanded conditional distribution parent
every potential node level potential node level    exact calculation
number potential nodes brute force tree therefore theoretical upper bound
number nodes ida  expand given unconditional distribution 
already discussed  one way estimate number potential nodes use
kre formula  estimate upper bound number nodes ida  could
expand denoted cdp table    
alternatively  number potential nodes approximated cdp formula
given conditional distribution  consider equation    summation consider
possible vp values     d i    nodes potential nodes level i   thus
nodes expanded ida  level   nodes generate
children level i   now  lets substitute vp     hmax    consider
nodes level    even ones potential nodes  using
summation calculate number nodes heuristic v level even ones
actually generated ida   because parents potential nodes  i e 
vp    i     shown equation    
ni  s  v   

hx
max

ni   s  vp   bvp p v vp  

    

vp   

   note heuristic consistent vp values  v    v v      need considered
summation nodes values vp  smaller v   larger v      cannot
generate children heuristic value v 

  

fipredicting performance ida  using conditional distributions

using general prediction equation get 

cdp  

x
di
x

ni  s  v 

    

i   v  

gives alternative method approximate number potential nodes 
methods approximate upper bound  practice  however  possible
number expanded nodes slightly exceed approximate bound due noise
small errors sampling calculations 
    lower limit
consistent heuristics values neighboring states highly correlated 
extreme cases correlation heuristic values neighboring
nodes  is  heuristic value child node statistically independent heuristic
value parent  means regardless parents heuristic value vp   heuristic
values children distributed according unconditional heuristic distribution 
i e   p v vp     p v  
motivation using estimated lower bound number nodes ida 
could expand given unconditional distribution empirical observation
number nodes ida  expands decreases correlation parents heuristic
value childrens heuristic values decreases 
illustrated last row three middle columns table     shows
correlation heuristic values neighboring states different types
lookups done   edge pdb  calculated using pearsons correlation coefficient 
defined n pairs x  values according following equation

correlationxy

pn
pn
xi yi i   xi i   yi
p pn
  p pn
pn
pn
n i   x i   i   xi    n i   yi    i   yi   
n

pn

i  

    

order calculate correlation          random pairs  xi  yi   neighboring states
generated  heuristic values computed used equation     bottom
row table    shows number nodes expanded decreases correlation
neighboring heuristic values decreases  leads us suggest number
nodes expanded reach minimum correlation zero  
estimated lower bound calculated using cdp formula p v vp     p v  
denote cdp    step model would calculated using following
equations 
   theory  possible heuristic negative correlation parents heuristic value
childrens heuristic values  i e   parents low heuristic values could tend children
large heuristic values vice versa  believe unlikely occur practice 

  

fizahavi  felner  burch    holte

d i  

ni  s  d  v   

x

ni   s  d  vp   bvp p v 

    

vp   

cdp  

di
x
x

ni  s  d  v 

    

i   v  

seen comparing rightmost two columns table     randomsymmetry use   edge pdb within factor two estimated minimum
possible number nodes expanded pdb  suggests substantially
improve upon performance one would use different pdb 
table    shows estimated upper lower bounds ida s performance  range
ida  thresholds  three different pdbs rubiks cube  bounds calculated
using        random start states  table shows that  according estimates  inconsistent heuristics based   edge pdb outperform consistent heuristics based
  edge pdb probably cannot outperform consistent heuristics based   edge
pdb since estimated lower bound   edge pdb larger estimated upper
bound   edge pdb 


 
 
  
  
  
  

  edge pdb
cdp
cdp
     
   
      
     
       
      
         
       
          
         
                        

  edge pdb
cdp
cdp
   
  
     
   
      
     
       
      
         
       
                     

  edge pdb
cdp
cdp
  
  
   
  
     
   
      
     
       
      
                  

table     estimated bounds performance three rubiks cube pdbs 

    predicting performance ida  bpmx
inconsistent heuristic  heuristic value child much larger
parent  happens state space undirected edges  childs heuristic
value propagated back parent  causes parents f  value exceed
ida  threshold entire search subtree rooted parent pruned without
generating remaining children  propagation technique called bidirectional
pathmax  bpmx   felner et al         zahavi et al          shown effective
reducing search effort pruning subtrees would otherwise explored 
show modify cdp handle bpmx propagation  since bpmx applies
state spaces undirected edges  discussion section limited spaces 
  

fipredicting performance ida  using conditional distributions

     bidirectional pathmax  bpmx 
traditional pathmax  mero        propagates heuristic values parent children 
applied state space  admissibility preserved subtracting cost
connecting edge heuristic value  basic insight bidirectional pathmax
 bpmx  edges undirected heuristic values propagate neighbors 
includes child node parent  process continue distance
direction  bpmx illustrated figure    left side figure shows
inconsistent heuristic values node two children  consider left child
heuristic value    since value admissible edges example cost
one  immediate neighbors least   moves away goal  neighbors
least   moves away  on  left child generated  heuristic value
 h      propagate parent right child  preserve
admissibility  propagation along path reduces h cost traversing path 
results h     root h     right child  using ida  
bidirectional propagation may cause many nodes pruned would otherwise
expanded  example  suppose current ida  threshold    without propagation
h left child  root node  f   g   h              right child
 f   g   h              would expanded  using propagation  left child
increase parents h value    resulting search node abandoned
without even generating right child 

 

 
 

 

 

 

figure    propagation values inconsistent heuristics

     cdp overestimates bpmx applied
inconsistent heuristic used bpmx applied  cdp overestimate
number expanded nodes count nodes subtrees bpmx
prunes  section      defined ni  s  d  v  number nodes ida 
generate level heuristic value exactly equal v start state
ida  threshold  formula given estimating ni  s  d  v   equation    was 
d i  

ni  s  d  v   

x

ni   s  d  vp   bvp p v vp  

vp   

calculating ni  s  d  v  ni   s  d  vp   formula assumes node
expanded children generated  ni   s  d  vp   multiplied
branching factor bvp   bpmx applied  child may prune parent
rest children generated  happens  assumption children
expanded nodes generated would wrong  example  without bpmx 
  

fizahavi  felner  burch    holte

expanding root left tree figure   children generated child
right expanded  indeed cdp count two nodes case  bpmx
applied root expanded child right generated  and therefore
expanded   thus  cdp  counts two nodes  overestimating number
nodes expanded  following section modify equation correct this 
     new formula estimating ni  s  d  v 
let n node currently expanded  assume n b children
consider order generated  call order generation order 
note bpmx applied  probability child generated decreases
move generation order  children appear late order
larger chance generated since previous children might
cause bpmx cutoff  let pbx  l  probability child location l order
generated even bpmx applied  definition extend equation  
follows 
d i   bvp

ni  s  d  v   

x x
 ni   s  d  vp   pbx  l  p v vp   
vp   

    

l  

ni  s  d  v  calculated similar way equation    except way count
total number children ida  generates via nodes expands level  
heuristic value equal vp   idea iterate possible locations
generation order calculate probability node location l generated 
practice  however  actual context pbx variables besides location l 
includes ida  threshold  d   depth parent  i    heuristic
value parent  vp    thus get final formula 
d i   bvp

ni  s  d  v   

x x
 ni   s  d  vp   pbx  l  d     vp   p v vp   
vp   

    

l  

exactly equal equation   special case pbx  l      l 
happens bpmx used used consistent heuristic 
     calculating pbx
simplicity  model assumes heuristic value propagated bpmx
one level tree  means state pruned immediate
children descendants deeper levels  make assumption another
reason besides simplicity description  experiments rubiks cube
domains showed indeed almost pruning bpmx caused   level bpmx
propagation  generalized formula deeper bpmx propagations similarly
developed include complicated recursive terms low practical value 
least state spaces heuristics studied 
assume c child n location l generation order  child c
generated n pruned l   children appear c
  

fipredicting performance ida  using conditional distributions

generation order  assume n level threshold d  since n
expanded  h n  i  bpmx h n  increased  and cause bpmx pruning 
child k h k         case  h k    larger i 
used instead h n  ida  decide expand n additional children
generated  therefore  order child c location l generation order
generated  l   predecessors generation order must heuristics less
equal      assuming heuristic value parent v probability

pbx  l  d  i  v     

di  
x

p h v  l 

    

h  

sum probability relevant heuristic value raise sum
power l   since l   children appear c 
     experiments rubiks cube bpmx
repeated experiments rubiks cube   edge pdb bpmx
activated  since bpmx affects inconsistent heuristics  dual random
symmetry heuristics tested  heuristic tested ida  thresholds  
    results  averaged set        random states  presented
table     bpmx columns repeated table    additional columns
show results bpmx  column ida    bpmx presents actual number
expanded nodes using bpmx  bpmx reduces number nodes expanded
    dual     reduction random symmetry  making
unmodified cdp  predictions high amount  cdpbx
  column
shows modifications introduced section greatly improve accuracy 



ida 

 
 
  
  
  
  

  
   
     
      
         
          

 
 
  
  
  
  

  
   
     
      
       
          

bpmx
cdp 

bpmx
ratio ida    bpmx
cdpbx
 
dual
  
    
  
  
   
    
   
   
     
    
     
     
      
    
      
      
         
    
       
       
          
    
                     
random symmetry
  
    
  
  
   
    
   
   
     
    
     
     
      
    
      
      
       
    
       
       
          
    
         
         

ratio
    
    
    
    
    
    
    
    
    
    
    
    

table     bpmx rubiks cube   dual   random symmetry

  

fizahavi  felner  burch    holte

    related work
previous work predicting a  ida s performance properties heuristic falls
two main camps  first bases analysis accuracy heuristic 
second bases analysis  done  distribution heuristic values 
next two subsections survey approaches 
     analysis based heuristics accuracy
one common approach characterize heuristic focusing error heuristic
value  deviation optimal cost   first analysis line  focusing effect
errors performance search algorithms  done pohl         many
papers line appeared since  pohl        gaschnig        huyn  dechter   
pearl        karp   pearl        pearl        chenoweth   davis        mcdiarmid  
provan        sen  bagchi    zhang        dinh  russell    su        helmert   roger 
      
works usually assume abstract model space tree every node
exactly b children aim provide asymptotic estimation number expanded
nodes  mainly differ model assumptions  e g  binary non binary trees 
case results derived  worst case average case   worst case analysis
showed correlation
heuristic errors search complexity 
 h n h  n  
found relative error 
  constant  search complexity
h  n 
exponential  in length solution path  absolute error   h n  h  n   
bounded constant search complexity linear  pohl        gaschnig         three
main assumptions used pohl        branching factor assumed
constant across inputs  single goal state transpositions
search space  assumptions hold  case many standard
benchmark domains planning  general search algorithms a  explore exponential
number states even assumption almost perfect heuristic  i e   heuristic
whose error bounded small additive constant   helmert   roger        
since difficult guarantee precise bounds magnitude errors produced
given heuristic  probabilistic characterization magnitudes suggested  huyn
et al         pearl         heuristics modeled random variables  rvs   relative
errors assumed independent identically distributed  iid model   model 
attaining average polynomial a  complexity proved essentially equivalent
requiring values h n  clustered near h  n  allowed deviation
logarithmic function h  n  itself 
additional research line conducted chenoweth davis         instead
using iid model  suggested using nc model  places constraints
errors h  model heuristic defined according heuristic values grow respect distance goal  according error 
predicted a  complexity polynomial whenever values h n 
logarithmicaly clustered near h  n     h  n    arbitrary  non negative 
non decreasing function  heuristics whose values grow slower distance
goal cause exponential complexity  studies nc model showed replacing
  

fipredicting performance ida  using conditional distributions

heuristic h wh w   often change a  complexity exponential
polynomial 
works focused tree searches  contrast  sen et al         presented
general technique extending analysis average case performance a 
search spaces trees search spaces directed acyclic graphs  analytical results show expected complexity change exponential polynomial
heuristic estimates nodes become accurate restrictions placed
cost matrix  recent research line  analyzing complexity a  algorithm
presented dinh et al          research presented worst average case analysis performance a  approximately accurate heuristics  search problems
multiple solutions  bounds presented paper proved dependent
heuristic accuracy distribution solutions 
     analysis based heuristic distribution
discussed outset paper  kre suggested alternative approach calculating time complexity ida  multiple goal spaces  korf   reid        korf
et al          arguing heuristic accuracy difficult obtain  suggested
deriving analysis unconditional distribution heuristic values  easy
determine least approximately  came method deriving
closed form formula ni   number nodes level brute force search tree 
method later formalized  edelkamp      b   unlike work described
previous subsection  provides big o complexity analysis  kres aim  and ours 
exactly predict number nodes ida  expand 
kre correctly point that  operators cost  ni must
defined number nodes reached path cost i  opposed
number nodes edges start state  calculation ni
general setting studied detail ruml  slightly different context  ruml 
       solution involves using conditional distribution edge costs bears
strong resemblance conditional distribution heuristic values 
based work kre insight pdb heuristics correlation
size pdb heuristic value distribution  new analysis limited
pdb heuristics done  korf        breyer   korf         prediction achieved
based branching factor problem size pdb without knowing
actual heuristic distribution  order derive heuristic distribution
size pdb assumed forward backward branching factors
abstract space equal abstract space negligible number cycles 
since second assumption usually realistic model underestimates number
expanded nodes 
kre formula developed predict performance ida  algorithm 
general approach applied a  long appropriate modifications made
computations ni p  v   korf et al         holte   hernadvolgyi        breyer
  korf         challenge accounting effect a s pruning search
tree generates state previously reached path smaller equal
   heuristic  approximation     h  s  h s        h  s  states search space 

  

fizahavi  felner  burch    holte

cost  particularly challenging heuristic inconsistent  case
first time a  generates state guaranteed reached via least cost
path  state occur a s search tree  indeed  worst case 
every state a  enumerate paths state decreasing order cost 
thereby generating exactly search tree ida   martelli         general 
a s pruning reduce ni   especially large i  ways may hard capture
small set recurrence equations  heuristic distribution a s entire search
tree  taken maximum depth  is  consistent heuristics  overall distribution  korf
et al         since state occurs exactly a s search tree  as observed 
true inconsistent heuristics   imply overall distribution
used good effect level by level basis  use kre formula result
accurate predictions a s performance    puzzle two different consistent
heuristics used together exact calculation ni a s search tree  breyer
  korf        

    conclusions future work
historically  heuristics characterized average  kre introduced idea
characterizing heuristics unconditional heuristic distribution presented
formula predict number nodes expanded one iteration ida  based
unconditional heuristic distribution  work presented paper takes another
step along line  conditional distribution introduced  prediction
formula cdp based it  advance understanding properties heuristic affect
performance ida  
cdp method advances kre improving predictions shallow depths 
wider range sets start states  inconsistent heuristics  shown
use make accurate prediction single start state ida  search
uses bpmx heuristic value propagation 
course  sophisticated methods  preprocessing needed
special care must taken gathering data order get reliable sample 
much easier calculate average heuristic calculate   dimensional
matrix  hand  latter approach better characterizes heuristic
enables generating accurate predictions larger variety circumstances 
future work address number issues  yet clear attributes make
best context prediction  influenced choice heuristic
attributes specific domain  larger contexts  more parameters  probably provide better prediction cost pre processing  tradeoff needs
studied  another direction aim extend analysis approach predict
performance search algorithms a  

    acknowledgments
research supported grant number               israeli science
foundation  isf  ariel felner  robert holte neil burch gratefully acknowledge
ongoing support work canadas natural sciences engineering research
  

fipredicting performance ida  using conditional distributions

council  nserc  albertas informatics circle research excellence  icore  
code rubiks cube paper based implementation richard e  korf
used seminal work domain korf         thank anonymous reviewer
encouraged us widen experimental results better explain results
kre relation results  his her comments clearly improved strength
paper  thanks sandra zilles careful checking details section   

references
breyer  t     korf  r          recent results analyzing performance heuristic
search  proceedings first international workshop search artificial
intelligence robotics  held conjunction aaai   pp       
chenoweth  s  v     davis  h  w          high performance a  search using rapidly
growing heuristics  proceedings twelfth international joint conference
artificial intelligence  ijcai      pp         
culberson  j  c     schaeffer  j          efficiently searching    puzzle  tech  rep 
       department computer science  university alberta 
culberson  j  c     schaeffer  j          pattern databases  computational intelligence 
               
dinh  h  t   russell  a     su  y          value good advice  complexity
a  search accurate heuristics  proceedings twenty second conference
artificial intelligence  aaai      pp           
edelkamp  s       a   planning pattern databases  proceedings  th european
conference planning  ecp      pp       
edelkamp  s       b   prediction regular search tree growth spectral analysis 
advances artificial intelligence  joint german austrian conference ai 
 ki ogai        pp         
felner  a   korf  r  e     hanan  s          additive pattern database heuristics  journal
artificial intelligence research             
felner  a   korf  r  e   meshulam  r     holte  r  c          compressed pattern databases 
journal artificial intelligence research             
felner  a   zahavi  u   schaeffer  j     holte  r  c          dual lookups pattern
databases  proceedings nineteenth international joint conference artificial intelligence  ijcai      pp         
gaschnig  j          performance measurement analysis certain search algorithms 
ph d  thesis  carnegie mellon university 
hart  p  e   nilsson  n  j     raphael  b          formal basis heuristic determination minimum cost paths  ieee transactions systems science cybernetics 
scc              
helmert  m     roger  g          good almost perfect   proceedings
twenty third conference artificial intelligence  aaai      pp         
  

fizahavi  felner  burch    holte

holte  r  c   felner  a   newton  j   meshulam  r     furcy  d          maximizing
multiple pattern databases speeds heuristic search  artificial intelligence                       
holte  r  c     hernadvolgyi  i  t          steps towards automatic creation search
heuristics  tech  rep  tr       computing science department  university alberta 
huyn  n   dechter  r     pearl  j          probabilistic analysis complexity a  
artificial intelligence                 
karp  r  m     pearl  j          searching optimal path tree random costs 
artificial intelligence                  
korf  r  e          depth first iterative deepening  optimal admissible tree search 
artificial intelligence                
korf  r  e          finding optimal solutions rubiks cube using pattern databases 
proceedings fourteenth conference artificial intelligence  aaai      pp 
       
korf  r  e          analyzing performance pattern database heuristics  proceedings
twenty second conference artificial intelligence  aaai      pp           
korf  r  e     felner  a          disjoint pattern database heuristics  artificial intelligence 
               
korf  r  e     reid  m          complexity analysis admissible heuristic search 
proceedings fifteenth conference artificial intelligence  aaai      pp     
    
korf  r  e   reid  m     edelkamp  s          time complexity iterative deepening a   
artificial intelligence                    
martelli  a          complexity admissible search algorithms  artificial intelligence         
mcdiarmid  c  j  h     provan  g  m          expected cost analysis backtracking
non backtracking algorithms  proceedings twelfth international joint
conference artificial intelligence  ijcai      pp         
mcnaughton  m   lu  p   schaeffer  j     szafron  d          memory efficient a  heuristics
multiple sequence alignment  proceedings eighteenth conference
artificial intelligence  aaai      pp         
mero  l          heuristic search algorithm modifiable estimate  artificial intelligence               
pearl  j          heuristics  intelligent search strategies computer problem solving 
addison   wesley 
pohl  i          heuristic search viewed path finding graph  artificial intelligence 
              
pohl  i          practical theoretical considerations heuristic search algorithms 
machine intelligence          
  

fipredicting performance ida  using conditional distributions

ratner  d     warmuth  m  k          finding shortest solution n n extension
   puzzle intractable  proceedings fifth conference artificial
intelligence  aaai      pp         
ruml  w          adaptive tree search  ph d  thesis  harvard university 
sen  a  k   bagchi  a     zhang  w          average case analysis best first search
two representative directed acyclic graphs  artificial intelligence                    
zahavi  u   felner  a   burch  n     holte  r  c          predicting performance
ida  conditional distributions  proceedings twenty third conference
artificial intelligence  aaai      pp         
zahavi  u   felner  a   holte  r     schaeffer  j          dual search permutation
state spaces  proceedings twenty first conference artificial intelligence
 aaai      pp           
zahavi  u   felner  a   holte  r  c     schaeffer  j          duality permutation state
spaces dual search algorithm  artificial intelligence                    
zahavi  u   felner  a   schaeffer  j     sturtevant  n  r          inconsistent heuristics 
proceedings twenty second conference artificial intelligence  aaai     
pp           
zhou  r     hansen  e  a          space efficient memory based heuristics  proceedings
nineteenth conference artificial intelligence  aaai      pp         

  


