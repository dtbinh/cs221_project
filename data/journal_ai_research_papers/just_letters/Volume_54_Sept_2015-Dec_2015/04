journal artificial intelligence research                  

submitted       published      

practical  integer linear programming model delete free
tasks use heuristic cost optimal planning
tatsuya imai

tatsuya   imai            gmail   com

graduate school information science engineering
tokyo institute technology
tokyo  japan

alex fukunaga

fukunaga   idea   c   u   tokyo   ac   jp

graduate school arts sciences
university tokyo
tokyo  japan

abstract
propose new integer linear programming model delete relaxation cost optimal
planning  straightforward ip delete relaxation impractical  enhanced model
incorporates variable reduction techniques based landmarks  relevance based constraints  dominated action elimination  immediate action application  inverse action constraints  resulting
ip used directly solve delete free planning problems  show ip model
competitive previous state of the art solvers delete free problems  lp relaxation
ip model often good approximation ip  providing approach approximating optimal value delete free task complementary well known lm cut
heuristic  show constraints partially consider delete effects added
ip lp models  embed new ip lp models forward search based planner  show
performance resulting planner standard ipc benchmarks comparable
state of the art cost optimal planning 

   introduction
delete relaxation classical planning problem relaxation planning problem
delete effects eliminated operators  delete relaxation  every proposition
becomes true remains true never becomes false again  delete relaxation
studied extensively classical planning literature used estimate cost
optimal plan original planning problem therefore useful basis heuristic
functions search based domain independent planning algorithms  solution original
planning problem solution delete relaxation  cost optimal solution
delete relaxed problem lower cost original problem relaxation 
every proposition needs established once  thus  optimal cost delete relaxation
planning problem  denoted h    lower bound optimal cost original planning
problem  despite fact computing h  easier solving original planning problem 
computing h  np equivalent  bylander        poses challenging problem 
addition importance basis heuristic functions standard classical planning 
delete relaxation interesting right  problems
naturally modeled delete free problems  i e   problems actions delete
effects   example  minimal seed set problem  problem systems biology seeks
c
    
ai access foundation  rights reserved 

fii mai   f ukunaga

minimal set nutrients necessary organism fully express metabolism 
mapped delete free planning problem  gefen   brafman         another application
relational database query plan generation  robinson  mcilraith    toman        
problem determining join orders modeled delete free problem 
paper  propose new  integer programming  ip  approach computing h     show
model allows fast computation h    linear programming  lp  relaxation
model used successfully heuristic function a   based planner  rest
paper structured follows  begin review previous work delete relaxation
well applications lp planning  introduce ip t      basic integer programming
model delete free planning problem  section    show correctly computes h    since
straightforward ip t     model often intractable useful practice computing
h    develop enhanced model  ipe  t      reduces number variables ip
using techniques landmark based constraints  relevance analysis  section     evaluate
performance basic ip t     enhanced ipe  t     models section    show
ipe  t     competitive state of the art methods computing h   
objective use ip models basis heuristic forward state space
search based planning  solving ip every node search algorithm computationally daunting  section    propose evaluate two relaxations ip t     based ip models 
consider lp t     lpe  t      lp relaxation ip t     ipe  t      show
lp relaxations usually closely approximate h    introduce time relaxation ip
lp models  ipetr  t     lpetr  t      respectively  reduces number variables 
cost sometimes underestimating h    show time relaxations usually closely
approximate h    experimentally compare closely relaxed  delete free models approximate h  lm cut heuristic  helmert   domshlak        show approaches
complementary 
next  section    evaluate utility ip lp models heuristics forwardsearch based planning embedding a   based planner  results show although
lpetr  t     competitive lm cut heuristic overall  domains
lpetr  t     yields state of the art performance  outperforming lm cut 
turn strengthening ip lp models partially considering delete effects
 section     add constraints enforce lower bounds number times action must
used  correspond net change constraints recently proposed pommerening
et al          well action order relaxation van den briel et al          tightened
bound ipc  t   dominates ip t      counting constraints added lp relaxation


lpec  t    well time relaxed lp relaxation lpectr  t    however  additional counting
constraints makes ip lp difficult  a   based planner uses bounds 
tradeoff tighter bound  fewer nodes searched a    time spent per node 
result  find although counting constraints result enhanced performance domains 
significantly degrades performance domains  experimentally compare countingconstraint enhanced models lmc seq lp model pommerening et al        
combines landmark net change constraints  show that  lm cut vs delete free lps 
models complementary 
   paper revises extends work originally reported authors paper presented ecai      imai  
fukunaga         formal results proofs ecai paper included  paper contains
much thorough experimental evaluation models  all experimental data new  

   

fio n p ractical   nteger  l inear p rogramming odel

table   provides overview ip lp models discussed sections     
serves roadmap paper   model  indicate section text
model introduced  constraints used model  variable elimination optimizations
used model  figure   directed graph showing dominance relationships among
optimal costs ip lp models 
finally  clear dominance relationship among lp models  with respect
performance a   based planners use lp models heuristic function  
propose evaluate simple automatic configuration heuristic selects lp use
heuristic a   section     simple automated bound selection significantly boosts performance  resulting ensemble based lp heuristic competitive state of the art heuristics  section    concludes paper summary discussion results directions future work 

   background related work
section first introduces notation planning tasks used rest paper  surveys related work solving delete free planning tasks well previous applications
ip lp domain independent planning 
    preliminary definitions
strips planning task defined   tuple   hp  a  i  gi  p set propositions 
set actions  state represented subset p   applying action state adds
propositions removes propositions state  action composed
three subsets p   hpre a   add a   del a i called preconditions  add effects 
delete effects  action applicable state iff satisfies pre a  s  applying
s  propositions change s a      s   del a   add a    sequence actions
   a         use s   denote     s   del a     add a       del a       add an   
let p initial state g p goal  solution planning task sequence
actions transform state satisfies g s  formally  feasible solution  i e  
plan  sequence actions    a        satisfies  i  i  pre ai   i  a      ai     
 ii  g i   
basic strips planning task extended strips planning action costs 
action associated  non negative  cost c a   objective cost optimal planning strips
model action costs find plan minimizes sum costs
p
actions i n
c a
  
i  
delete relaxation task   denoted     task hp  a    i  gi a  set
delete free actions defined a     hpre a   add a     a   use   denote
task delete free beginning without relaxed 
    previous work computing h  relaxations
delete relaxation used basis planning heuristics since beginning
recent era interest forward state space search based planning  bonet   geffner         unfortunately  computing h  known np equivalent reduction vertex cover  bylander 
   

fii mai   f ukunaga

model
ip t      sec    
ipe  t      sec    

constraints
c   c   c   c  
c   c  
c   c a c   c  
c   c 

variable eliminations
none
landmarks        relevance        dominated
action elimination       
immediate action application      
none
ipe  t    
ipe  t    

lp t      sec      
lpe  t      sec      
lpetr  t      sec      

ip t    
ipe  t    
c   c a c   c  

ipc  t    sec    

c   c   c   c  
c   c   c  c 

none

ipec  t      sec    

c   c a c   c  
c   c  c  c 

lpc  t    sec    

lpec  t    sec    

lpectr  t    sec    

ipc  t  

ipec  t  
c   c a c   c  
c  c 

landmarks        relevance
       modified dominated
action elimination  definition   
none

ipec  t  

ipec  t  

a   autoconf  sec    

selects among lpe  t      lpetr  t      lpec  t   

lpectr  t   



basic delete free task ip
model  computes h   
enhanced ip model  computes h   

lp relaxation ip t    
lp relaxation ipe  t    
lp relaxation timerelaxation ipe  t    
basic delete free task
ip model enhanced
counting constraints
enhanced ip model
counting constraints

lp relaxation ipc  t  

lp relaxation ipec  t  
lp relaxation time
relaxation ipec  t  



automatic lp model selection

table    overview delete relaxation based ip lp models paper

lp t  

lptr t  

lpe t  

ip t     ipe t    aaa
h 

ipcec t 

lpec
c t 

lptre t  

iptre t  

ec t 
ipctr

e  t 
c
lpctr

iptr t  

figure    dominance relationships among ip lp models  edge modeli modelj indicates
optimal cost modeli optimal cost modelj     highlighted lps components
a   autoconf model 

   

fio n p ractical   nteger  l inear p rogramming odel

       therefore  beginning  researchers avoided direct computation h    instead
sought approximations h   
satisficing planning  optimal solutions required  successful approach deriving heuristics approximate delete relaxation  additive heuristic  hadd   assumes
subgoals independent computes sum achieving subgoal delete relaxed
model  bonet   geffner         heuristic  hoffmann   nebel        constructs planning
graph  blum   furst        delete relaxed problem  extracts relaxed plan  computes
number actions relaxed plan  upper bound h   
case cost optimal planning  action assigned cost objective
find minimal cost plan  lower bounds h  basis several admissible heuristic functions
used literature  bonet geffner        proposed hmax heuristic 
computes highest cost associated achieving costly  single proposition 
hmax admissible  often informative  i e  gap hmax h  large 
considers single costly goal proposition  admissible landmark cut
 lm cut  heuristic  helmert   domshlak         approximates h  follows  state s  lmcut heuristic first computes hmax  s   zero infinite  h  zero infinite 
hlm cut  s    hmax  s   otherwise  disjunctive action landmark l  a set actions least one
must included relaxed plan  computed  cost actions l reduced
c m   cost minimal cost action l  hlm cut increased c m   process
repeated hmax  s   for remaining  reduced problem  becomes    approximations
h  informative hmax include set additive heuristic  keyder   geffner       
cost sharing approximations hmax  mirkis   domshlak        
previous planners avoided direct computation h  extra search efficiency
gained using h  offset high cost computing h    far aware  first
actual use h  inside cost optimal planner betz helmert         implemented
domain specific implementations h  several domains  recently  haslum et al  evaluated
use domain independent algorithm h   haslum  slaney    thiebaux       
heuristic function a   based cost optimal planning  found performance relatively
poor  haslum        
recent years  several advances computation h    since  described
above  lm cut heuristic  helmert   domshlak        lower bound h    cost optimal
planner using a  search algorithm lm cut heuristic directly applied delete
relaxation classical planning problem order compute h    possible improve upon
developing methods exploit delete free property specifically tailored
solving delete relaxation  pommerening helmert        developed approach uses
ida  branch and bound incrementally computed lm cut heuristic  gefen brafman
       proposed action pruning delete free problems 
different approach computing h  based observation h  could formulated
problem finding minimal hitting set sets disjunctive action landmarks  bonet  
helmert         led methods computing h  searching minimum cost hitting set
complete set action landmarks delete relaxed planning problem  bonet   castillo 
      haslum et al          original implementation haslum et al s hitting set based
h  solver used problem specific branch and bound algorithm  haslum et al          improved
implementation  which use experimental evaluation section    uses integer programming solve hitting set problem  haslum      a  
   

fii mai   f ukunaga

    integer linear programming classical planning
another related line research modeling classical planning integer linear programs
 ilp   use high performance  general problem solvers solve planning problems
pioneered kautz selman  solved planning problems encoding propositional
satisfiability  sat  applied state of the art sat solvers  basic approach instantiate
sat formula satisfying assignment implies t step plan  satplan starts small
value  e g   trivially     lower bound   instantiates propositional formula f  t 
satisfiable plan parallel steps less exists  f  t  satisfiable 
minimal parallel makespan plan found  otherwise  incremented  process
repeated plan found  initial encodings modestly successful  kautz  
selman         advances sat solver technology well improvements encoding
integration planning graphs  blum   furst        led dramatic performance improvements  kautz   selman               recent work sat based planning includes improved
encodings well execution strategies sat strategies improve upon simply incrementing
 rintanen  heljanko    niemela         addition  improvements sat solvers
specifically target domain independent planning investigated  rintanen       
since expressiveness integer programming  ip  subsumes sat  sat encodings
straightforwardly translated ip  however  direct translation sat encodings ip resulted
poor performance  state change formulation replaces original fluents sat
encoding set variables directly expresses addition  deletion  persistence
fluents shown successful basis ip model planning  vossen  ball 
lotem    nau         formulation strengthened additional mutual exclusion constraints  dimopoulos         optiplan model  van den briel   kambhampati        combined
state change ip formulation planning graph based model refinement strategies improvements dimopoulous         sat based approaches described above  ip models
feasible plan steps exists constructed  however  unlike
sat formulation  easy directly encode action costs objective function ip
model  ip models used directly solve cost optimal planning problems  another
approach decomposes planning instance set network flow problems  subproblem corresponds state variable original planning problem  van den briel  vossen   
kambhampati        
instead modeling directly solving classical planning problem ip  another approach  adopt paper  uses ilp models provide heuristic function guides
state space search planning algorithms a    early instance approach  which 
knowledge  earliest application lp classical planning  lplan 
lp encoding classical planning problem used heuristic function partial order
planner  bylander         van den briel et al         developed admissible heuristic based
lp model represents planning problem order actions executed
relaxed  variable represents number times action executed  delete effects
considered  constraints number actions delete values
incremented actions add value  although lp based heuristic
integrated planning system  compared relaxed problem cost found model
bylanders lplan lp model  well lp model h   
   

fio n p ractical   nteger  l inear p rogramming odel

knowledge  h  implementation van den briel et al         first implementation ip model h    first  relaxed planning graph  blum   furst        expanded
quiescence  results instantiation actions relevant optimal
delete free task well upper bound number steps optimal delete free task 
then  h  computed using delete relaxed  step based encoding planning problem
optiplan  van den briel        
cooper et al         showed optimal solution dual lp model relaxes action ordering corresponds best lower bound obtained applying
transformations original planning problem shift costs among actions affect
fluents 
bonet proposed hseq   admissible  flow based lp heuristic based petri net state equations  bonet        used heuristic a   based planner  bonet van den
briel        enhanced bonets flow based lp model adding action landmark constraint implementing variable merging strategies  resulting competitive  admissible heuristic  karpas
domshlak        proposed lp formulation compute optimal partitioning landmarks  pommerening et al         proposed operator counting framework enabled unification
number ideas  including state equation formulation  bonet         post hoc optimization constraints  pommerening  roger    helmert         well landmarks  the formulation bonet
  helmert        dual formulation karpas   domshlak        state
abstraction heuristics  katz   domshlak         showed combinations constraints resulted strong heuristics significantly outperformed lm cut heuristic  recent survey
roger pommerening        presents survey lp based heuristics planning
includes earlier conference version paper  imai   fukunaga        suggests
delete relaxation model could incorporated operator counting framework associating
operator counting variable action variable  see below  delete relaxed problem 

   ip t      basic ip formulation delete free task
define integer program ip t      ip formulation delete free task
    hp  a    i  gi  note feasible solution ip t      not optimal solution  
derive corresponding  feasible non redundant  i e   action appears once 
plan   cost ip t     solution 
first  define variables ip t      addition able derive plan ip t     
always exists injective mapping feasible non redundant plan ip t     solution 
thus  show feasible assignments variables derived feasible plan
    well meanings roles variables  use    a        denote
plan   corresponding solution ip t      say first achiever p plan
p   i  first action achieves  establishes  p 
proposition  p p  u  p          u  p      iff p i    u  p  indicates whether proposition p
achieved relaxed plan    
action  a  u  a          u  a      iff holds  u  a  indicates whether action
used relaxed plan 
add effect  a  p add a   e a  p          e a  p      iff holds first
achiever p  e a  p      p true i  p achieved 
   

fii mai   f ukunaga

time  proposition   p p   p         a     p    p i   p added
at  first   p      p member i   p  indicates time step p first
achieved first achiever 
time  action   a   a         a     a         a     a     
 a  indicates time step first used 
initial proposition  p p  i p          i p      iff p i 
p p achieved once  i e   p appears add effects multiple actions  
assign  p  index first action   p achieved  i e   p   i   holds 
assign arbitrary value        a    p   given delete free task   feasible
non redundant plan   call assignment solution derived  
use
pthe following fact later proofs  solution derived feasible solution satisfies  a  s t padd a   e a   p    proposition p u  p        b 
p

s t padd a   e a   p      proposition p u  p      
variables i p  auxiliary variables computing h    although redundant
solving delete free task one time  useful avoid reconstructing constraints
state ip t     lp t     embedded heuristic function forward search planner
called state 
objective function defined follows 
x
minimize 
c a u  a  
   
aa

objective function  cost solution ip t     equal cost
corresponding  delete free  plan 
finally define following six constraints 
 c   p g  u  p        the goals must achieved  
 c   a  p pre a   u  p  u  a    actions require preconditions  
 c   a  p add a   u  a  e a  p    an action first achiever used  
p
 c   p p  i p    s t padd a   e a   p    u  p    if proposition achieved  must
true initial state effect action  
 c   a  p pre a    p   a    actions must preceded satisfaction
preconditions  
 c   a  p add a    a       p      a         e a  p     if first achiever
p  must precede p  
show solution ip t     derived feasible non redundant plan
feasible  variable v ip t      vf describes assignment v solution f
ip t     
t 

proposition    given delete free task   feasible  non redundant plan    
solution f ip t     derived feasible solution ip t     
   

fio n p ractical   nteger  l inear p rogramming odel

proof  f clearly satisfies constraint c  since satisfies g i   
constraint c  satisfied exists action proposition p pre a 
u  a f     u  p f      however  u  a f      u  p f    
delete free feasible plan p established point  show f satisfies
constraints c  c  similar arguments  exists action proposition
p add a  e a  p f      u  a f     must hold according definition f  
addition  exists proposition p u  p f      exists first achiever p
e a  p f      p member initial state i 
action member   propositions precondition must achieved
used  hence  according definition f    p f  a f action
plan   action member    a f    a   thus  constraint
c  satisfied action plan   regardless values  p f  
finally f satisfies constraint c  action proposition precondition
p pre a   first achiever p  i e   e a  p       constraint c  satisfied
regardless values  p f  a f   first achiever p  then  according
definition f    p f    a f       satisfies constraint c  
addition  exists feasible plan ip t     feasible solution  ip t    
solved optimally  optimal plan   obtained according following proposition 
proposition    given feasible solution f ip t      action sequence    a       
obtained ordering actions set  a   u  a f      ascending order  a f feasible
plan    
proof  first show satisfies condition  ii  plan  i e   g i    using proof
contradiction  assume exists proposition g g satisfies g   i    then 
exists action achieving g   since f solution ip t      u  g f     due constraint
c   since g   i   implies g   i  i g f      therefore  satisfy constraint c   must
exist action g add a  e a  g f      however  satisfy constraint c  
u  a f     hold  means   contradicts assumption 
next show satisfies condition  i   i e   i  pre ai   i  a      ai       base
case inductive proof  assume exists proposition p p satisfying p pre a   
p   i  since a    u  a   f     hold  u  p f     hold according
constraint u  p f u  a   f   then  similar proof condition  ii   must exist action
p add a   u  a f      e a  p f      however  satisfy constraint c  
 p   a    must true   a       p  hold satisfy constraint c   therefore
u  a f      a     a     a  first action   contradiction 
similar case           pre ai   i  a      ai     true  must
exist action    a      ai    u  a f      a     ai    contradicting fact
ai i th action sequence  
corollary    given optimal solution f ip t      sequence actions built ordering
actions set  a   u  a f      ascending order  a f optimal plan    
p
      p       a   
number variables

ip t
 add a    number constraints
p
p

pless   p
p      aa  pre a       aa  add a    number terms o  p    
 pre a      add a    
   

fii mai   f ukunaga

   enhanced ip model
ip t     provides ip model exactly computing h    shall see section  
ip t     competitive previous methods computing h    thus  section 
introduce variable elimination techniques modifications constraints order
speed computation h    show experimental results  ipe  t     
incorporates enhancements  computes h  significantly faster ip t      enhancements adopted ip framework previous work planning research 
particular  landmark based variable reduction method plays key role 
note enhancements introduce constraints render solutions ip t    
mapped feasible plans   infeasible  however  show cases  least one
optimal plan always remain valid enhanced model  optimal cost enhanced
model still corresponds h   
    landmark based ip model reduction
landmark element needs used every feasible solution  hoffmann  porteous 
  sebastia         use two kinds landmarks  called fact landmarks action landmarks
work gefen brafman         fact landmark planning task proposition
becomes true state every feasible plan  action landmark planning task
action included every feasible plan  say fact action landmark
l landmark proposition p l landmark task hp  a  i   p i  similarly say
landmark l landmark action l landmark task hp  a  i  pre a i 
ip model delete free task     proposition p fact landmark proposition
goal g  substitute u  p       similarly  action action landmark 
substitute u  a       landmark extraction substitution clearly prune feasible
solutions ip t     
actually extract set landmarks satisfy intensional definitions  landmark
extraction algorithm necessary  easy see given
feasible delete free task 
proposition
add
p p fact landmark p holds p    ap      p   g infeasible 
   a   p add a    similarly action action landmark
aadd
p
hp     a   i  gi infeasible  hence  landmark candidate  test whether
landmark checking feasibility delete free task excludes candidate 
feasibility delete free task checked using following  straightforward algorithm based
delete relaxed planning graph method hoffmann nebel         fluent  let
e p         represent whether p achievable not  action  let e a         represent
whether preconditions satisfied not  initially  e p      p   e p     
fluents  e a      a  step algorithm  actions
e a      whose preconditions satisfied      set e a           set e p     
e add a   algorithm terminates reaches quiescence  i e   actions
e a      whose preconditions satisfied found  takes  a  steps 
repeating feasibility check facts actions  algorithm collects fact
landmarks action landmarks satisfying definitions o  t        time 
interested computing h  once  straightforward method one
described would sufficient  however  since intend use h   based models
heuristic functions forward state space search planning  landmark extraction needs
   

fio n p ractical   nteger  l inear p rogramming odel

performed repeatedly search  efficiency extraction procedure important 
experimented several methods  describe effective method below 
method extracting landmarks based method zhu givan        
proposed planning based propagation method collecting causal landmarks  method
later generalized keyder et al  and or graph based landmark extraction method  keyder 
richter    helmert        
zhu givan        define proposition p causal landmark hp    apre
p      p   gi
pre
infeasible  ap    a   p pre a    focus causal landmarks  ignoring
 non causal  landmarks nonessential  even misleading  point view
guiding search algorithm uses landmark based heuristic  contrast  use landmarks
order reduce number variables ip model delete relaxation  thus  instead
focusing causal landmarks using zhu givans criteria  seek larger set landmarks
slightly modifying
criterion landmark
detection  hp    apre
p      p   gi

solution  p    aadd
 

 
 p  
g
must


infeasible 
furthermore  using
p
pre
add
ap instead ap extract larger set fact landmarks  addition  zhu givan
used forward propagation algorithm based layered planning graph delete free task
    use following  open list based propagation algorithm 
proposition p  compute set fact landmarks p  using iterative method
based following update equations characterizing fact landmarks 
p member initial state i   p  set fact landmarks achieve p 

p member i  set fact landmarks p  p  aa s t padd a   add a 


p pre a   fact landmarks p    
pseudocode open list based propagation algorithm shown algorithm   
initialization phase  candidate set proposition p   set p   fact landmarks
p set  p   lines       addition  action inserted fifo queue q
satisfies pre a   lines       main loop iterative method similar straightforward method described above  iteration  action retrieved q  candidate
set fact landmarks updated p add a  based second equation  lines        
moreover  method memorizes achievability p  line      action inserted q
members pre a   achievable candidate set p pre a   changed  lines
        process continues q becomes empty  clarity simplicity  implementation details optimizations omitted algorithm    e g   instead literally inserting every
member p l p  line    use single flag represent l p    p updating candidate set always reduces number elements  method always terminates  unlike
simpler o t      algorithm described above  algorithm complete  not landmarks
extracted   however  soundness method guaranteed following proposition 
proposition    given delete free strips planning task hp  a    i  gi  assume propositions
p achieved  let l p  set fact landmark candidates p computed
landmark extracting method 
 i  l p     p  p i 


 ii  l p     p  aa s t padd a   add a  p pre a  l p    p  
   

fii mai   f ukunaga

algorithm   landmark extracting method
  
  
  
  
  
  
  
  
  
   
   
   
   
   
   
   
   
   
   
   
   

   l p  sets candidates fact landmarks p p  
l p  p p   i 
l p   p  p i 
i 

insert fifo queue q pre a  s 
end
q empty
retrieve action q 
p add a 
 p  

x l p   add a  p pre a  l p    
l p     x
l p  x 
apre
p

insert q pre a     q 
end
end
end
end
   point  l p  contain sets fact landmarks p p  

satisfied  elements l p  fact landmarks p 
proof  assume proposition q satisfies q l p  q fact landmark p 
p    q since proposition fact landmark itself  then  l p  one
proposition  condition  i   ii   p   holds  since q landmark  exists
non empty feasible plan delete free task hp  a    i   p i achieve q 
let    a        plan  let ai action achieves p first 
p    q stated above  ands
q   add ai   since achieve q  hence  according
condition  ii   q p pre ai   l p    let p member pre ai   satisfies q l p   
since feasible plan achieve q  p achieved   thus p    q holds  then 
l p   one proposition  again  p   holds  hence     a      ai   
non empty feasible plan delete free task hp  a    i   p  i achieve q 
argument extended ad infinitum  length clearly finite 
contradiction  thus  members l p  fact landmarks p proposition p p  

addition fact landmarks extracted using procedure  algorithm
extracts action landmarks using criterion  proposition p fact landmark g 
one action achieve p  used action landmark g 
   

fio n p ractical   nteger  l inear p rogramming odel

    relevance analysis
backchaining relevance analysis widely used eliminate propositions actions irrelevant task  action relevant  i  add a  g       ii  exists relevant action
satisfying add a  pre a        proposition p relevant  i  p g   ii  exists
relevant action p pre a  holds 
addition  noted haslum et al          sufficient consider relevance respect subset first achievers add effect  although defined first achiever
achievability proposition  equivalent following definition  action first
achiever proposition p p add a  p fact landmark a  let fadd a  denote
 p add a    first achiever p   sufficient use fadd instead add
definition relevance 
p p relevant  eliminate variable u  a      u  p      
addition this  p add a  first achiever p  eliminate variable
e a  p       possible fact landmark fact irrelevant  case set u  p      
variable elimination prunes feasible solutions  clearly prune optimal
solutions 
    dominated action elimination
delete free task  two actions add effects  clearly sufficient use
one two actions  idea generalized following reduction 
eliminates useless  dominated  actions 
proposition    given feasible delete free task     exists optimal plan
contain exists action satisfying following   i  fadd a  fadd a     ii 
p pre a    p fact landmark p i   iii  c a  c a   
proof  plan    a      ai    a  ai             show sequence actions
   a      ai      ai         feasible plan  proposition pre a   fact
landmark a  hence  pre a  i  a      ai      pre a   i  a      ai    
holds  definition first achievers  add a    fadd a  i  a      ai     
i  a      ai    a   i  a      ai       therefore g i      feasible plan  
finally  c   c    c a  c a    therefore  plan contains a  optimal 
exists another optimal plan contain a 
exists dominated action a  eliminate variable setting u  a      
variable elimination prunes feasible solutions ip t      moreover  sometimes prunes
optimal solutions c a    c a   holds condition  iii   however  shown proof
above  least one optimal solution remains 
slight generalization similar set constraints robinson        definition
       p       maxsat based planner  robinsons dominance condition checks whether  r  
add a    add a     i   r   pre a     pre a    i   r   c a  c a   
condition  iii   r   equivalent  condition  i  less strict condition  r  
instead checking add effects  condition  i  tests whether propositions
first achiever subsumed   furthermore  condition  ii  subsumes  r  
proposition pre a   fact landmark a  pre a  i  a      ai      pre a  
i  a      ai     holds  satisfying  r   
   

fii mai   f ukunaga

    immediate action application
delete free task     actions immediately applied initial state without
affecting optimality relaxed plan  adopt immediate application zero cost actions
 gefen   brafman        well immediate application action landmarks  gefen   brafman 
       delete free task     action satisfies c a      pre a  i 
sequence made placing optimal plan hp     a   add a   gi optimal
plan     similarly  action action landmark   applicable i 
applied immediately 
ip t     model  variables  p  p eliminated substituting zero
values  given sequence immediately applicable actions  a      ak    it must correct
applicable sequence   eliminate variables follows   i  u  ai         ii   ai     i 
 iii  p pre ai    u  p        iv  p add ai     i  a      ai      u  p        p   
e ai   p        v  p add ai     i  a      ai         a      ai    e a  p      
    iterative application variable eliminations
variable elimination techniques described interact synergistically
resulting cascade eliminations  therefore  used iterative variable elimination algorithm
applies eliminations quiescence  order elimination applied shown
algorithm    full landmark extraction pass variable elimination would extremely
expensive  therefore  perform landmark extraction iterative application
eliminations 
algorithm   iterative variable elimination
relevance analysis 
landmark extraction 
variable eliminated
immediate action application 
dominated actions elimination 
relevance analysis 

    inverse action constraints
define following inverse relationship pair actions delete free task    
definition    inverse action   two actions a    a  a  a  inverse action a  if   i 
add a    pre a      ii  add a    pre a    
definition  clear a  inverse action a    a  inverse action a   
inverse actions satisfy following fact 
proposition    given delete free task     let    a        feasible plan  ai
inverse action aj     j holds     a      aj    aj        
feasible plan 
proof  since feasible plan     pre ai   i  a      ai     i  a      aj     
definition inverse actions  add aj   pre ai   holds  add aj   pre ai   i  a      aj      
   

fio n p ractical   nteger  l inear p rogramming odel

i  a      aj     hence  aj         applicable i  a      aj      g i     
i   
corollary    delete free task     feasible solution    a        optimal
ai inverse action aj ai aj non zero cost 
several possible ways use proposition  e g   u  a    u  a     
inv a   inv a  set inverse actions a   order avoid adding large number
constraints ip t     model   a     worst case half actions inverses
other   modify constraint c  follows 
p
 c a  a  p pre a   u  p  inv a p  e a   p  u  a   inv a  p  denotes set
inverse actions p add effect 


proposition    given delete free task     ip t     constraint c  feasible solution 
optimal solution ip t     constraint c  feasible ip t     constraint
c a 
proof  let f optimal solution ip t     constraint c  derived optimal plan
    since f satisfies constraints ip t     constraint c   suffices show
f satisfies constraint c a action proposition p pre a  
p
recall feasible solution derived feasible plan satisfies s t padd a   e a   p 
p
  proposition p u  p       satisfies s t padd a   e a   p     
p
p
proposition p u  p       since s t padd a   e a   p  inv a p  e a   p 
action proposition p pre a   f clearly satisfies constraint c a u  p f    


u  a f     
pif u  p f     u  a f     hold 

show inv a p  e a   p f     holds u  a f   u  p f      assume
exists action inv a  p  e a   p f      according constraint c   u  a  f     
however  since f derived optimal plan     must exist optimal plan  
contains   contradicts corollary   
since f feasible solution  exist action proposition p pre a 
u  a f     u  p f      hence f satisfies constraint c a
p pre a  
    ipe  t      enhanced ip model h 
define ipe  t     integer programming model result first adding inverse
action constraints described section     basic ip t     model applying iterative reduction algorithm algorithm    which applies reductions sections         
quiescence  previously noted  ipe  t     computes h    shall see below  cumulative
effects enhancements quite significant  resulting much practical ip model
computing h    see table   summary relationship ipe  t     ip t     

   experimental evaluation ip models delete free planning  exact
computation h   
section  evaluate effectiveness integer programming model delete relaxation method solving delete free tasks computing h  exactly  evaluate following
models 
   

fii mai   f ukunaga

ip t      basic ip model  section    
ip t     lm  ip t     landmark based variable reduction method  section      
ipe  t      enhanced model includes enhancements described sections
        designed speed computation h   landmark based reduction 
relevance analysis  dominated action elimination  immediate action application  inverse action constraints  
emphasize  unlike models evaluated later sections 
ip models compute h  exactly 
following previous work solvers delete free problems  main results based
evaluation using delete free versions standard ipc benchmark problems  section      
addition  section      present results much smaller scale study set natural 
delete free problems systems biology  gefen   brafman        
    evaluation delete free versions ipc benchmark instances
following methodology evaluating delete free planning previous work  haslum et al  
      pommerening   helmert        gefen   brafman         evaluate ip models
solving international planning contest  ipc  benchmark instances delete effects
actions ignored  below  experiments used cplex       solver solve integer
linear programs  experiments single threaded executed xeon e           ghz 
previous work computing h  evaluated using several different sets
experimental settings  different cpu limits different problem instances   present results
  sets comparisons  first   sets comparisons  compare benchmark results reported
previous publications results obtained running solvers problem instances 
fourth set results compares models improved implementation minimal
hitting set based approach  haslum et al         one original authors 
comparison results pommerening helmert         experimental setup described section        results shown table    
comparison results gefen brafman         experimental setup described
section        results shown table    
comparison results haslum et al          experimental setup described section
       results shown table    
comparison hst cplex  improved implementation algorithm  haslum
et al          experimental setup described section        results shown table  
figures      
results copied previous work  pommerening   helmert        haslum et al        
gefen   brafman        tables     obtained using hardware available several years ago
original papers written  results ip t      ipe  t      hst cplex
obtained slightly recent hardware  since coverage coarse metric based binary results  solved unsolved   significantly impacted differences machine speed 
   

fio n p ractical   nteger  l inear p rogramming odel

e g   many problems threshold slightly faster machine  equivalent running
slightly longer  results many instances solved  order eliminate possibility
improvements hardware since       when first results compared
published  explain improvements obtained using approach  include results running best ip model  ipe  t      significantly shorter cpu time limit previous
experiments  addition results use cpu time limit previous experiments 
      c omparison r esults p ommerening
elete  f ree v ersions ipc b enchmarks



h elmert       



first comparison results pommerening helmert         table   shows
results running ip t      ip t     lm  ipe  t       minute time limit  gb memory
limitation  coverage    problem instances solved  domain shown  columns
solver name contains ph   table   copied paper pommerening helmert
        fd ph   fast downward using a  lm cut heuristic applied deleterelaxed problems  bc ph   hitting set based approach bonet castillo        
bnb ph   ida  ph   best performing strategies using incremental lm cut
heuristic delete free problems proposed pommerening helmert         pommerening
helmert obtained results using amd opteron      processor  gb memory limit
  minute time limit 
table   includes column ipe  t      min  shows results   minute runs
ipe  t      columns table     minute runs 
      c omparisons r esults g efen b rafman        h aslum et al  
       elete  f ree v ersions ipc b enchmarks
next  evaluated h  solvers previous results obtained    minute time
limit  gb memory limit  table   compares ip t      ip t     lm  ipe  t    
results  gefen   brafman        p      table     lm cut gb   column a 
lm cut heuristic  helmert   domshlak        applied directly delete free instances order
compute h    lm cut pruning gb   column a  lm cut using pruning techniques
delete free instances proposed gefen brafman         table   compares ip t    
ipe  t     results haslum et al         p       table     bc hst   column
method bonet castillo         ml hst   column minimal landmark method
proposed haslum et al   original work haslum et al          minimum cost hitting
set problem solved using specialized branch and bound algorithm  ml hst   column reflects performance original algorithm  however  minimal landmark method
later significantly improved replacing hitting set solver cplex based solver
 haslum      b   table   includes hst cplex column  shows results
minimal landmark method using cplex hitting set solver  obtained hst cplex
results running hst cplex code machine used run ip models 
table   includes column ipe  t      min  shows results   minute runs
ipe  t      all columns table      minute runs  
note table    instances ipc     ipc     sequential satisfying track  i e    sat    sat   domain names   accordance original paper
 haslum et al         
   

fii mai   f ukunaga

      c omparison



hst cplex



elete  f ree v ersions ipc b enchmarks

detailed comparison improved implementation hitting set based method
haslum et al          although original version algorithm used problem specific
branch and bound method solve hitting set problems  used recent version
haslums h  solver  source dated             configured use cplex       solve hitting set subproblem  configuration abbreviated hst cplex  shown table
   hst cplex significantly outperforms original hst implementation described  haslum
et al          compares favorably vs  previous methods 
tables     figures     compare ip t      ipe  t      ip t     lm  hst cplex     
ipc benchmark instances  algorithms run  gb memory limit  table   shows results
   minute time limit  table   shows results   minute time limit  tables  
  compares coverage runtimes per domain  figure   compares cumulative number
instances solved function time  figure   compares runtimes individual
instances 
contrast previous set experiments described section        used optimal track
instances   opt    opt   domain names  satisficing optimal track
instances available benchmark sets  subsequent sections 
focus applying models basis heuristics forward search  cost optimal planning 
      iscussion r esults elete  f ree v ersions ipc b enchmarks
surprisingly  basic ip t     model competitive previous state of the art methods specifically developed computing h   haslum et al         pommerening  
helmert         however  table   shows basic ip t     model least competitive
a  lm cut enhanced gefen brafmans pruning methods delete free instances
 prune gb     ip t     significantly outperforms standard a  lm cut  table    lmcut gb   table    fd ph    
hand  enhancing ip t     landmark based model reduction method results
significant improvement  ip t     lm competitive previous methods except
hst cplex 
ipe  t     model  includes enhancement described section   reducing
model order compute h  faster  performs well overall  competitive
previous methods  example  table    ipe  t     highest coverage  or tied highest 
      domains  table    figure    figure   show ipe  t     hst cplex
similar coverage    minute time limit  ipe  t     tends somewhat faster overall 
however  clear dominance relationship ipe  t     hst cplex  since
domains ipe  t     clearly performs better  e g   rovers  satellite  freecell   
domains hst cplex performs better  e g   airport  pegsol  scanalyzer  transport   thus 
ip based approach minimal landmark approaches seem complementary strengths
respect solving delete free problems 
aside coverage  figure   shows many delete free instances solved much faster
ipe  t     hst cplex  difference solving easy delete free instance    
vs      seconds may seem important need solve instance once  however 
speed difference ipe  t     hst cplex easy delete free instances
significant implication consider using h  solvers heuristic functions a   based
   

fio n p ractical   nteger  l inear p rogramming odel

planners  may need solve delete free problems many thousands times course
single a  search  result  see section    a  using ipe  t     heuristic
significantly outperforms a  using hst cplex heuristic 
order eliminate possibility cpu speed differences account qualitative improvements coverage obtained ip models compared previously published results  table
  includes column ipe  t      min  result   minute runs ipe  t      table
  includes column ipe  t      min  result   minute runs ipe  t     effect 
simulate machines run          respectively  speed machine used
experiments tables      offsets improvements single core cpu
performance            coverage achieved ipe  t      min       table  
higher solvers table   given   minutes  similarly  coverage
achieved ipe  t      min       table   higher solvers table  
given    minutes 
therefore  overall  ipe  t     competitive previous state of the art delete free solvers 
results indicate direct computation h  using integer programming viable approach 
least computing delete free task once 
    comparison hst cplex minimal seed set problem
assess performance best ip model  ipe  t     natural  delete free task 
compared ipe  t     hst cplex set minimal seed set problem instances systems
biology  gefen   brafman         consist    instances originally evaluated gefen
brafman  well three additional versions    instances provided
original authors  version uses different set action costs  gefen   brafman        p 
      total           instances  solvers run   hour cpu time limit per
instance  gb ram limit 
figure   shows scatter plot comparing runtimes problem instance  coverage
ipe  t        instances  coverage hst cplex    instances  one hand 
figure   shows majority instances solved significantly faster ipe  t     
ipe  t     solves    instances    times faster hst cplex  hand 
one instance hst cplex    times faster ipe  t     
one instance solved      seconds hst cplex solved within
time limit ipe  t      the dre instance type   preprocessing gefen   brafman 
      p       

   relaxations h  models
although delete free planning problems interesting right  main motivation
developing efficient ip model delete free problems able use basis
heuristic function forward state space search based domain independent planner  far 
presented ip t      basic ip model computes h    proposed ipe  t     
incorporates number enhancements which  shown experimental results section
   significantly increase scalability model provide new approach computing h 
competitive previous state of the art methods  possible simply use ipe  t    
heuristic function forward search based planner  however  shown section   
computing h  remains relatively expensive even using ipe  t      surprising  given
   

fii mai   f ukunaga

 pommerening   helmert        table   
domain    problems 
airport    
blocks    
depot    
driverlog    
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
openstacks opt      
pathways noneg    
pipes notankage    
pipes tankage    
psr small    
rovers    
satellite    
tpp    
trucks    
zenotravel    
total coverage      
  best domains

ip t    

ip t     lm

ipe  t    

ipe  t      min

fd ph  

bc ph  

bnb ph  

ida  ph  

solved
  
  
 
  
  
 
  
  
 
   
  
  
 
  
 
 
  
  
  
  
  
  
   
 

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
 

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
  

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
  

solved
  
  
 
  
 
 
  
  
 
   
  
  
 
 
  
  
  
  
 
  
 
  
   
 

solved
  
  
 
 
 
 
  
  
 
   
  
  
 
 
 
 
  
  
 
  
 
 
   
 

solved
  
  
  
  
 
 
  
  
  
   
  
  
 
 
  
 
  
  
 
  
 
  
   
 

solved
  
  
  
  
 
 
  
  
  
   
  
  
 
 
  
  
  
  
 
  
 
  
   
 

table    coverage    instances solved  delete free problems  exact computation h    
  minute time limit  except ipe  t      min run   minute time limit    gb
ram  comparison data table   paper pommerening helmert          
best domains number domains solver achieves highest coverage
 including ties  
 gefen   brafman        table   
domain    problems 
blocks    
depot    
driverlog    
freecell    
gripper    
logistics      
logistics      
miconic     
no mystery    
pipesworld notankage    
pipesworld tankage    
rovers    
total coverage      
  best domains

ip t    

ip t     lm

ipe  t    

lm cut gb  

prune gb  

solved
  
 
  
  
  
  
 
   
  
  
 
  
   
 

solved
  
  
  
  
  
  
  
   
  
  
 
  
   
 

solved
  
  
  
  
  
  
  
   
  
  
 
  
   
  

solved
  
 
  
 
  
  
  
   
  
  
  
  
   
 

solved
  
  
  
 
  
  
  
   
  
 
 
  
   
 

table    coverage    instances solved  delete free problems  exact computation h    
   minute time limit   gb ram  comparison data table   paper gefen
brafman        

   

fio n p ractical   nteger  l inear p rogramming odel

 haslum et al       
table   
ip t    

domain    problems 
airport    
barman sat      
blocks    
depot    
driverlog    
elevators sat      
floortile sat      
freecell    
gripper    
logistics      
logistics      
miconic     
no mprime    
nomystery sat      
parcprinter       
pegsol       
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
sokoban sat      
transport sat      
trucks    
visitall sat      
woodworking sat      
zenotravel    
total coverage       
  best domains

solved
  
 
  
 
  
 
  
  
  
 
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
 

ip t     lm

solved
  
 
  
  
  
 
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
  

ipe  t    

solved
  
 
  
  
  
  
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
  

hst cplex

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
  

ipe  t    

hst cplex

 min

 min

solved
  
 
  
  
  
  
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
 
  
 
  
 
  
  
   
  

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
  

ml hst  

bc hst  

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
 
  
  
 
  
 
  
  
   
  

solved
  
 
  
  
 
  
 
 
  
 
  
  
  
 
  
  
 
 
  
  
 
 
  
 
  
 
 
  
   
 

table    coverage    instances solved  delete free problems  exact computation h    
   minute time limit  except ipe  t      min hst cplex  min run  minute time limit    gb ram  comparison data table   paper haslum et al 
       

   

fii mai   f ukunaga

ip t       min

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

solved

  
 
  
 
  
 
 
  
  
 
  
 
  
   
  
  
  
 
 
 
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  

time
      
       
    
      
     
      
      
    
      
 
    
      
     
    
      
      
      
      
      
 
    
    
      
    
      
      
      
      
    
     
     
      
      
     
     
      
      
 
    
    
    
    
     
   
  

ip t     lm   min
solved

  
 
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  

time
      
       
    
     
     
      
      
    
      
    
    
     
    
    
      
      
      
     
    
    
    
    
      
    
     
      
      
     
    
    
     
      
      
    
    
     
     
 
    
    
    
    
     
    
  

ipe  t       min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  

time sd
             
           
         
         
          
         
         
         
         
          
         
            
         
         
            
           
         
         
         
         
         
         
         
         
            
            
             
           
         
         
         
            
             
            
         
         
             
             
         
         
         
         
         
    
  

hst cplex   min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

time sd
          
         
         
         
           
         
         
            
             
         
         
             
         
         
             
           
         
            
         
         
         
         
           
         
         
         
             
          
         
            
             
             
             
         
         
             
             
           
         
         
         
         
             
    
  

table    detailed comparison ip t      ip t     lm  ipe  t      hst cplex      deletefree tasks  exact computation h        minute time limit   gb ram  coverage mean
standard deviation runtimes  average successful runs only  excludes unsuccessful runs  

   

fio n p ractical   nteger  l inear p rogramming odel

ip t      min

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

solved

  
 
  
 
  
 
 
  
  
 
  
 
  
   
  
  
  
 
 
 
  
  
 
  
  
 
 
 
  
  
  
 
 
  
  
  
 
 
  
  
  
  
  

time sd
    
 
    
     
     
     
 
    
     
 
    
     
     
    
     
    
     
     
     
 
    
    
 
    
     
      
    
     
    
     
     
     
     
     
     
     
    
 
    
    
    
    
    
   
  

ip t     lm  min

time
    
 
    
     
     
     
     
    
     
    
    
     
    
    
     
     
     
     
    
    
    
    
     
    
     
     
     
     
    
    
     
     
     
    
    
     
     
 
    
    
    
    
    

solved

  
 
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
 
 
  
  
  
 
 
  
  
  
  
  
   
  

ipe  t      min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  
  
  
  
  
  

time sd
          
           
         
         
          
         
         
         
         
          
         
           
         
         
           
           
         
         
         
         
         
         
         
         
           
           
           
           
         
         
         
           
           
         
         
         
           
           
         
         
         
         
         
    
  

hst cplex  min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  

time sd
          
         
         
         
           
         
         
         
           
         
         
           
         
         
           
           
         
           
         
         
         
         
           
         
         
         
           
          
         
           
           
           
           
         
         
           
           
           
         
         
         
         
           
    
  

table    detailed comparison ip t      ip t     lm  ipe  t      hst cplex      deletefree tasks  exact computation h       minute time limit   gb ram  coverage mean
standard deviation runtimes  average successful runs only  excludes unsuccessful runs  

   

fii mai   f ukunaga

    
    

instances solved

    
   
   
   
ipe t  
hst cplex

   
 
      

ip t   lm
ip t  

     

    

   

 

  

   

    

time  seconds 
figure    comparison ip t      ip t     lm  ipe  t      hst cplex delete free tasks
 exact computation h        minute time limit   gb ram  cumulative number instances
 out      instances table    solved within ime seconds shown 
computing h  np equivalent  bylander         haslum        reported previous  baseline
results using direct computation h  using hitting set method proposed earlier work
 haslum et al         heuristic a    reported poor results  although show section
  a  using ipe  t     performs well domains  using h  directly heuristic a 
continues pose significant challenge  thus  turn next relaxations ip t     ipe  t    
lower bounds h  computed faster  making suitable admissible
heuristics forward search planner ip models 
    lp t     lpe  t      lp relaxations delete relaxation  h    models
linear programming  lp  relaxations ip models obvious candidates tractable
alternatives computing h  using ip t     ipe  t      lp relaxations trivially derived
ip models eliminating integer constraints variables  optimal cost
lp relaxation lower bound optimal cost ip  denote lp relaxation
ip t     lp t     lp relaxation ipe  t     lpe  t      see table     case
problem domains integer action costs  ceiling lp costs used 
although lpe  t     solved quickly  tight theoretical bounds gap ip t    
lp t     gap ipe  t     lpe  t     difficult obtain proven
betz helmert        exists constant c     polynomial time algorithm
computing lower bound h states s  h s  ch    unless p   n p  i e  
h  polynomial time approximable constant factor c   fortunately  worst case
   

fio n p ractical   nteger  l inear p rogramming odel

    x

   x

x

x    

x   

 

  

   

    
   

ipe t  

  
 
   
    
     
     

    

   

    

hst cplex

figure    comparison runtimes ipe  t     hst cplex      delete free instances  exact computation h    instances table        minute time limit   gb ram  point represents problem instance  x axis represents runtime hst cplex  y axis represents runtime
ipe  t      example  point diagonal  y   x  indicates ipe  t     solved problem represented point faster hst cplex  point   x    line indicates ipe  t    
solved problem represented point least    times faster hst cplex  algorithm failed
solve instance within    minute time limit  runtime shown      seconds 

theoretical approximation results necessarily apply real world problem instances  fact 
experimental results show lp relaxations often provide fast  accurate  lower
bounds h  standard planning benchmark problems 
    time relaxation h  models
motivation embed computation h   or approximation thereof  admissible
heuristic a    necessarily interested actual optimal delete free plan    
cost plan  or approximation   particular  exact order actions
executed delete relaxed plan matter  necessity time related variables
brought question 
time relaxation ip t      ip t     without constraints c  c   denoted
iptr  t      lp relaxation iptr  t     denoted lptr  t      table   summarizes relationships among models 
propositions actions task satisfy conditions  eliminating time related
variables affect cost optimal solution ip t      example  relaxed
causal and or graph  gefen   brafman        task cycle 
decide values  p   a  constraints c  c  ip t     satisfied in   

fii mai   f ukunaga

    

ipe t  

   
  
 

   
    
     
     

x
   x
x   
    

   

 

  

   

    

hst cplex

figure    runtime comparisons ipe  t     hst cplex minimal seed set problem     natural 
delete free instances gefen   brafman            minute time limit   gb ram  point represents
problem instance  algorithm failed solve instance within    minute time limit  runtime
shown      seconds  coverage ipe  t        instances  coverage hst cplex
   instances 

dependently values variables  case optimal costs ip t    
lp t     optimal costs iptr  t     lptr  t      respectively 
indeed  shall show experimentally section     relaxation quite tight  i e  
ip t     iptr  t     often cost  iptr  t     computed significantly faster ip t      similarly  lptr  t      lpetr  t      ipetr  t      time relaxations
lp t      lpe  t      ipe  t      computed much faster non time relaxed
counterparts 
    experimental evaluation lp time relaxation gaps
evaluated quality lp t      lpe  t      lpetr  t     linear programming bounds described comparing optimal costs computed bounds exact h  values  computed
using ipe  t       used set      instances table    table   shows mean ratio
optimal cost lp model h    instances h  could computed using
ipe  t      perfect columns indicate fraction instances optimal cost
lp model equal h    note used ceiling lp cost  since ipc benchmark
instances integer costs  stacked histogram representation data  aggregated
domains  classifies ratios optimal costs lp relaxations value h 
shown figure   
expect variable fixing constraints enhanced lpe  t     model would
tend increase value optimal solution lpe  t     compared optimal value
base lp relaxation  lp t      addition  would expect optimal value lpe  t    
would tend greater optimal value time relaxation  lpetr  t      table   shows
   

fio n p ractical   nteger  l inear p rogramming odel

general  lpe  t     lpetr  t     lp t            domains  lpe  t     matches h  perfectly 
i e   lpe  t     h             domains  lpe  t     h        almost every single domain 
optimal lp value enhanced model lpe  t     significantly better  higher  basic
formulation lp t      confirming variable elimination additional constraints serve
tighten lp bound  thus  enhancements basic model described section   provide
significant benefit beyond speedups demonstrated section    time relaxation
lpetr  t     usually close lpe  t      indicating time relaxation potentially
achieve good tradeoff computation cost accuracy  and fact  see later
section    lpetr  t     performs quite well used heuristic a    
comparison  evaluated ratio value lm cut heuristic  helmert  
domshlak        h    comparing average ratios lower bound h    see that 
lp t     less informative lm cut    domains  informative lm cut  
domains  equivalent   domains 
lpe  t     less informative lm cut    domains  informative lm cut
   domains  equivalent   domains 
lpetr  t     less informative lm cut    domains  informative lm cut
   domains  equivalent   domains 
thus  lm cut better approximation h  basic lp relaxation  lp t     
lpetr  t     roughly equivalent lm cut  interestingly  lp relaxation approach appears highly complementary cost partitioning approach lm cut 
lp relaxation lm cut informative roughly half cases
compared other 

lpe  t    

 

   
         
         
         
         
         

   

fraction instances

   
   
   
   
   
   
   
   
 

lp

lp

e

lp

e
tr

figure    ratio optimal lp costs h    categorized buckets   x y    fraction
instances ratio lp h  range  x y   example  fraction instances
ratio optimal value lpetr  t     h  range           approximately
      this stacked histogram based data table      
   

fii mai   f ukunaga

lm cut
perfect
    
   
   
 
   
   
   
 
   
   
   
   
   
   
   
   
   
 
   
   
    
    
   
   
   
   
    
    
   
   
   
   
   
   
   
 
    
    
    
    
   
   
   
   
   
 
   
   
   
   
   
   
   
   
   
 
    
    
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
 
   
   
   
   
   
   
   
   

lm cut h 

airport
barman opt  
blocks
depot
driverlog
elevators opt  
elevators opt  
floortile opt  
freecell
grid
gripper
logistics  
logistics  
miconic
no mprime
no mystery
nomystery opt  
openstacks
openstacks opt  
openstacks opt  
parcprinter   
parcprinter opt  
parking opt  
pathways noneg
pegsol   
pegsol opt  
pipesworld notankage
pipesworld tankage
psr small
rovers
satellite
scanalyzer   
scanalyzer opt  
sokoban opt  
sokoban opt  
tpp
transport opt  
transport opt  
trucks
visitall opt  
woodworking opt  
woodworking opt  
zenotravel

lp t    
perfect
   
   
   
 
   
   
   
 
   
   
   
 
   
 
   
   
   
 
   
   
    
    
   
   
   
   
    
    
   
 
   
 
   
   
   
   
    
    
    
    
   
   
   
   
   
 
   
   
   
   
   
 
   
 
   
 
   
   
   
 
   
   
   
   
   
   
   
   
   
   
   
   
   
 
   
 
   
 
   
   
   
 
   
 
   
   

lp t     h 

lpe  t    
perfect
   
   
   
 
    
    
   
   
   
   
   
 
   
 
   
   
   
   
   
   
    
    
   
   
   
   
    
    
   
   
   
   
    
   
    
   
    
    
    
    
   
   
   
   
   
   
   
   
   
   
   
 
   
   
   
   
    
    
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
 
    
    
   
   
    
    
    
    
   
   

lpe  t     h 

lpetr  t    
 
lpe
 t
  h 
perfect
tr
   
   
    
   
   
   
   
   
   
   
    
   
   
    
   
   
    
   
    
    
   
   
   
   
   
   
   
   
    
   
   
   
   
   
   
   
   
   
    
   
    
    
   

   
 
    
   
   
 
 
   
   
   
    
   
   
    
   
   
   
    
    
    
   
   
 
   
   
 
   
   
    
   
   
   
   
   
   
   
   
 
    
   
    
    
   

table    gaps lp models h    mean ratio lp model h   on     
instances solved using ipe  t     shown  perfect columns indicate fraction instances
optimal cost lp model equal h   

   

fio n p ractical   nteger  l inear p rogramming odel

figure   compares runtimes cplex lp solver relaxed h  models  lpe  t    
significantly faster lp t      solving many instances      times faster  and solving instances    times faster   demonstrating benefits enhanced model  comparison lpetr  t     lpe  t     shows using time relaxation results addition speedup
factor    additional speedup may seem significant solving
single lp instance takes fraction second  cumulative effects using lp models heuristic forward search based planning significant  show section   
results increased coverage using lpetr  t     heuristic a    compared lpe  t     

   

   

  

  

lpetr t  

    

lpe t  

    

 

   

   

x
   x
  x
x  
x   

    
     
     

 

    

   

 

lp t  

  

   

x
   x
  x
x  
x   

    

    

     
     

    

   

 

lpe t  

  

   

    

figure    runtime comparisons relaxed h  models       delete free instances  exact computation
h    instances table        minute time limit   gb ram  point represents problem instance 
left subfigure compare lp t     vs lpe  t      showing impact enhancements basic lp
model  right subfigure compares lpe  t     vs lpetr  t      showing impact time relaxation 
algorithm failed solve instance within    minute time limit  runtime shown     
seconds 

   cost optimal planners using h   based heuristics
embedded ip lp models introduced far a   based  cost optimal
forward search planner  our planner implementation  uses propositional representation
internally  evaluated performance  note particular experiment limited admissible heuristics whose value bounded h    later results section     include
heuristics necessarily bounded h    specifically  evaluated following
solver configurations 
a   ip t       a  basic delete free ip model ip t     heuristic 
a   ipe  t       a  enhanced delete free ip model ipe  t     heuristic 
a   lpe  t       a  lp relaxation enhanced delete free ip model ipe  t    
heuristic 
a   lpetr  t       a  lp relaxation time relaxed  enhanced delete free ip model
ipe  t     heuristic 
   

fii mai   f ukunaga

hsp hst cplex   a  heuristic hitting set based h  solver hst cplex
 haslum et al         using cplex solve hitting set instances  hsp planner provided
patrik haslum  
fd hmax   fast downward using hmax heuristic  bonet   geffner        
fd lm cut   fast downward using landmark cut heuristic  helmert   domshlak       
 the standard seq opt lmcut configuration 
per standard ipc sequential optimal track settings  solver configurations run
   minute time limit per problem  gb ram limit  set      instances ipc    ipc      used  planner currently handles strips subset pddl action costs 
table   compares coverage heuristics  figure  a shows cumulative coverage
 out       solved function time solver configurations compared table   
figure  b shows cumulative coverage function number node evaluations  calls
heuristic function a    
compare ip lp based a   heuristics planners  note significant implementation level differences heuristic function affect execution
speed  example  fast downward uses multi valued sas  representation  backstrom   nebel 
      internally represent states  planner uses strips propositional representation 
significant differences internal data structures implementation details  thus 
results used qualitative comparisons 
table   shows a   ip t      uses basic ip t     model  worst coverage
among ip models        comparable a   hst cplex       noted haslum
        straightforward use h  heuristic unsuccessful  even worse fd using
hmax   coverage      cost computing h  search node high 
however  shown section    solving ipe  t     ip model significantly faster
ip t     a   hst cplex  makes much viable heuristic function a   
result  a   ipe  t     coverage      significantly outperforming a   hst cplex
well fd hmax 
shown section      lp relaxations ip models provide relatively tight lower
bounds h    since lp models solved much faster ip  quite effective
used heuristics a    thus  a   lpe  t      uses lp relaxation enhanced
ipe  t     model  coverage      a   lpetr  t      uses lp relaxation
time relaxed  enhanced ip model  coverage     
section      showed lpe  t     lpetr  t     models complementary lmcut respect informativeness  suggests least respect search efficiency 
lp models competitive lm cut  figure  b shows fact  a   lpe  t    
a   lpetr  t     tend search quite efficiently  seen lines
lm cut line  i e   problems solved using given number evaluations          node evaluations  point overtaken lm cut line 
informativeness comparison section     showed lp models comparable complementary lm cut respect informativeness  fd lm cut outperforms a   lpetr  t    
a   lpetr  t     domains  lm cut implementation fast downward
often significantly faster current implementation lp based heuristics  nevertheless  several domains  freecell  parcprinter     parcprinter opt    satellite  trucks  visitall  
   

fio n p ractical   nteger  l inear p rogramming odel

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

fd hmax

fd lm cut

hsp hst cplex

a   ip t    

a   ipe  t    

a   lpe  t    

solved
  
 
  
 
 
  
  
 
  
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
 
  
 
 
 
 
  
  
 
  
 
 
 
 
 
 
   
  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

solved
  
 
  
 
 
 
 
 
  
 
 
 
  
  
  
  
 
 
 
 
  
  
 
 
  
 
 
 
  
 
 
 
 
 
 
 
 
 
 
  
  
 
 
   
 

solved
  
 
  
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
  
 
 
   
 

solved
  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
 
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
 
   
  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
  
   
  

 
a   lpe
tr  t  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
  
 
  
  
  
  
  
   
  

table    comparison forward search  a    planners  part    number problems solved   
minute   gb ram limit using a  ip lp models bounded h   sections
     heuristic functions  comparison fast downward hmax   fast downward
landmark cut  hsp planner using hst cplex  haslum et al         compute h   
heuristic function 

a   lpetr  t     achieves higher coverage fd lm cut  thus  a   lpetr  t      best
model among bounded h    considered fairly powerful  admissible heuristic function forward state search based planning 
   

fii mai   f ukunaga

   
   

instances solved

   
   
   
   
fd lmcut
a  lpetr t  
a  lpe t  
a  ipe t  
fd hmax

   
   
 
   

 

  

   

    

time  seconds 
 a  cumulative number problems solved  out       vs time     minute time limit  

   
   

instances solved

   
   
   
   
fd lmcut
a  lpetr t  
a  lpe t  
a  ipe t  
fd hmax

   
   
 

 

  

   

    

              e   

 e   

 e   

evaluations
 b  cumulative number problems solved  out       vs number search nodes evaluated     minute
time limit  

figure    comparison forward search  a    planners  part     heuristics bounded
h    

   

fio n p ractical   nteger  l inear p rogramming odel

   incorporating counting constraints
far  concentrated efficient computation h  well relaxations h   
models far bounded h    however  ip model extended
constraints consider delete effects  adding variables constraints related delete effects
actions  model calculate lower bounds number times action must
applied  new variables defined follows 
a  n  a             n  a    n iff used n times 
p p  g p           g p      iff p g 
g p  auxiliary variable similar i p   furthermore  extended model  meaning
u  a         slightly modified mean action used least optimal
solution  in basic model proposed section    pure delete free model  u  a 
denoted whether used exactly optimal solution  
new constraints defined follows 
 c   a  n  a  u  a  
p
p
 c   p p  g p    as t ppredel a  n  a  i p    as t padd a  n  a  

predel a    pre a  del a   finally  objective function modified minimize
p
aa c a n  a   given planning task   use ipc  t   denote ip problem adds
new variables constraints ip t    
idea types constraints previously proposed several times  for sas 
formulation   correspond action order relaxation van den briel et al          state
equation heuristic bonet         net change constraints pommerening et al         
intuitively  final constraint states number uses actions adding p must greater
equal number uses actions requiring deleting p time feasible
plan   feasible plan strips planning task always satisfies condition  hence 
task feasible plan   clearly derive feasible solution ipc  t  
cost   addition this  stronger proposition proved modifications
models enhancements section   
proposition    given task   feasible plan    a          exists feasible
solution ipc  t   cost cost   addition this  exists feasible solution ipc  t   combination landmark extraction substitution  relevance
analysis  inverse action constraints cost cost  
proof  let   delete relaxation subsequence plan extracted algorithm   
first show subsequence   feasible delete free plan     show
assignment derived   satisfies constraints 
 
 
 
 
use  a 
        denote elements   show feasible   assume
 
 
a 
first infeasible action   let p proposition p pre ai   p  
 
 
i  a      ai      since valid feasible plan   delete relaxation entire sequence
valid feasible plan     hence  a 
feasible  algorithm  
 
skipped actions add p ai applied  since line   algorithm   equal
 
i  a 
      ai     i  skipped actions add p satisfy add ai          thus
   

fii mai   f ukunaga

algorithm   extracting subsequence    a         for proof proposition   
  
  
  
  
  
  
  
  
  
   

         empty
i 
  a     
let delete relaxation a 
relevant   add a       
append end    
add a   
end
end
return    

irrelevant     however contradicts definition relevance analysis
 
 
fact a 
relevant  similar argument  g i     hence valid feasible
plan    
define assignment f ipc  t   as 
vf    vf   variable v defined ip t      f   assignment
derived   ip t     
n  a f     the number occurrences   a 
assignment f clearly satisfies constraints c  c   assignment f satisfies
constraint c  since valid plan   f satisfies constraint c  since u  a f    
included   hence f feasible solution ipc  t   cost  
addition  f feasible solution ipc  t   combination landmark extraction
substitution  relevance analysis  inverse action constraints  see checking
feasibility f type modified constraints independently  f satisfies
modified constraints  satisfies combination constraints 
f satisfies constraints added landmark extraction substitution  i e  substituting   variables corresponding landmarks  since   valid feasible plan     f
satisfies constraints added relevance analysis  i e  substituting   irrelevant actions
propositions  since   contains relevant actions  finally  show
p f satisfies inverse
action constraints similarly proof proposition    inv a p  e a   p f    
p
u  a f     u  p f     hold  inv a p  e a   p f  
p
u  a f     u  p f     hold  addition  show inv a p  e a   p f    
u  a f   u  p f      assume exists inv a  p  e a   p f      then 
constraint c   u  a  f      means member     without loss generality 
assume applied applied     since add a   pre a  definition inverse
actions  nothing new added state applying   line   algorithm   equal

i  a 
          contradicts add ai         
unfortunately  counting constraints conflict dominated action elimination  section     
zero cost immediate action application  section       counting constraints used 
necessary disable zero cost immediate action application modify condition
dominated actions follows 
   

fio n p ractical   nteger  l inear p rogramming odel

definition    modified dominated action definition   given feasible task   action dominated action  i  add a  add a     ii  p pre a    p fact landmark
p i   iii  c a  c a     iv  pre a   del a   pre a  del a  
longer use modified dominated actions make feasible plan   since fact
landmarks sometimes deleted achieved  however following fact proved 
proposition    given task   let    a        feasible solution   exists
feasible solution ipc  t   combination landmark extraction substitution  relevance
analysis  inverse action constraints  modified dominated action elimination cost
equal less cost  
proof  recall dominated action elimination constraints substitute  s u  a  dominated action a  contain modified dominated actions  proposition holds
due proposition   
otherwise  derive feasible solution using sequence actions made replacing
modified dominated actions corresponding dominating actions  let
sequence  note sum costs actions clearly less equal  
let   relaxation subsequence extracted algorithm    since
prove delete relaxation feasible plan   argument similar proof
proposition    prove   feasible plan   argument similar
proof proposition   
  feasible plan  derive feasible solution ipc  t   constraints
proof proposition    solution satisfies constraints c  c 
combination landmark extraction substitution  relevance analysis  inverse action
constraints  satisfies constraint c  u  a      included   satisfies
constraint c  replacing dominated actions invalidate constraint c  feasible
plan   satisfies dominated action elimination constraints  i e  u  a     
dominated action a  since contain modified dominated action 




ipec  t   lpec  t   denote models constructed applying valid reductions
ipc  t   lpc  t   respectively  lp time relaxations ip t     described section  

applied ipc  t   well  lpectr  t   time relaxed  lp relaxation enhanced

ipec  t   model  table   summarizes relationships among models 
    experimental results models enhanced counting constraints


see impact adding counting constraints  evaluated informativeness lpec  t   

lpectr  t    lpe  t      lpetr  t     comparing values lm cut heuristic values


 helmert   domshlak         table   shows values lpec  t    lpectr  t    lpe  t     
lpetr  t     multiple lm cut values  means domain shown   note
contrast table    limited      instances h  could computed
exactly  table   includes      instances  because lm cut values could computed
     instances  
majority domains  counting constraints result informative heuristic 

compared models without counting constraints  cases  lpe  t     lpec  t  

lpetr  t     lpectr  t    sometimes possible optimal value lpe  t     larger
   

fii mai   f ukunaga





optimal value lpec  t   lpetr  t     larger optimal value lpectr  t  
explained section    additional constraints part ipe  t    

incompatible ipc  t   excluded ipec  t    resulting different lp polytopes
lp relaxations 
next  see impact adding counting constraints forward search planning using


delete relaxation lp models  compare a   lpec  t   a   lpe  t      a   lpectr  t  
a   lpetr  t      coverage instances previous experiment shown table    
tradeoff improved search efficiency due additional informativeness
heuristic provided counting constraints  additional time required solve lps
 because additional constraints make lp difficult solve   table    shows

overall effects enhancing delete relaxation model mixed  a   lpec  t   attains coverage

    instances  lower coverage a   lpe  t      a   lpectr  t   solves    
problems compared     problems solved a   lpetr  t      domains
adding counting constraints significantly improved coverage  including parcprinter  pathwaysnoneg  rovers  woodworking  hand  coverage dropped significantly elevators  freecell  openstacks result adding counting constraints  time relaxation seems
advantageous overall  resulting increase     instances a   lpe  t         problems
a   lpetr  t     
table   shows value lmc seq lp value  pommerening et al          combination landmark constraints net change constraints operator counting framework analogous combination delete free model counting constraints 


interesting compare optimal lp values  lpec  t   lpectr  t   higher average value
lmc seq       domains  respectively  lmc seq higher value


lpec  t   lpectr  t      domains  thus  previous comparison lm cut
lpe  t     lpetr  t     section      delete relaxation approach seems complementary
lmc seq combination operator counting framework  hand  comparing
results forward search based optimal planning using lp models  see fd lmc


seq significantly higher coverage a   lpec  t   a   lpectr  t    well a   lpec  t  

a   lpectr  t   

   automatic lp model selection
definitions models  know strips planning task action
costs  relationships among ip models follows  iptr  t     ipetr  t     ip t      

ipe  t       h  ipc  t     ipec  t    lp relaxations  know lp t    




lpe  t      lpetr  t     lpe  t      lpectr  t   lpec  t    lpectr  t   lpec  t    note

lpec  t   always dominate lpe  t      dominated action elimination immediate action application eliminate different sets variables two lp models  figure  
illustrates dominance relationships among bounds 

time relaxed lpetr  t     lpectr  t   dominated non time relaxed models

lpe  t     lpec  t    respectively  time relaxed lps significantly cheaper compute
non relaxed counterparts 

similarly  although ipec  t   dominates ipe  t      possible lpe  t     larger

lpec  t    furthermore  two lps optimal value  one solved faster
clearly preferable lps must solved node a  search  thus  set
   

fio n p ractical   nteger  l inear p rogramming odel

airport
barman opt  
blocks
depot
driverlog
elevators opt  
elevators opt  
floortile opt  
freecell
grid
gripper
logistics  
logistics  
miconic
no mprime
no mystery
nomystery opt  
openstacks
openstacks opt  
openstacks opt  
parcprinter   
parcprinter opt  
parking opt  
pathways noneg
pegsol   
pegsol opt  
pipesworld notankage
pipesworld tankage
psr small
rovers
satellite
scanalyzer   
scanalyzer opt  
sokoban opt  
sokoban opt  
tpp
transport opt  
transport opt  
trucks
visitall opt  
woodworking opt  
woodworking opt  
zenotravel

lmc seq

lpe  t    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   
   
    
    
    
   
   
    
    
    
    
   
   
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
   
   
   
    
    
    
    
   

 
lpe
tr  t  

   
   
    
    
   
   
   
    
    
    
    
   
   
    
   
   
    
    
    
    
    
    
   
    
    
    
    
    
    
   
   
   
   
    
    
   
   
   
    
    
    
    
   





lpe
c  t  

lpe
ctr  t  

   
    
    
    
    
   
   
    
    
    
    
    
    
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
    
   
   
    
    
    
    
   

   
    
    
    
    
   
   
    
    
    
    
    
    
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
    
   
   
    
    
    
    
   

table    optimal values lp models relative lm cut value      ipc instances  means
domain shown  e g   barman opt    mean lmc seq value      times lm
cut value  lpe  t     lpetr  t     values      times lm cut value  lpec  t  

lpectr  t   values      times lm cut value 

   

fii mai   f ukunaga

   
   

instances solved

   
   
   
   

fd lmc seq
a  autoconf
fd lmc
a  lpe
ctr t 
a  lpetr t  
fd seq

   
   
 
   

 

  

   

    

time  seconds 
 a  cumulative number problems solved  out       vs time     minute time limit  

   
   

instances solved

   
   
   
   

fd lmc seq
a  autoconf

   

fd lmc
a  lpe
ctr t 

   

a  lpetr t  
fd seq

 

 

  

   

    

              e   

 e   

 e   

evaluations
 b  cumulative number problems solved  out       vs number search nodes evaluated     minute
time limit  

figure    comparison forward search  a    planners  part   

   

fio n p ractical   nteger  l inear p rogramming odel

  viable lp heuristics  none dominate others considering accuracy
time  best choice optimize tradeoff heuristic accuracy node expansion
rate depends problem instance  difficult choose best heuristic priori
general  know     whether worthwhile use counting constraints not     
whether time relaxation tight particular problem instance 
thus  implemented simple mechanism automatically selecting lp used

problem works follows  first  compute lpe  t      lpec  t    lpetr  t     

lpectr  t   problem instance  i e   root node a  search   select one
based following rule  choose heuristic highest value  break ties choosing heuristic cheapest compute  although cheapest heuristic could identified
according cpu time required compute heuristic  many problems  computations fast robust timing measurements  simply break ties order lpetr  t     


lpectr  t    lpe  t      lpec  t    ordering usually accurately reflects timing order 
mechanism makes simplistic assumption ranking behavior lp bounds
root node similar ranking lp bounds throughout search graph  sophisticated method heuristic selection may result better performance  c f  domshlak  karpas 
  markovitch         avenue future work 
    experimental results automated model selection comparison
state of the art
compared a  using lp based heuristics  including a   autoconf  state of the art heuristics  specifically  compared 
fd lm cut   fast downward using landmark cut heuristic  helmert   domshlak       
 the standard seq opt lmcut configuration 
fd lmc   fast downward using lp model optimal cost partitioning landmark
cut constraints  pommerening et al        
fd seq   fast downward using lower bound net change constraints  pommerening et al  
       corresponding state equation heuristic bonet        
fd opt sys   fd pho sys   fd pho sys    fast downward using optimal cost partitioning constraints projections goal variables  opt sys    post hoc optimization
constraints  pho sys   pho sys    pommerening et al         
fd lmc seq   fast downward using landmark cut net change constraints 
a   lpe  t       a  lp relaxation enhanced delete free ip model ipe  t    
 section    heuristic 
a   lpetr  t       a  lp relaxation time relaxed  enhanced delete free ip model
ipe  t     heuristic 


a   lpec  t     a  lp relaxation enhanced delete free ip model counting

constraints ipec  t   heuristic 


a   lpectr  t     a  lp relaxation time relaxed  enhanced delete free ip model

counting constraints ipec  t   heuristic 
   

fii mai   f ukunaga

      c overage r esults
coverage results  number problems solved  shown tables     time spent
root node a   autoconf lp model selection included runtimes  counts
   minute runtime limit  figures  a  b show cumulative number instances solved
function number time number node evaluations  respectively  for legibility 
subset algorithms included figures  a  b   table    shows summary total coverage
results forward search configurations included tables      
results indicate automatic lp model selection significantly boosts performance
a   based planner compared relying single lp model  a   autoconf achieved coverage          instances  significantly better   individual components 
furthermore  a   autoconf attained higher coverage solver configurations table
   except fd lmc seq  pommerening et al          solved     instances  note
a   autoconf higher coverage fd lmc seq       domains  floortile opt    freecell 
grid  logistics    nomystery opt    pathways noneg  rovers  satellite  trucks  woodworking opt   
woodworking opt    
      accuracy a    autoconf odel election
analyzed accuracy model selection evaluating performance a   autoconf
problem instance vs performance four component models  coverage
considered        instances  a   autoconf made correct decision respect
coverage  model selection a   autoconf deemed correct either a   autoconf
solved problem instance  none   components solved problem instance 
hand  runtimes considered well coverage        instances  a   autoconf
made correct decision  selection deemed correct a   autoconf selected
model best runtime  including ties   none   components solved problem

instance  baseline  lpectr  t    best coverage among component models 
correct choice according criterion       time  mistakes selections made
a   autoconf seen table    coverage results example  woodworking opt  

domain  a   autoconf solved    instances compared    instances solved lpectr  t    thus 
significant room improvement runtimes considered addition coverage 
improving model selection using machine learning techniques direction future work 

    discussion conclusion
paper proposed new  integer linear programming formulation delete relaxation h 
cost optimal  domain independent planning  started basic ip model ip t     
showed enhanced model ipe  t      incorporates landmark based variable reduction 
relevance analysis  action elimination  competitive previous methods solving deletefree versions standard ipc planning benchmarks tasks  i e   exact computation h    
results embedding ip model heuristic function a   based forward search
planner confirmed plain ip t     model practical  coverage          instances
vs      fast downward using hmax    however  showed ipe  t     model 
uses variable reduction methods reduce size ip models exactly computes h   
performed much better  coverage     instances  according summary results
   

fifd seq

a   lpe  t    

 
a   lpe
tr  t  

  
 
  
 
  
  
 
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
 
  
  
 
  
 
 
  
  
 
 
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
 
 
  
  
 
  
 
 
  
  
  
  
   
  

  
 
  
 
  
  
 
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
 
  
  
 
 
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
  
   
 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
  
 
  
  
  
  
  
   
 

a   autoconf

fd pho sys 

  
 
  
 
  
 
 
 
 
 
 
 
  
  
  
  
 
 
  
 
  
 
 
 
  
  
  
 
  
 
 
  
 
  
  
 
 
 
 
  
 
 
 
   
 



fd pho sys 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

a   lpe
ctr  t  

fd opt sys 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  



fd lmc seq

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
 
 
 
 
  
  
 
  
  
  
  
 
  
  
 
 
 
  
  
 
 
 
  
  
  
  
  
   
  

  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
  
  
  
  
 
  
  
 
 
 
  
  
 
 
 
  
  
  
  
  
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
 
  
 
  
  
  
  
  
   
  

a   lpe
c  t  

fd lmc

domain
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

fd lm cut

n p ractical   nteger  l inear p rogramming odel

table     comparison forward search  a    planners  part    number problems solved
   minute   gb ram limit using a  ip lp models heuristic functions  includes lp


models incorporate counting constraints  lpec  t    lpectr  t    section     well a   autoconf
 section     comparison fast downward using operator counting lp models  pommerening
et al         

   

fii mai   f ukunaga

configuration
fd lm cut

  solved
   

fd hmax
fd seq
fd pho sys 
fd pho sys 
fd lmc

   
   
   
   
   

fd opt sys 
fd lmc seq
a   hst cplex

   
   
   

a   ip t    
a   ipe  t    
a   lpe  t    
a   lpetr  t    

a   lpec  t  
 
e
 lpctr  t  
a   autoconf

   
   
   
   
   
   
   

description
fast downward  fd  using standard landmark cut heuristic
 seq opt lmcut 
fd using hmax heuristic
fd using seq lp heuristic  pommerening et al        
fd using pho sys  lp heuristic  pommerening et al        
fd using pho sys  lp heuristic  pommerening et al        
fd using lp model optimal cost partitioning landmark constraints  pommerening et al        
fd using opt sys  lp heuristic  pommerening et al        
fd using lmc seq lp heuristic  pommerening et al        
hsp planner using a  h  heuristic  haslum et al         haslum 
     
basic ip formulation h 
ip t     enhancements sections        
lp relaxation ipe  t    
lp relaxation time relaxed model ipetr  t    

lp relaxation ipec  t  

lp relaxation time relaxed model ipectr  t  
automated selection lp root node section   

table     summary coverage    solved       ipc benchmark problems instances   
minute time limit  gb ram  see tables      detailed results 
table     aggregate coverage ipe  t     comparable coverage obtained lpbased seq  opt sys   pho sys   pho sys  heuristics recently implemented using
operator counting framework pommerening et al          however  aggregate coverage
ipc benchmarks skewed miconic domain  seq  opt sys   pho sys  
pho sys  perform particularly poorly compared heuristics  miconic domain
included  ipe  t     competitive lp based models  note freecell
domain  a  ipe  t     heuristic solved       instances  significantly higher
methods  least   domain exact h  computation using ipe  t     model
performs extremely well compared state of the art heuristics 
showed gap optimal value lp relaxations ip models
h  tended quite small  the gap often zero   suggesting lp relaxations 
computed much faster ip models  could used heuristic a   based planning 
time relaxation eliminates time related constraints proposed another way
reduce model order solvable faster  comparison lp relaxed delete relaxation
models lm cut  helmert   domshlak        heuristic values showed approaches
complementary respect closely approximate h    thus  lp relaxation
delete free models provides novel  practical alternative approximating h    showed
a  search using lpe  t      lp relaxation delete free task  lpetr  t      time relaxed 
lp relaxation delete free task  significantly improves upon ip models  solving        
instances  respectively  making usable practical heuristics 
major advantage lp based heuristics relative ease additional constraints
added order obtain improved heuristics  showed counting constraints 
corresponding net change constraints proposed previous work  van den briel et al        

pommerening et al          could added lp model  resulting heuristic  lpectr  t  
mixed results  improving performance domains  degrading performance

domains  i e   lpetr  t     lpectr  t   complementary heuristics 
   

fio n p ractical   nteger  l inear p rogramming odel



since dominance relationship among a   lpe  t      a   lpetr  t      a   lpec  t  

 
 lpectr  t    proposed a   autoconf   simple method automatically selects among
  heuristics computing   heuristic values root node using accurate heuristic
 breaking ties according speed   showed overall  a   autoconf significantly improves upon
  components  competitive landmark cut heuristic  solving          instances
achieving state of the art performance several domains 
a   autoconf lower total coverage compared fast downward using lmc seq
lp based heuristic  pommerening et al          lp t     based approach outperforms lmcseq several domains including freecell  pathways noneg  rovers  satellite  trucks  woodworking  although a   autoconf includes lp models counting constraints consider
delete effects  note a   lpetr  t      uses pure delete free lp  performs quite well  obtaining higher coverage operator count based heuristics pommerening et al        
floortile  freecell  nomystery opt    satellite  trucks domains  counting constraints
required order a  using delete relaxation based lps achieve state of the art
performance domains 
comparison optimal values counting constraint enhanced delete relaxation lp


models lpec  t   lpectr  t   optimal lp values lmc seq model showed
complementary  class models outperforming roughly
number domains  section       thus  integrating two approaches single lp model
promising direction future work  recent survey lp based heuristics planning 
roger pommerening        noted delete relaxation model incorporated
operator counting framework pommerening et al         adding operator counting variables
operator delete relaxed problem promising direction future work  note
pommerening et al         approach use landmarks  used
different purposes  landmark constraints used pommerening et al         used directly
operator counting constraints  contrast  approach uses landmarks order decrease
size ip lp models delete free task used purpose speeding
computation ip lp models  i e   landmark based reduction change optimal value
ip t     

showed adding counting constraints consider delete effects  i e   lpec  t  

lpectr  t    improve performance domains  domains  coverage dropped
significantly  additional constraints make lp difficult solve 
increased search efficiency due tighter bound enough overcome increased cost
solving lp search node  a   autoconf attempts address selecting models
counting constraints return higher value model without counting constraints root node  otherwise uses model include counting constraints
 i e   lpe  t     lpetr  t       hand  strengthening delete relaxation considering
delete effects active area research  recently  two frameworks allow flexible interpolation delete relaxation original model proposed 
keyder  hoffmann  haslum        propose approach adds new fluents represent
conjunctions fluents original planning task  red black planning  domshlak  hoffmann   
katz        framework separates state variables two groups red variables
relaxed  black variables relaxed  combining flexible relaxation frameworks
ip approach developing principled approach deciding use counting
constraints avenue future work 
   

fii mai   f ukunaga

current implementation uses cplex solver naively  relying entirely default control
parameters  systematically tuning improving implementation ip lp models order
make better use incremental ip lp solving capabilities promising direction future work 
although shown lp models often compute h  exactly  domains
significant gaps h  optimal cost lp models  improved
modeling techniques may allow tighter lp bounds  example  constraint c  uses straightforward
big m encoding  may possible obtain tighter bounds using methods 
furthermore  although solving ip node forward search based planner previously considered impractical  shown ipe  t     model  computes h 
exactly  almost useful practical heuristic  improving techniques used solve ip
ipe  t     may result balance accuracy speed necessary practical general
purpose heuristic  example  significant performance improvements might obtainable improving use ip solver  example  contrast lp solvers  parallel speedups
often difficult obtain  ip solvers often sped significantly parallelization  current
ip solvers already provide parallel search algorithms  which use paper
limited experiments single threads   number cores per processor continues increase  possible cases  ip based heuristics may become useful lp based
heuristics 

acknowledgments
thanks patrik haslum assistance code computing h  hsp f planner 
thanks florian pommerening assistance code lp heuristic based fast downward  pommerening et al          thanks anonymous reviewers numerous helpful suggestions significantly improved paper  research supported jsps grant in aid
jsps fellows jsps kakenhi grant 

references
backstrom  c     nebel  b          complexity results sas  planning  computational intelligence                
betz  c     helmert  m          planning h  theory practice  ki       pp      
springer 
blum  a     furst  m          fast planning planning graph analysis  artificial intelligence                  
bonet  b          admissible heuristic sas  planning obtained state equation 
proceedings international joint conference artificial intelligence  ijcai   pp 
         
bonet  b     castillo  j          complete algorithm generating landmarks  proceedings
international conference automated planning scheduling  icaps  
bonet  b     geffner  h          planning heuristic search  artificial intelligence           
    
bonet  b     helmert  m          strengthening landmark heuristics via hitting sets  proceedings
european conference artificial intelligence  ecai   pp         
   

fio n p ractical   nteger  l inear p rogramming odel

bonet  b     van den briel  m          flow based heuristics optimal planning  landmarks
merges  proceedings international conference automated planning
scheduling  icaps  
bylander  t          computational complexity propositional strips planning  artificial
intelligence                 
bylander  t          linear programming heuristic optimal planning  proceedings
national conference artificial intelligence  aaai   pp         
cooper  m  c   de roquemaurel  m     regnier  p          transformation optimal planning
problems  journal experimental   theoretical artificial intelligence                
dimopoulos  y          improved integer programming models heuristic search ai planning 
proceedings  th european conference planning  ecp   pp       
domshlak  c   karpas  e     markovitch  s          online speedup learning optimal planning 
journal artificial intelligence research             
domshlak  c   hoffmann  j     katz  m          red black planning  new systematic approach
partial delete relaxation  artificial intelligence             
gefen  a     brafman  r          minimal seed set problem  proceedings international conference automated planning scheduling  icaps   pp         
gefen  a     brafman  r          pruning methods optimal delete free planning  proceedings
international conference automated planning scheduling  icaps   pp       
haslum  p          incremental lower bounds additive cost planning problems  proceedings
international conference automated planning scheduling  icaps   pp       
haslum  p       a  personal communication 
haslum  p       b   hsp  code documentatoin http   users cecs anu edu au 
patrik un hsps html  
haslum  p   slaney  j     thiebaux  s          minimal landmarks optimal delete free planning  proceedings international conference automated planning scheduling
 icaps   pp         
helmert  m     domshlak  c          landmarks  critical paths abstractions  whats difference anyway   proceedings international conference automated planning
scheduling  icaps   pp         
hoffmann  j     nebel  b          planning system  fast plan generation heuristic search  journal artificial intelligence research             
hoffmann  j   porteous  j     sebastia  l          ordered landmarks planning  journal
artificial intelligence research             
imai  t     fukunaga  a          practical  integer linear programming model deleterelaxation cost optimal planning  proceedings european conference artificial
intelligence  ecai  
karpas  e     domshlak  c          cost optimal planning landmarks  proceedings
international joint conference artificial intelligence  ijcai   pp           
   

fii mai   f ukunaga

katz  m     domshlak  c          optimal admissible composition abstraction heuristics  artificial intelligence                     
kautz  h     selman  b          planning satisfiability  proceedings european conference artificial intelligence  ecai   pp         
kautz  h  a     selman  b          pushing envelope  planning  propositional logic stochastic search  proceedings national conference artificial intelligence  aaai   pp 
         
kautz  h  a     selman  b          unifying sat based graph based planning  proceedings
international joint conference artificial intelligence  ijcai   pp         
keyder  e   richter  s     helmert  m          sound complete landmarks and or graphs 
proceedings european conference artificial intelligence  ecai   pp         
keyder  e     geffner  h          heuristics planning action costs revisited  proceedings
european conference artificial intelligence  ecai   pp         
keyder  e  r   hoffmann  j     haslum  p          improving delete relaxation heuristics
explicitly represented conjunctions  journal artificial intelligence research             
mirkis  v     domshlak  c          cost sharing approximations h   proceedings
international conference automated planning scheduling  icaps   pp         
pommerening  f     helmert  m          optimal planning delete free tasks incremental lm cut  proceedings international conference automated planning
scheduling  icaps   pp         
pommerening  f   roger  g   helmert  m     bonet  b          lp based heuristics costoptimal planning  proceedings international conference automated planning
scheduling  icaps  
pommerening  f   roger  g     helmert  m          getting pattern databases
classical planning  proceedings international joint conference artificial
intelligence  ijcai  
rintanen  j          planning satisfiability  heuristics  artificial intelligence            
rintanen  j   heljanko  k     niemela  i          planning satisfiability  parallel plans algorithms plan search  artificial intelligence                       
robinson  n          advancing planning as satisfiability  ph d  thesis  griffith university 
robinson  n   mcilraith  s  a     toman  d          cost based query optimization via ai planning 
proceedings twenty eighth aaai conference artificial intelligence  july        
      quebec city  quebec  canada   pp           
roger  g     pommerening  f          linear programming heuristics optimal planning 
aaai     workshop planning  search  optimization 
van den briel  m         personal communication 
van den briel  m   benton  j   kambhampati  s     vossen  t          lp based heuristic
optimal planning  proceedings international conference principles practice
constraint programming  cp  
   

fio n p ractical   nteger  l inear p rogramming odel

van den briel  m     kambhampati  s          optiplan  planner based integer programming 
journal artificial intelligence research             
van den briel  m   vossen  t     kambhampati  s          loosely coupled formulation automated planning  integer programming perspective  journal artificial intelligence
research             
vossen  t   ball  m  o   lotem  a     nau  d  s          use integer programming models
ai planning  proceedings international joint conference artificial intelligence
 ijcai   pp         
zhu  l     givan  r          landmark extraction via planning graph propagation  proceedings
icaps doctoral consortium  pp         

   


