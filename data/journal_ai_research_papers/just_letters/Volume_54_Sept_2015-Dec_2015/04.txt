journal of artificial intelligence research                  

submitted       published      

on a practical  integer linear programming model for delete free
tasks and its use as a heuristic for cost optimal planning
tatsuya imai

tatsuya   imai            gmail   com

graduate school of information science and engineering
tokyo institute of technology
tokyo  japan

alex fukunaga

fukunaga   idea   c   u   tokyo   ac   jp

graduate school of arts and sciences
the university of tokyo
tokyo  japan

abstract
we propose a new integer linear programming model for the delete relaxation in cost optimal
planning  while a straightforward ip for the delete relaxation is impractical  our enhanced model
incorporates variable reduction techniques based on landmarks  relevance based constraints  dominated action elimination  immediate action application  and inverse action constraints  resulting in
an ip that can be used to directly solve delete free planning problems  we show that our ip model
is competitive with previous state of the art solvers for delete free problems  the lp relaxation
of the ip model is often a very good approximation to the ip  providing an approach to approximating the optimal value of the delete free task that is complementary to the well known lm cut
heuristic  we also show that constraints that partially consider delete effects can be added to our
ip lp models  we embed the new ip lp models into a forward search based planner  and show
that the performance of the resulting planner on standard ipc benchmarks is comparable with the
state of the art for cost optimal planning 

   introduction
the delete relaxation of a classical planning problem is a relaxation of a planning problem such
that all delete effects are eliminated from its operators  in the delete relaxation  every proposition
that becomes true remains true and never becomes false again  the delete relaxation has been
studied extensively in the classical planning literature because it can be used to estimate the cost
of an optimal plan for the original planning problem and is therefore useful as a basis for heuristic
functions for search based domain independent planning algorithms  a solution for the original
planning problem is a solution for its delete relaxation  and the cost of the optimal solution to a
delete relaxed problem can be lower than the cost of the original problem because in the relaxation 
every proposition only needs to be established once  thus  the optimal cost of the delete relaxation
of a planning problem  denoted h    is a lower bound on the optimal cost of the original planning
problem  despite the fact that computing h  is easier than solving the original planning problem 
computing h  is itself np equivalent  bylander        and poses a challenging problem 
in addition to its importance as a basis for heuristic functions for standard classical planning 
the delete relaxation is also interesting in its own right  because there are some problems that can
be naturally modeled as delete free problems  i e   problems where there are no actions with delete
effects   for example  the minimal seed set problem  a problem in systems biology which seeks
c
    
ai access foundation  all rights reserved 

fii mai   f ukunaga

the minimal set of nutrients that are necessary for an organism to fully express its metabolism 
can be mapped to a delete free planning problem  gefen   brafman         another application
is in relational database query plan generation  robinson  mcilraith    toman         where the
problem of determining join orders can be modeled as a delete free problem 
in this paper  we propose a new  integer programming  ip  approach to computing h     we show
that this model allows fast computation of h    and that the linear programming  lp  relaxation of
this model can be used successfully as the heuristic function for an a   based planner  the rest of
this paper is structured as follows  we begin with a review of previous work on the delete relaxation
as well as applications of lp to planning  then we introduce ip t      a basic integer programming
model for a delete free planning problem  section    and show that it correctly computes h    since
the straightforward ip t     model is often intractable and not useful in practice for computing
h    we develop an enhanced model  ipe  t      which reduces the number of variables in the ip by
using techniques such as landmark based constraints  relevance analysis  section     we evaluate
the performance of the basic ip t     and enhanced ipe  t     models in section    and show that
ipe  t     is competitive with the state of the art methods for computing h   
while our objective is to use our ip models as a basis for a heuristic for forward state space
search based planning  solving an ip at every node in the search algorithm is computationally daunting  so in section    we propose and evaluate two relaxations to our ip t     based ip models  we
consider the lp t     and lpe  t      lp relaxation of ip t     and ipe  t      and show that the
lp relaxations usually closely approximate h    we also introduce a time relaxation of the ip and
lp models  ipetr  t     and lpetr  t      respectively  which further reduces the number of variables 
at the cost of sometimes underestimating h    and show that these time relaxations usually closely
approximate h    we experimentally compare how closely these relaxed  delete free models approximate h  with the lm cut heuristic  helmert   domshlak        and show that these approaches
are complementary 
next  in section    we evaluate the utility of our ip and lp models as heuristics for forwardsearch based planning by embedding them into an a   based planner  our results show that although
lpetr  t     is not competitive with the lm cut heuristic overall  there are some domains where
lpetr  t     yields state of the art performance  outperforming lm cut 
we then turn to strengthening our ip and lp models by partially considering delete effects
 section     we add constraints that enforce lower bounds on the number of times an action must be
used  these correspond to the net change constraints that were recently proposed by pommerening
et al          as well as the action order relaxation by van den briel et al          this tightened
bound ipc  t   dominates ip t      counting constraints can also be added to the lp relaxation


lpec  t    as well as the time relaxed lp relaxation lpectr  t    however  the additional counting
constraints makes the ip and lp more difficult  so in a a   based planner that uses these bounds  there
is a tradeoff between a tighter bound  fewer nodes searched by a    and the time spent per node  as a
result  we find that although counting constraints result in enhanced performance on some domains 
it significantly degrades performance on other domains  we experimentally compare our countingconstraint enhanced models with the lmc seq lp model of pommerening et al         which
combines landmark and net change constraints  and show that  like lm cut vs our delete free lps 
these models are complementary 
   this paper revises and extends the work originally reported by the authors in a paper presented at ecai      imai  
fukunaga         formal results and proofs which were not in the ecai paper are included  and this paper contains
a much more thorough experimental evaluation of our models  all of the experimental data is new  

   

fio n a p ractical   i nteger  l inear p rogramming m odel

table   provides an overview of all of the ip lp models discussed in sections      and also
serves as a roadmap of this paper   for each model  we indicate the section in the text where the
model is introduced  the constraints used in the model  and the variable elimination optimizations
used in the model  figure   is a directed graph showing the dominance relationships among the
optimal costs of the ip lp models 
finally  because there is no clear dominance relationship among our lp models  with respect
to the performance of a   based planners that use these lp models as the heuristic function   we
propose and evaluate a simple automatic configuration heuristic which selects the lp to use as the
heuristic for a   section     this simple automated bound selection significantly boosts performance  resulting in a ensemble based lp heuristic that is competitive with state of the art heuristics  section    concludes the paper with a summary and discussion of our results and some directions for future work 

   background and related work
this section first introduces the notation for planning tasks which will be used in the rest of the paper  then surveys related work on solving delete free planning tasks as well as previous applications
of ip lp to domain independent planning 
    preliminary definitions
a strips planning task is defined by a   tuple t   hp  a  i  gi  p is a set of propositions  a
is a set of actions  a state is represented by a subset of p   and applying an action to a state adds
some propositions and removes some propositions in the state  each action a  a is composed
of three subsets of p   hpre a   add a   del a i which are called the preconditions  add effects  and
delete effects  an action a is applicable to a state s iff it satisfies pre a   s  by applying a to
s  propositions in s change from s to s a      s   del a    add a    for a sequence of actions
    a         an    we use s   to denote     s   del a      add a       del a            add an   
let i  p be the initial state and g  p the goal  a solution to a planning task is a sequence
of actions that transform i to a state s that satisfies g  s  formally  a feasible solution  i e   a
plan  is a sequence of actions     a         an   that satisfies  i  i  pre ai    i  a         ai     
and  ii  g  i   
the basic strips planning task can be extended to strips planning with action costs  where
each action a  a has an associated  non negative  cost c a   the objective of cost optimal planning in a strips
model with action costs is to find a plan  that minimizes the sum of the costs of
p
its actions i n
c a
i   
i  
the delete relaxation of a task t   denoted by t     is a task hp  a    i  gi where a  is a set of
delete free actions defined as a     hpre a   add a   i   a  a   we also use t   to denote a
task that is delete free from the beginning without being relaxed 
    previous work on computing h  and its relaxations
the delete relaxation has been used as the basis for planning heuristics since the beginning of the
recent era of interest in forward state space search based planning  bonet   geffner         unfortunately  computing h  is known to be np equivalent by reduction from vertex cover  bylander 
   

fii mai   f ukunaga

model
ip t      sec    
ipe  t      sec    

constraints
c   c   c   c  
c   c  
c   c a c   c  
c   c 

variable eliminations
none
landmarks        relevance        dominated
action elimination       
immediate action application      
none
same as ipe  t    
same as ipe  t    

lp t      sec      
lpe  t      sec      
lpetr  t      sec      

same as ip t    
same as ipe  t    
c   c a c   c  

ipc  t    sec    

c   c   c   c  
c   c   c  c 

none

ipec  t      sec    

c   c a c   c  
c   c  c  c 

lpc  t    sec    

lpec  t    sec    

lpectr  t    sec    

same as ipc  t  

same as ipec  t  
c   c a c   c  
c  c 

landmarks        relevance
       modified dominated
action elimination  definition   
none

same as ipec  t  

same as ipec  t  

a   autoconf  sec    

selects among lpe  t      lpetr  t      lpec  t   

lpectr  t   



basic delete free task ip
model  computes h   
enhanced ip model  computes h   

lp relaxation of ip t    
lp relaxation of ipe  t    
lp relaxation of timerelaxation of ipe  t    
basic delete free task
ip model enhanced with
counting constraints
enhanced ip model with
counting constraints

lp relaxation of ipc  t  

lp relaxation of ipec  t  
lp relaxation of time
relaxation of ipec  t  



automatic lp model selection

table    overview of delete relaxation based ip lp models in this paper

lp t  

lptr t  

lpe t  

ip t     ipe t    aaa
h 

ipcec t 

lpec
c t 

lptre t  

iptre t  

ec t 
ipctr

e  t 
c
lpctr

iptr t  

figure    dominance relationships among our ip lp models  edge modeli  modelj indicates the
optimal cost of modeli  the optimal cost of modelj   the   highlighted lps are the components
of the a   autoconf model 

   

fio n a p ractical   i nteger  l inear p rogramming m odel

       and therefore  from the beginning  researchers avoided direct computation of h    and instead
sought approximations to h   
in satisficing planning  where optimal solutions are not required  a successful approach to deriving heuristics has been to approximate the delete relaxation  the additive heuristic  hadd   assumes
that subgoals are independent and computes the sum of achieving each subgoal in the delete relaxed
model  bonet   geffner         the ff heuristic  hoffmann   nebel        constructs a planning
graph  blum   furst        for the delete relaxed problem  extracts a relaxed plan  and computes
the number of actions in the relaxed plan  which is an upper bound on h   
in the case of cost optimal planning  where each action is assigned a cost and the objective is to
find a minimal cost plan  lower bounds on h  are the basis for several admissible heuristic functions
that have been used in the literature  bonet and geffner        proposed the hmax heuristic  which
computes the highest cost associated with achieving the most costly  single proposition  while
hmax is admissible  it is often not very informative  i e  the gap between hmax and h  is large 
because it only considers the single most costly goal proposition  the admissible landmark cut
 lm cut  heuristic  helmert   domshlak         approximates h  as follows  for state s  the lmcut heuristic first computes hmax  s   and if this is zero or infinite  then h  is zero or infinite  so
hlm cut  s    hmax  s   otherwise  a disjunctive action landmark l  a set of actions at least one of
which must be included in any relaxed plan  is computed  and the cost of all actions in l is reduced
by c m   the cost of the minimal cost action m  l  and hlm cut is increased by c m   this process
is repeated until hmax  s   for the remaining  reduced problem  becomes    other approximations to
h  that are more informative than hmax include the set additive heuristic  keyder   geffner       
and cost sharing approximations to hmax  mirkis   domshlak        
previous planners have avoided direct computation of h  because the extra search efficiency
gained from using h  is offset by the high cost of computing h    as far as we are aware  the first
actual use of h  inside a cost optimal planner was by betz and helmert         who implemented
domain specific implementations of h  for several domains  more recently  haslum et al  evaluated
the use of a domain independent algorithm for h   haslum  slaney    thiebaux        as the
heuristic function for a   based cost optimal planning  but found that the performance was relatively
poor  haslum        
in recent years  there have been several advances in the computation of h    since  as described
above  the lm cut heuristic  helmert   domshlak        is a lower bound on h    a cost optimal
planner using the a  search algorithm and the lm cut heuristic can be directly applied to the delete
relaxation of a classical planning problem in order to compute h    it is possible to improve upon
this by developing methods that exploit the delete free property and are specifically tailored for
solving the delete relaxation  pommerening and helmert        developed an approach which uses
ida  or branch and bound with an incrementally computed lm cut heuristic  gefen and brafman
       proposed action pruning for delete free problems 
a different approach to computing h  is based on the observation that h  could be formulated
as the problem of finding a minimal hitting set for sets of disjunctive action landmarks  bonet  
helmert         this led to methods for computing h  by searching for minimum cost hitting set
for a complete set of action landmarks for the delete relaxed planning problem  bonet   castillo 
      haslum et al          while the original implementation of haslum et al s hitting set based
h  solver used a problem specific branch and bound algorithm  haslum et al          an improved
implementation  which we use in our experimental evaluation in section    uses integer programming to solve the hitting set problem  haslum      a  
   

fii mai   f ukunaga

    integer linear programming for classical planning
another related line of research is the modeling of classical planning as integer linear programs
 ilp   the use of very high performance  general problem solvers to solve planning problems was
pioneered by kautz and selman  who solved planning problems by encoding them as propositional
satisfiability  sat  and applied state of the art sat solvers  the basic approach is to instantiate a
sat formula for which a satisfying assignment implies a t step plan  satplan starts with a small
value of t  e g   trivially     or some other lower bound   instantiates a propositional formula f  t 
which is satisfiable if and only if a plan of t parallel steps or less exists  if f  t  is satisfiable  then
a minimal parallel makespan plan has been found  otherwise  t is incremented  and this process
is repeated until a plan is found  while the initial encodings were modestly successful  kautz  
selman         advances in both sat solver technology as well as improvements to the encoding
and the integration of planning graphs  blum   furst        led to dramatic performance improvements  kautz   selman               recent work on sat based planning includes improved
encodings as well as execution strategies for sat strategies that improve upon simply incrementing
t as above  rintanen  heljanko    niemela         in addition  improvements to sat solvers which
specifically target domain independent planning have been investigated  rintanen       
since the expressiveness of integer programming  ip  subsumes sat  sat encodings can be
straightforwardly translated to ip  however  direct translation of sat encodings to ip resulted in
poor performance  and a state change formulation which replaces the original fluents in the sat
encoding with a set of variables that directly expresses the addition  deletion  and persistence of
fluents was shown to be more successful as the basis for an ip model for planning  vossen  ball 
lotem    nau         this formulation was strengthened with additional mutual exclusion constraints  dimopoulos         the optiplan model  van den briel   kambhampati        combined
the state change ip formulation with the planning graph based model refinement strategies and improvements by dimopoulous         as with the sat based approaches described above  ip models
which are feasible if and only if a plan of up to t steps exists are constructed  however  unlike the
sat formulation  it is easy to directly encode action costs into the objective function for the ip
model  so the ip models can be used to directly solve the cost optimal planning problems  another
approach decomposes a planning instance into a set of network flow problems  where each subproblem corresponds to a state variable in the original planning problem  van den briel  vossen   
kambhampati        
instead of modeling and directly solving a classical planning problem as an ip  another approach  which we adopt in this paper  uses ilp models to provide a heuristic function which guides
a state space search planning algorithms such as a    an early instance of this approach  which 
to our knowledge  is also the earliest application of lp to classical planning  is lplan  where an
lp encoding of the classical planning problem is used as a heuristic function for a partial order
planner  bylander         van den briel et al         developed an admissible heuristic based on
an lp model which represents a planning problem where the order in which actions are executed
is relaxed  and each variable represents the number of times an action is executed  delete effects
are considered  in that there are constraints such that the number of actions that delete values can
be incremented only if there are actions that add the value  although this lp based heuristic was
not integrated into a planning system  they compared the relaxed problem cost found by their model
with bylanders lplan lp model  as well as an lp model for h   
   

fio n a p ractical   i nteger  l inear p rogramming m odel

to our knowledge  the h  implementation by van den briel et al         is the first implementation of an ip model of h    first  a relaxed planning graph  blum   furst        was expanded
until quiescence  which results in the instantiation of all actions that are relevant for the optimal
delete free task as well as an upper bound on the number of steps in the optimal delete free task 
then  h  was computed using a delete relaxed  step based encoding of the planning problem of
optiplan  van den briel        
cooper et al         showed that the optimal solution to the dual of an lp model which relaxes the action ordering corresponds to the best lower bound that can be obtained by applying
transformations to the original planning problem that shift costs among actions that affect the same
fluents 
bonet proposed hseq   an admissible  flow based lp heuristic based on petri net state equations  bonet        which was used as the heuristic for an a   based planner  bonet and van den
briel        enhanced bonets flow based lp model by adding action landmark constraint and implementing variable merging strategies  resulting in a competitive  admissible heuristic  karpas and
domshlak        proposed an lp formulation to compute optimal partitioning for landmarks  pommerening et al         proposed an operator counting framework which enabled the unification of a
number of ideas  including the state equation formulation  bonet         post hoc optimization constraints  pommerening  roger    helmert         as well as landmarks  the formulation by bonet
  helmert        which is the dual of the formulation in karpas   domshlak        and state
abstraction heuristics  katz   domshlak         they showed that combinations of constraints resulted in strong heuristics which significantly outperformed the lm cut heuristic  a recent survey
by roger and pommerening        presents a survey of lp based heuristics for planning which
includes an earlier conference version of this paper  imai   fukunaga        and suggests how our
delete relaxation model could be incorporated into the operator counting framework by associating
a operator counting variable for each action variable  see below  in the delete relaxed problem 

   ip t      the basic ip formulation of a delete free task
we now define the integer program ip t      which is the ip formulation of the delete free task
t     hp  a    i  gi  note that for any feasible solution to ip t      not just the optimal solution  
we can derive a corresponding  feasible and non redundant  i e   each action appears only once 
plan for t   that has the same cost as the ip t     solution 
first  we define the variables of ip t      in addition to being able to derive a plan from ip t     
there always exists an injective mapping from a feasible non redundant plan for an ip t     solution 
thus  we also show the feasible assignments of variables that can be derived from a feasible plan
for t     as well as the meanings and roles of the variables  we use     a         an   to denote a
plan for t   corresponding to a solution for ip t      we say that a is the first achiever of p in plan
 if p   i  and a is the first action that achieves  establishes  p 
proposition  p  p  u  p           u  p      iff p  i    u  p  indicates whether proposition p
is achieved in a relaxed plan for t    
action  a  a  u  a           u  a      iff a   holds  u  a  indicates whether the action a is
used in a relaxed plan 
add effect  a  a  p  add a   e a  p           e a  p      iff a   holds and a is the first
achiever of p  e a  p      if p is true in i  or p is not achieved 
   

fii mai   f ukunaga

time  proposition   p  p  t  p             a    t  p    t when p  i   and p is added by
at  first  t  p      if p is a member of i  t  p  indicates the time step where p is first
achieved by its first achiever 
time  action   a  a  t  a             a    t  a    t when a   at   t  a     a  when a    
t  a  indicates the time step where a is first used 
initial proposition  p  p  i p           i p      iff p  i 
if p  p is achieved more than once  i e   p appears in the add effects of multiple actions in  
we assign t  p  the index of the first such action in   if p is not achieved  i e   p   i   holds  we
can assign an arbitrary value in           a   to t  p   given a delete free task t   and its feasible
and non redundant plan   we call the above assignment a solution derived from  
we use
pthe following fact in later proofs  a solution derived from a feasible solution satisfies  a  a a s t padd a   e a   p     for any proposition p such that u  p       and  b 
p

a a s t padd a   e a   p      for any proposition p such that u  p      
variables i p  are auxiliary variables for computing h    although they are redundant when
solving a delete free task only one time  they are useful to avoid reconstructing constraints for each
state when ip t     or lp t     are embedded as a heuristic function in a forward search planner
and called for each state 
the objective function is defined as follows 
x
minimize 
c a u  a  
   
aa

because of this objective function  the cost of a solution to ip t     is equal to the cost of the
corresponding  delete free  plan 
finally we define the following six constraints 
 c   p  g  u  p        the goals must be achieved  
 c   a  a  p  pre a   u  p   u  a    actions require their preconditions  
 c   a  a  p  add a   u  a   e a  p    an action can be the first achiever only if it is used  
p
 c   p  p  i p    a a s t padd a   e a   p    u  p    if a proposition is achieved  it must be
true in the initial state or is the effect of some action  
 c   a  a  p  pre a   t  p   t  a    actions must be preceded by the satisfaction of their
preconditions  
 c   a  a  p  add a   t  a       t  p      a          e a  p     if a is the first achiever
of p  then a must precede p  
now we can show that a solution of ip t     derived from a feasible non redundant plan of
is feasible  for a variable v of ip t      vf describes the assignment of v on a solution f of
ip t     
t 

proposition    given a delete free task t   and a feasible  non redundant plan  for t     the
solution f to ip t     derived from  is a feasible solution to ip t     
   

fio n a p ractical   i nteger  l inear p rogramming m odel

proof  f clearly satisfies constraint c  since  satisfies g  i   
constraint c  is not satisfied only if there exists an action a  a and a proposition p  pre a 
such that u  a f     and u  p f      however  if u  a f      then u  p f     because  is a
delete free feasible plan and p has to be established at some point  we can show that f satisfies
constraints c  and c  by similar arguments  if there exists an action a  a and a proposition
p  add a  such that e a  p f      u  a f     must hold according to the definition of f   in
addition  if there exists a proposition p such that u  p f      there exists a first achiever a  a of p
such that e a  p f      or p is a member of the initial state i 
if an action a  a is a member of   then all propositions in its precondition must be achieved
before a is used  hence  according to the definition of f   we have t  p f  t  a f for any action a
in the plan   if an action a  a is not a member of   then we have t  a f    a   thus  constraint
c  is satisfied for any action a not in the plan   regardless of the values of t  p f  
finally f satisfies constraint c  for any action a  a and for any proposition in its precondition
p  pre a   if a is not the first achiever of p  i e   e a  p       then constraint c  is satisfied
regardless of the values of t  p f and t  a f   if a is the first achiever of p  then  according to the
definition of f   we have t  p f   t  a f       which satisfies constraint c  
in addition  there exists a feasible plan only if ip t     has a feasible solution  when ip t     is
solved optimally  an optimal plan for t   is obtained according to the following proposition 
proposition    given a feasible solution f for ip t      the action sequence     a         an  
obtained by ordering actions in the set  a   u  a f      in ascending order of t  a f is a feasible
plan for t    
proof  first we show that  satisfies the condition  ii  of a plan  i e   g  i    using a proof by
contradiction  assume that there exists a proposition g  g that satisfies g   i    then  there
exists no action achieving g in   since f is a solution to ip t      u  g f     due to constraint
c   since g   i   implies g   i  i g f      therefore  to satisfy constraint c   there must
exist an action a  a such that g  add a  and e a  g f      however  to satisfy constraint c  
u  a f     has to hold  this means a    which contradicts the assumption 
next we show that  satisfies condition  i   i e   i  pre ai    i  a         ai       for the base
case of an inductive proof  assume that there exists a proposition p  p satisfying p  pre a   
and p   i  since a     u  a   f     has to hold  and u  p f     has to hold according to the
constraint u  p f  u  a   f   then  similar to the proof of condition  ii   there must exist an action
a  a such that p  add a   u  a f      and e a  p f      however  to satisfy constraint c  
t  p   t  a    must be true  and t  a       t  p  has to hold to satisfy constraint c   therefore
we have u  a f     and t  a    t  a     but a  is the first action of   a contradiction 
similar to the case of i      when i      if pre ai    i  a         ai     is not true  there must
exist an action a    a         ai    such that u  a f     and t  a    t  ai    contradicting the fact
that ai is the i th action of the sequence  
corollary    given an optimal solution f of ip t      a sequence of actions built by ordering
actions in the set  a   u  a f      by ascending order of t  a f is an optimal plan for t    
p
    is   p       a   
the number of variables
in
ip t
 add a    the number of constraints
p
p
is
pless than   p
p      aa  pre a       aa  add a    the number of terms is also o  p    
 pre a      add a    
   

fii mai   f ukunaga

   enhanced ip model
while ip t     provides an ip model for exactly computing h    we shall see in section   that
ip t     by itself is not competitive with previous methods for computing h    thus  in this section 
we introduce some variable elimination techniques and some modifications to constraints in order
to speed up the computation h    as we will show in the experimental results  ipe  t      which
incorporates these enhancements  computes h  significantly faster than ip t      some of the enhancements below are adopted into our ip framework from previous work in planning research  in
particular  a landmark based variable reduction method plays a key role 
note that some of the enhancements introduce constraints that render some solutions of ip t    
mapped from feasible plans for t   infeasible  however  we show that in such cases  at least one
optimal plan will always remain valid in the enhanced model  so the optimal cost of the enhanced
model still corresponds to h   
    landmark based ip model reduction
a landmark is an element which needs to be used in every feasible solution  hoffmann  porteous 
  sebastia         we use two kinds of landmarks  called fact landmarks and action landmarks as
in the work of gefen and brafman         a fact landmark of a planning task t is a proposition
that becomes true in some state of every feasible plan  and an action landmark for a planning task
t is an action that is included in every feasible plan  we also say that a fact or action landmark
l is a landmark for a proposition p if l is a landmark for the task hp  a  i   p i  similarly we say
that a landmark l is a landmark for an action a if l is a landmark for the task hp  a  i  pre a i  in
the ip model of a delete free task t     if a proposition p is a fact landmark for a proposition in the
goal g  then we can substitute u  p       similarly  if an action a is an action landmark  then we
can substitute u  a       landmark extraction and substitution clearly do not prune any feasible
solutions of ip t     
to actually extract the set of landmarks that satisfy the above intensional definitions  a landmark
extraction algorithm is necessary  it is easy to see that given
a feasible delete free task 
ff a proposition
add
p  p is a fact landmark if and only if p  i holds or p  a   ap   i    p   g is infeasible 
   a   p  add a    similarly an action a  a is an action landmark if and only
where aadd
p
if hp  a    a   i  gi is infeasible  hence  for each landmark candidate  we can test whether it is
a landmark by checking the feasibility of the delete free task which excludes that candidate  the
feasibility of a delete free task can be checked using the following  straightforward algorithm based
on the delete relaxed planning graph method by hoffmann and nebel         for each fluent  let
e p          represent whether p is achievable or not  for each action  let e a          represent
whether the preconditions of a are satisfied or not  initially  e p      for all p  i   e p     
for all other fluents  and e a      for all a  at each step of the algorithm  for all actions for
which e a      and whose preconditions are satisfied      set e a       and     set e p      for
all e  add a   the algorithm terminates when it reaches quiescence  i e   no actions for which
e a      and whose preconditions are satisfied can be found  this takes at most  a  steps  by
repeating this feasibility check for all facts and actions  we have an algorithm that collects all fact
landmarks and action landmarks satisfying the definitions above in o  t        time 
if we were only interested in computing h  once  a straightforward method such as the one
described above would be sufficient  however  since we intend to use our h   based models as
heuristic functions for forward state space search planning  the landmark extraction needs to be
   

fio n a p ractical   i nteger  l inear p rogramming m odel

performed repeatedly during the search  so the efficiency of the extraction procedure is important 
we experimented with several methods  and describe our most effective method below 
our method for extracting landmarks is based on the method by zhu and givan         who
proposed a planning based propagation method for collecting causal landmarks  their method was
later generalized by keyder et al  to an and or graph based landmark extraction method  keyder 
richter    helmert        
zhu and givan        define a proposition p as a causal landmark if hp  a   apre
p   i    p   gi
pre
is infeasible  where ap    a   p  pre a    they focus on causal landmarks  ignoring other
 non causal  landmarks because they are nonessential  even misleading  from the point of view of
guiding a search algorithm that uses a landmark based heuristic  in contrast  we use landmarks in
order to reduce the number of variables in our ip model of the delete relaxation  thus  instead of
focusing on causal landmarks and using zhu and givans criteria  we seek a larger set of landmarks
by slightly modifying 
the criterion for landmark
detection  if hp  a   apre
p   i    p   gi does not
ff
have a solution  then p  a   aadd
 
i
 
 p  
g
must
also
be
infeasible 
and furthermore  using
p
pre
add
ap instead of ap can extract a larger set of fact landmarks  in addition  while zhu and givan
used a forward propagation algorithm based on the layered planning graph of the delete free task
t     we use the following  open list based propagation algorithm 
for each proposition p  we compute a set of fact landmarks for p  using an iterative method
based on the following update equations characterizing fact landmarks 
 if p is a member of the initial state i  then  p  is the set of fact landmarks to achieve p 
t
 if p is not a member of i  then the set of fact landmarks for p is  p  aa s t padd a   add a 
s

p pre a   fact landmarks for p    
the pseudocode for this open list based propagation algorithm is shown in algorithm    in the
initialization phase  the candidate set for each proposition p   i is set to p   and the fact landmarks
for each p  i is set to  p   lines       in addition  an action a is inserted into a fifo queue q if it
satisfies pre a   i  lines       the main loop of the iterative method is similar to the straightforward method described above  at each iteration  an action a is retrieved from q  and the candidate
set of fact landmarks is updated for each p  add a  based on the second equation  lines        
moreover  the method memorizes the achievability of p  line      and action a is inserted into q
if all members of pre a   are achievable and if the candidate set of p  pre a   is changed  lines
        this process continues until q becomes empty  for clarity and simplicity  some implementation details optimizations are omitted from algorithm    e g   instead of literally inserting every
member of p into l p  in line    we use a single flag to represent l p    p  updating a candidate set always reduces the number of its elements  so this method always terminates  unlike the
simpler o t      algorithm described above  this algorithm is not complete  not all landmarks will
be extracted   however  the soundness of this method is guaranteed by the following proposition 
proposition    given a delete free strips planning task hp  a    i  gi  assume all propositions
in p can be achieved  let l p  be the set of fact landmark candidates for p computed by some
landmark extracting method  if
 i  l p     p  for p  i  and
s
t
 ii  l p     p   aa s t padd a   add a   p pre a  l p    for p   i
   

fii mai   f ukunaga

algorithm   our landmark extracting method
  
  
  
  
  
  
  
  
  
   
   
   
   
   
   
   
   
   
   
   
   

   l p  are sets of candidates of fact landmarks for p  p  
l p   p for each p   i 
l p    p  for each p  i 
s  i 
for a  a do
insert a into a fifo queue q if pre a   s 
end for
while q is not empty do
retrieve an action a from q 
for p  add a  do
s  s   p  
s
x  l p    add a   p pre a  l p    
if l p     x then
l p   x 
for a  apre
p do

insert a into q if pre a    s and a   q 
end for
end if
end for
end while
   at this point  l p  contain sets of fact landmarks for p  p  

are satisfied  then all elements of l p  are fact landmarks for p 
proof  assume that some proposition q satisfies q  l p  and q is not a fact landmark for p  we
have p    q since any proposition is a fact landmark for itself  then  l p  has more than one
proposition  and from condition  i  and  ii   p   i holds  since q is not a landmark  there exists a
non empty feasible plan for the delete free task hp  a    i   p i that does not achieve q 
let     a         an   be such a plan  and let ai be the action in  that achieves p first  we have
p    q as stated above  ands
we have q   add ai   since  does not achieve q  hence  according to
condition  ii   we have q  p pre ai   l p    let p be a member of pre ai   that satisfies q  l p   
since  is a feasible plan that does not achieve q  p is achieved by   and thus p    q holds  then 
l p   has more than one proposition  and again  p   i holds  hence       a         ai    is a
non empty feasible plan for a delete free task hp  a    i   p  i that does not achieve q 
this argument can be extended ad infinitum  but the length of  is clearly finite  so we have a
contradiction  thus  all members of l p  are fact landmarks for p for each proposition p  p  

in addition to the fact landmarks which are extracted using the above procedure  our algorithm
extracts action landmarks using the criterion  if a proposition p is a fact landmark of g  and if only
one action a can achieve p  then a is used as an action landmark of g 
   

fio n a p ractical   i nteger  l inear p rogramming m odel

    relevance analysis
backchaining relevance analysis is widely used to eliminate propositions and actions that are irrelevant to a task  an action a is relevant if  i  add a   g      or  ii  there exists a relevant action
a satisfying add a   pre a        a proposition p is relevant if  i  p  g  or  ii  there exists a
relevant action a and p  pre a  holds 
in addition  as noted by haslum et al          it is sufficient to consider relevance with respect to only a subset of first achievers of an add effect  although they defined a first achiever
by achievability of a proposition  it is equivalent to the following definition  an action a is a first
achiever of a proposition p if p  add a  and p is not a fact landmark for a  let fadd a  denote
 p  add a    a is a first achiever of p   it is sufficient to use fadd instead of add in the above
definition of relevance 
if a  a or p  p is not relevant  we can eliminate a variable as u  a      or u  p      
in addition to this  if p  add a  but a is not a first achiever of p  we can eliminate a variable as
e a  p       it is possible for a fact landmark fact to be irrelevant  in which case we set u  p      
while this variable elimination prunes some feasible solutions  it clearly does not prune any optimal
solutions 
    dominated action elimination
in a delete free task  if two actions have the same add effects  then it is clearly sufficient to use
at most one of these two actions  this idea can be generalized to the following reduction  which
eliminates useless  dominated  actions 
proposition    given a feasible delete free task t     there exists an optimal plan that does not
contain a  a if there exists an action a  a satisfying the following   i  fadd a   fadd a     ii 
for all p  pre a    p is a fact landmark for a or p  i  and  iii  c a   c a   
proof  for any plan     a         ai    a  ai          an   of t     we show that a sequence of actions
     a         ai    a   ai          an   is also a feasible plan  each proposition of pre a   is a fact
landmark for a  hence  if pre a   i  a         ai      then pre a    i  a         ai     also
holds  by the definition of first achievers  add a    fadd a   i  a         ai      so we also have
i  a         ai    a    i  a         ai    a    therefore g  i        is a feasible plan  
finally  c    c     because c a   c a    therefore  if a plan contains a  it is not optimal  or
there exists another optimal plan which does not contain a 
if there exists a dominated action a  we can eliminate a variable by setting u  a       this
variable elimination prunes some feasible solutions of ip t      moreover  it sometimes prunes
some optimal solutions if c a    c a   holds for the condition  iii   however  as shown in the proof
above  at least one optimal solution remains 
this is a slight generalization of a similar set of constraints by robinson        definition
       p       for a maxsat based planner  robinsons dominance condition checks whether  r  
add a    i  add a     i   r   pre a     i  pre a    i  and  r   c a   c a    while our
condition  iii  and  r   are equivalent  our condition  i  is less strict than condition  r   because
instead of checking all add effects  condition  i  only tests whether the propositions for which a is a
first achiever is subsumed by those of a   furthermore  our condition  ii  subsumes  r   because if
each proposition of pre a   is a fact landmark for a  then if pre a   i  a         ai      pre a   
i  a         ai     also holds  satisfying  r   
   

fii mai   f ukunaga

    immediate action application
on a delete free task t     some actions can be immediately applied to the initial state without
affecting the optimality of the relaxed plan  we adopt immediate application of zero cost actions
 gefen   brafman        as well as immediate application of action landmarks  gefen   brafman 
       for a delete free task t     if an action a  a satisfies c a      and pre a   i  then a
sequence made by placing a before an optimal plan for hp  a    a   i  add a   gi is an optimal
plan for t     similarly  if an action a is an action landmark for t   and a is applicable to i  a can
be applied to i immediately 
in the ip t     model  variables t  p  for p  i can be eliminated by substituting zero for
their values  given a sequence of immediately applicable actions  a         ak    it must be a correct
applicable sequence   we can eliminate some variables as follows   i  u  ai         ii  t  ai     i 
 iii  p  pre ai    u  p        iv  p  add ai     i  a         ai      u  p       t  p    i and
e ai   p       and  v  p  add ai     i  a         ai      a  a    a         ai    e a  p      
    iterative application of variable eliminations
the variable elimination techniques described above can interact synergistically with each other
resulting in a cascade of eliminations  therefore  we used an iterative variable elimination algorithm
which applies eliminations until quiescence  the order in which each elimination is applied is shown
in algorithm    a full landmark extraction pass after each variable elimination would be extremely
expensive  therefore  we perform a landmark extraction only once before the iterative application
of the other eliminations 
algorithm   iterative variable elimination
relevance analysis 
landmark extraction 
while a variable can be eliminated do
immediate action application 
dominated actions elimination 
relevance analysis 

    inverse action constraints
we define the following inverse relationship between a pair of actions for a delete free task t    
definition    inverse action   for two actions a    a   a  a  is an inverse action of a  if   i 
add a     pre a     and  ii  add a     pre a    
by definition  it is clear that if a  is an inverse action of a    then a  is an inverse action of a   
inverse actions satisfy the following fact 
proposition    given a delete free task t     let     a         an   be a feasible plan  if ai   is
an inverse action of aj    and if i   j holds  then      a         aj    aj          an   is also a
feasible plan 
proof  since  is a feasible plan for t     pre ai    i  a         ai      i  a         aj      by the
definition of inverse actions  add aj    pre ai   holds  and add aj    pre ai    i  a         aj      
   

fio n a p ractical   i nteger  l inear p rogramming m odel

i  a         aj     hence  aj          an   is applicable to i  a         aj      and g  i      
i   
corollary    for a delete free task t     a feasible solution     a         an   is not optimal if
ai   is an inverse action of aj   and both of ai and aj have non zero cost 
there are several possible ways to use the above proposition  e g   u  a    u  a       for all
 inv a   where inv a  is the set of inverse actions of a   in order to avoid adding a large number
of constraints to the ip t     model   a     in the worst case where half of the actions are inverses
of the other   we modify constraint c  as follows 
p
 c a  a  a  p  pre a   u  p  a inv a p  e a   p   u  a   where inv a  p  denotes the set
of inverse actions of a which have p as an add effect 
a

proposition    given a delete free task t     if ip t     with constraint c  has a feasible solution 
then an optimal solution to ip t     with constraint c  is also feasible for ip t     with constraint
c a 
proof  let f  be an optimal solution to ip t     with constraint c  derived from an optimal plan
for t     since f  satisfies all the constraints of ip t     with constraint c   it suffices to show that
f  satisfies constraint c a for any action a  a and proposition p  pre a  
p
recall that a feasible solution derived from a feasible plan satisfies a a s t padd a   e a   p  
p
  for any proposition p such that u  p       and it also satisfies a a s t padd a   e a   p      for
p
p
any proposition p such that u  p       since a a s t padd a   e a   p   a inv a p  e a   p 
for any action a  a and proposition p  pre a   f  clearly satisfies constraint c a if u  p f     


and u  a f       or
pif u  p f     and u  a f     hold 

to show that a inv a p  e a   p f     holds when u  a f    u  p f       assume there
exists an action a  inv a  p  such that e a   p f       according to constraint c   u  a  f      
however  since f  is derived from an optimal plan for t     there must exist an optimal plan for t  
that contains both a and a   this contradicts corollary   
since f  is a feasible solution  there does not exist any action a  a and proposition p  pre a 
such that u  a f      and u  p f       hence f  satisfies constraint c a for any a  a and
p  pre a  
    ipe  t      the enhanced ip model for h 
we define ipe  t     as the integer programming model that is the result of first adding the inverse
action constraints described in section     to the basic ip t     model and then applying the iterative reduction algorithm in algorithm    which applies the reductions in sections          until
quiescence  as previously noted  ipe  t     computes h    as we shall see below  the cumulative
effects of these enhancements is quite significant  resulting in a much more practical ip model for
computing h    see table   for a summary of the relationship between ipe  t     and ip t     

   experimental evaluation of ip models for delete free planning  exact
computation of h   
in this section  we evaluate the effectiveness of our integer programming model of the delete relaxation as a method for solving delete free tasks and computing h  exactly  we evaluate the following
models 
   

fii mai   f ukunaga

 ip t      our basic ip model  section    
 ip t     lm  ip t     with the landmark based variable reduction method  section      
 ipe  t      the enhanced model which includes all of the enhancements described in sections
        which are designed to speed up the computation of h   landmark based reduction 
relevance analysis  dominated action elimination  immediate action application  inverse action constraints  
we emphasize that  unlike the other models which will be evaluated in later sections  all of
these ip models compute h  exactly 
following previous work on solvers for delete free problems  our main results are based on
an evaluation using delete free versions of standard ipc benchmark problems  section       in
addition  in section      we also present results of a much smaller scale study on a set of natural 
delete free problems from systems biology  gefen   brafman        
    evaluation on delete free versions of ipc benchmark instances
following the methodology for evaluating delete free planning in previous work  haslum et al  
      pommerening   helmert        gefen   brafman         we evaluate our ip models by
solving international planning contest  ipc  benchmark instances for which the delete effects of
all actions are ignored  below  all experiments used the cplex       solver to solve integer and
linear programs  all experiments were single threaded and executed on a xeon e           ghz 
because previous work on computing h  has been evaluated using several different sets of
experimental settings  different cpu limits and different problem instances   we present the results
of   sets of comparisons  in the first   sets of comparisons  we compare benchmark results reported
in previous publications with results obtained by running our solvers on the same problem instances 
while the fourth set of results compares our models with an improved implementation of the minimal
hitting set based approach  haslum et al         by one of the the original authors 
 comparison with the results by pommerening and helmert         experimental setup described in section        results shown in table    
 comparison with the results by gefen and brafman         experimental setup described in
section        results shown in table    
 comparison with the results by haslum et al          experimental setup described in section
       results shown in table    
 comparison with hst cplex  an improved implementation of the algorithm in  haslum
et al          experimental setup described in section        results shown in table   and
figures      
the results copied from previous work  pommerening   helmert        haslum et al        
gefen   brafman        in tables     were obtained using hardware available several years ago
when these original papers were written  while our results for ip t      ipe  t      and hst cplex
were obtained with slightly more recent hardware  since coverage is a coarse metric based on binary results  solved unsolved   it can be significantly impacted by differences in machine speed 
   

fio n a p ractical   i nteger  l inear p rogramming m odel

e g   if many problems are at the threshold such that a slightly faster machine  equivalent to running
slightly longer  results in many more instances being solved  in order to eliminate the possibility
that improvements in hardware since       when the first of the results we compared against were
published  explain the improvements obtained using our approach  we also include results of running our best ip model  ipe  t      with a significantly shorter cpu time limit than the previous
experiments  in addition to results that use the same cpu time limit as previous experiments 
      c omparison with r esults by p ommerening
d elete  f ree v ersions of ipc b enchmarks

and

h elmert       

on

the first comparison is with the results by pommerening and helmert         table   shows the
results of running ip t      ip t     lm  and ipe  t     with a   minute time limit and  gb memory
limitation  coverage    of problem instances solved  on each domain is shown  the columns where
the solver name contains ph   in table   are copied from the paper by pommerening and helmert
        fd ph   is fast downward using a  and the lm cut heuristic applied to the deleterelaxed problems  bc ph   is the hitting set based approach by bonet and castillo         and
bnb ph   and ida  ph   are the best performing strategies using the incremental lm cut
heuristic for delete free problems proposed by pommerening and helmert         pommerening
and helmert obtained their results using a amd opteron      processor with a  gb memory limit
and   minute time limit 
table   includes a column ipe  t      min  which shows the results for   minute runs of
ipe  t      all other columns in table   are for   minute runs 
      c omparisons with r esults by g efen and b rafman        and h aslum et al  
       on d elete  f ree v ersions of ipc b enchmarks
next  we evaluated our h  solvers with previous results that were obtained with a    minute time
limit and  gb memory limit  table   compares ip t      ip t     lm  and ipe  t     with some
results from  gefen   brafman        p      table     the lm cut gb   column is a  with the
lm cut heuristic  helmert   domshlak        applied directly to delete free instances in order to
compute h    the lm cut pruning gb   column is a  with lm cut using the pruning techniques
for delete free instances proposed by gefen and brafman         table   compares ip t     and
ipe  t     with some results by haslum et al         p       table     the bc hst   column is
the method by bonet and castillo         the ml hst   column is the minimal landmark method
proposed by haslum et al   in the original work by haslum et al          the minimum cost hitting
set problem was solved using a specialized branch and bound algorithm  and the ml hst   column reflects the performance of this original algorithm  however  the minimal landmark method
was later significantly improved by replacing the hitting set solver with a cplex based solver
 haslum      b   so table   also includes the hst cplex column  which shows the results of
minimal landmark method using the cplex hitting set solver  we obtained these hst cplex
results by running the hst cplex code on the same machine used to run our ip models 
table   includes a column ipe  t      min  which shows the results for   minute runs of
ipe  t      all other columns in table   are for    minute runs  
note that in table    the instances from ipc     and ipc     are from the sequential satisfying track  i e    sat   and  sat   in the domain names   in accordance with the original paper
 haslum et al         
   

fii mai   f ukunaga

      c omparison

with

hst cplex

on

d elete  f ree v ersions of ipc b enchmarks

the most detailed comparison is with an improved implementation of the hitting set based method
of haslum et al          although the original version of this algorithm used a problem specific
branch and bound method to solve the hitting set problems  we used a more recent version of
haslums h  solver  source dated             configured to use cplex       to solve the hitting set subproblem  this configuration is abbreviated as hst cplex  as shown in table
   hst cplex significantly outperforms the original hst implementation described in  haslum
et al          and compares favorably vs  other previous methods 
tables     and figures     compare ip t      ipe  t      ip t     lm  and hst cplex on     
ipc benchmark instances  all algorithms were run with a  gb memory limit  table   shows results
with a    minute time limit  while table   shows results with a   minute time limit  tables   and
  compares coverage and runtimes per domain  while figure   compares the cumulative number
of instances solved as a function of time  and figure   compares the runtimes of all individual
instances 
in contrast to the previous set of experiments described in section        we used optimal track
instances   opt   and  opt   in the domain names  when both satisficing and optimal track
instances were available in the benchmark sets  this is because in the subsequent sections  we
focus on applying our models as the basis for heuristics for forward search  cost optimal planning 
      d iscussion of r esults on d elete  f ree v ersions of ipc b enchmarks
not surprisingly  the basic ip t     model is not competitive with previous state of the art methods that were specifically developed for computing h   haslum et al         pommerening  
helmert         however  table   shows that the basic ip t     model is at least competitive with
a  with lm cut enhanced with gefen and brafmans pruning methods for delete free instances
 prune gb     ip t     also significantly outperforms standard a  with lm cut  table    lmcut gb   and table    fd ph    
on the other hand  enhancing ip t     with our landmark based model reduction method results
in significant improvement  and ip t     lm is competitive with all previous methods except for
hst cplex 
the ipe  t     model  which includes all of the enhancement described in section   for reducing
the model in order to compute h  faster  performs very well overall  and is competitive with all
previous methods  for example  in table    ipe  t     has the highest coverage  or is tied for highest 
on       domains  table    figure    and figure   show that while ipe  t     and hst cplex
have similar coverage with a    minute time limit  ipe  t     tends to be somewhat faster overall 
however  there is no clear dominance relationship between ipe  t     and hst cplex  since there
are some domains where ipe  t     clearly performs better  e g   rovers  satellite  freecell    and other
domains where hst cplex performs better  e g   airport  pegsol  scanalyzer  transport   thus  the
ip based approach and minimal landmark approaches seem to have complementary strengths with
respect to solving delete free problems 
aside from coverage  figure   shows that many delete free instances are solved much faster by
ipe  t     than hst cplex  the difference between solving an easy delete free instance in    
vs      seconds may not seem very important if we only need to solve the instance once  however 
the speed difference between ipe  t     and hst cplex on such easy delete free instances has a
significant implication when we consider using the h  solvers as heuristic functions for a   based
   

fio n a p ractical   i nteger  l inear p rogramming m odel

planners  where we may need to solve delete free problems many thousands of times in the course
of a single a  search  as a result  we see below in section    a  using ipe  t     as a heuristic
significantly outperforms a  using hst cplex as a heuristic 
in order to eliminate the possibility that cpu speed differences account for the qualitative improvements in coverage obtained by our ip models compared to previously published results  table
  includes a column ipe  t      min  which is the result for   minute runs of ipe  t      and table
  includes a column ipe  t      min  which is the result for   minute runs of ipe  t     in effect 
these simulate machines that run at     and      respectively  of the speed of the machine we used
in our experiments in tables   and    this more than offsets improvements in single core cpu
performance between            the coverage achieved by ipe  t      min       in table   is
higher than that of all other solvers in table   which were given   minutes  similarly  the coverage
achieved ipe  t      min       in table   is higher than that of than all other solvers in table   which
were given    minutes 
therefore  overall  ipe  t     is competitive with previous state of the art delete free solvers  and
our results indicate that direct computation of h  using integer programming is a viable approach 
at least for computing each delete free task once 
    comparison with hst cplex on minimal seed set problem
to assess the performance of our best ip model  ipe  t     on a natural  delete free task  we also
compared ipe  t     with hst cplex on a set of minimal seed set problem instances from systems
biology  gefen   brafman         these consist of    instances originally evaluated by gefen and
brafman  as well as three additional versions of these    instances which were also provided by the
original authors  where each version uses a different set of action costs  gefen   brafman        p 
      for a total of            instances  the solvers were run with a   hour cpu time limit per
instance and a  gb ram limit 
figure   shows a scatter plot comparing the runtimes on each problem instance  the coverage
of ipe  t     was    instances  while the coverage of hst cplex was    instances  on one hand 
figure   shows that the majority of instances were solved significantly faster by ipe  t      and
ipe  t     solves    instances more than    times faster than hst cplex  on the other hand  there
was one instance on which hst cplex was more than    times faster than ipe  t      and there
was one instance which was solved in      seconds by hst cplex but was not solved within the
time limit by ipe  t      the dre instance with the type   preprocessing by gefen   brafman 
      p       

   relaxations of the h  models
although delete free planning problems are interesting in their own right  our main motivation for
developing an efficient ip model for delete free problems is to be able to use it as the basis for a
heuristic function for a forward state space search based domain independent planner  so far  we
have presented ip t      a basic ip model which computes h    and then proposed ipe  t      which
incorporates a number of enhancements which  as shown in the experimental results in section
   significantly increase the scalability of the model and provide a new approach to computing h 
which is competitive with the previous state of the art methods  it is possible to simply use ipe  t    
as the heuristic function for a forward search based planner  however  as shown in section   
computing h  remains relatively expensive even using ipe  t      which is not surprising  given that
   

fii mai   f ukunaga

 pommerening   helmert        table   
domain    problems 
airport    
blocks    
depot    
driverlog    
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
openstacks opt      
pathways noneg    
pipes notankage    
pipes tankage    
psr small    
rovers    
satellite    
tpp    
trucks    
zenotravel    
total coverage      
  best domains

ip t    

ip t     lm

ipe  t    

ipe  t      min

fd ph  

bc ph  

bnb ph  

ida  ph  

solved
  
  
 
  
  
 
  
  
 
   
  
  
 
  
 
 
  
  
  
  
  
  
   
 

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
 

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
  

solved
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
  
   
  

solved
  
  
 
  
 
 
  
  
 
   
  
  
 
 
  
  
  
  
 
  
 
  
   
 

solved
  
  
 
 
 
 
  
  
 
   
  
  
 
 
 
 
  
  
 
  
 
 
   
 

solved
  
  
  
  
 
 
  
  
  
   
  
  
 
 
  
 
  
  
 
  
 
  
   
 

solved
  
  
  
  
 
 
  
  
  
   
  
  
 
 
  
  
  
  
 
  
 
  
   
 

table    coverage    of instances solved  for delete free problems  exact computation of h    
  minute time limit  except for ipe  t      min which was run with a   minute time limit    gb
ram  comparison with data from table   in the paper by pommerening and helmert          
best domains is the number of domains for which a each solver achieves the highest coverage
 including ties  
 gefen   brafman        table   
domain    problems 
blocks    
depot    
driverlog    
freecell    
gripper    
logistics      
logistics      
miconic     
no mystery    
pipesworld notankage    
pipesworld tankage    
rovers    
total coverage      
  best domains

ip t    

ip t     lm

ipe  t    

lm cut gb  

prune gb  

solved
  
 
  
  
  
  
 
   
  
  
 
  
   
 

solved
  
  
  
  
  
  
  
   
  
  
 
  
   
 

solved
  
  
  
  
  
  
  
   
  
  
 
  
   
  

solved
  
 
  
 
  
  
  
   
  
  
  
  
   
 

solved
  
  
  
 
  
  
  
   
  
 
 
  
   
 

table    coverage    of instances solved  for delete free problems  exact computation of h    
   minute time limit   gb ram  comparison with data from table   in the paper by gefen and
brafman        

   

fio n a p ractical   i nteger  l inear p rogramming m odel

 haslum et al       
table   
ip t    

domain    problems 
airport    
barman sat      
blocks    
depot    
driverlog    
elevators sat      
floortile sat      
freecell    
gripper    
logistics      
logistics      
miconic     
no mprime    
nomystery sat      
parcprinter       
pegsol       
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
sokoban sat      
transport sat      
trucks    
visitall sat      
woodworking sat      
zenotravel    
total coverage       
  best domains

solved
  
 
  
 
  
 
  
  
  
 
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
 

ip t     lm

solved
  
 
  
  
  
 
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
  

ipe  t    

solved
  
 
  
  
  
  
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
  
  
 
  
 
  
  
   
  

hst cplex

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
  

ipe  t    

hst cplex

 min

 min

solved
  
 
  
  
  
  
  
  
  
  
  
   
  
  
  
  
  
 
  
  
  
 
  
 
  
 
  
  
   
  

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
  

ml hst  

bc hst  

solved
  
  
  
  
  
  
  
  
  
  
  
   
  
 
  
  
  
  
  
  
 
  
  
 
  
 
  
  
   
  

solved
  
 
  
  
 
  
 
 
  
 
  
  
  
 
  
  
 
 
  
  
 
 
  
 
  
 
 
  
   
 

table    coverage    of instances solved  for delete free problems  exact computation of h    
   minute time limit  except for ipe  t      min and hst cplex  min which were run with a  minute time limit    gb ram  comparison with data from table   in the paper by haslum et al 
       

   

fii mai   f ukunaga

ip t       min

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

solved

  
 
  
 
  
 
 
  
  
 
  
 
  
   
  
  
  
 
 
 
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  

time
      
       
    
      
     
      
      
    
      
 
    
      
     
    
      
      
      
      
      
 
    
    
      
    
      
      
      
      
    
     
     
      
      
     
     
      
      
 
    
    
    
    
     
   
  

ip t     lm   min
solved

  
 
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  

time
      
       
    
     
     
      
      
    
      
    
    
     
    
    
      
      
      
     
    
    
    
    
      
    
     
      
      
     
    
    
     
      
      
    
    
     
     
 
    
    
    
    
     
    
  

ipe  t       min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  

time  sd
              
            
          
          
           
          
          
          
          
           
          
             
          
          
             
            
          
          
          
          
          
          
          
          
             
             
              
            
          
          
          
             
              
             
          
          
              
              
          
          
          
          
          
    
  

hst cplex   min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

time  sd
           
          
          
          
            
          
          
             
              
          
          
              
          
          
              
            
          
             
          
          
          
          
            
          
          
          
              
           
          
             
              
              
              
          
          
              
              
            
          
          
          
          
              
    
  

table    detailed comparison of ip t      ip t     lm  ipe  t      and hst cplex on      deletefree tasks  exact computation of h        minute time limit   gb ram  coverage and mean 
standard deviation of runtimes  average of successful runs only  excludes unsuccessful runs  

   

fio n a p ractical   i nteger  l inear p rogramming m odel

ip t      min

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

solved

  
 
  
 
  
 
 
  
  
 
  
 
  
   
  
  
  
 
 
 
  
  
 
  
  
 
 
 
  
  
  
 
 
  
  
  
 
 
  
  
  
  
  

time  sd
    
 
    
     
     
     
 
    
     
 
    
     
     
    
     
    
     
     
     
 
    
    
 
    
     
      
    
     
    
     
     
     
     
     
     
     
    
 
    
    
    
    
    
   
  

ip t     lm  min

time
    
 
    
     
     
     
     
    
     
    
    
     
    
    
     
     
     
     
    
    
    
    
     
    
     
     
     
     
    
    
     
     
     
    
    
     
     
 
    
    
    
    
    

solved

  
 
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
 
 
  
  
  
 
 
  
  
  
  
  
   
  

ipe  t      min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
 
 
  
  
  
  
  
  
  
  
  
  

time  sd
           
            
          
          
           
          
          
          
          
           
          
            
          
          
            
            
          
          
          
          
          
          
          
          
            
            
            
            
          
          
          
            
            
          
          
          
            
            
          
          
          
          
          
    
  

hst cplex  min
solved

  
  
  
  
  
  
  
  
  
 
  
  
  
   
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  

time  sd
           
          
          
          
            
          
          
          
            
          
          
            
          
          
            
            
          
            
          
          
          
          
            
          
          
          
            
           
          
            
            
            
            
          
          
            
            
            
          
          
          
          
            
    
  

table    detailed comparison of ip t      ip t     lm  ipe  t      and hst cplex on      deletefree tasks  exact computation of h       minute time limit   gb ram  coverage and mean 
standard deviation of runtimes  average of successful runs only  excludes unsuccessful runs  

   

fii mai   f ukunaga

    
    

instances solved

    
   
   
   
ipe t  
hst cplex

   
 
      

ip t   lm
ip t  

     

    

   

 

  

   

    

time  seconds 
figure    comparison of ip t      ip t     lm  ipe  t      and hst cplex on delete free tasks
 exact computation of h        minute time limit   gb ram  the cumulative number of instances
 out of the same      instances as table    solved within t ime seconds is shown 
computing h  is np equivalent  bylander         haslum        reported some previous  baseline
results using a direct computation of h  using the hitting set method proposed in his earlier work
 haslum et al         as a heuristic for a    and reported poor results  although we show in section
  that a  using ipe  t     performs well on some domains  using h  directly as a heuristic for a 
continues to pose a significant challenge  thus  we turn next to relaxations of ip t     and ipe  t    
that are lower bounds on h  and can be computed faster  making them more suitable as admissible
heuristics for a forward search planner than our ip models 
    lp t     and lpe  t      lp relaxations of the delete relaxation  h    models
the linear programming  lp  relaxations of the ip models are obvious candidates for tractable
alternatives to computing h  using ip t     and ipe  t      the lp relaxations are trivially derived
from the ip models by eliminating the integer constraints on the variables  and the optimal cost of
the lp relaxation is a lower bound on the optimal cost of the ip  we denote the lp relaxation of
ip t     as lp t     and the lp relaxation of ipe  t     as lpe  t      see table     in the case of
problem domains with integer action costs  the ceiling of the lp costs are used 
although lpe  t     can be solved quickly  tight theoretical bounds on the gap between ip t    
and lp t     or the gap between ipe  t     and lpe  t     are difficult to obtain  it has been proven
by betz and helmert        that there exists no constant c     and no polynomial time algorithm
for computing a lower bound h such that for all states s  h s   ch    unless p   n p  i e  
h  is not polynomial time approximable for any constant factor c   fortunately  the worst case
   

fio n a p ractical   i nteger  l inear p rogramming m odel

    x

   x

x

x    

x   

 

  

   

    
   

ipe t  

  
 
   
    
     
     

    

   

    

hst cplex

figure    comparison of runtimes of ipe  t     and hst cplex on      delete free instances  exact computation of h    same instances as table        minute time limit   gb ram  each point represents a problem instance  the x axis represents the runtime of hst cplex  while the y axis represents the runtime of
ipe  t      for example  a point below the diagonal  y   x  indicates that ipe  t     solved the problem represented by that point faster than hst cplex  and a point below the y   x    line indicates that ipe  t    
solved the problem represented by that point at least    times faster than hst cplex  if an algorithm failed
to solve an instance within the    minute time limit  the runtime is shown as      seconds 

theoretical approximation results do not necessarily apply to real world problem instances  in fact 
our experimental results below show that the lp relaxations often provide fast  accurate  lower
bounds on h  for standard planning benchmark problems 
    time relaxation of h  models
if our motivation is to embed a computation for h   or an approximation thereof  as an admissible
heuristic for a    we are not necessarily interested in the actual optimal delete free plan for t     but
only the cost of that plan  or its approximation   in particular  if the exact order in which actions are
executed in the delete relaxed plan does not matter  the necessity of all time related variables can
be brought into question 
the time relaxation of ip t      which is ip t     without constraints c  and c   is denoted
iptr  t      the lp relaxation of iptr  t     is denoted lptr  t      table   summarizes the relationships among these models 
if the propositions and actions of the task satisfy some conditions  eliminating the time related
variables does not affect the cost of the optimal solution to ip t      for example  if the relaxed
causal and or graph  gefen   brafman        of the task does not have a cycle  then we can
decide the values of t  p  and t  a  such that constraints c  and c  of ip t     are satisfied in   

fii mai   f ukunaga

    

ipe t  

   
  
 

   
    
     
     

x
   x
x   
    

   

 

  

   

    

hst cplex

figure    runtime comparisons of ipe  t     and hst cplex on minimal seed set problem     natural 
delete free instances from gefen   brafman            minute time limit   gb ram  each point represents
a problem instance  if an algorithm failed to solve an instance within the    minute time limit  the runtime
is shown as      seconds  the coverage of ipe  t     was    instances  while the coverage of hst cplex
was    instances 

dependently of the values of the other variables  in which case the optimal costs of ip t     and
lp t     are the same as the optimal costs of iptr  t     and lptr  t      respectively 
indeed  we shall show experimentally in section     that the relaxation is quite tight  i e  
ip t     and iptr  t     often have the same cost  and that iptr  t     can be computed significantly faster than ip t      similarly  lptr  t      lpetr  t      and ipetr  t      the time relaxations
of lp t      lpe  t      and ipe  t      can be computed much faster than their non time relaxed
counterparts 
    experimental evaluation of lp and time relaxation gaps
we evaluated the quality of the lp t      lpe  t      and lpetr  t     linear programming bounds described above by comparing optimal costs computed for these bounds to exact h  values  computed
using ipe  t       we used the same set of      instances as in table    table   shows the mean ratio
of the optimal cost of each lp model to h    on all instances where h  could be computed using
ipe  t      the perfect columns indicate the fraction of instances where the optimal cost of the
lp model was equal to h    note that we used the ceiling of the lp cost  since the ipc benchmark
instances have integer costs  a stacked histogram representation of the same data  aggregated over
all domains  which classifies the ratios of the optimal costs of the lp relaxations to the value of h 
is shown in figure   
we should expect that the variable fixing constraints in our enhanced lpe  t     model would
tend to increase the value of the optimal solution to lpe  t     compared to the optimal value of the
base lp relaxation  lp t      in addition  we would also expect that the optimal value for lpe  t    
would tend to be greater than the optimal value of its time relaxation  lpetr  t      table   shows that
   

fio n a p ractical   i nteger  l inear p rogramming m odel

in general  lpe  t      lpetr  t      lp t      for       domains  lpe  t     matches h  perfectly 
i e   lpe  t     h       for       domains  lpe  t     h         on almost every single domain 
the optimal lp value of the enhanced model lpe  t     is significantly better  higher  than the basic
formulation lp t      confirming that variable elimination and the additional constraints serve to
tighten the lp bound  thus  the enhancements to the basic model described in section   provide a
significant benefit beyond the speedups that were demonstrated in section    the time relaxation
lpetr  t     is usually very close to lpe  t      indicating that the time relaxation can potentially
achieve a good tradeoff between computation cost and accuracy  and in fact  as we see later in
section    lpetr  t     performs quite well when used as a heuristic for a    
for comparison  we also evaluated the ratio of the value of the lm cut heuristic  helmert  
domshlak        to h    comparing the average ratios of each lower bound to h    we see that 
 lp t     is less informative than lm cut on    domains  more informative than lm cut on  
domains  and equivalent on   domains 
 lpe  t     is less informative than lm cut on    domains  more informative than lm cut on
   domains  and equivalent on   domains 
 lpetr  t     is less informative than lm cut on    domains  more informative than lm cut on
   domains  and equivalent on   domains 
thus  while lm cut is a better approximation to h  than the basic lp relaxation  lp t     
and lpetr  t     are roughly equivalent to lm cut  interestingly  the lp relaxation approach appears to be highly complementary to the cost partitioning approach of lm cut  in that the
lp relaxation and lm cut are each more informative than the other on roughly half of the cases
compared to each other 

lpe  t    

 

   
         
         
         
         
         

   

fraction of instances

   
   
   
   
   
   
   
   
 

lp

lp

e

lp

e
tr

figure    ratio between optimal lp costs and h    categorized into buckets   x y    fraction of
instances where the ratio lp h  is in the range  x y   for example  the fraction of instances where
the ratio between the optimal value of lpetr  t     and h  was in the range           is approximately
      this stacked histogram is based on the same data as table      
   

fii mai   f ukunaga

lm cut
perfect
    
   
   
 
   
   
   
 
   
   
   
   
   
   
   
   
   
 
   
   
    
    
   
   
   
   
    
    
   
   
   
   
   
   
   
 
    
    
    
    
   
   
   
   
   
 
   
   
   
   
   
   
   
   
   
 
    
    
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
 
   
   
   
   
   
   
   
   

lm cut h 

airport
barman opt  
blocks
depot
driverlog
elevators opt  
elevators opt  
floortile opt  
freecell
grid
gripper
logistics  
logistics  
miconic
no mprime
no mystery
nomystery opt  
openstacks
openstacks opt  
openstacks opt  
parcprinter   
parcprinter opt  
parking opt  
pathways noneg
pegsol   
pegsol opt  
pipesworld notankage
pipesworld tankage
psr small
rovers
satellite
scanalyzer   
scanalyzer opt  
sokoban opt  
sokoban opt  
tpp
transport opt  
transport opt  
trucks
visitall opt  
woodworking opt  
woodworking opt  
zenotravel

lp t    
perfect
   
   
   
 
   
   
   
 
   
   
   
 
   
 
   
   
   
 
   
   
    
    
   
   
   
   
    
    
   
 
   
 
   
   
   
   
    
    
    
    
   
   
   
   
   
 
   
   
   
   
   
 
   
 
   
 
   
   
   
 
   
   
   
   
   
   
   
   
   
   
   
   
   
 
   
 
   
 
   
   
   
 
   
 
   
   

lp t     h 

lpe  t    
perfect
   
   
   
 
    
    
   
   
   
   
   
 
   
 
   
   
   
   
   
   
    
    
   
   
   
   
    
    
   
   
   
   
    
   
    
   
    
    
    
    
   
   
   
   
   
   
   
   
   
   
   
 
   
   
   
   
    
    
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
 
    
    
   
   
    
    
    
    
   
   

lpe  t     h 

lpetr  t    
 
lpe
 t
  h 
perfect
tr
   
   
    
   
   
   
   
   
   
   
    
   
   
    
   
   
    
   
    
    
   
   
   
   
   
   
   
   
    
   
   
   
   
   
   
   
   
   
    
   
    
    
   

   
 
    
   
   
 
 
   
   
   
    
   
   
    
   
   
   
    
    
    
   
   
 
   
   
 
   
   
    
   
   
   
   
   
   
   
   
 
    
   
    
    
   

table    gaps between lp models and h    the mean ratio of each lp model to h   on the     
instances solved using ipe  t     is shown  the perfect columns indicate the fraction of instances
where the optimal cost of the lp model was equal to h   

   

fio n a p ractical   i nteger  l inear p rogramming m odel

figure   compares the runtimes the cplex lp solver on the relaxed h  models  lpe  t     is
significantly faster than lp t      solving many instances      times faster  and solving some instances more than    times faster   demonstrating the benefits of our enhanced model  the comparison of lpetr  t     and lpe  t     shows that using the time relaxation results in an addition speedup
of up to a factor of    while this additional speedup may not seem very significant when solving a
single lp instance that takes a fraction of a second  the cumulative effects when using the lp models as a heuristic for forward search based planning is significant  and as we show in section    this
results in increased coverage when using lpetr  t     as a heuristic for a    compared to lpe  t     

   

   

  

  

lpetr t  

    

lpe t  

    

 

   

   

x
   x
  x
x  
x   

    
     
     

 

    

   

 

lp t  

  

   

x
   x
  x
x  
x   

    

    

     
     

    

   

 

lpe t  

  

   

    

figure    runtime comparisons for relaxed h  models  on      delete free instances  exact computation of
h    same instances as table        minute time limit   gb ram  each point represents a problem instance 
the left subfigure compare lp t     vs lpe  t      showing the impact of our enhancements to the basic lp
model  and the right subfigure compares lpe  t     vs lpetr  t      showing the impact of the time relaxation 
if an algorithm failed to solve an instance within the    minute time limit  the runtime is shown as     
seconds 

   cost optimal planners using our h   based heuristics
we embedded the ip and lp models that have been introduced so far into an a   based  cost optimal
forward search planner  our own planner implementation  which uses a propositional representation
internally  and evaluated their performance  note that this particular experiment is limited to admissible heuristics whose value is bounded above by h    the later results in section   and   include
heuristics that are not necessarily bounded above by h    specifically  we evaluated the following
solver configurations 
 a   ip t       a  with the basic delete free ip model ip t     as a heuristic 
 a   ipe  t       a  with the enhanced delete free ip model ipe  t     as a heuristic 
 a   lpe  t       a  with the lp relaxation of the enhanced delete free ip model ipe  t     as a
heuristic 
 a   lpetr  t       a  with the lp relaxation of the time relaxed  enhanced delete free ip model
ipe  t     as a heuristic 
   

fii mai   f ukunaga

 hsp hst cplex   a  where the heuristic is the hitting set based h  solver hst cplex
 haslum et al         using cplex to solve hitting set instances  hsp planner provided by
patrik haslum  
 fd hmax   fast downward using the hmax heuristic  bonet   geffner        
 fd lm cut   fast downward using the landmark cut heuristic  helmert   domshlak       
 the standard seq opt lmcut configuration 
as per standard ipc sequential optimal track settings  all solver configurations were run with a
   minute time limit per problem and a  gb ram limit  a set of      instances from ipc    ipc      were used  our planner currently handles the strips subset of pddl with action costs 
table   compares the coverage of these heuristics  figure  a shows the cumulative coverage
 out of       solved as a function of time for the solver configurations compared in table    and
figure  b shows cumulative coverage as a function of the number of node evaluations  calls to the
heuristic function by a    
while we compare our ip lp based a   heuristics with other planners  note that there are significant implementation level differences other than the heuristic function that can affect execution
speed  for example  fast downward uses a multi valued sas  representation  backstrom   nebel 
      internally to represent states  while our planner uses a strips propositional representation 
so there are significant differences in internal data structures and implementation details  thus 
these results should only be used for qualitative comparisons 
table   shows that a   ip t      which uses the basic ip t     model  had the worst coverage
among our ip models        comparable to that of a   hst cplex       as noted by haslum
        straightforward use of h  as a heuristic can be unsuccessful  even worse than fd using
hmax   which has a coverage of      if the cost of computing h  at each search node is too high 
however  as shown in section    solving the ipe  t     ip model is significantly faster than
ip t     and a   hst cplex  this makes it much more viable as a heuristic function for a    and
as a result  a   ipe  t     has a coverage of      significantly outperforming both a   hst cplex as
well as fd hmax 
as shown in section      the lp relaxations of our ip models provide relatively tight lower
bounds for h    since the lp models can be solved much faster than ip  they are quite effective
when used as heuristics for a    thus  a   lpe  t      which uses the lp relaxation of the enhanced
ipe  t     model  has a coverage of      and a   lpetr  t      which uses the lp relaxation of the
time relaxed  enhanced ip model  has a coverage of     
in section      we showed that the lpe  t     and lpetr  t     models are complementary to lmcut with respect to informativeness  which suggests that at least with respect to search efficiency 
our lp models should be competitive with lm cut  figure  b shows that in fact  a   lpe  t     and
a   lpetr  t     tend to search quite efficiently  and it can be seen that both of these lines are above
the lm cut line  i e   more problems were solved using a given number of evaluations  until between          node evaluations  at which point they are overtaken by the lm cut line  while
the informativeness comparison in section     showed that the lp models are comparable and complementary to lm cut with respect to informativeness  fd lm cut outperforms a   lpetr  t     and
a   lpetr  t     on most domains  this is because the lm cut implementation in fast downward
is often significantly faster than the current implementation of our lp based heuristics  nevertheless  there are several domains  freecell  parcprinter     parcprinter opt    satellite  trucks  visitall  
   

fio n a p ractical   i nteger  l inear p rogramming m odel

domain    problems 
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

fd hmax

fd lm cut

hsp hst cplex

a   ip t    

a   ipe  t    

a   lpe  t    

solved
  
 
  
 
 
  
  
 
  
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
 
  
 
 
 
 
  
  
 
  
 
 
 
 
 
 
   
  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

solved
  
 
  
 
 
 
 
 
  
 
 
 
  
  
  
  
 
 
 
 
  
  
 
 
  
 
 
 
  
 
 
 
 
 
 
 
 
 
 
  
  
 
 
   
 

solved
  
 
  
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
  
 
 
   
 

solved
  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
 
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
 
   
  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
  
   
  

 
a   lpe
tr  t  

solved
  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
  
 
  
  
  
  
  
   
  

table    comparison of forward search  a    planners  part    number of problems solved with   
minute   gb ram limit using a  and our ip lp models which are bounded above by h   sections
     as heuristic functions  comparison with fast downward with hmax   fast downward with
landmark cut  and the hsp planner using hst cplex  haslum et al         to compute h    as the
heuristic function 

where a   lpetr  t     achieves higher coverage than fd lm cut  thus  a   lpetr  t      our best
model among those which are bounded above by h    can be considered a fairly powerful  admissible heuristic function for forward state search based planning 
   

fii mai   f ukunaga

   
   

instances solved

   
   
   
   
fd lmcut
a  lpetr t  
a  lpe t  
a  ipe t  
fd hmax

   
   
 
   

 

  

   

    

time  seconds 
 a  cumulative number of problems solved  out of       vs time     minute time limit  

   
   

instances solved

   
   
   
   
fd lmcut
a  lpetr t  
a  lpe t  
a  ipe t  
fd hmax

   
   
 

 

  

   

    

              e   

 e   

 e   

evaluations
 b  cumulative number of problems solved  out of       vs number of search nodes evaluated     minute
time limit  

figure    comparison of forward search  a    planners  part     heuristics that are bounded above
by h    

   

fio n a p ractical   i nteger  l inear p rogramming m odel

   incorporating counting constraints
so far  we have concentrated on efficient computation of h  as well as relaxations of h    and all of
our models so far have been bounded above by h    however  our ip model can be extended with
constraints that consider delete effects  by adding variables and constraints related to delete effects
of actions  our model can also calculate lower bounds on the number of times each action must be
applied  new variables are defined as follows 
 a  a  n  a                 n  a    n iff a is used n times 
 p  p  g p            g p      iff p  g 
g p  is an auxiliary variable similar to i p   furthermore  in this extended model  the meaning
of u  a          is slightly modified to mean that action a is used at least once in the optimal
solution  in the basic model proposed in section    which was a pure delete free model  u  a 
denoted whether a was used exactly once or not at all in the optimal solution  
new constraints are defined as follows 
 c   a  a  n  a   u  a  
p
p
 c   p  p  g p    as t ppredel a  n  a   i p    as t padd a  n  a  
where
predel a    pre a   del a   finally  the objective function is modified so as to minimize
p
aa c a n  a   given a planning task t   we use ipc  t   to denote an ip problem which adds the
and above new variables and constraints to ip t    
the idea for these types of constraints have been previously proposed several times  for a sas 
formulation   and correspond to the action order relaxation by van den briel et al          the state
equation heuristic by bonet         and the net change constraints by pommerening et al         
intuitively  the final constraint states that the number of uses of actions adding p must be greater
than or equal to the number of uses of actions requiring and deleting p at the same time in a feasible
plan for t   any feasible plan for a strips planning task always satisfies this condition  hence 
for any task t and any feasible plan  for t   we can clearly derive a feasible solution to ipc  t  
with the same cost as   in addition to this  a stronger proposition can be proved for modifications
of models by the enhancements in section   
proposition    given a task t   for any feasible plan     a         an   of t   there exists a feasible
solution to ipc  t   that has the same cost as the cost of   in addition to this  there exists a feasible solution to ipc  t   with any combination of landmark extraction and substitution  relevance
analysis  and inverse action constraints that has the same cost as the cost of  
proof  let    be the delete relaxation of the subsequence of the plan  extracted by algorithm   
first we show that the subsequence    is a feasible delete free plan for t     and then we show that
the assignment derived from    satisfies the constraints 
 
 
 
 
we use  a 
         am   to denote the elements of    to show that  is feasible in t   assume
 
 
a 
i is the first infeasible action in    let p be a proposition such that p  pre ai   and p  
 
 
i  a         ai      since  is a valid feasible plan for t   the delete relaxation of the entire sequence
of  is a valid feasible plan for t     hence  if a 
i is not feasible  then this is because algorithm  
 
skipped all the actions that add p before ai is applied  since s on line   in algorithm   is equal to
 
i  a 
         ai     for each i  all the skipped actions that add p satisfy add ai     s      and thus
   

fii mai   f ukunaga

algorithm   extracting a subsequence of     a         an    for the proof of proposition   
  
  
  
  
  
  
  
  
  
   

           empty
s  i 
for a   a         an do
let a be the delete relaxation of a 
if a is relevant to t   and add a     s     then
append a at the end of     
s  s  add a   
end if
end for
return     

they are irrelevant to t     however this contradicts the definition of the relevance analysis and the
 
 
fact that a 
i is relevant  similar to this argument  we have g  i     hence  is a valid feasible
plan for t    
define an assignment f for ipc  t   as 
 vf    vf   for each variable v that is defined for ip t      where f   is the assignment
derived from    for ip t      and
 n  a f     the number of occurrences of a in   for each a  a 
the assignment f clearly satisfies constraints c  through c   the assignment f also satisfies
constraint c  since  is a valid plan for t   and f satisfies constraint c  since u  a f     if a is not
included in   hence f is a feasible solution to ipc  t   which has the same cost as  
in addition  f is also a feasible solution to ipc  t   with any combination of landmark extraction
and substitution  relevance analysis  and inverse action constraints  we can see this by checking
the feasibility of f with each type of modified constraints independently  if f satisfies each of the
modified constraints  then it satisfies any combination of such constraints 
f satisfies the constraints added by the landmark extraction and substitution  i e  substituting   for variables corresponding to landmarks  since    is a valid feasible plan for t     f also
satisfies constraints added by the relevance analysis  i e  substituting   for irrelevant actions and
propositions  since    contains only relevant actions  finally  we can show
p that f satisfies inverse
action constraints similarly to the proof of proposition    we have a inv a p  e a   p f    
p
when u  a f     and u  p f     hold  and we also have a inv a p  e a   p f    when
p
u  a f     and u  p f     hold  in addition  we can show that a inv a p  e a   p f     for
each u  a f   u  p f      assume that there exists a  inv a  p  such that e a   p f      then 
by constraint c   u  a  f      and this means a is also a member of      without loss of generality 
assume a is applied before a is applied in      since add a    pre a  by the definition of inverse
actions  nothing new is added to the state after applying a   s on line   in algorithm   is equal to

i  a 
         a     and this contradicts add ai     s     
unfortunately  the counting constraints conflict with dominated action elimination  section     
and zero cost immediate action application  section       when counting constraints are used 
it is necessary to disable zero cost immediate action application and to modify the condition of
dominated actions as follows 
   

fio n a p ractical   i nteger  l inear p rogramming m odel

definition    modified dominated action definition   given a feasible task t   an action a is dominated by action a if  i  add a   add a     ii  for any p  pre a    p is a fact landmark of a or
p  i   iii  c a   c a    and  iv  pre a    del a    pre a   del a  
we can no longer use the modified dominated actions to make a feasible plan for t   since fact
landmarks are sometimes deleted after they are achieved  however the following fact can be proved 
proposition    given a task t   let     a         an   be a feasible solution to t   there exists a
feasible solution to ipc  t   with any combination of landmark extraction and substitution  relevance
analysis  inverse action constraints  and the modified dominated action elimination that has cost
equal to or less than the cost of  
proof  recall that the dominated action elimination constraints substitute  s for u  a  for each dominated action a  if  does not contain any modified dominated actions  then the proposition holds
due to proposition   
otherwise  we can derive a feasible solution using the sequence of actions made by replacing
modified dominated actions in  with their corresponding dominating actions  let   be such a
sequence  note that the sum of the costs of the actions in   is clearly less than or equal to that of  
let    be the relaxation of the subsequence of   extracted by algorithm    since we can
prove that the delete relaxation of   is a feasible plan for t   by an argument similar to the proof
of proposition    we can prove that    is also a feasible plan for t   by an argument similar to the
proof of proposition   
if    is a feasible plan  then we can derive a feasible solution for ipc  t   with the constraints
from   as in the proof of proposition    the solution satisfies constraints c  through c  with
any combination of landmark extraction and substitution  relevance analysis  and inverse action
constraints  it satisfies constraint c  because u  a      if a is not included in     and it satisfies
constraint c  because replacing dominated actions does not invalidate constraint c  if  is a feasible
plan for t   it also satisfies dominated action elimination constraints  i e  u  a      for each
dominated action a  since   does not contain any modified dominated action 




ipec  t   and lpec  t   denote the models constructed by applying all of the valid reductions to
ipc  t   and lpc  t   respectively  the lp and time relaxations for ip t     described in section  

can be applied to ipc  t   as well  and lpectr  t   is the time relaxed  lp relaxation of the enhanced

ipec  t   model  table   summarizes the relationships among these models 
    experimental results for models enhanced with counting constraints


to see the impact of adding counting constraints  we evaluated the informativeness of lpec  t   

lpectr  t    lpe  t      and lpetr  t     by comparing their values with the lm cut heuristic values


 helmert   domshlak         table   shows the values of lpec  t    lpectr  t    lpe  t      and
lpetr  t     as a multiple of the lm cut values  means for each domain are shown   note that in
contrast to table    which was limited to the      instances for which h  could be computed
exactly  table   includes all      instances  because the lm cut values could be computed for all
     instances  
on the majority of domains  the counting constraints result in a more informative heuristic 

compared to the models without the counting constraints  so in most cases  lpe  t      lpec  t  

and lpetr  t      lpectr  t    it is sometimes possible for the optimal value of lpe  t     to be larger
   

fii mai   f ukunaga





than the optimal value of lpec  t   and for lpetr  t     to have a larger optimal value than lpectr  t  
because as explained in section    some of the additional constraints that are part of ipe  t     are

incompatible with ipc  t   and are excluded from ipec  t    resulting in different lp polytopes for
their lp relaxations 
next  to see the impact of adding counting constraints on forward search planning using these


delete relaxation lp models  we compare a   lpec  t   with a   lpe  t      and a   lpectr  t   with
a   lpetr  t      coverage on the same instances as our previous experiment are shown in table    
there is a tradeoff between the improved search efficiency due to the additional informativeness in
the heuristic provided by the counting constraints  and the additional time required to solve the lps
 because the additional constraints make the lp more difficult to solve   table    shows that the

overall effects of enhancing our delete relaxation model are mixed  a   lpec  t   attains a coverage

of     instances  which is lower than the coverage for a   lpe  t      while a   lpectr  t   solves    
problems compared to the     problems solved by a   lpetr  t      there are some domains where
adding the counting constraints significantly improved coverage  including parcprinter  pathwaysnoneg  rovers  woodworking  on the other hand  coverage dropped significantly in elevators  freecell  openstacks as a result of adding the counting constraints  the time relaxation seems to be
advantageous overall  resulting in an increase from     instances for a   lpe  t     to     problems
for a   lpetr  t     
table   also shows the value for the lmc seq lp value  pommerening et al          this combination of the landmark constraints and net change constraints in their operator counting framework is analogous to the combination of our delete free model with counting constraints  so it is


interesting to compare their optimal lp values  lpec  t   and lpectr  t   have a higher average value
than lmc seq on    and    domains  respectively  while lmc seq has a higher value than both


lpec  t   and lpectr  t   on    domains  thus  as with our previous comparison of lm cut with
lpe  t     and lpetr  t     in section      our delete relaxation approach seems to be complementary
to the lmc seq combination in the operator counting framework  on the other hand  comparing
the results of forward search based optimal planning using these lp models  we see that fd lmc


seq has significantly higher coverage than a   lpec  t   and a   lpectr  t    as well as a   lpec  t  

and a   lpectr  t   

   automatic lp model selection
from the definitions of the models  we know that for any strips planning task t with action
costs  the relationships among the ip models are as follows  iptr  t      ipetr  t      ip t      

ipe  t       h   ipc  t     ipec  t    as for the lp relaxations  we know that lp t     




lpe  t      lpetr  t      lpe  t      lpectr  t    lpec  t    and lpectr  t    lpec  t    note that

lpec  t   does not always dominate lpe  t      because the dominated action elimination and immediate action application eliminate different sets of variables in these two lp models  figure  
illustrates the dominance relationships among the bounds 

while the time relaxed lpetr  t     and lpectr  t   are dominated by the non time relaxed models

lpe  t     and lpec  t    respectively  the time relaxed lps are significantly cheaper to compute than
their non relaxed counterparts 

similarly  although ipec  t   dominates ipe  t      it is possible for lpe  t     to be larger than

lpec  t    furthermore  if two lps have the same optimal value  the one that can be solved faster is
clearly preferable because the lps must be solved at each node in the a  search  thus  we have a set
   

fio n a p ractical   i nteger  l inear p rogramming m odel

airport
barman opt  
blocks
depot
driverlog
elevators opt  
elevators opt  
floortile opt  
freecell
grid
gripper
logistics  
logistics  
miconic
no mprime
no mystery
nomystery opt  
openstacks
openstacks opt  
openstacks opt  
parcprinter   
parcprinter opt  
parking opt  
pathways noneg
pegsol   
pegsol opt  
pipesworld notankage
pipesworld tankage
psr small
rovers
satellite
scanalyzer   
scanalyzer opt  
sokoban opt  
sokoban opt  
tpp
transport opt  
transport opt  
trucks
visitall opt  
woodworking opt  
woodworking opt  
zenotravel

lmc seq

lpe  t    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   
   
    
    
    
   
   
    
    
    
    
   
   
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
   
   
   
    
    
    
    
   

 
lpe
tr  t  

   
   
    
    
   
   
   
    
    
    
    
   
   
    
   
   
    
    
    
    
    
    
   
    
    
    
    
    
    
   
   
   
   
    
    
   
   
   
    
    
    
    
   





lpe
c  t  

lpe
ctr  t  

   
    
    
    
    
   
   
    
    
    
    
    
    
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
    
   
   
    
    
    
    
   

   
    
    
    
    
   
   
    
    
    
    
    
    
    
   
   
    
    
    
    
    
    
    
    
    
    
    
    
    
   
   
   
   
    
    
    
   
   
    
    
    
    
   

table    optimal values of lp models relative to lm cut value for      ipc instances  means for
each domain are shown  e g   for barman opt    the mean lmc seq value was      times the lm
cut value  the lpe  t     and lpetr  t     values were      times the lm cut value  and the lpec  t  

and lpectr  t   values were      times the lm cut value 

   

fii mai   f ukunaga

   
   

instances solved

   
   
   
   

fd lmc seq
a  autoconf
fd lmc
a  lpe
ctr t 
a  lpetr t  
fd seq

   
   
 
   

 

  

   

    

time  seconds 
 a  cumulative number of problems solved  out of       vs time     minute time limit  

   
   

instances solved

   
   
   
   

fd lmc seq
a  autoconf

   

fd lmc
a  lpe
ctr t 

   

a  lpetr t  
fd seq

 

 

  

   

    

              e   

 e   

 e   

evaluations
 b  cumulative number of problems solved  out of       vs number of search nodes evaluated     minute
time limit  

figure    comparison of forward search  a    planners  part   

   

fio n a p ractical   i nteger  l inear p rogramming m odel

of   viable lp heuristics  none of which dominate the others when considering both accuracy and
time  the best choice to optimize this tradeoff between heuristic accuracy and node expansion
rate depends on the problem instance  it is difficult to choose the best heuristic a priori because in
general  we do not know     whether it is worthwhile to use the counting constraints or not  and    
whether the time relaxation is tight or not for a particular problem instance 
thus  we implemented a simple mechanism for automatically selecting the lp to be used for

each problem which works as follows  first  we compute lpe  t      lpec  t    lpetr  t      and

lpectr  t   for the problem instance  i e   at the root node of the a  search   we then select one
based on the following rule  choose the heuristic with the highest value  and break ties by choosing the heuristic that is cheapest to compute  although the cheapest heuristic could be identified
according to the cpu time required to compute each heuristic  for many problems  the computations are too fast for robust timing measurements  so we simply break ties in order of lpetr  t     


lpectr  t    lpe  t      lpec  t    because this ordering usually accurately reflects the timing order 
this mechanism makes the simplistic assumption that ranking and behavior of the lp bounds at the
root node will be similar to the ranking of the lp bounds throughout the search graph  a more sophisticated method for heuristic selection may result in better performance  c f  domshlak  karpas 
  markovitch         and is an avenue for future work 
    experimental results for automated model selection and comparison with the
state of the art
we compared a  using our lp based heuristics  including a   autoconf  with state of the art heuristics  specifically  we compared 
 fd lm cut   fast downward using the landmark cut heuristic  helmert   domshlak       
 the standard seq opt lmcut configuration 
 fd lmc   fast downward using an lp model for the optimal cost partitioning for landmark
cut constraints  pommerening et al        
 fd seq   fast downward using the lower bound net change constraints  pommerening et al  
       corresponding to the state equation heuristic by bonet        
 fd opt sys   fd pho sys   fd pho sys    fast downward using optimal cost partitioning constraints for projections on goal variables  opt sys    and post hoc optimization
constraints  pho sys   pho sys    pommerening et al         
 fd lmc seq   fast downward using both the landmark cut and net change constraints 
 a   lpe  t       a  with the lp relaxation of the enhanced delete free ip model ipe  t    
 section    as a heuristic 
 a   lpetr  t       a  with the lp relaxation of the time relaxed  enhanced delete free ip model
ipe  t     as a heuristic 


 a   lpec  t     a  with the lp relaxation of the enhanced delete free ip model with counting

constraints ipec  t   as a heuristic 


 a   lpectr  t     a  with the lp relaxation of the time relaxed  enhanced delete free ip model

with counting constraints ipec  t   as a heuristic 
   

fii mai   f ukunaga

      c overage r esults
the coverage results  number of problems solved  are shown in tables     the time spent at the
root node by a   autoconf for lp model selection is included in the runtimes  and also counts against
the    minute runtime limit  figures  a  b show the cumulative number of instances solved as a
function of the number time and number of node evaluations  respectively  for legibility  only a
subset of the algorithms are included in figures  a  b   table    shows a summary of total coverage
results for all forward search configurations that are included in tables   and    
our results indicate that automatic lp model selection significantly boosts the performance of
an a   based planner compared to relying on a single lp model  a   autoconf achieved a coverage of     out of      instances  which is significantly better than its   individual components 
furthermore  a   autoconf attained higher coverage than all other solver configurations in table
   except for fd lmc seq  pommerening et al          which solved     instances  note that
a   autoconf has higher coverage than fd lmc seq on       domains  floortile opt    freecell 
grid  logistics    nomystery opt    pathways noneg  rovers  satellite  trucks  woodworking opt   
woodworking opt    
      accuracy of a    autoconf m odel s election
we analyzed the accuracy of the model selection by evaluating the performance of a   autoconf on
each problem instance vs the performance of each of its four component models  if only coverage
is considered  then in       of the instances  a   autoconf made the correct decision with respect to
coverage  where the model selection by a   autoconf was deemed to be correct if either a   autoconf
solved the problem instance  or none of the   components solved the problem instance  on the other
hand  when runtimes are considered as well as coverage  then in       of the instances  a   autoconf
made the correct decision  where the selection was deemed to be correct if a   autoconf selected the
model that had the best runtime  including ties   or none of the   components solved the problem

instance  as a baseline  lpectr  t    which had the best coverage among all of the component models 
is the correct choice according to this criterion       of the time  mistakes in the selections made
by a   autoconf can be seen in table    coverage results  for example  in the woodworking opt  

domain  a   autoconf solved    instances compared    instances solved by lpectr  t    thus  there
is significant room for improvement when runtimes are considered in addition to coverage  and
improving the model selection using machine learning techniques is a direction for future work 

    discussion and conclusion
this paper proposed a new  integer linear programming formulation of the delete relaxation h 
for cost optimal  domain independent planning  we started with a basic ip model ip t      and
showed that an enhanced model ipe  t      which incorporates landmark based variable reduction 
relevance analysis  and action elimination  is competitive with previous methods for solving deletefree versions of the standard ipc planning benchmarks tasks  i e   exact computation of h    
the results of embedding our ip model as the heuristic function in a a   based forward search
planner confirmed that the plain ip t     model is not practical  coverage of          instances
vs      for fast downward using hmax    however  we showed that the ipe  t     model  which
uses variable reduction methods to reduce the size of the ip models and exactly computes h   
performed much better  with a coverage of     instances  according to the summary results in
   

fifd seq

a   lpe  t    

 
a   lpe
tr  t  

  
 
  
 
  
  
 
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
 
  
  
 
  
 
 
  
  
 
 
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
 
 
  
  
 
  
 
 
  
  
  
  
   
  

  
 
  
 
  
  
 
 
  
 
 
 
  
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
 
  
  
 
 
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
 
 
  
  
  
  
  
   
 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
 
  
  
  
 
  
 
  
 
 
  
  
 
  
 
  
  
  
  
  
   
 

a   autoconf

fd pho sys 

  
 
  
 
  
 
 
 
 
 
 
 
  
  
  
  
 
 
  
 
  
 
 
 
  
  
  
 
  
 
 
  
 
  
  
 
 
 
 
  
 
 
 
   
 



fd pho sys 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

a   lpe
ctr  t  

fd opt sys 

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  



fd lmc seq

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
 
  
  
  
  
  
   
  

  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
 
 
 
 
  
  
 
  
  
  
  
 
  
  
 
 
 
  
  
 
 
 
  
  
  
  
  
   
  

  
 
  
 
  
 
 
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
  
  
  
  
 
  
  
 
 
 
  
  
 
 
 
  
  
  
  
  
   
  

  
 
  
 
  
  
  
 
  
 
 
 
  
   
  
  
  
 
  
 
  
  
 
  
  
  
  
 
  
  
  
 
 
  
  
 
  
 
  
  
  
  
  
   
  

a   lpe
c  t  

fd lmc

domain
airport    
barman opt      
blocks    
depot    
driverlog    
elevators opt      
elevators opt      
floortile opt      
freecell    
grid   
gripper    
logistics      
logistics      
miconic     
no mprime    
no mystery    
nomystery opt      
openstacks    
openstacks opt      
openstacks opt      
parcprinter       
parcprinter opt      
parking opt      
pathways noneg    
pegsol       
pegsol opt      
pipesworld notankage    
pipesworld tankage    
psr small    
rovers    
satellite    
scanalyzer       
scanalyzer opt      
sokoban opt      
sokoban opt      
tpp    
transport opt      
transport opt      
trucks    
visitall opt      
woodworking opt      
woodworking opt      
zenotravel    
total coverage       
  best domains

fd lm cut

o n a p ractical   i nteger  l inear p rogramming m odel

table     comparison of forward search  a    planners  part    number of problems solved with
   minute   gb ram limit using a  and our ip lp models as heuristic functions  includes lp


models that incorporate counting constraints  lpec  t    lpectr  t    section     as well as a   autoconf
 section     comparison with fast downward using operator counting lp models  pommerening
et al         

   

fii mai   f ukunaga

configuration
fd lm cut

  solved
   

fd hmax
fd seq
fd pho sys 
fd pho sys 
fd lmc

   
   
   
   
   

fd opt sys 
fd lmc seq
a   hst cplex

   
   
   

a   ip t    
a   ipe  t    
a   lpe  t    
a   lpetr  t    

a   lpec  t  
 
e
a  lpctr  t  
a   autoconf

   
   
   
   
   
   
   

description
fast downward  fd  using standard landmark cut heuristic
 seq opt lmcut 
fd using hmax heuristic
fd using seq lp heuristic  pommerening et al        
fd using pho sys  lp heuristic  pommerening et al        
fd using pho sys  lp heuristic  pommerening et al        
fd using lp model of optimal cost partitioning on landmark constraints  pommerening et al        
fd using opt sys  lp heuristic  pommerening et al        
fd using lmc seq lp heuristic  pommerening et al        
hsp planner using a  and h  heuristic  haslum et al         haslum 
     
basic ip formulation for h 
ip t     with all enhancements in sections        
lp relaxation of ipe  t    
lp relaxation of the time relaxed model ipetr  t    

lp relaxation of ipec  t  

lp relaxation of the time relaxed model ipectr  t  
automated selection of lp at root node section   

table     summary of coverage    solved  on      ipc benchmark problems instances with   
minute time limit and  gb ram  see tables      for detailed results 
table     the aggregate coverage of ipe  t     is comparable to the coverage obtained by the lpbased seq  opt sys   pho sys   and pho sys  heuristics recently implemented using the
operator counting framework by pommerening et al          however  the aggregate coverage on
the ipc benchmarks is skewed by the miconic domain  where seq  opt sys   pho sys   and
pho sys  perform particularly poorly compared to other heuristics  if the miconic domain is not
included  then ipe  t     is not competitive with these lp based models  note that on the freecell
domain  a  with the ipe  t     heuristic solved       instances  which is significantly higher than all
other methods  so there is at least   domain where exact h  computation using the ipe  t     model
performs extremely well compared to other state of the art heuristics 
we then showed that the gap between the optimal value of the lp relaxations of our ip models
and h  tended to be quite small  the gap was often zero   suggesting that the lp relaxations  which
can be computed much faster than the ip models  could be used as a heuristic for a   based planning 
a time relaxation that eliminates all time related constraints was also proposed as another way to
reduce the model in order to be solvable faster  a comparison of our lp relaxed delete relaxation
models with the lm cut  helmert   domshlak        heuristic values showed that these approaches
are complementary with respect to how closely they approximate h    thus  the lp relaxation of
our delete free models provides a novel  practical alternative to approximating h    we showed
that a  search using lpe  t      lp relaxation of delete free task  and lpetr  t      time relaxed 
lp relaxation of delete free task  significantly improves upon the ip models  solving     and    
instances  respectively  making them usable as practical heuristics 
a major advantage of lp based heuristics is the relative ease with which additional constraints
can be added in order to obtain improved heuristics  we showed that the counting constraints 
corresponding to the net change constraints proposed in previous work  van den briel et al        

pommerening et al          could be added to our lp model  the resulting heuristic  lpectr  t  
had mixed results  improving performance on some domains  but degrading performance on other

domains  i e   lpetr  t     and lpectr  t   are complementary heuristics 
   

fio n a p ractical   i nteger  l inear p rogramming m odel



since there is no dominance relationship among a   lpe  t      a   lpetr  t      a   lpec  t   and

 
a  lpectr  t    we proposed a   autoconf   a simple method which automatically selects among these
  heuristics by computing all   heuristic values at the root node and using the most accurate heuristic
 breaking ties according to speed   we showed that overall  a   autoconf significantly improves upon
its   components  and is competitive with the landmark cut heuristic  solving          instances
and achieving state of the art performance on several domains 
while a   autoconf has lower total coverage compared to fast downward using the lmc seq
lp based heuristic  pommerening et al          the lp t     based approach outperforms lmcseq on several domains including freecell  pathways noneg  rovers  satellite  trucks  and woodworking  although a   autoconf includes lp models with counting constraints that consider some
delete effects  note that a   lpetr  t      which uses a pure delete free lp  performs quite well  obtaining higher coverage than all of the operator count based heuristics of pommerening et al        
in the floortile  freecell  nomystery opt    satellite  and trucks domains  so the counting constraints
are not required in order for a  using the delete relaxation based lps to achieve state of the art
performance on some domains 
a comparison of the optimal values of our counting constraint enhanced delete relaxation lp


models lpec  t   and lpectr  t   with the optimal lp values of the lmc seq model showed that
they are complementary  with each class of models outperforming the other on roughly the same
number of domains  section       thus  integrating these two approaches in a single lp model
is a promising direction for future work  in a recent survey of lp based heuristics for planning 
roger and pommerening        noted that our delete relaxation model can be incorporated into the
operator counting framework of pommerening et al         by adding operator counting variables
for each operator in the delete relaxed problem  this is a promising direction for future work  note
that while both pommerening et al         and our approach use landmarks  they are used for very
different purposes  the landmark constraints used by pommerening et al         are used directly
as operator counting constraints  in contrast  our approach uses landmarks order to decrease the
size of the ip lp models for the delete free task and is used for the purpose of speeding up the
computation of the ip lp models  i e   landmark based reduction does not change the optimal value
of ip t     

we showed that adding counting constraints that consider some delete effects  i e   lpec  t   and

lpectr  t    can improve performance on some domains  but in some domains  coverage dropped
significantly  this is because the additional constraints make the lp more difficult to solve  so the
increased search efficiency due to the tighter bound is not enough to overcome the increased cost
of solving the lp at each search node  a   autoconf attempts to address this by selecting the models
with counting constraints only when they return a higher value than the model without counting constraints at the root node  and otherwise uses a model that does not include the counting constraints
 i e   lpe  t     or lpetr  t       on the other hand  strengthening the delete relaxation by considering
some of the delete effects has been an active area of research  and recently  two frameworks that allow flexible interpolation between the delete relaxation and the original model have been proposed 
keyder  hoffmann  and haslum        propose an approach which adds new fluents that represent
conjunctions of fluents in the original planning task  red black planning  domshlak  hoffmann   
katz        is a framework which separates state variables into two groups  red variables which are
relaxed  and black variables that are not relaxed  combining these flexible relaxation frameworks
with our ip approach and developing a more principled approach to deciding when to use counting
constraints is an avenue for future work 
   

fii mai   f ukunaga

our current implementation uses the cplex solver naively  relying entirely on default control
parameters  systematically tuning and improving the implementation of our ip lp models in order
to make better use of incremental ip lp solving capabilities is a promising direction for future work 
although we have shown that our lp models often compute h  exactly  there are some domains
where there are significant gaps between h  and the optimal cost of the lp models  improved
modeling techniques may allow tighter lp bounds  for example  constraint c  uses straightforward
a big m encoding  and it may be possible to obtain tighter bounds using other methods 
furthermore  although solving and ip at each node in a forward search based planner has previously been considered impractical  we have shown that our ipe  t     model  which computes h 
exactly  is almost useful as a practical heuristic  and improving the techniques used to solve the ip
for the ipe  t     may result in a balance of accuracy and speed necessary for a practical general
purpose heuristic  for example  significant performance improvements might be obtainable by improving the use of the ip solver  for example  in contrast to lp solvers  where parallel speedups are
often difficult to obtain  ip solvers can often be sped up significantly by parallelization  and current
ip solvers already provide parallel search algorithms  which we did not use in this paper because
we limited our experiments to single threads   as the number of cores per processor continues to increase  it is possible that in some cases  ip based heuristics may become more useful than lp based
heuristics 

acknowledgments
thanks to patrik haslum for assistance with his code for computing h  and his hsp f planner 
thanks to florian pommerening for assistance with the code for the lp heuristic based fast downward  pommerening et al          thanks to the anonymous reviewers for numerous helpful suggestions which significantly improved the paper  this research was supported by a jsps grant in aid
for jsps fellows and a jsps kakenhi grant 

references
backstrom  c     nebel  b          complexity results for sas  planning  computational intelligence                
betz  c     helmert  m          planning with h  in theory and practice  in ki       pp      
springer 
blum  a     furst  m          fast planning through planning graph analysis  artificial intelligence                  
bonet  b          an admissible heuristic for sas  planning obtained from the state equation 
in proceedings of the international joint conference on artificial intelligence  ijcai   pp 
         
bonet  b     castillo  j          a complete algorithm for generating landmarks  in proceedings of
the international conference on automated planning and scheduling  icaps  
bonet  b     geffner  h          planning as heuristic search  artificial intelligence           
    
bonet  b     helmert  m          strengthening landmark heuristics via hitting sets  in proceedings
of the european conference on artificial intelligence  ecai   pp         
   

fio n a p ractical   i nteger  l inear p rogramming m odel

bonet  b     van den briel  m          flow based heuristics for optimal planning  landmarks
and merges  in proceedings of the international conference on automated planning and
scheduling  icaps  
bylander  t          the computational complexity of propositional strips planning  artificial
intelligence                 
bylander  t          a linear programming heuristic for optimal planning  in proceedings of the
national conference on artificial intelligence  aaai   pp         
cooper  m  c   de roquemaurel  m     regnier  p          transformation of optimal planning
problems  journal of experimental   theoretical artificial intelligence                
dimopoulos  y          improved integer programming models and heuristic search for ai planning 
in proceedings of  th european conference on planning  ecp   pp       
domshlak  c   karpas  e     markovitch  s          online speedup learning for optimal planning 
journal of artificial intelligence research             
domshlak  c   hoffmann  j     katz  m          red black planning  a new systematic approach
to partial delete relaxation  artificial intelligence             
gefen  a     brafman  r          the minimal seed set problem  in proceedings of the international conference on automated planning and scheduling  icaps   pp         
gefen  a     brafman  r          pruning methods for optimal delete free planning  in proceedings
of the international conference on automated planning and scheduling  icaps   pp       
haslum  p          incremental lower bounds for additive cost planning problems  in proceedings
of the international conference on automated planning and scheduling  icaps   pp       
haslum  p       a  personal communication 
haslum  p       b   hsp  code and documentatoin http   users cecs anu edu au 
patrik un hsps html  
haslum  p   slaney  j     thiebaux  s          minimal landmarks for optimal delete free planning  in proceedings of the international conference on automated planning and scheduling
 icaps   pp         
helmert  m     domshlak  c          landmarks  critical paths and abstractions  whats the difference anyway   in proceedings of the international conference on automated planning and
scheduling  icaps   pp         
hoffmann  j     nebel  b          the ff planning system  fast plan generation through heuristic search  journal of artificial intelligence research             
hoffmann  j   porteous  j     sebastia  l          ordered landmarks in planning  journal of
artificial intelligence research             
imai  t     fukunaga  a          a practical  integer linear programming model for the deleterelaxation in cost optimal planning  in proceedings of the european conference on artificial
intelligence  ecai  
karpas  e     domshlak  c          cost optimal planning with landmarks  in proceedings of the
international joint conference on artificial intelligence  ijcai   pp           
   

fii mai   f ukunaga

katz  m     domshlak  c          optimal admissible composition of abstraction heuristics  artificial intelligence                     
kautz  h     selman  b          planning as satisfiability  in proceedings of the european conference on artificial intelligence  ecai   pp         
kautz  h  a     selman  b          pushing the envelope  planning  propositional logic and stochastic search  in proceedings of the national conference on artificial intelligence  aaai   pp 
         
kautz  h  a     selman  b          unifying sat based and graph based planning  in proceedings
of the international joint conference on artificial intelligence  ijcai   pp         
keyder  e   richter  s     helmert  m          sound and complete landmarks for and or graphs 
in proceedings of the european conference on artificial intelligence  ecai   pp         
keyder  e     geffner  h          heuristics for planning with action costs revisited  in proceedings
of the european conference on artificial intelligence  ecai   pp         
keyder  e  r   hoffmann  j     haslum  p          improving delete relaxation heuristics through
explicitly represented conjunctions  journal of artificial intelligence research             
mirkis  v     domshlak  c          cost sharing approximations for h   in proceedings of the
international conference on automated planning and scheduling  icaps   pp         
pommerening  f     helmert  m          optimal planning for delete free tasks with incremental lm cut  in proceedings of the international conference on automated planning and
scheduling  icaps   pp         
pommerening  f   roger  g   helmert  m     bonet  b          lp based heuristics for costoptimal planning  in proceedings of the international conference on automated planning
and scheduling  icaps  
pommerening  f   roger  g     helmert  m          getting the most out of pattern databases
for classical planning  in proceedings of the international joint conference on artificial
intelligence  ijcai  
rintanen  j          planning as satisfiability  heuristics  artificial intelligence            
rintanen  j   heljanko  k     niemela  i          planning as satisfiability  parallel plans and algorithms for plan search  artificial intelligence                       
robinson  n          advancing planning as satisfiability  ph d  thesis  griffith university 
robinson  n   mcilraith  s  a     toman  d          cost based query optimization via ai planning 
in proceedings of the twenty eighth aaai conference on artificial intelligence  july        
      quebec city  quebec  canada   pp           
roger  g     pommerening  f          linear programming for heuristics in optimal planning  in
aaai     workshop on planning  search  and optimization 
van den briel  m         personal communication 
van den briel  m   benton  j   kambhampati  s     vossen  t          an lp based heuristic for
optimal planning  in proceedings of international conference on principles and practice of
constraint programming  cp  
   

fio n a p ractical   i nteger  l inear p rogramming m odel

van den briel  m     kambhampati  s          optiplan  a planner based on integer programming 
journal of artificial intelligence research             
van den briel  m   vossen  t     kambhampati  s          loosely coupled formulation for automated planning  an integer programming perspective  journal of artificial intelligence
research             
vossen  t   ball  m  o   lotem  a     nau  d  s          on the use of integer programming models
in ai planning  in proceedings of the international joint conference on artificial intelligence
 ijcai   pp         
zhu  l     givan  r          landmark extraction via planning graph propagation  in proceedings
of icaps doctoral consortium  pp         

   

fi