journal of artificial intelligence research                 

submitted       published      

expressiveness of two valued semantics for
abstract dialectical frameworks
hannes strass

strass informatik uni leipzig de

computer science institute  leipzig university
augustusplatz           leipzig  germany

abstract
we analyse the expressiveness of brewka and woltrans abstract dialectical frameworks
for two valued semantics  by expressiveness we mean the ability to encode a desired set
of two valued interpretations over a given propositional vocabulary a using only atoms
from a  we also compare adfs expressiveness with that of  the two valued semantics of 
abstract argumentation frameworks  normal logic programs and propositional logic  while
the computational complexity of the two valued model existence problem for all these
languages is  almost  the same  we show that the languages form a neat hierarchy with
respect to their expressiveness  we then demonstrate that this hierarchy collapses once we
allow to introduce a linear number of new vocabulary elements  we finally also analyse and
compare the representational succinctness of adfs  for two valued model semantics   that
is  their capability to represent two valued interpretation sets in a space efficient manner 

   introduction
more often than not  different knowledge representation languages have conceptually similar and partially overlapping intended application areas  what are we to do if faced with
an application and a choice of several possible knowledge representation languages which
could be used for the application  one of the first axes along which to compare different
formalisms that comes to mind is computational complexity  if a language is computationally too expensive when considering the problem sizes typically encountered in practice 
then this is a clear criterion for exclusion  but what if the available language candidates
have the same computational complexity  if their expressiveness in the computationalcomplexity sense of what kinds of problems can the formalism solve  is the same  we
need a more fine grained notion of expressiveness  in this paper  we use such a notion and
study the expressiveness of abstract dialectical frameworks  adfs   brewka   woltran 
      brewka  ellmauthaler  strass  wallner    woltran         a recent generalisation of
abstract argumentation frameworks  afs   dung        
argumentation frameworks are the de facto standard formalism in abstract argumentation  a field that studies how  abstract  arguments relate to each other in terms of directed
conflicts  attacks   and how these conflicts can be resolved without looking into the
arguments  while afs are popular and well studied  it has been noted many times in the
literature that their expressive capabilities are somewhat limited  this has only recently
been made technically precise by dunne  dvorak  linsbichler  and woltran              
who basically showed that introducing new  purely technical arguments is sometimes inevitable when using afs for representation purposes  however  due to their very nature 
the dialectical meaning of such technical arguments might be  ironically  debatable 
c
    
ai access foundation  all rights reserved 

fistrass

not surprisingly  quite a number of generalisations of afs have been proposed  for an
overview we refer to brewka  polberg    woltran         as one of the most general af
alternatives  the aforementioned abstract dialectical frameworks  adfs  have emerged  in
that formalism  not only arguments  called statements there  are abstract  but also links
between arguments  while in afs the links are necessarily attacks  in adfs each statement
has an associated acceptance condition  a boolean function over its parent statements
 that specifies exactly when the statement can be accepted  in this way  acceptance
conditions ultimately express the meaning of links in an adf  even the restricted subclass
of bipolar adfs  where intuitively all links are supporting or attacking  is a proper
generalisation of afs  and a quite expressive one as we shall see in this paper 
adfs could be called the lovechild of afs and logic programs  since they combine
intuitions and semantics from dung style abstract argumentation as well as logic programming  brewka et al         strass        alviano   faber         while on the abstract
level  adfs are intended to function as argumentation middleware  a sufficiently expressive target formalism for translations from more concrete  application  formalisms  as
part of the adf success story  we just mention a reconstruction of the carneades model
of argument  brewka   gordon         an instantiation of simple defeasible theories into
adfs  strass      a   and recent applications of adfs for legal reasoning and reasoning
with cases by al abdulkarim  atkinson  and bench capon              
in this paper  we approach abstract dialectical frameworks as knowledge representation
formalisms  since they are used to represent knowledge about arguments and relationships
between these arguments  we employ this view to analyse the representational capabilities
of adfs  due to their roots in afs and logic programs  we also compare the representational capabilities of those formalisms in the same setting  in this initial study we restrict
ourselves to looking at two valued semantics  more specifically the adf  stable  model semantics  which corresponds to af stable extension semantics  and the supported and stable
model semantics for logic programs  we add propositional logic to have a well known reference point  analysing these precise formalisms additionally makes sense to us because the
computational complexity of their respective model existence problems is the same  with
one exception  
 for afs  deciding stable extension existence is np complete  dimopoulos  nebel   
toni        
 for normal logic programs  deciding the existence of supported stable models is npcomplete  bidoit   froidevaux        marek   truszczynski        
 for adfs  deciding the existence of  supported  models is np complete  brewka
et al          deciding the existence of stable models is p   complete for general
adfs  brewka et al         and np complete for the subclass of bipolar adfs  strass
  wallner        
 the propositional satisfiability problem is np complete 
in view of these almost identical complexities  we use an alternative measure of the
expressiveness of a knowledge representation formalism f  given a set of two valued
interpretations  is there a knowledge base in f that has this exact model set  this notion
   

fiexpressiveness of two valued semantics for adfs

lends itself straightforwardly to compare different formalisms  gogic  kautz  papadimitriou 
  selman        
formalism f  is at least as expressive as formalism f  if and only if every
knowledge base in f  has an equivalent knowledge base in f   
so here expressiveness is understood in terms of realisability  what kinds of model sets
can the formalism express   in model theory  this is known as definability  
it is easy to see that propositional logic can express any set of two valued interpretations 
it is universally expressive  the same is easy  but less easy  to see for normal logic programs
under supported model semantics  for normal logic programs under stable model semantics 
it is clear that not all model sets can be expressed  since two different stable models are
always incomparable with respect to the subset relation   in this paper  we study such
expressiveness properties for all the mentioned formalisms under different semantics  it
turns out that the languages form a more or less strict expressiveness hierarchy  with afs
at the bottom  adfs and lps under stable semantics higher up and adfs and lps under
supported model semantics at the top together with propositional logic 
to show that a language f  is at least as expressive as a language f  we will mainly
use two different techniques  in the best case  we can use a syntactic compact and faithful
translation from knowledge bases of f  to those of f    compact means that the translation
does not change the vocabulary  that is  does not introduce new atoms  faithful means that
the translation exactly preserves the models of the knowledge base for respective semantics
of the two languages  in the second best case  we assume the knowledge base of f  to be
given in the form of a set x of desired models and construct a semantic realisation of x
in f    that is  a knowledge base in f  with model set precisely x  to show that language
f  is strictly more expressive than f    we additionally have to present a knowledge base kb
from f  of which we prove that f  cannot express the model set of kb 
analysing the expressiveness of argumentation formalisms is a quite recent strand of
work  its ascent can be attributed to dunne et al                who studied realisability
for argumentation frameworks  allowing to introduce new arguments as long as they are
never accepted   likewise  dyrkolbotn        analysed af realisability under projection
 allowing to introduce new arguments  for three valued semantics  baumann  dvorak  linsbichler  strass  and woltran        studied the expressiveness of the subclass of compact
afs  where each argument is accepted at least once  finally  and most recently  puhrer
       analysed the realisability of three valued semantics for adfs  previous more preliminary works include that of brewka  dunne  and woltran         who translated adfs
into afs for the adf model and af stable extension semantics  however this translation
introduces additional arguments and is therefore not compact  and ours  strass        
where we studied the syntactic intertranslatability of adfs and lps  but did not look at
expressiveness or realisability 
the gain that is achieved by our analysis in this paper is not only that of increased
clarity about fundamental properties of these knowledge representation languages  what
can these formalisms express  actually   but has several further applications  as dunne
et al         remarked  a major application is in constructing knowledge bases with the aim
   however  the stable model semantics becomes universally expressive once we allow nested expressions of
the form not not p in rule bodies  lifschitz  tang    turner        lifschitz   razborov        

   

fistrass

of encoding a certain model set  as a necessary prerequisite to this  it must be known that
the intended model set is realisable in the first place  for example  in a recent approach to
revising argumentation frameworks  coste marquis  konieczny  mailly    marquis        
the authors avoid this problem by assuming to produce a collection of afs whose model sets
in union produce the desired model set  while the work of dunne et al         showed that
this is indeed necessary in the case of afs and stable extension semantics  our work shows
that for adfs under the model semantics  a single knowledge base  adf  is always enough
to realise any given model set  what is more  if we assume that the intended model set is
given in the form of a propositional formula  then the size of the realising adf is at most
linear in the size of the formula  this is only one example  we will on several occasions
also consider the sizes of realisations  as is not uncommon in logic based ai  darwiche  
marquis        lifschitz   razborov        french  van der hoek  iliev    kooi        shen
  zhao         indeed  representation size is a fundamental practical aspect of knowledge
representation languages  universal expressiveness is of little use if the model sets to express
require exponential size knowledge bases even in the best case 
of course  the fact that the languages we study have the same computational complexity
means that there in principle exist polynomial intertranslations for the respective decision
problems  but such intertranslations may involve the introduction of a polynomial number
of new atoms  in theory  an increase from n atoms to nk atoms for some k     is of
no consequence  in practice  it has a profound impact  the number n of atoms directly
influences the search space that any implementation potentially has to cover  there  a step
from  n to
 k  n
k
k 
 n    n n    n
amounts to an exponential increase in search space size  being able to realise a model set
compactly  without new atoms  therefore attests that a formalism f has a certain basic
kind of efficiency property  in the sense that the f realisation of a model set does not
unnecessarily enlarge the search space of algorithms operating on it 
it might seem that it is a restricting assumption to view formalisms as sets f of knowledge bases kb where f is associated with a two valued semantics  however  this language
representation model is universal in the sense that it is just another way of expressing languages as sets of words over         using an n element vocabulary an    a            an    a binary word w   x  x     xn of length n is encoded as the set mw    ai  an   xi       an  
for example  using the vocabulary a     a    a    a     the binary word     of length   corresponds to the set m       a    a     consequently  a set ln of words of length n can
be represented by a set xln   an of subsets of an   xln    mw   w  ln    with the
above example vocabulary  the word set l                    is represented by the model
set xl      a    a       a    a       a    a      conversely  each sequence  xn  n  of sets with
s
xn   an uniquely determines a language l   n  ln over         for each n  n  we
have ln    wm   m  xn   with wm   x  x     xn where for each i              n   xi     if
ai  m and xi     if ai 
  m   in this paper we use language to refer to object level
languages while formalism refers to meta level languages  such as propositional logic 
argumentation frameworks  abstract dialectical frameworks  and logic programs 
formally  the syntax of adfs is defined via boolean functions  however  we are interested in representations of adfs  so we have to fix a representation of adfs via fixing
   

fiexpressiveness of two valued semantics for adfs

a representation of boolean functions  we choose to use  unrestricted  propositional formulas  as is customary in most of the literature  brewka   woltran        brewka et al  
      polberg et al         polberg        gaggl   strass        linsbichler        strass  
wallner        puhrer        gaggl  rudolph    strass         exceptions to this custom
are the works of brewka et al          who use boolean circuits  and one of ours  strass 
      where we used characteristic models  that is  used a representation that is equivalent
to representing the formulas in disjunctive normal form   for the subclass of bipolar adfs 
yet no uniform representation exists  which is another question we address in this paper 
by propositional formulas over a vocabulary a we mean formulas over the boolean
basis         that is  trees whose leaves  sinks  are atoms from a or the logical constants
true   or false   and internal nodes are either unary    or binary      we also make
occasional use of boolean circuits  where trees above is replaced by directed acyclic
graphs  in particular  we allow unbounded fan in  that is  reusing sub circuits  as usual 
the depth of a formula  circuit  is the length of the longest path from the root to a leaf
 sink   figure   below shows formula and circuit examples of depth   



p



















q

p

q

p

q

figure    representing  p  q    q  p  as a formula tree  left  and a circuit  right  

analysing the expressive power and representation size of boolean circuits is an established sub field of computational complexity  arora   barak         this has led to a
number of language classes whose members can be recognised by boolean circuits satisfying
s
certain restrictions  we will need the class ac    which contains all languages l   n  ln
for which there exist d  k  n such that for each n  n  there exists a boolean circuit cn of
depth at most d and size at most nk where the models of cn exactly express ln    in other
words  every language l  ac  can be recognised by a family of polynomial size boolean
circuits of a fixed maximal depth that is independent of word length 
the paper proceeds as follows  we first define the notion of expressiveness  and succinctness  formally and then introduce the formalisms we will study  after reviewing several
intertranslatability results for these languages  we step wise obtain the results that lead to
the expressiveness hierarchy  while at times also looking at representational efficiency  we
finally show that allowing to linearly expand the vocabulary leads to a collapse of the
hierarchy  the paper concludes with a discussion of possible future work 

   to be more precise  for each n  n  the models of cn are exactly xln   which in turn expresses ln  

   

fistrass

   background
we presume a finite set a of atoms  statements  arguments   the vocabulary  a knowledge
representation formalism interpreted over a is then some set f  a  two valued  semantics
a
for f is a mapping    f     that assigns sets of two valued models to knowledge bases
kb  f   so a is implicit in    strictly speaking  a two valued interpretation is a mapping
from the set of atoms into the two truth values true and false  but for technical ease we
represent two valued interpretations by the sets containing the atoms that are true  below 
we write  f      kb    kb  f   intuitively   f  is the set of interpretation sets that
formalism f can express  with any knowledge base whatsoever  for example  for f   pl
a
propositional logic and    mod the usual model semantics  we have  pl       since
obviously any set of models is realisable in propositional logic   this leads us to compare
different pairs of languages and semantics with respect to the semantics range of models 
our concept of formalism concentrates on semantics and decidedly remains abstract  we
first define the expressiveness relation among formalisms 
definition    let a be a finite vocabulary  f    f  be formalisms that are interpreted over
a
a
a and     f      and     f      be two valued semantics  we define
f   e f  

iff

   f        f   

intuitively  formalism f  under semantics   is at least as expressive as formalism f  under
semantics     because all model sets that f  can express under   are also contained in
those that f  can produce under      if the semantics are clear from the context we will
omit them  this holds in particular for argumentation frameworks and propositional logic 
where we only look at a single semantics   as usual 
 f   e f  iff f  e f  and f   e f   
 f  
 e f  iff f  e f  and f  e f   
the relation e is reflexive and transitive by definition  but not necessarily antisymmetric 
that is  there might different formalisms f     f  that are equally expressive  f  
 e f   
we next introduce the succinctness relation as defined by gogic et al         
definition    let a be a finite vocabulary  let f  and f  be formalisms that are interpreted over a  have size measures kk  and kk    and two valued semantics   and    
respectively  define f   s f   if and only if there is a k  n such that for all kb   f  with
   kb        f        f     there is a kb   f  with    kb         kb    and kkb  k   kkb  kk   
intuitively  f   s f   means that f  under   is at least as succinct as f  under    
put another way  for f   s f   to hold  any knowledge base from f  with an equivalent
counterpart in f  must have an equivalent counterpart that is at most polynomially larger 
note that succinctness talks only about those model sets that both can express  so it is
most meaningful when comparing languages that are equally expressive  that is  whenever
   for a set x   a we can simply define x  
mod  x     x 

w

m x

   

m with m  

v

am

a

v

aa m

a and clearly

fiexpressiveness of two valued semantics for adfs

   f         f     as usual  we define f   s f  iff f  s f  and f   s f    and f  
 s f 
iff f  s f  and f  s f    the relation s is reflexive  but not necessarily antisymmetric
or transitive 
the final general definition is about formalisms polynomially expressing languages 
here  we already make use of the previously introduced bijection between interpretations
and binary words and use the term languages to synonymously refer to both 
s
definition    a formalism f can polynomially express a language l   n  ln under
a

semantics    f     if and only if there is a k  n such that for each positive n  n there
is a knowledge base kbn  f of that formalism such that  kbn     ln and kkbn k  o nk   
we next introduce some specific object level languages that we will use  first of all 
the language parity contains all odd element subsets of the vocabulary  formally  for
an    a            an   with n    we have
parityn    m  an   m  n    m      m     
s
as explained before  then parity   nn n  parityn   it is a textbook result that parity
is expressible by polynomial size propositional formulas  jukna         for example  we can
define parity
 a      a  and for n    set
 
parity
 a            an      parity
 a            an    parity
 an              an    
n
n
n
 parity
 a            an    parity
 an              an   
n
n
 
 
with n   n  and n   n     this construction yields a formula of logarithmic depth and
therefore polynomial size   it is also a textbook result  although not nearly as easy to
see  that parity cannot be expressed by depth bounded polynomial size circuits  that is 
parity 
  ac   jukna        
as another important class  threshold languages are defined for n  k  n with n    and
k  n 
thresholdn k    m  an   k   m   
that is  thresholdn k contains
 all interpretations over n atoms where at least k atoms
are true  the special case k   n  leads to the majority languages 
majorityn   thresholdn d n e
 

that contain all interpretations where at least half of the atoms in the vocabulary are true 
we next introduce the particular knowledge representation languages we study in this
paper  all will make use of a vocabulary a  the results of the paper are all considered
parametric in such a given vocabulary 
    logic programs
for a vocabulary a we define not a    not a   a  a  and accordingly the set of literals over
a as a   a  not a  a normal logic program rule over a is then of the form a  b where
a  a and b  a   the set b is called the body of the rule  we abbreviate b     b  a and
   

fistrass

b     a  a   not a  b   a logic program  lp  p over a is a set of logic program rules
over a  an interpretation m  a satisfies the body b of a rule a  b  p iff b    m and
b   m     m is a supported model for p iff m    a  a   a  b  p  m satisfies b  
for a logic program p we denote the set of its supported models by su p    the intuition
behind this semantics is that the atoms that are true in a model are all and only those that
have some kind of support 
however  this support might be cyclic self support  for instance  the logic program
 a   a   has two supported models   and  a   where the latter is undesired in many
application domains  as an alternative  gelfond and lifschitz        proposed the stable
model semantics  that does not allow self support  a set m  a is a stable model for p iff
m is the  least supported model of p m   where p m is obtained from p by     eliminating
each rule whose body contains a literal not a with a  m   and     deleting all literals of
the form not a from the bodies of the remaining rules  gelfond   lifschitz         we
write st p   for the set of stable models of p   it follows from the definition that st p  
is a  antichain  for all m     m   st p
p  we have m    m    as size measure we define
ka  bk    b      for rules and kp k   rp krk for programs 
as an example  consider the vocabulary a    a  b  c  and over it the logic program
p    a   b    b   a    c   not a    we find su p       c     a  b   and st p       c   
    argumentation frameworks
dung        introduced argumentation frameworks as pairs f    a  r  where a is a set
of  abstract  arguments and r  a  a a relation of attack between the arguments  the
purpose of semantics for argumentation frameworks is to determine sets of arguments  called
extensions  which are acceptable according to various standards  for a given extension
s  a  the arguments in s are considered to be accepted  those that are attacked by
some argument in s are considered to be rejected  and all others are neither  their status is
undecided  we will only be interested in so called stable extensions  sets s of arguments that
do not attack each other and attack all arguments not in the set  for stable extensions  each
argument is either accepted or rejected by definition  thus the semantics is two valued  more
formally  a set s  a of arguments is conflict free iff there are no a  b  s with  a  b   r 
a set s is a stable extension for  a  r  iff it is conflict free and for all a  a   s there is an
argument b  s with  b  a   r  for an af f   we denote the set of its stable extensions by
st f    again  it follows from the definition of a stable extension that the set st f   is always
a  antichain  the size of an argumentation framework f    a  r  is kf k    a     r  
for example  the af f     a  b  c      a  b    b  a    b  c    can be visualised using the
c and has the set of stable extensions st f       a  c     b   
b
directed graph a
    abstract dialectical frameworks
an abstract dialectical framework is a tuple d    a  l  c  where a is a set of statements
 representing positions one can take or not take in a debate   l  a  a is a set of links
 representing dependencies between the positions   c    ca  aa is a collection of total
functions ca    par  a    t  f    one for each statement a  a  the function ca is called
acceptance condition of a and expresses whether a can be accepted  given the acceptance
   

fiexpressiveness of two valued semantics for adfs

status of its parents par  a   in this paper  we represent each ca by a propositional formula
a over par  a   as mentioned earlier  propositional formulas are built using negation  
conjunction  and disjunction   connectives for material implication   logical equivalence
 and exclusive disjunction   are regarded as abbreviations  to specify an acceptance
condition  then  we take ca  m  par  a     t to hold iff m is a model for a   m    a  
brewka and woltran        introduced a useful subclass of adfs  an adf d    a  l  c 
is bipolar iff all links in l are supporting or attacking  or both   a link  b  a   l is supporting in d iff for all m  par  a   we have that ca  m     t implies ca  m   b     t 
symmetrically  a link  b  a   l is attacking in d iff for all m  par  a   we have that
ca  m   b     t implies ca  m     t  if a link  b  a  is both supporting and attacking then
b has no influence on a  the link is redundant  but does not violate bipolarity   we will
sometimes use this circumstance when searching for adfs  there we simply assume that
l   a  a  then links that are actually not needed can be expressed by acceptance conditions that make them redundant 
there are numerous semantics for adfs  we will only be interested in two of them 
 supported  models and stable models  a set m  a is a model of d iff for all a  a
we find that a  m iff ca  m     t  the definition of stable models is inspired by logic
programming and slightly more complicated  brewka et al          define an operator by 
d  x  y      ac x  y    re x  y    for x  y  a  where
ac x  y      a  a   z  a   x  z  a   y  ca  z    t 
re x  y      a  a   z  a   x  z  a   y  ca  z    f  
the intuition behind the operator is as follows  a pair  x  y   represents a partial interpretation of the set of statements where those in x are accepted  true   those in y are rejected
 false   and those in a    x  y   are neither  the operator checks for each statement a
whether all total interpretations that can possibly arise from  x  y   agree on their truth
value for the acceptance condition of a  that is  if a has to be accepted no matter how the
statements in a    x  y   are interpreted  then a  acc x  y    the set rej  x  y   is defined
symmetrically  so the pair  acc x  y    rej  x  y    constitutes a refinement of  x  y   
for m  a  the reduced adf dm    m  lm   c m   is defined by lm   l  m  m and
for each a  m setting m
  m    that is  replacing all b 
  m by false in the
a   a  b    b 
acceptance formula of a  a model m for d is a stable model of d iff the least fixpoint of the
operator dm is given by  m     as usual  su d  and st d  denote the respective model
sets  while adf models can be
p related  adf stable models cannot  the size of an adf
d over a is given by kdk   aa ka k  the size kk of a formula  is the number of its
nodes 
as an example adf d  consider vocabulary a    a  b  c  and the acceptance formulas
a   c  b   c  and c   a  b  while d has a single supported model  su d      a  b  c   
we find st d     since the atoms in the model support each other circularly 
    translations between the formalisms
we will review all known translations between the mentioned formalisms 
   this operator is closely related to the ultimate approximation operators of denecker  marek  and
truszczynski         as we observed earlier  strass        

   

fistrass

      from afs to badfs
brewka and woltran        showed how to translate afs into adfs  for an af fv   a  r  
define the adf associated to f as df    a  r  c  with c    a  aa and a    b a r b
for a  a  clearly  the resulting adf is bipolar  parents are always attacking  brewka
and woltran proved that this translation is faithful for the af stable extension and adf
model semantics  proposition     brewka et al         later proved the same for the af
stable extension and adf stable model semantics  theorem     it is easy to see that the
translation can be computed in polynomial time and induces at most a linear blowup 
      from adfs to pl
brewka and woltran        also showed that adfs under supported model semantics
can be faithfully translated into propositional logic  when acceptance conditions of statements a  a are represented by propositional formulas a   then the supported models
of an adf d over a are given by the classical propositional models of the formula set
d    a  a   a  a  
      from afs to pl
in combination  the previous two translations yield
and
n a polynomial
v
 fifaithfulotranslation
fi
chain from afs into propositional logic   a r    a 
 b a r b fi a  a  
      from adfs to lps
in earlier work  strass         we showed that adfs can be faithfully translated into normal
logic programs  for an adf d    a  l  c   its standard lp is
pd    a   m  not  par  a    m      a  a  ca  m     t 
it follows from lemma      of strass        that this translation preserves the supported
model semantics  the translation is size preserving for the acceptance condition representation of strass        via characteristic models  when representing acceptance conditions
via propositional formulas  this cannot be guaranteed as we will show later  
      from afs to lps
the translation chain from afs to adfs to lps is compact  and faithful for af stable
semantics and lp stable semantics  osorio  zepeda  nieves    cortes         and af stable
semantics and lp supported semantics  strass         it is size preserving since the single
rule for each atom contains all attackers once  p a r     a   not b    b  a   r    a  a  
   already for complexity reasons  we cannot expect that this translation is also faithful for the stable
semantics  and indeed  the adf d     a      a  a      a   a  a   has a stable model  a  while its
standard logic program p  d     a   a    a   not a   has no stable model  however  it holds that
st p  d    st d   denecker et al         strass        

   

fiexpressiveness of two valued semantics for adfs

      from lps to pl
it is well known that logic programs under supported model semantics can be translated to
propositional logic  clark         a logic program p becomes the propositional theory p  


 
 
 

p    a  a   a  a  where a  
b
b for a  a 
abp

bb  

bb 

for the stable model semantics  additional formulas have to be added  but the extended
translation works all the same  lin   zhao        
      from lps to adfs
the clark completion of a normal logic program directly yields an equivalent adf over
the same signature  brewka   woltran         clearly the translation is computable in
polynomial time and the blowup  with respect to the original logic program  is at most
linear  the resulting translation is faithful for the supported model semantics  which follows
from lemma      of strass        
    representing bipolar boolean functions
while bipolarity has hitherto predominantly been defined and used in the context of
adfs  brewka   woltran         it is easy to define the concept for boolean functions in
general  let a be a set of atoms and f    a   t  f   be a boolean function  an atom a  a
is supporting iff for all m  a  f  m     t implies f  m   a     t  we then write a  sup f   
an atom a  a is attacking iff for all m  a  f  m     f implies f  m   a     f   we then
write a  att f    a boolean function f    a   t  f   is semantically bipolar iff each a  a is
supporting or attacking or both  throughout the paper  we will sometimes take a boolean
function to be given by an interpretation set and then say that the set is bipolar 
we will now define bipolar propositional formulas for representing bipolar adfs  this
is important not only for our study  but also since  for three valued semantics   bipolarity is
the key to badfs low complexity in comparison to general adfs  strass   wallner        
up to now  we usually assumed that to specify a bipolar adf  in addition to statements 
links and acceptance conditions  the user specifies for each link whether it is supporting
or attacking  strass   wallner         here we introduce an arguably simpler way  where
support and attack is represented in the syntax of the propositional formula encoding the
acceptance function 
formally  the polarity of an atom a  a in a formula is determined by the number of
negations on the path from the root of the formula tree to the atom  the polarity is positive
if the number is even and negative if the number is odd 
definition    a propositional formula  over a is syntactically bipolar if and only if no
atom a  a occurs both positively and negatively in  
recall that we only use formulas over the basis        and thus there are no hidden
negations  e g  from material implication  for formulas in negation normal form  that is 
where negation is only applied to atomic formulas   the polarities of the atoms can be read
off the formula directly 
   

fistrass

we will now address the question how to represent bipolar boolean functions  clearly all
boolean functions can be represented by propositional formulas  we modify this construction
later and thus reproduce it here  for a boolean function f    a   t  f    its associated
formula is
 
 
 
a
   
m with m  
a
f  
am

m a f  m   t

aa m

that is  each m has exactly one model m   and f enumerates those models 
so in particular  all bipolar boolean functions can be represented by propositional formulas as well  however  this only guarantees us the existence of such representations but
gives us no way to actually obtain them  our first fundamental result shows how we can
construct a syntactically bipolar propositional formula from a given semantically bipolar
boolean function  the converse is straightforward  and thus the two notions of bipolarity
are closely related  for a formula   its associated boolean function f returns t if and only
if it gets as input a model of  
theorem    let a be a set of atoms 
   for each syntactically bipolar formula  over a  its boolean function f is semantically
bipolar 
   for each semantically bipolar boolean function f    a   t  f    a syntactically bipolar
formula f with ff   f is given by
f  

 

m

with m  

m a 
f  m   t

 
am 
aatt f
 
 

a

 

a

   

aa m 
asup f
 
 

proof 
   obvious  every atom occurring only positively is supporting  every atom occurring only negatively is attacking 
   let f    a   t  f   be semantically bipolar  note first that by      for any m  a
we have    m  m   it is easy to see that f is syntactically bipolar  since f
is semantically bipolar  each a  a is      attacking and not supporting  then it
occurs only negatively in f   or     supporting and not attacking  then it occurs only
positively in f   or     supporting and attacking  then it does not occur in f   it
remains to show that ff   f   we show    f  f  
   f  f   let v   a   t  f   with v f     t  then there is an m  a such that
f  m     t and v m     t   clearly v   vm    by    m  m we get v m     t
and thus v f     t 
   f  f   for each model v of f   there is an m  a with f  m     t such that
v m     t  to show that each model of f is a model of f   we show that for
all m  a with f  m     t  each model v of m is a model of f   let  a    n 
then each m contains exactly n literals  for the corresponding m there is
a k  n with    k  n such that m contains exactly n  k literals  for two
   

fiexpressiveness of two valued semantics for adfs

interpretations v    a   t  f   and v    a   t  f    define the difference between
them as  v    v       a  a   v   a     v   a     note that for  a    n we always
have   v    v      n   we will use induction on k to show the following  for each
m  a with f  m     t  each v   a   t  f   with v m     t and   v  vm      k
we find that v f     t  this covers all models v of f  since   v  vm      a  
and thus establishes the claim 
k       v  vm      implies v   vm whence v f     vm  f     vm  m     t by
definition of m and f  
k
k      let m  a with f  m     t  and v   a   t  f   with v m     t and
  v  vm      k      since k          there is some a   v  vm    that is  an
a  a with v a     vm  a  
 a  a is supporting and not attacking  then necessarily v a    t   if v a    f  
then vm  a     v a  implies vm  a    t  that is  a  m whence  m      a
and v m     f   contradiction   define the interpretation w   a   t  f  
such that w a    f and w c    v c  for c  a    a   clearly  v  w     a 
and   w  vm      k  hence the induction hypothesis applies to w and
w f     t  now w a    f   v a    t and w f     t  since a is supporting  also v f     t 
 b  a is attacking and not supporting  symmetric to the opposite case above 
 c  a is both supporting and attacking  define interpretation w   a   t  f  
such that w a    vm  a  and w c    v c  for c  a    a   it follows
that   w  vm      k  whence the induction hypothesis applies to w and
w f     t  since a is both supporting and attacking  thus redundant  
we get that v f     w f     t 

this result paves the way for analysing the succinctness of bipolar adfs  since now we
have a quite natural way of representing them 

   relative expressiveness
we now analyse and compare the relative expressiveness of argumentation frameworks
 afs    bipolar  abstract dialectical frameworks   b adfs   normal logic programs  lps 
and propositional logic  pl   we first look at the different families of semantics  supported
and stable models  in isolation and afterwards combine the results for the two semantics 
for the formalisms f   adf  lp  that have both supported and stable semantics  we will
indicate the semantics  via a superscript as in definition    for afs we only consider the
stable semantics  as this is  to date  the only semantics for afs where all interpretations are
guaranteed to map all arguments to either true  accepted  or false  rejected  i e  attacked by
an accepted argument   for propositional logic pl we consider the usual model semantics 
with the syntactic translations we reviewed in the previous section  we currently have
the following expressiveness relationships  for the supported semantics 
af e badfsu e adfsu 
 e lpsu e pl
and for the stable semantics 
   

fistrass

af e lpst  e pl and af e badfst e adfst  e pl
note that lpst  e pl and adfst  e pl hold since sets of stable models have an antichain
property  in contrast to model sets of propositional logic 
for the succinctness relation  we have
af s badfsu s adfsu s pl and lpsu s adfsu
    supported semantics
as depicted above  we know that expressiveness from afs to propositional logic does not
decrease  however  it is not yet clear if any of the relationships is strict  in what follows
we will show that two of them are strict  working our way top down from most to least
expressive 
      adf vs  pl
we first show that adfs can realise any set of models by showing how a given propositional
formula can be used to construct an equivalent adf of linear size  
theorem    pl e adfsu and pl s adfsu  
proof  let  be a propositional formula over vocabulary a  define the adf d over a by
setting  for all a  a 
a   a      a      a   
thus ka k  o kk   whence kd k  o  a   kk   it remains tovshow su d     mod    
recall that for any adf d over a  su d    mod  d   for d   aa  a  a    applying
the definition of a in d yields
v
d   aa  a   a    
now for any a  a  the formula  a   a    vis equivalent to    the proof is by case
distinction on a   thus d is equivalent to aa   that is  to   and it follows that
su d     mod  d     mod    

for example  consider the vocabulary a    a  b  and the propositional formula    a  b 
the canonical construction above yields adf d with acceptance formulas a   a   a  b 
and b   b   a  b   now we have 
a   a   a  b     a   a  b      a  b   a   a   a  b   a  b
intuitively  a   a  b expresses that a cannot be false  and is true if b is true  by a
symmetrical argument  the acceptance formula of b is equivalent to b  a  it is readily
checked that su d       a  b   as desired  since we know from section       that the
converse translation is also possible  adfsu s pl   we get the following 
corollary    pl 
 s adfsu
   if we consider the vocabulary a to be part of the input  the size increase is quadratic 

   

fiexpressiveness of two valued semantics for adfs

when the acceptance conditions are written as propositional formulas  the construction to
realise x   a in the proof of theorem   defines a space efficient equivalent of
 
 
m
a  
m 
m x am

m a m x a
 
m
 

as acceptance formula of a  where m is as in footnote   
      adf vs  lp
since adfs under supported semantics can be faithfully translated into logic programs 
which can be likewise further translated to propositional logic  we have the following 
corollary    adfsu 
 e lpsu 
 e pl
however  this does not extend to the succinctness relation  as logic programs stipulate a
particular syntactic form that is essentially a fixed depth circuit  more specifically  it is
easy to see that any language that is polynomially expressible by normal logic programs
under supported semantics is in ac    for the stable semantics of so called canonical logic
programs  this has recently been shown by shen and zhao         proposition       the
case we are interested in  supported semantics  works similarly  but we still present the
proof for completeness  the main technical result towards proving that is a lemma showing
how to turn a logic program into an equivalent boolean circuit of a fixed depth 
lemma    for every normal logic program p   there exists a circuit cp over the basis
       such that 
   cp accepts all and only the supported models of p  
   the size of cp is linear the size of p  
   cp has depth   
proof  let a    a            an   be the vocabulary of p   and its clark completion be p  
 ai  i   ai  a  where
v the i are dnfs over literals from a  clearly the circuit for p
must compute cp   ai a  ai  i   where ai  i can be replaced by  ai i   ai i  
with i a cnf over literals from a  the construction can be depicted as follows  where
the inner layers are shown for one i only  and dotted lines represent potential edges 

i  ai

   

i


   



a 

a 

   







ai  i
   



ai

ai
   

   

   



an

an

fistrass

now     follows since su p     mod  p   and cp accepts all and only the models of p  
for      if p contains m    p   rules  then m  kp k and the total number of inner gates is
bounded by n  m       n    kp k           is clear 

while the statement of lemma   is actually much stronger and gives a constant upper
bound of the resulting circuit depth for arbitrarily sized logic programs  it readily follows
that the set of polynomially logic program expressible languages is a subset of the languages
expressible by alternating boolean circuits with unbounded fan in and constant depth 
proposition    if l is polynomially expressible by normal logic programs under supported
semantics  then l  ac   
it follows immediately that normal logic programs cannot polynomially express the
language parity   this is the supported semantics counterpart of theorem     in  shen
  zhao        
corollary    parity has no polynomial size normal logic program representation 
proof  by proposition   and parity 
  ac   jukna        



it follows that propositional logic is strictly more succinct than normal logic programs
under supported semantics 
corollary    pl  s lpsu and thus lpsu  s pl 
from our considerations since theorem    it follows that if  has a small conjunctive
normal form  a conjunction of clauses  and disjunctive normal form  disjunction of monomials  representation  then there is also a small normal logic program representation for
mod    
      adf vs  badf
it is quite obvious that the canonical adf constructed in theorem   is not bipolar  since
a as well as every atom mentioned by  occurs both positively and negatively in a   this
raises the question whether the construction can be adapted to bipolar adfs 
it turns out that the subclass of bipolar adfs is strictly less expressive  towards the
proof of this result we start out with a new concept  that of the conjugate of a model set
with respect to an atom  this concept will be used to characterise adf realisability and
precisely captures the if and only if part of adfs supported model semantics  from the
translation of an adf d into propositional logic v
 cf  section        we can see that the result
is basically a conjunction of equivalences  d   aa  a  a    while the conjunction part
will be captured by set intersection  the conjugate will capture the equivalence part 
definition    let a be a vocabulary  x   a and a  a  the a conjugate of x is the set
hai x     m  a   m  x  a  m     m  a   m 
  x  a 
  m 
   logic programs under supported models are universally expressive  so they can express parity  just not
in polynomial size 

   

fiexpressiveness of two valued semantics for adfs

alternatively  we could write hai x     m  a   m  x  a  m    intuitively  hai x 
contains all interpretations m where containment of a in m coincides exactly with containment of m in x  formulated in terms of propositional formulas  if x is the model set of
formula  over a  then hai x  is the model set of formula a    note that the vocabulary
a is implicit in the conjugate function 
example    consider the vocabulary a     a  b   the functions hai   and hbi   operate
a
on the set      of interpretation sets over a  and are shown in table   


a  b
a  b
a  b
ab
a
b
a
b
a b
ab
ab
a  b
ab
ba
 

hai  
a
a  b
a  b
a  b
ab
 
ab

a b
b
b
ba
a  b
ab
ab
a

hbi  
b
a  b
a  b
a  b
ba
ab
 
a b

a
a
ab
a  b
ab
ab
b

table    conjugation functions for a     a  b   interpretation sets are represented using
formulas over a    and connective   denotes exclusive disjunction xor 
for two valued adf semantics  this conjugation function plays an essential semantical
role  since it provides the bridge between models of the acceptance functions and models of
the adf  but it is also interesting in itself  we first show some properties of the conjugation
function associated to an atom  since some of them will be used in the proof later on  first
of all  it is an involution  that is  its own inverse  and thus in particular a bijection   next 
it is compatible with the complement operation  logical negation on the formula level  
finally  it also preserves the evenness of the cardinality of the input set 
proposition    let a be a vocabulary  x   a and a  a 
   hai hai x     x 

 involution 

    a   hai x    hai  a   x  


 compatible with negation 

    x  is even iff  hai x   is even 

 preserves evenness 

proof  let  a    n  x   a and a  a 
   

fistrass

   let m  a  we have
m  hai hai x   iff m  hai x   a  m
iff  m  x  a  m    a  m
iff m  x   a  m  a  m  
iff m  x
   denote
s     m  a   m  x  a  m  
s      m  a   m  x  a 
  m 
s 
   m  a   m 
  x  a  m  
 
s 
  x  a 
  m 
 
     m  a   m 
and observe that
 a   s    s     s 
    s 
 
 
x   s    s  
hai x    s    s 
 
 
where   denotes disjoint union  now

 a   hai x     a   s    s 
 
 
  s     s 
 
   m  a   m  x  a 
  m      m  a   m 
  x  a  m  
fi
fi

  
 
a
  m afim 
      x  a 
  m   m  a fi m   a   x  a  m

  hai  a   x
   we show that  x     hai x   is even  firstly 
s     s 
  m      a  a 
 
     m  a   a 
fi
fi fi
fi
n    thus
fi
whence fis   fi   fis 
 
    
fi
fi
fi
fi
fi
 x     hai x      s      fis   fi    s      fis 
 
 
fi
fi fi
fi
fi
      s      fis   fi   fis 
 
 
      s       n 
is even 



for our current purpose of characterising the expressiveness of bipolar adfs  we now
use the concept of conjugation to make adf realisability for the model semantics slightly
more accessible  we show that each adf realisation of a model set x over an n element
vocabulary a can equivalently be characterised by an n tuple  y            yn   of supersets of x
whose intersection is exactly x  the crux of the proof of this result is how the acceptance
conditions of the realising adf and the yi are related through the conjugation function 
   

fiexpressiveness of two valued semantics for adfs

proposition     let a    a            an   be a vocabulary and x   a be a set of interpretations  denote an adf over a by the sequence              n   of its acceptance formulas  for
each i              n   formula i over a is the acceptance formula of ai    and further define
cx     mod               mod  n      su             n     x 
fi
 
 
 
n
fi
 
fi
yx    y            yn   fi y            yn   a  
yi   x
fi
i  

the sets cx and yx are in one to one correspondence  in particular  cx      yx   
proof  we provide a bijection between cx and yx   consider the function
 a n
 a n
with  b            bn      ha  i b              han i bn   
   
f     
which is an involution by proposition    using the results of section        we get that
 mod               mod  n     cx iff su             n     x


 
iff mod 
 ai  i     x
 in

iff

 

mod  ai  i     x

 in

iff

 

hai i mod  i      x

 in

iff  ha  i mod                 han i mod  n      yx
iff f  mod               mod  n     yx
thus f  cx     yx whence f  yx     f  f  cx      cx and f  cx   cx  yx is bijective 



this one to one correspondence is important since we will later analyse the precise
number of realisations of given model sets  furthermore  this result shows the role of the
conjugation function for characterising two valued model realisability for general adfs  we
can now adapt this characterisation result to the case of bipolar adfs  more precisely  we
give several necessary and sufficient conditions when a given model set is bipolarly realisable 
with this characterisation in hand  we can later show that a specific interpretation set fails
the necessary conditions and thus cannot be the model set of any badf 
 below  fiwe denote
 
the set of all supersets of a set x of interpretation sets over a by x    y   a fi x  y  
proposition     let a    a            an   be a vocabulary and x   a be a set of interpretations  the following are equivalent 
   x is bipolarly realisable 
   there exist y            yn  x  such that 
t
 a    ni   yi     x  and
   

fistrass

 b  for each    i  n  the set hai i yi   is bipolar 
   there exist y            yn  x  such that
t
 a    ni   yi     x  and
 b  for each    i  j  n  at least one of  
 for all m  a   m  yi  ai  m     m   aj    yi  ai  m   aj     or
 for all n  a   n  yi   ai  n     n   aj    yi   ai  n   aj    
proof            if x is bipolarly realisable  then there exists a bipolar adf d    a  l  c 
with su d    x  in particular  there exist bipolar boolean functions c            cn such
that m  x if and only if for all    i  n we find ai  m iff ci  m     t  for each
   i  n define yt
i   hai i ci    by assumption  hai i yi     hai i hai i ci      ci is bipolar  furthermore   ni   yi     x follows from the above 
          let i              n  and assume that hai i yi   is bipolar  this means that for all
aj  a  we find that aj is supporting or attacking  or both  in hai i yi    now aj is
supporting in haj i yi   iff for all m  a we find 
m  hai i yi    m   aj    hai i yi     that is 
 m  yi  ai  m     m   aj    yi  ai  m   aj   
similarly  aj is attacking in hai i yi   iff for all n  a we find 
n
  hai i yi    n   aj   
  hai i yi     that is 
 n  yi  ai  n     n   aj    yi  ai  n   aj   
thus for all aj  a  we find that at least one of the following 
 for all m  a   m  yi  ai  m     m   aj    yi  ai  m   aj     or
 for all n  a   n  yi   ai  n     n   aj    yi   ai  n   aj    
          we construct an adf d    a  l  c  as follows  for each i              n  we define ci   hai i yi   and finally set l   a  a  each ci is bipolar by the equivalences
established in the previous proof item  and su d  t
  x follows from the fact that
hai i ci     hai i hai i yi      yi and the presumption   ni   yi     x 


we now apply this characterisation result to show that there is an interpretation set
over three atoms that cannot be realised by bipolar adfs under the model semantics  this
is the smallest example in terms of the number of atoms  actually  one of the two smallest
examples   all interpretation sets over a binary vocabulary are bipolarly realisable 
proposition     for vocabulary a               there is no bipolar adf that realises
x   even                                 
   

fiexpressiveness of two valued semantics for adfs

proof  assume to the contrary that x is bipolarly realisable  then there exist y    y    y   x 
a
from proposition     there are       x                  candidates for each yi   that is 
every yi must be of the form x   z with
z                                   a   x
for eleven out of those sixteen model set candidates for each yi   the set hii yi   is not
bipolar  to show that a model set hii yi   is not bipolar  we provide a statement j  a 
that is neither supporting nor attacking  we say that such a statement is dependent 
   for y    x  we get h i y                                     which is not bipolar since
statement   is dependent  if   was supporting  then      h i y    would imply
        h i y     if   was attacking  then  
  h i y    would imply     
  h i y     for
the remaining cases  the justifications for a specific statement being dependent are
equally easy to read off the model set  for brevity we just indicate the statements 
   for y    x         we get h i y                                           which is not
bipolar since statement   is dependent 
   for y    x         we get h i y                               which is not bipolar since
statement   is dependent 
   the case y    x        is symmetric to the previous one  we get the model set
h i y                               which is not bipolar since statement   is dependent 
   for y    x               we get h i y                                                 which
is not bipolar since statement   is dependent 
   for y    x               we get h i y                                     which is not
bipolar since statement   is dependent 
   the case y    x              is again symmetric to the previous one 
   for y    x               we get h i y                         which is not bipolar since
statement   is dependent 
   for y    x                     we get h i y                                                      
which is not bipolar since statement   is dependent 
    for y    x                     we get h i y                                           which
is not bipolar since statement   is dependent 
    y    x                    is again symmetric to the previous case 
there remains a set c of five candidates  due to symmetry they are the same for each i  
c    x                      
x                            
x                            
x                            
x                                 
   

fistrass

basically  the candidates are those where at least three out of the four interpretations in
d                                 are contained in addition to those already in x  now clearly
by the assumption that the yi realise x we have y
    y    y  
 c  but then there is some
t 
m  d with m  yi for all    i    and thus m 
i   yi   x  however  d  x    
contradiction  thus such yi do not exist and x is not bipolarly realisable 

as the only other interpretation set over a  that is not bipolarly realisable  we found
the complement of even  above  the parity language over three atoms 
proposition     for vocabulary a               there is no bipolar adf that realises
parity                                  
together with the straightforward statement of fact that even  can be realised by a
non bipolar adf  proposition    leads to the next result 
theorem     badfsu  e adfsu
proof  model set even  from proposition    is realisable under model semantics by adf
deven  with acceptance conditions
            

            

           

however  there is no bipolar adf realising even    as is witnessed by proposition    



another consequence of our characterisation of two valued model realisability in proposition    is that we can get a precise number of distinct realisations of a given model set 
this is significant in that it further illustrates the rather intricate difficulty underlying bipolar non realisability  we cannot necessarily use the model set even  above to determine a
single reason for bipolar non realisability  that is  a single link  b  a  that is neither supporting nor attacking in all realisations  rather  the culprit s  might be different in each
realisation  and to show bipolar non realisability  we have to prove that for all realisations 
there necessarily exists some reason for non bipolarity  and the number of different adf
realisations of a given model set x can be considerable  
a
proposition
fi a
fi     let a be a vocabulary with  a    n  and x    an interpretation set
with fi    x fi   m  the number of distinct adfs d with su d    x is

r n  m      n    m
proof  according to proposition
   t each realisation
by a tufi of
fi x can be characterised
n
n such tuples 
ple  y            yn    x  with x   ni   yi   since fix  fi    m   there are   m  t
however ttowards r n  m   this wrongly counts all tuples  y            yn   with   ni   yi     x 
that is     ni   yi     x       at least once   it remains to subtract
any i              n  
n them  for t
we can overestimate the number of tuples  y            yn    x  such that    ni   yi     x   i
by the expression
 
n
m
q n  m  i   
 mi
   
i
   when counting adfs over a  we do not take into account different link relations  but take l   a  a
and only count different acceptance functions  through which redundant links can be modelled 

   

fiexpressiveness of two valued semantics for adfs


this is seen as follows  let i   a   x be a fixed i element set   intuitively  the interpretation set x  i contains
i interpretations too many  
there are mi such sets 
fi exactly
fi

n
for each such i  we have fii fi    mi   thus there are  mi possible ways to choose n
elements  the y            yn   out of i    no matter how the yj are chosen  their intersection
contains i and thus has at least i elements too many  however  all sets that have at least
i     elements too many are counted twice and have to be subtracted  if we subtract
q n  m  i       then we have not counted the sets that have at least i     elements too many
and have to add q n  m  i      
by the inclusion exclusion principle  the number
n etc  hence
t
of tuples  y            yn    x  with ni   yi   x is given by
r n  m    q n  m      q n  m       q n  m             q n  m  m 
m
x
 
   i q n  m  i 
i  
m
x

 
n
m
 
   
 mi
i
i  


m
x m
 
  n  mi    i
i
i

 by     above 
 reordering factors 

i  
n

        m

 binomial theorem  

so the main contributing factor is the number m of interpretations that are excluded from
the desired model set x  for proposition     for instance  there are                     
adfs with the model set even    according to theorem     none of them is bipolar  obvin
ously  the maximal number of realisations is achieved by x    whence r n   n       n       
on the other hand  the model set x    a has exactly one realisation  r n          note
that the number of  syntactically distinct  realisations for the other universally expressive
formalisms  logic programs and propositional logic  is unbounded in general since we can
add an arbitrary number of tautologies 
we finally show a reduction of the problem of bipolar realisability to propositional
satisfiability  this approaches the problem from another angle  a possible implementation
deciding bipolar realisability using a sat solver   and provides the proof of theorem   by
strass      b   which was not contained in that work 
for a given vocabulary a and set x   a be a set of interpretations  it is our aim
to construct a propositional formula x that is satisfiable if and only if x is bipolarly
realisable  the propositional signature we use is the following  for each a  a and m  a 
there is a propositional variable pm
a that expresses whether ca  m     t  this allows to
encode all possible acceptance conditions for the statements in a  to enforce bipolarity  we
use additional variables to model supporting and attacking links  for all a  b  a  there is
a b
a variable pa b
sup saying that a supports b  and a variable patt saying that a attacks b  so the
vocabulary of x is given by
fi
n
o
a b fi
a b
p   pm
 
p
 
p
m

a 
a

a 
b

a
fi
a
sup att
to guarantee the desired set of models  we constrain the acceptance conditions as dictated
by x  for any desired set m and statement a  the containment of a in m must correspond
   

fistrass

exactly to whether ca  m     t  this is encoded in 
x   conversely  for any undesired set
 
m and statement a  there must not be any such correspondence  which 
x expresses  to
enforce bipolarity  we state that each link must be supporting or attacking  to model the
meaning of support and attack  we encode all ground instances of their definitions 
definition    let a be a vocabulary and x   a be a set of interpretations  define the
following propositional formulas 

 
badf
  
x
x  x  bipolar


 
 
 


pm

pm
a
a 
x  
m x

am

aa m




 

 

x  

 


m a m x
 

bipolar  

  

 

pm
a 

am


pm
a

aa m



a b
a b
a b
pa b
sup  patt  sup  att



a ba

a b
sup

  pa b
sup 

a b
att

pa b
att

  



 a  b  a 



 a  b  a 

m  a 

pm
b  pb

m a

 



  

m  a 

pb

 pm
b

m a

the corresponding result shows the reduction to be correct 
theorem     let a be a vocabulary and x   a be a set of interpretations  x is bipolarly
realisable if and only if badf
is satisfiable 
x
proof  if  let i  p be a model for x   for each a  a  we define an acceptance condition as follows  for m  a  set ca  m     t iff pm
a  i  it is easy to see that bipolar
guarantees that these acceptance conditions are all bipolar  the adf is now given
su    a  a  a  c   it remains to show that any m  a is a model of d su if and
by dx
x
only if m  x 
su   consider any a  a 
if  let m  x  we have to show that m is a model of dx
m
   a  m   since i is a model of 
x   we have pa  i and thus by definition
ca  m     t 
m   i and thus by definition
   a  a   m   since i is a model of 
x   we have pa 
ca  m     f  
 
only if  let m 
  x  since i is a model of 
x   there is an a  m such that
ca  m     f or an a 
  m such that ca  m     t  in any case  m is not a model of
su  
dx

only if  let d be a bipolar adf with su d    x  we use d to define a model i for x  
first  for m  a and a  a  set pm
a  i iff ca  m     t  since d is bipolar  each link
is supporting or attacking and for all a  b  a we can find a valuation for pa b
sup and
pa b
 
it
remains
to
show
that
i
is
a
model
for

 
x
att
   

fiexpressiveness of two valued semantics for adfs

   i is a model for 
x   since d realises x  each m  x is a model of d and thus
for all a  a we have ca  m     t iff a  m  
 
   i is a model for 
  x is not a model
x   since d realises x  each m  a with m 
of d  thus for each such m   there is an a  a witnessing that m is not a model
of d      a  m and ca  m     f   or     a 
  m and ca  m     t 

   i is a model for bipolar   straightforward since d is bipolar by assumption 



remarkably  the decision procedure does not only give an answer  but in the case of a
positive answer we can read off the badf realisation from the satisfying evaluation of the
constructed formula  we illustrate the construction with an example seen earlier 
example    consider a              and the model set even                                 
the construction of theorem    yields these formulas 
   





even    p   p   p  
     

 p 

     

 p 

p 
p 

     

     

p 

 

even     p 
     



 p 

     



 p 

 p 

     

 p 

     

 p 

 p 

     

   

 p    

   

 p 

   

   

 p 

 p    

   

 p 

   

 p    

       

 p 

   

   

       

 p 

       

 p 

 

the remaining formulas about bipolarity are independent of even    we do not show them
here  we have implemented the translation of the proof of theorem    and used the solver
clasp  gebser  kaminski  kaufmann  ostrowski  schaub    schneider        to verify that
even  is unsatisfiable 
      badf vs  lp
earlier  we used the language parity to show that propositional logic is  and thus by
pl 
 s adfsu general adfs are  exponentially more succinct than normal logic programs
 under supported models   however  for bipolar adfs  by proposition    there is no badf
d over a              with model set su d    parity                                   that is 
badfs cannot even express parity  fortunately  the majority language does the trick
in this case 
theorem     badfsu  s lpsu
proof  we show that the language majority can be polynomially expressed by badfsu  
but not by lpsu   the latter fact follows from majority 
  ac   jukna        and proposition    we show the first part by constructing a series of badfs dn over an    a            an  
 n  n  n     such that su dn     majorityn   we use results of  friedman        boppana         who show that for all positive n  n and k  n  the language thresholdn k
has negation free propositional formulas threshold
of polynomial size s  where we use the
n k

 
    
bound of boppana  s  o k n log n   define d  by a       and for n    set k   n 
and for    i  n 
ai   ai  threshold
 a            ai    ai             an  
n  k
   

fistrass

intuitively  the formula ai checks whether the remaining variables could achieve a majority
without ai   if so  then ai can be set arbitrarily  otherwise  ai must be set to true  clearly
the boolean function computed by ai is bipolar  since ai is supporting and all other parents
are attacking  for the size of dn   we observe that


kdn k  o n threshold 
n  k

whence the overall size is polynomial  it remains to show that su dn     majorityn  
  let m  majorityn   we have to show m  su dn    that is  a  m iff m    a
for all a  an   for a  m   it is immediate that m    a   so let aj 
  m for some
j            n   we have to show m     aj   since m  majorityn   we have  m     m
for k   n   m  n    and m  thresholdn  k   that is  we have
m    threshold
 a            aj    aj             an  
n  k
together with m     aj   it follows that m     aj  
 
  let m 
  majorityn   then  m     m for    m   n    k  in particular  there is
some aj  an   m   now m   k implies that there is no n  thresholdn  k with
 a            aj    aj             an   whence it follows
 n     m    m    thus m     threshold
n  k
that m    aj   together with m     aj we conclude that m 
  su dn   

since every badf is an adf of the same size  we get 
corollary     adfsu  s lpsu
in combination with the translation from logic programs to adfs  implying the relation
lpsu s adfsu    this means that also adfs are strictly more succinct than logic programs 
corollary     lpsu  s adfsu
      badf vs  af
it is comparably easy to show that badf models are strictly more expressive than afs 
since sets of supported models of bipolar adfs do not have the antichain property 
proposition     af  e badfsu
proof  consider vocabulary a    a  and badf d    a    a  a      a    with a   a  it is
straightforward to check that its model set is su d        a    since model sets of afs
under stable extension semantics satisfy the antichain property  there is no equivalent af
over a 

this yields the following overall relationships 
af  e badfsu  e adfsu 
 e lpsu 
 e pl
for a concise overview of relative succinctness  we present the results and open problems
at a glance in table   below  
   we remark that the three open problems in table   are really only two  it is easy to show that adfs
and propositional logic behave equivalently in relation to bipolar adfs  since they are equally expressive
and equally succinct  that is  it holds that adfsu s badfsu if and only if pl s badfsu  

   

fiexpressiveness of two valued semantics for adfs

su

badf
adfsu
lpsu
pl

badfsu
 
 
 
 

adfsu
s
 
 s

 s

lpsu
 s
 s
 
 s

pl
s

 s
 s
 

table    relative succinctness results for  bipolar  adfs under the model semantics  normal
logic programs under the supported semantics  and classical propositional logic  an entry 
in row f  and column f  means f   f   
    stable semantics
as before  we recall the current state of knowledge 
af e badfst e adfst  e pl and af e lpst  e pl
we first show that badfs are strictly more expressive than afs 
proposition     af  e badfst
proof  consider the set x      a  b     a  c     b  c   of desired models  dunne et al        
proved that x  is not realisable with stable af semantics  however  the model set x  is
realisable with badf dx  under stable semantics 
a   b  c 

b   a  c 

c   a  b

let us exemplarily show that m    a  b  is a stable model  the other cases are completely
symmetric   the reduct dm is characterised by the two acceptance formulas a   b  
and b   a    we then easily find that dm         m      dm  m    

intuitively  the argument for af non realisability of x  is as follows  since a and b occur
in an extension together  there can be no attack between them  the same holds for the
pairs a  c and b  c  but then the set  a  b  c  is conflict free and thus there must be a stable
extension containing all three arguments  which is not allowed by x    the reason is afs
restriction to individual attack  as set attack  also called joint or collective attack  suffices
to realise x  as seen above 
the construction that we used in the proof above to realize x  comes from the work
of eiter  fink  puhrer  tompits  and woltran        in logic programming  and can be
generalised to realise any non empty model set satisfying the antichain property 
st    a  l  c  where c for a  a
definition    let x   a   define the following badf dx
a
is given by


 
 

a  
b
m x am

ba m

and thus l     b  a    m  x  a  m  b  a   m   
   

fistrass

the next result shows that the construction indeed works 
st     x 
theorem     let x with   
  x   a be a  antichain  we find that st dx

proof  let m  a 
st    st d st    we use a case distinction 
  let m 
  x  we show that m 
  su dx
x

   there is an n  x with m   n   then there is an a  n   m   consider its
acceptance
v formula a   since a  n and n  x  the formula a has a disjunct
a n   ba n b  now m  n implies a   n  a   m and m is a model for
st   
a n   thus m is a model for a although a 
  m   hence m 
  su dx
   for all n  x  we have m   n   then x     implies m      so let a  m  
for each
v n  x with a  n   the acceptance formula a contains a disjunct
a n   ba n b  by assumption  for each n  x there is a bn  m   n  
clearly bn  a   n and bn is evaluated to true by m   hence for each n  x
with a  n   the disjunct a n is evaluated to false by m   thus a is false under
st   
m and m 
  su dx
st    that is  for all a  a  we find a  m
  let m  x  we first show that m  su dx
iff m is a model for a  
st
   let a  m   by
v construction  we have that a in dx contains a disjunct of the
form a m   ba m b  according to the interpretation m   all such b  a   m
are false and thus a m is true whence a is true 

   let a  a   m and consider its acceptance formula a   assume to the contrary
that m is a model for v
a   then there is some n  x with a  n such that m
is a model for a n   ba n b  that is  a   n  a   m   hence m  n   and 
since a  n   m   even m   n   whence x is not a  antichain  contradiction 
thus m is no model for a  
st with respect to m   there  m contains the
now consider the reduct dm of dx
a
m
disjunct a m   a m  b    b 
  m   where all b  a   m have been replaced by false 
m             and m is equivalent to true  thus each a  m is true
whence a m
a
st   
in the least fixpoint of dm and thus m  st dx


the restriction to non empty model sets is immaterial for relative expressiveness  since we
can use the construction of theorem   and the fact that st d   su d  for any adf d to
realize the empty model set  as the stable model semantics for adfs and logic programs
both have the antichain property  we get 
corollary     adfst e badfst and lpst e badfst
this leads to the following overall relationships 
af  e badfst 
 e adfst 
 e lpst  e pl
we remark that the antichain property provides a characterisation of realisability with the
stable semantics  that is  a model set is stable realisable iff it is a  antichain 
   

fiexpressiveness of two valued semantics for adfs

    supported vs  stable semantics
now we put the supported and stable pictures together  from the proof of theorem    
st of an antichain x  the supported
we can read off that for the canonical realisation dx
st     st d st     x  with this observation  also
and stable semantics coincide  that is  su dx
x
bipolar adfs under the supported semantics can realize any antichain  and we have this 
proposition     badfst e badfsu
as we have seen in proposition     there are bipolar adfs with supported model sets
that are not antichains  we get 
corollary     badfst  e badfsu
this result allows us to close the last gap and put together the big picture on relative
expressiveness in figure   below 
adfsu 
 e pl
 e lpsu 
badfsu
badfst 
 e lpst
 e adfst 
af
figure    the expressiveness hierarchy  expressiveness strictly increases from bottom to
top  f  denotes formalism f under semantics   where su is the supported and st
the stable model semantics  formalisms are among afs  argumentation frameworks   adfs
 abstract dialectical frameworks   badfs  bipolar adfs   lps  normal logic programs  and
pl  propositional logic  

   allowing vocabulary expansion
up to here  we only considered compact realisations  that do not introduce new vocabulary elements  in this section  we allow the introduction of a small number of new
atoms arguments statements  more precisely  small means the number is linear in the
size of the source knowledge base  representing the model set that we wish to realize in a
target language   for the purpose of realisability  the new vocabulary elements are projected
out of the resulting models 
as it turns out  adding additional arguments already makes afs universally expressive
 under projection   more technically  we will now show that for each propositional formula
 over vocabulary a  there exists an af f over an expanded vocabulary a  a such
that the models of  and the stable extensions of f correspond one to one  roughly 
this is possible since afs can be regarded as a syntactic variant of classical propositional
logic that has as its only connective the logical nor   gabbay        brewka et al  
       using this connective  negation is expressed by       and disjunction by
   

fistrass

                        these equivalences can be used to translate arbitrary propositional formulas  over       into the syntactical  fragment  to guarantee
that the size increase is at most linear  we introduce names a for subformulas   tseitin 
       the next definition combines all of these ideas 
definition    let  be a formula using      over vocabulary a  define the sets a and
r inductively as follows 
a     a   

r    

a    a  

r     a   a   

ap    p  ap   for p  a

rp     p  ap     ap   p   for p  a

a    a    a

r     a   a     r

a    a   a   a    a  a r     a   a     a   a     r  r
a    a   a    a  a

r     a   a     a   a     a   a     r  r

the af associated to  is given by f    a  a   r    a   a     r   
the argument a  is unattacked and thus part of every stable extension  is true in every
interpretation   the argument a attacks itself and thus cannot be part of any stable extension  is false in every interpretation   the mutually attacking arguments p and ap for
p  a serve to guess a valuation of a  while a and a guarantee that only  and all 
valuations that are models of  can lead to stable extensions of f   intuitively  a must be
attacked  and the only candidate to do so is a   the arguments and attacks for the boolean
connectives express their usual truth theoretic semantics  as our first technical result for this
translation shows 
lemma     let  be a formula over vocabulary a and f its associated af  for each
stable extension m of f and a   a  a   we have 
 a  m iff a 
  m 
 a  m iff both a  m and a  m  
 a  m iff one of a  m or a  m  
 a  m iff neither a  m nor a  m  
proof 
 by definition  the only attacker of an argument of the form a is the argument
a   thus a  m iff a 
  m 
 the only attackers of a are the arguments a and a   by the case above  we have
a  m iff a 
  m   and a  m iff a 
  m   consequently  a  m and a  m iff
a 
  m and a 
  m iff a  m  
 the only attacker of a is the argument a   similarly to the previous cases  we
can show that a  m iff a 
  m and a 
  m   and that a  m iff a 
  m   in
combination  a  m iff a  m or a  m  
   

fiexpressiveness of two valued semantics for adfs

 the only attackers of a are the arguments a and a   it directly follows that
a  m iff neither a  m nor a  m  

these correspondences can be used to show by induction that the newly introduced
arguments capture the semantics of the formulas they encode  for all subformulas  of   
lemma     let  be a formula over a and f its associated af  for each stable extension
m of f and a  a   we have a  m iff m  a is a model of  
proof  let m be a stable extension of f   we use structural induction on  
      trivial  a   m since it has no attackers 
     trivial  a 
  m since the set  a   is not conflict free 
   p  a  trivial  p  m iff m    p by definition 
     a  m iff a  m iff a 
  m iff m      iff m     iff m     
       a  m iff a  m iff a  m and a  m iff m     and m     iff m      
iff m     
       a  m iff a  m iff a  m or a  m iff m     or m     iff m      
iff m     
       a  m iff a  m iff a 
  m and a 
  m iff m      and m      iff m      
iff m     

this lets us show the main result of this section  namely that the af stable extension
semantics is universally expressive under projection 
theorem     let  be a formula over vocabulary a and f its associated af 
   for each model m  a of   there exists a stable extension e of f with m   e  a 
   for each stable extension e of f   the set e  a is a model of  
proof 

   let m  a be a model of   define the set
e    a   a  a   m     

observe that m   e  a  by presumption  a  e  it remains to show that e is a
stable extension  that is  e is conflict free and attacks all arguments b 
  e 
e is conflict free  assume to the contrary that there is an attack r    a  b   r with
a  b  e  by definition  there are only these cases 
 a is arbitrary and b     but then by definition of e we get m     
contradiction 
 r    p  ap   or r    ap   p  for p  a  but then by definition of e we get
m    p and m    p  contradiction 
   

fistrass

 r    a   a    but then by definition of e we get m     and m     
contradiction 
 r    a   a   or r    a   a    then m       and m     or m     
contradiction 
 r    a   a    then m        whence m         but also m      
contradiction 
 r    a   a   or r    a   a    then m        and m     or m     
but then also m        contradiction 
e attacks all arguments not in e  let b   a  a   a      e be an argument  by
definition  there is a formula  such that b   a and m       we use structural
induction 
 if     then a  e attacks a by definition 
 if      then m     whence a  e attacks a by definition 
 if        then m     or m     whence a  e or a  e  in any
case  e attacks a by definition 
 if        then m       whence a  e attacks a by definition 
 if        then m       whence a  e or a  e 
in any case  e attacks a by definition 
   let e be a stable extension of f   since e is conflict free  a 
  e  since e is stable 
e attacks a   which yields a  e  by lemma     e  a is a model of  

in particular  f has no stable extension iff  is unsatisfiable  while this shows that the
construction of definition   works as intended  it remains to show that the number of new
arguments is at most linear in the formula size  we can even show that the total increase
in size is only linear  thus also the number of new arguments is linear 
proposition     for any formula   we find that kf k  o kk  
proof  we first note that
kf k   k a  a   r    a   a     r  k
   a  a      r    a   a     r  
   a          r      
   a      r      
we now use structural induction on  to show that for all formulas   we find  a       kk
and  r       kk  it then follows that kf k           kk          kk      o kk  
     
 a        a                 k k
 r                     k k
   

fiexpressiveness of two valued semantics for adfs

    
 a       a                kk
 r        a   a                 kk
   a  a 
 aa       a  aa                kak
 ra        a  aa     aa   a                kak
    
 a      a   a      a            kk           kk           kk
 r      r    a   a       r            kk           kk           kk
      
 a     a      a          a            a           
     kk            kk               kk      kk    
      kk   kk           k  k
 r     r      r          r            r           
     kk            kk               kk      kk    
      kk   kk           kk
      
 a     a      a           kk      kk    
    kk      kk           kk   kk           kk
 r     r      r            kk        kk     
    kk      kk           kk   kk           kk



hence under projection  the af stable extension semantics can realise as much as propositional logic can  with the results of the previous section  af e pl   this means that
allowing to introduce a linear number of new vocabulary elements  that are later projected
out   all languages considered in this paper are equally  universally  expressive 
however  we must note that equal expressiveness does not mean equal efficiency  when
we assume that a knowledge base of size n leads to a search space of size o  n    then a
linear increase in knowledge base size  that is  from n to c  n for some constant c  leads to
a polynomial increase in search space size  that is  from o  n   to o  cn     o   n  c   
   

fistrass

   discussion
we compared the expressiveness of abstract argumentation frameworks  abstract dialectical
frameworks  normal logic programs and propositional logic  we showed that expressiveness
under different semantics varies for the formalisms and obtained a neat expressiveness hierarchy  these results inform us about the capabilities of these languages to encode sets
of two valued interpretations  and help us decide which languages to use for specific applications  furthermore  we have seen that the results are sensitive to the vocabulary one is
permitted to use  as the hierarchy collapses when we allow to introduce even only a linear
number of new atoms 
concerning succinctness  we have shown that adfs  under model semantics  are exponentially more succinct than normal logic programs  under supported model semantics  
and that even bipolar adfs  under model semantics   although being less expressive 
can succinctly express some model sets where equivalent normal logic programs  under supported model semantics  over the same vocabulary must necessarily blow up exponentially
in size  it is open whether the converse direction also holds  that is  whether badfs are
exponentially more succinct than logic programs  if lpsu s badfsu   or the two are just
mutually incomparable in terms of succinctness  if lpsu  s badfsu    for the stable semantics  relative succinctness of logic programs and badfs is completely open  partly due
to the technical aspect that the two stable semantics are conceptually different  as adfs
in fact employ ultimate stable models  denecker et al         brewka et al         strass
  wallner         furthermore  for general adfs  the computational complexity of the
model existence problem of stable semantics is higher than for normal logic programs    so
a succinctness comparison with regard to stable models would be of limited significance 
it is easy to see that afs have a somewhat special role as they are representationally
succinct in any case  for a vocabulary an   there is syntactically no possibility to specify a knowledge base  an af  of exponential size  since the largest af over an has size
k an   an  an  k   n   n  and is thus polynomially large  so anything that can be expressed with an af can be expressed in reasonable space by definition  however  this
strength of afs should be taken with a grain of salt  since they are comparably inexpressive  this can  in addition to the results we presented  already be seen from a simple
counting argument  even if all syntactically different afs over an were semantically differ 
ent  which they are not   they could express at most  n different model sets  which is  for
n
increasing n  negligible in relation to the    possible model sets over an  
in their original paper  gogic et al         also used a relaxed version of succinctness 
where they allowed to introduce a linear number of new variables  it follows from our results
in section   that all formalisms we consider here are equally succinct under this relaxed
notion 
parts of the expressiveness results for normal logic programs carry over to further lp
classes  for example  canonical logic programs provide a limited form of nesting by allowing
literals of the form not not a in rule bodies  lifschitz et al          this makes it quite easy
to see how normal logic programs under supported semantics can be translated to equivalent
canonical logic programs  namely by replacing each positive body atom a by not not a in
    p
   hard for adfs  strass   wallner        as opposed to in np for normal lps  bidoit   froidevaux 
      marek   truszczynski        

   

fiexpressiveness of two valued semantics for adfs

all rule bodies  recently  shen and zhao        showed that canonical logic programs and
propositional logic programs are succinctly incomparable  under an assumption      and also
provide interesting avenues for further succinctness studies  we can also add succinctness
questions of our own  firstly that of comparing disjunctive logic programs under stable
models with general adfs under stable models  since the two have an equally complex
 p   complete  model existence problem  eiter   gottlob        brewka et al          what
is more  there have been alternative proposals for stable model semantics for adfs 
 ours  strass         definition      later called approximate stable models by strass
  wallner         for which model existence is np complete  strass   wallner       
and thus potentially easier than that of the stable models of brewka et al        
 called ultimate stable models by strass   wallner        
 the grounded model semantics by bogaerts  vennekens  and denecker         definition       whose model existence problem is also p   complete  bogaerts et al  
      
 the f stable model semantics by alviano and faber         definition     
it follows from theorem     of bogaerts et al         that grounded models and f stable
models coincide  still  they are demonstrably different from both approximate and ultimate stable models for adfs  alviano   faber           and their relative succinctness in
comparison to normal disjunctive logic programs is unanalysed 
there is more potential for further work  first of all  a nice characterisation of bipolar
adf realisability is still missing  we are unsure whether much improvement over proposition    is possible  incidentally  for afs the exact characterisation of compact stable extension realisability constitutes a major open problem  dunne et al         baumann et al  
       second  there are further semantics for abstract dialectical frameworks whose expressiveness could be studied  dunne et al         and dyrkolbotn        already analyse many
of them for argumentation frameworks  this work is thus only a start and the same can
be done for the remaining semantics  for example the admissible  complete and preferred
semantics are all defined for afs   b adfs and lps  strass        brewka et al         
and puhrer        has already made a huge step into that direction by characterising realisability  third  there are further formalisms in abstract argumentation  brewka et al        
whose expressiveness is by and large unexplored to the best of our knowledge  finally  the
representational succinctness of the subclass of bipolar adfs  using bipolar propositional
formulas to represent them  under supported model semantics is mostly open  cf  table    
with some evidence pointing toward meaningful capabilities 

acknowledgements
this paper combines  extends and improves results of our previous work  strass       
    b      c   we wish to thank stefan woltran for providing a useful pointer to related
 
    p   nc poly
  the boolean circuit equivalent of the assumption np   p 
    in the terminology of alviano and faber         approximate stable models  strass        are called
s stable models and ultimate stable models  brewka et al         are called b stable models  both are
shown to be different from f stable models 

   

fistrass

work on realisability in logic programming  bart bogaerts for pointing out that grounded
models and f stable models are the same  jorg puhrer for several suggestions for improvement of the manuscript  and frank loebe for helpful discussions  this research was partially
supported by deutsche forschungsgemeinschaft  dfg  project br           

references
al abdulkarim  l   atkinson  k     bench capon  t  j  m          abstract dialectical
frameworks for legal reasoning  in hoekstra  r   ed    proceedings of the twentyseventh annual conference on legal knowledge and information systems  jurix  
vol      of frontiers in artificial intelligence and applications  pp        ios press 
al abdulkarim  l   atkinson  k     bench capon  t  j  m          evaluating an approach
to reasoning with cases using abstract dialectical frameworks  in proceedings of the
fifteenth international conference on artificial intelligence and law  icail  
alviano  m     faber  w          stable model semantics of abstract dialectical frameworks revisited  a logic programming perspective  in yang  q     wooldridge  m 
 eds    proceedings of the twenty fourth international joint conference on artificial
intelligence  ijcai   pp            buenos aires  argentina  ijcai aaai 
arora  s     barak  b          computational complexity  a modern approach  cambridge
university press 
baumann  r   dvorak  w   linsbichler  t   strass  h     woltran  s          compact
argumentation frameworks  in proceedings of the twenty first european conference
on artificial intelligence  ecai   pp        prague  czech republic 
bidoit  n     froidevaux  c          negation by default and unstratifiable logic programs 
theoretical computer science                
bogaerts  b   vennekens  j     denecker  m          grounded fixpoints and their applications in knowledge representation  artificial intelligence            
boppana  r  b          threshold functions and bounded depth monotone circuits  journal
of computer and system sciences                 
brewka  g   dunne  p  e     woltran  s          relating the semantics of abstract dialectical frameworks and standard afs  in proceedings of the twenty second international
joint conference on artificial intelligence  ijcai   pp          ijcai aaai 
brewka  g   ellmauthaler  s   strass  h   wallner  j  p     woltran  s          abstract
dialectical frameworks revisited  in proceedings of the twenty third international
joint conference on artificial intelligence  ijcai   pp          ijcai aaai 
brewka  g     gordon  t  f          carneades and abstract dialectical frameworks  a reconstruction  in proceedings of the third international conference on computational
models of argument  comma   vol      of faia  pp       ios press 
brewka  g   polberg  s     woltran  s          generalizations of dung frameworks and
their role in formal argumentation  ieee intelligent systems                special
issue on representation and reasoning 
   

fiexpressiveness of two valued semantics for adfs

brewka  g     woltran  s          abstract dialectical frameworks  in proceedings of the
twelfth international conference on the principles of knowledge representation and
reasoning  kr   pp         
clark  k  l          negation as failure  in gallaire  h     minker  j   eds    logic and
data bases  pp          plenum press 
coste marquis  s   konieczny  s   mailly  j  g     marquis  p          on the revision of
argumentation systems  minimal change of arguments statuses  in proceedings of the
fourteenth international conference on principles of knowledge representation and
reasoning  kr   pp       
darwiche  a     marquis  p          a knowledge compilation map  journal of artificial
intelligence research             
denecker  m   marek  v  w     truszczynski  m          ultimate approximation and
its application in nonmonotonic knowledge representation systems  information and
computation                 
dimopoulos  y   nebel  b     toni  f          on the computational complexity
of assumption based argumentation for default reasoning  artificial intelligence 
                
dung  p  m          on the acceptability of arguments and its fundamental role in
nonmonotonic reasoning  logic programming and n person games  artificial intelligence             
dunne  p  e   dvorak  w   linsbichler  t     woltran  s          characteristics of multiple
viewpoints in abstract argumentation  in proceedings of the fourteenth international
conference on the principles of knowledge representation and reasoning  kr   pp 
      vienna  austria 
dunne  p  e   dvorak  w   linsbichler  t     woltran  s          characteristics of multiple
viewpoints in abstract argumentation  artificial intelligence              
dyrkolbotn  s  k          how to argue for anything  enforcing arbitrary sets of labellings
using afs  in proceedings of the fourteenth international conference on the principles
of knowledge representation and reasoning  kr   pp          vienna  austria 
eiter  t   fink  m   puhrer  j   tompits  h     woltran  s          model based recasting in
answer set programming  journal of applied non classical logics                 
eiter  t     gottlob  g          on the computational cost of disjunctive logic programming 
propositional case  annals of mathematics and artificial intelligence              
    
french  t   van der hoek  w   iliev  p     kooi  b          on the succinctness of some
modal logics  artificial intelligence            
friedman  j          constructing o n log n  size monotone formulae for the k th elementary symmetric polynomial of n boolean variables  siam journal on computing     
       
gabbay  d  m          dungs argumentation is essentially equivalent to classical propositional logic with the peirce quine dagger  logica universalis                
   

fistrass

gaggl  s  a     strass  h          decomposing abstract dialectical frameworks  in parsons  s   oren  n     reed  c   eds    proceedings of the fifth international conference
on computational models of argument  comma   vol      of faia  pp         
ios press 
gaggl  s  a   rudolph  s     strass  h          on the computational complexity of naivebased semantics for abstract dialectical frameworks  in yang  q     wooldridge  m 
 eds    proceedings of the twenty fourth international joint conference on artificial
intelligence  ijcai   pp            buenos aires  argentina  ijcai aaai 
gebser  m   kaminski  r   kaufmann  b   ostrowski  m   schaub  t     schneider  m 
        potassco  the potsdam answer set solving collection  ai communications 
                available at http   potassco sourceforge net 
gelfond  m     lifschitz  v          the stable model semantics for logic programming 
in proceedings of the international conference on logic programming  iclp   pp 
          the mit press 
gogic  g   kautz  h   papadimitriou  c     selman  b          the comparative linguistics
of knowledge representation  in proceedings of the fourteenth international joint
conference on artificial intelligence  ijcai   pp          morgan kaufmann 
jukna  s          boolean function complexity  advances and frontiers  vol     of algorithms and combinatorics  springer 
lifschitz  v     razborov  a          why are there so many loop formulas   acm transactions on computational logic                
lifschitz  v   tang  l  r     turner  h          nested expressions in logic programs  annals
of mathematics and artificial intelligence                  
lin  f     zhao  y          assat  computing answer sets of a logic program by sat
solvers  artificial intelligence                    
linsbichler  t          splitting abstract dialectical frameworks  in parsons  s   oren  n    
reed  c   eds    proceedings of the fifth international conference on computational
models of argument  comma   vol      of faia  pp          ios press 
marek  v  w     truszczynski  m          autoepistemic logic  journal of the acm         
       
osorio  m   zepeda  c   nieves  j  c     cortes  u          inferring acceptable arguments
with answer set programming  in proceedings of the sixth mexican international
conference on computer science  enc   pp         
polberg  s          extension based semantics of abstract dialectical frameworks  in endriss 
u     leite  j   eds    proceedings of the seventh european starting ai researcher
symposium  stairs   vol      of faia  pp          ios press 
polberg  s   wallner  j  p     woltran  s          admissibility in the abstract dialectical
framework  in leite  j   son  t  c   torroni  p   van der torre  l     woltran  s 
 eds    proceedings of the fourteenth international workshop on computational logic
in multi agent systems  clima xiv   vol       of lnai  pp          springer 
   

fiexpressiveness of two valued semantics for adfs

puhrer  j          realizability of three valued semantics for abstract dialectical frameworks  in yang  q     wooldridge  m   eds    proceedings of the twenty fourth
international joint conference on artificial intelligence  ijcai   pp            ijcai aaai  buenos aires  argentina 
shen  y     zhao  x          canonical logic programs are succinctly incomparable with
propositional formulas  in proceedings of the fourteenth international conference
on the principles of knowledge representation and reasoning  kr   pp         
vienna  austria 
strass  h          approximating operators and semantics for abstract dialectical frameworks  artificial intelligence            
strass  h          on the relative expressiveness of argumentation frameworks  normal
logic programs and abstract dialectical frameworks  in konieczny  s     tompits 
h   eds    proceedings of the fifteenth international workshop on non monotonic
reasoning  nmr  
strass  h       a   instantiating rule based defeasible theories in abstract dialectical frameworks and beyond  journal of logic and computation  advance access published   
february       http   dx doi org         logcom exv    
strass  h       b   the relative expressiveness of abstract argumentation and logic programming  in proceedings of the twenty ninth aaai conference on artificial intelligence
 aaai   pp            austin  tx  usa 
strass  h       c   representational succinctness of abstract dialectical frameworks  in
black  e   modgil  s     oren  n   eds    proceedings of the third international workshop on theory and applications of formal argumentation  tafa  
strass  h     wallner  j  p          analyzing the computational complexity of abstract
dialectical frameworks via approximation fixpoint theory  artificial intelligence      
     
tseitin  g  s          on the complexity of derivations in the propositional calculus  structures in constructive mathematics and mathematical logic  part ii  seminars in
mathematics  translated from russian          

   

fi