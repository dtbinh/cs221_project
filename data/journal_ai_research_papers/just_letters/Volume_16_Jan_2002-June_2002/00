journal artificial intelligence research               

submitted       published     

fusions description logics
abstract description systems
franz baader
carsten lutz

baader cs rwth aachen de
lutz cs rwth aachen de

teaching research area theoretical computer science 
rwth aachen  ahornstrae           aachen  germany

holger sturm

holger sturm uni konstanz de

fachbereich philosophie  universitat konstanz 
      konstanz  germany

frank wolter

wolter informatik uni leipzig de

institut fur informatik  universitat leipzig 
augustus platz              leipzig  germany

abstract
fusions simple way combining logics  normal modal logics  fusions
investigated detail  particular  known that  certain conditions  decidability transfers component logics fusion  though description logics
closely related modal logics  necessarily normal  addition  abox
reasoning description logics covered results modal logics 
paper  extend decidability transfer results normal modal logics
large class description logics  cover different description logics uniform way 
introduce abstract description systems  seen common generalization
description modal logics  show transfer results general setting 

   introduction
knowledge representation systems based description logics  dl  used represent knowledge application domain structured formally well understood
way  brachman   schmolze        baader   hollunder        brachman  mcguinness 
patel schneider  alperin resnick    borgida        woods   schmolze        borgida 
      horrocks         systems  important notions domain described concept descriptions  i e   expressions built atomic concepts  unary
predicates  atomic roles  binary predicates  using concept constructors provided
description logic employed system  atomic concepts concept
descriptions represent sets individuals  whereas roles represent binary relations
individuals  example  using atomic concepts woman human  atomic
role child  concept women daughters  i e   women
children women  represented description woman u child woman 
concept mothers description woman u child human  example 
used constructors concept conjunction  u   value restriction  r c   existential restriction  r c   dl literature  various constructors
considered  prominent example so called number restrictions  available
almost dl systems  example  using number restrictions concept women
c
    
ai access foundation morgan kaufmann publishers  rights reserved 

fibaader  lutz  sturm    wolter

exactly two children represented concept description
woman u    child  u    child  
knowledge base dl system consists terminological component  tbox 
assertional component  abox   simplest form  tbox consists concept
definitions  assign names  abbreviations  complex descriptions  general tbox
formalisms allow so called general concept inclusion axioms  gcis  complex
descriptions  example  concept inclusion
human u    child  v entitled taxbreak
states people least three children entitled tax break  abox
formalism consists concept assertions  stating individual belongs concept 
role assertions  stating two individuals related role   example 
assertions woman mary   child mary  tom   human tom  state mary woman 
child  tom  human 
dl systems provide users various inference capabilities allow
deduce implicit knowledge explicitly represented knowledge  instance  subsumption problem concerned subconcept superconcept relationships  c subsumed
 c v d  if  if  instances c instances d  i e   first description always interpreted subset second description  example  concept
description woman obviously subsumes concept description woman u child woman 
concept description c satisfiable iff non contradictory  i e   interpreted
nonempty set  dls allowing conjunction negation concepts  subsumption reduced  un satisfiability  c v iff c u unsatisfiable  instance
checking problem consists deciding whether given individual instance given
concept  example  w r t  assertions above  mary instance concept
description woman u child human  abox consistent iff non contradictory 
i e   model  dls allowing negation concepts  instance problem
reduced  in consistency aboxes  instance c w r t  abox iff a c i  
inconsistent 
order ensure reasonable predictable behavior dl system  reasoning
dl employed system least decidable  preferably low
complexity  consequently  expressive power dl question must restricted
appropriate way  imposed restrictions severe  however  important
notions application domain longer expressed  investigating trade off
expressivity dls complexity inference problems thus
one important issues dl research  see  e g   levesque   brachman 
      nebel        schmidt schau        schmidt schau   smolka        nebel       
donini  lenzerini  nardi    nutt              donini  hollunder  lenzerini  spaccamela 
nardi    nutt        schaerf        donini  lenzerini  nardi    schaerf        de giacomo
  lenzerini      a      b        calvanese  de giacomo    lenzerini        lutz       
horrocks  sattler    tobies        
paper investigates approach extending expressivity dls  in many
cases  guarantees reasoning remains decidable  fusion dls  order explain
 

fifusions description logics abstract description systems

difference usual union fusion dls  let us consider simple
example  assume dl d  alc  i e   provides boolean operators u  t 
additional concept constructors value restriction r c existential restriction
r c  dl d  provides boolean operators number restrictions
  nr    nr   application requires concept constructors dls
expressing relevant concepts  one would usually consider union d  d  d 
d    allows unrestricted use constructors  example  concept
description c      r a  u  r a  u    r  legal d  d  description  note
description unsatisfiable  due interaction constructors d  d   
fusion d  d  d  d  prevents interactions imposing following restriction 
one assumes set role names partitioned two sets  one used
constructors d    another one used constructors d    thus 
description c  legal d  d  description since uses role r
existential restrictions  which d   constructors  number restriction
 which d   constructor   contrast  descriptions  r   a  u  r   a  u    r   
 r      r     admissible d  d  since employ different roles d  d   constructors  concepts must expressed require
constructors d  d    ones d  roles ones
d    one really need union d  d    fusion would sufficient 
advantage taking fusion instead union  basically  union
two dls one must design new reasoning methods  whereas reasoning fusion
reduced reasoning component dls  indeed  reasoning union may even
undecidable whereas reasoning fusion still decidable  example  consider
dls  i  alcf  extends basic dl alc functional roles  features 
same as constructor  agreement  chains functional roles  hollunder   nutt       
baader  burckert  nebel  nutt    smolka          ii  alc    t   extends alc
transitive closure  composition  union roles  baader        schild        
dls  subsumption concept descriptions known decidable  hollunder   nutt 
      schild        baader         however  union alcf    t undecidable
subsumption problem  baader et al          undecidability result depends fact
that  alcf    t   role constructors transitive closure  composition  union
applied functional roles appear within same as constructor 
allowed fusion alcf alc    t   course  failure certain undecidability proof
make fusion decidable 
know fusion decidable dls decidable  actually 
general dont  main reason writing paper  notion fusion introduced investigated modal logic  basically transfer results finite
axiomatizability  decidability  finite model property  etc  uni modal logics  with one
pair box diamond operators  multi modal logics  with several pairs  possibly satisfying different axioms   led rather general transfer results  see  e g  
wolter        kracht   wolter        fine   schurz        spaan        gabbay      
results concern decidability   sometimes restricted so called normal
modal logics  chellas         since close relationship modal logics
dls  schild         clear transfer results apply dls  question is  however  dls exactly inference problems  first  dls
 

fibaader  lutz  sturm    wolter

allow constructors considered modal logics  e g   same as constructor
mentioned above   second  dl constructors considered modal logics  qualified number restrictions   nr c     nr c   hollunder   baader        
correspond graded modalities  van der hoek   de rijke         easily
shown non normal  third  transfer results decidability concerned
satisfiability problem  with without general inclusion axioms   aboxes related
inference problems considered  aboxes simulated modal logics allowing
so called nominals  i e   names individuals  within formulae  prior        gargov
  goranko        areces  blackburn    marx         however  see below 
general transfer results apply modal logics nominals 
purpose paper clarify dls decidability component dls
transfers fusion  purpose  introduce so called abstract description systems
 adss   seen common generalization description modal logics 
define fusion adss  state four theorems say conditions
decidability transfers component adss fusion  two theorems
concerned inference w r t  general concept inclusion axioms two inference
without tbox axioms  cases  first formulate prove results
consistency problem aboxes  more precisely  corresponding problem adss 
establish analogous results satisfiability problem concepts 
dl point view  four theorems shown paper concerned
following four decision problems 
 i  decidability consistency aboxes w r t  tbox axioms  theorem     
 ii  decidability satisfiability concepts w r t  tbox axioms   corollary     
 iii  decidability consistency aboxes without tbox axioms  theorem     
 iv  decidability satisfiability concepts without tbox axioms  corollary     
theorems imply decidability consistency problem satisfiability
problem transfers fusion dls considered literature  main exceptions  which satisfy prerequisites theorems 
 a  dls propositionally closed  i e   contain boolean connectives 
 b  dls allowing individuals  called nominals modal logic  concept descriptions 

 c  dls explicitly allowing universal role negation roles 
results modal logic problem  iv  usually require component modal logics
normal  theorem    less restrictive  thus applies dls allowing
constructors qualified number restrictions 

   description logics
defining abstract description systems next section  introduce main
features dls must covered definition  purpose  first introduce
 

fifusions description logics abstract description systems

alc  basic dl containing boolean connectives  relevant inference problems 
then  consider different possibilities extending alc expressive dls 
definition    alc syntax   let nc   nr   ni countable pairwise disjoint sets
concept  role  individual names  respectively  set alc concept descriptions
smallest set
   every concept name concept description 
   c concept descriptions r role name  following expressions concept descriptions 
c  negation   c u  conjunction   c  disjunction  
r c  existential restriction   r c  value restriction  
use   abbreviation abbreviation u  where
arbitrary concept name  
let c concept descriptions  c v general concept inclusion axiom
 gci   finite set axioms called tbox 
let c concept description  r role name  i  j individual names  c i 
concept assertion r i  j  role assertion  finite set assertions called
abox 
meaning alc concept descriptions  tboxes  aboxes defined
help set theoretic semantics 
definition    alc semantics   alc interpretation pair  i     
nonempty set  domain interpretation  interpretation function 
interpretation function maps
concept name subset ai  
role name r subset ri  
individual name element ii different names mapped
different elements  unique name assumption  
role name r element define ri  a      b    a  b  ri   
interpretation function inductively extended complex concepts follows 
 c i      c
 c u d i    c di
 c d i    c di
 r c i     a   ri  a  c     
 r c i     a   ri  a  c  
interpretation model tbox iff satisfies c di gcis c v
  model abox iff satisfies ii c concept assertions c i 
 ii   j   ri role assertions r i  j  a  finally  model abox
relative tbox iff model abox tbox 
 

fibaader  lutz  sturm    wolter

given semantics  formally define relevant inference problems 
definition    inferences   let c concept descriptions  individual name 
tbox  abox  say c subsumes relative tbox  d vt c 
iff di c models   concept description c satisfiable relative
tbox iff exists model c      individual instance
c abox relative tbox iff ii c models relative  
abox consistent relative tbox iff exists model relative  
three inferences considered without reference tbox  c subsumes
 c satisfiable  iff c subsumes  c satisfiable  relative empty tbox 
instance c  a consistent  iff instance c  a consistent 
relative empty tbox 
restrict attention dls propositionally closed  i e   allow
boolean operators conjunction  disjunction  negation   consequently  subsumption
reduced  un satisfiability since c vt iff c u unsatisfiable relative  
conversely   un satisfiability reduced subsumption since c unsatisfiable relative
iff c vt   reason  irrelevant whether consider subsumption
satisfiability problem results concerning transfer decidability problems
component dls fusion  informally called transfer results following  
similarly  instance problem reduced  in consistency problem vice
versa  instance c relative iff  c i   inconsistent relative  
inconsistent relative iff instance relative  
arbitrary individual name  consequently  irrelevant whether consider instance
problem consistency problem transfer results 
finally  satisfiability problem reduced consistency problem  c satisfiable relative iff abox  c i   consistent relative   arbitrary
individual name  however  converse need true  obvious
implies transfer result satisfiability problem yield corresponding
transfer result consistency problem  decidability consistency problem
component dls deduce decidability satisfiability problem
fusion  might less obvious transfer result consistency problem need
imply corresponding transfer result satisfiability problem  satisfiability
problems component dls decidable  transfer result consistency
problem applied  since prerequisite transfer result  namely  decidability consistency problem component dls  need satisfied   however 
show method used show transfer result consistency problem
applies satisfiability problem 
    expressive dls
several possibilities extending alc order obtain expressive dl 
three prominent adding additional concept constructors  adding role constructors  formulating restrictions role interpretations  addition giving examples
extensions  introduce naming scheme obtained dls  additional
concept constructors indicated appending caligraphic letters language name 
role constructors symbols superscript  restrictions roles letters subscript 
 

fifusions description logics abstract description systems

start introducing restrictions role interpretations  since need refer
restrictions defining certain concept constructors 
      restrictions role interpretations
restrictions enforce interpretations roles satisfy certain properties 
functionality  transitivity  etc  consider three prominent examples 
   functional roles  one considers subset nf set role names nr  
whose elements called features  interpretation must map features f nf
functional binary relations f   i e   relations satisfying a  b  c f  a  b 
f  a  c  b   c  sometimes treat functional relations partial functions 
write f  a    b rather f  a  b   alc extended features denoted
alc f  
   transitive roles  one considers subset nr  nr   role names r nr 
called transitive roles  interpretation must map transitive roles r nr 
transitive binary relations ri   alc extended transitive roles
denoted alc r   
   role hierarchies  role inclusion axiom expression form r v
r  nr   finite set h role inclusion axioms called role hierarchy 
interpretation must satisfy ri r v h  alc extended role
hierarchy h denoted alc h h    h clear context irrelevant 
write alch instead alc h h   
restrictions combined other  example  alc hr  alc
role hierarchy transitive roles 
transitive roles dls first investigated sattler         features introduced dls hollunder nutt         under name attributes 
classic system  brachman et al          cases conjunction feature agreements disagreements  see concept constructors below   features without agreements
disagreements are  e g   used dl shif  horrocks   sattler         albeit
expressive local way  functionality asserted hold certain individuals  necessarily whole model  according naming scheme  indicate
presence features dl letter f subscript  
remark role hierarchies order  definition  h  h  different
role hierarchies  alc h h    alc h h    different dls  dl literature 
usually one logic alch defined role hierarchies treated tboxes  i e  
satisfiability subsumption defined relative tboxes role hierarchies  see  e g  
horrocks         purposes  however  convenient define one dl per role
hierarchy since distinct role hierarchies impose distinct restrictions interpretation
roles  advantages approach become clear later frames abstract
description systems introduced 
   note authors  e g   horrocks   sattler        use appended f denote local features 
following hollunder nutt         use f denote dl allows feature agreements
 see below  

 

fibaader  lutz  sturm    wolter

name
unqualified
number restrictions
qualified
number restrictions
nominals
feature agreement
disagreement

syntax
nr
nr
nr c
nr c

u  u 
u  u 

semantics
 a    ri  a   n 
 a    ri  a   n 
 a    ri  a  c   n 
 a    ri  a  c   n 
 i      
 a   b   ui   a    b   ui   a  
 a   b    b   
ui   a    b     b    ui   b    

symbol
n
q

f

figure    description logic concept constructors 
      concept constructors
concept constructors take concept and or role descriptions transform
complex concept descriptions  addition constructors available alc  various
concept constructors considered dl literature  small collection
constructors found figure     s  denotes cardinality set s 
symbols rightmost column indicate naming scheme resulting dl 
mentioned name modifiers concept constructors written subscript 
appended language name  example  alc hr  extended qualified
number restrictions called alcqhr    syntax extended dls expected  i e  
constructors may arbitrarily combined  semantics obtained augmenting
semantics alc appropriate conditions  found third
column figure    nominals feature  dis agreements need explanation 
nominals  consider set  names for  nominals  pairwise disjoint
sets nc   nr   ni   elements often denoted  possibly
index   interpretation must map nominals singleton subsets  
intention underlying nominals stand elements   individual
names  however  since want use nominal  nullary  concept
constructor  must interpret set  namely singleton set consisting
individual denotes 
feature  dis agreements  alcf extension alc f feature agreements
disagreements  beside additional concept constructors  alcf uses feature
chains part  dis agreement constructor  feature chain expression
form u   f  fn   interpretation ui feature chain
composition partial functions f i           fni   composition read
left right 
dls including nominals feature  dis agreements additional concept constructors
restrictions role interpretations defined  and named  obvious way 
number restriction available almost dl systems  dl alcn  i e   alc
extended number restrictions  first treated hollunder nutt        
alcf  dl alcq first investigated hollunder baader         alco
schaerf        
 

fifusions description logics abstract description systems

name
role composition

syntax
r  r 

semantics
  a  b   
c    a  c  r i  c  b  r i  
role complement r
  a  b     a  b 
  ri  
role conjunction
r  u r    a  b     a  b  r i  a  b  r i  
role disjunction
r  r    a  b     a  b  r i  a  b  r i  
inverse roles
r 
  a  b     b  a  ri  
transitive closure r 
  a  b     a  b   ri     
universal role
u

binary relation r  r  denotes transitive closure r 

symbol


u

 
 
u

figure    description logic role constructors 
      role constructors
role constructors allow us build complex role descriptions  collection role constructors found figure    again  rightmost column indicates naming scheme 
name modifiers role constructors written superscript separated
commas  example  alcq inverse roles transitive closure called alcq     
dls admitting role constructors  set role descriptions defined inductively  analogously set concept descriptions  semantics role constructors given
third column figure    concept descriptions  used extend
interpretation function role names role descriptions 
dl role constructors  role descriptions used wherever role names may
used corresponding dls without role constructors  example 
 r  u r    c u  r  r    c
 u t

alc
 concept description  concept description unsatisfiable since r  r 
equivalent universal role  note role descriptions used within role
assertions abox 
dl alc  t   first treated baader         under name alc trans    schild
       shown dl notational variant propositional dynamic logic  pdl  
dls boolean operators roles investigated lutz sattler        
inverse operator available system crack  bresciani  franconi    tessaris 
       reasoning dls inverse roles was  example  investigated calvanese
et al         horrocks et al          universal role expressed using dls
boolean operators roles  see example   turn used simulate
general concept inclusion axioms within concept descriptions 
    restricting syntax
now  constructors could combined arbitrarily  sometimes makes sense restrict
interaction constructors since reasoning restricted dl may easier
reasoning unrestricted dl  consider dls imposing certain restrictions

 

fibaader  lutz  sturm    wolter

   roles may used inside certain concept constructors 
   roles may used inside certain role constructors 
   combination role constructors 
   role constructors may used inside certain concept constructors 
example first case  consider fragment alcqr  transitive roles
may used existential universal restrictions  number restrictions  see 
e g   horrocks et al         
result taking fusion two dls  obtain dls whose set roles nr
partitioned  example  fusion alcq alc   yields fragment alcq 
nr partitioned two sets  say nr  nr    fragment  inverse role
constructor roles nr  may used within qualified number restrictions 
roles nr  may used inside inverse role constructor   thus  dl
example first  second  fourth case 
consider dl alcf introduced above  extend alc f
feature  dis agreement concept constructor  provides role composition constructor  however  role chains built using composition comprised exclusively
features non functional roles may appear inside feature  dis agreement  hence 
alcf example first  second  fourth case 
example third case  fragment alc  u role conjunction
may used inside role complement constructor considered lutz sattler
       
restricted dls  introduce explicit naming scheme  note that 
paper  deal dls combinability concept constructors
restricted since dls would fit framework abstract
description systems introduced next section  example dl would
one atomic negation concepts  i e   negation may applied concept
names  e g   dl al discussed donini et al         

   abstract description systems
order define fusion dls prove general results fusions dls  one needs
formal definition description logics  since exists wide variety dls
different characteristics  introduce general formalization 
cover dls considered literature  includes logics would usually
subsumed name dl 
    syntax semantics
syntax abstract description system given abstract description language 
determines set terms  term assertions  object assertions  setting 
concept descriptions represented terms built using abstract description
   become clearer given formal definition fusion 

  

fifusions description logics abstract description systems

language  general inclusion axioms dls represented term assertions abox
assertions dls represented object assertions 
definition    abstract description language   abstract description language  adl 
determined countably infinite set v set variables  countably infinite set x
object variables   possibly infinite  countable set r relation symbols arity two  
 possibly infinite  countable set f functions symbols f   equipped arities
nf   sets pairwise disjoint 
terms tj adl built using follow syntax rules 
tj

x  t    t  t    t  t    f  t            tnf   

x v   f f  boolean operators     different function
symbols f  term t  denote var t  set set variables used t 
symbol   used abbreviation x x abbreviation x x  where
x set variable  
term assertions adl
t  v t    terms t    t   
object assertions
r a  b   a  b x r r 
 a   t   x term 
sets term object assertions together form set assertions adl 
dl point view  set variables correspond concept names  object
variables individual names  relation symbols roles  boolean operators well
function symbols correspond concept constructors  thus  terms correspond
concept descriptions  example  let us view concept descriptions dl alcn u  
i e   alc extended number restrictions conjunction roles  terms adl 
value restrictions existential restrictions seen unary function symbols 
role description r  function symbols fr fr   take term tc
 corresponding concept description c  transform complex terms
fr  tc   fr  tc    corresponding concept descriptions r c r c   similarly 
number restrictions seen nullary function symbols  role description r
n n  function symbols fnr fnr   hence  alcn u  concept
description u  r  u r     b u    r     corresponds term xa f r  ur      xb
f  r        analyze connection adls dls formally later on 
semantics abstract description systems defined based abstract description
models  models general semantic structures terms adl
interpreted  already noted here  however  abstract description
system usually take account abstract description models available
language  allows selected subclass models  subclass determines
semantics system 
   keep things simpler  restrict attention case binary predicates  i e   roles dl 
however  results easily extended n ary predicates 

  

fibaader  lutz  sturm    wolter

definition    let l adl definition    abstract description model  adm 
l form

e
w   w  f w    f w   f f   rw    rw   r r   



w nonempty set  f w functions mapping every sequence x            xnf
subsets w subset w   rw binary relations w  
since adms interpret variables  need assignment assigns subset
w set variable  evaluate terms adm  evaluate object
assertions  need additional assignment assigns element w object
variable 



definition    let l adl w   w  f w   rw adm l  assignment
w pair    a    a    a  mapping set set variables v
 w   a  injective  mapping set object variables x w   let w
adm    a    a    assignment w  l term t  inductively
associate value tw a  w follows 
xw a    a   x  variables x v  
t w a  
   t  t   w a    tw a
tw a
 t w a    w    t w a    t  t   w a    tw a
 
 
 
f  t            tnf  w a    f w  tw a
          tw a
nf   
 
x            xn set variables occurring t  often write tw  x            xn  
shorthand tw a   assignment xa
  xi   n 
truth relation    hw  ai assertions defined follows 
hw  ai    r a  b  iff a   a rw a   b  
hw  ai      iff a   a  tw a  
 
tw a
hw  ai    t  v t  iff tw a
 
 
case say assertion satisfied hw  ai  if  adm w set
assertions   exists assignment w assertion satisfied
hw  ai  w model  
two differences adms dl interpretations  first  dl interpretation  interpretation role names fixes interpretation function
symbols corresponding concept constructors involve roles  like value restrictions 
number restrictions  etc    interpretation concept names corresponds assignment  thus  dl model adm together assignment  whereas adm
alone corresponds called frame modal logics  second  dl roles used
concept constructors may  course  occur role assertions  contrast  definition
adms per se enforce connection interpretation function
symbols interpretation relation symbols  connections can  however 
enforced restricting attention subclass possible adms adl 
   corresponds unique name assumption 

  

fifusions description logics abstract description systems

definition    abstract description system  ads  pair  l  m   l adl
class adms l closed isomorphic copies  
dl point view  choice class defines semantics
concept role constructors  allows us  e g   incorporate restrictions role
interpretations  sense  ads viewed determining  description  logic 
concrete  dl interpretation interpretation function symbols
determined interpretation role names  thus one can  example  restrict
class models adms interpret certain role transitive relation
composition two roles  another restriction realized choice
nominals  corresponding nullary function symbols  must interpreted
singleton sets 
let us define reasoning problems abstract description systems  introduce
satisfiability sets assertions  with without term assertions   corresponds
consistency aboxes  with without gcis   satisfiability terms  with without
term assertions   corresponds satisfiability concept descriptions  with without
gcis  
definition    given ads  l  m   finite set assertions called satisfiable
 l  m  iff exists adm w assignment w hw  ai
satisfies assertions   term called satisfiable  l  m  iff  a   t  satisfiable
 l  m   arbitrary object variable 
satisfiability problem  l  m  concerned following question  given
finite set object assertions l  satisfiable  l  m  
relativized satisfiability problem  l  m  concerned following question  given finite set assertions l  satisfiable  l  m  
term satisfiability problem  l  m  concerned following question 
given term l  satisfiable  l  m  
relativized term satisfiability problem  l  m  concerned following
question  given term set term assertions l   a   t  satisfiable
 l  m  
next section  define fusion two adss  show  relativized 
satisfiability decidable fusion  relativized  satisfiability component adss
decidable  transfer results hold  must restrict so called local
adss 



wp   rwp pairwise
definition    given family  wp  pp
adms w
p   wp   f

disjoint domains wp   say w   w  f w   rw disjoint union  wp  pp iff

w   pp wp  
   intuitively  means that  adm w belongs m  adms differ w r t 
names elements domain w belong m 

  

fibaader  lutz  sturm    wolter


f w  x            xnf     pp f wp  x  wp           xnf wp   f f
x            xnf w  

rw   pp rwp r r 
ads    l  m  called local iff closed disjoint unions 
remainder section  first analyze connection adss dls
detail  comment relationship modal logics 
    correspondence description logics
show dls introduced section   correspond adss  order this 
first need introduce frames  notion well known modal logic  let l one
dls introduced section   
definition     frames   l frame f pair  f   f    f nonempty set 
called domain f  f interpretation function  maps
nominal singleton subset f f  
role name r subset rf f f restrictions role
interpretations l satisfied  example  alc r    r nr  mapped
transitive binary relation 
interpretation function f inductively extended complex roles obvious
way  i e   interpreting role constructors l according semantics given
figure   
interpretation based frame f iff   f   ri   rf roles r nr  
  f nominals  
frame viewed interpretation partial sense interpretation individual concept names fixed  note  in contrast case
concept individual names  interpretation nominals already fixed frame 
reason that  interpret nominals frame 
treat set variables ads side  would  however  variables
singleton sets may assigned  since restriction possible
framework adss defined above  interpret nominals frame  consequence
correspond functions arity   ads side 
now  define abstract description system    l  m  corresponding dl l 
straightforward translate syntax l abstract description language l 
definition     corresponding adl   let l dl concept role constructors
well restrictions role interpretations introduced section    corresponding
abstract description language l defined follows  every concept name l 
exists set variable xa l  every individual name l exists object
variable ai l  let r set  possibly complex  role descriptions l  set
relation symbols l r  set function symbols l smallest set containing
   every role description r r  unary function symbols fr fr  
  

fifusions description logics abstract description systems

   l provides unqualified number restrictions  then  every n n every role
description r r  function symbols fnr fnr arity   
   l provides qualified number restrictions  then  every n n every role r r 
unary function symbols fnr
fnr
 


   l provides nominals  then  every   function symbol arity   
   l provides feature agreement disagreement  then  every pair feature chains
 u    u     two function symbols fu  u  fu  u  arity   
l concept description c  let tc denote representation c l term 
defined obvious way  concept names translated set variables xa  
concept constructors   u  mapped       respectively 
concept constructors translated corresponding function symbols  obviously 
sets function relation symbols l may infinite 
example translation concept descriptions terms adl already
given above  alcn u  concept description u  r  u r     b u    r     corresponds
term xa f r  ur      xb f  r       
define set abstract description models corresponding dl l 
every l frame  contains corresponding adm 
definition     corresponding
let
f    f   f   frame  corresponding

adm  

abstract description model w   w  f w   rw domain w    f   relation symbols
l role descriptions l  thus interpreted frame f 
relation symbol r r hence define rw    rf  
define f w   need define f w every nullary function symbol f l 
w
f  x  every unary function symbol f l every x   let arbitrary
concept name  x f   let ix interpretation based f mapping
concept name x every concept name    define f w   make case
distinction according type f  
w  x      r a ix  
   fr

w  x      r a ix  
fr

w     nr i   f w     nr i  
   fnr
nr
w  x      nr a ix   f w  x      nr a ix  
   fnr


nr

   fiw     
   fuw  u     u  u   i   fuw  u     u  u   i  
class adms thus obtained dl l obviously closed isomorphic copies since holds set l frames  independently dl l
consider   hence  tuple    l  m  corresponding dl l indeed ads 
example  let us view dl alcn u ads  adl l corresponding
alcn u already discussed  thus  concentrate class adms induced
   taking empty set arbitrary 

  

fibaader  lutz  sturm    wolter

frames alcn u   assume f frame  i e   f consists
nonempty



domain interpretations rf role names r  adm w   w  f w   rw induced
f defined follows  set w identical domain f  role description
yields relation symbol  interpreted w frame  example 
 r  u r   w   r f r f   remains define interpretation function symbols 
illustrate two examples  first  consider  unary  function symbol f r  ur     
w
given subset x w   function f r
maps x
  ur   
w
f r
 x      w w   v x v  w  v  r f r f   
  ur   

i e   interpretation concept description  r  u r    a interpretations based
f interpreting x  accordingly  value constant symbol f  r  w
given interpretation    r  interpretations based f 
easy show interpretation concept descriptions l coincides
interpretation corresponding terms    l  m  



lemma     let f frame  w   w  f w   rw adm corresponding f   
 a    a    assignment w  c concept description  let concept names
used c among a            ak   interpretations based f aii   a   xai  
  k 
c   tw a
 
c
easy consequence lemma  close connection reasoning
dl l reasoning corresponding ads  given tbox abox
dl l  define corresponding set s t   a  assertions corresponding adl
 l  m  obvious way  i e   gci c v yields term assertion tc v td  
role assertion r i  j  yields object assertion r ai   aj    concept assertion
c i  yields object assertion ai   tc  
proposition     abox consistent relative tbox l iff s t   a 
satisfiable corresponding ads 
treat non relativized consistency explicitly since special case
relativized consistency tbox empty 
already mentioned above  transfer results require component adss
local  call dl l local iff ads  l  m  corresponding l local  turns
dls introduced section   local 
proposition     let l one dls introduced section    then  l local iff l
include following constructors  nominals  role complement  universal
role 
proof  start direction  interesting since shows
adss corresponding dls nominals  role complement  universal role
local  make case distinction according constructors l contains 
nominals  consider disjoint union w adms w  w    assume
w  w  correspond frames dl nominals  definition
  

fifusions description logics abstract description systems

disjoint union  know w  w      nominal 
definition disjoint union implies fiw   fiw  fiw    since nominals
interpreted singleton sets w  w    since domains w  w 
disjoint  implies fiw set cardinality    consequently  w cannot
correspond adm induced frame dl nominals  since frames
interpret nominals singleton sets 
universal role  again  consider disjoint union w adms w  w   
assume w  w  correspond frames dl universal role  let u
denote universal role  i e   role name interpretation restricted
binary relation relating pair individuals domain  definition
disjoint union  u w   u w  u w    w  w  w  w     w w  
consequently  w cannot correspond adm induced frame dl
universal role  since frame would interpret u w w  
role complement  again  consider disjoint union w adms w  w   
assume w  w  correspond frames dl role negation 
w
w
w
arbitrary role name r  r   r   r      w  w    rw     w 
w    rw        w  w       rw  rw      w   rw  
remains prove direction  assume l one dls introduced
section   allow nominals  role complements 
universal role 
let

 fp  pp family l frames fp    fp   fp   let wp   wp   f wp   rwp
adms corresponding them  definition  fp   wp p p   assume
domains  wp  pp pairwise disjoint  must show disjoint union  wp  pp
corresponds l frame  purpose  define frame f    f   f  
follows 
f   



rf   



pp

fp

pp

rfp r nr  




let w   w  f w   rw
adm corresponding
f wpby definition     corw
responding adm   w   pp wp r   pp r
r nr  
induction structure complex roles  easy show holds
r r  i e   complex role descriptions  example  consider role description


w
w
r  r    induction  know r w   pp r  p r w   pp r  p   since
sets  wp  pp pairwise disjoint 
 r  r   w   r w r w  

 

pp

wp

r 



 

wp

r 

pp

 

 

pp

wp

r 

wp

r 

 

 

 r  r   wp  

pp

since rwp   rfp r r p p   obtain following fact 
   p p   fp   role descriptions r r  following holds  rf  a   
rfp  a   particular  rf  a  fp  
  

fibaader  lutz  sturm    wolter

remains show that  n    x            xn w   function symbols f
arity n 
 
f w  x            xn    
f wp  x  wp           xn wp   
pp

proved making case distinction according type f   treat two
cases exemplarily 

f   fu  u    since w   pp wp sets wp pairwise disjoint  fuw  u 
disjoint union sets fuw  u  wp p p   remains show fuw  u  wp  
w

w

w

p
p
p
fu  u
 p p    definition fu  u
  know fu  u
iff fp  
 
 
 

f

f

f

f

u  p  a  u  p  a  defined  u  p  a    u  p  a       case iff
fp   uf   a  uf   a  defined uf   a    uf   a   equivalent
fuw  u  wp  

w  x 
f   fnr
  since w   pp wp sets wp pairwise disjoint  fnr



w  x  w p p   remains show
disjoint union sets fnr
p

w

w

w  x  w   f p  x w    p p    definition f p   know
fnr
p
p



nr
nr
w

p
fnr
 x wp   iff fp  rfp  a   x wp    n      case iff


w  x  w  
 rf  a   x wp    n iff  rf  a  x  n  hence iff fnr
p




noted arguments similar ones used proof
direction show that  presence universal role role negation  function
symbols  e g   fu   may violate locality condition 
transfer results decidability developed paper apply fusions
local adss  hence  direction proposition implies results
applicable fusions adss corresponding dls incorporate nominals  role
complement  universal role 
    correspondence modal logics
paper concern fusions description logics modal logics  nevertheless 
useful brief look relationship adss modal logic  standard
modal languages regarded adls without relation symbols object variables
 just identify propositional formulas terms   given adl l  set l l terms
called classical modal logic iff contains tautologies classical propositional logic
closed modus ponens  substitutions  regularity rule
x  y            xnf ynf
f  x            xnf   f  y            ynf  
function symbols f l  minimal classical modal logic language one
unary function symbol known logic e  see chellas        
ads  l  m  based l determines classical modal logic l taking valid
terms  i e   defining
l iff tw a   w w assignments w 
  

fifusions description logics abstract description systems

logic e determined ads precisely one unary operator whose class
adms consists models  chellas formulates completeness result  theorem
    chellas        so called minimal models  alias neighborhood frames   are 
however  notational variant abstract description models one unary operator
 dosen         classical modal logic l determined ads decidable term
satisfiability problem  l decidable since l iff unsatisfiable 
classical modal logic l called normal iff additionally contains
f  x            xj    xj yj   xj             xnf   f  x            xj    xj   xj             xnf  
f  x            xj    yj   xj             xnf  

f                  f                            f                 
function symbols f j   j nf  jonsson   tarski        jonsson  
tarski        goldblatt         definition normal modal logics assumes
formulas  terms  built using necessity  box  operators   work
necessity operators  corresponding possibility operators definable putting
f    x            xnf     f  x            xnf   
minimal normal modal logic language one unary operator known k
 chellas        
call function f   w n w normal iff   j n x            xn   yj w
f  x            xj    xj yj   xj             xn     f  x            xj    xj   xj             xn  
f  x            xj    yj   xj             xn   

f  w                f    w                  f              w     w 
note unary function f normal iff f  w     w f  x     f  x  f  y   
x  w   function symbol f called normal ads  l  m  iff functions
f w normal w m 
role r dl  function symbol fr normal corresponding
ads  contrary  readily checked neither fnr
fnr
duals


 
 
fnr

f

normal 


nr
obviously  ads  l  m  determines normal modal logic iff function symbols
l normal  l  m   completeness k respect kripke semantics  chellas 
      implies logic k determined ads one unary operator whose
class adms consists models interpreting operator normal function 
   note authors define normal modal logics using possibility  diamond  operators  case
definitions duals introduced thus first sight look quite different 

  

fibaader  lutz  sturm    wolter

   fusions abstract description systems
section  define fusion abstract description systems prove two transfer theorems decidability  one concerning satisfiability one concerning
relativized satisfiability 
definition     fusion s  s     l  l    m  m    two abstract description
systems s     l    m    s     l    m   
disjoint sets function symbols f l  g l   
disjoint sets relation symbols r l  q l   
sets set object variables
defined follows  l  l  adl based
union f g function symbols l  l   
union r q relation symbols l  l   
m  m  defined
e
e

e

  w  f w g w   rw qw   w  f w   rw m  w  g w   qw m    
example  consider adss s  s  corresponding dls alcf
alc    t introduced section    concentrate function symbols provided
fusion  following  assume set role names employed alcf
alc    t disjoint 
ads s  based following function symbols   i  unary functions symbol
fr fr every role name r alcf   ii  nullary functions symbols corresponding same as constructor every pair chains functional roles
alcf 
ads s  based following function symbols   iii  unary functions symbol
fq fq every role description q built role names alc    t using
union  composition  transitive closure 
since assumed set role names employed alcf alc    t disjoint 
sets function symbols disjoint  union sets provides us
symbols same as constructor symbols value existential restrictions role descriptions involving union  composition  transitive closure 
however  role descriptions contain role names alc    t   thus none
functional roles alcf occurs descriptions  thus  fusion alcf
alc    t yields strict fragment union alcf    t  
    relativized satisfiability
prove transfer result decidability relativized satisfiability problem  show
yields corresponding transfer result relativized term satisfiability problem 
investigate transfer results extended adss correspond dls
providing universal role 
  

fifusions description logics abstract description systems

      transfer result
section concerned establishing following transfer theorem 
theorem     let s  s  local adss  suppose relativized satisfiability
problems s  s  decidable  relativized satisfiability problem s  s 
decidable 
idea underlying proof theorem translate given set assertions
s  s  set assertions   s  set assertions   s 
satisfiable s  s  iff   satisfiable s    satisfiable s    first  naive 
idea obtain set  i         replace alien terms  i e   subterms
starting function symbols belonging si   new set variables  the surrogate
variables introduced below   approach  satisfiability would fact imply
satisfiability sets   converse would true  difficulty arises
trying combine models     one   ensure two models
indeed combined  sets must contain additional assertions make sure
surrogate variables one model corresponding alien subterms
model interpreted compatible way  precise   finitely many 
different ways adding assertions  one must try  if any  leads
satisfiable pair      
proof theorem     fix two local adss si    li   mi           
l  based set function symbols f relation symbols r  l  based g
q  let l   l  l    m  m   
follows  use following notation  set assertions   denote
term   obj   set terms object names   respectively 
start explaining alien subterms set replaced new set
variables  l term form h t            tn    h f g  reserve new variable
xt   called surrogate t  assume set surrogate variables
disjoint original sets variables  sketched above  idea underlying
introduction surrogate variables decision procedure s   s    cannot deal
terms containing function symbols g  f   thus  alien function symbols
must replaced applying procedure  precise  replace whole
alien subterm starting alien function symbol surrogate  example 
unary symbol f belongs f  unary symbol g belongs g  f  g f  x   
mixed l term  obtain term l    replace subterm g f  x   surrogate 
yields f  xg f  x      analogously  obtain term l    replace whole term
surrogate  yields xf  g f  x      define replacement process
formally 
definition     l term without surrogate variables  denote sur   t  l   term
resulting occurrences terms g t            tn    g g  within
scope g   g replaced surrogate variable xg t       tn     set
terms  put sur         sur   t      define sur   t  well sur     accordingly 
denote sub   set subterms terms   sub     variables
occurring well subterms alien terms  i e   terms starting symbol
  

fibaader  lutz  sturm    wolter

g    formally  define
sub        sub t   xt var sur       var   
define sub     accordingly 
example  let f f unary g g binary    f  g x  f  g x  y     
sur   t    f  xg x f  g x y       note restriction within scope g   g
clarify top most alien subterms replaced  term
example  sub    t      g x  f  g x  y     f  g x  y    g x  y   x  y  
note boolean operators occurring terms shared function symbols
sense alien neither l  l    thus  sur   f  x g x  y     f  x xg x y 
sur   f  x  g x  y     xf  x  g x  y  
course  replacing whole terms variables  information lost 
example  consider  inconsistent  assertion  r       r   u   r      i  assume
r  role one component fusion  r  role component  translated
abstract description language syntax  concept description r       r    u    r    
yields term    fr   f   r    f   r       fr  function symbol l 
two function symbols belong l    now  sur   t    fr   x y   x
surrogate f   r    surrogate f   r      decision procedure
first ads sees fr   x y   way know conjunction alien
subterms corresponding x unsatisfiable  fact  procedure x
arbitrary set variables  thus x satisfiable  avoid problem  introduce
so called consistency set consisting types  type says relevant formula
whether formula negation supposed hold  sets    
contain additional information basically ensures models satisfy
types  allow us merge models one  
definition     given finite set l terms  define consistency set c  
c       tc   c    type tc determined c defined
tc   

 

    c 

 

      c  

given finite set assertions l  define subi       subi  term     abbreviate
c       c subi             
example above 
sub   fr   f   r    f   r         f   r      f   r      
thus c     ai   fr   f   r    f   r        consists   terms
f   r   
f   r   
f   r   
f   r   






f   r     
f   r     
f   r     
f   r     
  

fifusions description logics abstract description systems

given set terms   element tc consistency set c   indeed considered
type element e domain adm w r t    element e
belongs interpretations terms   complements
interpretations terms  thus  c set terms e belongs 
e belongs interpretation tc belong interpretation
terms c    case say e realizes type tc  
ready formulate theorem reduces relativized satisfiability
problem fusion two local adss relativized satisfiability component adss 
proof theorem found appendix 
theorem     let si    li   mi            two local adss l  based
set function symbols f relation symbols r  l  based g q 
let l   l  l    m  m    finite set assertions l 
following equivalent 
   satisfiable  l  m  
   exist
 a  set c      
 b  every term object variable   obj   
 c  every obj   term ta d 
union   following sets assertions l  satisfiable
 l    m    
w
 d   at   sur   t    d     v sur    d   
 e   a   sur   ta     obj    

 f    r a  b    r a  b    r r  
 g   sur   t    v sur   t      t  v t     a   sur   s     a   s    
union   following sets assertions l  satisfiable  l    m    
w
 h   at   sur   t    d     v sur    d   
 i   a   sur   ta     obj    

 j   q a  b    q a  b    q q  
intuitively    a  guesses set types  i e   elements consistency set  
idea exactly types realized model  to constructed
showing       given showing         condition   b  introduces
every type name object realizing type    c  guesses every object
variable occurring type d 
w regarding   d    h   one note set assertions  at     d    v
d  states every type realized  i e   object model
type  every object one types d  sets assertions   d 
  h  obtained set surrogation make digestible decision
procedures component logics 
  

fibaader  lutz  sturm    wolter

assertions   e    i  state  again surrogated versions  object
interpreting variable type ta   ensures that  models    
 given showing         objects interpreting type ta d 
otherwise  models could combined common one  
sets   f    j  obtained distributing relationship assertions
      depending relation symbol used assertion 
set   g  contains  in surrogated version  term assertions form t  v t 
membership assertions form    
condition   asymmetric two respects  first  guesses subset c      rather
subset c       course arbitrary  could chosen index   instead
  here  second  set   neither contains assertions  sur   t    v sur   t      t  v
t     a   sur   s     a   s     added assertions  theorem would
still true  would unnecessarily increase amount work done
combined decision procedure  fact  since assertions     enforce tight
coordination models       fact membership assertions
term assertions satisfied models   implies satisfied
models    see appendix details  
prove theorem     must show theorem    used construct
decision procedure relativized satisfiability s  s  decision procedures
component systems s  s    given finite set assertions s  s    set
c      finite  thus finitely many sets   a  choices types
object variables   c   consequently  enumerate check whether
one choices leads satisfiable sets       definition sets
functions suri   assertions indeed assertions li   thus satisfiability
algorithm  li   mi   applied   proves theorem    
regarding complexity obtained decision procedure  costly step guessing
right set d  since cardinality set sub     linear size  
cardinality c      exponential size  and element size quadratic
   thus  doubly exponentially many different subsets chosen from  since
cardinality chosen set may exponential size   size  
  may exponential  because big disjunction d   this 
following corollary follows 
corollary     let s  s  local adss  suppose relativized satisfiability
problems s  s  decidable exptime  pspace   relativized satisfiability problem s  s  decidable  exptime  expspace  
p  n 

proof  assume size n  must consider       for polynomial p   
p  n 
different sets   a   set size  p   n  thus      choices
  c   for polynomial p     overall  still leaves us doubly exponentially
many choices  assume relativized satisfiability problems s  s 
decidable exptime  since call procedures applied set assertions
p  n 
p  n 
exponential size  may take double exponential time  say            for polynomials
p  p     overall  thus time complexity
  

p   n 

  

p   n 

   
  

p   n 

    

p   n 

  

fifusions description logics abstract description systems

p n 

clearly majorized   
appropriate polynomial p  shows
membership  exptime 
argument regarding space complexity similar  one must additionally
take account doubly exponentially many choices enumerated using
exponentially large counter 

      relativized term satisfiability problem
statement theorem    imply transfer result relativized term
satisfiability problem  problem decidability relativized term satisfiability
problem s  s  necessarily imply decidability relativized satisfiability
problem adss  thus prerequisite theorem apply satisfied 
however  consider statement theorem     easy see theorem
yields transfer result relativized term satisfiability problem 
corollary     let s  s  local adss  suppose relativized term satisfiability problems s  s  decidable  relativized term satisfiability problem
s  s  decidable 
proof  consider satisfiability criterion theorem     interested relativized term satisfiability  form  a   t        set term
assertions  case  sets assertions     contain object assertions
involving relations  now  assume form  a    t              tn    i    i
set term assertions  since two assertions form b   s    b   s  equivalent
one assertion b   s  s    may assume ai distinct other  since si
local  easy see following equivalent 
    a    t              tn    i satisfiable si  
    aj   tj    i satisfiable si j              n 
since       trivial  enough show        given models wj mi  aj  
tj    i  j              n   disjoint union belongs mi   clearly model
 a    t              tn    i  
second condition checked applying term satisfiability test si
n times 

      dealing universal role
stated  proposition      adss corresponding dls universal role
local  thus theorem    cannot applied directly  nevertheless  cases
theorem used obtain decidability result fusions dls
universal role  provided provide universal role   we comment
usefulness approach detail section      
definition     given ads    l  m   denote u ads obtained
   extending l two function symbols fus fus  
  

fibaader  lutz  sturm    wolter




w
   extending every adm w   w  f w   rw unary functions fu

w  
fu

w  x    x     f w  x    w otherwise 
fu
us

w  x    w x   w   f w  x    otherwise 
fu
us


adss corresponding dl l  ads u corresponds extension l
universal role  universal role used within value existential
restrictions   close connection relativized satisfiability problem
satisfiability problem u  
proposition     local ads  following conditions equivalent 
   relativized  term  satisfiability problem decidable 
    term  satisfiability problem u decidable 
   relativized  term  satisfiability problem u decidable 

proof  restrict attention term satisfiability problem since equivalences
satisfiability problem proved similarly 
implication       trivial        easy show  fact  satisfiable
relative term assertions  s  v t            sn v tn   iff tfus    t  s         tn sn   
satisfiable u  
show        assume relativized term satisfiability problem
decidable  let    l  m  u    lu   mu    following  use fu
abbreviation fus   since replace equivalently term function symbol
fus fu   may assume without loss generality fus occur terms
lu  
suppose set    a   s  lu given  set term assertions 
want decide whether satisfiable model w mu   purpose  transform set assertions containing fu   idea underlying transformation
that  given model w mu   fu  t w  w     depending whether tw   w
not  consequently  replace fu  t  accordingly     evaluation term
w change  however  satisfiability test model w  we
trying decide whether one exists   thus must guess right replacement 
term lu called u  term iff starts fu   set u  terms
occur  possibly subterms  denoted u   set  inductively  function
   note necessary add universal role u set relation symbols since assertion
form u  a  b  trivially true  however  use universal role within  qualified  number
restrictions covered extension 

  

fifusions description logics abstract description systems

  u       subterms terms  
x    x 
 t  t       t  t   
 t  t       t  t   
 t      
 f  t            tn       f  t            tn   f    fu arity n 
 fu  t       fu  t   
thus  obtained replacing occurrences u  terms image
  i e      define  function  
    t  v t    t  v t     a    
   v   fu  t  u  fu  t       
 at     fu  t  u  fu  t       
mutually distinct new object variables  note contain
function symbol fu   thus viewed set assertions s  addition  though
contains one membership assertion  contain assertions involving
relation symbols  consequently  satisfiability checked using term
satisfiability test  see proof corollary    above   decidability relativized
term satisfiability problem u follows following claim 
claim  satisfiable member mu iff exists mapping   u      
satisfiable member m 

prove claim  firstff suppose satisfied assignment member
w   w  f w  fuw    rw mu   define setting  fu  t        fu  t  w a  
w    fu  t  
  otherwise 
obviously  implies satisfied

w
w
assignment w  f   r   member m 
suppose satisfiable mapping   take member w  

conversely 

w
w

 
ffand assignment hw  ai      set w   

w  f w   r w
w
w  f  fu    r   prove  induction  terms occur  
  

 

tw  a    t  w a  

critical case one   fu  s   first  assume  fu  s      fu  s    
 
   contains   v   thus w    s  w a   sw  a   second identity
 
 
holds induction  however  sw  a   w implies  fu  s  w  a   w    w a   case
 fu  s      fu  s     treated similarly  term assertion   ensures
 and thus induction s  interpreted whole domain  consequently 
applying fu yields empty set 
since hw  ai      identity    implies hw    ai      completes proof
claim  thus proposition 

normal modal logics  result stated proposition already shown
goranko passy         proof technique used can  however  transfered
  

fibaader  lutz  sturm    wolter

general situation since strongly depends normality modal
operators 
using proposition     obtain following corollary first transfer theorem 
corollary     let s    s  local adss assume that          relativized
 term  satisfiability problem si decidable  relativized  term  satisfiability
problem s u s u decidable 
proof  know theorem     corollary     relativized  term  satisfiability
problem s  s  decidable  hence  proposition    yields relativized  term 
satisfiability problem  s  s   u decidable  s u s u notational variant
 s  s   u   function symbols fus  fus  replaced fus  s   and
analogously fus  s    since three identical semantics 

    satisfiability
note theorem    yield transfer result unrelativized satisfiability
problem  course  relativized satisfiability problems s  s  decidable 
theorem implies satisfiability problem s  s  decidable  since
special case relativized satisfiability problem   however  able apply
theorem obtain decidability satisfiability problem fusion  component
adss must satisfy stronger requirement relativized satisfiability problemwis decidable  indeed  set theorem    contains term assertion  namely   v suri   d  
even contain term assertions 
cases relativized satisfiability problem undecidable whereas
satisfiability problem still decidable  example  theorem    cannot applied
fusion alcf alc    t since relativized satisfiability problem alcf
already undecidable  baader et al          however  satisfiability problem decidable
dls 
      covering normal terms
formulate transfer result satisfiability problem  need introduce
additional notion  generalizes notion normal modal logic 
definition     covering normal terms   let  l  m  ads f function
symbol l arity n  term tf  x   with one variable x  covering normal term
f iff following holds w m 
tw
f  w     w
w
w
x  w   tw
f  x     tf  x  tf  y   

x  x            yn w   x xi   x yi   n implies
w
w
w
tw
f  x  f  x            xn     tf  x  f  y            yn   

ads  l  m  said covering normal terms iff one effectively determine
covering normal term tf every function symbol f l 
  

fifusions description logics abstract description systems

intuitively  first two conditions state covering normal term behaves
value restriction  or box operator   consider term fr  x   fr function
symbol corresponding value restriction constructor role r  fr  x 
obviously satisfies first two requirements covering normal terms  note
second condition implies function induced tf monotonic  i e   x implies
w
tw
f  x  tf  y    third condition specifies connection covering normal
term function symbol covers  respect elements tw
f  x   values
w
w
functions f  x            xn   f  y            yn   agree provided arguments
agree x  easy see fr  x  covering normal term function symbols
corresponding value  existential   qualified  number restrictions role r
 see proposition    below  
given covering normal terms tf function symbols f finite set function
symbols e  one construct term te covering normal term elements
e 
lemma     suppose ads  l  m  covering normal terms l based set
function symbols f   denote tf covering normal term function symbol f  
f f   then  every finite set e f function symbols  term
te  x    

 

tf  x 

f e

covering normal term f e 
      correspondence normal modal logics
following result shows ads every function symbol normal
covering normal terms  hence  notion covering normal terms generalizes notion
normality modal logics 
proposition     let  l  m  ads  assume f normal function symbol
 l  m  
tf  x     f  x              f    x            f              x 
covering normal term f   particular  f nullary  unary   tf  x     
 tf  x    f  x   covering normal term f  
proof  first two conditions definition covering normal terms immediately
follow definition normal function symbols  thus  concentrate third
condition  assume  simplicity  f binary  suppose w x  x    x    y    y 
w x xi   x yi         set f    f w   f  x x    x x     
f  x y    x y     since f normal  know
f  x x    x x      f  x  x  f  x  x    f  x    x  f  x    x    
f  x y    x y      f  x  x  f  x  y    f  y    x  f  y    y    
  

fibaader  lutz  sturm    wolter

thus
f  x  x  f  x  x    f  x    x  f  x    x     
f  x  x  f  x  y    f  y    x  f  y    y    
since  normality f  
f  x  x  f  x  x    f  x    x  tw
f  x  
f  x  x  f  x  y    f  y    x  tw
f  x  
w
implies tw
f  x  f  x    x      tf  x  f  y    y    



      transfer result
using covering normal terms  formulate second transfer theorem 
concerned transfer decidability  non relativized  satisfiability 
theorem     let s  s  local adss covering normal terms  suppose
satisfiability problems s  s  decidable  satisfiability problem
s  s  decidable 
proof theorem     fix two local adss si    li   mi           
l  based set function symbols f relation symbols r  l  based g
q  let l   l  l    m  m   
proof theorem    follows general ideas proof theorem    
are  however  notable differences way satisfiability s  s  reduced
satisfiability s  s    theorem    guess set types 
based set additional guesses  pair satisfiability problems    
s  s    respectively  generated  proof theorem     need guess
d  instead  compute right set  however  computation requires us solve
additional satisfiability problems fusion s  s    nevertheless  yields reduction
since alternation depth  i e   number alternations function symbols s 
s    decreases going input set additional mixed satisfiability
problems 
describe reduction detail  must introduce somewnew
notation  case relativized satisfiability  term assertions w
form   v suri   d 
used assert elements thew domain belong suri   d   now  use
covering normal terms propagate suri   d  terms certain depth 
set function symbols e  define e depth de  t  term inductively 
de  xi      
de  t    de  t 
de  t  t      de  t  t      max de  t     de  t    
de  f  t            tn      max de  t             de  tn        f e
de  f  t            tn      max de  t             de  tn    f   e
  

fifusions description logics abstract description systems

finite set assertions 
de       max de  t    term    
put  term t x  one variable x  t   x     x  tm    x     t tm  x    t   x     x 
tm    x     tm    x  tm  x  
position formulate result reduces satisfiability fusion
two local adss covering normal terms satisfiability component adss 
theorem     let si    li   mi            two local adss covering normal
terms l  based set function symbols f relation symbols r 
l  based g q  let l   l  l    m  m    let finite set
object assertions l  put    df     r    dg     let c x   d x   covering
normal term function symbols f  g  
        denote set c    term satisfiable
 l  m   following three conditions equivalent 
   satisfiable  l  m  
   exist
every   object variable   obj  
every obj   term ta  
union   following sets object assertions satisfiable
 l    m    
w
 at   sur   t cm  sur               
w
 a   sur   ta cm  sur           obj    
 r a  b    r a  b    r r  
 a   sur   s     a   s    
union   following sets object assertions satisfiable  l    m    
w
 at   sur   t dr  sur               
w
 a   sur   ta dr  sur           obj    
 q a  b    q a  b    q q  

   condition     above    replaced    
sets theorem similarwto ones theorem    
main difference
w term assertion   v suri   d  longer there  instead 
disjunction suri       directly inserted terms using covering normals
terms  already mentioned above  another difference set d 
guessed theorem     replaced set              actually  guessing
set
w longer possible case  proof theorem    need know
  v suri   d  satisfiable si  i e   holds least one model mi   
way check effectively since algorithm relativized satisfiability
  

fibaader  lutz  sturm    wolter

si   taking set ensures property satisfied  see proof appendix
details  
definition  set c    term satisfiable  l  m  
recall term satisfiable iff  a   s  satisfiable  l  m  arbitrary
object variable a  since elements c    still mixed terms  i e   terms
fusion   computing set actually needs recursive call decision procedure
satisfiability  l  m   recursion well founded since alternation depth decreases 
definition     term l  denote a   s  a   s    alternation
  alternation depth s  respectively  say  a   s  length longest
sequence form  g    f    g          
g          f         g          
gj g fj f appears s    alternation depth a   s  defined exchanging
roles f g  put a s     a   s    a   s   call alternation depth 
finite set terms  a   maximum a s   
thus  a   s  counts maximal number changes symbols first
second ads  starting first symbol s   i e   first symbol s 
counts change  even occur inside scope symbol s    
  alternation depth defined accordingly  alternation depth sums   
  alternation depth 
lemma     a term         a c         a term    a c         a term    
proof  show that  a term         a sub        a term   
a sub        a term     which  definition c   clearly implies lemma  first
note that  definition subi  
ai  subj     ai  term    i  j 

  

make case distinction follows 
   a   term    a   term     want show a   sub        a   term    
since      implies a sub        a term     assume contrary
a   sub      a   term        implies a   sub        a   term     hence 
exists term sub     sequence  g    f    g            function symbols
gi g  f length a   term    g          f         g           occurs s 
definition sub    implies existence term term   function
symbol f f f        g          f         g            occurs t  since length
 g    f    g            a   term     obviously yields a   term      a   term   
contradiction 
   a   term    a   term     similar previous case  exchange roles
a  a    f g  sub  sub   

  

fifusions description logics abstract description systems

prove theorem     must show theorem    used construct decision
procedure satisfiability s  s  decision procedures component
systems s  s    let us first consider problem computing sets      
a  term         consists boolean combinations set variables 
case  c    consists set variables            computed using boolean
reasoning  a term         lemma    states       
a c       a term     induction thus assume effectively
computed  consequently  remains check condition  i      theorem           
since finite  guess every object variable occurring type ta  
sets     obtained way indeed sets assertions l  l    respectively 
thus  satisfiability effectively checked using decision procedures s 
s    proves theorem    
argument used shows theorem    sufficient state
equivalence          as theorem      fact  induction argument used
necessarily always apply computation     cases  alternation
depth may decreases         noted theorem    could
formulated symmetric way  done since
necessary proving theorem    
regarding complexity combined decision procedure  must principle
consider complexity computing covering normal terms size terms 
examples dl  terms value restrictions  thus size
complexity computing linear  here  assume polynomial bound both 
assumption  obtain complexity results case relativized
satisfiability  fact  complexity testing condition         theorem    agrees
complexity testing condition     theorem     adds one exponential
complexity decision procedure single adss  order compute   need
exponentially many recursive calls procedure  since recursion depth linear
size   end exponentially many tests condition         
corollary     let s  s  local adss covering normal terms  assume
covering normal terms computed polynomial time  satisfiability
problems s  s  decidable exptime  pspace   satisfiability problem
s  s  decidable  exptime  expspace  
argument case relativized satisfiability  extend
transfer result term satisfiability 
corollary     let s  s  local adss covering normal terms  suppose
term satisfiability problems s  s  decidable  term satisfiability
problem s  s  decidable 

   fusions description logics
given two dls l  l    fusion defined follows  translate
corresponding adss s  s    build fusion s  s    fusion l  l 
l  l  dl corresponds s  s    since definition fusion
adss requires sets function symbols disjoint  must ensure adss
  

fibaader  lutz  sturm    wolter

corresponding l  l  built disjoint sets function symbols  dls
introduced section    achieved assuming sets role names l 
l  disjoint sets nominals l  l  disjoint  dl l  l 
allows use concept role constructors dls  restricted way 
role descriptions either role descriptions l  l    role descriptions
involving constructors names dls  concept descriptions may contain concept
constructors dls  however  constructor li may use role description
li  i         
let us illustrate restrictions two simple examples  fusion alc   alc  
two dls alc   alc   fragment alc     whose set role names
partitioned two sets nr  nr 
transitive closure operator may applied names nr   
inverse operator may applied names nr   
example  concept name  r nr  q nr    r   a u q   a
concept description alc   alc     r   a u r   a  q      a not 
note that  although two source dls disjoint sets role names  alc   alc  
role names sets may used inside existential value restrictions since
concept constructors available dls 
fusion alcq alc r  two dls alcq alc r  fragment
alcqr  whose set role names nr  with transitive roles nr  nr   partitioned
two sets nr  nr  nr  nr  that  inside qualifying number restrictions 
role names nr  may used  particular  means transitive roles
cannot occur within qualified number restrictions 
following  give examples illustrate usefulness transfer results
proved previous section  first  give example case satisfiability
relativized satisfiability  subsequently  consider complex example
involving so called concrete domains  here  general transfer result used prove
decidability result recently proved designing specialized algorithm
fusion  finally  give example demonstrates restriction
local adss really necessary 
    decidability transfer satisfiability
subsection  give example application theorem   
decidability result could obtained using theorem    
theorem    requires adss covering normal terms  is  however  satisfied
dls yield local adss 
proposition     let l one dls introduced section    let corresponding
ads    l  m  local  covering normal terms  terms
computed linear time 
proof  function symbols f l  term tf form fr  x  role
description r  semantics value restrictions implies terms form satisfy
  

fifusions description logics abstract description systems

first two properties definition     completes proof function symbols
f arity   since third condition definition    trivially satisfied  thus 
nullary function symbols  fr  x  arbitrary role name r job 
remains show that  every unary function symbol f  fr   fr   fnr
  fnr
  


term fr  x  satisfies third property  immediate consequence
w  x  f w  y     f w  x  f w  x  
fact that  function symbols f   fr
r
models w x  w  

following  consider two description logics alcf alc    t   hollunder
nutt        show satisfiability alcf concept descriptions decidable 
true consistency alcf aboxes  lutz         note  however  relativized
satisfiability alcf concept descriptions thus relativized abox consistency
alcf undecidable  baader et al          alc    t   decidability satisfiability
shown baader        schild          decidability abox consistency alc    t
shown chapter    de giacomo        
unrestricted combination alcf    t two dls undecidable  precise  satisfiability alcf    t  concept descriptions  and thus consistency alcf    t aboxes  undecidable  follows undecidability relativized satisfiability
alcf concept descriptions fact role operators alcf    t used
internalize tboxes  schild        baader et al          contrast undecidability
alcf    t   theorem    immediately implies satisfiability concept descriptions
fusion alcf alc    t decidable 
theorem     satisfiability concept descriptions consistency aboxes decidable
alcf alc    t   whereas satisfiability alcf    t  concept descriptions already
undecidable 
taking fusion thus yields decidable combination two dls whose unrestricted
combination undecidable  price one pay fusion offers less expressivity unrestricted combination  concept f  f  u f    c example
concept description alcf    t allowed fusion alcf alc    t  
    decidability transfer relativized satisfiability
example application corollary     and thus theorem      consider
dl alc    u t
  dl  satisfiability concept descriptions undecidable  however 
f
expressive fragment decidable relativized satisfiability problem obtained
building fusion two sublanguages alc    t
alc    t u  
f
theorem     satisfiability alc    u t
 concept descriptions undecidable 
f
undecidability shown reduction domino problem  berger       
knuth         see  e g   baader   sattler        undecidability proofs dls using
reduction   main tasks solve reduction one express
grid one access points grid  one square grid expressed

n n

   note alc    t notational variant test free propositional dynamic logic  pdl   fischer  
ladner        

  

fibaader  lutz  sturm    wolter

description form  xyuyx     x  features  fact  description
expresses points belonging x x successor 
two successors coincide  accessing point grid achieved
using role description  x y    
note undecidability result closely related known undecidability
idpdl  i e   deterministic propositional dynamic logic intersection  harel        
however  undecidability proof idpdl harel        uses test construct 
available alc    u t
 
f
next  show relativized satisfiability two rather expressive sublanguages
alc    u t
decidable 
f
theorem     relativized satisfiability concept descriptions decidable alc f   t
alc    t u  
proof sketch  cases  tboxes internalized described schild       
baader et al          thus  sufficient show decidability  unrelativized 
satisfiability 
  follows decidability dpdl  ben ari  halpern    pnueli 
alc    t
f
       known correspondence pdl alc    t  schild         fact
non functional roles simulated functional ones presence composition
transitive closure  parikh        
alc    t u   decidability satisfiability follows decidability ipdl  i e   pdl
intersection  danecki        

given theorem  corollary    yields following decidability result 
corollary     relativized satisfiability concept descriptions decidable fusion
alc f   t alc    t u  
    concrete example
description logics concrete domains introduced baader hanschke       
order allow reference concrete objects numbers  time intervals  spatial
regions  etc  defining concepts  precise  baader hanschke       
define extension alc d  alc  concrete domain  see below  
suitable assumptions d  show satisfiability alc d  decidable  one
main problems extension dls relativized satisfiability  and satisfiability dls tboxes internalized  usually undecidable  baader   hanschke 
       though exceptions  see lutz         reason  haarslev et al        
introduce restricted way extending dls concrete domains  show corresponding extension alcn hr  decidable relativized satisfiability problem   
following  show result obtained easy consequence
    precise  even show relativized abox consistency decidable restricted
extension alcn hr  concrete domains  here  restrict ourself satisfiability concepts
since aboxes introduced haarslev et al         allow use concrete individuals
predicate assertions individuals  covered object assertions adss
introduced present paper 

  

fifusions description logics abstract description systems

theorem     moreover  alcn hr  replaced arbitrary local dl
decidable relativized satisfiability problem 
definition     concrete domain   concrete domain pair  d     
nonempty set called domain  set predicate names  predicate
name p associated arity n n ary predicate p nd   concrete
domain called admissible iff     set predicate names closed negation
contains name  d       satisfiability problem finite conjunctions
predicates decidable 
given concrete domain one predicates p  of arity n   one
define new concept constructor f            fn  p  predicate restriction   f            fn
concrete features    contrast abstract features considered now  concrete
features interpreted partial functions abstract domain concrete
domain   consider basic dl allows boolean operators new
concept constructors only 
definition     b d    let nc set concept names nfc set names
concrete features disjoint nc   let admissible concrete domain  concepts
descriptions b d  boolean combinations concept names predicate restrictions  i e   expressions form f            fn  p p n ary predicate
f            fn nfc  
semantics b d  defined follows  consider interpretation i 
nonempty domain   interprets concept names subsets concrete
features partial functions   boolean operators interpreted
usual 
 f            fn  p  i    a   x            xn  
fii  a    xi   n  x            xn   p   
note concept descriptions interpreted subsets  
thus  go ads corresponding b d   concrete domain explicit
part corresponding adms  used define interpretation function
symbols corresponding predicate restrictions  predicate restriction constructor
translated function symbol ff       fn  p arity    and  adm w corresponding
w
frame f 
defined  f            fn  p  i   interpretation based
       fn  p
f maps concept names empty set 
theorem     let admissible concrete domain  then  b d  local
relativized satisfiability problem b d  concept descriptions decidable 
proof  given family  wi  ii adms wi corresponding frames pairwise
disjoint
domains  i i   first build union f frames  domain f

f
interprets concrete features obvious way  i e   f f  x     f  x 
ii
    note general framework introduced baader hanschke        allows feature chains
predicate restrictions  considering feature chains length one main restriction introduced
haarslev et al         

  

fibaader  lutz  sturm    wolter

x   let w adm induced f  tosprove w fact disjoint union
wi
w
 wi  ii   remains show
  ii
  easy consequence
       fn  p
       fn  p
semantics predicate restriction constructor  interpretation concrete
features f  fact domains pairwise disjoint 
decidability unrelativized satisfiability problem immediate consequence
decidability results alc d  given baader hanschke         since b d 
simple dl contain concept constructors requiring generation
abstract individuals  easy see b d  concept description c  satisfiable relative
tbox c  v d            cn v dn iff satisfiable one element interpretation 
tbox internalized simple way  c  satisfiable relative
tbox c  v d            cn v dn iff c  u  c  d    u       u  cn dn   satisfiable 

given theorem  corollary    yields following transfer result  shows
concrete domains restricted form predicate restrictions introduced
integrated local dl decidable relativized satisfiability problem without
losing decidability 
corollary     let admissible concrete domain l local dl
relativized satisfiability concept descriptions decidable  then  relativized satisfiability
concept descriptions b d  l decidable 
    non local dls
proposition     dls allowing nominals  universal role  role negation
local  follows decidability transfer theorems applicable fusions
dls  following  try clarify reasons restricted applicability
theorems 
first  show dls decidable satisfiability problem
fusion undecidable satisfiability problem  culprit case universal
role  or role negation  
theorem     satisfiability concept descriptions decidable alc u alcf 
undecidable fusion alc u alcf 
proof  decidability alcf shown hollunder nutt        alc u
baader et al         goranko passy         undecidability alc u alcf
 which identical alcf u   follows results baader et al         fact
universal role used simulate tboxes  see proposition     

note role negation used simulate universal role  replace u c
r c u r c u c r c r c  addition  decidability alc known
decidable  lutz   sattler         consequently  theorem holds replace
alc u alc  
noted example given theorem depends fact
one two dls allows universal role becomes undecidable
universal role added  fact  corollary    shows decidability transfer
dls already provide universal role 
  

fifusions description logics abstract description systems

concerning nominals  counterexample transfer decidability
presence  however  think unlikely general
transfer result case  fact  note dl l without nominals introduced
section    fusion alco identical l extended nominals  since  relativized 
satisfiability alco decidable  general transfer result case would imply
extension decidable provided l decidable  consequently  would yield
general transfer result adding nominals 

   conclusion
regarding related work  work closely related one presented
 wolter         there  analogs theorems       proved normal modal
logics within algebraic framework  present results extend ones wolter
       two directions  first  added object assertions  thus prove
transfer results abox reasoning  second  show transfer results satisfiability
non normal modal logics long covering normal terms  allows us handle
non normal concept constructors qualified number restrictions  graded modalities 
framework 
think introduction abstract description systems  adss  contribution right  adss abstract internal structure concept constructors
thus allow us treat vast range constructors uniform way  nevertheless  model theoretic semantics provided adss less abstract algebraic
semantics employed wolter         closer usual semantics dls  thus
easier comprehend people used semantics  results paper show
adss fact yield good level abstraction proving general results description logics  recently  notion used proving general results
so called e connections representation formalisms description logics  modal spatial
logics  temporal logics  kutz  wolter    zakharyaschev         contrast fusions 
e connection two domains merged connected means relations 
regarding complexity  transfer results yield upper bounds  basically 
show complexity algorithm fusion one exponent higher
ones components  believe complexity satisfiability
fusion adss indeed exponentially higher complexity satisfiability
component adss  however  yet matching lower bounds  i e   know
example exponential increase complexity really happens 
note spaans results        transfer np pspace decidability
component modal logics fusion restricted normal modal logics 
make additional assumptions algorithms used solve satisfiability problem
component logics  nevertheless  many pspace complete description logics
easy see fusion pspace complete  sense  general techniques
reasoning fusion descriptions logics developed paper give rough
complexity estimate 

  

fibaader  lutz  sturm    wolter

appendix a  proofs
appendix  give detailed proofs criteria  relativized  satisfiability
fusion local adss  recall that  criteria  transfer theorems decidability
easily follow  deferred proofs theorems appendix since
rather technical 
a   proof theorem   
prove theorem  need technical lemma  proof theorem    
going merge models w  m  w  m  means bijective function b
domain w  w  onto domain w  w  way surrogates
suri  t   c       respected b sense
 

w sur   t w   a b w  sur   t w   a

 

w w  c       existence bijection equivalent condi 
 
 
 
tion cardinalities  sur   t w   a   sur   t w   a  sur   t w   a   sur   t w   a
coincide c          t  t  t  c       contains conjunct

 equivalent to  negation conjunct t    hence  t  t    suri  t wi  a

suri  t   wi  a           clearly yields equivalence  following
lemma used choose models way cardinality condition satisfied 
 we refer reader to  e g   gratzer       information cardinals  
lemma     let  l  m  local ads set assertions satisfiable  l  m  

exists aff cardinal that  cardinals     exists model


w   w  f w   rw  w       assignment hw  ai   
 sw a           terms s 



proof  assumption  exists adm w    w    f w    rw  assignment b   hb    b  hw    bi      let   max      w     
show
let     take   disjoint isomorphic copies hw   b  i 

iswas required 

w
w   w   f   r
        ffof hw    b  i   the first member list coincides
w     let w   w  f w   rw disjoint union w         define
hw    ha    a  ii putting a   a    b   a   x  
 
a   x   
b   x  
  

x v   note object variables interpreted w    follows
definitions term semantics disjoint unions
 
sw a  
sw  b  
  
  

terms s  hence  w       hw  ai      remains show  sw a          
every term s  suppose  sw a    
     then         sw a           means
 
w a
   s
  

  

fifusions description logics abstract description systems





noted above  disjointness sets suri  t wi  a suri  t   wi  a  for    t   
required order ensure existence bijection b  precisely  order

merge models w    w    sets suri  t wi  a member relevant subset c     
must form partition wi domain satisfies certain cardinality condition 
formalized following definition 
definition     let cardinal  set  x            xn   called  partition set w
iff
    xi         n 
   xi xj   whenever    j 

   w    in xi  
 x            xn    partition adm w domain w iff  partition w  
proof  enforce properties     hold appropriate constructions 
property   holds definition c      
proving theorem     repeat formulation 
theorem     let si    li   mi            two local adss l  based
set function symbols f relation symbols r  l  based g q 
let l   l  l    m  m    finite set assertions l 
following equivalent 
   satisfiable  l  m  
   exist
 a  set c      
 b  every term object variable   obj   
 c  every obj   term ta d 
union   following sets assertions l  satisfiable
 l    m    
w
 d   at   sur   t    d     v sur    d   
 e   a   sur   ta     obj    

 f    r a  b    r a  b    r r  
 g   sur   t    v sur   t      t  v t     a   sur   s     a   s    
union   following sets assertions l  satisfiable  l    m    
w
 h   at   sur   t    d     v sur    d   
 i   a   sur   ta     obj    

 j   q a  b    q a  b    q q  
  

fibaader  lutz  sturm    wolter

sur   s   w   a

b

 

b

w   a 

sur   s   

sur   s   w   a

 

sur   s   w   a

 

 
 
 

 
 
 

sur   sk  w   a

 
 
 

b

 

sur   sk  w   a

w 

 

w 
figure    mapping b 

proof  start direction          take set c      satisfying
properties listed theorem  take

cardinals

i    ffff      
lemma

     for
ffff
 
 
 li   mi    put   max 
        
take w      a    a  w      a    a 

wi mi wi   ai            lemma           

assume  wi     and   suri  s wi  a         d 

sets  suri  s wi  a   d 
 partitions
wiwfor        since  i 


d   as   suri  s      ii  wi        v suri   d    iii  s  s     s 


implies suri  s wi  a suri  s   wi  a definition c     moreover  obj       obj    
 
 
and  obj     d  a    a  sur   s w   a iff a    a  sur   s w   a  
together fact a   a   injective  implies existence
bijection b w  onto w 
 

 

 b w    w sur   t w   a     sur   t w   a  
d 

b a    a     a    a  

obj      figure    assumed    s            sk    illustrates
mapping b 



define model w   w   f g w    r q w putting
w   w   
f w   f w    f f 
g g arity n z            zn w  
g w  z            zn     b   g w   b z             b zn     
b z     b z    z z  
rw   rw    r r 
qw  x  y  iff qw   b x   b y    q q 
  

fifusions description logics abstract description systems

since m  closed isomorphic copies  hard see w m  m    let
  a    prove implication         theorem remains show
hw  ai      end suffices prove following claim 
claim  terms sub     
 

 

tw a   sur   t w   a   b   sur   t w   a   
prove claim  let us show implies hw  ai      first note that 
claim  obtain
 
tw a   sur   t w   a term   
   
may proved induction construction term   terms sub    
using booleans function symbols l    only  basis induction  i e  
equality members sub      stated claim induction step straightforward 
show hw  ai    consequence      suppose r a  b   
r a  b    thus hw  ai    r a  b   similarly  q a  b  implies q a  b   
 
hw  ai    q a  b   suppose  a   t     a   sur   t     a    a  sur   t w   a
implies       a    a  tw a   hence hw  ai     a   t   t  v t   
sur   t    v sur   t      so       tw a
tw a
  hence hw  ai    t  v t   
 
 
come proof claim  proved induction structure t 
due following equalities holding sub      suffices show tw a  
 
sur   t w   a  
sur   t w   a

 

 

 

 

 sur   s w   a   d  conjunct s 

 

 

 b   sur   s w   a     d  conjunct s 

 

 

  b   sur   t w   a  
w
 
first equality holds since sur    d w   a   w  and  d  either
conjunct s  second equality true definition b validity
thirdwequality seen analogously validity first one considering
 
sur    d w   a   w   
 

hence let us show tw a   sur   t w   a   induction start  let variable 
 
equation tw a   sur   t w   a immediate consequence fact   a   
induction step  distinguish several cases 

  t    induction hypothesis  tw a
  sur   t   w   a    hence  tw a   w   tw a
 
 
 
 
 
w
 a
w
 a
 
 
w   sur   t   
  sur   t 
 since w   w    
  t  t    induction hypothesis  tw a
  sur   ti  w   a          hence 

 
 
 
tw a   tw a
tw a
  sur   t   w   a sur   t   w   a   sur   t w   a  
 
 
  t  t    similar case 
  

fibaader  lutz  sturm    wolter

 

  f  t            tn    induction hypothesis  tw a
  sur   ti  w   a   n  hence 

 
 
 
w a
w a
tw a   f w  t            tn     f w  sur   t   w   a           sur   tn  w   a     sur   t w   a
 since f w   f w    
  g t            tn    case  tw a   b   g w   b tw a
           b tw a
     since 
n
 
 
 
 
w
 a
 
w
 a
 
 
equalities  sur   t 
  b  sur   t 
   remains show sur   t w   a  
 
 
 
g w   b tw a
           b tw a
    since sur   t w   a   g w   sur   t   w   a           sur   tn  w   a   
n
 
 
amounts showing b tw a
    sur   ti  w   a   n  this  however 

follows induction hypothesis together equations 
concludes proof direction         
remains prove direction          suppose hw  ai      w
  ha    a  i  put
   s c        sw a      
note fusion local adls local adl again  hence  l  m  local may
assume  lemma     sets sw a infinite 
take new object name   obj   every let  obj   
 
 
ta    t sub       a   a  tw a    t   sub      a   a    tw a   
prove set assertions   based d  ta   obj      d  satisfiable
 l    m    
w
let f w denote restriction  f g w
symbols f 
r
similarly 

 

w
w
w
 
restriction  rq  symbols r  set w    w  f   r
m      a    a    

a     a   xt   tw a     g t            tk   sub      
a    a    a   a   obj    a    as   sw a   d  note choose
injective function a   sw a infinite  show induction
sur   t w   a    tw a term   

   

let   x variable  x surrogate  a    x    a   x   induction
step  distinguish several cases 
inductive steps   t      t  t      t  t      f  t            tn    f f 
identical corresponding cases proof equation    occurs
direction     implies     above 
  g t            tn    g g  sur   t    xt   hence a    xt     tw a
equation proved 






equation   
obtain
w    a         prove w    a     r a  b  whenever

r a  b    w    a     sur   t    v sur   t    whenever sur   t    v sur   t       
remaining formulas   left

theffreader  suppose r a  b      r a  b 
hw  ai    r a  b   hence w    a     r a  b   suppose sur   t    v sur   t       
  

fifusions description logics abstract description systems

t w a   equation   
t  v t    hence hw  ai    t  v t  means tw a
 



 
 
sur   t   w   a sur   t   w   a means w    a     sur   t    v sur   t    
construction model m  satisfying   similar left reader 

a   proof theorem   
proof theorem     fix two local adss si    li   mi           
l  based set function symbols f relation symbols r  l  based
g q  let l   l  l    m  m    assume s  s  covering
normal terms 
similarly done previous section  merge models means
 
bijections map points sets sur   t w   a points corresponding sets
 
sur   t w   a   finite set object assertions l  let    denote set
c    term satisfiable  l  m   for          ensure
merging models succeeds  must enforce elements          
form  partitions  for appropriate   models merged       
captured following lemma  explicitly stating dual lemma     
omitted brevity 
lemma     let finite set object assertions l  cardinal satisfying
conditions lemma     l  m                 
   exists model w m  assignment
 sur   s w a      
   partition w 
   exists model w m  assignment
 sur   s w a      
   partition w 
proof     definition         find model ws
assignment sws  as      since fusion two local adss local 
set models closed disjoint unions  hence  exists model w 
assignment a  sw   a         follows set
     d as         satisfiable
e  l  m   lemma     thus exists model
 
 
 
 
w
w
w   w    f g     r q 
assignment a  w    a      
 

 

 sw  a          partition w     let w denote restriction w  l 
define
 
 
a    a    xt   tw  a     g t            tk   sub      
 

 

hw  ai required  prove note sur   t w a   tw  a term   
   similar left reader 

  

fibaader  lutz  sturm    wolter

repeat formulation theorem proved 
theorem     let si    li   mi            two local adss covering normal
terms l  based set function symbols f relation symbols r 
l  based g q  let l   l  l    m  m    let finite set
object assertions l  put    df     r    dg     let c x   d x   covering
normal term function symbols f  g  
        denote set c    term satisfiable
 l  m   following three conditions equivalent 
   satisfiable  l  m  
   exist
every   object variable   obj  
every obj   term ta  
union   following sets object assertions satisfiable
 l    m    
w
 at   sur   t cm  sur               
w
 a   sur   ta cm  sur           obj    
 r a  b    r a  b    r r  
 a   sur   s     a   s    
union   following sets object assertions satisfiable  l    m    
w
 at   sur   t dr  sur               
w
 a   sur   ta dr  sur           obj    
 q a  b    q a  b    q q  

   condition     above    replaced    
start proof direction                  proofs
dual
onlyff give proof          suppose hw  ai     

other 
w
w   w   f g     r q w   lemma     assume that  every    
 tw a   infinite  take new object name   obj   every   let 
obj   
 
 
ta    t sub       a   a  tw a    t   sub      a   a    tw a   
prove set   assertions based ta   obj          satisfiable
 l    m     the proof rather similar proof direction        
proof theorem      let f w  resp  g w   denote restriction  f g w symbols
f  resp  g   similarly  rw
qw theffrestrictions
 r q ffw symbols
r q  respectively  set w    w  f w   rw m    a    a     a    
a     a   xt   tw a     g t            tk   sub      
  

fifusions description logics abstract description systems

a    a    a   a   obj    a    at   tw a      we choose injective
function a   since sets tw a infinite  
corresponding part proof theorem     show induction
sur   t w   a    tw a term   



let us see w    a       follows
r a  b   

equation 

     r a  b   hw  ai   
r a 
b 




hw 
ai
  
r a 
b  
hence
w
 


   ff
w
w
           by definition


  
hence
w       sur            so 
 



w
definition cm   w    a      cm  sur               remains observe
a    a  sur   ta  w   a  obj    a    a  sur   s w   a  whenever  a   s   
a    at   sur   t w   a     
construction model m  satisfying   similar left reader 
remains show implications                  similar 
concentrate first  proof theorem    possible construct
required model merging models       situation different here 
possible w
merge models  
w   one step  since know whether
satisfy sur            sur            
w respectively  know
w
satisfy approximations   sur   s  cm  sur           sur   s  dr  sur         
respectively      merge models type distinguish various
pieces models add new pieces well  define pieces need
technical claim  proof theorem     take cardinals          lemma   
 li   mi   put   max         
claim    suppose     holds 



 a  exist w    w    f w   rw m    assignment   ha    a  w   
sequence x            xm subsets w 
 a   a   a  xm   obj     
 a   hw    ai       
 a   xn   xn cw   xn      n   m 
 a   set  sur   s w   a xm        partition xm  
 a   sets
 sur   s w   a  xn xn          
 partitions xn xn       n   m 
 a    w  x       



 b  exist w    w    g w   qw m    assignment b   hb    b  i  sequence
y            yr subsets w 
 b   b   a  yr   obj     
 b   hw    bi       
  

fibaader  lutz  sturm    wolter

a    w  x 
a    x   x  

  
 

  
 

am    xm  xm 
am    xm  xm
xm

w 
figure    sets xi  

 b   yn   yn dw   yn      n   r 
 b   set  sur   s m a yr        partition yr  
 b   sets
 sur   s m a  yn yn          
 partitions yn yn       n   r 
 b    w  y       
figure   illustrates relation sets xi    we set ai   xi xi      
a    w
w  x     intuitively  xm set points know points
w  sur       w   a far away  xm  possibly less far away 
xm  possibly even less far  w
xi        finally  members a 
even known whether sur       w   a not  note object names
interpreted xm   come formal construction sets xi  
proof claim    prove  a   part  b  proved
andffleft reader 

similarly
w

assumption lemma     find adm wa   wa   f   rwa m   wa    
assignment aa   haa    aa  hwa   aa       
let
 
zn    cn  sur         wa  aa  
 
n m  lemma
       take every n   n adm

wn   wn   f wn   rwn m  assignments
n

 sur   s wn  a      
  

fifusions description logics abstract description systems

 partitions wn  



take disjoint union w  with w   w  f w   rw   wn     n m  wa  
define   ha    a  w putting
 
a   x    aa   x 
ai   x  
 im

set variables x a   b    aa   b   object variables b  let    n m 
 
xn   zn
wi  
nim

show hw  ai sets xn     n m  required 
 a   hwa   aa      a   b    aa   b  zm b obj      hence
a   b  xm   zm wm b obj     
 a   definition disjoint unions hwa   aa       
 a   firstly  have  definition cn since cw monotone  it distributes
intersections  
zn   zn cw  zn   xn cw  xn   
   
secondly  definition disjoint unions  first property covering normal
terms  since cw monotone
 
 
 
 
wi
wi
wi cw  
wi   xn cw xn  
   
n  im

nim

nim

nim

        obtain
xn     zn  

 

wi xn cw xn  

   

n  im

 a   show three properties definition    satisfied  since
 sur   s wm  am      
 partition wm    sur   s wm  am         implies
property   since sur   s w a wm   sur   s wm  am   wm xm    xm    
property   immediate consequence definition     property   
show that  w xm   w sw a     fix w xm  
distinguish two cases  firstly  assume w wm   then  fact  sur   s wm  am  
     partition wm   clear
w exists   required 
 sur      wa  aa   definition cm t 
secondly  assume
w

z
 
 c

 
 
w
w  sur        wa  aa w sur   s w a    
 a   proof similar property  a   
  

fibaader  lutz  sturm    wolter

 a   definition 
finishes proof claim   
suppose
e

e

w    w    f w    rw    a  xm           x  w    w    g w    qw    b  yr           y 
satisfying properties listed claim    may assume
 w  xm    w  yr      
using appropriate bijection b xm onto yr may assume xm   yr  
a   a    b   a  object variables obj     
sur   s w   a xm   sur   s w   b xm    

   

follows fact object variables mapped a  b  xm
yr   a     b     respectively  injectivity mappings a  b    conditions
 a    b   state  sur   s w   a xm        sur   s w   b yr      
form  partitions xm   yr   abbreviations useful  set
ai   xi xi         m 
bi   yi yi         r 
a    w  x    b    w  y   
far merged xm  part w  yr  part w    remains take care
sets ai       m  bi       r  sets ai merged new
models wi m  sets bi merged new models vi m    thus 
final model obtained merging disjoint union w  wi      
disjoint union w  vi       r  figure   illustrates merging 
figure  assume      s            sk   
course  merging ai      new model wi respect partition
 sur   t w   a ai      
ai   merging bi      new model vi respect partition
 sur   t w   b bi      
bi   note a  b  partition
care
take
e of  proceed



w
w
formal construction  find models w   ai   g   q
m  assignments

iff

b   b    b         that      




sur   s w  b   sur   s w   a ai    
follows  a     a    lemma        
  

   

fifusions description logics abstract description systems

xm am 

   

a  a  vr 

   

v  v 

sur   s   

 
 
 

   

   

   
wm       

   
   

sur   sk  

yr

w  w  br 

b  b 

sur   s   

 
 
 

   

    

sur   sk  
figure    bijection 


e


find  using  b     b    lemma         models vi   bi   f v   rv m 



assignments ai   ai    ai      r    that    r   




sur   s v  a   sur   s w   b bi    
let

   


e
 
 
w     w   w  yr    f w    rw  m 

disjoint union vi       r  w    let

e
 
 
w     w   w  xm    g w    qw  m 
disjoint union wi       m  w    assume xm   yr
domain adms
w  w   

define model w   w   f g w    r q w based w   w  w  putting
 

rw   rw   
 

f w   f w   
 

qw   qw   
 

g w   g w   
  

fibaader  lutz  sturm    wolter

define assignment c   hc    c  w putting
c   a    a   a    b   a    obj     

c   x    a   x   i r ai   x   set variables x term   

notice c   x    b   x   i m b i  x   set variables x term   
c   xt     a   xt  



c   xt     b   xt  



 i r

ai   xt      g t            tk   sub     


 i m b   xt   

  f  t            tk   sub     

show hw  ci      firstly  however  make list relevant properties
hw  ci 
claim   
 c   c   a  xm   yr   obj   
 c   hw  ci         
 c   sur   t w c  x  y      sur   t w c  x  y        
 c   sur   s w c  x  y      sur   s w c  x  y     sub     
 c   xn   xn cw  xn      n   m 
 c   yn   yn dw  yn      n   r 
 c   g g arity l    n   m  c            cl w  
g w  c            cl   xn   g w  c  xn           cl xn   xn  
 c   f f arity l    n   r  c            cl w  
f w  c            cl   yn   f w  c  yn           cl yn   yn  
proof claim     c   follows  a    b   construction hw  ci   c   follows
 a    b     c   follows construction hw  ci equations          
      c   follows  c     c    c   follow  a  

 b    ffrespectively  remains
prove  c    c     c   follows fact w  gw disjoint union
structures based xn w xn     n   m   c   dual  c    claim  
proved 
show hw  ci      end first show following 
claim    k    k    k    k  r sub     df  s  k 
dg  s  k  have  z  xk    yk    
z sm c   z sur   s m c   z sur   s m c  
  

fifusions description logics abstract description systems

proof claim     c   suffices prove first equation  proof induction
cardinal k    k    induction base k    k      follows sur   s    sur   s 
df  s    dg  s      
suppose claim proved xk   yk  k m  k   r k   k     k    k   
prove claim xk    yk    proof induction construction terms
df  s  k  dg  s  k    boolean cases trivial 
suppose   f  s            sl   df  s  k  dg  s  k    show
following two statements 
 i  xk  sw c   xk  sur   s m c  
 ii  yk  sw c   yk  sur   s m c  
consider  i  first  induction hypothesis yields
xk    sw c
  xk    sur   si  w c

  l 
xk    cw  xk      sw c   xk    cw  xk      f w  s w c           slw c  
  xk    cw  xk      f w  sur   s   w c           sur   sl  w c  
  xk    cw  xk      sur   s w c  
second equation immediate consequence third property covering normal
terms given definition     equation follows  c    i e  xk  xk   
cw  xk        i  proved 
 ii  suppose first k    r  yk    xm claim proved
since xm xk  and  induction hypothesis  xk    sw c
  xk    sur   si  w c  

  l 
assume k    r  induction hypothesis 
yk  sw c
  yk  sur   si  w c  

  l  hence
          yk  sw c
    f w  yk  sur   s   w c           yk  sur   sl  w c   
f w  yk  sw c
 
l
intersect sides equation yk  derive help  c   
yk  f w  sw c
          sw c
    yk  f w  sur   s   w c           sur   sl  w c   
 
l
means yk  sw c   yk  sur   s w c   equation follows  statements
proved 
case   g s            sl   dual left reader  proved claim   
induction  c f  proof theorem    proof     corresponding
claim   obtain claim   
xm sw c   xm sur   s m c term   
  

   

fibaader  lutz  sturm    wolter

let us see hw  ai    follows      distinguish three cases  suppose r a  b 
  r a  b    therefore hw  ci    r a  b   similarly  q a  b  implies
q a  b    hw  ci    q a  b   suppose  a   t     a   sur   t     so 
 c    c   a  sur   t w c implies       c   a  tw c   hence hw  ci     a   t  
finishes proof theorem    

references
areces  c   blackburn  p     marx  m          computational complexity hybrid
temporal logics  logic journal igpl                
baader  f          augmenting concept languages transitive closure roles  alternative terminological cycles  proc    th int  joint conf  artificial
intelligence  ijcai    
baader  f   burckert  h  j   hollunder  b   nutt  w     siekmann  j  h          concept
logics  lloyd  j  w   ed    computational logics  symposium proceedings  pp 
        springer verlag 
baader  f   burckert  h  j   nebel  b   nutt  w     smolka  g          expressivity
feature logics negation  functional uncertainty  sort equations  j  logic 
language information         
baader  f     hanschke  p          schema integrating concrete domains concept
languages  proc    th int  joint conf  artificial intelligence  ijcai    
pp         
baader  f     hanschke  p          extensions concept languages mechanical engineering application  proc    th german workshop artificial intelligence
 gwai     vol      lecture notes computer science  pp          bonn  germany   springer verlag 
baader  f     hollunder  b          terminological knowledge representation system
complete inference algorithm  proc  workshop processing declarative
knowledge  pdk     vol      lecture notes artificial intelligence  pp       
springer verlag 
baader  f     sattler  u          expressive number restrictions description logics  j 
logic computation                
ben ari  m   halpern  j  y     pnueli  a          deterministic propositional dynamic logic 
finite models  complexity  completeness  j  computer system sciences 
           
berger  r          undecidability dominoe problem  mem  amer  math  soc  
        
borgida  a          description logics data management  ieee trans  knowledge
data engineering                
brachman  r  j   mcguinness  d  l   patel schneider  p  f   alperin resnick  l     borgida 
a          living classic  use kl one like language 
  

fifusions description logics abstract description systems

sowa  j  f   ed    principles semantic networks  pp          morgan kaufmann 
los altos 
brachman  r  j     schmolze  j  g          overview kl one knowledge representation system  cognitive science                
bresciani  p   franconi  e     tessaris  s          implementing testing expressive description logics  preliminary report  proc       description logic workshop
 dl     pp         
calvanese  d   de giacomo  g     lenzerini  m          reasoning expressive description
logics fixpoints based automata infinite trees  proc    th int 
joint conf  artificial intelligence  ijcai     pp       
calvanese  d   de giacomo  g     rosati  r          note encoding inverse roles
functional restrictions alc knowledge bases  proc       description logic
workshop  dl     pp        ceur electronic workshop proceedings  http   ceurws org vol     
chellas  b  f          modal logic  cambridge university press  cambridge  uk 
danecki  r          nondeterministic propositional dynamic logic intersection
decidable  proc   th symp  computation theory  vol      lecture
notes computer science  pp        springer verlag 
de giacomo  g          decidability class based knowledge representation formalisms 
ph d  thesis  dipartimento di informatica e sistemistica  universita di roma la
sapienza 
de giacomo  g     lenzerini  m       a   boosting correspondence description
logics propositional dynamic logics  proc    th nat  conf  artificial
intelligence  aaai     pp          aaai press the mit press 
de giacomo  g     lenzerini  m       b   concept language number restrictions
fixpoints  relationship  calculus  proc    th eur  conf 
artificial intelligence  ecai     pp         
de giacomo  g     lenzerini  m          whats aggregate  foundations description logics tuples sets  proc    th int  joint conf  artificial
intelligence  ijcai     pp         
donini  f  m   hollunder  b   lenzerini  m   spaccamela  a  m   nardi  d     nutt  w 
        complexity existential quantification concept languages  artificial
intelligence             
donini  f  m   lenzerini  m   nardi  d     nutt  w          tractable concept languages 
proc    th int  joint conf  artificial intelligence  ijcai     pp         
sydney  australia  
donini  f  m   lenzerini  m   nardi  d     nutt  w          complexity concept
languages  information computation           
donini  f  m   lenzerini  m   nardi  d     schaerf  a          deduction concept languages  subsumption instance checking  j  logic computation        
       
  

fibaader  lutz  sturm    wolter

dosen  k          duality modal algebras neighbourhood frames  studia
logica             
fine  k     schurz  g          transfer theorems stratified modal logics  copeland 
j   ed    logic reality  essays pure applied logic  memory arthur
prior  pp          oxford university press 
fischer  m  j     ladner  r  e          propositional dynamic logic regular programs 
j  computer system sciences             
gabbay  d  m          fibring logics  vol     oxford logic guides  clarendon press 
oxford 
gargov  g     goranko  v          modal logic names  j  philosophical logic     
       
goldblatt  r  i          varieties complex algebras  annals pure applied logic 
           
goranko  v     passy  s          using universal modality  gains questions  journal
logic computation             
gratzer  g          universal algebra  springer verlag  new york 
haarslev  v   moller  r     wessel  m          description logic alcn hr  extended
concrete domains  practically motivated approach  proceedings international joint conference automated reasoning ijcar    lecture notes
artificial intelligence  springer verlag 
harel  d          dynamic logic  handbook philosophical logic  vol     pp         
d  reidel  dordrecht  holland  
hollunder  b     baader  f          qualifying number restrictions concept languages 
tech  rep  rr        deutsches forschungszentrum fur kunstliche intelligenz  dfki  
kaiserslautern  germany   abridged version appeared proc   nd int 
conf  principles knowledge representation reasoning  kr    
hollunder  b     nutt  w          subsumption algorithms concept languages  tech  rep 
rr        deutsches forschungszentrum fur kunstliche intelligenz  dfki   kaiserslautern  germany  
horrocks  i          using expressive description logic  fact fiction   proc 
 th int  conf  principles knowledge representation reasoning  kr    
pp         
horrocks  i     sattler  u          description logic transitive inverse roles
role hierarchies  j  logic computation                
horrocks  i   sattler  u     tobies  s          practical reasoning expressive description logics  j  interest group pure applied logic                
jonsson  b     tarski  a          boolean algebras operators  i  american journal
mathematics             
jonsson  b     tarski  a          boolean algebras operators  ii  american journal
mathematics             
  

fifusions description logics abstract description systems

knuth  d  e          art computer programming  vol     addison wesley  mass 
kracht  m     wolter  f          properties independently axiomatizable bimodal logics 
journal symbolic logic                   
kutz  o   wolter  f     zakharyaschev  m          connecting abstract description systems 
submitted  available http   www informatik uni leipzig de wolter  
levesque  h  j     brachman  r  j          expressiveness tractability knowledge
representation reasoning  computational intelligence          
lutz  c          reasoning concrete domains  dean  t   ed    proc    th
int  joint conf  artificial intelligence  ijcai     pp        stockholm  sweden 
morgan kaufmann  los altos 
lutz  c          interval based temporal reasoning general tboxes  proc 
  th int  joint conf  artificial intelligence  ijcai        pp       
lutz  c     sattler  u          mary likes cats  proc       description
logic workshop  dl        pp          ceur electronic workshop proceedings 
http   ceur ws org vol     
nebel  b          computational complexity terminological reasoning back  artificial
intelligence                 
nebel  b          terminological reasoning inherently intractable  artificial intelligence 
           
parikh  r          propositional logics programs  systems  models complexity 
proc   th acm sigact sigplan symp  principles programming languages  popl     pp          las vegas  usa  
prior  a  n          past  present future  oxford university press 
sattler  u          concept language extended different kinds transitive roles 
gorz  g     holldobler  s   eds    proc    th german annual conf  artificial
intelligence  ki     no       lecture notes artificial intelligence  pp         
springer verlag 
schaerf  a          complexity instance checking problem concept languages
existential quantification  j  intelligent information systems            
schaerf  a          reasoning individuals concept languages  data knowledge
engineering                 
schild  k          correspondence theory terminological logics  preliminary report 
proc    th int  joint conf  artificial intelligence  ijcai     pp         
schmidt schau  m          subsumption kl one undecidable  brachman  r  j  
levesque  h  j     reiter  r   eds    proc   st int  conf  principles
knowledge representation reasoning  kr     pp          morgan kaufmann 
los altos 
schmidt schau  m     smolka  g          attributive concept descriptions complements  artificial intelligence              
  

fibaader  lutz  sturm    wolter

spaan  e          complexity modal logics  ph d  thesis  department mathematics
computer science  university amsterdam  netherlands 
van der hoek  w     de rijke  m          counting objects  j  logic computation 
              
wolter  f          fusions modal logics revisited  kracht  m   de rijke  m   wansing  h     zakharyaschev  m   eds    advances modal logic  pp          csli
publications 
woods  w  a     schmolze  j  g          kl one family  lehmann  f  w   ed   
semantic networks artificial intelligence  pp          pergamon press  published
special issue computers   mathematics applications  volume     number
   

  


