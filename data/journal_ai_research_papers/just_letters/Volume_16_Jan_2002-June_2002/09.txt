journal of artificial intelligence research                  

submitted        published     

collective intelligence  data routing and braess  paradox

david h  wolpert

nasa ames research center  mailstop      
moffett field  ca      

kagan tumer

nasa ames research center  mailstop      
moffett field  ca      

dhw ptolemy arc nasa gov
kagan ptolemy arc nasa gov

abstract

we consider the problem of designing the the utility functions of the utility maximizing
agents in a multi agent system  mas  so that they work synergistically to maximize a global
utility  the particular problem domain we explore is the control of network routing by
placing agents on all the routers in the network  conventional approaches to this task have
the agents all use the ideal shortest path routing algorithm  ispa   we demonstrate that
in many cases  due to the side effects of one agent s actions on another agent s performance 
having agents use ispa s is suboptimal as far as global aggregate cost is concerned  even
when they are only used to route infinitesimally small amounts of trac  the utility
functions of the individual agents are not  aligned  with the global utility  intuitively
speaking  as a particular example of this we present an instance of braess  paradox in
which adding new links to a network whose agents all use the ispa results in a decrease
in overall throughput  we also demonstrate that load balancing  in which the agents 
decisions are collectively made to optimize the global cost incurred by all trac currently
being routed  is suboptimal as far as global cost averaged across time is concerned  this
is also due to  side effects   in this case of current routing decision on future trac  the
mathematics of collective intelligence  coin  is concerned precisely with the issue of
avoiding such deleterious side effects in multi agent systems  both over time and space 
we present key concepts from that mathematics and use them to derive an algorithm
whose ideal version should have better performance than that of having all agents use
the ispa  even in the infinitesimal limit  we present experiments verifying this  and also
showing that a machine learning based version of this coin algorithm in which costs are
only imprecisely estimated via empirical means  a version potentially applicable in the real
world  also outperforms the ispa  despite having access to less information than does the
ispa  in particular  this coin algorithm almost always avoids braess  paradox 
   introduction

there is a long history of ai research on the design of distributed computational systems 
stretching from distributed ai  huhns        through current work on multi agent systems
 mas s   claus   boutilier        hu   wellman      a  jennings  sycara    wooldridge 
      sandholm  larson  anderson  shehory    tohme        sycara         when the
individual agents in such a system each have personal utility functions they are trying to
maximize and we also have a  world utility  that rates the possible dynamic histories of
the overall system  such a mas constitutes a  collective   in this paper we are particularly
concerned with agents that use machine learning techniques  e g   reinforcement learning

c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fiwolpert   tumer
 rl  kaelbing  littman    moore        sutton   barto        sutton        watkins  
dayan        to try to maximize their utilities 
the field of collective intelligence  coin  is concerned with the central design problem
for collectives  wolpert  tumer    frank        wolpert   tumer         how  without
any detailed modeling of the overall system  can one set utility functions for the individual
agents in a coin so that the overall dynamics reliably and robustly achieves large values
of the provided world utility  in other words  how can we leverage an assumption that
our learners are individually fairly good at what they do  to have the collective as a whole
perform well   
an example of where this question looms very large is the problem of how to optimize the
ow of certain entities  e g   information packets  cars  from sources to destinations across
a network of routing nodes  here we are concerned with the version of the problem in
which  optimization  consists of minimizing aggregate cost incurred by the entities owing
to their destinations  and where an agent controls the routing decisions of each node in
the network  this problem underlies the distributed control of a large array of real world
domains  including internet routing  voice video communication  trac ows  etc  from
the coin perspective  the problem reduces to the question of what goals one ought to
provide to each router s agent so that each agent s self interestedly pursuing its own utility
results in maximal throughput of the entire system   incentive engineering   
in this paper we investigate the application of recently developed coin techniques 
to this routing domain  like all work concerning coins  these techniques are designed
to be very broadly applicable  and in particular are not designed for the routing domain 
accordingly  their performance in this domain serves as a good preliminary indication of
their more general usefulness 
to ground the discussion  we will concentrate on the telecommunications data routing
problem where the entities being routed are packets  currently  many real world algorithms
for this problem are based on the shortest path algorithm  spa   in this algorithm each
routing node in the network is controlled by an agent who maintains a  routing table  of the
 shortest paths   i e   sequences of links having minimal total incurred costs  from its node
to each of the possible destination nodes in the net  then at each moment the agent satisfies
any routing requests for a particular destination node by sending all its packets down the
associated shortest path  many ideal spa  ispa  algorithms exist for eciently computing
the shortest path when agent to agent path cost communication is available and the costs
for traversing each agent s node are unvarying in time  e g   dijkstra s algorithm  ahuja 
magnanti    orlin        bertsekas   gallager        deo   pang        dijkstra        
if a non infinitesimal amount of trac is to be routed to a particular destination at some
moment by some agent  then that agent s sending all that trac down a single path will
not result in minimal cost  no matter how that single path is chosen  however if it must
choose a single path for all its trac  and if the routing decisions by all other agents are
fixed  then tautologically by using the ispa the agent chooses the best such path  as far as
the trac it is routing is concerned  accordingly  in the limit of routing an infinitesimally
   the lack of detailed modeling ensures that we do not face the problems of  brittleness  that sometimes
accompany mismatch between the real world and the assumptions concerning it built into non adaptive 
 hard wired  agents in large mas s  in turn  this lack of modeling is what causes us to concentrate on
adaptive  rl based agents 

   

ficollective intelligence  data routing and braess  paradox
small amount of trac  with all other agents  strategies being a  background   the ispa is
the optimal  least aggregate incurred cost  routing strategy for the trac of the associated
single agent considered individually 
one might hope that more generally  if the agent must allot all of its trac to a single
path and all other agents  trac decisions are fixed  then its choosing that path via the
ispa would be the choice that minimizes total incurred cost of all trac across the net  at
least in the limit of infinitesimally little trac  this is not the case though  because in using
the spa the agent is not concerned with the deleterious side effects of its actions on the
costs to the trac routed by other agents  korilis  lazar    orda      a  wolpert et al  
       the problem is made all the worse if the other agents are allowed to change their
decisions in response to our agent s decision  in the extreme case  as elaborated below  if
all agents were to try to minimize their personal costs via ispa s  then the agents would
actually all receive higher cost than would be the case under an alternative set of strategies 
this is an instance of the famous tragedy of the commons  toc   hardin        
deleterious side effects need not be restricted to extend over space  they can also extend
over time  indeed  consider the algorithm of having all agents at a given moment make
routing decisions that optimize global cost incurred by the trac currently being routed 
an algorithm often called  load balancing   lb   heusse  snyers  guerin    kuntz        
by definition  lb avoids the deleterious side effects over space that can result in the toc
for the costs incurred by the trac currently being routed  however  due to side effects
over time  even conventional lb can be suboptimal as far as global cost averaged across
time is concerned  intuitively  one would have to use  load balancing over time  to ensure
truly optimal performance  so even if one could somehow construct a distributed protocol
governing the the agents that caused them to implement lb  still one would not have
gotten theme to all act in a perfectly coordinated fashion  such diculties make this an
appropriate domain in which to investigate how well coin techniques work in practice 
real world spa s  rspa  work by applying an ispa to the estimated costs for traversing
each path of every agent  typically those estimates will be in error because agent to agent
communication is not instantaneous  and therefore routing tables may be based on out of
date information  more generally though  even if that communication were instantaneous 
the cost to traverse an agent s node may be different by the time the packet arrives at
that node  accordingly  in general the performance of rspa s is bounded above by that
of the associated ispa  in this paper we do not wish to investigate such topics  but rather
to highlight the issue of side effects  accordingly we  rig the game  in our experimental
comparisons in favor of the spa  by using ispa s rather than rspa s 
in general  even without side effects  determining the optimal solution to a ow problem
 e g   determining what the loads on each link need to be to maximize throughput on a
non cooperative data network  can be nontractable  ahuja et al         orda  rom    sidi 
    b   therefore  we will concern ourselves with providing good solutions that avoid the
diculties the ispa has with side effects  it is not our aim here to present algorithms
that find the best possible  perfectly load balanced over time  solution  previous work on
using machine learning to improve routing has sometimes resulted in better performance
than  non idealized  spa s  littman   boyan        boyan   littman        stone       
marbach  mihatsch  schulte    tsisiklis         that work has not grappled with the
central coin design problem however 
   

fiwolpert   tumer
in section   we discuss spa s deficiencies and in particular their manifestations in
braess  paradox  then  in section   we present the theory of collective intelligence  an
approach that promises to overcome those deficiencies  we then discuss the routing model
we will use in our experiments  and show how the theory of coins can be applied to that
model to provide an alternative to shortest path algorithms in section    in section  
we present simulation results with that model comparing ispa to coins  these results
demonstrate that in networks running ispa  the per packet costs can be as much as   
  higher than in networks running algorithms based on coin theory  in particular  even
though it only has access to imprecise estimates of costs  a handicap that does not hold for
ispa   the coin based algorithm almost always avoids braess  paradox  in stark contrast
to the ispa  in that the cost incurred with ispa s is presumably a lower bound on that
of an spa not privy to instantaneous communication  the implication is that coins can
outperform such real world spa s  we conclude that the techniques of the field of collective
intelligence can be highly effective in designing the utility functions of the members of a mas
to ensure they work in a coordinated and ecient manner to optimize overall performance 
   suboptimality of shortest path routing and braess paradox

in this section we first demonstrate the suboptimality of an spa when we have multiple
agents making simultaneous routing decisions  where no agent knows ahead of time the
other s choice  and therefore does not know ahead of time exactly what the costs will be 
we then demonstrate that such suboptimality can hold even when only one agent is making
a decision  and it knows what decisions the others have previously made  next we present
braess  paradox  a particularly pointed instance of these effects  for other discussion of
braess  paradox in spa routing  see bass        cohen   kelly        cohen   jeffries 
      hogg        glance   hogg        korilis  lazar    orda        

    suboptimality of spa
perhaps the simplest example of how individual greed on the part of all agents can lead
to their collective detriment occurs when two agents determine that their shortest path is
through a shared link with a limited capacity  while both have a second option that is slightly
less preferable  in such a case  their using the common link degrades the performance of
both parties  since due to limited capacity the performance of that link will quickly fall
below that of their second option 
more precisely  consider the case where the shared link has a cost given by x  when
traversed by x packets  and where each router has an optional second link to the destination
where the cost for trac x to traverse such a second link is  x  acting alone  with a single
packet to send  they would both send that packet through the shared link  cost of    
however by both doing so  they incur a larger cost  cost of    than if they had both used
their second choices  cost of     without knowing what each other will do ahead of time
 information not conventionally contained in routing tables   the agents will necessarily
have mistaken cost estimates and therefore make incorrect routing decisions  in this  even
in the limit of differentially small packets  use of spa will lead to a wrong routing decision 
   

ficollective intelligence  data routing and braess  paradox
    suboptimality of ispa
we now analyze a situation where the routers may know what the loads are but are each
acting to optimize the delays experienced by their packets alone  consider the network
shown in figure    two source routers x and y each send one packet at a time  with x
sending to either intermediate router a or b   and y sending to either b or c   this type
of network may arise in many different topologies as a subnetwork  accordingly  diculties
associated with this network can also apply to many more complex topologies 

y
jj
j

y



 jj

 j

a

b

jj




jj 


j
y

y

c

jj

x

jj 


j
y












y

figure    independent decisions at the source
let xa   xb   yb   and yc   be the packet quantities at a particular fixed time t  at a  b  
or c   and originating from x or y   as indicated  at t  each source has one packet to send 
so each of our variables is binary  with xa   xb   yb   yc      have vi  zi   be the cost 
per packet  at the single instant t  at router i  when the total number of packets at that
instant on that router is zi   so the total cost incurred by all packets at the time t  g  x   y  
equals xa va  xa      xb   yb  vb  xb   yb      yc  vc  yc   
in an ispa  x chooses which of xa or xb     so as to minimize the cost incurred by
x s packet alone  gx   x   xa va  xa     xb vb  xb   yb    in doing this the ispa ignores the
yb vb  xb   yb   term  i e   it ignores the  side effects  of x  s decision  real world spa s
typically try to approximate this by having x choose either a or b according to whether
va     or vb  yb   is smaller  where those two values can be estimated via pings  for example 
the right thing to do from the point of view of minimizing the global cost of course
is instead to have x minimize g  x   y   or more precisely  the components of g  x   y  that
depend on x   writing it out for this case  x ought to act to minimize xa va  xa      xb  
yb  vb  xb   yb    due to the constraint that xa   xb      this means sending down a iff
va        yb     vb  yb      yb vb  yb    which differs from the ispa result in that x is
concerned with the full cost of going through router b   not just the portion of that cost
that its packet receives 
in the context of this example  this g minimizing algorithm constitutes  load balancing 
 lb   note that so long as sgn va     vb  yb   yb vb   yb       sgn va     vb  yb     even
in the limit of infinitesimally small trac  so that xa   xb equals some infinitesimal   
ispa and lb still disagree  lb considers side effects of current routing decisions on other
trac currently being routed  however because it does not consider side effects of routing
decisions on future trac  even lb may not optimize global cost averaged across all time 
   

fiwolpert   tumer
depending on the details of the system  however through the use of  effect sets  coins
can account even for such delayed side effects   

    braess  paradox
let us conclude this section with an illustration of braess  paradox  bass        cohen
  kelly        cohen   jeffries        glance   hogg        hogg        korilis  lazar 
  orda      b  korilis et al          a phenomenon that dramatically underscores the
ineciency of the ispa  this apparent  paradox  is perhaps best illustrated through a
highway trac example first given by bass  bass         there are two highways connecting
towns s and d  the cost associated with traversing either highway  either in terms of tolls 
or delays  is v    v    as illustrated in net a of figure    so when x      a single traveler  for
either path  total accrued cost is    units  if on the other hand  six travelers are split equally
among the two paths  they will each incur a cost of    units to get to their destinations  now 
suppose a new highway is built connecting the two branches  as shown in net b in figure   
further  note that the cost associated with taking this highway is not particularly high  in
fact for any load higher than    this highway has a lower cost than any other highway in the
system   the benefit of this highway is illustrated by the dramatically reduced cost incurred
by the single traveler  by taking the short cut  one traveler can traverse the network at a
cost of    units    v    v     adding a new road has seemingly reduced the traversal cost
dramatically 

v 

v 

 y
bdb
 
 
bb
y 
 
byv 

v 

y
bb
 yv 
 
bb   
b 
ys

v 

net a
figure    hex network with v      x  

 ybdb
 
 
bb
 y 
byv 

v 

y



yb
 yv 
bb
 
bb ys  
v 

net b
       x  

v 

       x

however consider what happens when six travelers are on the highways in net b  if
each agent uses an ispa  then at equilibrium each of the three possible paths contains two
travelers   due to overlaps in the paths however  this results in each traveler incurring a
cost of    units  which is higher than than what they incurred before the new highway was
built  the net effect of adding a new road is to increase the cost incurred by every traveler 
this phenomenon is known as braess  paradox 
   a detailed discussion and proof of the suboptimality of lb is shown in appendix a  since lb is not
used in current systems and is hard to imagine ever being used  our experiments do not consider it  it is
discussed here for pedagogical reasons 
   we have in mind here the nash equilibrium for this problem  where no traveler  or equivalently  no
router  can gain advantage by changing strategies 

   

ficollective intelligence  data routing and braess  paradox
   mathematics of collective intelligence

one common solution to these types of side effect problems is to have particular agents
of the network  e g   a  network manager  korilis  lazar    orda        dictate certain
choices to other agents  this solution can incur major brittleness and scaling problems
however  another kind of approach  which avoids the problems of a centralized manager 
is to provide the agents with extra incentives that can induce them to take actions that are
undesirable to them from a strict spa sense  such incentive can be in the form of  taxes 
or  tolls  added to the costs associated with traversing particular links to discourage the
use of those links  such schemes in which tolls are superimposed on the agents  goals are
a special case of the more general approach of replacing the goal of each agent with a new
goal  these new goals are specifically tailored so that if they are collectively met the system
maximizes throughput  a priori  a agent s goal need have no particular relation with the
spa type cost incurred by that agent s packets  intuitively  in this approach  we provide
each agent with a goal that is  aligned  with the global objective  with no separate concern
for of that goal s relation to the spa type cost incurred by the trac routed by that agent 
in this section  we summarize the salient aspects of a collective intelligences  coin   wolpert 
wheeler    tumer        wolpert   tumer         in this paper we consider systems that
consist of a set of agents  connected in a network  evolving across a set of discrete  consecutive time steps  t   f         g  without loss of generality  we let all relevant characteristics of
a agent  at time t   including its internal parameters at that time as well as its externally
visible actions   be encapsulated by a euclidean vector   t with components   t i   we
call this the  state  of agent  at time t  and let   t be the state of all agents at time t 
while  is the state of all agent across all time 
world utility  g     is a function of the state of all agents across all time  when 
is an agent that uses a machine learning  ml  algorithm to  try to increase  its private
utility  we write that private utility as g      or more generally  to allow that utility to
vary in time  g      
we assume that  encompasses all physically relevant variables  so that the dynamics
of the system is deterministic  though of course imprecisely known to anyone trying to
control the system   note that this means that all characteristics of an agent  at t    
that affects the ensuing dynamics of the system must be included in       for ml based
agents  this includes in particular the algorithmic specification of its private utility  typically
in the physical form of some computer code  the mathematics can be generalized beyond
ml based agents  as elaborated in wolpert   tumer        
here we focus on the case where our goal  as coin designers  is to maximize world utility
through the proper selection of private utility functions  intuitively  the idea is to choose
private utilities that are aligned with the world utility  and that also have the property
that it is relatively easy for us to configure each agent so that the associated private
utility
p
achieves a large value  in this paper  all utilities we consider are of the form t rt    t  
p
for reward functions rt  simply t rt    t   for non time varying utilities   from now on 
we will only consider world utilities whose associated set of frt g are all time translations of
one another  in particular  as shown below  overall network throughput is expressible this
way 
   

fiwolpert   tumer
we need a formal definition of the concept of having private utilities be  aligned  with
constructing such a formalization is a subtle exercise  for example  consider systems
where the world utility is the sum of the private utilities of the individual agents  this might
seem a reasonable candidate for an example of  aligned  utilities  however such systems
are examples of the more general class of systems that are  weakly trivial   it is well known
that in weakly trivial systems each individual agent greedily trying to maximize its own
utility can lead to the tragedy of the commons  hardin        crowe        and actually
minimize g  in
particular  this can be the case when private
utilities are independent of
p
p
time and g    g   evidently  at a minimum  having g    g is not sucient to ensure
that we have  aligned  utilities  some alternative formalization of the concept is needed 
note that in the simple network discussed in section      the utilities are weakly trivial 
since g  x   y    gx   x    gy   y    this provides another perspective on the suboptimality of
ispa in that network 
g 

a more careful alternative formalization of the notion of aligned utilities is the concept
of  factored  systems  a system is factored at time  when the following holds for each
agent  individually  a change at time  to the state of  alone  when propagated across
time  will result in an increased value of g      if and only if it results in an increase for
g     wolpert   tumer        
for a factored system  the side effects of any change to  s t    state that increases its
private utility cannot decrease world utility  there are no restrictions though on the effects
of that change on the private utilities of other agents and or times  in particular  we don t
preclude an agent s algorithm at two different times from  working at cross purposes  to
each other  so long as at both moments the agent is working to improve g  in game theoretic
terms  in factored systems optimal global behavior corresponds to the agents  always being
at a private utility nash equilibrium  fudenberg   tirole         in this sense  there can
be no tragedy of the commons for a factored system  as a trivial example  a system is
factored for g    g    a system conventionally called a  team game  

furthermore  if our system is factored with respect to private utilities fg  g  we want
each agent to be in a state at time  that induces as high a value of the associated private
utility as possible  given the initial states of the other agents   assume  is ml based and
able to achieve fairly large values of most private utilities we are likely to set it for time
   i e   assume that given that private utility g    the rest of the components of    are
set by  s algorithm in such a way so as to achieve a relatively high value of g    so our
problem becomes determining for what fg  g the agents will best be able to achieve high
g  subject to each other s actions  while also causing dynamics that is factored for g and
the fg  g 

define the effect set of the agent time pair       at    c eff
         as the set of all agents
    t which under the forward dynamics of the system have non zero partial derivative with
respect to the state of agent  at t      intuitively        s effect set is the set of the states
of all agents     t that would be affected by a change in the state of agent  at time   
next  for any set  of agents      t   define cl     as the  virtual  vector formed by
clamping the components of the vector  delineated in  to an arbitrary fixed value  which
   

ficollective intelligence  data routing and braess  paradox
in this paper is set to      this operation creates a new state vector  e g   worldline  where
the clamped components of that worldline  e g   one player s action at a particular time
step  are  zeroed   e g   removed from the system  
the value of the wonderful life utility  wlu for short  for  is defined as 
w lu    

 g   

g cl      

   

in particular  we are interested in the wlu for the effect set of agent time pair        this
wlu is the difference between the actual world utility and the virtual world utility where
all agent time pairs that are affected by       have been clamped to a zero state while the
rest of  is left unchanged 
since we are clamping to     we can loosely view       s effect set wlu as analogous
to the change in world utility that would have arisen if        had never existed   hence
the name of this utility   cf  the frank capra movie  note however  that cl is a purely
 fictional   counter factual operator  in that it produces a new  without taking into account
the system s dynamics  the sequence of states the agent time pairs in  are clamped to
in constructing the wlu need not be consistent with the dynamical laws of the system 
this dynamics independence is a crucial strength of the wlu  it means that to evaluate
the wlu we do not try to infer how the system would have evolved if agent  s state were
set to    at time  and the system evolved from there  so long as we know    extending over
all time    and the function g  we know the value of wlu 
as mentioned above  regardless of the system dynamics  having g    g   means the
system is factored at time   

theorem  regardless of the system dynamics  setting
factored system at time   

g 

 

w luc eff

    

  results in a

proof  the second term  g clc eff      is  by definition  independent of      therefore
    

a change to only the       component of  will only affect the first term  g     therefore
the effect of such a change on the value of the world utility is the same as its effect on the
value of the wonderful life utility  qed 
since factoredness does not distinguish the team game and wonderful life utilities  we
need some other means of deciding which to use as our choice of fg  g  to determine
this  note that since each agent is operating in a large system  it may experience diculty
discerning the effects of its actions on g when g sensitively depends on all the agents in the
system  therefore each  may have diculty learning from past experience what to do to
achieve high g  when g    g  in particular  in routing in large networks  having private
rewards given by the world reward functions means that to provide each router with its
reward at each time step we need to provide it the full throughput of the entire network
at that step  this is usually infeasible in practice  even if it weren t though  using these
private utilities would mean that the routers face a very dicult task in trying to discern
   the choice of the clamping parameter used in an associated coin can affect its performance  however
within wide ranges  it doesn t affect whether such a coin outperforms alternatives like team games 

   

fiwolpert   tumer
the effect of their actions on their rewards  and therefore would likely be unable to learn
their best routing strategies 
this problem can be mitigated by using effect set wlu as the private utility  since the
subtraction of the clamped term removes much of the  noise  of the activity of other agents 
leaving only the underlying  signal  of how the agent in question affects the utility  this
reasoning is formalized as the concept of  learnability  in wolpert   tumer         accordingly  one would expect that setting private utilities to wlu s ought to result in better
performance than having g    g       this is the primary theoretical consideration that
we leverage in the coin techniques investigated in this paper 
in practice  we will sometimes only be able to estimate the  primary   most prominent
portion of the effect set  technically  the associated wlu is not the effect set wlu  and
therefore not exactly factored  however assuming that that associated wlu is close enough
to being factored  we would expect the advantage in learnability with such a wlu to still
result in better performance than would using g    g      see wolpert et al        
wolpert   tumer         indeed  for the sake of improving learnability  sometimes we will
elect to exclude certain agent time pairs from our estimate of the effect set of        even
if we are sure that that are affected by      this will be the case if we expect that the
changes in g due to varying    that are  mediated  through those agent time pairs are
relatively insignificant  and therefore effectively constitute noise for the learning process  so
that their effect on learnability is more important than their effect on factoredness 
   collective intelligence for network routing

in this section  we use the theory summarized in section   to derive individual goals for
each router  in the form of private utility functions to be maximized by appropriate choice
of routing decisions  the routers tried to achieve those maximizations by using algorithms
that only require limited knowledge of the state of the network  in particular knowledge
that is readily available to routers in common real data networks   in our simulations each
router used a memory based  mb  machine learning algorithm  nearest neighbor  to make
routing decisions  more precisely  for each potential routing decision  the routers look for
the past state that most closely closely matches their current state  e g   load   they then
assign an  estimated  utility value to each potential routing decision and select the action
with the highest estimated utility value  we call this algorithm an mb coin   

    model description
to apply the coin formalism to a network routing model  we must formally describe
that as a set of deterministically evolving vectors   t   in the model used in this paper  at
any time step all trac at a router is a set of pairs of integer valued trac amounts and
associated ultimate destination tags  at each such time step t  each router r sums the
integer valued components of its current trac at that time step  one component for each
   relatively minor details of the algorithm concerning exploration exploitation issues along with a  steering  parameter are discussed at the end of this section 

   

ficollective intelligence  data routing and braess  paradox
ultimate destination  to get its instantaneous load  we write that load as 
zr  t 



x
d

xr d  t  

where the index d runs over ultimate destinations  and xr d  t  is the total trac at time
going from r towards d  after its instantaneous load at time t is evaluated  the router
sends all its trac to the next downstream routers  in a manner governed by the underlying
routing algorithm  we indicate such  next routers  by writing 
t

xr d  t 

 

x
r 

xr d r   t  

where r  is the next router for trac  r  d   i e   the first stop on the path to be followed
from router r to ultimate destination d  after all such routed trac goes to those next
downstream routers  the cycle repeats itself  until all trac reaches its destinations 
in our simulations  for simplicity  trac was only introduced into the system  at the
source routers  at the beginning of successive disjoint waves of l consecutive time steps
each    we use  t  to indicate either the integer valued wave number associated with time
t or the set of all times in that wave  as the context indicates 
in a real network  the cost of traversing a router depends on  after effects  of recent
instantaneous loads  as well as the current instantaneous load  to simulate this effect  we
use time averaged values of the load at a router rather than instantaneous load to determine
the cost a packet incurs in traversing that router  more formally  we define the router s
windowed load  zr  t   as the running average of that router s load value over a window
of the previous w timesteps  w is always set to an integer multiple of l  
zr  t 

 w 

t
x
t   t w   

zr  t   

 

x
d

xr d  t  

where the value of xr d  t  is set by
xr d  t 

 

 

t
x

w  
t  t w   

xr d  t     

intuitively  for large enough w   using such a window to determine costs across routers
means that typically those costs will only change substantially over time scales significantly
larger than that of the individual routing decisions  formally  the windowed load is the
argument to a load to cost function  v     which provides the cost accrued at time t by
each packet traversing the router at this timestep  that is  at time t  the cost for each
packet to traverse router r is given by v  zr  t      note that in our model  the costs are
accrued at the routers  not the links  also note that for simplicity we do not physically
instantiate the cost as a temporal delay in crossing a router  different routers have different
   l was always chosen to be the minimal number necessary for all trac to reach its destination before
the next wave of trac is initiated 
   we also introduce  dummy routers  denoted by v         which help in translating the mathematics
into the simulations  omitting them will have no effect on the simulations 

   

fiwolpert   tumer
v     to reect the fact that real networks have differences in router software and hardware
 response time  queue length  processing speed etc   for simplicity  w is the same for all
routers however  with these definitions  world utility is given by
g   

 
 

x
t r
x
t r d

 

x
t r d

 

x
t r d

zr  t  vr  zr  t  
xr d  t vr  zr  t  
 

xr d  t vr  
xr d  t vr

 

t
x

x

w  
t  t w    d 

x
d 

 

xr d   t   a

 

xr d   t 

   

 

our equation for g explicitly demonstrates
that  as claimed above  in our representation
p
we can express g    as a sum of rewards  t rt    t    where r   t   can be written as function
of a pair of  r  d  indexed vectors 
rt  xr d  t   xr d  t  

 

x
r d

xr d  t vr

x
d 

 

xr d   t 

 

also as claimed  the rt are temporal translations of one another 
given this model  some of the components of   t must be identified with the values
xr d r   t    r  d  r   and t  since those x s are set by the actions the agents will take  since all
arguments of g must be components of    we also include the xr d  t   r  d  t as components
of   t   formally  for routing based on ml agents  the internal parameters of the ml agents
must also be included in    this is because those parameters affect the routing  and in
turn are affected by it  so to have  evolve deterministically  since it includes the routing
variables  it must also contain internal parameters of the agents  we won t have any need
to explicitly delineate such variables here however  and will mostly phrase the discussion as
though there were no such internal parameters 
now the values fxr d r   t   g  r  d  r  specify the values fxr d  t g  r  d directly  therefore  in concert with the fxr d  t    t g  they also set the fxr d  t g directly  moreover in our
simulations the decisions fxr d r   t g  r  d  r  fixed by the routing
algorithms at all times t
p
are given by a fixed function of the fxr d  t g and the fzr  t    d  xr d   t g  so in point of
fact we can map the set of fxr d r   t     xr d   t g  r  d  r  to the full set fxr d r   t g  r  d  r   
not just to fxr d  t g  accordingly  the xr d r  undergo deterministic evolution  since their
values across time set all the values of the xr d  t  across time  we see that the entire set of
the components of   t undergo deterministic evolution in this representation  as required 
for evaluating the wonderful life utility we will need to group the components of   t
into disjoint agents   here we will have two types of agent  both types being indexed by
router destination pairs  for each such agent index  r  d   the first agent type is the variable
xr d  t   and the second agent type is the euclidean vector with components indexed by r    
 xr d  r   t   in setting  actions  we are concerned with setting the states of the agents of
the second type  accordingly  our learners will all be associated with agents of this second
   

ficollective intelligence  data routing and braess  paradox
type  unless explicitly indicated otherwise  from now on we will implicitly have that second
type of agent in mind whenever we refer to a  agent  or use the symbol  

    ispa routing and coin routing
based on the coin formalism presented in section   and the model described above  we
now present the ispa and coin based routing algorithms  at time step t  ispa has access
to all the windowed loads at time step t    i e   it has access to zr  t     r   and assumes
that those values will remain the same at all times  t  note that for large window sizes
and times close to t  this assumption is arbitrarily accurate  using this assumption  in
ispa  each router sends packets along the path that it calculates will minimize the costs
accumulated by its packets 
the coin based routing algorithms  in contrast  do not have such direct access to the
zr   so to evaluate the wlu for a agent  r  d  at any time    such an algorithm must
estimate the  primary members of the  associated effect set  this means determining what
components of    will  under the dynamics of the system  be changed by altering any of the
components of the vector xr d    
as a first approximation  we will ignore effects on trac that changing xr d r      may
have that are  mediated  by the learning algorithms running in the system  that is  we
ignore changes that arise due to the the effects that changing xr d r      has on rewards 
changes which induce changes in future training sets  which then in turn get mapped to
changes in the fxr d r   t g  and therefore the fxr d  t g  via the learning algorithms running
on the agents 
as another approximation  we will ignore effects mediated by the routing algorithms 
observations of the state of the network  that is  we ignore changes in the fxr    d   r     t g that
varying xr d     may cause due to associated changes in the state of the network perceived by
 r     d    s routing algorithm  changes that in turn cause that algorithm to modify its routing
decisions accordingly  we only consider the behavior of those routing algorithms that are
 potentially  directly affected by xr d     in that they  potentially  have to route packets
that  at time    passed through r on the way to d  so in particular we ignore effects of
xr d     on the fxr    d   
  d r     t g 
since all packets routed in a wave arrive at their destinations by the end of the wave 
these approximations mean that the only xr    d    r     t  that are in our estimate for xr d     s
effect set have t in the same wave as    these are the only ones that are  potentially  directly
affected by the fxr d r   t g by  chaining together  the sequence of xr    d    r     t  that get the
packets in xr d  t  to their ultimate destination  due to the wave nature of our simulations
though  the only xr    d    r     t  within   s wave that are affected by xr d     all have d     d 
for reasons of coding simplicity  we do not concern ourselves with whether t    within a
given wave and then exclude some xr    d    r     t  accordingly  in other words  all t within   s
wave are treated equally 
so one set of members of xr d     s effect set is fxr    d r     t   r    d  r      t      g  note
that some of these members will be relatively unaffected by xr d      e g   those with r   far
in the net away from r   again for simplicity  we do not try to determine these and exclude
them  as with keeping the xr    d r     t       this inclusion of extra agents in our estimate of
the effect set should hurt learnability  but in general should not hurt factoredness  therefore
   

fiwolpert   tumer
it should delay how quickly the learners determine their optimal policies  but it won t affect
the quality  for g  of those policies finally arrived at  note also that trying to determine
whether some particular xr    d r     t        should be included in xr d     s effect set would
mean  in part  determining whether packets routed from  r  d  would have reached r   if
 r  d  had made some routing decision different from the one it actually made  this would
be a non trivial exercise  in general 
in contrast to the case with the xr    d   r     t   there are xr    d   t  with t in the future of   s
wave that both are affected by xr d  t  and also are not excluded by any of our approximations
so far  in particular  the xr    d  t  with either r     r or r   one hop away from r will be
 
directly affected by xr d  t   for t    w
i       il    cf  the definition of the x variables  
for simplicity  we restrict consideration of such xr    d variables to those with the same router
as r  r     r 
this final estimate for the effect set is clearly rather poor   presumably results better
than those presented below would accrue to use of a more accurate effect set  however it s
worth bearing in mind that there is a  self stabilizing  nature to the choice of effect sets 
when used in conjunction with effect set wlu s  this nature is mediated by the learning
algorithms  if one assigns the same utility function to two agents  then the reward one
agent gets will be determined in part by what the other one does  so as it modifies its
behavior to try to increase its reward  that first agent will be modifying its behavior in a
way dependent on what the other agent does  in other words  if two agents are given the
same wlu because they are estimated to be in each other s effect set  then ipso facto they
will be in each other s effect set 
using our estimate for the effect set  the wlu for       is given by the difference
between the total cost accrued in   s wave by all agents in the network and the cost accrued
by agents when all agents sharing  s destination are  erased   more precisely  any agent 
that has a destination d will have the following effect set wlu s  g   
g      

 

g   
x
t r   d 


 

g clc eff     
    

xr   d   t  vr 
vr 

x
d  

x
d 

 

x 

xr   d   t 

  xr   d    t    

t r   d 

i  t

  

xr   d   t   

w  
i    

i  t

      i  d    d  

  il  i  d     d    

 

 
 
x
x
x
x
 
xr   d   t  vr   
xr   d    t  
xr   d   t  vr   
xr   d    t  a
d 
d  
d    d
d     d
t     r 
 
 
x
x x
x
x
 
 
xr   d   t   vr   
xr   d    t   vr   
xr   d    t   a
   
 
 
  
  
w
 
r
d
d
d
 
 
d
t  
   il 
x x

i  

where i     is the indicator function that equals   if its argument is true    otherwise 
to allow the learner to receive feedback concerning its actions in a wave immediately
following that wave rather than wait for  w l time steps  we will approximate the second
sum in that last equality  the one over times following   s wave  as zero  there is another
way we can view the resultant expression  rather than as an approximation to the effect
   

ficollective intelligence  data routing and braess  paradox
set wlu  that is to view it as the exact wlu of an approximation to the effect set  an
approximation which ignores effects on future windowed loads of clamping a current trac
level  regardless of what view we adopt  presumably better performance could be achieved
if we did not implement this approximation 
given this approximation  our wlu becomes a wave indexed time translation invariant
wl  reward function   wlr  
g     t      

x

x

t     r 

d 

 

x
d    d

xr   d   t  vr   

xr   d   t  vr   

x
d  

x

d     d

xr   d    t  
 

xr   d    t  a  

   

notice that trac going from a router r     r to a destination d     d affects the value of
the wlr for agent  r  d   this reects the fact that wlr takes into account side effects
of  r  d  s actions on other agents  note also that each r   indexed term contributing to the
wlr can be computed by the associated router r  separately  from information available
to that router  subsequently those terms can be propagated through the network to   in
much the same way as routing tables updates are propagated 
given this choice of private utility  we must next specify how the coin based routing
algorithm collects the initial data that  in conjunction with this utility  is to be used to
guide the initial routing decisions that every agent with more than one routing option must
make  in our experiments that data was collected during a preliminary running of an ispa 
in this preliminary stage  the routing decisions are made using the ispa  but the resulting
actions are  scored  using the wlr given by equation    we use the ispa to generate the
routing decisions in the initial data since it is likely in practice that some kind of spa will
be the routing algorithm running prior to  turning on  the coin algorithm  alternately
one can generate the initial data s routing decisions by having the routers make random
decisions  or by having them implement a sequence of decisions that  sweeps  across a grid
through the possible set of actions  the data collected in this stage provides us with initial
input output training sets to be used by the machine learning algorithm on each agent  for
each router destination agent  inputs are identified with windowed loads on outgoing links 
and the associated wlr values for the destination in question are the outputs 
after sucient initial data is collected using the ispa  the system switches to using
the coin algorithm to make subsequent routing decisions  in this stage  each agent routes
packets along the link that it estimates  based on the training set  would provide the best
wlr  to perform the estimation  the mb coin makes use of a single nearest neighbor
algorithm as its learner  this algorithm simply guesses that the output that would ensue
from any candidate input is the same as the output of the element of the training set
that is the nearest neighbor  in input space  of that candidate input   in other words  the
learner finds the training set input output pair whose input value  loads on outgoing links 
   this is a very simple learning algorithm  and we use it here only to demonstrate the potential practical
feasibility of a coin based routing algorithm  the performance can presumably be improved if more
sophisticated learning algorithms  e g   q learning sutton   barto        watkins   dayan        are
used 

   

fiwolpert   tumer
is closest to that which would result from each potential routing decision  then the learner
assigns the wlr associated with that training data pair as the estimate for what wlr
would result from said routing decision  these wlr values are then used to choose among
those potential routing decisions  the input output data generated under this algorithm is
adding to the training set as it is generated 
in this routing algorithm  the routers only estimate how their routing decisions  as
reected in their loads at individual time steps  will affect their wlr values  based on
many agents  loads   it is also possible to calculate exactly how the routing decisions affect
the routers  wlr s if  unlike the mb coin  we had full knowledge of the loads of all
agents in the system  in a way similar to ispa  for each router we can evaluate the exact
wlr value that would ensue from each of its candidate actions  under the assumption
that windowed loads on all other routers are the same one wave into the future as they are
now  we call this algorithm for directly maximizing wlr  an algorithm we call the full
knowledge coin  or fk coin  
note that under the assumption behind the fk coin  the action  chooses in wave    
that maximizes wlr will also maximize the world reward  in other words  wl reward is
perfectly factored with respect to  wave indexed  world reward  even though the associated
utilities are not related that way  due to inaccuracy in our estimate of the effect set   due
to this factoredness  the fk coin is equivalent to load balancing on world rewards  since
lb in general results in inferior performance compared to lb over time  and since the fk
coin is equivalent to lb  one might expect that its performance is suboptimal  intuitively 
this suboptimality reects the fact that one should not choose the action only with regard
to its effect on current reward  but also with concern for the reward of future waves  in the
language of the coin framework  this suboptimality can be viewed as a restatement of the
fact that for our inexactly estimated effect set  the system will not be perfectly factored 
the learning algorithm of the mb coin as described is extraordinarily crude  in addition  the associated scheme for choosing an action is purely exploitative  with no exploration
whatsoever  rather than choose some particular more sophisticated scheme and tune it to
fit our simulations  we emulated using more sophisticated algorithms in general  we did
this by modifying the mb coin algorithm to occasionally have the fk coin determine
a router s action rather than the purely greedy learner outlined above  the steering parameter discussed in section     determines how often the routing decision is based on the
mb coin as opposed to the fk coin 
   simulation results

in practice  it is very dicult to implement either fk coin or lb  in this section we use
experiments to investigate behavior of algorithms that can conceivably be used in practice 
more precisely  based on the model and routing algorithms discussed above  we have performed simulations to compare the performance of ispa and mb coin across a variety of
networks  varying in size from five to eighteen routers  in all cases trac was inserted into
the network in a regular  non stochastic manner at the sources  the results we report are
averaged over    runs  we do not report error bars as they are all lower than      
in sections           we analyze trac patterns over four networks where ispa suffers
from the braess  paradox  in contrast  the mb coin almost never falls prey to the paradox
   

ficollective intelligence  data routing and braess  paradox
for those networks  or for no networks we have investigated is the mb coin significantly
susceptible to braess  paradox   then in section     we discuss the effect on the mb
coin s performance of the  steering  parameter which determines the intelligence of the
mb coin  

    bootes network
the first network type we investigate is shown in figure    it is in many senses a trivial
network  as in net a  the sources do not even have any choices to make  the loads introduced at the sources do not change in time and are listed in tables   and    along with the
performances of our algorithms 

y
 d 

v 

 
  yv 
y
  
aa
 y v 
ayv 
aay
 ys 
s 

y d
 

v 

  
y
 yv 
  
aa
yv  ayv 
 yv 
  y
a
s 
s  ay

net a

net b
figure    bootes network

loads at  s    s    net
   
a
b
   
a
b
   
a
b
   
a
b

ispa mb coin
    
    
    
    
    
    
     
    
    
    
     
    
     
     
     
     

table    average per packet cost for bootes  networks for v         log     x   
 x    v    log     x   

v 

 

the mb coin results are identical to the ispa results in the absence of the additional
link  network a   however  braess  paradox arises with ispa  in that the addition of the
new link in network b degrades the performance of the ispa in six of the eight trac
regimes and load to cost functions investigated  the mb coin on the other hand is only
   in sections            the steering parameter is set at     

   

fiwolpert   tumer

loads at  s    s    net ispa mb coin
   
a      
     
b      
     
   
a      
     
b      
     
   
a      
     
b      
     
   
a      
     
b      
     
table    average per packet cost for bootes  network for
  x   v    log     x   

v 

       log     x   

v 

 

hurt by the addition of the new link once  and manages to gainfully exploit it seven times 
when their behavior is analyzed infinitesimally  the mb coin either uses the additional
link eciently or chooses to ignore it in those seven cases  moreover  the mb coin s
performance with the additional link is always better than the ispa s  for example  adding
the new link causes a degradation of the performance by as much as       loads   f    g 
for the ispa  whereas for the same load vector mb coin performance improves by     

    hex network
in this section we revisit the network first discussed in section      redrawn in figure   to
include the dummy agents   in table   we give full results for the load to delay functions
discussed in that section  we then use load to cost functions which are qualitatively similar
to those discussed in section      but which incorporate non linearities that better represent
real router characteristics  that load to cost function and associated results are reported
in table   

v 
v 
v 

 y
bdb
 
 
bb
y 
 
byv 
y
yv 
y
bb
 yv 
 
bb   
b 
ys
net a

v 
v 
v 

 ybdb
 
 
bb
 y 
byv 

y vy   yv 
yb
 yv 
bb
 
bb ys  

figure    hex network

net b

this network demonstrates that while the addition of a new link may be beneficial in
low trac cases  it leads to bottlenecks in higher trac regimes  for ispa although the
   

ficollective intelligence  data routing and braess  paradox
per packet cost for loads of   and   drop drastically when the new link is added  the per
packet cost increases for higher loads  the mb coin on the other hand uses the new
link eciently  notice that the mb coin s performance is slightly worse than that of the
ispa in the absence of the additional link  this is caused by the mb coin having to use
a learner to estimate the wlu values for potential actions whereas the ispa simply has
direct access to all the information it needs  costs at each link  
load net ispa mb coin
 
a      
     
b      
     
 
a      
     
b      
     
 
a      
     
b      
     
 
a      
     
b      
     
table    average per packet cost for hex network for v        x  
 

v 

    x  

v 

      x

load net ispa mb coin
 
a      
     
b      
     
 
a      
     
b      
     
 
a      
     
b      
     
 
a      
     
b      
     
table    average per packet cost for hex network for
  x   v    log     x   

v 

       log     x   

v 

 

    buttery network
the next network we investigate is shown in figure    it is an extension to the simple
network discussed in section      we now have doubled the size of the network and have
three sources that have to route their packets to two destinations  packets originating at
s  go to d    and packets originating at s  or s  go to d     initially the two halves of the
network have minimal contact  but with the addition of the extra link two sources from the
two two halves of the network share a common router on their potential shortest path 
   

fiwolpert   tumer

y

 tt

yd 

 tt
 t  t

tty
tty
y
v  
v 
t
t
 v 
t
t yv 
v  ty
v  ty
t
t    
y  ys 
s  ty
s  t
d 

y

 tt

yd 

 tt
 t  t

tty
tty
y
v  
v 
t
t
 v 
t
 t
v  ty v  y v  ty
y v 
t 
t  
y s  ty  ys 
s  t
d 

net a

net b
figure    buttery network

table   presents two sets of results  first we present results for uniform trac through
all three sources  and then results for asymmetric trac  for the first case  the braess 
paradox is apparent in the ispa  adding the new link is beneficial for the network at low
load levels where the average per packet cost is reduced by nearly      but deleterious at
higher levels  the mb coin  on the other hand  provides the benefits of the added link
for the low trac levels  without suffering from deleterious effects at higher load levels 
loads  s    s    s    net ispa mb coin
     
a      
     
b
    
    
     
a      
     
b      
     
     
a      
     
b      
     
     
a
    
    
b
    
    
     
a
    
    
b      
    
     
a      
    
b      
    
table    average per packet cost for butterfly network for v        log    x   
  x   v    log     x  

v 

 

for the asymmetric trac patterns  the added link causes a drop in performance for the
ispa  especially for low overall trac levels  this is not true for the mb coin  notice also
that in the high  asymmetric trac regime  the ispa performs significantly worse than the
mb coin even without the added link  showing that a bottleneck occurs on the right side
of network alone  similar to the braess  paradox observed in section      
   

ficollective intelligence  data routing and braess  paradox
    ray network
in all the networks and trac regimes discussed so far the sources are the only routers with
more than one routing option  the final network we investigate is a larger network where
the number of routers with multiply options is significantly higher than in the previous
networks  figure   shows the initial network  net a  and the  augmented  network  net
b   where new links have been added  the original network has relatively few choices for
the routers  as packets are directed toward their destinations along  conduits   the new
links are added in the augmented networks to provide new choices  crossing patterns  that
could be beneficial if certain of the original conduits experience large costs 

v 
v 
v 

bdb    y
bdb 
 y
 
 
b 
b
y  v  y   bbyv  bbyv 
 
y v  y
yv 
yv 
yv
yv
y v  y
jj 


jj   

  
j 

j 

j 
yv 
v  j
e
y
ee
 
 
e
y
y
 
s 
s 
net a

v 
v 
v 

 ybdb    ybdb 
 
 
 b
b
 yc  v   y  bbyv  b byv 
yvc  cy yv  v  y  y v  yv 
y vc cyc   yv  
yv
jj 

 c   jj 

  
j 
  c c j 

v  j
e
ye  yv  v cy  j 
yv 
 
e
y
 
e
y
s 
s 

figure    ray network

net b

table   shows the simulation results for these networks  s  and s  send packets to d 
and d  respectively   at low load levels both the ispa and the mb coin use the new links
effectively  although the mb coin performs slightly worse  this is mainly caused by the
diculty encountered by the simple learner  single nearest neighbor algorithm  in quickly
learning the trac patterns in this large network  unlike the ispa however  the mb coin
avoids the braess  paradox in all cases except the very high trac regime  moreover  even
there  the effect is significantly milder than that encountered by the ispa 

    steering the mb coin
the final aspect of coin based routing we investigate is the impact of the choice for the
value of the steering parameter  this parameter both controls the amount of exploration
the algorithm performs and determines the  intelligence  of the mb coin at estimating
the surface directly calculated by the fk coin  in figures        the fk coin results
correspond to setting the steering parameter of the mb coin to      this provides an
upper bound on the performance that can be achieved though mb coin 
for the hex network  figure     the performance at the worst setting for the mb coin 
which corresponds to no steering  is comparable to ispa  in contrast  with moderate steering
   

fiwolpert   tumer

loads at s  ands    net ispa mb coin
   
a      
     
b      
     
   
a      
     
b      
     
   
a      
     
b      
     
   
a      
     
b      
     
table    average per packet cost for ray network for
  x   v         log     x  

       log     x   

v 

 

   

  

per packet delay

per packet delay

  

v 

ispa
fk coin
mb coin

  
  
  

ispa
fk coin
mb coin

   
   
   
   

 

               
steering parameter

   

 

               
steering parameter

   

figure    impact of steering on hex   left  and ray   right  networks 
      the results are similar to that of the fk coin  as the learner has more information
to work with  arising from the extra parts of the input space represented in the training
set due to the occasional use of the fk coin   it bridges the gap between a suboptimal
algorithm susceptible to braess  paradox and one which eciently avoids that paradox 
for the ray network  figure     the value of the steering parameter is more critical 
with no steering at all  the mb coin performs poorly in this network   even worse than
ispa  this is not surprising in that because there are many routing choices that affect
the performance  the simple memory based learner needs proper  seeding  to be able to
perform well  even with minimal steering though  the mb coin quickly outperforms the
ispa 
finally  for both the buttery and bootes networks  figure    the mb coin needs
very little steering to perform well  although for the buttery network the performance of
mb coin improves slightly with more information  it is significantly better than the ispa
across the board 
   

fi   

per packet delay

per packet delay

collective intelligence  data routing and braess  paradox

ispa
fk coin
mb coin

   

  

  
ispa
fk coin
mb coin
  

  
 

               
steering parameter

   

 

               
steering parameter

   

figure    impact of steering on buttery   left  and bootes   right  networks 
   conclusion

effective routing in a network is a fundamental problem in many fields  including data
communications and transportation  using a shortest path algorithm  spa  on each of the
routers to determine that router s decisions is a popular approach to this problem  however
under certain circumstances it suffers from a number of undesirable effects  one such effect is
braess  paradox  where for the same pattern of introduced trac into a network  increasing
the capacity of that network results in lower overall throughput  due to the harmful sideeffects of the decisions made by each router on the trac in the rest of the system  even
the theoretical load balancing algorithm  which addresses some of these effects to produce
decisions that are optimal for any single moment of time  can still suffer from side effects
that result in sub optimal performance  this is because such effects extend across time
 i e   what you do now affects performance later  as well as space 
the collective intelligence approach is a novel way of controlling distributed systems so
as to avoid deleterious side effects of routing decisions  the central idea is to have learning
algorithms control the autonomous agents that constitute the overall distributed system 
in such a collective intelligence  coin   the central issue is to determine the personal
objectives to be assigned to each of those autonomous agents  one wants to choose those
goals so that the greedy pursuit of those goals by the associated learning algorithms leads to
desirable behavior of the overall system  in this paper we have summarized the mathematics
of designing such goals and derived a routing algorithm based on that mathematics 
we ran computer simulations to compare a coin based algorithm with an ideal spa
 whose performance upper bounds all real world spa s  for routing  the coin based algorithm was severely handicapped  the estimation of the  effect sets  used by that algorithm
was exceedingly crude  in addition  the learning algorithms of the agents were particularly
unsophisticated  and therefore were not able to effectively maximize their individual performances  in contrast  the ideal spa had access to more information concerning the state of
the system than the  real world implementable  coin did  information that no real world
spa could access 
   

fiwolpert   tumer
despite these biases in favor of the ideal spa  in our experiments the ideal spa induced
average costs as much as      higher than the coin based algorithm  furthermore the
coin based algorithm almost always avoided the braess  paradox that seriously diminished
the performance of the spa 
these techniques have also been very successfully employed in many other  non routing
domains  such as coordination of autonomous rovers  tumer  agogino    wolpert        
combinatorial optimization   congestion games   wolpert   tumer         and control of
data upload from a planet  wolpert  sill    tumer         we conclude from these results
that the techniques of the field of collective intelligence can be highly effective in designing
the utility functions of the members of a mas to ensure they work in a coordinated and
ecient manner to optimize overall performance  we are currently investigating extensions
of our coin algorithm that involve novel goals for the agents  goals that are more  learnable  for the learning algorithms  we are also expanding the simulations to larger networks
using a commercial event driven simulator  future work will focus on not making the approximation that current trac levels do not affect future windowed loads  equation    
it will also involve investigating better estimates of effect sets  in particular not including
all agents with the same destination in one s effect set  and more generally using a more
 fine grained  representation of the agents  for example including each packet s originating
source  to allow a more fine grained effect set  and resultant wlu  
acknowledgments

the authors thank joe sill and the reviewers for their helpful comments 
appendix a  suboptimality of load balancing

in this appendix we we present an existence proof of the suboptimality of load balancing
 lb  by explicitly constructing a situation where conventional lb is suboptimal 
consider a system with discrete time  in which the source agent x under consideration
must route one packet to the  fixed  destination at each time step  presume further that
no trac from any source agent other than x enters any of the agents x sends to  so that
trac coming from x is the sole source of any costs associated with x  s outbound links  let
s  t  be the number of times our agent sent a packet down some link a in the w time steps
preceding t  and take s t    a  b to mean that the router uses link a or b   respectively  at
time t  model queue backups and the like by having the cost to send a packet down link
a at time t be ca  s  t  w    and have the cost for our router to instead send the packet
down link b be cb    s  t  w    for simplicity we assume that both ca     and cb     are
monotonically increasing functions of their arguments 
restrict attention to agents that work by having s t    a iff s  t   k for some realvalued threshold k  the lb algorithm will choose s t    a iff ca  s  t  w    cb   
s  t  w    so the lb algorithm s behavior is indistinguishable from this kind of threshold
algorithm  with k set so that ca  k w     cb    k w     we implicitly assume that ca    
and cb     are chosen so that such a solution exists for     k   w     the question is
   

ficollective intelligence  data routing and braess  paradox
what k should be to optimize total averaged cost across time  and in particular if that k is
the same as klb   the k that lb uses 
now as we go from one time step to the next  the routing decision made w time steps
ago drops out of the computation of s  t   while the routing decision just made is newly
included  in general  s  t        s  t      if the router just used a at time t and used link b
at the time w time steps into the past  on the other hand  s  t        s  t    if the router
just used b and used a w time steps ago  while s  t        s  t  if the routing decision just
made is the same as the routing decision w time steps ago  so in general  s  t  can only
change by        or    as we go from one time step to the next 
consider cases where     k   w    so that eventually the router must choose an a 
and at some subsequent time t the router switches from a to b   at that time s t      a
and s t     b   this implies that s  t     k  s  t     k  define the value s  t    as k  
note that s  t     k      and k     k  k 
now for any time t    if s  t      k      s t         b   and the only possible next values
are s  t         k or s  t         k      depending on the old decision s t w   that gets
dropped out of the window  similarly  if s  t      k   s t         a  and the only possible
next values are s  t         k or s  t         k      again depending on the old decision
being dropped  so we see that once s  t      fk   k    g  it stays there forever 
this means that because of the relationship between k and k   in any interval of w
consecutive time steps subsequent to t   the number of packets sent along a by router x
must be    k    k       note that it is possible to send k    packets along a  but not k  
packets  therefore the number sent along b must be    w  k       w  k      each
time that a packet is sent along a the cost incurred is the cost of link a with average trac
level s  t  w   ca  s  t  w    similarly  each time the link b is chosen  the cost incurred is
cb    s  t  w    since s  t    fk    k     g  and both ca     and cb     are monotonically
increasing  the cost for sending the packet down link a    ca   k    w    ca   k      w   
and that for sending it down link b is contained in  cb     k     w    cb     k    w    
now we know that the choice of a must have average frequency  across all time  between

k  w and  k       w   similarly  b will have average frequency between     k       w  
and   k  w   accordingly  the average cost is bounded above by






k  
k
k  
k    
ca
   
cb  
 
   
w

w

w

w

where the first term provides the maximum possible average cost for using link a  while
the second term independently provides the maximum possible average cost for using link
b   note that the actual cost will be lower since the two frequencies in this bound  one for
a and one for b   cannot both have the values indicated  because k     k   k and since
     our upper bound is itself bounded above by
  kw        w  kw
k  
w



ca

k  
w



 



  

 

k  

w

w





cb

  

 

k  

w

w



 

   

the optimal k will result in an average cost lower than the minimum over all k of the
upper bound on average cost  given in equation    so the average cost for the optimal
k is bounded above by the minimum over k of this upper bound  lable this argmin of
equation   k  
   

fiwolpert   tumer
since other values of k besides klb result in behavior equivalent to lb  it does not
suce to simply test if k    klb   instead let us evaluate some lower bounds in a similar
fashion to how we evaluated upper bounds  using the average frequencies discussed above 
the average cost is bounded below by 






k  
 
k
k  
k
ca
   
cb  
 
   
w

w

w

w

w

where the first term provides the minimum possible average cost for using link a  while the
second term provides the minimum possible average cost for using link b   again  because
k     k   k   the term is equation   is further bounded below by
 

k
w



ca

 

k



w

 



 

 
w

 

k
w





cb

 

 

 

k

w



in particular this bound holds for the average cost of the lb algorithm 





klb  
klb  
  klb  
  klb
ca
   
cb  
w

w

w

w

w

   

 

w

w

 



 

   

where as before klb satisfies ca  klb  w     cb    klb  w   
by appropriate choice of ca     and cb      we can ensure that the lower bound on the
cost with the lb algorithm  equation   evaluated with k   klb   is higher than the upper
bound on the average cost incurred by the optimal algorithm  the minimum over k of equation     that is  the best possible average cost achieved by load balancing will be worse
than the worst average cost that could arise through the optimal routing strategy  this
establishes that lb does not engage in optimal routing 

example  let ca  x    x  and cb  x    x  balancing the loads on a and b   setting

 
c
pa  s  t  w     cb    s  t  w     results in  s  t  w       s  t  w   leading to klb  w  
            for w         the associated lower bound on average cost  equation    is
 
                               on the other hand  with ca and cb given as above  eq  
k    
is   k              
    differentiating with respect to k and setting the result to
w

k 
w

w

 
 

w

 

p      w

zero leads to
 
  for a window size of w         this yields
w  
 
k    w         a different result than klb   plugging into equation    the upper bound on
the cost with k  is                                 which is less than      
references

ahuja  r  k   magnanti  t  l     orlin  j  b          network flows  prentice hall  new
jersey 
bass  t          road to ruin  discover                
bertsekas  d     gallager  r          data networks  prentice hall  englewood cliffs  nj 
bonabeau  e   henaux  f   guerin  s   snyders  d   kuntz  p     theraulaz  g       a  
routing in telecommunications networks with  smart  and like agents   pre print  
bonabeau  e   sobkowski  a   theraulaz  g     deneubourg  j  l       b   adaptive task
allocation inspired by a model of division of labor of social insects   pre print  
   

ficollective intelligence  data routing and braess  paradox
boyan  j  a     littman  m          packet routing in dynamically changing networks 
a reinforcement learning approach  in advances in neural information processing
systems      pp           morgan kaufman 
choi  s  p  m     yeung   d  y          predictive q routing  a memory based reinforcement
learning approach to adaptive trac control  in touretzky  d  s   mozer  m  c    
hasselmo  m  e   eds    advances in neural information processing systems      pp 
         mit press 
claus  c     boutilier  c          the dynamics of reinforcement learning cooperative
multiagent systems  in proceedings of the fifteenth national conference on artificial
intelligence  pp           madison  wi 
cohen  j  e     jeffries  c          congestion resulting from increased capacity in singleserver queueing networks  ieee acm transactions on networking                 
cohen  j  e     kelly  f  p          a paradox of congestion in a queuing network  journal
of applied probability              
crowe  b  l          the tragedy of the commons revisited  science                 
deo  n     pang  c          shortest path algorithms  taxonomy and annotation  networks 
            
dijkstra  e          a note on two problems in connection with graphs  numeriche mathematics              
fudenberg  d     tirole  j          game theory  mit press  cambridge  ma 
glance  n  s          dynamics with expectations  ph d  thesis  stanford university 
glance  n  s     hogg  t          dilemmas in computational societies  in lesser  v 
 ed    proc  of the  st international conference on multi agent systems  icmas    
pp           menlo park  ca  aaai press 
hardin  g          the tragedy of the commons  science                 
heusse  m   snyers  d   guerin  s     kuntz  p          adaptive agent driven routing
and load balancing in communication networks  advances in complex systems    
        
hogg  t          social dilemmas in computational ecosystems  in proceedings of the
fourteenth international joint conference on artificial intelligence  pp           san
mateo  ca  morgan kaufmann 
hu  j     wellman  m  p       a   multiagent reinforcement learning  theoretical framework and an algorithm  in proceedings of the fifteenth international conference on
machine learning  pp          
hu  j     wellman  m  p       b   online learning about other agents in a dynamic multiagent system  in proceedings of the second international conference on autonomous
agents  pp          
huberman  b  a     hogg  t          the behavior of computational ecologies  in the
ecology of computation  pp          north holland 
   

fiwolpert   tumer
huberman  b  a     lukose  r  m          social dilemmas and internet congestion  science 
                    
huberman  b  a     hogg  t          the emergence of computational ecologies  in nadel 
l     stein  d   eds         lectures in complex systems  vol  v of sfi studies in
the sciences of complexity  pp           addison wesley  reading  ma 
huhns  m  e   ed            distributed artificial intelligence  pittman  london 
jennings  n  r   sycara  k     wooldridge  m          a roadmap of agent research and
development  autonomous agents and multi agent systems          
kaelbing  l  p   littman  m  l     moore  a  w          reinforcement learning  a survey 
journal of artificial intelligence research             
kelly  f  p          modeling communication networks  present and future  philosophical
trends royal society of london a               
korilis  y  a   lazar  a  a     orda  a          architecting noncooperative networks 
ieee journal on selected areas in communications                    
korilis  y  a   lazar  a  a     orda  a       a   achieving network optima using stackelberg routing strategies  ieee acm transactions on networking                 
korilis  y  a   lazar  a  a     orda  a       b   capacity allocation under noncooperative
routing  ieee transactions on automatic control                  
korilis  y  a   lazar  a  a     orda  a          avoiding the braess paradox in noncooperative networks  journal of applied probability              
kumar  s     miikkulainen  r          dual reinforcement q routing  an on line adaptive
routing algorithm  in artificial neural networks in engineering  vol     pp          
asme press 
littman  m  l     boyan  j          a distributed reinforcement learning scheme for network
routing  in proceedings of the      international workshop on applications of neural
networks to telecommunications  pp        
marbach  p   mihatsch  o   schulte  m     tsisiklis  j          reinforcement learning for
call admission control and routing in integrated service networks  in advances in
neural information processing systems       pp           mit press 
orda  a   rom  r     shimkin  n       a   competitive routing in multiuse communication
networks  ieee acm transactions on networking                 
orda  a   rom  r     sidi  m       b   minimum delay routing in stochastic networks 
ieee acm transactions on networking                 
sandholm  t   larson  k   anderson  m   shehory  o     tohme  f          anytime coalition structure generation with worst case guarantees  in proceedings of the fifteenth
national conference on artificial intelligence  pp        
sandholm  t     lesser  v  r          issues in automated negotiations and electronic commerce  extending the contract net protocol  in proceedings of the second international
conference on multi agent systems  pp           aaai press 
   

ficollective intelligence  data routing and braess  paradox
schaerf  a   shoham  y     tennenholtz  m          adaptive load balancing  a study in
multi agent learning  journal of artificial intelligence research               
shenker  s  j          making greed work in networks  a game theoretic analysis of switch
service disciplines  ieee transactions on networking                 
stone  p          tpot rl applied to network routing  in proceedings of the seventeenth
international machine learning conference  pp           morgan kauffman 
subramanian  d   druschel  p     chen  j          ants and reinforcement learning  a case
study in routing in dynamic networks  in proceedings of the fifteenth international
conference on artificial intelligence  pp          
sutton  r  s          learning to predict by the methods of temporal differences  machine
learning          
sutton  r  s     barto  a  g          reinforcement learning  an introduction  mit press 
cambridge  ma 
sycara  k          multiagent systems  ai magazine                
tumer  k   agogino  a     wolpert  d          learning sequences of actions in collectives
of autonomous agents  in proceedings of the first international joint conference on
autonomous agents and multi agent systems  bologna  italy 
tumer  k     wolpert  d  h          collective intelligence and braess  paradox  in
proceedings of the seventeenth national conference on artificial intelligence  pp      
     austin  tx 
watkins  c     dayan  p          q learning  machine learning                   
wolpert  d  h   kirshner  s   merz  c  j     tumer  k          adaptivity in agent based
routing for data networks  in proceedings of the fourth international conference of
autonomous agents  pp          
wolpert  d  h   sill  j     tumer  k          reinforcement learning in distributed domains 
beyond team games  in proceedings of the seventeenth international joint conference
on artificial intelligence  pp           seattle  wa 
wolpert  d  h     tumer  k          an introduction to collective intelligence  tech 
rep  nasa arc ic        nasa ames research center  url http   ic arc nasa gov ic projects coin pubs html  to appear in handbook of agent technology 
ed  j  m  bradshaw  aaai mit press 
wolpert  d  h     tumer  k          optimal payoff functions for members of collectives 
advances in complex systems                   
wolpert  d  h   tumer  k     frank  j          using collective intelligence to route internet
trac  in advances in neural information processing systems       pp           mit
press 
wolpert  d  h   wheeler  k     tumer  k          collective intelligence for control of
distributed dynamical systems  europhysics letters         

   

fi