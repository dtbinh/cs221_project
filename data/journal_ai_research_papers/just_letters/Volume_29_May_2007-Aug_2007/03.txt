journal of artificial intelligence research                  

submitted       published     

an algebraic graphical model for decision with
uncertainties  feasibilities  and utilities
cedric pralet

cedric pralet onera fr

onera toulouse  france
  av  edouard belin        toulouse

gerard verfaillie

gerard verfaillie onera fr

onera toulouse  france
  av  edouard belin        toulouse

thomas schiex

thomas schiex toulouse inra fr

inra toulouse  france
chemin de borde rouge        castanet tolosan

abstract
numerous formalisms and dedicated algorithms have been designed in the last decades
to model and solve decision making problems  some formalisms  such as constraint networks  can express simple decision problems  while others are designed to take into account uncertainties  unfeasible decisions  and utilities  even in a single formalism  several
variants are often proposed to model different types of uncertainty  probability  possibility     or utility  additive or not   in this article  we introduce an algebraic graphical model
that encompasses a large number of such formalisms      we first adapt previous structures
from friedman  chu and halpern for representing uncertainty  utility  and expected utility
in order to deal with generic forms of sequential decision making      on these structures 
we then introduce composite graphical models that express information via variables linked
by local functions  thanks to conditional independence      on these graphical models 
we finally define a simple class of queries which can represent various scenarios in terms
of observabilities and controllabilities  a natural decision tree semantics for such queries
is completed by an equivalent operational semantics  which induces generic algorithms 
the proposed framework  called the plausibility feasibility utility  pfu  framework  not
only provides a better understanding of the links between existing formalisms  but it also
covers yet unpublished frameworks  such as possibilistic influence diagrams  and unifies
formalisms such as quantified boolean formulas and influence diagrams  our backtrack
and variable elimination generic algorithms are a first step towards unified algorithms 

   introduction
in the last decades  numerous formalisms have been developed to express and solve decision
making problems  in such problems  an agent must make decisions consisting of either
choosing actions and ways to fulfill them  as in action planning  task scheduling  or resource
allocation   or choosing explanations of observed phenomena  as in diagnosis or situation
assessment   these choices may depend on various parameters 
   uncertainty measures  which we call plausibilities  may describe beliefs about the state
of the environment 
   preconditions may have to be satisfied for a decision to be feasible 
c
    
ai access foundation  all rights reserved 

fipralet  verfaillie    schiex

   the possible states of the environment and decisions do not generally have the same
value from the decision makers point of view  utilities can be expressed to model costs 
gains  risks  satisfaction degrees  hard requirements  and more generally  preferences 
   when time is involved  decision processes may be sequential and the environment may
be partially observable  this means that there may be several decision steps  and that
the values of some variables may be observed between two steps  as in chess where
each player plays in turn and can observe the move of the opponent before playing
again 
   there may be adversarial or collaborative decision makers  each of them controlling a
set of decisions  hence  a multi agent aspect can yield partial controllabilities 
given the plausibilities defined over the states of the environment  the feasibility constraints on the decisions  the utilities defined over the decisions and the states of the environment  and given the possible multiple decision steps  the objective is to provide the decision
maker with optimal decision rules for the decision variables he controls  depending on the
environment and on other agents  to be concise  the class of such problems is denoted as
the class of sequential decision problems with plausibilities  feasibilities  and utilities 
various formalisms have been designed to cope with problems of this class  sometimes
in a degenerated form  covering only a subset of the features of the general problem  
 formalisms developed in the boolean satisfiability framework  the satisfiability problem  sat   quantified boolean formulas  stochastic sat  littman  majercik    pitassi 
       and extended stochastic sat  littman et al         
 formalisms developed in the very close constraint satisfaction framework  constraint
satisfaction problems  csps  mackworth         valued semiring csps  bistarelli 
montanari  rossi  schiex  verfaillie    fargier         covering classical  fuzzy  additive  lexicographic  probabilistic csps   mixed csps and probabilistic mixed csps
 fargier  lang    schiex         quantified csps  bordeaux   monfroy         and
stochastic csps  walsh        
 formalisms developed to represent uncertainty and extended to represent decision
problems under uncertainty  bayesian networks  pearl         markov random fields
 chellappa   jain         also known as gibbs networks   chain graphs  frydenberg         hybrid or mixed networks  dechter   larkin        dechter   mateescu 
       influence diagrams  howard   matheson         unconstrained  jensen   vomlelova         asymmetric  smith  holtzman    matheson        nielsen   jensen 
       or sequential  jensen  nielsen    shenoy        influence diagrams  valuation
networks  shenoy         and asymmetric  shenoy        or sequential  demirer  
shenoy        valuation networks 
 formalisms developed in the classical planning framework  such as strips planning  fikes   nilsson        ghallab  nau    traverso         conformant planning  goldman   boddy         and probabilistic planning  kushmerick  hanks   
weld        

   

fithe pfu framework

 formalisms such as markov decision processes  mdps   probabilistic  possibilistic 
or using spohns epistemic beliefs  spohn        wilson        giang   shenoy 
       factored or not  possibly partially observable  puterman        monahan       
sabbadin        boutilier  dean    hanks        boutilier  dearden    goldszmidt 
      
many of these formalisms present interesting similarities 
 they include variables modeling the state of the environment  environment variables 
or the decisions  decision variables  
 they use sets of functions which  depending on the formalism considered  can model
plausibilities  feasibilities  or utilities 
 they use operators either to combine local information  such as  to aggregate probabilities under independence hypothesis    to aggregate gains and costs   or to project
a global information  such as   to compute a marginal probability  min or max to
compute an optimal decision  
even if the meaning of variables  functions  and combination or projection operators
may be specific to each formalism  they can all be seen as graphical models in the sense that
they exploit  implicitly or explicitly  a hypergraph of local functions between variables  this
article shows that it is possible to build a generic algebraic framework subsuming many of
these formalisms by reducing decision making problems to a sequence of so called variable
eliminations on an aggregation of local functions 
such a generic framework will be able to provide 
 a better understanding of existing formalisms  a generic framework has an obvious
theoretical and pedagogical interest  since it can bring to light similarities and differences between the formalisms covered and help people of different communities to
communicate on a common basis 
 increased expressive power   a generic framework may be able to capture problems
that cannot be directly modeled in any existing formalism  this increased expressiveness should be reachable by capturing the essential algebraic properties of existing
frameworks 
 generic algorithms  ultimately  besides a generic framework  it should be possible
to define generic algorithms capable of solving problems defined in this framework 
this objective fits into a growing effort to identify common algorithmic approaches
that were developed for solving different ai problems  it may also facilitate crossfertilization by allowing each subsumed framework to reuse algorithmic ideas defined
in another one 
      article outline
after the introduction of some notations and notions  the article starts by showing  with a
catalog of existing formalisms for decision making  that a generic algebraic framework can
   

fipralet  verfaillie    schiex

be informally identified  this generic framework  called the plausibility feasibility utility
 pfu  framework  is then formally introduced in three steps      algebraic structures capturing plausibilities  feasibilities  and utilities are introduced  section         these algebraic structures are exploited to build a generic form of graphical model  section     and
    problems over such graphical models are captured by the notion of queries  section    
the framework is analyzed in section   and generic algorithms are defined in section   
a table recapitulating the main notations used is available in appendix a and the proofs
of all propositions and theorems appear in appendix b  a short version of the framework
described in this article has already been published  pralet  verfaillie    schiex      c  

   background notations and definitions
the essential objects used in the article are variables  domains  and local functions  called
scoped functions  
definition    the domain of values of a variable x is denoted dom x  and for every
a  dom x    x  a  denotes the assignment of value a to x  by extension  for a set of
variables s  we denote
q by dom s  the cartesian product of the domains of the variables in
s  i e  dom s    xs dom x   an element a of dom s  is called an assignment of s  
if a    a  are assignments of disjoint subsets s    s    then a   a    called the concatenation
of a  and a    is the assignment of s   s  where variables in s  are assigned as in a  and
variables in s  are assigned as in a    if a is an assignment of a set of variables s  the
projection of a onto s    s is the assignment of s   where variables are assigned to their
value in a 
definition     scoped function  a scoped function is a pair  s    where s is a set of
variables and  is a function mapping elements in dom s  to a given set e  in the following 
we will often consider that s is implicit and denote a scoped function  s    as  alone  the
set of variables s is called the scope of  and is denoted sc    if a is an assignment of a
superset of sc   and a  is the projection of a onto sc    we define  a  by  a     a    
for example  a scoped function  mapping assignments of sc   to elements of the
boolean lattice b    t  f   is analogous to a constraint describing the subset of dom sc   
of authorized tuples in constraint networks 
from this  the general notion of graphical model can be defined 
definition     graphical model  a graphical model is a pair  v    where v    x            xn  
is a finite set of variables and                 m   is a finite set of scoped functions whose
scopes are included in v  
the terminology of graphical models is used here simply because a set of scoped functions
can be represented as a hypergraph that contains one hyperedge per function scope  as
we will see  this hypergraph captures a form of independence  see section    and induces
parameters for the time and space complexity of our algorithms  see section     this
definition of graphical models generalizes the usual one used in statistics  defining a graphical
   an assignment of s    x            xk   is actually a set of variable value pairs   x    a              xk   ak     we
assume that variables are implicit when using a tuple of values  a            ak    dom s  

   

fithe pfu framework

model as a  directed or not  graph where the nodes represent random variables and where
the structure captures probabilistic independence relations 
local scoped functions in a graphical model give a space tractable definition of a
global function defined by their aggregation  for example  in a bayesian network  pearl 
      a global probability distribution px y z over x  y  z may be defined as the product
 using operator   of a set of scoped functions  px   py x   pz y    local scoped functions
can also facilitate the projection of the information expressed by a graphical model onto a
smaller scope  for example  in order to compute
p a marginal
p probability distribution py z
from the previous network  we can computep x px y z     x px  py x    pz y and avoid
taking pz y into account  here the operator
is used to project information onto a smaller
scope by eliminating variable x  operators used to combine scoped functions will be called
combination operators  while operators used to project information onto smaller scopes will
be called elimination operators 
definition     combination  let       be scoped functions to e  and e  respectively  let
   e  e   e be a binary operator  the combination of   and     denoted by       is
the scoped function to e with scope sc    sc     defined by        a       a    a 
for all assignments a of sc      sc       is called the combination operator of   and
   
in the rest of the article  all combination operators will be denoted  
definition     elimination  let  be a scoped function to e  let op be an on e which
is associative  commutative  and has an identity element   the elimination of variable
x from  with op is a scoped function whose scope is sc     x  and whose value for an
assignment a of its scope is  opx   a    opadom x   a  x  a    in this context  op is called
the elimination operator for x  the elimination of a set of variables s    x            xk   from
 is a function with scope sc    s defined by ops  a    opa  dom s   a a    
p
hence  when computing x  px  py x  pz x    scoped functions are aggregated using
the combination operator     and the information is projected by eliminating x using
the elimination operator    in this article   denotes elimination operators 
in some cases  the elimination of a set of variables s with an operator op from a scoped
function  should only be performed on a subset of dom s  containing assignments that
satisfy some property denoted by a boolean scoped function f   then  we must compute
for every a  dom sc    s  the value opa  dom s  f  a    t  a a     for simplicity and
homogeneity  and in order to always use elimination over dom s   we can equivalently
truncate  so that elements of dom s  which do not satisfy f are mapped to a special
value  denoted   which is itself defined as a new identity for op 
definition     truncation operator  the unfeasible value  is a new special element that
is supposed to be outside of the domain e of every elimination operator op   e  e  e 
we explicitly extend every elimination operator op   e  e  e on e     by taking the
convention op   e    op e      e for all e  e     
let  t  f   be the boolean lattice  for any boolean b and any e  e  we define b   e to be
equal to e if b   t and  otherwise    is called the truncation operator 

   

fipralet  verfaillie    schiex

given a boolean scoped function f    and   make it possible to write quantities like
opa  dom s  f  a    t  as the elimination ops  f     
in order to solve decision problems  one usually wants to compute functions mapping the
available information to a decision  the notion of decision rules will be used to formalize
this 
definition     decision rule  policy  a decision rule for a variable x given a set of variables
s   is a function    dom s      dom x  mapping each assignment of s   to a value in dom x  
by extension  a decision rule for a set of variables s given a set of variables s   is a function
   dom s      dom s   a set of decision rules is called a policy 
definition     optimal decision rule  consider a totally  ordered set e  a scoped function
 from dom sc    to e  and a set of variables s  sc    a decision rule    dom sc   
s   dom s   is said to be optimal iff  for all  a  a     dom sc    s   dom s  
 a  a     a a     resp   a  a     a a      such a decision rule always exists
when dom sc    is finite 
in other words  optimal decision rules are examples of decision rules given by argmin
and argmax  in this article  we consider that optimality on decision rules is always given by
min or max on some totally ordered set  
definition     directed acyclic graph  dag   a directed graph g is a dag if it contains
no directed cycle  when variables are used as vertices  pag  x  denotes the set of parents of
variable x in g 
last      n  will denote the set of integers i such that    i  n 

   from examples of graphical models to a generic framework
we now present different ai formalisms for expressing and solving decision problems  in
the most simple case  a single decision which maximizes utility is sought  the introduction
of plausibilities  uncertainties   unfeasible actions  feasibilities   and sequential decision
 several decision steps with some observations between decision steps  only appears in the
most sophisticated frameworks  the goal of this section is to show that these formalisms
can all be viewed as graphical models where specific elimination and combination operators
are used 
    examples of graphical models
the examples used cover various ai formalisms  which are briefly described  a wider and
more accurate review of existing graphical models could be provided  pralet        
      constraint networks
constraint networks  cns  mackworth         often called constraint satisfaction problems
 csps   are graphical models  v    where the scoped functions in  are constraints mapping
assignments onto  t  f    the usual query on a cn is to determine the existence of an

   

fithe pfu framework

assignment of v that satisfies all constraints  by setting f  t  this decision problem can
be answered by computing 


max    
   
v



if this quantity equals true  then an optimal decision rule for v defines a solution  this
query can be answered by performing eliminations  using max  on a combination of scoped
functions  using    replacing the hard constraints in  by soft constraints  boolean scoped
functions being replaced by cost functions  and replacing  by an abstract operator  equal
to    min          leads to queries on a valued and totally ordered semiring cn  bistarelli
et al         
      bayesian networks
bayesian networks  bns  pearl        can model problems with plausibilities expressed as
probabilities  a bn is a graphical model  v    in which  is a set of local conditional
probability distributions      px   pag  x    x  v    where g is a dag with vertices in v  
a bn represents a joint probability distribution p
qv over all variables as a combination of
local conditional probability distributions  pv   xv px   pag  x     just as the combination
of local constraints in a cn defines a global constraint over all variables  one possible query
on a bn is to compute the marginal probability distribution of a variable y  v  
 
x
x
y
py  
pv  
px   pag  x   
   
v  y 

v  y 

xv

equation   corresponds to variable eliminations  with    on a product of scoped functions 
in other queries on bns such as map  maximum a posteriori hypothesis   eliminations
with max are also performed 
      quantified boolean formulas and quantified cns
quantified boolean formulas  qbfs  and quantified cns  bordeaux   monfroy        can
model sequential decision problems  let x    x    x  be boolean variables  a qbf using the
so called prenex conjunctive normal form looks like  with f  t  
x  x  x    x   x      x   x       max min max  x   x      x   x     
x 

x 

x 

   

thus  the query is there a value for x  such that for all values of x    there exists a value
for x  such that the clauses x   x  and x   x  are satisfied  can be answered as in
equation   using a sequence of eliminations  max over x    min over x    and max over x   
on a conjunction of clauses  in a quantified cn  clauses are replaced by constraints 
      stochastic cns
a stochastic cn  walsh        can model sequential decision problems with probabilities as
plausibilities and hard requirements as utilities  provided that the decisions do not influence
the environment  the so called contingency assumption   in a stochastic cn  two types of
   

fipralet  verfaillie    schiex

variables are defined  decision variables di and environment  stochastic  variables sj   a
global probability distribution over the environment variables is expressed as a combination
of local probability distributions  if the environment variables are mutually independent 
these local probability distributions are simply unary probability distributions psj   finally 
a stochastic cn defines a set of constraints  c            cm   mapping tuples of values onto
        instead of  t  f     this allows constraints to be multiplied with probabilities 
consider a situation where first two decisions d  and d  are made  then an environment
variable s  is observed  then decisions d  and d  are made  while an environment variable s 
remains unobserved  a possible query on a stochastic cn is to compute decision rules for
d    d    d    and d  which maximize the expected constraint satisfaction  through equation   
q

x
x
c
   
 ps   ps    
max
max
i   m  i  
d   d 

s 

d   d 

s 

the answer to the query defined by equation   is determined by a sequence of eliminations
 max over the decision variables    over the environment ones  on a combination of scoped
functions  probabilities are combined using   constraints are combined using   since they
are expressed onto        instead of  t  f    and probabilities are combined with constraints
using   
      influence diagrams
influence diagrams  howard   matheson        can model sequential decision problems
with probabilities as plausibilities together with gains and costs as utilities  they can be
seen as an extension of bns including the notions of decision and utility  more precisely 
an influence diagram is a composite graphical model defined by three sets of variables
organized in a dag g      a set s of chance variables  for each s  s  a conditional
probability distribution ps   pag  s  of s given its parents in g is specified      a set d of
decision variables  for each d  d  pag  d  is the set of variables observed before decision
d is made      a set     u            um   of utility variables  each of which is associated with
a utility function ui   upag  ui   of scope pag  ui    utility variables p
must be leaves in the
dag  and the utility functions define a global additive utility ug   i   m  ui  
the usual problem associated with an influence diagram is to compute decision rules
maximizing the global expected utility  if we modify the example used for stochastic cns
by replacing ps  by ps    d    ps  by ps    d   d    and the constraints c            cm by the additive
utility functions u            um   then an optimal policy can be obtained by computing optimal
decision rules for d    d    d    and d  in equation   

x
x
 p
max
max
ps    d   ps    d   d  
u
 
   
i
i   m 
d   d 

s 

d   d 

s 

again  the answer to the query defined by equation   can be computed by a sequence
of eliminations  alternating max  and sum eliminations  on a combination of scoped functions  plausibilities combined using   utilities combined using    plausibilities and utilities
combined using   

   

fithe pfu framework

      valuation networks
valuation networks  shenoy        can model sequential decision problems with plausibilities  feasibilities  and utilities  where plausibilities are combined using  and where utilities
are additive  a valuation network is composed of several sets of nodes and valuations     
a set d of decision nodes      a set s of chance nodes      a set f of indicator valuations 
which specify unfeasible assignments of decision and chance variables      a set p of probability valuations  which are multiplicative factors of a joint probability distribution over
the chance variables  and     a set
p u of utility valuations  representing additive factors
of a joint utility function ug  
ui u ui   arcs between nodes are also used to define
the order in which decisions are made and chance variables are observed  if this order is
d   d   s   d   d   s    it can be shown that optimal decision rules for d    d    d    d 
are defined through equation   


 


x
x 
y
x
  fi   
max
max
pi   
ui   
   
d   d 

s 

d   d 

fi f

s 

pi p

ui u

local feasibility constraints are combined using   and combined with other scoped functions using the truncation operator    cf  definition    
      finite horizon markov decision processes
finite horizon markov decision processes  mdps  puterman        monahan        sabbadin        boutilier et al               model sequential decision problems with plausibilities and utilities over a horizon of t time steps  for every time step t  a variable st
represents the state of the environment and a variable dt represents the decision made after
observing st   in factored mdps  several state variables may be used at each time step 
in a probabilistic finite horizon mdp  plausibilities over the environment are described by
local probability distributions pst     st  dt of being in state st   given st and dt   the utilities
over states and decisions are local additive rewards rst  dt   and boolean functions fdt   st can
express whether a decision dt is feasible in state st   an optimal policy for each initial state
s  can be computed by the following equation  which is a bit unusual for defining optimal
policies for a mdp  but is equivalent to the usual form  
 
 


max u max       u max
d 

s 

d 

st

dt


t   t  

fdt  st

 

p pst    st  dt
t   t  

pu

u rst  dt
t   t  

 

   

plausibilities are combined using p     utilities are combined using u      plausibilities
and utilities are combined using pu     decision variables are eliminated using max  and
environment variables are eliminated using u      the truncation operator   enables the
elimination operators to ignore unfeasible decisions 
in a pessimistic possibilistic finite horizon mdp  sabbadin         probability distributions pst     st  dt are replaced by possibility distributions st     st  dt   rewards rst  dt are
replaced by preferences st  dt   and the operators used are u   p   u   min and
pu    p  u   max    p  u  

   

fipralet  verfaillie    schiex

    towards a generic framework
the previous section shows that usual queries in various existing formalisms can be reduced
to a sequence of variable eliminations on a combination of scoped functions 
this observation has led to the definition of algebraic mdps  perny  spanjaard    weng 
      or to the definition of valuation algebras  shenoy        kolhas         a generic
algebraic framework in which eliminations can be performed on a combination of scoped
functions  however  valuation algebras use only one combination operator  whereas several
combination operators may be needed to manipulate different types of scoped functions  as
previously shown   moreover  valuation algebras can deal with only one type of elimination 
whereas several elimination operators may be required for handling the different types of
variables  in valuation networks  shenoy         plausibilities are necessarily represented as
probabilities  and eliminations with min cannot be performed  essentially  a more powerful
framework is needed 
in order to be simple and yet general enough to cover the queries defined by equations  
to    the generic form we should consider is 
 



 
sov

 fi

fi f

 

p
pi p

pi

pu

u
ui u

ui

 

   

where      is used to combine local feasibilities  p is used to combine plausibilities  u
is used to combine utilities  pu is used to combine plausibilities and utilities  and the
truncation operator   is used to ignore unfeasible decisions without having to deal with
elimination operations over restricted domains       f   p   u are  possibly empty  sets
of local feasibility  plausibility  and utility functions respectively      sov is an operatorvariable s  sequence  indicating how to eliminate variables  sov involves min or max to
eliminate decision variables and an operator u to eliminate environment variables 
equation   is still very informal  to define it formally  and to provide it with clear
semantics  we need to define three key elements 
   we must capture the essential properties of the combination operators p   u   pu
used respectively to combine plausibilities  utilities  and plausibilities with utilities 
we must also characterize the elimination operators u and p used to project information coming from utilities and plausibilities  these operators will define the
algebraic structure of the pfu  plausibility feasibility utility  framework 
   on this algebraic structure  we must define a generic form of graphical model  involving a set of variables and sets of scoped functions expressing plausibilities  feasibilities 
and utilities  sets p   f   u    together  they will define a pfu network  the factored
form offered by such graphical models must also be analyzed in order to understand
when and how it can be applied to concisely represent global functions  using the
notion of conditional independence  
   in equation    all plausibilities are combined using the same operator p and all utilities are combined
using the same operator u   we denote such models as composite graphical models because they include
different types of scoped functions  plausibilities  feasibilities  and utilities   beyond this  equation  
also allows for heterogeneous information among each type of scoped functions  for example  in order to
manipulate both probabilities and possibilities  we can use p defined over probability possibility pairs
by  p        p  p           p   p    min          

   

fithe pfu framework

   finally  we must define queries on pfu networks capturing interesting decision problems  as equation   shows  such queries will be defined by a sequence sov of operatorvariable s  pairs  applied on the combination of the scoped functions in the network 
the fact that the answer to such queries represents meaningful values from the decision theory point of view will be proved by relating approach 
    summary
we have informally shown that several queries in various formalisms dealing with plausibilities and or feasibilities and or utilities reduce to sequences of variable eliminations
applied to combinations of scoped functions  using various operators  they can intuitively
be covered by equation   
the three key elements  an algebraic structure  a pfu network  and a sequence of variable eliminations  needed to formally define and give sense to this equation are introduced
in sections       and   

   the pfu algebraic structures
the first element of the pfu framework is an algebraic structure specifying how the information provided by plausibilities  feasibilities  and utilities is combined and synthesized 
this algebraic structure is obtained by adapting previous structures defined by friedman 
chu  and halpern  friedman   halpern        halpern        chu   halpern      a  for
representing uncertainties and expected utilities 
    definitions
definition      e     is a commutative monoid iff e is a set and   is a binary operator
on e which is associative  x    y   z     x   y    z   commutative  x   y   y   x   and
has an identity  e  e  x    e    e   x   x  
definition      e      is a commutative semiring iff
  e    is a commutative monoid  with an identity denoted  e  
  e    is a commutative monoid  with an identity denoted  e  
  e is annihilator for   x   e    e   
  distributes over   x   y  z     x  y    x  z   
definition     let  ea   a   a   be a commutative semiring  then   eb   b   ab   is a semimodule on  ea   a   a   iff
  eb   b   is a commutative monoid  with an identity denoted  eb  
 ab   ea  eb  eb satisfies
 ab distributes over b  a ab  b  b b       a ab b    b  a ab b     
 ab distributes over a   a  a a    ab b    a  ab b  b  a  ab b   
   

fipralet  verfaillie    schiex

 linearity property  a  ab  a  ab b     a  a a    ab b 
 for all b  eb    ea ab b    eb and  ea ab b   b 
definition     let e be a set with a partial order   an operator   on e is monotonic
iff  x  y    x   z  y   z  for all x  y  z  e 
    plausibility structure
various forms of plausibilities exist  halpern         the most usual one is probabilities  as
shown previously  for example with equation    probabilities are aggregated using p   
as a combination operator  and projected using p     as an elimination operator 
but plausibilities can also be expressed as possibility degrees in         possibilities are
eliminated using p   max and usually combined using p   min  an interesting case
appears when possibility degrees are booleans describing which states of the environment
are completely possible or impossible  plausibilities are then combined using p    and
eliminated using p    
another example is spohns epistemic beliefs  also known as  rankings  kappa rankings  spohn        wilson        giang   shenoy         in this case  plausibilities are
elements of n      called surprise degrees    is associated with non surprising situations 
  is associated with completely surprising  impossible  situations  and more generally a
surprise degree k can be viewed as a probability of k for an infinitesimal   surprise degrees
are combined using p     and eliminated using p   min 
to capture these various plausibility modeling frameworks  we start from friedmanhalperns work on plausibility measures  friedman   halpern        halpern         weydert        and darwiche ginsberg        developed similar approaches 
friedman halperns structure assume we want to express plausibilities over the assignments of a set of variables s  each subset of dom s  is called an event  friedman and
halpern        define plausibilities as elements of a set ep called the plausibility domain 
ep is equipped with a partial order p and with two special elements  p and  p satisfying
 p p p p  p for all p  ep   a function p l    dom s   ep is a plausibility measure over s
iff it satisfies p l      p   p l dom s      p   and  w   w      p l w    p p l w      this
means that  p is associated with impossibility   p is associated with the highest plausibility
degree  and the plausibility degree of a set is as least as high as the plausibility degree of
each of its subsets 
among all plausibility measures  we focus on so called algebraic conditional plausibility
measures  which use abstract functions p and p which are analogous to   and  for
probabilities  these measures satisfy properties such as decomposability  for all disjoint
events w    w    p l w   w      p l w    p p l w     as  is associative and commutative 
it follows that p is associative and commutative on representations of disjoint events  i e 
 a p b  p c   a p  b p c  and a p b   b p a if there exist pairwise disjoint sets
w    w    w  such that p l w      a  p l w      b  p l w      c  more details are available in
friedman halperns references  friedman   halpern        halpern        
restriction of friedman halperns structure an important aspect in friedmanhalperns work is that the algebraic properties of p and p hold only on the domains

   

fithe pfu framework

of definition of p and p   although this is sufficient to express and manipulate plausibilities  it can be algorithmically restrictive  indeed  consider a bayesian network involving two
that px  is a constant
boolean variables  x    x    and define px   x  as px   px    x    assume
p
 px    x    x    t   must
factor          in order to evaluate px    x    t    the quantity x    p
be computed  to do so  it is simpler to factor it and compute    x  px    x    x    t    if
px    x    x    t   x    t         and px    x    x    t   x    f           the answer is               
     performing           requires applying addition outside of the range of usual probabilities  for which a p b is defined only if a   b     since two probabilities whose sum exceeds
  cannot be associated with disjoint events 
to take such issues into account  we adapt friedman halperns ep   p   p so that p
and p become closed in ep and so that friedman halperns axioms hold in the closed
structure  once this closure is performed  we obtain a plausibility structure 
definition     a plausibility structure is a tuple  ep   p   p   such that
  ep   p   p   is a commutative semiring  identities for p and p are denoted  p and
 p respectively  
 ep is equipped with a partial order p such that  p   min ep   and such that p and
p are monotonic with respect to p  
elements of ep are called plausibility degrees
note that  p is not necessarily the maximal element of ep   for probabilities  friedmanhalperns structure would be                  where a    b   a   b if a   b    and is
undefined otherwise  in order to get closed operators  we take  ep   p   p      r        
and therefore  p     is not the maximal element in ep   in some cases  friedman halperns
structure is already closed  this is the case with  rankings  where  ep   p   p      n 
     min      and with possibilities  where  ep   p   p   is typically          max  min  
although other choices like          max    are possible  
given two plausibility structures  ep   p   p   and  ep     p    p    if we define e   ep ep   
 p    p       p    p        p  p p    p    p p     and  p    p       p    p        p  p p    p    p p      then
 e      is a plausibility structure too  this allows us to deal with different kinds of plausibilities  such as probabilities and possibilities  or with families of probability distributions 
      from plausibility measures to plausibility distributions
let us consider a plausibility measure  friedman   halpern        halpern        p l  
 dom s   ep over a set of variables s  assume that p l w   w      p l w    p p l w   
for all disjoint sets w    w    dom s    as is the case with friedman halperns algebraic
plausibility measures  this assumption entails that p l w     p aw p l  a   for all w 
 dom s    this holds even for w    since  p is the identity for p   hence  defining
p l  a   for all complete assignments a of s suffices to describe p l  moreover  in this
case  the three conditions defining plausibility measures  p l dom s      p   p l      p  
and  w   w      p l w    p p l w      are equivalent to just p adom s  p l  a      p  
using the monotonicity of p for the third condition  this means that we can deal with
plausibility distributions instead of plausibility measures 

   

fipralet  verfaillie    schiex

definition     a plausibility distribution over s is a function ps   dom s   ep such
that p adom s  ps  a     p  
the normalization condition imposed on plausibility distributions is simply a generalization of the convention that probabilities sum up to    it captures the fact that the
disjunction of all the assignments of s has  p as a plausibility degree 
proposition    a plausibility distribution ps can be extended to give a plausibility distribution ps   over every s    s  defined by ps     p ss   ps  
    feasibility structure
feasibilities define whether a decision is possible or not  and are therefore expressed as
booleans in  t  f    this set is equipped with the total order bool satisfying f bool t 
boolean scoped functions expressing feasibilities are combined using the operator  
since an assignment of decision variables is feasible iff all feasibility functions agree that
this assignment is feasible 
given a scoped function fi expressing feasibilities  we can compute whether an assignment a of a set s of variables is feasible according to fi by computing sc fi  s fi  a   since
a is feasible according to fi iff one of its extensions over sc fi   is feasible  this means that
the projection of feasibility functions onto a smaller scope uses the elimination operator  
as a result  feasibilities are expressed using the feasibility structure sf     t  f        
sf is not only a commutative semiring  but also a plausibility structure  therefore  all
plausibility notions and properties apply to feasibility  we may therefore speak of feasibility distributions  and the normalization condition s fs   t imposed on a feasibility
distribution fs over s means that at least one decision must be feasible 
    utility structure
utilities express preferences and can take various forms  typically  utilities can be combined
with    but utilities can also model priorities combined using min  also  when utilities
represent hard requirements such as goals to be achieved or properties to be satisfied  they
can be modeled as booleans combined using   more generally  utility degrees are defined as
elements of a set eu equipped with a partial order u   smaller utility degrees are associated
with less preferred events  utility degrees are combined using an operator u which is
assumed to be associative and commutative  this guarantees that combined utilities do
not depend on the way combination is performed  we also assume that u admits an
identity  u  eu   representing indifference  this ensures the existence of a default utility
degree when there are no utility scoped functions  these properties are captured in the
following notion of utility structure 
definition      eu   u   is a utility structure iff it is a commutative monoid and eu is
equipped with a partial order u   elements of eu are called utility degrees 
eu may have a minimum element u representing unacceptable events and which will
be an annihilator for u  the combination of any event with an unacceptable one must be
unacceptable too   u is also usually monotonic  but these properties are not necessary to
establish the forthcoming results 
   

fithe pfu framework

the distinction between plausibilities  feasibilities  and utilities is important and can
be justified using algebraic arguments  since p and u may be different operators  for
example  p    and u     in usual probabilities with additive utilities   we must
distinguish plausibilities and utilities  it is also necessary to distinguish feasibilities from
utilities or plausibilities  indeed  imagine a simple card game involving two players p  and
p    each having three cards  a jack j  a queen q  and a king k  p  must first play one
card x   j  q  k   then p  must play a card y   j  q  k   and last p  must play a card
z   j  q  k   a rule forbids to play the same card consecutively  feasibility functions fxy  
x    y and fyz   y    z   the goal for p  is that his two cards x and z have a value strictly
better than p  s card y  by setting j   q   k  this requirement corresponds to two utility
functions uxy   x   y and uyz   z   y  in order to compute optimal decisions in presence of
unfeasibilities  we must restrict optimizations  eliminations of decision variables with max
or min  to feasible values  instead of maxx miny maxz  uxy  uyz    we must compute 



max
min
max
 uxy  a  b   uyz  b  c  
 
adom x 

bdom y  fxy  a b  t

cdom z  fyz  b c  t

which  by setting f  t  is logically equivalent to


max min fxy  max  fyz   uxy  uyz     
x

y

z

in the latter quantity  feasibility functions concerning p  s play  y  are taken into account
using logical connective   so that p  s unfeasible decisions are ignored in the set of all
scenarios considered  feasibility functions concerning p  s last move  z  are taken into account using   so that p  does not consider scenarios in which he achieves a forbidden move 
therefore  feasibility functions cannot be handled simply by using the same combination
operator as for utility functions  we need to dissociate what is unfeasible for all decision
makers  unfeasibility is absolute  from what is unacceptable or required for one decision
maker only  utility is relative   i e  what a decision maker wants from what a decision maker
can do 
at a more general level  for example when uxy and uyz are soft requirements or when we
do not know exactly in advance who controls which variable  the logical connectives  and
 cannot be used anymore  in order to ignore unfeasible values in decision variables elimination  we use the truncation operator   introduced in definition    in order to eliminate a
variable x from a scoped function  while ignoring unfeasibilities indicated by a feasibility
function fi   we simply perform the elimination of x on  fi     instead of   this maps
unfeasibilities to value   which is ignored by elimination operators  see definition     on
the example above  if uxy and uyz were additive gains and costs  we would compute


max min fxy   max  fyz    uxy   uyz     
x

y

z

    combining plausibilities and utilities via expected utility
to define expected utilities  plausibilities and utilities must be combined  consider a
situation where a utility ui is obtained with a plausibility pi for all i      n    with

   

fipralet  verfaillie    schiex

p  p       p pn    p   l     p    u              pn   un    is classically called a lottery  von neumann   morgenstern         when we speak of expected utility  we implicitly speak of the
expected utility eu  l  of a lottery l 
the standard way to combine plausibilities and utilities is to use the
p probabilistic expected utility  von neumann   morgenstern        defining eu  l  as i   n    pi  ui    it
aggregates plausibilities and utilities using the combination operator pu    and projects
the aggregated information using the elimination operator u      however  alternative
definitions exist 
 if plausibilities are possibilities  then eu  l    mini   n   max    pi   ui   with the
possibilistic pessimistic expected utility  dubois   prade         i e  u   min and
pu    p  u   max  p  u   and eu  l    maxi   n   min pi   ui   with the possibilistic
optimistic expected utility  dubois   prade         i e  u   max and pu   min  
 if plausibilities are  rankings and utilities are positive integers  giang   shenoy 
       then eu  l    mini   n    pi   ui    i e  u   min and pu      
to generalize these definitions of eu  l   we start from chu halperns work on generalized expected utility  chu   halpern      a      b  
chu halperns structure generalized expected utility is defined in an expectation domain  which is a tuple  ep   eu   eu    u   pu   such that      ep is a set of plausibility degrees
and eu is a set of utility degrees      pu   ep  eu  eu  combines plausibilities with
utilities and satisfies  p pu u   u      u   eu   eu   eu  is a commutative and associative
operator which can aggregate the information combined using pu  
when a decision problem is additive  i e  when  for all plausibility degrees p    p  associated with disjoint events   p  p p    pu u    p  pu u  u  p  pu u   the generic definition
of the expected utility of a lottery is 
eu  l    u  pi pu ui   
i   n  

classical expectation domains also satisfy additional properties such as u is monotonic and  p pu u    u   where  u is the identity of u  
restriction of chu halperns structure for sequential decision making if we
use pu   ep  eu  eu  and u   eu   eu   eu  to compute expected utilities at
the first decision step  then we need to introduce operators  pu   ep  eu   eu   and
 u   eu    eu    eu   to compute expected utilities at the second decision step  in the end  if
there are t decision steps  we must define t operators pu and t operators u   in order to
avoid the definition of an algebraic structure that would depend on the number of decision
steps  we take eu   eu  and work with only one operator pu   ep  eu  eu and one
operator u   eu  eu  eu  
as for plausibilities  and for the sake of the future algorithms  we restrict chu halperns
expectation domains  ep   eu   eu   u   pu   so that u and pu become closed and generalize
properties of the initial u and pu   however  this closure is not sufficient to deal with
sequential decision making  because chu halperns expected utility is designed for one step
decision processes only  this is why we introduce three additional axioms for u and pu  
   

fithe pfu framework

 the first axiom is similar to a standard axiom for lotteries  von neumann   morgenstern        defining compound lotteries  it states that if a lottery l  involves a
utility u with plausibility p    and if one of the utilities of a lottery l  is the expected
utility of l  with plausibility p    then it is as if utility u had been obtained with
plausibility p  p p    this gives the axiom p  pu  p  pu u     p  p p    pu u 
 we further require that pu distributes over u   to justify this point  assume that a
lottery l     p    u      p    u     is obtained with plausibility p  two different versions
of the contribution of l to the global utility degree can be derived  the first is p pu
  p  pu u    u  p  pu u      and the second  which uses compound lotteries  is   p p
p    pu u    u   p p p    pu u     we want these two quantities to be equal for all
p  p    p    u    u    this can be shown to be equivalent to a simpler property p pu  u  u
u       p pu u    u  p pu u     i e  that pu distributes over u  
 finally  we assume that pu is right monotonic  i e   u  u u      p pu u  u
p pu u      this means that if an agent prefers  strictly or not  an event ev  to
another event ev    and if both events have the same plausibility degree p  then the
contribution of ev  to the global expected utility degree must not be lesser than the
contribution of ev   
these axioms define the notion of expected utility structure 
definition     let  ep   p   p   be a plausibility structure and let  eu   u   be a utility
structure   ep   eu   u   pu   is an expected utility structure iff
  eu   u   pu   is a semimodule on  ep   p   p    cf  definition     
 u is monotonic for u and pu is right monotonic for u   u  u u      ppu u  u
p pu u     
many structures considered in the literature are instances of expected utility structures 
as shown in proposition    the results presented in the remaining of the article hold not only
for these usual expected utility structures  but more generally for all structures satisfying
the axioms specified in definitions         and    
proposition    the structures in table   are expected utility structures 
it is possible to define more complex expected utility structures from existing ones  for
example  from two expected utility structures  ep   eu   u   pu   and  ep    eu     u    pu    it is
possible to build a compound expected utility structure  ep  ep    eu  eu      u     pu    this
can be used to deal simultaneously with probabilistic and possibilistic expected utility or
more generally to deal with tuples of expected utilities 
the business dinner example to flesh out these definitions  we consider the following
toy example  which will be referred to in the sequel  it does not correspond to a concrete
real life problem  but is used for its simplicity  peter invites john and mary  a divorced
couple  to a business dinner in order to convince them to invest in his company  peter
knows that if john is present at the end of the dinner  he will invest    k  the same holds
for mary with    k  peter knows that john and mary will not come together  one of them
   

fipralet  verfaillie    schiex

 
 
 
 
 
 
 
 
 

ep
r 
r 
      
      
n    
 t  f  
 t  f  
 t  f  
 t  f  

p





bool
bool
bool
bool

p
 
 
max
max
min





p


min
min
 





 p    p
    
    
    
    
   
f  t
f  t
f  t
f  t

eu
r    
r 
      
      
n    
 t  f  
 t  f  
 t  f  
 t  f  

u





bool
bool
bool
bool

u
 

min
min
 





u
 
 
max
min
min





pu
 u    u

    

    
min
    
max  p  u      
 
   

f  t

t  t

f  f

t  f

table    expected utility structures for     probabilistic expected utility with additive
utilities  allows the probabilistic expected utility of a cost or a gain to be computed      probabilistic expected utility with multiplicative utilities  also called
probabilistic expected satisfaction  allows the probability of satisfaction of some
constraints to be computed      possibilistic optimistic expected utility     possibilistic pessimistic expected utility     qualitative utility with  rankings and
with only positive utilities     boolean optimistic expected utility with conjunctive utilities  allows one to know whether there exists a possible world in which all
goals of a set of goals g are satisfied   bool denotes the order on booleans such
that f bool t     boolean pessimistic expected utility with conjunctive utilities
 allows one to know whether in all possible worlds  all goals of a set of goals g are
satisfied      boolean optimistic expected utility with disjunctive utilities  allows
one to know whether there exists a possible world in which at least one goal of a
set of goals g is satisfied      boolean pessimistic expected utility with disjunctive
utilities  allows one to know whether in all possible worlds  at least one goal of a
set of goals g is satisfied  

has to baby sit their child   that at least one of them will come  and that the case john
comes and mary does not occurs with a probability of      as for the menu  peter can order
fish or meat for the main course  and white or red for the wine  however  the restaurant
does not serve fish and red wine together  john does not like white wine and mary does not
like meat  if the menu does not suit them  they will leave the dinner  if john comes  peter
does not want him to leave the dinner because he is his best friend 
example  the dinner problem uses the expected utility structure representing probabilistic
expected additive utility  row   in table     the plausibility structure is  r          u     
pu     and utilities are additive gains   eu   u      r          with the convention
that u          
    relation with existing structures
if we compare the algebraic structures defined with existing ones  friedman   halpern 
      halpern        chu   halpern      a   we can observe that 

   

fithe pfu framework

 the structures defined here are less general than friedman chu halperns  since additional axioms are introduced  for example  plausibility structures are not able to
model belief functions  shafer         which are not decomposable  whereas this is
possible using friedman halperns plausibility measures  however  the authors are
not aware of existing schemes for decision theory using belief functions   moreover  for one step decision processes  chu halperns generalized expected utility is
more general  since it assumes that pu   ep  eu  eu  whereas we consider
pu   ep  eu  eu  
 conversely  the structures defined here can deal with multi step decision processes
whereas chu halperns generalized expected utility is designed for one shot decision
processes  beyond this  other axioms  such as the use of closed operators  are essentially motivated by operational reasons  we use a less expressive structure for the
sake of future algorithms  cf  section    
as a set ep of plausibility degrees and a set eu of utility degrees are defined  plausibilities and utilities must be cardinal  purely ordinal approaches such as cp nets  boutilier 
brafman  domshlak  hoos    poole         which  like bayesian networks  exploit the notion of conditional independence to express a network of purely ordinal preference relations 
are not covered 
as pu takes values in eu   it is implicitly assumed that plausibilities and utilities are
commensurable  works from fargier and perny         describing a purely ordinal approach 
where qualitative preferences and plausibilities are not necessarily commensurable  are not
captured either  also  works from giang and shenoy         which satisfy all required
associativity  commutativity  identity  annihilator  and distributivity properties  are not
covered because they implicitly use pu   ep  eu  eu  with eu    eu   even if the
expected utility eu  l     p  pu u    u  p  pu u    of a lottery l     p    u      p    u     stays
in eu   
furthermore  some axioms entail that only distributional plausibilities are covered  the
plausibility of a set of variable assignments is determined by the plausibilities of each covered
complete assignment   dempster shafer belief functions  shafer        or choquet expected
utility  schmeidler        are not encompassed  finally  as only one partial order u on eu
is defined  it is assumed that the decision makers share the same preferences over utilities 
    summary
in this section  we have introduced expected utility structures  which are the first element
of the pfu framework  they specify how plausibilities are combined and projected  using
p and p respectively   how utilities are combined  using u    and how plausibilities and
utilities are aggregated to define generalized expected utility  using u and pu    the
structure chosen is inspired by friedman chu halperns plausibility measures and generalized expected utility  the main differences lie in the addition of axioms to deal with
multi step decision processes and in the use of extended domains to have closed operators 
motivated by operational reasons 

   

fipralet  verfaillie    schiex

   plausibility feasibility utility networks
the second element of the pfu framework is a network of scoped functions pi   fi   and
ui  cf  equation    over a set of variables v   this network defines a compact and structured representation of the state of the environment  of the decisions  and of the global
plausibilities  feasibilities  and utilities which hold over them 
in the rest of the article  a plausibility function denotes a scoped function to ep  the
set of plausibility degrees   a feasibility function is a scoped function to  t  f    the set
of feasibility degrees   and a utility function  a scoped function to eu  the set of utility
degrees  
    variables
in structured representations  decisions are represented using decision variables  which are
directly controlled by an agent  and the state of the environment is represented by environment variables  which are not directly controlled by an agent  the notion of agent used
here is restricted to cooperative and adversarial decision makers  if there is an uncertainty
on the way a decision maker behaves  then the decisions he controls will be modeled as
environment variables   we use vd to denote the set of decision variables and ve to denote
the set of environment variables  vd and ve form a partition of v  
example  the dinner problem can be modeled using six variables  bpj and bpm  value t
or f    representing johns and marys presence at the beginning  epj and epm  value t or
f    representing their presence at the end  mc  value f ish or meat   representing the main
course choice  and w  value white or red   representing the wine choice  thus  we have
vd    mc  w  and ve    bpj   bpm   epj   epm   
    decomposing plausibilities and feasibilities into local functions
using combined local functions to represent a global one raises some considerations  how
and when such local functions can be obtained from a global one  and conversely  when
such local functions are directly used  which implicit assumptions on the global function
are made  we now show that all these questions boil down to the notion of conditional
independence  in the following definitions and propositions   ep   p   p   corresponds to a
plausibility structure 
      preliminaries  generalization of bayesian networks results
assume that we want to express a global plausibility distribution ps  cf  definition    
as a combination of local plausibility functions pi   as work on bayesian networks  pearl 
      has shown  the factorization of a joint distribution is essentially related to the notion of conditional independence  to introduce conditional independence  we first define
conditional plausibility distributions 
definition     a plausibility distribution ps over s is said to be conditionable iff there
exists a set of functions denoted ps    s   one function for each pair s    s  of disjoint subsets
of s  such that if s    s    s  are disjoint subsets of s  then

   

fithe pfu framework

 a  for all assignments a of s  such that ps   a      p   ps    s   a  is a plausibility distribution over s    
 b  ps       ps   
 c  p s  ps   s    s    ps    s   
 d  ps   s    s    ps    s   s  p ps    s   
 e   ps   s   s    ps    s  p ps    s  p ps      ps   s    s    ps    s  p ps    s    
ps    s  is called the conditional plausibility distribution of s  given s   
condition  a  means that conditional plausibility distributions must be normalized 
condition  b  means that the information given by an empty set of variables does not
change the plausibilities over the states of the environment  condition  c  means that
conditional plausibility distributions are consistent from the marginalization point of view 
condition  d  is the analog of the so called chain rule with probabilities  condition  e  is a
kind of weak division axiom  
proposition   gives simple conditions on a plausibility structure  satisfied in all usual
frameworks  that suffice for plausibility distributions to be conditionable 
definition     a plausibility structure  ep   p   p   is called a conditionable plausibility
structure iff it satisfies the axioms 
 if p  p p  and p      p   then max p  ep   p    p p p    exists and is p  p  
 if p  p p    then there exists a unique p  ep such that p    p p p   
 if p  p p    then there exists a unique p  ep such that p    p p p   
proposition    if  ep   p   p   is a conditionable plausibility structure  then all plausibility distributions are conditionable  it suffices to define ps    s  by ps    s   a    max p 
ep   ps   s   a    p p ps   a   for all a  dom s   s    satisfying ps   a      p  
the systematic definition of conditional plausibility distributions given in proposition  
fits with the usual definitions of conditional distributions  which are  with probabilities 
ps    s   a    ps   s   a  ps   a   with  rankings  ps    s   a    ps   s   a   ps   a  
and with possibility degrees combined using min  ps    s   a    ps   s   a  if ps   s   a   
ps   a     otherwise  in the following  every conditioning statement ps    s  for conditionable plausibility structures will refer to the canonical notion of conditioning given in
proposition    conditional independence can now be defined 
   to avoid specifying that properties of ps    s  hold only for assignments a of s   s  satisfying ps   a    
 p   we use expressions such as ps    s     to denote a  dom s   s      ps   a      p   
 ps    s   a     a   
   compared to friedman and halperns conditional plausibility measures  friedman   halpern       
halpern          c  is the analog of axiom  alg     d  is the analog of axiom  alg     e  is the analog of
axiom  alg    and axiom  alg   corresponds to the distributivity of p over p  

   

fipralet  verfaillie    schiex

definition     let  ep   p   p   be a conditionable plausibility structure  let ps be a
plausibility distribution over s and s    s    s  be disjoint subsets of s  s  is said to be
conditionally independent of s  given s    denoted i s    s    s     iff ps   s    s    ps    s  p
ps    s   
this means that s  is conditionally independent of s  given s    iff the problem can be
split into one part depending on s  and s    and another part depending on s  and s    
this definition satisfies the usual properties of conditional independence  as proposition  
shows 
proposition    i           satisfies the semigraphoid axioms 
   symmetry  i s    s    s     i s    s    s    
   decomposition  i s    s   s    s     i s    s    s    
   weak union  i s    s   s    s     i s    s    s   s    
   contraction   i s    s    s     i s    s    s   s      i s    s   s    s    
proposition   makes it possible to use bayesian network techniques to express information in a compact way  with bayesian networks  a dag of variables is used to represent
conditional independences between the variables  pearl         in some cases  such as image
processing and statistical physics  it is more natural to express conditional independences
between sets of variables  if probabilities are used  such situations can be modeled using chain graphs  frydenberg         in a chain graph  the dag defined is not a dag of
variables  but a dag of sets of variables  called components  conditional probability distributions px   pag  x  of variables are replaced by conditional probability distributions pc   pag  c 
of components  each pc   pag  c  being expressed in a factored form c  c       ckc   markov
random fields  chellappa   jain        correspond to the case in which there is q
a unique
component equal to v   and in which the factored form of pv looks like   z  jj ehj
 gibbs distribution  
we now formally introduce dags over sets of variables  called dags of components 
and then use them to factor plausibility distributions 
definition     a dag g is said to be a dag of components over a set of variables s iff
the vertices of g form a partition of s  c g  denotes the set of components of g  for each
c  c g   pag  c  denotes the set of variables included in the parents of c in g  and ndg  c 
denotes the set of variables included in the non descendant components of c in g 
definition     let  ep   p   p   be a conditionable plausibility structure  let ps be a
plausibility distribution over s and let g be a dag of components over s  g is said to
be compatible with ps iff i c  ndg  c   pag  c    pag  c   for all c  c g   c is conditionally
independent of its non descendants given its parents  
   definition    differs from halperns  which is s  is conditionally independent  ci  of s  given s  iff
ps    s   s    ps    s  and ps    s   s    ps    s    halpern        called the definition we adopt noninteractivity  ni  and showed that ni is weaker than ci  this implies that ni is satisfied more often
and may lead to more factorizations  halpern gave a simple axiom  axiom  alg    under which ci and
ni are equivalent  though this axiom holds in many usual frameworks  it does not hold with possibility
degrees combined using min  a case covered by the pfu algebraic structure 

   

fithe pfu framework

theorem     conditional independence and factorization  let  ep   p   p   be a conditionable plausibility structure and let g be a dag of components over s 
 a  if g is compatible with a plausibility distribution ps over s  then ps   p cc g  pc   pag  c   
 b  if  for all c  c g   there is a function c pag  c  such that c pag  c   a  is a plausibility
distribution over c for all assignments a of pag  c   then s   p cc g  c pag  c  is a
plausibility distribution over s with which g is compatible 
theorem   links conditional independence and factorization  theorem   a  is a generalization of the usual result of bayesian networks  pearl        which says that if a dag
of variables
is compatible with a probability distribution ps   then ps can be factored as
q
ps   xs px   pag  x    theorem   b  is a generalization of the standard result of bayesian
networks  pearl        which says that  given a dag g of variables
q in s  if conditional
probabilities px   pag  x  are defined for each variable x  s  then xs px   pag  x  defines a
probability distribution over s with which g is compatible  both results are generalizations
since they hold for arbitrary plausibility distributions  and not for probability distributions
only   results similar in spirit are provided by halpern         who gives some conditions
under which a plausibility measure can be represented by a bayesian network 
theorem   a  entails that  in order to factor a global plausibility distribution ps   it
suffices to define a dag of components compatible with it  i e  to express conditional
independences  to define such a dag  the following systematic procedure can be used 
the initial dag of components is an empty dag g  while c g     c            ck    is not a
partition of s  do 
   let sk   c          ck    choose a subset ck of the set s  sk of variables not already
considered 
   add ck as a component to g and find a minimal subset pak of sk such that i ck   sk 
pak   pak    add edges directed from components containing at least one variable in
pak to ck   so that pag  ck      c c       ck      cpak     c 
the resulting dag of components is guaranteed to be compatible with ps   which implies  using theorem   a   that the local functions pi representing ps can simply be defined
as the functions in the set  pc   pag  c    c  c g    in practice  if there is a reasonable notion
of causes and effects  then networks that are smaller or somehow easier to build can be
obtained by using the following two heuristics in order to choose ck at each step of the
procedure above 
 r   consider causes before effects  in the dinner problem  this suggests not putting epj
in ck if its causes bpj and w are not in sk  
 r   gather in a component variables that are correlated even when all variables in sk are
assigned   bpj and bpm are correlated and  r   does not apply  indeed  we cannot
say that bpj has a causal influence on bpm   or that bpm has a causal influence on bpj  
since which of mary or john chooses first if  s he baby sits is not specified  we can
even assume that bpj and bpm are correlated via an unmodeled common cause  such

   

fipralet  verfaillie    schiex

as a coin toss that determines the baby sitter  hence  bpj and bpm can be put in the
same component c    bpj   bpm    
we say that  r   and  r   build a dag respecting causality  they must be seen just as
possible mechanisms that help in identifying conditional independences by using the notions
of causes and effects 
all the previous results extending bayesian networks results to plausibility distributions
also apply to feasibilities  indeed  the feasibility structure sf     t  f        is a particular
case of a conditionable plausibility structure  since it satisfies the axioms of definition    
we may therefore speak of conditional feasibility distribution  if s is a set of decision
variables  the construction of a dag compatible with a feasibility distribution fs leads to
the factorization fs   cc g  fc   pag  c   
      taking the differenty types of variables into account
the material defined in the previous subsection enables us to factor one plausibility distribution pve defined over the set ve of environment variables and one feasibility distribution
fvd defined over the set vd of decision variables  however  dealing with just one plausibility
distribution over ve and one feasibility distribution over vd is not sufficient 
indeed  for plausibilities  decision variables can influence the environment  for example 
the health state of a patient depends on the treatment chosen for him by a doctor   rather
than expressing one plausibility distribution over ve   we want to express a family of plausibility distributions over ve   one for each assignment of vd   to make this clear  we define
controlled plausibility distributions 
definition     a plausibility distribution over ve controlled by vd  or just a controlled
plausibility distribution   denoted pve    vd   is a function dom ve  vd    ep   such that
for all assignments ad of vd   pve    vd  ad   is a plausibility distribution over ve  
for feasibilities  it goes the other way around  the values of environment variables can
constrain the possible decisions  for example  an unmanned aerial vehicle which is flying
cannot take off   thus  we want to express a family of feasibility distributions over vd  
one for each assignment of ve   in other words  we want to express a controlled feasibility
distribution fvd    ve  
in order to directly reuse theorem   for controlled distributions  we introduce the notion
of the completion of a controlled distribution  this allows us to extend a distribution to
the full set of variables v by assigning the same plausibility  resp  feasibility  degree to
every assignment of vd  resp  ve    and to work with only one plausibility  resp  feasibility 
distribution 
   components such as  bpj   bpm   could be broken by assuming for example that bpm causally influences
bpj   i e  that mary chooses if she baby sits first  we can  and prefer to  keep the component as
 bpj   bpm   because  in general  breaking components can increase the scopes of the functions involved 
for example  assume that we want to model plausibilities over variables representing colors of pixels of
an n  n image  such that the color of a pixel probabilistically depends on the colors of its   neighbors
only  with a component approach  results of markov random fields  chellappa   jain        show that
the local functions obtained have scopes of size   only  whereas with a component breaking mechanism 
the size of the largest scope is linear in n  

   

fithe pfu framework

proposition    let  ep   p   p   be a conditionable plausibility structure  then  for all
n  n   there exists a unique p  such that p i       n  p     p  
definition     let  ep   p   p   be a conditionable plausibility structure and let pve    vd be
a controlled plausibility distribution  then  the completion of pve    vd is a function denoted
pve  vd   defined by pve  vd   pve    vd p p    where p  is the unique element of ep such that
p i    dom vd     p     p  the cardinality of a set  is denoted     
in other words  pve  vd is defined from pve    vd by assigning the same plausibility degree
p  to all assignments of vd   in the case of probability theory  it corresponds to saying that
the assignments of vd are equiprobable  the definition of the completion of a controlled
plausibility distribution could be made more flexible  instead of defining a uniform plausibility distribution over vd   we could define a plausibility distribution such that no assignment
of vd has  p as a plausibility degree  we arbitrarily choose the uniform distribution  the
goal being just to introduce some prior plausibilities over decision variables  for the sake of
factorization 
proposition    let pve  vd be the completion of a controlled plausibility distribution pve    vd  
then  pve  vd is a plausibility distribution over ve  vd and pve   vd   pve    vd  
as a result  we use pve   vd to denote pve    vd  and this is equivalent   similarly  it is
possible to complete a controlled feasibility distribution fvd    ve  
      a first factorization
proposition   below  entailed by theorem   a   shows how to obtain a first factorization of
pve   vd and fvd   ve  
definition     a dag g is a typed dag of components over ve  vd iff the vertices of
g form a partition of ve  vd such that each element of this partition is a subset of either
vd or ve   each vertex of g is called a component  the set of components contained in
ve  environment components  is denoted ce  g  and the set of components contained in vd
 decision components  is denoted cd  g  
proposition    let g be a typed dag of components over ve  vd   let gp be the partial
graph of g induced by the arcs of g incident to environment components  let gf be the
partial graph of g induced by the arcs of g incident to decision components  if gp is
compatible with the completion of pve    vd  cf  definition     and gf is compatible with
the completion of fvd    ve   then
pve   vd  

p pc   pag  c 
cce  g 

and fvd   ve  


ccd  g 

fc   pag  c   

this allows us to specify local pi and fi functions  it suffices to express each pc   pag  c 
and each fc   pag  c  to express pve   vd and fvd   ve in a compact way  in fact  we could have
defined two dags  one for the factorization of pve   vd and the other for the factorization
of fvd   ve   but these two dags can actually always be merged as soon as we make the
 undemanding  assumption that it is impossible  given x  vd and y  ve   that both x
influences y and y constrains the possible decision values for x  this assumption ensures
that the union of the two dags does not create cycles  we use just one dag for simplicity 
   

fipralet  verfaillie    schiex

example  consider the dinner problem to illustrate the first factorization step  one way
to obtain g is to use the causality based reasoning described after theorem    we start
with an empty dag  as epj and epm are both effects of bpj   bpm   w  or mc  they are not
considered in the first component c    bpj can be chosen as a variable to add to c    because
we cannot say that bpj is necessarily an effect of another variable  as previously explained 
bpj can be a cause of bpm   or an effect of bpm   or bpj may be correlated with bpm via an
unmodeled cause  as a result  we get c     bpj   bpm   as a first component  obviously  c 
has no parents in the dag because it is the first added component 
then  as epj and epm are effects of w or mc  we do not consider epj or epm in the
second component c    since w is not necessarily an effect of mc  we can add w to c    the
dinner problem specifies that ordering fish and red wine simultaneously is not feasible  but
we do not know whether the wine is chosen before or after the main course  i e  w can
be a cause or an effect of mc  as a result  we take c     mc  w   as the menu choice is
independent from who is present at the beginning  c  has no parent in the temporary dag 
as epj is a direct effect of bpj and w only  john leaves the dinner if white wine is
chosen   we can add epj to c    moreover  epj is not correlated with epm when c   c   
 bpj   bpm   mc  w  is assigned  therefore  we take c     epj    given that epj depends both
on bpj and w  c  gets  bpj   bpm   and  mc  w  as parents  finally  c     epm    and as epm
depends on bpm and mc  mary leaves if meat is chosen  and is independent of epj given bpm
and mc  we have that i  epm     epj   bpj   w     bpm   mc    this entails that  epm   is added
to the dag with  bpj   bpm   and  mc  w  as parents  therefore  we get cd  g      mc  w  
as the set of decision components and ce  g      bpj   bpm     epj     epm    as the set of
environment components  the dag of components is shown in figure  a 
using proposition    we know that the joint probability distribution factors as pve   vd  
pbpj  bpm  pepj   bpj  bpm  mc w  pepm   bpj  bpm  mc w and that the joint feasibility distribution
can be factored as fvd   ve   fmc w  
      further factorization steps
proposition   provides us with a decomposition of pve   vd and fvd   ve based on the conditional independence relation i           of definition     it may be possible to perform further
factorization steps by factoring each pc   pag  c  as a set of local plausibility functions pi and
factoring each fc   pag  c  as a set of local feasibility functions fi  
 in some cases  expressing factors of pc   pag  c  or fc   pag  c  is quite natural  for example  if p     if variables in an environment component c    xi j   i  j      n  
without parents represent pixel colors  and if we want to model in pc that two
adjacent pixels have different colors  it is natural to define a set of binary differ
ence constraints xi j  xk l and
to
factor
p
as
p
 




c
c
x
 x
i   n  
j   n 
i j
i   j

i   n  j   n   xi j  xi j     such a decomposition cannot be obtained based only
on the conditional independence relation i           of definition    
 in some settings  as in markov random fields  chellappa   jain         systematic
techniques exist to obtain such factorizations  the bayesian network community
also offers systematic techniques  with hybrid networks  dechter   larkin        
we can extract the deterministic information contained in conditional probability
distributions  more precisely  a conditional probability distribution px   pag  x  can
   

fithe pfu framework

be expressed as px   pag  x    px   pag  x     where  is the     function defined by

  if px   pag  x   a     
 a   
  the factorization of px   pag  x  as px   pag  x    can
  otherwise
be computationally relevant when constraint propagation techniques on     functions
are used to solve hybrid networks 
 we may use another weaker definition of conditional independence  in valuation based
systems  shenoy         s  and s  are said to be conditionally independent given s 
with regard to a function s   s   s  if this function factors into two scoped functions
with scopes s   s  and s   s    this definition is not used for the first factorization
step because it destroys the normalization conditions which may be useful from a
computational point of view 
these additional factorization steps are of interest because decreasing the size of the
scopes of the functions involved or adding redundant information in the problem can be
computationally useful 
for every environment component c  if pi  f act c  stands for pi is a factor of
pc   pag  c    the second factorization gives us
pc   pag  c   

p
pi  
pi f act c 

as p c pc   pag  c     p   the pi functions in f act c  satisfy the normalization condition
p c  p pi f act c  pi      p   their scopes sc pi   are contained in sc pc   pag  c      c  pag  c  
for every decision component c  if fi  f act c  stands for fi is a factor of fc   pag  c   
the second factorization gives us
fc   pag  c   



fi f act c 

fi  

given that c fc   pag  c    t  the fi functions in f act c  satisfy the normalization condition
c fi f act c  fi   t  moreover  sc fi    c  pag  c  
other factorizations  which do not decrease the scopes of the functions involved  could
also be exploited  indeed  each scoped function pi or fi can itself have an internal local
structure  as for instance when pi is a noisy or gate  pearl        in a bayesian network 
or in presence of context specific independence  boutilier  friedman  goldszmidt    koller 
       such internal local structures can be made explicit by representing functions with
tools such as algebraic decision diagrams  bahar  frohm  gaona  hachtel  macii  pardo 
  somenzi         in the rest of the article  we do not make any assumption on the way
each scoped function is represented 
example  pbpj  bpm can be expressed in terms of a first plausibility function p  specifying the probability of john and mary being present at the beginning  p  is defined
by p    bpj   t   bpm   f           p    bpj   f    bpm   t          and p    bpj   t   bpm   t    
p    bpj   f    bpm   f         we can also add redundant deterministic information with a second plausibility function p  defined as the constraint bpj    bpm  p   a      if the constraint
is satisfied    otherwise   we get pbpj  bpm   p  p p  and f act  bpj   bpm       p    p    

   

fipralet  verfaillie    schiex

pepj   bpj  bpm  mc w can be specified as a combination of two plausibility functions p  and
p    p  expresses that if john is absent at the beginning  he is absent at the end  p  is the
hard constraint  bpj   f     epj   f    p   a      if the constraint is satisfied    otherwise  
then  p     bpj   t     epj   t    w    white   is a hard constraint specifying that
john leaves iff white wine is chosen  hence  we have pepj   bpj  bpm  mc w   p  p p  and
f act  epj       p    p     similarly  pepm   bpj  bpm  mc w   p  p p    with p    p  defined as
constraints  and f act  epm       p    p    
as for feasibilities  fmc w can be specified by a feasibility function f  expressing that ordering fish with red wine is not allowed  f      mc   f ish  w   red   and f act  mc  w  
   f     the association of local functions with components appears in figure  a 
    local utilities
local utilities can be defined over the states of the environment only  as in the utility of
the health state of a patient   over decisions only  as in the utility of the decision of buying
a car or not   or over the states of the environment and decisions  as in the utility of the
result of a horse race and a bet on the race   
in order to specify local utilities  one standard approach  used in csps and influence
diagrams  is to directly define a set u of local utility functions  modeling preferences or
hard requirements  over decision and environment variables  this set implicitly defines a
global utility uv   uui u ui over all variables  if this factored form is obtained from
a global joint utility  one may rely  when u      on the work of fishburn        and
bacchus grove         who introduced a notion of conditional independence for utilities 
no normalization condition is imposed on local utilities 
example  in the dinner problem  three local utility functions can be defined  a binary
utility function u  expresses that peter does not want john to leave the dinner  u  is
the hard constraint  bpj   t    epj   t   u   a      if the constraint is satisfied  
otherwise   two unary utility functions u  and u  over epj and epm respectively express the
gains expected from the presences at the end  u    epj   t        and u    epj   f         john
invests    k if he is present at the end   while u    epm   t        and u    epm   f       
 mary invests    k if she is present at the end   u  and u  can be viewed as soft constraints 
all the local functions are represented in a graphical model in figure  b 
    formal definition of pfu networks
we can now formally define plausibility feasibility utility networks  the definition is justified by the previous construction process  but it holds even if the plausibility structure is
not conditionable 
   in influence diagrams  special nodes called value nodes are introduced to represent the outcome of
decisions  and one utility function is associated with each of these value nodes  the utility of the outcome  
in the pfu framework  we directly represent such utility functions as scoped functions which hold on
the parents of value nodes  this explicitly express that utility functions are scoped functions  just as
plausibility and feasibility functions  in other words  utility functions are directly utilities of the outcome
of decision and environment variables assignments 

   

fithe pfu framework

p 
mc  w

bpj   bpm
p    p  

f 

w
f 

epj

epm

p    p  

p    p  

 a 

mc

bpj

p 

environment

p  u 

p 

bpm

p 

decision

epj
u 

plausibility
function

epm

p 

feasibility
function

u 

utility
function

 b 

figure     a  dag of components  b  network of scoped functions 
definition     a plausibility feasibility utility network on an expected utility structure
is a tuple n    v  g  p  f  u   such that the following conditions hold 
 v    x    x           is a finite set of finite domain variables  v is partitioned into vd
 decision variables  and ve  environment variables  
 g is a typed dag of components over ve  vd  cf  definition     
 p    p    p           is a finite set of plausibility functions  each pi  p is associated with a unique component c  ce  g  such that sc pi    c  pag  c   the set of
pi  p associated with a component c  ce  g  is denoted f act c  and must satisfy
p  p pi f act c  pi      p  
c

 f    f    f           is a finite set of feasibility functions  each function fi is associated
with a unique component c  cd  g  such that sc fi    c  pag  c   the set of
fi  f associated
 with a component c  cd  g  is denoted f act c  and must satisfy
 fi f act c  fi   t 
c

 u    u    u           is a finite set of utility functions 
    from pfu networks to global functions
we have seen how to obtain a pfu network expressing a global controlled plausibility
distribution pve    vd   a global controlled feasibility distribution fvd    ve   and a global utility
uv   conversely  let n    v  g  p  f  u   be a pfu network  i e  a set of variables  a typed
dag of components  and sets of scoped functions  then
 the global function    p pi p pi is a controlled plausibility distribution of ve given
vd   moreover  by theorem   b   if the plausibility structure is conditionable and if
gp is the partial dag of g induced by the arcs incident to environment components 
then gp is compatible with the completion of  
 the global function    fi f fi is a controlled feasibility distribution of vd given
ve   moreover  by theorem   b   if gf is the partial dag of g induced by the arcs of
g incident to decision components  then gf is compatible with the completion of  
   

fipralet  verfaillie    schiex

    uui u ui is necessarily a global utility 
we can therefore denote  by pve    vd    by fvd    ve   and  by uv  
    back to existing frameworks
let us consider the formalisms described in section   again 
 a csp  hard or soft  can easily be represented as a pfu network n    v  g      u   
all variables in v are decision variables  g is reduced to a single decision component
containing all variables  and constraints are represented by utility functions  using
feasibility functions to represent constraints  it would be impossible to represent inconsistent networks because of the normalization conditions on feasibilities  sat is
modeled similarly  the only difference is that constraints are replaced by clauses 
 the same pfu network as above is used to represent the local functions of a quantified
boolean formula or of a quantified csp  the differences with csps or sat appear
when we consider queries on the network  see section    
 a bayesian network can be modeled as n    v  g  p       all variables in v are
environment variables  g is the dag of the bn  and p    px   pag  x    x  v    there
is no feasibility or utility function  a chain graph is also modeled as n    v  g  p      
with g the dag of components of the chain graph and p the set of factors of each
pc   pag  c   
 a stochastic csp is represented by a pfu network n    v  g  p    u    where v
is partitioned into vd   the set of decision variables  and ve   the set of stochastic
variables  g is a dag which depends on the relations between the stochastic variables 
p is the set of probability distributions over the stochastic variables  and u is the set
of constraints 
 an influence diagram can be modeled by n    v  g  p    u   such that vd contains
the decision variables  ve contains the chance variables  g is the dag of the influence
diagram without the utility nodes and with arcs into random variables only  i e  we
keep only the so called influence arcs   and p    px   pag  x    x  ve    there are no
feasibilities  and one utility function ui is defined per utility variable u  the scope
of ui being pag  u   to represent valuation networks  a set f of feasibility functions
is added  note that the business dinner example could not have been modeled using a standard influence diagram  since influence diagrams cannot model feasibilities
 suitable extensions exist however  shenoy        
 a finite horizon probabilistic mdp can be modeled as n    v  g  p  f  u    if there are
t time steps  then vd    dt   t      t    s    and ve    st   t      t      g is a dag of
components such that  a  each component contains one variable   b  the unique parent
of a decision component  dt   is  st     c  the parents of an environment component
 st     are  st   and  dt    p    pst    st  dt   t      t       f    fdt   st   t      t     and
u    rst  dt   t      t     modeling a finite horizon possibilistic mdp is similar 
   as there is no plausibility distribution over the initial state s    s  is not viewed as an environment
variable  this corresponds to the special case where decision variables model problem parameters 

   

fithe pfu framework

    summary
in this section  we have introduced the second element of the pfu framework  a network of
variables linked by local plausibility  feasibility  and utility functions  with a dag capturing
normalization conditions  the factorization of global plausibilities  feasibilities  and utilities
into scoped functions was linked to conditional independence 

   queries on a pfu network
a query will correspond to a reasoning task on the information expressed by a pfu network 
if decision variables are involved in the pfu network considered  answering a query may
provide decision rules  examples of informal queries about the dinner problem are
   what is the best menu choice if peter does not know who is present at the beginning 
   what is the best menu choice if peter knows who is present at the beginning 
   how should we maximize the expected investment if the restaurant chooses the main
course first and peter is pessimistic about this choice  then who is present at the
beginning is observed  and last peter chooses the wine 
dissociating pfu networks from queries is consistent with the trend in the influence diagram community to relax the so called information links  as in unconstrained influence
diagrams  jensen   vomlelova        or limited memory influence diagrams  lauritzen
  nilsson         it explains the intuition that queries do not change the local relations
between variables 
in this section  we define a simple class of queries on pfu networks  we assume that
a sequence of decisions must be performed  and that the order in which decisions and
observations are made is known  we also make a no forgetting assumption  that is  when
making a decision  an agent is aware of all previous decisions and observations  from
now on  the set of utility degrees eu is assumed to be totally ordered  this total order
assumption  which holds in most of the standard frameworks  implies that there always
exists an optimal decision rule  see subsection     for a discussion of how to extend the
results to a partial order 
two definitions of the answer to a query are given  the first based on decision trees 
and the second more operational  an equivalence between these two definitions is then
established 
    query definition
in order to formulate reasoning tasks on a pfu network  we use a sequence sov of operatorvariable s  pairs  this sequence captures different aspects of the query 
 partial observabilities  sov specifies the order in which decisions are made and environment variables are observed  if x  ve appears to the left of y  vd  for example
sov          u    x          max   y           this means that the value of x is known  observed  when a value for y is chosen  conversely  sov          max   y          u    x        
if x is not observed when choosing y 
   

fipralet  verfaillie    schiex

 optimistic pessimistic attitude concerning the decision makers   max   y   is inserted
in the elimination sequence if the decision maker is optimistic about the behavior of
the agent controlling a decision variable y  i e  if this agent is cooperative   and
 min   y   if one is pessimistic  i e  if the agent controlling y is an adversary   the
operator used for environment variables will always be u   to model that expected
utilities are sought  
 parameters of the decision making problem  the set s of variables that are not involved
in sov are kind of parameters  their absence indicates that we want to obtain optimal
expected utilities and or optimal policies for each assignment of s  this is useful in
order to evaluate several scenarios simultaneously 
example  the sequence corresponding to the informal query  how should we maximize the
expected investment if the restaurant chooses the main course first and peter is pessimistic
about this choice  then those present at the beginning of the dinner are observed  and last
peter chooses the wine before knowing who is present at the end  is
sov    min   mc    u    bpj   bpm     max   w    u    epj   epm    
it models the fact that      peter is pessimistic about the main course  min over mc   which
is chosen without observing any variable  no variable to the left of mc in sov       peter
makes the best choice of wine  max over w  after the main course has been chosen and
after knowing who is present at the beginning  w appears to the right of mc  bpj   and bpm
in sov   but before knowing who is present at the end  w appears to the left of epj   epm   
specifically  bpj and bpm are partially observable  whereas epj and epm are unobservable 
if the query becomes what should peter do if he observes those present at the beginning
of the dinner and then chooses the wine before knowing who is present at the end   then
the sequence to use is sov    u    bpj   bpm     max   w    u    epj   epm     in this case 
variable mc does not appear in the sequence anymore  which means that mc is a parameter
and that an answer for each value of this parameter is sought 
definition     a query on a pfu network is a pair q    n   sov  where n is a pfu
network and sov    op    s    op    s        opk   sk   is a sequence of operator set of variables
pairs such that
    all the si are disjoint 
    either si  vd and opi   min or max  or si  ve and opi   u  
    variables not involved in any of the si   called free variables  are decision variables 
    for all variables x  y of different types  one is a decision variable  the other is an
environment variable   if there is a directed path from the component which contains
x to the component which contains y in the dag of the pfu network n   then x does
not appear to the right of y in sov  i e  either x appears to the left of y  or x is a free
variable 
   if a decision is made by nature and if we have a plausibility distribution on that decision  then this
decision will be viewed as an environment variable 

   

fithe pfu framework

condition     ensures that each variable is eliminated at most once  condition     means
that optimal decisions are sought for decision variables  either maximized if the decision
maker who controls a decision variable is cooperative  or minimized if he is adversarial  
whereas expected utilities are sought for environment variables  condition     means that
variables which are not eliminated in sov act as problem parameters and are viewed as
decision variables  condition     means that if x and y are of different types and x is an
ancestor of y  then x is assigned before y  this ensures that causality is respected for variables of different types  for example   n    u    bpj   bpm   epj   epm     max   mc  w     which
violates condition      violates causality since the menu cannot be chosen after knowing who
is present at the end 
variables appearing in sov are called quantified variables  by analogy with quantified
boolean formulas  the set of free variables is denoted by vf r   notice that the definition of
queries does not prevent an environment variable from being quantified by min or max 
because we may have u   min or u   max  note also that it is straightforward that for
every pfu network n   there exists at least one query on n without free variables 
for all i      k   we define
 the set l si   of variables appearing in vf r or to the left of si in sov by l si    
vf r   j   i   sj   
 the set r si   of variables appearing to the right of si in sov by r si     j i   k  sj  
    semantic answer to a query
in this subsection  we assume that the plausibility structure is conditionable  cf  definition      the controlled plausibility distribution pve    vd   p pi p pi can then be completed  cf  definition     to give a plausibility distribution pve  vd over ve  vd   similarly 
the controlled feasibility distribution fvd    ve   fi f fi can be completed to give a feasibility distribution fve  vd over ve  vd   we also use the global utility uv   uui u ui
defined by the pfu network 
imagine that we want to answer the query q    n   sov   where n is the network of
the dinner problem and sov    min   mc    u    bpj   bpm     max   w    u    epj   epm    
to answer such a query  we can use a decision tree  first  the restaurant chooses the
worst possible main course  taking into account the feasibility distribution of mc  here 
fmc   mc  meat     fmc w   mc  meat   w  white    fmc w   mc  meat   w  red     t  t  
t  similarly  fmc   mc  f ish     t  both choices are feasible  then  if a  denotes the
assignment of mc  the uncertainty over those present at the beginning given the main
course choice is described by the probability distribution pbpj  bpm   mc  a     for each possible
assignment a  of  bpj   bpm    i e  for each a  such that pbpj  bpm   mc  a   a        p   peter
chooses the best wine while taking into account the feasibility fw   mc bpj  bpm  a   a     if
the restaurant chooses meat  peter chooses an optimal value between red and white  and
if the restaurant chooses fish  peter can choose white wine only  then  for each feasible
assignment a  of w  the uncertainty regarding the presence of john and mary at the end
of the dinner is given by pepj  epm   bpj  bpm  mc w  a   a   a    
note that the conditional probabilities used in the decision tree above are not directly
defined by the network  they must be computed from the global distributions  this
computation can be a challenge in large problems 
   

fipralet  verfaillie    schiex

the utility uv  a   a   a   a    can be associated with each possible complete assignment
a   a   a   a  of the variables  for each possible assignment a   a   a  of  bpj   bpm   mc  w  
the last stage  i e  the one in which epj and epm are assigned 
p can be seen as a lottery  von
neumann   morgenstern        whose expected utility is a  dom  epj  epm    p a   u a    
where p a      pepj  epm   bpj  bpm  mc w  a   a   a   a    and u a      uv  a   a   a   a     this
expected utility becomes the reward of the scenario over  bpm   bpj   mc  w  described by
a   a   a    it provides us with a criterion for choosing an optimal value for w  the step
in which bpj and bpm are assigned can then be seen as a lottery  which provides us with a
criterion for choosing a worst value for mc  the computation associated with the previously
described process is 
min
a  dom mc  fmc  a    t
x
pbpj  bpm   mc  a   a   
 
a  dom  bpj  bpm    pbpj  bpm

 

max
x

  mc  a   a      

a  dom w  fw   mc bpj  bpm  a   a   a    t

 

pepj  epm   bpj  bpm  mc w  a   a   a   a   

a   dom  epj   epm   
pepj  epm   bpj  bpm  mc w  a   a   a   a        

uv  a   a   a   a       

decision rules for the decision variables  argmin and argmax  can be recorded during
the computation  this formulation represents the decision process as a decision tree in
which each internal level corresponds to variable assignments  arcs associated with the
assignment of a set of decision variables are weighted by the feasibility of the decision given
the previous assignments  arcs associated with the assignment of environment variables are
weighted by the plausibility degree of the assignment given the previous assignments  leaf
nodes correspond to the utilities of complete assignments  and a node collects the values of
its children to compute its own value 
      formalization of the decision tree procedure
in order to formalize the decision tree procedure  some technical results are first introduced
in proposition    these results and the definitions preceding them can be skipped for a first
reading 
definition     let ps    s  be the conditional plausibility distribution of s  given s  and let
a  dom s     the function ps    s   a  is said to be well defined iff ps   a      p   similarly 
if fs    s  is the conditional feasibility distribution of s  given s    then  for all a  dom s    
fs    s   a  is said to be well defined iff fs   a    t 
next  the conditioning can be defined directly for controlled plausibility distributions
because for all a  dom vd    pve    vd  a  is a plausibility distribution over ve  
definition     assume that the plausibility structure used is conditionable  let pve    vd
be a controlled plausibility distribution and s  s   be two disjoint subsets of ve   we define
conditional controlled plausibility distributions by  for all a  dom s  s    vd   such that
ps      vd  a      p   ps   s      vd  a    max p  ep   ps s      vd  a    p p ps      vd  a    as in
the canonical definition of conditioning given in proposition    given a controlled feasi   

fithe pfu framework

bility distribution fvd    ve   the definition of conditional controlled feasibility distributions
fs   s      ve for s  s   disjoint subsets of vd is similar 
proposition    assume that the plausibility structure used is conditionable  let q  
 n   sov  be a query where sov    op    s      op    s        opk   sk    let vf r denote the set of
free variables of q 
    if si  ve and psi   l si    a  is well defined  then there exists at least one a   dom si  
satisfying psi   l si    a a        p  
    if si  vd and fsi   l si    a  is well defined  then there exists at least one a   dom si  
satisfying fsi   l si    a a      t 
    if ve     and si is the leftmost set of environment variables appearing in sov  then 
for all a  dom l si     psi   l si    a  is well defined 
    if i  j      k   i   j  si  ve   sj  ve   r si    l sj    vd  sj is the first set of environment variables appearing to the right of si in sov    a  a     dom l si   dom si   
psi   l si    a  is well defined  and psi   l si    a a        p   then  for all a   extending a a 
over l sj    psj   l sj    a     is well defined 
    if i  j      k   i   j  si  vd   sj  vd   r si    l sj    ve  sj is the first set of
decision variables appearing to the right of si in sov    a  a     dom l si   dom si   
fsi   l si    a  is well defined  and fsi   l si    a a      t  then  for all a   extending a a 
over l sj    fsj   l sj    a     is well defined 
    for all i      k  such that si  ve   psi   l si     psi   l si  ve   vd  
    for all i      k  such that si  vd   fsi   l si     fsi   l si  vd   ve  
the technical results of proposition   ensure that  in the following semantic answer to
a query  see definition     
 all quantities ps   l s   a a    and fs   l s   a a    used are defined  thanks to items   to
  in proposition    
 all eliminations over restricted domains are defined because the restricted domains
used are never empty  items   and   in proposition    
 the conditional distributions used coincide with a conditioning defined directly from
the controlled plausibility and feasibility distributions pve    vd and fvd    ve  items  
and   in proposition     this is useful because this guarantees that ps   l s   a a   
and fs   l s   a a     which a priori require the notion of completion to be written  are
actually independent of the notion of completion  which is arbitrarily added to the
basic information expressed in a pfu network  we use ps   l s  and fs   l s  instead
of conditional controlled distributions ps   l s ve    vd and fs   l s vd    ve for notation
convenience and to explicitly represent that ps   l s ve    vd and fs   l s vd    ve do not
depend on the assignment of vd  l s  and ve  l s  respectively 

   

fipralet  verfaillie    schiex

definition     the semantic answer sem ans q  to a query q    n   sov  is a function
of the set vf r of free variables of q defined by  

 if fvf r  a    f
sem ans q  a   
qs n   sov  a  otherwise 
with qs inductively defined by 
   

qs n     a    uv  a 

   

qs n    op  s    sov  a   


min
qs  n   sov  a a   

 

a  dom s 



fs l s   a a      t




qs  n   sov  a a   
max











a   dom s 
fs l s   a a      t

u

a   dom s 
ps l s   a a        p

if  s  vd     op   min  
if  s  vd     op   max  


ps l s   a a    pu qs  n   sov  a a   

if  s  ve   

in other words  each step involving decision variables  first two cases  corresponds to an
optimization step among the feasible choices  and each step involving environment variables
 third case  corresponds to a lottery  von neumann   morgenstern        such that the
rewards are the qs  n   sov  a a     and such that the plausibility attributed to a reward is
ps   l s   a a     the formula looking like ui  pi pu ui   is the expected utility of this lottery  
when a set of decision variables s is eliminated  a decision rule for s can be recorded  using
an argmax  resp  an argmin  if max  resp  min  is performed 
example  what is the maximum investment peter can expect  and which associated decision s  should he make if he chooses the menu without knowing who will attend  to answer
this question  we can use a query in which bpj   bpm   epj   and epm are eliminated before
mc and w to represent the fact that their values are not known when the menu is chosen 
this query is 
 n    max   mc  w    u    bpj   bpm   epj   epm     
the answer is   k  with  mc  meat   w  red  as a decision  if peter knows who comes  the
query becomes
 n    u    bpj   bpm     max   mc  w    u    epj   epm     
and optimal values for mc and w can depend on bpj and bpm   the answer is    k with
a    k gain from the observability of who is present  the decision rule for  mc  w  is
 mc  meat   w  red  if john is present and mary is not   mc  f ish   w  white  otherwise 
consider the query introduced at the beginning of section     
 n    min   mc    u    bpj   bpm     max   w    u    epj   epm     
the answer is   in the worst main course case  even if peter chooses the wine  the situation can be unacceptable  in order to compute the expected utility for each menu choice 
we can use a query in which mc and w are free variables 
     is the unfeasible value  cf  definition   

   

fithe pfu framework

 n    u    bpj   bpm   epj   epm     
the answer is a function of  mc  w   these examples show how queries can capture various
situations in terms of partial observabilities  optimistic pessimistic attitude  and parameters
in the decision process 
    operational answer to a query
the quantities ps   l s   a a    and fs   l s   a a    involved in the definition of the semantic answer to a query are not directly available from the local functions and can be very expensive
to compute  for instance  with
probabilities  ps   l s   a a    equals ps l s   a a    pl s   a  
p
    
computing ps l s   a a     
a   dom v  sl s    pve  vd  a a  a   typically requires time
exponential in  v   s  l s     moreover  such quantities must be computed at each node
of the decision tree  fortunately  there exists an alternative definition of the answer to
a query  which can be directly expressed using a pfu instance  i e  the expressed local
plausibility  feasibility  and utility functions 
definition     the operational answer op ans q  to a query q    n   sov  is a function
of the free variables of q  if a is an assignment of the free variables  then  op ans q   a 
is defined inductively as follows 
 op ans q   a    qo  n   sov  a 
qo n    op  s    sov  a    opa  dom s  qo  n   sov  a a   
 



 
qo n     a   
 fi   p pi pu u ui
 a  
fi f

pi p

   
    

ui u

by equation     if all the problem variables are assigned  the answer to the query is the
combination of the plausibility degree  the feasibility degree  and the utility degree of the
corresponding complete assignment  by equation    if the variables are not all assigned and
 op  s  is the leftmost operator variable s  pair in sov  the answer to the query is obtained
by eliminating s using op as an elimination operator  again  optimal decision rules for the
decision variables can be recorded if needed  using argmin and argmax  equivalently  by
considering a sequence of operator variable s  pairs as a sequence of variable eliminations 
op ans q  can be written 
 
 



op ans q    sov
 fi   p pi pu u ui
 
fi f

pi p

ui u

it shows that op ans q  actually corresponds to the generic form of equation   
    equivalence theorem
theorem   proves that the semantic definition sem ans q  gives semantic foundations to
what is computed with the operational definition op ans q  
theorem    if the plausibility structure is conditionable  then  for all queries q on a pfu
network  sem ans q    op ans q  and the optimal policies for the decisions are the same
with sem ans q  and op ans q  
   

fipralet  verfaillie    schiex

in other words  theorem   shows that it is possible to perform computations in a
completely generic algebraic framework  while providing the result of the computations with
decision theoretic foundations  due to this equivalence theorem  op ans q  is denoted
simply by ans q  in the following  note that the operational definition applies even in
a non conditionable plausibility structure  giving a decision theoretic based semantics to
op ans when the plausibility structure is not conditionable is an open issue 
    bounded queries
it may be interesting to relax the problem of computing the exact answer to a query 
assume that the leftmost operator variable s  pair in the sequence sov is  max   x    with
x a decision variable  from the decision maker point of view  computing decision rules
providing an expected utility greater than a given threshold  may be sufficient  this is
the case with the e majsat problem  defined as given a boolean formula over a set
of variables v   vd  ve   does there exist an assignment of vd such that the formula is
satisfied for at least half of the assignments of ve    extending the generic pfu framework
to answer such queries is done in definitions    and     which introduce bounded queries 
definition     a bounded query b q is a triple  n   sov     such that  n   sov  is a query
and   eu   is the threshold  
definition     the answer ans b q  to a bounded query b q    n   sov    is a boolean
function of the free variables of the unbounded query q    n   sov   for every assignment
a of these free variables 

t if ans q  a  u 
 ans b q   a   
f otherwise 
as the threshold  may be used to prune the search space during the resolution  computing the answer to a bounded query is easier than computing the answer to an unbounded
one 
    back to existing frameworks
let us consider again the frameworks of section    solving a csp  equation    or a totally
ordered soft csp corresponds to the query q    n    max  v     with n the pfu network
corresponding to the csp and v the set of variables of the csp  computing the probability
distribution of a variable y for a bayesian network  equation    modeled as n corresponds
to q    n       v   y    these examples are mono operator queries  involving only one
type of elimination operator 
consider multi operator queries  the search for an optimal policy for the stochastic
csp associated with equation   is captured by a query such as q    n    max   d    d    
      s      max   d    d          s       the query on influence diagrams of equation   and
the query on valuation networks of equation   are captured the same way 
for a finite horizon mdp with t time steps  equation     the query looks like q  
 n    max   d      u    s      max   d            u    st     max   dt      where u     with probabilistic mdps and u   min with pessimistic possibilistic mdps  the initial state s  is a

   

fithe pfu framework

free variable  with a quantified csp or a quantified boolean formula  elimination operators
min and max are used to represent  and  
more formally  we can show 
theorem    queries and bounded queries can be used to express and solve the following
list of problems 
   sat framework  sat  majsat  e majsat  quantified boolean formula  stochastic
sat  ssat  and extended ssat  littman et al         
   csp  or cn  framework 
 check consistency for a csp  mackworth         find a solution to a csp  count
the number of solutions of a csp 
 find a solution of a valued csp  bistarelli et al         
 solve a quantified csp  bordeaux   monfroy        
 find a conditional decision or an unconditional decision for a mixed csp or a
probabilistic mixed csp  fargier et al         
 find an optimal policy for a stochastic csp or a policy with a value greater than
a threshold  solve a stochastic cop  constraint optimization problem   walsh 
      
   integer linear programming  schrijver        with finite domain variables 
   search for a solution plan with a length  k in a classical planning problem  strips
planning  fikes   nilsson        ghallab et al         
   answer classical queries on bayesian networks  pearl         markov random fields
 chellappa   jain         and chain graphs  frydenberg         with plausibilities
expressed as probabilities  possibilities  or  rankings 
 compute plausibility distributions 
 map  maximum a posteriori hypothesis  and mpe  most probable explanation  
 compute the plausibility of an evidence 
 cpe task for hybrid networks  dechter   larkin         cpe means cnf probability evaluation  a cnf being a formula in conjunctive normal form  
   solve an influence diagram  howard   matheson        
   with a finite horizon  solve a probabilistic mdp  a possibilistic mdp  a mdp based on
 rankings  completely or partially observable  pomdp   factored or not  puterman 
      monahan        sabbadin        boutilier et al               

   

fipralet  verfaillie    schiex

    towards more complex queries
queries can be made more complex by relaxing some assumptions 
 in the definition of queries  the order u on eu is assumed to be total  extending
the results to a partial order is possible if  eu   u   defines a lattice  partially ordered
set closed under least upper and greatest lower bounds  and if pu distributes over
the least upper bound lub and greatest lower bound glb  i e  p pu lub u    u     
lub p pu u    p pu u    and p pu glb u    u      glb p pu u    p pu u      this allows
semiring csps  bistarelli et al         to be captured in the framework  we believe
that other extensions to partial orders on utilities should allow algebraic mdps  perny
et al         to be captured 
 we can try to relax the no forgetting assumption  as in limited memory influence
diagrams  limids  lauritzen   nilsson         which show that this can be relevant
for decision processes involving multiple decision makers or memory constraints on
the policy recording  in such cases  optimal decisions can become nondeterministic
 decisions such as choose x     with probability p and x     with probability  p  
 the order in which decisions are made and environment variables are observed is
total and completely determined by the query  one may wish to compute not only
an optimal policy for the decisions  but also an optimal order in which to perform
decisions  without exactly knowing the steps at which other agents make decisions or
the steps at which observations are made  work on influence diagrams with unordered
decisions  jensen   vomlelova        is good starting point to try and extend our
work in this direction 
while it should be possible to relax the assumption that variables have a finite domain 
doing this is nontrivial  since transforming u     into integrals is not straightforward 
and performing min  or max eliminations over continuous domains requires the guarantee
of existence of a supremum 
    summary
in section    the last element of the pfu framework  a class of queries on pfu networks  has
been introduced  a decision tree based definition of the answer to a query has been provided 
the first main result of the section is theorem    which gives theoretical foundations to
another equivalent operational definition  reducing the answer to a query to a sequence of
eliminations on a combination of scoped functions  the latter is best adapted to future
algorithms  because it directly handles the local functions defined by a pfu network  the
second important result is theorem    which shows that many standard queries are pfu
queries  overall  the pfu framework is captured by definitions         and    for algebraic
structures  definition    for pfu networks  and definitions    and    for queries 

   gains and costs
a better understanding theorem   shows that many existing frameworks are instances
of the pfu framework  through this unification  similarities and differences between ex   

fithe pfu framework

isting formalisms can be analyzed  for instance  by comparing vcsps and the optimistic
version of finite horizon possibilistic mdps through the operational definition of the answer
to a query  it appears that a finite horizon optimistic possibilistic mdp  partially observable
or not  is a fuzzy csp  both can indeed be represented as a query q whose operational
answer looks like maxv  min    where v is a set of variables and  is a set of scoped
functions  techniques available for solving fuzzy csps can then be used to solve finite
horizon optimistic possibilistic mdps 
from the complexity theory point of view  studying the time and space complexity for
answering queries of the form of equation   can lead to upper bounds on the complexity
for several frameworks simultaneously  one may also try to characterize which properties
lead to a given theoretical complexity 
increased expressive power the expressive power of pfu networks is the result of
a number of features      flexibility of the plausibility utility model      flexibility of the
possible networks      flexibility of the queries in terms of situation modeling  this enables
queries on pfu networks to cover generic finite horizon sequential decision problems with
plausibilities  feasibilities  and utilities  cooperative or adversarial decision makers  partial observabilities  and possible parameters in the decision process modeled through free
variables 
as none of the frameworks indicated in theorem   presents such flexibility  for every
subsumed formalism x indicated in theorem    it is possible to find a problem which can
be represented with pfus but not directly with x  more specifically  compared to influence
diagrams  howard   matheson        jensen   vomlelova        smith et al         nielsen
  jensen        jensen et al         or valuation networks  vns  shenoy             
demirer   shenoy         pfus can deal with more than the probabilistic expected additive
utility and allow us to perform eliminations with min to model the presence of adversarial
agents  thus  quantified boolean formulas cannot be represented with influence diagrams
or vns  but are covered by pfu networks  see theorem     moreover  pfu networks use a
dag which captures the normalization conditions of plausibilities or feasibilities  whereas
with vns  this information is lost  compared to sequential influence diagrams  jensen
et al         or sequential vns  demirer   shenoy         pfus can express some so called
asymmetric decision problems  problems in which some variables may not even need to be
considered in a decision process  by adding dummy values to variables 
actually  some simple problems which can be expressed with pfus cannot be apparently
directly expressed in other frameworks  the simple instance feasibilities with normalization
conditions   hard requirements is not captured by any of the subsumed frameworks  for
example  using a csp to model it would result in a loss of the information provided by
the normalization conditions on feasibilities  the same occurs for influence diagrams like sequential decision processes based on possibilistic expected utility  which could be
called possibilistic influence diagrams  similarly for stochastic csps without contingency
assumption 
the cost of greater flexibility and increased expressive power is that the pfu framework
cannot be described as simply and straightforwardly as  for example  constraint networks 
generic algorithms section   shows that generic algorithms can be built to answer
queries on pfu networks  as previously said  building generic algorithms should facilitate
   

fipralet  verfaillie    schiex

cross fertilization in the sense that any of the subsumed formalisms will directly benefit
from the techniques developed on another subsumed formalism  this fits into a growing
effort to generalize resolution methods used for different ai problems  for example  soft
constraint propagation drastically improves the resolution of valued csps  integrating such
a tool in a generic algorithm on pfus could improve the resolution of influence diagrams 
using abstract operators may enable us to identify algorithmically interesting properties 
or to infer necessary or sufficient conditions for a particular algorithm to be usable 
however  one could argue that some techniques are highly specific to one formalism or
to one type of problem  and that  in this case  dedicated approaches certainly outperform
a generic algorithm  a solution for this can be to characterize the actual properties used
by a dedicated approach  in order to generalize it as much as possible  moreover  even if
specialized schemes usually improve over generic ones  there exist cases in which general
tools can be more efficient than specialized algorithms  as shown by the use of sat solvers
for solving strips planning problems  sang  beame    kautz        

   algorithms
the ability to design generic algorithms is one of the motivations for building the pfu
framework  and some choices are justified by algorithmic considerations  we present generic
algorithms that answer arbitrary pfu queries 
    a generic tree search algorithm
the operational definition of the answer to a query q actually defines a naive exponential
time algorithm to compute ans q  using a tree exploration procedure  with a variable
ordering given by sov  that collects elementary plausibilities  feasibilities  and utilities 
more precisely  for each assignment a of the free variables of q  a tree is explored  each
node in this tree corresponds to a partial assignment of the variables  the value of a leaf
is provided by the combination of the scoped functions of the pfu network  applied to
the complete assignment defined by the path from the root to the leaf  depending on
the operator used  the value of an internal node is computed by performing a min  max 
or u operation on the values of its children  the root node returns  ans q   a   the
corresponding pseudo code is given in figure    for a query  n   sov   the first call is
treesearchanswerq n   sov   it returns a function of the free variables 
if we assume that every operator returns a result in a constant time  then the time
complexity of the algorithm is o m  n  ln d   dn    where d stands for the maximum domain
size  n stands for the number of variables of the pfu network  and m stands for the number
of scoped functions   
the space complexity is polynomial  it can be shown to be linear in the entry data
size   hence  computing the answer to a bounded query is pspace  moreover  given that
the satisfiability of a qbf is a pspace complete problem which can be expressed as a
bounded query  cf  theorem     it follows that computing the answer to a bounded query
is pspace hard  being pspace and pspace hard  the decision problem that consists of
    the factor n  ln d  corresponds to an upper bound on the time needed to get  a  for a scoped function
 represented as a table  of size  dn   

   

fithe pfu framework

treesearchanswerq  v  g  p  f  u    sov 
begin
foreach a  dom vf r   do  a   answerq  v  g  p  f  u    sov  a 
return 
end
answerq  v  g  p  f  u    sov  a 
begin
if sov    then return   fi f fi      p pi p pi   pu  uui u ui    a 
else
 op  s  sov    sov
choose x  s
if s    x  then sov  sov   else sov   op  s   x   sov  
dom  dom x 
res  
while dom     do
choose a  dom
dom  dom   a 
res  op  res  answerq  v  g  p  f  u    sov  a  x  a   
return res
end

figure   
a generic tree search algorithm for answering a query q
  v  g  p  f  u    sov 

 

answering a bounded query is pspace complete  this result is not surprising  but it gives
an idea of the level of expressiveness which can be reached by the pfu framework  more
work is needed to identify subclasses of queries with a lower complexity  although many are
already known 
    a generic variable elimination algorithm
quite naturally  a generic variable elimination algorithm  bertele   brioschi        shenoy 
      dechter        kolhas        can be defined to answer queries on a pfu network 
      a first naive scheme
this first naive variable elimination algorithm is given in figure    it eliminates variables
from the right to the left of the sequence sov of the query  whereas with the tree search
procedure  variables are assigned from the left to the right  this right to left processing
entails that the algorithm naturally returns a function of the free variables of the query 
the first call is varelimanswerq  v  g  p  f  u    sov  
the version presented in figure   is actually a very naive variable elimination scheme
with time and space complexities o m  n  ln d   dn   and o m  dn   respectively  it begins
by combining all the scoped functions before eliminating variables  whereas the interest of
a variable elimination algorithm is primarily to use the factorization into local functions 

   

fipralet  verfaillie    schiex

varelimanswerq  v  g  p  f  u    sov 
begin
     fi f fi      p pi p pi   pu  uui u ui   
while sov     do
sov     op  s   sov
choose x  s
if s    x  then sov  sov   else sov  sov     op  s   x  
   opx  
return  
end

figure    a first generic variable elimination algorithm for answering a query q  
  v  g  p  f  u    sov 
      improving the basic scheme
the algorithm of figure   works on a unique global function defined by the combination
of all the plausibility  feasibility  and utility functions  first line   whereas a factorization is
available  to improve this scheme  the properties of the algebraic structure can be used 
in the sequel  we denote by  x  resp  x   a scoped function which has  resp  does not
have  x in its scope  moreover  we extend every combination operator  on e     by
setting   e   e       combining anything with something unfeasible is unfeasible
too    
first  in order to use the factorization of plausibilities and feasibilities  we can use the
properties below  which come from the right monotonicity of pu   the distributivity of pu
over u   and the definition
truncation operator   
 of the x
min
 p
pu u     p x pu  minx u  
x




maxx  p x pu u     p x pu  maxx u  



ux  p x pu u     p x pu  ux u  
minx  f x   u     f x    minx u  





maxx  f x   u     f x    maxx u  


ux  f x   u     f x    ux u    
they express that when a variable x is eliminated  it is not necessary to consider plausibility
functions or feasibility functions that do not have x in their scope 
however  it is necessary to add some axioms on the expected utility structure  since
in the general case  an expression such as ux  p  x pu  u x u u  x    cannot be decomposed  we give two axioms  ax  and ax   each of which is a sufficient additional condition
to exploit the factorization of utility functions 
 ax    ep   p      eu   u    p   u   p   u   pu
 ax   u   u on eu  but not on eu      
    an operator op can be used both as a combination operator between scoped functions and as an elimination operator over some variables  in this case  the extension of op used as a combination operator creates
an operator op  such that op   e        whereas the extension of op used as an elimination operator
creates an operator op   such that op    e      e  op  and op   coincide on e but differ on e     

   

fithe pfu framework

among the cases in table    rows            satisfy ax   whereas rows            satisfy
ax   ax  andax  enable us to write 
minx  f  x    u x u u  x      u x u  minx f  x   u  x  
maxx  f  x    u x u u  x      u x u  maxx f  x   u  x    
and
 x

u u  ux p  x pu u  x   with ax 
 x
x
 x
u p pu  u u u    
  p x p  x   pu u x   u  ux p  x pu u  x   with ax  
x
hence  when eliminating a variable x  it is not necessary to consider utility functions which
do not have x in their scope 
we present an algorithm when ax  is satisfied  when ax  holds  working on plausibility utility pairs  p  u  allows ax  to be recovered  this is used  for example  to solve
influence diagrams  ndilikilikesha         when ax  is satisfied  there is actually only one
set e   ep   eu   one order  p  u   one combination operator    p   u   pu  
and one elimination operator    p   u   rather than express feasibilities on  t  f    we
can express them on   e     by mapping t onto  e and f onto   this preserves the value
of the answer to a query  since f   u     u and t   u    e  u 
the improved variable elimination algorithm is shown in figure    to answer a query
q     v  g  p  f  u    sov   the first call is ax  varelimanswerq p  f  u  sov   it
returns a set of scoped functions whose  combination equals ans q   this time  the
factorization available in a pfu network is exploited  since when eliminating a variable x 
only scoped functions involving x are considered 
ax  varelimanswerq   sov 
begin
if sov    then return 
else
sov     op  s   sov
choose x  s
if s    x  then sov  sov   else sov  sov     op  s   x  
 x        x  sc   
   opx  x 
      x        
return ax  varelimanswerq   sov 
end

figure    variable elimination algorithm when ax  holds    set of scoped functions 
when ax  holds  the algorithm is actually a standard variable elimination algorithm on a
commutative semiring  as for classical variable elimination algorithms  the time complexity
of this algorithm is in o m  n  ln d   dw      where w is the tree width  bodlaender       
dechter   fattah        of the network of scoped functions  constrained by the elimination
order imposed by sov  yet  its space complexity is also exponential in this tree width 
    other approaches
starting from the generic tree search algorithm of section      bound computations and local
consistencies  mackworth        cooper   schiex        larrosa   schiex         can be

   

fipralet  verfaillie    schiex

integrated in order to prune the search space  local consistencies can improve the quality of
the bounds thanks to the use of smaller local functions  techniques coming from quantified
boolean formulas or from game algorithms  such as the  algorithm  can be considered to
more efficiently manage bounds when min and max operators alternate  caching strategies
exploiting the problem structure  darwiche        jegou   terrioux        are also obvious
candidates to improve the basic tree search scheme  additional axioms ax  and ax  can
be useful in this direction  heuristics for the choice of the variable to assign when a pair
 op  s  is encountered  as well as heuristics for the value choices  may also speed up the
search 
in another direction  approximate algorithms using sampling and local search could also
be considered  sampling when eliminations with       and not u   are performed  local
search when eliminations with min or max are performed 

   conclusion
in the last decades  ai has witnessed the design and study of numerous formalisms for
reasoning about decision problems  in this article  we have built a generic framework
to model sequential decision making with plausibilities  feasibilities  and utilities  this
framework covers many existing approaches  including hard  valued  quantified  mixed  and
stochastic csps  bayesian networks  finite horizon probabilistic or possibilistic mdps  or
influence diagrams  the result is an algebraic framework built upon decision theoretic
foundations  the pfu framework  the two facets of the pfu framework are explicit in
theorem    which states that the operational definition of the answer to a query is equivalent
to the decision tree based semantics  this is the result of a design that accounts both for
expressiveness and for computational aspects 
compared to related works  shenoy        dechter        kolhas         the pfu framework is the only framework which directly deals with different types of variables  decision
and environment variables   different types of local functions  plausibilities  feasibilities 
utilities   and different types of combination and elimination operators 
from an algorithmic point of view  generic algorithms based on tree search and variable
elimination have been described  they prove that the pfu framework is not just an abstraction  the next step is to explore ways of improving these algorithms  so as to generalize
techniques that are used in formalisms subsumed by the pfu framework  along this line 
a generic approach to query optimization has lead to the definition of original architectures
for answering queries  called multi operator cluster trees and multi operator cluster dags 
these can be applied to qbfs and other structures compatible with ax   pralet  schiex   
verfaillie      a   as well as influence diagrams and other structures satisfying ax   pralet 
schiex    verfaillie      b  

acknowledgments
we would like to thank jean loup farges  jerome lang  regis sabbadin  and the three
anonymous reviewers for useful comments on previous versions of this article  the work

   

fithe pfu framework

described in this article was initiated when the first author was at laas cnrs and inra
toulouse  it was partially conducted within the eu integrated project cogniron  the
cognitive companion  and funded by the european commission division fp  ist future
and emerging technologies under contract fp         

appendix a  notations
see table   
symbol

p
u

p
u
pu
p
u
 


ve
vd
dom x 
dom s 
g
pag  x 
ndg  x 
ce  g 
cd  g 
pi
fi
ui
f act c 
sc  
ps
ps    s 
fs
fs    s 

m eaning
elimination operator
elimination operator on plausibilities
elimination operator on utilities
combination operator
combination operator for plausibilities
combination operator for utilities
combination operator between plausibilities and utilities
partial order on plausibilities
partial order on utilities
truncation operator
unfeasible value

environment variables
decision variables
domain
of values of a variable x
q
dom x 
xs
directed acyclic graph  dag 
parents of x in the dag g
non descendant of x in the dag g
set of environment components of g
set of decision components of g
plausibility function
feasibility function
utility function
pi or fi factors associated with a component c
scope of a local function 
plausibility distribution over s
conditional plausibility distribution of s  given s 
feasibility distribution over s
conditional feasibility distribution of s  given s 

sov
sequence of operator variable s  pairs
sem ans q  semantic answer to a query q  decision trees 
op ans q  operational answer to a query q
ans q 
answer to a query q

table    notation 
   

fipralet  verfaillie    schiex

appendix b  proofs
proposition   a plausibility distribution ps can be extended to give a plausibility distribution ps   over every s    s  defined by ps     p ss   ps  
proof  given that p is associative and commutative  p s   ps     p s    p ss   ps     p s ps    p  
thus  ps     dom s      ep is a plausibility distribution over s    

proposition   the structures presented in table   are expected utility structures 
proof  it is sufficient to verify each of the required axioms successively 

proposition   if  ep   p   p   is a conditionable plausibility structure  then all plausibility distributions are conditionable  it suffices to define ps    s  by ps    s   a    max p 
ep   ps   s   a    p p ps   a   for all a  dom s   s    satisfying ps   a      p  
proof  let ps be a plausibility distribution over s  for all s    s  disjoint subsets of s and for all
a  dom s   s    satisfying ps   a      p   let us define ps    s   a    max p  ep   ps   s   a   
p p ps   a    we must show that the ps    s  functions satisfy axioms a  b  c  d  e of definition    
 a  by definition of ps    s  and by distributivity of p over p   we can write
ps    p s  ps   s    p s   ps    s  p ps       p s  ps    s    p ps   
as ps  p ps    we can infer that p s  ps    s  p  p   let a  be an assignment of s  satisfying
ps   a        p   assume that the hypothesis  h   p s  ps    s   a    p  p  holds 
then  for all a   dom s     ps   s   a   a    p ps   a     since if ps   s   a   a      ps   a    
then ps    s   a   a       p   which implies that p s  ps    s   a    p  p by the monotonicity of
p   moreover   h  implies that there exists a unique p  ep satisfying  p s  ps    s   a     p
p    p   combining this equation by ps   a    gives ps   a    p ps   a    p p   ps   a     i e 
ps   a    p   p p p    ps   a     this implies that  p p p p  p   given that  p p p p  p
 by monotonicity of p    we obtain  p p p    p   we analyze two cases 
 if p p  p   there exists a unique p  satisfying p  p p    p   as both  p s  ps    s   a     p p
   p and  p p p    p   this entails that p s  ps    s   a       p   which contradicts  h  
 if p    p   then  p p  p    p   this entails that p is idempotent  let dom  be a subset
of dom s    such that p a  dom  ps   s   a   a      ps   a     let a    dom    we can
write 
 
ps   s   a    a    p  p a  dom   a    ps   s   a   a       ps   a   
 
 
ps   s   a    a    p  p a  dom  ps   s   a   a       ps   a     as p is idempotent 
as ps   s   a    a    p ps   a     there exists a unique p    ep such that ps   s   a    a   p
p     ps   a     therefore  p a  dom  ps   s   a   a      p a  dom   a    ps   s   a   a    
 
which gives p a  dom   a    ps   s   a   a      ps   a    
 

the assumption p a  dom  ps   s   a   a      ps   a    holds for dom    dom s     recursively applying the previous mechanism by removing one assignment in dom  at each
iteration leads to p a  dom  ps   s   a   a      ps   a    with  dom         i e  it leads to
ps   s   a     a      ps   a    with dom     a       as a result  we obtain a contradiction 
in both cases  a contradiction with  h  is obtained  so p s  ps    s   a       p  
 b  ps    ps     p p   ps     p  p s ps     ps     p  p   ps      
   

fithe pfu framework

 d  let a  dom s   s   s    satisfying ps   s   a      p   then  ps   s    s   a    ps    s   s   a  p
ps    s   a  holds  because 
 if ps   s   s   a  p ps   a   then  there exists a unique p  ep such that ps   s   s   a   
pp ps   a   as both ps   s   s   a    ps   s    s   a p ps   a   by definition of ps   s    s   
and ps   s   s   a    ps    s   s   a p ps    s   a p ps   a   by definition of ps    s   s  and
ps    s     this implies that ps   s    s   a    ps    s   s   a  p ps    s   a  
 otherwise  ps   s   s   a    ps   a   this implies that  p p ps   s    s   a  and  as
ps   s    s   a  p  p   that ps   s    s   a     p   similarly  this entails that ps    s   a     p
and ps    s   s   a     p  the monotonicity of p implies that ps   s   s   a    ps   s   a   
ps   a    as  p    p p  p   we get ps   s    s   a    ps    s   s   a  p ps    s   a  
 c 

p s  ps   s    s 

  p s   ps    s   s  p ps    s     using  d  
   p s  ps    s   s    p ps    s   because p distributes over p  
  ps    s   using  a  

 e  assume that ps   s   s    ps    s  p ps    s  p ps    let a  dom s   s   s    such that
ps   a      p   then  ps   s    s   a    ps    s   a  p ps    s   a  holds  because 
 if ps   s   s   a  p ps   a   there exists a unique p  ep such that ps   s   s   a   
p p ps   a   and therefore ps   s    s   a    ps    s   a  p ps    s   a  
 otherwise  we can write ps    s   a    ps    s   a    ps   s    s   a     p by using reasoning similar to that of  d   and therefore ps   s    s   a    ps    s   a  p ps    s   a  

proposition   i           satisfies the semigraphoid axioms 
   symmetry  i s    s    s     i s    s    s    
   decomposition  i s    s   s    s     i s    s    s    
   weak union  i s    s   s    s     i s    s    s   s    
   contraction   i s    s    s     i s    s    s   s      i s    s   s    s    
proof 
   symmetry axiom  directly satisfied by commutativity of p  
   decomposition axiom  assume that i s    s   s    s    holds  then
ps   s    s    p s  ps   s   s    s 
  p s   ps    s  p ps   s    s     since i s    s   s    s    
  ps    s  p  p s  ps   s    s     by distributivity of p over p  
  ps    s  p ps    s   
thus  i s    s    s    holds 
   weak union axiom  assume that i s    s   s    s    holds  the decomposition axiom entails
that i s    s    s    is also satisfied  then
ps   s   s   s    ps   s   s    s  p ps   chain rule 
  ps    s  p ps   s    s  p ps   since i s    s   s    s    
  ps    s  p ps    s  p ps  p ps    s   s   chain rule 
  ps   s    s  p ps  p ps    s   s   since i s    s    s    
  ps    s   s  p ps    s   s  p ps   s   chain rule  
from axiom  e  in definition     we can infer that ps   s    s   s    ps    s   s  p ps    s   s    i e 
i s    s    s   s    holds 
   

fipralet  verfaillie    schiex

   contraction axiom  assume that i s    s    s    and i s    s    s   s    hold  then
ps   s   s    s    ps   s    s   s  p ps    s   chain rule 
  ps    s   s  p ps    s   s  p ps    s   since i s    s    s   s    
  ps   s    s  p ps    s   s   chain rule 
  ps    s  p ps    s  p ps    s   s   since i s    s    s    
  ps    s  p ps   s    s   chain rule  
thus  i s    s   s    s    holds 

theorem    conditional independence and factorization  let  ep   p   p   be a conditionable plausibility structure and let g be a dag of components over s 
 a  if g is compatible with a plausibility distribution ps over s  then ps   p cc g  pc   pag  c   
 b  if  for all c  c g   there is a function c pag  c  such that c pag  c   a  is a plausibility
distribution over c for all assignments a of pag  c   then s   p cc g  c pag  c  is a
plausibility distribution over s with which g is compatible 
proof 
 a  first  if  c g        g contains a unique component c    then  p cc g  pc   pag  c    pc      
pc    the proposition holds for  c g       
assume that the proposition holds for all dags with n components  let g be a dag of
components compatible with a plausibility distribution ps and such that  c g     n     
let c  be a component labeling a leaf of g  as g is compatible with ps   we can write
i c    ndg  c     pag  c      pag  c      as c  is a leaf  ndg  c      s  c    and consequently
i c     s  c     pag  c      pag  c      this means that pspag  c      pag  c      pc    pag  c    p
p sc   pag  c      pag  c      combining each side of the equation by ppag  c    gives
ps   pc    pag  c    p psc   
 
let g be the dag obtained from g by deleting the node labeled with c    then for every
component c  c g     pag   c    pag  c   since the deleted component c  is a leaf   moreover
ndg   c  equals either ndg  c  or ndg  c c   again  since the deleted component c  is a leaf   in
the first case  ndg   c    ndg  c    the property i c  ndg  c   pag  c    pag  c   directly implies
i c  ndg   c pag   c    pag   c    in the second case  ndg   c    ndg  c c     the decomposition
axiom allows us to write i c  ndg   c   pag   c    pag   c   from i c  ndg  c   pag  c    pag  c   
consequently  g  is a dag compatible with psc    as  c g       n  the induction hypothesis
gives psc    p cc g    pc   pag  c    which implies that ps   p cc g  pc   pag  c    as desired 
 b  assume that for every component c  c pag  c   a  is a plausibility distribution over c for all
assignments a of pag  c   for  c g        c g     c     then  s   c  is a plausibility
distribution over c    moreover  as        p   we can write c        c     p       i e 
i c          therefore  g is compatible with c    the proposition holds for  c g       
assume that the proposition holds for all dags with n components  consider a dag g
with n     components  we first show that s is a plausibility distribution over s  i e 
p s  p cc g  c pag  c       p   let c  be a leaf component in g  as c  is a leaf  the unique
scoped function whose scope contains a variable in c  is c   pag  c      by the distributivity of
p over p   this implies that
p c   p cc g  c pag  c       p c  c   pag  c      p  p cc g  c    c pag  c    
given that c   pag  c     a  is a plausibility distribution over c  for all assignments a of pag  c    
   

fithe pfu framework

p c  c   pag  c       p   consequently 
p c   p cc g  c pag  c      p cc g  c    c pag  c   
applying the induction hypothesis to the dag with n components obtained from g by deleting c    we can infer that p sc   p cc g  c    c pag  c       p   this allows us to write
p sc   p c   p cc g  c pag  c        p   i e  p s s    p   s is a plausibility distribution
over s  it remains to prove that g is a dag of components compatible with s   let c  c g  
we must show that i c  ndg  c   pag  c    pag  c   holds  there are two cases 
   if c   c    we must prove that
c   ndg  c   pag  c      pag  c      c    pag  c    p ndg  c   pag  c      pag  c     
first  note that
c   pag  c      p s c  pag  c      p cc g  c pag  c   
   p s c  pag  c      p cc g  c    c pag  c     p c   pag  c   
 because p distributes over p and sc c   pag  c       c   pag  c   
   p spag  c     p cc g  c pag  c     p c   pag  c   
 because p distributes over p and c  c   pag  c       p  
  pag  c    p c   pag  c     
from this  it is possible to write 
ndg  c   pag  c      pag  c    p c    pag  c    p pag  c   
  ndg  c   pag  c      pag  c    p c   pag  c   
  ndg  c   pag  c      pag  c    p pag  c    p c   pag  c   
  ndg  c    p c   pag  c   
  s c    p c   pag  c     because c  is a leaf in g 
 

 p cc g  c    c pag  c    p c   pag  c   

  p cc g  c pag  c 
  s  
using axiom  e  of definition     this entails that ndg  c   pag  c      pag  c    p c    pag  c     
spag  c      pag  c      i e   as s   c   ndg  c     that i c    ndg  c     pag  c      pag  c     
   otherwise  c    c    let g  be the dag obtained from g by deleting c    g  contains
n components  by the induction hypothesis  i c  ndg   c   pag   c    pag   c    as c 
is a leaf in g  we have c  
  pag  c   which implies that pag   c    pag  c   thus 
i c  ndg   c   pag  c    pag  c   
 i  if ndg   c    ndg  c   then it is immediate that i c  ndg  c   pag  c    pag  c   
 ii  otherwise  ndg   c     ndg  c   as c  is a leaf in g  this is equivalent to say that
ndg  c    ndg   c   c    this means that c is not an ancestor of c    and a fortiori c 
  pag  c     in the following  the four semigraphoid axioms are used to
prove the required result  from the decomposition axiom  from i c    ndg  c    
pag  c      pag  c      and from  c  ndg   c    ndg  c     because ndg  c      s 
c     it follows that i c     c  ndg   c    pag  c      pag  c      or  in other words  as
c  pag  c        that i c    c   ndg   c   pag  c       pag  c      using the weak
union axiom leads to i c    c    ndg   c   pag  c      pag  c     and  using the symmetry axiom  to i c  c     ndg   c   pag  c      pag  c      as shown previously 
i c  ndg   c pag  c    pag  c    together with i c  c     ndg   c pag  c    pag  c     
the contraction axiom implies that i c   ndg   c   pag  c    c    pag  c    as c  
 
pag  c  and ndg  c    ndg   c   c    this means that i c  ndg  c   pag  c     pag  c   
   

fipralet  verfaillie    schiex

we have proved that g is compatible with s   consequently  the proposition holds if there
are n     components in g  which ends the proof by induction 

proposition   let  ep   p   p   be a conditionable plausibility structure  then  for all
n  n   there exists a unique p  such that p i   n  p     p  
proof  let n  n   if p i   n   p    p   then p     p satisfies the required property  moreover  in
this case  the distributivity of p over p implies that for all p  ep   p i   n  p   p  therefore  if
p i   n  p    p   then p    p   which shows that p  is unique 
otherwise  p i   n   p     p   in this case  as  p p p i   n   p by monotonicity of p   we can
write  p p p i   n   p   the second item of definition    then implies that there exists a unique
p   ep such that  p   p  p  p i   n   p    i e  such that  p   p i   n  p   

proposition  
let pve  vd be the completion of a controlled plausibility distribution
pve    vd   then  pve  vd is a plausibility distribution over ve  vd and pve   vd   pve    vd  
proof  pve  vd   pve    vd p p    where p  is the element of ep such that p i    dom vd     p     p  
then p ve vd pve  vd   p ve vd  pve    vd p p      p vd   p ve pve    vd   p p      p vd p   
p i    dom vd     p     p   this proves that pve  vd is a plausibility distribution over ve  vd  
as pve  vd   pve    vd p p  and pve  vd   pve   vd p pvd   we can write pve    vd p p   
pve   vd p pvd   moreover  pvd   p ve pve  vd   p ve  pve    vd p p      p    thus  pve    vd p
p    pve   vd p p    summing this equation  dom vd    times with p gives pve    vd   pve   vd  

proposition   let g be a typed dag of components over ve  vd   let gp be the partial
graph of g induced by the arcs of g incident to environment components  let gf be the
partial graph of g induced by the arcs of g incident to decision components  if gp is
compatible with the completion of pve    vd  cf  definition     and gf is compatible with
the completion of fvd    ve   then
pve   vd  

p pc   pag  c 
cce  g 

and fvd   ve  


ccd  g 

fc   pag  c   

proof  the result is proved only for pve   vd  the proof for fvd   ve is similar   the completion of
pve    vd looks like pve  vd   pve    vd p p    gp being compatible with this completion  theorem  a
entails that pve  vd   p cc gp   pc   pagp  c    as the decision components are roots in gp   we can infer 
by successively eliminating the environment components  that pvd   p ve pve  vd   p ccd  gp   pc  

on the other hand  pvd   p ve pve    vd p p    p    this proves that p ccd  gp   pc  
p    therefore  pve  vd   pve   vd p p     p cce  gp   pc   pagp  c    p p    summing this equation
 dom vd    times with p gives pve   vd   p cce  gp   pc   pagp  c    as ce  gp     ce  g  and pagp  c   
pag  c  for every c  ce  g   this entails that pve   vd   p cce  g  pc   pag  c   

proposition   assume that the plausibility structure used is conditionable  let q  
 n   sov  be a query where sov    op    s      op    s        opk   sk    let vf r denote the set
of free variables of q 
   

fithe pfu framework

    if si  ve and psi   l si    a  is well defined  then there exists at least one a   dom si  
satisfying psi   l si    a a        p  
    if si  vd and fsi   l si    a  is well defined  then there exists at least one a   dom si  
satisfying fsi   l si    a a      t 
    if ve     and si is the leftmost set of environment variables appearing in sov  then 
for all a  dom l si     psi   l si    a  is well defined 
    if i  j      k   i   j  si  ve   sj  ve   r si  l sj    vd  sj is the first set of environment variables appearing to the right of si in sov    a  a     dom l si     dom si   
psi   l si    a  is well defined  and psi   l si    a a        p   then  for all a   extending a a 
over l sj    psj   l sj    a     is well defined 
    if i  j      k   i   j  si  vd   sj  vd   r si    l sj    ve  sj is the first set of
decision variables appearing to the right of si in sov    a  a     dom l si   dom si   
fsi   l si    a  is well defined  and fsi   l si    a a      t  then  for all a   extending a a 
over l sj    fsj   l sj    a     is well defined 
    for all i      k  such that si  ve   psi   l si     psi   l si  ve   vd  
    for all i      k  such that si  vd   fsi   l si     fsi   l si  vd   ve  
proof  we denote by p  the element in ep such that the completion of pve    vd equals pve    vd  p   
note that p      p   since it must satisfy p i    dom vd     p     p  
lemma    let  ep   p   p   be a conditionable plausibility structure  then   p  p p     p   
  p     p     p     p    
proof  first  if p     p or p     p   then p  p p     p   conversely  assume that p  p p     p   then 
if p  p  p   the conditionability of the plausibility structure together with p  p  p    p entails that
p     p   similarly  if p  p  p   then p     p   therefore  p  p p     p      p     p   p     p    
lemma    assume that the plausibility structure is conditionable  let s    s  be disjoint subsets of
ve   then  ps    s     vd   ps    s   vd  
proof  note that ps   s    vd   ps    s   vd p ps    vd   moreover  we can also write ps   s    vd  
ps   s     vd   ps    s     vd p ps     vd   ps    s     vd p ps    vd   let a be an assignment of v  
if ps   s    vd  a  p ps    vd  a   then the conditionability of the plausibility structure entails that
ps    s   vd  a    ps    s     vd  a   otherwise  ps   s    vd  a    ps    vd  a   which also entails that
ps   s     vd  a    ps     vd  a   in this case  ps    s   vd  a    ps    s     vd  a     p   therefore 
ps    s   vd   ps    s     vd  
    assume that si  ve and psi   l si    a  is well defined  then  psi   l si    a  is a plausibility
distribution over si   hence  p a  dom si   psi   l si    a a       p   which implies that there exists
at least one a   dom si   such that psi   l si    a a        p  
    proof similar to point     
    assume that ve      let si be the leftmost set of environment variables appearing in sov and
let a  dom l si     since l si    ve     we can write pl si    a    p v l si   pve  vd  a   
p vd l si    p ve pve  vd  a     p vd l si   p      p   therefore  psi   l si    a  is well defined 

   

fipralet  verfaillie    schiex

    let le  si     l si    ve and ld  si     l si    vd   for a set of variables s  we denote by dg  s 
the set of variables in v that are descendant in the dag g of at least one variable in s 
first  psi  le  si      vd   p ve  si le  si    pve    vd   p ve  si le  si     p pj p pj    by definition of a query  variables in ve dg  vd ld  si    do not belong to si le  si    the environment
variables that are descendants of as yet unassigned decision variables are not assigned yet  
thus  psi  le  si      vd   p ve  si le  si  dg  vd ld  si      p pj f act c  c ve dg  vd ld  si    pj   
the last equality is obtained by successively eliminating the environment components included
in dg  vd ld  si     using the normalization conditions   as the scope of a plausibility function
pj  f act c  is included in cpag  c   this equality entails that psi  le  si      vd does not depend
on the assignment of vd  ld  si    morever  ple  si      vd   si psi  le  si      vd does not depend
on the assignment of vd  ld  si   too  as psi   le  si      vd   max p  ep   psi  le  si      vd  
p p ple  si      vd    this also entails that psi   le  si      vd does not depend on the assignment of
vd  ld  si    it can be denoted psi   le  si      ld  si    
we now show that psi   l si     psi   le  si      ld  si     first  note that
psi  l si     p vd ld  si   psi  le  si   vd   p vd ld  si    psi   le  si   vd p ple  si   vd  
  p vd ld  si    psi   le  si      vd p ple  si   vd    using lemma   
  psi   le  si      vd p  p vd ld  si   ple  si   vd  
 since psi   le  si      vd does not depend on the assignment of vd  ld  si   
  psi   le  si      vd p pl si    
let a be an assignment of v  
 if psi  l si    a  p pl si    a   then the conditionability of the plausibility structure directly
entails that psi   l si    a    psi   le  si      vd  a  
 otherwise  psi  l si    a    pl si    a   in this case  psi   l si    a     p   next  as v 
l si      vd  ld  si      ve  le  si     observe that pl si     p v l si    pve    vd p p     
p vd ld  si    ple  si      vd p p     similarly  we have psi  l si     p v  si l si     pve    vd p
p      p vd ld  si    psi  le  si      vd p p     as psi  l si    a    pl si    a   we can infer that
p vd ld  si    ple  si      vd  a  p p      p vd ld  si    psi  le  si      vd  a  p p     as neither
ple  si      vd nor psi  le  si      vd depends on the assignment of vd ld  si    this entails that
ple  si      vd  a  p  p vd ld  si   p      psi  le  si      vd  a  p  p vd ld  si   p     summing
this equation  dom ld  si     times gives psi  le  si      vd  a    ple  si      vd  a   and thus
psi   le  si      vd  a     p   psi   l si    a  
    proof similar to point     
    let i  j      k  such that i   j  si  ve   sj  ve   and r si    l sj    vd  sj is the first set of
environment variables appearing to the right of si in sov   let  a  a     dom l si   dom si  
such that psi   l si    a  is well defined  i e  pl si    a      p   and psi   l si    a a        p   let a  
be an extension of a a  over l sj    we must show that psj   l sj    a     is well defined  i e 
that pl sj    a         p   as psi   l si    a a        p and pl si    a      p   lemma   implies that
psi  l si    a a        p   similarly to the proof of point      it is possible to show that pl sj   does
not depend on the assignment of l sj     si  l si     therefore  for every a   extending a a 
over l sj    p l sj   si l si    pl sj    a         p   which implies that pl sj    a         p  
    proof similar to point      except that plausibilities are replaced by feasibilities and decision
variables are replaced by environment variables 

   

fithe pfu framework

theorem   if the plausibility structure is conditionable  then  for all queries q on a pfu
network  sem ans q    op ans q  and the optimal policies for the decisions are the same
with sem ans q  and op ans q  
proof  let af r be an assignment of the set of free variables vf r such that fvf r  af r     f   the
semantic definition gives  sem ans q   af r       given that fvf r  af r     v vf r fve  vd  af r    
v vf r fvd    ve  af r     v vf r  fi f fi  af r     since the completion of fvd    ve gives fvd    ve  
fvd  ve    we can infer that for every complete assignment a   extending af r   fi f fi  a       f and
 fi f fi  a         p pi p pi  a      pu  uui u ui  a          as min       max        u   
  this entails that  op ans q   af r      too 
we now analyze the case fvf r  af r     t  we use a   to denote a complete assignment which
must be considered with the semantic definition  using the properties 
 p pu min u    u      min p pu u    p pu u     right monotonicity of pu   
 p pu max u    u      max p pu u    p pu u     right monotonicity of pu   
 p pu  u  u u       p pu u    u  p pu u     distributivity of pu over u   
 p  pu  p  pu u     p  p p    pu u 
we can move all the psi   l si    a a    to get  starting from the semantic definition 
 p i   k  si ve psi   l si     a     pu uv  a    
on the right of the elimination operators 
we now prove that this quantity equals pve   vd  a     pu uv  a      let s be the rightmost set
of quantified environment variables  the chain rule enables us to write pve   vd   ps   le  s  vd p
ple  s    vd   where le  s    l s   ve   moreover  using lemma   and proposition       we can
write ps   le  s  vd   ps   le  s     vd   ps   l s    therefore  pve   vd   ps   l s  p ple  s    vd   recursively applying this mechanism leads to  pve   vd   p i   k  si ve psi   l si     therefore  we obtain
pve   vd  a     pu uv  a     on the right of the elimination operators 
the semantic definition of the query meaning can be simplified a bit  thanks to lemma    this
lemma implies that conditions like ps   l s   a a        p   which are used only when pl s   a      p   are
equivalent to ps l s   a a        p   since ps l s   a a      ps   l s   a a    p pl s   a   as a result  the
operators ua  dom s  ps   l s   a a      p can be replaced by ua  dom s  ps l s   a a      p   similarly  in
the eliminations mina  dom s  fs   l s   a a    t   the conditions fs   l s   a a      t can be replaced by
fs l s   a a      t  the same holds for the eliminations with maxadom xi   fs   l s   a a    t  
we now start from the operational definition and show that it can be reformulated as above  the
operational definition applies a sequence of variable eliminations on the global function  fi f fi    
 p pi p pi   pu  ui u ui    which also equals fvd   ve   pve   vd pu uv   let s be the leftmost
set of quantified decision variables  let a be an assignment of l s   assume that s is quantified by min  let a   dom s  such that fs l s   a a      f   it can be inferred that for
all complete assignment a   extending a a    fve  vd  a       f   and consequently fvd   ve  a      
f   this implies that fvd   ve  a       pve   vd  a     pu uv  a         given that min      
max        u      we obtain qo n   sov  a a        as min d      d  this entails
that mina  dom s  qo n   sov  a a      mina  dom s  a    qo n   sov  a a     thus  mina  dom s 
can be replaced by mina  dom s  fs l s   a a    t  as fvf r  a    t  there exists at least one assignment
a   dom s  such that fs l s   a a      t   the same result holds if s is quantified by max  applying this mechanism to each set of quantified decision variables from the left to the right of sov 
we obtain that mina  dom s  and maxa  dom s  can be replaced by mina  dom s  fs l s   a a    t and
maxa  dom s  fs l s   a a    t respectively  moreover  it can be shown that for every complete assignment a   considered in the corresponding transformed operational definition  fvd   ve  a       t  it is
thus possible to replace fvd   ve  a       pve   vd  a     pu uv  a     by pve   vd  a     pu uv  a     

   

fipralet  verfaillie    schiex

we now transform each ua  dom s  qo n   sov  a a    so that it looks like the expression in the
semantic definition  let s be the leftmost set of quantified environment variables  let a be an assignment of l s   let a   dom s  be such that ps l s   a a       p   then  for all complete assignments
a   extending a a    pve   vd  a        p   and thus pve   vd  a     pu uv  a        u   as min  u    u    
max  u    u      u u  u    u   we obtain qo n   sov  a a       u   as d u  u   d  computing ua  dom s  qo n   sov  a a    is equivalent to computing ua  dom s  a    qo n   sov  a a    
thus  ua  dom s  can be replaced by ua  dom s  ps l s   a a      p  as pl s   a      p   there exists
at least one assignment a   dom s  satisfying ps l s   a a        p    applying this mechanism 
considering each set of quantified environment variables from the left to the right of sov  we get
ua  dom s  ps l s   a a      p instead of ua  dom s   
consequently  we have found a function  such that sem ans q     and op ans q     
moreover  the optimal policies for the decisions for sem ans q  are optimal policies for decisions
for   indeed  the transformation rules used preserve the set of optimal policies  the same holds
for op ans q  and   it entails that sem ans q    op ans q   and that the optimal policies for
sem ans q  are the same as those for op ans q  

theorem   queries and bounded queries can be used to express and solve the following
nonexhaustive list of problems 
   sat framework  sat  majsat  e majsat  quantified boolean formula  stochastic
sat  ssat  and extended ssat  littman et al         
   csp  or cn  framework 
 check consistency for a csp  mackworth         find a solution to a csp  count
the number of solutions of a csp 
 find a solution of a valued csp  bistarelli et al         
 solve a quantified csp  bordeaux   monfroy        
 find a conditional decision or an unconditional decision for a mixed csp or a
probabilistic mixed csp  fargier et al         
 find an optimal policy for a stochastic csp or a policy with a value greater than
a threshold  solve a stochastic cop  constraint optimization problem   walsh 
      
   integer linear programming  schrijver        with finite domain variables 
   search for a solution plan with a length  k in a classical planning problem  strips
planning  fikes   nilsson        ghallab et al         
   answer classical queries on bayesian networks  pearl         markov random fields
 chellappa   jain         and chain graphs  frydenberg         with plausibilities
expressed as probabilities  possibilities  or  rankings 
 compute plausibility distributions 
 map  maximum a posteriori hypothesis  and mpe  most probable explanation  
   

fithe pfu framework

 compute the plausibility of an evidence 
 cpe task for hybrid networks  dechter   larkin         cpe means cnf probability evaluation  a cnf being a formula in conjunctive normal form  
   solve an influence diagram  howard   matheson        
   with a finite horizon  solve a probabilistic mdp  a possibilistic mdp  a mdp based on
 rankings  completely or partially observable  pomdp   factored or not  puterman 
      monahan        sabbadin        boutilier et al               
proof 
lemma    let  ep   eu   u   pu   be an expected utility structure such that eu is totally ordered by
u   let s   s  be a local function on eu whose scope is s   s    then
max
u
s   s    a  a 
 dom s   dom s    adom s   

  u max s   s   
s 

s 

moreover     dom s     dom s    satisfies  maxs  s   s    a    s   s    a  a  for all a 
dom s    iff max dom s   dom s    uadom s    s   s    a  a    uadom s    s   s    a  a   in
other words  the two sides of the equality have the same set of optimal policies for s   
proof  let     dom s     dom s    be a function such that
max dom s   dom s    uadom s    s   s    a  a    uadom s    s   s      a  a  
given that  for all a  dom s     s   s      a  a  u maxa  dom s    s   s   a   a   the monotonicity
of u entails that uadom s    s   s      a  a  u uadom s    maxa  dom s    s   s   a   a   thus 
max dom s   dom s    uadom s    s   s    a  a  u us  maxs  s   s   
on the other hand  let     dom s     dom s    be a function such that a  dom s    
 maxs  s   s    a    s   s      a  a   then 
us  maxs  s   s   
u
s   s      a  a  u
max
u
s   s    a  a  
 dom s   dom s    adom s   

adom s   

the antisymmetry of u implies the required equality  the equality of the set of optimal policies
over s  is directly implied by the equality 
we now give the proof of the theorem  which uses for some cases the previous lemma 
    csp based problems  mackworth        
let us consider a csp over a set of variables v and with a set of constraints  c            cm   
 a   consistency and solution finding  consistency can be checked by using the query q  
 n    max  v     where n    v  g      u    all variables in v are decision variables  g is
reduced to a unique decision component containing all variables  and u    c            cm    
and where the expected utility structure is boolean optimistic expected conjunctive
utility  row   in table     computing ans q    maxv  c          cm   is equivalent to
checking consistency  because ans q    t iff there exists an assignment of v satisfying
c       cm   i e  iff the csp is consistent  in order to get a solution when ans q    t  it
suffices to record an optimal decision rule for v   integer linear programming  schrijver 
      with finite domain variables can be formulated as a csp 
 b   counting the number of solutions  the expected utility structure considered for this
task is probabilistic expected satisfaction  row   in table     the pfu network is
n    v  g  p    u    where all variables in v are environment variables  g is a dag with
a unique component c    v   p             being a constant factor equal to  dom v   

   

fipralet  verfaillie    schiex

such that f act c            and u    c            cm    implicitly      specifies that the
complete assignments are equiprobable  it enables the normalization
condition for all
p
c  ce  g   p c p pi f act c  pi    p  to be satisfied  since v     dom v          the
query to consider is then q    n       v     it is p
not hard to check that this satisfies the
conditions imposed on queries and ans q    v        c          cm    gives the
percentage of solutions of the csp     ans q  gives the number of solutions 
    solving a valued csp  vcsp   bistarelli et al         
in order to model this problem  the only difficulty lies in the definition of an expected utility
structure  in a vcsp  a triple  e       called a valuation structure is introduced  it satisfies
properties such as  e     is a commutative semigroup   is a total order on e  and e has
a minimum element denoted    the expected utility structure to consider is the following
one   ep   p   p       t  f          eu   u      e      and the expected utility structure is
 ep   eu   u   pu    with u   min and pu defined by f alse pu u     and true pu u  
u  it is not hard to check that this structure is an expected utility structure   next  the
pfu network is n    v  g      u    where v is the set of variables of the vcsp  g is a
dag with only one decision component containing all the variables  and u contains the soft
constraints  the query q    min  v   enables us to find the minimum violation degree of the
soft constraints  a solution for the vcsp is an optimal  argmin  decision rule for v  
    problems from the sat framework  littman et al         
in the sat framework  queries on a conjunctive normal form boolean formula  over a set
of variables v    x            xn   are asked  let us first prove that an extended ssat formula can be evaluated with a pfu query  an extended ssat formula is defined by a
triple      q  where  is a boolean formula in conjunctive normal form   is a threshold
in         and q    q  x           qn xn   is a sequence of quantifier variable pairs  the quantifiers
are     or r  the meaning of r appears below   if we take f  t  the value of  under the quantification sequence q  val   q   is defined recursively by   i  val         if 
is t    otherwise   ii  val  
 x  q       maxx val   q       iii  val    x  q       minx val   q     
p
 iv  val    rx  q      
   
 val   q      intuitively  the last case means that r quantifies
x
boolean variables taking equiprobable values  an extended ssat formula      q  is t iff
val   q     if s denotes the set of variables quantified by r  an equivalent definition of
val   q  is   i  val           s  if  is t    otherwise   ii  val  
 x  q       maxx val   q     
p
 
 
 
 iii  val    x  q     minx val   q     iv  val    rx  q     x val   q      this second definition proves that val   q  can be computed with the pfu query defined by   a  expected
utility structure  probabilistic expected satisfaction  row   in table      b  pfu network 
n    v  g  p    u    with v the set of variables of the formula   the decision variables are
the variables quantified by  or    g a dag without arcs  with one decision component per
decision variable and a unique environment component containing all variables quantified by
r  p           being a constant factor equal to     ve     and u the set of clauses of    c 
query  q    n   sov   sov being obtained from q by replacing     and r by max  min  and
  respectively  then  ans q    val   q   which implies that the value of an extended ssat
formula      q  is the value of the bounded query  n   sov    
ssat is a particular case of extended ssat and is therefore covered  sat  majsat  emajsat  qbf are also particular cases of extended ssat  as a result  they are instances
of pfu bounded queries  more precisely  sat corresponds to a bounded query of the form
q    n    max  v        majsat  given a boolean formula over a set of variables v   is it
satisfied for at least half of the assignments of v   corresponds to a bounded query of the
form  n       v          e majsat  given a boolean formula over v   ve  vd   does there
exist an assignment of vd such that the formula is satisfied for at least half of the assignments
of ve    corresponds to a bounded query of the form  n    max  vd       ve          qbf

   

fithe pfu framework

corresponds to a bounded query in which max over existentially quantified variables and min
over universally quantified variables alternate 
    solving a quantified csp  qcsp   bordeaux   monfroy        
a qcsp represents a formula of the form q  x        qn xn  c          cm    where each qi is a
quantifier   or   and each ci is a constraint  the value of a qcsp is defined recursively as
follows  the value of a qcsp without variables  i e  containing only t  f   and connectives  is
given by the definition of the connectives  a qcsp x qcsp is t iff either qcsp  x  t     t or
qcsp  x  f      t  assuming f  t  it gives that x qcsp is t iff maxx qcsp   t  a qcsp x qcsp
is t iff qcsp  x  t     t and qcsp  x  f      t  equivalently  x qcsp is t iff minx qcsp   t  it
implies that the value of a qcsp is actually given by the formula op q   x        op qn  xn  c  
       cm    with op     max and op     min  it corresponds to the answer to the query
 n    op q     x             op qn    xn     where n    v  g      u    v is the set of variables of the
qcsp  g is a dag with only one decision component containing all variables  and u is the
set of constraints   and where the expected utility structure is boolean optimistic expected
conjunctive utility  row   in table    
    solving a mixed csp or a probabilistic mixed csp  fargier et al         
a probabilistic mixed csp is defined by  i  a set of variables partitioned into a set w of
contingent variables and a set x of decision variables  an assignment aw of w is called
a world and an assignment ax of x is called a decision   ii  a set c    c            cm   of
constraints involving at least one decision variable   iii  a probability distribution pw over
the worlds  a possible world aw  i e  such that pw  aw        is covered by a decision ax iff
the assignment aw  ax satisfies all the constraints in c 
on one hand  if a decision must be made without knowing the world  the task is to find
an optimal non conditional decision  i e  to find an assignment ax of the decision variables
that
is covered by ax   this probability is equal to
p maximizes the probability that the world
p
p
 a
 
 
 p
w
w  c          cm    as a result  an optimal
aw    c     cm   ax  aw     w
w
non conditionalpdecision can be found by recording an optimal decision rule for x for the
formula maxx w  pw  c          cm    the previous formula actually specifies how to
solve such a problem with pfus  the algebraic structure is probabilistic expected additive
utility  row   in table     the pfu network is n    v  g  p    u    with vd   x  ve   w  
g a dag without arc  with one decision component x and a set of environment components
that depends on how pw is specified  p is the set of multiplicative factors that define pw  
and finally u    c            cm    the query is then q    n    max  x      w    
on the other hand  if the world is known when the decision is made  the task is to look for an
optimal conditional decision  i e  to look for a decision rule     dom w    dom x  which
maximizes the probability
p that the world is covered  in other words  the goal is to compute
max dom w  dom x  aw dom w      c     cm   aw   aw      pw  aw    
p
max dom w  dom x  aw dom w    pw  c          cm    aw   aw     due to lemma    it
p
also equals w maxx  pw  c          cm    and   can be found by recording an optimal
decision rule for x  it proves that the query q    n       w    max  x   enables us to compute
an optimal conditional decision 
with mixed csps  pw is replaced by a set k of constraints defining the possible worlds  the
goal is then to look for a decision  either conditional or non conditional  that maximizes the
number of covered worlds  this task is equivalent  ignoring a normalizing constant  to find a
decision that maximizes the percentage of covered worlds  this can be solved using the set
of plausibility functions p   k   n     with n  a normalizing constant ensuring that the
normalization condition on plausibilities holds  n  is the number of possible worlds  but it
does actually not need to be computed  since it is a constant factor and we are only interested
in optimal decisions 
   

fipralet  verfaillie    schiex

    stochastic csp  scsp  and stochastic cop  scop   walsh        
formally  a scsp is a tuple  v  s  p  c     where v is a list of variables  each variable x
having a finite domain dom x    s is the set of stochastic variables in v   p    ps   s  s 
is a set of probability distributions  in a more advanced version of scsps  probabilities over
s may be defined by a bayesian network  the subsumption result is still valid for this case  
c    c            cm   is a set of constraints  and  is a threshold in        
a scsp policy is a tree with internal nodes labeled with variables  the root is labeled with
the first variable in v   and the parents of the leaves are labeled with the last variable in
v   nodes labeled with a decision variable have only one child  whereas nodes labeled with
a stochastic variable s have  dom s   children  leaf nodes are labeled with   if the complete
assignment they define satisfies all theqconstraints in c  and with   otherwise  with each leaf
node can be associated a probability ss ps  as    where as stands for the assignment of s
implicitly defined by the path from the root to the leaf  the satisfaction of a scsp policy
is the sum of the values of the leaves weighted by their probabilities  a scsp is satisfiable
iff there exists a scsp policy with a satisfaction of at least   the optimal satisfaction of a
scsp is the maximum satisfaction over all scsp policies 
for the subsumption proof  we first consider the problem of looking for the optimal satisfaction of a scsp  in a scsp policy  each decision variable x can take one value per
assignment of the set preds  x  of stochastic variables which precede x in the list of variables v   instead of being described as a tree  a scsp policy can be viewed as a set of
x
functions
  
s  x    dom x    x  v  s   and its value is val    
p
q     dom pred
q
 
p

c
 x  as      the goal is to maximize the previas dom s 
ss s
ci c i   as   
xv s

ous quantity among the sets   let y be the last decision variable in v   and let y be the set
of local functions y   dom preds  y  
defining
y rule for y  then
x  dom y x
ya decision
 
val     max
ps 
ci   as     x  as     
max
y
y
y
y
 

 

as dom preds  y   spreds  y  ss

ci c

xv s

by
also equals 

p lemma    the
pprevious quantity
q
q
max
p
y
preds  y  
spreds  y 
ss s 
ci c ci   a recursive application of this mechanism shows that the answer ans q  to the query q described below is equal to the optimal
satisfaction of a scsp 
 expected utility structure  row   in table    probabilistic expected satisfaction  
 pfu network  n    v     g  p    u    with v   the set of variables of the scsp  ve   s
and vd   v    s  g is a dag without arcs  with one component per variable  p  
 ps   s  s   f act  s      ps    u is the set of constraints of the scsp 
 query  q   n   sov   with sov t v    v is thelist of variables of the scsp   t v   being
     x   t v      if x  s
 
recursively defined by t      and t x v       
 max   x   t v      otherwise
an optimal scsp policy can be recorded during the evaluation of ans q   the satisfiability
of a scsp can be answered with the bounded query  n   sov     again  a corresponding
scsp policy can be obtained by recording optimal decision rules 
with stochastic constraint optimization problem  scop   the constraints in c are additive
soft constraints  the subsumption proof is similar 
    classical planning problems  strips planning   fikes   nilsson        ghallab et al         
in order to search for a plan of length lesser than k  we can simply model a classical planning problem as a csp  such a transformation is already available in the literature  ghallab
et al          however  we can also model a classical planning problem more directly in the
pfu framework  more precisely  the state at one step can be described by a set of boolean

   

fithe pfu framework

environment variables  for each step  there is a unique decision variable whose set of values corresponds to the actions available  plausibility functions are deterministic and link
variables in step t to variables in step t      these functions simply specify the positive and
negative effects of actions   the initial state is also represented by a plausibility function
which links variables in the first step  feasibility functions define preconditions for an action
to be feasible  they link variables in a step t to the decision variable of that step  utility
functions are boolean functions which describe the goal states  they hold over variables in
step k  in order to search for a plan of length lesser than k  the sequence of elimination is a
max elimination on all variables  the expected utility structure used is the boolean optimistic
expected disjunctive utility 
    influence diagrams  howard   matheson        
we start from the definition of influence diagrams of section    with each decision variable
d  we can associate a decision rule  d   dom pag  d    dom d   an influence diagram policy
 id policy  is a set      d   d  d  of decision rules  one for each decision variable   the
value val   of an id policy x
 is given
yby the probabilistic
x expectation of the utility 
  
ps   pag  s      
ui    as      d  as     
val    
as dom s 

ui u

ss

dd

to solve an influence diagram  we must compute the maximum value of the previous quantity and find an associated optimal id policy  using lemma   and the dag structure  it is
possible to show  using the same ideas as in the scsp subsumption proof  that the optimal
expected utility is given by the answer to the query q below  associated optimal decision rules
can be recorded during the evaluation of ans q   
 expected utility structure  row   in table    probabilistic expected additive utility  
 pfu network  n    v  g    p    u    v is the set of variables of the influence diagram 
g  is the dag obtained from the dag of the influence diagram by removing utility
nodes and arcs into decision nodes  in g    there is one component per variable  p  
 ps   pag  s    s  ve   and f act  s      ps   pag  s     u is the set of utility functions
associated with utility nodes 
 pfu query  q    n   sov   with sov obtained from the dag of the influence diagram as
follows  initially  sov     in the dag of an influence diagram  the decisions are totally
ordered  let d be the first decision variable in the dag g of the influence diagram  i e 
the decision variable with no parent decision variable   then  repeatedly update sov
by sov  sov     pag  d    max   d   and delete d and the variables in pag  d  from g
until no decision variable remains  then  perform sov  sov     s   where s is the set
of chance variables that have not been deleted from g 
    finite horizon mdps  puterman        monahan        sabbadin        boutilier et al  
             in order to prove that the encoding in the pfu framework given in sections    
and     actually enables us to solve a t time steps probabilistic mdp  we start by reminding
the algorithm used to compute an optimal mdp policy  usually  a decision rule for dt is
chosen by computing vst   maxdt rst  dt   vst is the optimal reward which can be obtained
in state st   atp
a time step i      t    a decision rule for di is chosen by computing vsi  
maxdi  rsi  di   si   psi     si  di  vsi      last  the optimal expected value of the reward 
which depends on the initial state s    is vs   
let us prove by induction
that forp
all i     
p
q t     
p
vs    maxd  s       maxdi si      k   i  psk     sk  dk       k   i  rsk  dk     vsi      
this proposition holds for i      since p

vs    maxd   r
p s   d    s  ps    s   d   vs  
p
  maxd  s   ps    s   d    rs   d    vs      since s  ps    s   d       
   

fipralet  verfaillie    schiex

moreover  if the proposition
holds p
at stepqi     with i       then p
p
vs    maxd  s        maxdi  si    k   i   psk     sk  dk       k   i   rsk  dk     vsi    
given
p that
p
p
  k   i   rsk  dk     vsi     k   i   rsk  dk     maxdi  rsi  di   si   psi     si  di  vsi    
p
p
  maxdi    k   i  rsk  dk     si   psi     si  di  vsi    
p
p
  maxdi si   psi     si  di     k   i  rsk  dk     vsi    
p
 the last equality holds since si   psi     si  di       it can be inferred that
q
p
  k   i   psk     sk  dk       k   i   rsk  dk     vsi  
p
q
p
  maxdi si      k   i  psk     sk  dk       k   i  rsk  dk     vsi      
which proves that the proposition holds at step i  this proves that it also holds at step t   and
therefore vs    ans q   furthermore  as each step in the proof preserves the set of optimal
decision rules  an optimal mdp policy can be recorded during the evaluation of ans q  
we now study the case of partially observable finite horizon mdps  finite horizon pomdps  
in a pomdp  we add for each time step t     a conditional probability distribution pot   st
of making observation ot at time step t given the state st   the value of st remains unobserved  we also assume that a probability distribution ps  over the initial state is available 
the subsumption proof for this case is more difficult  we consider the approach of pomdps
which consists in finding an optimal policy tree  this approach is equivalent to compute 
for each decision variable dt   a decision rule for dt depending on the observations made so
far  i e  a function dt   dom  o            ot     dom dt    the set of such functions is denoted
dt   a set     d            dt   is called a pomdp policy  the value of a pomdp policy
is recursively defined as follows  first  the value of the reward at the last decision step 
which depends on the assignment ast of st and on the observations o t made from the
beginning  is v   st  o       ot  ast  o t     rst  dt  ast   dt  o t     at a time step i  the
obtained reward depends on the actual state asi and on the observations o i made so far 
its expression is 
v   si  o       o
p
pi  asi  o i  
   rsi  di   si   psi     si  di  oi   poi     si    v   si    o       oi     a 
where a   asi  di  o i   o i this equation and the recursive formula used to define the
value of a policy tree for a pomdp  kaelbling  littman    cassandra p
      are equivalent  finally  the expected reward of the pomdp policy  is v      s  ps   v   s   
solving a finite horizon pomdp consists in computing the optimal expected reward among
all pomdp policies  i e  in computing v    maxd       dt v   d            dt      as well as
associated optimal decision rules 
using a proof by induction as in the observable mdp case  it is first possible to prove that
for a problem with t steps  p
p
v    maxd       dt o       ot s       st v
q
q
p
with v    ps   i   t   psi     si  di  i   t   poi     si        i   t   rsi  di   
from this  a recursive use of lemma
  enables
p
p us to infer
pthat
p
v    maxd  o  maxd  o  maxd        ot maxdt s       st v  
it proves that the query defined below enables us to compute v  as well as an optimal policy 
 algebraic structure  probabilistic expected additive utility  row   in table    
 pfu network  n    v  g  p    u    v equals  si   i      t      oi   i      t      di   i 
    t     with vd    di   i      t     g is a dag with one variable per component  a
decision component does not have any parents  an environment component  oi   has
 si   as parent  and a component  si     has  si   and  di   as parents  p    ps    
 psi     si  di   i      t        poi   si   i      t     f act  s        ps     f act  si       
 psi     si  di    and f act  oi       poi   si    last  u    rsi  di   i      t    
   

fithe pfu framework

 pfu query  based on the dag  a necessary condition for a query to be defined is that
each decision di must appear to the left of the variables in  sk   k   i      t      ok   k 
 i      t     the query considered is q    n   sov   with
sov    max  d        o     max  d                ot    max  dt        s            st    
the proofs for finite horizon  po mdps based on possibilities or on  rankings are similar 
as for the subsumption of factored mdps  we can first argue that every factored mdp can
be represented as a usual mdp  and therefore as a pfu query on a pfu network  even if
this is a sufficient argument  we can define a better representation of factored mdps in the
pfu framework  it corresponds to a representation where the variables describing states are
directly used together with the local plausibility functions and rewards  which can be modeled
by scoped functions  defined as decision trees  binary decision diagrams        
     queries on bayesian networks  pearl        markov random fields  chellappa   jain       
and chain graphs  frydenberg        
it suffices to consider chain graphs  since bayesian networks and markov random fields are
particular cases of chain graphs  the subsumption proofs are provided for the general case of
plausibility distributions defined on a totally ordered conditionable plausibility structure 
 a   map  mpe  and probability of an evidence  as mpe  most probable explanation  and
the computation of the probability of an evidence are particular cases of map  maximum
a posteriori hypothesis   it suffices to prove that map is subsumed  the probabilistic
map problem consists in finding  given a probability distribution pv   a maximum a
posteriori explanation to an assignment of a subset o of v which has been observed  also
called evidence   more formally  let d denote the set of variables on which an explanation
is sought and let e denote the observed assignment of o  the map problem consists in
finding an assignment a of d such that maxadom d  pd   o  a e    pd   o  a  e   as
pd   o   pd o  po   we can write 
maxadom d  pd   o  a e     maxadom d  p
pd o  a e   po  e 
   maxadom d  a  dom v  do   pv  a e a     po  e 
p
thus  computing maxd v  do  pv  e  is sufficient  the difference lies only in a normalizing constant   this result can be generalized to all totally ordered conditionable
plausibility structures 
indeed  as p is monotonic  maxadom d  pd o  a e     maxadom d  pd   o  a e   p
po  e   if maxadom d  pd o  a e  p po  e   then there exists a unique p  ep such
that maxadom d  pd o  a e    p p po  e   this gives us p   maxadom d  pd   o  a e  
otherwise  if maxadom d  pd o  a e    po  e   then we can infer that there exists
a  dom d  such that pd o  a  e    po  e   and therefore pd   o  a  e     p   thus 
maxadom d  pd   o  a e     p too  this shows that determining maxadom d  pd o  a e 
gives maxadom d  pd   o  a e  
moreover  if a  argmax pd o  a   e   a   dom d    then max p  ep   pd o  a  e   
p p po  e   p max p  ep   pd o  a e    p p po  e   for all a  dom d   therefore  an optimal assignment of d for maxd pd o  e  is also an optimal assignment of d
for maxd pd   o  e   as a result  the map problem can be reduced to the computation of
maxd pd o  e    maxd p v  do  pv  e    maxd p v d  pv p o  
where o is the scoped function with scope o such that o  e       p if e    e   p otherwise  we define a pfu query whose answer is ans q    maxd p v d  pv p o   
 the plausibility structure is  ep   p   p    the utility structure is  eu   u      ep   p   
and the expected utility structure is  ep   eu   u   pu      ep   ep   p   p   
 pfu network  the difficulty in the definition of the pfu network lies in the fact that
normalization conditions on components must be satisfied  the idea is that only the
   

fipralet  verfaillie    schiex

components in which a variable in d  o is involved have to be modified  the pfu
network is n    v  g  p    u    v the set of variables of the chain graph  vd   d
and ve   v d  g is a dag of components obtained from the dag g  of the chain
graph by splitting every component c in which a variable in d  o is involved  such
a component c is transformed into  c  components containing only one variable  all
these  c  components become parents of the child components of c  for a component
 x    included in one of these  c  components  if x   d  then  x    is a decision
component  otherwise   x    is an environment component  and we create a plausibility function pi   equal to a constant p   x    such that p i    dom x      p   x       p  
and such that f act  x        p   x      p contains first the constants defined above 
and second the factors expressing pc   pag   c  in the chain graph for the components
c satisfying c   d  o      last  u contains the factors expressing pc   pag   c  in the
chain graph for the components c such that c   d  o       and a constant factor
p   x    satisfying p   x    p p   x       p for each component  x    created in the
splitting process described above  and hard constraints representing o   with this
pfu network  the local normalization conditions are satisfied  and the combination
of the local functions equals pv p o  
 pfu query  the query is simply q    n    max  d   u   v  d   
an optimal decision rule for d can be recorded during the computation of ans q  
 b   plausibility distribution computation task   given a plausibility distribution pv expressed as a combination of plausibility functions as in chain graphs  the goal is to
compute the plausibility distribution ps over a set s  v   the basic formula ps  
p v s pv proves that the query defined below actually computes ps   this query shows
the usefulness of free variables 
 the plausibility structure is  ep   p   p    the utility structure is  eu   u      ep   p   
and the expected utility structure is  ep   eu   u   pu      ep   ep   p   p   
 pfu network  n    v  g  p    u    with ve   v  s  vd   s  and with the dag
g and the sets p   u obtained similarly as for the map case 
 pfu query  q    n    u   v  s  
     hybrid networks  dechter   larkin        
a hybrid network is a triple  g  p  f    where g is a dag on a set of variables v partitioned
into r and d  p is a set of probability distributions expressing pr   pag  r  for all r  r 
and f is a set of functions fpag  d  for all d  d  variables in d are deterministic  in the
sense that their value is completely determined by the assignment of their parents   the
most general task on hybrid networks is the task of belief assessment conditioned on a formula  in conjunctive normal form  it consists of computing the probability distribution
of a variable x given a complex evidence   complex because it may involve several variables  
p ignoring a normalizing constant  it requires to compute  for all assignments  x  a  of
x  adom v  x      a  x a   t pv  a  x  a    if c    c            cm   denotes the set of clauses
p
q
q
q
of   it also equals   v  x    rr pr   pag  r       dd fpag  d       ci c ci     x  a   
the query corresponding to this computation uses the probabilistic expected satisfaction structure  row   in table     and the pfu network n    v  g  p    u    with ve   v   vd    x  
p    pr   pag  r    r  r   x     fpag  d    d  d   x    and either u   c   px   pag  x    if
x  r or u   c   fpag  x    if x  d  the query is q    n       v   x    

   

fithe pfu framework

references
bacchus  f     grove  a          graphical models for preference and utility  in proc  of
the   th international conference on uncertainty in artificial intelligence  uai     
pp       montreal  canada 
bahar  r   frohm  e   gaona  c   hachtel  g   macii  e   pardo  a     somenzi  f         
algebraic decision diagrams and their applications  in ieee  acm international
conference on cad  pp          santa clara  california  usa  ieee computer
society press 
bertele  u     brioschi  f          nonserial dynamic programming  academic press 
bistarelli  s   montanari  u   rossi  f   schiex  t   verfaillie  g     fargier  h         
semiring based csps and valued csps  frameworks  properties and comparison 
constraints                
bodlaender  h          treewidth  algorithmic techniques and results  in proc  of the
  nd international symposium on mathematical foundations of computer science
 mfcs     
bordeaux  l     monfroy  e          beyond np  arc consistency for quantified constraints  in proc  of the  th international conference on principles and practice of
constraint programming  cp      ithaca  new york  usa 
boutilier  c   brafman  r   domshlak  c   hoos  h     poole  d          cp nets  a tool for
representing and reasoning with conditional ceteris paribus preference statements 
journal of artificial intelligence research             
boutilier  c   dean  t     hanks  s          decision theoretic planning  structural assumptions and computational leverage  journal of artificial intelligence research 
        
boutilier  c   dearden  r     goldszmidt  m          stochastic dynamic programming
with factored representations  artificial intelligence                   
boutilier  c   friedman  n   goldszmidt  m     koller  d          context specific independence in bayesian networks  in proc  of the   th international conference on
uncertainty in artificial intelligence  uai      pp          portland  oregon  usa 
chellappa  r     jain  a          markov random fields  theory and applications  academic press 
chu  f     halpern  j       a   great expectations  part i  on the customizability of
generalized expected utility  in proc  of the   th international joint conference on
artificial intelligence  ijcai      acapulco  mexico 
chu  f     halpern  j       b   great expectations  part ii  generalized expected utility
as a universal decision rule  in proc  of the   th international joint conference on
artificial intelligence  ijcai      pp          acapulco  mexico 
cooper  m     schiex  t          arc consistency for soft constraints  artificial intelligence                    
darwiche  a          recursive conditioning  artificial intelligence                 
   

fipralet  verfaillie    schiex

darwiche  a     ginsberg  m          a symbolic generalization of probability theory 
in proc  of the   th national conference on artificial intelligence  aaai      pp 
        san jose  ca  usa 
dechter  r          bucket elimination  a unifying framework for reasoning  artificial
intelligence                  
dechter  r     fattah  y  e          topological parameters for time space tradeoff 
artificial intelligence                   
dechter  r     larkin  d          hybrid processing of beliefs and constraints  in proc  of
the   th international conference on uncertainty in artificial intelligence  uai     
pp          seattle  wa  usa 
dechter  r     mateescu  r          mixtures of deterministic probabilistic networks
and their and or search space  in proc  of the   th international conference on
uncertainty in artificial intelligence  uai      banff  canada 
demirer  r     shenoy  p          sequential valuation networks  a new graphical technique for asymmetric decision problems  in proc  of the  th european conference on
symbolic and quantitavive approaches to reasoning with uncertainty  ecsqaru     pp          london  uk 
dubois  d     prade  h          possibility theory as a basis for qualitative decision
theory  in proc  of the   th international joint conference on artificial intelligence
 ijcai      pp            montreal  canada 
fargier  h   lang  j     schiex  t          mixed constraint satisfaction  a framework
for decision problems under incomplete knowledge  in proc  of the   th national
conference on artificial intelligence  aaai      pp          portland  or  usa 
fargier  h     perny  p          qualitative models for decision under uncertainty without
the commensurability assumption  in proc  of the   th international conference on
uncertainty in artificial intelligence  uai      pp          stockholm  sweden 
fikes  r     nilsson  n          strips  a new approach to the application of theorem
proving  artificial intelligence                  
fishburn  p          the foundations of expected utility  d  reidel publishing company 
dordrecht 
friedman  n     halpern  j          plausibility measures  a users guide  in proc  of the
  th international conference on uncertainty in artificial intelligence  uai      pp 
        montreal  canada 
frydenberg  m          the chain graph markov property  scandinavian journal of
statistics             
ghallab  m   nau  d     traverso  p          automated planning  theory and practice 
morgan kaufmann 
giang  p     shenoy  p          a qualitative linear utility theory for spohns theory
of epistemic beliefs  in proc  of the   th international conference on uncertainty in
artificial intelligence  uai      pp          stanford  california  usa 

   

fithe pfu framework

giang  p     shenoy  p          two axiomatic approaches to decision making using
possibility theory  european journal of operational research                  
goldman  r     boddy  m          expressive planning and explicit knowledge  in proc  of
the  rd international conference on artificial intelligence planning systems  aips     pp          edinburgh  scotland 
halpern  j          conditional plausibility measures and bayesian networks  journal of
artificial intelligence research             
halpern  j          reasoning about uncertainty  the mit press 
howard  r     matheson  j          influence diagrams  in readings on the principles and
applications of decision analysis  pp          strategic decisions group  menlo
park  ca  usa 
jegou  p     terrioux  c          hybrid backtracking bounded by tree decomposition of
constraint networks  artificial intelligence                
jensen  f   nielsen  t     shenoy  p          sequential influence diagrams  a unified
asymmetry framework  in proceedings of the second european workshop on probabilistic graphical models  pgm      pp          leiden  netherlands 
jensen  f     vomlelova  m          unconstrained influence diagrams  in proc  of the
  th international conference on uncertainty in artificial intelligence  uai      pp 
        seattle  wa  usa 
kaelbling  l   littman  m     cassandra  a          planning and acting in partially
observable stochastic domains  artificial intelligence                   
kolhas  j          information algebras  generic structures for inference  springer 
kushmerick  n   hanks  s     weld  d          an algorithm for probabilistic planning 
artificial intelligence                   
larrosa  j     schiex   t          in the quest of the best form of local consistency for
weighted csp  in proc  of the   th international joint conference on artificial intelligence  ijcai      acapulco  mexico 
lauritzen  s     nilsson  d          representing and solving decision problems with
limited information  management science                   
littman  m   majercik  s     pitassi  t          stochastic boolean satisfiability  journal
of automated reasoning                 
mackworth  a          consistency in networks of relations  artificial intelligence        
      
monahan  g          a survey of partially observable markov decision processes  theory 
models  and algorithms  management science              
ndilikilikesha  p          potential influence diagrams  international journal of approximated reasoning             
nielsen  t     jensen  f          representing and solving asymmetric decision problems 
international journal of information technology and decision making            

   

fipralet  verfaillie    schiex

pearl  j          probabilistic reasoning in intelligent systems  networks of plausible inference  morgan kaufmann 
perny  p   spanjaard  o     weng  p          algebraic markov decision processes  in
proc  of the   th international joint conference on artificial intelligence  ijcai     edinburgh  scotland 
pralet  c          a generic algebraic framework for representing and solving sequential decision making problems with uncertainties  feasibilities  and utilities  ph d 
thesis  ecole nationale superieure de laeronautique et de lespace  toulouse  france 
pralet  c   schiex  t     verfaillie  g       a   decomposition of multi operator queries
on semiring based graphical models  in proc  of the   th international conference
on principles and practice of constraint programming  cp      pp          nantes 
france 
pralet  c   schiex  t     verfaillie  g       b   from influence diagrams to multioperator
cluster dags  in proc  of the   nd international conference on uncertainty in
artificial intelligence  uai      cambridge  ma  usa 
pralet  c   verfaillie  g     schiex  t       c   decision with uncertainties  feasibilities 
and utilities  towards a unified algebraic framework  in proc  of the   th european
conference on artificial intelligence  ecai      pp          riva del garda  italy 
puterman  m          markov decision processes  discrete stochastic dynamic programming  john wiley   sons 
sabbadin  r          a possibilistic model for qualitative sequential decision problems
under uncertainty in partially observable environments  in proc  of the   th international conference on uncertainty in artificial intelligence  uai      pp         
stockholm  sweden 
sang  t   beame  p     kautz  h          solving bayesian networks by weighted model
counting  in proc  of the   th national conference on artificial intelligence  aaai     pp          pittsburgh  pa  usa 
schmeidler  d          subjective probability and expected utility without additivity 
econometrica                 
schrijver  a          theory of linear and integer programming  john wiley and sons 
shafer  g          a mathematical theory of evidence  princeton university press 
shenoy  p          valuation based systems for discrete optimization  uncertainty in
artificial intelligence            
shenoy  p          valuation based systems for bayesian decision analysis  operations
research                 
shenoy  p          conditional independence in valuation based systems  international
journal of approximated reasoning                 
shenoy  p          valuation network representation and solution of asymmetric decision
problems  european journal of operational research              

   

fithe pfu framework

smith  j   holtzman  s     matheson  j          structuring conditional relationships in
influence diagrams  operations research             
spohn  w          a general non probabilistic theory of inductive reasoning  in proc  of
the  th international conference on uncertainty in artificial intelligence  uai     
pp          cambridge  ma  usa 
von neumann  j     morgenstern  o          theory of games and economic behaviour 
princeton university press 
walsh  t          stochastic constraint programming  in proc  of the   th european
conference on artificial intelligence  ecai      pp          lyon  france 
weydert  e          general belief measures  in proc  of the   th international conference
on uncertainty in artificial intelligence  uai      pp         
wilson  n          an order of magnitude calculus  in proc  of the   th international
conference on uncertainty in artificial intelligence  uai      pp          montreal 
canada 

   

fi