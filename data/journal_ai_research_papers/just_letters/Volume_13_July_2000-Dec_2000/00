journal artificial intelligence research               

submitted       published     

space efficiency propositional knowledge representation
formalisms
marco cadoli

cadoli dis uniroma  it

dipartimento di informatica e sistemistica
universita di roma la sapienza
via salaria      i        roma  italy

francesco m  donini

donini dis uniroma  it

politecnico di bari
dipartimento di di elettrotecnica ed elettronica
via orabona    i        bari  italy

paolo liberatore
marco schaerf

liberato dis uniroma  it
schaerf dis uniroma  it

dipartimento di informatica e sistemistica
universita di roma la sapienza
via salaria      i        roma  italy

abstract
investigate space efficiency propositional knowledge representation  pkr 
formalism  intuitively  space efficiency formalism f representing certain piece
knowledge   size shortest formula f represents   paper
assume knowledge either set propositional interpretations  models  set
propositional formulae  theorems   provide formal way talking relative
ability pkr formalisms compactly represent set models set theorems 
introduce two new compactness measures  corresponding classes  show
relative space efficiency pkr formalism representing models theorems directly
related classes  particular  consider formalisms nonmonotonic reasoning 
circumscription default logic  well belief revision operators stable
model semantics logic programs negation  one interesting result formalisms
time complexity necessarily belong space efficiency class 

   introduction
last years large number formalisms knowledge representation  kr 
proposed literature  formalisms studied several perspectives  including semantical properties  computational complexity  investigate
space efficiency  property minimal size needed represent certain piece knowledge given formalism  study motivated fact
piece knowledge represented two formalisms using different amount
space  therefore  else remaining same  formalism could preferred another
one needs less space store information 
definition space efficiency  however  simple  indeed  formalism may allow
several different ways represent piece knowledge  example  let us assume
want represent piece knowledge today monday  propositional

c
    
ai access foundation morgan kaufmann publishers  rights reserved 

ficadoli  donini  liberatore    schaerf

logic may decide use single propositional variable monday  fact today
monday represented formula monday  formula monday 
well monday  rain rain   formulae propositional logic
logically equivalent monday represent exactly information 
propositional logic  consider shortest equivalent formulae used
represent information have  principle applied generic
formalism  allows several formulae represent information  take
account shortest one  therefore  say space efficiency formalism f
representing certain piece knowledge size shortest formula f
represents   space efficiency called succinctness compactness formalism
measure ability representing knowledge small amount space 
paper focus propositional kr  pkr  formalisms  give
formal definition formalisms propositional one not  intuitively 
propositional formalism  quantifications allowed  thus formulae
syntactically bounded formed using propositional connectives  plus
kind nonclassical connectives  for instance  negation logic programs  etc   
far  discussed knowledge represents  possible way think
piece knowledge represents facts inferred it  words 
knowing something knowing everything logically implied 
second way cases natural think piece knowledge
set states world consider possible 
formal way  say knowledge represented either set propositional interpretations  those describing states world consider plausible  set
formulae  those implied know   consequently  focus reasoning
problems model checking theorem proving  following example shows
really think knowledge ways 
example   want eat fast food  want either sandwich salad
 but both   either water coke  but both  
propositional logic  choice represented model  following
models represent possible choices  models represented writing letters
mapped true  
    sandwich  water    sandwich  coke    salad  water    salad  coke  
representing set choices use formulae instead models  case 
write set formulae whose models represent exactly allowed choices 
follows 
c    sandwich salad   sandwich salad   sandwich salad 
 water coke   water coke   coke water 

actually  get rid redundancies  end following formula 
f    sandwich salad   sandwich salad   water coke   water coke 
 

fispace efficiency propositional knowledge representation formalisms

formally  f represents set models a  interpretation i 
holds    f   formula f represents set formulae c 
cn f     cn c   cn    function gives set conclusions
drawn propositional formula 
    state art
question deeply investigated  related space efficiency 
possibility translating formula expressed one formalism formula expressed
another formalism  under assumption  course  formulae represent
knowledge  
cases  analysis possibility translating formulae different
formalisms propositional logic  pl   example  ben eliyahu dechter             
proposed translation default logic pl  translation disjunctive logic
programs pl  winslett        introduced translation revised knowledge
bases pl  gelfond  przymusinska  przymusinskyi        defined translation
circumscription pl 
translations  well many ones literature  lead
exponential increase size formula  worst case  best known
translation yields formula target formalism exponential size w r t 
formula source formalism  natural question arising whether exponential
blow due specific translation  intrinsic problem  example 
although proposed translations default logic pl lead exponential blow
up  cannot conclude possible translations suffer problem  could
polynomial translation exists  discovered far 
works focussed question whether kind exponential increase
size intrinsic not  cadoli  donini  schaerf        shown many interesting fragments default logic circumscription cannot expressed polynomialtime fragments pl without super polynomially increasing size formulae 
proved super polynomial increase size necessary translating
unrestricted propositional circumscription  cadoli  donini  schaerf    silvestri       
operators belief revision pl  cadoli  donini  liberatore    schaerf       
liberatore        
gogic collegues        analyzed relative succinctness several pkr formalisms
representing sets models  among results  showed skeptical default logic
represent sets models succinctly circumscription 
kautz  kearns  selman        khardon roth              considered
representations knowledge bases based notion characteristic model  comparing
representations  e g   based clauses  showed representation
knowledge bases characteristic models sometimes exponentially compact
ones  converse true cases 
however  results based specific proofs  tailored specific reduction  help us define equivalence classes space efficiency kr
formalisms  recent paper  cadoli  donini  liberatore    schaerf      b   new complexity measure decision problems  called compilability  introduced 

 

ficadoli  donini  liberatore    schaerf

present paper show new measure directly used characterize space
efficiency pkr formalisms  emphasize methodological aspects  expressing
general context many results presented before 
    goal
notion polynomial time complexity great importance kr  as well many
fields computer science   problems solved polynomial time
considered easy  computational point view 
notion polynomial many one reducibility intuitive meaning
applied kr  exists polynomial many one reduction one formalism
another one  time complexity reasoning two formalisms comparable 
allows say  e g   inference pl conp complete  i e  one hardest
problems among complexity class conp 
result  formal tool comparing difficulty reasoning two
formalisms  missing way saying one formalism able represent
information less space 
example   consider lunch scenario previous example  show
reduce size representation using circumscription instead propositional
logic  pl  knowledge previous example represented formula f  
f    sandwich salad   sandwich salad   water coke   water coke 
set models formula a  models exactly minimal
models formula fc defined follows 
fc    sandwich salad   water coke 
definition circumscription  mccarthy        holds f equivalent
circ fc    sandwich  salad  water  coke        note fc shorter f   result
proved hold arbitrary sets models  may conclude circumscription
space efficient propositional logic representing knowledge expressed sets
models 
goal provide formal way talking relative ability pkr formalisms compactly represent information  information either set models
set theorems  particular  would able say specific pkr
formalism provides one compact ways represent models theorems among
pkr formalisms specific class 
    results
introduce two new compactness measures  model theorem compactness 
corresponding classes  model c thm c  c complexity class p  np  conp 
etc    classes form two hierarchies isomorphic polynomial time hierarchy
 stockmeyer         show relative space efficiency pkr formalism
 

fispace efficiency propositional knowledge representation formalisms

directly related classes  particular  ability pkr formalism compactly
represent sets models theorems directly related class model theorem
hierarchy belongs to  problems higher model theorem hierarchy represent
sets models theorems compactly formalisms lower classes 
classification obtained general framework making direct
comparisons specific translations various pkr formalisms  furthermore 
approach allows simple intuitive notion completeness model
theorem hierarchies  notion precisely characterizes relation
formalisms different levels  relations formalisms level 
interesting result two pkr formalisms model checking inference belong
time complexity class may belong different compactness classes  may
suggest criterion choosing two pkr formalisms reasoning
time complexitynamely  choose compact one  also  two pkr formalisms
may belong theorem compactness class  yet different model compactness
classes  stresses importance clarifying whether one wants represent models
theorems choosing pkr formalism 
    outline
next section introduce notation assumptions adopt
work  section    compilability  briefly recall notions non uniform computation important follows recall basic definitions compilability
classes  cadoli et al       b   section    reductions  describe constraints
impose reductions  section    space efficiency  introduce compactness
classes  section    applications  actually compare many known pkr formalisms
using framework  finally  section    related work conclusions  compare
work proposals presented literature draw conclusions 

   notations assumptions
section define knowledge bases formalisms are  since want
consider formalisms different syntax semantics  need
general definitions  let us consider  base case  formalism propositional calculus 
formally  assume composed three parts 
   syntax  used define well formed formulae 
   proof theory  allows saying formula follows another one 
   model theoretic semantics  establishes model satisfies formula 
syntax defined finite alphabet propositional symbols l    a  b  c         
possibly subscripts  usual set propositional connectives      
terms knowledge representation  proof theory seen way extracting knowledge knowledge base  example  knowledge base c 
fact b holds  thus say formula b part knowledge represented
c 
 

ficadoli  donini  liberatore    schaerf

cases  want knowledge bases represent models rather sets formulas 
interpretation alphabet propositional variables l mapping l
 true  false   model theoretic semantics propositional calculus usual way
extending interpretation l well formed formulas 
let us extend definition generic formalisms  formalism composed
syntax  proof theory  model theoretic semantics 
remark formalism syntax  instance  default logic includes
ternary connective   denoting default rules  logic programming special
unary connective not    on  knowledge base formalism f simply wellformed formula  according syntax formalism 
formalism proof theory well  proof theory formalism f
binary relation  f set knowledge bases formulae  intuitively  f b  f means
consequence knowledge base kb  according rules formalism
f   result  set formulae implied knowledge base kb exactly
knowledge represented kb 
base comparison two different formalisms concept equivalence 
allowing saying two knowledge bases  of two different formalisms  represent
piece knowledge  since knowledge represented knowledge base set
formulas implies  assume syntax formulae
formalisms  namely  always assume formulae implied knowledge
base well formed formulae propositional calculus  words  formalism
syntax knowledge bases  however  assume proof theory relates
knowledge bases  formulae syntax formalism  propositional formulae  so 
writing kb  f   assume kb knowledge base syntax f  
propositional formula 
allows saying two knowledge bases kb  kb    expressed two different formalisms f  f    represent piece knowledge  true when 
propositional formula holds kb   f  kb   f   
model theoreric semantics formalism relation   f propositional
models knowledge bases  case  assume fixed alphabet l  thus set
interpretations common formalisms  model knowledge base
kb relation  write   f kb  intuitively  means model
supports piece knowledge represented kb 
remark formalisms  e g  credolous default logic  reiter        
proof theory  model theoretic semantics  possible conceive
formalisms model theoretic semantics proof theory 
defined  assume related following formula 
kb  f

iff

     kb implies   

regarding proof theory formalisms  consider formulae shorter
knowledge base  is  assume knowledge represented knowlegde
base kb set formulae kb  f   size size
kb  done two reasons  first  formulas larger kb likely

 

fispace efficiency propositional knowledge representation formalisms

contain large parts actually independent kb  second  give technicals
result simple way using compilability classes introduced next section 
assumption   consider formulae whose size less equal
knowledge base 
formalisms consider satisfy right hand side distruibutivity conjunction 
is  kb  f kb  f kb  f   assumption size
restrictive case  cnf formula 

   compilability classes
assume reader familiar basic complexity classes  p  np  uniform 
classes polynomial hierarchy  stockmeyer        garey   johnson        
briefly introduce non uniform classes  johnson         sequel  c  c    etc  denote
arbitrary classes polynomial hierarchy 
assume input instances problems strings built alphabet  
denote empty string assume alphabet contains special
symbol   denote blanks  length string x denoted  x  
definition   advice function takes integer returns string 
advices important complexity theory definitions results often
based special turing machines determine result oracle free 
is  constant time 
definition   advice taking turing machine turing machine enhanced
possibility determine a  x   constant time  x input string 
course  fact a  x   determined constant time  while
intractable even undecidable function  makes definitions based advice taking
turing machine different ones based regular turing machine  example 
advice taking turing machine calculate polynomial time many functions
regular turing machine cannot  including untractable ones  
note advice function size input  input itself 
hence  advice taking turing machines closely related non uniform families circuits
 boppana   sipser         clearly  advice allowed access whole instance 
would able determine solution problem constant time 
definition   advice taking turing machine uses polynomial advice exists
polynomial p advice oracle satisfies  a n   p n  nonnegative
integers n 
non uniform complexity classes based advice taking turing machines 
paper consider simplified definition  based classes polynomial hierarchy 

 

ficadoli  donini  liberatore    schaerf

definition   c class polynomial hierarchy  c poly class languages defined turing machines time bounds c  augmented polynomial advice 
class c poly known non uniform c  non uniformity due
presence advice  non uniform uniform complexity classes related  karp
lipton        proved np p poly p    p    ph  i e   polynomial hierarchy collapses second level  yap        generalized results  particular
showing np conp poly p    p    ph  i e   polynomial hierarchy
collapses third level  inprovement results given kobler
watanabe         proved kp pk  poly implies polynomial hierarchy collapses zpp pk      collapse polynomial hierarchy considered
unlikely researchers structural complexity 
summarize definitions results proposed formalize compilability
problems  cadoli et al       b   adapting context terminology pkr
formalisms  remark aim paper give formalization
compilability problems  analyze problems point view  rather  show
use compilability classes technical tool proving results relative
efficiency formalisms representing knowledge little space 
several papers literature focus problem reducing complexity
problems via preprocessing phase  kautz   selman        kautz et al         khardon
  roth         motivates introduction measure complexity problems
assuming preprocessing allowed  following intuition knowledge base
known well questions posed it  divide reasoning problem two parts 
one part fixed accessible off line  the knowledge base   second one varying 
accessible on line  the interpretation formula   compilability aims capturing on line
complexity solving problem composed inputs  i e   complexity respect
second input first one preprocessed arbitrary way  next
section show close connection compilability space efficiency pkr
formalisms 
function f called poly size exists polynomial p strings
x holds  f  x   p  x    exception definition x represents number 
case  impose  f  x   p x   result  say function used
advice taking turing machine polysize function 
function g called poly time exists polynomial q x  g x 
computed time less equal q  x    definitions easily extend
binary functions usual 
define language pairs subset   necessary represent
two inputs pkr reasoning problem  i e   knowledge base  kb   formula
interpretation  example  problem inference propositional logic  pli 
defined follows 
pli    hx  yi   x set propositional formulae  the kb   formula  x   y 
well known pli conp complete  i e   one hardest problems
among belonging conp  goal prove pli hardest theorem 

fispace efficiency propositional knowledge representation formalisms

proving problem among conp solved preprocessing first input
arbitrary way  i e   kb  end  introduce new hierarchy classes 
non uniform compilability classes  denoted k c  c generic uniform complexity
class  p  np  conp  p   
definition    k c classes  language pairs belongs k c iff
exists binary poly size function f language pairs   c hx  yi
holds 
hf  x   y    yi   iff hx  yi
notice poly size function f takes input x  the kb  size
 either formula interpretation   done technical reason  is 
assumption allows obtaining results impossible prove function f
takes x input  cadoli et al       b   assuption useful proving negative results 
is  theorems impossibility compilation  indeed  impossible reduce
complexity problem using function takes x  y  input 
reduction impossible using function taking x argument 
theorem    cadoli  donini  liberatore    schaerf        theorem    let c
class polynomial hierarchy   problem belongs k c
exists poly size function f language pairs    
hx  yi holds that 
    y  k  hf  x  k   yi   hx  yi s 
     c 
clearly  problem whose time complexity c k c  take f  x   y     x
    s  interesting problem c may belong k c 
c  c  e g    problems np k p  true example problems
belief revision  cadoli et al          rest paper  however  mainly focus
complete problems  defined below  pictorial representation class k c
figure    assume   c 
problem pli method proving belongs k p known  order
show  probably  belong k p  define notion reduction
completeness 
definition    non uniform comp reducibility  given two problems b 
non uniformly comp reducible b  denoted nucomp b  iff exist two poly size
binary functions f  f    polynomial time binary function g every
pair hx  yi holds hx  yi hf   x   y    g f   x   y    y i b 
nucomp reductions represented depicted figure    reductions
satisfy important properties reduction 
theorem    cadoli et al       b  theorem    reductions nucomp satisfy transitivity compatible  johnson        class k c every complexity class c 
 

ficadoli  donini  liberatore    schaerf

f
 
  

x

       y 


 

hx  yi
 

s 

 

figure    representation k c 
x
 y 
  


  f 
  f 

 

 x

 

g
 

 y

 

 

figure    nu comp c reductions 

therefore  possible define notions hardness completeness k c
every complexity class c 
definition    k c completeness  let language pairs c complexity class 
k c hard iff problems k c nucomp s  moreover 
k c complete k c k c hard 
right complexity class completely characterize problem pli 
fact pli k conp complete  cadoli et al       b  theorem     furthermore  hierarchy
formed compilability classes proper polynomial hierarchy
proper  cadoli et al       b  karp   lipton        yap        fact widely conjectured
true 
informally  may say k np hard problems compilable p 
considerations know exists preprocessing fixed part
makes on line solvable polynomial time  polynomial hierarchy collapses 
holds k conp hard problems  general  problem k c complete
class c regarded toughest problem c  even arbitrary preprocessing fixed part  hand  problem k c problem that 
preprocessing fixed part  becomes problem c  i e   compilable c  
close section giving another example use compilability classes
well known formalism circumscription  mccarthy         let x propositional
formula  minimal models x truth assignments satisfying x
positive values possible  w r t  set containment   problem consider is  check
whether given model minimal model propositional formula  problem  called
minimal model checking  mmc   reformulated problem model checking
circumscription  known co np complete  cadoli        
  

fispace efficiency propositional knowledge representation formalisms

consider knowledge base x given off line  truth assignment
given on line  obtain following definition 
mmc    hx  yi   minimal model x  
problem shown k conp complete  cadoli et al       b  theorem     
hence  unlikely k p  is  unlikely exists
off line processing knowledge base  yielding  say  data structure x   
given y  checked polynomial time whether minimal model x 
this  course  unless x  exponential size  observation applies x 
knowledge base propositional logic  led interpretation circumscription
compact  succint  pl  cadoli  donini    schaerf        gogic et al         
framework allows generalize results pkr formalisms  shown
sequel 

   reductions among kr formalisms
define forms reduction pkr formalisms analyze
following sections  formula always represented string alphabet  
hence consider translations functions transforming strings 
let f  f  two pkr formalisms  exists poly size reduction f 
f    denoted f   f    f    f poly size function given knowledge
base kb f    f  kb  knowledge base f    clearly  reductions restricted
produce meaningful output  particular  discuss reductions preserve
models original theory 
semantic approach gogic collegues        models two
knowledge bases must exactly same  words  knowledge base kb
formalism f  translated knowledge base kb   formalism f      f  kb
  f  kb     approach summarized by  reduction
formalisms f  f  way translate knowledge bases f  knowledge bases f   
preserving sets models  semantics intuitively grounded  easy
show examples two formalisms consider equally space efficient cannot
translated other  let us consider instance variant propositional calculus
syntax formulas must form x  f   f regular
formula variables x           clearly  formalism able represent knowledge
space propositional calculus  apart polynomial factor   however 
according definition  formalism cannot translated propositional calculus 
knowledge base equivalent kb   x    indeed  model
kb   model consistent knowledge base modified propositional
calculus contains x   
propose general approach deal functions f change
language kb  end  allow translation gkb models kb
models f  kb   stress that  general possible  translation may depend
kb i e   different knowledge bases may different translations models 
want translation easy compute  since otherwise computation gkb could
hide complexity reasoning formalism  however  observe end 
  

ficadoli  donini  liberatore    schaerf

sufficient impose gkb computable polynomial time  fact  kb
fixed  models could trivially translated models f  kb  constant time  using
lookup table  table would exponentially large  though  want
forbid  hence  impose gkb circuit polynomial size wrt kb  still use
functional notation gkb  m   denote result applying model circuit
gkb   formal definition follows 
definition    model preservation  poly size reduction f   f    f  satisfies modelpreservation exists polynomial p that  knowledge base kb f 
exists circuit gkb whose size bounded p  kb    every interpretation
variables kb holds   f  kb iff gkb  m     f  f  kb  
rationale model preserving reduction knowledge base kb first
formalism f  converted knowledge base f  kb  second one f   
reduction model f  easily translated model
gkb  m   f   
require g depend kb  transformation f   general  could take
actual form kb account  happens following example modelpreserving translation 
example   reduce fragment skeptical default logic  kautz   selman       
circumscription varying letters  using transformation introduced etherington
        let hd  w prerequisite free normal  pfn  default theory  i e   defaults
form     generic formula  let z set letters occurring
hd  w i  define pd set letters  a     d   function f defined
following way  f  hd  w i    circ t   pd   z     w  a  a pd   
pd letters minimized  z  the set letters occurring hd  w i 
varying letters  show f model preserving poly size reduction  fact  given
set pfn defaults let gd function interpretation z 
gd  m      a pd  m       clearly  f poly size  gd realized circuit
whose size polynomial  d   model least one extension hd  w iff
gd  m      circ t   pd   z   dependence g stresses fact that 
case  circuit g depend whole knowledge base hd  w i  d 
clearly  models preserved  theorems preserved well  weaker form
reduction following one  theorems preserved  case
allow theorems kb translated simple circuit gkb theorems kb 
definition    theorem preservation  poly size reduction f   f    f  satisfies theorempreservation exists polynomial p that  knowledge base kb f   
exists circuit gkb whose size bounded p  kb    every formula
variables kb  holds kb  f  iff f  kb   f  gkb    
theorem preserving reduction property similar model preserving
reduction  knowledge bases used represent theorems rather models 
namely  knowledge base kb translated another knowledge base f  kb 
  

fispace efficiency propositional knowledge representation formalisms

used represent set theorems  precisely  theorem
kb represented theorem gkb    f  kb  
winslett        shown example reduction updated knowledge bases
pl theorem preserving model preserving  using winsletts reduction  one
could use machinery propositional reasoning kb 
update  plus reduction   reduction shown previous example  
theorem preserving  time g identity circuit 
remark definitions reduction general proposed
gogic collegues         fact  authors consider notion analogous
definition    case g identity i e   models two formalisms
identical  allowing simple translation g models definition   covers
general forms reductions preserving models  one example   

   comparing space efficiency pkr formalisms
section show use compilability classes defined section   compare
succinctness pkr formalisms 
let f  f  two formalisms representing sets models  prove
knowledge base f  reduced  via poly size reduction  knowledge base
f  satisfying model preservation compilability class problem
model checking  first input  kb  second input  interpretation  f  higher equal
compilability class problem model checking f   
similarly  prove theorem preserving poly size reductions exist
compilability class problem inference  first input  kb  second input  formula  cf 
definition problem pli  f  higher equal compilability class
problem inference f   
order simplify presentation proof theorems introduce
definitions 
definition     model hardness completeness  let f pkr formalism c
complexity class  problem model checking f belongs compilability class
k c  model varying part instances  say f model c 
similarly  model checking k c complete  hard   say f model c complete
 hard  
definition     theorem hardness completeness  let f pkr formalism
c complexity class  problem inference formalism f belongs
compilability class k c  whenever formula varying part instance  say
f thm c  similarly  inference k c complete  hard   say f thmc complete  hard  
definitions implicitly define two hierarchies  parallel polynomial hierarchy  stockmeyer         model hierarchy  model p model np model p   etc  
theorem hierarchy  thm p thm np thm  p  etc    higher formalism model
hierarchy  efficiency representing models analogously theorems 
example  cadoli et al         thm      characterize model theorem classes
propositional logic 
  

ficadoli  donini  liberatore    schaerf

theorem   pl model p thm conp complete 
formally establish connection succinctness representations
compilability classes  following theorems  complexity classes c  c    c  belong
polynomial hierarchy  stockmeyer         theorems     assume
polynomial hierarchy collapse 
start showing existence model preserving reductions formalism
another one easily obtained levels model hierarchy satisfy simple
condition 
theorem   let f  f  two pkr formalisms  f  model c f  modelc hard  exists poly size reduction f   f    f  satisfying model preservation 
proof  recall since f  model c  model checking f  k c  since f 
model c hard  model checking f  non uniformly comp reducible model checking
f    is   adapting def     exist two poly size binary functions f  f   
polynomial time binary function g every pair hkb  holds
  f  kb g f   kb   m         f  f   kb   m   
 note g poly time function appearing def     different gkb
poly size circuit appearing def     
observe  m   computed kb simply counting letters appearing kb  let f  counting function  i e    m     f   kb   clearly  f  poly size 
define reduction f f  kb    f   kb  f   kb    since poly size functions closed
composition  f poly size  show f model preserving reduction 
definition    need prove exists polynomial p knowledge
base kb f    exists poly size circuit gkb every interpretation
variables kb holds   f  kb iff gkb  m     f  f  kb  
proceed follows  given kb f    compute z   f   kb   m      f   kb  f   kb   
since f  f  poly size  z size polynomial respect  kb   define circuit
gkb  m   one computing g z      g f   kb  f   kb       since g poly time
function inputs  z poly size kb  exists representation g z   
circuit gkb whose size polynomial wrt kb  construction    f  kb iff
gkb  m     f  f  kb   hence  thesis follows 
following theorem  instead  gives simple method prove modelpreserving reduction one formalism another one 

theorem   let f  f  two pkr formalisms  polynomial hierarchy
collapse  f  model c   hard  f  model c    c  c    poly size
reduction f   f    f  satisfying model preservation 
proof  show reduction exists  c   poly c   poly implies
polynomial hierarchy collapses level  yap         let complete problem
class c  e g   c  p  may validity  quantified boolean formulae
 stockmeyer         define problem follows 
   hx  yi   x    the empty string  a 
  

fispace efficiency propositional knowledge representation formalisms

already proved  cadoli et al       b  thm     k c   complete  since model
checking f  model c   hard  non uniformly comp reducible model checking
f    is   adapting def     exist two poly size binary functions f  f   
polynomial time binary function g every pair h  yi  holds h  yi
g f      y    y    f  f      y    let  y    n  clearly  knowledge base f      y  
depends n  i e   exactly one knowledge base integer  call kbn  
moreover  f      y     f     n  depends n only  call  for oracle   observe
kbn polynomial size respect n 
exists poly size reduction f   f    f  satisfying model preservation  given
knowledge base kbn exists poly size circuit hn g on   y    f  kbn
hn  g on   y     f  f  kbn   
therefore  k c   complete problem non uniformly reduced problem
k c  follows  given y  size  y    n one obtains  with preprocessing 
f  kbn     one checks whether interpretation hn  g on   y    computable
polynomial time given n    model f  f  kbn    fact model
checking f  k c    k c  k c    proved previous paper
result implies c   poly c   poly  cadoli et al       b  thm     
turns implies polynomial hierarchy collapses  yap        
theorems show hierarchy classes model c exactly characterizes
space efficiency formalism representing sets models  fact  two formalisms
level model hierarchy reduced via poly size
reduction  theorem     poly size reduction formalism  f    higher
hierarchy one  f    lower class  theorem     latter case say
f  space efficient f   
analogous results  with similar proofs  hold poly size reductions preserving theorems 
namely  next theorem shows infer existence theorem preserving reductions 
one gives way prove theorem preserving reduction
one formalism another one 
theorem   let f  f  two pkr formalisms  f  thm c f  thm chard  exists poly size reduction f   f    f  satisfying theorem preservation 
proof  recall since f  thm c  inference f  k c  since f  thm chard  inference f  non uniformly comp reducible inference f    is   adapting
def     exist two poly size binary functions f  f    polynomial time binary
function g  every pair hkb  holds
kb  f  f   kb       f  g f   kb        
 here distinguish poly time function g appearing def    poly size circuit
gkb appearing def     
using theorem   replace    upper bound formula 
assumption    know size less equal size kb  therefore
replace     kb   formula becomes
kb  f  f   kb   kb    f  g f   kb   kb     
  

ficadoli  donini  liberatore    schaerf

define reduction f f  kb    f   kb  f   kb    f  poly size function
computes size input  since poly size functions closed composition 
f poly size 
now  show f theorem preserving reduction  i e  f satisfies def    
amounts proving knowledge base kb f  exists circuit gkb  
whose size poynomial wrt kb  every formula variables kb
holds kb  f  iff f  kb   f  gkb    
proceed proof theorem    given kb f    let z   f   kb  f   kb   
since f  f  poly size  z polynomial size respect  kb   define gkb     
g z      g f   kb  f   kb       clearly  gkb represented circuit polynomial
size wrt kb  construction  kb  f  iff f  kb   f  gkb     hence  claim
follows 
theorem   let f  f  two pkr formalisms  polynomial hierarchy
collapse  f  thm c   hard  f  thm c    c  c    poly size
reduction f   f    f  satisfying theorem preservation 
proof  show reduction exists  c   poly c   poly polynomial
hierarchy collapses level  yap         let complete problem class c   
define problem proof theorem    problem k c   complete  cadoli
et al       b  thm      since inference f  thm c   hard  non uniformly compreducible inference f    is   adapting def     exist two poly size binary
functions f  f    polynomial time binary function g every pair h  yi 
h  yi f      y    f  g f      y    y   let  y    n  clearly  knowledge
base f      y   depends n  i e   one knowledge base integer  call
kbn   moreover  f      y     f     n  depends n  call  for oracle  
observe kbn polynomial size respect n 
exists poly size reduction f   f    f  satisfying theorem preservation 
given knowledge base kbn exists poly time function hn kbn  f 
g on   y  f  kbn    f  hn  g on   y   
therefore  k c   complete problem non uniformly reduced problem
k c  follows  given y  size  y    n one obtains  with arbitrary preprocessing 
f  kbn     one checks whether formula hn  g on   y    computable polytime given   theorem f  f  kbn    fact inference f 
k c    k c  k c    follows c   poly c   poly  cadoli et al  
    b  thm      implies polynomial hierarchy collapses  yap        
theorems     show compilability classes characterize precisely relative
capability pkr formalisms represent sets models sets theorems  example 
consequence theorems     poly size reduction pl
syntactic restriction pl allowing horn clauses preserves theorems  unless
polynomial hierarchy collapses  kautz selman        proved non existence
reduction problem strictly related pli using specific proof 

  

fispace efficiency propositional knowledge representation formalisms

   applications
section devoted application theorems presented previous section 
using theorems     results previously known literature  able asses
model  theorem compactness pkr formalisms 
assume definitions propositional logic  default logic  reiter        
circumscription  mccarthy        known  definitions widtio  sbr  gcwa 
stable model semantics appropriate subsections 
following proofs refer problem  qbf  is  problem verifying
whether quantified boolean formula xy f valid  x disjoint sets
variables  f set clauses alphabet x   composed three literals 
example  simple formula belonging class is  x    x  y    y    x  y   
 x  x  y     y  x  y     x  x     
problem deciding validity  qbf complete class p    consequence  corresponding problem  qbf  deciding whether input composed
string    fixed part quantified boolean formula xy f varying
one  complete class k  p  liberatore         notice hardness
proofs show sequel use problems without meaningful fixed part 
    stable model semantics
stable model semantics  sm  introduced gelfond lifschitz        tool
provide semantics logic programs negation  original proposal one
standard semantics logic programs  recall definition propositional
stable model 
let p propositional  general logic program  let subset  i e   interpretation  atoms p   let p program obtained p following way 
clause c p contains body negated atom c deleted 
body clause contains negated atom   deleted
body clause  least herbrand model p stable model
p 
formalism sm  consider program p knowledge base  write
p   sm q denote query q implied logic program p stable model
semantics 
order prove result  need define kernel graph 
definition     kernel  let g    v  e  graph  kernel g set k v
that  denoting h   v k  holds 
   h vertex cover g
   j h  exists k  i  j  e 
state theorem compilability class inference stable model
semantics  corresponding theorem compactness class 
theorem   problem inference stable model semantics k conp complete 
thus stable model semantics thm conpcomplete 
  

ficadoli  donini  liberatore    schaerf

proof  membership class follows fact problem conp complete
 marek   truszczynski         hardness  adapt proof marek
truszczynski        showing deciding whether query true stable models
conp hard 
let kernel language    g  g graph least one kernel 
let  g    n  observe g cannot vertices size n 
show n  exists logic program pn every graph g
n vertices  exists query qg g kernel iff pn    sm qg  
let alphabet pn composed following  n    n propositional letters 
 ai  i     n     rij   sij  i  j     n    
program pn defined as 
aj
sij
rij

 
 
 



ai   rij

rij
i  j     n 


sij

given graph g    v  e   query qg defined
qg    

 

 i j e

rij    

 

rij  

 i j  e

reduction kernel sm defined as  f   x  n    pn   i e   f  depends
second argument  f   x  n      i e   f  constant function  g   qy   i e   given
graph g  circuit g computes query qg  
result  k  reduction  show reduction correct  i e  
h  gi kernel  g kernel  iff pn    sm qg  
if part  suppose pn    sm qg   then  exists stable model pn
   qg   observe qg equivalent conjunction rij  i  j  e 
rij  i  j    e  simplifying pn qg obtain clauses 
aj   ai    i  j  e

   

observe contains sij  i  j    e  order stable  i e  
support atoms rij  i  j  e contains atom sij  i  j  e 
let h    j aj    k    i ai      h vertex cover g  since
edge  i  j  e  satisfy corresponding clause     aj   ai   hence either
ai   aj   moreover  j h  atom aj   since
stable model  exists clause aj   ai ai     is  k  therefore 
k kernel g 
only if part  suppose g    v  e  kernel k  let h   v k  let
interpretation
   rij   i  j  e   sij   i  j    e   aj  j h 

obviously      qg   show stable model pn   i e   least
herbrand model pnm   fact  pnm contains following clauses 
sij
rij
aj

  rij

 i  j    e

   

k

   

 i  j  e

  

   

fispace efficiency propositional knowledge representation formalisms

clauses last line obtained clauses pn form aj   ai   rij  
clauses h  hence ai   deleted  clauses negated
atom ai deleted  since k  hence ai     aj   vertex j h 
hence edge  i  j  e  k  hence clauses         pnm   hence
least herbrand model pnm exactly aj j h 
    minimal model reasoning
one successful form non monotonic reasoning based selection
minimal models  among various formalisms based minimal model semantics consider circumscription  mccarthy        generalized closed world assumption
 gcwa   minker         formalism represent knowledge closed world 
assume reader familiar circumscription  briefly present
definition gcwa  model semantics gcwa defined  a letter  
  gcw kb iff    kb a   positive clause   kb    kb    a 
present results two formalisms 
theorem   problem model checking circumscription k conp complete  thus
circumscription model conp complete 
result trivial corollary theorem already proved  cadoli et al         theorem     fact  proof implicitly shows model checking circumscription
k conp complete 
theorem    problem model checking gcwa k p  thus gcwa
model p 
proof  already pointed  cadoli et al          possible rewrite gcw a t  
propositional formula f that  given model      gcw a t  
   f   moreover  size f polynomially bounded size  
consequence  model compactness gcwa class pl  theorem  
thesis follows 
theorem    problem inference circumscription k p   complete  thus circumscription thm p   complete 
result trivial corollary theorem published previous paper  cadoli
et al         theorem    implicitly shows inference circumscription k  p complete 
theorem    problem inference gcwa k conp complete  thus gcwa
thm conp complete 
proof  already pointed proof theorem     possible rewrite
gcw a t   formula f equivalent it  consequence  formula
theorem gcw a t   theorem f   thus  gcwa
theorem compexity pl  since gcwa generalization pl  follows gcwa
theorem compactness class pl  hence  gcwa thm conp complete 
  

ficadoli  donini  liberatore    schaerf

    default logic
subsection present results default logic  two variants  credulous
skeptical   details two main variants default logic  refer
reader paper kautz selman         notice model compactness
applicable skeptical default logic 
theorem    problem model checking skeptical default logic k p  complete 
thus skeptical default logic model p  complete 
proof  proof membership straightforward  since model checking skeptical
default logic p   liberatore   schaerf         follows k p   
proof k p   hardness similar proof p   hardness  liberatore   schaerf 
       reduction problem  qbf  let h  instance  qbf 
  xy f represents valid  qbf formula  string 
let n size formula f   implies variables formula
n  let                k   set clauses three literals alphabet 
number clauses three literals alphabet n variables less o n    
thus bounded polynomial n 
prove xy f valid model extension hw  di 

 

w

 

    ci



ci

  ci
 
ci

   ci   f  







    w  w xi     w  w xi  

 

w xi

xi x

w xi



 

 w

v

ci

w



set  ci     k  set new variables  one to one elements  
note w depends size n f   depends f   result 
nucomp reduction 
prove formula valid model extension
default theory hw  di  similar already published proof  liberatore  
schaerf         consider evaluation c  variables  ci   evaluation x 
variables x  let d  following set defaults 
 

 

    ci     ci

ci c 

ci

ci  c 

ci



    w  w xi  

w xi

xi x 

 

xi x 



  w  w xi  
w xi



set defaults chosen set r consequences corresponds
sets c  x    namely  have 
ci c  iff r    ci

ci   c  iff r    ci

xi x  iff r    w xi

xi   x  iff r    w xi
  

 

fispace efficiency propositional knowledge representation formalisms

now  prove consequences set defaults extension
default theory qbf formula valid  since defaults semi normal 
prove that 
   set consequences d  consistent 
   default applicable  is  default whose precondition
consistent r 
consistency r follows construction  assigning ci true ci c    etc  
obtain model r 
 ci
prove default applicable  ci c    default c

 ci
applicable  vice versa  ci c    ci applicable  moreover  none

i 
  applicable xi   x    case w xi r  thus
defaults  w wx
wxi
w would follow  while w justification default   similar statement holds
 w wxi  
xi x   
wxi

v

 w

ci


result  applicable default may last one 
 recall
w
f negated   default applicable if  given evaluation ci
xi s  set clauses satisfiable  amount say  extension
last default applicable qbf formula valid  now 
last default applicable  model extension w
consequence last default w       converse holds  last default
applicable model default theory 
result  qbf valid model given default theory 

theorem    inference problem skeptical default logic k p  complete  thus skeptical default logic thm  p complete 
proof  since inference skeptical default logic p    k p    k p   hardness
comes simple reduction circumscription  indeed  circumscription
formula equivalent conjunction extensions default theory ht  di 
 etherington        
d 

    xi

xi

result  circ t      q q implied ht  di skeptical semantics  since ht  di depends  and q  nucomp reduction  since
inference circumscription k  p  complete  see theorem      follows skeptical
default logic k  p  hard 
theorem    inference problem credulous default logic k p  complete  thus
credulous default logic thm p  complete 

  

ficadoli  donini  liberatore    schaerf

proof  proof similar proof model checking skeptical default logic 
indeed  problems k p  complete  since problem p    proved gottlob
        k p    thus  prove hard class 
prove  qbf problem reduced problem verifying whether
formula implied extensions default theory  that is  inference credulous
default logic  
namely  formula xy f valid q derived extension
default theory hd  w i  w defined follows   set
clauses three literals alphabet f   c set new variables  one to one
  
w

 

 

    ci

ci

ci c

q  

 

f

ci

  ci
 
ci

 

 f





    xi

xi x

xi

  xi
 
xi





 

v

 

ci c ci

w

   

 

ci w

informally  proof goes follows  truth evaluation variables c
x set defaults justified consistent  simple necessary
sufficient condition consequences set defaults extension
following  if  evaluation  formula


 



ci  true

valid  last default applicable  thus extension contains w  converse
holds  formula valid evaluation  variable w
extension 
result  exists extension q holds exists
extension ci true f   w holds 
variables ci given value  formula equivalent f   result 
extension exists exists truth evaluation variables x
f valid 
    belief revision
many formalisms belief revision proposed literature  focus
two them  widtio  when doubt throw out  sbr  skeptical belief revision  
let k set propositional formulae  representing agents knowledge world 
new formula added k  problem possible inconsistency k
arises  first step define set sets formulae w  k  a  following
way 
w  k  a     k   k   maximal consistent subset k  a  containing  
  

fispace efficiency propositional knowledge representation formalisms

set formulae k   w  k  a  maximal choice formulae k
consistent and  therefore  may retain incorporating a  definition
set leads two different revision operators  sbr widtio 
sbr skeptical belief revision  fagin  ullman    vardi        ginsberg         revised
 
theory defined set theories  k    k     k   w  k  a    inference
revised theory defined inference theories 
k  sbr q iff

k   w  k  a    k     q

model semantics defined as 
  sbr k iff

exists k   w  k  a     k  

widtio doubt throw  winslett         simpler  but somewhat
drastical  approach so called widtio  retain formulae k
belong sets w  k  a   thus  inference defined as 
k  w idt io q iff



w  k  a    q

model semantics formalism defined as 
  w idt io k

iff

  

 

w  k  a 

results model compactness shown liberatore schaerf        
recall them 
theorem     liberatore   schaerf        theorem     problem model checking widtio k p  thus widtio model p 
theorem     liberatore   schaerf        theorem    problem model checking skeptical belief revision k conp complete  thus skeptical belief revision
model conp complete 
results theorem compactness quite simple provide proofs 
theorem    problem inference widtio k conp complete  thus widtio
thm conp complete 
proof  membership class thm conp immediately follows definition  fact 
rewrite k propositional formula computing set w  k  a 
constructing intersection  construction intersection size less equal
size k a  consequence  preprocessing  deciding whether formula q
follows k problem conp  hardness follows obvious fact pl
reduced widtio pl thm conp complete  see theorem    
theorem    problem inference skeptical belief revision k p   complete 
thus skeptical belief revision thm p   complete 
  

ficadoli  donini  liberatore    schaerf

propositional
logic
widtio
skeptical
belief revision
circumscription
gcwa

skeptical
default reasoning
credulous
default reasoning
stable model
semantics

time complexity
p

p   complete
 liberatore   schaerf       
conp complete
 liberatore   schaerf       
conp complete
 cadoli       
conp hard 
p   log n 
 eiter   gottlob       
p   complete
 liberatore   schaerf       
n a

space efficiency
model p

model p
th    
model conp complete
th    
model conp complete
th   
model p
th    

p


model p


model p   complete
th    
n a

table    complexity model checking space efficiency model representations
proof  membership follows complexity results eiter gottlob        
show deciding whether k  sbr q p   complete problem  hardness
follows easily theorem     fact    sbr k iff k   sbr f orm m   
f orm m   formula represents model   consequence  model checking
reduced complement inference  thus inference k p   complete 
    discussion
tables     summarize results space efficiency pkr formalisms
proved  a dash denotes folklore result  
first all  notice space efficiency always related time complexity 
example  compare detail widtio circumscription  table follows
model checking harder widtio circumscription  inference
complexity cases  nevertheless  since circumscription thm p   complete
widtio thm conp complete  and thus thm p     exists poly size reduction
widtio circumscription satisfying theorem preservation  converse
hold  since circumscription thm  p  complete widtio thm conp  unless polynomial hierarchy collapse theorem preserving poly size reduction
former formalism latter  hence  circumscription compact formalism
widtio represent theorems  analogous considerations done models 
intuitively  due fact widtio model checking inference
require lot work revised knowledge base alonecomputing intersection

  

fispace efficiency propositional knowledge representation formalisms

propositional
logic
widtio
skeptical
belief revision
circumscription
gcwa
skeptical
default reasoning
credulous
default reasoning
stable model
semantics

time complexity
conp complete
 cook       
p   complete
 eiter   gottlob           nebel       
p   complete
 eiter   gottlob       
p   complete
 eiter   gottlob       
p   complete
 eiter   gottlob           nebel       
p   complete
 gottlob       
p   complete
 gottlob       
conp complete
 marek   truszczynski       

space efficiency
thm conp complete
 cadoli et al        
thm conp complete
th    
thm p   complete
th    
thm p   complete
th    
thm conp complete
th    
thm p   complete
th    
thm p   complete
th    
thm conp complete
th   

table    complexity inference space efficiency theorem representations
elements w  k  a   done  one left model checking inference
pl  hence  widtio space efficiency pl  circumscription 
figures     contain information tables      highlight existing reductions  figure contains two diagrams  left one showing existence
polynomial time reductions among formalisms  right one showing existence polysize reductions  arrow formalism another denotes former
reduced latter one  use bidirectional arrow denote arrows directions
dashed box enclose formalisms reduced one another  note
formalisms appropriate representing sets models  others perform
better sets formulae  interesting relation exists skeptical default reasoning
circumscription  model preserving poly size reduction circumscription skeptical default reasoning  gogic et al          theorem preserving poly size
reduction exists  shown theorem    

   related work conclusions
idea comparing compactness kr formalisms representing information
novel ai  well known first order circumscription represented secondorder logic  schlipf         kolaitis papadimitriou        discuss several computational
aspects circumscription  among many interesting results show reduction
restricted form first order circumscription first order logic  proposed reduction
increase size original formula exponential factor  left open
problem show whether increase intrinsic  different compactness
properties two formalisms  exists space efficient reduction 

  

ficadoli  donini  liberatore    schaerf

  skeptical

widtio

default

skeptical default

 

 

gcwa
 

sbr   circumscription

sbr   circumscription

 

 

 

pl   stable model

pl   widtio

a  time complexity

  gcwa   stable
model

b  space efficiency

figure    complexity model checking vs  space efficiency model representation

widtio   gcwa

 

 
skeptical
sbr   circum   default



pl  

credulous
default



sbr   circum 



skeptical
default

ak


stable
model

credulous
default






stable
pl  widtio   gcwa   model

a  time complexity

b  space efficiency

figure    complexity inference vs  space efficiency theorem representation

  

fispace efficiency propositional knowledge representation formalisms

first order language used  results compactness existence reductions
reported schlipf        
khardon roth               kautz  kearns selman        propose modelbased representations kb propositional logic  compare formula based
representations  although results significant comparing representations within
pl  refer formalism  hence applicable comparison different pkr formalisms  comment applies idea representing
kb efficient basis moses tennenholz         since refers one
pkr formalism  namely  pl 
active area research studies connections various non monotonic logics 
particular  several papers discussing existence translations polynomial time satisfy intuitive requirements modularity faithfulness 
janhunen         improving results imielinski        gottlob         shows
default logic expressive  among non monotonic logics examined  since
circumscription autoepistemic logic modularly faithfully embedded default logic  way around  results interest help
fully understand relation among many knowledge representation formalisms 
directly related ours  fact  allow translations general
polynomial time  papers consider translations use
polynomial time satisfy additional requirements 
first result compactness representations propositional language presented  best knowledge  kautz selman         show that  unless
collapse polynomial hierarchy  size smallest representation
least horn upper bound propositional theory superpolynomial size
original theory  results presented different form comprehensive paper  selman   kautz         technique used proof
used us researchers prove several results relative complexity
propositional knowledge representation formalisms  cadoli et al                     gogic
et al         
recent paper  cadoli et al       b  introduced new complexity measure  i e  
compilability  paper shown measure inherently related
succinctness pkr formalisms  analyzed pkr formalisms respect two succinctness measures  succinctness representing sets models succinctness representing
sets theorems 
main advantage framework machinery necessary formal way
talking relative ability pkr formalisms compactly represent information 
particular  able formalize intuition specific pkr formalism provides
one compact ways represent models theorems among pkr formalisms
specific class 
opinion  proposed framework improves state art two different
aspects 
   proofs presented previous papers compare pairs pkr formalisms  example propositional circumscription propositional logic  cadoli
et al          results allow precise classification level
  

ficadoli  donini  liberatore    schaerf

compactness considered formalisms  rephrasing adapting results
framework allows us infer circumscription model conp complete
thm p   complete  consequence  space efficient
widtio belief revision formalism representing sets models sets theorems 
   using proposed framework possible find criteria adapting existent
polynomial reductions showing c hardness reductions show model c thmc hardness  c class polynomial hierarchy  liberatore        

acknowledgments
paper extended revised version paper authors appeared
proceedings fifth international conference principles knowledge representation reasoning  kr     cadoli  donini  liberatore    schaerf      a   partial
supported given asi  italian space agency  cnr  national research
council italy  

references
ben eliyahu  r     dechter  r          default logic  propositional logic constraints 
proceedings ninth national conference artificial intelligence  aaai    
pp         
ben eliyahu  r     dechter  r          propositional semantics disjunctive logic programs  annals mathematics artificial intelligence           
boppana  r     sipser  m          complexity finite functions  van leeuwen  j 
 ed    handbook theoretical computer science  vol  a  chap      elsevier science
publishers  north holland   amsterdam 
cadoli  m          complexity model checking circumscriptive formulae  information processing letters             
cadoli  m   donini  f   liberatore  p     schaerf  m       a   comparing space efficiency
propositional knowledge representation formalisms  proceedings fifth international conference principles knowledge representation reasoning
 kr     pp         
cadoli  m   donini  f  m   liberatore  p     schaerf  m       b   feasibility unfeasibility off line processing  proceedings fourth israeli symposium theory
computing systems  istcs     pp          ieee computer society press 
url   ftp   ftp dis uniroma  it pub ai papers cado etal    ps gz 
cadoli  m   donini  f  m   liberatore  p     schaerf  m         
preprocessing intractable problems 
tech  rep  dis        dipartimento di
url  
informatica e sistemistica  universita di roma la sapienza 
http   ftp dis uniroma  it pub ai papers cado etal    d revised ps gz 
  

fispace efficiency propositional knowledge representation formalisms

cadoli  m   donini  f  m   liberatore  p     schaerf  m          size revised
knowledge base  artificial intelligence                
cadoli  m   donini  f  m     schaerf  m          compact representations propositional circumscription  proceedings twelfth symposium theoretical aspects computer science  stacs     pp          extended version rap      
dis  univ  roma la sapienza  july      
cadoli  m   donini  f  m     schaerf  m          intractability non monotonic reasoning
real drawback   artificial intelligence                  
cadoli  m   donini  f  m   schaerf  m     silvestri  r          compact representations
propositional circumscription  theoretical computer science              
cook  s  a          complexity theorem proving procedures  proceedings
third acm symposium theory computing  stoc     pp         
eiter  t     gottlob  g          complexity propositional knowledge base revision 
updates counterfactuals  artificial intelligence             
eiter  t     gottlob  g          propositional circumscription extended closed world
reasoning  p  complete  theoretical computer science              
etherington  d  v          reasoning incomplete information  morgan kaufmann 
los altos  los altos  ca 
fagin  r   ullman  j  d     vardi  m  y          semantics updates databases 
proceedings second acm sigact sigmod symposium principles
database systems  pods     pp         
garey  m  r     johnson  d  s          computers intractability  guide
theory np completeness  w h  freeman company  san francisco  ca 
gelfond  m     lifschitz  v          stable model semantics logic programming 
proceedings fifth logic programming symposium  pp            mit
press 
gelfond  m   przymusinska  h     przymusinsky  t          relationship
circumscription negation failure  artificial intelligence           
ginsberg  m  l          conterfactuals  artificial intelligence           
gogic  g   kautz  h  a   papadimitriou  c     selman  b          comparative linguistics knowledge representation  proceedings fourteenth international
joint conference artificial intelligence  ijcai     pp         
gottlob  g          complexity results nonmonotonic logics  journal logic
computation            
gottlob  g          translating default logic standard autoepistemic logic  journal
acm             
  

ficadoli  donini  liberatore    schaerf

imielinski  t          results translating defaults circumscription  artificial intelligence             
janhunen  t          intertranslatability autoepistemic  default priority
logics  parallel circumscription  proceedings sixth european workshop
logics artificial intelligence  jelia     no       lecture notes artificial
intelligence  pp          springer verlag 
johnson  d  s          catalog complexity classes  van leeuwen  j   ed    handbook
theoretical computer science  vol  a  chap     elsevier science publishers  northholland   amsterdam 
karp  r  m     lipton  r  j          connections non uniform uniform
complexity classes  proceedings twelfth acm symposium theory
computing  stoc     pp         
kautz  h  a   kearns  m  j     selman  b          horn approximations empirical data 
artificial intelligence             
kautz  h  a     selman  b          hard problems simple default logics  artificial
intelligence             
kautz  h  a     selman  b          forming concepts fast inference  proceedings
tenth national conference artificial intelligence  aaai     pp         
khardon  r     roth  d          reasoning models  artificial intelligence         
    
khardon  r     roth  d          defaults relevance model based reasoning  artificial
intelligence             
kobler  j     watanabe  o          new collapse consequences np small circuits 
siam journal computing                 
kolaitis  p  g     papadimitriou  c  h          computational aspects circumscription  journal acm              
liberatore  p          compact representation revision horn clauses  yao  x   ed   
proceedings eighth australian joint artificial intelligence conference  ai    
pp          world scientific 
liberatore  p          compilation intractable problems application artificial
intelligence 
ph d 
thesis 
dipartimento di informatica e sistemistica  universita di roma la sapienza  url  
ftp   ftp dis uniroma  it pub ai papers libe    c ps gz 
liberatore  p     schaerf  m          complexity model checking belief revision update  proceedings thirteenth national conference artificial
intelligence  aaai     pp         

  

fispace efficiency propositional knowledge representation formalisms

liberatore  p     schaerf  m          complexity model checking propositional
default logics  proceedings thirteenth european conference artificial
intelligence  ecai     pp       
liberatore  p     schaerf  m          compactness belief revision update operators  tech  rep   dipartimento di informatica e sistemistica  universita di roma la
sapienza 
marek  w     truszczynski  m          autoepistemic logic  journal acm         
       
mccarthy  j          circumscription   form non monotonic reasoning  artificial
intelligence           
minker  j          indefinite databases closed world assumption  proceedings
sixth international conference automated deduction  cade     pp     
    
moses  y     tennenholtz  m          off line reasoning on line efficiency  knowledge
bases  artificial intelligence             
nebel  b          hard revise belief base   dubois  d     prade  h   eds   
belief change   handbook defeasible reasoning uncertainty management systems  vol     kluwer academic 
reiter  r          logic default reasoning  artificial intelligence            
schlipf  j  s          decidability definability circumscription  annals pure
applied logic             
schlipf  j  s          survey complexity undecidability results logic programming  annals mathematics artificial intelligence             
selman  b     kautz  h  a          knowledge compilation theory approximation 
journal acm             
stockmeyer  l  j          polynomial time hierarchy  theoretical computer science 
       
winslett  m          sometimes updates circumscription  proceedings eleventh
international joint conference artificial intelligence  ijcai     pp         
winslett  m          updating logical databases  cambridge university press 
yap  c  k          consequences non uniform conditions uniform classes  theoretical computer science             

  


