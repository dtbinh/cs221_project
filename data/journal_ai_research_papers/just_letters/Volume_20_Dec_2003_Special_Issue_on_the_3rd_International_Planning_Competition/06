journal artificial intelligence research                  

submitted       published      

commentary
case durative actions  commentary pddl   
david e  smith
nasa ames research center
computational sciences division  mail stop       
moffett field  ca        u s a 

desmith arc nasa gov

abstract
addition durative actions pddl    sparked controversy  fox long
argued actions considered instantaneous  start stop processes 
ultimately  limited notion durative actions incorporated language  argue
notion still impoverished  underlying philosophical position
regarding durative actions shorthand start action  process  stop action
ignores realities modelling execution complex systems 

   introduction
pddl    introduces limited notion time classical strips planning framework 
particular  introduces notion durative actions  is  actions take time  however  notion durative action rather limited  somewhat begrudging  reflects
underlying philosophical position fox long actions really instantaneous 
initiate terminate continuous processes  according view  durative actions
seen shorthand start action  process  stop action  result  durative
actions lack important features  namely ability require  pre conditions hold
specified intervals  effects take place arbitrary time points within
action  fox long argued features captured breaking durative action series smaller actions effects beginning end 
preconditions beginning  end  entire action  however 
representation exceptionally cumbersome  ignores fact agent may
separate control actions  addition  representation forces planner
additional work order connect actions 

   example
illustrate problems pddl    notion durative action  consider simple
example spacecraft must turn order point instrument particular target 
order turn spacecraft  thrusters reaction control system  rcs  fired order
supply angular velocity  spacecraft coasts pointing correct direction  or nearly so   rcs thrusters fire order stop rotation  firing
thrusters consumes propellant  requires controller dedicated task 
addition  thrusters firing  vibration spacecraft  certain
operations cannot performed  thruster firings relatively quick  coasting
phase not  general  turning large spacecraft slow process may take several
minutes  reason speedy turns require greater acceleration deceleration 
therefore consume propellant 

fis mith

first question need answer is  best way model complex operation  could model turning operation initial action start spacecraft turning  another action stop turn  interspersed processes model
craft between  level detail  seems reasonable model
physics  however  may well turning guidance built primitive operations spacecraft  possibility starting stopping turns
independently  could model operation consisting instantaneous action
start turn  followed finite process terminates turn complete 
bother  fact is  interested effects process  initiated
starting turn  reasons  seems natural proper regard durative action  effects take place throughout action 
lets suppose want model operation durative action pddl    
could say something like 
  durative action turn
 parameters   current target  new target   target 
 duration
    duration     angle  current target  new target  
 turn rate   
 condition
 and  at start  pointing  current target  
 at start      propellant  propellant required  
 at start  not  controller in use    
 effect
 and  at start  not  pointing  current target   
 at start  decrease  propellant  propellant required  
 at start  controller in use  
 at start  vibration  
 at end  not  controller in use   
 at end  not  vibration   
 at end  pointing  new target    

however  model action quite conservative  ties controller entire
turn operation  specifies vibration present entire operation  addition 
consumes required propellant beginning operation  reality  rcs
firing beginning end turn  result  controller needed two periods  vibration present two periods  propellant
consumed two periods  might matter coast phase relatively quick  however  indicated earlier  turning large spacecraft take several
minutes  unfortunately  pddl    rather limited notion durative action cannot
specify action conditions effects times start end action 

   decomposition sub actions
fox long pointed out  possible model durative action intermediate conditions effects breaking sequence sub actions  turn
action would need three sub actions illustrated below  start turn action  coast
action  stop turn action  together turn action bind together 

   note assumes precomputed provided angles possible pairs targets 
want this  must provide  vector  direction target planner would need
ability vector arithmetic trigonometry within formulas 
   personal communication 

   

fit c ase



urative ctions   c ommentary pddl   

  durative action turn
 parameters   current target  new target   target 
 duration
    duration     angle  current target  new target 
 turn rate   
 condition
 and  at start  pointing  current target  
 at start      propellant  propellant required  
 at end  finished   
 effect
 and  at start  not  pointing  current target   
 at start  turning  
 at start  enabled start turn  
 at end  not  turning   
 at end  not  finished turning   
 at end  pointing  new target    
  durative action start turn
 parameters   
 duration
    duration  start turn duration  
 condition
 and  at start  not  controller in use   
 at start      propellant     propellant required     
 over  turning  
 over  enabled start turn   
 effect
 and  at start  decrease  propellant     propellant required     
 at start  controller in use  
 at start  vibration  
 at end  not  controller in use   
 at end  not  vibration   
 at end  not  enabled start turn   
 at end  enabled coast    
  durative action coast
 parameters   
 duration
    duration  coast duration  
 condition
 and  over  turning  
 over  enabled coast   
 effect
 and  at end  not  enabled coast   
 at end  enabled stop turn    
  durative action stop turn
 parameters   
 duration
    duration  rcs duration  
 condition
 and  at start  not  controller in use   
 at start      propellant     propellant required     
 over  turning  
 over  enabled stop turn   
 effect
 and  at start  decrease  propellant     propellant required     
 at start  controller in use  
 at start  vibration  
 at end  not  controller in use   
 at end  not  vibration   
 at end  not  enabled stop turn   
 at start  finished    

figure   shows graphically actions tied together  goal pointing
particular target  turn action required  turn action end precondition
 finished   satisfied adding stop turn action   stop turn
   

fis mith

condition  enabled stop turn  satisfied end effect coast action 
likewise  coast action condition  enabled coast  satisfied end effect start turn action  start turn action condition
 enabled start turn  satisfied start effect turn action  result 
turn action forces three sub actions plan  sub action forces predecessor sub actions turn action plan  three sub actions
condition  turning  satisfied turn action  result  way
consistently achieved three sub actions packed sequentially
turn action 
pointing  current 
turning
enabled start turn

pointing  target 
turning
finished

turn

pointing  current 

finished

enabled start turn
enabled coast

start turn
turning
enabled start turn

coast
turning
enabled coast

enabled coast
enabled stop turn

finished

enabled stop turn

stop turn
turning
enabled stop turn

figure    sub actions turn operation  start  end  over all conditions
shown action  interconnecting start end effects shown
action  simplicity  omitted effects concerning vibration  controller
use  propellant usage
two additional subtleties representation  first that  although
three sub actions occur turn action  obvious requirement
occur turn action  suppose tried place start turn
action previous turn action  previous turn action would three subactions  wayward start turn action would conflict sub actions  thus 
order make work  would push three sub actions earlier turn
action  on  realizing cannot work requires difficult induction argument 
seems unlikely existing planner could actually infer this  trial
error  result  process generating plans involving actions would incur significant computational overhead  engage needless search 
second subtlety overlooked decomposition computing
durations sub actions bit tricky  reasonable assume start
stop turn actions fixed duration  duration coast action depends current
   turns  finished  effect stop turn must start effect rather end effect  reason
occur end effect  stop turn action would need complete prior end turn
action  since  finished  effect mutex  not finished  end effect turn action  despite
asymmetry representation  stop turn still forced occur wholly within turn action
overall condition  turning  

   

fit c ase



urative ctions   c ommentary pddl   

target orientations spacecraft  fact  duration coast action must
duration turn action minus durations start stop turn actions 
way introduce additional numeric turn duration function set
turn action  used compute duration coast action 
process decomposing action sub actions complex convoluted  all  htn planning paradigm done time  reason
generative planning adopted view  better worse  one allowed
directly specify action used actions connected other 
result  order force sub actions abut fit within turn action  must
tricky things  one might argue need htn capability order model
actions  indeed  would certainly make things easier  however  another way 

   richer durative actions
one approach dealing modelling problem admit richer language
modelling durative actions  make convenient model actions turn action 
need able specify conditions must hold various points intervals within
action  effects take place various points intervals within action 
many possible ways one could express conditions effects  one
straw man possibility 
  durative action turn
 parameters   current target  new target   target 
 duration
    duration     angle  current target  new target   turn rate   
 condition
 and  at start  pointing  current target  
 at start      propellant  propellant required  
 at start  not  controller in use   
 at    end rcs duration       propellant     propellant required     
 at    end rcs duration   not  controller in use    
 effect
 and  at start  not  pointing  current target   
 at start  decrease  propellant     propellant required     
 over  start    start rcs duration    controller in use  
 over  start    start rcs duration    vibration  
 at    end rcs duration   decrease  propellant     propellant required     
 over     end rcs duration  end   controller in use  
 over     end rcs duration  end   vibration  
 at end  pointing  new target    

need explicitly construct actions starting stopping turn 
coasting  reason  need worry durations connecting
sub actions  instead  simply specified effects appropriate times
turn action  note specified vibration controller use interval effects  seems
less cumbersome specifying two separate effects stating controller use
beginning interval  longer use end  however 
fundamental difference two encodings  encoding above  possibility another independent action could somehow make controller available
interval use  bedrax weiss et  al         argued introduction
explicit notion resource pddl language  notion could
simplify encoding even further  specifying controller reusable
resource required turn action appropriate intervals  vibration  or stability  could treated resource  although somewhat less intuitive so 
   

fis mith

one final issue avoided notion continuous change  spacecraft
example  certainly continuous change going on  propellant burned instantaneously  orientation spacecraft changes continuously  question is 
need model this  certainly domains necessary reason continuous change  fox long point out  concurrent actions well simultaneous consumption production resources  may necessary reason
resources change course actions  example  mars rover receives
energy solar panels time driving place place  since battery minimum maximum capacity  one cannot model easily using discrete
consumption production effects  however  consumption production happen
simultaneously  one model continuous change taking place start end
action  sufficient spacecraft example since actions increase
propellant  one cannot perform two simultaneous actions affect spacecrafts
orientation 

   conclusion
durative actions pddl    limited  expressing complex durative actions
decomposition sub actions difficult clumsy  time  clear
modelling actions turning spacecraft terms processes either necessary useful  particularly possibility process deliberately interrupted 
domains this  richer  expressive notion durative action seems right
modelling tool  note would argue modelling processes completely
unnecessary  however  many practical planning applications overkill  results
complex representation planning process necessary 
cheating model complex processes durative actions  course is  modelling cheating  real world physics  nothing instantaneous indivisible 
cheating model anything instantaneous action  yet  usually content model
action turning light switch instantaneous indivisible  even though
take small amount time  complex processes behind it  durative action
different simply choosing model details process structure behind
action  even though may necessary model fact action takes time 
effects take place different times action  many practical applications  durative actions essential modelling tool  deserve richer treatment
provided pddl    

references
bedrax weiss  t   mcgann  c    ramakrishnan  s         formalizing resources planning  proceedings icaps    workshop pddl 
fox  m    long  d         pddl   modeling continuous time dependent effects  proceedings  rd international nasa workshop planning scheduling space 
fox  m    long  d         pddl     extension pddl expressing temporal planning domains  journal artificial intelligence research  issue 

   


