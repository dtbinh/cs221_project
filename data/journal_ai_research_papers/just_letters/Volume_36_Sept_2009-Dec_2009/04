journal artificial intelligence research                  

submitted        published      

relaxed survey propagation
weighted maximum satisfiability problem
hai leong chieu

chaileon dso org sg

dso national laboratories 
   science park drive  singapore       

wee sun lee

leews comp nus edu sg

department computer science  school computing 
national university singapore  singapore       

abstract
survey propagation  sp  algorithm shown work well large instances
random   sat problem near phase transition  shown sp estimates
marginals covers represent clusters solutions  sp y algorithm generalizes
sp work maximum satisfiability  max sat  problem  cover interpretation
sp generalize sp y  paper  formulate relaxed survey propagation  rsp  algorithm  extends sp algorithm apply weighted max sat
problem  show rsp interpretation estimating marginals covers
violating set clauses minimal weight  naturally generalizes cover interpretation sp  empirically  show rsp outperforms sp y state of the art
max sat solvers random max sat instances  rsp outperforms state of the art
weighted max sat solvers random weighted max sat instances 

   introduction
  sat problem archetypical np complete problem  difficulty solving
random   sat instances shown related clause variable ratio 
  m n   number clauses n number variables  phase
transition occurs critical value c        random   sat instances   c
generally satisfiable  instances   c not  instances close phase
transition generally hard solve using local search algorithms  mezard   zecchina 
      braunstein  mezard    zecchina        
survey propagation  sp  algorithm invented statistical physics community using approaches used analyzing phase transitions spin glasses  mezard  
zecchina         sp algorithm surprised computer scientists ability solve
efficiently extremely large difficult boolean satisfiability  sat  instances phase
transition region  algorithm extended sp y algorithm handle
maximum satisfiability  max sat  problem  battaglia  kolar    zecchina        
progress made understanding sp algorithm works well  braunstein
zecchina        first showed sp viewed belief propagation  bp 
algorithm  pearl        related factor graph clusters solutions represented
covers non zero probability  known whether similar interpretation
given sp y algorithm  paper  extend sp algorithm handle weighted
c
    
ai access foundation  rights reserved 

fichieu   lee

max sat instances way preserves cover interpretation  call new
algorithm relaxed survey propagation  rsp  algorithm  empirically  show
rsp outperforms sp y state of the art solvers random max sat instances 
outperforms state of the art solvers benchmark max sat instances 
random weighted max sat instances  outperforms state of the art weighted max sat
solvers 
rest paper organized follows  section    describe background
literature mathematical notations necessary understanding paper  includes
brief review definition joint probability distributions factor graphs 
introduction sat  max sat weighted max sat problem 
formulated inference problems probability distribution factor graph 
section    give review bp algorithm  pearl         plays central role
paper  section    give description sp  braunstein et al        
sp y  battaglia et al         algorithm  explaining warning propagation algorithms 
section    define joint distribution extended factor graph given weighted
max sat instance  factor graph generalizes factor graph defined maneva 
mossel wainwright        chieu lee         show that  solving
sat instances  running bp algorithm factor graph equivalent running
sp algorithm derived braunstein  mezard zecchina         weighted
max sat problem  gives rise new algorithm call relaxed survey
propagation  rsp  algorithm  section    show empirically rsp outperforms
algorithms solving hard max sat weighted max sat instances 

   background
sp first derived principles statistical physics  understood
bp algorithm  estimating marginals joint distribution defined factor graph 
section  provide background material joint distributions defined
factor graphs  define boolean satisfiability  sat  problem  maximum
satisfiability  max sat  problem  weighted maximum satisfiability  weighted maxsat  problem  show problems solved solving inference problem
joint distributions defined factor graphs  review definition derivation
bp algorithm follow next section  describe sp algorithm
section   
    notations
first  define notations concepts relevant inference problems
factor graphs  factor graphs provide framework reasoning manipulating joint
distribution set variables  general  variables could continuous nature 
paper  limit discrete random variables 
paper  denote random variables using large roman letters  e g   x   
random variables always discrete paper  taking values finite domain  usually 
interested vectors random variables  write letters bold
face  e g   x  y  often index random variables letters i  j  k     write 
example  x    xi  iv   v finite set  subset w v   denote
   

firelaxed survey propagation weighted max sat problem


x 

 
x 

  
x 

x 

figure    simple factor graph p x     x    x       x    x        x    x    
xw    xi  iw   call assignment values variables x configuration 
denote small bold letters  e g  x  often write x represent event
x   x and  probability distribution p  write p x  mean p x   x   similarly 
write x denote event x   x  write p x  denote p x   x  
recurring theme paper defining message passing algorithms joint
distributions factor graphs  kschischang  frey    loeliger         joint distribution
defined product local functions  functions defined small subset variables  
refer local functions factors  index factors  e g    greek
letters  e g      avoiding used symbol clause variable ratio sat
instances   factor   denote v    v subset variables
defined  i e  function defined variables xv      message passing
algorithms  messages vectors real numbers sent factors variables
vice versa  vector message sent variable xi factor denoted
mi   message xi denoted mi  
    joint distributions factor graphs
given large set discrete  random variables x    xi  iv   interested joint
probability distribution p x  variables  set v large  often
interest assume simple decomposition  draw conclusions efficiently
distribution  paper  interested joint probability distribution
decomposed follows
p x   x   

 
 xv     
z f

   

set f indexes set functions    f   function defined
subset variables xv    set x  maps configurations xv    non negative
real numbers  assuming function defined small subset variables
xv      hope efficient inference distribution  despite large number
variables x  constant z normalization constant  ensures
distribution sums one configurations x x 
factor graph  kschischang et al         provides useful graphical representation
illustrating dependencies defined joint probability distribution equation   
factor graph g     v  f    e   bipartite graph two sets nodes  set variable
nodes  v   set factor nodes  f   set edges e factor graph connects
variable nodes factor nodes  hence bipartite nature graph  factor graph
representing joint distribution equation    edge e      i  e
   

fichieu   lee

variable xi parameter factor  i e  v      denote v  i 
set factors depending variable xi   i e 
v  i      f   v    

   

show simple example factor graph figure    small example 
example  v             v                factor graph representation useful
illustrating inference algorithms joint distributions form equation    kschischang et al          section    describe bp algorithm using factor
graph representation 
equation   defines joint distribution product local factors  often useful
represent distribution following exponential form 
p x    exp  

x

 xv       

   

f

equation reparameterization equation     xv        exp   xv      
  ln z  statistical physics  exponential form often written follows 
p x   

 
 
exp 
e x   
z
kb

   

e x  hamiltonian energy function  kb boltzmanns constant 
temperature  simplicity  set kb      equations     equivalent
p
e x    f  xv      
bayesian  belief  networks markov random fields two graphical representations often used describe multi dimensional probability distributions  factor graphs
closely related bayesian networks markov random fields  algorithms
operating factor graphs often directly applicable bayesian networks markov
random fields  refer reader work kschischang et al         comparison
factor graphs  bayesian networks markov random fields 
    inference joint distributions
literature  inference joint distribution refer solving one two problems 
define two problems follows 
problem    map problem   given joint distribution  p x   interested configuration s  highest probability  configurations  x   called maximuma posteriori configurations  map configurations
x   arg max p x 
x

   

joint distribution equation    map configuration minimizes energy
function e x   hence map problem sometimes called energy minimization
problem 

   

firelaxed survey propagation weighted max sat problem

problem    marginal problem   given joint distribution  p x   central interest
calculation estimation probabilities events involving single variable xi   xi  
refer probabilities marginal probabilities 
x

pi  xi    

p x  

   

x xi

p

notation x xi means summing configurations x variable xi set
xi   marginals important represent underlying distribution individual
variables 
general  problems solvable reasonable time currently known methods  naive calculation pi  xi   involves summing probabilities configurations
variables x xi   xi   example  factor graph n variables
cardinality q  finding marginal one variables involve summing q n 
configurations  furthermore  np complete problems   sat simply coded
factor graphs  see section         such  map problem general np complete 
marginal problem equivalent model counting   sat   p complete
 cooper         hence  general  expect solve inference problems  exactly  reasonable time  unless problems small  special structures
exploited efficient inference 
central interest paper particular approximate inference method known
 sum product  belief propagation  bp  algorithm  defer discussion
bp algorithm next section  rest section  describe sat 
max sat weighted max sat problems  simply formulated
inference problems joint distribution factor graph 
    sat max sat problem
variable boolean takes values  false  true   paper  follow
conventions statistical physics  boolean variables take values           
corresponding false     corresponding true 
boolean satisfiability  sat  problem given boolean propositional formula
written operators  conjunction    disjunction    negation  
parenthesis  objective sat problem decide whether exists configuration propositional formula satisfied  evaluates true   sat
problem first problem shown np complete stephen cooks seminal paper
      cook        levin        
three operators boolean algebra defined follows  given two propositional
formulas b  or a  b  true either b true  and a  b  true
b true  not a  true false  rest paper  use
standard notations boolean algebra boolean operators  b means or a  b  
b means and a  b   means not a   parenthesis available allow
nested application operators  e g   a b   b c  
conjunctive normal form  cnf  often used standard form writing boolean
formulas  cnf consists conjunction disjunctions literals  literal
either variable negation  example   x  x      x   x    cnf 
   

fichieu   lee

x  x   x  x     x  x    not  boolean formula re written cnf
using de morgans law distributivity law  although practice  may lead
exponential blowup size formula  tseitin transformation often used
instead  tseitin         cnf  boolean formula considered conjunction
set clauses  clause disjunction literals  hence  sat problem
often given  x  c   x vector boolean variables  c set
clauses  clause c satisfied configuration evaluates true
configuration  otherwise  said violated configuration  use greek
letters  e g      indices clauses c  denote v    set variables
clause c  k sat problem sat problem clause c consists
exactly k literals  k sat problem np complete  k    cook        
maximum satisfiability problem  max sat  problem optimization version
sat problem  aim minimize number violated constraints
formula  define simple working example max sat problem use
throughout paper 
example    define instance max sat problem cnf following clauses
     x  x          x  x          x  x          x  x  x          x  x  x       
 x  x     boolean expression representing problem would
 x  x     x  x     x  x     x  x  x     x  x  x     x  x    

   

objective max sat problem would find configuration minimizing
number violated clauses 
      factor graph representation sat instances
sat problem cnf easily represented joint distribution factor
graph  following definition  give possible definition joint distribution
boolean configurations given sat instance  boolean variables take values
        
definition    given instance sat problem   x  c  conjunctive normal form 
x vector n boolean variables  define energy  e x   distribution  p x   configurations sat instance  battaglia et al        
c  c  xv       
e x   

 
     j i xi   
 
iv   

   

x

c  xv      

   

 
exp e x   
z

    



c

p x   

x        n   j i takes values          j i       resp     
contains xi negative  resp  positive  literal  clause satisfied one
variables xi takes value j i   clause satisfied  c  xv           otherwise
c  xv          
   

firelaxed survey propagation weighted max sat problem

 

 

 

x 

 

x 

 

x 

 

figure    factor graph sat instance given example    dotted  resp  solid 
lines joining variable clause means variable negative  resp  positive 
literal clause 

definition  energy function zero satisfying configurations 
equals number violated clauses non satisfying configuration  hence  satisfying
configurations sat instance map configurations factor graph 
section  make definitions useful rest paper 
clause containing variable xi  associated value j i    say
xi satisfies xi   j i   case  clause satisfied regardless values
taken variables  conversely  say xi violates xi satisfy  
case  still possible satisfied variables 
definition    clause c  define u i  resp  s i   value xi        
violates  resp  satisfies  clause   means s i   j i u i    j i  
define following sets
v    i 
v  i 
vs  i 
vu  i 

 
 
 
 

  v  i   s i       
  v  i   s i      
  v  i        s i   s i   
  v  i        s i    s i   

    

definitions  v    i   resp  v  i   set clauses contain xi
positive literal  resp  negative literal   vs  i   resp  vu  i   set clauses containing
xi agrees  resp  disagrees  clause concerning xi   sets useful
define sp message passing algorithms sat instances 
factor graph representing max sat instance given example   shown
figure    example  v                       v                 vs                 
vu                  energy example follows 
 
 
 
e x         x      x           x      x           x      x     
 
 
 
 
 
 
     x        x        x         x      x      x         x      x        
 
 
 

   

fichieu   lee

      related work sat
sat problem well studied computer science  archetypical np complete
problem  common reformulate np complete problems graph coloring
sat problem  prestwich         sat solvers either complete incomplete 
best known complete solver solving sat problem probably davis putnamlogemann loveland  dpll  algorithm  davis   putnam        davis  logemann    loveland         dpll algorithm basic backtracking algorithm runs choosing
literal  assigning truth value it  simplifying formula recursively checking
simplified formula satisfiable  case  original formula satisfiable  otherwise  recursive check done assuming opposite truth value  variants
dpll algorithm chaff  moskewicz   madigan         minisat  een   sorensson 
       rsat  pipatsrisawat   darwiche        among best performers recent sat competitions  berre   simon               solvers satz  li   anbulagan 
      cnfs  dubois   dequen        making progress solving hard
random   sat instances 
solvers participated recent sat competitions complete solvers 
incomplete stochastic solvers show sat instance unsatisfiable 
often able solve larger satisfiable instances complete solvers  incomplete solvers
usually start randomly initialized configuration  different algorithms differ
way flip selected variables move towards solution  one disadvantage
approach hard sat instances  large number variables flipped
move current configuration local minimum  acts local trap  incomplete
solvers differ strategies used move configuration traps  example 
simulated annealing  kirkpatrick  jr     vecchi        allows search move uphill 
controlled temperature parameter  gsat  selman  levesque    mitchell       
walksat  selman  kautz    cohen        two algorithms developed     s
allow randomized moves solution cannot improved locally  two algorithms
differ way choose variables flip  gsat makes change minimizes
number unsatisfied clauses new configuration  walksat selects
variable that  flipped  results previously satisfied clauses becoming unsatisfied 
variants algorithms walksat gsat use various strategies  tabusearch  mcallester  selman    kautz        adapting noise parameter used 
help search local minima  hoos         another class approaches based
applying discrete lagrangian methods sat constrained optimization problem
 shang   wah         lagrange mutlipliers used force lead search
local traps 
sp algorithm  braunstein et al         shown beat best incomplete
solvers solving hard random   sat instances efficiently  sp estimates marginals
variables chooses fix truth value  size instance
reduced removing variables  sp run remaining instance 
iterative process called decimation sp literature  shown empirically sp
rarely makes mistakes decimation  sp solves large   sat instances
hard local search algorithms  recently  braunstein zecchina       
   

firelaxed survey propagation weighted max sat problem

shown modifying bp sp updates reinforcement term  effectiveness
algorithms solvers improved 
    weighted max sat problem
weighted max sat problem generalization max sat problem 
clause assigned weight  define instance weighted max sat problem
follows 
definition    weighted max sat instance  x  c  w  cnf consists x  vector
n variables taking values          c  set clauses  w  set weights
clause c  define energy weighted max sat problem
e x   

w
     j i xi   
 
c iv   
x



    

x        n   j i takes values          w weight clause
  total energy  e x   configuration x equals total weight violated clauses 
similarly sat  complete incomplete solvers weighted maxsat problem  complete weighted max sat solvers involve branch bound techniques
calculating bounds cost function  larrosa heras        introduced framework
integrated branch bound techniques max dpll algorithm solving
max sat problem  incomplete solvers generally employ heuristics similar
used sat problems  example incomplete method min conflicts hillclimbing random walks algorithm  minton  philips  johnston    laird         many
sat solvers walksat extended solve weighted max sat problems 
weights used criterion selection variables flip 
working example paper  define following instance weighted
max sat problem 
example    define set weighted max sat clauses following table 

id
 
 
 
 
 
 

clause
weight
x  x 
 
x  x 
 
x  x 
 
x  x  x 
 
x  x  x 
 
x  x 
 
energy

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

weighted max sat example variables clauses max sat
example given example    table  show clauses satisfied  a tick 
violated  a cross    possible configurations   variables  first
   

fichieu   lee

row  symbol corresponds value      corresponds     example 
string   corresponds configuration  x    x    x                  last row
table shows energy configuration column 
factor graph weighted max sat example one
max sat example example    differences two examples
clause weights  reflected joint distribution  factor graph 
energy example follows 
 
 
 
e x         x      x           x      x           x      x     
 
 
 
 
 
 
     x        x        x         x      x      x         x      x       
 
 
 
    phase transitions
sp algorithm shown work well   sat instances near phase transition 
instances known hard solve  term phase transition arises
physics community  understand notion hardness optimization
problems  computer scientists physicists studying relationship
computational complexity computer science phase transitions statistical physics 
statistical physics  phenomenon phase transitions refers abrupt changes
one physical properties thermodynamic magnetic systems small
change value variable temperature  computer science 
observed random ensembles instances k sat  sharp
threshold randomly generated problems undergo abrupt change properties 
example  k sat  observed empirically clause variable ratio
changes  randomly generated instances change abruptly satisfiable unsatisfiable
particular value   often denoted c   moreover  instances generated value
close c found extremely hard solve 
computer scientists physicists worked bounding calculating precise value c phase transition   sat occurs  using cavity approach 
physicists claim c        mezard   zecchina         derivation
value c non rigorous  based derivation formulated sp
algorithm  using rigorous mathematical approaches  upper bounds value c
derived using first order methods  example  work kirousis  kranakis 
krizanc  stamatiou         c   sat upper bounded        achlioptas 
naor peres        lower bounded value c using weighted second moments
method  lower bound close upper bounds k sat ensembles large
values k  however  lower bound   sat       rather far conjectured
value        better  algorithmic  lower bound      obtained analyzing
behavior algorithms find sat configurations  kaporis  kirousis    lalas        
physicists shown rigorously using second moment methods approaches c   search space fractures dramatically  many small solution clusters
appearing relatively far apart  mezard  mora    zecchina         clusters
solutions generally defined set connected components solution space 
two adjacent solutions hamming distance    differ one variable   daude 
   

firelaxed survey propagation weighted max sat problem

k

 

m j

m  j
  

mk

mj

j



mi



ml
l

figure    illustration messages bp algorithm 
mezard  mora  zecchina        redefined notion clusters using concept
x satisfiability  sat instance x satisfiable exists two solutions differing
n x variables  n total number variables  showed near phase
transition  x goes around    small values  without going phase
intermediate values  clustering phenomenon explains instances generated
close c extremely hard solve local search algorithm  difficult
local search algorithm move local minimum global minimum 

   belief propagation algorithm
bp algorithm reinvented different fields different names  example 
speech recognition community  bp algorithm known forward backward
procedure  rabiner   juang         tree structured factor graphs  bp algorithm
simply dynamic programming approach applied tree structure  shown
bp calculates marginals variable factor graph  i e  solving problem
    loopy factor graphs  bp algorithm found provide reasonable
approximation solving marginal problem algorithm converges  case 
bp algorithm often called loopy bp algorithm  yedidia  freeman weiss       
shown fixed points loopy bp algorithm correspond stationary
points bethe free energy  hence sensible approximate method estimaing
marginals 
section  first describe bp algorithm dynamic programming
method solving marginal problem  problem    tree structured factor graphs 
briefly describe bp algorithm applied factor graphs loops 
refer reader work yedidia et al         underlying theoretical
justification case 
given factor graph representing distribution p x   bp algorithm involves iteratively passing messages factor nodes f variable nodes v   vice versa 
factor node represents factor   factor joint distribution given
equation    figure    give illustration messages passed
factor nodes variable nodes  greek alphabet  e g  f   square represents
factor  e g    roman alphabet  e g  v   circle represents variable
 e g  xi   
factor variable messages  e g  mi    variable factor messages  e g 
mi   vectors real numbers  length equal cardinality variable xi  
   

fichieu   lee

denote mi  xi   mi  xi   component vector corresponding
value xi   xi  
message update equations follows 


mj  xj    

  v

    

 j  

x

mi  xi    

  j  xj  
 xv     

xv     xi



mj  xj   

    

jv    i

p

xv     xi means summing configurations xv    xi set xi  
tree structured factor graph  message updates scheduled
two parses tree structure  messages converge  messages converge 
beliefs variable node calculated follows 


bj  xj    

mj  xj   

    

v  j 

tree structured graph  normalized beliefs variable equal
marginals 
input  joint distribution p x  defined tree structured factor graph   v  f    e  
variable xi x 
output  exact marginals variable xi  
algorithm  
   organize tree xi root tree 
   start leaves  propagate messages child nodes parent nodes
right root xi equations       
   marginals xi obtained normalized beliefs equation    

figure    bp algorithm calculating marginal single variable  xi  
tree structured factor graph

algorithm calculating exact marginals given variable xi   given
figure    algorithm simply dynamic programming procedure calculating
marginals  pi  xi    organizing sums sums leaves done first 
simple example figure    calculating p   x     sum ordered follows 
p   x     

x

p x 

x   x   x 

   x    x   

x x

 

x 

x 

   

   x    x   

x
x 

    x    x   

firelaxed survey propagation weighted max sat problem

bp algorithm simply carries sum using node x  root
tree structured factor graph figure   
bp algorithm used calculating marginals variables efficiently 
message passing schedule given figure    schedule involves selecting
random variable node root tree  passing messages leaves
root  back leaves  two parses  message updates
required algorithm figure   one variable would performed 
beliefs variables calculated messages  normalized beliefs
variable equal marginals variable 

input  joint distribution p x  defined tree structured factor graph  v  f   
output  exact marginals variables v  
algorithm  
   randomly select variable root 
   upward pass  starting leaves  propagate messages leaves right
tree 
   downward pass  root  propagate messages back leaves 
   calculate beliefs variables given equation    

figure    bp algorithm calculating marginals variables treestructured factor graph

factor graph tree structured  i e  contains loops   message updates
cannot scheduled simple way described algorithm figure    case 
still apply bp iteratively updating messages equations        often
round robin manner factor variable pairs  done messages
converge  i e  messages change iterations   guarantee
messages converge general factor graphs  however  converge 
observed beliefs calculated equation    often good approximation
exact beliefs joint distribution  murphy  weiss    jordan        
applied manner  bp algorithm often called loopy bp algorithm  recently 
yedidia  freeman weiss              shown loopy bp underlying
variational principle  showed fixed points bp algorithm correspond
stationary points bethe free energy  fact serves sense justify
bp algorithm even factor graph operates loops  minimizing
bethe free energy sensible approximation procedure solving marginal problem 
refer reader work yedidia et al         details 
   

fichieu   lee

   survey propagation  sp sp y algorithms
recently  sp algorithm  braunstein et al         shown beat best
incomplete solvers solving hard   sat instances efficiently  sp algorithm first
derived principles statistical physics  explained using cavity approach
 mezard   parisi         first given bp interpretation work braunstein
zecchina         section  define sp sp y algorithms
solving sat max sat problems  using warning propagation interpretation
algorithms 
    sp algorithm sat problem
section        defined joint distribution sat problem  x  c  
energy function configuration equal number violated clauses configuration  factor graph   v  f    e  representing joint distribution  variable
nodes v correspond boolean variables x  factor node f represents
clause c  section  provide intuitive overview sp algorithm
formulated work braunstein et al         
sp algorithm defined message passing algorithm factor graph
  v  f    e   factor f passes single real number  neighboring variable
xi factor graph  real number called survey  according warning
propagation interpretation given work braunstein et al          survey
corresponds probability  warning factor sending variable
xi   intuitively  close    factor warning variable xi
taking value violate clause   close    factor
indifferent value taken xi   clause satisfied
variables v    
first define messages sent variable xj neighboring factor  
function inputs factors containing xj   i e      j     v  j     sp 
message vector three numbers  uj   sj    j   following
interpretations 
uj probability xj warned  by clauses  take value violate
clause  
sj probability xj warned  by clauses  take value satisfy
clause  
 
j probability xj free take value 
defintions  update equations follows 
uj     
sj     



     j   



     j   

  vu  j 

  vs  j 





     j   

  vs  j 

     j   

    
    

  vu  j 

   sp reasons clusters solutions  probability warning section used loosely
sp literature refer fraction clusters warning applies  next section 
define rigorous probability distribution covers rsp algorithm 

   

firelaxed survey propagation weighted max sat problem

 j  



     j   

    

  v  j 

 



uj

jv   i

uj   sj    j

    

equations defined using sets factors vu  j  vs  j  
defined section        event variable xj warned take value
violating    a  warned least one factor   vu  j  take satisfying
value      b  factors vs  j  sending warnings  equation
    probability event  uj   product two terms  first corresponding
event  a  second event  b   definitions sj  j defined
similar manner  equation     final survey simply probability joint
event incoming variables xj violating clause   forcing last variable xi
satisfy  
sp algorithm consists iteratively running update equations
surveys converge  surveys converged  calculate local biases follows 
    
 
j



     j   


v

 j

 



   j   

    

v  j 

v    j 

    
 
j



     j   

 j 


v

   j   

   j   

    

   j 

    

v  j 

wi   
wi  

 
j

    


 
 
j   j   j


j

    


 
 
j   j   j

solve instances sat problem  sp algorithm run converges 
variables highly constrained set preferred values  sat
instance reduced smaller instance  sp run smaller
instance  continues sp fails set variables  case  local
search algorithm walksat run remaining instance  algorithm  called
survey inspired decimation algorithm  braunstein et al          given algorithm
figure   
    sp y algorithm
contrast sp algorithm  sp y algorithms objective solve max sat instances  hence clauses allowed violated  price  sp algorithm
understood special case sp y algorithm  taken infinity  battaglia
et al          sp y  penalty value exp  y  multiplied distribution
violated clause  hence  although message passing algorithm allows violation
clauses  value increases  surveys prefer configurations violate
minimal number clauses 
   

fichieu   lee

input  sat problem  constant k 
output  satisfying configuration  report failure 
algorithm  
   randomly initialize surveys 
   iteratively update surveys using equations       
   sp converge  go step   
   sp converges  calculate wi  wi using equations       
   decimation  sort variables based absolute difference  wi  wi   
set top k variables preferred value  simplify instance
variables removed 
   surveys equal zero   no variables removed step     output
simplified sat instance  otherwise  go back first step smaller
instance 
   run walksat remaining simplified instance  output satisfying
configuration walksat succeeds  otherwise output failure 

figure    survey inspired decimation  sid  algorithm solving sat problem
 braunstein et al        

sp y algorithm still understood message passing algorithm factor
graphs  sp  factor    passes survey    neighboring variable xi  
 
corresponding probability warning  simplify notations  define

 resp 
  probability warning taking value     resp     
 

 
define
   

  practice  since clause warn
j

j

 i
 

either      both  either

equals zero 
    i i     
j i defined definition   
since clauses violated  insufficient simply keep track whether variable
warned value not  necessary keep track many
times variable warned value  know many clauses
 

violated variable take particular value  let hj
 resp  hj
 
 
number times variable xj warned factors       v  j   value
 
    resp      sp y  variable xj forced take value    hj


 
smaller hj   penalty case exp  yhj    notations used
 

work battaglia et al         describing sp y  let hj   hj
hj
 
battaglia et al         defined sp y message passing equations calculate
probability distribution hj   based input surveys 

    j     v  j        j     j          v  j     j   
   

    

firelaxed survey propagation weighted max sat problem

 v  j   refers cardinality set v  j   unnormalized distributions
pej  h  calculated follows 
   

pej  h        h        h         h           
     v  j      

  

   

pej  h      pej  h 
   

   pej  h    exp   y h  
   

  pej  h      exp   y h   
  v  j    

pej  h    pej

 h  

    
    

 h      h      zero otherwise   h      h    zero otherwise 
equations take account neighbor j excluding      
   v  j     penalties exp  y  multiplied every time value hj decreases
absolute value  new neighbor xj     added  end procedure 
 

equivalent multiplying messages factor exp  ymin hj
  hj
   
pej  h  normalized pj  h  computing pej  h  possible
values h   v  j         v  j       message updates surveys follows 
 v  j   
 
wj
 

x

pj  h  

h  
 
x


wj
 

pj  h  

    
    

h  v  j    
j

i i

    

j

 i

 

    
j



 j
wj
 

    

jv  j  i
j

 i
 

   
 

    

 

quantity wj
 resp  wj
  probability events warning value
    resp      equation    reflects fact warning sent variable
xi variables warning going violate  
sp y converges  preference variable calculated follows 

 v  j  

wj   
wj  

x

pj  h  

h  
 
x

pj  h  

    
    

h  v  j  

pj  h  calculated similar manner pj  h   except
exclude calculations 
definitions message updates  sp y algorithm used
solve max sat instances survey inspired decimation algorithm similar one
   

fichieu   lee

sp given algorithm figure    iteration decimation process  sp y
decimation procedure selects variables fix preferred values based quantity
bf ix  j     wj  wj  

    

work battaglia et al          additional backtracking process introduced make decimation process robust  backtracking process allows
decimation procedure unfix variables already fixed values  variable xj
fixed value xj   following quantities calculated 
bbacktrack  j    xj  wj  wj  

    

variables ranked according quantity top variables chosen
unfixed  algorithm figure    show backtracking decimation algorithm
sp y  battaglia et al          value either given input 
determined empirically 
input  max sat instance constant k  optional input  yin backtracking
probability r 
output  configuration 
algorithm  
   randomly initialize surveys 
   yin given  set   yin   otherwise  determine value bisection
method 
   run sp y convergence  sp y converges  variable xi   extract
random number q        
 a  q   r  sort variables according equation    fix top k
biased variables 
 b  q   r sort variables according equation    unfix top k
biased variables 
   simplify instance based step      sp y converged return nonparamagnetic solution  a paramagnetic solution refers set  bf ix  j  jv
biased value variables   go step     
   run weighted walksat remaining instance outputs best configuration found 

figure    survey inspired decimation  sid  algorithm solving max sat instance
 battaglia et al        

   

firelaxed survey propagation weighted max sat problem

   relaxed survey propagation
shown  maneva et al         braunstein   zecchina        sp sat
problem reformulated bp algorithm extended factor graph  however 
formulation cannot generalized explain sp y algorithm applicable
max sat problems  previous paper  chieu   lee         extended formulation
work maneva et al         address max sat problem  section 
modify formulation previous paper  chieu   lee        address
weighted max sat problem  setting extended factor graph run bp
algorithm  theorem    show formulation generalizes bp interpretation
sp given work maneva et al          main theorem  theorem    
show running loopy bp algorithm factor graph estimates marginals
covers configurations violating set clauses minimal total weight 
first define concept covers section      defining extended
factor graph section      rest section  given weighted max sat problem
 x  c  w   assume variables x take values            third value
dont care state  corresponding no warning message sp algorithm defined
section   
    covers weighted max sat
first  need define semantics value dont care state 
definition     maneva et al         given configuration x  say variable xi
unique satisfying variable clause c assigned s i whereas
variables xj clause assigned u j  see definition   definitions s i
u i    variable xi said constrained clause unique satisfying
variable   variable unconstrained constrained clauses  define
coni   x     ind xi constrained   

    

ind p   equals   predicate p true    otherwise 
illustration  consider configuration x              example   
configuration  x       constrained clauses       x      constrained
    x      unconstrained  flipping x     violate additional
clauses configuration 
following definition  redefine configuration taking values          
satisfies violates clauses 
definition    configuration satisfies clause  i  contains variable xi
set value s i    ii  least two variables take value   configuration
violates clause variables xj set u j   configuration x invalid
clause exactly one variables set  
remaining variables set u i   configuration valid valid clauses
c 
definition invalid configurations reflects interpretation value
dont care state  clauses containing variable xi   already satisfied
   

fichieu   lee

variables  value xi matter  xi   cannot last remaining
possibility satisfying clause  case clause contains two variables set
  clause satisfied either one two variables  variable
take dont care value 
define partial order set valid configurations follows  maneva et al  
      
definition    let x two valid configurations  write x i      xi   yi
    xi   yi     
partial order defines lattice  maneva et al         showed sp
peeling procedure peels satisfying configuration minimal element
lattice  cover minimal element lattice  sat region  cover
defined follows  kroc  sabharwal    selman        
definition    cover valid configuration x          n satisfies clauses 
unconstrained variables assigned       
sp algorithm shown return marginals covers  maneva et al         
principle  two kinds covers  true covers correspond satisfying
configurations  false covers not  kroc et al         showed empirically
number false covers negligible sat instances  rsp apply weighted
max sat instances  introduce notion v cover 
definition    v cover valid configuration x          n
   total weight clauses violated configuration equals v 
   x unconstrained variables assigned       
hence covers defined definition   simply v covers v      i e    covers  
    extended factor graph
section  define joint distribution extended factor graph
positive v covers  first  need define functions used
define factors extended factor graph 
definition    clause  c  following function assigns different values
configurations satisfy  violate invalid  see definition     

val  xv       



 

exp w y 

 

xv    satisfies
xv    violates
xv    invalid

    

definition  introduced parameter rsp algorithm  plays
similar role sp y algorithm  term exp w y  penalty
violating clause weight w  
   

firelaxed survey propagation weighted max sat problem

definition      maneva et al         given configuration x  define parent set
pi  x  variable xi set clauses xi   xi unique satisfying
variable configuration x   i e  set clauses constraining xi value   formally 
pi  x      c  coni   xv         

    

example    configuration x               parent sets p   x   
          p   x          p   x     
given weighted max sat instance  x  c  w  factor graph  g     v  f    e  
construct another distribution associated factor graph gs     v  fs    es  
follows  v   let p  i  set possible parent sets variable xi   due
restrictions imposed definition  pi  x  must contained either v    i 
 

v  i   both  therefore  cardinality p  i    v  i      v  i      extended
factor graph defined set variables                 n   x  x      xn  
xi              p  i   hence factor graph number variables
original sat instance  variable large cardinality  given configurations
x sat instance  denote configurations  x     i  x  iv    x   
 xi   pi  x   
definitions given far define semantics valid configurations parent sets 
rest section  define factors extended factor graph gs
ensure definitions satisfied configurations  
single variable compatibilities  i   defined following factor
variable  x  
 i  x     xi   pi  x     



 

 


 

pi  x      xi   
pi  x      xi  
 
valid  xi   pi  x  

    

first case definition pi  x    xi    corresponds case
variable xi unconstrained  yet takes value          valid configurations
v covers  with unconstrained variables set       zero value
factor  hence v covers positive value factors  last
case definition  validity  xi   pi  x   simply means xi       resp 
xi       pi  x  v    i   resp  pi  x  v  i    
clause compatibilities     are 
  x v        val  xv    

q





kv    ind   pk  x     con k  xv       

    

ind defined definition    clause compatibilities introduce penalties
val  xv      joint distribution  second term equation enforces
parent sets pk  x  consistent definitions parent sets definition   
variable xk clause  
values x determines uniquely values p    pi  x  iv   hence
distribution  x     xi   pi  x  iv simply distribution x 
theorem    using notation unsat x  represent set clauses violated
x  underlying distribution p   factor graph defined section positive
   

fichieu   lee

  

  

  

  

 

  

 

  

  

 

  

  

figure    extended factor graph sat instance given example    factor
nodes i  correspond clause compatibility factors   single variable
factor nodes i  represents single variable compatibility factors   factor
graph similar original factor graph sat instance figure    except
additional factor nodes i   

v covers  v cover x  have 
p x   x    p     x  



exp w y  

    

unsat x 

proof  configurations v covers either invalid contains unconstrained
variables set       invalid configurations  distribution zero
definition val   configurations unconstrained variables set      
distribution zero due definition factors   v cover  total
penalty violated clauses product term equation    
definition defines joint distribution factor graph  rsp algorithm
message passing algorithm defined factor graph 
definition     rsp algorithm defined loopy bp algorithm applied
extended factor graph gs associated maxsat instance  x  c  w  
section    formulate message passing updates rsp  well
decimation algorithm using rsp solver weighted max sat instances 
example  figure   shows extended factor graph weighted max sat instance
defined example   
definition     define min cover weighted max sat instance m cover 
minimum total weight violated clauses instance 
theorem    taken   rsp estimates marginals min covers
following sense  stationary points rsp algorithm correspond stationary
points bethe free energy distribution uniform min covers 
   

firelaxed survey propagation weighted max sat problem

        

energy     

        

energy    

        

energy    

        

energy    
        

        

        

        
       

       

energy    

energy    

figure    energy landscape weighted max sat instance given example   
node represents configuration variables  x    x    x     example 
node            represents configuration  x    x    x                 

proof  ratio probability v cover  v     cover equals exp y  
taken   distribution equation    positive min covers 
hence rsp  loopy bp algorithm factor graph representing equation    
estimates marginals min covers 
application rsp weighted max sat instances  taking would often
cause rsp algorithm fail converge  taking sufficiently large value often
sufficient rsp used solve weighted max sat instances 
figure    show v covers small weighted max sat example example   
example  unique min cover x        x       x     
maneva et al         formulated sp  algorithm  equivalent sp
algorithm  braunstein et al              sp  algorithm loopy bp algorithm
extended factor graph defined work maneva et al          comparing
definitions extended factor graph factors rsp sp    chieu  
lee        
theorem    taking   rsp equivalent sp      
proof  definitions joint distribution sp       maneva et al         
rsp paper differ definition    rsp 
definitions become identical  since sp  rsp equivalent loopy bp
distribution defined extended factor graphs  equivalence joint
distribution means algorithms equivalent 
taking infinity corresponds disallowing violated clauses  sp  formulated
satisfiable sat instances  clauses must satisfied  sp   clause weights
inconsequential clauses satisfied 
paper  disallow unconstrained variables take value   appendix
a  give alternative definition single variable potentials equation    
   

fichieu   lee

definition  maneva et al         defines smoothing interpretation sp  
smoothing applied rsp  see theorem   work maneva et al        
appendix details 
    importance convergence
found message passing algorithms bp sp algorithms perform
well whenever converge  e g   see kroc  sabharwal    selman         success
rsp algorithm random ensembles max sat weighted max sat instances
believed due clustering phenomenon problems  found
rsp could successful cases clustering phenomenon observed 
believe presence large clusters help sp algorithm converge well 
long sp algorithm converges  presence clusters necessary good
performance 
covers simply boolean configurations  with variables taking value  
represent singleton clusters  call covers degenerate covers  many structured
non random weighted max sat problems  found covers found
often degenerate  previous paper  chieu  lee    teh         defined modified
version rsp energy minimization factor graphs  show lemma  
paper configurations   zero probability  i e  covers degenerate 
paper  showed value tuned favor convergence
rsp algorithm 
section      show success rsp benchmark max sat instances 
trying recover covers configurations found rsp  found
benchmark instances used degenerate covers  fact rsp converged
instances sufficient rsp outperform local search algorithms 

   using rsp solving weighted max sat problem
previous section  defined rsp algorithm definition    loopy bp
algorithm extended factor graph  section  derive rsp message
passing algorithm based definition  giving decimation based algorithm
used solving weighted max sat instances 
    message passing algorithm
variables extended factor graphs longer boolean  form
 x     xi   pi  x    large cardinalities  definition bp algorithm 
stated message vector passed factors variables length
equal cardinality variables  section  show messages passed
rsp grouped groups  message passed variables
factors three values 
rsp  factor variable messages grouped follows 

mi
xi   s i   pi  x        vs  i  
 all cases variable xi constrained clause   

   

firelaxed survey propagation weighted max sat problem

u
mi
xi   u i   pi  x  vu  i  
 all cases variable xi constrained u i clauses  

mi
xi   s i   pi  x  vs  i  
 all cases variable xi   s i constrained   least one
variable xj satisfies equals   otherwise xi constrained  

mi
xi     pi  x     

last two messages always equal 



mi
  mi
  mi
 

equality due fact factor constraining variables 
matter whether variable satisfying   long least two
variables either satisfying   following  consider two equal
 
messages single message  mi
variable factor messages grouped follows 

  
ri
svs  i  mia  s i       
variable xi constrained s i  

p

u
ri
  
pi  x vu  i  mia  u i   pi  x   
variable xi constrained clauses u i  

p

  
ri
pi  x vs  i  mia  s i   pi  x   
variable xi constrained   constrained clauses s i  

p

  
ri
     
variable xi unconstrained equals   

last two messages grouped one message  as done previous
paper  chieu   lee        follows 



ri
  ri
  ri
 

since calculating updates mj messages ri messages  ri
required  update equations rsp weighted max sat given figure    
update equations derived based loopy bp updates equations      
section    worst case densely connected factor graph  iteration updates
performed o m n   time  n number variables  number
clauses 

      factor variable messages
begin update equations messages factors variables  given

equations            message mi
groups cases xi constrained
   

fichieu   lee




mi
 

u
rj

    

jv     i 






u
mi
 

u

 rj
  rj
  

jv     i 
w

  e

mi
 





 rk
rk
 

kv     i 



u

rj

jv     i k 



u
  
rj
jv     i 

u

 rj
  rj
 



x

jv     i 

    


u
rj

    

jv     i 




ri
 





u


mi
 mi
  mi
 



vu  i 

    

vs  i 


u
ri
 






 mi
  mi
 



vs  i 

u
mi


vu  i 




mi


vau  i 



ri
 


vu  i 

 

    







u


mi
 mi
  mi
 

vs  i 


mi




vs  i 


mi



    

vs  i vu  i 



bi    


v




u

mi

   i 

v



 mi
  mi
 

 i 


v

bi     

v

bi   

u

mi

 i 



    

 i 





mi




v



 mi
  mi
 

   i 


mi


v


mi

    

   i 

    

v  i 

figure     update equations rsp  equations bp equations factor
graph defined text 

   

firelaxed survey propagation weighted max sat problem

factor   means variables violating factor   hence
equation   



mi
 

u
rj
 

jv     i 
u
rj
messages neighbors stating violate  
u
next equation mi
states variable xi violating   case 
variables possible cases

   two variables satisfying   message update


u

 rj
  rj
 

jv     i 


rk

x



kv     i 

u
rj


jv     i k 



u
rj
 

jv     i 

   exactly one variable v     i  constrained   variables violating
  message update
x




rk

u
rj

jv     i k 

kv     i 

   variables violating   case  penalty factor
exp w y   message update


exp w y 

u
rj

jv     i 

sum three cases result equation    

third update equation mi
case variable xi uncons    for    means
strained   satisfying s i  for case mi

least one satisfying variable unconstrained   message
update


u

 rj
  rj
 

jv     i 



u
rj

jv     i 

      variable factor messages

consists case variable xi constrained
first message ri
factor   means satisfies neighboring factors vs  i   violates factors
vu  i   probability



vu  i 



u
mi





 mi
  mi
   



vs  i 

u
second message ri
case xi violates   case  variables
u
v  i  satisfied  clauses vs  i  violated  case  variable xi must

   

fichieu   lee

constrained one clauses vu  i   hence message update


vs  i 





u


mi
 mi
  mi
 

vu  i 

vu  i 


mi






  message
third message ri
sum two messages ri
ri
variable xi satisfies constrained   must constrained
factors 

 
ri








vu  i 

u
mi




 mi
  mi
 

vs  i 



vs  i 


mi




  case x      
second part message  ri


mi
 


vs  i vu  i 

sum two equations results equation    
      beliefs
beliefs calculated factor variable messages algorithm converges  obtain estimates marginals min covers  calculation beliefs
similar calculation variable factor messages 
belief bi     belief variable xi taking value    case
variable xi satisfies clauses v  i   violates clauses v    i   case 
xi must constrained one factors v  i   hence belief follows 


v    i 

u

mi






 mi
  mi
 

v  i 




mi
 

v  i 

calculation belief bi      similar bi      belief bi    case
xi     hence calculated follows 



mi
 

v   i 

    comparing rsp sp y message passing algorithms
message passing algorithms rsp sp y share many similarities  algorithms
   include multiplicative penalty distribution violated clause 
   contain mechanism dont care state  sp y  occurs variable
receives warnings neighboring factors 
however  number significant differences two algorithms 
   

firelaxed survey propagation weighted max sat problem

   rsp  penalties imposed factor passes message variable 
sp y  penalties imposed variable compiles incoming warnings 
decides many factors going violate 
   importantly  rsp  variables participating violated clauses never take  
value  sp y  variable receiving equal number warnings set
 
factors         v  i   taking      value  i e  hj   hj


hj      decide pass message warning   hence sp y 
possible variables violated clauses take dont care state 
   work battaglia et al         sp y formulated cavity
approach  found optimal value given max sat problem
 
e   complexity statistical physics  e energy density
 mezard   zecchina         stated finite value energy
max sat problem zero  theorem    show rsp 
large possible underlying distribution min covers 
experimental results figure     showed indeed true rsp  long
converges 

input   weighted  max sat instance  constant k  yin
output  configuration 
algorithm  
   randomly initialize surveys set   yin  
   run rsp y  rsp converges  sort variables according quantities
bi    p  xi       p  xi        fix top k variables preferred
values  subject condition bi       
    for weighted max sat  rsp fails converge  adjust value y 
   rsp converges least one variable set  go back step     simplified instance  otherwise  run  weighted  walksat solver simplified
instance output configuration found 
figure     decimation algorithm rsp solving  weighted  max sat instance

    decimation algorithm
decimation algorithm shown figure     algorithm used
experiments described section    comparing rsp sp y random max sat
instances section      run algorithms fixed yin   vary yin
range values  comparing figure    figure   sp y  condition used spy check paramagnetic solution replaced condition given step    
figure     experimental results section      used sp y implementation
   

fichieu   lee

available online  battaglia et al          contains mechanism backtracking
decimation decisions  see figure     section      rsp still outperforms sp y despite
backtracking decisions  running rsp weighted max sat  found
necessary adjust dynamically decimation process  details
experimental settings  please refer section   

   experimental results
run experiments random max   sat  random weighted max sat  well
benchmark max sat instances used work lardeux  saubion  hao        
 viols

 viols

figure     behaviour sp y rsp varying values x axis 
number violated clauses   viols  y axis  comparison performances rsp sp y shown table    objective showing
graphs figure show behavior rsp varying
consistent theorem    long rsp converges  performance improves
increases  graph  rsp reaches plateau fails converge this
property allows systematic search good value used 
behavior sp y varying less consistent 
 

    random max   sat
run experiments randomly generated max   sat instances     variables 
different clause to variable ratios  random instances generated sp y code
available online  battaglia et al          figure     compare sp y rsp random
max   sat different clause to variable ratio    vary         show
performance sp y rsp unsat region   sat  beyond phase transition
c        value   number violated clauses  y axis  plotted
value used 
   

firelaxed survey propagation weighted max sat problem

perform decimation procedure figure    rsp  fixed value yin  
decimating     variables time  i e  k         sp y  run sp y code available
line  option decimating     variables iteration  two different
settings  without backtracking  battaglia et al          backtracking procedure used sp y improve performance  unfixing previously fixed variables rate
r        errors made decimation process corrected  rsp 
run backtracking  note formulation equals  y formulation
work battaglia et al   battaglia et al         
sp y rsp fail converge becomes large enough  happens 
output algorithm result returned walksat original instance 
figure     see happening curve reaches horizontal line  signifying
algorithm returning configuration regardless  we seed randomized
walksat results identical instances identical   figure    
see rsp performs consistently sp y  increases  performance rsp
improves  point rsp fails converge  interestingly max   sat instances 
observed rsp converges value given instance  continue
converge value throughout decimation process  hence  best value
rsp obtainable without going decimation process  commence
decimation largest value rsp converges  table    show rsp
outperforms sp y      despite fact allow backtracking rsp 
compare rsp sp y local search solvers implemented ubcsat
 tompkins   hoos         run      iterations    max sat solvers
ubcsat  take best result among    solvers  results shown table   
see local solvers ubcsat worse rsp sp y 
tried running complete solvers toolbar  de givry  heras  zytnicki    larrosa 
      maxsatz  li  manya    planes         unable deal instances
size      
    random weighted max   sat
run experiments randomly generated weighted max   sat instances 
instances generated way instances max   sat  addition 
weights clause uniformly sampled integers set       
upper bound weights  show experimental results         
figure     compare rsp    weighted max sat solvers implemented
ubcsat  rsp  run experiments initial set     whenever
algorithm fails converge  lower value    halve value
less    see figure      see rsp outperforms ubcsat consistently
experiments figure    
    benchmark max sat instances
compare rsp ubcsat instances used work lardeux et al         
instances used sat      competition  among    instances  use
seven largest instances      variables  run rsp two settings 
decimating either        variables time  run rsp increasing values y 
   

fichieu   lee

table    number violated clauses attained method  sp y  sp y  bt   spy backtracking   rsp  best result selected y   
show best performance bold face  column fix shows number
variables fixed rsp optimal y  time time taken rsp
 in minutes  fix variables  amd opteron    ghz machine 

   
   
   
   
   
   
   
   
   
   
   

ubcsat
  
  
  
   
   
   
   
   
   
   
   

sp y
 
 
  
  
  
   
   
   
   
   
   

sp y bt 
 
 
  
  
  
   
   
   
   
   
   

rsp
 
  
  
  
  
   
   
   
   
   
   

fix
    
    
    
    
    
    
    
    
    
    
    

time  minutes 
  
  
  
  
  
  
  
  
  
  
  

w viol

w viol





figure     experimental results weighted max sat instances  x axis shows
value   y axis  w viol  number violated clauses returned
algorithm 

y  rsp fixes number spins  stop increasing number spins
fixed decreases previous value y  ubcsat  run      iterations
   solvers  results shown table    seven instances  rsp fails
fix spins first one  outperforms ubcsat rest  lardeux et al        
show best performances paper  average results order
magnitude higher results table    figure    shows finding good sp y
hard  benchmark instances  run sp y  y option  battaglia et al  
      uses dichotomic search y  sp y failed fix spins   instances 
   

firelaxed survey propagation weighted max sat problem

table    benchmark max sat instances  columns  instance shows instance name
paper lardeux et al          nvar number variables  ubcsat
rsp x  x number decimations iteration  number violated
clauses returned algorithm  fx x number spins fixed rsp 
best results indicated bold face 
instance
fw
nc
nw
       
       
       
       

nvar ubcsat rsp     fx     rsp   
family  purdom                  
    
  
   
 
   
    
  
  
    
  
    
  
  
    
  
family  pyhala braun unsat
    
  
  
    
  
    
  
  
    
  
    
  
  
    
  
    
  
  
    
  

fx   
 
    
    
    
    
    
    

success sp family algorithms random ensembles sat max sat
problem usually due clustering phenomenon random ensembles 
benchmark instances random instances  attempted see configurations
found rsp indeed belong cover representing cluster solutions  rather
disappointingly  found   solutions rsp outperformed local search
algorithms  variables solutions constrained least one clause  hence 
v covers found degenerate covers  i e  covers contain variables set
  appears success rsp benchmark instances due
clustering phenomenon  simply rsp manages converge instances 
value y  kroc  sabharwal  selman        made similar observation 
convergence bp sp algorithms often sufficient obtaining good solution
given problem  discussed section      ability vary improve convergence
useful feature rsp  one distinct ability exploit clustering
phenomenon 

   conclusion
recent work max sat weighted max sat tends focus complete
solvers  solvers unable handle large instances  max sat competition
      argelich  li  manya    planes         largest max   sat instances used
   variables  large instances  complete solvers still practical  local
search procedures feasible alternative  sp y  generalizing sp 
shown able solve large max   sat instances phase transition  lacks
theoretical explanations recent work sp generated 
  sat  easy hard easy transition clause to variable ratio increases 
max   sat  however  shown empirically beyond phase transition
satisfiability  instances hard solve  zhang         paper  show
   

fichieu   lee

rsp outperforms sp y well local search algorithms max sat weighted
max sat instances  well beyond phase transition region 
rsp sp y well max sat instances near phase transition 
mechanisms behind sp y rsp similar  algorithms impose penalty term
violated constraint  reduce sp   sp y uses population
dynamics algorithm  seen warning propagation algorithm 
paper  formulated rsp algorithm bp algorithm extended factor
graph  enabling us understand rsp estimating marginals min covers 

acknowledgments
work supported part nus arf grant r                 

appendix a  smoothing interpretation rsp
definition sp   maneva et al          parameter introduced define
whole family algorithms       sp  algorithm corresponds sp algorithm 
     sp  algorithm corresponds bp algorithm  section 
develop general version extended factor graph defined section   
incorporates sp   call corresponding rsp algorithm new
factor graph rsp  algorithm 
difference factor graph rsp  one section  
definition variable compatibilities equation     following notations work
maneva et al          introduce parameters     restrict
case          the sp  rsp  equal    redefine
variable compatibilities follows

 i  x     xi   pi  x     



 





 

pi  x      xi   
pi  x      xi  
 
valid  xi   pi  x  

    

         definition equation    corresponds particular case
           section    defined factor graph unconstrained
variables must take value   new definition above  unconstrained variables allowed take values      weight     value
weight  
definition  joint distribution equation    redefined follows 
n  x  n  x 
exp w y  

unsat x 

p  x    p   xk   pk  k      

    

n   x  number unconstrained variables x taking       n  x 
number unconstrained variables taking x 
case      studied case main paper  underlying distribution
distribution positive v covers 
   

firelaxed survey propagation weighted max sat problem

case      case  configurations x n  x      non zero probability distribution given equation     hence  value forbidden 
variables take values        boolean configuration violating clauses total weight
w probability proportional exp yw    hence retreive weighted max sat
energy defined equation     case  factor graph equivalent original
weighted max sat factor graph defined definition    hence rsp  equivalent
loopy bp algorithm original weighted max sat problem 
case            case  valid configurations x violating clauses
n  x  n  x 
total weight w probability proportional     exp yw    hence 
probability v covers case     spread lattice
minimal element 
formulation  rsp  seen family algorithms include
bp rsp algorithm  moving bp rsp  or   varies     

references
achlioptas  d   naor  a     peres  y          rigorous location phase transitions hard
optimization problems  nature                     
argelich  j   li  c  m   manya  f     planes  j          second evaluation max sat
solvers  sat    tenth international conference theory applications
satisfiability testing 
battaglia  d   kolar  m     zecchina  r          minimizing energy glass thresholds  physical review e     
berre  d  l     simon  l          essentials sat      competition  sat   
sixth international conference theory applications satisfiability testing 
berre  d  l     simon  l          special volume sat      competitions
evaluations  journal satisfiability  boolean modeling computation    
braunstein  a   mezard  m     zecchina  r          survey propagation  algorithm
satisfiability  random structures algorithms         
braunstein  a     zecchina  r          survey propagation local equilibrium equations 
journal statistical mechanics  theory experiment            
braunstein  a     zecchina  r          learning message passing networks discrete
synapses  physical review letters             
chieu  h  l     lee  w  s          relaxed survey propagation  sum product algorithm
max sat  aaai    twenty third aaai conference artificial intelligence 
chieu  h  l   lee  w  s     teh  y  w          cooled relaxed survey propagation
mrfs  nips    advances neural information processing systems     cambridge  ma  mit press 
cook  s  a          complexity theorem proving procedures  stoc     third
annual acm symposium theory computing  pp          new york  ny  usa 
acm 
   

fichieu   lee

cooper  g  f          computational complexity probabilistic inference using
bayesian belief networks  research note   artif  intell                    
daude  h   mezard  m   mora  t     zecchina  r          pairs sat assignments random
boolean formul  theor  comput  sci                     
davis  m   logemann  g     loveland  d          machine program theorem proving 
commun  acm                
davis  m     putnam  h          computing procedure quantification theory  journal
acm  jacm                 
de givry  s   heras  f   zytnicki  m     larrosa  j          existential arc consistency 
getting closer full arc consistency weighted csps   ijcai    nineteenth
international joint conference artificial intelligence 
dubois  o     dequen  g          backbone search heuristic efficient solving hard  sat formulae  ijcai    seventeenth international joint conference artificial
intelligence  pp         
een  n     sorensson  n          minisat   sat solver conflict clause minimization 
sat    eighth international conference theory applications satisfiability testing 
hoos  h  h          adaptive noise mechanism walksat  aaai    eighteenth
national conference artificial intelligence  pp         
kaporis  a  c   kirousis  l  m     lalas  e  g          probabilistic analysis greedy
satisfiability algorithm  random structures algorithms                 
kirkpatrick  s   jr   c  d  g     vecchi  m  p          optimization simulated annealing 
science              
kirousis  l  m   kranakis  e   krizanc  d     stamatiou  y  c          approximating
unsatisfiability threshold random formulas  random structures algorithms 
               
kroc  l   sabharwal  a     selman  b          survey propagation revisited  uai   
twenty third conference uncertainty artificial intelligence 
kroc  l   sabharwal  a     selman  b          message passing local heuristics
decimation strategies satisfiability  sac       th annual acm symposium
applied computing 
kschischang  f  r   frey  b     loeliger  h  a          factor graphs sum product
algorithm  ieee transactions information theory         
lardeux  f   saubion  f     hao  j  k          three truth values sat maxsat problems  ijcai    nineteenth international joint conference artificial
intelligence 
larrosa  j     heras  f          resolution max sat relation local consistency weighted csps  ijcai    nineteenth international joint conference
artificial intelligence 
levin  l  a          universal search problems  problemy peredaci informacii            
   

firelaxed survey propagation weighted max sat problem

li  c  m     anbulagan         heuristics based unit propagation satisfiability problems  ijcai    fifteenth international joint conference artificial intelligence 
pp         
li  c  m   manya  f     planes  j          detecting disjoint inconsistent subformulas
computing lower bounds max sat  aaai    twenty first aaai conference
artificial intelligence 
maneva  e   mossel  e     wainwright  m          new look survey propagation
generalizations  http   arxiv org abs cs cc         
mcallester  d   selman  b     kautz  h          evidence invariants local search 
aaai    proceedings fourteenth national conference artificial intelligence 
pp          providence  rhode island 
mezard  m   mora  t     zecchina  r          clustering solutions random satisfiability problem  physical review letters             
mezard  m     parisi  g          cavity method zero temperature  journal
statistical physics      
mezard  m     zecchina  r          random k satisfiability problem  analytic
solution efficient algorithm  physical review e     
minton  s   philips  a   johnston  m  d     laird  p          minimizing conflicts  heuristic
repair method constraint satisfaction scheduling problems  artificial intelligence             
moskewicz  m  w     madigan  c  f          chaff  engineering efficient sat solver 
dac    thirty ninth design automation conference  pp         
murphy  k   weiss  y     jordan  m          loopy belief propagation approximate
inference  empirical study  uai    fifteenth annual conference uncertainty
artificial intelligence  pp         san francisco  ca  morgan kaufmann 
pearl  j          probabilistic reasoning intelligent systems  networks plausible inference  morgan kaufmann publishers inc   san francisco  ca  usa 
pipatsrisawat  k     darwiche  a          rsat      sat solver description  tech  rep  
automated reasoning group  computer science department  ucla 
prestwich  s  d          local search sat encoded colouring problems   giunchiglia 
e     tacchella  a   eds    sat  vol       lecture notes computer science  pp 
        springer 
rabiner  l     juang  b          fundamentals speech recognition  prentice hall 
selman  b   kautz  h  a     cohen  b          noise strategies improving local search 
aaai    twelfth national conference artificial intelligence  pp         
selman  b   levesque  h  j     mitchell  d          new method solving hard satisfiability problems  aaai    tenth national conference artificial intelligence 
pp          aaai press 
shang  y     wah  b  w          discrete lagrangian based global searchmethod
solving satisfiability problems  journal global optimization               
   

fichieu   lee

tompkins  d     hoos  h          ubcsat  implementation experimentation environment sls algorithms sat max sat  sat    seventh international
conference theory applications satisfiability testing 
tseitin  g  s          complexity derivations propositional calculus  studies
mathematics mathematical logic  part ii         
yedidia  j   freeman  w     weiss  y          generalized belief propagation  nips   
advances neural information processing systems     pp         
yedidia  j   freeman  w     weiss  y          constructing free energy approximations
generalized belief propagation algorithms  ieee transactions information
theory         
zhang  w          phase transitions backbones   sat maximum   sat 
proceedings seventh international conference principles practice
constraint programming 

   


