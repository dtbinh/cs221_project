journal of artificial intelligence research                  

submitted        published      

roxybot     stochastic prediction and optimization
in tac travel
amy greenwald

amy cs brown edu

department of computer science  brown university
providence  ri       usa

seong jae lee

seongjae u washington edu

computer science and engineering  university of washington
seattle  wa       usa

victor naroditskiy

vnarodit cs brown edu

department of computer science  brown university
providence  ri       usa

abstract
in this paper  we describe our autonomous bidding agent  roxybot  who emerged victorious in the travel division of the      trading agent competition in a photo finish  at
a high level  the design of many successful trading agents can be summarized as follows 
 i  price prediction  build a model of market prices  and  ii  optimization  solve for an
approximately optimal set of bids  given this model  to predict  roxybot builds a stochastic model of market prices by simulating simultaneous ascending auctions  to optimize 
roxybot relies on the sample average approximation method  a stochastic optimization
technique 

   introduction
the annual trading agent competition  tac  challenges its entrants to design and build
autonomous agents capable of effective trading in an online travel  shopping game  the first
tac  held in boston in       attracted    entrants from six countries in north america 
europe  and asia  excitement generated from this event led to refinement of the game
rules  and continuation of regular tournaments with increasing levels of competition over
the next six years  year by year  entrants improved their designs  developing new ideas
and building on previously successful techniques  since tacs inception  the lead author
has entered successive modifications of her autonomous trading agent  roxybot  this paper
reports on roxybot     the latest incarnation and the top scorer in the tac    tournament 
the key feature captured by the tac travel game is that goods are highly interdependent
 e g   flights and hotels must be coordinated   yet the markets for these goods operate
independently  a second important feature of tac is that agents trade via three different
kinds of market mechanisms  each of which presents distinct challenges  flights are traded
in a posted price environment  where a designated party sets a price that the other parties
   there are now four divisions of tac  travel  supply chain management  scm   cat  tac backwards  
and ad auctions  aa   this paper is concerned only with the first  for a description of the others  see the
papers by arunachalam and sadeh         cai et al          jordan and wellman         respectively 
in this paper  when we say tac  we mean tac travel 

c
    
ai access foundation  all rights reserved 

figreenwald  lee    naroditskiy

must take or leave  hotels are traded in simultaneous ascending auctions  like the fcc
spectrum auctions  entertainment tickets are traded in continuous double auctions  like
the new york stock exchange  in grappling with all three mechanisms while constructing
their agent strategies  participants are confronted by a number of interesting problems 
the success of an autonomous trading agent such as a tac agent often hinges upon
the solutions to two key problems   i  price prediction  in which the agent builds a model
of market prices  and  ii  optimization  in which the agent solves for an approximately
optimal set of bids  given this model  for example  at the core of roxybots      architecture  greenwald   boyan        was a deterministic optimization problem  namely how to
bid given price predictions in the form of point estimates  in spite of its effectiveness in the
tac    tournament  a weakness of the      design was that roxybot could not explicitly
reason about variance within prices  in the years since       we recast the key challenges
faced by tac agents as several different stochastic bidding problems  see  for example  the
paper by greenwald   boyan         whose solutions exploit price predictions in the form
of distributions  in spite of our perseverance  roxybot fared unimpressively in tournament
conditions year after year  until       half a decade in the laboratory spent searching for
bidding heuristics that can exploit stochastic information at reasonable computational expense finally bore fruit  as roxybot emerged victorious in tac     in a nutshell  the secret
of roxybot   s success is   hotel  price prediction by simulating simultaneous ascending
auctions  and optimization based on the sample average approximation method  details of
our approach are the subject of the present article 
overview this paper is organized as follows  starting in section    we summarize the
tac market game  next  in section    we present a high level view of roxybots     
architecture  in section    we describe roxybots price prediction techniques for flights  hotels  and entertainment  in turn  perhaps of greatest interest is our hotel price prediction
method  following wellman et al          we predict hotel prices by computing approximate competitive equilibrium prices  only  instead of computing those prices by running
the tatonnement process  we simulate simultaneous ascending auctions  our procedure is
simpler to implement than tatonnement  yet achieves comparable performance  and runs
sufficiently fast  in section    we describe roxybots optimization technique  sample average
approximation  we argue that this approach is optimal in pseudo auctions  an abstract
model of auctions  in section      we describe simulation experiments in a controlled testing environment which show that our combined approachsimultaneous ascending auctions
for hotel price prediction and sample average approximation for bid optimizationperforms
well in practice in comparison with other reasonable bidding heuristics  in section      we
detail the results of the tac    tournament  further validating the success of roxybot   s
strategy  and reporting statistics that shed light on the bidding strategies of other participating agents  finally  in section    we evaluate the collective behavior of the autonomous
agents in the tac finals since       we find that the accuracy of competitive equilibrium
calculations has varied from year to year and is highly dependent on the particular agent
pool  still  generally speaking  the collective appears to be moving toward competitive
equilibrium behavior 

   

firoxybot   

   tac market game  a brief summary
in this section  we summarize the tac game  for more details  see http   www sics se 
tac  
eight agents play the tac game  each is a simulated travel agent whose task is to
organize itineraries for its clients to travel to and from tactown during a five day  four
night  period  in the time allotted  nine minutes   each agents objective is to procure
travel goods as inexpensively as possible  trading off against the fact that those goods are
ultimately compiled into feasible trips that satisfy its client preferences to the greatest
extent possible  the agents know the preferences of their own eight clients only  not the
other    
travel goods are sold in simultaneous auctions as follows 
 flight tickets are sold by tacair in dynamic posted pricing environments  there
are flights both to and from tactown on each applicable day  no resale of flight
tickets by agents is permitted 
flight price quotes are broadcast by the tac server every ten seconds 
 hotel reservations are sold by the tac seller in multi unit ascending call markets 
specifically     hotel reservations are sold in each hotel auction to the    highest
bidders at the   th highest price  the tac seller runs eight hotel auctions  one per
night hotel combination  recall that travel takes place during a four night period 
moreover  there are two hotels  a good one and a bad one   no resale of hotel
reservations by agents is permitted  nor is bid withdrawal allowed 
more specifically  the eight hotel auctions clear on the minute with exactly one auction
closing at each of minutes one through eight   the precise auction to close is chosen
at random  with all open auctions equally likely to be selected   for the auction that
closes  the tac server broadcasts the final closing price  and informs each agent of its
winnings  for the others  the tac server reports the current ask price  and informs
each agent of its hypothetical quantity won  hqw  
 agents are allocated an initial endowment of entertainment tickets  which they trade
among themselves in continuous double auctions  cdas   there are three entertainment events scheduled each day 
although the event auctions clear continuously  price quotes are broadcast only every
   seconds 
one of the primary challenges posed by tac is to design and build autonomous agents
that bid effectively on interdependent  i e   complementary or substitutable  goods that are
sold in separate markets  flight tickets and hotel reservations are complementary because
flights are not useful to a client without the corresponding hotel reservations  nor vice
versa  tickets to entertainment events  e g   the boston red sox and the boston symphony
orchestra  are substitutable because a client cannot attend multiple events simultaneously 

   

figreenwald  lee    naroditskiy

repeat
 start bid interval  
   download current prices and winnings from server
   predict  build stochastic models
a  flights  bayesian updating learning
b  hotels  simultaneous ascending auctions
c  entertainment  sample historical data
   optimize  sample average approximation
   upload current bids to server
 three separate threads 
 end bid interval  
until game over

table    a high level view of roxybot   s architecture 

   roxybot   s architecture  a high level view
in our approach to the problem of bidding on interdependent goods in the separate tac
markets  we adopt some simplifying assumptions  rather than tackle the game theoretic
problem of characterizing strategic equilibria  we focus on a single agents  decision theoretic 
problem of optimizing its own bidding behavior  assuming the other agents strategies are
fixed  in addition  we assume that the environment can be modeled in terms of the agents
predictions about market clearing prices  these prices serve to summarize the relevant information hidden in other agents bidding strategies  these two assumptionsfixed otheragent behaviors and market information encapsulated by pricessupport the modular design of roxybot    and many other successful tac agents  which consists of two key stages 
 i  price prediction  and  ii  optimization 
the optimization problem faced by tac agents is a dynamic one that incorporates
aspects of sequentiality as well as simultaneity in auctions  the markets operate simultaneously  but in addition  prices are discovered incrementally over time  in principle  a
clairvoyant agentone with knowledge of future clearing pricescould justifiably employ
an open loop strategy  it could solve the tac optimization problem once at the start of the
game and place all its bids accordingly  never reconsidering those decisions  a more practical alternative  and the usual approach taken in tac     is to incorporate into an agents
architecture a closed loop  or bidding cycle  enabling the agent to condition its behavior
on the evolution of prices  as price information is revealed  the agent improves its price
predictions  and reoptimizes its bidding decisions  repeatedly 
one distinguishing feature of roxybot    is that it builds stochastic models of market
clearing prices  rather than predicting clearing prices as point estimates  given its stochastic
price predictions  stochastic optimization lies at the heart of roxybot     assuming time is
   an exception is livingagents  fritschi   dorer         the winner of tac      

   

firoxybot   

discretized into stages  or bid intervals  during each iteration of its bidding cycle  roxybot   
faces an n stage stochastic optimization problem  where n is the number of stages remaining
in the game  the key input to this optimization problem is a sequence of n    stochastic
models of future prices  each one a joint probability distribution over all goods conditioned
on past prices and past hotel closings  the solution to this optimization problem  and the
output of each iteration of the bidding cycle  is a vector of bids  one per good  or auction  
table   presents a high level view of roxybot   s architecture  emphasizing its bidding
cycle  at the start of each bid interval  current prices and winnings are downloaded from
the tac server  next  the key prediction and optimization routines are run  in the prediction module  stochastic models of flight  hotel  and entertainment prices are built  in
the optimization module  bids are constructed as an approximate solution to an n stage
stochastic optimization problem  prior to the end of each bid interval  the agents bids
are uploaded to the tac server using three separate threads   i  the flight thread bids on
a flight only if its price is near its predicted minimum   ii  the hotel thread bids on open
hotels only if it is moments before the end of a minute  and  iii  the entertainment thread
places bids immediately 
we discuss the details of roxybot   s price prediction module first  and its optimization
module second 

   price prediction
in this section  we describe how roxybot    builds its stochastic models of flight  hotel  and
event prices  each model is a discrete probability distribution  represented by a set of scenarios  each scenario is a vector of future pricesprices at which goods can be bought
and sold after the current stage  for flights  the price prediction model is not stochastic  the
future buy price is simply roxybot   s prediction of the expected minimum price during the
current stage  for hotels  the future buy prices are predicted by monte carlo simulations
of simultaneous ascending auctions to approximate competitive equilibrium prices  there
are no current buy prices for hotels  for entertainment  roxybot    predicts future buy and
sell prices based on historical data  details of these price prediction methods are the focus
of this section 
    flights
efforts to deliberate about flight purchasing start with understanding the tac model of
flight price evolution 
      tac flight prices stochastic process
flight prices follow a biased random walk  they are initialized uniformly in the range
            and constrained to remain in the range             at the start of each tac
game instance  a bound z on the final perturbation value is selected for each flight  these
bounds are not revealed to the agents  what is revealed to the agents is a sequence of
random flight prices  every ten seconds  tacair perturbs the price of each flight by a
random value that depends on the hidden parameter z and the current time t as follows 
given constants c  d  r and t      each  intermediate  bound on the perturbation value

   

figreenwald  lee    naroditskiy

is a linear function of t 

t
 z  c 
   
t
the perturbation value at time t is drawn uniformly from one of the following ranges  see
algorithm    
x t  z    c  

 u  c  x t  z    if x t  z     
 u  c   c   if x t  z     
 u  x t  z    c   if x t  z     
observe that the expected perturbation value in each case is simply the average of the
corresponding upper and lower bounds  in particular 
 if x t  z    c  then the expected perturbation is positive 
 if x t  z       c   then the expected perturbation is negative 
 if x t  z    c      then the expected perturbation is positive 
 otherwise  if x t  z    c     c   then the expected perturbation is zero 
moreover  using equation    we can compute the expected perturbation value conditioned
on z 
 if z      c   then x t  z       c   so prices are expected not to increase 
 if z   c  c   d   then x t  z    c  c   d   so prices are expected not to decrease 
 if z   c      then x t  z    c  c   so prices are expected not to increase while t 
ct
 
and they are expected not to decrease while t  cz

ct
cz

the tac parameters are set as follows  c       d       t        and z uniformly
distributed in the range  c  d   based on the above discussion  we note the following 
given no further information about z  tac flight prices are expected to increase  i e  
the expected perturbation is positive   however  conditioned on z  tac flight prices may
increase or decrease  i e   the expected perturbation can be positive or negative  
      roxybot   s flight prices prediction method
although the value of the hidden parameter z is never revealed to the agents  recall that
the agents do observe sample flight prices  say y            yt   that depend on this value  this
information can be used to model the probability distribution pt  z   p  z   y            yt   
such a probability distribution can be estimated using bayesian updating  before roxybot    agents walverine  cheng et al         and mertacor  toulis et al         took this approach 
walverine uses bayesian updating to compute the next expected price perturbation and then
compares that value to a threshold  postponing its flight purchases if prices are not expected
to increase by more than that threshold  mertacor uses bayesian updating to estimate the
time at which flight prices will reach their minimum value  roxybot uses bayesian updating
to compute the expected minimum price  as we now describe 
   

firoxybot   

algorithm   getrange c  t  z 
compute x t  z   equation   
if x t  z      then
a   c  b   x t  z 
else if x t  z      then
a   x t  z   b    c
else
a   c  b    c
end if
return  a  b   range 
roxybot   s implementation of bayesian updating is presented in algorithm    letting

q   z   

 
c d

  p  z   the algorithm estimates pt    z    p  z   y            yt     as usual 
p  y            yt   z p  z 



z  p  y            yt   z  p  z   dz

where

p  z   y            yt     p
p  y            yt   z   
 

t
y

i  
t
y

   

p  yi   y            yi    z 

   

p  yi   z 

   

i  

equation   follows from the fact that future observations are independent of past observations  observations depend only on the hidden parameter z 
the only thing left to explain is how to set the values p  yi   z   for i              t  as
described in the pseudocode  this is done as follows  if yt   is within the appropriate range at
that time  then this probability is set uniformly within the bounds of that range  otherwise 
it is set to    presumably  walverines and mertacors implementations of bayesian updating
are not very different from this one   however  as alluded to above  how the agents make
use of the ensuing estimated probability distributions does differ 
roxybot    predicts each flights price to be its expected minimum price  this value is
computed as follows  see algorithm     for each possible value of the hidden parameter z 
roxybot simulates an expected random walk  selects the minimum price along this walk 
and then outputs as its prediction the expectation of these minima  averaging according to
pt  z   we call this random walk expected  since the perturbation value  is an expectation
 i e      ba
    instead of a sample  i e     u  a  b    by carrying out this computation 
roxybot generates flight price predictions that are point estimates  the implicit decision
to make only roxybot   s hotel and event price predictions stochastic was made based on
our intuitive sense of the time vs  accuracy tradeoffs in roxybots optimization module  and
hence warrants further study 
   we provide details here  because corresponding details for the other agents do not seem to be publicly
available 

   

figreenwald  lee    naroditskiy

algorithm   flight prediction c  d  t  yt     qt  
for all z   c  c              d  do
 a  b    getrange c  t  z 
if yt     a  b  then
 
p  yt     z    ba
else
p  yt     z     
end if
qt    z    p  yt     z qt  z 
end for update probabilities 
for all z   c  c              d  do
t    z 
pt    z    p  q


z qt    z   dz
end for normalize probabilities 
return pt    probabilities 
algorithm   expected minimum price c  t  t   pt   pt  
for all z  r do
min z     
for    t              t do
 a  b    getrange c    z 
   ba
   expected perturbation 
p   p       perturb price 
p   max      min      p   
if p   min z  then
min z    p
end if
end for
end forp
return z pt  z  min z  dz
    hotels
in a competitive market where each individuals effect on prices is negligible  equilibrium prices are prices at which supply equals demand  assuming all producers are profitmaximizing and all consumers are utility maximizing  roxybot    predicts hotel prices by
simulating simultaneous ascending auctions  simaa   cramton         in an attempt to
approximate competitive equilibrium  ce  prices  this approach is inspired by walverines  cheng et al          where the tatonnement method  walras        is used for the
same purpose 
      simultaneous ascending auctions
let p  denote a vector of prices  if  y   
p  denotes the cumulative supply of all producers  and
if  x  
p  denotes the cumulative demand of all consumers  then  z  
p     x  
p  y   
p  denotes the

   

firoxybot   

excess demand in the market  the tatonnement process adjusts the price vector at iteration
n      given the price vector at iteration n and an adjustment rate n as follows  p n    
p n   n z  
pn    simaa adjusts the price vector as follows  p n     p n    max  z  
pn        for
some fixed value of   both of these processes continue until excess demand is non positive 
i e   supply exceeds demand 
although competitive equilibrium prices are not guaranteed to exist in tac markets  cheng et al          the simaa adjustment process  is still guaranteed to converge 
as prices increase  demand decreases while supply increases  hence  supply eventually exceeds demand  the only parameter to the simaa method is the magnitude  of the price
adjustment  the smaller this value  the more accurate the approximation  assuming ce
prices exist   so the value of  can be chosen to be the lowest value that time permits 
the tatonnement process  on the other hand  is more difficult to apply as it is not
guaranteed to converge  the walverine team dealt with the convergence issue by decaying
an initial value of   however  careful optimization was required to ensure convergence to
a reasonable solution in a reasonable amount of time  in fact  walverine found it helpful
to set initial prices to certain non zero values  this complexity is not present when using
simultaneous ascending auctions to approximate competitive equilibrium prices 
      prediction quality
in tac  cumulative supply is fixed  hence  the key to computing excess demand is to
compute cumulative demand  each tac agent knows the preferences of its own clients  but
must estimate the demand of the others  walverine computes a single hotel price prediction  a
point estimate  by considering its own clients demands together with those of    expected
clients  briefly  the utility of an expected client is an average across travel dates and hotel
types augmented with fixed entertainment bonuses that favor longer trips  see the paper
by cheng et al         for details   in contrast  roxybot    builds a stochastic model of
hotel prices consisting of s scenarios by considering its own clients demands together with
s random samples of    clients  a  random or expected  clients demand is simply the
quantity of each good in its optimal package  given current prices  the cumulative demand
is the sum total of all clients individual demands 
in figure    we present two scatter plots that depict the quality of various hotel price
predictions at the beginning of the tac      final games  all price predictions are evaluated using two metrics  euclidean distance and the expected value of perfect prediction
 evpp   euclidean distance is a measure of the difference between two vectors  in this case
the actual and the predicted prices  the value of perfect prediction  vpp  for a client is the
difference between its surplus  value of its preferred package less price  based on actual and
predicted prices  evpp is the vpp averaged over the distribution of client preferences  
on the left  we plot the predictions generated using the competitive equilibrium ap 
proximation methods  tatonnement and simaa  both with fixed      
  making expected 
random  and exact predictions  the exact predictions are computed based on the actual
clients in the games  not just the client distribution  hence  they serve as a lower bound
on the performance of these techniques on this data set  under both metrics  and for both
expected and random  simaas predictions outperform tatonnements 
   see the paper by wellman et al         for details 

   

figreenwald  lee    naroditskiy

  

  
livingagents
packatac
southampton
roxybot umbctac
whitebear
sics baseline
attac

expected value of perfect prediction

expected value of perfect prediction

  
tatonnement  random

  

simaa  random
  

tatonnement  expected
  

  

simaa  expected

simaa  exact
tatonnement  exact

  
  
  
harami

cuhk

  
kavayah

simaa  random

  
walverine
  

  
   

   

   

   

   

  
   

   

euclidean distance

attac  
   

   

   

   

   

   

   

   

euclidean distance

figure    evpp and euclidean distance for the ce price prediction methods  tatonnement
 
  expected  random  and exact  and the tac      agents
and simaa with      
predictions in the      finals     games   the plot on the left shows that simaas
predictions are better than tatonnements and that expecteds are better than
randoms  roxybot   s method of hotel price prediction  simaa  random  is
plotted again on the right  note the differences in scales between the two plots 

since  is fixed  and tatonnement is not guaranteed to converge under this condition 
this outcome is not entirely surprising  what is interesting  though  is that simaa expected
performs comparably to walverine  see the right plot    this is interesting because simaa
has fewer parameter settings than tatonnementonly a single  value as compared to
an initial  value together with a decay scheduleand moreover  we did not optimize
its parameter setting  walverines parameter settings  on the other hand  were highly
optimized 
we interpret each prediction generated using randomly sampled clients as a sample
scenario  so that a set of such scenarios represents draws from a probability distribution
over ce prices  the corresponding vector of predicted prices that is evaluated is actually
the average of multiple      such predictions  that is  we evaluate an estimate of the mean
of this probability distribution  the predictions generated using sets of random clients are
not as good as the predictions with expected clients  see figure   left   although with more
than    sets of random clients  the results might improve  still  the predictions with random
clients comprise roxybot   s stochastic model of hotel prices  which is key to its bidding
strategy  moreover  using random clients helps roxybot    make better interim predictions
later in the game as we explain next 
      prediction quality over time  interim price prediction
the graphs depicted in figure   pertain to hotel price predictions made at the beginning of
the game  when all hotel auctions are open  in those ce computations  prices are initialized
to    as hotel auctions close  roxybot    updates the predicted prices of the hotel auctions
   with the exception of the roxybot    data point  i e   simaa random   this plot was produced by the
walverine team  wellman et al         

   

fi  

   

tatonnement  expected clients
simaa  expected clients
tatonnement  random clients
simaa  random clients
tatonnement  random clients  with distribution
simaa  random clients  with distribution

  
  
  

tatonnement  expected clients
simaa  expected clients
tatonnement  random clients
simaa  random clients
tatonnement  random clients  with distribution
simaa  random clients  with distribution

   
euclidean distance per hotel

expected value of perfect prediction per hotel

roxybot   

  
  
  
 
 
 

   
  
  
  
  

 
 

 
 

 

 

 

 

 

 

 

 

minute

 

 

 

 

 

 

 

minute

figure    evpp and euclidean distance in tac      finals      games  of the ce price
prediction methods with and without distribution as the game progresses  distribution improves prediction quality 

that remain open  we experimented with two ways of constructing interim price predictions 
the first is to initialize and lower bound the prices in the hotel markets at their closing
 for closed auctions  or current ask  for open auctions  prices while computing competitive
equilibrium prices   the second differs in its treatment of closed auctions  we simulate a
process of distributing the goods in the closed auctions to the clients who want them most 
and then exclude the closed markets  i e   fix prices at   from further computations of
competitive equilibrium prices 
regarding the second methodthe distribution methodwe determine how to distribute goods by computing competitive equilibrium prices again  as explained in algorithm    all hotels  in both open and closed auctions  are distributed to random clients
by determining who is willing to pay the competitive equilibrium prices for what  it is not
immediately obvious how to distribute goods to expected clients  hence  we enhanced only
the prediction methods with random clients with distribution 
figure    which depicts prediction quality over time  shows that the prediction methods
enhanced with distribution are better than the predictions obtained by merely initializing
the prices of closed hotel auctions at their closing prices  hotels that close early tend to
sell for less than hotels that close late  hence  the prediction quality of any method that
makes decent initial predictions is bound to deteriorate if those predictions remain relatively
constant throughout the game 
      run time
table   shows the run times of the ce prediction methods on the tac          games 
and tac           games  finals data set at minute    as well as their run times during
   at first blush  it may seem more sensible to fix the prices of closed hotels at their closing prices  rather
than merely lower bound them  i e   allow them to increase   if some hotel closed at an artificially low
price  however  and if that price were not permitted to increase  then the predicted prices of the hotels
complementing the hotel in question would be artificially high 

   

figreenwald  lee    naroditskiy

algorithm   distribute
   for all hotel auctions h do
  
initialize price to  
  
initialize supply to   
   end for
   compute competitive equilibrium prices  tatonnement or simaa 
   for all closed hotel auctions h do
  
distribute units of h to those who demand them at the computed competitive equilibrium prices
  
distribute any leftover units of h uniformly at random
   end for
minutes    on the tac      finals data set  what the numbers in this table convey is
that simaas run time  even with distribution  is reasonable  for example  at minute   
simaa sample takes on the order of     seconds  at minutes      this method without
distribution runs even faster  this speed increase occurs because ce prices are bounded
below by current ask prices and above by the maximum price a client is willing to pay for
a hotel  and current ask prices increase over time  correspondingly reducing the size of the
search space  simaa sample with distribution at minutes     takes twice as long as simaa
sample without distribution at minute   because of the time it takes to distribute goods  but
the run time is still only  roughly      seconds  our implementation of tatonnement runs
so slowly because we fixed  instead of optimizing the tradeoff between convergence rate
and accuracy  so the process did not converge  and instead ran for the maximum number
of iterations           in summary  simaa is simpler than tatonnement to implement  yet
performs comparably to an optimized version of tatonnement  i e   walverine   and runs
sufficiently fast 

      minute  
      minute  
      average   

exp tat
    
    
    

exp simaa
   
   
   

sam tat
    
    
    

sam simaa
   
   
  

dist tat

    
    

dist simaa

   
   

table    run times for the ce price prediction methods  in milliseconds  experiments were
run on amd athlon tm     bit       dual core processors with  m of ram 

      summary
the simulation methods discussed in this sectionthe tatonnement process and simultaneous ascending auctionswere employed to predict hotel prices only   in our simulations 
flight prices are fixed at their expected minima  and entertainment prices are fixed at     
in principle  competitive equilibrium  ce  prices could serve as predictions in all tac markets  however  ce prices are unlikely to be good predictors of flight prices  since flight
prices are determined exogenously  with regard to entertainment tickets  ce prices might
   

firoxybot   

have predictive power  however  incorporating entertainment tickets into the tatonnement
and simaa calculations would have been expensive   in our simulations  following wellman et al         client utilities are simply augmented with fixed entertainment bonuses
that favor longer trips   nonetheless  in future work  it could be of interest to evaluate the
success of these or related methods in predicting cda clearing prices 
finally  we note that we refer to our methods of computing excess demand as clientbased because we compute the demands of each client on an individual basis  in contrast 
one could employ an agent based method  whereby the demands of agents  not clients 
would be calculated  determining an agents demands involves solving so called completion  a deterministic  prices are known  optimization problem at the heart of roxybot   s
architecture  greenwald   boyan         as tac completion is np hard  the agent based
method of predicting hotel prices is too expensive to be included in roxybot   s inner
loop  in designing roxybot     we reasoned that an architecture based on a stochastic pricing model generated using the client based method and randomly sampled clients would
outperform one based on a point estimate pricing model generated using the agent based
method and some form of expected clients  but we did not verify our reasoning empirically 
    entertainment
during each bid interval  roxybot    predicts current and future buy and sell prices for tickets
to all entertainment events  these price predictions are optimistic  the agent assumes it
can buy  or sell  goods at the least  or most  expensive prices that it expects to see before
the end of the game  more specifically  each current price prediction is the best predicted
price during the current bid interval 
roxybot   s estimates of entertainment ticket prices are based on historical data from
the past    games  to generate a scenario  a sample game is drawn at random from this
collection  and the sequences of entertainment bid  ask  and transaction prices are extracted 
given such a history  for each auction a  let trade ai denote the price at which the last trade
before time i transacted  this value is initialized to     for buying and   for selling  in
addition  let bid ai denote the bid price at time i  and let ask ai denote the ask price at time
i 
roxybot    predicts the future buy price in auction a after time t as follows 
future buy at  

min

i t       t

min trade ai   ask ai  

   

in words  the future buy price at each time i   t              t is the minimum of the ask price
after time i and the most recent trade price  the future buy price at time t is the minimum
across the future buy prices at all later times  the future sell price after time t is predicted
analogously 
   
future sell at   max max trade ai   bid ai  
i t       t

arguably  roxybot   s entertainment predictions are made in the simplest possible way 
past data are future predictions  it is likely one could improve upon this naive approach by
using a generalization technique capable of learning a distribution over these data  and
then sampling from the learned distribution 

   

figreenwald  lee    naroditskiy

    summary
in this section  we described roxybot   s price prediction methods  the key ideas  which
may be transferable if not beyond tac  at least to other tac agents  are as follows 
   roxybot makes stochastic price predictions  it does so by generating a set of so called
scenarios  where each scenario is a vector of future prices 
   for each flight  roxybot uses bayesian updating to predict its expected minimum price 
   for hotels  roxybot uses a method inspired by walverines  it approximates competitive
equilibrium prices by simulating simultaneous ascending auctions  rather than the
usual tatonnement process 

   optimization
next  we characterize roxybot   s optimization routine  it is  i  stochastic   ii  global  and
 iii  dynamic  it takes as input stochastic price predictions  it considers its flight  hotel 
and entertainment bidding decisions in unison  and it simultaneously reasons about bids to
be placed in both current and future stages of the game 
    abstract auction model
recall that our treatment of bidding is decision theoretic  rather than game theoretic  in
particular  we focus on a single agents problem of optimizing its own bidding behavior  assuming the other agents strategies are fixed  in keeping with our basic agent architecture 
we further assume that the environment can be modeled in terms of the agents predictions
about market clearing prices  we introduce the term pseudo auction to refer to a market
mechanism defined by these two assumptionsfixed other agent behaviors and market information encapsulated by prices  the optimization problem that roxybot solves is one of
bidding in pseudo auctions  not  true  auctions  in this section  we formally develop this
abstract auction model and relate it to tac auctions  in the next  we define and propose
heuristics to solve various pseudo auction bidding problems 
      basic formalism
in this section  we formalize the basic concepts needed to precisely formulate bidding under uncertainty as an optimization problem  including  packagessets of goods  possibly
multiple units of each  a function that describes how much the agent values each package  pricelinesdata structures in which to store the prices of each unit of each good  and
bidspairs of vectors corresponding to buy and sell offers 
packages let g denote an ordered set of n distinct goods and let n  nn represent the
multiset of these goods in the marketplace  with ng denoting the number of units of each
good g  g  a package m is a collection of goods  that is  a submultiset of n   we write
m  n whenever mg  ng for all g  g 
it is instructive to interpret this notation in the tac domain  the flights  hotel rooms 
and entertainment events up for auction in tac comprise an ordered set of    distinct

   

firoxybot   

goods  in principle  the multiset of goods in the tac marketplace is 
n tac   h                                        i  n  
   z      z      z  
  flights

  hotels

   events

in practice  however  since each agent works to satisfy the preferences of only eight clients 
it suffices to consider the multiset of goods 
n tac    h                                       i  n tac
   z      z      z  
  flights

  hotels

   events

a trip corresponds to a package  specifically some m  n tac  that satisfies the tac
feasibility constraints 
given a  b  n   we rely on the two basic operations   and   defined as follows  for
all g  g 
 a  b g  ag   bg
 a  b g  ag  bg
for example  if g          and n   h       i  then a   h       i  n and b   h       i 
n   moreover   a  b        a  b       and  a  b       and  a  b      
 a  b       and  a  b      
value let n denote the set of all submultisets of n   i e   packages comprised of the goods
in n   we denote v   n  r a function that describes the value the bidding agent attributes
to each viable package 
in tac  each agents objective is to compile packages for m     individual clients  as
such  the agents value function takes special form  each client c is characterized by its own
value function vc   n  r  and the agents value for a collection of packages is the sum of its
     x            xm   
clients respective values for those packages  given a vector of packages x
   
v x 

m
x

vc  xc   

   

c  

n

pricelines a buyer priceline for good g is a vector p g  r g   where the kth component 
pgk   stores the marginal cost to the agent of acquiring the kth unit of good g  for example 
if an agent currently holds four units of a good g  and if four additional units of g are
available at costs of                and       then the corresponding buyer priceline  a
vector of length    is given by p g   h                           i  the leading zeros indicate
that the four goods the agent holds may be acquired at no cost 
we assume buyer pricelines are nondecreasing  note that this assumption is wlog 
since an optimizing agent buys cheaper goods before more expensive ones 
given a set of buyer pricelines p     
pg   g  g   we define costs additively  that is  the
cost of the goods in multiset y  n is given by 
g 

costg  y  p    

yg
x

pgk  

x

costg  y  p   

k  

cost y  p    

gg

   

   

figreenwald  lee    naroditskiy

n

a seller priceline for good g is a vector  g  r g   much like a buyer priceline  the kth
component of a seller priceline for g stores the marginal revenue that an agent could earn
from the kth unit it sells  for example  if the market demands four units of good g  which
can be sold at prices of                and     then the corresponding seller priceline is given
by  g   h                         i  analogously to buyer pricelines  the tail of zero revenues
indicates that the market demands only four of those units 
we assume seller pricelines are nonincreasing  note that this assumption is wlog 
since an optimizing agent sells more expensive goods before cheaper ones 
given a set of seller pricelines      g   g  g   we define revenue additively  that is 
the revenue associated with multiset z  n is given by 
g 

revenueg  z     

zg
x

gk  

x

revenueg  z    

   

k  

revenue z     

    

gg

if a priceline is constant  we say that prices are linear  we refer to the constant value
as a unit price  with linear prices  the cost of acquiring k units of good g is k times the
unit price of good g 
bids an agent submits a bid  expressing offers to buy or sell various units of the goods
in the marketplace  we divide  into two components h b   ai  where for each good g the bid
consists of a buy offer   bg   hbg            bgng i  and a sell offer   ag   hag            agng i  the bid
price bgk  r   resp  agk  r    represents an offer to buy  sell  the kth unit of good g at
that price 
by definition  the agent cannot buy  sell  the kth unit unless it also buys  sells  units
           k     to accommodate this fact  we impose the following constraint  buy offers must
be nonincreasing in k  and sell offers nondecreasing  in addition  an agent may not offer to
sell a good for less than the price at which it is willing to buy that good  i e   bg    ag   
otherwise  it would simultaneously buy and sell good g  we refer to these restrictions as
bid monotonicity constraints 
      pseudo auction rules
equipped with this formalism  we can specify the rules that govern pseudo auctions  as
in a true auction  the outcome of a pseudo auction dictates the quantity of each good to
exchange  and at what prices  conditional on the agents bid  the quantity issue is resolved
by the winner determination rule whereas the price issue is resolved by the payment rule 
definition      pseudo auction winner determination rule  given buyer and seller pricelines p and   and bid    h b   ai  the agent buys the multiset of goods buy   p   and sells
the multiset of goods sell      where
buyg    p     max k such that bgk  pgk
k

sellg        max k such that agk  gk
k

   

firoxybot   

note that the monotonicity restrictions on bids ensure that the agents offer is better than
or equal to the price for every unit it exchanges  and that the agent does not simultaneously
buy and sell any good 
there are at least two alternative payment rules an agent may face  in a first price
pseudo auction  the agent pays its bid price  for buy offers  or is paid its bid price for sell
offers  for each good it wins  in a second price pseudo auction  the agent pays  or is paid  the
prevailing prices  as specified by the realized buyer and seller pricelines  this terminology
derives by analogy from the standard first  and second price sealed bid auctions  krishna 
      vickrey         in these mechanisms  the high bidder for a single item pays its bid  the
first price   or the highest losing bid  the second price   respectively  the salient property
is that in first price pseudo auctions  the price is set by the bid of the winner  whereas in
second price pseudo auctions an agents bid price determines whether or not it wins but
not the price it pays 
in this paper  we focus on the second price model  that is  our basic problem definitions
presume second price auctions  however  our bidding heuristics are not tailored to this
case  as in true auctions  adopting the second price model in pseudo auctions simplifies the
problem for the bidder  it also provides a reasonable approximation to the situation faced
by tac agents  as we now argue 
 in tac entertainment auctions  agents submit bids  i e   buy and sell offers  of the
form specified above  if we interpret an agents buyer and seller pricelines as the
current order book  not including the agents own bid   then the agents immediate winnings are as determined by the winner determination rule  and payments are
according to the second price rule  i e   the order book prices prevail  
 in tac hotel auctions  only buy bids are allowed  assuming once again an order
book that reflects all outstanding bids other than the agents own  an accurate buyer
priceline would indicate that the agent can win k units of a good if it paysfor all
k unitsa price just above the      k th existing  other agent  offer  the actual
price it pays will be that of the   th highest unit offer  including its own offer   since
the agents own bid may affect the price   this situation lies between the first  and
second price characterizations of pseudo auctions described above 
 in tac flight auctions  agents may buy any number of units at the posted price  the
situation at any given time is modeled exactly by the second price pseudo auction
abstraction 
    bidding problems
we are now ready to discuss the optimization module repeatedly employed by roxybot   
within its bidding cycle to construct its bids  the key bidding decisions are  what goods to
bid on  at what price  and when 
   it can do so in two ways  first  the agent may submit the   th highest unit offer  in which case it sets
the price  second  when it bids for multiple units  the number it wins determines the price setting unit 
thus affecting the price for all winning units  note that this second effect would be present even if the
auction cleared at the   th highest price 

   

figreenwald  lee    naroditskiy

although roxybot technically faces an n stage stochastic optimization problem  it solves
this problem by collapsing those n stages into only two relevant stages  current and
future  necessitating only one stochastic model of future prices  current prices are known  
this simplification is achieved by ignoring the potentially useful information that hotel
auctions close one by one in a random  unspecified order  and instead operating  like most
tac agents  under the assumption that all hotel auctions close at the end of the current
stage  hence  there is only one model of hotel prices  a stochastic model of future prices 
moreover  the only pressing decisions regarding hotels are what goods to bid on now and
at what price  there is no need to reason about the timing of hotel bid placement 
in contrast  since flight and entertainment auctions clear continuously  a trading agent
should reason about the relevant tradeoffs in timing its placement of bids on these goods 
still  under the assumption that all hotel auctions close at the end of the current stage 
in future stages  hotel prices  and hence hotel winnings  are known  so the only remaining
decisions are what flight and entertainment tickets to buy  a rational agent will time its
bids in these markets to capitalize on the best prices   the best prices are the minima for
buying and the maxima for selling   hence  it suffices for an agents model of future prices
in these markets to predict only the best prices  conditioned on current prices   that is  it
suffices to consider only one stochastic pricing model  no further information is necessary 
having established that it suffices for roxybot to pose and solve a two stage  rather than
an n stage  stochastic optimization problem  we now proceed to define an abstract series
of such problems that is designed to capture the essence of bidding under uncertainty in
tac like hybrid markets that incorporate aspects of simultaneous and sequential  one shot
and continuously clearing  auctions  more specifically  we formulate these problems as twostage stochastic programs with integer recourse  see the book by birge   louveaux       
for an introduction to stochastic programming  
in a two stage stochastic program  there are two decision making stages  and hence two
sets of variables  first  and second stage variables  the objective is to maximize the sum of
the first stage objectives  which depend only on the first stage variables  and the expected
value of the ensuing second stage objectives  which can depend on both the first  and secondstage variables   the objective value in the second stage is called the recourse value  and if
any of the second stage variables are integer valued  then the stochastic program is said to
have integer recourse 
at a high level  the bidding problem can be formulated as a two stage stochastic program
as follows  in the first stage  when current prices are known but future prices are uncertain 
bids are selected  in the second stage  all uncertainty is resolved  and goods are exchanged 
the objective is to maximize the expected value of the second stage objective  namely the
sum of the inherent value of final holdings and any profits earned  less any first stage costs 
since the second stage involves integer valued decisions  the bidder decides what goods to
buy and sell at known prices   the bidding problem is one with integer recourse 
in this section  we formulate a series of bidding problems as two stage stochastic programs with integer recourse  each one tailored to a different type of auction mechanism 
illustrating a different type of bidding decision  the mechanisms we study  inspired by
tac  are one shot and continuously clearing variants of second price pseudo auctions  in
the former  bids can only be placed in the first stage  in the latter  there is an opportunity

   

firoxybot   

for recourse  ultimately  we combine all decision problems into one unified problem that
captures what we mean by bidding under uncertainty 
in our formal problem statements  we rely on the following notation 
 variables 
 q  is a multiset of goods to buy now
 q  is a multiset of goods to buy later
 r  is a multiset of goods to sell now
 r  is a multiset of goods to sell later
 constants 
 p   is a set of current buyer pricelines
 p   is a set of future buyer pricelines
   is a set of current seller pricelines
   is a set of future seller pricelines
note that p   and   are always known  whereas p   and   are uncertain in the first stage
but their uncertainty is resolved in the second stage 
flight bidding problem an agents task in bidding in flight auctions is to decide how
many flights to buy now at current prices and later at the lowest future prices  given  known 
current prices and a stochastic model of future prices  although in tac all units of each
flight sell for the same price at any one time  we state the flight bidding problem more
generally  we allow for different prices for different units of the same flight 
definition      continuously clearing  buying  given a set of current buyer pricelines p  
and a probability distribution f over future buyer pricelines p    
flt f     max
ep   f
 
n
q z




max
v q   q     cost q    p       cost q   q    p      cost q    p    
 
n

q z



    

note that there are two cost terms referring to future pricelines  cost   p       the first of
these terms adds the total cost of the goods bought in the first and second stages  the
second term subtracts the cost of the goods bought in just the first stage  this construction
ensures that  if an agent buys k units of a good now  any later purchases of that good incur
the charges of units  k      k           in the goods future priceline 
entertainment bidding problem abstractly  the entertainment buying problem is the
same as the flight bidding problem  an agent must decide how many entertainment tickets
to buy now at current prices and later at the lowest future prices  the entertainment selling
problem is the opposite of this buying problem  an agent must decide how many tickets to
sell now at current prices and later at the highest future prices 

   

figreenwald  lee    naroditskiy

definition      continuously clearing  buying and selling  given a set of current buyer
and seller pricelines  p     and a probability distribution f over future buyer and seller
pricelines  p      

ent f     max e p    f
max v  q   q      r   r    
q   r  zn
q   r  zn

 cost q    p       cost q   q    p      cost q    p    

  revenue r          revenue r   r         revenue r       
    

subject to q   r  and q   q   r   r    for all  p      

the constraints ensure that an agent does not sell more units of any good than it buys 
hotel bidding problem hotel auctions close at fixed times  but in an unknown order 
hence  during each iteration of an agents bidding cycle  one shot auctions approximate
these auctions well  unlike in the continuous setup  where decisions are made in both the
first and second stages  in the one shot setup  bids can only be placed in the first stage  in
the second stage  winnings are determined and evaluated 
definition      one shot  buying  given a probability distribution f over future buyer
pricelines p    


    
hot f     max ep   f v buy      p       cost buy      p      p    
    h b  i

hotel bidding problem  with selling although it is not possible for agents to sell
tac hotel auctions  one could imagine an analogous auction setup in which it were possible
to sell goods as well as buy them 
definition      one shot  buying and selling  given a probability distribution f over
future buyer and seller pricelines  p      


max e p    f v buy      p      sell            cost buy      p      p       revenue sell              

    h b  
ai

    

 

 

 

 

 

subject to buy    p    sell        for all  p     

bidding problem finally  we present  a slight generalization of  the tac bidding problem by combining the four previous stochastic optimization problems into one  this abstract
problem models bidding to buy and sell goods both via continuously clearing and one shot
second price pseudo auctions  as follows 
definition      bidding under uncertainty  given a set of current buyer and seller pricelines  p     and a probability distribution f over future buyer and seller pricelines  p      
bid f    
max

q   r  zn      h b  
ai

e p    f



max

q   r  zn

v  q   q      r   r     buy      p      sell      p     


 cost q    p       cost q   q    p      cost q    p       cost buy      p      p    


  revenue r          revenue r   r         revenue r          revenue sell              
    
   

firoxybot   

subject to q   r  and q   q   r   r  and buy      p      sell           for all  p      

once again  this bidding problem is  i  stochastic  it takes as input a stochastic model
of future prices   ii  global  it seamlessly integrates flight  hotel  and entertainment bidding
decisions  and  iii  dynamic  it facilitates simultaneous reasoning about current and future
stages of the game 
next  we describe various heuristic approaches to solving the problem of bidding under
uncertainty 
    bidding heuristics
in this section  we discuss two heuristic solutions to the bidding problem  specifically 
the expected value method  evm   an approach that collapses stochastic information  and
sample average approximation  saa   an approach that exploits stochastic information and
characterizes roxybot    
      expected value method
the expected value method  birge   louveaux        is a standard way of approximating
the solution to a stochastic optimization problem  first  the given distribution is collapsed
into a point estimate  e g   the mean   then  a solution to the corresponding deterministic optimization problem is output as an approximate solution to the original stochastic
optimization problem  applying this idea to the problem of bidding under uncertainty
yields 
definition      expected value method  given a probability distribution f over buyer
and seller pricelines  with expected values p   and     respectively 
bid evm p          
max

q   r  zn      h b  
ai q   r  zn

v  q   q      r   r      buy      p      sell      p     


 cost q    p       cost q   q    p      cost q    p       cost buy      p      p    


  revenue r          revenue r   r         revenue r          revenue sell              
    
subject to q   r  and q   q   r   r   

in practice  without full knowledge of the distribution f   we cannot implement the
expected value method  in particular  we cannot compute p   or   so we cannot solve
bid evm p         exactly  we can  however  solve an approximation of this problem in
which the expected buyer and seller pricelines p   and   are replaced by an average scenario
 p          i e   average buyer and seller pricelines   defined as follows 
p    

s
 x  
pi  
s

   

i  

s
 x  
i  
s
i  

   

figreenwald  lee    naroditskiy

algorithm   evm g  n  f  s 
   sample s scenarios  p                 p    s  f
p

ps
s
 
  
     bid evm

p
i   i
i   i
   return 
      sample average approximation
like the expected value method  sample average approximation is an intuitive way of approximating the solution to a stochastic optimization problem  the idea is simple   i  generate
a set of sample scenarios  and  ii  solve an approximation of the problem that incorporates
only the sample scenarios  applying the saa heuristic  see algorithm    involves solving
the following approximation of the bidding problem 
definition      sample average approximation  given a set of s scenarios 
 p                 p    s  f  
bid saa  p                 p    s    
max

s
x

max

v  q   q      r   r      buy      pi     sell      pi    

 
 
n
q   r  zn      h b  
ai i   q  r z
 
 
 


 cost q   p     cost q  q    pi     cost q    pi      cost buy      pi     pi   


  revenue r          revenue r   r     i    revenue r     i     revenue sell       i     i  
    
subject to q   r  and q   q   r   r   

algorithm   saa g  n  f  s 
   sample s scenarios  p                 p    s  f
     bid saa  p                 p    s  
   return 
using the theory of large deviations  ahmed and shapiro        establish the following
result  as s    the probability that an optimal solution to the sample average approximation of a stochastic program with integer recourse is an optimal solution to the original
stochastic optimization problem approaches   exponentially fast  given hard time and space
constraints  however  it is not always possible to sample sufficiently many scenarios to infer
any reasonable guarantees about the quality of a solution to a sample average approximation  hence  we propose a modified saa heuristic  in which saa is fed some tailor made
important scenarios  and we apply this idea to the bidding problem 
      modified sample average approximation
the bids that saa places are sample prices that appear in its scenarios  saa never bids
higher on any good than its highest sampled price  because as far as it knows  bidding that
price is enough to win that good in all scenarios  however  there is some chance that the
   

firoxybot   

highest sampled price falls below the clearing price  let us compute this probability in the
case of a single unit auction  or a uniform price multi unit auction  i e   one in which all
units of the good being auctioned off clear at the same price 
let f denote the cumulative distribution function over the predicted prices  let f denote
the corresponding density function  and let g denote the cumulative distribution function
over the clearing prices  using this notation  the term    g x  is the probability the
clearing price is greater than x  further  let x be a random variable that represents
the highest value among s sample price predictions  then p  x  x    f  x s is the
probability that all s samples  and hence the highest among them  are less than x  and
p  x   x     f  x s     s f  x  s  f  x  is the probability that the highest value among
the s samples equals x  putting these two terms togethernamely  the probability the
highest sample price prediction is exactly x  and the probability the clearing price is greater
than xwe can express the probability the highest of saas sample price predictions is less
than the clearing price as follows 
z 

s f  x  s  f  x     g x  dx
    



assuming perfect prediction  so that g   f    this complex expression simplies as follows 
z 
s f  x  s  f  x     f  x  dx

z 
z 
s 
 f  x  s f  x dx
 f  x  
f  x dx  s
  s






 f  x  s 
 f  x  s   
  s
s
s
s  


 
 
s  
hence  the probability that all saas sample price predictions are less than the clearing
price is    s       in particular  assuming perfect prediction and that the clearing prices in
the tac hotel auctions are independent  the probability that an saa agent with    scenarios
bidding in tac travel has any chance of winning all eight hotels  i e   the probability that
a sample price in at least one of its scenarios is greater than the clearing price  is only
 

 
              
       
to remedy this situation  we designed and implemented a simple variant of saa in
roxybot     the saa  heuristic  see algorithm    is a close cousin of saa  the only difference
arising in their respective scenario sets 
p whereas saa samples s scenarios  saa  samples
only s   n   scenarios  where  n     g ng   saa  creates an additional  n   scenarios as
follows  for each unit k of each good g  g  it sets the price of the kth unit of good g to the
upper limit of its range of possible prices and  after conditioning on this price setting  it sets
the prices of the other goods to their mean values  next  we describe experiments with a
test suite of bidding heuristics  including saa and saa   in a controlled testing environment 

   

figreenwald  lee    naroditskiy

algorithm   saa g  n  f  s 
require  s   n  
   hard code  n   scenarios  p                 p     n  
   sample s   n   scenarios  p     n                p    s  f
     bid saa  p                 p    s  
   return 
agent
smu
amu

predictions
average scenario
s scenarios

tmu
be
tmu 

average scenario
s scenarios
average scenario

be 

s scenarios

bids
marginal utilities
calculates marginal utilities in each scenario
bids average marginal utilities across scenarios
marginal utilities
best of s tmu solutions
marginal utilities  assuming only goods
in a target set are available
best of s tmu solutions

on
all goods
all goods
goods in a target set
goods in a target set
goods in a target set
goods in a target set

table    marginal utility based agents  the marginal utility of a good is defined as the
incremental utility that can be achieved by winning that good  relative to the
utility of the set of goods already held 

    summary
in this section  we developed a series of bidding problems  and heuristics solutions to those
problems  that captures the essence of bidding in the one shot and continuously clearing
auctions that characterize tac  the bulk of our presentation was deliberately abstract  so
as to suggest that our problems and their solutions are applicable well beyond the realm of
tac  e g   to bidding for interdependent goods in separate ebay auctions  still  it remains
to validate our approach in other application domains 

   experiments
we close this paper with two sets of experimental results  the first in a controlled testing
environment  and the second the results from the final round of the      tac travel competition  the combined strategy of hotel price prediction via simaa and bid optimization
via saa emerged victorious in both settings 
    controlled experiments
to some extent at least  our approach to bidding has been validated by the success of
roxybot    in tac     nonetheless  we ran simulations in a controlled testing environment
to further validate our approach  these results are reported by lee        and greenwald et
al          but we summarize them here as well 

   

firoxybot   

we built a test suite of agents  all of which predict using roxybot   s simaa random
mechanism with distribution  the agents differ in their bidding strategies  the possibilities
include saa   saa   and the six marginal utility based heuristics studied by wellman et
al          and summarized in table   
our experiments were conducted in a tac travel like setting  modified to remove any
aspects of the game that would obscure a controlled study of bidding  specifically  we
eliminated flight and entertainment trading  and endowed all agents with eight flights in
and eight flights out on each day  further  we assumed all hotels closed after one round
of bidding  i e   hotel auctions are one shot  so that the ensuing bid optimization problem
adheres to definition      
we designed two sets of experiments  one decision theoretic and one game theoretic  in
the former  hotel clearing prices are the outcome of a simulation of simultaneous ascending
auctions  but depend on the actual clients in each game  not a random sampling   our
simulator is more informed than the individual agents   in the latter  hotel clearing prices
are determined by the bids the agents submit using the same mechanism as in tac travel 
the clearing price is the   th highest bid  or zero  if fewer than    bids are submitted  
we first ran experiments with   agents per game  but found that hotel prices were
often zero  i e   there was insufficient competition  we then changed the setup to include a
random number of agents drawn from a binomial distribution with n      and p        with
the requisite number of agents sampled uniformly with replacement from the set of possible
agents  the agents first sample the number of competitors from the binomial distribution 
and then generate scenarios assuming the sampled number of competitors 
because of the game theoretic nature of tac  an individual agents performance can
depend heavily on the other agents included in the agent pool  in our experiments  we
attempted to mitigate any artificial effects of the specific agents we chose to include in
our pool by sampling agents from the pool to play each game  with replacement  thus 
an agents average score from the games is a measure of the agents performance against
various combinations of opponents 
in figures   a  and   b   we plot the mean scores obtained by each agent type in each
setting  along with     confidence intervals  these averages were computed based on     
independent observations  obtained by playing      games  scores were averaged across
agent types in each game to account for any game dependencies  saab and saat  are
the best performing agents in the game theoretic experiments and among the best in the
decision theoretic setting 
    tac      competition results
table   lists the agents entered in tac    and table   summarizes the outcome  the
tac    finals comprised     games over three days  with the    games on the last day
weighted     times as much as the    over the first two days  on the first day of the finals 
roxybot finished third  behind mertacor and walverinethe top scorers in       as it happens 
roxybots optimization routine  which was designed for stochastic hotel and entertainment
   the particular implementation details explaining how roxybot    applied saa in the tac domain are
relegated to appendix a 
   saab is saa  and saat is a slight variant of saa   see the paper by greenwald et al         for
details 

   

figreenwald  lee    naroditskiy

 

    

    
score  thousands 

score  thousands 

   
    
   
    
   

   
    
   
    
   

    
    
   
   
saat saab

tmu

tmu 
be
agent

be 

amu

smu

 a  decision theoretic setting

saat saab

tmu

tmu 
be
agent

be 

amu

smu

 b  game theoretic setting

figure    mean scores and confidence intervals 

price predictions  was accidentally fed deterministic predictions  i e   point price estimates 
for entertainment  moreover  these predictions were fixed  rather than adapted based on
recent game history 
on days   and    roxybot ran properly  basing its bidding in all auctions on stochastic
information  moreover  the agent was upgraded after day   to bid on flights not just once 
but twice  during each minute  this enabled the agent to delay its bidding somewhat at
the end of a game for flights whose prices are decreasing  no doubt this minor modification
enabled roxybot to emerge victorious in       edging out walverine by a whisker  below the
integer precision reported in table    the actual margin was     a mere    parts in
         adjusting for control variates  ross        spreads the top two finishers a bit
further   
agent
   
kin agent
l agent
mertacor
roxybot
utta
walverine
whitedolphin

affiliation
swedish inst comp sci
u macau
carnegie mellon u
aristotle u thessaloniki
brown u
u tehran
u michigan
u southampton

reference
aurell et al       
sardinha et al       
toulis et al         kehagias et al       
greenwald et al                     lee et al       
cheng et al         wellman et al       
he   jennings        vetsikas   selman      

table    tac    participants 

    kevin lochner computed these adjustment factors using the method described by wellman et al        
ch     

   

firoxybot   

agent
roxybot
walverine
whitedolphin
   
mertacor
l agent
kin agent
utta

finals
    
    
    
    
    
    
    
    

adjustment factor
 
  
 
  
  
 
 
  

table    tac    final scores  with adjustment factors based on control variates 

mean scores  utilities  and costs  with     confidence intervals  for the last day of the
tac    finals     games  are plotted in figure   and detailed statistics are tabulated in
table    there is no single metric such as low hotel or flight costs that is responsible for
roxybots success  rather its success derives from the right balance of contradictory goals 
in particular  roxybot incurs high hotel and mid range flight costs while achieving mid range
trip penalty and high event profit   
let us compare roxybot with two closest rivals  walverine and whitedolphin  comparing to
walverine first  walverine bids lower prices  by     on fewer hotels     less   yet wins more      
and wastes less         it would appear that walverines hotel bidding strategy outperforms
roxybots  except that roxybot earns a higher hotel bonus     more   roxybot also gains an
advantage by spending    less on flights and earning    more in total entertainment profit 
a very different competition takes place between roxybot and whitedolphin  whitedolphin
bids lower prices      less  on more hotels  by     than roxybot  roxybot spends much more
      on hotels than whitedolphin but makes up for it by earning a higher hotel bonus  by
    and a lower trip penalty  by       it seems that whitedolphins strategy is to minimize
costs even if that means sacrificing utility 
    summary
as already noted  tac travel bidding  viewed as an optimization problem  is an n stage
decision problem  we solve this n stage decision problem as a sequence of   stage decision
problems  the controlled experiments reported in this section establish that our bidding
strategy  saa  is the best in our test suite in the setting for which it was designed  with
only   stages  the tac competition results establish that this strategy is also effective in
an n stage setting 

   collective behavior
the hotel price prediction techniques described in section     are designed to compute  or at
least approximate  competitive equilibrium prices without full knowledge of the client pop    an agent suffers trip penalties to the extent that it assigns its clients packages that differ from their
preferred 

   

figreenwald  lee    naroditskiy

  of hotel bids
average of hotel bids
  of hotels won
hotel costs
  of unused hotels
hotel bonus
trip penalty
flight costs
event profits
event bonus
total event profits
average utility
average cost
average score

rox
   
   
     
    
    
   
   
    
   
    
    
    
    
    

wal
  
   
     
    
    
   
   
    
  
    
    
    
    
    

whi
   
  
     
   
    
   
   
    
 
    
    
    
    
    

sic
  
   
     
    
    
   
   
    
  
    
    
    
    
    

mer
  
   
     
   
    
   
   
    
   
    
    
    
    
    

l a
  
  
     
   
    
   
   
    
   
    
    
    
    
    

kin
  
   
     
    
    
   
   
    
    
    
    
     
    
    

utt
  
   
    
   
    
   
   
    
  
   
   
    
    
    

table         finals  last day  tabulated statistics  we omit the first two days because
agents can vary across days  but cannot vary within  presumably  the entries on
the last day are the teams preferred versions of the agents 
     finals  last day

     finals  last day

     finals  last day

   

   

  

 

   
 

 
 
 

   

 

 

 

rox wal whi sic mer la kin utt
agent

cost  thousands 

utility  thousands 

score  thousands 

 

   
 
   
 
   

rox wal whi sic mer la kin utt
agent

 

rox wal whi sic mer la kin utt
agent

figure         finals  last day  mean scores  utilities  and costs  and     confidence
intervals 

ulation  in this section  we assume this knowledge and view the output of the tatonnement
and simaa calculations not as predictions but as ground truth  we compare the actual
prices in the final games to this ground truth in respective years since      to determine
whether tac market prices resemble ce prices  what we find is depicted in figure   
because of the nature of our methods  these calculations pertain to hotel prices only 
the results are highly correlated on both metrics  euclidean distance and evpp   we
observe that the accuracy of ce price calculations has varied from year to year      
was the year in which tac supply chain management  scm  was introduced  many
participants diverted their attention away from travel towards scm that year  perhaps
leading to degraded performance in travel  things seem to improve in      and       we

   

firoxybot   

cannot explain the setback in       except by noting that performance is highly dependent
on the particular agent pool  and in      there were fewer agents in that pool 
   

  

tatonnement  exact
simaa  exact
expected value of perfect prediction

   

euclidean distance

   
   
   
   
   
   
   
    

    

    
year

    

    

tatonnement  exact
simaa  expact

  

  

  

  

  
    

    

    
year

    

    

figure    a comparison of the actual  hotel  prices to the output of competitive equilibrium
price calculations in the final games since       the label exact means  full
knowledge of the client population 

   conclusion
the foremost aim of trading agent research is to develop a body of techniques for effective
design and analysis of trading agents  contributions to trading agent design include the
invention of trading strategies  together with models and algorithms for realizing their
computation and methods to measure and evaluate the performance of agents characterized
by those strategies  researchers seek both specific solutions to particular trading problems
and general principles to guide the development of trading agents across market scenarios 
this paper purports to contribute to this research agenda  we described the design and
implementation of roxybot     an able trading agent as demonstrated by its performance in
tac    
although automated trading in electronic markets has not yet fully taken hold  the
trend is well underway  through tac  the trading agent community is demonstrating the
potential for autonomous bidders to make pivotal trading decisions in a most effective way 
such agents offer the potential to accelerate the automation of trading more broadly  and
thus shape the future of commerce 

acknowledgments
this paper extends the work of lee et al          the material in section     is based on
the book by wellman et al          we are grateful to several anonymous reviewers whose
constructive criticisms enhanced the quality of this work  this research was supported by
nsf career grant  iis         

   

figreenwald  lee    naroditskiy

appendix a  tac bidding problem  saa
the problem of bidding in the simultaneous auctions that characterize tac can be formulated as a two stage stochastic program  in this appendix  we present the implementation
details of the integer linear program  ilp  encoded in roxybot    that approximates an
optimal solution to this stochastic program   
we formulate this ilp assuming current prices are known  and future prices are uncertain in the first stage but revealed in the second stage  note that whenever prices are
known  it suffices for an agent to make decisions about the quantity of each good to buy 
rather than about bid amounts  since choosing to bid an amount that is greater than or
equal to the price of a good is equivalent to a decision to buy that good 
unlike in the main body of the paper  this ilp formulation of bidding in tac assumes
linear prices  table   lists the price constants and decision variables for each auction type 
for hotels  the only decisions pertain to buy offers  for flights  the agent decides how many
tickets to buy now and how many to buy later  for entertainment events  the agent chooses
sell quantities as well as buy quantities 
hotels
bid now

price
yas

flights and events
buy now
buy later
events
sell now
sell later

variable  bid 
apq
price
ma
yas

price
na
zas

variable  qty 
a
as

variable  qty 
a
as

table    auction types and associated price constants and decision variables 

a   index sets
a  a indexes the set of goods  or auctions 
af  af indexes the set of flight auctions 
ah  ah indexes the set of hotel auctions 
ae  ae indexes the set of event auctions 
c  c indexes the set of clients 
p  p indexes the set of prices 
    the precise formulation of roxybot   s bidding ilp appears in the paper by lee et al          the
formulation here is slightly simplified  but we expect it would perform comparably in tac  the key
differences are in flight and entertainment bidding 

   

firoxybot   

q  q indexes the set of quantities
 i e   the units of each good in each auction  
s  s indexes the set of scenarios 
t  t indexes the set of trips 
a   constants
gat indicates the quantity of good a required to complete trip t 
ma indicates the current buy price of af   ae  
na indicates the current sell price of ae  
yas indicates the future buy price of af   ah   ae in scenario s 
zas indicates the future sell price of ae in scenario s 
ha indicates the hypothetical quantity won of hotel ah  
oa indicates the quantity of good a the agent owns 
uct indicates client cs value for trip t 
a   decision variables
    cst   is a set of boolean variables indicating whether or not client c is allocated
trip t in scenario s 
    apq   is a set of boolean variables indicating whether to bid price p on the qth
unit of ah  
m    a   is a set of integer variables indicating how many units of af   ae to buy now 
n    a   is a set of integer variables indicating how many units of ae to sell now 
y    as   is a set of integer variables indicating how many units of af   ae to buy later
in scenario s 
z    as   is a set of integer variables indicating how many units of ae to sell later in
scenario s 
a   objective function


flight cost

 current   future  
hotel cost
z     
z x   
 
x z      z     
x
x


ma a   yas as 
uct cts 
yas apq  
max


  m n y z
af
ah  q pyas
s  c t
trip value

z

   

    

figreenwald  lee    naroditskiy


 event revenue
event cost
  
  z
z
  
 
current
future
future 
current

z
  
 
z
z
  
 
  
 
    
z
x


 na a   zas as  ma a  yas as 


ae 

a   constraints
x

cst    c  c  s  s

    

t

allocation

buy
own
z      z   
z     
x
cst gat  oa    a   as  

a  af   s  s

    

a  ah   s  s

    

c t

buy

allocation

own
z      z   
z x  
 
x
cst gat  oa  
apq
c t

q pyas

allocation


  sell 
own
buy
z      z   
z     
x
z     
cst gat  oa   a   as   a   as 
c t

a  ae   s  s

x

apq  ha

    

a  ah

    

apq    a  ah   q  q

    

p q

x
p

equation      limits each client to one trip in each scenario  equation      prevents the
agent from allocating flights that it does not own or buy  equation      prevents the agent
from allocating hotels that it does not own or buy  equation      prevents the agent from
allocating event tickets that it does not own or buy and not sell  equation      ensures the
agent bids on at least hqw units in each hotel auction  equation      prevents the agent
from placing more than one buy offer per unit in each hotel auction 
an agent might also be constrained not to place sell offers on more units of each good
than it owns  and or not to place buy  sell  offers for more units of each good than the
market supplies  demands  
note that there is no need to explicitly enforce the bid monotonicity constraints in this
ilp formulation 
 buy offers must be nonincreasing in k  and sell offers nondecreasing 
the ilp does not need this constraint because prices are assumed to be linear 
in effect  the only decisions the ilp makes are how many units of each good to bid
on  hence  the bids              and              are equivalent 
 an agent may not offer to sell for less than the price it is willing to buy 
   

firoxybot   

the ilp would not choose to place both a buy offer and a sell offer on a good if
the buy price of that good exceeds the sell price  because that would be unprofitable 

references
ahmed  s     shapiro  a          the sample average approximation method for
stochastic programs with integer recourse  optimization online  http   www 
optimization online org 
arunachalam  r     sadeh  n  m          the supply chain trading agent competition 
electronic commerce research and applications              
aurell  e   boman  m   carlsson  m   eriksson  j   finne  n   janson  s   kreuger  p    
rasmusson  l          a trading agent built on constraint programming  in eighth
international conference of the society for computational economics  computing in
economics and finance  aix en provence 
birge  j     louveaux  f          introduction to stochastic programming  springer  new
york 
cai  k   gerding  e   mcburney  p   niu  j   parsons  s     s phelps         overview of
cat  a market design competition  tech  rep  ulcs         university of liverpool 
cheng  s   leung  e   lochner  k   k omalley  reeves  d   schvartzman  l     wellman 
m          walverine  a walrasian trading agent  in proceedings of the second
international joint conference on autonomous agents and multi agent systems  pp 
       
cheng  s   leung  e   lochner  k   k omalley  reeves  d   schvartzman  l     wellman 
m          walverine  a walrasian trading agent  decision support systems         
       
cramton  p          simultaneous ascending auctions  in cramton  p   shoham  y    
steinberg  r   eds    combinatorial auctions  mit press 
fritschi  c     dorer  k          agent oriented software engineering for successful tac participation  in proceedings of the first international joint conference on autonomous
agents and multiagent systems  pp       
greenwald  a          bidding marginal utility in simultaneous auctions  in workshop on
trading agent design and analysis 
greenwald  a     boyan  j          bidding under uncertainty  theory and experiments 
in proceedings of the   th conference on uncertainty in artificial intelligence  pp 
       
greenwald  a   naroditskiy  v     lee  s          bidding heuristics for simultaneous
auctions  lessons from tac travel  in workshop on trading agent design and analysis 
greenwald  a     boyan  j          bidding algorithms for simultaneous auctions  a case
study  journal of autonomous agents and multiagent systems               
he  m     jennings  n          southamptontac  designing a successful trading agent  in
proceedings of the fifteenth european conference on artificial intelligence  pp      
   

figreenwald  lee    naroditskiy

jordan  p  r     wellman  m  p          designing an ad auctions game for the trading
agent competition  in workshop on trading agent design and analysis 
kehagias  d   toulis  p     mitkas  p          a long term profit seeking strategy for continuous double auctions in a trading agent competition  in fourth hellenic conference
on artificial intelligence  heraklion 
krishna  v          auction theory  academic press 
lee  s  j          comparison of bidding algorithms in simultaneous auctions  b s  honors thesis  brown university  http   list cs brown edu publications theses 
ugrad  
lee  s   greenwald  a     naroditskiy  v          roxybot     an  saa   tac travel agent 
in proceedings of the   th international joint conference on artificial intelligence 
pp           
ross  s  m          simulation  third edition   academic press 
sardinha  j  a  r  p   milidiu  r  l   paranhos  p  m   cunha  p  m     de lucena  c 
j  p          an agent based architecture for highly competitive electronic markets 
in proceedings of the eighteenth international florida artificial intelligence research
society conference  clearwater beach  florida  usa  pp         
toulis  p   kehagias  d     mitkas  p          mertacor  a successful autonomous trading
agent  in fifth international joint conference on autonomous agents and multiagent
systems  pp            hakodate 
vetsikas  i     selman  b          whitebear  an empirical study of design tradeoffs for autonomous trading agents  in workshop on game theoretic decision theoretic agents 
vickrey  w          counterspeculation  auctions  and competitive sealed tenders  journal
of finance          
walras  l          elements deconomie politique pure  l  corbaz  lausanne 
wellman  m  p   greenwald  a     stone  p          autonomous bidding agents  strategies
and lessons from the trading agent competition  mit press 
wellman  m  p   reeves  d  m   lochner  k  m     suri  r          searching for walverine
      in workshop on trading agent design and analysis  no       in lecture notes
on artificial intelligence  pp          springer 
wellman  m   reeves  d   lochner  k     vorobeychik  y          price prediction in a
trading agent competition  artificial intelligence research           

   

fi