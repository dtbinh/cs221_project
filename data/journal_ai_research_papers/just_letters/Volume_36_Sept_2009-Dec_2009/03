journal artificial intelligence research                  

submitted        published      

research note
soft goals compiled away
emil keyder

emil keyder upf edu

universitat pompeu fabra
roc boronat     
      barcelona spain

hector geffner

hector geffner upf edu

icrea   universitat pompeu fabra
roc boronat     
      barcelona spain

abstract
soft goals extend classical model planning simple model preferences 
best plans ones least cost ones maximum utility 
utility plan sum utilities soft goals achieved minus
plan cost  finding plans high utility appears involve two linked problems 
choosing subset soft goals achieve finding low cost plan achieve them  new
search algorithms heuristics developed planning soft goals 
new track introduced international planning competition  ipc  test
performance  note  show however extensions needed 
soft goals increase expressive power basic model planning action
costs  easily compiled away  apply compilation problems
net benefit track recent ipc  show optimal satisficing
cost based planners better compiled problems optimal satisficing netbenefit planners original problems explicit soft goals  furthermore  show
penalties  negative preferences expressing conditions avoid  compiled
away using similar idea 

   models
strips problem tuple p   hf  i  o  gi f set fluents  f
g f initial state goal situation  set actions operators
precondition  add  delete lists p re a   add a   del a  respectively 
subsets f   action sequence   ha            applicable p actions ai  
             n  o  exists sequence states hs            sn   i 
s    i  p re ai   si si     si add ai     del ai                n  applicable
action sequence achieves fluent g g sn     plan p achieves goal
g g  write    g  classical setting  cost plan c   given
    number actions   cost structure generalized addition
cost function operators 
c
    
ai access foundation  rights reserved 

fikeyder   geffner

definition   strips problem action costs tuple pc   hf  i  o  g  ci 
 
p   hf  i  o  gi strips problem c function c  
  r 
  r  stands
non negative reals 
cost plan problem pc given
  
x

c    

c ai  

   

i  

ai denotes th action   cost function c        obtained special
case c o      o  adding utilities soft goals problem formulation
results new model 
definition   strips problem action costs soft goals tuple pu   hf  i  o 
g  c  ui  p   hf  i  o  g  ci strips problem action costs  u partial
function u   f   r  maps subset fluents  the soft goals  positive reals 
strips problem soft goals pu   utility plan given difference
total utility obtained plan cost 
u    

x

u p  c    

   

p   p

plan problem soft goals pu optimal plan   utility
u      higher u    utility optimal plan problem hard goals
never negative  empty plan non negative utility zero cost 
recent international planning competition  ipc   featured sequential optimal net benefit optimal tracks objective find optimal plans
respect models captured equation   equation   respectively  helmert  do 
  refanidis         

   equivalence
given problem p soft goals  equivalent problem p   action costs soft
goals defined whose plans encode corresponding plans p   transformation 
first introduced keyder geffner         simple direct  yet seems escaped attention researchers area  smith        sanchez   kambhampati       
bonet   geffner        baier  bacchus    mcilraith         also  unlike compilation
soft goals numeric variables arbitrary plan metrics  edelkamp         proposed
transformation makes use neither requires planners ability handle
   pddl   soft goals represented expressions form   u  is violated hprefi   appearing
problem metric pref preference soft goal associated formula a 
single fluent  expression corresponds u a    u terminology used here 
competition benchmarks contain preferences form  general case arises
compound formula fluents considered section   

   

fisoft goals compiled away

action costs  basic functionality required satisficing track recent ipc
 helmert et al          
write actions tuples form   hpre o   eff o i  effects
positive  adds  negative  deletes   assume soft goal fluent p  p
contains fluent p representing negation  introduced standard way 
adding p initial state p initially true  including p add delete
lists actions deleting adding p respectively  gazen   knoblock        nebel        
problem p   action costs soft goals equivalent problem p
soft goals obtained following transformation 
definition   strips problem action costs soft goals p   hf  i  o  g  c  ui 
compiled strips problem action costs p     hf         o    g    c 
f     f    p   s p    normal mode  end mode 
    s p    normal mode 
g    g    p  
o    o    collect p   f orgo p    p sg p     end 

c o  o  
 
u p    forgo p 
c  o   

 
  collect p    end

sg p      p    p f    u p       
   p      p    p sg p   
s p      p    p     p   
end   h normal mode    end mode  normal mode i
collect p    h end mode  p  p      p    p   i
forgo p    h end mode  p  p      p    p   i
o      hpre o   normal mode   eff o i   o 
   edelkamps transformation associates soft goals p            pm numeric
variables n            nm  
p
domain         utility plan expressed u      n
i   ni u pi   cost   
u pi   represents utility associated soft goal pi ni represents value numeric variable
final state achieved plan  transformation eliminates soft goals  requires
place plan metric whose terms  namely  whether variables u pi        state dependent 
current heuristics deal metrics  see sections      

   

fikeyder   geffner

soft goal p p   transformation adds dummy hard goal p  p  
achieved two ways  action collect p  cost   requires p
true  action forgo p  cost equal utility p yet performed
p false  equivalently p true  two actions used
end action makes fluent end mode true  actions original
problem p used fluent normal mode true prior execution
end action  moreover  exactly one  collect p   forgo p   appear soft goal
p plan  delete shared precondition p    action makes true 
way make normal mode true deleted end action 
plans   p   form     h  end     i  plan p    sequence
 s    p    collect p  forgo p  actions order  former appearing    p 
latter otherwise 
two problems p p   equivalent sense correspondence
plans p p     corresponding plans ranked way 
specifically  plan p   plan   p   extends end action
set collect forgo actions  plan cost c        u      
constant independent     finding optimal  maximum utility 
plan p therefore equivalent finding optimal  minimum cost  plan   p    
proposition    correspondence plans  applicable action sequence
p   let extension   denote sequence obtained appending end action
followed permutation actions collect p  forgo p  p sg p   
   p     p respectively 
plan p   plan p  
proof     new actions p   delete p f   hard goal achieved
remain true final state reached          g  p f
u p       either    p     p  first case  p  achieved collect p  
second  forgo p   therefore         p    since g    g    p         g   
     plan p     hard goals g p must made true  
end action  action collect forgo actions applied
make p f true  plan obtained removing end action collect
forgo actions must therefore achieve g thus valid plan p  
 
proposition    correspondence utilities costs  let     two
plans p   let       extensions     respectively  then 
u       u     c        c     

 
 
proof  let
p plan p extension   demonstrate c     
u     psg p   u p   since summation expression constant given
problem p   assertion follows directly 

   

fisoft goals compiled away

x

c        c     c   end   

c   forgo p    

forgo p   

x

  c    

x

c   collect p  

collect p   

c   forgo p  

forgo p   

  c    

x

u p 

p    p

x

  c    

u p 

x

u p 

p   p

psg p  

  u    

x

u p 

psg p  
 

proposition    equivalence  let plan p     plan p   extends
  then 
optimal plan p   optimal plan p  

proof  direct two propositions above 

 

following section  empirically compare performance net benefit planners
problems p explicit soft goals sequential planners problems p  
soft goals compiled away  order improve latter  make
transformation definition   effective simple trick  recall single
plan p   many extensions   p     containing actions
cost  differing way collect forgo actions ordered 
efficiency purposes  implementation enforces fixed arbitrary ordering p            pm
soft goals p adding dummy hard goal p i precondition actions
collect pi     forgo pi                     result single possible
extension   every plan p   space plans search therefore reduced 
optimization used experiments reported below 

   experimental results
formal results imply best plans problem p action costs
soft goals computed looking best plans compiled problem p  
action costs soft goals  standard classical planning techniques
applied  test practical value transformation  evaluate performance
optimal satisficing planning techniques soft goals  problems test
suite contain preferences conjunctions rather single fluents  preferences
handled variant approach described above  detailed section   
results shown three columns table   labelled net benefit optimal planners
results reported organizers      international planning competition
 ipc    helmert et al          results obtained using machines
   

fikeyder   geffner

domain
crewplanning    
elevators     
openstacks     
pegsol     
transport     
woodworking     
total

net benefit optimal planners
gamer hsp p mips xxl
 
  
 
  
 
 
 
 
 
  
 
  
  
  
 
  
  
 
  
  
  

sequential optimal planners
gamer hsp f hsp   mips xxl
 
  
 
  
 
 
 
 
 
 
 
  
  
  
  
  
  
 
  
  
 
  
  
  

table    coverage optimal planners  leftmost three columns give number problems
solved planners net benefit optimal track ipc   reported
competition organizers  rightmost four columns give number compiled
problems solved sequential optimal versions planners  dashes indicate
version planner could run domain 

settings used competition  xeon woodcrest computers clock speeds     
ghz  time limit    minutes memory limit  gb 
first set experiments  consider problems used net benefit optimal
 nbo  track ipc   soft goals defined terms goal state preferences
 gerevini   long         compare results obtained three optimal netbenefit planners results obtained sequential optimal  so  variants
compilations   three planners entered nbo track ipc  gamer 
mips xxl  hsp p   planners test compiled versions nbo
problems versions gamer  edelkamp   kissmann        mips xxl
 edelkamp   jabbar        two planners hsp f hsp    haslum         
ranked first  fifth  second  third  respectively  track  helmert
et al          three six domains nbo track ipc  involve numeric
variables appear preconditions actions  version gamer
handle numeric variables  therefore unable run gamer problems 
numeric variables never appear soft goals left untouched compilation 
data table   show two hsp  planners track run
compiled problems well as  better than  best planner nbo track run
original problems soft goals  maximum number solved problems
domain higher nbo track planners single domain  openstacks    vs     
domains  planners able solve larger number problems
   compiled problems currently available http   ipc informatik uni freiburg de domains 
   versions hsp  bug may cause suboptimal invalid solutions computed
domains non monotonic numeric variables  numeric variables whose values may increase
decrease  occur preconditions actions goals  see http   ipc informatik uni freiburg 
de planners   variables present transport domain tested  yet plans
computed hsp  versions domain turn valid  as verified val plan
validator  howey   long        optimal instances checked
costs plans computed planners 

   

fisoft goals compiled away

domain
elevators     
openstacks     
pegsol     
rovers     
total

net benefit satisficing planners
sgplan yochanps mips xxl
 
 
 
 
 
 
 
 
  
 
 
 
  
 
  

cost satisficing planners
lama
  
  
  
  
  

table    coverage quality satisficing planners  entries indicate number problems
planner generated best quality plan 

maximum number solved nbo planner  considering performance nbo
variants planner  compilation benefits two versions
heuristic search planner hsp    leaving bdd planners gamer mips xxl relatively
unaffected  interestingly  hsp   using compilation ends solving problems
gamer  winner nbo track     vs       drastically better performance
versions hsp  compared net benefit version result simple scheme
handling soft goals latter  optimal plans computed possible
subset soft goals problem  roughly   change search algorithm
ida  a  
second set experiments  consider three domains nbo track
ipc  contain numeric variables preconditions actions 
domain rovers net benefit track ipc   domains containing numeric variables
preconditions actions considered due lack state of the art cost based
planners able handle them  domains rovers nb track ipc 
considered contain disjunctive  existentially qualified  universally qualified
soft goals current implementation support  satisficing net benefit
planners test problems sgplan  hsu   wah         winner net
benefit track ipc   yochanps  benton  do    kambhampati         received
distinguished performance award competition  satisficing variant
mips xxl  received distinguished performance award competition
competed optimal track ipc   solve compiled versions problems
lama  winner sequential satisficing track ipc   yochanps  mips xxl 
lama anytime planners  results discussed refer cost
best plan found end evaluation period    minutes 
entries table   show number problems domain plan
generated planner best plan produced  report data rather
showing graphs plan utilities absolute difference quality plans
meaningful except shortest plans  that ignore costs and or soft goals 
problem significantly costly  results show running state of the art
cost based planner compiled problems yields best plan    total
    instances  almost three times number instances best performing
native soft goals planner  mips xxl  gives best plan  furthermore       
   

fikeyder   geffner

problems mips xxl finds best plan pegsol domain  lama finds plan
quality  problems satisficing net benefit planners outperform
lama run compiled problems therefore few 
results appear contradict results reported benton et al         
native net benefit planner  yochanps   yields better results cost based planner 
yochancost   run problems compiled according earlier version transformation
 keyder   geffner         discrepancy appears result non informative
cost based heuristic used yochancost   leads plans forgo soft goals 
fact make use optimization discussed end section   
results unnecessary blowup state space  analysis differences
recent cost based planners  see paper keyder geffner        

   extensions
shown possible compile away positive utilities u p  associated
single fluents p  show compilation extended deal positive
utilities defined formulas fluents negative utilities defined single
fluents formulas  negative utilities stand conditions avoided rather
sought  example  utility u p q       penalizes plan results state
p q true extra cost     compilation soft goals defined
formulas based standard compilation goal precondition formulas classical
planning  gazen   knoblock        nebel        
positive utility logical formula compiled away introducing new
fluent pa achieved zero cost end state holds 
assigning utility associated pa   dnf formula d        dn  
suffices add n new actions a            ai   hdi   pa              n 
cnf formula c        cn   fluent pi introduced              n  along
actions aij   hcij   pi j               ci    cij stands jth fluent ci  
introduce action   h p            pn    pa allows addition fluent pa states
holds  newly introduced actions zero cost  must applicable
p   actions original problem p collect forgo actions 
best extensions plan achieves p achieve pa use collect
action achieve hard goal fluent p a associated pa zero cost 
negative utility u a      formula dnf cnf compiled away
two steps  first substituting positive utility u a  negation
compiling positive utility formula utility single fluent described
above  makes use fact negation formula cnf formula
dnf vice versa 

   summary
shown soft goals add expressive power easily compiled
away  implies new search algorithms heuristics strictly required
handling them  practical standpoint  experiments indicate state of the art
sequential planners outperform state of the art net benefit planners compiled versions
   

fisoft goals compiled away

benchmarks used recent planning competitions  furthermore  similar transformations
used compile away positive negative utilities logical formulas dnf
cnf 

acknowledgments
thank malte helmert help compiling running many ipc  planners 
patrik haslum help aspects various versions hsp  j  benton
help compiling running yochanps   h  geffner partially supported grant
tin           c      mec  spain 

references
baier  j  a   bacchus  f     mcilraith  s  a          heuristic search approach planning
temporally extended preferences  proc  ijcai     pp           
benton  j   do  m     kambhampati  s          anytime heuristic search partial satisfaction planning  artificial intelligence                    
bonet  b     geffner  h          heuristics planning penalties rewards formulated logic computed circuits  artificial intelligence              
         
edelkamp  s          compilation plan constraints preferences  proc 
icaps     pp         
edelkamp  s     jabbar  s          mips xxl  featuring external shortest path search
sequential optimal plans external branch and bound optimal net benefit 
 th  int  planning competition booklet  icaps     
edelkamp  s     kissmann  p          gamer  bridging planning general game playing
symbolic search   th  int  planning competition booklet  icaps     
gazen  b     knoblock  c          combining expressiveness ucpop
efficiency graphplan  steel  s     alami  r   eds    proc   th european conf 
planning  pp          springer 
gerevini  a     long  d          preferences soft constraints pddl   proc 
icaps    workshop preferences soft constraints planning  pp       
haslum  p          additive reversed relaxed reachability heuristics revisited   th 
int  planning competition booklet  icaps     
helmert  m   do  m     refanidis  i          ipc      deterministic competition   th 
int  planning competition booklet  icaps     
howey  r     long  d          vals progress  automatic validation tool pddl   
used international planning competition  proc       icaps workshop
competition  impact  organization  evaluation  benchmarks 
hsu  c  w     wah  b  w          sgplan planning system ipc    th  int 
planning competition booklet  icaps     
   

fikeyder   geffner

keyder  e     geffner  h          set additive tsp heuristics planning action costs soft goals  proc  icaps    workshop heuristics domainindependent planning 
keyder  e     geffner  h          heuristics planning action costs revisited 
proc    th european conference artificial intelligence  pp         
nebel  b          compilation schemes  theoretical tool assessing expressive
power planning formalisms  proc  ki     advances artificial intelligence  pp 
        springer verlag 
nebel  b          compilability expressive power propositional planning 
journal artificial intelligence research             
sanchez  r     kambhampati  s          planning graph heuristics selecting objectives
over subscription planning problems  proc  icaps     pp         
smith  d  e          choosing objectives over subscription planning  proc  icaps    
pp         

   


