journal of artificial intelligence research                  

submitted        published      

research note
soft goals can be compiled away
emil keyder

emil keyder upf edu

universitat pompeu fabra
roc boronat     
      barcelona spain

hector geffner

hector geffner upf edu

icrea   universitat pompeu fabra
roc boronat     
      barcelona spain

abstract
soft goals extend the classical model of planning with a simple model of preferences 
the best plans are then not the ones with least cost but the ones with maximum utility 
where the utility of a plan is the sum of the utilities of the soft goals achieved minus
the plan cost  finding plans with high utility appears to involve two linked problems 
choosing a subset of soft goals to achieve and finding a low cost plan to achieve them  new
search algorithms and heuristics have been developed for planning with soft goals  and a
new track has been introduced in the international planning competition  ipc  to test
their performance  in this note  we show however that these extensions are not needed 
soft goals do not increase the expressive power of the basic model of planning with action
costs  as they can easily be compiled away  we apply this compilation to the problems
of the net benefit track of the most recent ipc  and show that optimal and satisficing
cost based planners do better on the compiled problems than optimal and satisficing netbenefit planners on the original problems with explicit soft goals  furthermore  we show
that penalties  or negative preferences expressing conditions to avoid  can also be compiled
away using a similar idea 

   models
a strips problem is a tuple p   hf  i  o  gi where f is a set of fluents  i  f and
g  f are the initial state and goal situation  and o is a set of actions or operators with
precondition  add  and delete lists p re a   add a   and del a  respectively  all of which
are subsets of f   an action sequence    ha            an i is applicable in p if the actions ai  
i              n  are all in o  and there exists a sequence of states hs            sn   i  such that
s    i  p re ai    si and si     si  add ai     del ai   for i              n  the applicable
action sequence  achieves a fluent g if g  sn     and is a plan for p if it achieves each goal
g in g  which we write as     g  in the classical setting  the cost of a plan c   is given
by     the number of actions in   this cost structure is generalized with the addition of
a cost function over the operators 
c
    
ai access foundation  all rights reserved 

fikeyder   geffner

definition   a strips problem with action costs is a tuple pc   hf  i  o  g  ci  where
 
p   hf  i  o  gi is a strips problem and c is a function c   o 
  r 
  where r  stands for
the non negative reals 
the cost of a plan  for a problem pc is then given by
  
x

c    

c ai  

   

i  

where ai denotes the i th action in   the cost function c        is obtained as a special
case when c o      for all o  o  adding utilities or soft goals to the problem formulation
results in a new model 
definition   a strips problem with action costs and soft goals is a tuple pu   hf  i  o 
g  c  ui  where p   hf  i  o  g  ci is a strips problem with action costs  and u is a partial
function u   f   r  that maps a subset of fluents  the soft goals  into positive reals 
in a strips problem with soft goals pu   the utility of a plan is given by the difference
between the total utility obtained by the plan and its cost 
u    

x

u p   c    

   

p   p

a plan  for a problem with soft goals pu is optimal when no other plan    has a utility
u      higher than u    the utility of an optimal plan for a problem with no hard goals is
never negative  as the empty plan has non negative utility and zero cost 
the most recent international planning competition  ipc   featured sequential optimal and net benefit optimal tracks in which the objective was to find optimal plans with
respect to the models captured by equation   and equation   respectively  helmert  do 
  refanidis         

   equivalence
given a problem p with soft goals  an equivalent problem p   with action costs and no soft
goals can be defined whose plans encode corresponding plans for p   this transformation 
first introduced by keyder and geffner         is simple and direct  yet seems to have escaped the attention of researchers in the area  smith        sanchez   kambhampati       
bonet   geffner        baier  bacchus    mcilraith         also  unlike the compilation of
soft goals into numeric variables and arbitrary plan metrics  edelkamp         the proposed
transformation makes use of neither and requires from planners only the ability to handle
   in pddl   soft goals are represented by expressions of the form   u  is violated hprefi   appearing
in the problem metric where pref is a preference or soft goal associated with a formula a  when a
is a single fluent  the expression corresponds to u a    u in the terminology used here  most of the
competition benchmarks contain only preferences of this form  the more general case that arises when
a is a compound formula over fluents is considered in section   

   

fisoft goals can be compiled away

action costs  the basic functionality required in the satisficing track of the most recent ipc
 helmert et al          
we write actions as tuples of the form o   hpre o   eff o i  where the effects can be
positive  adds  or negative  deletes   we assume that for each soft goal fluent p  p also
contains a fluent p representing its negation  these can be introduced in the standard way 
adding p to the initial state if p is not initially true  and including p in the add and delete
lists of all actions deleting or adding p respectively  gazen   knoblock        nebel        
the problem p   with action costs and no soft goals that is equivalent to the problem p
with soft goals can then be obtained by the following transformation 
definition   for a strips problem with action costs and soft goals p   hf  i  o  g  c  ui 
the compiled strips problem with action costs is p     hf     i     o    g    c  i with
 f     f  s    p    s p     normal mode  end mode 
 i     i  s p     normal mode 
 g    g  s    p  
 o    o     collect p   f orgo p    p  sg p      end 

 c o  if o  o  
 
u p  if o   forgo p 
 c  o   

 
if o   collect p  or o   end
where
 sg p      p    p  f     u p       
 s    p      p    p  sg p   
 s p      p    p   s    p   
 end   h normal mode    end mode  normal mode i
 collect p    h end mode  p  p      p    p   i
 forgo p    h end mode  p  p      p    p   i
 o      hpre o    normal mode   eff o i   o  o 
   edelkamps transformation associates with the soft goals p            pm numeric
variables n            nm   each
p
with domain         the utility for a plan is then expressed as u      n
i   ni  u pi    cost    where
u pi   represents the utility associated with soft goal pi and ni represents the value of the numeric variable
in the final state achieved by the plan  this transformation also eliminates soft goals  but requires in its
place a plan metric whose terms  namely  whether the variables u pi   are   or    are state dependent 
current heuristics can not deal with such metrics  see sections   and    

   

fikeyder   geffner

for each soft goal p in p   the transformation adds a dummy hard goal p  in p   that
can be achieved in two ways  with the action collect p  that has cost   but requires p to be
true  or with the action forgo p  that has cost equal to the utility of p yet can be performed
when p is false  or equivalently when p is true  these two actions can be used only after
the end action that makes the fluent end mode true  while the actions from the original
problem p can be used only when the fluent normal mode is true prior to the execution of
the end action  moreover  exactly one of  collect p   forgo p   can appear for each soft goal
p in the plan  as both delete their shared precondition p    which no action makes true  as
there is no way to make normal mode true again after it is deleted by the end action  all
plans    for p   have the form      h  end      i  where  is a plan for p and     is a sequence
of  s    p    collect p  and forgo p  actions in any order  the former appearing when     p 
and the latter otherwise 
the two problems p and p   are equivalent in the sense that there is a correspondence
between the plans for p and p     and corresponding plans are ranked in the same way  more
specifically  for any plan  for p   there is a plan    for p   that extends  with the end action
and a set of collect and forgo actions  and this plan has cost c        u       where 
is a constant that is independent of both  and      finding an optimal  maximum utility 
plan  for p is therefore equivalent to finding an optimal  minimum cost  plan    for p    
proposition    correspondence between plans  for an applicable action sequence 
in p   let an extension    of  denote any sequence obtained by appending to  the end action
followed by some permutation of the actions collect p  and forgo p  for all p  sg p    when
    p and      p respectively  then
 is a plan for p     is a plan for p  
proof     the new actions in p   do not delete any p  f   so any hard goal achieved by
 will remain true in the final state reached by      and we have that       g  for all p  f
such that u p       either     p or      p  in the first case  p  is achieved by collect p   in
the second  by forgo p   therefore       s    p    since g    g  s    p    we have that       g   
   if    is a plan for p     then all hard goals g in p must be made true by    before the
end action  as after this action only collect and forgo actions can be applied and these can
not make any p  f true  the plan obtained by removing the end action and all collect
and forgo actions must therefore achieve g and thus is a valid plan for p  
 
proposition    correspondence between utilities and costs  let   and   be two
plans for p   and let    and    be extensions of   and   respectively  then 
u       u      c        c     

 
 
proof  let
p  be a plan for p and  an extension of   we demonstrate that c     
u     psg p   u p   since the summation in this expression is a constant for a given
problem p   the assertion follows directly 

   

fisoft goals can be compiled away

x

c        c     c   end   

c   forgo p    

forgo p   

x

  c    

x

c   collect p  

collect p   

c   forgo p  

forgo p   

  c    

x

u p 

p    p

x

  c    

u p  

x

u p 

p   p

psg p  

  u    

x

u p 

psg p  
 

proposition    equivalence  let  be a plan for p   and    be a plan for p   that extends
  then 
 is an optimal plan for p     is an optimal plan for p  

proof  direct from the two propositions above 

 

in the following section  we empirically compare the performance of net benefit planners
on problems p with explicit soft goals to that of sequential planners on problems p   in
which soft goals have been compiled away  in order to improve the latter  we make the
transformation of definition   more effective with a simple trick  recall that for a single
plan  for p   there are many extensions    in p     all containing the same actions and
having the same cost  but differing in the way the collect and forgo actions are ordered  for
efficiency purposes  the implementation enforces a fixed but arbitrary ordering p            pm
on the soft goals in p by adding the dummy hard goal p i as a precondition of the actions
collect pi     and forgo pi     for i              m     the result is that there is a single possible
extension    of every plan  in p   and the space of plans to search is therefore reduced 
this optimization is used in the experiments reported below 

   experimental results
the formal results above imply that the best plans for a problem p with action costs and
soft goals can be computed by looking for the best plans for the compiled problem p  
with action costs and no soft goals  to which standard classical planning techniques can be
applied  to test the practical value of the transformation  we evaluate the performance of
both optimal and satisficing planning techniques for soft goals  some problems in the test
suite contain preferences over conjunctions rather than single fluents  such preferences are
handled with a variant of the approach described above  detailed in section   
the results shown in the three columns in table   labelled net benefit optimal planners
are the results as reported by the organizers of the      international planning competition
 ipc    helmert et al          all other results were obtained using the same machines and
   

fikeyder   geffner

domain
crewplanning    
elevators     
openstacks     
pegsol     
transport     
woodworking     
total

net benefit optimal planners
gamer hsp p mips xxl
 
  
 
  
 
 
 
 
 
  
 
  
  
  
 
  
  
 
  
  
  

sequential optimal planners
gamer hsp f hsp   mips xxl
 
  
 
  
 
 
 
 
 
 
 
  
  
  
  
  
  
 
  
  
 
  
  
  

table    coverage for optimal planners  the leftmost three columns give the number of problems
solved by each of the planners in the net benefit optimal track of ipc   as reported
by the competition organizers  the rightmost four columns give the number of compiled
problems solved by the sequential optimal versions of these planners  dashes indicate
that the version of the planner could not be run on that domain 

settings as used in the competition  xeon woodcrest computers with clock speeds of     
ghz  with a time limit of    minutes and a memory limit of  gb 
in the first set of experiments  we consider the problems used in the net benefit optimal
 nbo  track of ipc   in which soft goals are defined in terms of goal state preferences
 gerevini   long         and compare the results obtained by the three optimal netbenefit planners with the results obtained by their sequential optimal  so  variants on
their compilations   the three planners entered in the nbo track of ipc  were gamer 
mips xxl  and hsp p   the so planners we test on the compiled versions of the nbo
problems are the so versions of gamer  edelkamp   kissmann        and mips xxl
 edelkamp   jabbar        and the two so planners hsp f and hsp    haslum         
these were ranked first  fifth  second  and third  respectively  in the so track  helmert
et al          three out of the six domains from the nbo track of ipc  involve numeric
variables that appear in the preconditions of actions  the so version of gamer does not
handle numeric variables  and we are therefore unable to run gamer on such problems 
numeric variables never appear as soft goals and are left untouched by our compilation 
the data in table   show that the two hsp  planners from the so track run on the
compiled problems do as well as  or better than  the best planner from the nbo track run
on the original problems with soft goals  the maximum number of solved problems for a
domain is higher for the nbo track planners in only a single domain  openstacks    vs     
in all other domains  so planners are able to solve a larger number of problems than the
   the compiled problems are currently available at http   ipc informatik uni freiburg de domains 
   all versions of hsp  have a bug which may cause suboptimal or invalid solutions to be computed in
domains with non monotonic numeric variables  numeric variables whose values may both increase and
decrease  that occur in preconditions of actions or goals  see http   ipc informatik uni freiburg 
de planners   such variables are present only in the transport domain out of all those tested  yet plans
computed by hsp  for both versions of the domain turn out to be valid  as verified by the val plan
validator  howey   long        and optimal in the instances in which they can be checked against the
costs of plans computed by other planners 

   

fisoft goals can be compiled away

domain
elevators     
openstacks     
pegsol     
rovers     
total

net benefit satisficing planners
sgplan yochanps mips xxl
 
 
 
 
 
 
 
 
  
 
 
 
  
 
  

cost satisficing planners
lama
  
  
  
  
  

table    coverage and quality for satisficing planners  the entries indicate the number of problems
for which the planner generated the best quality plan 

maximum number solved by any nbo planner  considering the performance of the nbo
and so variants of each planner  the compilation benefits most the two versions of the
heuristic search planner hsp    leaving the bdd planners gamer and mips xxl relatively
unaffected  interestingly  hsp   using the compilation ends up solving more problems than
gamer  the winner of the nbo track     vs       the drastically better performance of the
so versions of hsp  compared to the net benefit version is the result of the simple scheme
for handling soft goals in the latter  in which optimal plans are computed for each possible
subset of soft goals in the problem  roughly   and a change in the search algorithm from
ida  to a  
in the second set of experiments  we consider the three domains from the nbo track
of ipc  which do not contain numeric variables in the preconditions of actions  and the
domain rovers from the net benefit track of ipc   domains containing numeric variables in
the preconditions of actions are not considered due to the lack of state of the art cost based
planners able to handle them  domains other than rovers from the nb track of ipc  are
not considered as they contain disjunctive  existentially qualified  or universally qualified
soft goals which our current implementation does not support  the satisficing net benefit
planners we test on these problems are sgplan  hsu   wah         the winner of the net
benefit track from ipc   yochanps  benton  do    kambhampati         which received
a distinguished performance award in the same competition  and a satisficing variant of
mips xxl  which also received a distinguished performance award in that competition and
competed in the optimal track of ipc   we solve the compiled versions of the problems with
lama  the winner of the sequential satisficing track from ipc   yochanps  mips xxl 
and lama are anytime planners  and the results discussed below refer to the cost of the
best plan found by each at the end of the evaluation period of    minutes 
entries in table   show the number of problems in each domain for which the plan
generated by a planner is the best or only plan produced  we report this data rather than
showing graphs of plan utilities as the absolute difference between the quality of plans is not
meaningful in itself except when the shortest plans  that ignore costs and or soft goals  for
the problem are significantly more costly  the results show that running a state of the art
cost based planner on the compiled problems yields the best plan in    out of the total
    instances  almost three times the number of instances in which the best performing
native soft goals planner  mips xxl  gives the best plan  furthermore  in    out of the   
   

fikeyder   geffner

problems for which mips xxl finds the best plan in the pegsol domain  lama finds a plan
with the same quality  the problems in which satisficing net benefit planners outperform
lama run on the compiled problems are therefore very few 
these results appear to contradict the results reported by benton et al          where
the native net benefit planner  yochanps   yields better results than a cost based planner 
yochancost   run on problems compiled according to an earlier version of our transformation
 keyder   geffner         the discrepancy appears to be the result of the non informative
cost based heuristic used in yochancost   which leads to plans that forgo all soft goals  and
the fact that they do not make use of the optimization discussed at the end of section   
which results in an unnecessary blowup of the state space  for an analysis of the differences
between some recent cost based planners  see the paper by keyder and geffner        

   extensions
we have shown that it is possible to compile away positive utilities u p  associated with
single fluents p  we show now that this compilation can be extended to deal with positive
utilities defined on formulas over fluents and to negative utilities defined on both single
fluents and formulas  negative utilities stand for conditions to be avoided rather than
sought  for example  a utility u p  q       penalizes a plan that results in a state where
both p and q are true with an extra cost of     the compilation of soft goals defined on
formulas is based on the standard compilation of goal and precondition formulas in classical
planning  gazen   knoblock        nebel        
a positive utility on a logical formula a can be compiled away by introducing a new
fluent pa that can be achieved at zero cost from any end state where a holds  and by
assigning the utility associated with a to pa   if a is a dnf formula d          dn   it
suffices to add n new actions a            an with ai   hdi   pa i for i              n  if a is a
cnf formula c          cn   a fluent pi is introduced for each i              n  along with
actions aij   hcij   pi i for j               ci    where cij stands for the jth fluent of ci   we also
introduce an action a   h p            pn    pa i that allows the addition of fluent pa in states
where a holds  all the newly introduced actions have zero cost  and must be applicable in
p   after the actions of the original problem p and before the collect and forgo actions  the
best extensions of any plan  that achieves a in p will then achieve pa and use the collect
action to achieve the hard goal fluent p a associated with pa at zero cost 
a negative utility u a      on a formula a in dnf or cnf can be compiled away in
two steps  by first substituting a positive utility u a  on the negation a of a and then
compiling this positive utility on a formula into a utility on a single fluent as described
above  this makes use of the fact that the negation of a formula in cnf is a formula in
dnf and vice versa 

   summary
we have shown that soft goals do not add expressive power and can be easily compiled
away  this implies that no new search algorithms or heuristics are strictly required for
handling them  from a practical standpoint  experiments indicate that state of the art
sequential planners outperform state of the art net benefit planners on compiled versions of
   

fisoft goals can be compiled away

the benchmarks used in recent planning competitions  furthermore  similar transformations
can be used to compile away positive and negative utilities on logical formulas in dnf or
cnf 

acknowledgments
we thank malte helmert for his help with compiling and running many of the ipc  planners 
patrik haslum for his help with all aspects of various versions of hsp  and j  benton for
his help with compiling and running yochanps   h  geffner is partially supported by grant
tin           c      from mec  spain 

references
baier  j  a   bacchus  f     mcilraith  s  a          a heuristic search approach to planning
with temporally extended preferences  in proc  ijcai     pp           
benton  j   do  m     kambhampati  s          anytime heuristic search for partial satisfaction planning  artificial intelligence                    
bonet  b     geffner  h          heuristics for planning with penalties and rewards formulated in logic and computed through circuits  artificial intelligence              
         
edelkamp  s          on the compilation of plan constraints and preferences  in proc 
icaps     pp         
edelkamp  s     jabbar  s          mips xxl  featuring external shortest path search for
sequential optimal plans and external branch and bound for optimal net benefit  in
 th  int  planning competition booklet  icaps     
edelkamp  s     kissmann  p          gamer  bridging planning and general game playing
with symbolic search  in  th  int  planning competition booklet  icaps     
gazen  b     knoblock  c          combining the expressiveness of ucpop with the
efficiency of graphplan  in steel  s     alami  r   eds    proc   th european conf 
on planning  pp          springer 
gerevini  a     long  d          preferences and soft constraints in pddl   in proc 
icaps    workshop on preferences and soft constraints in planning  pp       
haslum  p          additive and reversed relaxed reachability heuristics revisited  in  th 
int  planning competition booklet  icaps     
helmert  m   do  m     refanidis  i          ipc      deterministic competition  in  th 
int  planning competition booklet  icaps     
howey  r     long  d          vals progress  the automatic validation tool for pddl   
used in the international planning competition  in proc       icaps workshop on
the competition  impact  organization  evaluation  benchmarks 
hsu  c  w     wah  b  w          the sgplan planning system in ipc   in  th  int 
planning competition booklet  icaps     
   

fikeyder   geffner

keyder  e     geffner  h          set additive and tsp heuristics for planning with action costs and soft goals  in proc  icaps    workshop on heuristics for domainindependent planning 
keyder  e     geffner  h          heuristics for planning with action costs revisited  in
proc    th european conference on artificial intelligence  pp         
nebel  b          compilation schemes  a theoretical tool for assessing the expressive
power of planning formalisms  in proc  ki     advances in artificial intelligence  pp 
        springer verlag 
nebel  b          on the compilability and expressive power of propositional planning 
journal of artificial intelligence research             
sanchez  r     kambhampati  s          planning graph heuristics for selecting objectives
in over subscription planning problems  in proc  icaps     pp         
smith  d  e          choosing objectives in over subscription planning  in proc  icaps    
pp         

   

fi