journal of artificial intelligence research                  

submitted        published      

approximate strong equilibrium in job scheduling games
michal feldman

mfeldman huji ac il

school of business administration
and center for the study of rationality 
hebrew university of jerusalem  israel 

tami tamir

tami idc ac il

school of computer science 
the interdisciplinary center  herzliya  israel 

abstract
a nash equilibrium  ne  is a strategy profile resilient to unilateral deviations  and is
predominantly used in the analysis of multiagent systems  a downside of ne is that it is
not necessarily stable against deviations by coalitions  yet  as we show in this paper  in
some cases  ne does exhibit stability against coalitional deviations  in that the benefits
from a joint deviation are bounded  in this sense  ne approximates strong equilibrium 
coalition formation is a key issue in multiagent systems  we provide a framework for
quantifying the stability and the performance of various assignment policies and solution
concepts in the face of coalitional deviations  within this framework we evaluate a given
configuration according to three measures   i  ir min   the maximal number   such that
there exists a coalition in which the minimal improvement ratio among the coalition members is    ii  ir max   the maximal number   such that there exists a coalition in which
the maximal improvement ratio among the coalition members is   and  iii  dr max   the
maximal possible damage ratio of an agent outside the coalition 
we analyze these measures in job scheduling games on identical machines  in particular 
we provide upper and lower bounds for the above three measures for both ne and the wellknown assignment rule longest processing time  lpt  
our results indicate that lpt performs better than a general ne  however  lpt is not
the best possible approximation  in particular  we present a polynomial time approximation
scheme  ptas  for the makespan minimization problem which provides a schedule with
ir min of      for any given   with respect to computational complexity  we show that
given an ne on m    identical machines or m    unrelated machines  it is np hard to
determine whether a given coalition can deviate such that every member decreases its cost 

   introduction
we consider job scheduling systems  in which n jobs are assigned to m identical machines
and incur a cost which is equal to the total load on the machine they are assigned to   these
problems have been widely studied in recent years from a game theoretic perspective  koutsoupias   papadimitriou        andelman  feldman    mansour        christodoulou 
koutsoupias    nanavati        czumaj   vocking        a  fiat   olonetsky         
in contrast to the traditional setting  where a central designer determines the allocation of
jobs to machines and all the participating entities are assumed to obey the protocol  mul   this cost function characterizes systems in which jobs are processed in parallel  or when all jobs on a
particular machine have the same single pick up time  or need to share some resource simultaneously 

c
    
ai access foundation  all rights reserved 

fifeldman   tamir

tiagent systems are populated by heterogeneous  autonomous agents  which often display
selfish behavior  different machines and jobs may be owned by different strategic entities 
who will typically attempt to optimize their own objective rather than the global objective 
game theoretic analysis provides us with the mathematical tools to study such situations 
and indeed has been extensively used recently to analyze multiagent systems  this trend
is motivated in part by the emergence of the internet  which is composed of distributed
computer networks managed by multiple administrative authorities and shared by users
with competing interests  papadimitriou        
most game theoretic models applied to job scheduling problems  as well as other network games  e g   fabrikant  luthra  maneva  papadimitriou    shenker        albers 
elits  even dar  mansour    roditty        roughgarden   tardos        anshelevich 
dasgupta  kleinberg  tardos  wexler    roughgarden         use the solution concept
of nash equilibrium  ne   in which the strategy of each agent is a best response to the
strategies of all other agents  while ne is a powerful tool for analyzing outcomes in competitive environments  its notion of stability applies only to unilateral deviations 
in
numerous multiagent settings  selfish agents stand to benefit from cooperating by forming
coalitions  procaccia   rosenschein         therefore  even when no single agent can profit
by a unilateral deviation  ne might still not be stable against a group of agents coordinating a joint deviation  which is profitable to all the members of the group  this stronger
notion of stability is exemplified in the strong equilibrium  se  solution concept  coined by
aumann         in a strong equilibrium  no coalition can deviate and improve the utility
of every member of the coalition 

m 

 

 

 

m 

 

 

 

m 

 

 

 

m 

 

 

 

  

m 

m 

 

 
 a 

 

 

 

 b 

figure    an example of a configuration  a  that is a nash equilibrium but is not resilient against
coordinated deviations  since the jobs of load   and   all profit from the deviation demonstrated in  b  

as an example  consider the configuration depicted in figure   a   in our figures  a
job is represented by a rectangle whose width corresponds to the jobs length  the jobs
scheduled on a specific machine form a vertical concatenation of rectangles  for example 
in figure   a  there are three machines  and m  processes two jobs of length    note that
the internal order of jobs has no effect  since the cost of each job is defined to be the load on
the machine it is assigned to  this configuration is an ne since no job can reduce its cost
through a unilateral deviation  one might think that any ne on identical machines must
also be sustainable against joint deviations  yet  as was already observed in  andelman

   

fiapproximate strong equilibrium

et al          this may not be true   for example  the configuration above is not resilient
against a coordinated deviation of the coalition  consisting of the four jobs of load   and
  deviating to configuration  b   where the jobs of load   decrease their costs from    to   
and the jobs of load   improve from   to    note that the cost of the two jobs of load  
 which are not members of the coalition  increases 
in the example above  every member of the coalition improves its cost by a  multiplicative  factor of      by how much more can a coalition improve  is there a bound on the
improvement ratio  as it will turn out  this example is in fact the most extreme one in a
sense that will be clarified below  thus  while ne is not completely stable against coordinated deviations  in some settings  it does provide us with some notion of approximate
stability to coalitional deviations  or approximate strong equilibrium  
we also consider a subclass of ne schedules  produced by the longest processing time
 lpt  rule  graham         the lpt rule sorts the jobs in a non increasing order of
their loads and greedily assigns each job to the least loaded machine  it is easy to verify
that every configuration produced by the lpt rule is an ne  fotakis  s  kontogiannis   
spiraklis         is it also an se  note that for the instance depicted in figure    lpt
would have produced an se  however  as we show  this is not always the case 
in this paper we provide a framework for studying the notion of approximate stability
to coalitional deviations  in our analysis  we consider three different measures  the first
two measure the stability of a configuration  and uses the notion of an improvement ratio
of a job  which is defined as the ratio between the jobs costs before and after the deviation 
the third measures the worst possible effect on the non deviating jobs  as will be explained
below  
   minimum improvement ratio  by definition  all members of a coalition must
reduce their cost  that is  the improvement ratio of every member of the coalition is larger
than    clearly  the coalition members might not share the same improvement ratio  the
minimum improvement ratio of a particular deviation is the minimal improvement ratio of
a coalition member  the minimum improvement ratio of a schedule s  denoted ir min  s  
is the maximum over all possible deviations originated from s of the minimal improvement
ratio of the deviation  in other words  there is no coalitional deviation originating from s
such that every member of the coalition reduces its cost by a factor greater than ir min  s  
a closely related notion has been suggested by albers         who defined a strategy
profile to be an  se if there is no coalition in which each agent can improve by a factor
of more than   in our notation  a schedule s is an  se if ir min  s  is at most   albers
studied this notion in the context of se existence in cost sharing games  and showed that
for a sufficiently large   an  se always exists  the justification behind this concept is
that agents may be willing to deviate only if they improve by a sufficiently high factor  due
to  for example  some overhead associated with the deviation  
   this statement holds for m     for   identical machines  every ne is also an se  andelman et al  
      
   throughout this paper  we define approximation by a multiplicative factor  since the improvement and
damage ratios for all the three measures presented below are constants greater than one  as will be shown
below   the additive ratios are unbounded  formally  for any value a it is possible to construct instances
 by scaling the instances we provide for the multiplicative ratio  in which the cost of all jobs is reduced 
or the cost of some jobs is increased  by at least an additive factor of a 

   

fifeldman   tamir

for three machines  we show that every ne is a     se  that is  there is no coalition
that can deviate such that every member improves by a factor larger than      for this
case  we also provide a matching lower bound  recall figure   above   that holds for any
 
m     for arbitrary m  we show that every ne is a     m  
  se  our proof technique
draws a connection between makespan approximation and approximate stability  where
the makespan of a configuration is defined as the maximum load on any machine in the
configuration 
we next consider schedules obtained
from the lpt rule  we show that for m     

every lpt configuration is a             se            and we also provide a matching lower
 
bound  which holds for any m     for arbitrary m  we show an upper bound of      m
 
the above results indicate that lpt is more stable than ne with respect to coalitional
deviations  yet  lpt is not the best possible approximation of se  similar to this notion
in approximation algorithms  we define an se ptas to be an assignment algorithm which
gets as input an additional parameter   specifying how close to an se the schedule should
be and produces a        se in time polynomial in n      in this paper we devise an
se ptas for any fixed number of machines  which also approximates the makespan within
a factor of      
   maximum improvement ratio  the maximum improvement ratio of a particular
deviation is the maximal improvement ratio experienced by some coalition member  the
maximum improvement ratio of a schedule s  denoted ir max  s   is the maximum over all
possible deviations originated from s of the maximal improvement ratio of the deviation 
in other words  there is no coalition deviation originating from s such that there exists a
member of the coalition that reduces its cost by a factor greater than ir max  s  
this notion establishes the bounds on how much an agent would gain in a deviating
coalition for which all agents gain something from the deviation  also  this notion is similar
in spirit to stability against a large total improvement  it also suits environments in which
individuals are willing to obey a specific player as long as they are not hurt  interestingly 
we find that given an ne configuration  the improvement ratio of a single agent may be
arbitrarily large  for any m     in contrast  for lpt configurations on three machines  no
agent can improve by a factor of    or more and this bound is tight  thus  with respect to
ir max   the relative stability of lpt compared to ne is more significant than with respect
 
  which we believe to be tight 
to ir min   for arbitrary m  we provide a lower bound of    m
   maximum damage ratio  as is the case for the jobs of load   in figure    some jobs
might get hurt as a result of a coalitional deviation  the third measure that we consider
is the worst possible effect of a deviation on jobs that are not members of the deviating
coalition  formally  the maximum damage ratio is the maximal ratio between the costs of
a non coalition member before and after the deviation  variants of this measure have been
considered in distributed systems  e g   the byzantine generals problem  lamport  shostak 
  pease         and in rational secret sharing  halpern   teague          in section   
we prove that the maximum damage ratio is less than   for any ne configuration  and less
   in a rational secret sharing protocol  a set of players  each holding a share of a secret  aims to jointly
reconstruct it  viewing the protocol as a game  the players utilities are typically assumed to satisfy the
following two basic constraints   i  each player prefers learning the secret over not learning it  and  ii 
conditioned on having learned the secret  each player prefers as few as possible other players to learn it 

   

fiapproximate strong equilibrium

than    for any lpt configuration  both bounds hold for any m     and for both cases we
provide matching lower bounds 
in summary  our results in sections      see table    indicate that ne configurations
are approximately stable with respect to the ir min measure  moreover  the performance of
jobs outside the coalition would not be hurt by much as a result of a coalitional deviation 
as for ir max   our results provide an additional strength of the lpt rule  which is already
known to possess attractive properties  with respect to  e g   makespan approximation and
stability against unilateral deviations  

ne
lpt

ir min
upper bound
m 
m  
 
 
   m  
 
 
 



 
 m

 
 

 


 
 

lower
bound
 
 

 
 

 

 
 

ir max
upper
lower
bound bound
unbounded
 
   m   

 

 
m

dr max
upper lower
bound bound
 
 
 
 

 
 

table    our results for the three measures  unless specified otherwise  the results hold for
arbitrary number of machines m 
in section    we study computational complexity aspects of coalitional deviations  we
find that it is np hard to determine whether an ne configuration on m    identical
machines is an se  moreover  given a particular configuration and a set of jobs  it is nphard to determine whether this set of jobs can engage in a coalitional deviation  for
unrelated machines  i e   where each job incurs a different load on each machine   the above
hardness results hold already for m     machines  these results might have implications
on coalitional deviations with computationally restricted agents 
related work  ne is shown in this paper to provide approximate stability against coalitional deviations  a related body of work studies how well ne approximates the optimal
outcome of competitive games  the price of anarchy was defined as the ratio between the
worst case ne and the optimum solution  papadimitriou        koutsoupias   papadimitriou         and has been extensively studied in various settings  including job scheduling
 koutsoupias   papadimitriou        christodoulou et al         czumaj   vocking        
network design  albers et al         anshelevich et al         anshelevich  dasgupta  tardos  wexler    roughgarden        fabrikant et al          network routing  roughgarden
  tardos        awerbuch  azar  richter    tsur        christodoulou   koutsoupias 
       and more 
the notion of strong equilibrium  se   aumann        expresses stability against coordinated deviations  the downside of se is that most games do not admit any se  even
amongst those admitting a nash equilibrium  various recent works have studied the existence of se in particular families of games  for example  it has been shown that in every job
scheduling game and  almost  every network creation game  an se exists  andelman et al  
       in addition  several papers  epstein  feldman    mansour        holzman   lawyone              rozenfeld   tennenholtz        provided a topological characterization
for the existence of se in different congestion games  including routing and cost sharing
   

fifeldman   tamir

connection games  the vast literature on se  e g   holzman   law yone             
milchtaich        bernheim  peleg    whinston        concentrate on pure strategies and
pure deviations  as is the case in our paper  in job scheduling settings  it was shown by
andelman et al         that if mixed deviations are allowed  it is often the case that no se
exists  when an se exists  clearly  the price of anarchy with respect to se  denoted the
strong price of anarchy by andelman et al         is significantly better than the price of
anarchy with respect to ne  andelman et al         a  fiat   olonetsky         leonardi
  sankowski        
following our work  ir min bounds for the case of m     machines have been provided
by chen         who extended our bound of    for ne schedules  and provided a bound of
      



   
    

       for lpt based schedules 

   model and preliminaries
in this section we give a formal description of the model and provide several useful observations and properties of deviations by coalitions 
    resilience to deviations by coalitions
we first present a general game theoretic setting and then describe the specific job scheduling
setting which is the focus of this paper 
a game is denoted by a tuple g   hn   sj     cj  i  where n               n  is the set of
players  sj is the finite action space of player j  n   and cj is the cost function of player j 
the joint action space of the players is s   ni   si   for a joint action s    s            sn    s 
we denote by sj the actions of players j      j  i e   sj    s            sj    sj             sn   
similarly  for a set of players   also called a coalition  we denote by s and s the actions
of players in  and not in   respectively  the cost function of player j maps a joint action
s  s to a real number  i e   cj   s  r 
a joint action s  s is a pure nash equilibrium  ne  if no player j  n can benefit from
unilaterally deviating from his action to another action  i e   j  n a  sj   cj  sj   a  
cj  s   a pure joint action of a coalition   n specifies an action for each player in the
coalition  i e   s   j sj   a joint action s  s is not resilient to a pure deviation of a
coalition  if there is a pure joint action s  of  such that cj  s   s      cj  s  for every
j    i e   the players in the coalition can deviate in such a way that each player strictly
reduces its cost   in this case we say that the deviation to s     s   s    is a profitable
deviation for coalition  
a pure joint action s  s is resilient to pure deviations by coalitions if there is no
coalition   n that has a profitable deviation from s 
definition     a pure strong equilibrium  se  is a pure joint action that is resilient to
pure deviations of coalitions 
clearly  a strong equilibrium is a refinement of the notion of nash equilibrium  in particular  if s is a strong equilibrium  it is resilient to deviations of coalitions of size    which
coincides with the definition of ne  

   

fiapproximate strong equilibrium

    job scheduling on identical machines
a job scheduling setting with identical machines is characterized by a set of machines m  
 m            mm    a set             n  of jobs  where a job j has processing time pj   an assignment
method produces an assignment s of jobs into machines  where sj  m denotes the machine
job j is assigned to  the assignment is referred to as a schedule or a configuration  we use
the two terms interchangeably   the load of a machine mi inp
a schedule s is the sum of the
processing times of the jobs assigned to mi   that is li  s    j sj  mi pj   for a set of jobs
s
  let s     j  sj   denote the set of machines on which the members of  are assigned
in schedule s 
the makespan of a schedule is the load on the most loaded machines  a social optimum
minimizes the makespan  i e   op t   mins makespan s  
for each job scheduling setting define a job scheduling game with the jobs as players 
the action space sj of player j  n are all the individual machines  i e   sj   m   the
joint action space is s   nj   sj   a joint action s  s constitutes a schedule  in a schedule
s  s player j  n selects machine sj as its action and incurs a cost cj  s   which is the
load on the machine sj   i e   cj  s    li  s   where sj   mi   in a job scheduling game  the
makespan is also the highest cost among all players  formally  makespan s    maxj cj  s  
 
let s and s  be two configurations  let pis s
be a binary indicator whose value is   if
   i 
there is a job j such that sj   mi  and s j   mi   i e   if there is a job that chooses mi 
in s but mi  in s     and   otherwise  when clear from the context  we abuse notation and
 
denote pis s
by pi   i    in addition  we denote li  s  and li  s    by li and l i   respectively 
   i 
let s     s   s    be a profitable deviation from s for a coalition   the improvement
ratio of a job j   such that sj   mi  and s j   mi   i e   a job migrating from machine
 
mi  to machine mi    is denoted by irs s  j    li   s  li   s     clearly  for any job j   
 
irs s  j       the damage ratio of a job j    such that sj   s j   mi is denoted by
 
drs s  j    li  s    li  s  
if sj    s j   we say that job j migrates in the deviation  note that  in our terminology  a
job can be a member of a profitable deviation even if it does not migrate in the deviation 
yet  every job that migrates in the deviation is a member of the deviating coalition by
definition 
definition     given schedules s and s     s   s     the minimal improvement ratio of s 
 
with respect to s is ir min  s  s      minj irs s  j   in addition  the minimal improvement
ratio of a schedule s is ir min  s    maxs    s  s    n ir min  s  s    
given schedules s and s     s   s     the maximal improvement ratio of s  with respect
 
to s is ir max  s  s      maxj irs s  j   in addition  the maximal improvement ratio of a
schedule s is ir max  s    maxs    s  s    n ir max  s  s    
given schedules s and s     s   s     the maximal damage ratio of s  with respect to s
 
is dr max  s  s      maxjn drs s  j   in addition  the maximal damage ratio of a schedule
s is dr max  s    maxs    s  s    n dr max  s  s    
in particular  we can define the notion of  se  albers        in terms of the minimum
improvement ratio as follows 
definition     a schedule s is an  strong equilibrium   se  if ir min  s    
   

fifeldman   tamir

we next provide several useful observations and claims we shall use in the sequel  we
refer to a profitable deviation from an ne schedule as an ne originated profitable deviation 
similarly  a profitable deviations from a schedule produced by the lpt rule is referred to
as an lpt originated profitable deviation 
the first observation shows that in any ne originated profitable deviation  if a job
migrates to some machine  some other job must migrate out of that machine  formally 
observation     let s be an ne and let s     s   s    be a profitable deviation  if s j   mi
for some j    then j     such that sj     mi and s j     mi  for some i     i 
this is obvious  since if job j strictly decreases its cost by migrating to a machine that no
other job leaves  it can also profitably migrates unilaterally  contradicting s being an ne 
we next define a special deviation structure  called a flower structure in which all the
deviations are from or to the most loaded machine 
definition     let m  be the most loaded machine in a given schedule s  we say that a
s s 
s s 
deviation s  obeys the flower structure if for all i      p  i
  pi  
    and for all i  j     
 

s s
pi j
     see figure    

m 

m 
m 

m 

m 

figure    a graph representation of a coalition on   machines obeying the flower structure  there
 

s s
is an edge from mi to mj if and only if pi j
    

 

s s
in particular  for m      a deviation from s to s  obeys the flower structure if p   
 
 

 

 

 

 

s s
s s
s s
s s
s s
p   
  p   
  p   
    and p   
  p   
     recall that for simplicity of presentation 
 

s s
we write in the sequel pi j to denote pi j
and we also write li and l i to denote li  s  and
li  s     respectively 

claim     any ne originated profitable deviation on three machines obeys the flower structure 
proof  let s be an ne and m  be the most loaded machine in s  and let s  be a profitable
deviation  we first show that p      p         assume first that both p   
p   p   p    
thus  l     l  and l     l    clearly  since the total load does not change  i li   i l i  
therefore  it must hold that l     l    however  no profitable deviation can increase the
load on the most loaded machine  a contradiction  therefore  at most one of p      p    can
be    assume w l o g that p         by observation     some job leaves m    and by the
above it cannot be to m    thus  it must be that p         similarly  some job
m    if
pleaves p
p         then we get that l     l    l     l    and l     l    contradicting i li   i l i  
   

fiapproximate strong equilibrium

 
 
 
if p        then
p we getpthat  l    l    l    l   no job is added to m     and l    l   
contradicting i li   i li again  thus  p         the proof of p        is analogous 
it remains to show that p      p      p      p         we know that all three machines
are assigned jobs in s  that were not assigned to them in s  by the above p      p        
by observation     some job leaves each of m    m    therefore  p      p         also  some
job leaves m    thus at least one of p      p    equals    assume w l o g that p         we
show that also p         in particular  we show that l     l    and since p        it must be
that p         assume the opposite  that is l    l    we already know that
p        
p p     p
thus  l     l    l     l    and by our assumption l    l    that is  i l i   i li   a
contradiction 

it is known that any ne schedule on two identical machines is also an se  andelman
et al          by the above claim  at least four jobs change machines in any profitable
deviation on three machines  clearly  at least four jobs change machines in any coalition
on m     machines  therefore 

corollary     every ne schedule is stable against deviations by coalitions of size three or
less 
the next two propositions further characterize any coalition deviation on three machines 
we show that while m  is the most loaded machine before the deviation  it becomes the
least loaded after the deviation 
proposition     in any ne originated deviation on three machines  the loads on the two
less loaded machines in increasing  that is  l     l  and l     l   
proof  assume on the contrary that l    l    by claim      p    p
  p      p
   thus 
   
l     l    l     l    and by our assumption l    l    that is 
l
i i
i li   a
 
contradiction  the proof of l    l  is analogous 

proposition     in any ne originated deviation on three machines the most loaded machine becomes the least loaded machine  that is  l     min l     l     
proof  by claim      p         and thus l     l    by the above proposition  l    l    
thus  l     l     the proof of l     l   is symmetric 


    strong equilibrium
in this section  the stability of configurations is measured by the minimal improvement ratio
measure  we first provide a complete analysis  i e  matching upper and lower bounds  for
three identical machines  for both ne and lpt  for arbitrary m  we provide an upper
bound for ne and lpt  and show that the lower bounds for m     hold for any m 
theorem     any ne schedule on three machines is a     se 
   we note that for unrelated machines  the improvement ratio cannot be bounded within any finite factor
even for two machines  this can be seen by a simple example of two jobs and two machines  where the
load vector of job   is        and the load vector of job   is        if job i is assigned to machine i  for
i          the resulting configuration is an ne  with load   on each machine  however  both jobs can
reduce their load from   to  by swapping 

   

fifeldman   tamir

proof  let s be an ne configuration on three machines  and let r   ir min  s   by claim
     the deviation obeys the flower p
structure  therefore  l    l   r   l    l   r   l   
l   r   and l    l   r  let p   j pj  also   l    l    l     summing up the above
inequalities we get r   l    p    l     p   
proposition     the load on the most loaded machine is at most half of the total load 
that is  l   p   
proof  let g   max l  l    l  l     by the flower structure  there are at least two jobs on
m    thus g  l       since otherwise some job would benefit from leaving m    contradicting
the ne  by definition of g  we know that  l   l    l     g  and since  g  l    we get
that l   p   

distinguish between two cases 
   l    p    in this case r   l    p    l     p      p      p          
   l     p    it means that l     l      p    m  and m  have the rest of the load  
that is  at least one of l     l      p    w l o g  let it be m    by the flower structure
some job from m  migrates m    this jobs improvement ratio is l   l     which  by
proposition      is less than  p      p           thus  again  r       

the above analysis is tight as shown in figure    moreover  this lower bound can be
extended to any m     by adding m    machines and m    heavy jobs assigned to these
machines  thus 
theorem     for m     there exists an ne schedule s such that ir min  s        
for lpt configurations  the bound on the minimum improvement ratio is lower  the
proof of the following theorems appear in appendix a 
theorem     any lpt schedule on three machines is a       


 
 

         se 

theorem     for any m     there exists an lpt schedule s such that ir min  s        


 
   

we next provide upper bounds for arbitrary m  our analysis is based on drawing a
connection between the makespan approximation and the se approximation  assume that
a given schedule is an r approximation for the minimum makespan  we show that under
some conditions on the original schedule  if a subset of jobs form a coalition for which
ir min   r  then  by considering only a subset of machines  it is possible to get a schedule
which is apparently better than the optimal one  we first define the set of assignment rules
for which the above connection exists 
definition     let s be a schedule of an instance i   hn  m i  given m  m   let i  
hn   m i be an instance induced by s  m such that n    j sj  m    an assignment method 
a  is said to be subset preserving if for any i and m  m   it holds that sj   sj for

any j  n   where s and s are the assignments produced by a on the instances i and i 
respectively 
   

fiapproximate strong equilibrium

claim     lpt is a subset preserving method 
proof  the proof is by induction on the number of the jobs in n   we show that for any
k    n   the first k jobs in n   are assigned on the same machine when lpt is executed
 note that since n is a sublist of n   the jobs in n are in the
on input i and on input i 
same order as in n   the first job is scheduled on the first empty machine among m   for
any other job j  n   by the induction hypothesis  when j is scheduled  the load on each
of the machines is identical to the load of the corresponding machines at the time j was
scheduled as a member of n   this load is generated only by jobs in n that come before j
in n   therefore  by lpt  j is scheduled on the least loaded machine among the machines
m   that is  sj   sj   we assume that lpt uses a deterministic tie breaking rule if there
are several least loaded machines in n   therefore sj   sj also in this case 

lemma     let a be an assignment method that is  i  subset preserving   ii  yields nash
equilibrium  and  iii  approximates the minimum makespan within a factor of r  where r   
is non decreasing in m  then  a produces an r se 
proof  assume for contradiction that there exists an instance i such that in the schedule s
produced by a  there exists a coalition in which the improvement ratio of every member is
greater than r  let  be such a coalition of minimum size  if there is a job j   that does
not migrate  then the set of jobs     j  is a smaller coalition  contradicting the minimality
of   therefore  for every j    it holds that sj    s j   we next show that s     s     
first  s    s      that is  for every machine in s   from which a job j migrates  there
must exist a job migrating to it  otherwise      j  is a smaller such coalition  contradicting
the minimality of   second  s      s    that is  for every machine to which a job j
migrates  there must exist a job migrating from it  otherwise job j can improve unilaterally 
in contradiction to s being an ne   given that s     s      denote this set of machines by
m   and let m    m    finally  let n  n be the set jobs assigned to machines in m by a 
consider the instance i   hn   m i  since a is subset preserving  the jobs of n are
scheduled by a on m in i exactly as their schedule on m when scheduled as part of i  in
particular  when i is scheduled by a  the same deviation of  exists  in which every job in
 improves by a factor greater than r  and all the machines in m take part in it  in other
words  for any pair of machines i  j  such that pi j      we have li  l j   r m   r m  
where r m  is the approximation ratio of a on m machines  on the other hand  since a
 where op t  i 
 is
produces an r m  approximation  for any machine i  li  r m op t  i  

the minimum possible makespan of i on m machines  therefore  if pi j     then r m   
li  l j 


r m op t  i 
 
l j

this implies that for any machine j that receives at least one job 


l j   op t  i  
however  since at least one job has migrated to each of the m participating machines 
after the deviation the machines m are assigned all the jobs of n and they all have load
 a contradiction 
less than op t  i  

let s be an ne on m machines  clearly  for any m  m   the induced schedule of s on
 
the set of machines m is also an ne  also  it is known that any ne provides a     m  
 approximation to the makespan  finn   horowitz        schuurman   vredeveld        
 
this implies that lemma     can be applied with r      m  
to any assignment that yields
an ne  therefore 
   

fifeldman   tamir

corollary     any ne schedule on m identical machines is a    

 
m    

 se 

the next result is a direct corollary of lemma      claim      and the fact that lpt
 
  approximation to the makespan  graham        
provides a        m
 
corollary      any schedule produced by lpt on m identical machines is a        m
 se 

the above bounds are not tight  but the gap between the lower and upper bounds is
only a small constant 

   maximum improvement ratio
in this section  we analyze the maximum improvement ratio measure  we provide a complete analysis for ne configurations and any m     and for lpt configurations on three
machines  the lower bound for lpt on three machines can be extended to arbitrary m  in
contrast to the other measures we consider in this paper  where ne and lpt differ only by
a small constant  it turns out that with respect to the maximum improvement ratio  ne
and lpt are significantly different  while the improvement ratio of ne originated deviations can be arbitrarily high  for deviations from lpt configurations  the highest possible
improvement ratio of any participating job is less than     
theorem     fix r     for any m    machines  there exists an instance with m
machines and an ne s such that ir max  s    r 
proof  given r  consider the ne configuration on three machines given in figure   a   the
coalition consists of         r   r   their improved schedule is given in figure   b   the
improvement ratio of the jobs of load   is  r     r  for m      dummy machines and jobs
can be added 

m 

 r  

 

 r

m 

 r  

 r

 r  

m 

 r  

 

 r

m 

 r  

 r

 r  

m 

 r

 r

m     

 r
 a 

 
 b 

figure    an ne originated deviation in which the jobs of load   have improvement ratio
r 

in contrast to ne originated deviations  for lpt originated deviations we are able to
bound the maximum improvement ratio by a small constant  the proof of the following
claim is given in appendix a 
theorem     let s be an lpt schedule on three machines  it holds that irmax  s       

   

fiapproximate strong equilibrium

  

 m   

mm

m 

 m  

  

 m   

m 

m 

 m  

 

 m  

 m  

 

 m  



 m  


mm

 



 

    m   

m           

 a 

m m

 b 

figure    an lpt originated deviation on m machines in which the job of load      assigned to
m  has improvement ratio arbitrarily close to   

 
m 

the above bound is tight  as demonstrated in figure   for m      where the im 
provement ratio is    m
        moreover  this figure shows that this lower bound can be
generalized for any m     note that the coalitional deviation in this example obeys the
flower structure  we believe that this example is tight  as the flower structure seems to
enable the largest possible decrease in the load of a single machine  the job of load     
that remains on m  improves its cost from  m       to m        that is  for this job  j 
 
ir j     m  
m          m    formally 
theorem     for any m     there exists an lpt configuration s such that ir max  s   
 
  m
  for an arbitrarily small      

   maximum damage ratio
in this section  we provide results for the maximum damage a profitable deviation can
impose on jobs that do not take part in the coalition  formally  the quality of a configuration is measured by maxj  dr j   we provide a complete analysis for ne and lpt
configurations and any m     once again  we find that lpt provides a strictly better
performance guarantee compared to general ne  the cost of any job in an lpt schedule
cannot increase by a factor    or larger  while it can increase by a factor arbitrarily close to
  for ne schedules 
theorem     for any m  dr max  s      for every ne configuration s 
proof  let s     s    s   be a profitable deviation  and let m  be the most loaded machine
among the machines that either a job migrated from or a job migrated into  by observation      there must be a job that migrated out of m    this implies that there must be at
least two jobs on m  in s  since if there were a single job  it could not benefit from any
deviation  therefore  there exists a job j such that sj   m  and pj  l      using the fact
that s is an ne once again  we get that for any machine i       li  l      otherwise job j
can improve by unilaterally migrating to mi   
in addition  for every machine i to which a job migrates  it must hold that l i   l    this
is because a job that migrated to mi left some machine j with load lj  l    combining

   

fifeldman   tamir

the above bounds  we get that for every job j that stays on some machine i to which a job
 
migrates it holds that drs s  j    l i  li   l   li    li   li     

the above analysis is tight as shown in figure    the damage ratio of the jobs of load
 r    is   r       r   which can be arbitrarily close to    formally 
theorem     for any m     there exists an ne configuration s such that dr max  s   
    for an arbitrarily small      
for lpt configurations we obtain a smaller bound 
theorem     for any m  dr max  s   

 
 

for every lpt configuration s 

proof  let s     s    s   be a profitable deviation  and let m  be the most loaded machine
among the machines that either a job migrated from or a job migrated into  since every
lpt configuration is an ne  m  must have at least two jobs  following the same arguments
as in the proof of theorem       assume w l o g that the lightest  also last  job assigned
to m  has load    and denote this job the   job  this assumption is valid because the
minimum improvement ratio is invariant to linear transformations  let     l      since s
is an lpt configuration  for every machine i  it must hold that li     otherwise  the   job
would have been assigned to a different machine   in addition  since for every machine j
from which a job migrates  lj  l    it must hold that for every machine i to which a job
migrates l i          we distinguish between two cases 
 
case  a         then  for every machine mi to which a job migrates  l i  li      
     
case  b          we show that no profitable deviation exists in this case  if        then
m  has exactly   jobs  of loads   and    since lpt assigns the jobs in a non increasing order 
by lpt  every other machine must have  i  one job of load at least    and possibly other
small jobs   or  ii  two jobs of load at least    and possible other small jobs   let k and k  
be the number of machines of type  i  and  ii   respectively  excluding m     thus  there is
a total of k     jobs of load   and  k       jobs of load    after the deviation  no machine can
have jobs of load   and   together  nor can it have three jobs of load    the k     machines
assigned with the k     jobs of load   after the deviation cannot be assigned any other job
of load x  so  we end up with  k       jobs of load   that should be assigned to k   machines 
thus  there must be a machine with at least three jobs of load    contradiction 

m 

   

  

   

m 

   

 

m 

   

  

   

m 

   

   

m 

   

 

   

m 

  

 

 a 

  

 

   
   
   

 b 

figure    an lpt originated deviation  in which the damage ratio of the job of load       on m 
is arbitrarily close to     

the above analysis is tight as shown in figure    moreover  by adding dummy machines
and jobs it can be extended to any m     formally 
   

fiapproximate strong equilibrium

theorem     for any m     there exists an lpt configuration s such that dr max  s   
 
    for an arbitrarily small      

   approximation scheme
in this section we present a polynomial time approximation scheme that provides a       se  the ptas can be applied to any fixed number of machines 
definition     a vector  l    l          lm   is smaller than  l    l          lm   lexicographically if for
some i  li   li and for all b   i  lb   lb   a configuration s is lexicographically smaller than
s if the vector of machine loads l s     l   s           lm  s    sorted in non increasing order 
is smaller lexicographically than l s   sorted in non increasing order 
the ptas combines a lexicographically minimal assignment of the longest k jobs with
the lpt rule applied to the remaining jobs  the value of k depends on the desired approximation ratio  to be defined later  
formally  the algorithm ak is defined as follows 
   find a lexicographically minimal assignment of the longest k jobs 
   add the remaining jobs greedily using the lpt rule 
in particular  since a lexicographically minimal assignment minimizes the makespan
 given by the load on the most loaded machine   the above algorithm is a ptas for the
minimum makespan problem  as it is a restriction of the known ptas of graham        
in grahams algorithm  in step    the first k jobs are scheduled in a way that minimizes the
makespan  in our scheme  the requirement on the schedule of the long jobs is more strict 
in particular  as shown by andelman et al          the schedule of the longest k jobs is an
se of this sub instance 
 
given   let a denote the above algorithm with k   m
   we first show that for any
subset of machines m  m   a provides a        approximation to the makespan of the
subset of jobs scheduled on m   formally 
lemma     let i   hn  m i be an instance of job scheduling with machines m and jobs
n   let s be an output of a on i  for a given m  m   let n  n be the set of jobs
scheduled on m in s  consider the instance i   hn   m i  let s be the assignment of i

induced by s  then s is        approximation for the makespan of i 

proof  let la
max  m   denote the largest completion time of a machine in a set m in the
schedule produced by a   and let op t  i  denote the minimum makespan of i  let t
denote the largest completion time of a long job in n scheduled on m in the minimal
lexicographic schedule found in step    since s is a minimal lexicographic assignment  t is

the minimum makespan of the long jobs of n   in particular  t is a lower bound for op t  i  
a

thus  if the makespan on m is not increased in the second step  that is  lmax  m     t  
 otherwise  the makespan of m is larger than t   let j be the job
then a is optimal for i 
determining the makespan of m  the job who completes last in n    by definition of lpt 
this implies that all the machines m were busy when job j started its execution  otherwise

   

fifeldman   tamir

job j could start earlier   since the optimal schedule from step   has no intended idles  it

holds that all the machines m are busy during the time interval     la
max  m    pj  
pn
let p  
j   pj be the total processing time of the n jobs in n   by the above 
a

p  m lmax  m    pj    also  since the jobs are sorted in non increasing order of processing

times  we have that pj  pk   and therefore p  m la
max  m    pk      a lower bound for

the optimal solution of i is a schedule in which the load on the m machines is balanced 


  p  m  which implies that la
thus op t  i 
max  m    op t  i    pk    
a


in order to bound lmax  m   in terms of op t  i   we need to bound pk   in terms of
 we first bound the gap between op t  i  and op t  i  
 the following assumption
op t  i  
is used 
claim     let z be the job determining the makespan of a  i   w l o g   z is not one of
the k long jobs 
proof  assume that the makespan of a  i  is determined by one of the long jobs  let m 
be the machine on which z is scheduled  in particular  m  processes only long jobs  fix the
schedule on m  and repeat the ptas for the remaining jobs and machines with the same
value of k  repeat if necessary until the makespan is determined by a job assigned using
the lpt rule 
note that the above algorithm is still polynomial  as the ptas might be repeated at
most m    times  which is a constant  the approximation ratio is improving for any subinstance  same number of jobs are considered long  but among a set of fewer jobs  that is 
a larger portion of the jobs is scheduled optimally  therefore the approximation ratio proof
is valid for the sub instance  finally  by merging the last ptas result with the schedule on
the machines holding long jobs only  we get a ptas for the whole instance  since the long
jobs were scheduled optimally in each step  moreover  the load on each such machine is a
lower bound on the makespan of the sub instance that was considered when the machine
gets these jobs 

   pk    
claim     op t  i   op t  i 
proof  let z be the job determining the makespan of a  i   by claim      z can be assumed

to be assigned in step    by lpt rule   if z  n then a  i    la
max  m    else  the load on
any machine in m is at least a  i   pz   since otherwise job z should have been assigned
to one of the machines in m   therefore  even if the total load of n is balanced among
  a  i   pz   since pz  pk     and op t  i   a  i   we get
m   we have that op t  i 
   pk    
op t  i   a  i   op t  i 


claim     pk    op t  i 

m
k  

proof  consider the k     longest jobs  in an optimal schedule  some machine is assigned at
least d k      me      bk mc of these jobs  since each of these jobs has processing
time at least pk     we conclude that op t  i        bk mc pk     which implies that

   

fiapproximate strong equilibrium

 
pk    op t  i       bk mc   by claim      pk   
 mop
 t  i       bk mc    op t  i    

pk          bk mc   it follows that pk    op t  i 

k  
a
a





back to the
on lmax  i   we can now conclude that lmax  i   op t  i    pk   
 mbound


     
op t  i      k     op t  i   

we can now prove the main result of this section  showing that the schedule s produced
by a   is a        se  the stability is proved in the following theorem  as for the running
time  for fixed m  k  a minimal lexicographic schedule of the first k jobs can be found in
o mk   steps  applying the lpt rule takes additional o nlogn   for a   we get that the
running time of the scheme is o mm     that is  exponential in m  that is assumed to be
constant  and    

theorem     a produces an        se 
proof  the proof is similar to the proof of lemma      assume for contradiction that there
exists an instance i for a on m machines  such that in the schedule of i produced by
a   there exists a coalition in which the improvement ratio of every member is larger than
      let  be such a coalition of minimum size  for every machine from which a job
j migrates  there must exists a job migrating to it  otherwise      j  is also a coalition
having ir min         in contradiction to the minimality of   let m denote the set of
machines that are part of the coalition  let n  n be the set jobs assigned to m by a  
and let m    m    consider the instance i   hn   m i  and the schedule s  s  by lemma
 the coalition  exists in s  and all
     s is a        approximation to the makespan of i 
the machines m take part in it  moreover  each of the jobs in  improves by a factor of
more than         in other words  for any pair of machines i  j  such that pi j      we have
li  l j         on the other hand  since s is a        approximation  for any machine i 

t  i 
 therefore  if pi j     then        l i      op
  in other words 
li        op t  i  
 
lj

lj


for any machine j that receives at least one job 
  op t  i  
however  since at least one job has migrated to each of the m participating machines 
after the deviation the machines m are assigned all the jobs of n and they all have load
 a contradiction 
less than op t  i  

we note that for any      the schedule produced by algorithm a is an ne  similar
to the stability proof of lpt  fotakis et al          it is easy to verify that if some job
can benefit from leaving some machine mi then also the shortest job on this machine can
benefit from the same migration  however  independent of whether this short job  of length
pj   is assigned in step   of the algorithm  as part of a minimal lexicographical schedule of
the long job  or in step    by lpt   the gap between li and the load on any other machine
is at most pj  
l j

   computational complexity
it is easy to see that one can determine in polynomial time whether a given configuration
is an ne  yet  for se  this task is more involved  in this section  we provide some hardness
results about coalitional deviations 
theorem     given an ne schedule on m    identical machines  it is np hard to determine if it is an se 
   

fifeldman   tamir

m 

b  

b  

 b  

m 

b  

jobs of a 

 b  

m 

b  

b  

 b  

m 

b  

jobs of a 

 b  

 b

m 

b  

 b  

m 

jobs of a

b  
 b 

 a 

figure    partition induces a coalition in a schedule on identical machines 

proof  we give a reduction from partition  given a set a of n integers a            an with
total size  b  and the question whether there is a subset of total size b  construct the
schedule in figure   a   in this schedule on three machines there are n     jobs of loads
a            an   b     b     b     b     we assume w l o g  that mini ai     else the whole
instance can be scaled  thus  schedule   a  is an ne  for m     add m    machines each
with a single job of load  b 
claim     the ne schedule in figure   a  is an se if and only if there is no partition 
proof  if there is a partition into k    k    each having total size b  then the schedule in
figure   b  is better for the jobs originated from the partition instance and for the two
 b     jobs  all the partition jobs improved from cost  b to cost  b     and the  b    jobs improved from  b    to  b    
next  we show that if there is no partition then the initial schedule is an se  by theorem      in any action of a coalition on three machines  jobs must migrate to m  from both
m  and m    in order to decrease the load from  b     the set of jobs migrating to m 
must be the set of two jobs of load b     also  it must be that all the partition jobs move
away from m    otherwise  the total load on m  will be at least  b           b     which
is not an improvement for the  b     jobs  this implies that the jobs of m  split between
m  and m    however  since there is no partition  one of the two subsets is of total load at
least b      these jobs will join a job of load b    to get a total load of at least  b  which
is not an improvement over the  b load in the initial schedule 

this establishes the proof of the theorem 

a direct corollary of the above proof is the following 
corollary     given an ne schedule and a coalition  it is np hard to determine whether
the coalition can deviate 
theorem     holds for any m    identical machines  for m     a configuration is an
ne if and only if it is an se  andelman et al          and therefore it is possible to determine
whether a given configuration is se in polynomial time  yet  the following theorem shows
that for the case of unrelated machines  the problem is np hard already for m      in the
unrelated machines environment  the processing time of a job depends on the machine on
which it is assigned  for every job j and machine i  pi j denotes the processing time of job
j if processed by machine i 
theorem     given an ne schedule on m    unrelated machines  it is np hard to
determine if it is an se 
   

fiapproximate strong equilibrium

proof  we give a reduction from partition  given n integers a            an with total size
 b  and the question whether there is a subset of total size b  construct the following
instance for scheduling  there are   machines and n     jobs with the following loads  for
      n      
pi     ai    and pi      ai     i              n    pn       b  and pn        b   n 
consider the schedule in which all the jobs            n are on m    and job n     is on m    the
completion times of both machines are are  b   n  it is an ne 

m 

jn  

 b n

m 

m 

j   jn

 b n

m 

 a 

 b  a  

jobs of a 
jobs of a 

jn  

 b  a  

 b 

figure    partition induces a coalition in a schedule on related machines 

claim     the ne schedule in figure   a  is an se if and only if there is no partition 
proof  if there is a partition into a    a    each having total size b  then the schedule given
in figure   b  is better for everyone  the completion time of m  is  b    a       b   n
and the completion time of m  is  b    a       b   n 
next  we show that if there is no partition then the initial schedule is an se  since there
is no partition  in any partition into a    a    one of the two subsets  w l o g   a  has total
size at least b      a  will only increase its load by migrating to m  even alone  bearing
a load of at least  b        a    instead of  b   n   therefore  a  will not leave m   
however  if a  stays at m    job n     is better off staying at m   since if it migrates  it
bears a load of at least  b        a    which is not smaller than  b   n for any  a    and
     n      

this establishes the proof of the theorem 

a direct corollary of the above proof is the following 
corollary     given an ne schedule on unrelated machines and a coalition  it is np hard
to determine whether the coalition can deviate 

   conclusions and open problems
in this paper we study how well ne schedules and a special subset of them  those obtained
as an outcome of the lpt assignment rule  approximate se in job scheduling games  we
do so using the two measures ir min and ir max   in addition  we use the dr max measure to
study how hurtful coalitional deviations can be to agents outside the coalition  we present
upper and lower bounds for ne and lpt based schedules  and demonstrate that lptbased schedules perform better than general ne schedules  where the gap is more significant
under the ir max measure  for both ne and lpt  ir min is bounded by a small constant 
   

fifeldman   tamir

implying some notion of stability against coalitional deviations  assuming the existence of
a transition cost   as for ir max   it is bounded by a constant for lpt schedules  but there
is no universal bound for ne schedules  yet  lpt is not the best possible approximation
to se  as demonstrated by the se ptas we design  which computes a schedule with ir min
arbitrarily close to   
some of the problems that remain open are 
   for the ir min measure  there is a gap between the upper and lower bounds for m        
 
   for ir max of lpt originated deviations  and m    we presented a lower bound of   m
 
and a matching upper bound of   for m      closing this gap for a general m is left as an
open problem 
   this paper focuses on the case of identical machines  it would be interesting to study the
topic of approximate strong equilibrium in additional job scheduling settings  in particular 
the setting of uniformly related machines is part of our ongoing research  where already
the case of two machines seems rather involved  note that  as mentioned in section    for
unrelated machines  ir min is unbounded already for two machines 
   our measures are defined with respect to the strong equilibrium solution concept  where
a profitable deviation is defined as one in which every member of the coalition strictly
benefits  it would be interesting to consider the measures we introduce here with respect
to additional solution concepts  such as coalition proof nash equilibrium  bernheim et al  
       which is stable against profitable deviations that are themselves stable against further
deviations of sub coalitions   and also with respect to profitable deviations in which none
of the coalition members is worse off and at least one member is strictly better off 
in summary  we introduced three general measures for the stability and performance
of schedules under coalitional deviations  we believe that these measures can be used
to measure the stability and performance of various algorithms to coalitional deviations
and their performance in additional settings and games  we hope to see more work that
makes use of these measures within the framework of algorithmic game theory  it would be
interesting to study in what families of games nash equilibria approximate strong equilibria
as defined by the measures introduced here 
acknowledgments  we thank leah epstein and alon rosen for helpful discussions  we
also thank the anonymous reviewers for their insightful remarks and suggestions  the work
was partially supported by the israel science foundation  grant number          

appendix a  bounding ir min and ir max in lpt originated deviations
we first provide several observation that are valid for any lpt originated deviation  this
observations will be used later in the analysis  moreover  the observations characterize the
coalitions that might exist in schedules produced by the lpt rule  combined with the
flower structure  that characterizes all ne originated deviations on three machines   we
get that the set of lpt originated deviation are very limited and must follow a very strict
structure 
let m  be the most loaded machine  assume w l o g that the lightest  also last  job
assigned to m  has load    and denote this job the   job  this assumption is valid because
   our paper provides tight bounds for m     and the case of m     is considered by chen        

   

fiapproximate strong equilibrium

the minimum improvement ratio is invariant to linear transformations  for i         denote
by ki the set  and also the total load  of jobs that remain on mi   denote by hi j the set
 and also total load  of jobs migrating from mi to mj   for i      we let k    h      h    be
as above  but excluding the   job 
the next propositions show that the total size of jobs migrating from m    m  to m 
and remaining on m    m  is at least as large as the last job on m   
proposition a   each of h      h    is at least   
proof  we show that h        the proof for h    is analogous  assume for contradiction
that h         since lpt schedule the jobs in non increasing order  all jobs composing
h    were assigned after the   job  therefore  when the   job is assigned  the load on m  is
at most k  and at least h      h      k   else  lpt would assign the   job to m     thus 
k   h      h      k    by the flower structure  some job is migrating from m  to m   
such a migration is beneficial only if l     l    distinguish between two cases 
   the   job migrates to m    in this case  l     k    h         therefore  k   
h          h      h      k       or k    h      k    however  by the above 
k   h      h      k   h      k    a contradiction 
   the   job does not migrate to m    in this case  l     k    h      therefore  k   
h      h      h      k       or k    h      k       however  by the above 
k   h      h      k       h      k    a contradiction  the last inequality follows
from the fact that h    is not empty and consists of at least one job at least as big as
the smallest job on m   

proposition a   each of k    k  is at least   
proof  we first show k      assume k       it means that when the   job is assigned
to m    the load on m  is composed of jobs that are a subset of h    only  therefore  by
the lpt rule  h     k    h      h      however  by proposition      l     l    therefore
h      h         thus  k    h         however  h        a contradiction  to show
k      note that if k      then by a similar argument to the above h     h      h      by
proposition      l     l    therefore h      h      implying k    h         a contradiction 



theorem     any lpt configuration on three machines is a                    se 
proof  let m  be the most loaded machine in the schedule  recall that the lightest  also
last  job assigned to m  is a   job having load    let     l      for a give lpt schedule
s and a deviation s     s    s    let r   ir min  s  s    
by claim       obeys the flower structure  therefore 
 i  r  l   l      ii  r 
p
 
 
 
l   l     iii  r  l   l    and  iv  r  l   l    let p   j pj   clearly  p   l    l    l   
l     l     l     summing up  i  and  ii   we get
l   

l    l 
p         
 
 
 r
 r
   

   

fifeldman   tamir

by lpt  l    l      thus p          summing up  iii  and  iv   and using equation    
we get
r

 l 
        
        
 

 
 
 
  l 
p  l 
p      r
  

l  

implying 
r         

   
 r



        
 
             r
  

   
 r

 

            
 
       
 
 

and 
r

      
 
      

   

case          in this case  equation     implies r      
case           this case requires a closer analysis  let i be an instance for which lpt
creates a schedule with a deviation s     s    s   achieving the maximal ir min and       
for i         denote by hi the total load of jobs migrating from mi to m    and by ki the
total load of jobs that remain on mi   by the flower structure  l    h    h    therefore
h    k  and h    k    else it would not be beneficial for the jobs composing h    h  to
join the coalition  by propositions a   and a    each of h    h    k    k  is at least   
claim a   the load   on m  is incurred by exactly two jobs 
proof  clearly  since we consider the case       and the lightest job on m  has load    the
load   is incurred by at most two jobs  assume for contradiction that   consists of a single
job  then  there are exactly two jobs on m    of loads   and    by the flower structure  the
  job must join the coalition  w l o g assume it migrates to m    this migration is profitable
only if k       contradicting proposition a   

therefore  we can assume w l o g that in the instance achieving the maximal ir min   m 
is assigned three jobs of loads                for       
having              the bound in equation     implies
r

          
      
 
 
      
          

   

consider first the case in which one of the two big jobs on m  does not migrate away
from m    we show that no coalition deviation is beneficial in this case  w l o g  assume
that the job of length      remains on m  and the job of length      migrates to m   
the migration of      is profitable only if k          on the other hand  the migration
of the jobs migrating from m  to m  is profitable only if k    h                a
contradiction 
consider next the case in which the   job does not migrate away from m    w l o g 
assume that the job of length      migrates to m  and the job of length      migrates to
m    in order to bound r according to equation      we find a lower bound for        by
equation     
 r 

l    l 
k    h    k    h 
k    k     
   
 


 
 
l 
    h    h 
 
 
   

   

fiapproximate strong equilibrium

the third inequality is due to the fact that the ratio is decreasing with h    h    which is
known to be at least   by proposition a    the last inequality is since the migrations are
beneficial for the jobs leaving m    that is  k          and k         
equation     implies  r           or        r     next  we apply this bound on
    into equation     and obtain
r 

  r    
 
  r    



 
 
this implies r     
           
the case we did not analyze yet is the one in which all three jobs assigned to m  migrate
away from m  in the deviation  assume w l o g that the jobs of size    and   are migrating
to m  and the job of size      is migrating to m    clearly  the jobs of size            do
not migrate to the same machine because they are currently assigned with additional load
of   while both k  and k  are at least    by proposition a    figure   shows the schedule
before the migration  figure   a   and after the migration  figure   b   

m 

k 

h 

m 

k 

h 

m 

  

  

l

 

k  h 

m 

k  h 

m 

k 

  

     

m 

h 

h 

k 

  

k     
 

k     
h  h  

 b 

 a 

figure    an lpt coalition achieving maximal ir min  
next  we find a lower bound for      considering the migration from m  to m   
we know that r                    k     therefore       r   r   k  r    
 r   rk      because       considering the migration from m  to m    we know that
r   k    h     h    h     therefore  k   h   r       h  r  lpt assigns the   job
on m  with load          while the load on m  at that time was at most k    h   
therefore          k    h    implying h            k    also  by proposition a   
h      we can now use these bounds on h    h  to get improved bound on k    specifically 
k             k    r       r  this implies k  r   r   r                    back
to the bound of      we now have       r    r   r                       thus 
       r         r   note that     r  is positive since by theorem      r       
finally  we apply this bound on     into equation     and obtain
r

     r
       r         r 
 
 
       r         r 
     r



this implies r           

the above bound is tight  specifically 

theorem     for any m     there exists an lpt schedule s such that ir min  s             

 
 
 
 
    and consider figure   
r     
  h          k    k     
r


    
   
   

proof  let r  

where we substitute   

k   

    and h       the instance with the

   

     

fifeldman   tamir

rounded values appears in figure     it is easy to verify that all three jobs leaving m  have
improvement ratio of exactly r             and the same holds for the two jobs migrating


to m    thus  in this instance ir min             moreover  this lower bound can be easily
extended to any m     by adding dummy jobs and machines  thus 
m 

     

 

     

m 

m 

     

     

     

m 

     

m 

     

 

     

m 

     

 

     
 

     

     

 

     

 

     

 b 

 a 

figure    an lpt originated
deviation on three machines in which all migrating jobs im
 
 
prove by        


theorem     let s be an lpt schedule on three machines  it holds that ir max  s       
proof  let m  be the most loaded machine  recall that the lightest  also last  job assigned
to m  is a   job having load    for i         ki is the set  and also the total load  of jobs
that remain on mi   and hi j is the set  and also total load  of jobs migrating from mi to
mj   for i      we let k    h      h    be as above  but excluding the   job 
the   job is assigned to m  by lpt  meaning that the load on m  and m  is at least
k    h      h    at that time  since the load on m    m  could only increase after the time
the   job is assigned  we get that
k    h      h     k    h   

and

k    h      h     k    h     

   

therefore  sum up the two  
  k    h      h       k    k    h      h     

   

distinguish between two cases 
 i  the   job remains on m    in this case  l    k    h      h         l   
k   h      l    k   h      while after the coalition is active l     k   h     h        l    
k    h      l     k    h     
since the jobs in h    and h    are part of the coalition  l     l      l    deducing
h    and h    from both sides we get k    k    h      h       k       combining with
equation    we get 
h      h      h      h        
   
by proposition a    each of h      h      k    k  is at least    by proposition      the
improvement ratio of the   job  which equals l   l     is the largest among the coalition 
this ratio can now be bounded as follows 
k    h      h       
k    h      h       
l 
 
 
 
  
 
l 
k    h      h       
k    h      h       
 
   

fiapproximate strong equilibrium

the left inequality follows from equation    the right one follow from proposition a   and
from the fact that k  might be empty 
 ii  the   job leaves m    we assume w l o g that the   job moves to m    in this
case  l    k    h      h         l    k    h      l    k    h      while after the coalition
is active l     k    h      h      l     k    h         l     k    h     
since the jobs in h    and h    are part of the coalition  l     l      l    deducing
   h    and h    from both sides we get k    k    h      h       k       combining with
equation    we get 
h      h      h      h        
   
by propositions a   a    each of h      h      k    k  is at least    if k  is not empty
then the jobs of k  have improvement ratio l   l   which is  by proposition      the largest
ratio among the coalition  this ratio can now be bounded as follows 
k    h      h       
k    h      h       
l 
 
 

   
 
l 
k    h      h   
k    h      h   
 
the left inequality follows from equation    the right one follows from proposition a   
and from the fact that k  is not empty and includes at least one job of load at least   
if k  is empty  then as we show below  the maximal improvement ratio is less than     
we bound separately the improvement ratio of h      h      and hi    i           denote
by ri j the ir of jobs moving from mi to mj   in addition to equations   and    and to
propositions a   and a    we also use below proposition      specifically  h      h       
and h      h      finally  bear in mind that k     
r     

h      h       
k    h       
k    h       
 
l 
 

 
   
 
l 
k    h       
k    h       
k    h   
 

r     

h      h       
k    h       
k    h       
 
l 
 

 
   
 
l 
k    h   
k    h   
k    h   
 

ri    

ki   hi  
h      h   
h      h       
li
 
 
 
 
   
 
l 
h      h   
h      h   
h      h   
 


appendix b  list scheduling
list scheduling  ls  is a greedy scheduling algorithms in which the jobs are assigned to the
machines in arbitrary order  but similar to lpt  each job is assigned to the least loaded
 
machine at the time of assignment  ls is known to provide a     m
  approximation to
the minimum makespan  graham         while ls does not depart qualitatively from
lpt with respect to makespan approximation  i e   both provide a constant approximation
to the optimal makespan   they are qualitatively different with respect to game theoretic
properties  first  ls does not necessarily produce an ne  moreover  as we next show  ls
performs poorly with respect to the measures introduced in this paper 
the improvement ratio of a job is not bounded even if the coalition consists of a single
job  consider for example an instance with   machines and jobs of lengths       x  in that
   

fifeldman   tamir

order  such that x      ls will produce a schedule with loads        x  the job of length
  scheduled with the long job can migrate and join the other short job  its improvement
ratio is     x   which can be arbitrarily large 
the damage ratio of a deviation from an ls schedule is not bounded either  consider
an instance with three machines and jobs of lengths                   x         it is easy
to verify that in the resulting ls configuration  there exists a coalition in which the job of
length x migrates  since x can be arbitrarily large  the damage ratio of the job in the
machine into which x migrates is arbitrarily large  we note that the damage ratio caused
by a deviation of a single job is at most    to see this  consider an ls configuration and
assume that a job j of length pj migrates from m  to m    denote by bj   aj the total
load of jobs on m  that were assigned before and after j respectively  if aj      j is last 
then it is not beneficial for j to migrate  bj   l    else j should have been assigned to
m     else  the first job after j was assigned to m  because bj   pj was less than the load
at that time on m    therefore l   bj   pj   and in particular pj  l    the damage
ratio is  l    pj   l      the analysis is tight as can be exemplified by the instance
m      i          x  

references
a  fiat  h  kaplan  m  l     olonetsky   s          strong price of anarchy for machine
load balancing  in international colloquium on automata  languages and programming icalp  
albers  s          on the value of coordination in network design  siam j  comput         
         
albers  s   elits  s   even dar  e   mansour  y     roditty  l          on nash equilibria for
a network creation game  in annual acm siam symposium on discrete algorithms
 soda  
andelman  n   feldman  m     mansour  y          strong price of anarchy  in soda   
anshelevich  e   dasgupta  a   kleinberg  j  m   tardos  e   wexler  t     roughgarden  t 
        the price of stability for network design with fair cost allocation   in focs 
pp         
anshelevich  e   dasgupta  a   tardos  e   wexler  t     roughgarden  t          nearoptimal network design with selfish agents  in acm symposium on theory of computing  stoc  
aumann  r          acceptable points in general cooperative n person games  in contributions to the theory of games  vol    
awerbuch  b   azar  y   richter  y     tsur  d          tradeoffs in worst case equilibria 
in  st international workshop on approximation and online algorithms 
bernheim  d  b   peleg  b     whinston  m  d          coalition proof nash equilibria  i
concepts  journal of economic theory          
chen  b          equilibria in load balancing games  acta mathematica applicata sinica 
to appear 
   

fiapproximate strong equilibrium

christodoulou  g   koutsoupias  e     nanavati  a          coordination mechanisms  j 
daz  j  karhumaki  a  lepisto  and d  sannella  eds    automata  languages and
pro  gramming  volume      of lecture notes in computer science  berlin  springer 
pp         
christodoulou  g     koutsoupias  e          on the price of anarchy and stability of
correlated equilibria of linear congestion games  in annual european symposium
on algorithms  esa  
czumaj  a     vocking  b          tight bounds for worst case equilibria  in acm siam
symposium on discrete algorithms  soda   pp         
epstein  a   feldman  m     mansour  y          strong equilibrium in cost sharing
connection games  in acm conference on electronic commerce  acmec  
fabrikant  a   luthra  a   maneva  e   papadimitriou  c     shenker  s          on a
network creation game  in acm symposium on principles of distriubted computing
 podc  
finn  g     horowitz  e          a linear time approximation algorithm for multiprocessor
scheduling  bit numerical mathematics                 
fotakis  d   s  kontogiannis  m  m     spiraklis  p          the structure and complexity of nash equilibria for a selfish routing game  in international colloquium on
automata  languages and programming  icalp   pp         
graham  r          bounds for certain multiprocessing anomalies  bell systems technical
journal               
graham  r          bounds on multiprocessing timing anomalies  siam j  appl  math  
           
halpern  j  y     teague  v          rational secret sharing and multiparty computation 
in acm symposium on theory of computing  stoc   pp         
holzman  r     law yone  n          strong equilibrium in congestion games  games and
economic behavior            
holzman  r     law yone  n          network structure and strong equilibrium in route
selection games  mathematical social sciences             
koutsoupias  e     papadimitriou  c  h          worst case equilibria   in symposium on
theoretical aspects of computer science  stacs   pp         
lamport  l   shostak  r     pease  m          the byzantine generals problem  acm
trans  prog  lang  sys             
leonardi  s     sankowski  p          network formation games with local coalitions  in
acm symposium on principles of distriubted computing  podc  
milchtaich  i          crowding games are sequentially solvable  international journal of
game theory             
papadimitriou  c  h          algorithms  games  and the internet  in acm symposium on
theory of computing  stoc   pp         

   

fifeldman   tamir

procaccia  a  d     rosenschein  j  s          the communication complexity of coalition
formation among autonomous agents  in int  conference on autonomous agents and
multiagent systems  aamas   pp         
roughgarden  t     tardos  e          how bad is selfish routing   journal of the acm 
                 
rozenfeld  o     tennenholtz  m          strong and correlated strong equilibria in monotone congestion games  in workshop on internet and network economics  wine  
schuurman  p     vredeveld  t          performance guarantees of local search for
multiproces  sor scheduling  informs journal on computing                

   

fi