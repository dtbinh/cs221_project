journal artificial intelligence research             

submitted        published      

prime implicates prime implicants 
propositional modal logic
meghyn bienvenu

meghyn informatik uni bremen de

department mathematics computer science
university bremen  germany

abstract
prime implicates prime implicants proven relevant number areas
artificial intelligence  notably abductive reasoning knowledge compilation 
purpose paper examine notions might appropriately extended
propositional logic modal logic k  begin paper considering number
potential definitions clauses terms k  different definitions evaluated
respect set syntactic  semantic  complexity theoretic properties characteristic
propositional definition  compare definitions respect properties
notions prime implicates prime implicants induce 
definition perfectly generalizes propositional notions  show
exist one definition satisfies many desirable properties propositional
case  second half paper  consider computational properties
selected definition  end  provide sound complete algorithms generating
recognizing prime implicates  show prime implicate recognition task
pspace complete  prove upper lower bounds size number prime
implicates  paper focuses logic k  results hold equally well
multi modal k concept expressions description logic alc 

   introduction
prime implicates prime implicants important notions artificial intelligence 
given rise significant body work automated reasoning applied
number different sub areas ai  traditionally  concepts studied
context propositional logic  considered many valued
 ramesh   murray        first order logic  marquis      a      b   much
known  however  prime implicates prime implicants logics  particular 
definition prime implicate prime implicant ever proposed modal
description logic  shown reasonable definition provided 
given increasing interest modal description logics knowledge representation
languages  one naturally wonders whether notions suitably generalized
expressive logics 
recall propositional logic prime implicates formula defined
logically strongest clausal consequences  restriction clauses made order
reduce redundant elements formulas set consequences  use keeping
around consequence b one already consequences b  decision
consider logically strongest clausal consequences motivated desire
eliminate irrelevant weaker consequences  already consequence a 
c
    
ai access foundation  rights reserved 

fibienvenu

point retaining consequences b b  prime implicates thus provide
complete yet compact representation set logical consequences formula 
particularly nice representation makes many computational tasks
simpler  satisfiability  tautology  entailment  equivalence queries conditioning
forgetting transformations tractable formulae represented prime
implicates  darwiche   marquis         prime implicates considered
interesting target language knowledge compilation  cadoli   donini        darwiche
  marquis         prime implicates proved relevant sub areas ai 
distributed reasoning  adjiman  chatalic  goasdoue  rousset    simon         belief
revision  bittencourt        pagnucco         non monotonic reasoning  cf  przymusinski 
       characterizations relevance  lakemeyer        lang  liberatore    marquis 
      
dual notion prime implicates prime implicants  defined
logically weakest terms    conjunctions literals  imply given formula  main
application domain prime implicants abduction diagnosis  recall
abduction  one given background theory observation  objective
find explanation observation  logical terms  explanation formula
logically entails observation taken together background theory 
set explanations abduction problem large  important question
select representative subset explanations  one common approach
use prime implicants  relevant explanations observation respect
background theory taken prime implicants  de kleer  mackworth 
  reiter        eiter   makino        
many applications ai  expressive power propositional logic proves insufficient  first order logic provides much greater level expressivity  price
undecidability  modal description logics offer interesting trade off expressivity complexity  generally expressive propositional logic yet
better behaved computationally first order logic  explains growing trend
towards using languages knowledge representation 
prototypical description logic alc  extends propositional logic restricted
forms universal existential quantification  example expression alc
f emale haschild f emale haschild  doctor p rof essor  hasp et dog
describes set individuals female  least one daughter one
pet dog  children either doctors professors 
concept expression represented equally well modal logic k  formula 
f emale    f emale     doctor p rof essor     dog
schild        proved general result showed description logic alc n
binary relations fact notational variant multi modal logic kn   means
results concerning kn transferred alc  vice versa 
paper  investigate notions prime implicates prime implicants
modal logic k   k    actually results hold formulae kn   hence
concept expressions alc  decision present results terms k
  

fiprime implicates prime implicants modal logic

rather terms kn alc motivated solely desire simplify notation
increase readability proofs 
question notions prime implicates prime implicants suitably
defined logic k clearly interest theoretical point view  argue 
however  question practically relevant  support claim  briefly
discuss two application areas study prime implicates prime implicants
k might prove useful 
first domain application consider abductive reasoning k  noted
above  one key foundational issues abductive reasoning selection
interesting subset explanations  issue especially crucial logics k
allow infinite number non equivalent formulae  since means number
non equivalent explanations abduction problem large fact infinite 
making simply impossible enumerate entire set explanations  prime implicants
widely accepted means characterizing relevant explanations propositional logic 
reasonable starting point research abductive reasoning logic k study
different possible definitions prime implicant k properties 
investigation prime implicates k relevant development knowledge compilation procedures k  recall knowledge compilation  cf  darwiche
  marquis        general technique coping intractability reasoning
consists off line phase knowledge base rewritten equivalent
knowledge base allows tractable reasoning  followed online phase
reasoning performed compiled knowledge base  idea initial cost
compiling knowledge base offset computational savings later queries 
currently  work knowledge compilation restricted propositional logic  even
though technique could prove highly relevant modal description logics 
generally suffer even higher computational complexity propositional logic 
prime implicates one better known mechanisms compiling formulae propositional logic  certainly makes sense investigate whether approach knowledge
compilation fruitfully extended logics k 
paper organized follows  preliminaries  consider appropriately generalize notions clauses terms k  obvious definition 
enumerate list syntactic  semantic  complexity theoretic properties propositional definitions  use compare different candidate definitions 
next consider different definitions light notions prime implicate prime
implicant induce  again  list basic properties propositional
case would satisfy  see different definitions measure up 
second half paper  investigate computational properties
satisfactory definition prime implicates  consider problems prime implicate
generation recognition  provide sound complete algorithms tasks 
study complexity prime implicate recognition problem  showing
pspace complete thus complexity satisfiability deduction k 
conclude paper discussion relevance results two application
areas cited directions future research  order enhance readability paper  proofs omitted body text  full proofs
found appendix 
  

fibienvenu

   preliminary definitions notation
briefly recall basics modal logic k  refer blackburn  de rijke    venema 
      blackburn  van benthem    wolter        good introductions modal logic  
formulae k built set propositional variables v  standard logical
connectives         modal operators      call formula
form    resp       formula  resp    formula   convenient use
abbreviation   adopt shorthand  k  resp   k   refer
formula consisting preceded k copies    resp      convention
            use var   refer set propositional variables appearing
formula   modal depth formula   written     defined maximal
number nested modal operators appearing   e g     a  a  a       define
length formula   written     number occurrences propositional variables 
logical connectives  modal operators   example  would   a b      
   a b   a      
negation normal form  nnf  defined propositional logic  formula said
nnf negation appears directly propositional variables  every formula
k transformed equivalent formula nnf using recursive procedure
nnf defined follows 
nnf  l  l  for propositional literals l 
nnf        nnf     nnf     
nnf          nnf     nnf     
nnf        nnf     nnf     
nnf          nnf     nnf     

nnf      nnf   
nnf      nnf   
nnf      nnf   
nnf      nnf   
nnf    nnf   

example  applying nnf formula   a   b c   results formula   a
  b c   nnf  transformation nnf takes linear time  yields formula
double size original formula modal depth
propositional variables original 
model k tuple   hw  r  vi  w non empty set possible worlds 
r w w binary relation worlds  v   w v  true  f alse  valuation
propositional variables world  models understood labelled directed
graphs  vertices correspond elements w  directed edges represent
binary relation r  vertices labeled propositional valuations specify
propositional variables true corresponding possible world 
satisfaction formula model world w  written m  w      defined
inductively follows 
m  w    v w  a    true
m  w    m  w    
m  w    m  w    m  w   
m  w    m  w    m  w   
m  w      m  w    w wrw
  

fiprime implicates prime implicants modal logic

m  w      m  w    w wrw
think models labeled directed graphs  determining satisfaction
formula   vertex w consists evaluating vertices reached
w via edge    satisfied w case holds
successor vertices  similarly  order decide whether formula   holds vertex w 
consider successors w graph check whether least one
vertices satisfies  
formula said tautology  written      m  w    every model
world w  formula satisfiable model world w
m  w      w m  w      called unsatisfiable 
write     
ladner        showed satisfiability unsatisfiability k pspace complete 
pspace membership  ladner exhibited polynomial space tableaux style algorithm
deciding satisfiability k formulae  pspace hardness proven means reduction
qbf validity  the canonical pspace complete problem  
modal logic  notion logical consequence  or entailment  defined one
two ways 
formula global consequence whenever m  w    every world w
model m  m  w    every world w
formula local consequence m  w    implies m  w    every model
world w
paper  consider notion local consequence  take   
mean local consequence        say entails  
two formulae called equivalent  written          
formula said logically stronger         
highlight basic properties logical consequence equivalence k
play important role proofs results 
theorem    let                         n formulae k  let propositional
formula 
           
                   
          m        n              n    i 
              m         n              i 
                n   
           m         n
        m                   n        
  

fibienvenu

statement   theorem   shows three reasoning tasks entailment  unsatisfiability  tautology testing rephrased terms one another  statement   tells us
entailment two      formulae reduced entailment
formulae first modality removed  statements     define conditions
conjunction  resp  disjunction  propositional literals      formulae
unsatisfiable  resp  tautology   statement   gives us conditions
  formula implies disjunction   formulae  statement   demonstrates interaction
     formulae disjunction 
theorem    let disjunction propositional literals      formulae 
following statements holds 
      non tautological propositional clause   every disjunct
either propositional literal unsatisfiable   formula
              n   every disjunct   formula
              n             n   every disjunct either
  formula unsatisfiable   formula
theorem    let           m         n           p
        q formulae k  propositional      

  
               p
  

every j          p j
theorems     concern entailment relations formulae disjunctions
propositional literals      formulae  theorem   tells us kinds formulae
type entail propositional clause  disjunction   formulae  disjunction
  formulae  theorem   outlines conditions two formulae
type related entailment relation  illustrate theorem  
small example 
example    consider formula   b   a  c    d  a    c d  
according theorem    have 
   b   a d   c  since b    b  a  c   d  a    
c    c  a d 
     c  since b    
    b   a c   since  a  c   d  a      c
    b   a  a   c  since c     c  a  a 
  

fiprime implicates prime implicants modal logic

   literals  clauses  terms k
seen introduction  notions prime implicates implicants
straightforwardly defined using notions clauses terms  thus  aim provide
suitable definitions prime implicates implicants logic k  first need decide
upon suitable definition clauses terms k  unfortunately  whereas clauses
terms standard notions propositional first order logic    generally
accepted definition clauses terms k  indeed  several quite different notions
clauses terms proposed literature different purposes 
instead blindly picking definition hoping appropriate  prefer
list number characteristics literals  clauses  terms propositional logic  giving
us principled means comparing different candidate definitions  properties
describes something literal  clause  term propositional logic 
although list cannot considered exhaustive  believe covers principal
syntactic  semantic  complexity theoretic properties propositional definition 
p  literals  clauses  terms negation normal form 
p  clauses contain   terms contain   literals contain neither  
p  clauses  resp  terms  disjunctions  resp  conjunctions  literals 
p  negation literal equivalent another literal  negations clauses  resp 
terms  equivalent terms  resp  clauses  
p  every formula equivalent finite conjunction clauses  likewise  every formula
equivalent finite disjunction terms 
p  task deciding whether given formula literal  term  clause accomplished polynomial time 
p  task deciding whether clause  resp  term  entails another clause  resp  term 
accomplished polynomial time 
one may wonder whether exist definitions literals  clauses  terms k
satisfying properties  unfortunately  show impossible 
theorem    definition literals  clause  terms k satisfies properties p 
p  cannot satisfy p  
proof theorem   makes use fact distribute  
distribute    means impossibility result holds equally
well standard modal description logics 
consider variety possible definitions evaluate respect
criteria  first definition consider proposed cialdea
   one might wonder simply translate formulae k first order formulae
put clausal form  reason simple  looking define clauses terms within
language k  clauses obtain passing first order logic generally expressible k 
moreover  define clauses k first order clauses representable k 
would obtain set clauses containing   modalities  thereby losing much expressivity k 

  

fibienvenu

mayer pirri        paper abductive reasoning modal logic  define terms
formulae constructed propositional literals using     
   modal clauses literals used paper defined analogously 
yielding following definition   
d 

l          l    l
c          c    c   c c
         t    t  

easy see inspection definition satisfies properties p  p   p   p  
property p  satisfied  however  since clauses disjunctions
literals take instance   a b   theorem   fact p  p 
satisfied  conclude property p  cannot hold  first glance  may seem
entailment clauses terms could accomplished polynomial time 
case  fact  show problem np complete  proof relies
strong resemblance terms d  concept expressions description
logic ale  for unsatisfiability deduction known np complete  
using slightly different definition  gain p  
d 

l          l    l
c     l   c c
    l  

easily verified definition d  satisfies properties p  p  p   definition
d  satisfy p   definition d  even less expressive  follows d 
satisfy p  either  reduced expressiveness however improve computational
complexity  property p  still satisfied show entailment
clauses terms np complete using reduction used definition d  
fact even extremely inexpressive definition d  allow polynomial
entailment clauses terms suggests property p  cannot satisfied
reasonable definition clauses terms k 
let us consider expressive options  begin following definition
clauses proposed enjalbert farinas del cerro        purpose
modal resolution 
d 
c          c    conjc   c c
conjc     c   conjc conjc
definition clauses extended definition terms literals satisfies
p  p   extension satisfies properties  let us first consider
one possible extensions satisfies p  maximal subset p  p  
d a

l          l    l
c          c    conjc   c c
conjc     c   conjc conjc
         disjt    t  
disjt       disjt disjt

   note follows  let range propositional variables l  c  range
sets literals  clauses  terms  respectively 

  

fiprime implicates prime implicants modal logic

definition satisfies p  p  p   satisfaction p  shown enjalbert   farinas
del cerro         satisfy p  clauses disjunctions
literals take example   a b   given definition d a strictly expressive
definitions d  d   follows entailment clauses terms must
np hard  means d a satisfy p   fact  show entailment
clauses terms definition d a pspace complete  so  modify
polynomial translation qbf k used prove pspace hardness k
translated formula conjunction clauses respect d a  notice
formula unsatisfiable   entails   a a   thus reduce qbf
validity entailment clauses  making task pspace hard  hence  being
subproblem entailment k  pspace complete  idea used show pspacecompleteness definitions d b d  below 
instead extend d  enforce property p   obtain following definition 
l          c    conjc
c          c    conjc   c c
conjc     c   conjc conjc
    l  
definition satisfies properties except p   p   p   property p  fails
hold negation literal   a b  equivalent literal  proof
p  holds constructive  use standard logical equivalences rewrite formulae
equivalent conjunctions clauses disjunctions terms  this
definitions d  d  below  
consider two rather simple definitions satisfy properties p   p   p  
first definition  inspired notion modal atom proposed giunchiglia
sebastiani         defines literals set formulae nnf cannot decomposed propositionally 
d b

l          f    f
c     l   c c
    l  
f         f f   f f    f    f
d  satisfies properties except p  p   p   note arbitrary formula nnf unsatisfiable  a pspace complete problem         a a  
definition d  liberal  imposing structure formulae behind modal operators  define literals formulae nnf cannot decomposed modally
 instead propositionally   obtain much stricter definition satisfies exactly
properties d  
d 

d 

l          c    t
c     l   c c
    l  

summary analysis different definitions respect properties p  p 
provided following table 
theorem    results figure   hold 
  

fibienvenu

p 
p 
p 
p 
p 
p 
p 

d 
d 
yes
yes
yes
yes

yes
yes
yes


yes
yes
 unless p np 

d a d b d  d 
yes
yes
yes yes





yes
yes yes
yes

yes yes
yes
yes
yes yes
yes
yes
yes yes
 unless p pspace 

figure    properties different definitions literals  clauses  terms 

clearly deciding different candidate definitions complicated counting number properties definitions satisfy  simple reason
properties important others  take instance property p 
requires clauses terms expressive enough represent formulae k 
use standard propositional definition clauses terms  thereby disregarding
modal operators   find satisfies every property except p   hence
properties definitions considered section  yet would
hard pressed find someone considers propositional definition appropriate definition k  demonstrates expressiveness particularly important property 
important fact willing sacrifice properties p  p  keep it 
among definitions satisfy p   prefer definitions d  d  definitions d a
d b  latter definitions less common propositional definition
present advantages d  d  
course  comes it  choice definition must depend
particular application mind  may well circumstances less
expressive less elegant definition may prove suitable  paper
using clauses terms define prime implicates prime implicants  us
important criteria choosing definition quality notions prime
implicates prime implicants definition induces 

   prime implicates implicants k
definition clauses terms fixed  define prime implicates
prime implicants exactly manner propositional logic 
definition    clause implicate formula      prime
implicate if 
   implicate
   implicate        
definition    term implicant formula      prime
implicant if 
   implicant
  

fiprime implicates prime implicants modal logic

   implicant        
course  notion prime implicate  resp  implicant  get determined definition clause  resp  term  chosen  compare different definitions using following well known properties prime implicates implicants
propositional logic 
finiteness number prime implicates  resp  prime implicants  formula finite
modulo logical equivalence 
covering every implicate formula entailed prime implicate formula 
conversely  every implicant formula entails prime implicant formula 
equivalence model model model prime
implicates model prime implicant    
implicant implicate duality every prime implicant formula equivalent
negation prime implicate negated formula  conversely  every prime
implicate formula equivalent negation prime implicant negated
formula 
distribution prime implicate       n   exist prime implicates
         n          n       n   likewise  prime implicant
      n   exist prime implicants          n          n
      n
finiteness ensures prime implicates implicants formula finitely
represented  covering means prime implicates provide complete representation
formulas implicates  equivalence guarantees information lost replacing formula prime implicates implicants  whereas implicant implicate duality
allows us transfer results algorithms prime implicates prime implicants 
vice versa  finally  distribution relates prime implicates implicants formula
prime implicates implicants sub formulae  property play key role
prime implicate generation algorithm presented next section 
show definition d  satisfies five properties  finiteness covering  first demonstrate every implicate formula entailed implicate
var    var   depth         and similarly implicants   finitely many non equivalent formulae finite language
bounded depth  follows finitely many prime implicates implicants
given formula  infinite chains increasingly stronger implicates  or increasingly weaker implicants   equivalence follows directly covering
property p  previous section  use p  rewrite conjunction
clauses  implied prime implicate covering 
property implicant implicate duality immediate consequence duality
   property equivalence commonly taken mean formula equivalent conjunction prime implicates disjunction prime implicants  chosen model theoretic
formulation order allow possibility set prime implicates implicants infinite 

  

fibienvenu

clauses terms  p    distribution shown using covering plus
fact disjunction clauses clause conjunction terms term  p   
theorem    notions prime implicates prime implicants induced definition
d  satisfy finiteness  covering  equivalence  implicant implicate duality 
distribution 
remark way contrast first order logic notion prime implicate induced standard definition clauses shown falsify finiteness  covering 
equivalence  marquis      a      b  
show definition d  one definitions satisfy five
properties  definitions d  d   show equivalence hold 
fairly straightforward consequence fact definitions satisfy
property p  
theorem     notions prime implicates prime implicants induced definitions
d  d  satisfy equivalence 
notions prime implicates induced definitions d a  d b  d   show
appendix clause    k   a b  k a  prime implicate   a b 
every k      thereby demonstrate definitions admit formulae
infinitely many distinct prime implicates allow seemingly irrelevant
clauses counted prime implicates  gives us strong grounds dismissing
definitions much utility prime implicates applications comes ability
eliminate irrelevant consequences 
theorem     notions prime implicates prime implicants induced d a  d b 
d  falsify finiteness 
comparison last section suggested d  least suitable
d  definition clauses terms  results section rule d  suitable
definition prime implicates prime implicants  remainder paper 
concentrate attention notions prime implicates prime implicants induced
definition d   shown satisfactory generalizations
propositional case 

   prime implicate generation recognition
section  investigate computational aspects modal prime implicates 
primarily focusing notion prime implicate induced definition d  
remainder paper use words clause  term  prime implicate
mean clause  term  prime implicate respect definition d   except
explicitly stated otherwise 
remark that  without loss generality  restrict attention prime implicates since implicant implicate duality  theorem    algorithm generating
recognizing prime implicates easily adapted algorithm generating
recognizing prime implicants 
   d   prime implicate   a b  itself 

  

fiprime implicates prime implicants modal logic

function dnf     
input  formula
output  set d  terms
return set terms output iter dnf    nnf      
function iter dnf    s 
input  set formulae nnf
output  set d  terms  output one by one
        iter dnf    s       
else         iter dnf    s      iter dnf    s    
v
else output consistent  and nothing otherwise 
figure    helper functions dnf    iter dnf    

    generating prime implicates
start considering problem generating set prime implicates given
formula  task important want produce abductive explanations  want
compile formula set prime implicates 
generation algorithm  require means transforming input formula
equivalent disjunction simpler formulae  end  introduce figure  
helper function dnf      returns set satisfiable terms respect d 
whose disjunction equivalent   function dnf    defined terms another
function iter dnf    takes input set formulae nnf returns
iterative fashion set satisfiable terms whose disjunction equivalent s  following
lemmas highlight important properties functions 
lemma     iter dnf   terminates requires polynomial space size
input 
lemma     output dnf   input set satisfiable terms respect
d  whose disjunction equivalent  
lemma         terms dnf      terms length
     depth     contains propositional variables appearing
var   
present figure   algorithm genpi computes set prime implicates
given formula  algorithm works follows  step    check whether
unsatisfiable  outputting contradictory clause case  satisfiable  
set equal set satisfiable terms whose disjunction equivalent  
distribution  know every prime implicate equivalent disjunction
prime implicates terms   step    set  t   equal propositional
  

fibienvenu

function genpi  
input  formula
output  set clauses
    unsatisfiable  return    a a    otherwise  set   dnf      
      let lt set propositional literals let dt
set formulae     literals
form     set  t     lt      dt    otherwise  set  t    
lt   t           dt  
conjunction
formulae    
w
    set candidates        t    
    j candidates  remove j candidates k    j
k candidates k   j  j    k j     k k   j 
    return candidates 
figure    algorithm prime implicate generation 

literals  lt   plus strongest   literal implied   t   plus strongest  literals implied          dt     hard see every prime
implicate must equivalent one elements  t    means
step   guaranteed every prime implicate input formula equivalent
candidate prime implicate candidates  comparison phase step   
non prime candidates eliminated  exactly one prime implicate equivalence
class retained 
illustrate behavior genpi example 
example     run genpi input       b c   b    b   c d   e  f    
step    satisfiable  call function dnf      returns two terms
t      b c   b t     b   c d   e  f  
step    lt     a   dt     b c  b     literals t   
get  t       a    b c    b   t    lt     a   dt     b  c d  
t    e f   giving us  t       a    e f      b e f       c d  e f    
step    set candidates contain different possible disjunctions elements
 t    elements  t         aa  a  ef    a  bef   
   c d  e f      b c  a    b c    e f      b c    b e f   
  bc    cd ef     ba   b  ef     b  bef     b   cd ef   
step    remove candidates clauses   e f      b e f   
   c d  e f      b c  a   b since strictly weaker
a  eliminate clauses  b   e f     b   b e f   
  

fiprime implicates prime implicants modal logic

 b    c d  e f   since weaker clauses   b c    e f   
  b c    b e f      b c     c d  e f   
step    genpi return four remaining clauses candidates  a 
  b c    e f      b c    b e f      b c     c d  e f   
algorithm shown sound complete procedure generating prime
implicates 
theorem     algorithm genpi always terminates outputs exactly set
prime implicates input formula 
examining prime implicates produced algorithm  place upper
bound length formulas prime implicates 
theorem     length smallest clausal representation prime implicate
formula single exponential length formula 
upper bound optimal find formulae exponentially large prime
implicates  situation contrasts propositional logic  length prime
implicates linearly bounded number propositional variables formula 
theorem     length smallest clausal representation prime implicate
formula exponential length formula 
interesting note formula used proof theorem    depth
   means cannot avoid worst case spatial complexity restricting
attention formulae shallow depth  escape exponential worst case
spatial complexity dropping one less expressive notions prime implicates
examined previous section  following theorem attests 
theorem     prime implicates defined using either d  d   length
smallest clausal representation prime implicate formula exponential
length formula 
examination set candidate prime implicates constructed algorithm
allows us place bound maximal number non equivalent prime implicates
formula possess 
theorem     number non equivalent prime implicates formula
double exponential length formula 
bound shown optimal  situation contrasts propositional
logic  single exponentially many non equivalent prime implicates
given formula 
theorem     number non equivalent prime implicates formula may double
exponential length formula 
again  worst case result robust improved neither restricting depth formulae  using less expressive notions prime implicate 
following theorem demonstrates 
  

fibienvenu

theorem     prime implicates defined using either d  d   number
non equivalent prime implicates formula may double exponential length
formula 
theorems       together suggest definitions d  d  yield especially interesting approximate notions prime implicate  induce significant loss
expressivity without improvement size number prime implicates
worst case 
generation algorithm genpi corresponds simplest possible implementation
distribution property  quite clear represent practicable
way producing prime implicates  one major source inefficiency large number
clauses generated  want design efficient algorithm  need
find ways generate fewer candidate clauses  couple different techniques
could used  one simple method could yield smaller number clauses
eliminate  t   elements prime implicates   thereby
decreasing cardinalities  t   hence candidates  this  simply
test whether tautology  and remove is  compare   literals
 t    discarding weaker elements  apply technique example     would
remove  b  t     thereby reducing cardinality candidates      
substantial savings could achieved using technique developed framework propositional logic  cf  marquis        consists calculating prime implicates t    prime implicates t  t    t  t  t   
get prime implicates full disjunction terms  interleaving comparison
construction  eliminate early partial clause cannot give rise prime
implicates instead producing extensions partial clause deleting
one one comparison phase  example  two terms 
imagine third term t    applying technique  would
first produce   prime implicates t  t  would compare    t    
candidate clauses t  t  t    compare current algorithm generates
compares     t     candidate clauses 
given number elements candidates double exponential
length input  cutting size input genpi could yield significant
savings  one obvious idea would break conjunctions formulae conjuncts 
calculate prime implicates conjuncts  unfortunately  however 
cannot apply method every formula prime implicates conjuncts
necessarily prime implicates full conjunction  one solution proposed
context approximation description logic concepts  cf  brandt   turhan       
identify simple syntactic conditions guarantee get result
break formula conjuncts  instance  one possible condition
conjuncts share propositional variables  formula example satisfies
condition since variables     b c   b    b   c d   e  f   
disjoint  generating prime implicates conjuncts separately  directly
identify prime implicate a    candidate clauses     b c   b 
  b   c d   e  f    compare  remove weaker elements  ti  
  

fiprime implicates prime implicants modal logic

suggested above  get   candidate clauses     bc  b   b  cd  e f    
prime implicates  
another important source inefficiency algorithm comparison phase
compare candidate clauses one by one order identify strongest ones 
problem course worst case double exponential
number candidate clauses  simply may double exponentially many
distinct prime implicates  prime implicate must equivalent candidate
clause  keeping double exponentially many clauses memory generally
feasible  fortunately  however  necessary keep candidate clauses
memory since generate demand sets  t    indeed 
demonstrate appendix  implementing algorithm clever fashion 
obtain algorithm outputs prime implicates iteratively requiring
single exponential space  the output algorithm could course double exponentially
large theorem     
theorem     exists algorithm runs single exponential space size
input incrementally outputs  without duplicates  set prime implicates
input formula 
although modified algorithm much better spatial complexity original 
still yield practicable means generating prime implicates  reason
still need compare candidate clauses candidate clauses
order decide whether candidate prime implicate not  given set
candidate clauses may double exponential number  means algorithm may
need perform double exponentially many entailment tests producing even single
prime implicate  much promising approach would test directly whether
candidate clause prime implicate without considering candidate clauses 
order implement approach  must course come procedure
determining whether given clause prime implicate  objective
following section 
    recognizing prime implicates
focus section problem recognizing prime implicates  is  problem
deciding whether clause prime implicate formula   discussed
previous subsection  problem central importance  algorithm
generating prime implicates must contain  implicitly explicitly  mechanism
ensuring generated clauses indeed prime implicates 
propositional logic  prime implicate recognition bh   complete  marquis        
hard satisfiability deduction  k  satisfiability unsatisfiability
pspace complete  cannot hope find prime implicate recognition algorithm
complexity less pspace 
theorem     prime implicate recognition pspace hard 
order obtain first upper bound  exploit theorem    tells us
exists polynomial function f every prime implicate formula
  

fibienvenu

equivalent clauses length  f        leads simple procedure
determining clause prime implicate formula   simply check every
clause length  f      whether implicate implies
implied   case  prime implicate  we found logically
stronger implicate    otherwise  exists stronger implicate  prime
implicate  hard see algorithm carried exponential
space  gives us expspace upper bound 
course  problem naive approach take
account structure   end comparing huge amount irrelevant clauses 
exactly hoping avoid  algorithm propose later
section avoids problem exploiting information input formula clause
order cut number clauses test  key algorithm
following theorem shows general problem prime implicate recognition
reduced specialized tasks prime implicate recognition propositional
formulae    formulae    formulae  simplify presentation theorem 
let    refer set prime implicates   use notation    l         ln  
refer clause obtained removing literals li   example
 a b  c     a   c  refers clause b 
theorem     let formula k  let         k         n       
 m  j propositional literals  non tautologous clause  a       n
i   b  literal l    l     
following conditions hold 
         k                 k    
     i       n           i     every
           n                     n    
remark restriction clauses      
     l  l required  drop first requirement 
non prime implicates satisfy three conditions  drop second 
prime implicates fail satisfy one conditions    restrictions
without loss generality however since every clause transformed equivalent
clause satisfying them  first condition  replace  i   i         
thereby transforming clause       k        m         n equivalent
      k        m                   n          make
clause satisfy second condition  simply remove literals
   l  literal remains 
theorem    shows prime implicate recognition split three specialized sub tasks  tell us carry tasks  thus  order turn
   first restriction  consider formula     abc  a clause     ab   ab  
easily shown implicate   prime implicate since exist
stronger implicates  e g  itself   nonetheless  verified   a b  a b  
         a b       a b           a b      second restriction  consider
formula  a clause  a  ab     ab      a  a   even though  a  ab   a
prime implicate  a 

  

fiprime implicates prime implicants modal logic

theorem algorithm prime implicate recognition  need figure
test whether propositional clause    formula    formula prime implicate
formula 
determining whether propositional clause prime implicate formula k
conceptually difficult determining whether propositional clause prime
implicate propositional formula  first ensure clause implicate
formula make sure literals appearing clause necessary 
theorem     let formula k  let non tautologous propositional clause
   literal l    l     
       l  l  
move problem deciding whether clause form   prime
implicate formula   remark   implied   must implied
terms ti dnf       ti       theorem    must
case conjunction   literals ti implies    means formula
        n  where conjunction formulae   ti  
implicate implies    moreover strongest implicate  follows
  prime implicate case              n  
true     by theorem     thus  comparing formula
formulae associated terms   decide whether  
prime implicate  
theorem     let formula k  let     non tautologous clause
        exists term dnf    
     conjunction formulae    
finally let us turn problem deciding whether clause   prime implicate
formula   know covering   implicate   must
prime implicate implies    follows theorem   must

w disjunction   literals  theorem    equivalent disjunction
dnf       dt  dt element  t   every  refer back figure  
definition  tw
    according definition      awprime implicate
case      dnf       dt   equivalently    dnf      dt   thus   
prime implicate w
case iswa choice  dt  t  
    dnf      dt  
dnf      dnf      dt    w
testing directly whether entails formula dnf      dt could take exponential
space worst case since may exponentially many terms dnf       luckily 
w however  get around problem exploiting structure formula
dnf      dt   remark way  t   defined formula dt must
conjunction formulae     appears nnf    outside scope
modal operators use x w
denote set formulae satisfying condition 
show appendix
    dnf      dt implies existence subset x
w
 a       b  every dt least w
one conjunct set s  conversely 
existence subset x implies     dnf      dt   observation
basis algorithm test pi given figure    basic idea behind algorithm
try different subsets x order see whether subset satisfies
  

fibienvenu

function test pi     
input  clause   formula     
output  yes
         return yes    otherwise 
    set x equal set formulae     appears nnf    outside
scope modal operators 
    w
x   test whether following two conditions hold 
 a     
 b  ti dnf       exists conjuncts  i    i           i k i  ti
that 
 i   i   i          i k i      
 ii    i i       i k i        
return satisfies conditions  yes otherwise 
figure    algorithm identifying prime implicates form   

aforementioned conditions  find suitable subset  proves   prime
implicate  subset exists  sure stronger implicate
   algorithm shown run polynomial space since
   elements x   consider terms dnf      one time 
theorem     let formula  let   implicate   algorithm
test pi returns yes input         prime implicate  
theorem     algorithm test pi runs polynomial space 
illustrate algorithm test pi two examples 
example     use test pi test whether clause     ab  prime implicate
     b c    e f      a b  
step    satisfiable  pass directly step   
step    set x equal set formulae     appears nnf   
outside scope modal operators  case  set x    b c  e f  b 
since  nnf    b c  e f   b formulae satisfying
requirements 
step    examine different subsets x determine whether satisfy
conditions  a   b   particular  consider subset    b c  e f   
remark subset satisfies condition  a  since b      b c   e f    order
check condition  b   first call function dnf    returns two
terms t      b c    a b  t      e f     a b   notice
conjuncts   a b    b c  t  satisfy conditions  i   ii  since b c
  a b  b c        notice conjuncts   a b    e f  
t  satisfy conditions  i   ii  since e f   a b  e f        
  

fiprime implicates prime implicants modal logic

function testpi    
input  clause formula
output  yes
          return no 
         return yes    not 
     return yes    otherwise 
    li   l      ln   test    li     so  remove li  
let               m   set   literals   non empty  replace
disjunct   literal            
    let p set propositional literals disjuncts  
l p  check whether       l   return so 
    let b set   formulae appearing disjuncts   check  
b whether dnf               formula
         k   implies conjunction   literals   return
not 
w
    empty  return yes  otherwise return test pi   
i          d   
figure    algorithm identifying prime implicates 

means found subset x satisfies conditions  a   b  
algorithm returns no  correct output since   a b   b c   e f    
implicate strictly stronger  
example     use test pi test whether clause     a b c  prime
implicate      b c    e f      a b    e f  a b c   
step    proceed directly step   since satisfiable 
step    set x    b c  e f  b  e f  a b c    since nnf    a    b
c    e f      a b    e f  a b c   
step    check whether subset x satisfying conditions  a   b  
claim subset  see why  notice   b c    a b 
  e f  a b c   term dnf       moreover  one
set conjuncts term implies   a b c   namely    a b     b c   
means must contain either b b c order satisfy condition
 b  i   b c implies b b c  guaranteed b c
imply disjunction elements s  thereby falsifying condition  a   follows
subset x satisfying necessary conditions  test pi returns
yes  desired result 
figure    present algorithm testing whether clause prime implicate
formula   first two steps algorithm treat limit cases
implicate one tautology contradiction  step   
  

fibienvenu

apply equivalence preserving transformations make satisfy requirements
theorem     steps         use procedures theorems        
   test whether three conditions theorem    verified  three tests
succeed  theorem     clause prime implicate  return yes 
test fails  return clause shown prime implicate 
theorem     algorithm testpi always terminates  returns yes input   
  prime implicate  
demonstrate use testpi example 
example     use testpi test clauses     b       b   e f         c 
      a b         a b c    a b c f     e f   prime implicates
     b c    e f      a b  
    output step   since        
    skip steps     since      neither           step   
make changes   since contains redundant literals   literals 
skip step   since   propositional disjuncts  step    return since
dnf            b       a   b c    a b    e f     b       b c  
    proceed directly step   since                      modifications
made   step   contain redundant literals   literals 
step    test whether         a        c  proceed step
   directly step   since   contains   literals  step    call
test pi  c         c     outputs since        c     
c      
    steps     inapplicable  skip directly step    step  call
test pi input clause   a b  formula        a b       
already seen example    test pi returns input 
means testpi returns no 
    proceed directly step    delete redundant literal   a b c f  
modify literal   ef    end step        abc 
   ef   abc    step   applicable since propositional disjuncts
    step    continue since dnf              e f  a b c       
 a  ef    ab   abc        ef  abc   abc     
  e f     a b c   step    return yes since call test pi input
   a b c           a b c      previously shown example
   test pi returns yes input 
show appendix algorithm testpi runs polynomial space 
already shown testpi decides prime implicate recognition  follows
problem pspace 
theorem     prime implicate recognition pspace 
  

fiprime implicates prime implicants modal logic

putting together theorems        obtain tight complexity bound
prime implicate recognition task 
corollary     prime implicate recognition pspace complete 

   conclusion future work
first contribution work detailed comparison several different possible
definitions clauses  terms  prime implicates  prime implicants modal logic k 
results investigation largely positive  although shown
perfect definition exists  exhibit simple definition  d   satisfies
desirable properties propositional case  second contribution work
thorough investigation computational aspects selected definition d  
end  presented sound complete algorithm generating prime implicates  well
number optimizations improve efficiency algorithm  examination
structure prime implicates generated algorithm allowed us place upper
bounds length prime implicates number prime implicates formula
possess  showed bounds optimal exhibiting matching lower bounds 
proved lower bounds hold even much less expressive notions prime implicates  finally  constructed polynomial space algorithm deciding
prime implicate recognition  thereby showing problem pspace complete 
lowest complexity could reasonably expected  although focus paper
logic k  results easily lifted multi modal k concept
expressions well known description logic alc 
mentioned introduction  one main applications prime implicants
propositional logic area abductive reasoning  prime implicants play
role abductive explanations  results paper directly applied
problem abduction k  notion prime implicants used definition
abductive explanations k  prime implicate generation algorithm provides means
producing abductive explanations given abduction problem  moreover 
notion term underlying definition abductive explanations
expressive used cialdea mayer pirri         able find explanations
overlooked method  instance  look explanation
observation c given background information   a b  c  obtain   a b   whereas
framework yields  a  b  argument favor approach since
generally abduction one looking find weakest conditions guaranteeing truth
observation given background information 
interest results size number prime implicates 
yield corresponding lower bounds size number abductive explanations 
particular  results imply abductive explanations cialdea mayer pirri
       exponential size double exponentially many number worst
case  thus behave better respects notion abductive explanation
induced preferred definition d   moreover  fact lower bounds hold
even case extremely inexpressive notion abductive explanations induced
definition d  suggests high worst case complexity results really cannot
  

fibienvenu

avoided  light intractability results  interesting question future research
would study problem generating single prime implicate  since applications may prove sufficient produce single minimal explanation observation 
another interesting subject future work relevant point view abduction investigation notion prime implicate fixed vocabulary 
development generation algorithms refined notion prime implicate would
allow one generate abductive explanations built given set
propositional variables 
second domain application mentioned introduction
area knowledge compilation  propositional logic  one well known target language
knowledge compilation prime implicate normal form  formula represented
conjunction prime implicates  natural idea would use selected
definition prime implicate define analogous manner notion prime implicate
normal form k formulae  unfortunately  normal form obtain satisfies
nice properties propositional case  instance  find entailment two
formulae prime implicate normal form easier arbitrary k formulae 
see why  consider pair formulae negation normal form  formulae
    prime implicates hence prime implicate normal form
according naive definition     case         reduce
entailment arbitrary k formulae nnf entailment formulae prime
implicate normal form  former problem known pspace complete  follows
latter pspace complete well 
first sight  appears quite disappointing result one would hope
computational difficulty representing formula prime implicates would offset
good computational properties resulting formula  turns out  however 
problem lies definition prime implicates rather naive way
defining prime implicate normal form  indeed  continuation present work  bienvenu         proposed sophisticated definition prime implicate normal form 
specify many different clausal representations prime implicate
used  normal form shown enjoy number desirable properties
make interesting viewpoint knowledge compilation  notably 
proven entailment formulae k prime implicate normal form
carried polynomial time using simple structural comparison algorithm
reminiscent structural subsumption algorithms used subpropositional description
logics  noted proof results bienvenu        make
ample use material presented current paper 
work  studied prime implicates respect local consequence relation 
natural direction future work would investigation prime implicates respect global consequence relation  question particularly interesting given
global consequence type consequence used description logic ontologies  unfortunately  preliminary investigations suggest defining generating prime implicates
respect global consequence relation likely prove difficult
local consequence relation  one thing  use definition clause reasonably
  

fiprime implicates prime implicants modal logic

expressive  notion prime implicate obtain satisfy covering since
construct infinite sequences stronger stronger implicates  take instance
formula  a b   b  b  implies  using global consequence relation 
increasingly stronger clauses infinite sequence  b    b  b  
  b   b  b        familiar situation description logic practitioners since
infinite sequences responsible non existence specific concepts
many common dls  cf  kusters   molitor        lack uniform interpolation
alc tboxes  ghilardi  lutz    wolter         standard solution problem
simply place bound depth formulae considered  effectively blocking
problematic infinite sequences  allow us regain covering  give
us weaker version property  sufficient applications 
development generation algorithms global consequence relation may prove
challenging  since unclear point whether able draw inspiration
pre existing methods  despite potential difficulties  feel subject worth
exploring since could contribute development flexible ways accessing
structuring information description logic ontologies 
finally  another natural direction future research would extend investigation prime implicates prime implicants popular modal description logics 
particularly interest modal logics knowledge belief expressive description
logics used semantic web  confident experience gained
investigation prime implicates prime implicants k prove valuable asset
exploration modal description logics 

acknowledgments
paper corrects significantly extends earlier conference publication  bienvenu 
       paper written author phd student working irit 
universite paul sabatier  france  author would thank thesis supervisors
andreas herzig  jerome lang  jerome mengin  well anonymous reviewers
helpful feedback 

appendix a  proofs
theorem   let                         n formulae k  let propositional
formula 
           
                   
          m        n              n    i 
              m         n              i 
                n   
  

fibienvenu

           m         n
        m                   n        
proof  first statement well known property local consequence  prove
completeness 
  






m  w    implies m  w    m  w
m  w     m  w    m  w
m  w    m  w    m  w
  
m  w     m  w
  

second statement        m  w m  w     
create new model adding new world w placing single arc
w w    w         means     satisfiable hence
         since       direction  suppose         
exists m  w m  w             means
w   hence       complete proof  use following chain
equivalences                              
   suppose         m         n       exist m  w
m  w           m         n   m  w      cannot
           n    since w
m  w          n   direction suppose
      n satisfiable  propositional model w  
i  find mi   wi mi   wi          n   construct new
kripke structure contains models mi world w arcs
going w wi   hard see new model mnew
mnew   w           m        n          m         n      
statement   follows easily third statement  simply notice   
     m         n tautology case negation   
     n         m unsatisfiable 
   use statements     get following chain equivalences 
             n
             n
  
  
first implication equivalence   immediate since         m   
        m  i      i         i  direction  remark
using statements      get following equivalences 
  i             i         m
  i           i         m     
  i          i         m   
 i                 
  

fiprime implicates prime implicants modal logic

 i               clearly unsatisfiable  follows
  i             i         m every hence         m
                  n                    m         n  
completing proof 
theorem   let disjunction propositional literals      formulae 
following statements holds 
      non tautological propositional clause   every disjunct
either propositional literal unsatisfiable   formula
              n   every disjunct   formula
              n             n   every disjunct either
  formula unsatisfiable   formula
proof       let non tautologous propositional clause      suppose
contradiction contains disjunct   disjunct        
first case         hence        follows theorem  
     contradicting assumption tautology  second case 
       thus        theorem    either         cases 
reach contradiction since assumed           follows
cannot   formulae satisfiable   formulae disjuncts 
proofs         proceed similarly 
theorem   let           m         n           p
        q formulae k  propositional      

  

               p
  

every j          p j
proof  since       know               p i  using
information together theorem    get following equivalences 
  


        m   



 i   



           p         m
  
  
            
           p                   q
         p         
               p
           p           q
j          p j
j          p j

complete proof  use fact                 m     
 i    every i 
  

fibienvenu

theorem   definition literals  clause  terms k satisfies properties p 
p  cannot satisfy p  
proof  remark set clauses  resp  terms  respect definition d 
precisely set formulae nnf contain  resp     i e  d 
expressive definition satisfying p  p   thus  show result  suffices
show d  satisfy p  
suppose contradiction d  satisfy p   must exist clauses          n
  a b        n   clauses disjunction li        li pi  
distributing   obtain following 
n
 

 

  a b 

li ji

 j       jn        p             pn  i  

infer  j         jn            p                 pn  
n
 

li ji      a b 

i  

vn

consider  j         jn   i   li ji consistent  there must least one
tuple  otherwise would   a b     formulae li ji eithervpropositional
literals formulae form     clause   follows ni   li ji must
following form 
      k         m         n
         k propositional
literals         
v            n clauses respect
v
d   know ni   li ji      a b  ni   li ji       theorem    must
 q
 q         n      a b 
show  q       a b   and hence           n    suppose
contradiction case  must q    q    b 
theorem    every disjunct q  which recall d  clause  must either unsatisfiable
equal b  latter
v impossible  follows q     
contradiction since assumed ni   li ji satisfiable  follows order
get  q         n      a b   must r tautology 
let us consider formula
 
 
 j       jn
  j       jn  

vn

i   li ji   

v
 j       jn non tautological   formula appearing ni   li ji  we shown
formula must exist   clearly must case
n
 

 

 j       jn        p             pn  i  

  

li ji   

fiprime implicates prime implicants modal logic

get 
  a b    
according theorem    satisfiable   formula cannot imply disjunction  formulae unless disjunction tautology  must      however 
impossible since would imply  theorem    j       jn tautology 
contradicting earlier assumption contrary  thus conclude
set clauses          n respect d    a b        n   hence
definition satisfies p  p  cannot satisfy p  
order prove theorem    make use following lemmas 
lemma     definition d  satisfies p  
proof  demonstrate formula k nnf equivalent conjunction
clauses respect definition d   restriction formulae nnf without loss
generality every formula equivalent formula nnf  proof proceeds
induction structural complexity formulae  base case propositional literals 
already conjunctions clauses since every propositional literal clause
respect d   suppose statement holds formulae     show
holds complex formulae 
first consider         assumption  find clauses j
        n           thus  equivalent formula
      n         conjunction clauses respect d  
next consider         induction hypothesis          n
        clauses j   thus         n            
written equivalently  i j        n        m  i j    since union
two clauses produces another clause  j clauses  completing proof 
consider case        assumption          n  
clause         n    know        n          n  
follows equivalent         n   conjunction clauses since
 i clauses 
finally  consider        using induction hypothesis     
    n   clauses   since clauses  disjunction literals
li       li pi   distributing    find equivalent
formula
 
  l  j  l  j      ln jn  
 j       jn        p             pn 

clause respect d  
proof every formula equivalent disjunction terms respect d 
proceeds analogously 
lemma     every clause  resp  term  respect d  clause  resp  term 
respect definitions d a  d b  d  
proof  show induction structural complexity formulae that 
  

fibienvenu

   every clause c respect d  clause respect definitions d a  d b 
d  disjunction terms respect d a
   every term respect d  term respect definitions d a  d b 
d  conjunction clauses respect d a d b
require stronger formulation statement prove sub cases 
base case induction propositional literals  clauses
terms respect d   easy see         verified since propositional
literals clauses terms respect definitions d a  d b  d   and
hence disjunctions terms respect d a conjunctions clauses
respect d a d b  
induction step  show statements hold arbitrary clauses
terms respect d  assumption statments hold
proper sub clauses sub terms 
begin clauses  let c d  clause proper sub clauses subterms c satisfy          since c clause respect d   either
propositional literal formula form c  c  clauses c  c     c 
clause c     t  term t    case c propositional literal
already treated base case  let us thus consider case c   c  c   
first part     holds since induction hypothesis c  c  clauses
respect definitions d a  d b  d   three definitions disjunction
two clauses clause  second half     verified since c  c 
disjunctions terms respect d a  thus disjunction c  c   
next consider case c    c  clause c  respect d   first
part     follows easily know c  must clause respect d a 
d b  d   definitions putting   clause yields another
clause  second part     holds well since c  disjunction terms respect
d a thus  c  term respect definition  suppose
c    t  term t  respect d   definitions d a d b  know
induction hypothesis t  conjunction clauses respect d a
d b hence  t  clause respect definitions  d   result
obviously holds since allowed put formula nnf behind    second part
    holds since induction hypothesis t  term respect d a hence
 t  term respect definition 
next consider terms  let d  term proper sub clauses subterms satisfy          must either propositional literal formula
form t  t  terms t  t     c  clause c     t  term t   
  t  t    first half     holds since know t  t  terms respect
d a  d b  d   conjunctions terms terms three definitions 
second half verified since t  t  assumed conjunctions clauses
respect d a d b  means conjunction clauses
respect definitions  next suppose    c    definitions d b d  
easy see literal hence term  d a  induction hypothesis tells us
c  disjunction terms  deduce  c  term  moreover 
since c  known clause respect d a d b   c  must
   

fiprime implicates prime implicants modal logic

clause respect definitions  conjunction clauses respect
d a d b  finally  treat case    t    d a  use fact
t  term respect d a  means  t  must term  d b 
use supposition t  conjunction clauses respect d b 
get  t  literal hence term  first part     clearly holds d 
since formula behind   yields literal thus term  second half     follows
fact induction hypothesis t  conjunction clauses respect
d a d b   t  clause  and hence conjunction clauses  respect
definitions 

u  s             m
i j defined inductively follows

 i   j   either n  ui sj     n uin sj
i j  
 i   j   either n  ui   sj     n uin   sj
          n   n   j            
   z    
 n

figure    formula u  s codes instance u    u         un       s         sm  
exact cover problem 

lemma     entailment terms clauses np complete definitions d 
d  
proof  proofs np membership np hardness  exploit relationship terms respect definitions d  d  concept expressions
description logic ale  cf  baader  mcguiness  nardi    patel schneider        
recall concept expressions logic constructed follows  we use modal logic
syntax assume single modal operator order facilitate comparison
formalisms  
                   
semantics symbols one would expect  m  w    m  w    
every model world w  semantics atomic literals  conjunctions  universal
existential modalities exactly k 
hard see every term respect d  d  concept expression
ale  entailment ale expressions decidable nondeterministic polynomial
time  cf  donini  lenzerini  nardi  hollunder  nutt    marchetti spaccamela        
follows deciding entailment terms respect either d  d 
accomplished nondeterministic polynomial time  i e  problems belong np 
remains shown problems np hard  prove this  show
polynomial time reduction donini         adapted original np hardness
proof donini et al         np complete exact cover  xc  problem  garey  
   

fibienvenu

johnson        unsatisfiability ale modified give polynomial time
reduction xc entailment terms respect d  d  
exact cover problem following  given set u    u         un   set  
 s         sm   subsets u  determine whether exists
sqan exact cover  is  subset
 si         siq   sih sik   h    k k   sik   u  donini proven
       u  exact cover formula u  s pictured figure  
unsatisfiable  notice u  s term respect either d  d  uses
symbols   would find similar formula term respect
definitions satisfiable u  s is  consider formula
u  s             m
i j defined exactly i j except replace
a  easy verify u  s indeed term respect d 
d   moreover  hard see           m      n
          m      n hence u  s u  s equisatisfiable  u 
exact cover u  s unsatisfiable  u  s unsatisfiable case
u  s is  follows u  exact cover u  s unsatisfiable  moreover 
u  s produced linear time u  s   polynomial time reduction
xc unsatisfiability terms d  d   formula unsatisfiable
case entails term a  so  xc polynomially reduced entailment
terms respect either d  d   making problems np hard hence
np complete 
order show np completeness clausal entailment  remark
definitions d  d   function nnf transforms negations clauses terms
negations terms clauses  means test whether clause entails
clause testing whether term nnf     entails term nnf     likewise 
test whether term entails another term testing whether clause nnf    
entails clause nnf     nnf transformation polynomial  follows
entailment clauses exactly difficult entailment terms  clausal
entailment np complete 
lemma     definition d   entailment clauses terms pspace complete 
proof  membership pspace immediate since entailment arbitrary formulae
k decided polynomial space  prove pspace hardness  adapt existing
proof pspace hardness k 
figure   presents encoding qbf   q  p     qm pm k formula f   
used section      blackburn et al         demonstrate pspace hardness
k  formula f    property satisfiable case
qbf validity  formula f    generated polynomial time  
qbf validity problem known pspace hard  follows satisfiability formulae
k pspace hard well 
figure    show modified encoding  claim following 
    f    f    logically equivalent
   

fiprime implicates prime implicants modal logic

 i  q 
vm
 ii  i     qi j  i qj     qi j  i qj        m  qi j  i qj   
vm
 iiia  i     qi  qi       qi  qi          m  qi  qi     
v
 iiib   i qi     i  qi    qi   pi       qi   pi      
v
vm  j
 iv  m 
i     j i     pi  pi    pi  pi    

 v   m  qm  

figure    formula f    conjunction formulae 
 i  q 
vm v
 ii  i     j  i   qi qj     qi qj        m  qi qj    
vm
 iiia  i     qi  qi       qi  qi          m  qi  qi     
v
 iiib   i qi     i  qi   qi   pi       i  qi   qi   pi     
vm  vm 
 iv  i     j i   j  pi  pi    j  pi  pi    

 v   m  qm           m  qm l  

figure    formula f    conjunction formulae  formulae
 v  propositional clauses       l  

    cnf  f    conjunction clauses respect d 
    cnf  f    generated polynomial time f   
show      suffices show  i  i    ii  ii    iiia  iiia    iiib  iiib    iv  iv  
 v  v   first equivalence immediate since  i   i  identical   ii  ii 
follows fact  k  qi j  i qj   j  i  k  qi qj     iiia  iiia  holds
since  iiia   iiia  qi  qi   replaced qi  qi      iiib  iiib 
since  i  qi    qi   pi       qi   pi        i  qi   qi   pi       i  qi
  qi   pi       equivalence  iv  iv  holds  j   pi  pi    pi  pi   
 j  pi  pi    j  pi  pi    finally   v  v  since       l   thus  f   
f    logically equivalent 
prove      show component formulae f    conjunction
clauses respect d   provided cnf  clearly case  i 
 i  propositional literal  formula  ii  conjunction clauses
respect d  since conjunction formulae form  k  qi qj    similarly 
 iiia    iiib    iv  conjunctions clauses since formulae  k  qi  qi     
 i  qi   qi   pi        i  qi   qi   pi        k  pi  pi     k  pi  pi  
clauses respect d   formula  v  must conjunction clauses since
assumed propositional clauses  making  m  qm   clause
respect d    v  conjunction clauses respect d  
   

fibienvenu

     clear transform  i    iiia    iiib    iv   i    iiia    iiib  
 iv  polynomial time transformations involve simple syntactic operations
resulting formulae twice large  transformation  ii   ii 
slightly involved  hard see resulting formula
times large original  and greater length f     
step could potentially result exponential blow up transformation
 v   v   put cnf  assumption already cnf 
transformation executed polynomial time space 
separate conjuncts rewrite  qm    qm   
let   q  p     qm pm qbf         l propositional
clauses   let f    formula defined figure        above  know
f            p clauses respect d   consider following
formula
            p    a a  
show f    satisfiable satisfiable follows 
unsatisfiable
        p    a a  unsatisfiable
      p   a a  unsatisfiable
      p unsatisfiable
f    unsatisfiable
know     f    f      blackburn et al        
f    satisfiable case qbf validity  easy see
satisfiable entail contradiction   a a   putting
altogether  find valid case entail   a a  
  a a  clauses terms respect d   shown
qbf validity problem qbf propositional formulae cnf reduced
problems entailment clauses terms respect d   moreover 
polynomial time reduction since follows     transformation
accomplished polynomial time  suffices show pspace hardness  since
well known qbf validity remains pspace hard even restrict propositional
part formula cnf  cf  papadimitriou        
theorem   results figure   hold 
proof  satisfaction dissatisfaction properties p  p  immediately
determined inspection definitions  satisfaction p  definitions d  
d b  d   d   counterexamples p  definitions d  d a provided
body paper  formula   a b  clause disjunction literals
respect definitions 
order show definition d b satisfy p   remark negation
literal   a b  equivalent   a b  cannot expressed literal
d b  definitions  shown  by straightforward inductive
proof  nnf  l  literal whenever l literal  nnf  c  term whenever
   

fiprime implicates prime implicants modal logic

c clause  nnf  t   clause whenever term  enough prove
definitions satisfy p  since nnf    equivalent  
since know definitions d  d  satisfy properties p  p   follows
theorem   definitions satisfy p   seen lemma    
definition d  satisfy p   i e  every formula equivalent conjunction
clauses respect d  disjunction terms respect d   every
clause  resp  term  d  clause  resp  term  respect definitions d a  d b 
d   by lemma       follows every formula equivalent conjunction
clauses disjunction terms respect definitions  means
satisfy p  
easy see property p  satisfied definitions since
definitions context free grammars  well known deciding membership
context free grammars accomplished polynomial time  cf  younger        
lemma      know deciding entailment clauses terms
respect either d  d  np complete  and hence p  unless p np   entailment
clauses terms pspace complete d   lemma       every clause  resp 
term  d  clause  resp  term  respect definitions d a  d b  d 
 from lemma       follows entailment clauses terms pspace hard
definitions  membership pspace immediate since entailment arbitary
k formulae pspace 
prove theorem   several steps 
lemma     notions prime implicates prime implicants induced d  satisfy
implicant implicate duality 
proof  suppose contradiction prime implicant formula
equivalent negation prime implicate   let clause
equivalent  there must exist clause property p   cf  theorem
    clause implicate since      assumed
prime implicate  must implicate   
      let term equivalent  here use p    must
implicant since      moreover  strictly weaker since   
      means cannot prime implicant 
contradicting earlier assumption  hence  conclude every prime implicant
formula equivalent negation prime implicate   proof
every prime implicate formula equivalent negation prime implicant
proceeds analogously 
lemma     clauses terms defined according definition d   every implicate formula entailed implicate var    var  
depth         every implicant entails implicant
var    var   depth        
proof  intend show following statement holds  formula
implicate   exists clause       var    var  
   

fibienvenu

           let arbitrary formula  let implicate  
tautology  set    where var       set
    a a   where var     clause verifies necessary conditions 
consider case neither tautology falsehood 
show construct clause   first thing use dnf   rewrite
disjunction satisfiable terms ti respect d  ti contain
variables appearing depth    
  t      tz
     must case ti    every ti   aim find clause
terms ti ti       var i   var ti    i    ti   
consider ti   since ti term  form       k         m   
     n            k propositional literals  clause  must form
      p         q         r            p propositional literals 
ti      must case formula
      k         m         n
      p         q         r
unsatisfiable  theorem    one following must hold 
 a  exists u v u v
 b  exists u u       n       q   
 c  exists u u       n       q   
 a  holds  set   u since ti    u       u        ti    var u  
var ti     b  holds  must case
u       n          q
hence
  u       n              q   
set     u       n    since ti      u       n           u  
    n     ti    var   u       n    var ti    finally   c  holds 
must case
      n          q u
hence
        n              q  u   
set           n    ti            n                 n     ti   
var         n    var ti    thus  shown every ti  
ti       var i   var ti    i    ti          z
clause implied every ti   hence   var i   var ti   var  
 i   maxi  ti      
let implicant   let formula nnf     know
nnf transformation equivalence preserving  hence   straightforward
   

fiprime implicates prime implicants modal logic

show must clause respect d   implicate  
must clause var    var     var   depth
                        let nnf      easily verified
term  moreover  properties nnf transformation   
var      var      var                      term
var    var                       
lemma     notions prime implicates prime implicants induced d  satisfy
finiteness 
proof  consider arbitrary formula   lemma      know prime
implicate   must implicate containing propositional
atoms appearing                 since prime
implicate  must    hence   thus  every prime implicate
equivalent clause built finite set propositional symbols
depth         finitely many non equivalent formulae
finite alphabet fixed depth  follows finitely many
distinct prime implicates  lemma      every prime implicant equivalent
negation prime implicate   follows every formula
finitely many distinct prime implicants 
lemma     notions prime implicates prime implicants induced d  satisfy
covering 
proof  let arbitrary formula  lemma      know every implicate
entailed implicate whose propositional variables contained var  
whose depth         consider following set
           clause  var   var              
define another set follows 
                  
words  set logically strongest implicates depth
       built propositional letters   claim following 
    every prime implicate
    every implicate     
begin proving      suppose     hold  is 
prime implicate   since definition implicate   follows
must implicate          lemma     
implicate             var    var        
means element implies implied   contradicting
assumption   thus conclude every element must
prime implicate  
   

fibienvenu

     let implicate   lemma      exists clause
       done  otherwise  must exist
           done  otherwise  find another stronger
member   finitely many elements modulo equivalence  finite number
steps  find element implies   since
seen members prime implicates   follows every implicate
implied prime implicate  
second part covering  let implicant   let clause
equivalent  there must one d  satisfies p    since      must
     according shown  must prime
implicate         lemma      must equivalent
negation prime implicant   since     
follows      completing proof 
lemma     notions prime implicates prime implicants induced d  satisfy
equivalence 
proof  let formula k  suppose model every prime implicate
  d  known satisfy property p   by theorem     find conjunction
clauses equivalent   covering  lemma       clauses implied
prime implicate   must model clauses  follows
model   direction  simply note definition
prime implicates model   must model every prime implicate
  thus shown model model every prime
implicate   using similar argument  show model
model prime implicant  
lemma     notions prime implicates prime implicants induced d  satisfy
distribution 
proof  let prime implicate       n     must     
covering  know must exist prime implicate
     means formula       n  which clause
disjunction clauses  entails   since prime implicate  must case
         n   hence       n   proof prime implicants entirely
similar 
theorem   notions prime implicates prime implicants induced definition
d  satisfy finiteness  covering  equivalence  implicant implicate duality 
distribution 
proof  follows directly lemmas         
theorem    notions prime implicates prime implicants induced definitions
d  d  satisfy equivalence 
   

fiprime implicates prime implicants modal logic

proof  proof definitions  suppose equivalence holds 
every formula   set prime implicates equivalent   means
set    inconsistent  hence compactness k  cf  blackburn et al  
      p      finite subset    inconsistent     
know set must contain set prime implicates
cannot inconsistent  conjunction elements      conjunction
clauses equivalent   follows every formula equivalent
conjunction clauses  shown earlier proof theorem  
formulae equivalent conjunction clauses respect d  d  
follows equivalence cannot hold definitions 
theorem    notions prime implicates prime implicants induced definitions
d a  d b  d  satisfy finiteness 
proof  suppose clauses defined respect definition d a  d b  d   the
proof three definitions   consider formula     a b   follows
theorem   implies k      k a    a b  k a  every k   
formulae k clauses  with respect d a  d b  d    k implicates
  complete proof  show every k prime implicate   since k
mutually non equivalent  because  p      q whenever p    q   follows
infinitely many prime implicates modulo equivalence 
consider k implicate           m         n
implies  by theorem   cannot propositional literals    using theorem  
fact       k   get following 
 a  b       
 b       k a   a b  k a  every
 c           b  k
let b          remark must satisfiable since
otherwise combine  a   c  get b    b  k a   b   know
     k a   a b  k a  hence   k a   a b  ka  inconsistent 
follows   k a    k a  b inconsistent  using theorem   
find either     k    b  satisfiable clause respect
definitions d a  d b  d   cannot imply b  must     k a 
putting  a   c  together  find
b             b  k
follows     k a  i e   k      thus  k      
b  k a   k    b  k            theorem   get
   k a    a b  k a      i  i      m    hence k   thus
shown implicate implies k must equivalent k   means
k prime implicate   completing proof 
   

fibienvenu

lemmas            follow easily known properties disjunctive normal
form transformation propositional logic  cf  bienvenu        ch     
proof theorem     make use following lemmas 
lemma      algorithm genpi always terminates 
proof  know lemma    algorithm dnf    always terminates returns
finite set formulae  means finitely many terms consider 
  set  t   contains finitely many elements  this immediate given
definition  t     means set candidates finite cardinality 
final step  compare pair elements candidates 
comparison always terminates  finitely many pairs check  follows
algorithm genpi terminates 
lemma      algorithm genpi outputs exactly set prime implicates input
formula 
proof  first prove every prime implicate satisfiable term equivalent
element  t    let         k         m         n
satisfiable term  let         p         q         r one
prime implicates  restrict attention interesting case
non tautologous       must case
      k         m         n
      p         q         r
unsatisfiable  theorem    one following must hold 
 a  exists u v u v
 b  exists u u       n          q
 c  exists u       n    u       q
 a  holds  u      must equivalent u else would found
stronger implicate  contradicting assumption prime implicate  
result holds since u  t     b  holds  formula   u       n  
implicate implies     u       n    done since
  u       r   member  t    finally consider case  c  holds 
case          n   implicate implies   equivalent  as
prime implicate   desired result since         n   one
elements  t    thus conclude every prime implicate term
equivalent element  t    lemma     elements dnf      terms 
disjunction equivalent   d  satisfies distribution  follows every
prime implicate input equivalent element candidates  means
element candidates prime implicate   prime
implicate implies implied   hence j candidates
j        j   thus  comparison phase  clause
removed candidates  suppose clause prime implicate  
   

fiprime implicates prime implicants modal logic

know must candidates   moreover 
choose j j   j      final step
compare clauses j j    i  never find j    j   i 
j        j j   i  otherwise would prime implicate  follows
remains set candidates returned algorithm 
thus shown set formulae output genpi input precisely set
prime implicates  
theorem    algorithm genpi always terminates outputs exactly set prime
implicates input formula 
proof  follows directly lemmas           
theorem    length smallest clausal representation prime implicate
formula single exponential length formula 
proof  prime implicates generated genpi     disjuncts
    terms dnf      lemma     moreover  disjunct length
     also lemma      gives us total         symbols  must
add       disjunction symbols connecting disjuncts  thus find
length smallest representation prime implicate formula
                  
theorem    length smallest clausal representation prime implicate
formula exponential length formula 
proof  consider formula
 

n
 

  ai    ai    

i  

clause
 

 

 j       jn

  a  j  a  j      an jn  

      n

ak l    am p whenever k    l    p  difficult see
equivalent  means must prime implicate   remains
shown clause equivalent must length least     yields result
since clearly size exponential n  whereas length linear n 
let shortest clause equivalent   equivalent   follows
theorem   disjunction   literals inconsistent   literals 
since assumed shortest representation   cannot contain inconsistent
  literals redundant   literals  since could remove find equivalent
shorter clause  must form         m   l     k whenever l    k 
since      every disjunct  p must imply   disjunction   literals 
follows theorem   every disjunct  p implies disjunct  q  
means every  p must length least  n      since p satisfiable
formula implies conjunction n distinct propositional variables  know
every disjunct  q implies disjunct  p since      wish
   

fibienvenu

show two disjuncts imply disjunct   suppose
case  is  distinct disjuncts       disjunct  p
       p        p   since       distinct disjuncts 
must       ai         ai         ai         ai    
know  p     q q   every q implies either ai  ai    either
 p     ai   p     ai    know  q imply either  ai    ai  
both  one       must imply  p   contradicts earlier
assumption        p        p   disjunct must imply distinct
disjunct   thus demonstrated contains many disjuncts  
already shown disjuncts shorter disjuncts  
follows         hence           conclude every clause equivalent
length least     completing proof 
theorem     prove following clause
 
 
 q     qn c
 q       qn      n

prime implicate  with respect d  d   formula


 

     b  b       b  b     

n
 

   i  bi  i  bi  

i  



n 
 

 i      bi  bi    bi    n      bn  bn   c  

i  

moreover shorter way represent  
proof theorem    makes use following lemmas 
lemma      let l      lm d  clause implies q     qn a  qi       
propositional variable  l      lm q     qn a 
proof  proof  make use fact every d  clause satisfiable 
straightforwardly shown structural induction  base case propositional
literals  clearly satisfiable  induction step  consider d  clause
proper sub clauses satisfiable  three possibilities  either
form     satisfiable d  clause  disjunction    
satisfiable d  clauses       three cases  find must satisfiable 
proof lemma induction n  n      l      lm    a 
according theorem    every disjunct l      lm must either unsatisfiable
formula  shown previous paragraph every d  clause satisfiable 
l      lm a 
suppose result holds whenever n k  suppose l      lm   
q     qk   a  every li   must li    q     qk   a  hence    li q     qk   a  using
theorem    arrive following four possibilities 
   

fiprime implicates prime implicants modal logic

 a     q     qk  
 b  li
 c  q      li  li li    q     qk  
 d  q      li  li li    q     qk  
eliminate case  a  since     q     qk   every string modalities q     qk    
eliminate  b  since li must satisfiable d  clauses  remark
 c  holds  according induction hypothesis  li  q     qk   a  similarly 
 d  holds  li  q     qk   a  follows li equivalent q     qk   a 
l      lm q     qk   a 
v
n   let    q  b b     n
k
lemma
    
fix
 q
 
    
q
 

   
  
 
n
 
 
 
k     qk bk  
vn  k  
   bk  bk    bk    n      bn  bn   c        r     rn c
k    
rk   qk   k n 
proof  begin showing   n   formula
bi  bi  

n
 

n 
 

 ki  qk bk    

k i  

 ki   bk  bk     bk      ni   bn  bn   c 

k i

entails formula ri      rn c case qi      qn   ri      rn  
proof induction i  base case   n   
bn  bn  qn bn   bn  bn     bn       bn  bn   c     rn c

   


bn  bn  qn bn  bn     bn  bn   c     rn c
 theorem    either
qn     rn     bn    bn  bn   c     c

qn   rn bn  bn   bn  bn   c     c
bn    bn  bn   c      c  cannot first alternative  follows
equation     holds  second alternative must hold  case get qn   rn  
desired  direction  simply note bn  bn   bn  bn   c     c
valid entailment  means qn   rn implies equation     
next let us suppose statement holds     j n    let us
prove statement holds   j   
bj  bj   

n
 

kj

 

qk bk    

k j

n 
 

 kj    bk  bk  bk    

k j 

 nj     bn  bn   c 

   rj    rn c
   

   

fibienvenu

one following holds 
 a  qj     rj    
bj   

n
 

n 
 

 kj  qk bk    

k j  

 kj   bk  bk    bk      nj   bn  bn   c 

k j

   rj      rn c

 b  qj   rj
bj  bj  

n
 

n 
 

 kj  qk bk    

k j  

 kj   bk  bk    bk     nj   bn  bn   c 

k j

   rj      rn c

first show entailment  a  hold  consider model  
hw  r  vi defined follows 
w    wj        wn  
r     wj   wj            wn    wn   
v c  w    f alse w w
w    wj   v bk   w    true w   wk
v bk   wj     true k   j  
notice since world  excepting wn   exactly one successor      quantifiers behaviour  except wn    easily verified m  wj
satisfies left hand side abovev
entailment tuple qj      qn   m  wj   
bj  definition  m  wj    nk j    kj  qk bk m  wk    bk k    j 
vn  kj
m  wj    k j
    bk  bk    bk     since m  wj     bj m  wk     bk 
k    j  finally m  wj     nj   bn  bn   c  since wn     bn    however 
right hand side rj      rn c satisfied wj   world accessible wj n j
steps wn satisfy c 
shown case  a  cannot hold  means equation     holds
 b  does  apply induction hypothesis entailment  b  
find holds case qj      qn   rj      rn   follows equation    
qj    qn   rj    rn   desired  completes proof statement 
proceed proof lemma  theorem   
 q   b  b     

n
 

n 
 

 k qk bk    

k  

 k      bk  bk    bk    n      bn  bn   c  

k  

    r     rn c

holds case
q   b  b     

n
 

k  

 k  qk bk  

n 
 

 k    bk  bk    bk    n    bn  bn   c  

k  

   r     rn c
   

fiprime implicates prime implicants modal logic

turn holds one following statements holds 
 i  q      r     
 

n
 

n 
 

 k  qk bk    

k  

 k    bk  bk    bk      n    bn  bn   c     r     rn c

k  

 ii  q    r 
b  b   

n
 

k  

n 
 

 k  qk bk    

 k    bk  bk    bk      n    bn  bn   c 

k  

   r     rn c

remark set j      a  above  left hand side entailment  i 
logically weaker  a   right hand side matches  a  
already shown entailment  a  hold  follows entailment
 i  cannot hold either  thus  find desired entailment relation statement
lemma holds  ii  does  completes proof since already
shown induction entailment  ii  holds q     qn   r     rn  
i e   ii  true case q     qn   r    rn  
lemma      d  clause equivalent strictly smaller size  
proof  let d  clause equivalent   suppose furthermore
shortest clause  non tautologous contains   literals disjuncts 
follows every disjunct must either unsatisfiable   literal  cf  theorem    
d  clauses always satisfiable  cf  proof lemma        must contain
  literals 
since      every disjunct  l must imply disjunct  q     qn c   also 
every disjunct  l must implied disjunct  q     qn c   since otherwise
could remove  l preserving equivalence  
follows disjunct implied disjunct implies
disjunct   since disjuncts imply  because lemma
       follows disjunct equivalent disjunct   moreover
every disjunct equivalent disjunct  
completes proof since clear disjuncts  q     qn c cannot
compactly represented 
proof works equally well d   since every d  clause d  clause 
theorem    prime implicates defined using either d  d   length
smallest clausal representation prime implicate formula exponential
length formula 
proof  begin definition d   let defined page      begin
distributing order transform equivalent disjunction d  terms 
 

tq       qn
 q       qn      n

   

fibienvenu

tq       qn equal
 q   b  b     

n
 

  q bi  

n 
 

 i      bi  bi    bi    n      bn  bn   c  

i  

i  

lemma       tq       qn     q     qn c  hence tq       qn      thus     
show stronger clause respect d  implied
  let d  clause         non tautologous disjunction
  literals  know lemma   every disjunct must form  l
l d  clause l    r     rn c quantifier string r     rn   according
lemma       l    r     rn c  l equivalent r     rn c  follows equivalent
clause disjuncts forms  r     rn c 
     must case terms tq       qn implies   equivalently
tq       qn      shown disjuncts   literals 
follows theorem   term implies disjunct   moreover  know
preceding paragraph disjuncts equivalent formula
form  r     rn c  lemma       formula type implied
tq       qn formula  q     qn c  means every tuple quantifiers  q         qn   
disjunct equivalent  q     qn c  follows every disjunct
equivalent disjunct   giving us      thus conclude
prime implicate  
completes proof  since already shown lemma     
shorter d  clause equivalent itself 
proof works definition d  since every d  clause d  clause 
particular means d  clause prime implicate respect d 
prime implicate respect d   d  clause shortest
among equivalent d  clauses shortest among d  clauses 
theorem    number non equivalent prime implicates formula double
exponential length formula 
proof  know theorem    every prime implicatewof equivalent
clause returned genpi  every clause form dnf     
 t        terms dnf      lemma     clauses
    disjuncts  moreover      choices disjunct
since cardinality  t   bounded size   know lemma
  
         follows        clauses returned
  
genpi  hence        non equivalent prime implicates  
theorem    number non equivalent prime implicates formula may double
exponential length formula 
proof  let n natural number  let a     a          an    an    b     b     b          bn   
bn   n distinct propositional variables  consider formula defined
n
 

   ai   bi      ai   bi    

i  

   

fiprime implicates prime implicants modal logic

hard see  n terms dnf       corresponding  n ways
deciding          n  whether take first second disjunct  term
dnf      form
n
 

  ai f  i t    bi f  i t    

i  

f  i           i    denote d t   set formulae    a f  i t  
b  f    t       bn f  n t          n   consider set clauses c defined
 

 

dt   dt d t   

dnf     
n

notice n  clauses c since clause corresponds choice one
n elements d t    n terms dnf       number double
exponential    since length linear n  order complete proof 
show  i  clauses c prime implicates  ii  clauses c
mutually non equivalent 
begin showing         every pair distinct elements     c 
immediately gives us  ii  prove useful proof  i   let    
distinct clauses c      distinct  must term dnf     
    choose different elements d t    let d  element
d t   appearing disjunct     let d  element d t   disjunct
    let aj k a literal appears d   and hence d     consider
formula     aj k b  k      bn kn    tuple  k         kn   tuple
associated except  s  s inversed  clearly d  consistent 
since variables appear d    inconsistent every disjunct
    since construction every disjunct   contains literal whose negation appears
  follows              hence          
prove  i   let clause c  let prime implicate
implies   theorem     know must equivalent one clauses output
genpi  specifically clause output genpi disjunction
  literals  because theorem     remark set c composed exactly
candidate clauses disjunctions   literals  must equivalent
clause c  shown element c implies itself 
follows   means prime implicate  
theorem    prime implicates defined using either d  d   number
non equivalent prime implicates formula may double exponential length
formula 
proof  let defined page      set equal formula obtained
replacing c last conjunct c d  set equal set clauses
obtained replacing zero occurrences c d  example  n     
n
     c   c    d   c    c   d    d   d      elements
since choose  n disjuncts whether change c d  intend
   

fibienvenu

show clauses pairwise non equivalent prime implicates  
proof every element indeed prime implicate  with respect d 
d   proceeds quite similarly proof prime implicate  see proof
theorem      repeat here  instead show elements
pairwise non equivalent  so  consider two distinct elements
  since distinct  must string quantifiers q     qn
disjunct  q     qn    c  d   disjunct       
would  q     qn      hence  q     qn     r     rn disjunct r     rn  
using lemma       see happen r     rn   q     qn    
i e   q     qn disjunct   contradiction  must       follows
elements pairwise non equivalent  hence possesses double
exponential number prime implicates 
theorem    exists algorithm runs single exponential space size
input incrementally outputs  without duplicates  set prime implicates
input formula 
proof  let sets candidates function defined figure   
assume ordered     t         tn    ti   let max denote
number elements  ti    assume ordering elements  ti   
 ti      i          i max    notice tuples         max                  max n  
ordered using standard lexicographic ordering  lex    a            lex  b         bn  
  j n aj   bj ak bk   k j   
set maxindex   ni   maxi   let f           max                  max n            maxindex  
bijection defined follows  f  a              a           m th
tuple lexicographic ordering         max                  max n    denote
unique clause form   a      n an f  a             m  remark
given index          maxindex   sets  t           tn    possible
generate polynomial space  in size sets  t           tn    clause  
make use fact modified version algorithm genpi  defined follows 
function itergenpi  
    genpi 
    genpi 
        maxindex   j     j   either j        j
every   j maxindex   output  
proofs termination  correctness  completeness itergenpi similar corresponding results genpi  theorem      omit details 
instead focus spatial complexity itergenpi  first step itergenpi
clearly runs single exponential space     since deciding satisfiability takes
polynomial space     generating elements dnf      takes
single exponential space     refer lemma      step   uses singleexponential space     since sets  t   associated term ti
polynomial size ti   finally  step    use observation generation given index done polynomial space size sets
   

fiprime implicates prime implicants modal logic

 t           tn    hence single exponential space     sufficient since
comparisons step    need keep two candidate clauses memory
one time  deciding whether one candidate clause entails another accomplished
single exponential space  since clauses single exponential size     
theorem    prime implicate recognition pspace hard 
proof  reduction simple  formula unsatisfiable   a a 
prime implicate   suffices problem checking unsatisfiability formulae
k known pspace complete 
need following two lemmas theorem    
lemma      let formula k  let         k         m
        n  j propositional literals  non tautologous clause  suppose furthermore
literal l    l             k
                k             n                     m     every
i    i                 i     
proof  prove contrapositive        k                   k    
        n                       m       i  
                i            consider case
       immediately get      
let us first suppose      k                k      since      must
            k            k        k implicate             k    
      k known prime implicate               k     follows
must clause               k                k      
consider clause           m         n   know    since
              k                     k      
since must equivalent propositional clause  by theorem    propositional
part  namely       k   imply   follows            
     
next suppose         n                       m              n  
must implicate                 m    since assumed     
        n   prime implicate                 m     follows
                m                  n         let
       k        n   theorem    know disjunction
  literals  according theorem   must     since         n        
know    since                 m          since
           n    means                  
finally consider case   i          
        i      know    hence       i        i  
moreover  since       i        j j        i         i
         thus    i                   i      must mean
      i            i              
assumption  tautology    i         cannot tautology
   

fibienvenu

either       i           i         tautology 
follows theorem   equivalent formula         p   let
        k         m         i           p    i        n  
      i               p   must case      also  know
j    j       otherwise would
         j hence   i                    p   similarly 
k     i      k         would mean
    i    contradicting assumption superfluous disjuncts
  follows theorem         thus              means
     
lemma      let formula k  let        k        m        n
 j propositional literals  non tautologous clause  suppose furthermore
literal l    l         either       k        
          k                          k                   n
            i                   i     i 
proof  consider case        immediately
get result  suppose           definition    must
       o         p         q             since      
proposition   know either       k                           p
    j       p j 
begin case       k                  theorem   
     p         m every j         m j  
follows  also theorem               o        m        n  
hence             k            o        o         k          o  
found implicate               k    stronger       k  
      k                   k     
next suppose      m          p        follows theorem  

     o         k every j         m j  
thereby obtain             k         p                
  n          this  infer        k          
        n                     p            m             p  
        m            follows                     
k                   n           
finally suppose     j       p j furthermore         

      p  we already shown result holds                
p      i         implicate       i     show
  i         prime implicate       i      must find
stronger implicate  consider set    s          q                
k      m k    i   note must least one element
assumed         i    since                k         p          m 
         s 
every   r    sw   r   w

get    w
        k        m   j  i  j    w
ss  s    follows   

  i       ss   s      m    means ss   s      m  
   

fiprime implicates prime implicants modal logic

w
implicate     i     moreover  ss   s      m        i      m  
since construction          every s 
w
remains shown   i             ss   s         
suppose
contradiction contrary holds    i           
w

ss   s          theorem    must
                            thus
         p since assumed                p   contradicts
earlier assumption w
    j       p j  thus  shown
  i             ss   s            i          
        i     
theorem    let formula k  let        k        n        m
 j propositional literals  non tautologous clause  a        n
i   b  literal l    l     
following conditions hold 
         k                 k    
     i       n           i     every
           n                     n    
proof  forward direction shown lemma       direction follows
lemma      together hypothesis       n  which
ensures        k                   n         
                n     
theorem    let formula k  let non tautologous propositional clause
   literal l    l     
       l  l  
proof  consider formula non tautologous propositional clause   
literal l    l   suppose       l 
l   know      l   follows    l  implicate
strictly stronger   prime implicate  
direction  suppose       must case clause
            since      follows theorem   literal
propositional literal inconsistent  literals inconsistent 
must inconsistent  clearly       l  every l   otherwise 
equivalent propositional clause  specifically propositional clause
containing literals appearing  since       strictly stronger  
must literal l appear   means       l 
      l   completing proof 
theorem    let formula k  let     non tautologous clause
        exists term dnf    
     conjunction formulae    
   

fibienvenu

proof  let formula  let     non tautologous clause     
first direction  suppose term dnf          
conjunction formulae     two cases  either
terms dnf      unsatisfiable  terms none satisfy
condition  first case    prime implicate   since contradictory
clause
w
 e g    a a   stronger  second case  consider clause    t  
conjunction formulae     every must
w
 t       otherwise would        hence
w        moreover      t
since     t every   theorem           t since      
            means prime implicate  
direction  suppose   prime implicate      

must      dnf      
w dnf      non empty        w
 t implies    show
  let
w  t primewimplicate w
implicate implies  t   since     t  t
non tautologous  follows theorem           n formulae  
     must            n w
dnf      
wbe
case  t            n   w
means  t            n    t
implies every implicate w
implies it   t must prime implicate  
means        t   since assumed   prime implicate
  follows theorem       dnf      
order show theorem    need following lemmas 
lemma        implicate prime implicate  algorithm
test pi returns input       
proof  suppose   prime implicate   unsatisfiable  must
satisfiable  return first step  satisfiable  since
assumed   implicate   must clause        
              follows theorem   equivalent disjunction
  formulae  hence clause    
know lemma    equivalent disjunction terms dnf      
must thus case ti      ti dnf       since ti satisfiable
conjunction propositional literals      formulae  follows exists set
  i    i           i k i    conjuncts ti   i i      i k i           otherwise
ti would fail imply     moreover  elements   i    i           i k i    must
appear nnf outside modal operators  formulae   i          i k i  must
elements set x   immediate
 

 
 i i       i k i             



       

 

 i i       i k i   



   

   

fiprime implicates prime implicants modal logic

w
latter implies formula       i i       i k i     must consistent 
means
 
 
   i i       i k i      i i       i k i   




must consistent well  itvmust case select
 i   i          i k i    consistent  let set   set
satisfies condition algorithm since 
sx
   

w



 because know

v



consistent 

ti dnf       conjuncts  i    i           i k i  ti that 
 i   i          i k i        since contains  i   i          i k i    
  i i       i k i          follows     above 
since exists set x satisfying conditions  algorithm returns no 
lemma      algorithm test pi returns input         
prime implicate  
proof  suppose test pi returns input        happens first
step  must case unsatisfiable   unsatisfiable  case  
prime implicate   possibility algorithm returns step   
means w
must x satisfying 
 a     
 b  ti dnf       exist conjuncts  i    i           i k i  ti
that 
 i   i   i          i k i      
 ii    i i       i k i        
w
let clause   i i   w
    i k i 
w    remark ti   ti   
  i i      i k i     hence

  


  i i      i k i    
w
w definition
dnf       ti   immediately follows      i i      i k i   
hence w
        b   ii     i i       i k i         every i 
hence   i i       i k i        yields          b   i  
 i   i          i k i       hence every
w

w
i       i k i w     infer   i i       i k i       w
  
hence        know    a  theorem            
follows         putting together  see exists clause
                hence   prime implicate  
theorem    let formula  let   implicate   algorithm
test pi returns yes input         prime implicate  
   

fibienvenu

proof  clear test pi terminates since unsatisfiability testing nnf transformation always terminate  finitely many ti   lemmas     
     show us algorithm always gives correct response 
theorem    algorithm test pi runs polynomial space 
proof  remark sum lengths elements x bounded
length formula nnf    hence lemma    sum thew lengths
elements particular x cannot exceed      testing whether     thus
accomplished polynomial v
space length involves testing
satisfiability formula whose length clearly polynomial  
let us turn step    b   notice necessary keep ti
memory once  since generate terms ti one time using polynomial
space lemma     lemma     length ti dnf          
follows checking whether  i   i          i k i         whether   i i      
i k i         accomplished polynomial space length  
conclude algorithm test pi runs polynomial space 
order show theorem     use following lemmas 
lemma      clause prime implicate   testpi outputs
input 
proof  let us begin considering formula clause prime
implicate   two possible reasons this  either implicate  
implicate exists stronger implicate  first case  testpi returns
step    desired  focus case implicate
prime implicate  begin treating limit cases one
tautology contradiction  given know non prime implicate  
two possible scenarios  either                   cases 
algorithm returns step   
implicate   neither tautology contradiction 
algorithm continue step    step  redundant literals deleted
  contains   literals  add extra disjunct   literals
satisfies syntactic requirements theorem     let      k         m   
     n clause end step   modifications made 
transformations step   equivalence preserving  theorem     modified
equivalent original  still non tautologous non prime implicate  
means satisfy conditions theorem     follows one
following holds 
 a        k                   k   
 b    i       n             i    
 c          n                       n    
   

fiprime implicates prime implicants modal logic

suppose  a  holds        k non tautologous propositional clause implied
              k    contains redundant literals  means    
          k         k satisfy conditions theorem     according theorem 
      k                   k     must j    
          k             j  j       k   means       j    algorithm
returns step   
suppose next  b  holds  let   i       n      
      i      theorem     means dnf     
  i       n   entails conjunction   formulae conjuncts   follows
algorithm returns step   
finally consider case
step   
wm neither  a   b  holds  c wdoes 

call test pi    i                      m         i     prime
implicate               m     shown test pi correct  theorem
     test pi return no  testpi return well  covered
possible cases  conclude clause prime implicate  
testpi outputs no 
lemma      testpi outputs input      clause 
prime implicate  
proof    different ways testpi return  these occur steps            
    let us consider turn  first way algorithm return
step   find       correct since cannot prime implicate
consequence   step    return unsatisfiable not 
tautology not  correct since cases cannot prime
implicate since exist stronger implicates  any contradictory clause  
non tautologous implicate    step    may modify   resulting
formula equivalent original  prime implicate case
original clause was  let      k         m         n clause end
step    step    return find propositional literal l
     l   since step    removed redundant literals   sure
   l  strictly stronger         l            l  
means prime implicate   consider step   testpi  step 
return disjunct  i term dnf        i    
  i         entails conjunction   literals   according theorem    
means   i         prime implicate       i    
means prime implicate
w theorem       step  return
test pi returns input     ki                      m      theorem    
w
know happens case    ki     prime implicate
                m     follows theorem    prime implicate
 
theorem    algorithm testpi always terminates  returns yes input   
  prime implicate  
   

fibienvenu

proof  algorithm testpi clearly terminates steps     involve finite number
syntactic operations finite number entailment checks  moreover  call
test pi step   known terminate  theorem      correctness completeness
already shown lemmas           
make use following lemma proof theorem    
lemma      algorithm testpi provided figure   runs polynomial space
length input 
proof  clear steps     carried polynomial space length
input  since simply involve testing satisfiability formulae whose lengths
polynomial        step  
w carried polynomial space since theorem
   deciding whether formula   w
i     prime implicate                  
takes polynomial space    
i                          m       hence
         thus conclude algorithm testpi runs polynomial space
length input 
theorem    prime implicate recognition pspace 
proof  show theorem    testpi always terminates returns yes whenever clause prime implicate otherwise  means testpi decision
procedure prime implicate recognition  since algorithm shown run
polynomial space  lemma        conclude prime implicate recognition
pspace 
corollary    prime implicate recognition pspace complete 
proof  follows directly theorems       

references
adjiman  p   chatalic  p   goasdoue  f   rousset  m  c     simon  l          distributed
reasoning peer to peer setting  application semantic web  journal
artificial intelligence research             
baader  f   mcguiness  d  l   nardi  d     patel schneider  p   eds            description logic handbook  cambridge university press 
bienvenu  m          prime implicates prime implicants modal logic  proceedings
twenty second conference artificial intelligence  aaai     pp         
bienvenu  m          prime implicate normal form alc concepts  proceedings
twenty third conference artificial intelligence  aaai     pp         
bienvenu  m          consequence finding modal logic  ph d  thesis  universite de
toulouse 
bittencourt  g          combining syntax semantics prime form representation  journal logic computation               
   

fiprime implicates prime implicants modal logic

blackburn  p   de rijke  m     venema  y          modal logic  cambridge university
press 
blackburn  p   van benthem  j     wolter  f   eds            handbook modal logic 
elsevier 
brandt  s     turhan  a          approach optimized approximation  proceedings
ki      workshop applications description logics  kidlws    
cadoli  m     donini  f  m          survey knowledge compilation  ai communications                   
cialdea mayer  m     pirri  f          propositional abduction modal logic  logic
journal igpl                
darwiche  a     marquis  p          knowledge compilation map  journal artificial
intelligence research             
de kleer  j   mackworth  a  k     reiter  r          characterizing diagnoses systems 
artificial intelligence             
donini  f  m          description logic handbook  chap  complexity reasoning 
cambridge university press 
donini  f  m   lenzerini  m   nardi  d   hollunder  b   nutt  w     marchetti spaccamela 
a          complexity existential qualification concept languages  artificial
intelligence             
eiter  t     makino  k          computing abductive explanations  proceedings
eighteenth national conference artificial intelligence  aaai     pp       
enjalbert  p     farinas del cerro  l          modal resolution clausal form  theoretical
computer science              
garey  m  r     johnson  d  s          computers intractability  guide theory
np completeness  w  h  freeman 
ghilardi  s   lutz  c     wolter  f          damage ontology  case conservative extensions description logics  proceedings tenth international
conference principles knowledge representation reasoning  kr     pp 
       
giunchiglia  f     sebastiani  r          sat based decision procedure alc 
proceedings fifth international conference principles knowledge representation reasoning  kr     pp         
kusters  r     molitor  r          approximating specific concepts logics
existential restrictions  ai communications               
ladner  r          computational complexity provability systems modal propositional logic  siam journal computing                
lakemeyer  g          logical account relevance  proceedings fourteenth
international joint conference artificial intelligence  ijcai     pp         
   

fibienvenu

lang  j   liberatore  p     marquis  p          propositional independence  formulavariable independence forgetting  journal artificial intelligence research     
       
marquis  p       a   contribution letude des methodes de construction dhypotheses en
intelligence artificielle  french  universite de nancy i 
marquis  p       b   extending abduction propositional first order logic  proceedings fundamentals artificial intelligence research workshop  pp         
marquis  p          handbook defeasible reasoning uncertainty management systems  vol     chap  consequence finding algorithms  pp         kluwer 
pagnucco  m          knowledge compilation belief change  proceedings
nineteenth australian conference artificial intelligence  ai     pp       
papadimitriou  c          computational complexity  addison welsey 
przymusinski  t          algorithm compute circumscription  artificial intelligence 
             
ramesh  a     murray  n          computing prime implicants implicates regular logics 
proceedings twenty fourth ieee international symposium multiplevalued logic  pp         
schild  k          correspondence theory terminological logics  preliminary report 
proceedings twelth international joint conference artificial intelligence
 ijcai     pp         
younger  d  h          recognition parsing context free languages time n   
information control                 

   


