journal artificial intelligence research                  

submitted        published      

approximate strong equilibrium job scheduling games
michal feldman

mfeldman huji ac il

school business administration
center study rationality 
hebrew university jerusalem  israel 

tami tamir

tami idc ac il

school computer science 
interdisciplinary center  herzliya  israel 

abstract
nash equilibrium  ne  strategy profile resilient unilateral deviations 
predominantly used analysis multiagent systems  downside ne
necessarily stable deviations coalitions  yet  show paper 
cases  ne exhibit stability coalitional deviations  benefits
joint deviation bounded  sense  ne approximates strong equilibrium 
coalition formation key issue multiagent systems  provide framework
quantifying stability performance various assignment policies solution
concepts face coalitional deviations  within framework evaluate given
configuration according three measures   i  ir min   maximal number  
exists coalition minimal improvement ratio among coalition members    ii  ir max   maximal number   exists coalition
maximal improvement ratio among coalition members    iii  dr max  
maximal possible damage ratio agent outside coalition 
analyze measures job scheduling games identical machines  particular 
provide upper lower bounds three measures ne wellknown assignment rule longest processing time  lpt  
results indicate lpt performs better general ne  however  lpt
best possible approximation  particular  present polynomial time approximation
scheme  ptas  makespan minimization problem provides schedule
ir min     given   respect computational complexity  show
given ne   identical machines   unrelated machines  np hard
determine whether given coalition deviate every member decreases cost 

   introduction
consider job scheduling systems  n jobs assigned identical machines
incur cost equal total load machine assigned to  
problems widely studied recent years game theoretic perspective  koutsoupias   papadimitriou        andelman  feldman    mansour        christodoulou 
koutsoupias    nanavati        czumaj   vocking        a  fiat   olonetsky         
contrast traditional setting  central designer determines allocation
jobs machines participating entities assumed obey protocol  mul   cost function characterizes systems jobs processed parallel  jobs
particular machine single pick up time  need share resource simultaneously 

c
    
ai access foundation  rights reserved 

fifeldman   tamir

tiagent systems populated heterogeneous  autonomous agents  often display
selfish behavior  different machines jobs may owned different strategic entities 
typically attempt optimize objective rather global objective 
game theoretic analysis provides us mathematical tools study situations 
indeed extensively used recently analyze multiagent systems  trend
motivated part emergence internet  composed distributed
computer networks managed multiple administrative authorities shared users
competing interests  papadimitriou        
game theoretic models applied job scheduling problems  well network games  e g   fabrikant  luthra  maneva  papadimitriou    shenker        albers 
elits  even dar  mansour    roditty        roughgarden   tardos        anshelevich 
dasgupta  kleinberg  tardos  wexler    roughgarden         use solution concept
nash equilibrium  ne   strategy agent best response
strategies agents  ne powerful tool analyzing outcomes competitive environments  notion stability applies unilateral deviations 

numerous multiagent settings  selfish agents stand benefit cooperating forming
coalitions  procaccia   rosenschein         therefore  even single agent profit
unilateral deviation  ne might still stable group agents coordinating joint deviation  profitable members group  stronger
notion stability exemplified strong equilibrium  se  solution concept  coined
aumann         strong equilibrium  coalition deviate improve utility
every member coalition 

m 

 

 

 

m 

 

 

 

m 

 

 

 

m 

 

 

 

  

m 

m 

 

 
 a 

 

 

 

 b 

figure    example configuration  a  nash equilibrium resilient
coordinated deviations  since jobs load     profit deviation demonstrated  b  

example  consider configuration depicted figure   a   figures 
job represented rectangle whose width corresponds jobs length  jobs
scheduled specific machine form vertical concatenation rectangles  example 
figure   a  three machines  m  processes two jobs length    note
internal order jobs effect  since cost job defined load
machine assigned to  configuration ne since job reduce cost
unilateral deviation  one might think ne identical machines must
sustainable joint deviations  yet  already observed  andelman

   

fiapproximate strong equilibrium

et al          may true   example  configuration resilient
coordinated deviation coalition consisting four jobs load  
  deviating configuration  b   jobs load   decrease costs      
jobs load   improve      note cost two jobs load  
 which members coalition  increases 
example above  every member coalition improves cost  multiplicative  factor      much coalition improve  bound
improvement ratio  turn out  example fact extreme one
sense clarified below  thus  ne completely stable coordinated deviations  settings  provide us notion approximate
stability coalitional deviations  or approximate strong equilibrium  
consider subclass ne schedules  produced longest processing time
 lpt  rule  graham         lpt rule sorts jobs non increasing order
loads greedily assigns job least loaded machine  easy verify
every configuration produced lpt rule ne  fotakis  s  kontogiannis   
spiraklis         se  note instance depicted figure    lpt
would produced se  however  show  always case 
paper provide framework studying notion approximate stability
coalitional deviations  analysis  consider three different measures  first
two measure stability configuration  uses notion improvement ratio
job  defined ratio jobs costs deviation 
third measures worst possible effect non deviating jobs  explained
below  
   minimum improvement ratio  definition  members coalition must
reduce cost  is  improvement ratio every member coalition larger
   clearly  coalition members might share improvement ratio 
minimum improvement ratio particular deviation minimal improvement ratio
coalition member  minimum improvement ratio schedule s  denoted ir min  s  
maximum possible deviations originated minimal improvement
ratio deviation  words  coalitional deviation originating
every member coalition reduces cost factor greater ir min  s  
closely related notion suggested albers         defined strategy
profile  se coalition agent improve factor
  notation  schedule  se ir min  s    albers
studied notion context se existence cost sharing games  showed
sufficiently large    se always exists  justification behind concept
agents may willing deviate improve sufficiently high factor  due
to  example  overhead associated deviation  
   statement holds      identical machines  every ne se  andelman et al  
      
   throughout paper  define approximation multiplicative factor  since improvement
damage ratios three measures presented constants greater one  as shown
below   additive ratios unbounded  formally  value possible construct instances
 by scaling instances provide multiplicative ratio  cost jobs reduced 
cost jobs increased  least additive factor a 

   

fifeldman   tamir

three machines  show every ne     se  is  coalition
deviate every member improves factor larger     
case  provide matching lower bound  recall figure   above   holds
 
   arbitrary m  show every ne    m  
  se  proof technique
draws connection makespan approximation approximate stability 
makespan configuration defined maximum load machine
configuration 
next consider schedules obtained
lpt rule  show     

every lpt configuration             se            provide matching lower
 
bound  holds    arbitrary m  show upper bound     m
 
results indicate lpt stable ne respect coalitional
deviations  yet  lpt best possible approximation se  similar notion
approximation algorithms  define se ptas assignment algorithm
gets input additional parameter   specifying close se schedule
produces        se time polynomial n      paper devise
se ptas fixed number machines  approximates makespan within
factor      
   maximum improvement ratio  maximum improvement ratio particular
deviation maximal improvement ratio experienced coalition member 
maximum improvement ratio schedule s  denoted ir max  s   maximum
possible deviations originated maximal improvement ratio deviation 
words  coalition deviation originating exists
member coalition reduces cost factor greater ir max  s  
notion establishes bounds much agent would gain deviating
coalition agents gain something deviation  also  notion similar
spirit stability large total improvement  suits environments
individuals willing obey specific player long hurt  interestingly 
find given ne configuration  improvement ratio single agent may
arbitrarily large     contrast  lpt configurations three machines 
agent improve factor    bound tight  thus  respect
ir max   relative stability lpt compared ne significant respect
 
  believe tight 
ir min   arbitrary m  provide lower bound  
   maximum damage ratio  case jobs load   figure    jobs
might get hurt result coalitional deviation  third measure consider
worst possible effect deviation jobs members deviating
coalition  formally  maximum damage ratio maximal ratio costs
non coalition member deviation  variants measure
considered distributed systems  e g   byzantine generals problem  lamport  shostak 
  pease         rational secret sharing  halpern   teague          section   
prove maximum damage ratio less   ne configuration  less
   rational secret sharing protocol  set players  holding share secret  aims jointly
reconstruct it  viewing protocol game  players utilities typically assumed satisfy
following two basic constraints   i  player prefers learning secret learning it   ii 
conditioned learned secret  player prefers possible players learn it 

   

fiapproximate strong equilibrium

   lpt configuration  bounds hold    cases
provide matching lower bounds 
summary  results sections      see table    indicate ne configurations
approximately stable respect ir min measure  moreover  performance
jobs outside coalition would hurt much result coalitional deviation 
ir max   results provide additional strength lpt rule  already
known possess attractive properties  with respect to  e g   makespan approximation
stability unilateral deviations  

ne
lpt

ir min
upper bound
m 
m  
 
 
  m  
 
 
 



 
 m

 
 

 


 
 

lower
bound
 
 

 
 

 

 
 

ir max
upper
lower
bound bound
unbounded
 
   m   

 

 


dr max
upper lower
bound bound
 
 
 
 

 
 

table    results three measures  unless specified otherwise  results hold
arbitrary number machines m 
section    study computational complexity aspects coalitional deviations 
find np hard determine whether ne configuration   identical
machines se  moreover  given particular configuration set jobs  nphard determine whether set jobs engage coalitional deviation 
unrelated machines  i e   job incurs different load machine  
hardness results hold already     machines  results might implications
coalitional deviations computationally restricted agents 
related work  ne shown paper provide approximate stability coalitional deviations  related body work studies well ne approximates optimal
outcome competitive games  price anarchy defined ratio
worst case ne optimum solution  papadimitriou        koutsoupias   papadimitriou         extensively studied various settings  including job scheduling
 koutsoupias   papadimitriou        christodoulou et al         czumaj   vocking        
network design  albers et al         anshelevich et al         anshelevich  dasgupta  tardos  wexler    roughgarden        fabrikant et al          network routing  roughgarden
  tardos        awerbuch  azar  richter    tsur        christodoulou   koutsoupias 
       more 
notion strong equilibrium  se   aumann        expresses stability coordinated deviations  downside se games admit se  even
amongst admitting nash equilibrium  various recent works studied existence se particular families games  example  shown every job
scheduling game  almost  every network creation game  se exists  andelman et al  
       addition  several papers  epstein  feldman    mansour        holzman   lawyone              rozenfeld   tennenholtz        provided topological characterization
existence se different congestion games  including routing cost sharing
   

fifeldman   tamir

connection games  vast literature se  e g   holzman   law yone             
milchtaich        bernheim  peleg    whinston        concentrate pure strategies
pure deviations  case paper  job scheduling settings  shown
andelman et al         mixed deviations allowed  often case se
exists  se exists  clearly  price anarchy respect se  denoted
strong price anarchy andelman et al         significantly better price
anarchy respect ne  andelman et al         a  fiat   olonetsky         leonardi
  sankowski        
following work  ir min bounds case     machines provided
chen         extended bound    ne schedules  provided bound
      



   
    

      lpt based schedules 

   model preliminaries
section give formal description model provide several useful observations properties deviations coalitions 
    resilience deviations coalitions
first present general game theoretic setting describe specific job scheduling
setting focus paper 
game denoted tuple g   hn   sj     cj  i  n               n  set
players  sj finite action space player j n   cj cost function player j 
joint action space players   ni   si   joint action    s            sn   s 
denote sj actions players j      j  i e   sj    s            sj    sj             sn   
similarly  set players   called coalition  denote actions
players   respectively  cost function player j maps joint action
real number  i e   cj   r 
joint action pure nash equilibrium  ne  player j n benefit
unilaterally deviating action another action  i e   j n sj   cj  sj   a 
cj  s   pure joint action coalition n specifies action player
coalition  i e   s  j sj   joint action resilient pure deviation
coalition pure joint action s  cj  s   s      cj  s  every
j  i e   players coalition deviate way player strictly
reduces cost   case say deviation s     s   s    profitable
deviation coalition  
pure joint action resilient pure deviations coalitions
coalition n profitable deviation s 
definition     pure strong equilibrium  se  pure joint action resilient
pure deviations coalitions 
clearly  strong equilibrium refinement notion nash equilibrium  in particular  strong equilibrium  resilient deviations coalitions size   
coincides definition ne  

   

fiapproximate strong equilibrium

    job scheduling identical machines
job scheduling setting identical machines characterized set machines  
 m            mm    set             n  jobs  job j processing time pj   assignment
method produces assignment jobs machines  sj denotes machine
job j assigned to  assignment referred schedule configuration  we use
two terms interchangeably   load machine mi inp
schedule sum
processing times jobs assigned mi   li  s    j sj  mi pj   set jobs

  let s     j  sj   denote set machines members assigned
schedule s 
makespan schedule load loaded machines  social optimum
minimizes makespan  i e   op   mins makespan s  
job scheduling setting define job scheduling game jobs players 
action space sj player j n individual machines  i e   sj    
joint action space   nj   sj   joint action constitutes schedule  schedule
player j n selects machine sj action incurs cost cj  s  
load machine sj   i e   cj  s    li  s   sj   mi   job scheduling game 
makespan highest cost among players  formally  makespan s    maxj cj  s  
 
let s  two configurations  let pis s
binary indicator whose value  
   i 
job j sj   mi  s j   mi   i e   job chooses mi 
mi  s       otherwise  clear context  abuse notation
 
denote pis s
pi   i    addition  denote li  s  li  s    li l i   respectively 
   i 
let s     s   s    profitable deviation coalition   improvement
ratio job j sj   mi  s j   mi   i e   job migrating machine
 
mi  machine mi    denoted irs s  j    li   s  li   s     clearly  job j  
 
irs s  j       damage ratio job j   sj   s j   mi denoted
 
drs s  j    li  s    li  s  
sj    s j   say job j migrates deviation  note that  terminology 
job member profitable deviation even migrate deviation 
yet  every job migrates deviation member deviating coalition
definition 
definition     given schedules s     s   s     minimal improvement ratio s 
 
respect ir min  s  s      minj irs s  j   addition  minimal improvement
ratio schedule ir min  s    maxs    s  s    n ir min  s  s    
given schedules s     s   s     maximal improvement ratio s  respect
 
ir max  s  s      maxj irs s  j   addition  maximal improvement ratio
schedule ir max  s    maxs    s  s    n ir max  s  s    
given schedules s     s   s     maximal damage ratio s  respect
 
dr max  s  s      maxjn drs s  j   addition  maximal damage ratio schedule
dr max  s    maxs    s  s    n dr max  s  s    
particular  define notion  se  albers        terms minimum
improvement ratio follows 
definition     schedule  strong equilibrium   se  ir min  s   
   

fifeldman   tamir

next provide several useful observations claims shall use sequel 
refer profitable deviation ne schedule ne originated profitable deviation 
similarly  profitable deviations schedule produced lpt rule referred
lpt originated profitable deviation 
first observation shows ne originated profitable deviation  job
migrates machine  job must migrate machine  formally 
observation     let ne let s     s   s    profitable deviation  s j   mi
j   j   sj     mi s j     mi  i     i 
obvious  since job j strictly decreases cost migrating machine
job leaves  profitably migrates unilaterally  contradicting ne 
next define special deviation structure  called flower structure
deviations loaded machine 
definition     let m  loaded machine given schedule s  say
s s 
s s 
deviation s  obeys flower structure      p  i
  pi  
    i  j     
 

s s
pi j
     see figure    

m 

m 
m 

m 

m 

figure    graph representation coalition   machines obeying flower structure 
 

s s
edge mi mj pi j
    

 

s s
particular       deviation s  obeys flower structure p   
 
 

 

 

 

 

s s
s s
s s
s s
s s
p   
  p   
  p   
    p   
  p   
     recall simplicity presentation 
 

s s
write sequel pi j denote pi j
write li l i denote li  s 
li  s     respectively 

claim     ne originated profitable deviation three machines obeys flower structure 
proof  let ne m  loaded machine s  let s  profitable
deviation  first show p      p         assume first p   
p   p   p    
thus  l     l  l     l    clearly  since total load change  li   l i  
therefore  must hold l     l    however  profitable deviation increase
load loaded machine  contradiction  therefore  one p      p   
   assume w l o g p         observation     job leaves m   
cannot m    thus  must p         similarly  job
m   
pleaves p
p         get l     l    l     l    l     l    contradicting li   l i  
   

fiapproximate strong equilibrium

 
 
 
p       
p getpthat  l    l    l    l   no job added m     l    l   
contradicting li   li again  thus  p         proof p        analogous 
remains show p      p      p      p         know three machines
assigned jobs s  assigned s  p      p        
observation     job leaves m    m    therefore  p      p         also 
job leaves m    thus least one p      p    equals    assume w l o g p        
show p         particular  show l     l    since p        must
p         assume opposite  l   l    already know
p        
p p     p
thus  l     l    l     l    assumption l   l    is  l i   li  
contradiction 

known ne schedule two identical machines se  andelman
et al          claim  least four jobs change machines profitable
deviation three machines  clearly  least four jobs change machines coalition
    machines  therefore 

corollary     every ne schedule stable deviations coalitions size three
less 
next two propositions characterize coalition deviation three machines 
show m  loaded machine deviation  becomes
least loaded deviation 
proposition     ne originated deviation three machines  loads two
less loaded machines increasing  is  l     l  l     l   
proof  assume contrary l   l    claim      p    p
  p      p
   thus 
   
l     l    l     l    assumption l   l    is 
l

li  
 
contradiction  proof l    l  analogous 

proposition     ne originated deviation three machines loaded machine becomes least loaded machine  is  l     min l     l     
proof  claim      p         thus l     l    proposition  l    l    
thus  l     l     proof l     l   symmetric 


    strong equilibrium
section  stability configurations measured minimal improvement ratio
measure  first provide complete analysis  i e  matching upper lower bounds 
three identical machines  ne lpt  arbitrary m  provide upper
bound ne lpt  show lower bounds     hold m 
theorem     ne schedule three machines     se 
   note unrelated machines  improvement ratio cannot bounded within finite factor
even two machines  seen simple example two jobs two machines 
load vector job          load vector job          job assigned machine  for
         resulting configuration ne  load   machine  however  jobs
reduce load   swapping 

   

fifeldman   tamir

proof  let ne configuration three machines  let r   ir min  s   claim
     deviation obeys flower p
structure  therefore  l   l   r   l   l   r   l  
l   r   l   l   r  let p   j pj  also   l    l    l     summing
inequalities get r  l    p    l     p   
proposition     load loaded machine half total load 
is  l  p   
proof  let g   max l  l    l  l     flower structure  least two jobs
m    thus g l       since otherwise job would benefit leaving m    contradicting
ne  definition g  know  l  l    l     g  since  g l    get
l  p   

distinguish two cases 
   l   p    case r  l    p    l     p     p      p          
   l     p    means l     l      p    m  m  rest load  
is  least one l     l      p    w l o g  let m    flower structure
job m  migrates m    jobs improvement ratio l   l     which 
proposition      less  p      p           thus  again  r       

analysis tight shown figure    moreover  lower bound
extended     adding   machines   heavy jobs assigned
machines  thus 
theorem        exists ne schedule ir min  s        
lpt configurations  bound minimum improvement ratio lower 
proof following theorems appear appendix a 
theorem     lpt schedule three machines       


 
 

        se 

theorem        exists lpt schedule ir min  s        


 
   

next provide upper bounds arbitrary m  analysis based drawing
connection makespan approximation se approximation  assume
given schedule r approximation minimum makespan  show
conditions original schedule  subset jobs form coalition
ir min   r  then  considering subset machines  possible get schedule
apparently better optimal one  first define set assignment rules
connection exists 
definition     let schedule instance   hn  i  given   let  
hn   instance induced s  n    j sj    assignment method 
a  said subset preserving   holds sj   sj

j n   assignments produced instances i 
respectively 
   

fiapproximate strong equilibrium

claim     lpt subset preserving method 
proof  proof induction number jobs n   show
k    n   first k jobs n   assigned machine lpt executed
note since n sublist n   jobs n
input input i 
order n   first job scheduled first empty machine among  
job j n   induction hypothesis  j scheduled  load
machines identical load corresponding machines time j
scheduled member n   load generated jobs n come j
n   therefore  lpt  j scheduled least loaded machine among machines
  is  sj   sj   assume lpt uses deterministic tie breaking rule
several least loaded machines n   therefore sj   sj case 

lemma     let assignment method  i  subset preserving   ii  yields nash
equilibrium   iii  approximates minimum makespan within factor r  r  
non decreasing m  then  produces r se 
proof  assume contradiction exists instance schedule
produced a  exists coalition improvement ratio every member
greater r  let coalition minimum size  job j
migrate  set jobs    j  smaller coalition  contradicting minimality
  therefore  every j   holds sj    s j   next show s     s     
first  s   s      is  every machine s   job j migrates 
must exist job migrating it  otherwise     j  smaller coalition  contradicting
minimality   second  s     s    is  every machine job j
migrates  must exist job migrating  otherwise job j improve unilaterally 
contradiction ne   given s     s      denote set machines
  let    m    finally  let n n set jobs assigned machines a 
consider instance   hn   i  since subset preserving  jobs n
scheduled exactly schedule scheduled part i 
particular  scheduled a  deviation exists  every job
improves factor greater r  machines take part it 
words  pair machines i  j  pi j      li  l j   r m  r m  
r m  approximation ratio machines  hand  since
op  i 

produces r m  approximation  machine i  li r m op  i  

minimum possible makespan machines  therefore  pi j     r m   
li  l j


r m op  i 
 
l j

implies machine j receives least one job 


l j   op  i  
however  since least one job migrated participating machines 
deviation machines assigned jobs n load
contradiction 
less op  i  

let ne machines  clearly    induced schedule
 
set machines ne  also  known ne provides    m  
 approximation makespan  finn   horowitz        schuurman   vredeveld        
 
implies lemma     applied r     m  
assignment yields
ne  therefore 
   

fifeldman   tamir

corollary     ne schedule identical machines   

 
m    

se 

next result direct corollary lemma      claim      fact lpt
 
  approximation makespan  graham        
provides       m
 
corollary      schedule produced lpt identical machines       m
 se 

bounds tight  gap lower upper bounds
small constant 

   maximum improvement ratio
section  analyze maximum improvement ratio measure  provide complete analysis ne configurations    lpt configurations three
machines  lower bound lpt three machines extended arbitrary m 
contrast measures consider paper  ne lpt differ
small constant  turns respect maximum improvement ratio  ne
lpt significantly different  improvement ratio ne originated deviations arbitrarily high  deviations lpt configurations  highest possible
improvement ratio participating job less     
theorem     fix r      machines  exists instance
machines ne ir max  s    r 
proof  given r  consider ne configuration three machines given figure   a  
coalition consists         r   r   improved schedule given figure   b  
improvement ratio jobs load    r     r       dummy machines jobs
added 

m 

 r  

 

 r

m 

 r  

 r

 r  

m 

 r  

 

 r

m 

 r  

 r

 r  

m 

 r

 r

m     

 r
 a 

 
 b 

figure    ne originated deviation jobs load   improvement ratio
r 

contrast ne originated deviations  lpt originated deviations able
bound maximum improvement ratio small constant  proof following
claim given appendix a 
theorem     let lpt schedule three machines  holds irmax  s      

   

fiapproximate strong equilibrium

  

 m   

mm

m 

 m  

  

 m   

m 

m 

 m  

 

 m  

 m  

 

 m  



 m  


mm

 



 

    m   

m          

 a 

m m

 b 

figure    lpt originated deviation machines job load     assigned
m  improvement ratio arbitrarily close  

 
m 

bound tight  demonstrated figure        where im 
provement ratio  
        moreover  figure shows lower bound
generalized    note coalitional deviation example obeys
flower structure  believe example tight  flower structure seems
enable largest possible decrease load single machine  job load    
remains m  improves cost  m     m        is  job  j 
 
ir j     m  
m           formally 
theorem        exists lpt configuration ir max  s   
 
 
arbitrarily small     

   maximum damage ratio
section  provide results maximum damage profitable deviation
impose jobs take part coalition  formally  quality configuration measured maxj  dr j   provide complete analysis ne lpt
configurations    again  find lpt provides strictly better
performance guarantee compared general ne  cost job lpt schedule
cannot increase factor    larger  increase factor arbitrarily close
  ne schedules 
theorem     m  dr max  s      every ne configuration s 
proof  let s     s      profitable deviation  let m  loaded machine
among machines either job migrated job migrated into  observation      must job migrated m    implies must
least two jobs m  s  since single job  could benefit
deviation  therefore  exists job j sj   m  pj l      using fact
ne again  get machine       li l      otherwise job j
improve unilaterally migrating mi   
addition  every machine job migrates  must hold l i   l   
job migrated mi left machine j load lj l    combining

   

fifeldman   tamir

bounds  get every job j stays machine job
 
migrates holds drs s  j    l i  li   l   li   li   li     

analysis tight shown figure    damage ratio jobs load
 r     r      r   arbitrarily close    formally 
theorem        exists ne configuration dr max  s   
  arbitrarily small     
lpt configurations obtain smaller bound 
theorem     m  dr max  s   

 
 

every lpt configuration s 

proof  let s     s      profitable deviation  let m  loaded machine
among machines either job migrated job migrated into  since every
lpt configuration ne  m  must least two jobs  following arguments
proof theorem       assume w l o g lightest  also last  job assigned
m  load    denote job   job  assumption valid
minimum improvement ratio invariant linear transformations  let     l     since
lpt configuration  every machine i  must hold li    otherwise    job
would assigned different machine   addition  since every machine j
job migrates  lj l    must hold every machine job
migrates l i          distinguish two cases 
 
case  a        then  every machine mi job migrates  l i  li      
    
case  b          show profitable deviation exists case        
m  exactly   jobs  loads      since lpt assigns jobs non increasing order 
lpt  every machine must  i  one job load least    and possibly
small jobs    ii  two jobs load least    and possible small jobs   let k k  
number machines type  i   ii   respectively  excluding m     thus 
total k     jobs load    k       jobs load    deviation  machine
jobs load     together  three jobs load    k     machines
assigned k     jobs load   deviation cannot assigned job
load x  so  end  k       jobs load   assigned k   machines 
thus  must machine least three jobs load    contradiction 

m 

   

  

   

m 

   

 

m 

   

  

   

m 

   

   

m 

   

 

   

m 

  

 

 a 

  

 

   
   
   

 b 

figure    lpt originated deviation  damage ratio job load       m 
arbitrarily close     

analysis tight shown figure    moreover  adding dummy machines
jobs extended    formally 
   

fiapproximate strong equilibrium

theorem        exists lpt configuration dr max  s   
 
  arbitrarily small     

   approximation scheme
section present polynomial time approximation scheme provides       se  ptas applied fixed number machines 
definition     vector  l    l          lm   smaller  l    l          lm   lexicographically
i  li   li b   i  lb   lb   configuration lexicographically smaller
vector machine loads l s     l   s           lm  s    sorted non increasing order 
smaller lexicographically l s   sorted non increasing order 
ptas combines lexicographically minimal assignment longest k jobs
lpt rule applied remaining jobs  value k depends desired approximation ratio  to defined later  
formally  algorithm ak defined follows 
   find lexicographically minimal assignment longest k jobs 
   add remaining jobs greedily using lpt rule 
particular  since lexicographically minimal assignment minimizes makespan
 given load loaded machine   algorithm ptas
minimum makespan problem  restriction known ptas graham        
grahams algorithm  step    first k jobs scheduled way minimizes
makespan  scheme  requirement schedule long jobs strict 
particular  shown andelman et al          schedule longest k jobs
se sub instance 

given   let denote algorithm k  
  first show
subset machines   provides        approximation makespan
subset jobs scheduled   formally 
lemma     let   hn  instance job scheduling machines jobs
n   let output i  given   let n n set jobs
scheduled s  consider instance   hn   i  let assignment

induced s         approximation makespan i 

proof  let la
max  m   denote largest completion time machine set
schedule produced   let op  i  denote minimum makespan i  let
denote largest completion time long job n scheduled minimal
lexicographic schedule found step    since minimal lexicographic assignment 

minimum makespan long jobs n   particular  lower bound op  i  


thus  makespan increased second step  is  lmax  m      
otherwise  makespan larger   let j job
optimal i 
determining makespan  the job completes last n    definition lpt 
implies machines busy job j started execution  otherwise

   

fifeldman   tamir

job j could start earlier   since optimal schedule step   intended idles 

holds machines busy time interval     la
max  m   pj  
pn
let p  
j   pj total processing time n jobs n   above 


p m lmax  m   pj    also  since jobs sorted non increasing order processing

times  pj pk   therefore p m la
max  m   pk      lower bound

optimal solution schedule load machines balanced 


p  m  implies la
thus op  i 
max  m   op  i    pk    



order bound lmax  m   terms op  i   need bound pk   terms
first bound gap op  i  op  i  
following assumption
op  i  
used 
claim     let z job determining makespan  i   w l o g   z one
k long jobs 
proof  assume makespan  i  determined one long jobs  let m 
machine z scheduled  particular  m  processes long jobs  fix
schedule m  repeat ptas remaining jobs machines
value k  repeat necessary makespan determined job assigned using
lpt rule 
note algorithm still polynomial  ptas might repeated
  times  constant  approximation ratio improving subinstance  number jobs considered long  among set fewer jobs  is 
larger portion jobs scheduled optimally  therefore approximation ratio proof
valid sub instance  finally  merging last ptas result schedule
machines holding long jobs only  get ptas whole instance  since long
jobs scheduled optimally step  moreover  load machine
lower bound makespan sub instance considered machine
gets jobs 

  pk    
claim     op  i  op  i 
proof  let z job determining makespan  i   claim      z assumed

assigned step    by lpt rule   z n  i    la
max  m    else  load
machine least  i  pz   since otherwise job z assigned
one machines   therefore  even total load n balanced among
 i  pz   since pz pk     op  i   i   get
  op  i 
  pk    
op  i   i  op  i 


claim     pk   op  i 


k  

proof  consider k     longest jobs  optimal schedule  machine assigned
least d k      me     bk mc jobs  since jobs processing
time least pk     conclude op  i       bk mc pk     implies

   

fiapproximate strong equilibrium

 
pk   op  i       bk mc   claim      pk  
mop
 i       bk mc   op  i    

pk          bk mc   follows pk   op  i 

k  







back
lmax  i   conclude lmax  i  op  i    pk  
mbound


    
op  i      k     op  i   

prove main result section  showing schedule produced
         se  stability proved following theorem  running
time  fixed m  k  minimal lexicographic schedule first k jobs found
o mk   steps  applying lpt rule takes additional o nlogn     get
running time scheme o mm     is  exponential  that assumed
constant     

theorem     produces        se 
proof  proof similar proof lemma      assume contradiction
exists instance machines  schedule produced
  exists coalition improvement ratio every member larger
      let coalition minimum size  every machine job
j migrates  must exists job migrating it  otherwise     j  coalition
ir min         contradiction minimality   let denote set
machines part coalition  let n n set jobs assigned  
let    m    consider instance   hn   i  schedule s  lemma
coalition exists s 
            approximation makespan i 
machines take part it  moreover  jobs improves factor
        words  pair machines i  j  pi j     
li  l j         hand  since        approximation  machine i 

 i 
therefore  pi j           l i     op
  words 
li       op  i  
 
lj

lj


machine j receives least one job 
  op  i  
however  since least one job migrated participating machines 
deviation machines assigned jobs n load
contradiction 
less op  i  

note    schedule produced algorithm ne  similar
stability proof lpt  fotakis et al          easy verify job
benefit leaving machine mi shortest job machine
benefit migration  however  independent whether short job  length
pj   assigned step   algorithm  as part minimal lexicographical schedule
long job  step    by lpt   gap li load machine
pj  
l j

   computational complexity
easy see one determine polynomial time whether given configuration
ne  yet  se  task involved  section  provide hardness
results coalitional deviations 
theorem     given ne schedule   identical machines  np hard determine se 
   

fifeldman   tamir

m 

b  

b  

 b  

m 

b  

jobs a 

 b  

m 

b  

b  

 b  

m 

b  

jobs a 

 b  

 b

m 

b  

 b  

m 

jobs

b  
 b 

 a 

figure    partition induces coalition schedule identical machines 

proof  give reduction partition  given set n integers a           
total size  b  question whether subset total size b  construct
schedule figure   a   schedule three machines n     jobs loads
a              b    b    b    b    assume w l o g  mini ai    else whole
instance scaled  thus  schedule   a  ne     add   machines
single job load  b 
claim     ne schedule figure   a  se partition 
proof  partition k    k    total size b  schedule
figure   b  better jobs originated partition instance two
 b    jobs  partition jobs improved cost  b cost  b     b   jobs improved  b    b   
next  show partition initial schedule se  theorem      action coalition three machines  jobs must migrate m 
m  m    order decrease load  b    set jobs migrating m 
must set two jobs load b    also  must partition jobs move
away m    otherwise  total load m  least  b          b   
improvement  b    jobs  implies jobs m  split
m  m    however  since partition  one two subsets total load
least b      jobs join job load b   get total load least  b 
improvement  b load initial schedule 

establishes proof theorem 

direct corollary proof following 
corollary     given ne schedule coalition  np hard determine whether
coalition deviate 
theorem     holds   identical machines     configuration
ne se  andelman et al          therefore possible determine
whether given configuration se polynomial time  yet  following theorem shows
case unrelated machines  problem np hard already     
unrelated machines environment  processing time job depends machine
assigned  every job j machine i  pi j denotes processing time job
j processed machine i 
theorem     given ne schedule   unrelated machines  np hard
determine se 
   

fiapproximate strong equilibrium

proof  give reduction partition  given n integers a            total size
 b  question whether subset total size b  construct following
instance scheduling    machines n     jobs following loads  for
     n     
pi     ai   pi      ai                 n    pn       b  pn        b   n 
consider schedule jobs            n m    job n     m   
completion times machines  b   n  ne 

m 

jn  

 b n

m 

m 

j   jn

 b n

m 

 a 

 b  a  

jobs a 
jobs a 

jn  

 b  a  

 b 

figure    partition induces coalition schedule related machines 

claim     ne schedule figure   a  se partition 
proof  partition a    a    total size b  schedule given
figure   b  better everyone  completion time m   b    a       b   n
completion time m   b    a       b   n 
next  show partition initial schedule se  since
partition  partition a    a    one two subsets  w l o g   a  total
size least b      a  increase load migrating m  even alone  bearing
load least  b        a    instead  b   n   therefore  a  leave m   
however  a  stays m    job n     better off staying m   since migrates 
bears load least  b        a    smaller  b   n  a   
   n     

establishes proof theorem 

direct corollary proof following 
corollary     given ne schedule unrelated machines coalition  np hard
determine whether coalition deviate 

   conclusions open problems
paper study well ne schedules special subset obtained
outcome lpt assignment rule approximate se job scheduling games 
using two measures ir min ir max   addition  use dr max measure
study hurtful coalitional deviations agents outside coalition  present
upper lower bounds ne lpt based schedules  demonstrate lptbased schedules perform better general ne schedules  gap significant
ir max measure  ne lpt  ir min bounded small constant 
   

fifeldman   tamir

implying notion stability coalitional deviations  assuming existence
transition cost   ir max   bounded constant lpt schedules 
universal bound ne schedules  yet  lpt best possible approximation
se  demonstrated se ptas design  computes schedule ir min
arbitrarily close   
problems remain open are 
   ir min measure  gap upper lower bounds        
 
   ir max lpt originated deviations    presented lower bound  
 
matching upper bound        closing gap general left
open problem 
   paper focuses case identical machines  would interesting study
topic approximate strong equilibrium additional job scheduling settings  particular 
setting uniformly related machines part ongoing research  already
case two machines seems rather involved  note that  mentioned section   
unrelated machines  ir min unbounded already two machines 
   measures defined respect strong equilibrium solution concept 
profitable deviation defined one every member coalition strictly
benefits  would interesting consider measures introduce respect
additional solution concepts  coalition proof nash equilibrium  bernheim et al  
       which stable profitable deviations stable
deviations sub coalitions   respect profitable deviations none
coalition members worse off least one member strictly better off 
summary  introduced three general measures stability performance
schedules coalitional deviations  believe measures used
measure stability performance various algorithms coalitional deviations
performance additional settings games  hope see work
makes use measures within framework algorithmic game theory  would
interesting study families games nash equilibria approximate strong equilibria
defined measures introduced here 
acknowledgments  thank leah epstein alon rosen helpful discussions 
thank anonymous reviewers insightful remarks suggestions  work
partially supported israel science foundation  grant number          

appendix a  bounding ir min ir max lpt originated deviations
first provide several observation valid lpt originated deviation 
observations used later analysis  moreover  observations characterize
coalitions might exist schedules produced lpt rule  combined
flower structure  that characterizes ne originated deviations three machines  
get set lpt originated deviation limited must follow strict
structure 
let m  loaded machine  assume w l o g lightest  also last  job
assigned m  load    denote job   job  assumption valid
   paper provides tight bounds     case     considered chen        

   

fiapproximate strong equilibrium

minimum improvement ratio invariant linear transformations          denote
ki set  and total load  jobs remain mi   denote hi j set
 and total load  jobs migrating mi mj        let k    h      h   
above  excluding   job 
next propositions show total size jobs migrating m    m  m 
remaining m    m  least large last job m   
proposition a   h      h    least   
proof  show h       proof h    analogous  assume contradiction
h         since lpt schedule jobs non increasing order  jobs composing
h    assigned   job  therefore    job assigned  load m 
k  least h      h      k   else  lpt would assign   job m     thus 
k  h      h      k    flower structure  job migrating m  m   
migration beneficial l     l    distinguish two cases 
     job migrates m    case  l     k    h         therefore  k   
h          h      h      k       k    h      k    however  above 
k  h      h      k  h      k    contradiction 
     job migrate m    case  l     k    h      therefore  k   
h      h      h      k       k    h      k       however  above 
k  h      h      k      h      k    contradiction  last inequality follows
fact h    empty consists least one job least big
smallest job m   

proposition a   k    k  least   
proof  first show k     assume k       means   job assigned
m    load m  composed jobs subset h    only  therefore 
lpt rule  h    k    h      h      however  proposition      l     l    therefore
h      h         thus  k    h         however  h       contradiction  show
k     note k      similar argument h    h      h     
proposition      l     l    therefore h      h      implying k    h         contradiction 



theorem     lpt configuration three machines                   se 
proof  let m  loaded machine schedule  recall lightest  also
last  job assigned m    job load    let     l     give lpt schedule
deviation s     s       let r   ir min  s  s    
claim      obeys flower structure  therefore 
 i  r l   l      ii  r
p
 
 
 
l   l     iii  r l   l     iv  r l   l    let p   j pj   clearly  p   l    l    l   
l     l     l     summing  i   ii   get
l  

l    l 
p        
 
 
 r
 r
   

   

fifeldman   tamir

lpt  l    l     thus p         summing  iii   iv   using equation    
get
r

 l 
        
        
 

 
 
 
  l 
p l 
p     r
  

l  

implying 
r        

   
 r



        
 
            r
  

   
 r

 

            
 
      
 
 

and 
r

      
 
      

   

case         case  equation     implies r     
case           case requires closer analysis  let instance lpt
creates schedule deviation s     s      achieving maximal ir min       
        denote hi total load jobs migrating mi m    ki
total load jobs remain mi   flower structure  l   h    h    therefore
h    k  h    k    else would beneficial jobs composing h    h 
join coalition  propositions a   a    h    h    k    k  least   
claim a   load   m  incurred exactly two jobs 
proof  clearly  since consider case       lightest job m  load   
load   incurred two jobs  assume contradiction   consists single
job  then  exactly two jobs m    loads      flower structure 
  job must join coalition  w l o g assume migrates m    migration profitable
k       contradicting proposition a   

therefore  assume w l o g instance achieving maximal ir min   m 
assigned three jobs loads                    
            bound equation     implies
r

          
      
 
 
      
          

   

consider first case one two big jobs m  migrate away
m    show coalition deviation beneficial case  w l o g  assume
job length     remains m  job length     migrates m   
migration     profitable k          hand  migration
jobs migrating m  m  profitable k    h             
contradiction 
consider next case   job migrate away m    w l o g 
assume job length     migrates m  job length     migrates
m    order bound r according equation      find lower bound       
equation     
 r

l    l 
k    h    k    h 
k    k     
   
 


 
 
l 
    h    h 
 
 
   

   

fiapproximate strong equilibrium

third inequality due fact ratio decreasing h    h   
known least   proposition a    last inequality since migrations
beneficial jobs leaving m    is  k          k         
equation     implies  r              r    next  apply bound
  equation     obtain
r 

  r   
 
  r   



 
 
implies r     
           
case analyze yet one three jobs assigned m  migrate
away m  deviation  assume w l o g jobs size      migrating
m  job size     migrating m    clearly  jobs size          
migrate machine currently assigned additional load
  k  k  least    proposition a    figure   shows schedule
migration  figure   a   migration  figure   b   

m 

k 

h 

m 

k 

h 

m 

  

  

l

 

k  h 

m 

k  h 

m 

k 

  

    

m 

h 

h 

k 

  

k    
 

k    
h  h  

 b 

 a 

figure    lpt coalition achieving maximal ir min  
next  find lower bound     considering migration m  m   
know r                 k     therefore    r   r   k  r  
 r   rk     because     considering migration m  m    know
r  k    h     h    h     therefore  k  h   r      h  r  lpt assigns   job
m  load         load m  time k    h   
therefore       k    h    implying h        k    also  proposition a   
h     use bounds h    h  get improved bound k    specifically 
k         k    r      r  implies k  r  r   r                   back
bound        r    r   r                     thus 
    r       r   note    r  positive since theorem      r       
finally  apply bound   equation     obtain
r

     r
       r       r 
 
 
       r       r 
     r



implies r          

bound tight  specifically 

theorem        exists lpt schedule ir min  s             

 
 
 
 
    consider figure   
r     
  h        k    k     
r


    
  
   

proof  let r  

substitute  

k   

    h       the instance

   

    

fifeldman   tamir

rounded values appears figure     easy verify three jobs leaving m 
improvement ratio exactly r             holds two jobs migrating


m    thus  instance ir min             moreover  lower bound easily
extended     adding dummy jobs machines  thus 
m 

     

 

     

m 

m 

     

     

     

m 

     

m 

     

 

     

m 

     

 

     
 

     

     

 

     

 

     

 b 

 a 

figure    lpt originated
deviation three machines migrating jobs im
 
 
prove        


theorem     let lpt schedule three machines  holds ir max  s      
proof  let m  loaded machine  recall lightest  also last  job assigned
m    job load            ki set  and total load  jobs
remain mi   hi j set  and total load  jobs migrating mi
mj        let k    h      h    above  excluding   job 
  job assigned m  lpt  meaning load m  m  least
k    h      h    time  since load m    m  could increase time
  job assigned  get
k    h      h    k    h   



k    h      h    k    h     

   

therefore  sum two  
  k    h      h      k    k    h      h     

   

distinguish two cases 
 i    job remains m    case  l    k    h      h         l   
k   h      l    k   h      coalition active l     k   h     h        l    
k    h      l     k    h     
since jobs h    h    part coalition  l     l      l    deducing
h    h    sides get k    k    h      h       k       combining
equation    get 
h      h      h      h        
   
proposition a    h      h      k    k  least    proposition     
improvement ratio   job  equals l   l     largest among coalition 
ratio bounded follows 
k    h      h       
k    h      h       
l 
 
 
 
 
 
l 
k    h      h       
k    h      h       
 
   

fiapproximate strong equilibrium

left inequality follows equation    right one follow proposition a  
fact k  might empty 
 ii    job leaves m    assume w l o g   job moves m   
case  l    k    h      h         l    k    h      l    k    h      coalition
active l     k    h      h      l     k    h         l     k    h     
since jobs h    h    part coalition  l     l      l    deducing
   h    h    sides get k    k    h      h       k       combining
equation    get 
h      h      h      h        
   
propositions a   a    h      h      k    k  least    k  empty
jobs k  improvement ratio l   l   is  proposition      largest
ratio among coalition  ratio bounded follows 
k    h      h       
k    h      h       
l 
 
 

   
 
l 
k    h      h   
k    h      h   
 
left inequality follows equation    right one follows proposition a   
fact k  empty includes least one job load least   
k  empty  show below  maximal improvement ratio less     
bound separately improvement ratio h      h      hi    i          denote
ri j ir jobs moving mi mj   addition equations     
propositions a   a    use proposition      specifically  h      h       
h      h      finally  bear mind k     
r     

h      h       
k    h       
k    h       
 
l 
 

 
   
 
l 
k    h       
k    h       
k    h   
 

r     

h      h       
k    h       
k    h       
 
l 
 

 
   
 
l 
k    h   
k    h   
k    h   
 

ri    

ki   hi  
h      h   
h      h       
li
 
 
 
 
   
 
l 
h      h   
h      h   
h      h   
 


appendix b  list scheduling
list scheduling  ls  greedy scheduling algorithms jobs assigned
machines arbitrary order  similar lpt  job assigned least loaded
 
machine time assignment  ls known provide   
  approximation
minimum makespan  graham         ls depart qualitatively
lpt respect makespan approximation  i e   provide constant approximation
optimal makespan   qualitatively different respect game theoretic
properties  first  ls necessarily produce ne  moreover  next show  ls
performs poorly respect measures introduced paper 
improvement ratio job bounded even coalition consists single
job  consider example instance   machines jobs lengths       x  in
   

fifeldman   tamir

order  x      ls produce schedule loads        x  job length
  scheduled long job migrate join short job  improvement
ratio     x   arbitrarily large 
damage ratio deviation ls schedule bounded either  consider
instance three machines jobs lengths                 x         easy
verify resulting ls configuration  exists coalition job
length x migrates  since x arbitrarily large  damage ratio job
machine x migrates arbitrarily large  note damage ratio caused
deviation single job    see this  consider ls configuration
assume job j length pj migrates m  m    denote bj   aj total
load jobs m  assigned j respectively  aj      j last 
beneficial j migrate  bj   l    else j assigned
m     else  first job j assigned m  bj   pj less load
time m    therefore l  bj   pj   particular pj l    damage
ratio  l    pj   l     analysis tight exemplified instance
              x  

references
a  fiat  h  kaplan  m  l     olonetsky   s          strong price anarchy machine
load balancing  international colloquium automata  languages programming icalp  
albers  s          value coordination network design  siam j  comput         
         
albers  s   elits  s   even dar  e   mansour  y     roditty  l          nash equilibria
network creation game  annual acm siam symposium discrete algorithms
 soda  
andelman  n   feldman  m     mansour  y          strong price anarchy  soda   
anshelevich  e   dasgupta  a   kleinberg  j  m   tardos  e   wexler  t     roughgarden  t 
        price stability network design fair cost allocation   focs 
pp         
anshelevich  e   dasgupta  a   tardos  e   wexler  t     roughgarden  t          nearoptimal network design selfish agents  acm symposium theory computing  stoc  
aumann  r          acceptable points general cooperative n person games  contributions theory games  vol    
awerbuch  b   azar  y   richter  y     tsur  d          tradeoffs worst case equilibria 
 st international workshop approximation online algorithms 
bernheim  d  b   peleg  b     whinston  m  d          coalition proof nash equilibria 
concepts  journal economic theory          
chen  b          equilibria load balancing games  acta mathematica applicata sinica 
appear 
   

fiapproximate strong equilibrium

christodoulou  g   koutsoupias  e     nanavati  a          coordination mechanisms  j 
daz  j  karhumaki  a  lepisto  d  sannella  eds    automata  languages
pro  gramming  volume      lecture notes computer science  berlin  springer 
pp         
christodoulou  g     koutsoupias  e          price anarchy stability
correlated equilibria linear congestion games  annual european symposium
algorithms  esa  
czumaj  a     vocking  b          tight bounds worst case equilibria  acm siam
symposium discrete algorithms  soda   pp         
epstein  a   feldman  m     mansour  y          strong equilibrium cost sharing
connection games  acm conference electronic commerce  acmec  
fabrikant  a   luthra  a   maneva  e   papadimitriou  c     shenker  s         
network creation game  acm symposium principles distriubted computing
 podc  
finn  g     horowitz  e          linear time approximation algorithm multiprocessor
scheduling  bit numerical mathematics                 
fotakis  d   s  kontogiannis  m  m     spiraklis  p          structure complexity nash equilibria selfish routing game  international colloquium
automata  languages programming  icalp   pp         
graham  r          bounds certain multiprocessing anomalies  bell systems technical
journal               
graham  r          bounds multiprocessing timing anomalies  siam j  appl  math  
           
halpern  j  y     teague  v          rational secret sharing multiparty computation 
acm symposium theory computing  stoc   pp         
holzman  r     law yone  n          strong equilibrium congestion games  games
economic behavior            
holzman  r     law yone  n          network structure strong equilibrium route
selection games  mathematical social sciences             
koutsoupias  e     papadimitriou  c  h          worst case equilibria   symposium
theoretical aspects computer science  stacs   pp         
lamport  l   shostak  r     pease  m          byzantine generals problem  acm
trans  prog  lang  sys             
leonardi  s     sankowski  p          network formation games local coalitions 
acm symposium principles distriubted computing  podc  
milchtaich  i          crowding games sequentially solvable  international journal
game theory             
papadimitriou  c  h          algorithms  games  internet  acm symposium
theory computing  stoc   pp         

   

fifeldman   tamir

procaccia  a  d     rosenschein  j  s          communication complexity coalition
formation among autonomous agents  int  conference autonomous agents
multiagent systems  aamas   pp         
roughgarden  t     tardos  e          bad selfish routing   journal acm 
                
rozenfeld  o     tennenholtz  m          strong correlated strong equilibria monotone congestion games  workshop internet network economics  wine  
schuurman  p     vredeveld  t          performance guarantees local search
multiproces  sor scheduling  informs journal computing               

   


