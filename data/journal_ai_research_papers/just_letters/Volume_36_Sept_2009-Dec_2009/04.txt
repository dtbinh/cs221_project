journal of artificial intelligence research                  

submitted        published      

relaxed survey propagation for
the weighted maximum satisfiability problem
hai leong chieu

chaileon dso org sg

dso national laboratories 
   science park drive  singapore       

wee sun lee

leews comp nus edu sg

department of computer science  school of computing 
national university of singapore  singapore       

abstract
the survey propagation  sp  algorithm has been shown to work well on large instances
of the random   sat problem near its phase transition  it was shown that sp estimates
marginals over covers that represent clusters of solutions  the sp y algorithm generalizes
sp to work on the maximum satisfiability  max sat  problem  but the cover interpretation
of sp does not generalize to sp y  in this paper  we formulate the relaxed survey propagation  rsp  algorithm  which extends the sp algorithm to apply to the weighted max sat
problem  we show that rsp has an interpretation of estimating marginals over covers
violating a set of clauses with minimal weight  this naturally generalizes the cover interpretation of sp  empirically  we show that rsp outperforms sp y and other state of the art
max sat solvers on random max sat instances  rsp also outperforms state of the art
weighted max sat solvers on random weighted max sat instances 

   introduction
the   sat problem is the archetypical np complete problem  and the difficulty of solving
random   sat instances has been shown to be related to the clause to variable ratio 
   m n   where m is the number of clauses and n the number of variables  a phase
transition occurs at the critical value of c         random   sat instances with    c
are generally satisfiable  while instances with    c are not  instances close to the phase
transition are generally hard to solve using local search algorithms  mezard   zecchina 
      braunstein  mezard    zecchina        
the survey propagation  sp  algorithm was invented in the statistical physics community using approaches used for analyzing phase transitions in spin glasses  mezard  
zecchina         the sp algorithm has surprised computer scientists by its ability to solve
efficiently extremely large and difficult boolean satisfiability  sat  instances in the phase
transition region  the algorithm has also been extended to the sp y algorithm to handle
the maximum satisfiability  max sat  problem  battaglia  kolar    zecchina        
progress has been made in understanding why the sp algorithm works well  braunstein
and zecchina        first showed that sp can be viewed as the belief propagation  bp 
algorithm  pearl        on a related factor graph where only clusters of solutions represented
by covers have non zero probability  it is not known whether a similar interpretation can be
given to the sp y algorithm  in this paper  we extend the sp algorithm to handle weighted
c
    
ai access foundation  all rights reserved 

fichieu   lee

max sat instances in a way that preserves the cover interpretation  and we call this new
algorithm the relaxed survey propagation  rsp  algorithm  empirically  we show that
rsp outperforms sp y and other state of the art solvers on random max sat instances 
it also outperforms state of the art solvers on a few benchmark max sat instances  on
random weighted max sat instances  it outperforms state of the art weighted max sat
solvers 
the rest of this paper is organized as follows  in section    we describe the background
literature and mathematical notations necessary for understanding this paper  this includes
a brief review of the definition of joint probability distributions over factor graphs  an
introduction to the sat  max sat and the weighted max sat problem  and how they can
be formulated as inference problems over a probability distribution on a factor graph  in
section    we give a review of the bp algorithm  pearl         which plays a central role in
this paper  in section    we give a description of the sp  braunstein et al         and the
sp y  battaglia et al         algorithm  explaining them as warning propagation algorithms 
in section    we define a joint distribution over an extended factor graph given a weighted
max sat instance  this factor graph generalizes the factor graph defined by maneva 
mossel and wainwright        and by chieu and lee         we show that  for solving
sat instances  running the bp algorithm on this factor graph is equivalent to running
the sp algorithm derived by braunstein  mezard and zecchina         for the weighted
max sat problem  this gives rise to a new algorithm that we call the relaxed survey
propagation  rsp  algorithm  in section    we show empirically that rsp outperforms
other algorithms for solving hard max sat and weighted max sat instances 

   background
while sp was first derived from principles in statistical physics  it can be understood as
a bp algorithm  estimating marginals for a joint distribution defined over a factor graph 
in this section  we will provide background material on joint distributions defined over
factor graphs  we will then define the boolean satisfiability  sat  problem  the maximum
satisfiability  max sat  problem  and the weighted maximum satisfiability  weighted maxsat  problem  and show that these problems can be solved by solving an inference problem
over joint distributions defined on factor graphs  a review of the definition and derivation of
the bp algorithm will then follow in the next section  before we describe the sp algorithm
in section   
    notations
first  we will define notations and concepts that are relevant to the inference problems over
factor graphs  factor graphs provide a framework for reasoning and manipulating the joint
distribution over a set of variables  in general  variables could be continuous in nature  but
in this paper  we limit ourselves to discrete random variables 
in this paper  we denote random variables using large roman letters  e g   x  y   the
random variables are always discrete in this paper  taking values in a finite domain  usually 
we are interested in vectors of random variables  for which we will write the letters in bold
face  e g   x  y  we will often index random variables by the letters i  j  k     and write 
for example  x    xi  iv   where v is a finite set  for a subset w  v   we will denote
   

firelaxed survey propagation for the weighted max sat problem


x 

 
x 

  
x 

x 

figure    a simple factor graph for p x      x    x       x    x        x    x    
xw    xi  iw   we call an assignment of values to the variables in x a configuration 
and will denote it in small bold letters  e g  x  we will often write x to represent an event
x   x and  for a probability distribution p  write p x  to mean p x   x   similarly  we
will write x to denote the event x   x  and write p x  to denote p x   x  
a recurring theme in this paper will be on defining message passing algorithms for joint
distributions on factor graphs  kschischang  frey    loeliger         in a joint distribution
defined as a product of local functions  functions defined on a small subset of variables  
we will refer to the local functions as factors  we will index factors  e g     with greek
letters  e g       avoiding  which is used as the symbol for clause to variable ratio in sat
instances   for each factor    we denote v     v as the subset of variables on which
 is defined  i e   is a function defined on the variables xv      in message passing
algorithms  messages are vectors of real numbers that are sent from factors to variables or
vice versa  a vector message sent from a variable xi to a factor  will be denoted as
mi   and a message from  to xi will be denoted as mi  
    joint distributions and factor graphs
given a large set of discrete  random variables x    xi  iv   we are interested in the joint
probability distribution p x  over these variables  when the set v is large  it is often of
interest to assume a simple decomposition  so that we can draw conclusions efficiently from
the distribution  in this paper  we are interested in the joint probability distribution that
can be decomposed as follows
p x   x   

  y
  xv     
z f

   

where the set f indexes a set of functions    f   each function  is defined on a
subset of variables xv    of the set x  and maps configurations xv    into non negative
real numbers  assuming that each function  is defined on a small subset of variables
xv      we hope to do efficient inference with this distribution  despite the large number
of variables in x  the constant z is a normalization constant  which ensures that the
distribution sums to one over all configurations x of x 
a factor graph  kschischang et al         provides a useful graphical representation
illustrating the dependencies defined in the joint probability distribution in equation    a
factor graph g     v  f    e   is a bipartite graph with two sets of nodes  the set of variable
nodes  v   and the set of factor nodes  f   the set of edges e in the factor graph connects
variable nodes to factor nodes  hence the bipartite nature of the graph  for a factor graph
representing the joint distribution in equation    an edge e      i  is in e if and only if
   

fichieu   lee

the variable xi is a parameter of the factor   i e  i  v      we will denote v  i  as the
set of factors depending on the variable xi   i e 
v  i       f   i  v    

   

we show a simple example of a factor graph in figure    in this small example  we have for
example  v             and v                 the factor graph representation is useful for
illustrating inference algorithms on joint distributions in the form of equation    kschischang et al          in section    we will describe the bp algorithm by using the factor
graph representation 
equation   defines the joint distribution as a product of local factors  it is often useful
to represent the distribution in the following exponential form 
p x    exp  

x

  xv        

   

f

the above equation is a reparameterization of equation    with   xv        exp   xv      
and    ln z  in statistical physics  the exponential form is often written as follows 
p x   

 
 
exp 
e x   
z
kb t

   

where e x  is the hamiltonian or energy function  kb is the boltzmanns constant  and t
is the temperature  for simplicity  we set kb t      and equations   and   are equivalent
p
with e x     f   xv      
bayesian  belief  networks and markov random fields are two other graphical representations often used to describe multi dimensional probability distributions  factor graphs
are closely related to both bayesian networks and markov random fields  and algorithms
operating on factor graphs are often directly applicable to bayesian networks and markov
random fields  we refer the reader to the work of kschischang et al         for a comparison
between factor graphs  bayesian networks and markov random fields 
    inference on joint distributions
in the literature  inference on a joint distribution can refer to solving one of two problems 
we define the two problems as follows 
problem    map problem   given a joint distribution  p x   we are interested in the configuration s  with the highest probability  such configurations  x   are called the maximuma posteriori configurations  or map configurations
x   arg max p x 
x

   

from the joint distribution in equation    the map configuration minimizes the energy
function e x   and hence the map problem is sometimes called the energy minimization
problem 

   

firelaxed survey propagation for the weighted max sat problem

problem    marginal problem   given a joint distribution  p x   of central interest are
the calculation or estimation of probabilities of events involving a single variable xi   xi  
we refer to such probabilities as marginal probabilities 
x

pi  xi    

p x  

   

x xi

p

the notation x xi means summing over all configurations of x with the variable xi set
to xi   marginals are important as they represent the underlying distribution of individual
variables 
in general  both problems are not solvable in reasonable time by currently known methods  naive calculation of pi  xi   involves summing the probabilities of all configurations for
the variables x for which xi   xi   for example  in a factor graph with n variables of
cardinality q  finding the marginal of one of the variables will involve summing over q n 
configurations  furthermore  np complete problems such as   sat can be simply coded
as factor graphs  see section         as such  the map problem is in general np complete 
while the marginal problem is equivalent to model counting for   sat  and is  p complete
 cooper         hence  in general  we do not expect to solve the inference problems  exactly  in reasonable time  unless the problems are very small  or have special structures
that can be exploited for efficient inference 
of central interest in this paper is a particular approximate inference method known
as the  sum product  belief propagation  bp  algorithm  we defer the discussion of the
bp algorithm to the next section  in the rest of this section  we will describe the sat 
max sat and weighted max sat problems  and how they can be simply formulated as
inference problems on a joint distribution over a factor graph 
    the sat and max sat problem
a variable is boolean if it takes values in  false  true   in this paper  we will follow
conventions in statistical physics  where boolean variables take values in          with  
corresponding to false  and    corresponding to true 
the boolean satisfiability  sat  problem is given as a boolean propositional formula
written with the operators and  conjunction   or  disjunction   not  negation   and
parenthesis  the objective of the sat problem is to decide whether there exists a configuration such that the propositional formula is satisfied  evaluates to true   the sat
problem is the first problem shown to be np complete in stephen cooks seminal paper in
      cook        levin        
the three operators in boolean algebra are defined as follows  given two propositional
formulas a and b  or a  b  is true if either a or b is true  and a  b  is true only if both
a and b are true  and not a  is true if a is false  in the rest of the paper  we will use the
standard notations in boolean algebra for the boolean operators  a  b means or a  b  
a  b means and a  b   and a means not a   the parenthesis is available to allow
nested application of the operators  e g   a  b    b  c  
the conjunctive normal form  cnf  is often used as a standard form for writing boolean
formulas  the cnf consists of a conjunction of disjunctions of literals  where a literal is
either a variable or its negation  for example   x   x       x    x    is in cnf  while
   

fichieu   lee

x   x  and  x   x      x   x    are not  any boolean formula can be re written in cnf
using de morgans law and the distributivity law  although in practice  this may lead to an
exponential blowup in the size of the formula  and the tseitin transformation is often used
instead  tseitin         in cnf  a boolean formula can be considered to be the conjunction
of a set of clauses  where each clause is a disjunction of literals  hence  a sat problem is
often given as  x  c   where x is the vector of the boolean variables  and c is a set of
clauses  each clause in c is satisfied by a configuration if it evaluates to true for that
configuration  otherwise  it is said to be violated by the configuration  we will use greek
letters  e g      as indices for clauses in c  and denote by v    as the set of variables in
the clause   c  the k sat problem is a sat problem for which each clause in c consists
of exactly k literals  the k sat problem is np complete  for k     cook        
the maximum satisfiability problem  max sat  problem is the optimization version of
the sat problem  where the aim is to minimize the number of violated constraints in the
formula  we define a simple working example of the max sat problem that we will use
throughout the paper 
example    define an instance of the max sat problem in cnf with the following clauses
     x  x          x  x          x  x          x  x  x          x  x  x    and    
 x   x     the boolean expression representing this problem would be
 x   x      x   x      x   x      x   x   x      x   x   x      x   x    

   

the objective of the max sat problem would be to find a configuration minimizing the
number of violated clauses 
      factor graph representation for sat instances
the sat problem in cnf can easily be represented as a joint distribution over a factor
graph  in the following definition  we give a possible definition of a joint distribution over
boolean configurations for a given sat instance  where the boolean variables take values
in         
definition    given an instance of the sat problem   x  c  in conjunctive normal form 
where x is a vector of n boolean variables  we define the energy  e x   and the distribution  p x   over configurations of the sat instance  battaglia et al        
  c  c  xv       
e x   

 
     j i xi   
 
iv   

   

x

c  xv      

   

 
exp e x   
z

    

y

c

p x   

where x         n   and j i takes values in          if j i       resp      then
 contains xi as a negative  resp  positive  literal  each clause  is satisfied if one of its
variables xi takes the value j i   when a clause  is satisfied  c  xv           otherwise
c  xv          
   

firelaxed survey propagation for the weighted max sat problem

 

 

 

x 

 

x 

 

x 

 

figure    the factor graph for the sat instance given in example    dotted  resp  solid 
lines joining a variable to a clause means the variable is a negative  resp  positive 
literal in the clause 

with the above definition  the energy function is zero for satisfying configurations  and
equals the number of violated clauses for non satisfying configuration  hence  satisfying
configurations of the sat instance are the map configurations of the factor graph 
in this section  we make some definitions that will be useful in the rest of the paper 
for a clause  containing a variable xi  associated with the value of j i    we will say that
xi satisfies  if xi   j i   in this case  the clause  is satisfied regardless of the values
taken by the other variables  conversely  we say that xi violates  if xi does not satisfy  
in this case  it is still possible that  is satisfied by other variables 
definition    for a clause   c  we define u i  resp  s i   as the value of xi         
that violates  resp  satisfies  clause   this means that s i   j i and u i    j i   we
define the following sets
v    i 
v   i 
vs  i 
vu  i 

 
 
 
 

   v  i   s i       
   v  i   s i      
   v  i        s i   s i   
   v  i        s i    s i   

    

in the above definitions  v    i   resp  v   i   is the set of clauses that contain xi as a
positive literal  resp  negative literal   vs  i   resp  vu  i   is the set of clauses containing
xi that agrees  resp  disagrees  with the clause  concerning xi   these sets will be useful
when we define the sp message passing algorithms for sat instances 
the factor graph representing the max sat instance given in example   is shown in
figure    for this example  v                       v                  vs                  and
vu                  the energy for this example is as follows 
 
 
 
e x         x       x           x       x           x       x     
 
 
 
 
 
 
     x        x        x          x       x       x          x       x        
 
 
 

   

fichieu   lee

      related work on sat
the sat problem is well studied in computer science  as the archetypical np complete
problem  it is common to reformulate other np complete problems such as graph coloring
as a sat problem  prestwich         sat solvers are either complete or incomplete  the
best known complete solver for solving the sat problem is probably the davis putnamlogemann loveland  dpll  algorithm  davis   putnam        davis  logemann    loveland         the dpll algorithm is a basic backtracking algorithm that runs by choosing a
literal  assigning a truth value to it  simplifying the formula and then recursively checking if
the simplified formula is satisfiable  if this is the case  the original formula is satisfiable  otherwise  the same recursive check is done assuming the opposite truth value  variants of the
dpll algorithm such as chaff  moskewicz   madigan         minisat  een   sorensson 
       and rsat  pipatsrisawat   darwiche        are among the best performers in recent sat competitions  berre   simon               solvers such as satz  li   anbulagan 
      and cnfs  dubois   dequen        have also been making progress in solving hard
random   sat instances 
most solvers that participated in recent sat competitions are complete solvers  while
incomplete or stochastic solvers do not show that a sat instance is unsatisfiable  they are
often able to solve larger satisfiable instances than complete solvers  incomplete solvers
usually start with a randomly initialized configuration  and different algorithms differ in
the way they flip selected variables to move towards a solution  one disadvantage of such
an approach is that in hard sat instances  a large number of variables have to be flipped to
move a current configuration out of a local minimum  which acts as a local trap  incomplete
solvers differ in the strategies used to move the configuration out of such traps  for example 
simulated annealing  kirkpatrick  jr     vecchi        allows the search to move uphill 
controlled by a temperature parameter  gsat  selman  levesque    mitchell        and
walksat  selman  kautz    cohen        are two algorithms developed in the     s that
allow randomized moves when the solution cannot be improved locally  the two algorithms
differ in the way they choose the variables to flip  gsat makes the change which minimizes
the number of unsatisfied clauses in the new configuration  while walksat selects the
variable that  when flipped  results in no previously satisfied clauses becoming unsatisfied 
variants of algorithms such as walksat and gsat use various strategies  such as tabusearch  mcallester  selman    kautz        or adapting the noise parameter that is used 
to help the search out of a local minima  hoos         another class of approaches is based
on applying discrete lagrangian methods on sat as a constrained optimization problem
 shang   wah         the lagrange mutlipliers are used as a force to lead the search out
of local traps 
the sp algorithm  braunstein et al         has been shown to beat the best incomplete
solvers in solving hard random   sat instances efficiently  sp estimates marginals on all
variables and chooses a few of them to fix to a truth value  the size of the instance is then
reduced by removing these variables  and sp is run again on the remaining instance  this
iterative process is called decimation in the sp literature  it was shown empirically that sp
rarely makes any mistakes in its decimation  and sp solves very large   sat instances that
are very hard for local search algorithms  recently  braunstein and zecchina        have
   

firelaxed survey propagation for the weighted max sat problem

shown that by modifying bp and sp updates with a reinforcement term  the effectiveness
of these algorithms as solvers can be further improved 
    the weighted max sat problem
the weighted max sat problem is a generalization of the max sat problem  where each
clause is assigned a weight  we define an instance of the weighted max sat problem as
follows 
definition    a weighted max sat instance  x  c  w  in cnf consists of x  a vector of
n variables taking values in          c  a set of clauses  and w  the set of weights for
each clause in c  we define the energy of the weighted max sat problem as
e x   

w
     j i xi   
 
c iv   
x

y

    

where x         n   and j i takes values in          and w is the weight of the clause
  the total energy  e x   of a configuration x equals the total weight of violated clauses 
similarly to sat  there are also complete and incomplete solvers for the weighted maxsat problem  complete weighted max sat solvers involve branch and bound techniques by
calculating bounds on the cost function  larrosa and heras        introduced a framework
that integrated the branch and bound techniques into a max dpll algorithm for solving
the max sat problem  incomplete solvers generally employ heuristics that are similar to
those used for sat problems  an example of an incomplete method is the min conflicts hillclimbing with random walks algorithm  minton  philips  johnston    laird         many
sat solvers such as walksat can be extended to solve weighted max sat problems  where
the weights are used as a criterion in the selection of variables to flip 
as a working example in this paper  we define the following instance of a weighted
max sat problem 
example    we define a set of weighted max sat clauses in the following table 

id
 
 
 
 
 
 

clause
weight
x   x 
 
x   x 
 
x   x 
 
x   x   x 
 
x   x   x 
 
x   x 
 
energy

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

   
 
 
 
 
 
 

   
 
 
 
 
 
 
 

this weighted max sat example has the same variables and clauses as the max sat
example given in example    in the above table  we show the clauses satisfied  a tick  or
violated  a cross  by each of the   possible configurations of the   variables  in the first
   

fichieu   lee

row  the symbol  corresponds to the value    and   corresponds to     for example  the
string       corresponds to the configuration  x    x    x                  the last row
of the table shows the energy of the configuration in each column 
the factor graph for this weighted max sat example is the same as the one for the
max sat example in example    the differences between the two examples are in the
clause weights  which are reflected in the joint distribution  but not in the factor graph 
the energy for this example is as follows 
 
 
 
e x         x       x           x       x           x       x     
 
 
 
 
 
 
     x        x        x          x       x       x          x       x       
 
 
 
    phase transitions
the sp algorithm has been shown to work well on   sat instances near its phase transition 
where instances are known to be very hard to solve  the term phase transition arises
from the physics community  to understand the notion of hardness in optimization
problems  computer scientists and physicists have been studying the relationship between
computational complexity in computer science and phase transitions in statistical physics 
in statistical physics  the phenomenon of phase transitions refers to the abrupt changes
in one or more physical properties in thermodynamic or magnetic systems with a small
change in the value of a variable such as the temperature  in computer science  it has
been observed that in random ensembles of instances such as k sat  there is a sharp
threshold where randomly generated problems undergo an abrupt change in properties  for
example  in k sat  it has been observed empirically that as the clause to variable ratio 
changes  randomly generated instances change abruptly from satisfiable to unsatisfiable at
a particular value of   often denoted as c   moreover  instances generated with a value of
 close to c are found to be extremely hard to solve 
computer scientists and physicists have worked on bounding and calculating the precise value of c where the phase transition for   sat occurs  using the cavity approach 
physicists claim that c         mezard   zecchina         while their derivation of
the value of c is non rigorous  it is based on this derivation that they formulated the sp
algorithm  using rigorous mathematical approaches  the upper bounds to the value of c
can be derived using first order methods  for example  in the work of kirousis  kranakis 
krizanc  and stamatiou         c for   sat was upper bounded by        achlioptas 
naor and peres        lower bounded the value of c using a weighted second moments
method  and their lower bound is close to the upper bounds for k sat ensembles for large
values of k  however  their lower bound for   sat is       rather far from the conjectured
value of        a better  algorithmic  lower bound of      can be obtained by analyzing
the behavior of algorithms that find sat configurations  kaporis  kirousis    lalas        
physicists have also shown rigorously using second moment methods that as  approaches c   the search space fractures dramatically  with many small solution clusters
appearing relatively far apart from each other  mezard  mora    zecchina         clusters
of solutions are generally defined as a set of connected components of the solution space 
where two adjacent solutions have a hamming distance of    differ by one variable   daude 
   

firelaxed survey propagation for the weighted max sat problem

k

 

m j

m  j
  

mk

mj

j



mi

i

ml
l

figure    illustration of messages in a bp algorithm 
mezard  mora  and zecchina        redefined the notion of clusters by using the concept
of x satisfiability  a sat instance is x satisfiable if there exists two solutions differing by
n x variables  where n is the total number of variables  they showed that near the phase
transition  x goes from around    to very small values  without going through a phase of
intermediate values  this clustering phenomenon explains why instances generated with 
close to c are extremely hard to solve with local search algorithm  it is difficult for the
local search algorithm to move from a local minimum to the global minimum 

   the belief propagation algorithm
the bp algorithm has been reinvented in different fields under different names  for example 
in the speech recognition community  the bp algorithm is known as the forward backward
procedure  rabiner   juang         on tree structured factor graphs  the bp algorithm is
simply a dynamic programming approach applied to the tree structure  and it can be shown
that bp calculates the marginals for each variable in the factor graph  i e  solving problem
    in loopy factor graphs  the bp algorithm has been found to provide a reasonable
approximation to solving the marginal problem when the algorithm converges  in this case 
the bp algorithm is often called the loopy bp algorithm  yedidia  freeman and weiss       
have shown that the fixed points of the loopy bp algorithm correspond to the stationary
points of the bethe free energy  and is hence a sensible approximate method for estimaing
marginals 
in this section  we will first describe the bp algorithm as a dynamic programming
method for solving the marginal problem  problem    for tree structured factor graphs  we
will also briefly describe how the bp algorithm can be applied to factor graphs with loops 
and refer the reader to the work of yedidia et al         for the underlying theoretical
justification in this case 
given a factor graph representing a distribution p x   the bp algorithm involves iteratively passing messages from factor nodes   f to variable nodes i  v   and vice versa 
each factor node  represents a factor    which is a factor in the joint distribution given
in equation    in figure    we give an illustration of how the messages are passed between
factor nodes and variable nodes  each greek alphabet  e g    f   in a square represents
a factor  e g     and each roman alphabet  e g  i  v   in a circle represents a variable
 e g  xi   
the factor to variable messages  e g  mi    and the variable to factor messages  e g 
mi   are vectors of real numbers  with length equal to the cardinality of the variable xi  
   

fichieu   lee

we denote by mi  xi   or mi  xi   the component of the vector corresponding to the
value xi   xi  
the message update equations are as follows 
y

mj  xj    

   v

    

 j  

x

mi  xi    

m   j  xj  
  xv     

xv     xi

y

mj  xj   

    

jv    i

p

where xv     xi means summing over all configurations xv    with xi set to xi  
for a tree structured factor graph  the message updates can be scheduled such that after
two parses over the tree structure  the messages will converge  once the messages converge 
the beliefs at each variable node are calculated as follows 
y

bj  xj    

mj  xj   

    

v  j 

for a tree structured graph  the normalized beliefs for each variable will be equal to its
marginals 
input  a joint distribution p x  defined over a tree structured factor graph   v  f    e  
and a variable xi  x 
output  exact marginals for the variable xi  
algorithm  
   organize the tree so that xi is the root of the tree 
   start from the leaves  propagate the messages from child nodes to parent nodes
right up to the root xi with equations    and    
   the marginals of xi can then be obtained as the normalized beliefs in equation    

figure    the bp algorithm for calculating the marginal of a single variable  xi   on a
tree structured factor graph

the algorithm for calculating the exact marginals of a given variable xi   is given in
figure    this algorithm is simply a dynamic programming procedure for calculating the
marginals  pi  xi    by organizing the sums so that the sums at the leaves are done first  for
the simple example in figure    for calculating p   x     the sum can be ordered as follows 
p   x     

x

p x 

x   x   x 

    x    x   

x x

 

x 

x 

   

    x    x   

x
x 

     x    x   

firelaxed survey propagation for the weighted max sat problem

the bp algorithm simply carries out this sum by using the node for x  as the root of the
tree structured factor graph in figure   
the bp algorithm can also be used for calculating marginals for all variables efficiently 
with the message passing schedule given in figure    this schedule involves selecting a
random variable node as the root of the tree  and then passing the messages from the leaves
to the root  and back down to the leaves  after the two parses  all the message updates
required in the algorithm in figure   for any one variable would have been performed  and
the beliefs of all the variables can be calculated from the messages  the normalized beliefs
for each variable will be equal to the marginals for the variable 

input  a joint distribution p x  defined over a tree structured factor graph  v  f   
output  exact marginals for all variables in v  
algorithm  
   randomly select a variable as a root 
   upward pass  starting from leaves  propagate messages from the leaves right up
to the tree 
   downward pass  from the root  propagate messages back down to the leaves 
   calculate the beliefs of all variables as given in equation    

figure    the bp algorithm for calculating the marginals of all variables on a treestructured factor graph

if the factor graph is not tree structured  i e  contains loops   then the message updates
cannot be scheduled in the simple way described in the algorithm in figure    in this case 
we can still apply bp by iteratively updating the messages with equations    and     often
in a round robin manner over all factor variable pairs  this is done until all the messages
converge  i e  the messages do not change over iterations   there is no guarantee that
all the messages will converge for general factor graphs  however  if they do converge  it
was observed that the beliefs calculated with equation    are often a good approximation
of the exact beliefs of the joint distribution  murphy  weiss    jordan         when
applied in this manner  the bp algorithm is often called the loopy bp algorithm  recently 
yedidia  freeman and weiss              have shown that loopy bp has an underlying
variational principle  they showed that the fixed points of the bp algorithm correspond to
the stationary points of the bethe free energy  this fact serves in some sense to justify the
bp algorithm even when the factor graph it operates on has loops  because minimizing the
bethe free energy is a sensible approximation procedure for solving the marginal problem 
we refer the reader to the work of yedidia et al         for more details 
   

fichieu   lee

   survey propagation  the sp and sp y algorithms
recently  the sp algorithm  braunstein et al         has been shown to beat the best
incomplete solvers in solving hard   sat instances efficiently  the sp algorithm was first
derived from principles in statistical physics  and can be explained using the cavity approach
 mezard   parisi         it was first given a bp interpretation in the work of braunstein
and zecchina         in this section  we will define the sp and the sp y algorithms for
solving sat and max sat problems  using a warning propagation interpretation for these
algorithms 
    sp algorithm for the sat problem
in section        we have defined a joint distribution for the sat problem  x  c   where
the energy function of a configuration is equal to the number of violated clauses for the configuration  in the factor graph   v  f    e  representing this joint distribution  the variable
nodes in v correspond to the boolean variables in x  and each factor node in f represents
a clause in c  in this section  we provide an intuitive overview of the sp algorithm as it
was formulated in the work of braunstein et al         
the sp algorithm can be defined as a message passing algorithm on the factor graph
  v  f    e   each factor   f passes a single real number  i to a neighboring variable
xi in the factor graph  this real number i is called a survey  according to the warning
propagation interpretation given in the work of braunstein et al          the survey i
corresponds to the probability  of the warning that the factor  is sending to the variable
xi   intuitively  if i is close to    then the factor  is warning the variable xi against
taking a value that will violate the clause   if i is close to    then the factor  is
indifferent over the value taken by xi   and this is because the clause  is satisfied by other
variables in v    
we first define the messages sent from a variable xj to a neighboring factor   as
a function of the inputs from other factors containing xj   i e      j     v  j     in sp 
this message is a vector of three numbers  uj   sj   and  j   with the following
interpretations 
uj is the probability that xj is warned  by other clauses  to take a value that will violate
the clause  
sj is the probability that xj is warned  by other clauses  to take a value that will satisfy
the clause  
 
j is the probability that xj is free to take any value 
with these defintions  the update equations are as follows 
uj      
sj      

y

       j   

y

       j   

   vu  j 

   vs  j 

y

y

       j   

   vs  j 

       j   

    
    

   vu  j 

   sp reasons over clusters of solutions  and the probability of a warning in this section is used loosely in
the sp literature to refer to the fraction of clusters for which the warning applies  in the next section 
we will define a rigorous probability distribution over covers for the rsp algorithm 

   

firelaxed survey propagation for the weighted max sat problem

 j  

y

       j   

    

   v  j 

i  

y

uj

jv   i

uj   sj    j

    

these equations are defined using the sets of factors vu  j  and vs  j   which has been
defined in section        for the event where the variable xj is warned to take on a value
violating   it has to be  a  warned by at least one factor     vu  j  to take on a satisfying
value for      and  b  all the other factors in vs  j  are not sending warnings  in equation
    the probability of this event  uj   is a product of two terms  the first corresponding to
event  a  and the second to event  b   the definitions of sj and  j are defined in a
similar manner  in equation     the final survey i is simply the probability of the joint
event that all incoming variables xj are violating the clause   forcing the last variable xi
to satisfy  
the sp algorithm consists of iteratively running the above update equations until the
surveys converge  when the surveys converged  we can then calculate local biases as follows 
     
 
j

y

       j   

y
v

 j

 

y

    j   

    

v   j 

v    j 

     
 
j

y

       j   

  j 

y
v

    j   

    j   

    

   j 

    

v  j 

wi   
wi  

 
j

    


 
 
j    j   j


j

    


 
 
j    j   j

to solve an instances of the sat problem  the sp algorithm is run until it converges 
and a few variables that are highly constrained are set to their preferred values  the sat
instance is then reduced to a smaller instance  and sp can be run again on the smaller
instance  this continues until sp fails to set any more variables  and in this case  a local
search algorithm such as walksat is run on the remaining instance  this algorithm  called
the survey inspired decimation algorithm  braunstein et al          is given in the algorithm
in figure   
    the sp y algorithm
in contrast to the sp algorithm  the sp y algorithms objective is to solve max sat instances  and hence clauses are allowed to be violated  at a price  the sp algorithm can
be understood as a special case of the sp y algorithm  with y taken to infinity  battaglia
et al          in sp y  a penalty value of exp  y  is multiplied into the distribution for
each violated clause  hence  although the message passing algorithm allows the violation of
clauses  but as the value of y increases  the surveys will prefer configurations that violate a
minimal number of clauses 
   

fichieu   lee

input  a sat problem  and a constant k 
output  a satisfying configuration  or report failure 
algorithm  
   randomly initialize the surveys 
   iteratively update the surveys using equations    to    
   if sp does not converge  go to step   
   if sp converges  calculate wi  and wi using equations    and    
   decimation  sort all variables based on the absolute difference  wi   wi    and
set the top k variables to their preferred value  simplify the instance with these
variables removed 
   if all surveys equal zero   no variables can be removed in step     output the
simplified sat instance  otherwise  go back to the first step with the smaller
instance 
   run walksat on the remaining simplified instance  and output a satisfying
configuration if walksat succeeds  otherwise output failure 

figure    the survey inspired decimation  sid  algorithm for solving a sat problem
 braunstein et al        

the sp y algorithm can still be understood as a message passing algorithm over factor
graphs  as in sp  each factor    passes a survey  i   to a neighboring variable xi  
 
corresponding to the probability of the warning  to simplify notations  we define i

 resp  i
  to be the probability of the warning against taking the value     resp     
 

 
and we define i
     i
 i
  in practice  since a clause can only warn against
j

j

 i
 

either    or   but not both  either i
or i
equals zero  i
  i   and i i     
where j i is defined in definition   
since clauses can be violated  it is insufficient to simply keep track of whether a variable
has been warned against a value or not  it is now necessary to keep track of how many
times the variable has been warned against each value  so that we know how many clauses
 

will be violated if the variable was to take a particular value  let hj
 resp  hj
  be
 
the number of times the variable xj is warned by factors in       v  j   against the value
 
    resp      in sp y  the variable xj will be forced by  to take the value    if hj
is

 
smaller than hj   and the penalty in this case will be exp  yhj    in notations used
 

in the work of battaglia et al         describing sp y  let hj   hj
 hj
 
battaglia et al         defined the sp y message passing equations that calculate the
probability distribution over hj   based on the input surveys 

    j     v  j        j     j          v  j     j   
   

    

firelaxed survey propagation for the weighted max sat problem

where  v  j   refers to the cardinality of the set v  j   the unnormalized distributions
pej  h  are calculated as follows 
   

pej  h       i  h       i  h         i  h           
       v  j       

  

   

pej  h      i pej  h 
   

   i pej  h     exp   y h  
   

  i pej  h      exp   y h   
  v  j    

pej  h    pej

 h  

    
    

where  h      if h      and zero otherwise  and  h      if h     and zero otherwise 
the above equations take into account each neighbor of j excluding   from      to
    v  j     the penalties exp  y  are multiplied every time the value of hj decreases
in absolute value  as each new neighbor of xj      is added  at the end of the procedure 
 

this is equivalent to multiplying the messages with a factor of exp  ymin hj
  hj
   
the pej  h  are then normalized into pj  h  by computing pej  h  for all possible
values of h in   v  j         v  j        the message updates for the surveys are as follows 
 v  j   
 
wj
 

x

pj  h  

h  
 
x


wj
 

pj  h  

    
    

h  v  j    
j

i i

    

j

 i
i
 

    
j

y

 j
wj
 

    

jv  j  i
j

 i
 
i
     i
 

    

 

the quantity wj
 resp  wj
  is the probability of all events warning against the value
    resp      equation    reflects the fact that a warning is sent from  to the variable
xi if and only if all other variables in  are warning  that they are going to violate  
when sp y converges  the preference of each variable is calculated as follows 

 v  j  

wj   
wj  

x

pj  h  

h  
 
x

pj  h  

    
    

h  v  j  

where the pj  h  are calculated in a similar manner as the pj  h   except that it does not
exclude  in its calculations 
with the above definitions for message updates  the sp y algorithm can be used to
solve max sat instances by a survey inspired decimation algorithm similar to the one for
   

fichieu   lee

sp given in the algorithm in figure    at each iteration of the decimation process  the sp y
decimation procedure selects variables to fix to their preferred values based on the quantity
bf ix  j     wj   wj  

    

in the work of battaglia et al          an additional backtracking process was introduced to make the decimation process more robust  this backtracking process allows the
decimation procedure to unfix variables already fixed to their values  for a variable xj
fixed to the value xj   the following quantities are calculated 
bbacktrack  j    xj  wj   wj  

    

variables are ranked according to this quantity and the top variables are chosen to be
unfixed  in the algorithm in figure    we show the backtracking decimation algorithm
for sp y  battaglia et al          where the value of y is either given as input  or can be
determined empirically 
input  a max sat instance and a constant k  optional input  yin and a backtracking
probability r 
output  a configuration 
algorithm  
   randomly initialize the surveys 
   if yin is given  set y   yin   otherwise  determine the value of y with the bisection
method 
   run sp y until convergence  if sp y converges  for each variable xi   extract a
random number q         
 a  if q   r  sort the variables according to equation    and fix the top k most
biased variables 
 b  if q   r sort the variables according to equation    and unfix the top k most
biased variables 
   simplify the instance based on step      if sp y converged and return a nonparamagnetic solution  a paramagnetic solution refers to a set of  bf ix  j  jv
that are not biased to any value for all variables   go to step     
   run weighted walksat on the remaining instance and outputs the best configuration found 

figure    the survey inspired decimation  sid  algorithm for solving a max sat instance
 battaglia et al        

   

firelaxed survey propagation for the weighted max sat problem

   relaxed survey propagation
it was shown  maneva et al         braunstein   zecchina        that sp for the sat
problem can be reformulated as a bp algorithm on an extended factor graph  however 
their formulation cannot be generalized to explain the sp y algorithm which is applicable to
max sat problems  in a previous paper  chieu   lee         we extended the formulation
in the work of maneva et al         to address the max sat problem  in this section 
we will modify the formulation in our previous paper  chieu   lee        to address the
weighted max sat problem  by setting up an extended factor graph on which we run the bp
algorithm  in theorem    we show that this formulation generalizes the bp interpretation
of sp given in the work of maneva et al          and in the main theorem  theorem     we
show that running the loopy bp algorithm on this factor graph estimates marginals over
covers of configurations violating a set of clauses with minimal total weight 
we will first define the concept of covers in section      before defining the extended
factor graph in section      in the rest of this section  given a weighted max sat problem
 x  c  w   we will assume that variables in x take values in            the third value is
a dont care state  corresponding to a no warning message for the sp algorithm defined
in the section   
    covers in weighted max sat
first  we need to define the semantics of the value  as a dont care state 
definition     maneva et al         given a configuration x  we say that a variable xi
is the unique satisfying variable for a clause   c if it is assigned s i whereas all other
variables xj in the clause are assigned u j  see definition   for the definitions of s i and
u i    a variable xi is said to be constrained by the clause  if it is the unique satisfying
variable for   a variable is unconstrained if it is not constrained by any clauses  define
coni   x     ind xi is constrained by   

    

where ind p   equals   if the predicate p is true  and   otherwise 
as an illustration  consider the configuration x              in example    in this
configuration  x       is constrained by the clauses   and     x      is constrained
by     while x      is unconstrained  flipping x  to    will not violate any additional
clauses for the configuration 
in the following definition  we redefine when a configuration taking values in          
satisfies or violates a clauses 
definition    a configuration satisfies a clause  if and only if  i   contains a variable xi
set to the value s i   or  ii  when at least two variables in  take the value   a configuration
violates a clause  if all the variables xj in  are set to u j   a configuration x is invalid
for clause  if and only if exactly one of the variables in  is set to   and all the other
remaining variables in  are set to u i   a configuration is valid if it is valid for all clauses
in c 
the above definition for invalid configurations reflects the interpretation that the  value
is a dont care state  clauses containing a variable xi    should already be satisfied by
   

fichieu   lee

other variables  and the value of xi does not matter  so xi    cannot be the last remaining
possibility of satisfying any clause  in the case where a clause contains two variables set to
  the clause can be satisfied by either one of these two variables  so the other variable can
take the dont care value 
we define a partial order on the set of all valid configurations as follows  maneva et al  
      
definition    let x and y be two valid configurations  we write x  y if i      xi   yi
or     xi    and yi     
this partial order defines a lattice  and maneva et al         showed that sp is a
peeling procedure that peels a satisfying configuration to its minimal element in the
lattice  a cover is a minimal element in the lattice  in the sat region  a cover can be
defined as follows  kroc  sabharwal    selman        
definition    a cover is a valid configuration x           n that satisfies all clauses 
and has no unconstrained variables assigned    or    
the sp algorithm was shown to return marginals over covers  maneva et al         
in principle  there are two kinds of covers  true covers which correspond to satisfying
configurations  and false covers which do not  kroc et al         showed empirically that
the number of false covers is negligible for sat instances  for rsp to apply to weighted
max sat instances  we introduce the notion of v cover 
definition    a v cover is a valid configuration x           n such that
   the total weight of clauses violated by the configuration equals v 
   x has no unconstrained variables assigned    or    
hence the covers defined in definition   are simply v covers with v      i e    covers  
    the extended factor graph
in this section  we will define a joint distribution over an extended factor graph that is
positive only over v covers  first  we will need to define functions that will be used to
define the factors in the extended factor graph 
definition    for each clause    c  the following function assigns different values to
configurations that satisfy  violate or are invalid  see definition    for  

val  xv       



  

exp w y 

  

if xv    satisfies 
if xv    violates 
if xv    is invalid

    

in the above definition  we introduced a parameter y in the rsp algorithm  which plays
a similar role to the y in the sp y algorithm  the term exp w y  is the penalty for
violating a clause with weight w  
   

firelaxed survey propagation for the weighted max sat problem

definition      maneva et al         given a configuration x  we define the parent set
pi  x  of a variable xi to be the set of clauses for which xi   xi is the unique satisfying
variable in a configuration x   i e  the set of clauses constraining xi to its value   formally 
pi  x       c  coni   xv         

    

in example    for the configuration x               the parent sets are p   x   
          p   x          and p   x     
given the weighted max sat instance  x  c  w  and its factor graph  g     v  f    e  
we now construct another distribution with an associated factor graph gs     v  fs    es   as
follows  for each i  v   let p  i  be the set of all possible parent sets of the variable xi   due
to the restrictions imposed by our definition  pi  x  must be contained in either v    i  or
 

v   i   but not both  therefore  the cardinality of p  i  is   v  i      v  i      our extended
factor graph is defined on set of the variables                  n    x   x        xn  
where xi               p  i   hence this factor graph has the same number of variables
as the original sat instance  but each variable has a large cardinality  given configurations
x for the sat instance  we denote configurations of  as  x     i  x  iv   where i  x   
 xi   pi  x   
the definitions given so far define the semantics of valid configurations and parent sets 
and in the rest of this section  we will define factors in the extended factor graph gs to
ensure that the above definitions are satisfied by configurations of  
the single variable compatibilities  i   are defined by the following factor on each
variable i  x  
i  i  x     xi   pi  x     



  

 


  

if pi  x      xi    
if pi  x      xi   
 
for any other valid  xi   pi  x  

    

the first case in the above definition for pi  x     and xi     corresponds to the case where
the variable xi is unconstrained  and yet takes a value in          valid configurations
that are not v covers  with unconstrained variables set to   or     have a zero value in
the above factor  hence only v covers have a positive value for these factors  in the last
case in the above definition  the validity of  xi   pi  x   simply means that if xi       resp 
xi       pi  x   v    i   resp  pi  x   v   i    
the clause compatibilities     are 
   x v        val  xv    

q





kv    ind    pk  x     con k  xv       

    

where ind is defined in definition    these clause compatibilities introduce the penalties in
val  xv      into the joint distribution  the second term in the above equation enforces
that the parent sets pk  x  are consistent with the definitions of parent sets in definition   
for each variable xk in the clause  
the values of x determines uniquely the values of p    pi  x  iv   and hence the
distribution over  x     xi   pi  x  iv is simply a distribution over x 
theorem    using the notation unsat x  to represent the set of all clauses violated by
x  the underlying distribution p   of the factor graph defined in this section is positive only
   

fichieu   lee

  

  

  

  

 

  

 

  

  

 

  

  

figure    the extended factor graph for the sat instance given in example    the factor
nodes i  correspond to the clause compatibility factors i   and the single variable
factor nodes i  represents the single variable compatibility factors i   this factor
graph is similar to the original factor graph of the sat instance in figure    except
that it has additional factor nodes i   

over v covers  and for a v cover x  we have 
p x   x    p     x   

y

exp w y  

    

unsat x 

proof  configurations that are not v covers are either invalid or contains unconstrained
variables set to   or     for invalid configurations  the distribution is zero because of the
definition of val   and for configurations with unconstrained variables set to   or    
the distribution is zero due to the definition of the factors i   for each v cover  the total
penalty from violated clauses is the product term in equation    
the above definition defines a joint distribution over a factor graph  the rsp algorithm
is a message passing algorithm defined on this factor graph 
definition     the rsp algorithm is defined as the loopy bp algorithm applied to the
extended factor graph gs associated with a maxsat instance  x  c  w  
in section    we will formulate the message passing updates for rsp  as well as a
decimation algorithm for using rsp as a solver for weighted max sat instances  as an
example  figure   shows the extended factor graph for the weighted max sat instance
defined in example   
definition     we define a min cover for a weighted max sat instance as the m cover 
where m is the minimum total weight of violated clauses for the instance 
theorem    when y is taken to   rsp estimates marginals over min covers in the
following sense  the stationary points of the rsp algorithm correspond to the stationary
points of the bethe free energy on a distribution that is uniform over min covers 
   

firelaxed survey propagation for the weighted max sat problem

        

energy     

        

energy    

        

energy    

        

energy    
        

        

        

        
       

       

energy    

energy    

figure    energy landscape for the weighted max sat instance given in example    each
node represents a configuration for the variables  x    x    x     for example  the
node            represents the configuration  x    x    x                 

proof  the ratio of the probability of a v cover to that of a  v     cover equals exp y  
when y is taken to   the distribution in equation    is positive only over min covers 
hence rsp  as the loopy bp algorithm over the factor graph representing equation    
estimates marginals over min covers 
in the application of rsp to weighted max sat instances  taking y to  would often
cause the rsp algorithm to fail to converge  taking y to a sufficiently large value is often
sufficient for rsp to be used to solve weighted max sat instances 
in figure    we show the v covers of a small weighted max sat example in example   
in this example  there is a unique min cover with x        x       and x     
maneva et al         formulated the sp  algorithm  which is equivalent to the sp
algorithm  braunstein et al         for       the sp  algorithm is the loopy bp algorithm
on the extended factor graph defined in the work of maneva et al          comparing the
definitions of the extended factor graph and factors for rsp and sp   we have  chieu  
lee        
theorem    by taking y    rsp is equivalent to sp  with      
proof  the definitions of the joint distribution for sp  for       maneva et al         
and for rsp in this paper differ only in definition    and with y   in rsp  their
definitions become identical  since sp  and rsp are both equivalent to the loopy bp
on the distribution defined on their extended factor graphs  the equivalence of their joint
distribution means that the algorithms are equivalent 
taking y to infinity corresponds to disallowing violated clauses  and sp  was formulated
for satisfiable sat instances  where all clauses must be satisfied  for sp   clause weights
are inconsequential as all clauses have to be satisfied 
in this paper  we disallow unconstrained variables to take the value   in the appendix
a  we give an alternative definition for the single variable potentials in equation     with
   

fichieu   lee

this definition  maneva et al         defines a smoothing interpretation for sp   this
smoothing can also be applied to rsp  see theorem   in the work of maneva et al        
and the appendix a for more details 
    the importance of convergence
it was found that message passing algorithms such as the bp and the sp algorithms perform
well whenever they converge  e g   see kroc  sabharwal    selman         while the success
of the rsp algorithm on random ensembles of max sat and weighted max sat instances
are believed to be due to the clustering phenomenon on such problems  we found that
rsp could also be successful in cases where the clustering phenomenon is not observed 
we believe that the presence of large clusters help the sp algorithm to converge well  but
as long as the sp algorithm converges  the presence of clusters is not necessary for good
performance 
when covers are simply boolean configurations  with no variables taking the  value  
they represent singleton clusters  we call such covers degenerate covers  in many structured
and non random weighted max sat problems  we have found that the covers we found are
often degenerate  in a previous paper  chieu  lee    teh         we have defined a modified
version of rsp for energy minimization over factor graphs  and we show in lemma   in
that paper that configurations with   have zero probability  i e  all covers are degenerate 
in that paper  we showed that the value of y can be tuned to favor the convergence of the
rsp algorithm 
in section      we show the success of rsp on a few benchmark max sat instances 
in trying to recover the covers of the configurations found by rsp  we found that all the
benchmark instances used have degenerate covers  the fact that rsp converged on these
instances is sufficient for rsp to outperform local search algorithms 

   using rsp for solving the weighted max sat problem
in the previous section  we defined the rsp algorithm in definition    to be the loopy bp
algorithm over the extended factor graph  in this section  we will derive the rsp message
passing algorithm based on this definition  before giving the decimation based algorithm
used for solving weighted max sat instances 
    the message passing algorithm
the variables in the extended factor graphs are no longer boolean  they are of the form
i  x     xi   pi  x    which are of large cardinalities  in the definition of the bp algorithm 
we have stated that the message vector passed between factors and variables are of length
equal to the cardinality of the variables  in this section  we show that the messages passed
in rsp can be grouped into a few groups  so that each message passed between variables
and factors has only three values 
in rsp  the factor to variable messages are grouped as follows 
s
mi
if xi   s i   pi  x    s      where s  vs  i  
 all cases where the variable xi is constrained by the clause   

   

firelaxed survey propagation for the weighted max sat problem

u
mi
if xi   u i   pi  x   vu  i  
 all cases where the variable xi is constrained to be u i by other clauses  
s
mi
if xi   s i   pi  x   vs  i  
 all cases where the variable xi   s i is not constrained by   at least one other
variable xj in  satisfies  or equals   otherwise xi will be constrained  

mi
if xi     pi  x     

the last two messages are always equal 

s

mi
  mi
  mi
 

this equality is due to the fact that for a factor that is not constraining its variables  it
does not matter whether a variable is satisfying or is   as long as there are at least two
variables that are either satisfying or is   in the following  we will consider the two equal
  
messages as a single message  mi
the variable to factor messages are grouped as follows 
s
  
ri
svs  i  mia  s i   s      
variable xi is constrained by  to be s i  

p

u
ri
  
pi  x vu  i  mia  u i   pi  x   
variable xi is constrained by other clauses to be u i  

p

s   
ri
pi  x vs  i  mia  s i   pi  x   
variable xi is not constrained by   but constrained by other clauses to be s i  

p

    m
ri
i      
variable xi unconstrained and equals   

the last two messages can again be grouped as one message  as was done in our previous
paper  chieu   lee        as follows 

s

ri
  ri
  ri
 

since in calculating the updates of the mj messages from the ri messages  only ri
is required  the update equations of rsp for weighted max sat are given in figure    
these update equations are derived based on loopy bp updates in equations    and    in
section    in the worst case in a densely connected factor graph  each iteration of updates
can be performed in o m n   time  where n is the number of variables  and m the number
of clauses 

      factor to variable messages
we will begin with the update equations for the messages from factors to variables  given
s
in equations        and     the message mi
groups cases where xi is constrained by
   

fichieu   lee

y

s
mi
 

u
rj

    

jv     i 




y

u
mi
  

u

 rj
  rj
  

jv     i 
w y

  e

mi
 



s

 rk
 rk
 

kv     i 

y

u

rj

jv     i k 

y

u
  
rj
jv     i 

u

 rj
  rj
 

y

x

jv     i 

    
y

u
rj

    

jv     i 



s
ri
 


y


u
s

mi
 mi
  mi
 


y
vu  i 

    

vs  i 


u
ri
 

y


s

 mi
  mi
 

 y

vs  i 

u
mi


vu  i 

y


mi


vau  i 



ri
 

y
vu  i 

 

    





y
 y
u
s

mi
 mi
  mi
 

vs  i 


mi




vs  i 


mi

y

    

vs  i vu  i 



bi     

y
v


y

u

mi

   i 

v

s

 mi
  mi
 

  i 

y
v

bi      

v

bi    

u

mi

  i 

y

    

  i 


y

 
mi


y

v

s

 mi
  mi
 

   i 


mi

y
v

 
mi

    

   i 

    

v  i 

figure     the update equations for rsp  these equations are bp equations for the factor
graph defined in the text 

   

firelaxed survey propagation for the weighted max sat problem

the factor   this means that all other variables in  are violating the factor   and hence
we have equation   
y

s
mi
 

u
rj
 

jv     i 
u
where rj
are messages from neighbors of  stating that they will violate  
u
the next equation for mi
states that the variable xi is violating   in this case  the
other variables in  are in these possible cases

   two or more variables in  satisfying   with the message update
y

u

 rj
  rj
 

jv     i 


rk

x

y

kv     i 

u
rj


jv     i k 

y

u
rj
 

jv     i 

   exactly one variable in v     i  constrained by   and all other variables are violating
  with the message update
x

y

s
rk

u
rj

jv     i k 

kv     i 

   all other variables are violating   and in this case  there is a penalty factor of
exp w y   with the message update
y

exp w y 

u
rj

jv     i 

the sum of these three cases result in equation    

the third update equation for mi
is for the case where the variable xi is uncons   or   for m     this means that
strained by   satisfying  with s i  for the case mi
i
there is at least one other satisfying variable that is unconstrained by   with the message
update
y

u

 rj
  rj
 

jv     i 

y

u
rj

jv     i 

      variable to factor messages
s
consists of the case where the variable xi is constrained by the
the first message ri
factor   which means that it satisfies neighboring factors in vs  i   and violates factors in
vu  i   with probability


y
vu  i 

 y

u
mi



s
s
 mi
  mi
   



vs  i 

u
the second message ri
is the case where xi violates   in this case  all other variables
u
in v  i  are satisfied  while clauses in vs  i  are violated  in this case  the variable xi must

   

fichieu   lee

be constrained by one of the clauses in vu  i   hence the message update is

y
vs  i 



y
 y
u
s
s
mi
 mi
  mi
 

vu  i 

vu  i 

s
mi





s
   for the message
the third message ri
is the sum of two messages ri
and ri
the variable xi satisfies  but is not constrained by   and so it must be constrained
by some other factors 

s  
ri


y



 y

vu  i 

u
mi


s
s
 mi
  mi
 

vs  i 

y

vs  i 

s
mi




   is the case where x      
the second part of the message  ri
i

mi
 

y
vs  i vu  i 

and the sum of the above two equations results in equation    
      the beliefs
the beliefs can be calculated from the factor to variable messages once the algorithm converges  to obtain estimates of the marginals over min covers  the calculation of the beliefs
is similar to the calculation of the variable to factor messages 
the belief bi     is the belief or the variable xi taking the value    this is the case
where the variable xi satisfies clauses in v   i   and violates clauses in v    i   in this case 
xi must be constrained by one of the factors in v   i   hence the belief is as follows 

y
v    i 

u

mi


y

s
s
 mi
  mi
 

v   i 

y

s 
mi
 

v   i 

the calculation of the belief bi      is similar to bi      the belief bi    is the case where
xi     and hence it is calculated as follows 
y


mi
 

v   i 

    comparing the rsp and sp y message passing algorithms
the message passing algorithms for rsp and sp y share many similarities  both algorithms
   include a multiplicative penalty into the distribution for each violated clause 
   contain a mechanism for a dont care state  for sp y  this occurs when a variable
receives no warnings from neighboring factors 
however  there are a number of significant differences in the two algorithms 
   

firelaxed survey propagation for the weighted max sat problem

   in rsp  the penalties are imposed as each factor passes a message to a variable  for
sp y  the penalties are imposed when a variable compiles all the incoming warnings 
and decides how many factors it is going to violate 
   importantly  in rsp  variables participating in violated clauses can never take the  
value  for sp y  a variable receiving an equal number of warnings from the set of
 
factors         v  i   against taking the    and the   value  i e  hj   hj


hj      will decide to pass a message with no warning to   hence for sp y  it is
possible for variables in violated clauses to take a dont care state 
   in the work of battaglia et al         where sp y was formulated with the cavity
approach  it was found that the optimal value of y for a given max sat problem is
y    
e   where  is the complexity in statistical physics  and e is the energy density
 mezard   zecchina         they stated that y  is a finite value when the energy of
the max sat problem is not zero  in theorem    we show that for rsp  y should
be as large as possible so that the underlying distribution is over min covers  in our
experimental results in figure     we showed that this is indeed true for rsp  as long
as it converges 

input  a  weighted  max sat instance  a constant k  and yin
output  a configuration 
algorithm  
   randomly initialize the surveys and set y   yin  
   run rsp with y  if rsp converges  sort the variables according to the quantities
bi    p  xi        p  xi        and fix the top k variables to their preferred
values  subject to the condition that bi       
    for weighted max sat  if rsp fails to converge  adjust the value of y 
   if rsp converges and at least one variable is set  go back to step     with the simplified instance  otherwise  run the  weighted  walksat solver on the simplified
instance and output the configuration found 
figure     the decimation algorithm for rsp for solving a  weighted  max sat instance

    the decimation algorithm
the decimation algorithm is shown in figure     this is the algorithm we used for our
experiments described in section    in comparing rsp with sp y on random max sat
instances in section      we run both algorithms with a fixed yin   and vary the yin over
a range of values  comparing figure    to figure   for sp y  the condition used in spy to check for a paramagnetic solution is replaced by the condition given in step     in
figure     in the experimental results in section      we used the sp y implementation
   

fichieu   lee

available online  battaglia et al          which contains a mechanism for backtracking on
decimation decisions  see figure     in section      rsp still outperforms sp y despite not
backtracking on its decisions  when running rsp on weighted max sat  we found that
it was necessary to adjust y dynamically during the decimation process  for details on
experimental settings  please refer to section   

   experimental results
we run experiments on random max   sat  random weighted max sat  as well as on a
few benchmark max sat instances used in the work of lardeux  saubion  and hao        
 viols

 viols

figure     behaviour of sp y and rsp over varying values of y on the x axis  and the
number of violated clauses   viols  on the y axis  the comparison of the performances between rsp and sp y are shown in table    the objective of showing
the graphs in this figure is to show that the behavior of rsp over varying y is
consistent with theorem    as long as rsp converges  its performance improves
as y increases  in the graph  rsp reaches a plateau when it fails to converge this
property allows for a systematic search for a good value of y to be used  the
behavior of sp y over varying y is less consistent 
 

    random max   sat
we run experiments on randomly generated max   sat instances of     variables  with
different clause to variable ratios  the random instances are generated by the sp y code
available online  battaglia et al          in figure     we compare sp y and rsp on random
max   sat with different clause to variable ratio    we vary  from     to     to show the
performance of sp y and rsp in the unsat region of   sat  beyond its phase transition
at c         for each value of   the number of violated clauses  y axis  is plotted against
the value of y used 
   

firelaxed survey propagation for the weighted max sat problem

we perform the decimation procedure in figure    for rsp  for a fixed value of yin  
decimating     variables at a time  i e  k         for sp y  we run the sp y code available
on line  with the option of decimating     variables at each iteration  and with two different
settings  with and without backtracking  battaglia et al          backtracking is a procedure used in sp y to improve performance  by unfixing previously fixed variables at a rate
r        so that errors made by the decimation process can be corrected  for rsp  we do
not run backtracking  note that the y in our formulation equals to  y in the formulation
in the work of battaglia et al   battaglia et al         
both sp y and rsp fail to converge when y becomes large enough  when this happens 
the output of the algorithm is the result returned by walksat on the original instance  in
figure     we see this happening when a curve reaches a horizontal line  signifying that the
algorithm is returning the same configuration regardless of y  we seed the randomized
walksat so that results are identical when instances are identical   from figure     we
see rsp performs more consistently than sp y  as y increases  the performance of rsp
improves  until a point where rsp fails to converge  interestingly for max   sat instances 
we observed that once rsp converges for a value of y for a given instance  it will continue to
converge for the same value of y throughout the decimation process  hence  the best value
of y for rsp is obtainable without going through the decimation process  we can commence
decimation at the largest value of y for which rsp converges  in table    we show that rsp
outperforms sp y for        despite the fact that we did not allow backtracking for rsp 
we also compare rsp and sp y with the local search solvers implemented in ubcsat
 tompkins   hoos         we run      iterations of each of the    max sat solvers in
ubcsat  and take the best result among the    solvers  the results are shown in table   
we see that the local solvers in ubcsat does worse than both rsp and sp y  we have
also tried running complete solvers such as toolbar  de givry  heras  zytnicki    larrosa 
      and maxsatz  li  manya    planes         they are unable to deal with instances of
size      
    random weighted max   sat
we have also run experiments on randomly generated weighted max   sat instances  these
instances are generated in the same way as the instances for max   sat  and in addition 
the weights of each clause is uniformly sampled as integers in the set     m    where m is
the upper bound on the weights  we show the experimental results for m     and m     
in figure     we compare rsp with the    weighted max sat solvers implemented in
ubcsat  for rsp  we run all our experiments with an initial y set to     and whenever
the algorithm fails to converge  we lower the value of y by    or halve the value of y if y
is less than    see figure      we see that rsp outperforms ubcsat consistently in all
experiments in figure    
    benchmark max sat instances
we compare rsp with ubcsat on instances used in the work of lardeux et al         
which were instances used in the sat      competition  among the    instances  we use
the seven largest instances with more than      variables  we run rsp in two settings 
decimating either    or     variables at a time  we run rsp for increasing values of y  for
   

fichieu   lee

table    number of violated clauses attained by each method  for sp y  sp y  bt   spy with backtracking   and rsp  the best result is selected over all y  for each  
we show the best performance in bold face  the column fix shows the number
of variables fixed by rsp at the optimal y  and time the time taken by rsp
 in minutes  to fix those variables  on an amd opteron    ghz machine 

   
   
   
   
   
   
   
   
   
   
   

ubcsat
  
  
  
   
   
   
   
   
   
   
   

sp y
 
 
  
  
  
   
   
   
   
   
   

sp y bt 
 
 
  
  
  
   
   
   
   
   
   

rsp
 
  
  
  
  
   
   
   
   
   
   

fix
    
    
    
    
    
    
    
    
    
    
    

time  minutes 
  
  
  
  
  
  
  
  
  
  
  

w viol

w viol





figure     experimental results for weighted max sat instances  the x axis shows the
value of   and the y axis  w viol  is the number of violated clauses returned
by each algorithm 

each y  rsp fixes a number of spins  and we stop increasing y when the number of spins
fixed decreases over the previous value of y  for ubcsat  we run      iterations for each
of the    solvers  results are shown in table    out of the seven instances  rsp fails to
fix any spins on the first one  but outperforms ubcsat on the rest  lardeux et al        
did not show best performances in their paper  but their average results were an order of
magnitude higher than results in table    figure    shows that finding a good y for sp y
is hard  on the benchmark instances  we run sp y with the  y option  battaglia et al  
      that uses dichotomic search for y  sp y failed to fix any spins on all   instances 
   

firelaxed survey propagation for the weighted max sat problem

table    benchmark max sat instances  columns  instance shows the instance name in
the paper of lardeux et al          nvar the number of variables  ubcsat and
rsp x  x is the number of decimations at each iteration  the number of violated
clauses returned by each algorithm  and fx x the number of spins fixed by rsp 
best results are indicated in bold face 
instance
fw
nc
nw
       
       
       
       

nvar ubcsat rsp     fx     rsp   
family  purdom                  
    
  
   
 
   
    
  
  
    
  
    
  
  
    
  
family  pyhala braun unsat
    
  
  
    
  
    
  
  
    
  
    
  
  
    
  
    
  
  
    
  

fx   
 
    
    
    
    
    
    

the success of the sp family of algorithms on random ensembles of sat or max sat
problem are usually due to the clustering phenomenon on such random ensembles  as the
benchmark instances are not random instances  we attempted to see if the configurations
found by rsp do indeed belong to a cover representing a cluster of solutions  rather
disappointingly  we found that for all   solutions where rsp outperformed local search
algorithms  the variables in the solutions are all constrained by at least one clause  hence 
the v covers found are degenerate covers  i e  the covers do not contain variables set to
  it appears that the success of rsp on these benchmark instances is not due to the
clustering phenomenon  but simply because rsp manages to converge for these instances 
for some value of y  kroc  sabharwal  and selman        made a similar observation  the
convergence of bp or sp like algorithms is often sufficient for obtaining a good solution to
a given problem  as discussed in section      the ability to vary y to improve convergence
is a useful feature of rsp  but one that is distinct from its ability to exploit the clustering
phenomenon 

   conclusion
while recent work on max sat or weighted max sat tends to focus more on complete
solvers  these solvers are unable to handle large instances  in the max sat competition
      argelich  li  manya    planes         the largest max   sat instances used have
only    variables  for large instances  complete solvers are still not practical  and local
search procedures have been the only feasible alternative  sp y  generalizing sp  has been
shown to be able to solve large max   sat instances at its phase transition  but lacks the
theoretical explanations that recent work on sp has generated 
for   sat  there is an easy hard easy transition as the clause to variable ratio increases 
for max   sat  however  it has been shown empirically that beyond the phase transition
of satisfiability  all instances are hard to solve  zhang         in this paper  we show that
   

fichieu   lee

rsp outperforms sp y as well as other local search algorithms on max sat and weighted
max sat instances  well beyond the phase transition region 
both rsp and sp y do well on max sat instances near the phase transition  the
mechanisms behind sp y and rsp are similar  both algorithms impose a penalty term for
each violated constraint  and both reduce to sp when y    sp y uses a population
dynamics algorithm  which can also be seen as a warning propagation algorithm  in this
paper  we have formulated the rsp algorithm as a bp algorithm over an extended factor
graph  enabling us to understand rsp as estimating marginals over min covers 

acknowledgments
this work is supported in part by nus arf grant r                 

appendix a  smoothing interpretation for rsp
in the definition of sp   maneva et al          the parameter  was introduced to define a
whole family of algorithms  for       the sp  algorithm corresponds to the sp algorithm 
while for       the sp  algorithm corresponds to the bp algorithm  in this section  we
develop a more general version of the extended factor graph defined in section    that
incorporates the  in sp   we will call the corresponding rsp algorithm on this new
factor graph the rsp  algorithm 
the only difference between the factor graph for rsp  and the one in section   is the
definition of the variable compatibilities in equation     following notations in the work
of maneva et al          we introduce the parameters   and    and we restrict ourselves
to the case where           the  in sp  or rsp  is equal to     we redefine the
variable compatibilities as follows

i  i  x     xi   pi  x     



  





  

if pi  x      xi    
if pi  x      xi   
 
for any other valid  xi   pi  x  

    

with           the definition in equation    corresponds to the particular case where
      and       in section    we have defined the factor graph so that unconstrained
variables must take the value   with the new definition of i above  unconstrained variables are allowed to take on the values   or    with weight     and the  value with
weight   
with the above definition  the joint distribution in equation    is redefined as follows 
n  x  n  x  y
exp w y  

unsat x 

p  x    p   xk   pk  k       

    

where n   x  is the number of unconstrained variables in x taking    or    and n  x  the
number of unconstrained variables taking  in x 
case       we have studied this case in the main paper  the underlying distribution
is a distribution which is positive only over v covers 
   

firelaxed survey propagation for the weighted max sat problem

case       in this case  only configurations x with n  x      have non zero probability in the distribution given in equation     hence  the value  is forbidden  and all
variables take values in        a boolean configuration violating clauses with total weight
w has a probability proportional to exp yw    hence we retreive the weighted max sat
energy defined in equation     in this case  the factor graph is equivalent to the original
weighted max sat factor graph defined in definition    and hence rsp  is equivalent to
the loopy bp algorithm on the original weighted max sat problem 
case       and        in this case  all valid configurations x violating clauses
n  x  n  x 
with a total weight w has a probability proportional to       exp yw    hence 
the probability of v covers in the case where      are spread over the lattice for which it
is the minimal element 
with the above formulation  rsp  can be seen as a family of algorithms that include
the bp and the rsp algorithm  moving from bp to rsp as   or    varies from   to   

references
achlioptas  d   naor  a     peres  y          rigorous location of phase transitions in hard
optimization problems  nature                     
argelich  j   li  c  m   manya  f     planes  j          second evaluation of max sat
solvers  in sat    tenth international conference on theory and applications of
satisfiability testing 
battaglia  d   kolar  m     zecchina  r          minimizing energy below the glass thresholds  physical review e     
berre  d  l     simon  l          the essentials of the sat      competition  in sat   
sixth international conference on theory and applications of satisfiability testing 
berre  d  l     simon  l          special volume on the sat      competitions and
evaluations  journal on satisfiability  boolean modeling and computation    
braunstein  a   mezard  m     zecchina  r          survey propagation  an algorithm for
satisfiability  random structures and algorithms         
braunstein  a     zecchina  r          survey propagation as local equilibrium equations 
journal of statistical mechanics  theory and experiment            
braunstein  a     zecchina  r          learning by message passing in networks of discrete
synapses  physical review letters             
chieu  h  l     lee  w  s          relaxed survey propagation  a sum product algorithm
for max sat  in aaai    twenty third aaai conference on artificial intelligence 
chieu  h  l   lee  w  s     teh  y  w          cooled and relaxed survey propagation for
mrfs  in nips    advances in neural information processing systems     cambridge  ma  mit press 
cook  s  a          the complexity of theorem proving procedures  in stoc     third
annual acm symposium on theory of computing  pp          new york  ny  usa 
acm 
   

fichieu   lee

cooper  g  f          the computational complexity of probabilistic inference using
bayesian belief networks  research note   artif  intell                    
daude  h   mezard  m   mora  t     zecchina  r          pairs of sat assignments in random
boolean formul  theor  comput  sci                     
davis  m   logemann  g     loveland  d          a machine program for theorem proving 
commun  acm                
davis  m     putnam  h          a computing procedure for quantification theory  journal
of the acm  jacm                 
de givry  s   heras  f   zytnicki  m     larrosa  j          existential arc consistency 
getting closer to full arc consistency in weighted csps   in ijcai    nineteenth
international joint conference on artificial intelligence 
dubois  o     dequen  g          a backbone search heuristic for efficient solving of hard  sat formulae  in ijcai    seventeenth international joint conference on artificial
intelligence  pp         
een  n     sorensson  n          minisat   a sat solver with conflict clause minimization 
in sat    eighth international conference on theory and applications of satisfiability testing 
hoos  h  h          an adaptive noise mechanism for walksat  in aaai    eighteenth
national conference on artificial intelligence  pp         
kaporis  a  c   kirousis  l  m     lalas  e  g          the probabilistic analysis of a greedy
satisfiability algorithm  random structures and algorithms                 
kirkpatrick  s   jr   c  d  g     vecchi  m  p          optimization by simulated annealing 
science              
kirousis  l  m   kranakis  e   krizanc  d     stamatiou  y  c          approximating the
unsatisfiability threshold of random formulas  random structures and algorithms 
               
kroc  l   sabharwal  a     selman  b          survey propagation revisited  in uai   
twenty third conference on uncertainty in artificial intelligence 
kroc  l   sabharwal  a     selman  b          message passing and local heuristics as
decimation strategies for satisfiability  in sac       th annual acm symposium on
applied computing 
kschischang  f  r   frey  b     loeliger  h  a          factor graphs and the sum product
algorithm  ieee transactions on information theory         
lardeux  f   saubion  f     hao  j  k          three truth values for the sat and maxsat problems  in ijcai    nineteenth international joint conference on artificial
intelligence 
larrosa  j     heras  f          resolution in max sat and its relation to local consistency in weighted csps  in ijcai    nineteenth international joint conference on
artificial intelligence 
levin  l  a          universal search problems  problemy peredaci informacii            
   

firelaxed survey propagation for the weighted max sat problem

li  c  m     anbulagan         heuristics based on unit propagation for satisfiability problems  in ijcai    fifteenth international joint conference on artificial intelligence 
pp         
li  c  m   manya  f     planes  j          detecting disjoint inconsistent subformulas for
computing lower bounds for max sat  in aaai    twenty first aaai conference
on artificial intelligence 
maneva  e   mossel  e     wainwright  m          a new look at survey propagation and
its generalizations  http   arxiv org abs cs cc         
mcallester  d   selman  b     kautz  h          evidence for invariants in local search  in
aaai    proceedings of the fourteenth national conference on artificial intelligence 
pp          providence  rhode island 
mezard  m   mora  t     zecchina  r          clustering of solutions in the random satisfiability problem  physical review letters             
mezard  m     parisi  g          the cavity method at zero temperature  journal of
statistical physics      
mezard  m     zecchina  r          the random k satisfiability problem  from an analytic
solution to an efficient algorithm  physical review e     
minton  s   philips  a   johnston  m  d     laird  p          minimizing conflicts  a heuristic
repair method for constraint satisfaction and scheduling problems  artificial intelligence             
moskewicz  m  w     madigan  c  f          chaff  engineering an efficient sat solver 
in dac    thirty ninth design automation conference  pp         
murphy  k   weiss  y     jordan  m          loopy belief propagation for approximate
inference  an empirical study  in uai    fifteenth annual conference on uncertainty
in artificial intelligence  pp         san francisco  ca  morgan kaufmann 
pearl  j          probabilistic reasoning in intelligent systems  networks of plausible inference  morgan kaufmann publishers inc   san francisco  ca  usa 
pipatsrisawat  k     darwiche  a          rsat      sat solver description  tech  rep  
automated reasoning group  computer science department  ucla 
prestwich  s  d          local search on sat encoded colouring problems   in giunchiglia 
e     tacchella  a   eds    sat  vol       of lecture notes in computer science  pp 
        springer 
rabiner  l     juang  b          fundamentals of speech recognition  prentice hall 
selman  b   kautz  h  a     cohen  b          noise strategies for improving local search 
in aaai    twelfth national conference on artificial intelligence  pp         
selman  b   levesque  h  j     mitchell  d          a new method for solving hard satisfiability problems  in aaai    tenth national conference on artificial intelligence 
pp          aaai press 
shang  y     wah  b  w          a discrete lagrangian based global searchmethod for
solving satisfiability problems  journal of global optimization               
   

fichieu   lee

tompkins  d     hoos  h          ubcsat  an implementation and experimentation environment for sls algorithms for sat and max sat  in sat    seventh international
conference on theory and applications of satisfiability testing 
tseitin  g  s          on the complexity of derivations in the propositional calculus  studies
in mathematics and mathematical logic  part ii         
yedidia  j   freeman  w     weiss  y          generalized belief propagation  in nips   
advances in neural information processing systems     pp         
yedidia  j   freeman  w     weiss  y          constructing free energy approximations
and generalized belief propagation algorithms  ieee transactions on information
theory         
zhang  w          phase transitions and backbones of   sat and maximum   sat  in
proceedings of the seventh international conference on principles and practice of
constraint programming 

   

fi