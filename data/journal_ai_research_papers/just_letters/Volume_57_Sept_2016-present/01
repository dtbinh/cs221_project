journal artificial intelligence research                 

submitted       published     

pdt logic  probabilistic doxastic temporal logic
reasoning beliefs multi agent systems
karsten martiny
ralf moller

karsten martiny uni luebeck de
moeller uni luebeck de

institute information systems 
universitat zu lubeck
lubeck  germany

abstract
present probabilistic doxastic temporal  pdt  logic  formalism represent
reason probabilistic beliefs temporal evolution multi agent systems 
formalism enables quantification agents beliefs probability intervals
incorporates explicit notion time  discuss time agents dynamically
change beliefs facts  temporal rules  agents beliefs respect
new information receive  introduce appropriate formal semantics pdt logic
show decidable  alternative options specifying problems pdt logic
possible  problem specifications  develop different satisfiability checking
algorithms provide complexity results respective decision problems  use
probability intervals enables formal representation probabilistic knowledge without
enforcing  possibly incorrect  exact probability values  incorporating explicit notion
time  pdt logic provides enriched possibilities represent reason temporal
relations 

   introduction
logical analysis knowledge belief active topic research diverse fields
philosophy  hintikka         economics  aumann         game theory  harsanyi 
          a      b   computer science  fagin  halpern  moses    vardi         numerous extensions modal epistemic logic made reason knowledge
multi agent settings  fagin et al         baltag   moss         add probabilistic knowledge  fagin   halpern        cripps  ely  mailath    samuelson         analyze
dynamic evolution knowledge  van ditmarsch  van der hoek    kooi        
realistic scenarios  agent incomplete inaccurate information
actual state world  thus considers several different worlds actually
possible  receives new information  e g   observes facts currently
hold   update beliefs possible worlds consistent
new information  updates example result regarding  previously
considered possible  worlds impossible judging worlds likely
before  thus  addition analyzing set worlds agent believes possible 
useful quantify beliefs terms probabilities  provides means
specify fine grained distinctions range worlds agent considers possible
highly unlikely  worlds seem almost certainly actual world 
c
    
ai access foundation  rights reserved 

fimartiny   moller

multiple agents involved setting  agent may varying
beliefs regarding facts actual world  regarding beliefs agents 
many scenarios  actions one agent depend belief ontic facts
 i e   facts actual world   beliefs agents beliefs 
illustrate reasoning agents beliefs yield significant advantages
practical scenarios  start following informal description application
cyber security domain  a formal analysis example using pdt logic
presented martiny  motzek    moller         suppose adversary trying
break computer system  usually done attack graph detect
exploit potential vulnerabilities system  attack graph specifies set
paths  i e   sequences actions  carry attack  several paths attack graph
might used parallel  potentially different agents  for instance  number infected
computers controlled botnet   usually  attack patterns specified one attack graph
used multiple times  two important ramifications  adversary learn
experience paths yield high probability successfully breaking
system  defenders turn able gain knowledge attack graph
repeated observation certain patterns  thus  system attack  defender
beliefs chosen attack paths adversarys belief regarding
success respective path  thus  defender choose countermeasures effectively
reacting paths nested beliefs high indeed pose threat
according systems mission impact model 
formalize reasoning beliefs multi agent settings  present probabilistic doxastic temporal  pdt  logic  pdt logic builds upon recent work annotated
probabilistic temporal  apt  logic  shakarian  parker  simari    subrahmanian       
shakarian  simari    subrahmanian        provides formalism enables representing reasoning dynamically changing quantified temporal multi agent beliefs
probability intervals incorporates subset epistemic actions  baltag   moss 
       using concepts apt logic semantic foundation  pdt logic merges work
epistemic logic recent work temporal logic shakarian et al  apart
reasoning imprecise probabilities  introduces temporal concept frequency
functions epistemic temporal logic 
quantifying probabilistic knowledge probability intervals instead single probability values yields two main advantages  one hand  using probability intervals
significantly eases task formally representing existing knowledge human domain
expert  cases  domain expert give reasonable probability estimates
knowledge  inevitably fail giving correct precise numerical values probabilities  consider instance weather forecast  people find easy give coarse
probabilistic quantifications chance rain high  virtually nobody
could quantify exact numerical value  employing exact numerical values
formal representation would inevitably introduce errors probability model 
thus  use probability intervals provides means express probabilistic knowledge
precisely possible without enforcing unrealistic precision  hand 
many scenarios probabilities  and even rough estimates them  simply unavailable  bounds values may known  illustrate this  consider scenario
described ellsberg        
  

fipdt logic

example      the ellsberg paradox  ellsberg         imagine urn known contain
   red balls    black yellow balls  latter unknown proportion  one ball
drawn random urn  following actions considered  action
bet red  ii bet black 
now  easy see rational agent would believe action successful
probability      action ii  quantification possible
respective probability unknown  yet omitting probabilistic information action
ii altogether would ignore available information unknown probability value 
namely somewhere        example exhibits two different types
uncertainty  former action subject risk  i e   outcome unknown 
occurs known probability  later action subject ambiguity  also known
knightian uncertainty   probability unknown  bradley        
probability intervals  pdt logic able work imprecise probabilities 
width probability interval give additional information certainty
probability quantification  naturally  narrow interval associated high certainty
respective probability vice versa  wide interval associated low certainty 
pdt logic employs explicit notion time thereby facilitates expression
richer temporal relations  allows analysis temporal doxastic problems
beyond scope previous work  resulting framework provides means reason
temporal evolution beliefs multi agent systems  two different applications
framework possible  first  agent respective multi agent system
employ framework online run system reason beliefs 
analyzing nested beliefs introduced above  gives agent means reason
probable evolutions agents belief states  second  framework used
offline external observer analyze whether desired evolutions given system
possible 
remainder work structured follows  next section presents related
work knowledge multi agent systems apt logic  then  section   
syntax pdt logic introduced  followed definition formal semantics  decision
algorithms complexity results pdt logic discussed section   
formally defined semantics based precise probability values  section shows
satisfiability pdt logic decided even imprecise probabilities given 
finally  paper concludes section   

   related work
approaches formalize reasoning knowledge belief date back hintikkas work
epistemic logic  hintikka         hintikka proposed represent knowledge sets
states worlds  together binary relation every agent  determine worlds
indistinguishable agent  approach sparked multiple branches research
epistemic logic  still active topics research today  branches research
broadly classified four  not mutually exclusive  areas relevant
work  multi agent epistemic logic  probabilistic epistemic logic  epistemic temporal logic 
  

fimartiny   moller

dynamic epistemic logic   following  give overview key contributions
area discuss existing approaches merge fields research 
early research epistemic logic culminated influential work reasoning
knowledge  fagin et al          provides unified presentation various preceding
contributions epistemic logic  work uses so called interpreted systems approach
represent knowledge multi agent systems  time represented runs 
run sequence systems global states thus identifies state system
every time point  among contributions  work provides notions multiagent epistemic modalities nested knowledge  distributed knowledge  common
knowledge 
several works extended epistemic logic represent dynamic evolutions knowledge  direction research known dynamic epistemic logic  del   first formal
analysis dynamics knowledge presented plaza        reprinted plaza 
       contribution  plaza introduces public communication events  now commonly
known public announcements  analyze dynamic evolution knowledge groups
upon truthful public announcements facts group agents  independently
plaza  related approach public announcement logic proposed gerbrandy
groeneveld         baltag  moss  solecki        baltag moss        generalize dynamic approach epistemic logic incorporate variety complex epistemic
actions  here  epistemic updates represented kripke models 
extends dynamic epistemic logic represent variety additional epistemic actions
private group announcements  i e   announcements agents outside receiving
group unaware announcement   lies  i e   untruthful announcements   combinations thereof  pdt logic  use public private group announcements 
assume announcements truthful  thorough treatment dynamic epistemic
logic given van ditmarsch et al          van eijck        provides recent overview
field 
alternative approach modeling evolution knowledge combine epistemic
logic temporal system  one example aforementioned interpreted
systems fagin et al          another approach modeling temporal aspects epistemic logic proposed parikh ramanujam         approach known
epistemic temporal logic  etl   here  possible situations represented sets
histories  local histories every agent  represent respective agents previous
observations  based histories  knowledge based semantics messages defined 
shown messages vary meaning  depending respective context
messages receiver  temporal model employ pdt logic closely related
epistemic temporal logic  instead specifying local histories every agent  define
semantics pdt logic respect global history  however  local contexts
   simplify following discussion  explicitly distinguish epistemic doxastic
logics section  use epistemic general term  strictly speaking  epistemic formalisms
deal knowledge  doxastic formalisms deal beliefs  usual axiomatic definition
knowledge literature uses truth axiom  stipulates agent know true
facts  omitting axiom leads notion belief  even though unanimously accepted
 cf  e g   halpern  samet    segev         axiom usually considered key distinction
knowledge belief 

  

fipdt logic

sense etl easily extracted global history filtering history
respective agents observations 
traditional work epistemic logic discussed far allow quantify
agents degree belief certain facts  specified whether agent
know  resp  believe  fact  remove limitation  several approaches
proposed combine logics knowledge belief probabilistic quantifications 
fagin halpern        laid foundation combination seminal paper 
define belief operator quantify lower bounds probabilities agent
assigns formula  modeled associating probability space state
agent  framework  generally guaranteed formulae define
measurable sets  present properties guarantee measurability
sets  contrast  semantics defined pdt logic always produces events
measurable probabilities  special case framework introduced fagin halpern
presented milch koller         pdt logic  formalism
assumed  i  exists common prior probability distribution set worlds
 ii  agents local probability distribution world derived
global distribution conditioned respective set worlds agent considers possible 
additional feature milch koller models represented bayesian
networks find probabilities defined formulae  van der hoek        introduces
logic pf d  later extended de carvalho ferreira  fisher  van der hoek
        fagin halpern  framework introduces operator quantify
lower bounds probabilistic beliefs  probabilistic values work semantically
restricted finite base set probability values  yielding logically compact framework
enables efficient implementations 
variety approaches proposed extend probabilistic epistemic logics
dynamic frameworks  kooi        restricts probabilistic epistemic logic fagin
halpern        finite settings combines dynamic epistemic logic
gerbrandy groeneveld        create probabilistic dynamic epistemic logic
 pdel   work analyzes effects probabilistic beliefs upon public announcements 
framework based dynamic epistemic logic  capabilities
represent temporal relationships  features regarding past cannot expressed all 
features regarding future expressed limited extent result
certain actions  van benthem        extends framework analyze results
various epistemic actions described baltag et al          another extension
framework proposed van benthem  gerbrandy  kooi      b   different
sources probabilities distinguished  simplification approach presented
van eijck schwarzentruber         paper distinguishes work
probabilistic epistemic logic certainty equated knowledge  works
make explicit distinction belief probability   knowledge  difference
two concepts often illustrated repeatedly throwing fair coin 
event coin shows head least   infinite number repetitions 
yet agent know example coin eventually show head  pdt
logic works countable models finite time frames  adopt view
van eijck schwarzentruber consider certainty knowledge equivalent
models  deviating approaches extend epistemic logic probabilities  pdt
  

fimartiny   moller

logic provides belief operator probability interval quantifications  lower
upper bounds probability values specified explicitly  provides
natural means represent imprecise probabilities discussed introduction 
another direction probabilistic extensions discussed halpern pucella       
doder  markovic  ognjanovic  perovic  raskovic         example  approaches consider problem estimating unknown prior probabilities based given
evidence  essentially  unknown priors represented set hypotheses 
likelihood hypothesis given specific observations estimated  approaches 
hypotheses represent possible configurations world thus satisfiable 
contrast  aim pdt logic verify whether possible assignment priors exists
given set formulae satisfiable 
dynamic epistemic logic  possible reason step wise changes
future  order reason temporal relations  sack        extends update
mechanism dynamic epistemic logic temporal operators  namely previous time
next time operators  sack        extends approach probabilistic frameworks augmenting work probabilistic dynamic epistemic logic  kooi       
previous time operator ability reason continuous probabilities 
approaches enrich dynamic epistemic logic ability reason events
past  van benthem  gerbrandy  hoshi  pacuit      a  give systematic precise
comparison etl  called tel van benthem  gerbrandy  hoshi  pacuit 
del shown approaches merged single framework 
shakarian et al         shakarian et al         introduce apt logic  framework
represent probabilistic temporal evolutions worlds threads  apt logic assigns
prior probabilities every thread uses probabilities determine probabilities
events occurring specific threads  represent temporal relationships events 
apt logic introduces concept frequency functions  utilize approach apt
logic create doxastic multi agent framework supports explicit reasoning
temporal relationships adoption frequency functions  explicit
notion time formalism increases complexity decision problems  significantly
enhances expressibility temporal relations  instance  contrast approaches
implicit representations time  pdt logic able specify events occur
within certain time interval  cf  introduction frequency functions below  

   pdt logic  syntax semantics
section  discuss beliefs multi agent systems formalized  start
defining syntax pdt logic  discuss employed model time  provide
formal semantics  proposed formalism enables expression different types
beliefs quantify beliefs using imprecise probabilities  introducing suitable
update rule show agents beliefs evolve time agents update
beliefs new information correctly integrated belief state 
  

fipdt logic

    syntax
assume existence function free quantifier free fragment first order logic 
language l finite sets constant symbols lcons predicate symbols lpred  
infinite set variable symbols lvar   every predicate symbol p lpred arity  term
member set lcons lvar   term called ground term member
lcons   t        tn  ground  terms  p predicate symbol lpred arity n 
p t         tn    ground  atom   ground  atom   ground 
literals  former called positive literal  latter called negative literal  set
ground literals denoted llit   usual  b denotes herbrand base l  i e  
set ground atoms formed lpred lcons  
time modeled discrete steps assume agents reason arbitrarily large  fixed size window time  set time points given            tmax   
set agents denoted a  again  assume set may arbitrarily large 
finite size  describe agents observe  define observation atoms follows 
definition      observation atoms   non empty group agents g
ground literal l llit   obsg  l  observation atom  set observation atoms
denoted lobs  
intuitively  meaning statement form obsg  l  agents group
g observe fact l holds  note l may negative literal therefore
explicitly specify observations certain facts false  such raining  
assume agents g observe l holds  agent g
aware agents g make observation  line baltag moss
        observations viewed effects private group announcements fact
l group g  i e   l becomes common knowledge within g  agents outside g
remain entirely oblivious observation   represents epistemic action  i e   alters
belief states agents g  as formally defined below   influence
ontic facts respective world 
definition      formulae   atoms observation atoms formulae  f g
formulae  f g  f g  f formulae  formula ground atoms
formula ground 
example      coin toss   consider two agents      coin tossed  event
coin lands heads denoted primitive proposition head  accordingly 
coin lands tails denoted head  let us assume coin actually lands heads 
then  sets possible observations scenario  obs     head     obs     head   
 obs     head   obs     head     obs       head   
note difference third fourth set  former
scenario  agents observe outcome coin throw unaware
agent actually made observation  latter scenario  agents observe
outcome aware agent observes same  since allow
   use first order structure language definition syntactically convenient way
representing observations  apart this  propositional logic could used base language 

  

fimartiny   moller

nesting observations  i e   expressions obsg   obsg   l    pdt logic 
subset epistemic actions discussed baltag moss        represented
formalism  limits expressivity epistemic actions extent 
ensure resulting set possible observations lobs always finite therefore
show pdt logic decidable  as shown section     further  note
formal concept observations limited express passive acts observing facts 
instead used model wide range actions  instance  example
one could use obs       head  model act one agent telling
outcome coin throwthe ramifications communication act exactly
would shared observation  assuming agents lie  
express temporal relationships  define temporal rules following approach
apt rules shakarian et al          definition temporal rules already relies
concept frequency functions  even though defined next section 
still introduce temporal rules enable clearly separated presentation syntax
semantics pdt logic 
definition      temporal rules   let f  g two ground formulae  time interval 
fr  f  g 
fr name frequency function  as defined section         rt
called temporal rule 
frequency functions provide information temporal connections events 
fr  f  g  understood f followed g
meaning expression rt
time units w r t  frequency function fr  frequency functions enable specification
various types temporal relations  example  used determine often
f followed g within time units often f followed g exactly
time units  usage fr syntax temporal rules used specify set possible
names employed types frequency function 
  u
  u
now  define belief operator bi t
  express agents beliefs  intuitively  bi t    
means time t    agent believes fact true probability p     u  
particularly  intuitive meaning belief temporal rule agent believes
fr  f  g   given f holds time point  call
g hold according rt
probability interval     u  quantification agent belief  use ft denote
formula f holds time and  accordingly  obsg  l t denote observation
obsg  l  occurs time t  call expressions time stamped formulae timestamped observation atoms  respectively 
definition      belief formulae   let agent  t  time point      u         
then  belief formulae inductively defined follows 
  u
   f ground formula time point  bi t
   ft   belief formula 
fr  f  g  temporal rule  b   u  r fr  f  g   belief formula 
   rt
i t 
  u
   f g belief formulae  bi t
   f    f g   f g   f  
  u
belief bi t
     something  call belief object  belief operators
  u
atomic elements pdt logic  i e   expression bi t
      including possibly nested belief

  

fipdt logic

formulae  called atom  use script fonts  e g   f   distinguish belief formulae
standard formulae  note ontic facts observation atoms
standard formulae  cf  definition      therefore agents beliefs
possible observations 
use probability intervals     u  provides option represent imprecise probabilities  bradley         using imprecise probabilities  usually assumed
degree belief proposition represented using single probability function p    instead set p functions  then  belief state p   
proposition represented set
p       p     p p   
set probabilities p     so called lower upper envelopes defined p     
inf p    p      sup p     respectively  belief quantifications belief operator
represent imprecise probabilities   u values probabilistic belief
considered lower upper envelopes p p respective imprecise probability 
  u
remark      decided index belief operators bi t
     facts ft appearing
belief objects time stamps allow concise representation temporal
relations  alternatively  one could use traditional approach  cf  sack      
example  introduce previous time next time operators language express
  u
temporal relationships t  bi t
   ft    then  could omit temporal
 
index belief operator instead evaluate whether belief holds time t 
model  however  merely syntactic considerations impact
underlying formalism  thus decided encode time explicitly belief operators
avoid introduction additional temporal operators  moreover  belief operators
used express general temporal relationships modeled domain 
illustrate point detail section   

    semantics
section  provide formal semantics pdt logic captures intuitions
explained above  ease understanding presentation  start introduction
example  return repeatedly introducing various concepts
semantics  illustration formalisms features  use simplified exemplary
domain  practical use example somewhat limited  serves illustrate
pdt logic applied  especially analysis multi agent beliefs
yield valuable information deciding meaningful actions  resulting insights
easily applied sophisticated domains 
example      trains   let alice bob two agents living two different cities ca
cb   respectively  suppose alice wants take train visit bob  unfortunately 
direct connection cities ca cb   alice change trains
third city cc   assume train t  connects ca cc   train t  connects cc
cb   trains usually require   time units trip  might running late
arrive one time unit later scheduled  alice requires one time unit change trains
city cc   t  runs time  direct connection t    otherwise wait
  

fimartiny   moller

two time units next train t  leaves city cc   train running late 
call bob let know  calls modeled shared observations
alice bob  instance  alice wants tell bob train t  running late  i e   t 
arrive cc expected time   modeled obs ab   at t    cc   
expected arrival time 
      possible worlds
ontic facts corresponding observations  e g   described example  form
worlds  or states terminology fagin et al          world consists set
ground atoms set observation atoms  i e    blobs    use
obsg  l  denote atom a  resp  observation atom obsg  l   holds world  
since agents observe facts actually hold respective world  define
admissibility conditions worlds w r t  set observations 
definition      admissible worlds   world admissible  iff every observation atom
obsg  l 
   observed fact holds  i e   x l positive literal x  x   l negative
literal x 
   every subgroup g   g  obsg    l   
use adm   denote world admissible 
set possible worlds denoted set admissible worlds  
following discussion section assume specification given 
possible employ usual definition set combinations
ground atoms observation atoms      blobs    maximum subset
complying definition      usually contains vast number worlds
blatantly impossible according respective problem modeled  therefore  assume
succinct specification set admissible worlds depending respective domain
given  main reason assumption simplify following presentationwe
describe method obtain set algorithmically section   
remark      already discussed section      group observations obsg  l  every
agent g aware agents g observed fact  together
definition      semantics observations equivalent usual semantics
common knowledge  fagin et al         give definition common knowledge
fixed point axiom  fact l common knowledge among group g members
g know l true common knowledge  thus  could equivalently use
established common knowledge operator cg  l  instead previously defined observation
   formalisms epistemic logic encode facts directly worlds  instead use set
named states s    s        valuation function  si   determine facts hold world si  cf 
fagin et al          mainly done obtain option multiple worlds si   sj
facts hold  i e    si      sj     knowledge states agents differ  described below 
pdt logic worlds appear within threads  thus possible worlds valuation
appear time point multiple threads  thus  formalism encode facts directly
possible worlds save valuation function without limiting epistemic expressivity 

  

fipdt logic

atoms obsg  l   however  concept common knowledge usually used describe
emergent states agents knowledge  hand  context approach 
observations extrinsic feature result emergence belief states 
keep clear distinction intended use operator  therefore continue
use obsg  l  instead cg  l  
example      trains continued   example      ground terms a  b  ca   cb  
cc   t    t    representing alice  bob  three cities  two trains  furthermore 
atoms on y  x  indicating person train x  at x  z  indicating train x
city z  finally  observation atoms kind obsg  at x  z    indicating
agents g observe train x station z  possible world example
     at t    ca    on a  t     obs a   at t    ca      indicating train t  city ca
boarded train 
define satisfaction ground formula f world usual way  lloyd 
      
definition      satisfaction ground formulae   let f  f     f    ground formulae
world  then  f satisfied  denoted    f   if 
case f   ground atom a 
 
case f   f   ground formula f    

case f   f   f    formulae f   f     

case f   f   f    formulae f   f     

    f    

   f      f     

   f      f     

say formula f tautology    f admissible worlds  
say formula f contradiction world    f   use
usual symbols   denote tautologies contradictions  respectively 
      threads
model temporal evolutions problem domain use definition threads
shakarian et al         
definition      thread   thread h mapping set time points
set admissible worlds  h  
thus  thread sequence worlds h t  identifies actual world time
according thread h  set possible threads  i e   possible sequences constructible   denoted   again  refrain directly working
  instead assume meaningful problem specification gives information
possible temporal evolutions system  use represent set relevant possible threads  notational convenience  assume additional prior world
h    every thread 
following definition      use h    ft denote thread h satisfies formulae f
time  i e   h    ft h t     f    accordingly  use    ft denote every
thread h satisfies formula f time t 
  

fiobs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

obs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

    h 

    h 

h 

h 

 

 

hi

h 

  h 
on a  t   
at t    cc  
on a  t   

on a  t    on a  t   
at t    ca  
on a  t    on a  t   

 

at t    cc  

at t    ca  

 

on a  t   

on a  t    on a  t   

 

at t    cc  

at t    ca  

at t    ca  

at t    ca  

at t    ca  

at t    ca  

on a  t   

on a  t   

on a  t   

on a  t   

 
 

 

on a  t    on a  t   

at t    cc  

at t    cc  

 

on a  t   

at t    cb  

 

obs a 
at t    cb  
 at t    cb   
on a  t    on a  t    on a  t    on a  t   

at t    cc  

 

at t    cb  

at t    cc  
on a  t   

at t    cb  
on a  t   

 



obs a 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t    on a  t    on a  t   

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

  h 

obs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

    h 

at t    ca  

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

at t    ca  

    h 

martiny   moller

figure    visualization possible threads hi example      easier distinction  shared observations b marked blue  single observations
marked red  situations alice train   train  
marked green orange  respectively  note train running late
 the respective threads marked according circles   always two
possible threads  one observes one share
observation 
  

fipdt logic

assume system synchronous  i e   agents global clock  thus 
even agent observe anything world h t   still aware time passing
therefore distinguish worlds h t  h t    
example      trains continued   description example      p      yields
set possible threads depicted figure    note manually specified set
threads containing threads comply description example     
set possible threads would contain vast number additional threads
irrelevant described scenario 
      kripke structures
definition threads  use slightly modified version kripke structures
 kripke         usual  define kripke structure tuple h  k         kn i 
set admissible worlds binary relations ki every agent a  thus 
kripke relation  also called possibility relation  agent world defined
ki                   ki  

   

intuitively         ki specifies world   agent considers   possible
world  words  current information agent unable distinguish worlds
   
initialize kripke structure threads considered possible time
    
 
h   ki  t h      
 t h       
   
h 

evolution time  agent eliminate worlds comply
respective observations  elimination worlds  agent reduce
set threads considers possible  ifdue observationa world considered
impossible time point t  threads h h t    considered impossible  
assume agents perfect recall therefore consider thread
possible considered impossible one point  thus  ki updated w r t 
agents respective observations  considers threads possible comply
current observations considered possible previous time point 

ki  t h t     h   t    h   t    ki  t h t    

 obsg  l  h t    g     obsg  l  h   t    g 
   
following two corollaries describe key properties ki follow immediately
definitions         
corollary      equivalence relation   ki defines equivalence relation possible
worlds ki  t h t   time points  
corollary      reduction considered threads   set threads h  considered possible
w r t  ki narrowing smaller smaller subset time  i e    t h    h   t 
ki  t h t     t h    h   t    ki  t h t      h  
  

fimartiny   moller

note updates ki defined new information incorporated instantaneously  i e   time agent observes fact  updates possibility relations
already time considers every world impossible comply
observation time t 
example      trains continued   figure    obtain time   
possible world  at t    ca    on a  t      contained possible threads  thus 
ki  t hj      contains exactly world agents threads j  consequently 
agents consider threads possible time   
now  assume time evolves two steps actual thread h   i e   train
t  running late  inform b this   agents update
possibility relations accordingly  yielding
ka  t h           obs a   at t    cc     on a  t     

kb  t h           at t    cc    on a  t       obs a   at t    cc     on a  t      
i e   knows t  time  b unaware t  late  since still
considers situation possible train t  city cc time     
      subjective posterior temporal probabilistic interpretations
agent probabilistic beliefs expected evolution time  expressed subjective temporal probabilistic interpretations 
definition      subjective posterior probabilistic temporal interpretation   given set
possible threads   thread th   time point t      agent i  function
th          specifies subjective posterior probabilistic temporal interpretation
ii t
 
agent point view time t  thread th  i e   probability distribution possible
p
th  t h       since probabilistic interpretations possible threads
threads  ht ii t
 
depend respective perspective agent i  th marks point view subjective

interpretation  thus  call th point view  pov  thread interpretation h   
i t

concept point view threads seen conditional probabilities  subjecth specifies agent probabilistic interpretation
tive posterior probabilistic interpretation ii t
 
time t  given th actual thread  different threads yield different evolutions
world andsince every possible thread taken pov thread may induce
different probabilistic interpretations agent  thus  notion pov threads allows
reason hypothetical beliefs agent  instance possible future beliefs
analyzed nested beliefs evaluated 
th vector occasionally represent probabilistic
simplify notation  see ii t
 


h vector possible threads vector well  jth
interpretation ii t
 


h refers probability assigned thread h  
element ii t
 
j



h  t h   since
prior probabilities agent threads given ii  
threads indistinguishable priori  single prior distribution needed

  

fipdt logic

 



 

h  t h    h  t h    furthermore  order
agent  i e   h  th  th   ii  
i  
able reason nested beliefs  as discussed below   assume prior
probability assessments agents commonly known  i e   agents know
agents assess prior probabilities thread   turn requires
agents exactly prior probability assessment possible threads  two
agents different  commonly known prior probability assessments  essentially
instance aumanns well known problem agreeing disagree  aumann 
       intuitively  differing priors commonly known  common knowledge
 at least  one agents fault revise probability assessments 
result  one prior probability distribution viewpoints 
denoted i  note directly corresponds concept temporal probabilistic
interpretations shakarian et al         

remark      could use prior probability distribution alternative method
distinguish set possible threads set threads relevant
specific problem domain  so  simply assign unwanted threads h  
probability zero 
example      trains continued   meaningful prior interpretation

i t                                                  
assigns highest probability h   no train running late   lower probabilities
threads one train running late informs b  t h  h     even lower
probabilities events either trains running late informs b  t h   
h    h    one train running late inform b  t h  h    
lowest probability thread trains running late
inform b  t h     note represents prior interpretation train example
thus every agent every possible pov thread th 
even though single prior probability distribution set possible
threads  still necessary distinguish viewpoints different agents different
threads  following definition interpretation updates shows 
whenever agent updates kripke relations according equation      p      
necessary update probabilistic interpretations agent match new
knowledge  intuitive way update probabilities conditioning remaining
worlds agents kripke structure  want point conditioning suitable
choice pdt logic  although known produce undesired incorrect results
many cases  notably monty hall problem  vos savant         grunwald
halpern        discuss naive conditioning tends produce errors updates
carried simplified space several events collapsed since seemingly
one event  one uses so called sophisticated conditioning instead  i e   conditioning
sophisticated space  means possible events represented   probabilities
updated correctly  semantics pdt logic based exhaustive specification
relevant threads  conditioning proper specification relevant threads inherently
sophisticated sense grunwald halpern therefore produce correct
results  one easily verify following update rule  well known probability
  

fimartiny   moller

puzzles monty hall problem correctly represented pdt logic  thus 
use following conditioning based update rule 
definition      interpretation update   let agent  t  time point  th pov
thread  then  system actually thread th time t    agent probabilistic
interpretation set possible threads given update rule 

th  t h  h t    k  th t    
  ii t
   

h
th

 
i t
ii t   t h   
   
 
h t      ki  th t    


 
h

i t 

normalization factor ensure


x

th
i t
   

ht  

p



ht

h  t h      
ii t
 



th
ii t
     t h 

   

h t   ki  th t    

invocation ki update rule yields obvious ramifications evolution
interpretations  stated following corollary 
corollary      nonzero probabilities   subjective temporal probabilistic interpretation
th agent assigns nonzero probabilities exactly set threads still
ii t
 

considers possible time t    i e   h   t h      iff  t h t   th t   ki
i t

essentially  update rule assigns impossible threads probability zero
scales probabilities remaining threads proportional
probabilities previous time point  given prior probability distribution
th specific pov thread
set possible threads  subjective posterior probabilities ii t
 
 

h agents time points induced respective observations contained


th  use h denote set subjective posterior interpretations h  induced
i t

pov thread th 

example      trains continued   applying update rule     situation
described example      p       given example      yields updated
interpretation a 


h 
ia  
                         



   

i e   considers exactly threads possible  train running late
inform b  threads h    h    h     due lack new information  b
eliminate situations indeed inform late time
point    thus bs interpretation updated to 

th 
ib  
                                     
  

   

fipdt logic

h   

h   

h   

h   

h   

h   

h   

h   

f

g

f

g

g

f

g

f

figure    example thread h                adopted shakarian et al         
figure shows world satisfies formula f formula g 

      frequency functions
represent temporal relationships within threads  adapt concept frequency functions introduced shakarian et al          frequency functions provide flexible way
representing temporal relations occurrences specific events  illustrate
motivation behind using frequency functions  consider exemplary thread h depicted
figure    thread  one events f g occurs every time point    
     discussed shakarian et al   multiple ways characterizing temporal
relationships events f g  instance  one might specify often event
f followed event g in  say  exactly   time points  according figure    happens
one four occurrences f h  might prove meaningful exclude final
occurrence f h determining frequency  naturally occurrence
f tmax cannot followed subsequent occurrence g  excluding final
occurrence f would yield one three desired frequency  alternatively  one
could specify often f followed g within next two time points 
exemplary thread figure    would produce frequencies        respectively 
depending whether final occurrence f included 
example illustrates already four different possible definitions temporal relations
events  maintain flexibility expressing temporal relations  commit specific definitions pdt logic  instead adapt axiomatic definition
frequency functions 
definition       frequency functions  adapted shakarian et al          let h
thread  f   f     g  g  ground formulae    integer  frequency
function fr maps quadruples form  t h  f  g  t         following
axioms hold 
 ff    f g  tautology  fr t h  f  g  t      
 ff    f g  contradiction  fr t h  f  g  t      
 ff    f g  neither tautology contradiction  exist threads h   
h  fr t h    f  g  t     fr t h    f  g  t  
 ff   f f   g g    fr t h  f  g  t    fr t h  f     g    t  
axioms  ff    ff   ensure special casesi e    g      f   
 f    g  frequency functions behave temporal implications premise
f conclusion g  axiom  ff   enforces non trivial frequency functions requiring
cases covered first two axioms  must least two threads
  

fimartiny   moller

differing frequency values  axiom  ff   ensures fr congruent logical
equivalence  examples frequency functions satisfying axioms introduced below 
remark      definition mostly corresponds definition frequency functions
shakarian et al          except require      work
shakarian et al   frequency functions intended express temporal relationships
therefore limited nonzero values  additionally allowing      obtain
concise framework express temporal relationships static constraints
within one time point  exploited next section  decision procedures
pdt logic discussed 
illustrate concept frequency functions  present formal definitions
point existential frequency functions adapted shakarian et al  represent
informal descriptions frequencies above 
point frequency function pfr expresses frequently event f followed
another event g exactly time units 
pfr t h  f  g  t   

  t   h t     f h t   t     g  
  t    t tmax t  h t     f   

   

denominator zero  define pfr    denominator counts total number
occurrences f given thread h numerator counts number occurrences
f followed g exactly time units  thus  ratio pfr expresses frequently
f followed g exactly time units  note denominator considers
occurrences f time tmax t  done reflect previously discussed
intuition occurrences f last time points excluded
frequency  possibility followed subsequent g
time units 
existential frequency function efr expresses frequently event f followed
another event g within next time units 
efr t h  f  g  t   
efn t h  f  g  t     tmax  
 
  t    t tmax t  h t     f      efn t h  f  g  t  tmax t  tmax  

   


efn t h  f  g  t  t    t       t    t    t    h t     f

t   t  min t      t    t h t       g   

function ef n counts number occurrences f followed subsequent occurrence
g within next time units  first summand denominator counts
total number occurrences f time point tmax t  second summand
denominator  additional occurrences f followed g within time units 
intuition definition exclude occurrences f final time units
followed g  since g may occur within range t  range cannot
fully considered final time points  occurrences f according
subsequent occurrence g considered final time points  consequently 
  

fipdt logic

ratio efr expresses frequently event f followed g within next time
units without letting single occurrences f final time points decrease ratio 
returning exemplary thread h figure    evaluate frequency
functions given thread  suppose want determine often f followed
g exactly two time steps  expressed point frequency function 
 
pfr t h  f  g        
 
instead want know often f followed g within next two time steps 
use existential frequency function 
efr t h  f  g      

 
  
 

noted frequency functions used model temporal relationships
usually expressed temporal operators  instance  pfr     reflects
next operator efr   tmax reflects future operator  meaning
additional temporal operators captured definition
additional frequency functions  required 
      semantics belief operator
now  definitions subjective posterior probabilistic temporal interpretations
introduction frequency functions  provide formal semantics belief operators defined section      semantics extends definitions shakarian
et al         satisfiability static interpretations obtain formal definition
probabilistic multi agent beliefs  start providing definition semantics
atomic belief operators three different types beliefs  semantics compound belief
formulae  i e   involving connectives       defined definition      
definition       belief semantics atomic belief operator   let agent
th agent interpretation time t  pov thread th  then  follows
ii t
 
interpretation agent believes time t  probability range     u 
    belief ground formulae 
th    b   u  f    iff
formula f holds time  denoted ii t
 

i t 
 

x
ht  t h t   f



th
ii t
   t h  u 

    

    belief rules 
fr  f  g  holds  denoted th    b   u  r fr  f  g    iff
temporal rule rt
i t 
i t 
 

x
ht



th
ii t
   t h  fr t h  f  g  t  u 

  

    

fimartiny   moller

    nested beliefs 
   u
belief bj tj j    agent j holds time t   denoted


   u

h    b   u  b j j      iff
ii t
 
j t
i t 

 



x
ht
   u
h   b j j   
ij t
j t

th
ii t
   t h  u 

    

intuition behind semantics follows  beliefs ground formulae ft  
th  t h  agent time t  pov thread th
subjective posterior probabilities ii t
 
added threads h satisfy f time t  thus  sum      represents
th assigns f   sum within specified boundaries     u  
exact probability ii t
 

  u
respective belief b    ft   holds agent time t  pov thread th 
i t



h  t h  every thread
beliefs rules  subjective posterior probabilities ii t
 
fr  f  g   thus 
weighted corresponding frequency fr t h  f  g  t  rule rt

h  t h       represents exact probability th assigns
weighted sum ii t
 
i t 
temporal relation f g according frequency function fr  beliefs
fr  f  g  contains information type frequency
rules  belief object rt
function fr  constraints respective frequency values given belief
quantification     u   i e   agent probabilistic beliefs specific frequency
values 

remark      noted semantics beliefs rules      together
axiomatic definition frequency functions definition       p      yields certain
fr  f  g   g tautology f contradiction
constraints satisfiable beliefs rules rt
 i e   definition      ff  satisfied   holds respective frequency function
  u fr
fr t h  f  g  t      every possible thread h  thus  belief bi t
   rt  f  g  
satisfiable belief quantified u      regardless set threads
th   analogously  f tautology g
corresponding interpretation ii t
 
  u fr
contradiction  i e   ff  satisfied   belief bi t
   rt  f  g   satisfiable       
   u

  u
j j
nested beliefs bi t
     expression unnested first determining
   bj t
   u

   u

possible pov threads h agent j bj tj j    satisfied  bj tj j    corresponds
belief fact rule       respectively      used identify threads h
h    b  j  uj     otherwise  represents another belief formula  belief
ij t
j t
unnested recursively innermost belief expression obtained  then 
h    b  j  uj     agent subjective posterior probabilities th  t h 
threads h ij t
j t
i t 
added determine whether outer belief holds  note agent
know actual beliefs agent j  however  due assumption common equal
priors discussed section        agent able reason agent js hypothetical
interpretation updates given system specific thread  thus  agent able
compute      without knowing js exact beliefs 
example      trains continued   use point frequency function express beliefs
punctuality trains  assume b judge probability
  

fipdt logic

train running late  i e   arriving   instead   time units  expressed
temporal rule r pfr  at t    ca    at t    cc          yields following
belief formulae
      pfr
bi  
 r   at t    ca    at t    cc    

 
      pfr
bi  
 r   at t    cc    at t    cb    

 a  b  

    

temporal rules expressed belief formulae  obtain following frequencies
figure    p      
pfr t h  at t    ca    at t    cc          
pfr t h  at t    ca    at t    cc          
pfr t h  at t    cc    at t    cb           
pfr t h  at t    cc    at t    cb          

h  t h         h   

h  t h         h   

h  t h    h    h   

h  t h    h    h         h   

combining frequency values prior interpretation

i t                                                  
given example      p      yields sum
x
i t h  pfr t h  f  g           
ht

f   at t    ca    g   at t    cc   f   at t    cc    g   at t    cb    sum
within belief quantification     u              belief formulae      valid  note
prior probabilities example     specified trains
late probability  thus respective sums frequencies
same 
definitions  use belief fact f quantify
belief negation fact f  

  u
corollary      belief negated facts   let bi t
   ft   agents quantified temporal belief
fact f according definition       then  agents belief negation
    u 
 
 
fact f given bi t
   f         u u       

    evolution time
order completely specify problem pdt logic  introduce concept doxastic
systems  following  assume syntactical objects finite 
 a  t  

definition       doxastic system   let set agents  set threads  a 
matrix prior probability distributions across every agent a  f
 a  t  

set frequency functions  then  call quadruple   ha    f  a 
system 
  

doxastic

fimartiny   moller

note several parameters discussed explicitly specified
doxastic system  neither set possible worlds   set ground atoms b  set
observation atoms lobs   set time points explicitly specified  however 
relevant information regarding parameters already contained specification
 

remark      since agents share common prior  rows a  same  thus 
one could obtain parsimonious problem specification providing single
unique row vector prior probabilities  choice using matrix a  nonetheless
notational purposes only  simplify presentation interpretation update
operations later on 
 a  t  

definition       admissibility doxastic systems   let   ha    f  a 

doxastic system  called admissible iff every world  implicitly  defined admissible
 a  t  

 according definition      p      rows a 

sum one 

identify specific situations doxastic system time passed
observations occurred  furthermore define pointed doxastic systems 
 a  t  

definition       pointed doxastic system  pds   let   ha    f  a 
doxastic
system h set time stamped observation atoms observation atoms
h occur least one worlds  implicitly  defined   call pair
hd  hi pointed doxastic system 
definition       admissibility pointed doxastic systems   let hd  hi pointed
doxastic system  set threads d  hd  hi called admissible iff
admissible exists thread h obsg  l t h   obsg  l  h t 
 i e   must contain least one thread complies timed observations h  
intuitively  set timed observations specified pds points certain situation
doxastic system  one could view t h    max t   obsg  l t h  present time
pds  recent observation occurred t h   observations actually occurred
past  t   t h   specified h  and thus deterministic retrospective  
information future observations   t h  given  sense  h specifies
certain history t h  doxastic system points last event history 
example      trains continued   doxastic system train example specified

  h a  b    t h         h      pfr  efr   a  i 




                                           
a   
 
                                           

identify situation described example      p      t  running late   specify
following pointed doxastic system 
hd   obs a   at t    cc      i
  

fipdt logic

      evolution probabilistic interpretations
accordance prior probability matrix a  definition       define

interpretation matrix att h store interpretations agents  with n denoting
number agents  a   across threads h         hm given doxastic system
pov thread th time t 


th  t h         th  t h  
i  t

 
  t



  
  
  

    
att h  
 
 
 






h  t h         h  t h  
in t

 
n t

definition ki equation      p       update rule equation    
 p       using prior probability matrix a  definition       provide

update matrix utt h calculate interpretation matrix pov thread th
time point   denotes element wise multiplication matrices  






h
att h   att 
utt h



 utt h  ij

 


 
 

th

i t 

hj  t    ki  th t  
hj  t  ki  th t  

    

    



h normalization factor defined equation      p      
i t
 
time stamped observations specified history h pds hd  hi induce
updated set reachability relations ki  t h t   every thread h complies
given observations  for threads h comply given observations
ki  t h  t        updated reachability relations turn yield updated interpre
tations att h   complete state interpretations time point every possible
pov thread th         thm specified block matrix  call belief
state  bs  pds time t 



bs hd  hi  t    att h         att hm
    

use bs hd  hi  denote sequence belief states bs hd  hi  t     
  tmax  
definition belief states seen specification conditional probabilities 
kth entry bs hd  hi  t  specifies interpretations agents across threads
time given system pov thread thk   thusas every thread considered
potential pov threada full specification agents belief state threads requires
conditional probabilities every time point t  general representation
belief states allow easy evaluation subjective posterior interpretations
arbitrary time points pov threads intuitive definition belief state updates 
however  general definition contains redundant information  leveraging certain properties semantics pdt logic  identify means obtain compressed
representations belief state following 
  

fimartiny   moller





corollary      null vectors att hk    due definition       ith row att hk
   iff agent actual observations  as specified h  match observations specified
thread hk  
proposition      belief state compression   let hd  hi pointed doxastic system
let time point t h   then  without loss information  belief
state bs hd  hi  t  time represented

    
bs hd  hi  t      v  t         vn t
one probability distribution vector  vi t per agent i 


proof  follows directly corollaries      p          matrices att hk
bs hd  hi  t  nonzero rows exactly correspond threads considered
possible agent time t 
properties ki given corollary      p      follows worlds h   t 
ki t h  indistinguishable agent therefore associated
interpretation  thus  nonzero ith rows matrices bs identical  defining  vi t
unique nonzero rows bs  obtain representation       information
impossible pov threads  as described corollary      still maintained
assigned probability    vi t  
important note compressed representation applicable time
points t h   retrospective agent able classify threads two
categories  comply observations far  i e   considered
possible   not  time points   t h  classification possible
ki  t h t   depends future observations therefore lead branching
several distinct interpretations depending respective observations 
      evolution beliefs
order analyze temporal evolution beliefs  use update rule     
update belief states  since different possible observations yield different branches
evolution beliefs  update every thread belief state individually  using

respective update matrices utt h defined      




bs hd  hi  t    bs hd  hi      utt h         utt hm  

    

furthermore  analyze satisfiability validity arbitrary finite belief expressions
  u
 
bi t
     w r t  given pds hd  hi  define auxiliary belief vector b   different beliefs
  u
b       vector  b   contains one entry   b   j every possible thread hj
i t

defined follows 
a 

  u
bi t
   ft  

b 

  u fr
bi t
   rt  f  g    

c 

  u
 k  uk
bi t
     
   bk t

 

 
  hj  t     f
  b ft   j  
  hj  t      f

fr
  b rt
 f  g   j   fr t hj   f  g  t 
 
th
 k  uk
  ik t j    bk t
  
 
 u
k k
 
 b bk t     j  
hj
 k  uk
  ik t     bk t   

  

    

fipdt logic

note case nested beliefs  respective entries   b   j set one
inner belief holds thread hj   i e   assumed hj point view thread
 k  uk
   satisfied thread 
agent k checked whether ks belief bk t


using            determine matrix pt     probabilities pti th  k   
agent assigns time t  event   possible pov threads
th         thm   




h 

p  t 
 
pt       bs hd  hi  t     b          b    
  


ptn th  



      pt  th m
  
  

 
    

      ptn th m

    

n agents threads  results n matrix  rows matrix
seen conditional probabilities  agent believes time t  fact true

probability pti th  k    given system pov thread thk  
remark      computation pt     straightforward cases    a     b   compute
probabilities nested beliefs    c   start computing innermost belief
 which instance case    a  case    b  since assume finite expressions  
compute nested beliefs iteratively 
using definition       p      equation       provide definition
satisfiability validity beliefs 
definition       validity satisfiability beliefs   let b belief formula defined
definition      p       hd  hi pointed doxastic system  pt     corresponding
matrix probabilities time t  defined       b satisfiable  valid  w r t  hd  hi iff
  u
   b   bi t
     

least one  all  thread s  thk   entries row pt     satisfy  




hk
hk
pi t
     u pi t     

  u
   b   bi t
     

least one  all  thread s  thk   entries row pt     satisfy    




hk
hk
pi t
     u   pi t     

   b   b  b   
least one  all  thread s  thk   entries corresponding rows
pt     satisfy b  b   
   b   b  b   
b  satisfiable  valid  b  satisfiable  valid  


   since consider every possible pov thread thk   multiply every matrix att h


bs hd  hi  t   b    thus need use vector  b          b  
rows 

  

fimartiny   moller

remark      distinction valid satisfiable belief formulae interest
beliefs time   t h   time points t h  agents belief uniquely determined given observations  cf  proposition       resulting single probability
associated belief  therefore  invalid belief formulae t h  unsatisfiable 
definition      p       follows belief object atomic belief formula b
definition        arbitrary belief formula  inner belief formula
b   one cases defined definition       validity satisfiability entire
  u
 
expression b   bi t
   b   follows inductively definition  least one
 all  thread s  thk   inner belief formula b   satisfied limits
  u
 
outer belief respective thread satisfied  entire belief formula b   bi t
   b  
satisfiable  valid  
definition      gives rise important property belief operator  following
lemma shows 
  u
lemma      distributivity belief operator   let b   bi t
         belief
formula belief object        connective       then  express
  u
  u
b equivalently b     bi t
       bi t       

proof  result follows immediately validity satisfiability beliefs definition      
  u
formula b   bi t
         satisfiable  valid  iff least one  all  thread s 


hk holds hk      thk      respective entries pt     satisfy

  u
definition         former case  bi t
       satisfiable  valid  well 
  u
latter case bi t
       satisfiable  valid   reflects exactly definition disjunctive
  u
  u
belief formulae definition         thus  b     bi t
       bi t       satisfiable  valid 

  u
iff b   bi t
         satisfiable  valid  

  u
similarly  formula b   bi t
         satisfiable  valid  iff least one  all 

thread s  hk holds thk      thk      hold respective
  u
  u
entries pt     satisfy definition         then  bi t
       bi t       satisfiable
  u
  u
 valid  thus  formula b     bi t
       bi t       satisfiable  valid  according
  u
  u
definition definition         thus  b     bi t
       bi t       satisfiable  valid  iff
  u
b   bi t
         satisfiable  valid  

illustrate evolution beliefs  finish train example analysis
expected arrival times 
example       trains continued   d  specified example      p      
infer bob  and course alice  too  safely assume time   alice arrive
time   latest probability range           expressed belief
formula
      ef r
bb t   bb t
 r   on a  t      at t    cb   on a  t      

  

    

fipdt logic

     rule  obtain frequencies
efr t h  at t    ca     at t    cb   on a  t            

efr t h  at t    ca     at t    cb   on a  t            

h  t h         h    

h  t h         h    

i e   threads h         h  figure    p       event  at t    cb   on a  t     occurs
within   time points following event on a  t    time      and thus time    
latest   threads h         h    event  at t    cb   on a  t     occurs
time      outside scope r efr thus yields frequency zero 
time point    bob still considers threads possible  thus bobs subjective
posterior probabilistic interpretation

th
ib  
 t                                                
equal prior interpretation given example      p      possible pov threads
th  combining interpretation frequencies given yields sum
x
th
ib  
 t h  efr t h  at t    ca     at t    cb   on a  t               
ht

thus formula bb   valid 
now  consider previously described situation  t  running late
inform b it  leads updated interpretations given        
page     i e  


h 
ia  
  

th 
ib  

 

 

 

     

     

        



                                        

updates lead significant divergence belief expected arrival time 
corresponding sum respect alices updated interpretation
x
h 
ia  
 t h  efr t h  at t    ca     at t    cb   on a  t               
    
ht

    
obtained alices subjective posterior probability assignment thread h   
nonzero summand sum  threads h either impossible
h 
alices point view  i e   ia  
 t h      threads h  t h    h    h    h    h    h     
corresponding frequency zero  for threads h  h     thus  alices belief
arriving time point   latest drastically reduced  lower bound   alices
belief may exceed      instance 

      ef r
ba  
r   on a  t      at t    cb   on a  t       
    
valid belief formula  corresponding sum bobs belief time point  
x
h 
ib  
 t h  efr t h  at t    ca     at t    cb   on a  t                
    
ht

  

fimartiny   moller

obtained summing bobs subjective posterior interpretations threads h         h   
remaining threads contribute zero summands either bobs probability assignment corresponding frequency zero threads  thus  bobs
previous belief  expressed       remains valid time point      denoted bb    
even though alices beliefs changed significantly  aware bob maintains
beliefs conflicting own  shown following valid expression nested
beliefs 
   
ba  
 bb    
verify nested belief holds  need consider threads alice considers
possible  t h    h    h    determine bobs hypothetical beliefs would
threads  h    already analyzed       since threads h    h   
h  indistinguishable bob time point    analysis results hold
three threads  consequently  bb  holds every thread alice considers possible
therefore sum nested belief
x
th
ii t
   t h      
ht

h   b
ib  
b  

i e   alice knows bobs belief outdated 
finally  consider pointed doxastic system hd  obs ab   at t    cc     i  i e  
situation difference alice shares observation
delayed train bob  immediately follows bob updates beliefs
way alice  turn yields update alices beliefs bobs beliefs
following expression valid  because   valid lower bound longer  
   
 bb    
ba  

example shows alice reason influence actions
bobs belief state therefore decide actions improve bobs utility  as
wait vain  

   satisfiability checking pdt logic
section describe procedures check whether exists model
given set belief formulae b  discussions chapter  assume models
sets formulae finite  start formally defining satisfiability checking
problem pdt logic  using semantics previous section  derive model
checking algorithm based fully specified doxastic systems  afterwards  show set
belief formulae used specify problem pdt logic andtogether given
set threadshow transformed mixed integer linear program order
employ existing solvers decide satisfiability pdt logic formulae  finally  show
suitable threads derived given set belief formulae automatically  using
transformations linear programs established approach deciding satisfiability
probabilistic logics  discussed example fagin  halpern  megiddo        
however  priors given  established decision procedures probabilistic logics
  

fipdt logic

applicable pdt logic due formalisms update mechanism  cf  update rule
definition      p       update mechanism
fully specified doxastic system hd  hi given  define problem checking
whether set belief formulae b satisfiable respect doxastic system

follows  recall section       use h denote set subjective
th induced prior interpretation pov thread th 
posterior interpretations ii t
 
definition      satisfiability checking pdt logic   let hd  hi pointed doxastic
system set threads according prior interpretation specified hd  hi 
b set belief formulae  say b satisfiable w r t  hd  hi exists
thread th corresponding interpretations satisfy belief formulae b
b 



sat b  hd  hi  th   b b   h    b
    
specification given  checking satisfiability b respect hd  hi corresponds checking whether hd  hi model b  continue introducing model
checking procedure fully specified input  afterwards  discuss satisfiability
set belief formulae b decided prior probabilities  neither threads
prior probabilities given 
    model checking algorithm
first approach developing algorithm check whether given set belief formulae
b satisfied given pointed doxastic system hd  hi  i e   checking whether hd  hi
model b  obtained direct application semantics belief
operator given definition       p       algorithm   shows resulting model checking
procedure  starts computing belief states possible evolutions world
    tmax   afterwards  iterates belief formulae b b potential
pov threads thk determine whether interpretation respective pov thread
able satisfy current belief formula  thread unable satisfy belief formula 
excluded set potential pov threads subsequent checks  least one
potential pov thread remains belief formulae checked  i e  
least one thread thk belief formulae b b satisfied   hd  hi model
b 
theorem      soundness completeness algorithm     decision procedure algorithm   sound complete therefore model checking procedure pdt logic 
proof  since presented algorithm essentially inductive application definition     
 p       easy see yields sound complete decision procedure pdt
  u
  u fr
logic  basic belief formulae  bi t
   ft   bi t   rt  f  g    return satisfiability results
directly using respective semantic definitions           calculation rules 
  u
  u
 
  
every possible compound belief formula pdt logic  bi t
      bi t   b   b b  
 
  
b b    procedure provides appropriate rule according definition      break
formulae iteratively base formulae obtained  decided
above 
  

fimartiny   moller

algorithm   model checking
procedure modelchecking hd  hi  b 
h 
hm
bs hd  hi      at
      
 
 
 
   tmax
bs hd  hi  t  bs hd  hi      utt h         utt hm  
b b
thk
check bs hd  hi   thk   b  
   thk  
 
return false
return true

  compute belief states

  check b satisfied thk
  otherwise remove thk threads check
  exit th satisfy b
  success nonempty checking b b

function check bs hd  hi   thk   b 
switch  b 
  check formulae according def      
  u
case bi t
     
  b  
  check nested belief formulae recursively  b   belief formula 
 

check bs hd  hi   hk   b   
return false
th
pt  bs hd  hi  t     b  
  use  b        compute pt  elements pi t k
th

th

th

  true pi t k     u 

return    pi t k u pi t k  
  u
case bi t
     

pt  bs hd  hi  t     b  
th

th

th

  true pi t k       u 

return    pi t k u pi t k  
case b   b     
return  check bs hd  hi   thk   b    
check bs hd  hi   thk   b      
case b   b     
return  check bs hd  hi   thk   b    
check bs hd  hi   thk   b      

  

fipdt logic

asymptotic complexity algorithm   depends number belief operators
  u
bi t
     contained b 
theorem      time complexity algorithm     let b set belief formulae let
k number belief operators contained within b  then  using algorithm   check
whether given pointed doxastic system hd  hi threads model b time
complexity o k m  
proof  given pds threads k belief formulae b  main procedure calls
check function k times  b base formula single belief
  u
operator bi t
      single call check function return result  otherwise 
  u
belief formula b contains one belief operator bi t
      check function
called recursively  base formulae obtained  thus  k belief operators b 
satisfaction checks performed k times  yielding time complexity
o k m  

theorem     immediately obtain complexity result model checking
problem pdt logic 
corollary      complexity model checking pdt logic   model checking problem
pdt logic ptime 
result shows model checking set belief formulae w r t  given pointed
doxastic system done polynomial time  fully specified pds  and thereby
exhaustive specification set possible threads   given  result shows
algorithm   presents tractable procedure perform model checking task  however 
approach significant drawback assumes exhaustive specification
together precise prior probability assignments i t    although problem
domains actually come specification  e g   cf  cyber security scenario
described introduction   assumption renders algorithm   infeasible
problem domains  overcome problem  proceed discussing different
approach  enables satisfiability checking without requiring specification exact
probabilities  moreover  show representative threads respect set belief
formulae b constructed automatically  positive satisfiability results
potentially obtained without requiring full materialization possible threads  
    compact problem specification
used  pointed  doxastic system specify problem domain model
checking set belief formulae b pdt logic  following sections  show
reformulate problem extended set belief formulae together
value tmax used  main idea approach background knowledge regarding target domain given explicit specification possible threads
according probabilities  instead sets rules b describe target
domain may evolve time  approach several advantages  scenarios 
compared requiring exhaustive set possible threads  specifying set rules  which
expressed prior beliefs  gives natural means specifying background
  

fimartiny   moller

knowledge problem domain  e g   cf  example     page     actually starts
verbal description rules later introduces corresponding set possible
threads   furthermore  using set rules describe problem domain fairly established approach therefore approach provide options simplify transformation
existing problem specifications pdt logic  finally  since set possible threads
grows exponentially every additional time point set time points every
additional ground atom language l  exhaustive problem specification
set possible threads quickly becomes infeasible  situation could
described succinctly small set rules  even though succinct specification shifts exponential nature problem required input specification
computational efforts  show exponential effect curtailed heuristics
constructing possible threads automatically 
      identification key parameters set belief formulae
simplify following discussion  restrict temporal rules use point
frequency function pfr  recall point frequency functions used specify
event f followed another event g exactly time points  existential
frequency functions efr used specify event f followed another event g
within time interval t  existential frequency functions required specify problem
domain  rewrite disjunctions point frequency functions  following
proposition shows  frequency functions defined  presented techniques
easily adapted 
proposition      efr rewriting   existential frequency function efr equivalently
represented disjunction point frequency functions pfr 
efr
 f  g 
rt

 

pfr
rt
 f  g 

 tt

t 

recall that  according definitions           page     specification pds
consists set agents a  set threads   set frequency functions f  matrix
 a  t  

prior probability distributions a 
  set time stamped observations h 
since use point frequency functions following  set frequency
functions f always fixed  pfr   thus need specify set separately 
instead explicitly specifying set agents a  determine
  u
belief expressions bi t
     contained set belief formulae b  slight abuse
  u
  u
notation  use bi t
     b denote belief operator bi t     appears somewhere
set belief formulae b  then  define set agents ab specified set
belief formulae b
  u
ab    i   bi t
    
     b 

generally  possible explicit specification set agents larger
set ab   however  obvious beliefs expressed agent  i e  
  ab    agent influence satisfiability checking results whatsoever 
thus  agent simply disregarded and  consequently  suffices use set ab  
  

fipdt logic

similarly  instead specifying set ground atoms language l
sets predicates lpred constants lcons   define set event formulae fb
representing belief objects occurring set belief formulae b
n

  u
  u fr
  u fr
fb   f   bi t
 
    
   ft   b bi t   rt  f  g   b bi t   rt  g  f    b
definition gives rise potential definition set possible worlds
herbrand base b fb fb  resp  set admissible worlds complying
definition      p       however  show later  options constrain
sets possible worlds allow concise problem representation 
note according definition      p       formulae may include atoms
observation atoms  consequently  fb specify ontic facts possible worlds 
possible observations ontic facts  approach  occurrences
observations limited ones specified fb   seen specification
sensor model groups agents g ab  
remark      strict application      would prohibit simple specifications group observations obsg  l   g      b  ensure set admissible worlds
actually
v
contains worlds obsg  l   full specification observation g   g obsg    l 
b would required  otherwise might world b fb    obsg  l 
satisfies second property definition possible worlds  cf  definition       
however  required full specification observation admissible worlds determined solely simple observation specification obsg  l   order keep
specification b compact possible 
allow simple specifications obsg  l 
v
assume expanded g   g obsg    l  creating fb  
alternative approach would construct fb ontic facts appearing
b create set admissible worlds combining ontic facts possible
admissible observations w r t  definition      approaches differ requirements
observation specifications  former requires specify every possible observation explicitly  latter requires exclude every impossible observation explicitly  since
scenarios set observations actually possible  w r t  problem domain 
significantly smaller set admissible observations  presented approach
usually yield compact problem specification  desired  one could employ
latter approach instead without impacting functionality following methods 
background knowledge regarding target domainthat given explicit
representation possible threads beforecan specified prior beliefs  i e  
  u
beliefs bi  
    b  recall section       assume commonly known prior


h equal agents   belief semantics defined
distribution ii t
b


h  cf  definition       p       follows
respect probabilistic interpretations ii t
 

  u
every prior belief bi  
   common knowledge well  consequently  express
background knowledge prior beliefs arbitrary agent ab  
  u fr
pointed section    satisfiability beliefs temporal rules bi t
   rt  f  g  

certain properties independent respective set threads associated
interpretation i t    cf  remark      p       respective frequency function corresponds
  

fimartiny   moller

ff  ff  definition       i e   f contradiction  g tautology  f tautology g contradiction   beliefs either trivially satisfied quantifications
u      resp         generally unsatisfiable  former case  trivially satisfiable beliefs
disregarded without influencing satisfiability results  latter case satisfiability checking terminate immediately negative result  thus  following
assume b contains beliefs rules correspond frequency function
axioms ff  ff  
example      trains revisited   informal verbal description train problem
given example      p      corresponding formal specification set
possible threads example      p     and probability assignments example      p      
using considerations expression background knowledge beliefs rules 
reformulate verbal rules given example     together probabilistic
information example     set formal beliefs b according explanations
below 



   
   


b    ba  
at t
 
c
 

b
on a 

 
 
 
 
 
 


a  







        pfr


 b    
r   at t    ca    punct t    
ba  


b
 

 


        pfr

ba  
r   at t    cc    punct t      
 b     









   


r pfr   punct t    at t    ca    at t    cc   on a  t      b    
ba  


b   



    pfr

ba  
 r   punct t    at t    ca    at t    cc   on a  t        b     







   
b 
r pfr   punct t    at t    cc    at t    cb   on a  t      b    
ba  

b   



   


ba  
r pfr  punct t    at t    cc    at t    cb   on a  t        b     








   


b    ba  
r pfr  punct train  at train  city   obs a   punct train     









        pfr

b    ba  
r   obs a   punct train    obs ab   punct train     









train  t    t    




city  c   c  


b













































































note beliefs expressed time      i e   prior beliefs
definition commonly known among agents  beliefs expressed example
assigned a  could equivalently assigned b both 
b  states train t  city ca time     alice train  b 
states agents believe trains punctual  denoted punct train  
probability       probability values example obtained summing
probabilities given example     threads given example     respective
belief object satisfied  equivalent representation previous example 
  

fipdt logic

use exact probability values  i e       u  instead intervals  note punct train 
additional predicate variable train helps formulate background knowledge
concise way  formula b  yet specify consequences non punctual
train are  train expected punctual certain probability  b  states
alice able board train t  three time steps train t  punctual
alice wait two additional time points otherwise  b  states train t 
arrive city cb two time points city cc   otherwise arrive one
time point later  b  states alice always notice train leaves city
punctually  example sensor model specification discussed above  finally 
b  states alice call bob probability      train punctual 
example      trains continued   definition set belief formulae b
example  specify set event formulae fb required model
possible scenarios described b 






at t
 
c
  
at t
 
c
  
at t
 
c
  
at t
 
c
  
 
 
 
 

b
b
c






on a     on a     punct t    punct t   

 
 
 
 
fb  


obs a   punct t      obs ab   punct t     








obs  punct t      obs

 punct t
  
 
 a 
 ab 
simplify following discussion  assume conjunctive formulae b   b  
b replaced individual formulae respective conjuncts  b   b  
 b   b     b       impact satisfiability checking properties b
formulae b satisfied simultaneously order return positive result
thus  b   b    satisfied  regardless representation two
individual formulae one conjunction 
now  remains determined set threads   corresponding prior
b   

 a  t  

probability distribution i t    resp  matrix prior probability distributions a 
 
every row formed i t     possibly set time stamped observation atoms
h  tasks determining h treated jointly  since set relevant
threads needs determined anyway  simply create    h 
next section show transform set pdt logic belief formulae
b together given set threads linear program order determine
satisfiability b respect   afterwards  discuss suitable set
threads represent information contained b constructed automatically 
using results  possible model problem domain pdt logic solely
set belief formulae b together specification maximum time point tmax  
key parameters domainsuch set agents set ground
atomscan extracted b automatically 
    representing satisfiability problem linear program

considerations previous section show parameters problem
specification extracted given set belief formulae b  section 
assume set belief formulae b together set possible threads given 
  

fimartiny   moller

b satisfiable respect  denoted sat b     prior interpretation i t  
found belief formulae b satisfied  extracting linear constraints
i t   b  show satisfiability problem transformed linear
program  checking satisfiability b respect equivalent checking
whether corresponding linear program feasible solution 
given set threads unknown prior interpretation i t    satisfiability
checking task significantly increases complexity compared model checking task 
formulation satisfiability checking problem definition      p      might somewhat delusive  existence single thread context interpretation
suffices verify satisfiability set belief formulae b  appears intuitive develop
method construct threadif possibleand neglect threads  or  vice
versa  start entire set threads iteratively prune threads fail satisfy formula b  fact  pruning approach used algorithm    p    
check whether given set threads model set belief formulae  unfortunately 
approaches inapplicable prior interpretation unknown  semantics
belief operators  cf  definition       p      relies subjective posterior probabilistic interpretations  i e   probability assignments multiple threads   generally possible
find single thread th satisfying satisfiability checking problem definition    
without determining probabilities threads  vice versa  generally possible
discard thread  determining whether satisfies belief formula
done respective probability assignment known  instead  show belief
formulae equivalently expressed sets linear constraints unknown prior
interpretation i t    then  checking satisfiability b equivalent checking whether
possible assignment i t   constraints satisfied 
use xk denote unknown prior probability thread hk   i e   contains
threads  unknown prior probability assignment represented
i t     x      xm



 

    

goal following methods provide constraints xk belief
formulae b b satisfied  since variables represent probability distribution
set threads  two obvious constraints begin with 
  xk    k          m 



x

xk    

    

    

k  

      representation subjective posterior probabilities
since semantics beliefs defined terms respective agents subjective probability assignments respective pov thread  need means express subjective
th agent terms prior probability
posterior probabilistic interpretations ii t
 
values xk   interpretations change time point whenever observation obs i   l t
possible agent i  observation possible agent  partition set
threads two sets  one partition containing set threads agent observe
  

fipdt logic

respective fact l one partition agent observe respective fact 
subjective probability assignments need updated within partition reflect
information observation occurrences  taking every thread within partition
possible pov thread  probability assignments threads within partition
need scaled according update rule definition     pov thread specific
probability assignments threads outside respective partition need set
zero 
generally  leads one vector subjective probabilities threads every
possible pov thread  cf  definition belief states equation       p       however 
leverage semantic properties pdt logic obtain parsimonious representation
updated subjective probabilities without representing every pov thread explicitly 
note threads within one partition described indistinguishable agent
respective time point  i e   threads within one partition exhibit exactly
set observations agent time point t  therefore receive probability
assignment every possible pov thread within partition  cf  proposition      p      
consequently  updated probability assignments every thread receive
one two different types value assignments  scaled version threads previous
probability assignment according definition      p       zero  depending whether
agent actually observes fact l not  following proposition shows
need consider cases zero probabilities order perform satisfiability checking
tasks 


h subjective posterior
proposition      irrelevance zero interpretations   let ii t
 
 
probability interpretation time agent pov thread th  i e   interpreta 

tion determined prior interpretation interpretation updates corresponding
pov thread th   interpretation assigns probability zero thread h  i e  
th  t h        satisfiability subsequent nontrivial belief b       t     t 
ii t
 
i t


h  t h  
independent ii t
 

  u
proof  every belief bi t
           fact another belief  i e     ft
   u

  bj tj j     requires needs least one thread h nonzero


h  t h      clearly
probability h      therefore  thread h ii t
 
  u
  
 
prove satisfiability belief bi t
        negative satisfiability result  i e   b

unsatisfiable w r t    cannot obtained zero assignment either 
consistent interpretation  i e   probability assignments threads sum one 
needs assign nonzero probability least one thread  could possibly
  u
satisfy belief  considerations hold beliefs bi t
           u     


h  t h      satisfies lower bound        upper bound u    
although thread ii t
 


h  t h       
requires existence another thread h  nonzero probability ii t
 


h  t h      prove satisfiability beliefs b   u   
h       consequently  ii t
 
i t 
      u      trivial beliefs satisfied every thread
every possible probability assignment thus  satisfiability proven without
th  t h       too 
ii t
 

  

fimartiny   moller

  u fr
analogous considerations hold beliefs rules  belief bi t
   rt  f  g        
requires existence thread nonzero probability fr t h  f  g  t      
th  t h      cannot prove satisfiability belief  satisfiaand thus thread h ii t
 
  u fr
bility belief bi t
   rt  f  g         u     depends respective frequencies
 
fr t h   f  g  t  additional threads h  nonzero probabilities 

result proposition  merge nonzero entries cases  agent
observes fact l agent observe fact l  single probability
distribution vector agent time point t  yields modified version
update rule definition      use modified update rule determine linear
constraints unknown prior probabilities xk  
definition      modified update rule   let agent  t  time point observation obs i   l  occur h thread  then  compressed subjective posterior
probability assignment ii t   t h  agent time t  thread h given
ii t   t h   

 
ii t     t h 
th
i t
 

    

h normalization factor ensure probabilities threads
i t
 
agent considers possible sum one 
x
th
ii t   t h   
i t
   
h   t   ki  t h t    

example      modified update rule   illustrate modified update rule  return
situation described example      p       example assumed train t 
running late inform b it  resulted following updated
interpretation a 

th 
th 
th 
                         
  ia  
  ia  
ia  
given example  two additional hypothetical partitions set threads
possible alice time point       train t  running late inform
b it  threads h    h    h  indistinguishable a  yielding updated
subjective interpretation

th 
th 
th 
ia  
  ia  
  ia  
                            
t  time  alice considers threads h    h    h  possible  corresponding
subjective interpretation

th 
th 
th 
ia  
  ia  
  ia  
                            
three different subjective interpretations nonzero entries exactly threads
partitions respective pov thread  since partitions overlapping  merge nonzero entries single probability vector

ia                                                
  

fipdt logic

note modified update rule  update pov thread specify interpretations threads anymore  instead reflexive interpretations
thread h  given h pov thread  used  discussed above 
satisfiability problem still sufficient representation posterior probabilities 
potential pov threads th respective partition indistinguishable
agent therefore yield exactly interpretations  noted however ii t   t h  probabilistic vector anymore  i e   elements sum
one  compared representation belief states section        p       information
distinguishable worlds lost  thus  reconstruction agents belief state
representation possible additional specification respective relations
ki  
returning problem representation       p       use modified update rule obtain inductive definition subjective posterior probabilities based

respective  unknown  prior probabilities xk   i t     x      xm prior interpretation set threads  agent compressed subjective posterior interpretations
ii t  time point t  first possible interpretation represented
ii t   t    



 
 i t 

x     

 

i t 

xm



 



 

    

k determined
update factors i t
 

 
i t
 



i t
   



 


i t
x
 



 
x
 

 
 

  


  
 

 

i t
m  

i t 

j k


 
i t
  m
  

   
 

i t
m m

 
  hk  t    ki  t hj  t    
 
  hk  t      ki  t hj  t    
 

 symmetric  matrix indicators i t
j k denoting whether agent considers thread
 
hk possible thread hj time   using      base case  define
interpretation updates next possible observation time t   inductively
ii t    t    



 
 i t  



 
 i t 

x     

 


i t  



 


i t 

xm



    

simplify notation  following use single factor aki t  represent agk k      observations occur
gregated sequence scaling factors  i t
i t 
 
time points t    t              t  agent i  i e   agent subjective posterior
interpretations ii t   t   time t  given
ii t   t     a i t  x     
i t  xm



 

    

note potential interpretation updates agent occur time point
observation obs i   l  possible time point  hence  time
interval two possible observations  subjective interpretations constant 
  

fimartiny   moller

proposition      piecewise constant interpretations   let t  t  t    t  two
time points observations agent possible t  t    time
point t  t    then  compressed subjective interpretation ii t   t  
constant time points t    t   
 t    t       ii t  t     ii t   t  
proposition states constraints identified following section
restrict subjective interpretations single time points  instead restrict
interpretations respective time interval two possible observations 
      extracting linear constraints belief formulae
established representation      subjective posterior interpretations
terms unknown prior probabilities xk   use representation extract linear
constraints xk set belief formulae b 
assume distributive property belief operator lemma      p     
  u
applied whenever possible  i e   belief formulae bi t
   b  b        
  u
  u
separated bi t
   b   bi t   b     furthermore  without loss generality  assume
conjunctive formulae b   b  b  replaced b    b   b    b   
trivial beliefs  with       u      removed b 
moreover  assume belief formulae b b represented negation normal
form  nnf   i e   negation operator applied atoms  since arbitrary logic
formula equivalently expressed formula nnf  cf  e g   baaz  egly  leitsch 
goubault larrecq    plaisted         assumption restrict b either 
assumptions  following types belief formulae b occur b 
  u
atomic belief formulae b   bi t
    
  u
negated atomic belief formulae b   bi t
    

disjunctive belief formulae b   b  b 
types  show respective formula expressed
set linear constraints prior probabilities xk  
atomic belief formulae using parsimonious representation subjective posterior
interpretations ii t   t h  given modified update rule definition     requires
adaption deciding satisfiability belief formulae  before  satisfaction belief
formula given pov thread could determined summing respective subjective interpretations threads belief object satisfied  threads
agent consider possible anymore w r t  given pov thread automatically
excluded probability assignment zero  compressed representation 
respective probability assignments threads considered impossible overloaded
different probability assignments given agent another pov thread  illustrated
example      obtain adapted version satisfiability testing explicitly ensuring
interpretations threads summed still considered possible
w r t  respective pov thread  additional constraint excludes summands
  

fipdt logic

zero values  original semantics still maintained  thus  use equivalence classes
    c          represent set distinguishable situations agent time t   
ci t     ci t
 
i t 
naturally  two threads h    h  indistinguishable therefore equivalence
class agent time t    exhibit exactly observations agent
time points         t     threads outside particular equivalence class receive
probability zero every pov thread th within respective equivalence class andas
discussed previous sectiontherefore contribute satisfiability properties  then  belief semantics definition       p       instead summing
k    th c k  
threads h certain properties  restrict range h ci t
i t
maintaining original semantics  naturally  belief formula satisfiable
exists least one equivalence class satisfies respective beliefs  instance 
  u
belief fact bi t
   ft   satisfiable respect agent compressed subjective
posterior interpretation ii t  time t  iff
k
ci t
  ci t     

x
n 

k h  t   f  
 t hn ci t
n
 

ani t  xn u

    

constraint equivalently expressed set linear inequalities
conjunctive disjunctive connectives  leading alternative representation
satisfiability problem 
corollary      alternative satisfiability representation atomic beliefs   let ii t   t    


a i t  x     
ij t  t     a j t x     
compressed
j t xm
i t  xm
representation agent js respective subjective posterior probabilities time t 
t  respectively  given       let ci t  cj t sets worlds agent
agent j distinguish respective time point  then  atomic belief expression b
satisfiable w r t  ii t   t  
  u
   belief fact b   bi t
   ft   iff



 
k c
ci t
 
i t 

x
k
 t hn ci t
 

n 
hn  t   f  

ani t 



xn  



x
k
 t hn ci t
 

n 
hn  t   f  

ani t 


xn u

 
    

  u pfr
   belief rule b   bi t
   rt  f  g   iff

 



k c
ci t
 
i t 

x
k  
n   t hn ci t
 




x
n 

k  
 t hn ci t
 


ani t  xn pfr t hn   f  g  t   
ani t  xn pfr t hn   f  g  t 

  


u

 
    

fimartiny   moller

   u

  u
j j
   nested belief b   bi t
    iff
   bj t

 



k c
ci t
 
i t 

x
k  
n   t hn cj t
k
k     
hn      cj t ci t
 




x
k  
n   t hn cj t
k c k     
hn      cj t
i t 




x

x
n 

anj t xn

ani t  xn

k c k  
hn  cj t
 
i t 



uj

ani t  xn  

k c k  
n  hn  cj t
i t 
hn   




anj t xn  j

u







 
    

hn   

discussed above  representations satisfiability beliefs facts      beliefs
rules      obtained directly replacing range threads sum
k considered possible agent time t    inequalities
respective set threads cj t
 
nested beliefs      obtained ensuring first two lines every situation
agent conceives possible situation agent j  expressed constraint
k   c k c k       agent js belief respective fact  expressed
n    t hn cj t
j t
i t 
constraint hn      within   j   uj    latter two lines ensure
respective situations  outer belief agent satisfied  well  note
belief object      might contain additional belief operators  i e   beliefs multiple
levels nesting expressed  case  evaluation h    first two lines
     yields additional constraints type           formula evaluated
recursively 
negated atomic belief formulae satisfy negated atomic belief formula b  
  u
bi t
      accumulated probabilities threads satisfy belief object
k must either lower   higher u  i e   individual
equivalence class ci t
 
disjuncts
         negated  pushing negations inward using
x
    representative respective sums defined           express


satisfiability atomic beliefs  represent negations according beliefs expressed
         
 
x
x

 

       
      u  
    
k c
ci t
 
i t 





nested beliefs defined      contain negated belief operators  expressed
accordingly replacing conjunctive constraints   u  resp   j uj  
corresponding disjunctive constraints      negated atomic belief formulae 
  

fipdt logic

disjunctive belief formulae inequalities  required constraints
disjunctive formula b   b  b  easily expressed additional disjunction
inequalities  let c  c  sets inequalities express satisfiability b  b 
according           respectively  then  constraints b expressed
c  c 

    

example      trains continued   example      p       set belief formulae b
given train example  illustrate extraction linear constraints
set  continue use set threads depicted figure    p      minor
modification  reflect model specified b example      assume
predicate punct train  explicitly encoded respective threads  moreover 
sake example assume prior probabilistic interpretations yet unknown 
use x         x  denote unknown probabilities  note example 
dealing prior beliefs  i e   one equivalence class c  
scaling factors ani t  equal one  significantly eases presentation
example  course  general deal multiple equivalence classes
multiple varying scaling factors  highly increases complexity presentation 
refrain giving explicit examples cases  constraints b extracted
follows 

        pfr
r   at t    ca    punct t      
belief b     ba  
pfr t h  at t    ca    punct t            h  t h         h   

pfr t h  at t    ca    punct t            h  t h         h   

thus application rule      yields constraints
x  x  x      
x    x    x 

    

special case     u  simplify constraint
x    x    x   

    

since rules exhibit property  slightly deviate     
give equivalent equality constraints subsequent rules order simplify
presentation 

        pfr
accordingly  belief b      ba  
r   at t    cc    punct t     obtain 
pfr t h  at t    cc    punct t            h  t h    h    h   

pfr t h  at t    cc    punct t            h  t h    h    h       h   

corresponding constraints
x    x    x   
  

    

fimartiny   moller


        pfr
belief b    ba  
r   obs a   punct train    obs ab   punct train     
h  t h    h    h    h     

pfr t h  punct train   obs ab   punct train           

h  t h    h    h     

pfr t h  punct train   obs ab   punct train           

h  t h    h     

pfr t h  punct train   obs ab   punct train            

thus application rule      yields constraint
x    x    x        x        x    x        
remaining beliefs  respective belief objects satisfied every thread
thus obtain redundant constraints
 
x

xk     

k  

one easily verify prior probabilistic interpretation given example      i e  

x                                              
indeed solution respect constraints  course  given
example  solution expected  b defined exactly reflects
situation described examples previous section 
      transformation disjunctive program
every belief formula b b  extractions linear constraints yield set
inequalities form
ai   x    ai   x          ai m xm bi  

    

xj representing unknown prior probabilities threads h         hm   coefficients
ai j set respective values ani t  contribute constraint set zero
otherwise  value b  set respective limit obtained   u 
corollary     shows  every belief formula b b yields disjunctive set inequality
constraints  i e   every belief formula b introduces branches set linear constraints 
collecting inequalities form      constrain single branch  express
constraints matrix form 
ax b 
    




a   
  
a   
an  


  
 





a  m
x 
b 
     x     b  
 
xm
bm
an m
  

fipdt logic

form representation close connection linear programming  lp   linear
programming  e g   murty        solution method optimization problems
linear function set continuous variables xk optimized respect given
set linear constraints  task satisfiability checking require
optimization thus actually solving linear program required work 
exploit similarities sets linear constraints lp order show
satisfiability problem solved 
standard form lp problem  murty        gives set constraints exactly
form       every solution x satisfies constraints called feasible
entire solution space      called feasible region  thus  checking whether set belief
formulae b satisfiable equivalent checking whether corresponding lp problem
non empty feasible region  standard lp problems constraints form
      feasible region convex polytope  allows performing check little
computational effort  garey   johnson        
unfortunately  extracting linear constraints set belief formulae b described
section       yield single set constraints form       instead
disjunction different sets constraints  gives rise representation
satisfiability checking problem disjunctive program  dp   balas        
corollary      satisfiability checking disjunctive program   let b set belief
formulae  let set threads let set disjunctive branches linear
constraints extracted b according extraction rules            then 
satisfiability checking problem formulated disjunctive program  balas        
 
ad x bd
    
dd

b satisfiable respect   denoted sat b          solution 
disjunctive program called bounded  range every variable xk restricted
lower upper bounds  since rely bounded property subsequently 
state following result 
lemma      satisfiability checking bounded dp   let b set belief formulae
set threads  checking satisfiability b respect represented
bounded disjunctive program 
proof  straightforward result  corollary     shows satisfiability checking
pdt logic represented disjunctive program form       since
every variable xk      represents probability value  xk naturally bounded
  xk   
disjunctive program  feasible region cannot guaranteed convex anymore 
guaranteed solution space even represents connected region 
significantly increases complexity determining whether nonempty solution space
exists  analyze problem detail show connections established
solution approaches  discuss next section disjunctive program
form      transformed 
  

fimartiny   moller

      transformation     mixed integer linear program
concept linear programs continuous variables xk subject linear constraints
form      extended so called mixed integer linear programs  milps   schrijver 
       opposed standard linear programming  milps required
variables xk continuous domain  instead  milps use mix continuous
integer variables  several equivalent ways representing milp  adopt
representation fischetti  glover  lodi         specifies constraints
milp
ax b

xj integer

j

index set indicating variables xj integer variables  special
case milps     mixed integer linear programs  williams         integer
variables xj restricted binary values 
ax b

xj       

    
j

augmenting set variables x binary switching variables xj every possible
disjunction  possible represent disjunctive programs form          milps
form       balas         leads central result satisfiability checking
pdt logic 
theorem       satisfiability checking     milp   let b set belief formulae
set threads  problem checking satisfiability b respect
transformed corresponding     mixed integer linear program b
satisfiable respect iff feasible solution 
proof  lemma     shows satisfiability checking pdt logic represented
bounded disjunctive program  set belief formulae b satisfiable iff
corresponding bounded disjunctive program feasible solution  proof theorem
    balas        shows every bounded disjunctive program equivalently
represented     mixed integer program   consequently  satisfiability checking
pdt logic equivalent checking whether feasible solution 
leverage theorem      obtain complexity results satisfiability problem
pdt logic 
theorem       complexity pdt sat w r t  given set threads   checking satisfiability set pdt logic belief formulae b respect given set threads
np complete 
proof  generally known checking whether bounded     mixed integer linear
program feasible solution np complete  cf  bienstock         theorem     
shows satisfiability checking pdt logic respect given set threads
reformulated     milp bounded variables xk  cf  lemma       follows
  

fipdt logic

satisfiability checking set belief formulae b respect given set threads
np 
arbitrary propositional formulae f  cf  definition      p      expressed pdt
   
logic using belief object strict prior belief bi  
 f    since well known
boolean satisfiability problem  sat  np complete  cook         follows
problem np transformed satisfiability checking problem pdt logic 
hence  satisfiability checking problem pdt logic np hard consequently npcomplete 
np completeness result shows problem np therefore immediately obtain another important property satisfiability problem pdt logic 
corollary       decidability pdt sat   checking satisfiability set pdt logic
belief formulae b decidable 
milps subject extensive research decades  thus ample variety
solving methods proposed  e g   balas  ceria    cornuejols        balas  ceria 
  cornuejols        balas   perregaard        name notable work
milp solving  especially fischetti et al        bertacco  fischetti    lodi      
find feasible solutions milps   research gave rise various efficient implementations
milp solvers  commercial  e g   ilog        gurobi optimization  inc        
non profit products  e g   gnu project        computational infrastructure operations
research  coin or  project         given set threads  pdt logic satisfiability
checking reformulated     milp problem  thus state of the art
milp solvers exploited relatively fast satisfiability checks instances
pdt logic belief formulae b respect given set threads  
results section show satisfiability set pdt logic belief formulae b decided respect given set threads  even specific prior
probability assignment specified  overall goal section design
decision procedure requires set belief formulae b input  continue
discussion satisfiability testing development method automatically
construct set threads representing background knowledge specified b 
    prior constraints possible threads
determine whether set belief formulae b satisfiable  need obtain set
possible threads reflects background knowledge specified b  section 
describe identify certain constraints set possible threads prior
actually starting generate threads represent information specified b 
identify prior constraints  discuss different properties belief formulae contained b  using properties  create taxonomy belief formulae depending
respective impact set possible threads   beliefs certain properties
used constrain search space sets possible threads prior actually search sets  discussing prior constraints section  use
results section     develop decision procedure pdt logic requires neither
specification probabilities specification possible threads 
  

fimartiny   moller

      taxonomy belief formulae
set belief formulae b may contain beliefs various features different
impacts sets admissible worlds specific time points t  discuss
features show yield taxonomy belief formulae  taxonomy
allows classification beliefs three different types respect impact
sets admissible worlds  particular  identify beliefs independent
specific probability assignment kripke relations ki   classification
technical purposes  beliefs depend neither specific probability assignments
specific kripke relations used derive initial constraints sets possible
worlds time points tmax   use b denote set worlds
admissible respect set belief formulae b  use b  t  denote set
admissible worlds respect set belief formulae b time t 
recall three different kinds beliefs  beliefs facts  beliefs rules 
beliefs beliefs  before  differentiate prior beliefs hold time point
     and therefore commonly known among agents  posterior beliefs hold
time points     
  u pfr
distinguish beliefs rules bi t
   rt  f  g   respect t  call
pfr
pfr
 f  g  dynamic rule      accordingly 
 f  g  static rule     call rt
rt
separate beliefs rules beliefs static rules beliefs dynamic rules 
respectively  beliefs differ respect temporal impact  static rule
constrain possible worlds instantaneously  i e   r pfr  f  g  states
world    f     g hold  dynamic rule hand requires
whenever world    f occurs  must another world        g
time steps 
finally  classify beliefs respect probabilistic quantifications  call
  u
belief bi t
     strict      u         u      sake simplicity 
following assume without loss generality strict beliefs always represented
   
   
    u      strict belief bi t
   easily rewritten bi t
     call belief
trivial       u      obviously  beliefs trivially satisfied arbitrary
interpretation  thus impact satisfiability checking results therefore
removed b 
remark      definition belief semantics  definition       p      follows
   
special case strict beliefs bi t
    i  agent considers occurrence belief
objects complement impossible  ii  occurrence indeed impossible 
thus  strict beliefs comply common definitions knowledge justified true belief
belief stable respect truth  cf  e g   shoham   leyton brown       
page       consequently  could refer strict belief knowledge equivalently
use established knowledge operator ki    instead bi       
   
remark      note concept strict beliefs applies positive beliefs bi t
   
   
negation belief  bi t     follows definition       p     
fr
fr
   belief object temporal rule rt
 f  g   represent rt
 f  g   possible
need consider frequency functions correspond axioms ff  ff 
definition       p      use point frequency functions pfr  frequency functions used 
negations need defined accordingly 

  

fipdt logic

least one thread satisfy belief object   turn implies       
   
consequently  beliefs bi t
   considered non strict following discussion 

using features  create taxonomy beliefs depicted figure  
identify prior constraints set possible threads  taxonomy obtained
successively distinguishing strict non strict  prior posterior beliefs 
beliefs facts  rules nested beliefs  finally beliefs static dynamic
rules  nested beliefs considered strict  prior  beliefs  involved beliefs
strict  prior   otherwise considered non strict  posterior   nested belief
actually strict prior  unnest belief consider innermost belief
expression  since prior beliefs commonly known therefore identical agents
ab   evident strict belief agent i  agents know agent
strict belief  consequently  strict prior beliefs nested arbitrary depth
without introducing constraints  satisfied exactly innermost
belief satisfied  thus  need consider nested strict prior beliefs explicitly 
taxonomy gives rise three different types belief formulae respect
impact sets admissible worlds 
definition      belief formula typification   set belief formulae b categorized
three different types beliefs 
type    beliefs restrict set admissible worlds b  t  every
time point   thus  type   beliefs highest impact
exploited prune set admissible worlds b globally  evaluation
beliefs relies neither specific probability assignment given kripke
structures ki  
type    beliefs restrict sequences possible worlds  moreover 
potentially restrict sets admissible worlds b  t  specific time points 
thus  type   beliefs less impact type   beliefs
exploited prune sets admissible worlds b  t  locally  again  evaluation
beliefs relies neither specific probability assignment given
kripke structures ki  
type    type encompasses remaining beliefs b neither type  
type   beliefs  beliefs situation specific cannot used prune
sets admissible worlds priori  satisfiability beliefs depends suitable
probability assignment evaluation kripke structures respective
threads 
use tk  b  denote set type k beliefs b 
main goal belief formula taxonomy identify constraints possible
worlds possible threads h evaluated prior searching suitable
probability assignment  namely using belief formulae t   b  t   b  prune
search space possible sets threads may show satisfiability b 
noted existence thread h violating belief t   b  t   b 
technically preclude satisfiability b respect   special
  

fimartiny   moller

beliefs

non strict beliefs
   

strict beliefs
   

      
innermost beprior beliefs
lief interest

posterior beliefs
t     

 

  
belief   beliefs
   
   u 
bi  
 bj t
   

belief beliefs
  u
   
b   
   bj t    
tf
   b 

belief rules
    fr
bi  
 rt  f  g  

belief facts
   
bi  
 ft  

disjunctive belief
formulae
   
   
bi  
     bi  
    

belief dynamic rules
   

belief facts
   
bi t
   ft  
belief rules
    fr
bi t
   rt  f  g  

disjunctive belief
formulae
   
   
bi  
     bi  
    

belief dynamic rules
   

t   b 

belief static rules
   
t   b 

type    beliefs
highest impact 
restrict every
world every time point 

belief static rules
   

type    beliefs restrict threads independently probabiliy assignment 
moreover  potentially restrict possible worlds individual time points 

figure    taxonomy belief formulae

  

t   b 

type    remaining beliefs 
treated way 

fipdt logic

case suitable probability assignment  thread h
belief b t   b  b t   b  satisfied  could still suitable probability
assignments i t   sat b    holds iff i t h       effect excluding
thread h assigning prior probability i t h  zero  cf  remark     
p       i e   respective thread marked impossible  since aim reducing
search space possible threads input satisfiability check sat b    
exploit belief formulae t   b  t   b  exclude impossible threads prior searching
suitable probability assignments 
type   belief formulae depicted figure    set type   belief formulae
    pfr
formed formulae strict prior beliefs static rules bi  
 r   f  g   b  since
prior beliefs represent background knowledge since follows definition
strict beliefs cannot violated world  clear rule r pfr  f  g 
always satisfied  static rule  satisfied every world
b   define set type   beliefs
    pfr
t   b     b b   b   bi  
 r   f  g   

    

arbitrary formulae f g 
type   belief formulae set type   beliefs contains strict prior beliefs
set t   b   contributions set t   b  twofold  t   b 
comprises strict prior beliefs  every thread potential set threads satisfy
beliefs b t   b   moreover  constraints t   b  may constrain sets worlds
b  t  individual time points regardless specific thread  according
figure    define set type   beliefs

   
t   b    b b  
b   bi  
 ft  
    pfr
b    bi  
 rt  f  g       

   
   
b    bi  
     bi  
      



    

potential set possible threads   beliefs specified set t   b 
satisfied every thread h   note satisfiability beliefs dynamic rules
disjunctive belief formulae generally depends worlds multiple time points thus
satisfiability t   b  cannot ensured constraining sets worlds single time
points  however  analyzing strict prior beliefs facts potential interplay
dynamic rules derive constraints sets worlds b  t  specific time points
follows 
   
strict prior beliefs facts b   bi  
 ft   restrict set admissible worlds b  t 
time enforcing f holds every world b  t   following  use tf   b 
denote strict prior beliefs facts f certain time points t  moreover  use
   
b    ft shorthand bi  
 ft   b denote b enforces f time t 
interplay existing constraints sets possible worlds b  t  individual
time points t  strict beliefs dynamic rules yield additional constraints  belief
    pfr
formula b   bi  
 rt  f  g         additional constraints might derived  depending
type belief respective rules premise f    t   b  tf   b      ft given 
  

fimartiny   moller

   
extract strict prior belief fact b     bi  
 gt t    restricts
set possible worlds time point   therefore added tf   b  
since dynamic rules considered temporal implications  cf  definition     
section     rules applied backwards obtain additional constraints 
    pfr
belief formula b   bi  
 rt  f  g        given rules negated conclusion g
already enforced time point  i e    t   b  tf   b      gt    rules premise
   
f cannot satisfied time t  thus  add belief b     bi  
 ftt  
f
additional constraint t   b  
extending set type   beliefs dynamic rules may lead chained ex    pfr
tension  belief dynamic rule bi  
 rt  f  g   corresponding belief
   
   
f
bi    ft   t   b   lead additional belief bi  
 gt t   tf   b  
    pfr
turn might trigger another dynamic rule bi  
 rt  g  g      analogously  additional
belief tf   b  could trigger backward rule applications 
capture constraints emerge forward backward chaining strict
dynamic rules  define set tf   b  following fix point set  

tf   b   

   
 bi  
 ft   b 
   
 bi  
 gt t    

    pfr
    bi  
 rt  f  g   b

 t   b  t   b      ft  

   
 bi  
 ftt    

    pfr
    bi  
 rt  f  g   b

 t   b  t   b      gt  

    

determined constraints individual time points  reduce
   
set tf   b  contains one belief bi  
 ft   every time point t 
   
   
f
t   b  contains multiple beliefs bi    ft    bi    gt   regarding time point t 
   
replace joint belief bi  
 ft    f     f g  note substitution
uses lemma      p      merge different belief expressions one expression
conjunctive belief object  still assume belief formulae conjunctions belief
operators separated atomic belief formulae 
type   belief formulae set type   belief formulae consists beliefs b
neither type   type   beliefs  thus define set
t   b     b   t   b     t   b 

    

   representation  considered influence temporal rules set tf
   b  
   
   
principle  information disjunctive formulae b   bi  
     bi  
 n   t   b  could yield
additional constraints sets b  t   tf
   b  enforces n  disjuncts b false  remaining
disjunct must satisfied  belief objects respective disjuncts might dynamic rules again 
formal representation consideration would result rather intricate specification  since
ensure potential thread satisfies beliefs t   b  anyways  omitting disjunctive formulae
construction tf
   b  impact satisfiability results  yet actual implementation
described procedures could exploit consideration obtain additional pruning conditions special
cases 

  

fipdt logic

example      trains continued   continuing set belief formulae b example      p      assuming conjunctive formulae b   b   b    treated
individual formulae b   b      obtain following sets typed belief formulae 
    pfr

t   b    ba  
r   punct train  at train  city   obs a   punct train   
 b   
   

t   b    ba  
at t    ca     

   
ba  
on a  t      

 b    
 b     


   
ba  
r pfr   punct t    at t    ca    at t    cc   on a  t      

    pfr
ba  
 r   punct t    at t    ca    at t    cc   on a  t      

   
ba  
r pfr   punct t    at t    cc    at t    cb   on a  t    

   
ba  
r pfr  punct t    at t    cc    at t    cb   on a  t      
   

tf   b    ba  
at t    ca     

   
ba  
on a  t      

 b    
 b     
 b    
 b     
 b    
 b     

t   b    b   t   b    t   b 

        pfr
   ba  
r   at t    ca    punct t      

        pfr
ba  
r   at t    cc    punct t      

        pfr
ba  
r   obs a   punct train    obs ab   punct train     

 b    
 b     
 b   

taxonomy belief formulae provides means construct sets admissible worlds
b  t  every time point   type   beliefs  i e   beliefs highest impact 
constrain global set possible worlds b   certain beliefs type  materialized
set tf   b can give additional constraints specific time points t 
subsets b  t  b need considered possible worlds time t  sets
t   b  t   b  together provide satisfiability conditions independent
specific probability assignments  then  beliefs type   need considered
probabilistic constraints check whether b satisfied respect   i e  
satisfiability problem sat b    previous section reduced sat t   b     
unsatisfiability b yet shown constraints t   b  t   b  
since prior constraints define necessary conditions potential thread  give
rise definition thread soundness respect given set belief formulae b 
definition      thread soundness   let b set belief formulae  let t   b 
t   b  set type   type   belief formulae set  respectively  then 
thread h sound respect b  denoted snd t h  b   satisfies belief formulae
t   b  t   b  
snd t h  b  b  t   b  t   b     h    b
  

    

fimartiny   moller

accordingly  use snd t   b  denote threads h sound 
note definition relies strict prior beliefs soundness property
therefore verified every thread individually  without consider threads
probability assignments  thus  simplified version model checking procedure
section     used verify soundness  intuition behind property
verify easily prior checking sat b    therefore obtain reduced version
satisfiability problem 
theorem       reduced satisfiability checking   let b set belief formulae  let
t   b  set type   beliefs b according       let set sound
threads  then  b satisfiable respect iff t   b  satisfiable respect  
sat b    snd t   b  sat t   b    

    

proof  follows directly definition      snd t   b  defined satisfies
belief formulae sets t   b  t   b   consequently  sets resemble tautologies
respect therefore impact satisfiability checking
properties  thus  instead checking b satisfiability  suffices check set  b  
t   b     t   b   exactly definition t   b  
      constraining possible worlds individual time points
using classification beliefs b three different types  continue
constructing sets possible worlds b  t  every time point   main goal
section identification obvious pruning conditions possible worlds specific
time points  since process searching set possible threads
satisfies set belief formulae b  constraints sets b  t  potential
significantly reduce later used search space  thus  results section highlight
possible optimizations implementation pdt logic sat solver  even following constraints notor partiallyapplied  search possible threads
described subsequent section     carried out  yet potentially larger search
space 
since set type   beliefs satisfied every admissible world  define
global set admissible worlds b follows 
definition      global set admissible worlds   let b set belief formulae 
corresponding sets belief objects fb type   beliefs t   b   then  set
admissible worlds b w r t  b given
n


    pfr
b   b fb   adm   bi  
 r   f  g   t   b        f g   
    
remark      definition uses adm   ensure worlds b admissible
defined external definition      p       alternatively  could use existing
formalism encode admissibility conditions directly strict prior beliefs b 
    pfr
    pfr
bi  
 r   obsg  l   l   g   g   bi  
 r   obsg  l   obsg    l    represent conditions  
  definition      respectively  however  since conditions independent
respective problem modeled  include problem specific belief
set b  use external constraints 
  

fipdt logic

example      trains continued   global set worlds b admissible respect
b example      p      automatically constructed combinations
events fb shown example      p       given combinations admissible
respect definition     satisfy type   beliefs t   b  example    
 p       refrain enumerating worlds explicitly instead describe
worlds excluded herbrand base b fb fb   fb follows
possible shared observation b fact train punctual
 obs ab   punct train     every possible world observation occurs  admissibility conditions require agents b observe respective train
punctual train indeed punctual  furthermore  beliefs t   b 
require corresponding observation every possible world
train punctual  which incidentally enforces admissibility conditions
observations  
next  build upon set globally admissible worlds b use set
type   beliefs prune set admissible worlds b  t  individual time points
t 
definition      local sets admissible worlds   let b set belief formulae
corresponding sets admissible worlds b   tf   b  set materialized strict
prior beliefs induced t   b  t   b   set time points  then  set
admissible worlds b  t  w r t  b time given
n


   
f
b  t    b   bi    ft   t   b       f
 
    
example      trains continued   obtain scenario original example     
assume tmax      set tf   b  identified example      restrict set
worlds time  
n

b       b       at t    ca   on a  t    
time points  options restrictions  thus respective
local sets b  t  possible worlds time points      remain b  
using definition      formulate constraints set sound threads  
h     h t  b  t  

    

note constraint provides necessary sufficient condition thread
soundness  illustrate this  consider example     again  set tf   b  requires
 at t    ca    on a  t     holds every possible world time     thus constrain b     shown example      thread violating constraint
inherently unsound  hand  thread according      may contain
fact  say punct t    h     whichaccording b   yields sound thread
 at t    cc    on a  t     h    holds well  thus       provides general constraints
set threads respect beliefs t   b  tf   b   additional beliefs
t   b  discard individual threads catching potential unsatisfiable interplay
possible worlds different time points 
  

fimartiny   moller

course  general possible methods discussed far result special
cases  one thing  possible b induces set t   b  tf   b  inconsistent
beliefs  i e   contain beliefs contradict other  then  b b  t 
empty  precludes creation set threads i t      b 
case  satisfiability checking terminate immediately negative result 
another  possible simplification process result empty set
t   b   case  probabilistic constraints could impact satisfiability
b thus unnecessary search suitable probability assignment  case 
needs checked whether threads compliance      sound according
definition      thread found  satisfiability checking terminate
immediately positive result  otherwise b unsatisfiable  verifying soundness
single thread done simplified version model checking procedure
section     therefore ptime  cf  corollary       however  number threads
satisfying condition      grow exponentially number ground atoms
number time points  problem finding sound thread complex 
theorem       complexity finding sound thread   let b set belief formulae
included formulae grounded  deciding whether exists sound thread
respect b  defined definition      np complete 
proof  according definition      set sound satisfies formulae set
t   b  t   b   treating belief objects atoms f time points individual
variables ft   transform beliefs facts belief rules t   b  t   b 
boolean sat problem follows  
   
bi  
 ft  

ft

    pfr
bi  
 rt  f  g  

tmax
 t
t  

 ft gt t  

accordingly  disjunctive belief formulae expressed transforming every
disjunct individually  transformation requires tmax conjuncts every belief
operator therefore performed linear time  since boolean sat problem
known np complete  cook         follows searching sound thread
respect b np 
np hardness problem already shown proof theorem     
 p      consequently follows searching sound thread respect b
np complete 
noted result analyzes worst case complexity problem 
practice finding sound thread usually dominated worst case 
cases  sound thread found easily employing principle least effort 
    pfr
belief temporal rules bi  
 rt  f  g    choosing worlds    f ensures
consequences rule evaluated time points  accordingly 
   transformation defined temporal rules point frequency functions pfr 
frequency functions used  transformation adapted accordingly 

  

fipdt logic

disjunctive rules disjunct selected temporal rule triggered
fact  course  heuristic may give sound thread immediately
every input b  represents feasible approach problems  illustrate
approach example subsequently 
work  consider ground formulae pdt logic  general  formalism
introduced section   allows treatment non ground formulae well  however 
non ground formulae complexity result theorem      hold 
transformation boolean sat problem exponential number possible
groundings  finding sound thread requires use sophisticated grounding procedures   e g   dal palu  dovier  pontelli    rossi       faber  leone    perri        
beyond scope work 
sets possible worlds identified every time point   proceed
creating sets representative threads respect constraints  aim
following discussion successive generation set representative threads
sat b    decided 
    representative threads
using definition     constraint      gives rise potential definition set
possible threads constructing possible combinations sound world sequences
b  t    however  would still result unnecessarily large set possible
threads  instead constructing threads explicitly  heuristically create
representative threads represent excerpts situations modeled t   b  
approach uses heuristics successively expand set representative threads  soon
suitable set threads  i e   model b  found  decision procedure terminate
positive result  set representative threads show satisfiability
b  additional threads created either positive satisfiability result obtained
possible threads created  consequently  heuristic search models
constitutes complete decision procedure pdt logic 
following discussion  assume set t   b  nonempty  i e  
additional constraints need satisfied generated set threads  otherwise 
set t   b  empty  satisfiability could already determined checking whether
sound thread respect b exists  discussed previous section
would need generate specific set threads 
  u
    u 
beliefs facts bi t
   ft   b  dual belief negated fact bi t   ft  
       u u         cf  corollary      p      satisfied well 
  u fr
beliefs rules bi t
   rt  f  g    satisfiability depends accumulated subjective posterior interpretations threads weighted respective frequencies  goal
  u
following procedure successively create threads every belief fact bi t
   ft  
t   b   obtain representatives set threads  i  satisfy
respective fact ft set threads satisfy ft    ii  exhibit varying fre  u fr
quencies beliefs temporal rules bi t
   rt  f  g   t   b   consequently  belief
formulae considered splitting rules application generate representative threads results procedure similar tableau based methods  however  beliefs
temporal rules induce splits forward backward time thusunlike con  

fimartiny   moller

ventional tableau based methodsthe following procedure create tree structure 
instead set sequences represent possible threads  key difference
generation representative threads logical sat solvers pdt logic
virtually impossible discard generated potential thread  probabilistic nature semantics requires threads considered given formula
holds  threads not  thus  even threads violating objects given
belief formulae usually required show satisfiability corresponding set belief
formulae b  following discussion provides general outline decision procedure
pdt logic set belief formulae b given  actual implementation
methods possible  obtain feasible run times practical problems  various
optimization techniques research logic reasoning implementations would need
implemented  beyond scope work 
      generating representative threads
  u
since existence non strict belief fact bi t
   ft   requires existence
least two threadsone  respective belief object satisfied one 
not  start creating two threads hb           b  tmax  i obtain
set   ht h    h  h     h     belief objects   ft contained
set t   b  obtain minimal set set threads belief formulae
b t   b  potentially satisfied  set subsequently expanded
additional threads either suitable set threads show satisfiability t   b 
found  additional threads created 
allow concise notation  following adapt frequency notation
belief objects use      denote true       denote false 
generally  x   denote holds frequency x  course  values     x    
occur belief objects represent temporal rules  notation  try
create initial sound threads
 
h        j   
    
j

h    

 
j

   j  

    

holds respective belief objects j belief formulae bj t   b   
initial set    t h    h    meant represent two extreme choices possible
threads respect t   b  provide suitable starting point subsequently
employed search heuristic  general  necessarily possible create extreme
threads compliance           every possible set belief formulae t   b  
  u
  u
instance  t   b  might contain conflicting beliefs facts bi t
   ft   bi t   ft    obviously 
single thread satisfy belief objects simultaneously  might still possible
  u
   technically  non strict belief bi t
     could satisfied single thread h h   
beliefs quantification upper bound u      might give rise optimizations
actual implementation  sake simplicity  consider case explicitly 
  u
  u
 
  
   notation slightly simplified  disjunctive belief formulae bj   bi t
   j   bi t   j    use j
 
  
abbreviation j j  

  

fipdt logic

create set threads thattogether suitable probability assignmentboth
beliefs satisfied  thus            characterize intended goal creating
initial threads h    h    represent hard constraints threads 
find suitable threads match constraints  employ principle least
  u
effort adding facts possible thread  every belief fact bi t
   ft   
add explicit constraints f h   t  f   h   t   h  represents
thread belief objects true h  represents set belief objects
  u fr
false  beliefs rules bi t
   rt  f  g   add g h   t   t   resp  f h   t t  
whenever another constraint enforces f h   t   resp  g h   t    occurrence
fr  f  g  trivially satisfied frequency
f respectively g enforced h    rule rt
   i e   occurrences f followed g steps 
constraints need added  analogously  h  need ensure f holds
least whenever f h   t  holds  g h   t   t  holds  well 
  u
  u
disjunctive belief formulae bi t
       bi t        need ensure belief object  
  holds thread h    described above      holds thread h   
possible  respective belief object     thread h  chosen
additional beliefs triggered  we say belief triggered fact f   existence
f enforces another constraint belief temporal rule disjunctive belief
formula   nested belief formulae treated respect innermost belief
object  constraint cannot applied conflict previously added
constraints t   b   simply skipped stage  creation h  h 
initialization step heuristic search possible set threads  skipped constraints
still considered later subsequent expansions 
whenever constraint regarding fact f added h  h    necessary
check whether triggers additional rules set type   beliefs t   b   necessary 
resulting facts added respective threads  application works analogously
construction set tf   b  described section        finally  belief
formulae processed  search sound thread respect created
constraints  usually  sound thread found easily choosing facts
yet unconstrained h  h  trigger additional beliefs 
especially  possible worlds h t  unconstrained  choose h t    b
contain belief rules purely negative preconditions disjunctive belief
formulae satisfiable   generally  principle least effort
employed worlds selected belief formulae need
considered  selection impossible addition f f
world triggers additional beliefs  then  consequences adding respective fact
need evaluated  well  resulting set    t h    h    provides minimal
set representative threads used check sat t   b     
following  show principle least effort used obtain representative threads efficiently possible  constraints used following example
provide minimal number constraints need enforced obtain representative threads desired threads h  h    worlds without specific
constraints  simply use     one easily verify indeed yields threads
compliance           

  

fimartiny   moller

example      trains continued   continue train example sets typed
belief formulae specified example      p      example      p       shown
set worlds time   b     restricted  at t    ca    on a  t    
every world b      set t   b  contains three non strict belief formulae  namely

        pfr
t   b     ba  
r   at t    ca    punct t      
 b    

        pfr
ba  
r   at t    cc    punct t      
 b     

        pfr
ba  
r   obs a   punct train    obs ab   punct train     
 b   
evaluating belief formulae  obtain constraints possible worlds
threads h  h    visualization following steps given figure   
analysis belief formula b   results constraints punct t    h     
punct t      h       facts turn trigger rules b   b      respectively 

   
ba  
r pfr   punct t    at t    ca    at t    cc   on a  t    

    pfr
ba  
 r   punct t    at t    ca    at t    cc   on a  t      

 b    
 b     

resulting additional constraints  at t    cc    on a  t     h       at t    cc   
on a  t     h      
application belief formula b    yields additional facts punct t    h     
punct t      h       again  triggers rules t   b  

   
 b    
r pfr   punct t    at t    cc    at t    cb   on a  t    
ba  

    pfr
 b     
 r   punct t    at t    cc    at t    cb   on a  t      
ba  
resulting additional constraints h        at t    cb    on a  t    h       
at t    cb    on a  t    
note belief formula

   
ba  
r pfr  punct train  at train  city   obs a   punct train   
 b   
t   b  provides global constraint set possible worlds b
obs a   punct train   holds every world punct train  holds  thus obtain
thread h  additional facts obs a   punct t     h      obs a   punct t    
h      
finally  rule

        pfr
ba  
r   obs a   punct train    obs ab   punct train   
 b   

  

fipdt logic

  
h  b 
b 
 
h  b 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

b   

b   
b 

b  

b   

at t    cc    on a  t   
punct t   



 

b  


 

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   

 

b   



at t    cb    on a  t   

 



 

figure    visualization representative thread set generation train example 
threads start given facts at t    ca    on a  t     applications
formulae t   b such h  contains positive belief objects h 
contains negative belief objectsare marked blue  additional constraints
t   b  t   b  marked red 

change created threads h    h    h  rules precondition never
enforced satisfied thus resulting frequency one  lack
observation h  even though nonpunctual trainsensures resulting
frequency zero 
trying solve resulting problem sat t   b    t h    h      non strict belief
formulae yield following constraints h   
b    
b   

 

b   

     i t h        

     i t h        

     i t h        

clearly  constraints cannot satisfied simultaneously therefore set  
 t h    h    insufficient show satisfiability t   b   and therefore b  
created set threads fails show satisfiability t   b   additional threads
created continue searching expanded set t   b  satisfied
respect   based existing thread h  additional thread h  created
ensuring one conjunct h  h            satisfied anymore 
i e   given thread h existing constraints  xk k    new thread h 
obtained substitution
 
 
h     xj j   h    
 xj j   x k k   x k    xk  
    
j

j  k

every substitution one conjunct new constraint provides choice point
direct continuation search suitable set threads  constraint notation
   used provide formal characterization choice points  practice  new thread
h  satisfying constraint usually created easily addition new
modification existing facts h follows  simplify following discussion 
assume expansion keeps history expansion steps resulting consequences 
effects adding additional f undone respective fact f
changed newly created thread 
  

fimartiny   moller

definition      principle least effort  ple  expansion   let set threads let
t   b  set type   belief formulae  principle least effort expansion creates
expanded set      t h    according single application one following rules 
  u
 possibly negated  belief fact bi t
   ft   t   b   exists thread

h f h t   resp  f   h t   yet enforced  h  created
duplication h additional constraint f h t   resp  f
  h t   

  u fr
belief temporal rule bi t
   rt  f  g   t   b   exists thread

h f h t  g h t   t   resp  g
  h t   t  
 
yet enforced  h created duplication h additional constraint
g h t   t   resp  g   h t   t   

  u
  u
disjunctive belief formula b    bi t
       bi t         t   b   possible 
  u
expansion carried respect one belief bi t
     described two
previous steps 

nested beliefs treated respect innermost belief object 
new thread h  created h addition f h 
fact f time point f   h enforced original thread h 
consequences adding f   h undone new thread h   

then  created thread h    additional belief formulae t   b 
triggered modification need evaluated obtain sound thread 
described creation initial threads h    h   

intuition behind ple expansion create additional threads satisfy
alternative set belief objects contained set t   b  little effort possible 
general  possible add constraints arbitrary facts arbitrary time points
continue successive expansion based thread  however  would result
rather aimless exploration exponential search space  following ple expansion
instead helps direct search suitable model guided rules specified
t   b   illustrate this  consider figure   previous example  possible pleexpansions could example result additional thread altering punctuality
train t    clearly  resulting situations intended model  already
considered original thread specification  cf  figure    p       hand 
deviating ple expansion  one could add additional factssay at t    ca    on a  t   
arbitrary time points      could give rise multiple subsequent expansions
resulting thread may actually serve generate model b 
situation intended specification b  example train punctuality
illustrates requirement undo operation  fact punct t    h      produced
additional constraint  at t    cb    on a  t     time      clearly  constraint
enforced longer ifbased h  new thread h  created
punct t      h      
information violated constrains linear program corresponding
sat t   b    t h    h      perform dependency directed selection choice points 
   

fipdt logic

  u
lower bound belief bi t
   k   cannot satisfied current set threads 
 
additional thread h created existing constraints h  h 
substituting respective constraint k   shown      
dependency choice points violated lower bounds best illustrated
results previous example  clearly  upper bounds induced b   b   
lower bound induced b  hinder satisfiability t   b  respect created
threads  using belief object formula b    or b      create additional thread h 
yields updated constraint

b    

     i t h      x i t h        

factor x depending frequency respective belief object h   
constraint induced b  remains unchanged  result  new constraint allows
lower values i t h     thus lower bound induced b  remains unsatisfiable 
using belief object formula b  create additional thread instead yields
constraint
b   

     i t h      x i t h         

whichthrough nonzero values x i t h   potentially allows lower values
i t h     note example uses atomic belief formulae  disjunctive belief
  u
  u
formulae b    bi t
      bi t          respective belief objects violated
lower bound used direct selection subsequent choice points  given
disjunct b satisfiable  course  
combining information violated lower bounds principle least effort
provides multi stage heuristic proceed dependency directed selection choice
points 
definition      dependency directed search heuristic   let t   b  set type   belief
formulae let set threads sat t   b     holds  then  enable
dependency directed search expanded set   sat t   b       holds 
expanded additional thread h    according following rules 
   existing set threads fails satisfy lower bounds constraints induced
belief formula b belief object additional thread h  obtained
one ple expansion respect   expanded      t h    
   otherwise  dependency directed ple expansion possible  another ple expansion
applied   possible 
   finally  ple expansion possible   additional thread h  created
adding constraint f h t   resp  f   h t   arbitrary facts f
yet constrained h t  
intuition behind heuristic information violated probabilistic constraints used select suitable next expansion step  possible  otherwise 
possible ple expansion steps performed use rules t   b  guide
   

fimartiny   moller

search  ple expansions possible  additional constraints employed continue search  restricting possible expansions respect criterion  
one step follows principle least effort  again  illustrate this  consider example     
shown created set threads  t h    h    fails satisfy lower bound
belief formula b    thread h    world h   t     obs a   punct train  
precondition rule b  satisfied  consequently  single step
ple expansion h  could change constraints induced b    hand 
h  provides two choice points therefore preferred expansion  note
soundness requirement determine choices unconstrained facts  thus 
general proposed expansion may produce threads already contained
constraining facts determined before  consider scenario
explicitly instead assume cases  expansion steps performed
additional thread created 
      thread generation example
illustrate expansion set threads respect dependency directed
search heuristic definition      following resume train example 
example      trains continued   previous example  set threads    t h    h   
created fails show satisfiability t   b   consequently  heuristic
definition     used iteratively expand set expanded set threads
  created model b obtained expansions   possible 
belief formula

        pfr
r   obs a   punct train    obs ab   punct train   
b    ba  
already identified belief formula yields constrains unsatisfiable
lower bound therefore used guide subsequent expansion 
already discussed before  single step ple expansion h  possible influence
constraints induced b    therefore continue expansion based thread h   
visualization following steps given figure   
two worlds h  obs a   punct train   satisfied  namely
obs a   punct t     h      obs a   punct t     h       occurrences allow ple expansion  choose h      perform expansion  yields
new thread h  additional constraint obs a b   punct t     h      
constraints h  remain intact  since constraints need undone
adding obs a b  h      
expanded set      t h    used check sat t   b        thread
h    rule contained b  satisfied one two occurrences obs a   punct train  
therefore yields frequency      consequently  transformation linear
program obtain constraints
b    
b   

 

b   

    

i t h   

    

    

i t h          i t h   

    

    

i t h   

   

    

fipdt logic

h 

h 

  
h  b 
b 
 
h  b 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
 

obs a b   punct t    

obs a b   punct t    
b 
b   

b   
b 

b  



at t    cc    on a  t   
punct t   

b   
 

b  

 
 

obs a b   punct t    

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   



 

b 

at t    cb    on a  t   

b   



 

 



figure    visualization ple expansions train example  applications formulae
t   b  marked blue  additional constraints t   b  t   b 
marked red  expansion steps marked green 

apparently  b  allows lower values i t h    set     constraints
induced b    resp  b      still obtain i t h            then  constraint induced
b  requires i t h            since                          still suitable
probability assignment since sum priors exceeds one  consequently  thread
set expansion continues  constraints show thataccording condition  
search heuristicthread h  suitable candidate expansion respect
belief object b   
thus  based h    create additional thread h  ple expansion 
case  possible expansion step obs a b  h       results frequency
one rule contained b    thus  testing sat tk  b       expanded
set   yields following constraints 
b    
b   

 

b   

    

i t h   

    

    

i t h          i t h        i t h   

    

    

i t h   

    

constraints satisfiable  instance

i t                            
thus  sat t   b       returns positive result satisfiability checking b terminate
result 
result concludes satisfiability testing set belief formulae b originally
specified example      p       nevertheless  illustration purposes show result
applications ple expansion steps figure    changes additionally
created threads obtained respectively different application belief
formula t   b   marked blue respective threads  worlds h t  remain
unconstrained saturated application ple expansions marked   
worlds give rise expansions according step   search heuristic 
   

fi   

 
h  b 

  
h  b 
b 

h 

h 

h 

h 

h 

h 

h 

 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

at t    ca    on a  t   
punct t   

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

b  

 

 

 

 

 

 

 

b   
b 

b 

 

 

 

b   

b   

obs a b   punct t    

obs a b   punct t    

 

 

 

 

obs a b   punct t    
b 

 

 

b   

  
  b 
b 

 

 

 

at t    cc    on a  t   
b  
punct t   
 

 

 

 

 

at t    cc    on a  t   
punct t   
 
obs a   punct t    
at t    cc    on a  t   
punct t   
 
obs a   punct t    

 

 

 

 

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   

b   

b 

obs a b   punct t    

at t    cc    on a  t   
punct t   

at t    cc    on a  t   
punct t   

 

 

 

 

 

 

 

b   

 

 

 

 

obs a b   punct t    
b 

 

 


at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

obs a b   punct t    
b 

 

 

 

 

 

at t    cb    on a  t   

 

at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

b  

 

martiny   moller

figure    visualization continued ple expansions train example  applications
formulae t   b  marked blue  additional constraints t   b 
t   b  marked red  expansion steps originating h  h 
marked green orange  respectively  unconstrained worlds marked
  

fipdt logic

comments resulting set threads example necessary  comparing final threads depicted figure   original set threads introduced
figure   shows expansion result largely corresponds original specification
 except differing thread labels   notable differences however 
first all  additional predicate punct train   introduced
example      p      allow concise specification background knowledge 
concept nonpunctual trains  and especially respective ramifications 
implicitly encoded figure   well  change properties
modeled example 
explicit representation train punctuality  observations nonpunctual
trains expressed explicitly example  previous example uses
ramifications nonpunctual trains model observations  since rules b 
b  assert ramifications punctual respectively nonpunctual trains common
knowledge among alice bob  modeling alternatives preserve intended
meaning example 
another difference timing alices observations  original example
assumed observation occurs time point train supposed
arrive destination city  current example assume alice already
observes train punctual leaving departure city  reason
change solely illustration purposes  specifying rule b  alice
immediately observes nonpunctual train yields type   belief thus serves
illustrate additional facts obtained global constraints  since rule
b  ensures potential calls bob  i e   shared observations  occur two time points
alices original observation  intended model original example still
maintained 
points concerned specific details modeled domain 
comparing set threads figure   threads figure   shows
general modeling problem  instance  analyzing worlds time point  
figure   shows alice  necessarily  train t    train
previous time point later time points  naturally  one expect
alice train intermediate time points boarding exiting
train  instance frame problem  e g   reiter        occurs
specifying dynamic systems logic formulae  generally  frame problem
concerned finding suitable set axioms describe adequate evolutions
world  modeling perspective  evolutions alice vanishes reappears
train ride obviously adequate evolutions world  application
final step search heuristic could yield tremendous blow up
considered set threads  modeled problem  would clearly result
unintended models  resulting models could still serve show satisfiability
respective set belief formulae b  even though result might desired 
problem could fixed adding successor state axioms style reiter 
e g   specifying alice train  remains next time point
unless explicitly exits train 
   

fimartiny   moller

      properties representative thread generation
section  provide results connect set representative threads satisfiability problem pdt logic discuss complexity generating representative
threads 
theorem       pdt logic decision procedure   let b set pdt logic belief
formulae  let    t h    h    initial set threads length tmax obtained
b according equations            iteratively expanding set according
search heuristic definition     testing sat t   b       expanded sets  
 i  sat t   b       returns positive result   ii    fully expanded respect
search heuristic yields sound complete decision procedure sat b  tmax   
proof  initial set threads    t h    h    expanded sets   obtained ple expansion steps defined sound threads according
definition     considered  theorem       p      states decision problem
sat t   b     equivalent sat b    set contains threads sound
respect b  positive result sat b    threads length tmax shows
model b thus sat b  tmax   follows  consequently  positive result
sat t   b       always proofs b satisfiable tmax time points 
hand  model b found possible create
additional threads according search heuristic definition      p        search
space fully explored  follows model b tmax time points
exists therefore b unsatisfiable tmax time points  consequently  follows
pdt logic decision procedure sound 
properties  completeness result straightforward  arbitrary
input b tmax   either model found non existence model
proven full exploration search space  thus completeness procedure
follows 
following  analyze complexity generating representative threads
set belief formulae b 
theorem       complexity representative thread generation   let b set belief
formulae  creating set expanded representative threads   b expspace 
proof  maximum number possible threads given set belief formulae b
determined size  fb   maximum time point tmax   recall equation       p      use fb identify event formulae b use set
ground atoms construct possible worlds  since every pdt logic formula contains
two event formulae  obtain constraint  fb      b   largest set possible
threads obtained sequences combinations possible worlds
time points  yielding   tmax  b  possible threads  worst case   fb      b  representative threads created obtaining satisfiability result  consequently  creating
possible representative threads complexity class dspace  p n    
class expspace 
theorem  immediately obtain complexity results satisfiability problem sat b  tmax   
   

fipdt logic

corollary       complexity pdt sat without given set threads   checking satisfiability set pdt logic belief formulae b without specification possible threads
expspace 
proof  generation representative threads expspace  shown theorem       given set threads theorem      shows satisfiability checking
pdt logic np  thus  increase complexity pdt sat problem without given set threads follows problem expspace 
comments results necessary  since decision procedure outlined
theorem      yields exponential expansion possible threads   need
fed decision problem sat t   b      the exponential space requirement
evident  however  illustrated example  positive satisfiability results
possibly already obtained small sets possible threads   diminutive
size compared entire search space  moreover  discussion train example
shown major part search space stems insufficient rule specifications 
specific problem formalism presented decision procedure  general
problem rule based modeling approaches  namely aforementioned frame problem 
incomplete model specification leads generation unintended models 
serve show satisfiability modeled problem  intended
respective modeler  could lead worst caseboth complexity
model perspectivethat exponential execution decision procedure 
result shows input specification specify intended model 
problem addressed modeling side providing additional axioms ensure
unintended model generated  however  leads significant increase
specification size difficult ensure rule specifications indeed every
unintended model prevented 
ple expansion steps could used heuristic discriminate intended
unintended models  shown train example  applying ple expansion steps
results relatively small set threads  indeed corresponds intention
model  expansions inherently leads exponential growth
set threads introduces additional unintended models  thus  omitting final
step search heuristic would give significantly faster termination decision
procedure  even though resulting procedure cannot prove unsatisfiable sets formulae
longer  however  one could use expansion procedure create set intended
threads first andpossibly inspection modelercontinue use set
perform satisfiability checks respect intended model 
runtime expansion procedure resulting satisfiability checks clearly
tilted towards positive side  set belief formulae satisfiable  good
chance satisfiability shown small number steps  negative results
hand obtained exhaustive exploration search space 
however  many applications negative satisfiability results required  instance 
checking entailment b    b checked reformulation sat b b  
applications relying reformulation  presented procedure unfavorable
positive entailment results never obtained efficiently  one could overcome
problem sketched generating set intended threads first use
   

fimartiny   moller

set perform subsequent satisfiability testsonce set threads given  decision
problems complexity significantly decreases  shown section     

   conclusion
work  extending apt logic dynamic scenarios multiple agents 
developed general framework represent reason belief change multiagent systems  next lifting single agent case apt logic multiple agents 
provided suitable semantics temporal evolution beliefs  resulting
framework extends previous work dynamic multi agent epistemic logics enabling
quantification agents beliefs probability intervals  explicit notion temporal relationships provided temporal rules building concept frequency
functions 
quantification beliefs probability intervals instead precise values
advantage domain experts model problem  provide
background knowledge problem domain  specify certainty
respective specifications  narrow interval quantifications reflect high certainty
vice versa  significant advantage compared probabilistic approaches 
approaches  sharp probability values required human
usually express precise values thus rely guesses  specifying precise
values  actually precisely known yield misleading results  pdt logic
exposed problem  required guess sharp values specify
problem 
shown two alternative ways specifying problems pdt logic 
either explicit enumerations possible threads set appropriate
rules  approaches exhibit specific advantages drawbacks  many problem
domains  requiring exhaustive enumeration possible threads poses severe obstacle
modeling respective scenarios  combinatorial blow up renders specification
practically unmanageable  hand  problem domains  e g   attack
graphs cyber security scenarios  come explicit specification anyways 
types problems  shown possible check satisfiability
models efficiently 
overcome modeling disadvantages thread based approach  shown
problem domain solely specified set pdt logic belief formulae 
problem domains  natural way specifying problem  also 
provides means easily adapt many existing problemsthat specified formal
languages sets rulesto pdt logic  hand  waiving requirement
exhaustive thread specification according probabilities extremely increases
problem complexity checking satisfiability set pdt logic formulae  nevertheless 
even imprecise probabilities given  resulting problem remains decidable
increased complexity might curtailed search heuristics 
combinations approaches possible well  exhaustive specification
possible threads given  probability intervals specified beliefs
imprecise probabilities  satisfiability problem transformed     mixed
integer linear program  variety efficient solvers available class
   

fipdt logic

problems  transformation provides means exploit existing optimizations check
satisfiability pdt logic formulae 

references
aumann  r  j          agreeing disagree  annals statistics                  
baaz  m   egly  u   leitsch  a   goubault larrecq  j     plaisted  d          normal form
transformations  robinson  a     voronkov  a   eds    handbook automated
reasoning  chap     pp           mit press 
balas  e          disjunctive programming hierarchy relaxations discrete
optimization problems  siam journal algebraic discrete methods            
    
balas  e          disjunctive programming  properties convex hull feasible
points  discrete applied mathematics              
balas  e   ceria  s     cornuejols  g          lift and project cutting plane algorithm
mixed     programs  mathematical programming                 
balas  e   ceria  s     cornuejols  g          mixed     programming lift and project
branch and cut framework  management science                   
balas  e     perregaard  m          lift and project mixed     programming  recent
progress  discrete applied mathematics                  
baltag  a     moss  l  s          logics epistemic programs  synthese                  
baltag  a   moss  l  s     solecki  s          logic public announcements  common
knowledge  private suspicions  proceedings seventh conference
theoretical aspects rationality knowledge  tark     pp       
bertacco  l   fischetti  m     lodi  a          feasibility pump heuristic general
mixed integer problems  discrete optimization              
bienstock  d          computational study family mixed integer quadratic programming problems  mathematical programming                 
bradley  s          imprecise probabilities  zalta  e  n   ed    stanford encyclopedia
philosophy  summer      edition  
computational infrastructure operations research  coin or  project  t         
cbc  coin or branch cut  user guide  http   www coin or org cbc index html 
accessed             
cook  s  a          complexity theorem proving procedures  proceedings
third annual acm symposium theory computing  stoc    
cripps  m  w   ely  j  c   mailath  g  j     samuelson  l          common learning 
econometrica                 
dal palu  a   dovier  a   pontelli  e     rossi  g          gasp  answer set programming
lazy grounding  fundamenta informaticae   advances computational logic 
               
   

fimartiny   moller

de carvalho ferreira  n   fisher  m     van der hoek  w          specifying reasoning
uncertain agents  international journal approximate reasoning         
     
doder  d   markovic  z   ognjanovic  z   perovic  a     raskovic  m          probabilistic temporal logic model reasoning evidence  foundations
information knowledge systems   th international symposium  foiks      
ellsberg  d          risk  ambiguity  savage axioms  quarterly journal
economics                 
faber  w   leone  n     perri  s          intelligent grounder dlv  correct
reasoning  essays logic based ai honour vladimir lifschitz  springer 
fagin  r     halpern  j  y          reasoning knowledge probability  journal
acm                 
fagin  r   halpern  j  y     megiddo  n          logic reasoning probabilities 
information computation                
fagin  r   halpern  j  y   moses  y     vardi  m  y          reasoning knowledge 
mit press 
fischetti  m   glover  f     lodi  a          feasibility pump  mathematical programming                 
garey  m  r     johnson  d  s          computers intractability  guide theory
np completeness  w  h  freeman   co 
gerbrandy  j     groeneveld  w          reasoning information change  journal
logic  language information                
gnu

project  t         
glpk  gnu linear programming
http   www gnu org software glpk glpk html  accessed             

kit 

grunwald  p  d     halpern  j  y          updating probabilities  journal artificial
intelligence research                 
gurobi optimization  inc         
gurobi optimizer reference
http   www gurobi com documentation   accessed             

manual 

halpern  j  y     pucella  r          logic reasoning evidence  journal
artificial intelligence research              
halpern  j  y   samet  d     segev  e          defining knowledge terms belief 
modal logic perspective  review symbolic logic                
harsanyi  j  c          games incomplete information played bayesian players 
part i  basic model  management science                 
harsanyi  j  c       a   games incomplete information played bayesian players 
part ii  bayesian equilibrium points  management science                 
harsanyi  j  c       b   games incomplete information played bayesian players 
part iii  basic probability distribution game  management science         
       
   

fipdt logic

hintikka  j          knowledge belief  introduction logic two notions 
cornell university press 
ilog 
i 
       
cplex
optimizer 
   ibm com software commerce optimization cplex optimizer  
      

http   wwwaccessed       

kooi  b  p          probabilistic dynamic epistemic logic  journal logic  language
information                 
kripke  s  a          semantical considerations modal logic  acta philosophica fennica 
         
lloyd  j  w          foundations logic programming   nd edition  springer 
martiny  k   motzek  a     moller  r          formalizing agents beliefs cyber security
defense strategy planning  cisis        proceedings  th international conference computational intelligence security information systems  burgos 
spain        june       
milch  b     koller  d          probabilistic models agents beliefs decisions 
proceedings sixteenth annual conference uncertainty artificial intelligence  uai     morgan kaufmann publishers inc 
murty  k  g          linear programming  john wiley   sons 
parikh  r     ramanujam  r          knowledge based semantics messages  journal
logic  language information                 
plaza  j          logics public communications  proceedings fourth international
symposium methodologies intelligent systems  poster session program  ismis
    oak ridge national laboratory 
plaza  j          logics public communications  synthese                  
reiter  r          knowledge action  logical foundations specifying implementing dynamical systems  mit press 
sack  j          temporal languages epistemic programs  journal logic  language
information                 
sack  j          extending probabilistic dynamic epistemic logic  synthese              
    
schrijver  a          theory linear integer programming  john wiley   sons 
shakarian  p   parker  a   simari  g     subrahmanian  v  s          annotated probabilistic temporal logic  acm transactions computational logic                    
shakarian  p   simari  g  i     subrahmanian  v  s          annotated probabilistic temporal logic  approximate fixpoint implementation  acm transactions computational logic                    
shoham  y     leyton brown  k          multiagent systems  algorithmic  gametheoretic  logical foundations  cambridge university press 
van benthem  j          conditional probability meets update logic  journal logic 
language information                 
   

fimartiny   moller

van benthem  j   gerbrandy  j   hoshi  t     pacuit  e       a   merging frameworks
interaction  journal philosophical logic                 
van benthem  j   gerbrandy  j     kooi  b       b   dynamic update probabilities 
studia logica               
van der hoek  w          considerations logic pfd  logic combining
modality probability  journal applied non classical logics                
van ditmarsch  h   van der hoek  w     kooi  b          dynamic epistemic logic 
springer 
van eijck  j          dynamic epistemic logics  johan van benthem logical
informational dynamics  chap     pp          springer 
van eijck  j     schwarzentruber  f          epistemic probability logic simplified 
gore  r   kooi  b  p     kurucz  a   eds    advances modal logic     invited
contributed papers tenth conference advances modal logic   aiml
    college publications 
vos savant  m          ask marilyn  parade magazine     
williams  h  p          logic integer programming  springer 

   


