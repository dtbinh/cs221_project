journal artificial intelligence research                  

submitted        published      

effective heuristics suboptimal best first search
christopher wilt
wheeler ruml

wilt cs unh edu
ruml cs unh edu

department computer science
university new hampshire
durham  nh       usa

abstract
suboptimal heuristic search algorithms weighted a  greedy best first search
widely used solve problems guaranteed optimal solutions expensive
obtain  algorithms crucially rely heuristic function guide search 
however  research building heuristics addresses optimal solving  paper 
illustrate established wisdom constructing heuristics optimal search fail
considering suboptimal search  consider behavior greedy best first search
detail test several hypotheses predicting heuristic effective
it  results suggest predictive characteristic heuristics goal distance rank
correlation  gdrc   robust measure whether orders nodes according distance
goal  demonstrate gdrc used automatically construct abstractionbased heuristics greedy best first search effective built
methods oriented toward optimal search  results reinforce point suboptimal
search deserves sustained attention specialized methods own 

   introduction
a  best first search expands nodes order f  n  f  n    g n    h n  
optimal solutions provided a   hart  nilsson    raphael       
desirable  time memory often prevent application algorithm  a  fails
either insufficient time memory  practitioners sometimes turn bounded
suboptimal algorithms may return optimal solution  return solution
guaranteed certain factor expensive optimal
solution 
well known likely weighted a   pohl         best first
search expands nodes f order  f  n    g n    w h n    w        variants
weighted a  used wide variety applications  including domain independent
planning  helmert        richter   westphal        robotics  likhachev  gordon   
thrun        likhachev   ferguson         weighted a  component number
anytime algorithms  example  anytime restarting weighted a   richter  thayer 
  ruml        anytime repairing a   likhachev et al         use weighted a  
anytime nonparametric a   van den berg  shah  huang    goldberg        doesnt use
weighted a  per se  rather limiting case  greedy best first search  doran   michie 
       best first search h n   anytime algorithms have  built in  implicit
assumption weighted a  high weight greedy best first search find
solution faster a  weighted a  small weight 
c
    
ai access foundation  rights reserved 

fiwilt   ruml

many popular heuristic search benchmark domains  e g   sliding tile puzzles  grid path
planning  towers hanoi  topspin  robot motion planning traveling salesman
problem  increasing weight lead faster search  weight becomes
large weighted a  expansion order greedy best first search 
results fastest search  first contribution paper provide illustrations
how  domains  greedy best first search performs worse weighted a  
sometimes even worse a  
show failure greedy best first search merely mathematical curiosity  occurring hand crafted counterexamples  rather phenomenon
occur real domains  including variants popular single agent heuristic benchmarks 
second contribution empirically characterize conditions occurs  knowledge
important anyone using suboptimal search  important first step
predictive theoretical understanding behavior suboptimal heuristic search 
root cause failure greedy best first search ultimately traced back
heuristic  used guide greedy best first search goal  a  
number well documented techniques constructing effective heuristic 
revisit guidelines context greedy best first search  third contribution
show that  one follows well established guidelines creating quality heuristic
a   results poor  present several examples following a  wisdom
constructing heuristic leads slower results greedy best first search  use
examples understand requirements greedy best first search places
heuristic 
fourth contribution quantitative metric assessing greedy heuristic  goal
distance rank correlation  gdrc   gdrc used predict whether greedy
best first search likely perform well  gdrc used compare different
heuristics domain  allowing us make informed decisions
heuristic select variety choices  case abstraction based
heuristics pattern databases  quantitative metric used automatically
construct heuristic greedy best first search iteratively refining abstraction
measuring good candidate heuristic is  show iteratively refining
abstraction using simple hill climbing search guided gdrc yield heuristics
powerful built traditional methods oriented toward optimal search 
work increases understanding greedy best first search  one popular scaleable heuristic search techniques  generally  suggests techniques
developed optimal search necessarily appropriate suboptimal search  suboptimal search markedly different optimal search  deserves theory
methods 

   conundrum  ineffective weighted a 
starting point investigation heuristics suboptional search begins
curious empirical observation  although weighted a  one popular way
speeding heuristic search  increasing weight weighted a  always work 
order get better grasp question increasing weight ineffective 
first need empirical data 
   

fieffective heuristics suboptimal best first search

domain
dynamic robot
hanoi     
pancake     
   tiles  unit 
grid
topspin    
topspin    
   tiles  inverse 
city navigation    
city navigation    
city navigation    

average solution
length
      
     
     
     
       
    
     
     
     
     
     

total
states
          
           
      
           
         
           
           
           
      
      
      

branching
factor
     
 
  
   
   
  
  
   
   
    
    

unit cost

yes
yes
yes
yes
yes
yes





table    domain attributes benchmark domains considered
    benchmark domains
consider six standard benchmark domains  sliding tile puzzle  towers hanoi
puzzle  grid path planning  pancake problem  topspin  dynamic robot navigation 
selected domains represent wide variety interesting heuristic
search features  branching factor  state space size  solution length  since
would compare a   forced use somewhat smaller puzzles
possible solve using state art suboptimal searches  requirement problem
size problem solvable a   weighted a   greedy best first search
main memory  eight gigabytes   basic statistics domain variants
summarized table   
sliding tile    puzzle        used random instances manhattan
distance heuristic  used    puzzle  rather    puzzle two reasons  first 
optimally solving    puzzles using a  without running memory requires significant
resources  at least    gigabytes  significantly eight gigabyte limit  according
burns et al          addition that  consider sliding tile puzzle non unit
cost functions  non unit problems significantly difficult solve
unit cost variants  non unit version sliding tile puzzle consider uses inverse
cost function  cost moving tile n   n  manhattan distance heuristic 
weighted appropriately  admissible consistent cost function 
towers hanoi  considered    disk   peg problem  used two disjoint pattern
databases  one bottom    disks  one top two disks  korf   felner 
       pancake problem  used gap heuristic  helmert         grid path
planning  used maps     x     cells      cells blocked  using
manhattan distance heuristic four way movement  topspin puzzle  objective
sort circular permutation iteratively reversing continuous subsequence fixed
size  example topspin puzzle figure    considered problem   
disks turnstile would turn either three four disks  denoted topspin   
topspin     heuristic  used pattern database   contiguous disks present 
   

fiwilt   ruml

figure       disk topspin puzzle 
remaining   disks abstracted  dynamic robot navigation problem  used
   x    world     headings    speeds  dynamic robot navigation  objective
navigate robot one location heading another location heading 
respecting dynamics robot  robot able change direction speed
instantaneously  combinations heading speed reached given
state  addition that  states domain represent dead ends  example 
state robot moving full speed directly towards obstacle produce
children  robot crash matter control action applied 
objective minimize total travel time  actions cost 
introduce new domain call city navigation  designed simulate navigation
using system similar american interstate highways air transportation networks 
domain  cities scattered randomly    x    square  connected random
tour guarantees possible get city city  city
connected nc nearest neighbors  links cities cost euclidean distance
     city contains collection locations  randomly scattered throughout city
 which  x  square   locations city connected random tour 
place connected nearest np places  links places cost true distance
multiplied random number        within city special
nexus node contains connections city  goal navigate
randomly selected start location randomly selected end location  example 
might want go location   city   location    city    citys nexus
node location    reach goal example problem must navigate
location   location   city    find path city   city    path
location   city   location    city    example instance type
seen figure    circles left part figure locations  connected
locations  nexus node  location    connected nexus nodes neighboring
   

fieffective heuristics suboptimal best first search

figure    city navigation problem np   nc         cities    locations
city 

cities  right part figure shows entire world  cities shrunk
circle 
city navigation instances classified np nc   consider problems varying
numbers connections  always     cities     places city  since
location within city global position  heuristic direct euclidean distance 
domain  solutions vary length  straightforward manipulate accuracy
heuristic  domain bears similarity ipc logistics domain
locations within cities connected roads  special airport locations used
travel cities 
    results
figures     show number expansions required a   greedy best first search 
weighted a  weights                           plots allow us compare
greedy best first search weighted a  a   determine whether increasing
weight speeds search  slows search 
looking plots figure    easy see increase weight
number expansions goes down  figure    opposite true 
domains  increasing weight initially speeds search  a  relaxed weighted
a   weighted a  transforms greedy best first search  number nodes
required solve problem increases  two domains  topspin turnstile
size   city navigation      number nodes expanded greedy best first search
higher number nodes expanded a   explaining phenomenon central
goal paper 
   

fiwilt   ruml

      

      

      

      

     

    

 

 

 

a                      g

a                      g

dynamic robot

a                      g

topspin   

unit tile

 e   

      

total nodes expanded

   

total nodes expanded

total nodes expanded

total nodes expanded

total nodes expanded

total nodes expanded

   e   

   pancake problem

grid navigation

   disk hanoi

     

     

 

 

a                      g

   

 

a                      g

a               

      g

figure    domains increasing weight speeds search  numbers denote weighted
a  run specific weight  g denotes greedy best first search 

   characteristics effective heuristics
established increasing weight weighted a  always speed
search  situations actually slow search  fact a 
sometimes faster greedy best first search sometimes slower greedy best first
search suggests heuristics work well a  poorly greedy best first search 
heuristics work well greedy best first search a   thus 
question precisely driving difference  algorithm  a  greedy
best first search  needs heuristic 
first review literature suggestions make good heuristic
a   mind  apply a  rules constructing effective heuristic
greedy best first search  leads us observations effective heuristics greedy
best first search distinct common recommendations building good
heuristic a  
    effective heuristics a 
much literature constitutes good heuristic centers well
heuristic works a   finding optimal solutions using a   first important
   

fieffective heuristics suboptimal best first search

inverse tile

topspin   

total nodes expanded

total nodes expanded

      

     

 

     

    

 

a                      g

a                      g
city navigation    

city navigation    

    

total nodes expanded

total nodes expanded

    

    

 

    

    

 

a               

      g

a               

      g

figure    domains increasing weight slows search  numbers denote
weighted a  specified weight  g denotes greedy best first search 

requirement heuristic admissible  meaning nodes n  h  n  true
cheapest path n goal greater equal h n   heuristic
admissible  a  degenerates  no star  guaranteed find shortest
path 
generally believed consistency important  due fact inadmissible heuristics lead exponential number re expansions  martelli        
situation  however  rarely arises practice felner et  al         argue
inconsistency generally much problem generally believed 
widespread rule making good heuristic a  is  dominance good  nilsson        pearl         heuristic h  said dominate h  n g   h   n  h   n  
makes sense  due admissibility  larger values closer h   furthermore
a  must expand every node n encounters f  n  less cost optimal
solution  large h often reduces expansions  dominance represents current gold standard comparing two heuristics  practice  heuristics often informally evaluated
   

fiwilt   ruml

average value value initial state benchmark set  either
case  general idea remains same  bigger heuristics better 
ignore effects tie breaking well effects duplicate states  a 
last iteration ida  expand number nodes  allows us apply
formula korf  reid  edelkamp         predict number nodes
ida  expand cost bound c is 
e n  c  p    

c
x

ni p  c i 

i  

function p  h  kre equation represents equilibrium heuristic distribution 
probability node chosen randomly uniformly among nodes
given depth brute force search tree heuristic value less equal h  korf
et al          quantity tends decrease h gets larger  depending nodes
space distributed  dominance relation transfers kre equation 
meaning heuristic h  dominates different heuristic h    kre equations predicts
expected expansions using h  less equal expected expansions
using h   
considering pattern database  pdb  heuristics  korfs conjecture        lend

insight performance ida   tells us expect   log m 
  n
amount memory pdb question takes up  amount time
expect ida  search consume  n constant  korf         willing
apply results regarding ida  a  equation tells us expect larger
pattern databases provide faster search a   summarize  prevailing wisdom
regarding heuristics bigger better  terms average heuristic value
pattern database size 
    behavior greedy best first search
shall see  advice regarding heuristics helpful considering
a   happens apply wisdom greedy best first search  answer
question taking detailed look behavior greedy best first search three
benchmark problems  towers hanoi  topspin puzzle  sliding tile
puzzle 
      towers hanoi
first domain consider towers hanoi  successful heuristic
optimally solving   peg towers hanoi problems disjoint pattern databases  korf  
felner         disjoint pattern databases boost heuristic value providing information
disks top puzzle  example  consider    disk puzzle  split
two disjoint pattern databases  eight disks bottom pattern database  four disks
top pattern database  a   best results achieved using full
disjoint pattern database  greedy best first search  however  faster search results
use disjoint pattern database  instead use   disk pattern database 
exact numbers presented unit rows table    problems randomly
generated towers hanoi states  goal get disks onto first peg 
   

fieffective heuristics suboptimal best first search

cost
unit
square
rev square

heuristic
    pdb
    pdb
    pdb
    pdb
    pdb
    pdb

a  exp
         
         
       
       
         
         

greedy exp
      
   
     
   
       
   

table    average number nodes expanded solve       disk towers hanoi problems 
  

  

  

  

minimum h

minimum h

  

  

  

  

  

 
  

 
   

   
   
expansions

   

    

  

                                        
expansions

figure    minimum h value open search progresses  using different pattern
databases  single left  two disjoint additive ones right  

theory a  corroborates empirical evidence observed here  disjoint pattern database dominates single pattern database  absent unusual effects tiebreaking  surprise disjoint pattern database results faster a  search 
reason different behaviour a  greedy best first search simple 
greedy best first search using single pattern database  possible follow heuristic
directly goal  h value head open list monotonically decrease 
see this  note every combination bottom disks h value  possible
arrangements disks top share h value  disks top
always moved around independently bottom disks are  consequently 
always possible arrange top disks next move bottom disks
done  disturbing bottom disks  thus leaving h constant  eventually 
h decreases progress made putting bottom disks problem
order  process repeats h      point greedy best first search simply
considers possible configurations top disks goal found 
phenomenon seen left pane figure    minimum h value
open list monotonically decreases number expansions search done
   

fiwilt   ruml

h     

h  
figure    two towers hanoi states  one near goal  top  one far goal
 bottom  

increases  heuristic created single pattern database creates extremely effective
gradient greedy best first search algorithm follow two reasons  first 
local minima all  global minimum goal is  context  define
minimum region space n   every path n goal node
least one node n h n     h n   second  exactly     states associated
configuration bottom   disks  means every     expansions  h
guaranteed decrease  practice  state lower h tends found much faster 
right pane figure    heuristic disjoint pattern database  see
h value head open list fluctuates substantially using disjoint
pattern database  indicating greedy best first searchs policy follow small h much
less successful  states bottom disks near goal
paired poor arrangement disks top assigned large heuristic
values  delays expansion nodes  illustrated figure    top
state significantly closer goal  despite higher h value bottom state 
ignore top disks completely  top state h     compared bottom
states h      correctly conveys fact top state significantly closer
goal  disjoint pdb causes substantial confusion greedy best first search 
prior making progress   bottom disks  greedy best first search
considers states top   disks closer destination  bottom state
expanded  produce children lower heuristic values explored
ever considering top state  state explored first  eventually 
descendants bottom state h   explored  point top state
expanded  causes h value head open list go down 
summarize  disjoint pattern database makes gradient difficult
greedy best first search follow nodes small h one
reason  near goal bottom pattern database returning small value 
particularly near goal  top disks arranged target peg 
suggests following observation regarding heuristics greedy best first search 
   

fieffective heuristics suboptimal best first search

observation    else equal  greedy best first search tends work well
possible reach goal every node via path h monotonically decreases along
path 
may seem self evident  example illustrated conflicts
common wisdom heuristic construction  important note observation
makes comment relative magnitude heuristic  greedy best first
completely irrelevant  matters relative ordering nodes ordered
using heuristic 
another way view phenomenon analogy sussman anomaly  sussman 
       sussman anomaly occurs one must undo subgoal prior able
reach global goal  context towers hanoi problems  goal get
disks target peg  solving problem may involve
undoing subgoals putting top disks target peg  presence top
pattern database encourages greedy best first searches privilege states subgoals
eventually undone accomplished 
korf        discusses different kinds subgoals  different kinds heuristic
searches able leverage subgoals  greedy best first search uses heuristic create
subgoals  attempting follow h goal  example  unit cost domain  first
subgoal find node h   h root     heuristic follows observation   
subgoals form perfect serialization  subgoals achieved one another 
heuristic deviates observation    subgoals induced heuristic cannot
serialized 
another important factor is  course  number distinct nodes heuristic
level one encounters prior finding better node  consider  example  one worst
heuristics  h      technically  heuristic follows observation   paths
contain nodes h      one plateau contains nodes entire space 
obviously undesirable  hoffmann        discusses general idea using term maximal
bench exit distance  again  idea domains quantity
small  greedy best first search enforced hill climbing method perform well 
finding nodes lower h straightforward 
effects exacerbated cost disks top increased relative
cost disks bottom  define cost moving disk
proportional disks size  get square cost metric  cost moving disk
n n    could imagine tower stacked reverse  requiring larger
disks always top smaller disks  case get reverse square cost
function  either case  expect number expansions greedy best first
search require lower using bottom pattern database 
indeed effect observe table    however  top disks heavier disks
bottom  greedy best first search suffers even considered unit
cost problem  expanding order magnitude nodes  pattern
database information top disks returning values substantially
larger bottom pattern database  due fact top pattern database
considers expensive operators  situation reversed  however  top
pattern database uses lowest cost operators  top pattern databases contribution
h much smaller proportion total expansions  since greedy best first search
   

fiwilt   ruml

    

    

greedy search disjoint pdb

greedy search disjoint pdb

    

    

    
    

   

minimum h

minimum h

    

    

   

   
   

   

   
   
 
 

   
    

    
    
expansions

    

 
 

    

      

      

             
expansions

      

      

      

figure    minimum h value open searches using disjoint pattern databases
different cost functions  square left  reverse square right  

performs best top pattern database isnt even present  naturally performs better
contribution top pattern database smaller 
phenomenon vividly illustrated execution times figure    left
figure  disks top pattern database much cheaper move disks
bottom pattern database  therefore contributing much smaller proportion
total value h  right part figure  disks top pattern database
much expensive move disks bottom pattern database 
top pattern database makes much larger contribution h  causing substantially
confusion 
hoffmann        notes success heuristic many domains attributable fact h  heuristic produces heuristic local minima 
heuristic local minima precisely matches observation    always
possible reach goal via path h monotonically decreases 
      topspin
considered topspin    disks turnstile flipped   disks using pattern
databases contained               total disks 
korfs conjecture predicts larger pattern databases useful
a   therefore considered stronger heuristics  indeed  pdb
becomes larger  number expansions done a  dramatically decreases 
seen figure    box plot  tukey        labeled either a  g  for greedy
best first search   number  denoting number disks pdb tracks 
box denotes middle     data  top box upper quartile 
bottom box bottom quartile  height box interquartile
range  horizontal line middle box represents median  grey stripe
indicates     confidence interval mean  circles denote points
    times interquartile range away either first quartile third
   

fieffective heuristics suboptimal best first search

     topspin different pdb s

expansions

     

     

a   g  a   g   a   g  a   g  

figure    topspin puzzle different heuristics  followed number denotes
number disks pdb heuristic  g followed number denotes
greedy best first search number disks pdb heuristic 

quartile  whiskers represent range non outlier data  move left
right  pdb heuristic tracks disks  gets substantially better a  
reductions greedy best first search terms expansions  gains
nowhere near impressive compared a  
reason greedy best first search perform better given larger
heuristic that  larger heuristic  states h     may still quite far
goal  example  consider topspin state represented follows  denotes
abstracted disk 
state               
turnstile swaps orientation   disks  configurations
putting abstracted disks order requires moving disk abstracted  as 
state                             
topspin state  abstraction process takes largest n disks converts
abstracted disks  abstracted disks treated same  state   would
abstracted state    means abstracts state goal  making
heuristic    wanted expand state    could one children
state    whose heuristic still   
state                             
consider different child  example child obtained rotating middle   disks 
   

fiwilt   ruml

state                             
abstracts into 
state               
heuristic state      state   abstracts state    state  
abstract state different state    the abstracted goal  heuristic state
    
abstract disks       still abstract state before  heuristic
still    moving disk abstracted increase heuristic  moving
abstracted disks leave heuristic    unfortunately  transforming state  
goal cannot done without moving least one disks whose index  
   turnstile size   
means subgraph consisting nodes h     topspin
problem disconnected  thus  greedy best first search encounters state h     
state could h     state connected goal via h     states 
would desirable  state could h     state connected goal via
paths contain least one h      nodes  would undesirable  case 
greedy best first search first expand h     nodes connected first h    
node  which hypothesis connected goal node via paths containing h    
nodes   return expanding nodes h      looking find different
h     node 
abstraction controls number size h     regions  example 
abstract   disks  two strongly connected regions h     nodes  containing
    nodes  instead abstract   disks     strongly connected h     regions 
   nodes  heuristic abstracts   disks      chance
given h     node connected goal via h     nodes  greedy
best first search entered correct h     region  finding goal node largely
chance  heuristic abstracts   disks  probability given h    
node connected goal via h     nodes lower  correct h     region
found  however  much easier find goal  region contains   
nodes  compared     nodes  empirically  see two effects roughly
cancel one another out  total number expansions done greedy best first
search remains roughly constant matter heuristic used  brings us
next observation 
observation    else equal  nodes h     connected goal nodes
via paths contain h     nodes 
one view important specific case observation    interestingly  types
heuristics  delete relaxation heuristics used domain independent planning 
obey observation implicitly never allowing non goal states h values   
one obvious way make heuristic satisfy recommendation change
heuristic non goal states minimum cost operator
domain cost   this  simply restate recommendation substituting
   arrive similar result 
   

fieffective heuristics suboptimal best first search


 



 



  

 
 
  

 


 

 


 


 

  

figure    different tile abstractions  denotes tile abstracted  
abstraction
outer l  figure   left 
checker  figure   right 
outer l missing  
outer l missing    
instance specific
gdrc generated
average   tile pdb
worst   tile pdb

greedy exp
   
      
     
      
     
   
      
       

a  exp
         
         
dnf
dnf
       
         
         
         

table    average number expansions required greedy best first search a  solve
    tile instances different pattern databases  dnf denotes least one
instance would require  gb solve 

      sliding tiles
sliding tile puzzle one commonly used benchmark domains heuristic
search  such  domain one best understood  pattern database heuristics
shown strongest heuristics domain  strongest
heuristics quite time  korf   taylor        felner  korf  meshulam    holte 
       use    puzzle       case study smaller size puzzle
allows creating testing hundreds different pattern databases  central problem
constructing pattern database sliding tile puzzle selecting good abstraction 
abstraction keeps outer l  shown left part figure   
extremely effective greedy best first search  greedy best first search
put abstracted tiles proper places  remains find goal 
easy using even completely uninformed search remaining puzzle 
          states h     h     states form connected subgraph 
analogous heuristic directing search algorithm follow process outlined
parberry         large sliding tile puzzles solved first solving outer l 
treating remaining problem smaller sliding tile puzzle 
compare happens greedy best first search run checkerboard
abstraction  shown right part figure    greedy best first search identified node h      high chance remaining abstracted tiles
configured properly  least one non abstracted tiles
moved  effect seen table    average number expansions required a  comparable either abstraction  average number expansions
required greedy best first search larger two orders magnitude 
   

fiwilt   ruml

sheer size pdb important greedy best first search
a   table    see weaken pattern database removing  
  tiles  number expansions required increases factor    greedy best first
search  a  using pdb   tile missing    instances unsolvable within  
gb memory  approximately    million nodes java implementation  
    tile missing  a  unable solve    instances within limit 
worth noting even without   tile  outer l abstraction still effective
greedy best first search compared checkerboard abstraction 
underlying reason behind inefficiency greedy best first search using certain
pattern databases fact less useful pattern databases nodes h    
nowhere near goal  provides evidence favor observation   
greedy best first search concentrates efforts finding expanding nodes low h
value  nodes are  reality  near goal  clearly causes problems
algorithm  a  uses f   g contributes f   a  able eliminate
states consideration  not expand them  high g value helps give
node high f value  causes a  relegate node back expansion
queue 
checkerboard pattern database helps make clear another problem facing
greedy best first search heuristics  algorithm discovers node h     
node connected goal via h     nodes  algorithm eventually run
h     nodes expand  begin expanding nodes h      expanding
h     nodes  greedy best first search either find h     nodes examine goals 
eventually exhaust h     nodes well  forced consider h    
nodes  natural question ask far algorithm back
able find goal  leads us next observation 

observation    else equal  greedy best first search tends work well
difference minimum h value nodes local minimum minimum
h allow search escape local minimum reach goal low 

phenomenon clearly illustrated considering instance specific pattern databases
 holte  grajkowskic    tanner         instance specific pattern database  tiles
start closest goals abstracted first  leaving tiles furthest
away goals represented pattern database  helps maximize
heuristic values states near root  due consistency
undesirable side effect making states required included path goal
high heuristic values well  raising heuristic value initial state helpful
a  search  evidenced reduction number expansions a  using instancespecific abstractions size  shown table    unfortunately  approach
still powerful greedy best first search simpler outer l abstraction  even
smaller variant missing    instance specific pattern databases
use patterns difficult greedy best first search use effectively  similar
problems encountered using checkerboard abstraction 
   

fieffective heuristics suboptimal best first search

domain

greedy
works

greedy
fails

towers hanoi
grid
pancake
dynamic robot
unit tiles
topspin   
topspin   
inverse tiles
city nav    
city nav    

heuristic
  error
     
     
    
     
     
     
     
     
     
     

h n  h  n 
correlation
 pearson 
      
      
      
      
      
      
      
      
      
      

h n  h  n 
correlation
 spearman 
      
      
      
      
      
      
      
      
      
      

h n  h  n 
correlation
 kendall 
      
      
      
      
      
      
      
      
      
      

table    average   error correlation h n  h  n 

   predicting effectiveness greedy heuristics
previous section  saw common wisdom regarding effective heuristics
optimal search carry suboptimal search  instead  examples motivated
three general observations regarding greedy best first search looks heuristic 
qualitative observations perhaps helpful heuristics heuristic design 
useful simple  quantitative metric evaluating comparing heuristics 
begin considering two intuitively reasonable quantitative metrics  percent
error h  correlation h h   metrics  show
metric cannot used predict whether greedy best first search perform
worse weighted a   consider measure search distance go called  
 n  h change graph making edges cost    find
correlation h used predict greedy best first search
perform poorly 
    percent error h n 
first metric consider perhaps intuitive measure heuristic performance 
percent error h  define percent error heuristic h  n h n 
  since greedy
h  n 
best first search increases importance heuristic  reasonable conclude
heuristic large amount error  relying upon heavily  greedy best first
search does  going lead fast search 
table    average percent error heuristic domains
considered  surprisingly  average percentage error bears little relation whether
greedy best search poor choice  towers hanoi  unit tiles  topspin    
three domains greedy best first search effective  much heuristic
error domains greedy best first search works poorly  leads us conclude
cannot measure average heuristic percent error use predict whether
increasing weight speed slow search 
   

fiwilt   ruml

see intuitively makes sense  note greedy best first search really
requires nodes get put h  n  order heuristic  exact magnitude 
therefore error  heuristic unimportant  magnitude huge effect
average percent error  seen consider heuristic h n    h r n    r r 
large tiny r  always guide greedy best first search directly
optimal goal  exhibiting arbitrarily high average percent error heuristic
r increases decreases away   
    h h correlation
next metric consider correlation h h   considering
percent error h metric  noted greedy best first search run time linear
solution length optimal solution nodes h  n  order  one way
quantify observation measure correlation two values 
three different ways 
well known correlation coefficient pearsons correlation coefficient r 
measures well relationship h n  h  n  modeled using linear
function  relationship would mean weighting heuristic appropriately
reduce error heuristic  could reasonably expected lead faster
search  addition  relationship h n  h  n  linear function 
order preserved  putting nodes order h n  put nodes order
h  n   leads effective greedy best first search  domain  calculated
pearsons correlation coefficient h  n  h n   results second
column table   
another reasonable way measure heuristic correlation use rank correlation 
rank correlation measures well one permutation  or order  respects another permutation  or order   context search  use ask similar order one
gets putting nodes h order order one gets putting nodes h order  rank
correlation coefficients useful less sensitive outliers  able
detect relationships linear 
spearmans rank correlation coefficient    best known rank correlation coefficient 
pearsons r ranked variables  means smallest n heuristic
values mapped    largest n heuristic values mapped n   done
h h   point simply calculate persons r using rankings 
context greedy best first search  spearmans rank correlation coefficient high 
means h n  h  n  put nodes close order  expanding
nodes h  n  order leads greedy best first search running time linear solution
length  reasonable conclude strong spearmans rank correlation coefficient
h  n  h n  would lead effective greedy best first search  domain 
calculate spearmans rank correlation coefficient h  n  h n  
results third column table   
natural metric measuring relationship achieved using kendalls
        kendalls another rank correlation coefficient  measures amount
concordance two rankings  concordance rankings two
elements agree  context greedy best first search  concordant pair pair
   

fieffective heuristics suboptimal best first search

nodes h n      h n    h  n      h  n    h n      h n    h  n      h  n    
kendalls proportion pairwise comparisons concordant  h puts nodes
h order  pairwise comparisons concordant  kendalls    h puts
nodes reverse h order  comparisons discordant  kendalls    
sorting nodes h puts nodes random order  expect half comparisons
concordant half comparisons discordant 
kendalls understood context bubble sort  kendall distance
number swaps bubble sort would order change one list
other  case  number swaps bubble sort would rearranging list
nodes sorted h list sorted h   kendalls calculated normalizing
kendall distance  done dividing n  n        
since rank correlation coefficients  related  argue
natural statistic  consider question  given open list containing n
nodes  likely node smallest h front open
list  given nodes ordered h  use predict node will 
average  middle list h h completely unrelated  closer
front open list stronger  h  h   correlation is  reason
assume nodes open list random selection nodes  tells us often
random comparison correct  use therefore predict far back node
minimum h is  natural interpretation  making natural
statistic  worth nothing generally related one another  one
used predict  gibbons         relationship means practice 
generally possible use either metric 
returning table    results lead us reject correlation h h
metric predicting well greedy best first search work  three correlation
coefficients  examples domains greedy best first search fails high
h n  h  n  correlations  examples domains greedy best first search works well
poor h n  h  n  correlations  example  topspin     kendalls
     lower inverse tiles city navigation problems
consider 
    h correlation
strategy greedy best first search discover goal quickly expanding nodes
small h n  values  nodes small h n  far away goal reasonable
believe greedy best first search would perform poorly  denote  n  count
edges node n nearest goal  distance measured summing
cost edges path  rather counting edges path 
 n  equivalent h  n  modify graph edges cost    looking
plot h n  vs h  n  left half figure     see city navigation
    reasonable relationship h n  h  n   nodes low
h n  tend small h  n  values  denote distance nearest goal terms
   malte helmert noted  personal communication  kendalls   described  ideal metric
use sequences contain ties  integer valued heuristics  especially  ties may common 
one way account ties rankings use kendalls  b statistic  kendall   gibbons       
instead  also known  a   kendalls  b accounts ties rankings 

   

fiwilt   ruml

h vs h  city navigation    

h vs d  city navigation    
  

   

d 

h 

  

  

 
 
 

  

   

h

  

  

h

figure     plot h n  vs h  n   h n  vs  n  city navigation    
domain

greedy
works

greedy
fails

towers hanoi
grid
pancake
dynamic robot
unit tiles
topspin   
topspin   
inverse tiles
city nav    
city nav    

h n  d  n 
correlation
 pearson 
      
      
      
      
      
      
      
      
      
      

h n  d  n 
correlation
 spearman 
      
      
      
      
      
      
      
      
       
      

h n  d  n 
correlation
 kendall 
      
      
      
      
      
      
      
      
       
      

table    correlation h n   n 

number edges state space graph  n   right half figure    shows
plot h n  vs  n   clearly see city navigation     domain 
almost relationship h n   n   meaning nodes receive small
h n  value found distance away goal  could explain greedy
best first search works poorly domain  despite fact h n  h  n 
closely related 
nodes small h n  values likely small  n  values  and
nodes therefore close goal  terms expansions away  expanding nodes
small h n  values quickly lead goal  converse reasonable  nodes
small h n  value uniform distribution  n  values  and thus many
nodes far away goal terms expansions away   expanding nodes
quickly lead goal 
   

fieffective heuristics suboptimal best first search

   
   

log expansions 

   
   
   
   
   
   
   
   
   

   

   

   

   
gdrc

   

   

   

   

figure     average log expansions done greedy best first search different heuristics  plotted according gdrc 

domain  quantify concept calculating pearsons correlation coefficient  spearmans rank correlation coefficient  kendalls  n  h n  
looking table    see that  using kendalls pearsons r  finally
able separate domains greedy best first search performs well domains greedy best first search performs poorly  kendalls   draw
line approximately     used separate domains greedy best first
search works well domains greedy best first search works poorly  likewise 
pearsons r  draw line approximately      call type metric
goal distance rank correlation  gdrc  and  unless otherwise noted  compute using
kendalls  
correlation  n  h n  connects three observations  although
connection mathematical necessity  as counterexamples constructed  
note heuristic obeys observation   produce paths h monotonically
decreases goal  consider nodes along path goal  hypothesis  h
monotonically decrease along path  now  consider one nodes goal end
path  since h monotonically decreases along path  nodes goal end
path low h  near end path  low
value  little else said nodes general  restriction improves
heuristics gdrc compared situation nodes low allowed
high h values  similar argument used show following observation  
helps produce heuristic high gdrc 
observation   discusses nodes local minimum  difference h nodes
local minimum  nodes edge local minimum  assume
order escape local minimum one must go one nodes edge
   

fiwilt   ruml

local minimum  know nodes local minimum must higher
nodes edge local minimum  know h lower
 because node local minimum   means h ranking incorrectly
orders nodes local minimum compared nodes edge local
minimum  clear problem producing high gdrc  nodes local minimum
low get goal high h node  relationship
observation gdrc weaker  consider personal transportation
example  action as  call taxi might result reaching states near goal
one step  high cost  heuristic recognizes cost action  node
correctly high h  close goal measured
call taxi path  situation clearly causes problems domains attempting
follow observation    believe domains kind attribute are  practice 
quite uncommon  example  none example domains exhibit trait 
    comparing heuristics
quantitative metric  gdrc used compare different heuristics
domain  test effectiveness  ran experiments towers hanoi
problem using    different disjoint non disjoint pattern databases  considered
pattern databases     disks  well selection pairings pdbs
total number disks less equal     pattern database 
calculated gdrc heuristic produced pdb  figure    plot 
pdb  gdrc pdb x axis average log number
expansions required greedy best first search solve    random    disk towers hanoi
problems axis  see figure  gdrc roughly
     greedy best first search performs poorly  gdrc increases  average
number expansions done greedy best first search decreases  suggests
possible use gdrc directly compare heuristics one another 
see similar behavior different domain left part figure    
dot represents one     possible disjoint     pattern databases  one   tile pdb
one   tile pdb disjoint      sliding tile puzzle inverse costs 
axis log average expansions required solve     random instances 
x axis gdrc  since using non unit problem  h same 
calculate correlation h h   right part figure    
correlation x axis 
see  gdrc rank correlation h h yield useful
information well greedy best first search likely work 
domains tested  correlation h neatly predicts
greedy best first search performs worse weighted a   or a    perfect  however 
consider heuristic h n    h  n   measure correlation h n 
h  n  perfect  relationship h n   n  heuristic could
arbitrarily poor  heuristic approaches truth  h n  h  n  correlations
approach    allows weighted a  scale gracefully  greedy best first search
linear run time  matter correlation h n   n  is 
situation  looking solely correlation h n   n  determine whether
   

fi   

   

   

   

   

   
log   expansions 

log   expansions 

effective heuristics suboptimal best first search

   
   

   
   

   

   

   

   

   
    

    

    

gdrc

    

    

   
    

    

    

    

    
    
    
    
gdrc  with h  instead d  

    

    

figure     average log expansions done greedy best first search
possible         disjoint pdb heuristics  plotted gdrc  left 
correlation h n  h  n 
domain

city nav    

heuristic h n  h  n 
  error correlation
 pearson 
     
      

h n  h  n 
correlation
 spearman 
      

h n  d  n 
correlation
 pearson 
      

h n  d  n 
correlation
 spearman 
      

table    average   error  correlation h n  h  n   correlation
h n   n  city nav    

greedy best first search faster weighted a  may produce incorrect
answer 
seen city navigation     domain  city navigation     similar
city navigation problems consider  except cities places
better connected  allowing direct routes taken  since routes direct 
thus shorter  heuristic accurate  table   shows various correlations
percent error h n  city navigation      figure    shows increase
weight  despite weak correlation h n   n   catastrophe 
greedy best first search expands roughly number nodes weighted a 
best weight speed  occurs extreme strength heuristic 
correlates h  n       extremely strong correlation 
next question correlation matters more  h  n   n   clearly  perfect
correlation h  n  h n   n  h n  lead fast greedy best first
search  leads us conclusion order greedy best first search
effective  nodes small h n  get expanded required least one virtue 
either close goal measured terms remaining search distance
 small  n   close goal measured terms remaining cost  small h  n   
   

fiwilt   ruml

city navigation    

total nodes expanded

    

    

    

 

a               

      g

figure     expansions done a   weighted a   greedy best first search city
navigation    

seen empirically two correlations break down   n  correlation allows
greedy best first search survive longer  tested domains  n  h n 
     greedy best first search well  whereas seen domains h  n h n  correlation high      or      depending correlation metric
used  greedy best first search performs poorly 
importance correlation h n   n  reflects importance
node ordering greedy best first search  optimal search  search cannot terminate
solution found  rather solution known optimal
paths pruned  larger heuristic values  sooner nodes
pruned  means optimal search  heuristic size paramount importance 
bigger better  greedy best first search  heuristic used guide search
solution  relative magnitude heuristic  or error heuristic  bearing
performance search  saw considered percent error h 
common researchers say a s heuristic guides search  discussion
reveals language reserved suboptimal search 
heuristics able satisfy needs a  greedy best first search
simultaneously  example  dynamic robot navigation heuristic works extremely well
a  greedy best first search  big  therefore good a  
good differentiating nodes near goal far away goal 
helping greedy best first search 

   building heuristic searching gdrc
shown haslum  botea  helmert  bonet  koenig         given metric assessing quality heuristic  use metric automatically construct effective
abstraction based heuristics simply searching space abstractions  many domains  heuristic constructed initially abstracting everything  slowly refining
   

fieffective heuristics suboptimal best first search

abstraction construct heuristic  haslum et al         concerned
optimal search hence use pruning power evaluate heuristics  focus greedy bestfirst search suggests gdrc might serve useful metric  example  topspin
problem  begin heuristic abstracts disks  consider pdbs
devised abstracting everything except one disk  measure gdrc
pattern database  gdrc effectively estimated breadth first search
backwards goal  we used        nodes    disk problem  establish values
nodes  h value looked pattern database  sample    
nodes generated way  used sample calculate estimate kendalls
  elected sample      nodes  sample size taken provided
confidence interval sufficiently small tell better  last  take pdb
highest value incumbent pdb  process repeats either pdbs
worse gdrc previous best pdb  pdb reached desired
size  reason allow algorithm possibly terminate early cover case
gdrc decreasing larger pdbs  increasing size pdb decreases gdrc 
likely increasing size pdb degrade gdrc even more 
elect terminate  full algorithm detailed algorithm    simple
hill climbing search appears effective  sophisticated search strategy could certainly
employed instead 
    topspin
algorithm   hill climbing pdb builder
   alltokens    tokens problem abstracted 
   remainingtokens   allt okens
   bestpdb   build pdb abstracting allt okens
   besttau    
   function trypdb tokens 
  
pdb   build pdb abstracting allt okens   tokens
  
allnodes   nodes discovered breadth first search backwards goal state s 
  
sample   randomly sample     nodes allnodes
  
return calctau sample  pdb 
    bestp db size   max allowed size
   
localbestpdb  localbesttau  localbesttoken    n one  bestt au  n one 
   
currenttoken remainingt okens
   
currenttau  currentpdb   trypdb ref inedt okens  token  
   
currentt au   localbestt au
   
set local best variables current
   
localbestp db    none
   
set best variables local best variables
   
remainingtokens   remainingt okens   localbestt okens
   
else
   
break
    return bestpdb
   

fiwilt   ruml

pdb
contiguous
big operators
random

greedy exp
      
      
        

a  exp
         
      
         

avg  value
     
     
     

table    expansions solve topspin problem stripe cost function using different
pdbs

used generate unit cost topspin pattern databases  hill climbing gdrc
always produced pdbs abstracted disks connected one another 
refined disks connected one another  prevents abstraction
creating regions h      goal nowhere near h     nodes  per
observation   
unit cost topspin problems  abstractions disks connected
one another work well greedy best first search a   change cost
function moving even disk costs   moving odd disk costs     get
stripe cost function  called costs striped across problem 
effective pdbs a  keep many odd disks possible  moving
odd disks much expensive moving even disk  use big
operator pattern database greedy best first search  algorithm align high
cost odd disks  great difficulty escaping resulting local minimum 
use hill climbing gdrc build heuristic  end contiguous heuristic
keeps abstracted refined disks connected one another  table   provides
results various pattern databases solving suite instances  see
importance creating good pattern database consider random row
table  contains average number expansions    different randomly selected
  disk pattern databases 
    towers hanoi
already infer figure    that  greedily select pdb best
collection pdbs  would select best one  certainly possible
use hill climbing search incrementally construct pdb  creating pdb
heuristic towers hanoi  one maps full size problem onto abstracted version
problem removing disks larger problem  re indexing
remaining disks map disks smaller problem  technique 
critical component terms performance disks abstracted 
define mapping selection disks abstract  example 
consider    disk problem using   disk pdb  must select      total disks
abstract  figure      glyphs represent randomly selected abstraction 
heuristic produced  see  abstractions produced extremely poor
quality heuristics measured gdrc average number expansions done
greedy best first search solving problems using heuristic  heuristics fared
significantly better terms gdrc average expansions greedy best first
   

fieffective heuristics suboptimal best first search

analysis
heuristics generated different hanoi pdb mappings
 
 

log expansions

 
 
 
 
 
   

randomly selected mappings
best mapping
hill climbing mappings
   

   

   
gdrc

   

   

   

figure     expansions using different towers hanoi pdb abstractions 
search  examine plot figure    see several clusters
heuristics  heuristics gdrc   clustered together  requiring
greedy best first search expand         nodes  heuristics
worst heuristics  largest disk abstracted  next cluster heuristics
gdrc         require greedy best first search expand      
    nodes  heuristics largest disk abstracted  second
largest disk abstracted  abstractions produce poor quality heuristics 
heuristics represent significant improvement heuristics largest
disk abstracted  color figure    represents mapping different largest
abstracted disk  blue x glyph representing best pattern database
smallest disks abstracted  see plot  definite overall trend
mappings product heuristics higher gdrc tend fare better overall
terms average total expansions used greedy best first search 
hill climbing algorithm selected heuristic contained disks                  
      skipping   disk   example hill climbing algorithm selected
heuristic seen green circles line figure    starting
abstraction abstracted largest disk  hill climbing algorithm climbed hill
leading reasonable  albeit effective  heuristic  despite failing find
optimal heuristic  selected heuristic quite reasonable nonetheless  falling
  th   th percentile overall  significant improvement automated approach 
    city navigation
addition building pattern database heuristics using hill climbing gdrc 
possible build portal style heuristic hill climbing gdrc  using city navigation
domain  defined portal heuristic  goldenberg  felner  sturtevant    schaeffer       
selecting number nodes portal nodes  we used number nodes
   

fiwilt   ruml

heuristic
random portals
nexus portals
hill climbed portals

average gdrc
    
    
    

average greedy best first search expansions
    
   
    

table    expansions gdrc using different ways select portal nodes

cities        calculating true distance every node closest portal node 
heuristic two nodes true distance portals associated
node minus distance node portal  event quantity
negative    used  heuristic highly accurate across long distances uses
true distance portals  obviously less accurate comparing
two nodes share portal  constructing portal heuristics  critical
difference effective portal heuristic poor quality portal heuristic
selection nodes portals  allowed algorithm automate process
hill climbing gdrc  algorithm initialized random array nodes
portals  step  algorithm iterates indexes array portals 
considering moving location currently serving portal different location 
implementation  considered two times number cities      different
random places  assessed grdc new heuristic using sample        
randomly selected pairs places  moving city new location improved gdrc 
kept portal array new place  otherwise  discarded change gdrc
inferior incumbent  reach end array  restart
beginning  reach point position array 
aspects array remain unchanged since last time modified index 
algorithm terminates  returning array portals use heuristic 
results experiment shown table    average gdrc gdrc
one obtains selecting         random pairs start end nodes calculating
gdrc using nodes  average greedy best first search expansions average
number expansions needed solve city navigation problem random start
goal 
considered three different methods selecting portal nodes  first
completely randomize selection portal nodes  unsurprisingly resulted
lowest grdc highest number expansions  successful method
selecting portal nodes identify nexus nodes  use nodes portals 
unsurprisingly  method led highest gdrc  fewest number expansions 
result demonstrates usefulness gdrc identifying quality heuristic
greedy best first search  last  automatic algorithm finding portal nodes performed
significantly better random  still trailing hand selected portals  believe
better search strategy may able better capture potential performance gain
offered high gdrc heuristics 
   

fieffective heuristics suboptimal best first search

    sliding tile puzzle
compare gdrc generated pdbs instance specific pdbs sliding
tile puzzle  holte et al          domain  order get accurate estimate
  increase number nodes expanded going backwards       
           following hill climbing procedure  algorithm selected pattern database
tracked                   tiles  results using pdb shown table
   abstraction strong outer l abstraction  fourth best
pdb minimizing average number expansions done greedy best first search
    possible   tile pattern databases  automatically constructed pdb
two orders magnitude faster number expansions one would expect
using average   tile pdb  three orders magnitude faster worst   tile
pdb greedy best first search  gdrc generated pdb works substantially better
greedy best first search state of the art instance specific pdbs  requiring one
twentieth expansions  one additional advantage gdrc generated pdb
instance specific pdbs fact gdrc produces single pdb  unlike instance
specific pdbs  produce new pdb every problem 
summary  results show gdrc useful predicting relative quality
heuristics greedy best first search  showed possible leverage
quantitative metric automatically construct heuristic greedy best first search 
automatically created heuristics extraordinarily effective greedy best first
search 

   related work
metric  gdrc predicts heuristics high rank correlation
work well  general  objective h approximate h     one alternative way
find quality heuristic leverage fact try construct heuristic directly
mimics   generally referred d  indeed  approach generally quite successful
 as opposed relying exclusively h   handily outperforming h many situations  wilt
  ruml        
gaschnig        describes predict worst case number nodes expanded
a   discusses weighting heuristic affect worst case final node
expansion count  predictions  however  two limitations  first  predictions
assume search space tree  graph  case many applications
heuristic search  addition that  worst case predictions depend amount
error present heuristic  error measured relative deviation h  n  
a   criterion makes certain amount sense  greedy best first search 
seen relative deviation h  n  cannot used predict greedy
best first search perform poorly  gaschnig points increasing weight ad
infinitium may decrease performance  precisely phenomenon documented
section   
chenoweth davis        show heuristic rapidly growing logarithmic cluster  greedy best first search done polynomial time  heuristic
rapidly growing logarithmic cluster if  every node n  h n  within logarithmic
factor monotonic function f h  n   f grows least fast function
   

fiwilt   ruml

g x    x  aware heuristics proven rapidly growing
logarithmic cluster 
number works consider question predicting search algorithm performance
 korf et al         pearl        helmert   roger         although subject attracting
far attention determining many nodes expanded optimal
search algorithm  saw section    behavior optional search general
predict behavior gbrs  lelis  zilles  holte        empirical analysis
suboptimal search algorithms  predicting number nodes would expanded
weighted ida   clear methods predict greedy best first search
behavior  thus tell us increasing weight far detrimental 
korf        provides early discussion increasing weight may actually
bad  showing recursive best first search iterative deepening a  used
weight large  expansions actually increase  paper early example
exploring weight interacts expansion count  something central
work 
hoffmann        discusses heuristic  hoffmann   nebel        effective way solve many planning benchmarks used conjunction enforced
hill climbing  paper shows many benchmark problems  heuristic small
bounded size plateaus  implying breadth first search part enforced hill climbing algorithm bounded  means problems solved quickly  sometimes linear time  although enforced hill climbing kind greedy best first search 
behaviour different greedy best first search promising path turns
local minimum  greedy best first search considers nodes search
space  possibly allowing disparate nodes compete one another expansion 
enforced hill climbing limits consideration nodes near local minimum  with
nearness measured edge count   means algorithm cares
heuristic performs small local region space  hoffmann        extends
concept  describing process automatically proving domain small local
minima 
xu  fern  yoon        discuss constructing heuristics suboptimal heuristic
search  algorithm consider beam search  beam searches inadmissibly
prune nodes save space time  function ultimately used rank
nodes  make decision whether keep one node  function
xu et al  create used rank nodes  input function requires variety
features state function  created using training data trial search runs 
approach creating heuristic hill climbing gdrc require training
instances  require information states themselves  hill climbing
gdrc does  however  limitation automatic generation heuristics
works appropriate search space defined  abstraction based
heuristics 

   conclusion
suboptimal heuristic searches rely heavily heuristic node evaluation function 
first showed greedy best first search sometimes perform worse a  
   

fieffective heuristics suboptimal best first search

although many domains general trend larger weight heuristics
weighted a  leads faster search  domains larger weight leads
slower search  long understood greedy best first search bounds
performance  given poor heuristic  greedy best first search could well expand
entire state space  never terminate state space infinite  work shows
poor performance theoretical curiosity  behavior occur
practice 
considered characteristics effective heuristics greedy best first search 
showed several examples conventional guidelines building heuristics a 
actually harm performance greedy best first search  used experience
develop alternative observations desiderata heuristics use greedy bestfirst search  first every node  path goal
decreases h  second  important special case first  nodes h    
connected goal via nodes h      third observation nodes
require including high h nodes solution high h
value possible 
showed domains greedy best first search effective share
common trait heuristic function  true distance node goal  defined
 n   correlates well h n   information important anyone running
suboptimal search interest speed  allows identify whether
assumption weighting speeds search true not  critical knowledge
deciding algorithm use 
finally  showed goal distance rank correlation  gdrc  used compare
different heuristics greedy best first search  demonstrated used
automatically construct effective abstraction heuristics greedy best first search 
recent work shown search algorithms explicitly designed suboptimal
setting outperform methods weighted a   simple unprincipled derivative
optimal search  thayer   ruml        thayer  benton    helmert        stern 
puzis    felner         results indicate holds true heuristic functions
well  suboptimal search deserves specialized methods  given importance
suboptimal methods solving large problems quickly  hope investigation spurs
analysis suboptimal search algorithms heuristic functions rely on 

   acknowledgments
gratefully acknowledge support nsf  award           preliminary expositions
results published wilt ruml              

references
burns  e  a   hatem  m   leighton  m  j     ruml  w          implementing fast heuristic
search code  proceedings fifth symposium combinatorial search 
chenoweth  s  v     davis  h  w          high performance a  search using rapidly
growing heuristics  proceedings twelfth international joint conference
articial intelligence  pp         
   

fiwilt   ruml

doran  j  e     michie  d          experiments graph traverser program 
proceedings royal society london  series a  mathematical physical
sciences  pp         
felner  a   korf  r  e   meshulam  r     holte  r  c          compressed pattern databases 
journal artificial intelligence research  jair              
felner  a   zahavi  u   holte  r   schaeffer  j   sturtevant  n  r     zhang  z         
inconsistent heuristics theory practice  artificial intelligence                  
     
gaschnig  j          exactly good heuristics   toward realistic predictive theory
best first search  proceedings fifth international joint conference
articial intelligence  pp         
gibbons  j  d          nonparametric statistical inference  marcel decker  inc 
goldenberg  m   felner  a   sturtevant  n     schaeffer  j          portal based truedistance heuristics path finding  proceedings third symposium combinatorial search 
hart  p  e   nilsson  n  j     raphael  b          formal basis heuristic determination minimum cost paths  ieee transactions systems science cybernetics 
ssc               
haslum  p   botea  a   helmert  m   bonet  b     koenig  s          domain independent
construction pattern database heuristics cost optimal planning  proceedings
aaai     pp           
helmert  m          fast downward planning system  journal artificial intelligence
research             
helmert  m          landmark heuristics pancake problem  proceedings
third symposium combinatorial search 
helmert  m     roger  g          good almost perfect   proceedings
twenty third aaai conference artificial intelligence  aaai        pp         
hoffmann  j          ignoring delete lists works  local search topology planning
benchmarks  journal artifial intelligence research             
hoffmann  j          analyzing search topology without running search  connection causal graphs h    journal artificial intelligence research     
       
hoffmann  j     nebel  b          planning system  fast plan generation
heuristic search  journal artificial intelligence research             
holte  r   grajkowskic  j     tanner  b          hierachical heuristic search revisitied 
symposium abstracton reformulation approximation  pp         
kendall  m  g          new measure rank correlation  biometrika                 
kendall  m     gibbons  j  d          rank correlation methods  fifth edition   edward
arnold 
   

fieffective heuristics suboptimal best first search

korf  r     felner  a          disjoint pattern database heuristics  artificial intelligence 
         
korf  r  e          planning search  quantitative approach  artificial intelligence 
             
korf  r  e          linear space best first search  artificial intelligence           
korf  r  e          finding optimal solutions rubiks cube using pattern databases 
proceedings fourteenth national conference artificial intelligence  aaai   
pp          aaai press 
korf  r  e          analyzing performance pattern database heuristics  proceedings
  nd national conference artificial intelligence  aaai    pp           
aaai press 
korf  r  e   reid  m     edelkamp  s          time complexity iterative deepening a  
artificial intelligence              
korf  r  e     taylor  l  a          finding optimal solutions twenty four puzzle 
aaai  vol     pp           
lelis  l   zilles  s     holte  r  c          improved prediction ida s performance via
epsilon truncation  proceedings fourth symposium combinatorial search 
likhachev  m   gordon  g     thrun  s          ara   anytime a  provable bounds
sub optimality  proceedings seventeenth annual conference neural
information processing systems 
likhachev  m     ferguson  d          planning long dynamically feasible maneuvers
autonomous vehicles  international journal robotic research                 
martelli  a          complexity admissible search algorithms  artificial intelligence             
nilsson  n  j          principles artificial intelligence  tioga publishing co 
parberry  i          real time algorithm  n      puzzle  information processing
letters               
pearl  j          heuristics  intelligent search strategies computer problem solving 
addison wesley 
pohl  i          heuristic search viewed path finding graph  artificial intelligence 
          
richter  s   thayer  j  t     ruml  w          joy forgetting  faster anytime search
via restarting  proceedings twentieth international conference automated
planning scheduling 
richter  s     westphal  m          lama planner  guiding cost based anytime
planning landmarks  journal artifial intelligence research             
stern  r  t   puzis  r     felner  a          potential search  bounded cost search
algorithm  proceedings   st international conference automated planning
scheduling  icaps 
   

fiwilt   ruml

sussman  g  j          computer model skill acquisition  new york  new american
elsevier 
thayer  j  t   benton  j     helmert  m          better parameter free anytime search
minimizing time solutions  proceedings fifth annual symposium
combinatorial search  socs      
thayer  j  t     ruml  w          bounded suboptimal search  direct approach using inadmissible estimates  proceedings twenty sixth international joint
conference articial intelligence  ijcai      pp         
tukey  j  w          exploratory data analysis  addison wesley  reading  ma 
van den berg  j   shah  r   huang  a     goldberg  k  y          anytime nonparametric
a   proceedings twenty fifth national conference articial intelligence 
wilt  c     ruml  w          weighted a  fail   proceedings fifth
symposium combinatorial search 
wilt  c     ruml  w          speedy versus greedy search  proceedings seventh
symposium combinatorial search 
wilt  c     ruml  w          building heuristic greedy search  proceedings
eighth symposium combinatorial search 
xu  y   fern  a     yoon  s          learning linear ranking functions beam search
application planning  journal machine learning research               

   


