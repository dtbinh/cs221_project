journal of artificial intelligence research                 

submitted       published     

pdt logic  a probabilistic doxastic temporal logic for
reasoning about beliefs in multi agent systems
karsten martiny
ralf moller

karsten martiny uni luebeck de
moeller uni luebeck de

institute of information systems 
universitat zu lubeck
lubeck  germany

abstract
we present probabilistic doxastic temporal  pdt  logic  a formalism to represent
and reason about probabilistic beliefs and their temporal evolution in multi agent systems 
this formalism enables the quantification of agents beliefs through probability intervals
and incorporates an explicit notion of time  we discuss how over time agents dynamically
change their beliefs in facts  temporal rules  and other agents beliefs with respect to any
new information they receive  we introduce an appropriate formal semantics for pdt logic
and show that it is decidable  alternative options of specifying problems in pdt logic
are possible  for these problem specifications  we develop different satisfiability checking
algorithms and provide complexity results for the respective decision problems  the use
of probability intervals enables a formal representation of probabilistic knowledge without
enforcing  possibly incorrect  exact probability values  by incorporating an explicit notion
of time  pdt logic provides enriched possibilities to represent and reason about temporal
relations 

   introduction
logical analysis of knowledge and belief has been an active topic of research in diverse fields
such as philosophy  hintikka         economics  aumann         game theory  harsanyi 
          a      b   and computer science  fagin  halpern  moses    vardi         numerous extensions to modal epistemic logic have been made to reason about knowledge in
multi agent settings  fagin et al         baltag   moss         to add probabilistic knowledge  fagin   halpern        cripps  ely  mailath    samuelson         and to analyze
the dynamic evolution of knowledge  van ditmarsch  van der hoek    kooi        
in most realistic scenarios  an agent has only incomplete and inaccurate information
about the actual state of the world  and thus considers several different worlds as actually
being possible  as it receives new information  e g   it observes some facts that currently
hold   it has to update its beliefs about possible worlds such that they are consistent with
this new information  these updates can for example result in regarding some  previously
considered possible  worlds as impossible or judging some worlds to be more likely than
before  thus  in addition to analyzing the set of worlds an agent believes to be possible 
it is also useful to quantify these beliefs in terms of probabilities  this provides means to
specify fine grained distinctions between the range of worlds that an agent considers possible
but highly unlikely  and worlds that seem to be almost certainly the actual world 
c
    
ai access foundation  all rights reserved 

fimartiny   moller

when multiple agents are involved in such a setting  an agent may not only have varying
beliefs regarding the facts of the actual world  but also regarding the beliefs of other agents 
in many scenarios  the actions of one agent will not only depend on its belief in ontic facts
 i e   facts of the actual world   but also on its beliefs in some other agents beliefs 
to illustrate how reasoning about other agents beliefs can yield significant advantages
in practical scenarios  we start with the following informal description of an application
from the cyber security domain  a formal analysis of this example using pdt logic has
been presented by martiny  motzek    moller         suppose that an adversary is trying
to break into a computer system  this is usually done with an attack graph to detect
and exploit potential vulnerabilities of the system  an attack graph specifies a set of
paths  i e   sequences of actions  to carry out an attack  several paths of the attack graph
might be used in parallel  potentially by different agents  for instance  a number of infected
computers controlled by a botnet   usually  attack patterns specified by one attack graph
are used multiple times  which has two important ramifications  the adversary will learn
from experience which of the paths yield a high probability of successfully breaking into a
system  defenders in turn will be able to gain knowledge of the attack graph through the
repeated observation of certain patterns  thus  when a system is under attack  the defender
will have beliefs about both the chosen attack paths and the adversarys belief regarding the
success of the respective path  thus  the defender can choose countermeasures effectively
by reacting only on paths where these nested beliefs are high and which indeed pose a threat
according the systems mission impact model 
to formalize reasoning about such beliefs in multi agent settings  we present probabilistic doxastic temporal  pdt  logic  pdt logic builds upon recent work on annotated
probabilistic temporal  apt  logic  shakarian  parker  simari    subrahmanian       
shakarian  simari    subrahmanian        and provides a formalism which enables representing and reasoning about dynamically changing quantified temporal multi agent beliefs
through probability intervals and incorporates a subset of epistemic actions  baltag   moss 
       using concepts from apt logic as a semantic foundation  pdt logic merges work
on epistemic logic with recent work on temporal logic by shakarian et al  apart from
reasoning about imprecise probabilities  this introduces the temporal concept of frequency
functions into epistemic temporal logic 
quantifying probabilistic knowledge through probability intervals instead of single probability values yields two main advantages  on the one hand  using probability intervals
significantly eases the task of formally representing existing knowledge of a human domain
expert  in most cases  a domain expert can give reasonable probability estimates of her
knowledge  but will inevitably fail at giving correct precise numerical values on these probabilities  consider for instance a weather forecast  most people find it easy to give coarse
probabilistic quantifications such as the chance of rain is high  while virtually nobody
could quantify this through an exact numerical value  employing exact numerical values
in a formal representation would then inevitably introduce errors in the probability model 
thus  the use of probability intervals provides means to express probabilistic knowledge as
precisely as possible without enforcing unrealistic precision  on the other hand  there are
many scenarios where probabilities  and even rough estimates of them  are simply unavailable  while bounds on these values may be known  to illustrate this  consider the scenario
described by ellsberg        
  

fipdt logic

example      the ellsberg paradox  ellsberg         imagine an urn known to contain
   red balls and    black and yellow balls  the latter in unknown proportion  one ball is
to be drawn at random from the urn  the following actions are considered  action i is a
bet on red  ii is a bet on black 
now  it is easy to see that any rational agent would believe that action i will be successful
with a probability of      for action ii  no such quantification is possible because the
respective probability is unknown  yet omitting any probabilistic information about action
ii altogether would ignore some available information about the unknown probability value 
namely that it is somewhere between   and      this example exhibits two different types
of uncertainty  the former action is subject to risk  i e   the outcome is unknown  but
occurs with known probability  while the later action is subject to ambiguity  also known
as knightian uncertainty   where the probability is unknown  bradley         through
probability intervals  pdt logic is able to work with such imprecise probabilities  the
width of a probability interval can then give additional information about the certainty of a
probability quantification  naturally  a narrow interval is associated with a high certainty
of the respective probability and vice versa  a wide interval is associated with low certainty 
pdt logic employs an explicit notion of time and thereby facilitates the expression
of richer temporal relations  this allows for the analysis of temporal doxastic problems
beyond the scope of previous work  the resulting framework provides means to reason
about the temporal evolution of beliefs in multi agent systems  two different applications
of this framework are possible  first  any agent of the respective multi agent system can
employ this framework online during a run of the system to reason about its own beliefs 
by analyzing nested beliefs as introduced above  this gives an agent also means to reason
about probable evolutions of other agents belief states  second  this framework can be used
offline by an external observer to analyze whether desired evolutions of a given system are
possible 
the remainder of this work is structured as follows  the next section presents related
work about knowledge in multi agent systems and apt logic  then  in section    the
syntax of pdt logic is introduced  followed by the definition of a formal semantics  decision
algorithms and complexity results for pdt logic are discussed in section    while the
formally defined semantics is based on precise probability values  this section shows that
satisfiability in pdt logic can be decided even if only imprecise probabilities are given 
finally  the paper concludes with section   

   related work
approaches to formalize reasoning about knowledge and belief date back to hintikkas work
on epistemic logic  hintikka         hintikka proposed to represent knowledge through sets
of states or worlds  together with a binary relation for every agent  to determine which worlds
are indistinguishable for an agent  this approach has sparked multiple branches of research
on epistemic logic  which are still active topics of research today  these branches of research
can be broadly classified into four  not mutually exclusive  areas that are relevant for our
work  multi agent epistemic logic  probabilistic epistemic logic  epistemic temporal logic 
  

fimartiny   moller

and dynamic epistemic logic   in the following  we give an overview of the key contributions
in each area and discuss existing approaches that merge these fields of research 
early research on epistemic logic culminated in the influential work reasoning about
knowledge  fagin et al          which provides a unified presentation of various preceding
contributions on epistemic logic  this work uses a so called interpreted systems approach
to represent knowledge in multi agent systems  where time is represented through runs  a
run is a sequence of a systems global states and it thus identifies the state of a system
for every time point  among other contributions  this work provides notions for multiagent epistemic modalities such as nested knowledge  distributed knowledge  and common
knowledge 
several works have extended epistemic logic to represent dynamic evolutions of knowledge  this direction of research is known as dynamic epistemic logic  del   a first formal
analysis of the dynamics of knowledge has been presented by plaza        reprinted as plaza 
       in this contribution  plaza introduces public communication events  now commonly
known as public announcements  to analyze the dynamic evolution of knowledge in groups
upon truthful public announcements of facts to a group of agents  independently from
plaza  a related approach for a public announcement logic was proposed by gerbrandy and
groeneveld         baltag  moss  and solecki        and baltag and moss        generalize the dynamic approach to epistemic logic to incorporate a variety of complex epistemic
actions  here  epistemic updates themselves are represented through kripke models  this
extends dynamic epistemic logic to represent a variety of additional epistemic actions such
as private group announcements  i e   announcements where agents outside of the receiving
group are unaware of this announcement   lies  i e   untruthful announcements   and combinations thereof  in pdt logic  we use public and private group announcements  but we
assume that all announcements are truthful  a thorough treatment of dynamic epistemic
logic is given by van ditmarsch et al          van eijck        provides a recent overview
of this field 
an alternative approach of modeling the evolution of knowledge is to combine epistemic
logic with some temporal system  one example for this are the aforementioned interpreted
systems from fagin et al          another approach of modeling temporal aspects in epistemic logic was proposed by parikh and ramanujam         this approach is known as
epistemic temporal logic  etl   here  possible situations are represented through sets of
histories  with local histories for every agent  which represent the respective agents previous
observations  based on these histories  knowledge based semantics of messages are defined 
and it is shown that messages can vary in meaning  depending on the respective context
of the messages receiver  the temporal model we employ in pdt logic is closely related
to epistemic temporal logic  instead of specifying local histories for every agent  we define
the semantics of pdt logic with respect to a global history  however  the local contexts
   to simplify the following discussion  we do not explicitly distinguish between epistemic and doxastic
logics in this section  but use epistemic as a general term  strictly speaking  epistemic formalisms
deal with knowledge  while doxastic formalisms deal with beliefs  the usual axiomatic definition of
knowledge in the literature uses the truth axiom  which stipulates that an agent can only know true
facts  omitting this axiom then leads to the notion of belief  even though not unanimously accepted
 cf  e g   halpern  samet    segev         this axiom is usually considered as the key distinction between
knowledge and belief 

  

fipdt logic

in the sense of etl can easily be extracted from the global history by filtering this history
for the respective agents observations 
the traditional work on epistemic logic discussed so far does not allow to quantify an
agents degree of belief in certain facts  it can only be specified whether an agent does or
does not know  resp  believe  some fact  to remove this limitation  several approaches have
been proposed to combine logics of knowledge and belief with probabilistic quantifications 
fagin and halpern        laid the foundation for this combination in their seminal paper 
they define a belief operator to quantify lower bounds on the probabilities that an agent
assigns to a formula  this is modeled by associating a probability space with each state
and each agent  in their framework  it is generally not guaranteed that formulae define
measurable sets  but they present some properties that can guarantee the measurability of
such sets  in contrast  the semantics defined for pdt logic always produces events with
measurable probabilities  a special case of the framework introduced by fagin and halpern
is presented by milch and koller         just as in pdt logic  in this formalism it is
assumed  i  that there exists a common prior probability distribution over the set of worlds
and  ii  that each agents local probability distribution at some world is derived from the
global distribution conditioned on the respective set of worlds the agent considers possible 
the additional feature from milch and koller is that models are represented as bayesian
networks to find the probabilities of defined formulae  van der hoek        introduces the
logic pf d  which was later extended by de carvalho ferreira  fisher  and van der hoek
        like fagin and halpern  this framework introduces an operator to quantify the
lower bounds of probabilistic beliefs  probabilistic values in this work are semantically
restricted to a finite base set of probability values  yielding a logically compact framework
that enables efficient implementations 
a variety of approaches have been proposed to extend probabilistic epistemic logics
to dynamic frameworks  kooi        restricts the probabilistic epistemic logic from fagin
and halpern        to finite settings and combines it with the dynamic epistemic logic
from gerbrandy and groeneveld        to create probabilistic dynamic epistemic logic
 pdel   this work analyzes the effects on probabilistic beliefs upon public announcements 
as this framework is based on dynamic epistemic logic  it does not have capabilities to
represent temporal relationships  features regarding the past cannot be expressed at all 
and features regarding the future can only be expressed to a limited extent as the result
of certain actions  van benthem        extends this framework to analyze the results of
various epistemic actions as described by baltag et al          another extension to this
framework is proposed by van benthem  gerbrandy  and kooi      b   where different
sources of probabilities are distinguished  a simplification of this approach is presented by
van eijck and schwarzentruber         this paper distinguishes itself from the above work
on probabilistic epistemic logic in that certainty is equated with knowledge  other works
make an explicit distinction between belief with probability   and knowledge  the difference
between these two concepts is often illustrated with repeatedly throwing a fair coin  the
event that the coin shows head at least once is   for an infinite number of repetitions 
yet no agent can know in this example that the coin will eventually show head  as pdt
logic works only with countable models in finite time frames  we can adopt the view from
van eijck and schwarzentruber and consider certainty and knowledge as equivalent in our
models  deviating from these approaches to extend epistemic logic with probabilities  pdt
  

fimartiny   moller

logic provides a belief operator with probability interval quantifications  so that both lower
and upper bounds on the probability values can be specified explicitly  this provides a
natural means to represent imprecise probabilities as discussed in the introduction 
another direction of probabilistic extensions is discussed by halpern and pucella       
and doder  markovic  ognjanovic  perovic  and raskovic         for example  these approaches consider the problem of estimating unknown prior probabilities based on given
evidence  essentially  the unknown priors are then represented as a set of hypotheses  and
the likelihood of a hypothesis given specific observations is estimated  in these approaches 
all hypotheses represent possible configurations of the world and are thus satisfiable  in
contrast  the aim of pdt logic is to verify whether any possible assignment of priors exists
such that a given set of formulae is satisfiable 
in dynamic epistemic logic  it is only possible to reason about step wise changes in
the future  in order to reason about temporal relations  sack        extends the update
mechanism of dynamic epistemic logic with temporal operators  namely previous time and
next time operators  sack        further extends this approach to probabilistic frameworks by augmenting the work on probabilistic dynamic epistemic logic  kooi        with
a previous time operator and the ability to reason about continuous probabilities  these
approaches enrich dynamic epistemic logic with the ability to reason about events in the
past  van benthem  gerbrandy  hoshi  and pacuit      a  give a systematic and precise
comparison between etl  called tel by van benthem  gerbrandy  hoshi  and pacuit  and
del and it is shown how these approaches can be merged into a single framework 
shakarian et al         and shakarian et al         introduce apt logic  a framework
to represent probabilistic temporal evolutions of worlds in threads  apt logic assigns
prior probabilities to every thread and uses these probabilities to determine probabilities
of events occurring in specific threads  to represent temporal relationships between events 
apt logic introduces the concept of frequency functions  we utilize the approach of apt
logic to create a doxastic multi agent framework that supports explicit reasoning about
temporal relationships through the adoption of frequency functions  while the explicit
notion of time in our formalism increases the complexity of decision problems  it significantly
enhances the expressibility of temporal relations  for instance  in contrast to all approaches
with implicit representations of time  in pdt logic we are able to specify that events occur
within a certain time interval  cf  the introduction of frequency functions below  

   pdt logic  syntax and semantics
in this section  we discuss how beliefs in multi agent systems can be formalized  we start
with defining the syntax of pdt logic  discuss the employed model of time  and provide
a formal semantics  the proposed formalism enables the expression of different types of
beliefs and can quantify these beliefs using imprecise probabilities  by introducing a suitable
update rule we show how agents beliefs evolve over time and how agents can update their
beliefs such that new information is correctly integrated into their belief state 
  

fipdt logic

    syntax
we assume the existence of a function free and quantifier free fragment of first order logic 
language l with finite sets of constant symbols lcons and predicate symbols lpred   and an
infinite set of variable symbols lvar   every predicate symbol p  lpred has an arity  a term
is any member of the set lcons  lvar   a term is called a ground term if it is a member
of lcons   if t        tn are  ground  terms  and p is a predicate symbol in lpred with arity n 
then p t         tn   is a  ground  atom  if a is a  ground  atom  then a and a are  ground 
literals  the former is called a positive literal  the latter is called a negative literal  the set
of all ground literals is denoted by llit   as usual  b denotes the herbrand base of l  i e  
the set of all ground atoms that can be formed through from lpred and lcons  
time is modeled in discrete steps and we assume that all agents reason about an arbitrarily large  but fixed size window of time  the set of time points is given by             tmax   
the set of agents is denoted by a  again  we assume that this set may be arbitrarily large 
but of finite size  to describe what agents observe  we define observation atoms as follows 
definition      observation atoms   for any non empty group of agents g  a and
ground literal l  llit   obsg  l  is an observation atom  the set of all observation atoms is
denoted by lobs  
intuitively  the meaning of a statement of the form obsg  l  is that all agents in the group
g observe that the fact l holds  note that l may be a negative literal and therefore we can
explicitly specify observations of certain facts being false  such as it is not raining   we
assume that the agents in g not only observe that l holds  but that each agent in g is also
aware that all other agents in g make the same observation  in the line of baltag and moss
        observations can be viewed as the effects of private group announcements of a fact
l to a group g  i e   l becomes common knowledge within g  while all agents outside of g
remain entirely oblivious of the observation   it represents an epistemic action  i e   it alters
the belief states of all agents in g  as formally defined below   but does not influence the
ontic facts of the respective world 
definition      formulae   both atoms and observation atoms are formulae  if f and g
are formulae  then f  g  f  g  and f are formulae  a formula is ground if all atoms of
the formula are ground 
example      coin toss   consider two agents      and a coin that is tossed  the event
that the coin lands heads is denoted by the primitive proposition head  and accordingly 
the coin lands tails is denoted by head  let us assume that the coin actually lands heads 
then  all sets of possible observations in this scenario are  obs     head     obs     head   
 obs     head   obs     head     obs       head   
note that there is a difference between the third and the fourth set  in the former
scenario  both agents observe the outcome of the coin throw but both are unaware that the
other agent actually made the same observation  in the latter scenario  both agents observe
the outcome and are aware that the other agent observes the same  since we do not allow
   we use a first order structure for our language definition to have a syntactically convenient way of
representing observations  apart from this  propositional logic could be used as a base language 

  

fimartiny   moller

for nesting of observations  i e   expressions such as obsg   obsg   l    in pdt logic  only
a subset of the epistemic actions discussed by baltag and moss        can be represented
in our formalism  while this limits the expressivity of epistemic actions to some extent  we
can ensure that the resulting set of possible observations lobs is always finite and therefore
we can show that pdt logic is decidable  as shown in section     further  note that the
formal concept of observations is not limited to express passive acts of observing facts  but
can instead be used to model a wide range of actions  for instance  in the above example
one could also use obs       head  to model the act of one agent telling the other about
the outcome of the coin throwthe ramifications of the communication act are exactly the
same as they would be in a shared observation  assuming that agents do not lie  
to express temporal relationships  we define temporal rules following the approach of
apt rules from shakarian et al          the definition of temporal rules already relies on
the concept of frequency functions  even though these are defined in the next section  we
still introduce temporal rules now to enable a clearly separated presentation of syntax and
semantics of pdt logic 
definition      temporal rules   let f  g be two ground formulae  t a time interval 
fr  f  g 
and fr a name for a frequency function  as defined below in section         then rt
is called a temporal rule 
frequency functions provide information about temporal connections between events 
fr  f  g  is to be understood as f is followed by g in t
the meaning of an expression rt
time units w r t  frequency function fr  frequency functions enable the specification of
various types of temporal relations  for example  they can be used to determine how often
f is followed by g within t time units or how often f is followed by g exactly after t
time units  the usage of fr in the syntax of temporal rules is used to specify a set of possible
names for the employed types of frequency function 
  u
  u
now  we can define the belief operator bi t
  to express agents beliefs  intuitively  bi t    
means that at time t    agent i believes that some fact  is true with a probability p      u  
particularly  the intuitive meaning of belief in a temporal rule is that agent i believes
fr  f  g   given that f holds at some time point  we call
that g will hold according to rt
the probability interval     u  the quantification of agent is belief  we use ft to denote
that formula f holds at time t and  accordingly  obsg  l t to denote that an observation
obsg  l  occurs at time t  we call these expressions time stamped formulae and timestamped observation atoms  respectively 
definition      belief formulae   let i be an agent  t  a time point  and     u          
then  belief formulae are inductively defined as follows 
  u
   if f is a ground formula and t is a time point  then bi t
   ft   is a belief formula 
fr  f  g  is a temporal rule  then b   u  r fr  f  g   is a belief formula 
   if rt
i t  t
  u
   if f and g are belief formulae  then so are bi t
   f    f  g   f  g   and f  
  u
for a belief bi t
     about something  we call  the belief object  belief operators are the
  u
atomic elements in pdt logic  i e   any expression bi t
      including possibly nested belief

  

fipdt logic

formulae  is called an atom  we use script fonts  e g   f   to distinguish belief formulae
from standard formulae  note that we can have both ontic facts and observation atoms
as standard formulae  cf  definition      and therefore agents can also have beliefs about
possible observations 
the use of probability intervals     u  provides an option to represent imprecise probabilities  bradley         when using imprecise probabilities  it is usually assumed that
the degree of belief in some proposition is not represented using a single probability function p    but instead through a set p of such functions  then  the belief state p    in a
proposition  is represented through the set
p       p     p  p   
for this set of probabilities p     so called lower and upper envelopes are defined as p     
inf p    and p      sup p     respectively  the belief quantifications in our belief operator
represent such imprecise probabilities and the   and u values of the probabilistic belief can be
considered as the lower and upper envelopes p and p of the respective imprecise probability 
  u
remark      we decided to index both the belief operators bi t
     and facts ft appearing
as belief objects  with time stamps to allow for a concise representation of temporal
relations  alternatively  one could use the more traditional approach  cf  sack       for
example  and introduce previous time and next time operators into the language to express
  u
temporal relationships between t and t  in bi t
   ft    then  we could also omit the temporal
 
index t of the belief operator and instead evaluate whether the belief holds at time t  of
the model  however  these are merely syntactic considerations that do not impact the
underlying formalism  thus we decided to encode time explicitly into the belief operators
to avoid the introduction of additional temporal operators  moreover  belief operators can
also be used to express general temporal relationships of the modeled domain  we will
illustrate this point in detail in section   

    semantics
in this section  we will provide a formal semantics for pdt logic that captures the intuitions
explained above  to ease understanding of the presentation  we start with the introduction
of an example  to which we will return repeatedly when introducing the various concepts of
the semantics  for an illustration of our formalisms features  we use a simplified exemplary
domain  while the practical use of this example is somewhat limited  it serves to illustrate
how pdt logic can be applied  and especially how the analysis of multi agent beliefs can
yield valuable information when deciding on meaningful actions  the resulting insights can
then be easily applied to more sophisticated domains 
example      trains   let alice and bob be two agents living in two different cities ca
and cb   respectively  suppose that alice wants to take a train to visit bob  unfortunately 
there is no direct connection between cities ca and cb   so alice has to change trains at a
third city cc   we assume that train t  connects ca and cc   and train t  connects cc and
cb   both trains usually require   time units for their trip  but they might be running late
and arrive one time unit later than scheduled  alice requires one time unit to change trains
at city cc   if t  runs on time  she has a direct connection to t    otherwise she has to wait
  

fimartiny   moller

for two time units until the next train t  leaves at city cc   if a train is running late  she
can call bob to let him know  these calls can be modeled as shared observations between
alice and bob  for instance  if alice wants to tell bob that train t  is running late  i e   t 
does not arrive at cc at the expected time   this can be modeled as obs ab   at t    cc   
at the expected arrival time 
      possible worlds
ontic facts and corresponding observations  e g   as described in the above example  form
worlds  or states in the terminology of fagin et al          a world  consists of a set
of ground atoms and a set of observation atoms  i e      blobs    we use a   and
obsg  l    to denote that an atom a  resp  observation atom obsg  l   holds in world  
since agents can only observe facts that actually hold in the respective world  we can define
admissibility conditions of worlds w r t  the set of observations 
definition      admissible worlds   a world  is admissible  iff for every observation atom
obsg  l   
   the observed fact holds  i e   x   if l is a positive literal x  and x    if l is a negative
literal x  and
   for every subgroup g    g  obsg    l    
we use adm   to denote that a world  is admissible 
the set of all possible worlds is denoted by  and the set of admissible worlds by  
for the following discussion in this section we assume that some specification of  is given 
while it is possible to employ the usual definition of  as the set of all combinations of
ground atoms and observation atoms      blobs    and  as the maximum subset of 
complying with definition      this usually contains a vast number of worlds which are
blatantly impossible according to the respective problem modeled  therefore  we assume
that a succinct specification of a set of admissible worlds depending on the respective domain
is given  the main reason for this assumption is to simplify the following presentationwe
will describe a method to obtain such a set algorithmically in section   
remark      as already discussed in section      for group observations obsg  l  every
agent i  g is aware that all other agents in g have observed this fact  together with
definition      the semantics of observations is then equivalent to the usual semantics of
common knowledge  fagin et al         give a definition of common knowledge through the
fixed point axiom  a fact l is common knowledge among a group g if and only if all members
of g know that l is true and is common knowledge  thus  we could also equivalently use the
established common knowledge operator cg  l  instead of the previously defined observation
   most formalisms in epistemic logic do not encode facts directly into the worlds  but instead use a set of
named states s    s        and some valuation function  si   to determine which facts hold in world si  cf 
fagin et al          this is mainly done to obtain the option of having multiple worlds si   sj where the
same facts hold  i e    si      sj     but the knowledge states of the agents differ  as described below 
in pdt logic worlds appear within threads  and thus it is possible that worlds with the same valuation
appear at some time point in multiple threads  thus  in our formalism we can encode facts directly into
the possible worlds and save the valuation function without limiting the epistemic expressivity 

  

fipdt logic

atoms obsg  l   however  the concept of common knowledge is usually used to describe
emergent states of agents knowledge  on the other hand  in the context of our approach 
observations are an extrinsic feature that will result in the emergence of other belief states 
to keep a clear distinction of the intended use of the operator  we will therefore continue
to use obsg  l  instead of cg  l  
example      trains continued   for example      we have ground terms a  b  ca   cb  
cc   t    and t    representing alice  bob  three cities  and two trains  furthermore  we have
atoms on y  x  indicating that person y is on train x  and at x  z  indicating that train x
is at city z  finally  we have observation atoms of the kind obsg  at x  z    indicating that
the agents in g observe that train x is at station z  a possible world can for example be
     at t    ca    on a  t     obs a   at t    ca      indicating that train t  is at city ca and
a has boarded that train 
we define satisfaction of a ground formula f by a world  in the usual way  lloyd 
      
definition      satisfaction of ground formulae   let f  f     f    be ground formulae and 
a world  then  f is satisfied by   denoted     f   if and only if 
case f   a for some ground atom a 
a   
case f   f   for some ground formula f    

case f   f    f    for formulae f   and f     

case f   f    f    for formulae f   and f     

     f    

    f   and     f     

    f   or     f     

we say that a formula f is a tautology if     f for all admissible worlds     we
say that a formula f is a contradiction if there is no world    such that     f   we use
the usual symbols   and  to denote tautologies and contradictions  respectively 
      threads
to model temporal evolutions of the problem domain we use the definition of threads from
shakarian et al         
definition      thread   a thread t h is a mapping from the set of time points  to the
set of admissible worlds  t h     
thus  a thread is a sequence of worlds and t h t  identifies the actual world at time t
according to thread t h  the set of all possible threads  i e   all possible sequences constructible from  and   is denoted by t   again  we refrain from directly working with
t   and instead assume that any meaningful problem specification gives information about
possible temporal evolutions of the system  we use t to represent this set of relevant possible threads  for notational convenience  we assume that there is an additional prior world
t h    for every thread 
following definition      we use t h    ft to denote that thread t h satisfies formulae f
at time t  i e   t h    ft  t h t     f    accordingly  we use t    ft to denote that every
thread t h  t satisfies formula f at time t 
  

fiobs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

obs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

    t h 

    t h 

t h 

t h 

 

 

t hi

t h 

  t h 
on a  t   
at t    cc  
on a  t   

on a  t    on a  t   
at t    ca  
on a  t    on a  t   

 

at t    cc  

at t    ca  

 

on a  t   

on a  t    on a  t   

 

at t    cc  

at t    ca  

at t    ca  

at t    ca  

at t    ca  

at t    ca  

on a  t   

on a  t   

on a  t   

on a  t   

 
 

 

on a  t    on a  t   

at t    cc  

at t    cc  

 

on a  t   

at t    cb  

 

obs a 
at t    cb  
 at t    cb   
on a  t    on a  t    on a  t    on a  t   

at t    cc  

 

at t    cb  

at t    cc  
on a  t   

at t    cb  
on a  t   

 

t

obs a 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t   
on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

on a  t   

at t    cc  

obs a b 
at t    cb  
 at t    cb   
on a  t    on a  t    on a  t    on a  t   

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

  t h 

obs a 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

    t h 

at t    ca  

obs a b 
at t    cc  
 at t    cc   
on a  t    on a  t    on a  t    on a  t   

at t    ca  

    t h 

martiny   moller

figure    visualization of the possible threads t hi from example      for an easier distinction  shared observations between a and b are marked in blue  single observations
of a are marked in red  and all situations where alice is on train   or train  
are marked in green and orange  respectively  note that if a train is running late
 the respective threads are marked with according circles   there are always two
possible threads  one where only a observes this and one where both share the
observation 
  

fipdt logic

we assume that the system is synchronous  i e   the agents have a global clock  thus 
even if an agent does not observe anything in world t h t   it is still aware of time passing
and can therefore distinguish between worlds t h t  and t h t     
example      trains continued   the description from example      p      yields the
set of possible threads t depicted in figure    note that this is a manually specified set
of threads containing only threads that comply with the description in example      the
set of all possible threads t would contain a vast number of additional threads that are
irrelevant to the described scenario 
      kripke structures
with the definition of threads  we can use a slightly modified version of kripke structures
 kripke         as usual  we define a kripke structure as a tuple h  k         kn i  with the
set of admissible worlds  and binary relations ki on  for every agent i  a  thus  the
kripke relation  also called possibility relation  for agent i at world  is defined as
ki                     ki  

   

intuitively           ki specifies that in world   agent i considers    also as a possible
world  in other words  with its current information agent i is unable to distinguish worlds
 and     
we initialize the kripke structure such that all threads are considered possible at time
t     
 
t h  t   ki  t h      
 t h        i  a
   
t h  t

with the evolution of time  each agent can eliminate the worlds that do not comply with its
respective observations  through the elimination of worlds  an agent will also reduce the
set of threads it considers possible  ifdue to some observationa world  is considered
impossible at a time point t  then all threads t h with t h t     are considered impossible  
we assume that agents have perfect recall and therefore will not consider some thread
possible again if it was considered impossible at one point  thus  ki is updated w r t  the
agents respective observations  such that it considers all threads possible that both comply
with its current observations and were considered possible at the previous time point 

ki  t h t     t h   t    t h   t      ki  t h t     
 
 obsg  l   t h t    i  g     obsg  l   t h   t    i  g 
   
the following two corollaries describe key properties of ki that follow immediately from
the definitions in     and     
corollary      equivalence relation   ki defines an equivalence relation over the possible
worlds ki  t h t   for time points t    
corollary      reduction of considered threads   the set of threads t h  considered possible
w r t  ki is narrowing to a smaller and smaller subset over time  i e    t h    t h   t  
ki  t h t      t h    t h   t      ki  t h t       for all t h  t and t    
  

fimartiny   moller

note that updates of ki are defined such that new information is incorporated instantaneously  i e   if at time t an agent observes some fact  it updates its possibility relations
already at time t such that it considers every world impossible that does not comply with
the observation of time t 
example      trains continued   from figure    we obtain that at time    the only
possible world is  at t    ca    on a  t      which is contained in all possible threads  thus 
ki  t hj      contains exactly this world for all agents i and threads j  consequently  both
agents consider all threads as possible at time   
now  assume that time evolves for two steps and the actual thread is t h   i e   train
t  is running late  but a does not inform b about this   both agents will update their
possibility relations accordingly  yielding
ka  t h           obs a   at t    cc     on a  t     
and
kb  t h           at t    cc    on a  t       obs a   at t    cc     on a  t      
i e   a knows that t  is not on time  while b is unaware of t  being late  since he still
considers a situation possible where train t  is at city cc at time t     
      subjective posterior temporal probabilistic interpretations
each agent has probabilistic beliefs about the expected evolution over time  this is expressed through subjective temporal probabilistic interpretations 
definition      subjective posterior probabilistic temporal interpretation   given a set of
possible threads t   some thread th  t   a time point t      and an agent i  the function
th   t         specifies the subjective posterior probabilistic temporal interpretation from
ii t
 
agent is point of view at time t  in thread th  i e   a probability distribution over all possible
p
th  t h       since the probabilistic interpretations over possible threads
threads  t ht ii t
 
depend on the respective perspective of agent i  th marks the point of view for a subjective

interpretation  thus  we call th the point of view  pov  thread of interpretation i t h   
i t

the concept of point of view threads can be seen as conditional probabilities  a subjecth specifies agent is probabilistic interpretation
tive posterior probabilistic interpretation ii t
 
at time t  given that th is the actual thread  different threads yield different evolutions
of the world andsince every possible thread can be taken as a pov thread may induce
different probabilistic interpretations of an agent  thus  the notion of pov threads allows
to reason about hypothetical beliefs of an agent  for instance if possible future beliefs are
analyzed or nested beliefs are evaluated 
th as a vector and occasionally represent a probabilistic
to simplify notation  we see ii t
 


t h over a vector of possible threads t as a vector as well  so that the jth
interpretation ii t
 


t h refers to the probability assigned to thread t h  
element of ii t
 
j



t h  t h   since
the prior probabilities of each agent for all threads are then given by ii  
all threads are indistinguishable a priori  there is only a single prior distribution needed

  

fipdt logic

 



 

t h  t h    i t h  t h    furthermore  in order
for each agent  i e   t h  th  th  t   ii  
i  
to be able to reason about nested beliefs  as discussed below   we assume that the prior
probability assessments of all agents are commonly known  i e   all agents know how all
other agents assess the prior probabilities of each thread   this in turn requires that all
agents have exactly the same prior probability assessment over all possible threads  if two
agents have different  but commonly known prior probability assessments  we essentially
have an instance of aumanns well known problem of agreeing to disagree  aumann 
       intuitively  if differing priors are commonly known  it is common knowledge that
 at least  one of the agents is at fault and should revise its probability assessments  as a
result  we have only one prior probability distribution which is the same from all viewpoints 
denoted by i  note that i directly corresponds to the concept of temporal probabilistic
interpretations by shakarian et al         

remark      we could use the prior probability distribution i as an alternative method
to distinguish between the set of all possible threads t and the set of threads t relevant
to a specific problem domain  to do so  we simply assign all unwanted threads t h   t a
probability of zero 
example      trains continued   a meaningful prior interpretation is

i t                                                  
which assigns the highest probability to t h   no train running late   lower probabilities to
the threads where one train is running late and a informs b  t h  and t h     even lower
probabilities to the events that either both trains are running late and a informs b  t h   
t h    and t h    or that one train is running late and a does not inform b  t h  and t h    
and lowest probability to the thread where both trains are running late and a does not
inform b  t h     note that i represents the prior interpretation for the train example and
thus is the same for every agent i  a and every possible pov thread th 
even though we only have a single prior probability distribution over the set of possible
threads  it is still necessary to distinguish the viewpoints of different agents in different
threads  as the following definition of interpretation updates shows 
whenever an agent updates its kripke relations according to equation      p       it
is necessary to update the probabilistic interpretations of that agent to match the new
knowledge  an intuitive way to update the probabilities is conditioning on the remaining
worlds in the agents kripke structure  we want to point out that conditioning is a suitable
choice in pdt logic  although it is known to produce undesired or incorrect results in
many cases  most notably in the monty hall problem  vos savant         grunwald and
halpern        discuss that naive conditioning tends to produce errors because updates are
carried out in a simplified space where several events are collapsed since they are seemingly
one event  if one uses so called sophisticated conditioning instead  i e   conditioning in the
sophisticated space  which means that all possible events are represented   probabilities are
updated correctly  as the semantics of pdt logic is based on an exhaustive specification of
all relevant threads  conditioning in a proper specification of all relevant threads is inherently
sophisticated in the sense of grunwald and halpern and will therefore produce correct
results  one can easily verify that with the following update rule  well known probability
  

fimartiny   moller

puzzles such as the monty hall problem can be correctly represented in pdt logic  thus 
we use the following conditioning based update rule 
definition      interpretation update   let i be an agent  t  a time point  and th a pov
thread  then  if the system is actually in thread th at time t    agent is probabilistic
interpretation over the set of possible threads is given by the update rule 

th  t h  if t h t     k  th t    
    ii t
   
i
h
th
t
 
i t
ii t   t h   
   
 
if t h t      ki  th t    
with

 
h
t
i t 

being a normalization factor to ensure that


x

th
i t
   

t ht  

p



t ht

t h  t h      
ii t
 



th
ii t
     t h 

   

t h t   ki  th t    

the invocation of ki in the update rule yields obvious ramifications about the evolution
of interpretations  as stated in the following corollary 
corollary      nonzero probabilities   the subjective temporal probabilistic interpretation
th of an agent i assigns nonzero probabilities exactly to the set of threads that i still
ii t
 

considers possible at time t    i e   i t h   t h      iff  t h t   th t    ki
i t

essentially  the update rule assigns all impossible threads a probability of zero and
scales the probabilities of the remaining threads such that they are proportional to the
probabilities of the previous time point  with a given prior probability distribution i over
th in a specific pov thread
the set of possible threads  the subjective posterior probabilities ii t
 
 

t h for all agents i and all time points t are induced by the respective observations contained


in th  we use i t h to denote the set of all subjective posterior interpretations i t h  induced
i t

in pov thread th 

example      trains continued   applying the update rule from     to the situation
described in example      p       with i as given in example      yields the updated
interpretation for a 


t h 
ia  
                         



   

i e   a considers exactly those threads possible  where the train is running late and she does
not inform b  threads t h    t h    and t h     due to the lack of any new information  b
can only eliminate the situations where a does indeed inform him about being late at time
point    and thus bs interpretation is updated to 

th 
ib  
                                      
  

   

fipdt logic

t h   

t h   

t h   

t h   

t h   

t h   

t h   

t h   

f

g

f

g

g

f

g

f

figure    example thread t h with                 adopted from shakarian et al         
this figure shows each world that satisfies formula f or formula g 

      frequency functions
to represent temporal relationships within threads  we adapt the concept of frequency functions as introduced by shakarian et al          frequency functions provide a flexible way of
representing temporal relations between the occurrences of specific events  to illustrate the
motivation behind using frequency functions  consider the exemplary thread t h depicted in
figure    in this thread  one of the events f or g occurs at every time point from t     to
t      as discussed by shakarian et al   there are multiple ways of characterizing temporal
relationships between the events f and g  for instance  one might specify how often event
f is followed by event g in  say  exactly   time points  according to figure    this happens
in one out of four occurrences of f in t h  it might prove meaningful to exclude the final
occurrence of f in t h when determining this frequency  because naturally an occurrence
of f at tmax cannot be followed by a subsequent occurrence of g  excluding the final
occurrence of f would yield one out of three for the desired frequency  alternatively  one
could also specify how often f is followed by g within the next two time points  for the
exemplary thread from figure    this would produce frequencies of   and      respectively 
again depending on whether the final occurrence of f is included 
this example illustrates already four different possible definitions of temporal relations
between events  to maintain flexibility in expressing temporal relations  we do not commit to specific definitions in pdt logic  but instead we adapt an axiomatic definition of
frequency functions 
definition       frequency functions  adapted from shakarian et al          let t h be
a thread  f   f     g  and g  be ground formulae  and t    be an integer  a frequency
function fr maps quadruples of the form  t h  f  g  t  to        such that the following
axioms hold 
 ff   if  f  g  is a tautology  then fr t h  f  g  t      
 ff   if  f  g  is a contradiction  then fr t h  f  g  t      
 ff   if  f  g  is neither a tautology nor a contradiction  then there exist threads t h   
t h   t such that fr t h    f  g  t     fr t h    f  g  t  
 ff   if f  f   and g  g    then fr t h  f  g  t    fr t h  f     g    t  
axioms  ff   and  ff   ensure that in special casesi e    g       f     or
 f     g   frequency functions behave as temporal implications with premise
f and conclusion g  axiom  ff   enforces non trivial frequency functions by requiring
that in all cases not covered by the first two axioms  there must be at least two threads
  

fimartiny   moller

with differing frequency values  axiom  ff   ensures that that fr is congruent to logical
equivalence  examples of frequency functions satisfying these axioms are introduced below 
remark      this definition mostly corresponds to the definition of frequency functions
from shakarian et al          except that we do not require t      in the work from
shakarian et al   frequency functions are only intended to express temporal relationships
and therefore t is limited to nonzero values  by additionally allowing t      we obtain
a concise framework that can express both temporal relationships and static constraints
within one time point  this will be exploited in the next section  where decision procedures
for pdt logic are discussed 
to illustrate the concept of frequency functions  we now present formal definitions for
point and existential frequency functions adapted from shakarian et al  that represent the
informal descriptions of frequencies from above 
the point frequency function pfr expresses how frequently some event f is followed by
another event g in exactly t time units 
pfr t h  f  g  t   

  t   t h t     f  t h t   t     g  
  t    t  tmax  t   t h t     f   

   

if the denominator is zero  we define pfr to be    the denominator counts the total number of
occurrences of f in a given thread t h and the numerator counts the number of occurrences
of f followed by g after exactly t time units  thus  the ratio pfr expresses how frequently
f is followed by g in exactly t time units  note that the denominator only considers
occurrences of f up to time tmax  t  this is done to reflect the previously discussed
intuition that occurrences of f in the last t time points should be excluded from the
frequency  because there is no possibility that they can be followed by a subsequent g after
t time units 
the existential frequency function efr expresses how frequently some event f is followed
by another event g within the next t time units 
efr t h  f  g  t   
efn t h  f  g  t     tmax  
 
  t    t  tmax  t   t h t     f      efn t h  f  g  t  tmax  t  tmax  

   

with
efn t h  f  g  t  t    t       t    t    t  t     t h t     f

 t    t  min t    t   t    t h t       g   

the function ef n counts the number of occurrences of f followed by a subsequent occurrence
of g within the next t time units  the first summand of the denominator again counts the
total number of occurrences of f up to the time point tmax  t  in the second summand
of the denominator  additional occurrences of f followed by g within t time units  the
intuition of this definition is again to exclude occurrences of f in the final t time units if
they are not followed by g  since g may occur within the range t  but this range cannot
be fully considered for the final t time points  only occurrences of f with an according
subsequent occurrence of g are considered for these final time points  consequently  the
  

fipdt logic

ratio efr expresses how frequently some event f is followed by g within the next t time
units without letting single occurrences of f in the final t time points decrease the ratio 
returning to the exemplary thread t h from figure    we can evaluate the frequency
functions for the given thread  suppose that we want to determine how often f is followed
by g exactly after two time steps  this can be expressed through a point frequency function 
 
pfr t h  f  g        
 
if instead we want to know how often f is followed by g within the next two time steps 
we can use an existential frequency function 
efr t h  f  g      

 
  
 

it should be noted that frequency functions can be used to model temporal relationships
usually expressed through temporal operators  for instance  pfr with t     reflects
the next operator and efr with t   tmax reflects the future operator  the meaning
of additional temporal operators such as until can be captured through the definition of
additional frequency functions  if required 
      semantics of the belief operator
now  with the definitions of subjective posterior probabilistic temporal interpretations and
the introduction of frequency functions  we can provide a formal semantics for the belief operators defined in section      this semantics extends definitions from shakarian
et al         for the satisfiability of static interpretations to obtain a formal definition of
probabilistic multi agent beliefs  we start with providing a definition for the semantics of
atomic belief operators for the three different types of beliefs  semantics of compound belief
formulae  i e   involving connectives       are defined below in definition      
definition       belief semantics of the atomic belief operator   let i be an agent and
th be agent is interpretation at time t  in pov thread th  then  it follows from this
ii t
 
interpretation that agent i believes at time t  with a probability in the range     u  that
    belief in ground formulae 
th    b   u  f    iff
a formula f holds at time t  denoted by ii t
 
t
i t 
 

x
t ht  t h t   f



th
ii t
   t h   u 

    

    belief in rules 
fr  f  g  holds  denoted by i th    b   u  r fr  f  g    iff
a temporal rule rt
i t 
i t  t
 

x
t ht



th
ii t
   t h   fr t h  f  g  t   u 

  

    

fimartiny   moller

    nested beliefs 
   u
a belief bj tj j    of some other agent j holds at time t   denoted by


   u

t h    b   u  b j j      iff
ii t
 
j t
i t 

 



x
t ht
   u
t h   b j j   
ij t
j t

th
ii t
   t h   u 

    

the intuition behind this semantics is as follows  for beliefs in ground formulae ft   the
th  t h  of an agent i at time t  in pov thread th are
subjective posterior probabilities ii t
 
added for all threads t h that satisfy f at time t  thus  the sum in      represents the
th assigns to f   if this sum is within the specified boundaries     u  
exact probability that ii t
 
t
  u
the respective belief b    ft   holds for agent i at time t  in pov thread th 
i t



t h  t h  for every thread are
for beliefs in rules  the subjective posterior probabilities ii t
 
fr  f  g   thus 
weighted with the corresponding frequency fr t h  f  g  t  from rule rt

t h  t h  in      represents the exact probability that i th assigns to
the weighted sum of ii t
 
i t 
the temporal relation between f and g according to frequency function fr  for beliefs
fr  f  g  only contains information about the type of frequency
in rules  the belief object rt
function fr  while constraints on the respective frequency values are given through the belief
quantification     u   i e   an agent does not have probabilistic beliefs in specific frequency
values 

remark      it should be noted that the semantics of beliefs in rules in      together
with the axiomatic definition of frequency functions in definition       p      yields certain
fr  f  g   if g is a tautology or f is a contradiction
constraints on satisfiable beliefs in rules rt
 i e   in definition      ff  is satisfied   it holds for the respective frequency function that
  u fr
fr t h  f  g  t      for every possible thread t h  and thus  any belief bi t
   rt  f  g   is
satisfiable if and only if the belief is quantified with u      regardless of the set of threads
th   analogously  if f is a tautology and g is a
t or the corresponding interpretation ii t
 
  u fr
contradiction  i e   ff  is satisfied   any belief bi t
   rt  f  g   is only satisfiable for       
   u

  u
j j
for nested beliefs bi t
     the expression is unnested by first determining all
   bj t
   u

   u

possible pov threads t h for agent j such that bj tj j    is satisfied  if bj tj j    corresponds
to a belief in a fact or in a rule       respectively      can be used to identify threads t h
t h    b  j  uj     otherwise  if  represents another belief formula  the belief has
such that ij t
j t
to be unnested recursively until the innermost belief of the expression is obtained  then  for
t h    b  j  uj     agent is subjective posterior probabilities i th  t h 
all threads t h with ij t
j t
i t 
are added again to determine whether the outer belief holds  note that agent i does not
know the actual beliefs of agent j  however  due to the assumption of common and equal
priors discussed in section        agent i is able to reason about agent js hypothetical
interpretation updates given that the system is in a specific thread  thus  agent i is able
to compute      without knowing js exact beliefs 
example      trains continued   we can use a point frequency function to express beliefs
about the punctuality of trains  assume that both a and b judge the probability of a
  

fipdt logic

train running late  i e   arriving after   instead of   time units  expressed through the
temporal rule r pfr  at t    ca    at t    cc     as being at most      this yields the following
belief formulae
      pfr
bi  
 r   at t    ca    at t    cc    

 
      pfr
bi  
 r   at t    cc    at t    cb    

i   a  b  

    

for the temporal rules expressed in these belief formulae  we obtain the following frequencies
from figure    p      
pfr t h  at t    ca    at t    cc          
pfr t h  at t    ca    at t    cc          
pfr t h  at t    cc    at t    cb           
pfr t h  at t    cc    at t    cb          

for t h   t h         t h   

for t h   t h         t h   

for t h   t h    t h    t h   

for t h   t h    t h    t h         t h   

combining these frequency values with the prior interpretation

i t                                                  
given in example      p      yields the sum
x
i t h   pfr t h  f  g           
t ht

for both f   at t    ca    g   at t    cc   and f   at t    cc    g   at t    cb    as this sum
is within the belief quantification     u              the belief formulae in      are valid  note
that the prior probabilities from example     have been specified such that both trains are
late with the same probability  and thus the respective sums for the above frequencies are
the same 
from the above definitions  we can use the belief about some fact f to quantify the
belief about the negation of this fact f  

  u
corollary      belief in negated facts   let bi t
   ft   be an agents quantified temporal belief
about some fact f according to definition       then  the agents belief in the negation of
    u 
 
 
this fact f is given as bi t
   f   with        u and u        

    evolution over time
in order to completely specify a problem in pdt logic  we introduce the concept of doxastic
systems  in the following  we assume that all syntactical objects are finite 
 a  t  

definition       doxastic system   let a be a set of agents  t be a set of threads  a 
be a matrix of prior probability distributions across t for every agent in a  and f be a
 a  t  

set of frequency functions  then  we call the quadruple d   ha  t   f  a 
system 
  

i a doxastic

fimartiny   moller

note that several of the parameters discussed before are not explicitly specified in a
doxastic system  neither the set of possible worlds   the set of ground atoms b  the set of
observation atoms lobs   nor the set of time points  are explicitly specified  however  all
relevant information regarding these parameters is already contained in the specification of
t  

remark      since all agents share a common prior  all rows of a  are the same  thus 
one could obtain a more parsimonious problem specification by only providing the single
unique row vector of prior probabilities  the choice of using the matrix a  nonetheless
is for notational purposes only  it will simplify the presentation of interpretation update
operations later on 
 a  t  

definition       admissibility of doxastic systems   let d   ha  t   f  a 
i be a
doxastic system  d is called admissible iff every world  implicitly  defined in t is admissible
 a  t  

 according to definition      p      and all rows of a 

sum to one 

to identify specific situations in a doxastic system after some time has passed and some
observations occurred  we furthermore define pointed doxastic systems 
 a  t  

definition       pointed doxastic system  pds   let d   ha  t   f  a 
i be a doxastic
system and h be a set of time stamped observation atoms such that all observation atoms
from h occur in at least one of the worlds  implicitly  defined in t   then we call the pair
hd  hi a pointed doxastic system 
definition       admissibility of pointed doxastic systems   let hd  hi be a pointed
doxastic system  and t the set of threads from d  hd  hi is called admissible iff d is
admissible and there exists a thread t h  t such that obsg  l t  h   obsg  l   t h t 
 i e   t must contain at least one thread that complies with all timed observations from h  
intuitively  the set of timed observations specified in a pds points to a certain situation
in a doxastic system  one could view t h    max t   obsg  l t  h  as the present time in
a pds  the most recent observation occurred at t h   all observations that actually occurred
in the past  t   t h   are specified in h  and are thus deterministic in retrospective   and
no further information about future observations t   t h  is given  in this sense  h specifies
a certain history up to t h  in a doxastic system and points to the last event of this history 
example      trains continued   a doxastic system for the train example can be specified
as
d   h a  b    t h         t h      pfr  efr   a  i 
with



                                           
a   
 
                                           

to identify the situation described in example      p      t  is running late   we can specify
the following pointed doxastic system 
hd   obs a   at t    cc      i
  

fipdt logic

      evolution of probabilistic interpretations
in accordance with the prior probability matrix a  from definition       we define an

interpretation matrix att h to store the interpretations of all agents a  with n denoting the
number of agents  a   across all threads t h         t hm given that the doxastic system is in
pov thread th at time t 


th  t h         i th  t h  
i  t
m
 
  t



  
  
  

    
att h   
 
 
 






t h  t h         i t h  t h  
in t
m
 
n t

with the definition of ki from equation      p       the update rule from equation    
 p       and using the prior probability matrix a  from definition       we can provide an

update matrix utt h to calculate the interpretation matrix for any pov thread th at any
time point t   denotes the element wise multiplication of matrices  






h
att h   att 
 utt h

with

 utt h  ij

 


 
 

 th

i t 

if t hj  t    ki  th t  
if t hj  t   ki  th t  

    

    



t h a normalization factor as defined in equation      p      
and i t
 
the time stamped observations specified in the history h of a pds hd  hi induce an
updated set of reachability relations ki  t h t   for every thread t h that complies with
the given observations  for threads t h that do not comply with the given observations
ki  t h  t        these updated reachability relations in turn yield the updated interpre
tations in att h   the complete state of interpretations at any time point for every possible
pov thread th         thm can then be specified as a block matrix  which we call the belief
state  bs  of a pds at time t 
 


bs hd  hi  t    att h         att hm
    

we use bs hd  hi  to denote the sequence of all belief states bs hd  hi  t  from t     to
t   tmax  
this definition of belief states can be seen as a specification of conditional probabilities 
the kth entry of bs hd  hi  t  specifies the interpretations of all agents across all threads at
time t given that the system is in pov thread thk   thusas every thread is considered as
a potential pov threada full specification of an agents belief state for m threads requires
m  m conditional probabilities for every time point t  this is a very general representation
of belief states to allow for an easy evaluation of subjective posterior interpretations at
arbitrary time points and pov threads and for an intuitive definition of belief state updates 
however  this general definition contains some redundant information  by leveraging certain properties of the semantics of pdt logic  we identify means to obtain compressed
representations of the belief state in the following 
  

fimartiny   moller





corollary      null vectors in att hk    due to the definition of       the ith row of att hk is
   iff agent is actual observations  as specified in h  do not match the observations specified
in thread t hk  
proposition      belief state compression   let hd  hi be a pointed doxastic system and
let t be a time point such that t  t h   then  without any loss of information  the belief
state bs hd  hi  t  at time t can be represented through
t
    
bs hd  hi  t      v  t         vn t
with one probability distribution vector  vi t per agent i 


proof  it follows directly from corollaries      p      and     that the matrices att hk from
bs hd  hi  t  with nonzero rows i are exactly those that correspond to threads considered
possible by agent i at time t 
from the properties of ki given in corollary      p      follows that all worlds t h   t  
ki for t  t h  are indistinguishable to agent i and therefore are associated with the same
interpretation  thus  all nonzero ith rows of the matrices in bs are identical  defining  vi t
as these unique nonzero rows i of bs  we obtain the representation of       information
about impossible pov threads  as described in corollary      is still maintained as they are
assigned a probability of   in  vi t  
it is important to note that this compressed representation is only applicable to time
points t  t h   because in retrospective an agent is able to classify threads into two
categories  those that comply with the observations so far  i e   those that are considered
possible   and those that do not  for time points t   t h  this classification is not possible
because ki  t h t   then depends on future observations and can therefore lead to a branching
of several distinct interpretations depending on the respective observations 
      evolution of beliefs
in order to analyze the temporal evolution of beliefs  we use the update rule from      to
update belief states  since different possible observations yield different branches in the
evolution of beliefs  we have to update every thread in the belief state individually  using

the respective update matrices utt h as defined in      




bs hd  hi  t    bs hd  hi  t       utt h         utt hm  

    

furthermore  to analyze satisfiability and validity of arbitrary finite belief expressions
  u
 
bi t
     w r t  a given pds hd  hi  we define an auxiliary belief vector b   for different beliefs
  u
b       this vector  b   contains one entry   b   j for every possible thread t hj  t and
i t

is defined as follows 
a 

  u
bi t
   ft  

b 

  u fr
bi t
   rt  f  g    

c 

  u
 k  uk
bi t
     
   bk t

 

 
  if t hj  t     f
  b ft   j  
  if t hj  t      f

fr
  b rt
 f  g   j   fr t hj   f  g  t 
 
th
 k  uk
  if ik t j    bk t
  
 
 u
k k
 
 b bk t     j  
t hj
 k  uk
  if ik t     bk t   

  

    

fipdt logic

note that in the case of nested beliefs  the respective entries   b   j are set to one if the
inner belief holds in thread t hj   i e   it is assumed that t hj is the point of view thread for
 k  uk
   is satisfied in this thread 
agent k and then it is checked whether ks belief bk t


using      and       we can determine a matrix pt     with the probabilities pti th  k   
that each agent i assigns at time t  to some event   for all possible pov threads
th         thm   




t h 

t p  t 
 
pt       bs hd  hi  t      b          b     
   


ptn th  



      pt  th m
   
  

 
     

      ptn th m

    

for n agents and m threads  this results in a n  m matrix  the rows of this matrix can
be seen as conditional probabilities  agent i believes at time t  that a fact  is true with

probability pti th  k    given that the system is in pov thread thk  
remark      computation of pt     is straightforward for cases    a  and    b   to compute
the probabilities for nested beliefs in    c   we start with computing the innermost belief
 which is an instance of case    a  or case    b  since we assume finite expressions   and
then compute the nested beliefs iteratively 
using definition       p      and equation       we can provide a definition for the
satisfiability and validity of beliefs 
definition       validity and satisfiability of beliefs   let b be a belief formula as defined
in definition      p       hd  hi a pointed doxastic system  and pt     the corresponding
matrix of probabilities at time t  as defined in       b is satisfiable  valid  w r t  hd  hi iff
  u
   for b   bi t
     

for at least one  all  thread s  thk  t   the entries in row i of pt     satisfy   




t hk
t hk
pi t
     and u  pi t     

  u
   for b   bi t
     

for at least one  all  thread s  thk  t   the entries in row i of pt     satisfy    




t hk
t hk
pi t
     or u   pi t     

   for b   b   b   
for at least one  all  thread s  thk  t   the entries in the corresponding rows of
pt     satisfy both b  and b   
   for b   b   b   
b  is satisfiable  valid  or b  is satisfiable  valid  


   since we have to consider every possible pov thread thk   we have to multiply every matrix att h 

t
bs hd  hi  t  with  b    thus we need to use the vector  b          b  
with m rows 

  

fimartiny   moller

remark      the distinction between valid and satisfiable belief formulae is only of interest
for beliefs at time t   t h   for time points t  t h  an agents belief is uniquely determined through the given observations  cf  proposition       resulting in a single probability
associated to any belief  therefore  all invalid belief formulae for t  t h  are unsatisfiable 
from definition      p       it follows that the belief object of an atomic belief formula b
as in definition        can again be any arbitrary belief formula  if the inner belief formula
b   is one of the cases defined in definition       validity and satisfiability of the entire
  u
 
expression b   bi t
   b   follows inductively from the above definition  if for at least one
 all  thread s  thk  t   both the inner belief formula b   is satisfied and the limits for the
  u
 
outer belief of the respective thread are satisfied  the entire belief formula is b   bi t
   b  
satisfiable  valid  
definition      gives rise to an important property of the belief operator  as the following
lemma shows 
  u
lemma      distributivity of the belief operator   let b   bi t
          be a belief
formula with a belief object         and a connective         then  we can express
  u
  u
b equivalently as b     bi t
        bi t       

proof  this result follows immediately from the validity and satisfiability of beliefs in definition      
  u
the formula b   bi t
          is satisfiable  valid  iff for at least one  all  thread s 


t hk  t it holds that t hk      or thk      and the respective entries in pt     satisfy

  u
definition         for the former case  bi t
       is satisfiable  valid  as well  while for the
  u
latter case bi t
       is satisfiable  valid   which reflects exactly the definition of disjunctive
  u
  u
belief formulae from definition         thus  b     bi t
        bi t       is satisfiable  valid 

  u
iff b   bi t
          is satisfiable  valid  

  u
similarly  the formula b   bi t
          is satisfiable  valid  iff for at least one  all 

thread s  t hk  t it holds that both thk      and thk      hold and the respective
  u
  u
entries in pt     satisfy definition         then  both bi t
       and bi t       are satisfiable
  u
  u
 valid  and thus  the formula b     bi t
        bi t       is satisfiable  valid  according
  u
  u
to definition definition         thus  b     bi t
        bi t       is satisfiable  valid  iff
  u
b   bi t
          is satisfiable  valid  

to illustrate the evolution of beliefs  we finish the train example with an analysis of
expected arrival times 
example       trains continued   from d  as specified in example      p       we can
infer that bob  and of course alice  too  can safely assume at time   that alice will arrive
at time   at the latest with a probability in the range           as expressed in the belief
formula
      ef r
bb t   bb t
 r   on a  t      at t    cb    on a  t      

  

    

fipdt logic

with t      for this rule  we obtain the frequencies
efr t h  at t    ca     at t    cb    on a  t            

efr t h  at t    ca     at t    cb    on a  t            

for t h   t h         t h    

for t h   t h         t h    

i e   in threads t h         t h  from figure    p       the event  at t    cb    on a  t     occurs
within   time points following the event on a  t    from time t      and thus at time t    
at latest   while in threads t h         t h    the event  at t    cb    on a  t     occurs only at
time t      which is outside of the scope of r efr and thus yields a frequency of zero 
at time point    bob still considers all threads as possible  and thus bobs subjective
posterior probabilistic interpretation

th
ib  
 t                                                
is equal to the prior interpretation given in example      p      for all possible pov threads
th  combining this interpretation with the frequencies given above yields the sum
x 
th
ib  
 t h   efr t h  at t    ca     at t    cb    on a  t               
t ht

and thus formula bb   is valid 
now  consider the previously described situation  where t  is running late and a does
not inform b about it  this leads to the updated interpretations given in     and     on
page     i e  


t h 
ia  
  

th 
ib  

 

 

 

     

     

        

and

                                         

these updates lead to a significant divergence in the belief of the expected arrival time 
the corresponding sum with respect to alices updated interpretation is
x
t h 
ia  
 t h   efr t h  at t    ca     at t    cb    on a  t               
    
t ht

    
obtained by alices subjective posterior probability assignment of thread t h    which is the
only nonzero summand in the above sum  all other threads t h are either impossible from
t h 
alices point of view  i e   ia  
 t h      for threads t h   t h    t h    t h    t h    t h    t h     
or the corresponding frequency is zero  for threads t h  and t h     thus  alices belief in
arriving at time point   at the latest is drastically reduced  as the lower bound   of alices
belief may not exceed      for instance 

      ef r
ba  
r   on a  t      at t    cb    on a  t       
    
is now a valid belief formula  the corresponding sum for bobs belief at time point   is
x
t h 
ib  
 t h   efr t h  at t    ca     at t    cb    on a  t                
    
t ht

  

fimartiny   moller

obtained by summing over bobs subjective posterior interpretations for threads t h         t h   
the remaining threads again only contribute zero summands because either bobs probability assignment or the corresponding frequency is zero for those threads  thus  bobs
previous belief  expressed in       remains valid at time point t      denoted by bb    
even though alices beliefs have changed significantly  she is aware that bob maintains
beliefs conflicting with her own  as is shown by the following valid expression of nested
beliefs 
   
ba  
 bb    
to verify that this nested belief holds  we need to consider all threads that alice considers
possible  t h    t h    t h    and determine what bobs hypothetical beliefs would be in these
threads  for t h    this has already been analyzed in       since threads t h    t h    and
t h  are indistinguishable to bob at time point    the same analysis results hold for all
three threads  consequently  bb  holds in every thread that alice considers possible and
therefore the sum for this nested belief is
x
th
ii t
   t h      
t ht

t h   b
ib  
b  

i e   alice knows that bobs belief is outdated 
finally  consider the pointed doxastic system hd  obs ab   at t    cc     i  i e   the same
situation as before with the only difference that alice now shares her observation of the
delayed train with bob  it immediately follows that bob updates his beliefs in the same
way as alice  which in turn yields an update in alices beliefs about bobs beliefs so that
now the following expression is valid  because   is not a valid lower bound any longer  
   
 bb    
ba  

this example shows how alice can reason about the influence of her own actions on
bobs belief state and therefore she can decide on actions that improve bobs utility  as he
does not have to wait in vain  

   satisfiability checking for pdt logic
in this section we will describe procedures to check whether there exists a model for some
given set of belief formulae b  for the discussions in this chapter  we assume that all models
and sets of formulae are finite  we start with formally defining the satisfiability checking
problem in pdt logic  using the semantics from the previous section  we derive a model
checking algorithm based on fully specified doxastic systems  afterwards  we show how a set
of belief formulae can be used to specify a problem in pdt logic andtogether with a given
set of threadshow this can be transformed into a mixed integer linear program in order
to employ existing solvers to decide satisfiability of pdt logic formulae  finally  we show
how suitable threads can be derived from a given set of belief formulae automatically  using
transformations to linear programs is an established approach when deciding satisfiability
of probabilistic logics  as discussed for example by fagin  halpern  and megiddo        
however  if no priors are given  established decision procedures for probabilistic logics are
  

fipdt logic

not applicable to pdt logic due to the formalisms update mechanism  cf  the update rule
from definition      p       this update mechanism
if a fully specified doxastic system hd  hi is given  we can define the problem of checking
whether a set of belief formulae b is satisfiable with respect to this doxastic system as

follows  recall from section       that we use i t h to denote the set of all subjective
th induced by a prior interpretation i in a pov thread th 
posterior interpretations ii t
 
definition      satisfiability checking for pdt logic   let hd  hi be a pointed doxastic
system with the set of threads t and according prior interpretation i specified in hd  hi 
and b be a set of belief formulae  we say that b is satisfiable w r t  hd  hi if there exists
a thread th in t such that the corresponding interpretations satisfy all belief formulae b
from b 



sat b  hd  hi   th  t   b  b   i t h    b
    
if such a specification is given  checking satisfiability of b with respect to hd  hi corresponds to checking whether hd  hi is a model for b  we continue with introducing a model
checking procedure for this fully specified input  afterwards  we discuss how satisfiability
of a set of belief formulae b can be decided if no prior probabilities  or neither threads nor
prior probabilities are given 
    a model checking algorithm
a first approach of developing an algorithm to check whether a given set of belief formulae
b is satisfied by a given pointed doxastic system hd  hi  i e   checking whether hd  hi is
a model for b  can be obtained through a direct application of the semantics of the belief
operator given in definition       p       algorithm   shows the resulting model checking
procedure  it starts with computing the belief states for all possible evolutions of the world
from t     to tmax   afterwards  it iterates through all belief formulae b  b and potential
pov threads thk to determine whether the interpretation in the respective pov thread is
able to satisfy the current belief formula  if a thread is unable to satisfy some belief formula 
it is excluded from the set of potential pov threads for subsequent checks  if at least one
potential pov thread remains after all belief formulae have been checked  i e   there is at
least one thread thk so that all belief formulae b  b are satisfied   hd  hi is a model for
b 
theorem      soundness and completeness of algorithm     the decision procedure algorithm   is sound and complete and therefore a model checking procedure for pdt logic 
proof  since the presented algorithm is essentially an inductive application of definition     
 p       it is easy to see that it yields a sound and complete decision procedure for pdt
  u
  u fr
logic  basic belief formulae  bi t
   ft   and bi t   rt  f  g    return satisfiability results by
directly using the respective semantic definitions from      and      as calculation rules 
  u
  u
 
  
for every possible compound belief formula of pdt logic  bi t
      bi t   b   b b   and
 
  
b  b    the procedure provides an appropriate rule according to definition      to break
down these formulae iteratively until base formulae are obtained  which can be decided as
above 
  

fimartiny   moller

algorithm   model checking
procedure modelchecking hd  hi  b 
h 
hm
bs hd  hi       at
       at
 
 
 
for t     tmax do
bs hd  hi  t   bs hd  hi  t       utt h         utt hm  
for b  b do
for thk  t do
if not check bs hd  hi   thk   b   then
t  t    thk  
if t    then
return false
return true

  compute all belief states

  check if b is satisfied in thk
  otherwise remove thk from threads to check
  exit if no th can satisfy b
  success if t is nonempty after checking all b  b

function check bs hd  hi   thk   b 
switch  b 
  check formulae according to def      
  u
case bi t
     
if    b   then
  check nested belief formulae recursively  b   is a belief formula 
 

if not check bs hd  hi   t hk   b    then
return false
th
pt   bs hd  hi  t      b  
  use  b   from      to compute pt  with elements pi t k
th

th

th

  true if pi t k      u 

return     pi t k and u  pi t k  
  u
case bi t
     

pt   bs hd  hi  t      b  
th

th

th

  true if pi t k       u 

return     pi t k or u  pi t k  
case b    b     
return  check bs hd  hi   thk   b     and
check bs hd  hi   thk   b      
case b    b     
return  check bs hd  hi   thk   b     or
check bs hd  hi   thk   b      

  

fipdt logic

the asymptotic complexity of algorithm   depends on the number of belief operators
  u
bi t
     contained in b 
theorem      time complexity of algorithm     let b be a set of belief formulae and let
k be the number of belief operators contained within b  then  using algorithm   to check
whether a given pointed doxastic system hd  hi with m threads is a model for b has time
complexity o k  m  
proof  for a given pds with m threads and k belief formulae in b  the main procedure calls
the check function at most m  k times  if b is a base formula with only a single belief
  u
operator bi t
      a single call of the check function will return a result  otherwise  if a
  u
belief formula b contains more than one belief operator bi t
      the check function will
be called recursively  until base formulae are obtained  thus  for k belief operators in b 
the satisfaction checks are performed at most k  m times  yielding a time complexity of
o k  m  

from theorem     we immediately obtain a complexity result for the model checking
problem in pdt logic 
corollary      complexity of model checking for pdt logic   the model checking problem
for pdt logic is in ptime 
this result shows that model checking of a set of belief formulae w r t  a given pointed
doxastic system can be done in polynomial time  if a fully specified pds  and thereby an
exhaustive specification of the set of possible threads t   is given  this result shows that
algorithm   presents a tractable procedure to perform the model checking task  however 
this approach has a significant drawback as it assumes an exhaustive specification of t
together with precise prior probability assignments i t    although there are some problem
domains that actually come with such a specification  e g   cf  the cyber security scenario
described in the introduction   this assumption renders algorithm   infeasible for most
problem domains  to overcome this problem  we will proceed with discussing a different
approach  which enables satisfiability checking without requiring a specification of exact
probabilities  moreover  we show how representative threads with respect to a set of belief
formulae b can be constructed automatically  so that positive satisfiability results can
potentially be obtained without requiring a full materialization of all possible threads t  
    a compact problem specification
up until now we used a  pointed  doxastic system to specify a problem domain for model
checking a set of belief formulae b in pdt logic  in the following sections  we show how
we can reformulate the problem such that an extended set of belief formulae together with a
value for tmax is used  the main idea of this approach is that background knowledge regarding the target domain is not given through an explicit specification of possible threads and
according probabilities  but instead through sets of rules in b that describe how the target
domain may evolve over time  this approach has several advantages  in most scenarios 
compared to requiring an exhaustive set of possible threads  specifying a set of rules  which
can be expressed as prior beliefs  gives a more natural means of specifying background
  

fimartiny   moller

knowledge of the problem domain  e g   cf  example     on page     which actually starts
with a verbal description of rules and only later introduces the corresponding set of possible
threads   furthermore  using a set of rules to describe a problem domain is a fairly established approach and therefore this approach will provide options to simplify transformation
of existing problem specifications into pdt logic  finally  since the set of possible threads
grows exponentially with every additional time point in the set of time points  and every
additional ground atom of the language l  an exhaustive problem specification through
the set of possible threads quickly becomes infeasible  while the same situation could be
described succinctly through a small set of rules  even though such a succinct specification shifts the exponential nature of this problem from the required input specification to
computational efforts  we show that the exponential effect can be curtailed with heuristics
when constructing possible threads automatically 
      identification of key parameters from a set of belief formulae
to simplify the following discussion  we will restrict temporal rules to only use the point
frequency function pfr  recall that point frequency functions are used to specify that
some event f is followed by another event g after exactly t time points  while existential
frequency functions efr are used to specify that some event f is followed by another event g
within a time interval t  if existential frequency functions are required to specify a problem
domain  we can rewrite them as disjunctions of point frequency functions  as the following
proposition shows  if further frequency functions are defined  the presented techniques can
be easily adapted 
proposition      efr rewriting   an existential frequency function efr can be equivalently
represented as a disjunction of point frequency functions pfr 
efr
 f  g  
rt

 

pfr
rt
  f  g 

  tt

t 

recall that  according to definitions      and      on page     the specification of a pds
consists of a set of agents a  a set of threads t   a set of frequency functions f  a matrix of
 a  t  

prior probability distributions a 
  and a set of time stamped observations h 
since we will only use point frequency functions in the following  the set of frequency
functions f is always fixed to  pfr   and thus there is no need to specify this set separately 
instead of explicitly specifying the set of agents a  we can just determine it from the
  u
belief expressions bi t
     contained in the set of belief formulae b  with a slight abuse of
  u
  u
notation  we use bi t
      b to denote that belief operator bi t     appears somewhere in
a set of belief formulae b  then  we can define the set of agents ab specified through a set
of belief formulae b as
  u
ab    i   bi t
    
      b 

generally  it is possible that the explicit specification of the set of agents a is larger than
the set ab   however  it is obvious that if no beliefs are expressed for some agent i  i e  
i  a and i   ab    this agent will not influence satisfiability checking results whatsoever 
thus  this agent can simply be disregarded and  consequently  it suffices to use the set ab  
  

fipdt logic

similarly  instead of specifying the set of ground atoms of the language l through the
sets of predicates lpred and constants lcons   we can define a set of event formulae fb
representing all belief objects occurring in a set of belief formulae b as
n
o
  u
  u fr
  u fr
fb   f   bi t
 
    
   ft    b  bi t   rt  f  g    b  bi t   rt  g  f     b
this definition gives rise to a potential definition of the set of possible worlds  as
the herbrand base b fb of fb  resp  the set of admissible worlds    complying with
definition      p       however  as we will show later  there are more options to constrain
the sets of possible worlds to allow for a more concise problem representation 
note that according to definition      p       formulae may include both atoms and
observation atoms  consequently  fb does not only specify ontic facts of possible worlds 
but also possible observations of these ontic facts  with this approach  occurrences of
observations are limited to the ones specified in fb   this can be seen as the specification
of a sensor model for groups of agents g  ab  
remark      a strict application of      would prohibit simple specifications of group observations obsg  l  with  g      in b  to ensure that the set of admissible worlds
actually
v
contains worlds with obsg  l   a full specification of such an observation as g   g obsg    l 
in b would be required  otherwise there might be no world   b fb with     obsg  l 
that satisfies the second property in the definition of possible worlds  cf  definition       
however  the required full specification of an observation for admissible worlds can be determined solely through the simple observation specification obsg  l   in order to keep the
specification of b as compact as possible 
we allow for simple specifications obsg  l  and
v
assume that they are expanded with g   g obsg    l  while creating fb  
an alternative approach would be to construct fb only through ontic facts appearing
in b and create a set of admissible worlds by combining all ontic facts with all possible
admissible observations w r t  definition      these approaches differ in the requirements
of observation specifications  the former requires to specify every possible observation explicitly  while the latter requires to exclude every impossible observation explicitly  since in
most scenarios the set of observations actually being possible  w r t  the problem domain 
is significantly smaller than the set of all admissible observations  the presented approach
will usually yield a more compact problem specification  if desired  one could employ the
latter approach instead without impacting the functionality of the following methods 
background knowledge regarding the target domainthat was given through an explicit
representation of possible threads beforecan now also be specified as prior beliefs  i e  
  u
beliefs bi  
    in b  recall from section       that we assume a commonly known prior


t h which is equal for all agents i  a   as the belief semantics is defined
distribution ii t
b


t h  cf  definition       p       it follows
with respect to the probabilistic interpretations ii t
 

  u
that every prior belief bi  
   is common knowledge as well  consequently  we can express
background knowledge as prior beliefs of any arbitrary agent i  ab  
  u fr
as pointed out in section    satisfiability of beliefs in temporal rules bi t
   rt  f  g  

with certain properties are independent of the respective set of threads t or the associated
interpretation i t    cf  remark      p       if the respective frequency function corresponds
  

fimartiny   moller

to ff  or ff  of definition       i e   f is a contradiction  g is a tautology  or f is a tautology and g is a contradiction   beliefs are either trivially satisfied for quantifications with
u      resp         or generally unsatisfiable  in the former case  trivially satisfiable beliefs
can be disregarded without influencing satisfiability results  while for the latter case satisfiability checking can terminate immediately with a negative result  thus  in the following we
assume that b contains only beliefs in rules that do not correspond to frequency function
axioms ff  and ff  
example      trains revisited   an informal verbal description of the train problem was
given in example      p      with a corresponding formal specification through a set of
possible threads t in example      p     and probability assignments in example      p      
using the above considerations on the expression of background knowledge as beliefs in rules 
we can reformulate the verbal rules given in example     together with the probabilistic
information from example     as a set of formal beliefs b with according explanations
below 



   
   


b    ba  
at t
 
c
 

b
on a 
t
 
 
 
 
 
 
a

a  







        pfr


 b    
r   at t    ca    punct t    
ba  


b
 

 


        pfr

 ba  
r   at t    cc    punct t      
 b     









   


r pfr   punct t     at t    ca    at t    cc    on a  t      b    
ba  


b   



    pfr

 ba  
 r   punct t     at t    ca    at t    cc    on a  t        b     







   
b 
r pfr   punct t     at t    cc    at t    cb    on a  t      b    
ba  

b   



   


 ba  
r pfr  punct t     at t    cc    at t    cb    on a  t        b     








   


b    ba  
r pfr  punct train   at train  city   obs a   punct train     









        pfr

b    ba  
r   obs a   punct train    obs ab   punct train     









train   t    t    




city   c   c  
a

b













































































note that all beliefs are expressed for time t      i e   these are prior beliefs that are by
definition commonly known among all agents  all beliefs expressed in this example are
assigned to a  but they could equivalently be assigned to b or to both 
b  states that train t  is at city ca at time t     and that alice is on that train  b 
states that both agents believe that trains are punctual  denoted by punct train   with a
probability of       the probability values in this example are obtained by summing over the
probabilities given in example     for all threads given in example     where the respective
belief object is satisfied  to have an equivalent representation of the previous example  we
  

fipdt logic

use exact probability values  i e       u  instead of intervals  note that punct train  is an
additional predicate with a variable train that helps to formulate the background knowledge
in a concise way  formula b  does not yet specify what the consequences of a non punctual
train are  only that a train is expected to be punctual with a certain probability  b  states
that alice is able to board train t  after three time steps if train t  is punctual and that
alice has to wait for two additional time points otherwise  b  states that train t  will
arrive at city cb two time points after being in city cc   otherwise she will arrive one
time point later  b  states that alice will always notice when her train leaves a city not
punctually  this is an example for a sensor model specification as discussed above  finally 
b  states that alice will call bob with a probability of      if her train is not punctual 
example      trains continued   with the definition of the set of belief formulae b from
the above example  we can now also specify the set of event formulae fb required to model
the possible scenarios described through b 






at t
 
c
  
at t
 
c
  
at t
 
c
  
at t
 
c
  
 
 
 
 
a
b
b
c






 on a  t    on a  t    punct t    punct t   

 
 
 
 
fb  


obs a   punct t      obs ab   punct t     








 obs  punct t      obs

 punct t
  
 
 a 
 ab 
to simplify the following discussion  we assume that conjunctive formulae b   b   
 b are replaced with individual formulae of the respective conjuncts  b   b  
 b    b     b       this does not impact the satisfiability checking properties of b because
all formulae in b have to be satisfied simultaneously in order to return a positive result
and thus  both b   and b    have to be satisfied  regardless of their representation as two
individual formulae or as one conjunction 
now  what remains to be determined is the set of threads t   a corresponding prior
b   

 a  t  

probability distribution i t    resp  a matrix of prior probability distributions a 
 
where every row is formed by i t     and possibly a set of time stamped observation atoms
h  the tasks of determining t and h can be treated jointly  since the set of relevant
threads needs to be determined anyway  we simply create t such that t    h 
in the next section we will show how we can transform a set of pdt logic belief formulae
b together with a given set of threads t into a linear program in order to determine
satisfiability of b with respect to t   afterwards  we will discuss how a suitable set of
threads t to represent the information contained in b can be constructed automatically 
using these results  it is possible to model a problem domain in pdt logic solely through
a set of belief formulae b together with the specification of a maximum time point tmax  
all other key parameters of the domainsuch as the set of agents and the set of ground
atomscan be extracted from b automatically 
    representing the satisfiability problem as a linear program

the considerations from the previous section show that most parameters for a problem
specification can be extracted from a given set of belief formulae b  in this section  we
assume that only a set of belief formulae b together with a set of possible threads t is given 
  

fimartiny   moller

b is then satisfiable with respect to t  denoted by sat b  t    if a prior interpretation i t  
can be found such that all belief formulae in b are satisfied  by extracting linear constraints
on i t   from b  we show how the satisfiability problem can be transformed into a linear
program  checking satisfiability of b with respect to t is then equivalent to checking
whether the corresponding linear program has a feasible solution 
for a given set of threads with an unknown prior interpretation i t    the satisfiability
checking task significantly increases in complexity compared to the model checking task 
formulation of the satisfiability checking problem in definition      p      might be somewhat delusive  as the existence of a single thread in the context of some interpretation
suffices to verify satisfiability of a set of belief formulae b  it appears intuitive to develop
a method to construct such a threadif possibleand neglect the other threads  or  vice
versa  start with the entire set of threads t and iteratively prune all threads that fail to satisfy any formula from b  in fact  such a pruning approach was used in algorithm    p    
to check whether a given set of threads is a model for a set of belief formulae  unfortunately 
these approaches are inapplicable if the prior interpretation is unknown  as the semantics of
belief operators  cf  definition       p      relies on subjective posterior probabilistic interpretations  i e   on probability assignments for multiple threads   it is generally not possible
to find a single thread th satisfying the satisfiability checking problem from definition    
without determining probabilities for all threads  vice versa  it is generally not possible
to discard any thread  because determining whether it satisfies any belief formula can only
be done if its respective probability assignment is known  instead  we will show that belief
formulae can equivalently be expressed as sets of linear constraints on the unknown prior
interpretation i t    then  checking satisfiability of b is equivalent to checking whether
there is a possible assignment to i t   so that all constraints are satisfied 
we will use xk to denote the unknown prior probability of thread t hk   i e   if t contains
m threads  then its unknown prior probability assignment is represented as
i t     x         xm

t

 

    

the goal of the following methods is to provide constraints on the xk so that all belief
formulae b  b are satisfied  since these variables represent a probability distribution
over the set of threads  there are two obvious constraints to begin with 
   xk     k           m 
and

m
x

xk    

    

    

k  

      representation of subjective posterior probabilities
since the semantics of beliefs is defined in terms of the respective agents subjective probability assignments in the respective pov thread  we need means to express the subjective
th of an agent i in terms of the prior probability
posterior probabilistic interpretations ii t
 
values xk   these interpretations change at a time point t whenever an observation obs i   l t
is possible for agent i  if an observation is possible for an agent  we can partition the set of
threads into two sets  one partition containing the set of threads where agent i does observe
  

fipdt logic

the respective fact l and one partition where agent i does not observe the respective fact 
the subjective probability assignments need to be updated within each partition to reflect
this information about observation occurrences  taking every thread within a partition as
a possible pov thread  the probability assignments for all other threads within this partition
need to be scaled according to the update rule in definition     and the pov thread specific
probability assignments for all threads outside of the respective partition need to be set to
zero 
generally  this leads to one vector of subjective probabilities over all threads for every
possible pov thread  cf  the definition of belief states in equation       p       however  we
can leverage the semantic properties of pdt logic to obtain a parsimonious representation
of the updated subjective probabilities without representing every pov thread explicitly 
note that all threads within one partition as described above are indistinguishable to agent
i at the respective time point  i e   all threads within one partition exhibit exactly the same
set of observations for agent i up to time point t  and therefore receive the same probability
assignment for every possible pov thread within this partition  cf  proposition      p      
consequently  the updated probability assignments for every thread in t can receive only
one of two different types of value assignments  a scaled version of the threads previous
probability assignment according to definition      p       or zero  depending on whether
the agent actually observes the fact l or not  the following proposition shows that we do not
need to consider the cases with zero probabilities in order to perform satisfiability checking
tasks 


t h be the subjective posterior
proposition      irrelevance of zero interpretations   let ii t
 
 
probability interpretation at time t for some agent i in pov thread th  i e   this interpreta 

tion is determined through the prior interpretation and interpretation updates corresponding
to pov thread th   if this interpretation assigns a probability of zero to some thread t h  i e  
th  t h        then satisfiability of any subsequent nontrivial belief b       with t     t  is
ii t
 
i t


t h  t h  
independent of ii t
 

  u
proof  every belief bi t
     with       in a fact or in another belief  i e      ft or
   u

   bj tj j     requires that there needs to be at least one thread t h with a nonzero


t h  t h      can clearly not
probability such that t h      therefore  a thread t h with ii t
 
  u
  
 
prove satisfiability of a belief bi t
      with t  t   a negative satisfiability result  i e   b

is unsatisfiable w r t  t   cannot be obtained from such a zero assignment either  because
any consistent interpretation  i e   the probability assignments of all threads sum to one 
needs to assign a nonzero probability to at least one thread  which could then possibly
  u
satisfy the belief  the same considerations hold for beliefs bi t
     with       and u     


t h  t h      satisfies the lower bound        the upper bound u    
although a thread with ii t
 


t h  t h        such
requires the existence of another thread t h  with a nonzero probability ii t
 


t h  t h      can only prove satisfiability of beliefs b   u   
that t h       consequently  ii t
 
i t 
with       and u      these are trivial beliefs that are satisfied by every thread and
every possible probability assignment and thus  their satisfiability can be proven without
th  t h       too 
ii t
 

  

fimartiny   moller

  u fr
analogous considerations hold for beliefs in rules  a belief bi t
   rt  f  g   with      
requires the existence of a thread with a nonzero probability such that fr t h  f  g  t      
th  t h      cannot prove satisfiability of this belief  satisfiaand thus a thread t h with ii t
 
  u fr
bility of a belief bi t
   rt  f  g   with       and u     depends on the respective frequencies
 
fr t h   f  g  t  in additional threads t h  with nonzero probabilities 

as a result of this proposition  we can merge the nonzero entries from both cases  agent
i observes the fact l and agent i does not observe the fact l  into a single probability
distribution vector for each agent i and time point t  this yields a modified version of the
update rule from definition      we will use this modified update rule to determine linear
constraints on the unknown prior probabilities xk  
definition      modified update rule   let i be an agent  t  be a time point where some observation obs i   l  can occur and t h be a thread  then  a compressed subjective posterior
probability assignment ii t   t h  for agent i at time t  for thread t h is given through
ii t   t h   

 
 ii t     t h 
th
i t
 

    

t h again being a normalization factor to ensure that the probabilities of all threads
with i t
 
that agent i considers possible sum to one 
x
th
ii t   t h   
i t
   
t h   t   ki  t h t    

example      modified update rule   to illustrate the modified update rule  we return to
the situation described in example      p       in this example we assumed that train t 
is running late and a does not inform b about it  this resulted in the following updated
interpretation for a 

th 
th 
th 
                         
  ia  
  ia  
ia  
in the given example  two additional hypothetical partitions of the set of threads t are
possible for alice at time point t       if train t  is running late and a does inform
b about it  threads t h    t h    and t h  are indistinguishable to a  yielding the updated
subjective interpretation

th 
th 
th 
ia  
  ia  
  ia  
                            
if t  is on time  alice considers threads t h    t h    and t h  as possible  the corresponding
subjective interpretation is then

th 
th 
th 
ia  
  ia  
  ia  
                            
these three different subjective interpretations have nonzero entries exactly for the threads
that are in the partitions of the respective pov thread  since the partitions are not overlapping  we can merge the nonzero entries into a single probability vector

ia                                                
  

fipdt logic

note that in this modified update rule  the update for each pov thread does not specify interpretations over all threads anymore  but instead only the reflexive interpretations
for each thread t h  given that t h is the pov thread  are used  as discussed above  for
the satisfiability problem this is still a sufficient representation of posterior probabilities 
because all other potential pov threads th in the respective partition are indistinguishable
to agent i and therefore yield exactly the same interpretations  it should be noted however that ii t   t h  is not a probabilistic vector anymore  i e   its elements do not sum to
one  compared to the representation of belief states from section        p       information
about distinguishable worlds is lost  thus  reconstruction of an agents belief state from this
representation is only possible with an additional specification of the respective relations
ki  
returning to the problem representation from       p       we can use the modified update rule to obtain an inductive definition of subjective posterior probabilities based on the
t
respective  unknown  prior probabilities xk   if i t     x         xm is the prior interpretation over the set of threads  agent is compressed subjective posterior interpretations
ii t  at the time point t  of the first possible interpretation can be represented as
ii t   t    



 
 i t 

 x        

 
m
i t 

 xm



 

t

 

    

k determined through
with the update factors i t
 

 
i t
 



i t
   



 
m t

i t
x
 



 
x
 

 
 
m
   


  
 

 

i t
m     

i t 

j k


 
i t
  m
   

   
 

i t
m m

 
  if t hk  t     ki  t hj  t    
 
  if t hk  t      ki  t hj  t    
 

with a  symmetric  matrix of indicators i t
j k denoting whether agent i considers thread
 
t hk possible in thread t hj at time t   using      as the base case  we can then define
interpretation updates for the next possible observation at time t   inductively as
ii t    t    



 
 i t  



 
 i t 

 x        

 

m
i t  



 

m
i t 

 xm

t

    

to simplify notation  in the following we use a single factor aki t  to represent the agk  k       for all observations that can occur at
gregated sequence of scaling factors  i t
i t 
 
time points t    t        between t     and t   t  for agent i  i e   agent is subjective posterior
interpretations ii t   t   at time t  are given as
ii t   t     a i t   x         am
i t   xm

t

 

    

note that potential interpretation updates for an agent i can occur at some time point t
if and only if some observation obs i   l  is possible at that time point  hence  for any time
interval between two possible observations  the subjective interpretations are constant 
  

fimartiny   moller

proposition      piecewise constant interpretations   let t  and t  with t    t  be two
time points such that observations for an agent i are possible at t  and t    but at no time
point t in between t  and t    then  the compressed subjective interpretation ii t   t   is
constant for all time points t   t   t   
t   t    t        ii t  t     ii t   t  
this proposition states that all constraints identified in the following section do not
only restrict the subjective interpretations at single time points  but instead restrict the
interpretations for the respective time interval between any two possible observations 
      extracting linear constraints from belief formulae
now that we have established representation      of subjective posterior interpretations in
terms of the unknown prior probabilities xk   we can use this representation to extract linear
constraints on the xk from the set of belief formulae b 
we assume that the distributive property of the belief operator from lemma      p     
  u
is applied whenever possible  i e   belief formulae bi t
   b   b    with        are
  u
  u
separated into bi t
   b   bi t   b     furthermore  without loss of generality  we can assume
that conjunctive formulae b   b   b  are replaced through b    b    b    b    and that
trivial beliefs  with       and u      are removed from b 
moreover  we assume that all belief formulae b  b are represented in negation normal
form  nnf   i e   the negation operator is only applied to atoms  since any arbitrary logic
formula can equivalently be expressed as a formula in nnf  cf  e g   baaz  egly  leitsch 
goubault larrecq    plaisted         this assumption does not restrict b either 
with these assumptions  the following types of belief formulae b can occur in b 
  u
 atomic belief formulae b   bi t
    
  u
 negated atomic belief formulae b   bi t
    

 disjunctive belief formulae b   b   b 
for each of these types  we will now show how the respective formula can be expressed as
a set of linear constraints on the prior probabilities xk  
atomic belief formulae using the parsimonious representation of subjective posterior
interpretations ii t   t h  given through the modified update rule in definition     requires
an adaption when deciding satisfiability of belief formulae  before  satisfaction of a belief
formula in a given pov thread could be determined by summing over the respective subjective interpretations of all threads in which the belief object is satisfied  threads that
an agent does not consider possible anymore w r t  the given pov thread are automatically
excluded as they have a probability assignment of zero  in the compressed representation 
the respective probability assignments for threads considered impossible are overloaded with
different probability assignments given that the agent is in another pov thread  as illustrated
in example      we obtain an adapted version of satisfiability testing by explicitly ensuring
that only those interpretations of threads are summed that are still considered possible
w r t  the respective pov thread  as this additional constraint only excludes summands
  

fipdt logic

with zero values  the original semantics is still maintained  thus  we use equivalence classes
    c          to represent the set of distinguishable situations for agent i at time t   
ci t     ci t
 
i t 
naturally  two threads t h    t h  are indistinguishable and therefore in the same equivalence
class for agent i at time t    if they exhibit exactly the same observations for agent i for all
time points t          t     all threads outside of a particular equivalence class receive a
probability of zero for every pov thread th within the respective equivalence class andas
discussed in the previous sectiontherefore do not contribute to the satisfiability properties  then  in the belief semantics from definition       p       instead of summing over all
k    th  c k  
threads t h  t with certain properties  we can restrict the range to t h  ci t
i t
while maintaining the original semantics  naturally  a belief formula is then satisfiable if
there exists at least one equivalence class that satisfies the respective beliefs  for instance 
  u
a belief in a fact bi t
   ft   is satisfiable with respect to an agent is compressed subjective
posterior interpretation ii t  at time t  iff
k
ci t
   ci t      

x
n 

k t h  t   f  
 t hn ci t
n
 

ani t   xn  u

    

such a constraint can equivalently be expressed as a set of linear inequalities with
conjunctive and disjunctive connectives  leading to an alternative representation of the
satisfiability problem 
corollary      alternative satisfiability representation for atomic beliefs   let ii t   t    
t
t
a i t   x         am
and ij t  t     a j t  x         am
be the compressed
j t  xm
i t   xm
representation of agent i and js respective subjective posterior probabilities at time t  and
t  respectively  as given in       and let ci t  and cj t be the sets of worlds that agent i and
agent j can distinguish at the respective time point  then  an atomic belief expression b is
satisfiable w r t  ii t   t   for
  u
   belief in a fact b   bi t
   ft   iff



 
k c
ci t
 
i t 

x
k
 t hn ci t
 

n 
t hn  t   f  

ani t 



 xn    



x
k
 t hn ci t
 

n 
t hn  t   f  

ani t 


 xn  u

 
    

  u pfr
   belief in a rule b   bi t
   rt  f  g   iff

 



k c
ci t
 
i t 

x
k  
n   t hn ci t
 




x
n 

k  
 t hn ci t
 


ani t   xn  pfr t hn   f  g  t    
ani t   xn  pfr t hn   f  g  t  

  


u

 
    

fimartiny   moller

   u

  u
j j
   nested belief b   bi t
    iff
   bj t

 



k c
ci t
 
i t 

x
k  
n   t hn cj t
k
k     
t hn       cj t ci t
 




x
k  
n   t hn cj t
k c k     
t hn       cj t
i t 




x

x
n 

anj t  xn 

ani t   xn 

k c k  
t hn  cj t
 
i t 



uj

ani t   xn   

k c k  
n  t hn  cj t
i t 
 t hn   




anj t  xn   j

u







 
    

 t hn   

as discussed above  the representations for satisfiability of beliefs in facts      and beliefs
in rules      are obtained directly by replacing the range of threads t in the sum with the
k considered possible by agent i at time t    the inequalities for
respective set of threads cj t
 
nested beliefs      are obtained by ensuring in the first two lines that in every situation
that agent i conceives as a possible situation for agent j  expressed through the constraint
k    c k  c k       agent js belief in the respective fact   expressed
n    t hn  cj t
j t
i t 
through the constraint t hn      is within   j   uj    the latter two lines ensure that for
these respective situations  the outer belief of agent i is satisfied  as well  note that the
belief object  in      might contain additional belief operators  i e   beliefs with multiple
levels of nesting are expressed  in this case  evaluation of t h     in the first two lines
of      yields additional constraints of type           such that the formula is evaluated
recursively 
negated atomic belief formulae to satisfy a negated atomic belief formula b  
  u
bi t
      the accumulated probabilities of all threads that satisfy the belief object  in
k must be either lower than   or higher than u  i e   the individual
an equivalence class ci t
 
disjuncts
in          have to be negated  by pushing the negations inward and using
x
      as a representative for the respective sums defined in      and      to express


satisfiability of atomic beliefs  we can represent negations of the according beliefs expressed
in      and      as
 
 x
  x

 

           
        u  
    
k c
ci t
 
i t 





if nested beliefs as defined in      contain negated belief operators  this can be expressed
accordingly by replacing the conjunctive constraints on   and u  resp   j and uj   with the
corresponding disjunctive constraints      for negated atomic belief formulae 
  

fipdt logic

disjunctive belief formulae with the above inequalities  the required constraints for
a disjunctive formula b   b   b  can easily be expressed as an additional disjunction of
inequalities  let c  and c  be the sets of inequalities to express satisfiability of b  and b 
according to           respectively  then  the constraints for b can be expressed as
c   c 

    

example      trains continued   in example      p       a set of belief formulae b has
been given for the train example  to illustrate the extraction of linear constraints from
this set  we continue to use the set of threads depicted in figure    p      with a minor
modification  to reflect the model specified in b of example      we assume that the
predicate punct train  is explicitly encoded in the respective threads  moreover  for the
sake of the example we assume that the prior probabilistic interpretations are yet unknown 
we use x         x  to denote these unknown probabilities  note that for our example  we
are only dealing with prior beliefs  i e   we only have one equivalence class c   t and
all scaling factors ani t  are equal to one  this significantly eases the presentation of this
example  of course  in general we have to deal with both multiple equivalence classes and
multiple varying scaling factors  as this highly increases complexity of the presentation  we
refrain from giving explicit examples for these cases  the constraints from b are extracted
as follows 

        pfr
r   at t    ca    punct t      
 for belief b     ba  
pfr t h  at t    ca    punct t            for t h   t h         t h   

pfr t h  at t    ca    punct t            for t h   t h         t h   

and thus application of rule      yields the constraints
x   x   x       
x    x    x  

    

in this special case where     u  we can simplify this constraint to
x    x    x   

    

since all of the rules exhibit this property  we slightly deviate from      and only
give the equivalent equality constraints for subsequent rules in order to simplify the
presentation 

        pfr
accordingly  for belief b      ba  
r   at t    cc    punct t     we obtain 
pfr t h  at t    cc    punct t            for t h   t h    t h    t h   

pfr t h  at t    cc    punct t            for t h   t h    t h    t h       t h   

with the corresponding constraints
x    x    x   
  

    

fimartiny   moller


        pfr
 for belief b    ba  
r   obs a   punct train    obs ab   punct train     
for t h   t h    t h    t h    t h     

pfr t h  punct train   obs ab   punct train           

for t h   t h    t h    t h     

pfr t h  punct train   obs ab   punct train           

for t h   t h    t h     

pfr t h  punct train   obs ab   punct train            

and thus application of rule      yields the constraint
x    x    x         x         x    x        
 for the remaining beliefs  the respective belief objects are satisfied in every thread
and thus we only obtain the redundant constraints
 
x

xk     

k  

one can easily verify that prior probabilistic interpretation given in example      i e  

x                                              
indeed is a solution with respect to the above constraints  of course  for the given
example  this solution was expected  as b was defined such that it exactly reflects the
situation described in the examples from the previous section 
      transformation into a disjunctive program
for every belief formula b  b  the above extractions of linear constraints yield a set of
inequalities of the form
ai   x    ai   x          ai m xm  bi  

    

with xj representing the unknown prior probabilities of threads t h         t hm   the coefficients
ai j set to the respective values of ani t  if they contribute to this constraint and set to zero
otherwise  and the value b  set to the respective limit obtained through   or u 
as corollary     shows  every belief formula b  b yields a disjunctive set of inequality
constraints  i e   every belief formula b introduces branches in the set of linear constraints 
by collecting all inequalities of the form      that constrain a single branch  we can express
the constraints in matrix form 
ax  b 
    
with



a   
   
a   
an  


  
 



 
 
a  m
x 
b 
      x          and b     
  
xm
bm
an m
  

fipdt logic

this form of representation has a close connection to linear programming  lp   linear
programming  e g   murty        is a solution method to optimization problems where some
linear function of a set of continuous variables xk is to be optimized with respect to a given
set of linear constraints  while the task of satisfiability checking does not require any
optimization and thus actually solving a linear program is not required for this work  we
will exploit similarities between our sets of linear constraints and lp in order to show how
the satisfiability problem can be solved 
the standard form of an lp problem  murty        gives a set of constraints exactly in
the form of       every solution x that satisfies these constraints is called feasible and the
entire solution space for      is called feasible region  thus  checking whether a set of belief
formulae b is satisfiable is equivalent to checking whether a corresponding lp problem
has a non empty feasible region  for standard lp problems with constraints of the form
      the feasible region is a convex polytope  which allows performing this check with little
computational effort  garey   johnson        
unfortunately  extracting linear constraints from a set of belief formulae b as described
in section       does not yield a single set of constraints in the form of       but instead
a disjunction of different sets of constraints  this gives rise to the representation of the
satisfiability checking problem as a disjunctive program  dp   balas        
corollary      satisfiability checking as a disjunctive program   let b be a set of belief
formulae  let t be a set of threads and let d be the set of all disjunctive branches d of linear
constraints extracted from b and t according to the extraction rules            then  the
satisfiability checking problem can be formulated as a disjunctive program  balas        
 
ad x  bd
    
dd

b is satisfiable with respect to t   denoted by sat b  t    if      has a solution 
a disjunctive program is called bounded  if the range of every variable xk is restricted
through lower and upper bounds  since we will rely on the bounded property subsequently 
we state the following result 
lemma      satisfiability checking as a bounded dp   let b be a set of belief formulae
and t be a set of threads  checking satisfiability of b with respect to t can be represented
as a bounded disjunctive program 
proof  this is a straightforward result  corollary     shows that satisfiability checking
for pdt logic can be represented as a disjunctive program in the form of       since
every variable xk in      represents a probability value  all xk are naturally bounded by
   xk    
in a disjunctive program  the feasible region cannot be guaranteed to be convex anymore 
nor can it be guaranteed that the solution space even represents a connected region  this
significantly increases the complexity of determining whether a nonempty solution space
exists  to analyze this problem in more detail and to show connections to established
solution approaches  we will discuss in the next section how a disjunctive program in the
form      can be further transformed 
  

fimartiny   moller

      transformation into a     mixed integer linear program
the concept of linear programs with continuous variables xk subject to linear constraints of
the form      can be extended to so called mixed integer linear programs  milps   schrijver 
       opposed to standard linear programming  for milps it is not required that all
variables xk have a continuous domain  instead  milps can use a mix of both continuous
and integer variables  there are several equivalent ways of representing a milp  we adopt
the representation from fischetti  glover  and lodi         which specifies the constraints
of a milp as
ax  b

xj integer

j  i

with an index set i indicating which of the variables xj are integer variables  a special
case of milps are     mixed integer linear programs  williams         where the integer
variables xj are restricted to binary values 
ax  b

xj        

    
j  i

by augmenting the set of variables x with binary switching variables xj for every possible
disjunction  it is possible to represent disjunctive programs in the form of      as     milps
in the form of       balas         this leads to a central result for satisfiability checking in
pdt logic 
theorem       satisfiability checking as     milp   let b be a set of belief formulae
and t be a set of threads  the problem of checking satisfiability of b with respect to t
can be transformed into a corresponding     mixed integer linear program m so that b is
satisfiable with respect to t iff m has a feasible solution 
proof  lemma     shows that satisfiability checking for pdt logic can be represented as
a bounded disjunctive program  such that a set of belief formulae b is satisfiable iff the
corresponding bounded disjunctive program has a feasible solution  the proof of theorem
    from balas        shows that every bounded disjunctive program can be equivalently
represented as a     mixed integer program m   consequently  satisfiability checking for
pdt logic is equivalent to checking whether m has a feasible solution 
we can leverage theorem      to obtain complexity results for the satisfiability problem
in pdt logic 
theorem       complexity of pdt sat w r t  a given set of threads   checking satisfiability of a set of pdt logic belief formulae b with respect to a given set of threads t is
np complete 
proof  it is generally known that checking whether a bounded     mixed integer linear
program has a feasible solution is np complete  cf  bienstock         as theorem     
shows that satisfiability checking in pdt logic with respect to a given set of threads t can
be reformulated as a     milp with bounded variables xk  cf  lemma       it follows that
  

fipdt logic

satisfiability checking for a set of belief formulae b with respect to a given set of threads
t is in np 
arbitrary propositional formulae f  cf  definition      p      can be expressed in pdt
   
logic by using them as a belief object for a strict prior belief bi  
 f    since it is well known
that the boolean satisfiability problem  sat  is np complete  cook         it follows that
any problem in np can be transformed to a satisfiability checking problem in pdt logic 
hence  the satisfiability checking problem in pdt logic is np hard and consequently npcomplete 
the np completeness result shows that the problem is in np and therefore we immediately obtain another important property of the satisfiability problem in pdt logic 
corollary       decidability of pdt sat   checking satisfiability of a set of pdt logic
belief formulae b is decidable 
milps have been subject to extensive research for decades  and thus an ample variety
of solving methods has been proposed  e g   balas  ceria    cornuejols        balas  ceria 
  cornuejols        balas   perregaard        to name some of the most notable work on
milp solving  and especially fischetti et al        and bertacco  fischetti    lodi       to
find feasible solutions of milps   this research gave rise to various efficient implementations
of milp solvers  both commercial  e g   ilog        gurobi optimization  inc         and
non profit products  e g   gnu project        computational infrastructure for operations
research  coin or  project         for a given set of threads  pdt logic satisfiability
checking can be reformulated as a     milp problem  and thus any of these state of the art
milp solvers can be exploited for relatively fast satisfiability checks for most instances of
pdt logic belief formulae b with respect to a given set of threads t  
the results from this section show how satisfiability of a set of pdt logic belief formulae b can be decided with respect to a given set of threads  even if no specific prior
probability assignment is specified  as the overall goal of this section is the design of a
decision procedure that requires only a set of belief formulae b as an input  we continue
the discussion of satisfiability testing with the development of a method to automatically
construct a set of threads representing the background knowledge specified in b 
    prior constraints on possible threads
to determine whether the set of belief formulae b is satisfiable  we need to obtain a set
of possible threads that reflects the background knowledge specified in b  in this section 
we describe how we can identify certain constraints on the set of possible threads t prior
to actually starting to generate threads that represent the information specified in b  to
identify such prior constraints  we discuss different properties of the belief formulae contained in b  using these properties  we can create a taxonomy of belief formulae depending
on the respective impact on the set of possible threads t   beliefs with certain properties
can then be used to constrain the search space for sets of possible threads prior to actually search for these sets  after discussing prior constraints in this section  we use these
results in section     to develop a decision procedure for pdt logic that requires neither
a specification of probabilities nor a specification of possible threads 
  

fimartiny   moller

      a taxonomy of belief formulae
the set of belief formulae b may contain beliefs with various features that will have different
impacts on the sets of admissible worlds at specific time points t  we will discuss these
features below and show how they yield a taxonomy of belief formulae  this taxonomy
allows for the classification of beliefs into three different types with respect to their impact
on the sets of admissible worlds  in particular  we can identify beliefs that are independent
of any specific probability assignment and of any kripke relations ki   this classification is
for technical purposes  beliefs that depend neither on specific probability assignments nor
on specific kripke relations can be used to derive initial constraints on the sets of possible
worlds at some or all time points t  tmax   we use b to denote the set of all worlds
admissible with respect to a set of belief formulae b  and we use b  t  to denote the set
of admissible worlds with respect to a set of belief formulae b at time t 
recall that there are three different kinds of beliefs  beliefs in facts  beliefs in rules  and
beliefs in beliefs  as before  we differentiate between prior beliefs that hold at time point
t      and are therefore commonly known among all agents  and posterior beliefs that hold
at time points t     
  u pfr
we can further distinguish beliefs in rules bi t
   rt  f  g   with respect to t  we call
pfr
pfr
 f  g  a dynamic rule if t      accordingly 
 f  g  a static rule if t     and we call rt
rt
we can separate beliefs in rules into beliefs in static rules and beliefs in dynamic rules 
respectively  these beliefs differ with respect to their temporal impact  a static rule will
constrain the possible worlds instantaneously  i e   r pfr  f  g  states that there can be no
world  such that both     f and      g hold  a dynamic rule on the other hand requires
that whenever a world  with     f occurs  there must be another world    with       g
after t time steps 
finally  we can classify beliefs with respect to their probabilistic quantifications  we call
  u
a belief bi t
     strict  if both     u     or     u      for the sake of simplicity  in the
following we assume without loss of generality that strict beliefs are always represented with
   
   
    u      any strict belief bi t
   can easily be rewritten as bi t
     we call a belief
trivial if       and u      obviously  these beliefs are trivially satisfied by any arbitrary
interpretation  thus they do not impact satisfiability checking results at all and therefore
can be removed from b 
remark      from the definition of the belief semantics  definition       p      it follows for
   
the special case of strict beliefs bi t
   that  i  agent i considers the occurrence of the belief
objects complement  as impossible and  ii  that this occurrence is indeed impossible 
thus  strict beliefs comply with the common definitions of knowledge as justified true belief
and belief that is stable with respect to the truth  cf  e g   shoham   leyton brown       
page       consequently  we could also refer to a strict belief as knowledge and equivalently
use the established knowledge operator ki    instead of bi       
   
remark      note that the concept of strict beliefs only applies to positive beliefs bi t
   
   
for the negation of such a belief  bi t     it follows from definition       p      that there
fr
fr
   if the belief object  is a temporal rule rt
 f  g   we represent  as rt
 f  g   this is possible
because we do not need to consider frequency functions that correspond to axioms ff  and ff  from
definition       p      and only use point frequency functions pfr  if other frequency functions are used 
their negations need to be defined accordingly 

  

fipdt logic

is at least one thread that does not satisfy the belief object   which in turn implies       
   
consequently  these beliefs bi t
   are considered as non strict in the following discussion 

using these features  we can create a taxonomy of beliefs as depicted in figure   to
identify prior constraints on the set of possible threads  this taxonomy is obtained by
successively distinguishing between strict and non strict  prior and posterior beliefs  between
beliefs in facts  rules and nested beliefs  and finally between beliefs in static and dynamic
rules  nested beliefs are only considered as strict  prior  beliefs  if all involved beliefs are
strict  prior   otherwise they are considered as non strict  posterior   if a nested belief is
actually strict and prior  we can unnest this belief and consider only the innermost belief
expression  since prior beliefs are commonly known and therefore identical for all agents
i  ab   it is evident that for any strict belief of any agent i  all other agents know that agent
i has this strict belief  consequently  strict prior beliefs can be nested to an arbitrary depth
without introducing any further constraints  they are satisfied exactly if the innermost
belief is satisfied  thus  we do not need to consider nested strict prior beliefs explicitly 
this taxonomy gives rise to three different types of belief formulae with respect to their
impact on the sets of admissible worlds 
definition      belief formula typification   a set of belief formulae b can be categorized
into three different types of beliefs 
 type    these are beliefs that restrict the set of admissible worlds b  t  at every
time point t     thus  type   beliefs have the highest impact because they can be
exploited to prune the set of admissible worlds b globally  an evaluation of these
beliefs relies neither on a specific probability assignment nor on any given kripke
structures ki  
 type    these are beliefs that restrict sequences of possible worlds  moreover  they
can potentially restrict the sets of admissible worlds b  t  at specific time points 
thus  type   beliefs have less impact than type   beliefs because they can only be
exploited to prune the sets of admissible worlds b  t  locally  again  an evaluation
of these beliefs relies neither on a specific probability assignment nor on any given
kripke structures ki  
 type    this type encompasses all remaining beliefs in b that are neither type   nor
type   beliefs  these beliefs are situation specific and cannot be used to prune the
sets of admissible worlds a priori  satisfiability of these beliefs depends on a suitable
probability assignment or on the evaluation of kripke structures in the respective
threads 
we use tk  b  to denote the set of type k beliefs from b 
the main goal of this belief formula taxonomy is to identify constraints on possible
worlds  and possible threads t h that can be evaluated prior to searching for a suitable
probability assignment  namely by using the belief formulae in t   b  and t   b  to prune
the search space of possible sets of threads t that may show satisfiability of b  it should
be noted that the existence of a thread t h  t violating a belief from t   b  or t   b 
technically does not preclude satisfiability of b with respect to t   as there is a special
  

fimartiny   moller

all beliefs

non strict beliefs
   

strict beliefs
   

if all        only
the innermost beprior beliefs
lief is of interest

posterior beliefs
t     

 

t   
belief in   beliefs
   
   u 
bi  
 bj t
   

belief in beliefs
  u
   
b   
   bj t    
tf
   b 

belief in rules
    fr
bi  
 rt  f  g  

belief in facts
   
bi  
 ft  

disjunctive belief
formulae
   
   
bi  
      bi  
        

belief in dynamic rules
t    

belief in facts
   
bi t
   ft  
belief in rules
    fr
bi t
   rt  f  g  

disjunctive belief
formulae
   
   
bi  
      bi  
        

belief in dynamic rules
t    

t   b 

belief in static rules
t    
t   b 

type    these beliefs
have the highest impact 
because they restrict every
world at every time point 

belief in static rules
t    

type    these beliefs restrict threads independently of any probabiliy assignment 
moreover  they can potentially restrict possible worlds at individual time points 

figure    taxonomy of belief formulae

  

t   b 

type    all remaining beliefs  they can be
treated the same way 

fipdt logic

case of a suitable probability assignment  if there is a thread t h  t such that some
belief b  t   b  or b  t   b  is not satisfied  there could still be suitable probability
assignments i t   such that sat b  t   holds iff i t h       the effect of excluding such a
thread t h from t or assigning a prior probability i t h  of zero is the same  cf  remark     
p       i e   the respective thread is marked as impossible  since we aim at reducing both
the search space of possible threads and the input to the satisfiability check sat b  t    we
exploit belief formulae in t   b  and t   b  to exclude impossible threads prior to searching
for suitable probability assignments 
type   belief formulae as depicted in figure    the set of type   belief formulae is
    pfr
formed by formulae with strict prior beliefs in static rules bi  
 r   f  g   from b  since
prior beliefs represent the background knowledge and since it follows from the definition of
strict beliefs that they cannot be violated in any world  it is clear that the rule r pfr  f  g 
has to be always satisfied  as this is a static rule  it has to be satisfied in every world
  b   we define the set of type   beliefs as
    pfr
t   b     b  b   b   bi  
 r   f  g   

    

with arbitrary formulae f and g 
type   belief formulae the set of type   beliefs contains all strict prior beliefs that
are not in the set t   b   the contributions of this set t   b  are twofold  as t   b  only
comprises strict prior beliefs  every thread in a potential set of threads t has to satisfy all
beliefs b  t   b   moreover  constraints from t   b  may constrain the sets of worlds
b  t  at individual time points t   regardless of any specific thread  according to
figure    we define the set of type   beliefs as

   
t   b    b  b  
b   bi  
 ft  
    pfr
 b    bi  
 rt  f  g    t     

   
   
 b    bi  
      bi  
          

 

    

for a potential set of possible threads t   the beliefs specified in this set t   b  have to
be satisfied by every thread t h  t   note that satisfiability of beliefs in dynamic rules and
disjunctive belief formulae generally depends on worlds  at multiple time points and thus
satisfiability of t   b  cannot be ensured by only constraining sets of worlds at single time
points  however  by analyzing strict prior beliefs in facts and their potential interplay with
dynamic rules we can derive constraints for the sets of worlds b  t  at specific time points
t   as follows 
   
strict prior beliefs in facts b   bi  
 ft   restrict the set of admissible worlds b  t  at
time t by enforcing that f holds at every world   b  t   in the following  we use tf   b 
to denote such strict prior beliefs in facts f at certain time points t  moreover  we use
   
b    ft as a shorthand for bi  
 ft    b to denote that b enforces f at time t 
through interplay with existing constraints on sets possible worlds b  t  at individual
time points t  strict beliefs in dynamic rules can yield additional constraints  for a belief
    pfr
formula b   bi  
 rt  f  g    t      additional constraints might be derived  depending
on the type of belief in the respective rules premise f   if  t   b   tf   b      ft is given 
  

fimartiny   moller

   
we can extract a strict prior belief in a fact b     bi  
 gt t    which then again restricts
the set of possible worlds at time point t   t and is therefore added to tf   b  
since dynamic rules can be considered as temporal implications  cf  definition      from
section     these rules can also be applied backwards to obtain additional constraints  if a
    pfr
belief formula b   bi  
 rt  f  g    t     is given and the rules negated conclusion g
is already enforced at some time point t  i e    t   b   tf   b      gt    the rules premise
   
f cannot be satisfied at time t  t  thus  we can add the belief b     bi  
 ftt   as an
f
additional constraint to t   b  
extending the set of type   beliefs through dynamic rules may lead to a chained ex    pfr
tension  if we have a belief in a dynamic rule bi  
 rt  f  g   and a corresponding belief
   
   
f
bi    ft    t   b   this will lead to the additional belief bi  
 gt t    tf   b   which
    pfr
in turn might trigger another dynamic rule bi  
 rt  g  g      analogously  any additional
belief in tf   b  could also trigger further backward rule applications 
to capture all constraints that emerge from forward and backward chaining of strict
dynamic rules  we define the set tf   b  as the following fix point set  

tf   b   

   
 bi  
 ft    b 
   
  bi  
 gt t    

    pfr
t      bi  
 rt  f  g    b

  t   b   t   b      ft  

   
  bi  
 ftt    

    pfr
t      bi  
 rt  f  g    b

  t   b   t   b      gt  

    

after having determined all constraints on individual time points  we can reduce this
   
set tf   b  such that it contains at most one belief bi  
 ft   for every time point t  if
   
   
f
t   b  contains multiple beliefs bi    ft    bi    gt   regarding the same time point t  we
   
can replace them by a joint belief bi  
 ft    with f     f  g  note that this substitution
uses lemma      p      to merge different belief expressions into one expression with a
conjunctive belief object  we still assume that belief formulae with conjunctions of belief
operators are separated into atomic belief formulae 
type   belief formulae the set of type   belief formulae consists of all beliefs in b that
are neither type   nor type   beliefs  thus we define this set as
t   b     b   t   b     t   b 

    

   for this representation  we have only considered the influence of temporal rules for the set tf
   b   in
   
   
principle  information from disjunctive formulae b   bi  
          bi  
 n   in t   b  could yield
additional constraints on the sets b  t   if tf
   b  enforces n  disjuncts in b to be false  the remaining
disjunct must be satisfied  as the belief objects of the respective disjuncts might be dynamic rules again 
a formal representation of this consideration would result in a rather intricate specification  since we have
to ensure that any potential thread satisfies all beliefs in t   b  anyways  omitting disjunctive formulae
in the construction of tf
   b  does not impact satisfiability results  yet an actual implementation of the
described procedures could exploit this consideration to obtain additional pruning conditions in special
cases 

  

fipdt logic

example      trains continued   continuing with the set of belief formulae b from example      p      and assuming that conjunctive formulae b   b    b    are treated as
individual formulae b   and b      we obtain the following sets of typed belief formulae 
     pfr
 
t   b    ba  
r   punct train   at train  city   obs a   punct train   
 b   
    

t   b    ba  
at t    ca     

   
ba  
on a  t      

 b    
 b     


   
ba  
r pfr   punct t     at t    ca    at t    cc    on a  t      

    pfr
ba  
 r   punct t     at t    ca    at t    cc    on a  t      

   
ba  
r pfr   punct t     at t    cc    at t    cb    on a  t    
 
   
ba  
r pfr  punct t     at t    cc    at t    cb    on a  t      
    

tf   b    ba  
at t    ca     
 
   
ba  
on a  t      

 b    
 b     
 b    
 b     
 b    
 b     

t   b    b   t   b    t   b 

        pfr
   ba  
r   at t    ca    punct t      

        pfr
ba  
r   at t    cc    punct t      

        pfr
ba  
r   obs a   punct train    obs ab   punct train     

 b    
 b     
 b   

the taxonomy of belief formulae provides means to construct sets of admissible worlds
b  t  for every time point t     type   beliefs  i e   beliefs with the highest impact 
constrain the global set of possible worlds b   certain beliefs of type  materialized in
the set tf   b can then give additional constraints for specific time points t  such that
only subsets b  t   b need to be considered as possible worlds for time t  the sets
t   b  and t   b  together provide satisfiability conditions that are independent of any
specific probability assignments  then  only beliefs of type   need to be considered as
probabilistic constraints to check whether b can be satisfied with respect to t   i e   the
satisfiability problem sat b  t   from the previous section can be reduced to sat t   b   t   
if unsatisfiability of b has not yet been shown through constraints in t   b  and t   b  
since the prior constraints define necessary conditions for any potential thread  they give
rise to a definition of thread soundness with respect to a given set of belief formulae b 
definition      thread soundness   let b be a set of belief formulae  and let t   b  and
t   b  be the set of type   and type   belief formulae in this set  respectively  then  a
thread t h is sound with respect to b  denoted snd t h  b   if it satisfies all belief formulae
from t   b  and t   b  
snd t h  b   b   t   b   t   b     t h    b
  

    

fimartiny   moller

accordingly  we use snd t   b  to denote that all threads t h  t are sound 
note that this definition only relies on strict prior beliefs and the soundness property can
therefore be verified for every thread individually  without having to consider other threads
or probability assignments  thus  a simplified version of the model checking procedure from
section     can be used to verify soundness  the intuition behind this property is that we
can verify it easily prior to checking sat b  t   and can therefore obtain a reduced version
of the satisfiability problem 
theorem       reduced satisfiability checking   let b be a set of belief formulae  let
t   b  be the set of type   beliefs in b according to       and let t be a set of sound
threads  then  b is satisfiable with respect to t iff t   b  is satisfiable with respect to t  
sat b  t    snd t   b   sat t   b   t  

    

proof  this follows directly from definition      snd t   b  is defined so that it satisfies all
belief formulae in the sets t   b  and t   b   consequently  these sets resemble tautologies
with respect to t and therefore do not have any impact on the satisfiability checking
properties  thus  instead of checking b for satisfiability  it suffices to check the set  b  
t   b     t   b   which is exactly the definition of t   b  
      constraining possible worlds at individual time points
using the classification of beliefs in b into the three different types  we can now continue
with constructing sets of possible worlds b  t  for every time point t     the main goal of
this section is an identification of obvious pruning conditions for possible worlds at specific
time points  since we are in the process of searching for a set of possible threads that
satisfies a set of belief formulae b  any constraints on the sets b  t  have the potential to
significantly reduce the later used search space  thus  the results of this section highlight
possible optimizations for an implementation of a pdt logic sat solver  even if the following constraints are notor only partiallyapplied  the search for possible threads as
described in subsequent section     can be carried out  yet with a potentially larger search
space 
since the set of type   beliefs has to be satisfied in every admissible world  we can define
the global set of admissible worlds b as follows 
definition      global set of admissible worlds   let b be a set of belief formulae  with
the corresponding sets of belief objects fb and type   beliefs t   b   then  the set of
admissible worlds b w r t  b is given as
n

o
    pfr
b     b fb   adm    bi  
 r   f  g    t   b         f  g   
    
remark      this definition uses adm   to ensure that all worlds   b are admissible
as defined in the external definition      p       alternatively  we could use the existing
formalism to encode these admissibility conditions directly as strict prior beliefs in b 
    pfr
    pfr
bi  
 r   obsg  l   l   and g    g   bi  
 r   obsg  l   obsg    l    represent conditions  
and   of definition      respectively  however  since these conditions are independent of the
respective problem being modeled  we do not include them in the problem specific belief
set b  but use them as external constraints 
  

fipdt logic

example      trains continued   the global set of worlds b admissible with respect to
b from example      p      can be automatically constructed from all combinations of
events from fb shown in example      p       given that these combinations are admissible
with respect to definition     and satisfy the type   beliefs in t   b  from example    
 p       we refrain from enumerating all of these worlds explicitly and instead describe
which worlds are excluded from the herbrand base b fb of fb   from fb it follows that the
only possible shared observation between a and b is the fact that a train is not punctual
 obs ab   punct train     in every possible world where this observation occurs  admissibility conditions require that both agents a and b observe that the respective train is
not punctual and that the train is indeed not punctual  furthermore  the beliefs in t   b 
require that there is a corresponding observation for a at every possible world where a
train is not punctual  which incidentally also enforces admissibility conditions for these
observations  
next  we can build upon the set of globally admissible worlds b and use the set of
type   beliefs to further prune the set of admissible worlds b  t  at individual time points
t 
definition      local sets of admissible worlds   let b be a set of belief formulae with
the corresponding sets of admissible worlds b   tf   b  be the set of materialized strict
prior beliefs induced by t   b  and t   b   and  be a set of time points  then  the set of
admissible worlds b  t  w r t  b at time t   is given as
n

o
   
f
b  t      b   bi    ft    t   b        f
 
    
example      trains continued   to obtain the scenario from the original example     
we assume tmax      from the set tf   b  identified in example      we can restrict the set
of worlds at time   to
n
o
b         b        at t    ca    on a  t    
for all other time points  there are no options for further restrictions  thus the respective
local sets b  t  of possible worlds for all time points t      remain at b  
using definition      we can now formulate constraints for the set of sound threads t  
t h  t   t     t h t   b  t  

    

note that this constraint provides a necessary but not sufficient condition for thread
soundness  to illustrate this  consider example     again  the set tf   b  requires that
 at t    ca    on a  t     holds at every possible world at time t     and thus we can constrain b     as shown in example      because any thread violating this constraint is
inherently unsound  on the other hand  a thread according to      may contain the
fact  say punct t     t h     whichaccording to b   only yields a sound thread if
 at t    cc    on a  t      t h    holds as well  thus       provides general constraints on
the set of threads with respect to beliefs from t   b  and tf   b   while additional beliefs
from t   b  can discard individual threads by catching any potential unsatisfiable interplay
of possible worlds at different time points 
  

fimartiny   moller

of course  in general it is possible that the methods discussed so far result in special
cases  for one thing  it is possible that b induces a set t   b   tf   b  of inconsistent
beliefs  i e   it will contain beliefs that contradict each other  then  b or b  t  for some
t will be empty  this precludes the creation of any set of threads t such that i t      b 
in this case  satisfiability checking can terminate immediately with a negative result  for
another  it is possible that the above simplification process will result in an empty set
t   b   in this case  there are no probabilistic constraints that could impact satisfiability of
b and thus it is unnecessary to search for a suitable probability assignment  in this case  it
needs to be checked whether any of the threads in compliance with      is sound according
to definition      if such a thread can be found  satisfiability checking can terminate
immediately with a positive result  otherwise b is unsatisfiable  verifying soundness of a
single thread can be done with a simplified version of the model checking procedure from
section     and is therefore in ptime  cf  corollary       however  as the number threads
satisfying condition      can grow exponentially with the number of ground atoms and the
number of time points  the problem of finding a sound thread is more complex 
theorem       complexity of finding a sound thread   let b be a set of belief formulae
such that all included formulae are grounded  deciding whether there exists a sound thread
with respect to b  as defined in definition      is np complete 
proof  according to definition      a set is sound if it satisfies all formulae from the set
t   b   t   b   by treating the belief objects atoms f at all time points t as individual
variables ft   we can transform beliefs in facts and belief in rules from t   b   t   b  into
a boolean sat problem as follows  
   
bi  
 ft  

 ft

    pfr
bi  
 rt  f  g   

tmax
 t
t  

 ft  gt t  

accordingly  disjunctive belief formulae can then be expressed through transforming every
disjunct individually  this transformation requires at most tmax conjuncts for every belief
operator and can therefore be performed in linear time  since the boolean sat problem is
known to be np complete  cook         it follows that searching for a sound thread with
respect to b is in np 
np hardness of this problem has already been shown in the proof of theorem     
 p      and consequently it follows that searching for a sound thread with respect to b is
np complete 
it should be noted that this result analyzes the worst case complexity of the problem 
but in practice finding a sound thread is usually not dominated by this worst case  in most
cases  a sound thread can be found easily by employing the principle of least effort  for
    pfr
belief in temporal rules bi  
 rt  f  g    choosing worlds  such that     f ensures that
consequences of this rule do not have to be evaluated at other time points  accordingly  for
   this transformation is only defined for temporal rules with point frequency functions pfr  if other
frequency functions are used  the transformation has to be adapted accordingly 

  

fipdt logic

disjunctive rules a disjunct should be selected such that no temporal rule is triggered by this
fact  of course  this is only a heuristic that may not give a sound thread immediately for
every input b  but it represents a feasible approach for most problems  we will illustrate
this approach with an example subsequently 
in this work  we only consider ground formulae for pdt logic  in general  the formalism
as introduced in section   allows the treatment of non ground formulae as well  however 
for non ground formulae the complexity result from theorem      does not hold  because
transformation into a boolean sat problem is then exponential in the number of possible
groundings  finding a sound thread then requires the use of sophisticated grounding procedures   e g   dal palu  dovier  pontelli    rossi       and faber  leone    perri        
which is beyond the scope of this work 
now that sets of possible worlds are identified for every time point t     we can proceed
with creating sets of representative threads with respect to these constraints  the aim of
the following discussion is the successive generation of a set of representative threads t
such that sat b  t   can be decided 
    representative threads
using definition     and constraint      gives rise to a potential definition of the set of
possible threads t by constructing all possible combinations of sound world sequences from
b  t  for all t     however  this would still result in an unnecessarily large set of possible
threads  instead of constructing all of these threads explicitly  we will heuristically create
representative threads that represent excerpts from the situations modeled by t   b   this
approach uses heuristics to successively expand the set of representative threads  as soon as
a suitable set of threads  i e   a model for b  is found  the decision procedure can terminate
with a positive result  if a set of representative threads does not show satisfiability of
b  additional threads are created until either a positive satisfiability result is obtained
or all possible threads have been created  consequently  the heuristic search for models
constitutes a complete decision procedure for pdt logic 
for the following discussion  we assume that the set t   b  is nonempty  i e   there are
additional constraints that need to be satisfied by the generated set of threads  otherwise 
if the set t   b  was empty  satisfiability could already be determined by checking whether
a sound thread with respect to b exists  as discussed in the previous section and there
would be no need to generate any specific set of threads 
  u
    u 
for all beliefs in facts bi t
   ft   from b  the dual belief in the negated fact bi t   ft  
with         u and u          cf  corollary      p      has to be satisfied as well  for
  u fr
beliefs in rules bi t
   rt  f  g    satisfiability depends on the accumulated subjective posterior interpretations of all threads weighted with their respective frequencies  the goal of
  u
the following procedure is to successively create threads for every belief in a fact bi t
   ft  
in t   b   such that we obtain representatives for the set of threads that  i  satisfy the
respective fact ft and for the set of threads that satisfy ft   and  ii  exhibit varying fre  u fr
quencies for all beliefs in temporal rules bi t
   rt  f  g    t   b   consequently  belief
formulae can be considered as splitting rules and their application to generate representative threads results in a procedure similar to tableau based methods  however  beliefs in
temporal rules can induce splits both forward and backward in time and thusunlike con  

fimartiny   moller

ventional tableau based methodsthe following procedure does not create a tree structure 
but instead a set of sequences that represent possible threads  a key difference between
the generation of representative threads and other logical sat solvers is that in pdt logic
it is virtually impossible to discard any generated potential thread  the probabilistic nature of the semantics requires that not only threads are considered where a given formula
holds  but also threads where it does not  thus  even threads violating the objects of given
belief formulae are usually required to show satisfiability of a corresponding set of belief
formulae b  the following discussion provides a general outline for a decision procedure
in pdt logic if only a set of belief formulae b is given  an actual implementation of
these methods is possible  but to obtain feasible run times for practical problems  various
optimization techniques from research on logic reasoning implementations would need to be
implemented  which is beyond the scope of this work 
      generating representative threads
  u
since the existence of any non strict belief in a fact bi t
   ft   requires the existence of at
least two threadsone  where the respective belief object is satisfied and one  where it is
not  we start with creating two threads from hb           b  tmax  i such that we obtain a
set t   ht h    t h  i with t h      and t h      for all belief objects    ft contained
in the set t   b  to obtain a minimal set of set threads t such that all belief formulae
b  t   b  can potentially be satisfied  this set will then subsequently be expanded with
additional threads until either a suitable set of threads to show satisfiability of t   b  is
found  or until no more additional threads can be created 
to allow for a concise notation  in the following we adapt the frequency notation for all
belief objects and use       to denote that  is true        to denote that  is false  and
generally  x    to denote that  holds with frequency x  of course  values     x     can
only occur for belief objects that represent temporal rules  with this notation  we try to
create initial sound threads such that
 
t h         j    and
    
j

t h    

 
j

    j  

    

holds for the respective belief objects j of all belief formulae bj  t   b   
this initial set t    t h    t h    is meant to represent the two extreme choices for possible
threads with respect to t   b  to provide a suitable starting point for the subsequently
employed search heuristic  in general  it is not necessarily possible to create such extreme
threads in compliance with      and      for every possible set of belief formulae t   b   for
  u
  u
instance  t   b  might contain conflicting beliefs in facts bi t
   ft   and bi t   ft    obviously 
no single thread can satisfy both belief objects simultaneously  but it might still be possible
  u
   technically  a non strict belief bi t
     could be satisfied with a single thread t h such that t h     if
the beliefs quantification has an upper bound u      this might give rise to further optimizations for
an actual implementation  but for the sake of simplicity  we do not consider this case explicitly 
  u
  u
 
  
   this notation is slightly simplified  for disjunctive belief formulae bj   bi t
   j    bi t   j    we use j
 
  
as an abbreviation for j  j  

  

fipdt logic

to create a set of threads such thattogether with a suitable probability assignmentboth
beliefs can be satisfied  thus       and      characterize the intended goal when creating
the initial threads t h    t h    but do not represent hard constraints on these threads 
to find suitable threads that match these constraints  we employ the principle of least
  u
effort by adding as few facts as possible to each thread  for every belief in a fact bi t
   ft   
we add the explicit constraints f  t h   t  and f   t h   t   such that t h  represents the
thread where all belief objects are true and t h  represents the set where all belief objects are
  u fr
false  for beliefs in rules bi t
   rt  f  g   we add g  t h   t   t   resp  f  t h   t  t  
whenever another constraint enforces f  t h   t   resp  g  t h   t    if no occurrence of
fr  f  g  is trivially satisfied with frequency
f respectively g is enforced in t h    a rule rt
   i e   there are no occurrences where f is not followed by g in t steps  and no further
constraints need to be added  analogously  for t h  we need to ensure that f holds at
least once and that whenever f  t h   t  holds  g  t h   t   t  holds  as well  for
  u
  u
disjunctive belief formulae bi t
        bi t        we need to ensure that belief object   or
  holds in thread t h    as described above  and that      holds in thread t h    if
possible  the respective belief object   or   for thread t h  should be chosen such that no
additional beliefs are triggered  we say that a belief is triggered by a fact f   if the existence
of f enforces another constraint through a belief in a temporal rule or a disjunctive belief
formula   nested belief formulae are treated as above with respect to their innermost belief
object  if some constraint cannot be applied because it is in conflict with previously added
constraints from t   b   it is simply skipped in this stage  as the creation of t h  and t h  is
only the initialization step for a heuristic search of possible set threads  skipped constraints
will still be considered later in subsequent expansions 
whenever a constraint regarding a fact f is added to t h  or t h    it is necessary to
check whether this triggers additional rules from set of type   beliefs t   b   if necessary 
resulting facts are added to the respective threads  this application works analogously
to the construction of the set tf   b  as described in section        finally  if all belief
formulae have been processed  we search for a sound thread with respect to the created
constraints  usually  a sound thread can be found easily by choosing all facts that are
yet unconstrained in t h  and t h  such that they do not trigger any additional beliefs 
especially  for possible worlds t h t  that are unconstrained  we can choose t h t     if b
does not contain any belief in rules with purely negative preconditions or disjunctive belief
formulae that are not satisfiable by   more generally  the principle of least effort should
be employed such that worlds  are selected so that no further belief formulae need to be
considered  such a selection is impossible if and only if the addition of both f and f to
some world triggers additional beliefs  then  the consequences of adding the respective fact
need to be evaluated  as well  the resulting set t    t h    t h    then provides a minimal
set of representative threads that that can be used to check sat t   b   t   
in the following  we show how the principle of least effort can be used to obtain representative threads as efficiently as possible  the constraints used in the following example
provide the minimal number of constraints that need to be enforced to obtain representative threads for the desired threads t h  and t h    for all worlds  without any specific
constraints  we simply use      one can easily verify that this indeed yields threads in
compliance with      and      

  

fimartiny   moller

example      trains continued   we continue the train example with the sets of typed
belief formulae specified in example      p      in example      p       it was shown that
the set of worlds at time   b     is restricted such that  at t    ca    on a  t       for
every world   b      the set t   b  contains three non strict belief formulae  namely

        pfr
t   b     ba  
r   at t    ca    punct t      
 b    

        pfr
ba  
r   at t    cc    punct t      
 b     

        pfr
ba  
r   obs a   punct train    obs ab   punct train     
 b   
by evaluating these belief formulae  we obtain constraints on the possible worlds in
threads t h  and t h    a visualization of the following steps is given in figure   
analysis of belief formula b   results in the constraints punct t     t h      and
punct t      t h       these facts in turn trigger rules b   and b      respectively 

   
ba  
r pfr   punct t     at t    ca    at t    cc    on a  t     and

    pfr
ba  
 r   punct t     at t    ca    at t    cc    on a  t      

 b    
 b     

resulting in the additional constraints  at t    cc    on a  t      t h      and  at t    cc   
on a  t      t h      
application of belief formula b    then yields the additional facts punct t     t h     
and punct t      t h       again  this triggers rules from t   b  

   
 b    
r pfr   punct t     at t    cc    at t    cb    on a  t     and
ba  

    pfr
 b     
 r   punct t     at t    cc    at t    cb    on a  t      
ba  
resulting in the additional constraints t h        at t    cb    on a  t    and t h       
at t    cb    on a  t    
note that belief formula

   
ba  
r pfr  punct train   at train  city   obs a   punct train   
 b   
from t   b  provides a global constraint on the set of possible worlds b such that
obs a   punct train   holds in every world where punct train  holds  and thus we obtain
for thread t h  the additional facts obs a   punct t      t h      and obs a   punct t     
t h      
finally  rule

        pfr
ba  
r   obs a   punct train    obs ab   punct train   
 b   

  

fipdt logic

  
t h  b 
b 
 
t h  b 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

b   

b   
b 

b  

b   

at t    cc    on a  t   
punct t   



 

b  


 

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   

 

b   



at t    cb    on a  t   

 

t

 

figure    visualization of the representative thread set generation for the train example 
both threads start with the given facts at t    ca    on a  t     applications of
formulae from t   b such that t h  contains positive belief objects and t h 
contains negative belief objectsare marked in blue  additional constraints from
t   b  and t   b  are marked in red 

does not change the created threads t h    t h    in t h  the rules precondition is never
enforced to be satisfied and thus the resulting frequency is one  while the lack of any
observation in t h  even though there are nonpunctual trainsensures that the resulting
frequency is zero 
when trying to solve the resulting problem sat t   b    t h    t h      the non strict belief
formulae yield the following constraints on t h   
b    
b   

 

b   

      i t h         

      i t h         

      i t h         

clearly  these constraints cannot be satisfied simultaneously and therefore the set t  
 t h    t h    is insufficient to show satisfiability of t   b   and therefore b  
if the created set of threads fails to show satisfiability of t   b   additional threads can
be created to continue searching for an expanded set t such that t   b  can be satisfied
with respect to t   based on an existing thread t h  an additional thread t h  can be created
by ensuring that one conjunct for t h  or t h  in      and      is not satisfied anymore 
i e   from a given thread t h with existing constraints  xk  k    a new thread t h  can be
obtained through the substitution
 
 
t h     xj  j    t h    
 xj  j    x k  k   x k    xk  
    
j

j  k

every such substitution of one conjunct with a new constraint provides a choice point to
direct the continuation of the search for a suitable set of threads  the constraint notation
in    is used to provide a formal characterization of choice points  in practice  a new thread
t h  satisfying the above constraint can usually be created easily through the addition of new
or the modification of existing facts in t h as follows  to simplify the following discussion 
we assume that the expansion keeps a history of expansion steps and resulting consequences 
such that all effects of adding an additional f can be undone if the respective fact f is
changed for a newly created thread 
  

fimartiny   moller

definition      principle of least effort  ple  expansion   let t be a set of threads and let
t   b  be a set of type   belief formulae  a principle of least effort expansion creates an
expanded set t     t   t h    according to a single application of one of the following rules 
  u
 for a  possibly negated  belief in an a fact bi t
   ft    t   b   if there exists a thread

t h  t such that f  t h t   resp  f   t h t   is not yet enforced  t h  is created as
a duplication of t h with the additional constraint f  t h t   resp  f 
  t h t   

  u fr
 for a belief in a temporal rule bi t
   rt  f  g    t   b   if there exists a thread

t h  t such that f  t h t  but g  t h t   t   resp  g 
  t h t   t   is not
 
yet enforced  t h is created as a duplication of t h with the additional constraint
g  t h t   t   resp  g   t h t   t   

  u
  u
 for a disjunctive belief formula b    bi t
        bi t              t   b   if possible 
  u
expansion is carried out with respect to one belief bi t
     as described in the two
previous steps 

 nested beliefs are again treated with respect to their innermost belief object 
 if the new thread t h  is created from t h through the addition of f  t h  for some
fact f and time point t and f   t h was enforced in the original thread t h  the
consequences of adding f   t h are undone in the new thread t h   

then  for the created thread t h    additional belief formulae from t   b  that are
triggered by this modification need to be evaluated to obtain a sound thread  as
described above for the creation of initial threads t h    t h   

the intuition behind this ple expansion is to create additional threads that satisfy an
alternative set of belief objects  contained in the set t   b  with as little effort as possible 
in general  it is possible to add constraints on arbitrary facts at arbitrary time points and
then continue with a successive expansion based on this thread  however  this would result
in a rather aimless exploration of the exponential search space  following the ple expansion
instead helps to direct the search for a suitable model guided by the rules specified in
t   b   to illustrate this  consider figure   from the previous example  possible pleexpansions could for example result in an additional thread by altering the punctuality of
train t    clearly  the resulting situations are intended in this model  as they were already
considered in the original thread specification  cf  figure    p       on the other hand  by
deviating from the ple expansion  one could add additional factssay at t    ca    on a  t   
at arbitrary time points t      this could then give rise to multiple subsequent expansions
of the resulting thread and may actually serve to generate a model for b  while such a
situation was not intended by the specification of b  the example about train punctuality
also illustrates the requirement of an undo operation  the fact punct t     t h      produced
the additional constraint  at t    cb    on a  t     at time t      clearly  this constraint
should not be enforced any longer ifbased on t h  a new thread t h  is created such that
punct t      t h      
with information about violated constrains from the linear program corresponding to
sat t   b    t h    t h      we can perform a dependency directed selection of choice points 
   

fipdt logic

  u
if the lower bound of a belief bi t
   k   cannot be satisfied with the current set of threads 
 
an additional thread t h can be created with the existing constraints on t h  or t h  and
substituting the respective constraint on k   as shown in      
the dependency of choice points on violated lower bounds can best be illustrated through
the results from the previous example  clearly  the upper bounds induced by b   and b   
and the lower bound induced by b  hinder satisfiability of t   b  with respect to the created
threads  using the belief object of formula b    or b      to create an additional thread t h 
yields the updated constraint

b    

      i t h      x  i t h         

with a factor x depending on the frequency of the respective belief object in t h    while the
constraint induced by b  remains unchanged  as a result  the new constraint only allows
for lower values of i t h     and thus the lower bound induced by b  remains unsatisfiable 
using the belief object of formula b  to create an additional thread instead yields the
constraint
b   

      i t h      x  i t h          

whichthrough nonzero values for x and i t h   potentially allows for lower values on
i t h     note that this example only uses atomic belief formulae  for disjunctive belief
  u
  u
formulae b    bi t
      bi t            any of the respective belief objects with a violated
lower bound can be used to direct the selection of subsequent choice points  given that no
other disjunct of b is satisfiable  of course  
combining information about violated lower bounds with the principle of least effort
provides a multi stage heuristic to proceed with a dependency directed selection of choice
points 
definition      dependency directed search heuristic   let t   b  be a set of type   belief
formulae and let t be a set of threads such that sat t   b   t   holds  then  to enable a
dependency directed search for an expanded set t    t such that sat t   b   t     holds  t
is expanded with an additional thread t h    t according to the following rules 
   if the existing set of threads t fails to satisfy lower bounds of constraints induced by
a belief formula b with belief object  and an additional thread t h  can be obtained
through one ple expansion with respect to   t is expanded to t     t   t h    
   otherwise  if no dependency directed ple expansion is possible  another ple expansion
is applied to t   if possible 
   finally  if no ple expansion is possible in t   an additional thread t h  can be created
by adding the constraint f  t h t   resp  f   t h t   for arbitrary facts f that are
not yet constrained in t h t  
the intuition behind this heuristic is that information about violated probabilistic constraints should be used to select a suitable next expansion step  if possible  otherwise 
other possible ple expansion steps should be performed to use rules from t   b  to guide the
   

fimartiny   moller

search  only if no further ple expansions are possible  additional constraints should be employed to continue the search  restricting possible expansions with respect to criterion   to
one step follows the principle of least effort  again  to illustrate this  consider example     
it was shown that the created set of threads  t h    t h    fails to satisfy the lower bound of
belief formula b    in thread t h    there is no world t h   t     obs a   punct train   such
that the precondition of the rule in b  is satisfied  consequently  there is no single step
ple expansion of t h  that could change the constraints induced by b    on the other hand 
t h  provides two such choice points and should therefore be preferred for expansion  note
that the soundness requirement will determine choices for all unconstrained facts  thus 
in general the proposed expansion may produce threads that are already contained in t
by constraining facts that have been determined before  we will not consider this scenario
explicitly but instead assume that in such cases  further expansion steps are performed until
an additional thread is created 
      a thread generation example
to illustrate the expansion of a set of threads t with respect to the dependency directed
search heuristic from definition      in the following we resume the train example 
example      trains continued   in the previous example  a set of threads t    t h    t h   
has been created that fails to show satisfiability of t   b   consequently  the heuristic from
definition     should be used to iteratively expand this set until an expanded set of threads
t   is created such that a model for b is obtained or no further expansions of t   are possible 
belief formula

        pfr
r   obs a   punct train    obs ab   punct train   
b    ba  
has already been identified as a belief formula which yields constrains with an unsatisfiable
lower bound and this should therefore be used to guide the subsequent expansion  as
already discussed before  no single step ple expansion of t h  is possible to influence the
constraints induced by b    therefore we continue with an expansion based on thread t h   
a visualization of the following steps is given in figure   
there are two worlds in t h  where obs a   punct train   is satisfied  namely
obs a   punct t      t h      and obs a   punct t      t h       both of these occurrences allow for an ple expansion  we choose t h      to perform the expansion  this yields
a new thread t h  with the additional constraint obs a b   punct t      t h       while all
constraints from t h  remain intact  since there are no constraints that need to be undone
by adding obs a b   t h      
the expanded set t     t   t h    can then be used to check sat t   b   t      in thread
t h    the rule contained in b  is satisfied in one of two occurrences of obs a   punct train  
and therefore yields a frequency of      consequently  through transformation into a linear
program we obtain the constraints
b    
b   

 

b   

     

i t h   

     

     

i t h           i t h   

     

     

i t h   

   

     

fipdt logic

t h 

t h 

  
t h  b 
b 
 
t h  b 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
 

obs a b   punct t    

obs a b   punct t    
b 
b   

b   
b 

b  



at t    cc    on a  t   
punct t   

b   
 

b  

 
 

obs a b   punct t    

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   



 

b 

at t    cb    on a  t   

b   



 

 

t

figure    visualization of ple expansions for the train example  applications of formulae
from t   b  are marked in blue  additional constraints from t   b  and t   b 
are marked in red  expansion steps are marked in green 

apparently  b  allows for lower values of i t h    for the this set t     from the constraints
induced by b    resp  b      we still obtain i t h            then  the constraint induced
by b  requires i t h            since                           this is still no suitable
probability assignment since the sum over all priors exceeds one  consequently  the thread
set expansion continues  the above constraints show thataccording to condition   of the
search heuristicthread t h  is now a suitable candidate for further expansion with respect
to the belief object of b   
thus  based on t h    we create an additional thread t h  through ple expansion  in this
case  the only possible expansion step is obs a b   t h       which results in a frequency of
one for the rule contained in b    thus  testing sat tk  b   t     with the further expanded
set t   yields the following constraints 
b    
b   

 

b   

     

i t h   

     

     

i t h           i t h         i t h   

     

     

i t h   

     

these constraints are now satisfiable  for instance with

i t                            
thus  sat t   b   t     returns a positive result and satisfiability checking of b can terminate
with this result 
this result concludes satisfiability testing of the set of belief formulae b originally
specified in example      p       nevertheless  for illustration purposes we show the result
of further applications of ple expansion steps in figure    changes in the additionally
created threads are obtained through a further respectively different application of a belief
formula from t   b   marked in blue in the respective threads  worlds t h t  that remain
unconstrained after a saturated application of ple expansions are marked with    all of
these worlds then give rise to further expansions according to step   of the search heuristic 
   

fi   

 
t h  b 

  
t h  b 
b 

t h 

t h 

t h 

t h 

t h 

t h 

t h 

 

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

at t    ca    on a  t   
punct t   

at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   
obs a   punct t    
at t    ca    on a  t   
punct t   

b  

 

 

 

 

 

 

 

b   
b 

b 

 

 

 

b   

b   

obs a b   punct t    

obs a b   punct t    

 

 

 

 

obs a b   punct t    
b 

 

 

b   

  
  b 
b 

 

 

 

at t    cc    on a  t   
b  
punct t   
 

 

 

 

 

at t    cc    on a  t   
punct t   
 
obs a   punct t    
at t    cc    on a  t   
punct t   
 
obs a   punct t    

 

 

 

 

at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cc    on a  t   
punct t   
obs a   punct t    
at t    cb    on a  t   

b   

b 

obs a b   punct t    

at t    cc    on a  t   
punct t   

at t    cc    on a  t   
punct t   

 

 

 

 

 

 

 

b   

 

 

 

 

obs a b   punct t    
b 

 

 
t

at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

obs a b   punct t    
b 

 

 

 

 

 

at t    cb    on a  t   

 

at t    cb    on a  t   

at t    cb    on a  t   

at t    cb    on a  t   

b  

 

martiny   moller

figure    visualization of continued ple expansions for the train example  applications of
formulae from t   b  are marked in blue  additional constraints from t   b  and
t   b  are marked in red  expansion steps originating from t h  and t h  are
marked in green and orange  respectively  unconstrained worlds are marked with
  

fipdt logic

some comments on the resulting set of threads from this example are necessary  comparing the final threads depicted in figure   with the original set of threads introduced in
figure   shows that the expansion result largely corresponds to the original specification
 except differing thread labels   there are some notable differences however 
 first of all  there is the additional predicate punct train   which was introduced in
example      p      to allow for a concise specification of the background knowledge 
as the concept of nonpunctual trains  and especially the respective ramifications 
are implicitly encoded in figure   as well  this does not change the properties of the
modeled example 
 with the explicit representation of train punctuality  observations of nonpunctual
trains can be expressed explicitly in this example  while the previous example uses
the ramifications of nonpunctual trains to model observations  since rules b  and
b  assert that ramifications of punctual respectively nonpunctual trains are common
knowledge among alice and bob  both modeling alternatives preserve the intended
meaning of the example 
 another difference is the timing of alices observations  in the original example we
assumed that such an observation occurs at the time point when a train was supposed
to arrive at the destination city  in the current example we assume that alice already
observes that a train is not punctual when leaving the departure city  the reason
for this change is solely for illustration purposes  specifying in rule b  that alice
immediately observes a nonpunctual train yields a type   belief and thus serves to
illustrate how additional facts can be obtained through global constraints  since rule
b  ensures that potential calls to bob  i e   shared observations  occur two time points
after alices original observation  the intended model of the original example is still
maintained 
 the above points are only concerned with specific details of the modeled domain 
comparing the set threads from figure   with the threads from figure   also shows a
more general modeling problem  for instance  analyzing the worlds at time point   in
figure   shows that alice is not  necessarily  on train t    while she is on this train both
at the previous time point and later time points  naturally  one should expect that
alice is on the train at all intermediate time points between boarding and exiting the
train  this is an instance of the frame problem  e g   reiter        that occurs when
specifying dynamic systems through logic formulae  generally  the frame problem is
concerned with finding a suitable set of axioms to describe adequate evolutions of the
world  from a modeling perspective  evolutions where alice vanishes and reappears
while on a train ride are obviously no adequate evolutions of the world  an application
of the final step of the search heuristic could then yield a tremendous blow up of the
considered set of threads  for the modeled problem  this would clearly result in
unintended models  but the resulting models could still serve to show satisfiability of
the respective set of belief formulae b  even though this result might not be desired 
this problem could be fixed by adding successor state axioms in the style of reiter 
e g   specifying that if alice is on a train  she remains there for the next time point
unless she explicitly exits the train 
   

fimartiny   moller

      properties of the representative thread generation
in this section  we provide results to connect the set of representative threads to the satisfiability problem of pdt logic and discuss the complexity of generating representative
threads 
theorem       pdt logic decision procedure   let b be a set of pdt logic belief
formulae  and let t    t h    t h    be the initial set of threads with length tmax obtained
from b according to equations      and       iteratively expanding this set according to
the search heuristic from definition     and testing sat t   b   t     for the expanded sets t  
until  i  sat t   b   t     returns a positive result  or  ii  t   is fully expanded with respect to
the search heuristic yields a sound and complete decision procedure for sat b  tmax   
proof  both the initial set of threads t    t h    t h    and the expanded sets t   obtained through ple expansion steps are defined such that only sound threads according
to definition     are considered  theorem       p      states that the decision problem
sat t   b   t   is equivalent to sat b  t   if the set t contains only threads that are sound
with respect to b  a positive result for sat b  t   for threads with length tmax shows
that t is a model for b and thus sat b  tmax   follows  consequently  a positive result for
sat t   b   t     always proofs that b is satisfiable for tmax time points 
on the other hand  if no model for b has been found and it is not possible to create
additional threads according to the search heuristic from definition      p        the search
space is fully explored  from this it follows that no model for b with tmax time points
exists and therefore b is unsatisfiable for tmax time points  consequently  it follows that
the pdt logic decision procedure is sound 
with these properties  the completeness result is straightforward  for any arbitrary
input b and tmax   either a model can be found or non existence of such a model can be
proven through a full exploration of the search space  and thus completeness of the procedure
follows 
in the following  we analyze the complexity of generating representative threads for a
set of belief formulae b 
theorem       complexity of representative thread generation   let b be a set of belief
formulae  creating a set of expanded representative threads t   for b is in expspace 
proof  the maximum number of possible threads for a given set of belief formulae b is
determined through the size  fb   and the maximum time point tmax   recall from equation       p      that we use fb to identify all event formulae from b and use this as the set
of ground atoms to construct possible worlds  since every pdt logic formula contains at
most two event formulae  we obtain the constraint  fb        b   the largest set of possible
threads is then obtained as the sequences of combinations of all possible worlds over all
time points  yielding   tmax  b  possible threads  in the worst case  all  fb        b  representative threads are created before obtaining a satisfiability result  consequently  creating
all possible representative threads is in the complexity class dspace  p n     which is the
class expspace 
from this theorem  we immediately obtain complexity results for the satisfiability problem sat b  tmax   
   

fipdt logic

corollary       complexity of pdt sat without a given set of threads   checking satisfiability of a set of pdt logic belief formulae b without a specification of possible threads
is in expspace 
proof  the generation of representative threads is in expspace  as shown in theorem       for a given set of threads theorem      shows that satisfiability checking in
pdt logic is in np  thus  this does not further increase complexity of the pdt sat problem without a given set of threads and it follows that this problem is in expspace 
some comments on these results are necessary  since the decision procedure outlined
in theorem      yields an exponential expansion of possible threads t   which all need
to be fed into the decision problem sat t   b   t    the exponential space requirement is
evident  however  as we have illustrated with the example  positive satisfiability results can
possibly be already obtained through small sets of possible threads t   with a diminutive
size compared to the entire search space  moreover  the discussion of the train example has
shown that a major part of the search space stems from insufficient rule specifications  this
is not a specific problem of our formalism nor the presented decision procedure  but a general
problem of rule based modeling approaches  namely the aforementioned frame problem  an
incomplete model specification then leads to the generation of unintended models  which
serve to show satisfiability of the modeled problem  but have not been intended by the
respective modeler  this could lead to the worst caseboth from a complexity and from
a model perspectivethat after an exponential execution of the decision procedure  the
result only shows that the input specification does not specify the intended model  the
problem can be addressed on the modeling side by providing additional axioms to ensure
that no unintended model is generated  however  this leads to a significant increase in the
specification size and it is difficult to ensure through rule specifications that indeed every
unintended model is prevented 
the ple expansion steps could be used as a heuristic to discriminate between intended
and unintended models  as shown in the train example  only applying ple expansion steps
results in a relatively small set of threads  which indeed corresponds to the intention of
the model  while any further expansions inherently leads to an exponential growth of the
set of threads and introduces only additional unintended models  thus  omitting the final
step of the search heuristic would give a significantly faster termination of the decision
procedure  even though the resulting procedure cannot prove unsatisfiable sets of formulae
any longer  however  one could use the expansion procedure to create the set of intended
threads first andpossibly after an inspection by the modelercontinue to use this set to
perform satisfiability checks with respect to the intended model 
the runtime of the expansion procedure and resulting satisfiability checks is clearly
tilted towards the positive side  if a set of belief formulae is satisfiable  there is a good
chance that satisfiability can be shown in a small number of steps  negative results on
the other hand can only be obtained after an exhaustive exploration of the search space 
however  for many applications negative satisfiability results are required  for instance 
checking entailment b    b can be checked through the reformulation sat b  b  
for applications relying on such a reformulation  the presented procedure is unfavorable
because positive entailment results can never be obtained efficiently  one could overcome
this problem as sketched above by generating a set of intended threads first and then use
   

fimartiny   moller

this set to perform subsequent satisfiability testsonce a set of threads is given  the decision
problems complexity significantly decreases  as shown in section     

   conclusion
in this work  by extending apt logic to dynamic scenarios with multiple agents  we have
developed a general framework to represent and reason about the belief change in multiagent systems  next to lifting the single agent case of apt logic to multiple agents  we
have also provided a suitable semantics to the temporal evolution of beliefs  the resulting
framework extends previous work on dynamic multi agent epistemic logics by enabling the
quantification of agents beliefs through probability intervals  an explicit notion of temporal relationships is provided through temporal rules building on the concept of frequency
functions 
the quantification of beliefs with probability intervals instead of precise values has
the advantage that when domain experts model a problem  they can not only provide
background knowledge about the problem domain  but can also specify their certainty in
the respective specifications  narrow interval quantifications reflect a high certainty and
vice versa  this can be a significant advantage compared to other probabilistic approaches 
because in most approaches  sharp probability values are required which a human can
usually not express with precise values and thus has to rely on guesses  specifying precise
values  when these are actually not precisely known can yield misleading results  pdt logic
is not exposed to this problem  because it is not required to guess sharp values to specify a
problem 
we have shown that there are two alternative ways of specifying problems in pdt logic 
either through explicit enumerations of possible threads or through a set of appropriate
rules  both approaches exhibit their specific advantages and drawbacks  for many problem
domains  requiring an exhaustive enumeration of all possible threads poses a severe obstacle
for modeling the respective scenarios  as the combinatorial blow up renders the specification
practically unmanageable  on the other hand  there are problem domains  e g   attack
graphs in cyber security scenarios  that come with such an explicit specification anyways 
for these types of problems  we have shown that it is possible to check satisfiability of these
models very efficiently 
to overcome modeling disadvantages of the thread based approach  we have also shown
how a problem domain can be solely specified through a set of pdt logic belief formulae 
for most problem domains  this is a more natural way of specifying the problem  also  this
provides means to easily adapt many existing problemsthat are specified in other formal
languages as sets of rulesto pdt logic  on the other hand  waiving the requirement
of an exhaustive thread specification and according probabilities extremely increases the
problem complexity of checking satisfiability of a set of pdt logic formulae  nevertheless 
even when only imprecise probabilities are given  the resulting problem remains decidable
and the increased complexity might be curtailed through search heuristics 
combinations of both approaches are possible as well  if an exhaustive specification
of possible threads is given  but probability intervals are only specified through beliefs
with imprecise probabilities  the satisfiability problem can be transformed into a     mixed
integer linear program  as there are a variety of efficient solvers available for this class of
   

fipdt logic

problems  this transformation provides a means to exploit existing optimizations to check
satisfiability of pdt logic formulae 

references
aumann  r  j          agreeing to disagree  the annals of statistics                  
baaz  m   egly  u   leitsch  a   goubault larrecq  j     plaisted  d          normal form
transformations  in robinson  a     voronkov  a   eds    handbook of automated
reasoning  chap     pp            mit press 
balas  e          disjunctive programming and a hierarchy of relaxations for discrete
optimization problems  siam journal on algebraic discrete methods            
    
balas  e          disjunctive programming  properties of the convex hull of feasible
points  discrete applied mathematics              
balas  e   ceria  s     cornuejols  g          a lift and project cutting plane algorithm
for mixed     programs  mathematical programming                 
balas  e   ceria  s     cornuejols  g          mixed     programming by lift and project
in a branch and cut framework  management science                   
balas  e     perregaard  m          lift and project for mixed     programming  recent
progress  discrete applied mathematics                  
baltag  a     moss  l  s          logics for epistemic programs  synthese                  
baltag  a   moss  l  s     solecki  s          the logic of public announcements  common
knowledge  and private suspicions  in proceedings of the seventh conference on
theoretical aspects of rationality and knowledge  tark     pp       
bertacco  l   fischetti  m     lodi  a          a feasibility pump heuristic for general
mixed integer problems  discrete optimization              
bienstock  d          computational study of a family of mixed integer quadratic programming problems  mathematical programming                 
bradley  s          imprecise probabilities  in zalta  e  n   ed    the stanford encyclopedia
of philosophy  summer      edition  
computational infrastructure for operations research  coin or  project  t         
cbc  coin or branch and cut  user guide  http   www coin or org cbc index html 
accessed             
cook  s  a          the complexity of theorem proving procedures  in proceedings of the
third annual acm symposium on theory of computing  stoc    
cripps  m  w   ely  j  c   mailath  g  j     samuelson  l          common learning 
econometrica                 
dal palu  a   dovier  a   pontelli  e     rossi  g          gasp  answer set programming
with lazy grounding  fundamenta informaticae   advances in computational logic 
               
   

fimartiny   moller

de carvalho ferreira  n   fisher  m     van der hoek  w          specifying and reasoning
about uncertain agents  international journal of approximate reasoning         
     
doder  d   markovic  z   ognjanovic  z   perovic  a     raskovic  m          a probabilistic temporal logic that can model reasoning about evidence  in foundations of
information and knowledge systems   th international symposium  foiks      
ellsberg  d          risk  ambiguity  and the savage axioms  the quarterly journal of
economics                 
faber  w   leone  n     perri  s          the intelligent grounder of dlv  in correct
reasoning  essays on logic based ai in honour of vladimir lifschitz  springer 
fagin  r     halpern  j  y          reasoning about knowledge and probability  journal
of the acm                 
fagin  r   halpern  j  y     megiddo  n          a logic for reasoning about probabilities 
information and computation                
fagin  r   halpern  j  y   moses  y     vardi  m  y          reasoning about knowledge 
mit press 
fischetti  m   glover  f     lodi  a          the feasibility pump  mathematical programming                 
garey  m  r     johnson  d  s          computers and intractability  a guide to the theory
of np completeness  w  h  freeman   co 
gerbrandy  j     groeneveld  w          reasoning about information change  journal
of logic  language and information                
gnu

project  t         
glpk  gnu linear programming
http   www gnu org software glpk glpk html  accessed             

kit 

grunwald  p  d     halpern  j  y          updating probabilities  journal of artificial
intelligence research                 
gurobi optimization  inc         
gurobi optimizer reference
http   www gurobi com documentation   accessed             

manual 

halpern  j  y     pucella  r          a logic for reasoning about evidence  journal of
artificial intelligence research              
halpern  j  y   samet  d     segev  e          defining knowledge in terms of belief  the
modal logic perspective  the review of symbolic logic                
harsanyi  j  c          games with incomplete information played by bayesian players 
part i  the basic model  management science                 
harsanyi  j  c       a   games with incomplete information played by bayesian players 
part ii  bayesian equilibrium points  management science                 
harsanyi  j  c       b   games with incomplete information played by bayesian players 
part iii  the basic probability distribution of the game  management science         
       
   

fipdt logic

hintikka  j          knowledge and belief  an introduction to the logic of the two notions 
cornell university press 
ilog 
i 
       
cplex
optimizer 
   ibm com software commerce optimization cplex optimizer  
      

http   wwwaccessed       

kooi  b  p          probabilistic dynamic epistemic logic  journal of logic  language and
information                 
kripke  s  a          semantical considerations on modal logic  acta philosophica fennica 
         
lloyd  j  w          foundations of logic programming   nd edition  springer 
martiny  k   motzek  a     moller  r          formalizing agents beliefs for cyber security
defense strategy planning  in cisis        proceedings of the  th international conference on computational intelligence in security for information systems  burgos 
spain        june       
milch  b     koller  d          probabilistic models for agents beliefs and decisions  in
proceedings of the sixteenth annual conference on uncertainty in artificial intelligence  uai     morgan kaufmann publishers inc 
murty  k  g          linear programming  john wiley   sons 
parikh  r     ramanujam  r          a knowledge based semantics of messages  journal
of logic  language and information                 
plaza  j          logics of public communications  in proceedings of the fourth international
symposium on methodologies for intelligent systems  poster session program  ismis
    oak ridge national laboratory 
plaza  j          logics of public communications  synthese                  
reiter  r          knowledge in action  logical foundations for specifying and implementing dynamical systems  mit press 
sack  j          temporal languages for epistemic programs  journal of logic  language
and information                 
sack  j          extending probabilistic dynamic epistemic logic  synthese              
    
schrijver  a          theory of linear and integer programming  john wiley   sons 
shakarian  p   parker  a   simari  g     subrahmanian  v  s          annotated probabilistic temporal logic  acm transactions on computational logic                    
shakarian  p   simari  g  i     subrahmanian  v  s          annotated probabilistic temporal logic  approximate fixpoint implementation  acm transactions on computational logic                    
shoham  y     leyton brown  k          multiagent systems  algorithmic  gametheoretic  and logical foundations  cambridge university press 
van benthem  j          conditional probability meets update logic  journal of logic 
language and information                 
   

fimartiny   moller

van benthem  j   gerbrandy  j   hoshi  t     pacuit  e       a   merging frameworks for
interaction  journal of philosophical logic                 
van benthem  j   gerbrandy  j     kooi  b       b   dynamic update with probabilities 
studia logica               
van der hoek  w          some considerations on the logic pfd  a logic combining
modality and probability  journal of applied non classical logics                
van ditmarsch  h   van der hoek  w     kooi  b          dynamic epistemic logic 
springer 
van eijck  j          dynamic epistemic logics  in johan van benthem on logical and
informational dynamics  chap     pp          springer 
van eijck  j     schwarzentruber  f          epistemic probability logic simplified  in
gore  r   kooi  b  p     kurucz  a   eds    advances in modal logic     invited and
contributed papers from the tenth conference on advances in modal logic   aiml
    college publications 
vos savant  m          ask marilyn  parade magazine     
williams  h  p          logic and integer programming  springer 

   

fi