journal artificial intelligence research                  

submitted        published      

temporal planning using subgoal partitioning
resolution sgplan
yixin chen

chen cse wustl edu

department computer science engineering
washington university st louis
st louis  mo       usa

benjamin w  wah
chih wei hsu

wah manip crhc uiuc edu
chsu manip crhc uiuc edu

department electrical computer engineering
coordinated science laboratory
university illinois urbana champaign
urbana  il       usa

abstract
paper  present partitioning mutual exclusion  mutex  constraints
temporal planning problems implementation sgplan  planner  based
strong locality mutex constraints observed many benchmarks fourth international planning competition  ipc    propose partition constraints
planning problem groups based subgoals  constraint partitioning leads
significantly easier subproblems similar original problem
efficiently solved planner modifications objective function  present partition and resolve strategy looks locally optimal subplans
constraint partitioned temporal planning subproblems resolves inconsistent
global constraints across subproblems  discuss implementation details
sgplan    include resolution violated global constraints  techniques handling producible resources  landmark analysis  path finding optimization  search space
reduction  modifications metric ff used basic planner sgplan    last 
show results sensitivity techniques quality time trade offs
experimentally demonstrate sgplan  effective solving ipc  ipc 
benchmarks 

   introduction
paper  present innovative partition and resolve strategy implementation sgplan  solving temporal planning problems pddl     strategy partitions mutual exclusion  mutex  constraints temporal planning problem
subgoals subproblems  solves subproblems individually using modified metric ff
planner  resolves violated global constraints iteratively across subproblems 
evaluate various heuristics resolving global constraints demonstrate performance sgplan  solving benchmarks third  ipc   fourth  ipc  
international planning competitions 
general popular methods solving large planning problems  systematic search  heuristic search  transformation methods  viewed recursive
c
    
ai access foundation  rights reserved 

fichen  wah    hsu

p 
variable
partitioning
ordered
heuristic
functions



b

c

sp   sa sb sc

variables 

a  search space partitioning

a 

                          
                          
                          
                          
                          
                          
                          
                          
                          
                          
                          
                          
                          
                          
                       
                       
                       
                       
                       
                       
                       
                       
                       
                       
                       
                       
a 

a 

b  complete heuristic searches

figure    search space partitioning branches variable assignments order decompose p disjunction    subproblems disjoint search spaces 
complexity subproblem similar p  

partitioning search space independent subproblems iterative evaluation
subproblems feasible solution found  level application
approach  problem subproblem decomposed partitioning variable space
disjunction    subspaces  figure  a   reduce search complexity  approach
often combined intelligent backtracking employs variable value ordering order
subproblems generated  pre filters partial inconsistent assignments eliminate
infeasible subproblems  prunes subproblems using bounds computed relaxation
approximation 
search space partitioning directly applied planning problem transformed version problem  direct methods include complete heuristic searches 
illustrated figure  b  methods partition search space recursively branching
assigned variables  selection actions   difference complete search
heuristic search former enumerates subspaces systematically  whereas
latter prioritizes subspaces heuristic function evaluates selectively  examples complete planners include ucpop  penberethy   weld         graphplan  blum
  furst         stan  long   fox         propplan  fourman         system r  lin 
       sipe    wilkins         o plan   tate  drabble    kirby         zeno  penberethy
  weld         talplanner  doherty   kvarnstrm         shop   nau  muoz avila 
cao  lotem    mitchell         examples heuristic planners include hsp  bonet  
geffner          hoffmann   nebel         altalt  nigenda  nguyen    kambhampati         grt  refanidis   vlahavas         mo grt  refanidis   vlahavas        
aspen  chien  rabideau  knight  sherwood  engelhardt  mutz  estlin  smith  fisher 
barrett  stebbins    tran         metric ff  hoffmann   nebel         grt r  refanidis
  vlahavas         lpg  gerevini   serina         mips  edelkamp         sapa  subbarao   kambhampati         europa  jonsson  morris  muscettola    rajan        
contrast  transformation approach  problem first transformed satisfiability
optimization problem  transformed problem solved sat integer
programming solver employs search space partitioning  notable planners using
   

fitemporal planning using subgoal partitioning resolution

     

p 
run time

    

g


b

c

   
  
 
   

airport nt   
pipesworld nt nt   

    

sp   sa sb sc sg

 

a  constraint partitioning

 
 
 
 
number subgoals subproblem

b  exponential behavior solution time

figure    constraint partitioning decomposes p conjunction    subproblems
disjoint constraints possibly overlapping search spaces  set
global constraints  g  resolved  since complexity subproblem
substantially smaller p   leads exponential decrease solution
time metric ff two ipc  benchmarks  airport nontemp   
pipesworld notankage nontemp     number subgoals
subproblem decreased     

approach include satplan  kautz   selman         blackbox  kautz   selman        
ilp plan  kautz   walser         lpsat  wolfman   weld        
one limitations search space partitioning complexity problem
dramatically reduced partitioning  although pruning ordering strategies make search efficient requiring search every subspace 
aggregate complexity finding solution one subproblems
original problem 
paper  study constraint partitioning approach decomposes constraints planning problem conjunction    subproblems disjoint constraints possibly overlapping search spaces  figure  a   concept constraints
planning problems studied paper precisely defined section      informally 
 mutex  constraint refers condition two actions overlap
execution  since constraints must satisfied  subproblems
must solved order solve original problem 
decomposing constraints problem subproblems solving
independently  subproblem require significantly less time solve much
relaxed original problem  illustration  figure  b shows exponential
decrease solution time number subgoals subproblem reduced linearly 
here  subgoal collection conjuncts conjunctive top level goal problem 
ipc  instances evaluated  run time      seconds
five subgoals subproblem less one second one  hence 
aggregate complexity solving decomposed subproblems exponentially smaller
original problem 
   

fichen  wah    hsu

s 

p 

  
  
  
  

  
  
  
  
  
  
  
  
  
  
  
  

   
   
   
   
   
   
   
   
  
  
s 
      
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

  
  
  
  

p 

   
   
   
   

  
  
  
  

  
  
  
  

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

s 
  
  
   
   
      
  
   
   
   
   
   

  
  
  
  

p 

  
  
  
  

s 

  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  

  
  
  
  

figure    partitioning constraints planning problem along temporal horizon
three stages requires finding suitable intermediate states s  s  order
connect subplans three stages together  s  s  are  respectively 
initial final states 

constraint partitioning  however  leads global constraints across subproblems  sg
figure  a  need resolved  global constraints include span
across common variables multiple subproblems  relate two actions
different subproblems  since constraints may satisfied solving
subproblems independently  subproblems may need solved multiple times order
resolve violated global constraints 
general  violated global constraints across subproblems cannot efficiently resolved
brute force enumeration search space global constraints defined
cartesian product search spaces across subproblems exponentially
large  dynamic programming cannot applied global constraints may span across
multiple subproblems  means partial feasible plan dominates another
partial feasible plan one subproblem fail execute dominating plan violates
global constraint another subproblem 
address resolution violated global constraints  summarize section  
theory extended saddle points developed previous work  wah   chen        
choosing suitable neighborhood  theory allows mixed integer nonlinear programming problem  minlp  partitioned subproblems related necessary
condition global constraints  further  necessary condition subproblem
significantly prunes cartesian product search spaces across subproblems
inconsistent global constraints resolved 
addition efficient resolution violated global constraints  success
approach depends strong locality constraints respect actions
relate  observed informally previous work strong locality constraints  based strong locality  studied two alternatives partitioning
constraints  partitioning time  wah   chen        chen   wah       
partitioning subgoals  wah   chen              
idea partitioning planning problem time partition constraints
temporal bindings stages  find overall feasible plan  planner need
find subplan initial final states stage satisfy local
well global constraints  final state one stage initial state
   

fitemporal planning using subgoal partitioning resolution

next stage  example  partitioning horizon three stages  figure    
planner assigns values intermediate states s  s    solves subproblem
individually  perturbs s  s  look another solution feasible subplans cannot
found stages 
major drawback partitioning planning problem temporal horizon
constraint resolutions may sequentially propagate multiple stages 
found partitioning constraints pddl    benchmarks along temporal
horizon often leads many global constraints relate states adjacent stages 
result  violated subgoal caused incorrect assignment states
early stage horizon  resolution incorrect assignment propagate
sequentially stages  oftentimes  propagation information may cause
search get stuck infeasible point extended period time  wah   chen 
       end  expensive enumeration final state stage  s  s 
figure    may needed order resolve inconsistencies 
second approach studied previous work partition constraints
planning problem subgoals  wah   chen               evaluating
subproblems  inconsistent global constraints among first identified 
subproblems re evaluated global constraints satisfied  partitioning
subgoals eliminates need selecting final state subproblem
initial final states subgoal known  using approach  previous
work shown improvements time quality mips planner solving
ipc  benchmarks 
respect second approach  made four main contributions
paper 
first  quantitatively evaluate section     locality constraints ipc 
benchmarks well benchmarks blocksworld domain depots domain 
results show constraint partitioning subgoals consistently leads lower
fraction initial active global constraints constraint partitioning time  results
explain constraint partitioning work well domains 
blocksworld depots 
second  incorporate metric ff  hoffmann        basic planner sgplan 
sgplan      instead mips previous work  wah   chen         change
non trivial requires significant extensions metric ff order handle
new features pddl    beyond pddl     extensions include support
temporal planning  handling derived predicates timed initial literals 
handling wrappers timed initial literals  section      
third  describe new techniques improving search efficiency global 
local level architectures partition and resolve approach  section       include
handling producible resources  section       subgoal level decomposition using landmark analysis  path finding path optimization  section       subgoal level planning
using search space reduction  section       explain integration planners
analyze effectiveness 
last  study section     trade offs solution time quality heuristics updating penalties violated global constraints  trade offs allow us
generate plans either better quality time  sgplan       lower quality
   

fichen  wah    hsu

less time  sgplan     optimization quality requires estimation makespan
multiple subplans enhanced pert algorithm  section       previous work
constraint partitioning subgoals  wah   chen         focused minimizing planning time  without optimizing quality  violated global constraints often
easier resolve planner always delay one actions order avoid
constraints  finally  compare section   performance planners
respect planners 

   locality mutex constraints temporal planning
section  define mutex constraints planning problems  based structure
constraints ipc  benchmarks  show constraint partitioning subgoals
leads constraints localized better constraint partitioning time 
    representation mutex constraints
following standard notations definitions literature  hoffmann   nebel       
garrido  fox    long         summarize section basic definitions mutex
constraints used paper 
definition    planning problem    o  f  i  g  quadruple  set
possible actions   f set facts  set initial facts  g set
goal facts 


definition    state   f      fns subset facts f true 
definition    strips action associated following attributes 
a  pre a   set facts define preconditions action a 
b  add a   set facts define add effects a 
c  del a   set facts define delete effects a 
resulting state applying action state defined as 
 
 s add a   del a  pre a 
result s  a   

pre a    s 

   

resulting state applying sequence actions a      recursively defined
as 
result s   a           result result s   a      an        

   

next  extend action model temporal planning  durative actions supported
pddl     precondition fact effective beginning  end 
entire duration action  whereas add effect delete effect effective
beginning end action 
definition    temporal action associated following attributes 
a  s a  e a  define  respectively  start time end time a 
   

fitemporal planning using subgoal partitioning resolution

action
active mutexes
pre a   

add a   

a 

pre a   

a 

a 

a 
del a   

add a   

a 
a 

a 
del a   

pre a   

del a   

time

figure    example temporal plan  active mutexes actions shown
dashed lines  inactive mutexes dotted lines 

b  preconditions divided three types  prestart  a   set initial
preconditions held s a   preend  a   set final preconditions held e a  
preoverall  a   set invariant preconditions open interval  s a   e a   
c  two types add effects  addstart  a   set initial add effects
asserted s a   addend  a   set final add effects asserted e a  
d  two type delete effects  delstart  a   set initial delete effects
asserted s a   delend  a   set final delete effects asserted e a  
definition    temporal plan p    a    a        list temporal actions 
ai assigned start time s ai   end time e ai   
figure   illustrates temporal plan seven actions  action  indicate 
appropriate  preconditions  add effects  delete effects 
concurrent actions plan must arranged way observes mutual
exclusions  mutexes   notion mutex first proposed graphplan  blum   furst 
       defined planning graph  level by level constraint graph
alternates fact level action level  mutex relationships planning graph
classified transient  level dependent  persistent  level independent   blum
  furst         mutex transient exists certain levels graph
vanishes levels graph built  contrast  mutex persistent holds
every level fix point level  the last level graph  achieved  paper 
consider level independent  persistent mutex relationships  transient mutexes
exclusively used searches graphplan 
actions b marked persistently mutual exclusive one following
occurs 
   

fichen  wah    hsu

a  actions b persistent competing needs   competing needs
represented persistent mutex preconditions b 
b  persistent inconsistent effects  one action deletes add effect
other 
c  persistent interference  one action deletes precondition other 
two facts p q persistently mutual exclusive possible ways making p true
persistently exclusive possible ways making q true  is  action
p add effect  p add a   persistently mutual exclusive action
b q add effect  q add b    simplicity  rest paper  mutex
actions facts refer corresponding persistent mutex actions facts 
given temporal plan  mutex relationship active inactive  example 
actions a  a  figure   active mutex two actions overlap
execution persistent interference  however  a  a  inactive mutex
overlap execution 
based discussion  conditions active mutex occur two
actions b summarized four cases  garrido et al         
a  actions b start together  nonempty intersection
initial preconditions  resp  add effects  initial delete effects  resp  delete effects  
b  actions b end together  nonempty intersection
final preconditions  resp  add effects  final delete effects  resp  delete effects  
c  action ends b starts  nonempty intersection final
delete effects  resp  delete effects  add effects  preconditions  initial add
effects  resp  preconditions  delete effects  delete effects  b 
d  action starts  resp  ends  execution b  nonempty intersection initial  resp  final  delete effects invariant preconditions
b 
conditions introduced prevent two mutually exclusive actions
executing simultaneously  may actions block propagation facts
 no op action  cause unsupported actions later  condition detected
looking actions delete existing facts current plan  respect
conditions mutex due competing needs  need represent explicitly
mutexes due competing needs must accompany two types mutex 
two preconditions mutually exclusive due competing needs  two action
sequences making true mutually exclusive  example  active mutex
a  a  figure   due competing needs caused active mutex
a  a   
mutex constraints studied paper closed form  instead 
defined discrete procedural function checks pair actions meet one four
conditions above  inputs function start time end time
action  continuous temporal problems discrete propositional problems 
   terms competing needs  inconsistent effects  interference originally proposed
graphplan  blum   furst        

   

fitemporal planning using subgoal partitioning resolution

  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  
           
           
  
  
           
           
  
  
           
           
           
           
   
   
           
           
   
   

  
  
  
  

subproblem  

  
  
  
  

  
  
  
  

subproblem  

  
  
  
  
           
           
  
  
           
           
  
  
           
           
           
           
  
  
           
           
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  

subproblem  

  
  
  
  

  
  
  
  

  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  
  
  
  
  

  
  
  
  

a     mutex constraints among actions b  partitioning mutex constraints subgoals
figure    mutex constraints ipc  airport temp   instance  rectangular
box represents action  line joining two actions represents mutex constraint  that may inactive   constraints             local
constraints partitioning subgoals  global mutex constraints
shown dashed lines  b  

    locality mutex constraints
section  evaluate partitioning mutex constraints planning benchmarks  analysis shows strong locality constraints partitioned
subgoals compared case partitioned time  study
criteria partitioning may lead subproblems whose initial final states specified  subproblems hard solve existing planners
may require systematic enumeration initial final states
finding feasible plans 
figure  a shows    mutex constraints solution plan fourth instance
ipc  airport temp domain  instance involves moving three planes airport
designated gates  rectangular box figure represents action  whereas line
joining two actions represents mutex constraint  that may inactive   figure  b shows
partitioning constraints three subproblems  involving movement
one plane  show local constraints  those relevant actions one subproblem  solid lines global constraints relating actions different subproblems
dashed lines  clear majority       constraints local partitioning
subgoals 
demonstrate localization mutex constraints partitioned subgoals 
analyze ipc  instances  first modify original metric ff planner  hoffmann 
      order support new features pddl     temporal actions derived
predicates  instance  use modified planner find initial subplan
subproblems  find mutexes among actions  including active
inactive ones  finally  compute number global constraints related actions
   

firga g

   
   
   
 

   

   
   
   
 

rga g

   
   
   
 

   

rga g

   
   
   
 

                              
instance id

 

rg t
rg g

   

rga g

   
   
   
 
                              
instance id

f  umts temp

   
   
 

 

 

 

   

rg t
rg g

   

rga g

   
   
   
 
 

 

  
  
instance id

g  depots time

  

  

  

   
   
   
 

                    
instance id

   

 
    
instance id

rg t
rg g
rga g

   

                           
instance id

d  satellite time
global constraint fraction

global constraint fraction

d  psr small
   

   

c  promela opticaltelegraph

rg t
rg g

   

rg t
rg g
rga g

   

 

global constraint fraction

b  pipesworld notankagenontemp

rg t
rg g

   

rga g

   

                              
instance id

global constraint fraction

global constraint fraction

   

rg t
rg g

   

                              
instance id

a  airport temp

global constraint fraction

rg t
rg g

   

e  settler
global constraint fraction

   

global constraint fraction

global constraint fraction

chen  wah    hsu

  

   

rg t
rg g

   

rga g

   
   
   
 
 

 

  
  
instance id

  

  

h  blocksworld

figure    variations rg t   rg g   rga g across instances seven ipc  domain
variants well instances depots time domain variant
ipc  blocksworld domain ipc    the latter two domains
deemed difficult constraint partitioning  

different subplans  well number initial active global constraints based
subplan evaluated subproblem  comparison  evaluate partitioning
constraints temporal horizon 
figure   illustrates results seven ipc  domain variants  well blocksworld
domain ipc  depots time variant ipc   table   summarizes
average statistics across instances ipc  domain variant
blocksworld domain depots domain variants  instance partitioning
time  use modified metric ff planner find initial plan  set number
temporal stages number subgoals  partition horizon
solution plan evenly multiple stages  count number local constraints
stage number global constraints relating actions different stages 
instance  let nc total number mutex constraints  ngt number global
constraints constraint partitioning time  ngg number global constraints
   

fitemporal planning using subgoal partitioning resolution

table    average rg t   rg g   rga g across instances ipc  domains well depots
domain ipc  blocksworld domain ipc    the latter two
deemed difficult constraint partitioning   boxed numbers less     
domain variant

r g t

r g g

airport nontemp
airport temp
airport temp timewindows
airport temp timewindows co
pipesworld notankage nontemp
pipesworld notankage temp
pipesworld notankage temp deadline
pipesworld tankage nontemp
pipesworld tankage temp
pipesworld notankage temp deadline co
promela optical telegraph
promela optical telegraph dp
promela optical telegraph fl
promela philosopher
promela philosopher dp
promela philosopher fl
psr small
psr middle
psr middle co
psr large
satellite strips
satellite time
satellite time timewindows
satellite time timewindows co
satellite numeric
satellite complex
satellite complex timewindows
satellite complex timewindows co
settlers
umts temp
umts temp timewindows
umts temp timewindows co
umts flaw temp
umts flaw temp timewindows
umts flaw temp timewindows co
depots strips
depots simpletime
depots numeric
depots time
blocksworld

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

   

r
ga g
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

fichen  wah    hsu

g number initial active global
constraint partitioning subgoals  nga
constraints constraint partitioning subgoals  compute following ratios 

ngt
  fraction global constraints constraint partitioning time 
nc
ngg
rg g  
  fraction global constraints constraint partitioning subgoals 
nc
g
nga
rga g  
  fraction initial active global constraints subgoal partitioning 
nc

rg t  

respect instances ipc  domains  results show constraint partitioning subgoals leads lower rg g rg t   fractions vary significantly 
rga g small instances  except psr small settlers  rga g
consistently less      behavior important active constraints
need resolved planning  number constraints decrease
planning progresses  describe section     two strategies reducing number
active global constraints planning 
behavior worse instances blocksworld domain depots domain variants  two domains  rga g consistently high  over      constraints
partitioned subgoals  reason actions different subgoals
instance highly related  making difficult cluster constraints leading
larger fraction global constraints  evaluate performance approach
two domains section   

   constraint partitioning using penalty formulations
given constrained formulation planning problem  summarize section
theory extended saddle points mixed space  wah   chen        design
planners based upon 
    extended saddle point condition
consider following minlp variable z    x  y   x rv dw  
 pm    

min
z

subject

f  z  

   

h z      g z    

f continuous differentiable respect x  g    g            gr  t h  
 h            hm  t general functions necessarily continuous differentiable 
assumptions important constraints planners procedural
functions closed form  assume f lower bounded  g h
unbounded 
goal solving pm find constrained local minimum z    x    
respect nm  z    mixed neighborhood z   results published
earlier  wah   chen         summarize high level concepts without
precise formalism 
   

fitemporal planning using subgoal partitioning resolution

mixed neighborhood nm  z   z    x  y   mixed space rv dw is 









   
nm  z     x   y  x nc  x   x    nd  y   

definition   

nc  x     x   kx xk    continuous neighborhood x 
discrete neighborhood nd  y  finite user defined set points  y dw   
definition    point z clmm   constrained local minimum pm respect
points nm  z    z feasible f  z   f  z  feasible z nm  z   
definition   

penalty function pm penalty vectors rm rr is 
lm  z        f  z     h z     max    g z   

   

next  define informally constraint qualification condition needed main theorem  wah   chen         consider feasible point z    x     neighboring point
z    x   p     infinitely small perturbation along direction p  x x subspace  constraint qualification condition satisfied z   means
 
p rates change equality active inequality constraints
z z zero  see necessary  assume f  z  z decreases along p 
equality active inequality constraints z zero rates change z
z   case  possible find finite penalty values constraints
z way leads local minimum penalty function z respect
z   hence  scenario true p  z   possible
local minimum penalty function z   short  constraint qualification
z requires least one equality active inequality constraint non zero rate
change along direction  
p z x subspace 
theorem    necessary sufficient espc clmm pm  wah   chen        
assuming z rv dw pm satisfies constraint qualification condition  z
clmm pm iff exist finite     satisfies following extended
saddle point condition  espc  
lm  z       lm  z       lm  z     

   

    z nm  z    rm   rr  
note     satisfied rather loose conditions requires
larger critical   theorem important
establishes one to one correspondence clmm z pm esp
 extended saddle point  corresponding unconstrained penalty function    
penalties sufficiently large  theorem leads easy way finding clmm  
since esp local minimum      but converse   z found gradually
increasing penalties violated constraints     repeatedly finding
local minima     feasible solution pm obtained  possible
exist many algorithms locating local minima unconstrained functions 
   

fichen  wah    hsu

    partitioned extended saddle point condition
important feature espc theorem   condition partitioned
way subproblem implementing partitioned condition solved
looking larger  
consider pt   version pm whose constraints partitioned n subproblems 
 pt    

min
z

subject


j z 
h t   z t       
h z      

g t   z t    
g z   

 local constraints 

   

 global constraints  

subproblem t               n   pt local state vector z t     z   t           zut  t  t ut
mixed variables  n
t   z t    z  here  z t  includes variables appear
 t 
 t 
mt local equality constraint functions h t     h            hmt  t rt local inequal t 
 t 
ity constraint functions g t     g            grt  t   since partitioning constraints 
z             z n   may overlap other  h    h            hp  t g    g            gq  t
global constraint functions z  assume j continuous differentiable
respect continuous variables  f lower bounded  g  h  g  h
general functions discontinuous  non differentiable  unbounded 
first define np  z   mixed neighborhood z pt   decompose espc
    set necessary conditions collectively sufficient  partitioned
condition satisfied finding local esp subproblem  violated global
constraints resolved using appropriate penalties 
np  z   mixed neighborhood z partitioned problem  is 

n
n
 
 

 t 


np  z   
np  z   
  z t   
z z  t  nm  z t   zi   zi zi

definition   

t  

   

t  

nm  z t   mixed neighborhood z t  

intuitively  np  z  separated n neighborhoods  tth neighborhood perturbs variables z t  leaving variables z z t  unchanged 
without showing details  consider pt minlp apply theorem  
derive espc pt   decompose espc n necessary conditions  one
subproblem  overall necessary condition global constraints across
subproblems  first define penalty function subproblem t 
definition     let  z         h z    max    g z   sum transformed
p
global constraint functions weighted penalties                 p  t r
q
               q  t r penalty vectors global constraints  penalty
function pt     corresponding penalty function subproblem defined
follows 

n
x
 t 

 t 
lm  z            j z   
 t   h  z t       t  max    g  z t     z          
t  

 z   t    t         j z     t t  h t   z t       t t max    g t   z t       z           
   

fitemporal planning using subgoal partitioning resolution



 t        t           mt  t  t r  t        t           rt  t  t r
penalty vectors local constraints subproblem t 

rt



theorem    partitioned necessary sufficient espc clmm pt  wah   chen 
       given np  z   espc     rewritten n     necessary conditions that 
collectively  sufficient 
 z    t    t        z    t     t         z   t     t             
lm  z           lm  z               

 t     t      t     t          

r
p
q
 t 
z np  z     t  r    t  r   r   r                n  
theorem   shows original espc theorem   partitioned n necessary conditions      overall necessary condition      global constraints
across subproblems  partitioned condition subproblem satisfied
finding esps subproblem  finding esp equivalent solving
minlp  reformulate search subproblem solution following
optimization problem 


 t 
pt
j z     h z     max    g z  
    
 
min
z t 

subject

h t   z t      

g t   z t     
 t 

weighted sum global constraint functions objective pt important
leads points minimize violations global constraints 
 t 
large enough  solving pt lead points  exist  satisfy global constraints 
short  finding solutions pt satisfy     reduced solving multiple
subproblems       solved existing solver modifications
objective function optimized  reweighting violated global constraints
defined      
    formulation partitioned planning subproblems pddl   
pddl    planning problem solved paper  solution plan specified
start time end time action o  hence  variable vector z  
 s a   e a  o   objective function j z  optimized depends makespan
 or number actions propositional domains  plan z  constraints
mutex constraints defined section     


h ai   aj     mutex s ai    e ai    s aj    e aj       
ai   aj o 
    
here  mutex binary procedure checking whether ai aj satisfy mutex conditions defined section      returns one conditions satisfied zero otherwise 
constraints partitioned subgoals n subproblems g      gn  
variable z partitioned n subsets z       z n    z t  includes start time
   

fichen  wah    hsu



   

pt

x
lm z           find

minz    j z     h z     max    g z  
 
subject h    z         g     z      



 n 
pt



minz n  j z     h z     max    g z  
 
subject h n   z n        g  n   z n     

a  partitioned search look points satisfy          
   procedure partition resolve pt  
  
     
  
repeat
   increase penalties violated global constraints maximum bounds   
  
    p  hi  z           increase end end for 
  
j     q  gj  z    j   j   increase j end end for 
   inner loop solving n subproblems   
  
    n apply existing solver solve      end for 
  
  i   hi  z       j   j gj  z      a clmm pt found  
   end procedure

b  implementation finding clmm pt satisfies          
figure    partition and resolve procedure look clmm pt  

end time actions gt   local constraints mutex constraints
relate actions within subproblem  global constraints relate
actions across subproblems 
 t 
pt defined gt   objective find feasible plan z t  satisfies
constraints gt   minimizing objective function biased violated global
constraints 


 t 
pt
 

min
z t 

subject

j z   

n
x
k  
k  t

t k mt k

h t   ai   aj      

    

ai   aj z t  

j z  defined later section      here  mt k number global constraints
actions z t  z k  
mt k  

x

h at   ak   

    

z t 
ak z k 
k  t

limit number penalties characterizing priorities among subproblems 
assigned single penalty t k pair subproblems gt gk   instead
penalty global constraint gt gk  
   

fisubgoal level planning

global level planning

temporal planning using subgoal partitioning resolution

plan
evaluation

techniques
studied

penalty value
update strategy

globalconstraint
resolution

global constraints subgoals

g 

p   

g 

producible
resources
gn

pn  

p  c 

pn cn

constraint
partitioning
subgoals

landmark
analysis

temporal
engine
modified metricff

derived
predicates
engine

temporal
engine

derivedpredicates
engine
searchspace
reduction

searchspace
reduction

figure    sgplan    planner implementing partition and resolve procedure figure   

    partition and resolve procedure
figure   presents partition and resolve procedure finding points satisfy
conditions theorem    using fixed specified outer loop  inner loop
subproblem figure  b solves      existing solver  results esp
satisfies       possible      well defined minlp  solving
n subproblems  penalties violated global constraints increased outer
loop  process repeated clmm pt found exceed
maximum bounds 
procedure figure   may generate fixed points     satisfy     
      happens esp local minimum      but converse   one
way escape fixed points allow periodic decreases   goal
decreases lower barrier penalty function order local descents
inner loop escape infeasible region  note decreased
gradually order help search escape infeasible regions 
reach minimum thresholds  scaled up  search repeated 
   

fichen  wah    hsu

   system architecture sgplan 
figure   shows design sgplan  implements partition and resolve procedure 
procedure alternates global level planning subgoal level planning 
section  describe techniques implemented global level  leaving
discussion techniques subgoal level next section 
    partition and resolve process sgplan 
global level  sgplan  partitions planning problem n subproblems  g      gn  
gt corresponds tth subgoal  orders subproblems  evaluates
using techniques subgoal level planning  identifies violated global constraints 
updates penalties order bias search next iteration towards resolving
them  sgplan    adopted implementation lpg     gerevini   serina 
      detecting persistent mutexes 
partition and resolve process understood calculating subplans separately
merging consistent plan  goals optimize multiple subplans
ensure consistency merging  prior work plan merging focuses
merging redundant actions finding optimal composed plan  particular  foulser 
li  yang        developed algorithms merging feasible classic plans
efficient ones  complete evaluation plan merging algorithms classical domains
conducted yang         tsamardinos  pollack  horty        extended
concept domains temporal constraints  plan merging means
making infeasible plan feasible  different approach aims resolve
inconsistencies terms mutexes among subplans 
alternative view resolution approach reuse modification
subplans consistent plan  plan reuse systems adapt existing plans new initial states goals  approach demonstrated spa  hanks   weld       
priar  kambhampati   hendler        show improvements efficiency many
domains  major difference current plan reuse approaches partitionand resolve process generate candidate subproblems based partitioning
mutex constraints  whereas traditional methods reuse plans generated
means  since assumption conservative plan modification existing methods
always achievable  may necessary replan feasible plan candidate cannot
found  cases  may expensive planning scratch 
reason complexity analysis empirical study cannot prove plan reuse approaches
consistent improvements planing scratch  nebel   koehler        
contrast  approach augments search subproblem explicitly penalizing
global inconsistencies forcing solution towards resolving global constraints 
partition and resolve approach different incremental planning  koehler  
hoffmann        uses goal agenda  incremental planning  planner maintains
set target facts  adds goal states incrementally target set  extends
solution using new target set  goal state must always satisfied
achieved  ordering goal states important order avoid un doing
previously achieved goal state planning current goal state  invalidations
occur  planning task point complex planning one
   

fitemporal planning using subgoal partitioning resolution

goal state  contrast  sgplan  tries achieve one subgoal time allows
subgoals invalidated process  moreover  subgoal  need
start ending state previous subgoal incremental learning 
need pre order subgoals order avoid invalidations  show section  
performance sgplan  sensitive order evaluating subgoals 
    resolving violated global constraints
section  present two penalty update strategies resolving violated global constraints  constraints identified finding subplan subproblem independently 
sgplan  first initializes penalties global constraints starts  first
iteration  sgplan  solves subproblem individually  without considering global
constraints  combines subplans integrated plan order determine initial active global constraints across subproblems  subsequent iterations 
sgplan  finds local feasible plan subproblem  minimizing global objective weighted sum violated global constraints  end iteration 
sgplan  increases penalty violated global constraint proportion violation 
process ends constraints satisfied 
designed two strategies updating penalty global constraints 
sgplan  participated ipc  sets large initial penalty values updates
rate   whereas sgplan    studied paper sets initial penalty values zero 
 
   for sgplan   
   
  
   
t k  
t k   t k   mt k  
             
    
 
 for sgplan      
  

here  t k penalty global constraints gt gk th iteration 
mt k defined         large initial value  parameter controlling
rate penalty updates  experiments  set               
figure   illustrates planning process sgplan  airport temp    instance  given three subproblems instance  sgplan  first evaluates subproblem first iteration order determine initial active global constraints 
figure shows  respectively  subplans active global constraints evaluating
three subproblems second iteration  strategy effective reducing
number active global constraints quickly    beginning zero one
iteration 
penalty update strategy sgplan  may lead longer makespans uses
large initial penalty values order reduce number violated global constraints
quickly  hence  subplans found may poor temporal concurrency  address
issue  implemented new strategy sgplan         sets initial penalty
values zero 
figure    illustrates time quality trade offs sgplan  sgplan    used
solve nine representative instances ipc   blocksworld  depots domains 
number active global constraints changes evaluating subproblem 
plot progress remaining number active global constraints respect
total number subproblems evaluated  results show planners
   

fichen  wah    hsu

 
 
 
   
 
   
 
 
 
 
  
 
 
 
 
 
 
 
 
  
 
 
 
 
  
 
 
 
 
 
 
 
 
 
  
 
   
 
 
 
 
 
 
 
 
 
 
 
 

g 

 
 
 
 
   
 
 
   
 
 

g 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

  
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
  
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 

 
 
 
 
   
 
 

 
 
 
 

 
 
 
 

g 

 
 
 
 
 
 
 
 

 
 
 
 

a  start iteration  
 
 
 
   
 
   
 
 
 
 
 
 
 
 
 
 
   
 
 
 
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
   
 
 
 
 
 
 
   
 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 
  
 
 

 
 
 
 

 
 
 
   
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
  
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
   
 
 
 
 

 
 
 
   
 
   
 
 
 
 
 
 
 
 
 
   
 
  
 
   
 
 
 
  
 
 
 
 
 
 
 
 
 
  
 
   
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
   
 
 
   
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
  
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 

 
 
 
 
   
 
 

g 

 
 
 
 
 
 
   
 
 
 
 
 
 
 
 

g 

 
 
 
 

 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

g 

b  solving subproblem g 
 
 
 
   
 
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
  
   
 
 
  
 
   
 
 
 
 
 
 
   
 
 
 
 

g 

g 

 
 
 
 
 
 
   
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

g 

 
 
 
 

c  solving subproblem g 

 
 
 
 
 
 
 
 
  
 
 

 
 
 
 

 
 
 
   
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
  
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 

g 

g 

 
 
 
 
 
 
   
 
 
 
 
 
 
 
 

g 

 
 
 
 

d  solving subproblem g 

figure    planning process ipc  version sgplan  second iteration
solving airport temp    instance  box corresponds action
subplan  whereas arrow corresponds active global constraint 
placing emphasis violated global constraints  number violated
constraints quickly reduced expense longer makespan 

resolve remaining number active global constraints almost linear fashion 
sgplan  generally faster resolving active global constraints generates
plans worse quality  detailed experimental results section    show
sgplan    generally leads plans better quality 
planners  however  difficulty solving pipesworld notankagetemp deadline    instance  figure   c   domain  sgplan  cannot solve
instances  whereas sgplan    solve eight instances                              although fraction initial active global constraints constraints     
average  table     planners may get stuck infeasible solutions cannot make progress afterward  reason basic planner sgplan 
sgplan    enough backtracking generate new candidate subplans
subproblem  hence  basic planner keeps generating subplan point 
regardless violated constraints penalized 
    handling producible resources
planning problems  may facts made true numerical
resources produced anytime needed  example  settlers domain 
   

fi  
  
 
 

  

sgplang  q       
sgplang   q       

  
  
  
  
  
 

                               

 

total   subproblems evaluated

   
  
 
  

  

  

  

  

   
  
  
  
  
  
  
  
  
  
 

  

  
 
 
 
 
 
  

  

  

  

total   subproblems evaluated

g  umts temp   

  

  

 

  

  

  

  

  

  

  

total   subproblems evaluated

  

  
  
  
  
  
  
  
  
 
 

sgplang  q        
sgplang   q        

                             

total   subproblems evaluated

total   subproblems evaluated

e  satellite time   
  active global constraints

  active global constraints

sgplang  q         
sgplang   q        

  

  

                                

d  promela opticaltelegraph   
  

  

sgplang  q        
sgplang   q        

total   subproblems evaluated

  

  

  active global constraints

  active global constraints

  active global constraints

   

  

  

sgplang  q n a 
sgplang   q n a 

total   subproblems evaluated

sgplang  q        
sgplang   q        

   

  

  
  
  
  
  
  
  
  
  
 
 

b  pipesworld notankage  c  pipesworld notankagenontemp   
temp deadline   

a  airport temp   
   

  active global constraints

sgplang  q        
sgplang   q        

  

  

  active global constraints

  

  active global constraints

  active global constraints

temporal planning using subgoal partitioning resolution

sgplang  q       
sgplang   q       

  
  
  
  
  
  
 
  

  

  

  

  

total   subproblems evaluated

h  blocksworld     

  

f  settlers   
   
   
   
   
   
   
  
  
  
  
 

sgplang  q        
sgplang   q        

  

  

  

  

  

  

  

total   subproblems evaluated

i  depots time   

figure     resolution active global constraints nine benchmark instances original penalty update strategy sgplan  new penalty update strategy
sgplan      x axis includes number subproblems evaluated 
corresponding subgoal  first iteration order determine initial
active global constraints 

coal always produced mine  define producible logical numerical
resources follows 
a  fact producible add effect either action without preconditions
action whose preconditions always producible 
b  numerical resource producible increased either action without
preconditions action whose preconditions always producible 
planning tasks significantly easier producible facts resources
detected preprocessing phase made available planning  first
identifying facts resources  sgplan  derives relaxed initial state setting
producible facts true producible numerical resources large enough 
every time producible fact turned false  made true again  finding feasible
plan relaxed initial state  sgplan  removes unused numerical resources
   

fichen  wah    hsu

initial state plans again  process repeated redundant initial
resources  point  sgplan  inserts necessary actions beginning plan
generate minimum initial producible resources needed 
example  suppose timber detected producible resource one always
fell trees get timber  sgplan  initially set large number  say      units 
timber available  solving problem  suppose     units left unused 
reduces initial timber     units plans again  process repeated
either unused timber final state problem becomes unsolvable
reducing initial resource 
note approach may incur redundant actions producing unused resources  optimal amount resources needed cannot predicted ahead time 

   subgoal level planning
subgoal level  sgplan  applies landmark analysis partition subproblem 
performs path finding optimization  carries subspace reduction analysis prune
irrelevant facts actions subproblem  calls modified metric ff planner
solve subproblem 
    subgoal level decomposition techniques
a  landmark analysis  first proposed porteous  sebastia  hoffmann  porteous 
sebastia    hoffmann         landmark analysis allows large planning problem
decomposed series simpler subproblems  given initial state  aims find
intermediate facts must true feasible plan reaching goal state 
example  assume object delivered d  path
b c d   o  b   o  c  landmark facts 
since feasible plan must make true reaching goal state  o  d  
planning problem first partitioned subgoals subproblems 
apply landmark analysis subproblem order find intermediate facts
reaching corresponding subgoal  landmark analysis important sgplan 
allows subproblem decomposed simpler subproblems
solved easily 
subproblem  find landmarks relaxed planning approach  given planning subproblem    o  f  i  g   first construct relaxed planning graph
initial state ignoring delete effects actions  force f f level
graph false  even made true actions   result  actions
preconditioned f pruned  exists goal fact g cannot reached
f false  f landmark fact must reached plan relaxed
problem  finding partial order landmarks  sgplan  builds sequential
list subproblems joined landmarks found applies basic planner solve
subproblem order  note landmark analysis expensive  sgplan 
detects landmarks beginning every iteration 
landmarks found relaxed planning graph necessary solution
plan original problem solution plan relaxed problem  hence 
feasible plan original problem must reach landmark found relaxed ap   

fitemporal planning using subgoal partitioning resolution

initial state
on b   a  

on b  a  

last b   s   

on b  a  

on b  a  

on b   a  

last b  s   
first b  s   

last b   s   

on b  a  

on b  a  

last b  s   

last b  s   

last b  s   

on b   a  

on b  a  

last b  s   

on b   a  

on b  a  

on b  a  

first b  s   

first b   s   

on b   a  

first b   s   

on b  a  

on b  a  

on b  a  

on b   a  

first b  s   

on b  a  

on b  a  

on b  a  

goal state

figure     landmarks partial orders pipesworld notankagenontemp    instance 
proach least once  however  landmarks found sufficient test goal
reachability relaxed approach  may exist undetected landmarks even
every fact tested 
figure    shows landmarks found ipc  pipesworld notankagenontemp    instance  considering first goal fact  b    a    last  b    s   
landmark landmarks  b    a   f irst  b    s    
means last  b    s    must ordered  b    a   f irst  b    s    
way  decompose subproblem  b    a     smaller tasks
must carried sequence  namely  last  b    s      b    a    f irst  b    s    
 b    a   
b  landmarks identified path finding  landmark analysis may sometimes produce
landmark facts decomposing subproblem  example  gates
along path airport instance identified landmark facts  that is 
must visit points  usually multiple paths given source destination  consider airport topology figure   a goal move a 
sg  sg   two alternative paths none facts
 a   sg     a   sg       a   sg   true reaching sg   cannot detect landmark facts 
identify landmark facts decomposing subproblem  developed
sgplan  new path finding technique  technique based concept fact
groups used existing planners  mips  edelkamp       
downward  helmert   richter         fact group includes group mutually exclusive
facts one true time  typically involves multiple possible
states object  example airport instance discussed above  fact group includes
different locations a  at 


fg  
 a   sg     a   sg       a   sg     a   sg    
    
   

fichen  wah    hsu

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg  

 a   sg    a   sg  

 a   sg  

 a   sg    a   sg  

a  transition graph fg

 a   sg  

b  path finding

figure     illustration transition graph fact group fg path finding algorithm  shaded nodes  b  new landmark facts detected path finding 

sgplan    adopted approach mips based analysis static mutex
groups finding fact groups subgoal facts 
apply path finding subproblem gt none landmarks
detected landmark analysis  assuming subgoal reached gt   first find
fact group belongs to  previous example  subgoal gt    a   g   
fact group fg      
fact group two facts  determine transition relations
constructing directed graph  given two facts f  f  fact group  add edge
f  f  exists action f  precondition f 
add effect  which implies f  delete effect since f  f  mutually
exclusive   figure   a illustrates transition graph airport example discussed
above 
last  find path  look facts immediate predecessors gt
graph  arbitrarily select one must visit landmark disable others 
perform landmark analysis initial fact gt   analysis return
landmark facts 
example airport instance   a   sg    a   sg   two immediate
predecessor facts subgoal gt    a   sg    disable  a   sg   landmark
analysis  one path  a   sg   gt    a   sg   
 a   sg     a   sg   detected landmark facts  figure   b illustrates
process 
c  path optimization used find better landmark facts problems timed
initial literals numerical effects  invoked deadline
dynamically changing numerical resource appears preconditions actions 
conditions satisfied ipc  satellite instances technique found
useful 
technique works choosing path optimizes time duration usage
numerical resource multiple paths different quality  setting
nodes along optimal path landmark facts  given subproblem trying reach
subgoal gt   construct transition graph fact group gt apply dijkstras
algorithm find shortest path initial fact gt   weight edge
either time duration problems time windows  usage numerical resource
   

fitemporal planning using subgoal partitioning resolution

 

g 

a 

a 
a 

g 

time

a 
a 

a 
s 

g 
s 
s 
s 

s 

s 

s 

figure     generating multiple starting states subproblem g    given initial state
s  si                   state action ai finished  sgplan  calls
basic planner generate local subplan starting state picks
first one improves objective      

problems numerical preconditions  set facts along optimal path
landmark facts force planner choose path others  landmarks along
optimal path allows us decompose problem subproblems 
two limitations current implementation path optimization  first 
since needs path initial fact goal fact transition graph 
cannot apply technique initial goals facts disconnected  second 
studied case one dynamically changing numerical resource appears
preconditions actions studied optimization multiple numerical
resources 
    subgoal level planning techniques
a  evaluating multiple subplans subproblem  finding local feasible subplan
subproblem improves objective       sgplan  generates number subplans
multiple starting states  since active global constraints exist two identical
subplans  generate multiple starting states given subproblem applying possible prefix actions subproblems  example  given six actions
planned g  g  figure     six possible starting states developing
subplan g    starting state  sgplan  calls basic planner generate local
feasible subplan accepts subplan improves objective       better
subplans found possible starting states  sgplan  leaves local subplan
unchanged moves next subproblem 
b  search space reduction  solving partitioned subproblem  often eliminate search space many irrelevant actions related facts subgoals
subproblems  reductions useful planning problems
partitioned actions generally relevant 
   

fichen  wah    hsu

example  consider transportation domain whose goal move packages 
drivers  trucks various locations initial configuration  suppose problem instance  goal set  at  d   s     t    s     p    s     p    s    two
packages p   p    one driver d   one truck    two locations s  s   without partitioning  actions relevant resolving subgoals  contrast 
partitioning  actions moving p   around irrelevant subproblem resolving  p    s   eliminated  similarly  actions moving p   p  
irrelevant subproblem resolving  d   s   
designed backward relevance analysis eliminate irrelevant actions
subproblem solving basic planner  analysis  maintain
open list unsupported facts  close list relevant facts  relevance list relevant
actions  beginning  open list contains subgoal facts subproblem 
relevance list empty  iteration  fact open list  find
actions support fact already relevance list  add
actions relevance list add action preconditions close list
open list  move fact open list close list processed 
analysis ends open list empty  point  relevance list contain
possible relevant actions  analysis takes polynomial time 
note relevance analysis complete stops  since relevance list
may still contain irrelevant actions  example  reduce relevance
list forward analysis finding applicable actions initial states
backward analysis  however  analysis may cost effective reducing
overhead planning 
reduction method belongs family heuristics proposed nebel  dimopoulos
koehler         since select possible supporting actions processing fact 
approach indeed one selects union elements possibility
set according classification  conservatively reduce irrelevant information  number tighter reductions approximately minimize use
initial facts  nebel et al          however  aggressive heuristics may solution
preserving solution length preserving 
    modified metric ff basic planner
decomposing subproblem associated subgoal smaller subproblems bounded
landmark facts  sgplan  solves subproblem identified  or original subproblem
case landmark facts identified  modified metric ff planner  modifications consist two components  adaptation original metric ff  hoffmann 
      order entertain new features pddl     support planning
mutex constraints partitioned  fact  lot efforts embedding metric ff
sgplan  spent first component 
original metric ff solve problems pddl    propositional actions
support temporal features  extended parser metric ff
support full pddl    syntax definition actions atomic logical durational temporal  planning process extended sequential propositional
planning parallel temporal planning  specifically  extended sequential actions
   

fitemporal planning using subgoal partitioning resolution

fixed
subproblems

g 
     

components objective function
    
estimated makespan te

gt 
gt  

pn

     

k  
k  t

gn

t k
e t k

weighted sum global mutex
constraint violations

gt
current plan

heuristic value  z t   original metric ff

relaxed plan

figure     temporal planning partitioned search context incorporates objective
function      makespan te estimated enhanced pert algorithm
heuristic value metric ff planner 
atomic length original metric ff actions predefined durations
scheduled parallel 
extended metric ff support new feature called derived predicates introduced pddl     derived predicates define axioms whose facts derived set
precondition facts  example  domain boxes  b b
c  derived predicate c generated  derived predicates
appear preconditions goals effects  modified metric ff 
implemented technique proposed mips      edelkamp        handling derived
predicates  encode derived predicate special action a  precondition
facts preconditions facts d  add effects derived facts d 
delete effect empty  planning  derived predicate actions
included relaxed plan  however  heuristic function computed metric ff
counts number real actions relaxed plan number derivedpredicate actions  real actions considered candidates forward expansion
state  state  expand set true facts applying applicable derived
predicates iteratively reach fixed point state true facts
added 
second component modifications metric ff involves support
partitioned search context solving subproblem  say gt   case  metric ff needs
incorporate objective aggregate state schedulable actions g      gn
planning actions gt   referring figure     aggregate state represented
estimated makespan te actions evaluated enhanced pert
algorithm 
pert originally developed generate parallel plan scheduling action
early possible blocked dependency mutex relation  previous
pert algorithms detect propositional conflict two actions checking one
action adds deletes anothers precondition  detect numerical conflict two actions
modify numerical variable  latter case  two actions would allowed
   

fichen  wah    hsu

overlap execution consume resource  even total
amount required exceed amount available  obviously  resulting schedule
suboptimal 
developed enhanced pert algorithm considers resource constraints
schedule  algorithm assigns action early possible long
propositional conflicts violations numerical resource constraints  besides
maintaining operator dependency original pert  keep track changes
numerical variables  algorithm greedy schedules applicable actions
early possible without backtracking 
general  pert schedule valid sequential plan parallel plan without mutex
conflicts  however  enhanced pert may generate parallel plan mutex conflicts 
reason subproblem solved initial state sequentially
state previous subproblem  hence  actions multiple subplans
combined  one action may delete precondition another causes mutex conflict 
example  consider sequential plans two subproblems g  g  scheduled
initial state blocksworld domain  a  move  a  b  move  b  c  
b  move  d  e  move  e  c   move  x  y  places x top y 
precondition clear  y   y clear nothing it   example  pert cannot
generate parallel plan mutex conflict move  e  c  move  b  c  
regardless two actions scheduled  conflict occurs action
deletes clear  c  precondition other 
modified metric ff planner carries search heuristically looks plans
minimize      rewritten follows 



pn




n
e t k
minz t   z t     k   t k
x
k  t


min j z   
t j
e t j  
pn

z t 
e

j  
e t k
minz t   z t       k   t k
j  t

k  t

 for sgplan   
    
 for sgplan      

 z t   heuristic value original metric ff solving gt  
e t k
estimated number active mutexes plan gk relaxed plan gt
obtained ignoring delete effects unscheduled actions  te makespan estimated
enhanced pert algorithm composing relaxed plan gt plans
subproblems  t k penalty value dynamically updated global level planning 
constant fixed         although search guarantee optimality 
always resolve global mutual exclusion constraints between  say z t  z k  
move one subplan backward order avoid overlapping another conflicting
subplan penalty t k large enough 
implementation      modified metric ff planner  set
sgplan    small penalty term due makespan dominate
terms  fact  since te much smaller one test problems  main
purpose break ties among states close heuristic values 
hand  implementation      sgplan  ipc  include te objective
function  result  focuses eliminating mutual exclusion conflicts tends
generate plans longer makespan 
   

fitemporal planning using subgoal partitioning resolution

   procedure sgplan problem file 
  
parse problem file instantiate facts actions 
  
detect encode timed initial literals  til  
  
detect encode derived predicates 
  
detect til wrappers translate regular tils 
  
detect producible resources 
  
 there producible resources  set maximum possible end if 
  
repeat
  
subgoal fact goal list
   
call search space reduction eliminate irrelevant actions 
   
call basic planner  modified metric ff  reach subgoal 
   
 the basic planner times out 
   
perform landmark analysis generate list subproblems 
   
subproblem list
   
call basic planner solve subproblem 
   
 solution found time limit 
   
 problem til numerical fluents  perform path optimization
   
else perform path finding decompose subproblem end if 
   
call basic planner solve decomposed subproblem 
   
end
   
end
   
end
   
end
   
evaluate plan z update penalty values violated global constraints 
   
feasible solution plan found time limit exceeded 
   
  new solution found      there unused producible resources  
   
reduce initial producible resources goto step   
   
end
    end procedure

figure     high level pseudo code common sgplan  sgplan     

general  embedding basic planner partition and resolve framework requires
modifications objective function basic planner order implement
      hence  cannot done without source code basic planner 
    putting pieces together
figure    shows high level code common sgplan  sgplan     
preprocessing phase parses problem file instantiates facts actions  line
    detects encodes timed initial literals  til  derived predicates   lines  
    translates problem regular til problem problem compiled til
problem  line     detects producible resources sets always available  lines
     
major loop lines       subgoal  sgplan  uses search space
reduction eliminate irrelevant actions  line     solves using basic planner
 line      basic planner fails find feasible plan within time limit       node
   

fichen  wah    hsu

table    summary useful techniques domain variant  check mark indicates
technique found useful domain variant class domain
variants 

domain variant
airport  
airport temp timewindows co
pipesworld  
promela  
promela   dp
psr small
psr middle
psr middle co
psr large
satellite strips
satellite time
satellite numeric
satellite complex
satellite time timewindows
satellite time timewindows co
settlers
umts temp
umts temp timewindows
umts temp timewindows co
umts flaw temp
umts flaw temp timewindows
umts flaw temp timewindows co

sg























lm




pf




po

til

til w

dp

pr

sr

































keys sg  subgoal partitioning
lm  landmark analysis
pf 
path finding
po  path optimization
til  timed initial literals handling til w  til wrapper detection
dp  derived predicates handling pr  producible resources
sr 
search space reduction

expansions metric ff   sgplan  aborts run metric ff tries decompose
problem further  first applies landmark analysis decompose solve subproblem
 lines         unsuccessful solving subproblem  tries path optimization
numerical til problems  line     path finding  line     partition
subproblem  subgoals evaluated  composes solution  evaluates
global constraints  updates penalty values  line      finally  new solution
found unused producible resources  reduces initial producible
resources  lines        repeats major loop again 

   sensitivity analysis techniques sgplan 
section describe ablation study various techniques sgplan  order
test effectiveness  table   lists techniques useful ipc 
domain variant  defer discussion performance improvement sgplan   
sgplan  section   
   

fitemporal planning using subgoal partitioning resolution

airport variants  useful techniques include subgoal partitioning  landmark analysis  path finding  addition  til wrapper detection needed
timewindows co variant  ablation study  applied sgplan  subgoal
partitioning alone  case  sgplan  solve                 instances
cannot solve numbered higher     namely  p    p    etc    reason
subproblems without landmark analysis path finding large
metric ff difficulty solving them  contrast  sgplan  landmark analysis
path finding solve             instances 
pipesworld variants  useful techniques include subgoal partitioning  landmark analysis  path finding  search space reduction  although search space reduction
slightly reduce run time      average  landmark analysis path finding
significant effects performance  sgplan  without landmark analysis path
finding solve               instances  whereas sgplan  landmark
analysis path finding solve     instances        landmark analysis path finding leads    average improvement run time instances versions
solve 
promela domain  subgoal partitioning found useful  besides applying
derived predicate handling corresponding variants 
psr variants except psr small  search space reduction particularly
useful addition subgoal partitioning  three variants  sgplan  searchspace reduction solve  respectively             instances  whereas sgplan  without
search space reduction solve  respectively           instances  addition  average run time improvements due search space reduction are  respectively               
       psr small variant  search space reduction significant effects
run time solution quality  last  derived predicate handling important psrmiddle  encoded using derived predicates 
satellite domain  subgoal partitioning found useful solving
time  strips  complex variants  numeric  time timewindows 
time timewindows co variants  landmark analysis path optimization
useful  three variants  sgplan  solve  respectively          and    
instances  whereas sgplan  without landmark analysis path optimization solve 
respectively             instances 
settlers domain  subgoal partitioning well techniques handling producible resources important solving one instances   the eighth instance
infeasible   without detecting producible resources  sgplan  solve nine
   instances 
umts domain  subgoal partitioning found useful  besides applying
til handling til wrapper detection corresponding variants  landmark analysis
help domain detect none landmark facts
    instances  also  search space reduction prune facts little effects
performance 
studied effects subgoal ordering sgplan    eighteen representative variants ipc  domains well depots domain  figure     
instance  test sgplan    using five random subgoal orders normalize run time
 resp  quality  respect corresponding measure sgplan    run using
   

fichen  wah    hsu

airport  nontemp  temp
pipesworld  notankage nontemp  notankage temp
promela  opt telegraph  opt telgraph dp  phil  phil dp
psr  small  middle
satellite  strips  time
settlers  settlers
umts  temp  flaw temp
depots  strips  simpletime  time

normalized quality

  

 

   
    

   

 

  

   

normalized run time
figure     run time quality distribution sgplan    run using different random subgoal
orders selected ipc  depots domain variants  results normalized respect run time quality sgplan    run using default
subgoal order   performance values larger one better sgplan      

original order problem definition  use makespan quality measure
temporal domains number actions propositional domains  even
objective specified problem definition  
results show performance sgplan    quite insensitive subgoal ordering airport  promela  settlers  umts domains  however  significant
variations run time quality pipesworld psr domains  although
definitive trend random subgoal order better  depots domain 
exist smaller variations run time quality  common feature among
pipesworld  psr  depots domains intensive subgoal interactions 
make sensitive order subgoals evaluated  example 
   

fitemporal planning using subgoal partitioning resolution

psr middle variant  number subgoals large  different subgoals
highly related derived predicates  last  note using original subgoal order
leads better run time quality satellite domain  reason original
order avoid unnecessary subgoal invalidations finding local feasible subplans  since
starting states generated applying prefix subplans subgoals 
clear advantage using random subgoal orders original
subgoal order  sgplan  sgplan    use original subgoal order implementations 

   experimental results
section  experimentally compare performance sgplan    sgplan     their
differences            planners solving ipc  ipc  benchmark
suites well blocksworld domain ipc   suite contains multiple domains 
several variants each  variants ipc  address different features
pddl     include versions strips  strips dp  derived predicates   temporal  temporal til  deadlines   numeric  complex  temporal numeric  
complete description variant problem files found web site
competitions 
runs carried amd athlon mp     pc redhat linux as 
  gbyte main memory unless otherwise noted  following rules ipc   random
planners set fixed random seed  all  throughout experiments  moreover 
planners must fully automated  run parameter setting
instances attempted  execute cpu time limit    minutes main memory
limit   gbytes 
table   summarizes performance sgplan    sgplan      downward  helmert  
richter         lpg td speed     seed       yahsp       use makespan
quality metric temporal domains number actions propositional domains  since code downward unavailable  report ipc  results adjusting
run times factor governed difference speeds computer used
ipc  competition computer used sgplan      likewise  unable
evaluate downward ipc  ipc  benchmarks 
table   include results domain variants target planner cannot
handle  example  lpg td speed cannot solve compiled domains
support grammatical features psr large two fluents variants
promela domain  yahsp cannot handle derived predicates  contrast 
sgplan  sgplan    designed solve variants except rovers time
variant dynamic durations  note since satellite settlers domains
exist ipc  ipc  benchmarks  table include results
   url competitions http   ls  www cs uni dortmund de  edelkamp ipc   
ipc   http   planning cis strath ac uk competition  ipc   http   www cs toronto 
edu aips      ipc  
   object code lpg td downloaded http   zeus ing unibs it lpg register lpg td 
html  object code yahsp     downloaded http   www cril univ artois fr 
 vidal yahsp yahsp linux x   gz  object code downward unavailable testing
time paper revised 

   

fichen  wah    hsu

ipc  settlers domain variants ipc  satellite domain
reported ipc  
table   
performance comparison sgplan    planners 

table comparing sgplan    sgplan    four missing variants  pipesworldnotankage temp deadlines co  promela optical telegraph fluents dp 
promela philosophers fluents dp  rovers time  cannot solved
planners  table comparing sgplan    lpg td speed  missing variants except rovers time cannot solved lpg td speed  rovers time variant 
lpg td speed solve instances planners cannot  tables
comparing sgplan      downward  yahsp  missing variants cannot solved
target planners compared 
domain variant

instances solvable  fb  

fq
ft
fw fwt fwq

fn

instances
fg
fu
fb

comparison sgplan    sgplan 
airport nontemp
         
airport temp
         
airport temp timewindows
         
airport temp timewindows co
         
pipesworld notankage nontemp
         
pipesworld notankage temp
         
pipesworld tankage nontemp
         
pipesworld tankage temp
         
pipesworld notankage temp dead
         
promela optical telegraph
         
promela optical telegraph dp
         
promela optical telegraph fluents          
promela philosophers
         
promela philosophers dp
         
promela philosophers fluents
         
psr small
         
psr middle
         
psr middle co
         
psr large
         
satellite strips
         
satellite time
         
satellite time timewindows
         
satellite time timewindows co
         
satellite numeric
         
satellite complex
         
satellite complex timewindows
         
satellite complex timewindows co
         
settlers
         
umts temp
         
umts temp timewindows
         
umts temp timewindows co
         
umts flaw temp
         
umts flaw temp timewindows
         
umts flaw temp timewindows co
         
depots strips
         
continued      

   

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

fitemporal planning using subgoal partitioning resolution

table     continued 
domain variant
depots simpletime
depots time
depots numeric
driverlog strips
driverlog simpletime
driverlog time
driverlog numeric
driverlog hardnumeric
freecell strips
rovers strips
rovers simpletime
rovers numeric
satellite simpletime
satellite hardnumeric
zenotravel strips
zenotravel simpletime
zenotravel time
zenotravel numeric
blocksworld

instances solvable  fb  

fq
ft
fw fwt fwq
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

fn

instances
fg
fu
fb

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

comparison sgplan    lpg td speed
airport nontemp
airport temp
airport temp timewindows
pipesworld notankage nontemp
pipesworld notankage temp
pipesworld tankage nontemp
pipesworld tankage temp
pipesworld notankage temp dead
promela optical telegraph
promela optical telegraph dp
promela philosophers
promela philosophers dp
psr small
psr middle
satellite strips
satellite time
satellite time timewindows
satellite numeric
satellite complex
satellite complex timewindows
settlers
umts temp
umts temp timewindows
umts flaw temp
umts flaw temp timewindows
depots strips
depots simpletime
depots time
depots numeric
driverlog strips

         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
continued      

   

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

fichen  wah    hsu

table     continued 
instances solvable  fb  

fq
ft
fw fwt fwq

domain variant
driverlog simpletime
driverlog time
driverlog numeric
driverlog hardnumeric
freecell strips
rovers strips
rovers simpletime
rovers numeric
satellite simpletime
satellite hardnumeric
zenotravel strips
zenotravel simpletime
zenotravel time
zenotravel numeric
blocksworld

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

fn

instances
fg
fu
fb

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

comparison sgplan    downward
airport nontemp
pipesworld notankage nontemp
pipesworld tankage nontemp
promela optical telegraph
promela optical telegraph dp
promela philosophers
promela philosophers dp
psr small
psr middle
psr large
satellite strips

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    

comparison sgplan    yahsp
airport nontemp
pipesworld notankage nontemp
pipesworld tankage nontemp
promela optical telegraph
promela philosophers
psr small
satellite strips
depots strips
driverlog strips
freecell strips
rovers strips
zenotravel strips
blocksworld

    
    
    
    
    
    
    
    
    
    
    
    
    

   

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    

fitemporal planning using subgoal partitioning resolution

keys   tn   qn  
 tg   qg  
fb

fq
ft
fw
fwt
fwq
fn
fg
fu

 run time  quality  sgplan   
 run time  quality  target planner compared
fraction solved sgplan    target planner
 fb     fq   ft   fw   fwt   fwq     fn fg fu  
fraction tn tg qn qg  sgplan    better run time quality 
fraction tn   tg qn   qg  sgplan    worse run time better quality 
fraction tn   tg qn   qg  sgplan    worse quality better run time 
fraction tn   tg qn   qg  sgplan    worse run time worse quality 
fraction tn   tg qn   qg  sgplan    worse run time quality 
fraction tn   tg qn   qg  sgplan    worse quality run time 
fraction solved sgplan    target planner
fraction solved target planner sgplan   
fraction unsolved sgplan    target planner

figures       plot time quality trade offs run time  resp  quality 
target planner normalized respect corresponding measure sgplan   
instances solvable planners  graph  list six percentages computed
normalizing   ft   fq   fw   fwt   fwq respect fb  defined table   
domains evaluated 
airport domain  sgplan    improves performance sgplan 
terms run time quality majority         instances  figure   a  
nontemp variant  solution files  not shown  show sgplan    cannot solve
six  fg   fu        table    seven largest instances  number         whereas
downward  leading planner variant  solve    instances  sgplan   
difficulty instances partitioned subproblems large evaluated embedded metric ff planner  reason sgplan   
worse downward lpg terms run time larger instances  obvious
solution employ efficient basic planner becomes available  fact 
one strengths partition and resolve approach  another solution
partition subproblems reduce complexity extent
handled modified metric ff planner  design partitioning methods
still open time 
pipesworld domain  sgplan    significant improvements sgplan 
terms makespan notankage temp tankage temp variants  figure   b   improvements due minimization estimated makespan
 te        however  improvements found notankage nontemp
tankage nontemp variants      term corresponds
number actions non temporal variants  respect planners  sgplan   
solve instances notankage nontemp  notankage temp 
tankage temp variants  fn fg   corresponding rows table    
consistently shortest solution time notankage temp tankagetemp variants  notankage nontemp tankage nontemp variants  yahsp  however  solve number instances shortest solution time cases  although tends produce longer plans  last  discussed
section      sgplan    competitive pipesworld notankage tempdeadline variant solve eight    instances 
   

fichen  wah    hsu

 

     

    

    

    

    

    
    

 

 

     

    

    
    

 

normalized quality

normalized quality

     

    
     

    

     

    

    

    

   

 

 

small
middle
large
middle co

    

     

    

    

     

    

    
    

  

 

normalized run time

c  promela

d  psr

normalized quality

normalized quality

 

     

     

     
    

strips
time timewindow co
complex
complex timewindows
time timewindows
numeric
time
complex timewindows co

   
    

    

    

   

 

 

settlers

     

    

    

    

    
   

  

 

  

normalized run time

e  satellite

f  settlers
  

     

normalized quality

 

normalized quality

    

     

normalized run time

 

 

normalized run time

  

 

  

b  pipesworld
 

optical telegraph dp
optical telegraph
philosophers
optical telegraph fluents
philosophers fluents
philosophers dp

    
 e   

    

 

normalized run time

a  airport

 

    

   

normalized run time

 

     

     

normalized quality

normalized quality

     

 

 
notankage nontemp
notankage temp
tankage temp
tankage nontemp

temp
nontemp
temp timewindows co
temp timewindows

     

    
    

    

temp
flaw temp timewindows co
temp timewindows co
temp timewindows
flaw temp timewindows
flaw temp

    

    
   

 

 

     

    

    

     

depots strips
depots simpletime
depots time
depots numeric
blocksworld

   
     

  

normalized run time

     

    

   

    

 

  

   

    

     

normalized run time

g  umts

h  depots   blocksworld

figure     run time quality sgplan  instance normalized respect
corresponding run time quality sgplan    instance instances solvable planners   performance values larger one
better sgplan      
   

fitemporal planning using subgoal partitioning resolution

temp
nontemp
temp timewindows

     

 

  

     

normalized quality

normalized quality

 

     

     

    

notankage nontemp
notankage temp
tankage temp
tankage nontemp
notankage temp deadlines

     

    

 

    
    

    
    

    

   

 

  

   

    

    

   

 

normalized run time

      

    

    

    

    

 

    

small
middle

  

normalized quality

normalized quality

optical telegraph dp
optical telegraph
philosophers
philosophers dp

    
   

   

b  pipesworld

    

 

  

normalized run time

a  airport
 

     

  

   

    

 

     

     

    

    

    

 e   

     

    

normalized run time

    

   

 

  

   

normalized run time

c  promela

d  psr

 

 

settlers

     

 

normalized quality

normalized quality

     

    
     
strips
complex
complex timewindows
time timewindows
numeric
time

    

    
   

    

 

  

   

    

 

     

    

     

    

    
    

     

    

     

normalized quality

normalized quality

   

    

f  settlers
     

     

 

     
    

    

    

   

  

  

temp
temp timewindows
flaw temp timewindows
flaw temp

    
    

 

normalized run time

e  satellite
 

    

   

normalized run time

 

  

   

normalized run time

 

     

    
     

    

depots strips
depots simpletime
depots time
depots numeric
blocksworld

   
     

    

   

    

 

  

   

normalized run time

g  umts

h  depots   blocksworld

figure     run time quality lpg td speed instance normalized respect
corresponding run time quality sgplan    instance
instances solvable planners   performance values larger one
better sgplan      
   

fichen  wah    hsu

    

 

 

nontemp

     

normalized quality

normalized quality

 

     

     

notankage nontemp
tankage nontemp

    

 

    

    
    

    
   

     

    

     
    

    

 

  

   

 

normalized run time

a  airport
optical telegraph dp
philosophers dp

    

 

      

    

    
   

    

    

    

 

  

   

 

small
middle
large

     

     

    

    

     

    
 e   

     

normalized run time

normalized quality

 

    

   

    

 

  

   

normalized run time

c  promela
 

   

b  pipesworld
 

normalized quality

normalized quality

 

  

normalized run time

d  psr

strips

     

     

    

    

    

    
   

    

 

  

   

normalized run time

e  satellite

figure     run time quality downward instance normalized respect
corresponding run time quality sgplan    instance
instances solvable planners   performance values larger one
better sgplan      

promela domain  sgplan    improvements sgplan  terms quality
improves terms run time instances solve four six variants
 worse optical telegraph fluents philosophers fluents vari   

fitemporal planning using subgoal partitioning resolution

 

nontemp

notankage nontemp
tankage nontemp

     

 

     

normalized quality

normalized quality

  

     

     

    

    

    
    

   

 

  

   

 

     

     

     

    

    

     

    

   

normalized run time

optical telegraph
philosophers

     

normalized quality

normalized quality

 

     

    

    

    

    
   

 

  

 

     

    

    

     

    
     

   

    

    

  

d  psr
  

     

     

normalized quality

normalized quality

 

normalized run time

strips

    

    
    

    

   

c  promela

 

    

small

normalized run time
 

   

b  pipesworld
 

    

  

normalized run time

a  airport
 

    

 

    

   

    

    

 

  

   

normalized run time

 

     

     

    

    

    

depots strips
blocksworld
   
     
    

   

    

 

  

   

    

normalized run time

e  satellite

f  depots   blocksworld

figure     run time quality yahsp instance normalized respect corresponding run time quality sgplan    instance instances
solvable planners   performance values larger one better
sgplan      

ants   sgplan    solve number instances optical telegraphfluents  philosophers  philosophers dp  philosophers fluents
   

fichen  wah    hsu

variants compared lpg td speed  downward  yahsp  further 
fastest planner three variants slightly slower yahsp philosophers variant  figures   c    c    c   optical telegraph opticaltelegraph dp variants  organizer ipc  provided two versions  one written
pure strips another adl  however      resp       instances
strips     resp       instances adl optical telegraph  resp  
optical telegraph dp  variant  instances available adl adl space efficient problem representation  whereas instances strips
require large files   for example  file size optical telegraph       kbytes
adl     mbytes strips   since sgplan    sgplan  cannot handle adl
time  solved instances pure strips two variants 
able solve instances available strips fastest instances 
however  downward handle instances adl able solve instances
two variants  plan extend sgplan    directly support adl future 
note sgplan    sgplan  always find plans better quality
instances solved optical telegraph  optical telegraph dp 
philosophers  philosophers dp variants compared three
planners  edelkamp   hoffmann        
sgplan    planner solve instances four variants
psr domain  since psr pure propositional domain  sgplan    unable improve
solution quality sgplan    nevertheless  quality sgplan    consistently better
three planners  fi  fq  fwt   ft  fw  fwq corresponding rows
table     small variant  sgplan    lpg comparable run times
cannot solve largest instances  airport domain  sgplan    difficulty
largest instances basic planner cannot handle partitioned
subproblems  middle variant  sgplan      lpg  downward solve   
instances  situation middle co large variants similar
optical telegraph optical telegraph dp variants promela
domain  variants  downward handle directly adl format  sgplan   
must expand adl syntax pure strips exhausted memory evaluating
larger instances  plan address issue future 
satellite domain  sgplan    significant improvements quality sgplan   
fact  sgplan    generates solutions better quality planners
instances solve number instances seven variants  eighth
variant  time   able solve largest instances memory
usage exceeded   gbytes  variants except strips  sgplan    faster
three planners  strips variant  yahsp fastest generate
multiple actions instead single action search step  however  finds slightly
longer plans compared sgplan     
settlers domain  sgplan    improve solution quality sgplan 
because  discussed earlier       term corresponds number
actions non temporal variants  sgplan    solve instances except eighth
instance  learned ipc  organizers infeasible instance 
fastest among planners  generates longer plans lpgtd speed  due iterative scheme reducing producible resources 
   

fitemporal planning using subgoal partitioning resolution

table    summary number instances solved five planners compared    means
clear whether domain solved object code
available testing  means planner support
language features benchmark  
domain
sgplan    sgplan  lpg td speed downward yahsp
airport
   
   
   
  
  
pipesworld
   
   
   
  
  
promela
   
   
  
  
  
psr
   
   
  
   
  
ipc 
satellite
   
   
   
  
  
settlers
  
  
  


umts
   
   
   


total
    
    
   
   
   
depots
  
  
  
 
  
driverlog
  
  
  
 
  
freecell
  
  
  
 
  
rovers
  
  
  
 
  
ipc 
satellite
  
  
  


zenotravel
  
  
  
 
  
total
   
   
   
 
  
ipc  blocksworld
  
  
  
 
  
overall
    
    
    
   
   
optimal amount resources cannot found ahead time  sgplan    may incur
redundant actions producing unused resources 
umts domain  sgplan    solve instances six variants
fastest four them  moreover  makespans greatly improved
sgplan  incorporating te modified heuristic function metric ff  although
improvements makespan lpg td speed small variants  sgplan     
however  slower lpg td speed flaw flaw til variants  performance degradation variants attributed flawed actions lead
overly optimistic heuristic values relaxed plan based planners  edelkamp   hoffmann 
      metric ff 
ipc  depots domain  sgplan    better quality lpg td speed
yahsp strips numeric variants  whereas makespan sgplan   
worse lpg td speed majority instances time
simpletime variants  lpg td speed faster sgplan    majority
instances  fq   fw   fwt     ft   fwq corresponding rows table    
due large fraction initial active global constraints  performance subgoal
partitioning sgplan    unsatisfactory domain 
remaining ipc  domains  sgplan    generally improves sgplan  quality
besides freecell domain strips  except satellite domain
lpg td speed performs better  sgplan    generates solutions better quality
   

fichen  wah    hsu

instances  further  sgplan    faster lpg td speed
half instances  although difference run times among planners
relatively easy instances usually insignificant 
blocksworld domain  sgplan    generally finds solutions smaller number
actions sgplan    lpg td speed  yahsp  however  sgplan    much
slower lpg td speed many instances needs time resolving
large fraction initial active global constraints  figure   h  

   conclusions future work
presented paper partition and resolve approach application
sgplan    planner first prize suboptimal temporal metric track
second prize suboptimal propositional track ipc   table   summarizes
number instances solved top planners ipc  well sgplan      results
show constraint partitioning employed planners effective solving majority
problems two competitions 
approach based observation fraction active mutex constraints
across subgoals majority instances ipc  ipc  small  observation allows us partition search largely independent subproblems limit
amount backtracking resolving violated global constraints across subproblems  improvements attributed combination techniques introduced
reducing search space handling new features pddl    
future  plan study partitioning techniques better exploit
constraint structure planning domains  particular  study fine grain partitioning
order address cases larger fraction global constraints  develop search
strategies solving problems difficult to satisfy global constraints deadlines 
plan extend method planning uncertainty support
expressive modeling language features 

acknowledgments
research paper supported national science foundation grant iis          

references
blum  a  l     furst  m  l          fast planning planning graph analysis  artificial
intelligence             
bonet  b     geffner  h          planning heuristic search  artificial intelligence  special
issue heuristic search          
chen  y     wah  b  w          automated planning scheduling using calculus variations discrete space  proc  intl conf  automated planning scheduling 
pp      
chien  s   rabideau  g   knight  r   sherwood  r   engelhardt  b   mutz  d   estlin  t  
smith  b   fisher  f   barrett  t   stebbins  g     tran  d          aspen   au   

fitemporal planning using subgoal partitioning resolution

tomating space mission operations using automated planning scheduling  proc 
spaceops  space operations organization 
doherty  p     kvarnstrm  j          talplanner  empirical investigation temporal
logic based forward chaining planner   proc  sixth intl workshop temopral
logic based forword chaining planner  pp        aips 
edelkamp  s          mixed propositional numerical planning model checking
integrated planning system  proc  workshop planning temporal domains 
aips 
edelkamp  s          pddl    planning model checking integrated environment 
uk planning scheduling special interest group  plansig   glasgow 
edelkamp  s     hoffmann  j          classical part   th international planning competition 
http   ls  www cs uni dortmund de  edelkamp ipc    
foulser  d  e   li  m     yang  q          theory algorithms plan merging   artificial
intelligence                   
fourman  m  p          propositional planning  proc  workshop model theoretic
approaches planning  aips 
garrido  a   fox  m     long  d          temporal planning system durative actions
pddl     proc  european conf  artificial intelligence  pp         
gerevini  a     serina  i          lpg  planner based local search planning graphs
action costs  proc  sixth int  conf  ai planning scheduling  pp 
      morgan kaufman 
hanks  s     weld  d  s          domain independent algorithm plan adaptation   j 
artificial intelligence research            
helmert  m     richter  s          fast downward   making use causal dependencies
problem representation  proc  ipc   icaps  pp       
hoffmann  j          metric ff planning system  translating ignoring delete lists
numeric state variables  journal artificial intelligence research             
hoffmann  j     nebel  b          planning system  fast plan generation
heuristic search  j  artificial intelligence research             
jonsson  a  k   morris  p  h   muscettola  n     rajan  k          planning interplanetary space  theory practice  proc   nd intl nasa workshop planning
scheduling space  nasa 
kambhampati  s     hendler  j  a          validation structure based theory plan
modification reuse   artificial intelligence                 
kautz  h     selman  b          pushing envelope  planning  propositional logic 
stochastic search  proc    th national conference artificial intelligence  pp 
          aaai 
kautz  h     selman  b          unifying sat based graph based planning  proc 
intl joint conf  artificial intelligence  ijcai 
   

fichen  wah    hsu

kautz  h     walser  j  p          integer optimization models ai planning problems 
knowledge engineering review                 
koehler  j     hoffmann  j          reasonable forced goal ordering use
agenda driven planning algorithm  j  ai research             
lin  f          planner called r  ai magazine       
long  d     fox  m          efficient implementation plan graph stan  j  ai
research 
nau  d   muoz avila  h   cao  y   lotem  a     mitchell  s          total order planning
partially ordered subtasks  proc  intl joint conf  artificial intelligence 
pp          ijcai 
nebel  b   dimopoulos  y     koehler  j          ignoring irrelevant facts operators
plan generation  proc  european conf  planning  pp         
nebel  b     koehler  j          plan reuse versus plan generation  theoretical
empirical analysis   artificial intelligence                   
nigenda  r  s   nguyen  x     kambhampati  s          altalt  combining advantages
graphplan heuristic state search  tech  rep   arizona state university 
penberethy  j     weld  d          ucpop  sound  complete  partial order planner
adl  proc   rd intl conf  principles knowledge representation
reasoning  pp          kr inc 
penberethy  j     weld  d          temporal planning continuous change  proc 
  th national conf  ai  pp            aaai 
porteous  j   sebastia  l     hoffmann  j          extraction  ordering  usage
landmarks planning  proc  european conf  planning  pp       
refanidis  i     vlahavas  i          grt planner  ai magazine       
refanidis  i     vlahavas  i          mo grt system  heuristic planning multiple
criteria  proc  workshop planning scheduling multiple criteria  aips 
subbarao  m  b  d     kambhampati  s          sapa  domain independent heuristic
metric temporal planner  tech  rep   arizona state university 
tate  a   drabble  b     kirby  r          o plan   open architecture command 
planning control  intelligent scheduling         
tsamardinos  i   pollack  m  e     horty  j  f          merging plans quantitative
temporal constraints  temporally extended actions  conditional branches   proc 
intl conf  ai planning scheduling  aips   pp         
wah  b     chen  y          constraint partitioning penalty formulations solving
temporal planning problems  artificial intelligence                  
wah  b  w     chen  y          partitioning temporal planning problems mixed space
using theory extended saddle points  proc  ieee intl conf  tools
artificial intelligence  pp         
   

fitemporal planning using subgoal partitioning resolution

wah  b  w     chen  y          subgoal partitioning global search solving temporal
planning problems mixed space  intl j  artificial intelligence tools             
    
wilkins  d          ai planners solve practical problems   computational intelligence 
       
wolfman  s     weld  d          combining linear programming satisfiability solving
resource planning  knowledge engineering review         
yang  q          intelligent planning  decomposition abstraction based approach 
springer verlag  london  uk 

   


