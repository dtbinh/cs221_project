journal of artificial intelligence research                 

submitted        published      

how the landscape of random job shop scheduling
instances depends on the ratio of jobs to machines
matthew j  streeter
stephen f  smith

matts cs cmu edu
sfs cs cmu edu

carnegie mellon university
     forbes avenue  pittsburgh  pa        usa

abstract
we characterize the search landscape of random instances of the job shop scheduling
problem  jsp   specifically  we investigate how the expected values of     backbone size 
    distance between near optimal schedules  and     makespan of random schedules vary
n
n
n
as a function of the job to machine ratio   m
   for the limiting cases m
   and m

n
we provide analytical results  while for intermediate values of m we perform experiments 
n
n
we prove that as m
    backbone size approaches       while as m
  the backbone
n
n
vanishes  in the process we show that as m     resp  m     simple priority rules
almost surely generate an optimal schedule  providing theoretical evidence of an easyhard easy pattern of typical case instance difficulty in job shop scheduling  we also draw
connections between our theoretical results and the big valley picture of jsp landscapes 

   introduction
    motivations
the goal of this work is to provide a picture of the typical landscape of a random instance
of the job shop scheduling problem  jsp   and to determine how this picture changes as
n
a function of the job to machine ratio   m
   such a picture is potentially useful in    
n
understanding how typical case instance difficulty varies as a function of m
and     designing
or selecting search heuristics that take advantage of regularities in typical instances of the
jsp 

      understanding instance difficulty as a function of

n
m

the job shop scheduling literature contains much empirical evidence that square jsps  those
n
with m
     are more difficult to solve than rectangular instances  fisher   thompson 
       this work makes both theoretical and empirical contributions toward understanding
this phenomenon  empirically  we show that both random schedules and random local
n
    analytically  we prove that in the two
optima are furthest from optimality when m
n
n
limiting cases   m    and m    there exist simple priority rules that almost surely
produce an optimal schedule  providing theoretical evidence of an easy hard easy pattern
of instance difficulty in the jsp 
c
    
ai access foundation  all rights reserved 

fistreeter   smith

      informing the design of search heuristics
heuristics based on local search  for example tabu search  glover   laguna        nowicki
  smutnicki        and iterated local search  lourenco  martin  and stutzle         have
shown excellent performance on benchmark instances of the job shop scheduling problem
 jain   meeran        jones   rabelo         in order to design an effective heuristic  one
must  explicitly or implicitly  make assumptions about the search landscape of instances
to which the heuristic will be applied  for example  nowicki and smutnicki motivate the
use of path relinking in their state of the art i tsab algorithm by citing evidence that the
jsp has a big valley distribution of local optima  nowicki   smutnicki         one of
the conclusions of our work is that the typical landscape of random instances can only be
n
n
thought of as a big valley for values of m
close to    for larger values of m
 including values
common in benchmark instances   the landscape breaks into many big valleys  suggesting
that modifications to i tsab may allow it to better handle this case  we discuss i tsab
further in      
    contributions
the contributions of this paper are twofold  first  we design a novel set of experiments and
run these experiments on random instances of the jsp  second  we derive analytical results
that confirm and provide insight into the trends suggested by our experiments 
the main contributions of our empirical work are as follows 
n
  we show that low makespan schedules are clustered in a small
 for low values of m
region of the search space and many attributes  i e   directed disjunctive graph edges 
n
are common to all low makespan schedules  as m
increases  low makespan schedules
become dispersed throughout the search space and there are no attributes common
to all low makespan schedules 

 we introduce a statistic  neighborhood exactness  that can be used to quantitatively
measure the smoothness of a search landscape  and estimate the expected value of
this statistic for random instances of the jsp  these results  in combination with the
results on clustering  suggest that the landscape of typical instances of the jsp can
n
n
be described as a big valley only for low values of m
  for high values of m
there are
many separate big valleys 
for the limiting cases
we prove that

n
m

   and

n
m

   we derive analytical results  specifically 

n
 as m
    the expected size of the backbone  i e   the set of problem variables that
n
have a common value in all global optima  approaches       while as m
   the
expected backbone size approaches     and
n
n
 as m
    resp  m
    a randomly generated schedule will almost surely  a  be
located close in the search space to an optimal schedule and  b  have near optimal
makespan 

   

fithe landscape of random job shop scheduling instances

   related work
there are at least three threads of research that have conducted search space analyses
related to the ones we conduct here  these include literature on the big valley distribution
common to a number of combinatorial optimization problems  studies of backbone size in
boolean satisfiability  and a statistical mechanical analysis of the tsp  we briefly review
these three areas below  as well as relevant work on phase transitions and the easy hardeasy pattern of instance difficulty 
    the big valley
the term big valley originated in a paper by boese et al         that examined the
distribution of local optima in the traveling salesman problem  tsp   based on a sample
of local optima obtained by next descent starting from random tsp tours  boese calculated
two correlations 
   the correlation between the cost of a locally optimal tour and its average distance to
other locally optimal tours  and
   the correlation between the cost of a locally optimal tour and the distance from that
tour to the best tour in the sample 
the distance between two tsp tours was defined as the total number of edges minus
the number of edges that are common to the two tours  based on the fact that both of
these correlations were surprisingly high  boese conjectured that local optima in the tsp
are arranged in a big valley  adapted from the work of boese et al          figure  
gives an intuitive picture of the big valley  in which the set of local minima appears convex
with one central global minimum  boese et al          we offer a more formal definition
of a big valley landscape in   
boeses analysis has been applied to other combinatorial problems  kim   moon        
including the permutation flow shop scheduling problem  watson  barbulescu  whitley   
howe        reeves   yamada        and the jsp  nowicki   smutnicki         correlations observed for the jsp are generally weaker than those observed for the tsp 
in a related study  mattfeld        examined cost distance correlations in the famous
jsp instance ft    beasley        and found evidence of a massif central      where many
near optimal solutions reside laying closer together than other local optima    contains
related results on the backbone size of ft   
    backbone size
the backbone of a problem instance is the set of variables that are assigned a common value
in all globally optimal solutions of that instance  for example  in the boolean satisfiability
problem  sat   the backbone is the set of variables that are assigned a fixed truth value
in all satisfying assignments  in the jsp  the backbone has been defined as the number of
disjunctive edges       that have a common orientation in all globally optimal schedules
 a formal definition is given in    
there is a large literature on backbones in combinatorial optimization problems  including many empirical and analytical results  slaney   walsh        monasson  zecchina 
   

fistreeter   smith

figure    an intuitive picture of a big valley landscape 
kirkpatrick  selman    troyansky         in an analysis of problem difficulty in the jsp 
watson et al         present histograms of backbone size for random  x     job    machine 
and  x     job    machine  jsp instances  summarizing experiments not reported in their
paper  watson et al  note that for  job machine ratios         the bias toward small backbones becomes more pronounced  while for ratios      the bias toward larger backbones
is further magnified    generalizes these observations and proves two theorems that give
insight into why this phenomenon occurs 
    statistical mechanical analyses
a large and growing literature applies techniques from statistical mechanics to the analysis
of combinatorial optimization problems  martin  monasson    zecchina         at least
one result obtained in this literature concerns clustering of low cost solutions  in a study of
the tsp  mezard and parisi        obtain an expression for the expected overlap  number
of common edges  between random tsp tours drawn from a boltzmann distribution  they
show that as the temperature parameter of the boltzmann distribution is lowered  placing
more probability mass on low cost tsp tours   expected overlap approaches       though
we do not use a boltzmann weighting    of this paper examines how expected overlap
between random jsp schedules changes as more probability mass is placed on low makespan
schedules 
    phase transitions and the easy hard easy pattern
loosely speaking  a phase transition occurs in a system when the expected value of some
statistic varies discontinuously  asymptotically  as a function of some parameter  as an
example  for any      it holds that random instances of the   sat problem are satisfiable
with probability asymptotically approaching   when the clause to variable ratio   m
n   is   
but are satisfiable with probability approaching   when the clause to variable ratio is      
a similar statement is conjectured to hold for   sat  the critical value k of m
n  if it exists 
must satisfy       k        achlioptas   peres        
for some problems that exhibit phase transitions  notably   sat   average case instance
difficulty  for typical solvers  appears to first increase and then decrease as one increases
the relevant parameter  with the hardest instances appearing close to the threshold value
   

fithe landscape of random job shop scheduling instances

 a  jsp instance

j   

j  

j   

j     j  









j   

j   


 b  jsp schedule

j   

j   

j   





j  





j  

j   



 time

 c  disjunctive

graph




j  

j   

j   

j   

j   
j   



j   
o 

o

j  


j    j   



j   


j   


j   

figure     a  a jsp instance 

 b  afeasibleschedule for the instance  and  c  the disjunctive graph representation of the schedule  boxes represent operations  operation
durations are proportional to the width of a box  and the machine on which an
operation is performed is represented by texture  in  c   solid arrows represent
conjunctive arcs and dashed arrows represent disjunctive arcs  arc weights are
proportional to the duration of the operation the arc points out of  

 cheeseman  kanefsky    taylor        yokoo         this phenomenon has been referred
to as an easy hard easy pattern of instance difficulty  mammen   hogg         in    
we discuss evidence of an easy hard easy pattern of instance difficulty in the jsp  though
 to our knowledge  it is not associated with any phase transition 
the results in     and the empirical results in   were previously presented in a conference paper  streeter   smith      a  

   the job shop scheduling problem
we adopt the notation  n                  n  
    problem definition
definition  jsp instance   an n by m jsp instance i    j    j             j n   is a set of n
k   is a sequence of m operations  each operation
jobs   where each job j k    j k   j k           jm
k
o   ji has an associated duration   o       max   and machine m o    m    we require
that each job uses each machine exactly once  i e   for each j k  i and m   m    there is
exactly one i   m   such that m jik     m   we define
   ops i    jik   k   n    i   m    
     j k   

pm

k
i     ji   

and
   

fistreeter   smith

   the job predecessor j  jik   of an operation jik as
j  jik  




k
ji 
o

if i    
otherwise

where o is a fictitious operation with   o       and m o   undefined 
definition  jsp schedule   a jsp schedule for an instance i is a function s   ops i  
   that associates with each operation o  ops i  a start time s o   operation o is performed
on machine m o  from time s o  to time s o      o   preemption is not allowed   we make
the following definitions 
   the completion time of an operation o is s    o   s o      o  
   the machine predecessor m o  of an operation o  ops i  is

m o  

arg maxooprev  o  s o 
o

if oprev  o     
otherwise 

where oprev  o     o  ops i    m o    m o   s o    s o   is the set of operations
scheduled to run before o on os machine 
   s is a feasible schedule if s o   max s    j  o    s    m o    o  ops i  
   the quantity
  s   max s    o 
oops i 

is called the makespan of s 
we consider the makespan minimization version of the jsp  in which the goal is to find
a schedule that minimizes the makespan 
for the remainder of the paper  whenever we refer to a jsp schedule s we shall adopt
the convention that s o       and we shall assume that
s o    max s    j  o    s    m o    o  ops i 

     

 i e   s is a so called semi active schedule  french         in other words  we ignore schedules
with superfluous idle time at the start of the schedule or between the end of one operation
and the start of another 
figure    a  and  b  depict  respectively  a jsp instance and a feasible schedule for
that instance 
    disjunctive graphs
a schedule satisfying       can be uniquely represented by a weighted  directed graph called
its disjunctive graph  in the disjunctive graph representation of a schedule s for a jsp
instance i  each operation o  ops i  is a vertex and a directed edge  o    o    indicates that
operation o  completes before o  starts 
   

fithe landscape of random job shop scheduling instances

definition  disjunctive graph   the disjunctive graph g   g i  s  of a schedule s for
  w  defined as follows 
a jsp instance i is the weighted  directed graph g    v  e 
 v   ops i    o   o    where o  like o   is a fictitious operation with   o       and
m o   undefined 
   c
   d 
  where
 e

 
      j  o   o    o  ops i    j k   o     k   n   is called the set of conjunctive
 c
m
arcs  which specify that o cannot start until j  o  completes   and
      o    o       o    o     ops i   m o      m o     s o      s o     is called the set
 d
of disjunctive arcs  which specify  for each pair of operations performed on the
same machine  which of the two operations is to be performed first  
 w  o    o         o    
figure    c  depicts the disjunctive graph for the schedule depicted in figure    b  
the connection between a schedule and its disjunctive graph is established by the following
proposition  roy   sussmann        
proposition    let s be a feasible schedule for i satisfying        and let g   g i  s  be
the corresponding disjunctive graph  then   s  is equal to the length of the longest weighted
path from o to o in g 
proof  for any operation o  let l o  denote the length of the longest weighted path from
o to o in g  it suffices to show that for any o  ops i   s o    l o   this follows by
induction on the number of edges in the path  with the base case s o     l o       
the undirected version of a disjunctive arc is called a disjunctive edge 
definition  disjunctive edge   let i be a jsp instance  a disjunctive edge is a set
 o    o     ops i  with m o      m o     we define the following notation 
 e i  is the set of disjunctive edges for i 
 let s be a schedule for i and let e    o    o    be a disjunctive edge  we denote by
 e s  the unique arc in   o    o      o    o     that appears in the disjunctive graph g i  s 
 this arc is called the orientation of e in s  
we measure the distance between two schedules s  and s  for a jsp instance i by
counting the number of disjunctive edges that are oriented in opposite directions in g i  s   
and g i  s    
definition  disjunctive graph distance   the disjunctive graph distance ks   s  k
between two schedules s  and s  for a jsp instance i is defined by
ks   s  k    e  e i     e s        e s       
   

fistreeter   smith

    random schedules and instances
we define a uniform distribution over jsp instances as follows  our distribution is identical
to the one used by taillard        
definition  random jsp instance   a random n by m jsp instance i is generated as
follows 
   let                 n be random permutations of  m   
   let g be a probability distribution over     max   with mean  and variance        
   define i    j     j             j n    where m jik     k  i  and each   jik   is drawn  independently at random  from g 
note that this definition  and likewise  our theoretical results  assumes a maximum
operation duration max   but makes no assumptions about the form of the distribution of
operation durations  for the empirical results reported in this paper  we choose operation
durations from a uniform distribution over                     
our proofs will frequently make use of priority rules  a priority rule is a greedy schedulebuilding algorithm that assigns a priority to each operation and  at each step of the greedy
algorithm  assigns the earliest possible start time to the operation with minimum priority 
definition  priority rule   a priority rule  is a function that  given an instance i and
an operation o  ops i   returns a priority  i  o      the schedule s   s   i  associated
with  is defined by the following procedure 
   u nscheduled  ops i   s o      
   while  u nscheduled      do 
 a  ready   o  u nscheduled   j  o  
  u nscheduled  
 b  o  the element of ready with least priority 
 c  s o   max s    j  o    s    m o    
 d  remove o from u nscheduled 
a priority rule is called instance independent if  for any n by m jsp instance i and
integers k   n    i   m    the value  i  jik   depends only on k  i  n   and m  
we obtain a random schedule by assigning random priorities to each operation  the
resulting distribution is equivalent to the one used by mattfeld        
definition  random schedule   a random schedule for an n by m jsp instance i is
generated by performing the following steps 
   create a list l containing m occurrences of the integer k for each k   n    we think
of the m occurrences of k as representing the operations in the job j k   
   shuffle l  obtaining each permutation with equal probability  
   return the schedule s rand   i  where rand  i  jik     the index of the ith occurrence
of k in l 
   

fithe landscape of random job shop scheduling instances

   number of common attributes as a function of makespan
the backbone of a jsp instance is the set of disjunctive edges that have a common orientation in all schedules whose makespan is globally optimal  for      we define the
 backbone to be the set of disjunctive edges that have a common orientation in all schedules whose makespan is within a factor  of optimal  a related definition appears in slaney
  walsh        
definition   backbone   let i be a jsp instance with optimal makespan  min  i   for
     let  opt i    s     s      min  i   be the set of schedules whose makespan is
within a factor  of optimal  then
 backbone i    e  e i     e s       e s     s    s      opt i    
in this section we compute the expected value of   backbone  as a function of  for
random n by m jsp instances  and examine how the shape of this curve changes as a
n
function of m
 
    computing the  backbone
to compute the  backbone we use the following proposition 
proposition    let i be a jsp instance with optimal makespan  min  i   let e    o    o   
be a disjunctive edge with orientations a     o    o    and a     o    o     for any disjunctive
arc a  let  min  i a  denote the optimum makespan among schedules whose disjunctive graph
contains the arc a  then
e   backbone i   max   min  i a      min  i a         lmin  i   
proof  if e   backbone  then e must have a common orientation  say a    in all schedules
s with   s      min  i   which implies  min  i a         min  i   if e 
   backbone  then
there must be some  s    s      opt i  with  e s      a  and  e s      a    which implies
max  min  i a      min  i a         min  i  

thus to compute  backbone i  we need only to compute  min  i a  for the  m n 
possible choices of a  given a disjunctive arc a  we compute  min  i a  using branch and
bound  in branch and bound algorithms for the jsp  nodes in the search tree represent
choices of orientations for a subset of the disjunctive edges  by constructing a root search
tree node that has a as a fixed arc  we can determine  min  i a   we use a branch and bound
algorithm due to brucker et al         because it is efficient and because the code for it is
freely available via orsep  brucker  jurisch 
  sievers        


n
computing  min  i a  for the  m   possible choices of a requires only     m n  runs
of branch and bound  the first run is used to find a globally optimal schedule 
which gives

n
n
the value of  min  i a  for m   possible choices of a  namely  the m   disjunctive arcs
that are
 present in the globally optimal schedule   a separate run is used for each of the
m n  remaining choices of a 
figure   graphs the fraction of disjunctive edges that belong to the  backbone as a
function of  for instance ft    a    job     machine instance  from the or library  beasley 
   

fistreeter   smith

instance ft  
normalized   backbone 

 
   
   
   
   
 
    

    

    

    

    

    

    



figure    normalized   backbone  as a function of  for or library instance ft   
       note that by definition the curve is non increasing with respect to   and that the
curve is exact for all   it is noteworthy that among schedules whose makespan is within a
factor       of optimal      of the disjunctive edges have a fixed orientation  we will see
n
that this behavior is typical of jsp instances with m
    
    results
we plotted   backbone  as a function of  for all instances in the or library having    or
fewer jobs and    or fewer machines  the results are available online  streeter   smith 
    b   inspection of the graphs revealed that the shape of the curve is largely a function
of the job machine ratio  to investigate this further  we repeat these experiments on a large
number of randomly generated jsp instances 
we use randomly generated instances with   different combinations of n and m to study
n
n
instances with m
equal to       or    for m
    we use  x    x   and  x  instances  for
n
n
 
 
we
use
 x 
and
  x 
instances 
and
for
m
m     we use  x  and   x  instances  we
generate      random instances for each combination of n and m  
figure   parts  a    b   and  c  graph the expected fraction of edges belonging to the
n
 backbone as a function of  for each combination of n and m   grouped according to m
 
n
figure    d  compares the curves for different values of m   and plots the      and     
quantiles  for the purposes of this study the two most important observations about figure
  are as follows 
 the curves depend on both the size of the instance  i e   n m   and the shape  i e  
n
n
m    of these two factors  m has by far the stronger influence on the shape of the
curves 
 for all values of   the expected fraction of edges belonging to the  backbone decreases
n
as m
increases 
   

fithe landscape of random job shop scheduling instances

 a  job machine ratio    

 b  job machine ratio    
 

   

e frac  edges in  backbone 

e frac  edges in  backbone 

 

 x  instances
 x  instances

   

 x  instances
   

   

   

 x  instances
  x  instances

   
   
   
 

 
 

   

   



   

   

 

   

   

   

   

   



 c  job machine ratio    

 d  comparison

 

 

   

frac  edges in  backbone

e frac  edges in  backbone 

   

 x  instances

   

  x  instances

   
   
 

   

 x  instances
  x  instances

   

  x  instances
   

   

 

 

   

   

   

   

   



 

   

   



   

   

   

figure    expected fraction of edges in  backbone as a function of  for random jsp
n
instances  graphs  a    b   and  c  depict curves for random instances with m
        and    respectively  graph  d  compares the curves depicted in  a    b  
and  c   only the curves for the largest instance sizes are shown in  d    in  d  
top and bottom error bars represent      and      quantiles  respectively 

   

fistreeter   smith

    analysis
we now give some insight into figure   by analyzing two limiting cases  we prove that as
n
m    the expected fraction of disjunctive edges that belong to the backbone approaches
n
   while as m
 this expected fraction approaches   
n
intuitively  what happens is as follows  as m
   i e   n is held constant and m  
each of the jobs becomes very long  individual disjunctive edges then represent precedence
relations among operations that should be performed very far apart in time  for example 
if there are        machines  and so each job consists of        operations   a disjunctive
edge might specify whether operation       of job a is to be performed before operation
      of job b  clearly  waiting for job b to complete       of its operations before allowing
job a to complete     of its operations is likely to produce an inefficient schedule  thus 
orienting a single disjunctive edge in the wrong direction is likely to prevent a schedule
from being optimal  and so any particular edge will likely have a common orientation in all
globally optimal schedules 
n
in contrast  when m
  it is the workloads of the machines that become very long 
the order in which the jobs are processed on a particular machine does not matter much as
long as the machine with the longest workload is kept busy  and so the fact that a particular
edge is oriented a particular way is unlikely to prevent a schedule from being optimal  all
of this is formalized below 
we will make use of the following well known definition 
definition  whp   a sequence of events n occurs with high probability  whp  if limn
p n       
lemma   and theorem   show that for constant n   a randomly chosen edge of a random
n by m jsp instance will be in the backbone whp  as m    lemma   and theorem  
show that for constant m   a randomly chosen edge of a random n by m jsp instance will
not be in the backbone whp  as n   
lemma    let i be a random n by m jsp instance  and let s   s   i  be the schedule
for i obtained using some instance independent priority rule   for an arbitrary job j  i 
define sj  s    jm      j   then e sj   is o n   
proof  we assume n     and m      the generalization to larger n is straightforward 
while the cases n     and m     are trivial  let i    j     j     and let j   j    
let t    o    o            on m   be the sequence of operations selected from ready  in line
  b  of the definition of a priority rule in      in constructing s  we say that an operation
ji  overlaps with an operation jj  if
   jj  appears before ji  in t   and
     s    j         j           
    s jj     s    jj       s    ji 
i 
i

if additionally m ji      m jj     we say that ji  contends with jj    intuitively  if o  ji 
overlaps with o   jj  then the start time of o might have been delayed because os machine
was being used by o    if o contends with o    then the start time of o actually was delayed 
   

fithe landscape of random job shop scheduling instances

let i j  resp  i j   be an indicator for the event that ji  overlaps  resp  contends  with
 
 
 
let
s ci   jj   i j      be the set of operations in j that ji overlaps with  then
 ci  i   i ci        thus

jj   

x
i

 ci    

x
i

 ci  

 

ci     

i   i

x
i

 ci 

 

ci      m  

     

i   i

let i   in m   be a random n by m    jsp instance  and define i j   i j   and ci
analogously to the above  then for i  j  m    




p i j     m ji      m jj      p i j      
this is true because p i j      is a function of the joint distribution of the operations in
the set  ji     i    i    jj     j     j   and  as far as this joint distribution is concerned 
conditioning on the event m ji      m jj    is like deleting the operations that use the
machine m ji    
h
i


 
 
 
 
p i j     m ji      m jj      m
p i j       m
e i j  
thus e  i j     p  i j        m
therefore 
pm   pm  
pm pm
j   e i j  
i  
j   e i j       
i  
  pm   pm  
      m i  
j   e i j  
  pm  
      m i   e  ci   
 
where in the last step we have used        it follows that e sj     max  max is the
maximum operation duration defined in     when we consider arbitrary n   we get e sj   
 max  n     
as a corollary of lemma    we can show that a simple priority rule      almost surely
n
   
generates an optimal schedule in the case m
definition  priority rule      given an n by m jsp instance i  let k    arg maxk n  
  j k   be the index of the longest job  the priority rule   first schedules the operations in

j k   then schedules the remaining operations in a fixed order 

i
if k   k 
k
   i  ji    
m k   i otherwise 
corollary    let i be a random n by m jsp instance  then for fixed n   it holds
whp  as m    that the schedule s   s     i  is optimal and has makespan   s   
maxk n     j k   
proof  define the priority rule k by k  i  jik     i if k   k  m k   i otherwise  then k is
instance independent  and   is equivalent to k   thus for any j  i we have
e j    

x

e jk     o n    

k

   

fistreeter   smith

s  i 

where we define j  j
  and the second step uses lemma    by markovs inequal 
 
ity  j   m   j  i whp  by the central limit theorem  each
   j  is asymptotically
normally distributed with mean m and standard deviation  m   it follows that whp 
 



  j k      j k     m   k    k    this implies   s      j k    because   j k   is a lower
bound on the makespan of any schedule  the corollary follows 
theorem    let i be a random n by m jsp instance  and let e be a randomly selected
element of e i   then for fixed n   it holds whp  as m   that e    backbone i  
proof  let e    ji   jj    with i  j and let a    jj    ji    by proposition   and corollary   
it suffices to show that whp  all disjunctive graphs containing a contain a path from o to
o with weighted length   maxk n     j k   
 

assume j  i  m    this holds whp because both i and j are selected uniformly at
random from  m     and consider the path
p    o   j     j             jj    ji   ji             jm   o  
 

which passes through  p      m  m   vertices and has weighted length w p    we want
to show that w p     maxji   j  whp  by the central limit theorem      for any fixed
i and j  w p
p  is asymptotically normally distributed with mean   p       and standard
deviation    p       and     for each 
j    j  is asymptotically normally distributed
with mean m and standard deviation  m   that w p     maxji   j  whp follows by
chebyshevs inequality 
n
   a simple priority rule     almost surely generates
lemma   shows that as m
a schedule in which no machine is idle until all the operations performed on that machine
have been completed  a schedule with this property is clearly optimal  

definition  priority rule     given an n by m jsp instance i  the priority rule 
first schedules the first operation of each job  taking the jobs in order of ascending indices  
then the second operation of each job  and so forth  it is defined by   i  jik     in   k 
lemma    let i be a random n by m jsp instance  then for fixed m   it holds whp  as
n    that the schedule s   s    i  has the property that
s o    s    m o   o  ops i   
proof  suppose that when executing  we replace the line s o   max s    j  o   
s    m o     line   c  in the definition of a priority rule given in      with s o   s    m o   
if the resulting s is feasible then the replacement must have had no effect  thus it suffices
to show that the resulting s is feasible whp  equivalently  we want to show that whp 
s o   s    j  o   o  ops i  when s is constructed using the modified version of line  
 c  
let ops    i     jik  ops i    i      be the set of operations that are not first in their
job  it suffices to show that s o   s j  o    max o  ops    i   to this end  consider
an arbitrary operation o   jik  ops    i   under    the number of operations with lower
   

fithe landscape of random job shop scheduling instances

priority than o is  i    n    k      the number of operations that have lower priority
 
than jik and run on machine m o  is  in expectation  equal to m
  i     n        k     
 where the switch from n to n    is due to the fact that o is the only operation in job j k
that uses machine m o    it follows that
e s o    


  i     n        k     
m

so that
k
     
e s o   s j  o      e s jik    s ji 

n  
 
m

in appendix a we use a martingale tail inequality to establish the following claim 
claim      with high probability  for all o  ops    i  we have
 
s o   s j  o    e s o   s j  o     
 
the lemma then follows from the fact that    e s o   s j  o      max for n sufficiently
large 
based on the results of computational experiments  taillard        conjectured that as
  the optimal makespan is almost surely equal to the maximum machine workload 
the following corollary of lemma   confirms this conjecture 
n
m

corollary    let i be a random n by m jsp instance with optimal makespan  min  i  
let   m      o  ops i    m o    m   denote the workload of machine m  then for fixed
m   it holds whp  as n   that  min  i    maxm m     m  
theorem    let i be a random n by m jsp instance  and let e be a randomly selected
element of e i   then for fixed m   it holds whp  as n   that e 
    backbone i  
proof  let e    ji   jj     remove both j and j   from i to create an n    by m instance
 which comes from the same distribution as a random n    by m jsp instance  lemma
i 
  shows that whp there exists an optimal schedule s for i with the property described in
the statement of the lemma 
   m o    m   denote the workload of machine m in the
let   m      o  ops i 

instance i  by the central limit theorem  each
   m  is asymptotically normally distributed
with mean  n    and standard deviation  n     it follows that whp     m   m      
 
n   m    m   
thus whp there will be only one machine still processing operations during the interval
 
   s   n       s    because max   j     j       m max   o     we can use this interval
to construct optimal schedules containing the disjunctive arc  ji   jj    as well as optimal
schedules containing the disjunctive arc  jj    ji   
   

fistreeter   smith

   clustering as a function of makespan
in this section we estimate the expected distance between random schedules whose makespan
is within a factor  of optimal  as a function of  for various combinations of n and m   we
n
then examine how the shape of this curve changes as a function of m
  more formally  if
 i is a random n by m jsp instance with optimal makespan  min  i  
  opt i    s     s      min  i    and
 s  and s  are drawn independently at random from  opt i  
we wish to compute e ks   s  k  
note that the experiments of   provide an upper bound on this quantity 
 
n
 e    backbone  
e  ks   s  k   m
 
but provide no lower bound  a low backbone size is not evidence that the mean distance
between global optima is large   the experiments in this section can be viewed as a test of
the degree to which the upper bound provided by   is tight 
    methodology
we generate random samples from  opt i  by running the simulated annealing algorithm
of van laarhoven et al         until it finds such a schedule  more precisely  our procedure
for sampling distances is as follows 
   generate a random n by m jsp instance i 
   using the branch and bound algorithm of brucker et al          determine the optimal
makespan of i 
   perform k runs  r    r            rk   of the van laarhoven et al         simulated annealing
algorithm  restart each run as many times as necessary for it to find a schedule whose
makespan is optimal 
   for each                                 find the first schedule  call it si     in each run
ri whose makespan is within a factor  of optimal  for each of the k  pairs of
runs  ri   rj    add the distance between si    and sj    to the sample of distances
associated with  
we ran this procedure on random jsp instances for the same   combinations of n and
m that were used in      for the smallest instance sizes for each ratio  i e    x    x  and
 x  instances  we generate     random jsp instances and run the procedure with k       
setting k       allows us to measure the variation in instance specific expected values  for
the other   combinations of n and m   performing        simulated annealing runs is too
computationally expensive  so we instead generate      random jsp instances and run the
procedure with k     
   

fithe landscape of random job shop scheduling instances

figure    a    b   and  c  plot the expected distance between random  optimal schedn
ules as a function of  for each of the three values of m
  figure    d  shows the     
and      quantiles of the     instance specific sample means for each of the three smallest
instance sizes  examining figure    d   we see that the variation among random instances
with the same n and m is small relative to the differences between the curves for different
n
values of m
 
    discussion
by examining figure   we see that for any   the expected distance between random n
optimal schedules increases as m
increases  indeed  global optima are dispersed widely
n
n
throughout the search space for m
     and this is true to a lesser extent for m
    
an immediate implication of figure   is that whether or not they exhibit the two
correlations that are the operational definition of a big valley  typical landscapes for jsp
n
    cannot be expected to be big valleys in the sense of having a central
instances with m
cluster of optimal or near optimal solutions  if anything  one might posit the existence of
multiple big valleys  each leading to a separate global optimum  the next section expands
upon these observations 

   the big valley
in this section we define some formal properties of a big valley landscape  conduct experiments to determine the extent to which random jsp instances exhibit these properties as
n
n
n
we vary m
  and present analytical results for the limiting cases m
   and m
  
considering again the intuitive picture given in figure    we take the following to be
necessary  though perhaps not sufficient  conditions for a function f  x  to be a big valley 
   small improving moves  if x is not a global minimum of f   there must exist a nearby
x  with f  x      f  x  
   clustering of global optima  the maximum distance between any two global minima
of f is small 
note that there is no direct relationship between these two properties and the cost distance
correlations considered by boese et al         
    formalization
the following four definitions allow us to formalize the notion of a big valley landscape 
definition  neighborhood nr    let i be an arbitrary jsp instance  and let u be the set
of all schedules for i  let r be a positive integer  the neighborhood nr   u   u is defined
by
nr  s    s    u   ks  s   k  r   
definition  local optimum l s  n     let i and u be as above  let n   u   u be
an arbitrary neighborhood function  and let s be a schedule for i  l s  n   is the schedule
returned by the following procedure  which finds a local optimum by performing next descent
starting from s using the neighborhood n   
   

fistreeter   smith

 a  job machine ratio    

 b  job machine ratio    
   

e dist  between schedules 

e dist  between schedules 

   
   
   
   

 x  instances
 x  instances

   

 x  instances
 

   
   
   

 x  instances

   

  x  instances

 
 

   

   

   

   

   

 

   

   



 c  job machine ratio    

   

   

 d  comparison

   

   

e dist  between schedules 

e dist  between schedules 

   



   
   
   

 x  instances

   

  x  instances

   
   
   

 x  instances
 x  instances

   

 x  instances
 

 
 

   

   

   

   

   

 

   

   

   

   

   





figure    expected distance between random schedules within a factor  of optimal  as a
function of   graphs  a    b   and  c  depict curves for random instances with
n
m         and    respectively  graph  d  compares the curves depicted in  a  
 b   and  c   only the curves for the smallest instance sizes are shown in  d    in
 d   top and bottom error bars represent      and      quantiles  respectively 
of instance specific sample means 

   

fithe landscape of random job shop scheduling instances

 a  an  r   valley

 b  three  r   valleys

r

r

r

r









figure    two landscapes comprised of  r    valleys   a  is a single  r    valley  for the
values of r and  shown in the figure   while  b  can either be viewed as three
distinct  r    valleys or as a single  r       valley   the values of r shown in the
figure are slightly larger than necessary  

   let n  s     s    s            s n  s      where the elements of n  s  are indexed in a fixed
but arbitrary manner  
   find the least i such that   si       s   if no such i exists  return s  otherwise set
s  si and go to   
definition   r    valley   let i and u be as above  and let r and  be non negative
integers  a set v  u is an  r    valley if v has the following two properties 
   for any s  v   the schedule l s  nr   is in v and is globally optimal 
   for any two globally optimal schedules s  and s  that are both in v   ks   s  k   
figure   illustrates the definition of an  r    valley  we would say that the landscape
depicted in figure    a  is a big valley  while that depicted in    b  is comprised of three
big valleys 
definition   r    p  landscape   let i and u be as above  and let s be a random schedule
for i  then i has an  r    p  landscape if there exists a v  u such that
   v is an  r    valley  and
   p s  v    p 



any jsp instance trivially has an  m n    m n       landscape  because if r   m n 

then nr includes all possible schedules   if a jsp instance i has an  r  m n       landscape 
then a globally optimal schedule for i can always be found by starting at a random schedule
and applying next descent using the neighborhood nr  
we say that a jsp instance i has a big valley landscape if i has an  r    p  landscape for
small r and  in combination with p near    in contrast  if we have small r in combination
with p near   but require large   we say that the landscape consists of multiple big valleys 
   

fistreeter   smith

    neighborhood exactness
in this section we seek to determine the extent to which random jsp instances have the
small improving moves property  we require the following definition 
definition  neighborhood exactness   let i  u   and n be as above  and let s be a
random schedule for i  the exactness of the neighborhood n on the instance i is the
probability that l s  n   is a global optimum 

if the exactness of nr is p  then i has an  r  m n    p  landscape  let v consist of all
schedules s such that l s  n   is a global optimum   we will estimate the expected exactness
of nr as a function of r for various combinations of n and m   by examining the resulting
curves  we will be able to draw conclusions about the extent to which the landscapes of a
random n by m jsp instance typically has the small improving moves property  we can
n
then determine how the presence or absence of this property depends on m
 

for fixed n and m   we compute the expected exactness of nr for    r  m n  by
repeatedly executing the following procedure 
   generate a random n by m jsp instance i 
   using the algorithm of brucker et al          compute the optimal makespan of i 
   repeat k times 
 a  s  a random feasible schedule  r     opt  f alse 
 b  while opt   f alse do 
 s  l s  nr   
 if s is a global optimum  opt  true 
 record the pair  r  opt  
 r  r     
 c  for all r  such that r  r   m

n
 



record the pair  r    true  

the pairs recorded by the procedure  in step   c  and the third bullet point of    b  
are used in the obvious way to estimate expected exactness  specifically  for each r the
estimated expected exactness of nr is the fraction of pairs  r  x  for which x   true 
the implementation of the first bullet point in step    b  deserves further discussion  to
determine l s  nr    each step of next descent must be able to determine the best schedule
in  s     ks s   k  r   for large r it is impractical to do this by brute force  instead we have
developed a radius limited branch and bound algorithm that  given an arbitrary center
schedule sc and radius r  finds the schedule arg min s    ksc s   kr    s      our radius limited
branch and bound algorithm uses the branching rule of balas        combined with the
lower bounds and branch ordering heuristic of brucker et al         
   

fithe landscape of random job shop scheduling instances

    results
n
we use three combinations of n and m with m
       x     x    and  x   instances   three
n
n
combinations with m       x    x   and  x  instances  and two combinations with m
  
   x  and   x  instances   for the smallest instance sizes for each ratio  i e    x     x  
and   x  instances  we generate     random jsp instances and run the above procedure
with k        otherwise  we generate      random jsp instances and run the procedure
with k     

figure    a    b   and  c  plot expected exactness as a function of neighborhood radius
n
 normalized by the number of disjunctive edges  for each of these three values of m
  figure
   d  shows the      and      quantiles of the     instance specific sample means for each
of the three smallest instance sizes 
    discussion
examining figure    we see that for any normalized neighborhood radius  the neighborhood
n
exactness is lowest for instances with m
    and higher for the two more extreme ratios
 
n
n
  m     and m       if we view neighborhood exactness as measuring the smoothness
of a landscape  the data suggest that typical jsp landscapes are least smooth at some
n
n
n
intermediate value of m
  but become more smooth as m
   or m
   this in
itself suggests an easy hard easy pattern of typical case instance difficulty in the jsp  a
phenomenon explored more fully in the next section 
using the methodology of      we found that the expected proportions of backbone
edges for  x     x    and  x   instances are             and       respectively  while the
expected distance between global optima was      in all three cases  in contrast  the
expected proportions of backbone edges for   x  and   x  instances are near zero  while
the expected distances between global optima are      and       respectively  we conclude
that landcapes of random n by m jsp instances typically have the clustering of global
n
n
optima property for m
     but not for m
     however  figure   suggests that the small
n
n
improving moves property is present for both m
     and m
     accordingly  we would
n
 
n
say that typical landscapes for m     are big valleys  while for m
    the landscape is
comprised of many big valleys rather than just one 
n
the data from     show that for m
     typical landscapes have the clustering of
global optima property  examining figure    b   we see that we are able to descend from
a random schedule to a globally optimal schedule with probability    when the  normalized 
neighborhood radius is about     for this reason  we think of the landscapes of random
n
jsp instances with m
    as having the small improving moves property to some extent 
this  in combination with the curve in figure    a   which shows expected distance between
random  optimal schedules as a function of   leads us to say that typical landscapes of
n
random jsp instances with m
    can still be roughly described as big valleys  however 
the valley is much rougher  meaning that larger steps are required to move from a random
schedule to a global optimum via a sequence of improving moves  than for the more extreme
n
values of m
 

table   summarizes the empirical findings just discussed 
   

fistreeter   smith

 a  job machine ratio    

 b  job machine ratio    

 

 
   

 x   instances
   

e exactness 

e exactness 

   

 x   instances

   

 x   instances

 x  instances
   

 x  instances
 x  instances

   
   

   

 

 
 

   

   

 

   

   

   

normalized radius

normalized radius

 c  job machine ratio    

 d  comparison

 

 
   

e exactness 

   

e exactness 

   

  x  instances
   

  x  instances
   

 x   instances

   

 x  instances
   

  x  instances

   

   

 

 
 

   

   

   

 

   

   

   

normalized radius

normalized radius

figure    expected exactness of nr as a function of the  normalized  neighborhood radius
n
r  graphs  a    b   and  c  depict curves for random instances with m
      
   and    respectively  graph  d  compares the curves depicted in  a    b   and
 c   only the curves for the largest instances are shown in  d    in  d   top and
bottom error bars represent      and      quantiles  respectively  of instancespecific exactness 

   

fithe landscape of random job shop scheduling instances

n
m
 
 

n
table    landscape attributes for three values of m
 
clustering
of small
improving
description
global optima  moves 
yes
yes
big valley

 

yes

somewhat

 rough  big valley

 

no

yes

multiple big valleys

    analysis
we first establish the behavior of the curves depicted in figure   in the limiting cases
n
n
m    and m    we then use these results to characterize the landscapes of random
jsp instances using the  r    p  notation introduced in     
n
n
the following two lemmas show that as m
    resp  m
    a random schedule
will almost surely be close to an optimal schedule  the proofs are given in appendix a 
lemma    let i be a random n by m jsp instance  and let s be a random schedule for
i  let s be an optimal schedule for i such that ks  sk is minimal  let f  m   be any
unbounded  increasing function of m   then for fixed n   it holds whp  as m    that
ks  sk   f  m   
lemma    let i be a random n by m jsp instance  let s be a random schedule for i 
and let s be an optimal schedule for i such that ks  sk is minimal  then for fixed m and
      it holds whp  as n    that ks  sk   n     
the following are immediate corollaries of lemmas   and   
corollary    for fixed n   the expected exactness of nf  m   approaches   as m    where
f  m   is any unbounded  increasing function of m  
corollary    for fixed m and       the expected exactness of nn    approaches   as
n   

because the total number of disjunctive edges is m n    these two corollaries imply that
n
n
    resp  m
    the curve depicted in figure   approaches a horizontal line at
as m
a height of   
using lemmas   and    theorems   and   characterize the landscape of random jsp
instances using the  r    p  notation of      before presenting these theorems  a slight
disclaimer is in order  lemmas   and    the proofs of which are fairly involved  indicate
n
n
that in the extreme cases m
   and m
  we can jump from a random schedule to a
globally optimal schedule via a single small move  we strongly believe that in these cases
it is also possible to go from a random schedule to a global optimum by a sequence of many
 smaller  improving moves  although proving this seems difficult  nevertheless  it should
be understood that our theoretical results do not strictly imply the existence of landscapes
like those depicted in figure    where for most starting points there is a sequence of two or
more small improving moves leading to a global optimum  
n
theorem   shows that as m
    a random jsp instance almost certainly has an

 r    p  landscape where r grows arbitrarily slowly as a function of m    is o m n     and
   

fistreeter   smith

n
p is arbitrarily close to    in other words  as m
   the landscape has both the small
improving move s  property and the clustering of global optima property  in contrast 
n
theorem   shows that as m
   a random jsp instance almost surely does not have an
 r    p  landscape unless  is  n      instead  the landscape contains  n     r     valleys 
n
where r is o m n     thus  as m
   the landscape has the small improving move s 
property but not the clustering of global optima property  these analytical results confirm
the trend suggested by figure   and discussed in     

theorem    let i be a random n by m jsp instance  let f  m   be any unbounded 
increasing function of m   for fixed n and       it holds whp  as m    that i has a
 r    p  landscape for r   f  m       m n  and p       
proof  let v be the set of all schedules s such that l s  nr   is a global optimum  it follows
by corollary   that whp  the exactness of i on r is at least p  which means s  v with
probability at least p  it remains to show that v is an  r    valley whp  part   of the
definition of an  r    valley is satisfied by the definition of v   part   follows from theorem
  
theorem    let i be a random n by m jsp instance  and let s be a random schedule for
i  there exists a set v  i    ni   vi of schedules for i such that for fixed m and       v
has the following properties whp 
   s  v  
   vi is an  r    valley with r   n    and      i   n  
   n   n         and
   max s   s   v ks   s  k    n     
proof  let  s    s            sn   be the set of globally optimal schedules for i  and define vi 
 s   l s  n        si    property   holds whp by lemma    property   holds by definition
of vi  
the fact that property   holds whp is a consequence of lemma    recall that lemma
n
  showed that as m
   the priority rule  generates an optimal schedule whp  where
k
  i  ji     in   k  because the indices assigned to the jobs are arbitrary  lemma   also
applies to the priority rule    i  jik     in    k   where  is any permutation of  n    there
are n   possible choices of   let f be the number of choices that fail to yield a globally
optimal schedule  property   can only fail to hold if f  n    but by lemma    e f   is
o   n    hence f   n   whp by markovs inequality 
to establish property    choose permutations   and   that list the elements of  n  
in reverse order  i e      i       n  i  i   n     by lemma    the schedules s   
s      i  and s    s      i  are both globally optimal whp  but for any disjunctive edge
e    j    j     we must have  e s        e s     hence ks   s  k     j  j      i   m j     
  
  
m j        n m 
   n      where we obtain the expression n m 
using the pigeonhole
principle 
   

fithe landscape of random job shop scheduling instances

   quality of random schedules
    methodology
in this section we examine how the quality of randomly generated schedules changes as a
function of the job machine ratio  specifically  for various combinations of n and m   we
estimate the expected value of the following four quantities 
 a  the makespan of a random schedule 
 b  the makespan of a locally optimal schedule obtained by starting at a random schedule
and applying next descent using the n  move operator 
 c  the makespan of an optimal schedule  and
 d  the lower bound on the makespan of an optimal schedule given by the maximum of
the maximum job duration and the maximum machine workload 


x
max max   j   max
  o   
ji

m m  

oops i  m o  m

n
considered in our experiments are those in the set r                        
the values of m
     
 
       s                               we consider all combinations of n and m in the set
n
s  rr sr   where sr    n  m     m
  r  min n  m       max n  m       n m         
for each  n  m    s  we estimate the expected value of  a   resp   b   by generating    
random n by m jsp instances and  for each instance  generating     random schedules
 resp  local optima   we estimate  d  by generating      random jsp instances for each
 n  m    s  for some combinations  n  m    ssmall  s  it was also practical to compute
n
quantity  c   let nr    ssmall  sr   be the number of combinations  n  m   with m
  r for
 
which we computed  c   we chose ssmall so that nr    for r      while n        for each
 
 n  m    ssmall   we estimate  c  using      random jsp instances 

    results
figure   plots the mean values of  a    b   and  c   respectively  against the mean value of
 d   for various combinations of n and m   the data points for each combination of n and
n
m are assigned a symbol based on the value of m
  top and bottom error bars represent     
and      quantiles  respectively  of instance specific sample means  note that the width of
these error bars is small relative to the differences between the curves for different values
n
of m
 
n
examining figure    we see that the set of data points for each value of m
are approximately  though not exactly  collinear  furthermore  in all three graphs the slope of the line
n
formed by the data points with m
  r is maximized when r      and decreases as r gets
further away from    see also figure    a   
to further investigate this trend  we performed least squares linear regression on the set
n
of data points for each value of m
  the slopes of the resulting lines are shown as a function
n
of m in figure    a  
from examination of figure    a   it is apparent that
   

fistreeter   smith

 a  random schedules
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

 b  random local optima
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

 c  optimal schedules
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

figure    expected makespan of  a  random schedules   b  random local optima  and  c 
optimal schedules vs  expected lower bound  for various combinations of n and
n
m  grouped by symbol according to m
   top and bottom error bars represent
     and      quantiles  respectively  of instance specific sample means 
   

fithe landscape of random job shop scheduling instances

 a  results of least squares regression

slope of e makespan 
vs  e lower bound 

 

random schedules
random local optima
optimal schedules

 

 

 
   

 

  

job machine ratio

 b  branch and bound search cost
   

num  tree nodes

     

   

   
   

    
   

   

   

   
   
   

  

   

   
   

   

   
   

 
 

   

    

    

log search space size 

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

    

figure     a  graphs the slope of the least squares fits to the data in figure    a    b  
n
n
and  c  as a function of m
 includes values of m
not depicted in figure      b 
th
graphs the number of search tree nodes     percentile  used by the branch and
bound algorithm of brucker et al         to find an optimal schedule 

   

fistreeter   smith

n
 as the value of m
becomes more extreme  i e   approaches either   or    the expected makespan of random schedules  resp  random local optima  comes closer to
the expected value of the lower bound on makespan  and

 the difference between the expected makespan of random schedules  resp  random
local optima  and the expected value of the lower bound on makespan is maximized
n
at a value of m
   
n
the first of these two observations suggests that as m
approaches either   or   a
random schedule is almost certainly near optimal      contains two theorems that confirm
this 
the second of these two observations suggests that the expected difference between the
makespan of a random schedule and the makespan of an optimal schedule is maximized at a
n
value of m
somewhere in the neighborhood of    this observation is particularly interesting
n
in light of the empirical fact that square instances of the jsp  i e   those with m
     are
harder to solve than rectangular ones  fisher   thompson        
figure    b  graphs the number of search tree nodes    th percentile  required by the
branch and bound algorithm of brucker et al         to optimally solve random n by m
instances  as a function of the log  base     of search space size  we take the size of the
search space for an n by m jsp instance to be the number of possible disjunctive graphs 
m
namely  n         note that some of these disjunctive graphs contain cycles and therefore do
not correspond to feasible schedules  so this expression overestimates the size of the search
space  data points are given for each combination of n and m for which we could afford to
run branch and bound  i e   each combination of n and m for which we computed quantity
n
 c    the data points are grouped into curves according to m
 
examining figure    b   we see that the curves are steepest for the ratios                
n
and    and that the curves are substantially less steep for extreme values of m
such as   
and    thus  at least from the point of view of this particular branch and bound algorithm 
random jsp instances exhibit an easy hard easy pattern of instance difficulty  we discuss
this pattern further in     

    analysis
the following two theorems show that  as
will almost surely be near optimal 

n
m

approaches either   or   a random schedule

theorem    let i be a random n by m jsp instance with optimal makespan  min  i  and
let s be a random schedule for i  then for fixed n and       it holds whp  as m   
that   s          min  i  
proof  the priority rule rand associates a priority with each operation o  ops i   let
the sequence t contain the elements of ops i   sorted in ascending order of priority  the
schedule s   s rand   i  depends only on t   and there are n m   possible choices of t   thus
rand can be seen as choosing at random from a set of n m   instance independent priority
rules  because each of these instance independent priority rules is subject to lemma    rand
is
to lemma   and thus for each j  e sj   is o n    thus e   s    min  i   
palso subject
s
 
j e j     o n    so   s    min  i  does not exceed  min  i     m   whp by markovs
inequality 
   

fithe landscape of random job shop scheduling instances

theorem    let i be a random n by m jsp instance with optimal makespan  min  i  and
let s be a random schedule for i  then for fixed m and       it holds whp  as n   
that   s          min  i  
proof  see appendix a 
the idea behind the proof of theorem   is the following  as shown in lemma    the
priority rule  almost surely generates an optimal schedule  the relevant property of 
was that  when the operations were sorted in order of ascending priority  the number of
operations in between j  o  and o was  n    the key to the proof of theorem   is that in
expectation  rand shares this property for most of the operations o  ops i  
    easy hard easy pattern of instance difficulty
n
n
the proofs of corollary    resp  lemma    show that as m
    resp  m
   there exist
simple priority rules that almost surely produce an optimal schedule  moreover  theorems
  and   show that in these two limiting cases  even a random schedule will almost surely
n
n
have makespan that is very close to optimal  thus  both as m
   and as m
   almost
all jsp instances are easy 
n
in contrast  for m
    figure    a  suggests that random schedules  as well as random
local optima  are far from optimal  the literature on the jsp  as well the results depicted
n
in figure    b   attests to the fact that random jsp instances with m
   are hard 
thus we conjecture that  as in   sat  typical instance difficulty in the jsp follows an easyhard easy pattern as a function of a certain parameter  in contrast to   sat  the easyhard easy pattern in the jsp is not  to our knowledge  associated with a phase transition
n
 i e   we have not identified a quantity that undergoes a sharp threshold at m
    
furthermore  although the empirical results in figures    a  and  b  support the idea
that typical case instance difficulty in the jsp follows as easy hard easy pattern  we
n
do not claim to have isolated any particular value of m
as being the point of maximum
difficulty  as shown in figure    b   random jsp n by m jsp instances are most difficult
n
for the branch and bound algorithm of brucker et  al        when m
    but this may not
be true of other branch and bound algorithms or of jsp heuristics based on local search 
we leave the task of characterizing the easy hard easy pattern more precisely as future
work 
in related work  beck        studied a constraint satisfaction  as opposed to makespanminimization  version of the jsp  and gave empirical evidence that the probability that a
random jsp instance is satisfiable undergoes a sharp threshold as a function of a quantity
called the constrainedness of the instance 

   limitations and extensions
the primary limitation of the work reported in this paper is that both our theoretical and
empirical results apply only to random instances of the job shop scheduling problem  there
is no guarantee that our observations will generalize to instances drawn from distributions
with more interesting structure  watson et al          the difficulty in extending our
analysis to other distributions is that analytical results similar to the ones presented in
   

fistreeter   smith

this paper may become much more difficult to derive  however  there are at least three
distributions that have been studied in the scheduling literature for which we believe it
should be not too difficult to adapt our proofs  the conclusions may change as part of the
adaptation process  
 random workflow jsp instances  in a workflow jsp instance  the set of machines
is partitioned into sets  say m    m            mk    for i   j  each job must use all the
machines in mi before using any machines in mj   mattfeld et al         define
a random distribution over workflow jsps which generalizes in a natural way the
distribution defined in      the difference is that the permutations                 n are
chosen uniformly at random from the set of permutations that satisfy the workflow
constraints  
 random instances of the  permutation  flow shop scheduling problem  an instance of
the flow shop scheduling problem  fsp  is a jsp instance in which all jobs use the
machines in the same order  equivalently  a fsp instance is a workflow jsp instance
with k   m    the permutation flow shop problem  pfsp  is a special case of the fsp
in which  additionally  each machine must process the jobs in the same order  there
is a large literature on the  p fsp  framinan et al         and hejazi and saghafian
       provide relevant surveys 
 job correlated and machine correlated jsp instances  in a job correlated jsp instance 
the distribution from which operation durations are drawn depends on the job to which
an operation belongs  similarly  in machine correlated jsp instance the distribution
depends on the machine on which the operation is performed  watson et al        
have studied job correlated and machine correlated instances of the pfsp 
regarding the difficulty of instances drawn from these three distributions  computational
experience shows that  i  random workflow jsps are harder than random jsps   ii  random pfsps are easier than random jsps  and  iii  job correlated and machine correlated
pfsps are easier than random pfsps  extending our theoretical analysis to each of these
distributions may give some insight into the relevant differences between them 
    the big valley vs  cost distance correlations
in    we defined a big valley landscape as one that exhibits two properties  small improving moves and clustering of global optima  our analytical and experimental results
were based on this definition  although we believe this definition captures properties of jsp
landscapes that are important for designers of heuristics to understand  other properties
 e g   cost distance correlations  are likely to be important as well  in particular  it may be
possible for algorithms to exploit cost distance correlations on landscapes that have neither
the small improving moves nor the clustering of global optima properties 
in the existing literature  the term big valley is used amorphously to mean either
    a landscape like that depicted in figure   or     a landscape that exhibits high costdistance correlations  by making a sharper distinction between these two distinct concepts 
we can only improve our understanding of jsp landscapes as well as the landscapes of other
combinatorial problems 
   

fithe landscape of random job shop scheduling instances

   conclusions
    summary of experimental results
n
empirically  we demonstrated that for low values of the job to machine ratio   m
   lowmakespan schedules are clustered in a small region of the search space and the backbone
n
size is high  as m
increases  low makespan schedules become dispersed throughout the
n
search space and the backbone vanishes  as a function of m
  the smoothness of the
landscape  as measured by a statistic called neighborhood exactness  starts out small for
n
n
n
low values of m
 e g   m
        is relatively high for m
    and becomes small again for
n
n
n
high values of m  e g   m       for both extremely low and extremely high values of m
 
the expected makespan of random schedules comes very close to that of optimal schedules 
the quality of random schedules  resp  random local optima  appears to be the worst at a
n
value of m
   
    discussed the implications of our results for the big valley picture of jsp search
n
    we concluded that a typical landscape can be described as a big
landscapes  for m
n
n
valley  while for larger values of m
 e g   m
    there are many big valleys      discussed
how our data support the idea that jsp instance difficulty exhibits an easy hard easy
n
 
pattern as a function of m

    summary of theoretical results
table   shows the asymptotic expected values of various attributes of a random n by m
n
n
jsp instance in the limiting cases m
   and m
  
table    attributes of random jsp instances 
fixed n   m   fixed m   n  
optimum makespan

max  job length
 corollary   

max  machine workload
 corollary   

normalized backbone size

   theorem   

   theorem   

normalized maximum distance between global optima
normalized distance between random
schedule and nearest global optimum
ratio of makespan of random schedule
to optimum makespan

   theorem   

     theorem   

   lemma   

   lemma   

   theorem   

   theorem   

    rules of thumb for designing jsp heuristics
though we do not claim to have any deep insights into how to solve random instances of
the jsp  our results suggest two general rules of thumb 
n
n
 when m
is low  say  m
   or lower   an algorithm should attempt to locate the
cluster of global optima and exploit it  while

   

fistreeter   smith

n
n
 when m
is high  say  m
    an algorithm should attempt to isolate one or more
clusters of global optima and deal separately with each of them 

we briefly discuss these ideas in relation to two recent algorithms  backbone guided local
search  zhang        and i tsab  nowicki   smutnicki        
      backbone guided local search
several recent algorithms attempt to use backbone information to bias the move operator employed by local search  for example  zhang        describes an approach called
backbone guided local search in which the frequency with which an attribute  e g   an assignment of a particular value to a particular variable in a boolean formula  appears in
random local optima is used as a proxy for the frequency with which the attribute appears in global optima  the approach improved the performance of the walksat algorithm
 selman  kautz    cohen        on large instances from satlib  hoos   stutzle        
a similar algorithm has been successfully applied to the tsp  zhang   looks        to
improve the performance of an iterated lin kernighan algorithm  martin  otto    felten 
       zhang writes 
this method is built upon the following working hypothesis  on a problem
whose optimal and near optimal solutions form a cluster  if a local search algorithm can reach close vicinities of such solutions  the algorithm is effective
in finding some information of the solution structures  backbone in particular 
 zhang        p    
based on the results of      this working hypothesis is satisfied for random jsps with
   or lower  it seems plausible that backbone guided local search could be used to boost
the performance of early local search heuristics for the jsp such as those of van laarhoven
et al         and taillard         whether the results would be competitive with those of
recent algorithms such as i tsab is a separate question  
n
the hypothesis is typically violated for random jsp instances with larger values of m
 
in these cases it makes more sense to attempt to exploit local clustering of optimal and
near optimal schedules 
n
m

      i tsab
nowicki and smutnicki        present a jsp heuristic called i tsab which employs multiple
runs of the tabu search algorithm tsab  nowicki   smutnicki         i tsab employs path
relinking to localize the center of bv  big valley   probably close to the global minimum
 nowicki   smutnicki         in other words  i tsab was designed based on the intuitive
picture depicted in figure    a   which is inaccurate for typical random jsp instances with
n
n
m     note that although random jsp instances become easy as m    instances
n
with m
   are by no means easy  as evidenced by figure    b  
for concreteness  we briefly describe how i tsab works  initially  i tsab performs a
number of independent runs of tsab and adds each best of run schedule to a pool of elite
solutions  it then performs additional runs of tsab and uses the best of run schedules
from these additional runs to replace schedules in the pool of elite solutions  starting points
   

fithe landscape of random job shop scheduling instances

for the additional tsab runs are either  i  random elite solutions or  ii  schedules obtained
by performing path relinking on a random pair of elite solutions  given two schedules s 
and s    path relinking uses a move operator to generate a new schedule that is midway
 in terms of disjunctive graph distance  between s  and s    the pool of elite solutions
can be thought of as a cloud of particles that hovers over the search space and  hopefully 
converges to a region of the space containing a global optimum 
n
for random jsp instances with m
    our results are consistent with the idea that
the cloud of elite solutions converges to the center of the big valley  for random jsp
n
instances with m
    however  the cloud must either converge to one of many big valleys
or not converge at all  as an alternate approach one can imagine using multiple clouds 
with the intention that each cloud specializes on a particular big valley  it seems plausible
that such ideas could improve the performance of i tsab on random jsp instances with
n
larger values of m
 

appendix a  additional proofs
p
for the proofs in this section  we define   o   oo   o   where o is any set of operations 
we make use of the following inequality  spencer        
azumas perimetric inequality  a p i    let x    x    x            xn   be a vector of n independent random variables  let the function f  x  take as input a vector x    x    x            xn   
where xi is a realization of xi for i   n   and produce as output a real number  suppose
that for some      it holds that for any two vectors x and x  that differ on at most one
component 
 f  x   f  x        
then for any      



 
 
p x   e x     n  exp     
 

the same inequality holds for p  x  e x    n  
lemma    let i be a random n by m jsp instance  then for fixed m   it holds whp  as
n    that the schedule s   s    i  has the property that
s o    s    m o   o  ops i   
proof  it remains only to prove claim     from the proof in    which says that whp  for
all o  ops    i  we have
 
s o   s j  o    e s o   s j  o     
 
pick some arbitrary operation o  ops    i   and suppose that the random choices used
to construct i were made in the following order 
   randomly choose m    m o  and m    j  o  
   for k from   to n  
   

fistreeter   smith

 a  randomly choose the order in which job j k uses the machines  if o  j k then
part of this choice has already been made in step    
 b  randomly choose   jik   i   m   
let the random variable xk denote the sequence of random bits used in steps  a  and
 b  of the k th iteration of the loop  define o  s o   s j  o    then  for any fixed choices
of m  and m    o is a function of the n independent events x    x            xn   and it is easy
to check that altering a particular xi changes the value of o by at most  max   thus
h
i


  
p o      e o     p o   e o     n
 m
h
i
n
 p o   e o     m


 
 exp     m n
 
max  
where in the first step we have used the fact  from the proof in    that e o      nm   and
in the last step we have used a p i  taking a union bound over the n  m     operations
in ops    i  proves the claim 

lemma    let i be a random n by m jsp instance  and let s be a random schedule for
i  let s be an optimal schedule for i such that ks  sk is minimal  let f  m   be any
unbounded  increasing function of m   then for fixed n   it holds whp  as m    that
ks  sk   f  m   
proof  let s   s     i   the proof of corollary   showed that for any j  e sj   is o n     
thus it holds whp that sj   log f  m    j  as in the proof of theorem    the procedure
used to produce s is a mixture of instance independent priority rules  each subject to
lemma    thus for any j  e sj   is o n    so whp sj   log f  m    j 
p
p
let onear  ji      jj    j      j    i   i   ji     j    j   jj         log f  m       onear  ji   is
the set of operations that would be scheduled near in time to ji if we ignored the fact
that a machine may only perform one operation at a time   let enear    e    ji   jj    
e i    jj   onear  ji     under the assumptions of the previous paragraph  each of which
hold whp   ks  sk   enear    for any ji   e  onear  ji     is o n log f  m     thus


e ks  sk  e   enear     

x
oops i 


 
e   onear  o      o n   log f  m   
m

so ks  sk   f  m   whp by markovs inequality 
for the purpose of the remaining proofs  it is convenient to introduce some additional
notation  let t    t    t            t t     be a sequence of operations  we define
 t i   i      ti   i    i  i     and
 t im   i      ti  t i   i      m ti     m   
   

fithe landscape of random job shop scheduling instances

lemma    let i be a random n by m jsp instance  let s be a random schedule for i 
and let s be an optimal schedule for i such that ks  sk is minimal  then for fixed m and
      it holds whp  as n    that ks  sk   n     
proof  let t be the sequence of operations o  ops i   sorted in ascending order by priority
rand  i  o   where rand is the random priority rule used to create s   note that for any
o  ops i  with j  o     o   j  o  must appear before o in t   let ti denote the ith operation
in t  
consider the schedule s defined by the following procedure 
   s o    o  ops i  
   q      let qj denote the j th operation in q 
   let the function ready o  return true if s    m o    s    j  o    false otherwise 
   for i from   to n m do 
 a  if ready ti    then set s o   s    m ti     otherwise append ti onto q 
 b  for j from   to  q  do 
i  if ready qj    then set s qj    s    m qj    and remove qj from q 
   schedule any remaining operations of q in a manner to be specified  in the last
paragraph of the proof  
the construction of s is just like the construction of s  except for the manipulations
involving q  the purpose of q is to delay the scheduling of any operation o that  if
scheduled immediately  might produce a schedule in which s o    s    m o    we first
show that ks  sk   n    whp  then we show that s is optimal whp 
let p
qi denote q as it exists after i iterations of step   have been performed  let
nm
i
of iterations during which o  q  we claim that
q o   
i  
p  o  q   be the number
n
m
   letting e       e  e i     e s      e s    we have
ks  sk  oops i  q o     n     q
ks  sk     e  e      e  qn m          e  e      e  qn m      
   e  e      e  qn m         n     qn m  
p
so it suffices to show   e  e      e  qn m      
oops i  q o   to see this  let
 
 
n
m
e    o    o     e be such that e  q
    we must have q o      q o         we charge e
to the operation in  o    o    that was inserted into q first  it is easy to see that an operation
can be charged for at most one edge perpiteration it spends in q  establishing our claim 
thus it suffices to show that ks  sk  oops i  q o     n     qn m    n    whp 
 

 

 

 

we divide the construction of s into n   m n    epochs  each consisting of n    
iterations of step    for a to be specified        let zj denote the number of iterations of
step   that occur before the end of the j th epoch  with zj     for j    by convention  let
m
 cjm  t   z
  qzj be the set of operations that have been scheduled to run on m by
j 

the end of the j th epoch  and
   

fistreeter   smith

s
 onear  j n   o  t zj   zj     j  o   t zj m      zj     be the set of operations whose
job predecessor belongs to a nearby epoch 
 

 

for any i   n m    p ti  onear     m     n        thus for any j   n   e  onear 
 
t zj   zj        m     n     using a p i  it is straightforward to show that whp 
 onear  t zj   zj      n

   
 

j   n   

     

we claim that whp  the following statements hold j   n  
 

qi  onear  

     

izj

j  qzj        j  qzj   qzj      j  qzj   
zj

zjm

q q

 qzj    m n

j  i  

     

     and
   
 

     

 

     

we prove this by induction  where each step of the induction fails with exponentially
small probability  for j            and       hold trivially        is true because the
operations in t   z      onear are the first operations in their jobs  hence cannot be added to
q        then follows from       and       
consider the case j      to show        let o be an arbitrary operation in t zj   zj    onear  
m j  o  

by the induction hypothesis  specifically  equation         j  o   cj 




m j  o  
m o 
    cj 
   cj    by the induction hypothesis 

  thus q o   









   
m o 
m j  o  
m o 
m j  o  
 
 cj    cj 
  t   zj     m n     t   zj   
letting  denote the right hand side of this inequality  we have e    
   
 

 
  
 
 
mn



  and a p i  can be used to show that for some k     independent of n   p   
mn
 
 
    exp  k  n     thus       holds with probability at least    exp  k  n    
to show        let j be such that j  qzj       and let ji  qzj  be
 chosenso that i is
m j  ji   
m j  ji   
m j  
minimal  then j  ji    cj 
  thus ji  qzj   cj 
   cj i   by       
   

       and the induction hypothesis  equation          qzj     m     n     using the same
 
technique as above  we can show that       holds with probability at least    exp  k  n   
for some k     independent of n  
      implies              and       together with       imply        thus whp       
through       hold j   n  
by       and        we have


x
 
 
 
e
q o   e  onear   m n      m    m     n    
oops i 

and also
   

fithe landscape of random job shop scheduling instances

 

e  qn m     e  t znm  zn    onear      m     n  
p
so setting       gives ks  sk  oops i  q o     n     qn m    n    whp 
it remains to show that s is optimal whp  we first prove the following claim 
claim      for any non negative integers a and b  the probability that t a b  contains
two operations from the same job is at most

 ba  
n  

proof of claim      let x denote the number of pairs of operations in t a b  that belong to
 
 ba  
the same job  then p x       e x   ba
  n 
n  
to see that s is optimal whp  note that the operations scheduled prior to step   do not
cause any idle time on any machine  so it is only the operations in qn m that can cause s
to be sub optimal  let   m      o  ops i    m o    m   denote the workload of machine
m  let m   arg maxm m     m   then the following hold whp 
 the set z m  t m
last   it holds

 

consists of operations belonging to jobs that use m

 n m  m n    n m  
whp that z m  z 

where z  t

 

 n m n    n m  

  so if z m contains an

operation from a job that does not use m last  then z must contain two operations
from the same job  but by claim      the probability that this happens is at most
 
 n      n    o     
 

 n      z m   and   z m      m     m  m    m   this follows by applying the
central limit theorem to   z m      m   and   m   
thus whp it holds that prior to the execution of step    s contains a period of length
 
at least   z m    n   during which the only operations being processed are those in z m  
 
where  o  ops i    j  o   z m       assuming  qn m     n    holds whp   we can always
schedule the operations in qn m so as to guarantee   s      m   which implies s is optimal 

theorem    let i be a random n by m jsp instance with optimal makespan  min  i  and
let s be a random schedule for i  then for fixed m and       it holds whp  as n   
that   s          min  i  
proof  as in the proof of lemma    let t be the sequence of operations o  ops i   sorted
in ascending order by priority rand  i  o   where rand is the random priority rule used to
create s   note that for any o  ops i  with j  o     o   j  o  must appear before o in t  
let ti denote the ith operation in t  
rather than analyze s directly  we analyze a schedule s defined by the following procedure 
   t    
   for i from   to n m do 
   

fistreeter   smith

 a  set s ti     max t  s    j  ti     s    m ti      
 b  if s    j  ti      s    m ti     set t   maxi  i s    ti    
the procedure is identical to the one used to construct s  except that  whenever an
operation ti is assigned a start time s ti     s    m ti     the procedure inserts artificial
delays into the schedule in order to re synchronize the machines  for any t   it is clear that
  s     s   thus  it suffices to show that   s          min  i  whp 
we divide the construction of s into n epochs  where each update to t  in step   b   defines the beginning of a new epoch  let zi be the number of operations scheduled before the
end of the ith epoch  with z      by convention  let ti   maxi  zi s    oi    be the  updated 
p
 
 
value of t at the end ofpthe ith epoch  define i  m
m  
ptni  maxi   i m ti    m s  ti   
n
then   s    min  i   i   i   so it suffices to show that i   i   min  i  whp 
p
 
let i p
   n   and let l    i  i   zi  zi   n      we first consider il i   then we
consider ii l i  
 

let i  and i  be arbitrary integers with    i    i   n m and i   i   n     let
i 
  for any t    is a function of the outcome of at most
     t im   i       then e       i m
i   i  events  namely  the definition of each of the jobs in  j   j  t i   i           each of
which alters the value of  by at most max   it follows by a p i  that
 
 

n  
 
p    e       n
i   i       exp   
 max

for any        thus  it holds whp that    e      n  i   i  for all possible choices
 
of i  and i    in particular  whp
we have i   m n  zi  zi   i  l  which implies
p
p
  p
 
 
 
 
 
 m n  n      m n      
il i  n
il
p
now consider
ii l i   as shown in the proof of lemma    claim       for any
non negative integers a and b the probability that t a b  contains two operations from the
 

 

 
same job is at most  ba 
n   thus the probability that an arbitrary subsequence of size n
 
   
contains two operations from the same job is at most n   so e  i   l    n     clearly
p
 
 
i  max n   i  i   l  so e  ii l i   is o n     
p
p
 
 
 
 
thus e  ii i   is o n       for any        so ii i  n      whp  while it is easy
to see that  min  i    n  whp 

references
achlioptas  d     peres  y          the threshold for random k sat is  k log    o k  
journal of the ams             
balas  e          machine sequencing via disjunctive graphs  an implicit enumeration
algorithm  operations research          
beasley  j  e          or library  distributing test problems by electronic mail  journal of
the operational research society                   
   

fithe landscape of random job shop scheduling instances

beck  j  c     jackson  w  k          constrainedness and the phase transition in job
shop scheduling  tech  rep  cmpt       school of computing science  simon fraser
university 
boese  k  d   kahng  a  b     muddu  s          a new adaptive multi start technique for
combinatorial global optimizations  operations research letters             
brucker  p   jurisch  b     sievers  b          job shop  c codes   european journal of operational research              code available at http   optimierung 
mathematik uni kl de orsep contents html 
brucker  p   jurisch  b     sievers  b          a branch and bound algorithm for the
job shop scheduling problem  discrete applied mathematics                  
cheeseman  p   kanefsky  b     taylor  w  m          where the really hard problems are 
in proceedings of the twelfth international joint conference on artificial intelligence 
ijcai     sidney  australia  pp         
fisher  h     thompson  g  l          probabilistic learning combinations of local job shop
scheduling rules  in muth  j  f     thompson  g  l   eds    industrial scheduling 
pp          prentice hall  englewood cliffs  nj 
framinan  j  m   gupta  j  n  d     leisten  r          a review and classification of
heuristics for permutation flow shop scheduling with makespan objective  journal of
the operational research society                   
french  s          sequencing and scheduling  an introduction to the mathematics of the
job shop  wiley  new york 
glover  f     laguna  m          tabu search  kluwer academic publishers  boston  ma 
hejazi  s  r     saghafian  s          flowshop scheduling problems with makespan criterion  a review  international journal of production research                   
hoos  h  h     stutzle  t          satlib  an online resource for research on sat  in
gent  i  p   v  maaren  h     walsh  t   eds    proceedings of sat       pp         
satlib is available online at www satlib org 
jain  a     meeran  s          a state of the art review of job shop scheduling techniques 
tech  rep   department of applied physics  electronic and mechanical engineering 
university of dundee  dundee  scotland 
jones  a     rabelo  l  c          survey of job shop scheduling techniques  tech  rep  
national institute of standards and technology  gaithersburg  md 
kim  y  h     moon  b  r          investigation of the fitness landscapes in graph bipartitioning  an empirical study  journal of heuristics             
lourenco  h   martin  o     stutzle  t          iterated local search  in glover  f    
kochenberger  g   eds    handbook of metaheuristics  kluwer academic publishers 
boston  ma 
mammen  d  l     hogg  t          a new look at the easy hard easy pattern of combinatorial search difficulty  journal of artificial intelligence research          
   

fistreeter   smith

martin  o  c   otto  s  w     felten  e  w          large step markov chains for the
traveling salesman problem  complex systems            
martin  o  c   monasson  r     zecchina  r          statistical mechanics methods and
phase transitions in combinatorial problems  theoretical computer science           
    
mattfeld  d  c          evolutionary search and the job shop  investigations on genetic
algorithms for production scheduling  physica verlag  heidelberg 
mattfeld  d  c   bierwirth  c     kopfer  h          a search space analysis of the job shop
scheduling problem  annals of operations research             
mezard  m     parisi  g          a replica analysis of the traveling salesman problem 
journal de physique               
monasson  r   zecchina  r   kirkpatrick  s   selman  b     troyansky  l          determining computational complexity from characteristic phase transitions  nature      
       
nowicki  e     smutnicki  c          a fast taboo search algorithm for the job shop problem 
management science                
nowicki  e     smutnicki  c          some new ideas in ts for job shop scheduling  tech 
rep           university of wroclaw 
nowicki  e     smutnicki  c          an advanced tabu search algorithm for the job shop
problem  journal of scheduling            
reeves  c  r     yamada  t          genetic algorithms  path relinking  and the flowshop
sequencing problem  evolutionary computation          
roy  b     sussmann  b          les problemes dordonnancement avec contraintes disjonctives  note d s  no    bis  sema  paris  france  decembre 
selman  b   kautz  h     cohen  b          noise strategies for local search  in proceedings
of aaai     pp         
slaney  j     walsh  t          backbones in optimization and approximation  in proceedings of the   th international joint conference on artificial intelligence  ijcai       pp         
spencer  j          modern probabilistic methods in combinatorics  http   www cs nyu 
edu cs faculty spencer papers stirlingtalk pdf 
streeter  m  j     smith  s  f       a   characterizing the distribution of low makespan
schedules in the job shop scheduling problem  in biundo  s   myers  k     rajan  k 
 eds    proceedings of icaps       pp       
streeter  m  j     smith  s  f       b   supplemental material for icaps      paper
characterizing the distribution of low makespan schedules in the job shop scheduling
problem  http   www cs cmu edu  matts icaps      
taillard  e          benchmarks for basic scheduling problems  european journal of operational research             
   

fithe landscape of random job shop scheduling instances

taillard  e          parallel taboo search techniques for the job shop scheduling problem 
orsa journal on computing            
van laarhoven  p   aarts  e     lenstra  j          job shop scheduling by simulated
annealing  operations research                
watson  j  p   barbulescu  l   whitley  l  d     howe  a          contrasting structured
and random permutation flow shop scheduling problems  search space topology and
algorithm performance  informs journal on computing               
watson  j  p   beck  j  c   howe  a  e     whitley  l  d          toward an understanding
of local search cost in job shop scheduling  in cesta  a   ed    proceedings of the sixth
european conference on planning 
yokoo  m          why adding more constraints makes a problem easier for hill climbing
algorithms  analyzing landscapes of csps  in principles and practice of constraint
programming  pp         
zhang  w          configuartion landscape analysis and backbone guided local search  part
i  satisfiability and maximum satisfiability  artificial intelligence              
zhang  w     looks  m          a novel local search algorithm for the traveling salesman problem that exploits backbones  in proceedings of the   th international joint
conference on artificial intelligence  pp         

   

fi