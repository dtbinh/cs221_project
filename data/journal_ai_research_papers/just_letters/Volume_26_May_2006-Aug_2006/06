journal artificial intelligence research                 

submitted        published      

landscape random job shop scheduling
instances depends ratio jobs machines
matthew j  streeter
stephen f  smith

matts cs cmu edu
sfs cs cmu edu

carnegie mellon university
     forbes avenue  pittsburgh  pa        usa

abstract
characterize search landscape random instances job shop scheduling
problem  jsp   specifically  investigate expected values     backbone size 
    distance near optimal schedules      makespan random schedules vary
n
n
n
function job machine ratio  
   limiting cases
 

n
provide analytical results  intermediate values perform experiments 
n
n
prove
   backbone size approaches      
backbone
n
n
vanishes  process show    resp     simple priority rules
almost surely generate optimal schedule  providing theoretical evidence easyhard easy pattern typical case instance difficulty job shop scheduling  draw
connections theoretical results big valley picture jsp landscapes 

   introduction
    motivations
goal work provide picture typical landscape random instance
job shop scheduling problem  jsp   determine picture changes
n
function job machine ratio  
   picture potentially useful    
n
understanding typical case instance difficulty varies function
    designing
selecting search heuristics take advantage regularities typical instances
jsp 

      understanding instance difficulty function

n


job shop scheduling literature contains much empirical evidence square jsps  those
n

     difficult solve rectangular instances  fisher   thompson 
       work makes theoretical empirical contributions toward understanding
phenomenon  empirically  show random schedules random local
n
   analytically  prove two
optima furthest optimality
n
n
limiting cases       exist simple priority rules almost surely
produce optimal schedule  providing theoretical evidence easy hard easy pattern
instance difficulty jsp 
c
    
ai access foundation  rights reserved 

fistreeter   smith

      informing design search heuristics
heuristics based local search  example tabu search  glover   laguna        nowicki
  smutnicki        iterated local search  lourenco  martin  stutzle        
shown excellent performance benchmark instances job shop scheduling problem
 jain   meeran        jones   rabelo         order design effective heuristic  one
must  explicitly implicitly  make assumptions search landscape instances
heuristic applied  example  nowicki smutnicki motivate
use path relinking state of the art i tsab algorithm citing evidence
jsp big valley distribution local optima  nowicki   smutnicki         one
conclusions work typical landscape random instances
n
n
thought big valley values
close    larger values
 including values
common benchmark instances   landscape breaks many big valleys  suggesting
modifications i tsab may allow better handle case  we discuss i tsab
     
    contributions
contributions paper twofold  first  design novel set experiments
run experiments random instances jsp  second  derive analytical results
confirm provide insight trends suggested experiments 
main contributions empirical work follows 
n
  show low makespan schedules clustered small
low values
region search space many attributes  i e   directed disjunctive graph edges 
n
common low makespan schedules 
increases  low makespan schedules
become dispersed throughout search space attributes common
low makespan schedules 

introduce statistic  neighborhood exactness  used quantitatively
measure smoothness search landscape  estimate expected value
statistic random instances jsp  results  combination
results clustering  suggest landscape typical instances jsp
n
n
described big valley low values
  high values

many separate big valleys 
limiting cases
prove

n


 

n


  derive analytical results  specifically 

n

   expected size backbone  i e   set problem variables
n
common value global optima  approaches      
 
expected backbone size approaches    
n
n

   resp 
   randomly generated schedule almost surely  a 
located close search space optimal schedule  b  near optimal
makespan 

   

fithe landscape random job shop scheduling instances

   related work
least three threads research conducted search space analyses
related ones conduct here  include literature big valley distribution
common number combinatorial optimization problems  studies backbone size
boolean satisfiability  statistical mechanical analysis tsp  briefly review
three areas below  well relevant work phase transitions easy hardeasy pattern instance difficulty 
    big valley
term big valley originated paper boese et al         examined
distribution local optima traveling salesman problem  tsp   based sample
local optima obtained next descent starting random tsp tours  boese calculated
two correlations 
   correlation cost locally optimal tour average distance
locally optimal tours 
   correlation cost locally optimal tour distance
tour best tour sample 
distance two tsp tours defined total number edges minus
number edges common two tours  based fact
correlations surprisingly high  boese conjectured local optima tsp
arranged big valley  adapted work boese et al          figure  
gives intuitive picture big valley  set local minima appears convex
one central global minimum  boese et al          offer formal definition
big valley landscape   
boeses analysis applied combinatorial problems  kim   moon        
including permutation flow shop scheduling problem  watson  barbulescu  whitley   
howe        reeves   yamada        jsp  nowicki   smutnicki         correlations observed jsp generally weaker observed tsp 
related study  mattfeld        examined cost distance correlations famous
jsp instance ft    beasley        found evidence massif central      many
near optimal solutions reside laying closer together local optima    contains
related results backbone size ft   
    backbone size
backbone problem instance set variables assigned common value
globally optimal solutions instance  example  boolean satisfiability
problem  sat   backbone set variables assigned fixed truth value
satisfying assignments  jsp  backbone defined number
disjunctive edges       common orientation globally optimal schedules
 a formal definition given    
large literature backbones combinatorial optimization problems  including many empirical analytical results  slaney   walsh        monasson  zecchina 
   

fistreeter   smith

figure    intuitive picture big valley landscape 
kirkpatrick  selman    troyansky         analysis problem difficulty jsp 
watson et al         present histograms backbone size random  x     job    machine 
 x     job    machine  jsp instances  summarizing experiments reported
paper  watson et al  note  job machine ratios         bias toward small backbones becomes pronounced  ratios      bias toward larger backbones
magnified    generalizes observations proves two theorems give
insight phenomenon occurs 
    statistical mechanical analyses
large growing literature applies techniques statistical mechanics analysis
combinatorial optimization problems  martin  monasson    zecchina         least
one result obtained literature concerns clustering low cost solutions  study
tsp  mezard parisi        obtain expression expected overlap  number
common edges  random tsp tours drawn boltzmann distribution 
show temperature parameter boltzmann distribution lowered  placing
probability mass low cost tsp tours   expected overlap approaches       though
use boltzmann weighting    paper examines expected overlap
random jsp schedules changes probability mass placed low makespan
schedules 
    phase transitions easy hard easy pattern
loosely speaking  phase transition occurs system expected value
statistic varies discontinuously  asymptotically  function parameter 
example      holds random instances   sat problem satisfiable
probability asymptotically approaching   clause variable ratio  
n     
satisfiable probability approaching   clause variable ratio      
similar statement conjectured hold   sat  critical value k
n  if exists 
must satisfy      k       achlioptas   peres        
problems exhibit phase transitions  notably   sat   average case instance
difficulty  for typical solvers  appears first increase decrease one increases
relevant parameter  hardest instances appearing close threshold value
   

fithe landscape random job shop scheduling instances

 a  jsp instance

j   

j  

j   

j     j  









j   

j   


 b  jsp schedule

j   

j   

j   





j  





j  

j   



time

 c  disjunctive

graph




j  

j   

j   

j   

j   
j   



j   
o 



j  


j    j   



j   


j   


j   

figure     a  jsp instance 

 b  afeasibleschedule instance   c  disjunctive graph representation schedule  boxes represent operations  operation
durations proportional width box  machine
operation performed represented texture   c   solid arrows represent
conjunctive arcs dashed arrows represent disjunctive arcs  arc weights
proportional duration operation arc points of  

 cheeseman  kanefsky    taylor        yokoo         phenomenon referred
easy hard easy pattern instance difficulty  mammen   hogg            
discuss evidence easy hard easy pattern instance difficulty jsp  though
 to knowledge  associated phase transition 
results     empirical results   previously presented conference paper  streeter   smith      a  

   job shop scheduling problem
adopt notation  n                 n  
    problem definition
definition  jsp instance   n jsp instance    j    j             j n   set n
k   sequence operations  operation
jobs   job j k    j k   j k           jm
k
  ji associated duration  o      max   machine m o   m    require
job uses machine exactly  i e   j k  m   
exactly one  m   m jik     m   define
   ops i   jik   k  n     m    
    j k  

pm

k
i    ji   


   

fistreeter   smith

   job predecessor j  jik   operation jik
j  jik  




k
ji 


   
otherwise

fictitious operation  o       m o   undefined 
definition  jsp schedule   jsp schedule instance function   ops i 
   associates operation ops i  start time s o   operation performed
machine m o  time s o  time s o     o   preemption allowed   make
following definitions 
   completion time operation    o  s o     o  
   machine predecessor m o  operation ops i 

m o 

arg maxooprev  o  s o 


oprev  o    
otherwise 

oprev  o     o ops i    m o    m o   s o    s o   set operations
scheduled run os machine 
   feasible schedule s o  max s    j  o       m o    ops i  
   quantity
  s  max    o 
oops i 

called makespan s 
consider makespan minimization version jsp  goal find
schedule minimizes makespan 
remainder paper  whenever refer jsp schedule shall adopt
convention s o       shall assume
s o    max s    j  o       m o    ops i 

     

 i e   so called semi active schedule  french         words  ignore schedules
superfluous idle time start schedule end one operation
start another 
figure    a   b  depict  respectively  jsp instance feasible schedule
instance 
    disjunctive graphs
schedule satisfying       uniquely represented weighted  directed graph called
disjunctive graph  disjunctive graph representation schedule jsp
instance i  operation ops i  vertex directed edge  o    o    indicates
operation o  completes o  starts 
   

fithe landscape random job shop scheduling instances

definition  disjunctive graph   disjunctive graph g   g i  s  schedule
  w  defined follows 
jsp instance weighted  directed graph g    v  e 
v   ops i   o       like   fictitious operation  o      
m o   undefined 
   c
  d 
 
e


      j  o   o    ops i    j k       k  n   called set conjunctive
c

arcs  which specify cannot start j  o  completes  
      o    o       o    o    ops i   m o      m o     s o      s o     called set

disjunctive arcs  which specify  pair operations performed
machine  two operations performed first  
w  o    o        o    
figure    c  depicts disjunctive graph schedule depicted figure    b  
connection schedule disjunctive graph established following
proposition  roy   sussmann        
proposition    let feasible schedule satisfying        let g   g i  s 
corresponding disjunctive graph    s  equal length longest weighted
path g 
proof  operation o  let l o  denote length longest weighted path
g  suffices show ops i   s o    l o   follows
induction number edges path  base case s o     l o       
undirected version disjunctive arc called disjunctive edge 
definition  disjunctive edge   let jsp instance  disjunctive edge set
 o    o    ops i  m o      m o     define following notation 
e i  set disjunctive edges i 
let schedule let e    o    o    disjunctive edge  denote
 e s  unique arc   o    o      o    o     appears disjunctive graph g i  s 
 this arc called orientation e s  
measure distance two schedules s  s  jsp instance
counting number disjunctive edges oriented opposite directions g i  s   
g i  s    
definition  disjunctive graph distance   disjunctive graph distance ks  s  k
two schedules s  s  jsp instance defined
ks  s  k   e e i     e s        e s       
   

fistreeter   smith

    random schedules instances
define uniform distribution jsp instances follows  distribution identical
one used taillard        
definition  random jsp instance   random n jsp instance generated
follows 
   let                 n random permutations  m   
   let g probability distribution     max   mean variance       
   define    j     j             j n    m jik     k  i   jik   drawn  independently random  g 
note definition  and likewise  theoretical results  assumes maximum
operation duration max   makes assumptions form distribution
operation durations  empirical results reported paper  choose operation
durations uniform distribution                     
proofs frequently make use priority rules  priority rule greedy schedulebuilding algorithm assigns priority operation and  step greedy
algorithm  assigns earliest possible start time operation minimum priority 
definition  priority rule   priority rule function that  given instance
operation ops i   returns priority  i  o     schedule   s   i  associated
defined following procedure 
   u nscheduled ops i   s o     
    u nscheduled      do 
 a  ready  o u nscheduled   j  o 
  u nscheduled  
 b  element ready least priority 
 c  s o  max s    j  o       m o    
 d  remove u nscheduled 
priority rule called instance independent if  n jsp instance
integers k  n     m    value  i  jik   depends k  i  n    
obtain random schedule assigning random priorities operation 
resulting distribution equivalent one used mattfeld        
definition  random schedule   random schedule n jsp instance
generated performing following steps 
   create list l containing occurrences integer k k  n    we think
occurrences k representing operations job j k   
   shuffle l  obtaining permutation equal probability  
   return schedule s rand   i  rand  i  jik     index ith occurrence
k l 
   

fithe landscape random job shop scheduling instances

   number common attributes function makespan
backbone jsp instance set disjunctive edges common orientation schedules whose makespan globally optimal     define
backbone set disjunctive edges common orientation schedules whose makespan within factor optimal  a related definition appears slaney
  walsh        
definition   backbone   let jsp instance optimal makespan  min  i  
   let opt i   s     s   min  i   set schedules whose makespan
within factor optimal 
backbone i   e e i     e s       e s     s    s    opt i    
section compute expected value   backbone  function
random n jsp instances  examine shape curve changes
n
function
 
    computing backbone
compute backbone use following proposition 
proposition    let jsp instance optimal makespan  min  i   let e    o    o   
disjunctive edge orientations a     o    o    a     o    o     disjunctive
arc a  let  min  i a  denote optimum makespan among schedules whose disjunctive graph
contains arc a 
e backbone i  max   min  i a      min  i a       lmin  i   
proof  e backbone  e must common orientation  say a    schedules
  s   min  i   implies  min  i a       min  i   e
  backbone 
must  s    s    opt i   e s      a   e s      a    implies
max  min  i a      min  i a      min  i  

thus compute backbone i  need compute  min  i a   m n 
possible choices a  given disjunctive arc a  compute  min  i a  using branch
bound  branch bound algorithms jsp  nodes search tree represent
choices orientations subset disjunctive edges  constructing root search
tree node fixed arc  determine  min  i a   use branch bound
algorithm due brucker et al         efficient code
freely available via orsep  brucker  jurisch 
  sievers        


n
computing  min  i a   m   possible choices requires     n  runs
branch bound  first run used find globally optimal schedule 
gives

n
n
value  min  i a    possible choices  namely    disjunctive arcs

present globally optimal schedule   separate run used
n  remaining choices a 
figure   graphs fraction disjunctive edges belong backbone
function instance ft    a    job     machine instance  library  beasley 
   

fistreeter   smith

instance ft  
normalized   backbone 

 
   
   
   
   
 
    

    

    

    

    

    

    



figure    normalized   backbone  function library instance ft   
       note definition curve non increasing respect  
curve exact   noteworthy among schedules whose makespan within
factor       optimal      disjunctive edges fixed orientation  see
n
behavior typical jsp instances
    
    results
plotted   backbone  function instances library   
fewer jobs    fewer machines  results available online  streeter   smith 
    b   inspection graphs revealed shape curve largely function
job machine ratio  investigate further  repeat experiments large
number randomly generated jsp instances 
use randomly generated instances   different combinations n study
n
n
instances
equal         
    use  x    x    x  instances 
n
n
 
 

use
 x 

  x 
instances 



    use  x    x  instances 
generate      random instances combination n  
figure   parts  a    b    c  graph expected fraction edges belonging
n
 backbone function combination n   grouped according
 
n
figure    d  compares curves different values   plots          
quantiles  purposes study two important observations figure
  follows 
curves depend size instance  i e   n   shape  i e  
n
n
   two factors  far stronger influence shape
curves 
values   expected fraction edges belonging backbone decreases
n

increases 
   

fithe landscape random job shop scheduling instances

 a  job machine ratio    

 b  job machine ratio    
 

   

e frac  edges  backbone 

e frac  edges  backbone 

 

 x  instances
 x  instances

   

 x  instances
   

   

   

 x  instances
  x  instances

   
   
   
 

 
 

   

   



   

   

 

   

   

   

   

   



 c  job machine ratio    

 d  comparison

 

 

   

frac  edges  backbone

e frac  edges  backbone 

   

 x  instances

   

  x  instances

   
   
 

   

 x  instances
  x  instances

   

  x  instances
   

   

 

 

   

   

   

   

   



 

   

   



   

   

   

figure    expected fraction edges  backbone function random jsp
n
instances  graphs  a    b    c  depict curves random instances
           respectively  graph  d  compares curves depicted  a    b  
 c   only curves largest instance sizes shown  d     d  
top bottom error bars represent           quantiles  respectively 

   

fistreeter   smith

    analysis
give insight figure   analyzing two limiting cases  prove
n
   expected fraction disjunctive edges belong backbone approaches
n
  
expected fraction approaches   
n
intuitively  happens follows 
   i e   n held constant  
jobs becomes long  individual disjunctive edges represent precedence
relations among operations performed far apart time  example 
       machines  and job consists        operations   disjunctive
edge might specify whether operation       job performed operation
      job b  clearly  waiting job b complete       operations allowing
job complete     operations likely produce inefficient schedule  thus 
orienting single disjunctive edge wrong direction likely prevent schedule
optimal  particular edge likely common orientation
globally optimal schedules 
n
contrast 
  workloads machines become long 
order jobs processed particular machine matter much
long machine longest workload kept busy  fact particular
edge oriented particular way unlikely prevent schedule optimal 
formalized below 
make use following well known definition 
definition  whp   sequence events n occurs high probability  whp  limn
p n       
lemma   theorem   show constant n   randomly chosen edge random
n jsp instance backbone whp  as    lemma   theorem  
show constant   randomly chosen edge random n jsp instance
backbone whp  as n   
lemma    let random n jsp instance  let   s   i  schedule
obtained using instance independent priority rule   arbitrary job j i 
define sj    jm    j   e sj   o n   
proof  assume n          generalization larger n straightforward 
cases n         trivial  let    j     j     let j   j    
let    o    o              sequence operations selected ready  in line
  b  definition priority rule      constructing s  say operation
ji  overlaps operation jj 
   jj  appears ji   
        j        j          
    s jj        jj      s    ji 
i 


additionally m ji      m jj     say ji  contends jj    intuitively  ji 
overlaps o  jj  start time might delayed os machine
used o    contends o    start time actually delayed 
   

fithe landscape random job shop scheduling instances

let i j  resp  i j   indicator event ji  overlaps  resp  contends 
 
 
 
let
ci  jj   i j      set operations j ji overlaps with 
 ci i   i ci       thus

jj   

x


 ci    

x


 ci  

 

ci     

i   i

x


 ci

 

ci     m  

     

i   i

let   in m   random n   jsp instance  define i j   i j   ci
analogously above  i  j   




p i j     m ji      m jj      p i j      
true p i j      function joint distribution operations
set  ji     i    i   jj     j     j   and  far joint distribution concerned 
conditioning event m ji      m jj    deleting operations use
machine m ji    
h




 
 
 
p i j     m ji      m jj     
p i j      
e i j  
thus e  i j     p  i j       
therefore 
pm   pm  
pm pm
j   e i j  
i  
j   e i j      
i  
  pm   pm  
      i  
j   e i j  
  pm  
      i   e  ci   
 
last step used        follows e sj    max  max
maximum operation duration defined     consider arbitrary n   get e sj  
 max  n    
corollary lemma    show simple priority rule      almost surely
n
  
generates optimal schedule case
definition  priority rule      given n jsp instance i  let k   arg maxk n  
 j k   index longest job  priority rule   first schedules operations

j k   schedules remaining operations fixed order 


k   k
k
   i  ji    
k   otherwise 
corollary    let random n jsp instance  fixed n   holds
whp  as   schedule   s     i  optimal makespan   s   
maxk n    j k   
proof  define priority rule k k  i  jik     k   k  k   otherwise  k
instance independent    equivalent k   thus j
e j   

x

e jk     o n    

k

   

fistreeter   smith

s  i 

define j j
  second step uses lemma    markovs inequal 
 
ity  j     j whp  central limit theorem 
 j  asymptotically
normally distributed mean standard deviation   follows whp 
 



 j k    j k       k    k   implies   s     j k     j k   lower
bound makespan schedule  corollary follows 
theorem    let random n jsp instance  let e randomly selected
element e i   fixed n   holds whp  as   e   backbone i  
proof  let e    ji   jj    j let    jj    ji    proposition   corollary   
suffices show whp  disjunctive graphs containing contain path
weighted length   maxk n    j k   
 

assume j    this holds whp j selected uniformly
random  m     consider path
p    o   j     j             jj    ji   ji             jm    
 

passes  p     m  m   vertices weighted length w p    want
show w p     maxji  j  whp  central limit theorem      fixed
j  w p
p  asymptotically normally distributed mean   p      standard
deviation   p         
j   j  asymptotically normally distributed
mean standard deviation   w p     maxji  j  whp follows
chebyshevs inequality 
n
  simple priority rule     almost surely generates
lemma   shows
schedule machine idle operations performed machine
completed  a schedule property clearly optimal  

definition  priority rule    given n jsp instance i  priority rule
first schedules first operation job  taking jobs order ascending indices  
second operation job  forth  defined  i  jik       k 
lemma    let random n jsp instance  fixed   holds whp  as
n   schedule   s    i  property
s o       m o   ops i   
proof  suppose executing replace line s o  max s    j  o   
   m o     line   c  definition priority rule given      s o     m o   
resulting feasible replacement must effect  thus suffices
show resulting feasible whp  equivalently  want show whp 
s o     j  o   ops i  constructed using modified version line  
 c  
let ops    i     jik ops i         set operations first
job  suffices show s o  s j  o   max ops    i   end  consider
arbitrary operation   jik ops    i     number operations lower
   

fithe landscape random job shop scheduling instances

priority  i   n    k     number operations lower priority
 
jik run machine m o  is  expectation  equal
  i    n       k    
 where switch n n   due fact operation job j k
uses machine m o    follows
e s o    


  i    n       k    



k
    
e s o  s j  o      e s jik   s ji 

n  
 


appendix use martingale tail inequality establish following claim 
claim      high probability  ops    i 
 
s o  s j  o   e s o  s j  o     
 
lemma follows fact    e s o  s j  o      max n sufficiently
large 
based results computational experiments  taillard        conjectured
optimal makespan almost surely equal maximum machine workload 
following corollary lemma   confirms conjecture 
n


corollary    let random n jsp instance optimal makespan  min  i  
let  m    o ops i    m o    m   denote workload machine m  fixed
  holds whp  as n    min  i    maxm m    m  
theorem    let random n jsp instance  let e randomly selected
element e i   fixed   holds whp  as n   e
    backbone i  
proof  let e    ji   jj     remove j j   create n   instance
comes distribution random n   jsp instance  lemma
i 
  shows whp exists optimal schedule property described
statement lemma 
  m o    m   denote workload machine
let  m    o ops i 

instance i  central limit theorem 
 m  asymptotically normally distributed
mean  n    standard deviation n    follows whp     m   m      
 
n      m   
thus whp one machine still processing operations interval
 
   s  n       s    max   j    j      max   o     use interval
construct optimal schedules containing disjunctive arc  ji   jj    well optimal
schedules containing disjunctive arc  jj    ji   
   

fistreeter   smith

   clustering function makespan
section estimate expected distance random schedules whose makespan
within factor optimal  function various combinations n  
n
examine shape curve changes function
  formally 
random n jsp instance optimal makespan  min  i  
opt i   s     s   min  i   
s  s  drawn independently random opt i  
wish compute e ks  s  k  
note experiments   provide upper bound quantity 

n
e    backbone  
e  ks  s  k 
 
provide lower bound  a low backbone size evidence mean distance
global optima large   experiments section viewed test
degree upper bound provided   tight 
    methodology
generate random samples opt i  running simulated annealing algorithm
van laarhoven et al         finds schedule  precisely  procedure
sampling distances follows 
   generate random n jsp instance i 
   using branch bound algorithm brucker et al          determine optimal
makespan i 
   perform k runs  r    r            rk   van laarhoven et al         simulated annealing
algorithm  restart run many times necessary find schedule whose
makespan optimal 
                                 find first schedule  call si     run
ri whose makespan within factor optimal  k  pairs
runs  ri   rj    add distance si    sj    sample distances
associated  
ran procedure random jsp instances   combinations n
used      smallest instance sizes ratio  i e    x    x 
 x  instances  generate     random jsp instances run procedure k       
setting k       allows us measure variation instance specific expected values 
  combinations n   performing        simulated annealing runs
computationally expensive  instead generate      random jsp instances run
procedure k     
   

fithe landscape random job shop scheduling instances

figure    a    b    c  plot expected distance random  optimal schedn
ules function three values
  figure    d  shows     
     quantiles     instance specific sample means three smallest
instance sizes  examining figure    d   see variation among random instances
n small relative differences curves different
n
values
 
    discussion
examining figure   see   expected distance random n
optimal schedules increases
increases  indeed  global optima dispersed widely
n
n
throughout search space
     true lesser extent
    
immediate implication figure   whether exhibit two
correlations operational definition big valley  typical landscapes jsp
n
    cannot expected big valleys sense central
instances
cluster optimal near optimal solutions  anything  one might posit existence
multiple big valleys  leading separate global optimum  next section expands
upon observations 

   big valley
section define formal properties big valley landscape  conduct experiments determine extent random jsp instances exhibit properties
n
n
n
vary
  present analytical results limiting cases
 
 
considering intuitive picture given figure    take following
necessary  though perhaps sufficient  conditions function f  x  big valley 
   small improving moves  x global minimum f   must exist nearby
x  f  x      f  x  
   clustering global optima  maximum distance two global minima
f small 
note direct relationship two properties cost distance
correlations considered boese et al         
    formalization
following four definitions allow us formalize notion big valley landscape 
definition  neighborhood nr    let arbitrary jsp instance  let u set
schedules i  let r positive integer  neighborhood nr   u  u defined

nr  s   s   u   ks   k r   
definition  local optimum l s  n     let u above  let n   u  u
arbitrary neighborhood function  let schedule i  l s  n   schedule
returned following procedure  which finds local optimum performing next descent
starting using neighborhood n   
   

fistreeter   smith

 a  job machine ratio    

 b  job machine ratio    
   

e dist  schedules 

e dist  schedules 

   
   
   
   

 x  instances
 x  instances

   

 x  instances
 

   
   
   

 x  instances

   

  x  instances

 
 

   

   

   

   

   

 

   

   



 c  job machine ratio    

   

   

 d  comparison

   

   

e dist  schedules 

e dist  schedules 

   



   
   
   

 x  instances

   

  x  instances

   
   
   

 x  instances
 x  instances

   

 x  instances
 

 
 

   

   

   

   

   

 

   

   

   

   

   





figure    expected distance random schedules within factor optimal 
function   graphs  a    b    c  depict curves random instances
n
           respectively  graph  d  compares curves depicted  a  
 b    c   only curves smallest instance sizes shown  d   
 d   top bottom error bars represent           quantiles  respectively 
instance specific sample means 

   

fithe landscape random job shop scheduling instances

 a   r   valley

 b  three  r   valleys

r

r

r

r









figure    two landscapes comprised  r    valleys   a  single  r    valley  for
values r shown figure    b  either viewed three
distinct  r    valleys single  r      valley   the values r shown
figure slightly larger necessary  

   let n  s     s    s            s n  s      where elements n  s  indexed fixed
arbitrary manner  
   find least   si       s   exists  return s  otherwise set
si go   
definition   r    valley   let u above  let r non negative
integers  set v u  r    valley v following two properties 
   v   schedule l s  nr   v globally optimal 
   two globally optimal schedules s  s  v   ks  s  k  
figure   illustrates definition  r    valley  would say landscape
depicted figure    a  big valley  depicted    b  comprised three
big valleys 
definition   r    p  landscape   let u above  let random schedule
i   r    p  landscape exists v u
   v  r    valley 
   p s v   p 



jsp instance trivially  m n    n       landscape  because r   n 

nr includes possible schedules   jsp instance  r  n       landscape 
globally optimal schedule always found starting random schedule
applying next descent using neighborhood nr  
say jsp instance big valley landscape  r    p  landscape
small r combination p near    contrast  small r combination
p near   require large   say landscape consists multiple big valleys 
   

fistreeter   smith

    neighborhood exactness
section seek determine extent random jsp instances
small improving moves property  require following definition 
definition  neighborhood exactness   let i  u   n above  let
random schedule i  exactness neighborhood n instance
probability l s  n   global optimum 

exactness nr p   r  n    p  landscape  let v consist
schedules l s  n   global optimum   estimate expected exactness
nr function r various combinations n   examining resulting
curves  able draw conclusions extent landscapes
random n jsp instance typically small improving moves property 
n
determine presence absence property depends
 

fixed n   compute expected exactness nr   r n 
repeatedly executing following procedure 
   generate random n jsp instance i 
   using algorithm brucker et al          compute optimal makespan i 
   repeat k times 
 a  random feasible schedule  r    opt f alse 
 b  opt   f alse do 
l s  nr   
global optimum  opt true 
record pair  r  opt  
r r     
 c  r  r r 

n
 



record pair  r    true  

pairs recorded procedure  in step   c  third bullet point    b  
used obvious way estimate expected exactness  specifically  r
estimated expected exactness nr fraction pairs  r  x  x   true 
implementation first bullet point step    b  deserves discussion 
determine l s  nr    step next descent must able determine best schedule
 s     ks   k r   large r impractical brute force  instead
developed radius limited branch bound algorithm that  given arbitrary center
schedule sc radius r  finds schedule arg min s    ksc   kr    s      radius limited
branch bound algorithm uses branching rule balas        combined
lower bounds branch ordering heuristic brucker et al         
   

fithe landscape random job shop scheduling instances

    results
n
use three combinations n
       x     x     x   instances   three
n
n
combinations       x    x    x  instances  two combinations
  
   x    x  instances   smallest instance sizes ratio  i e    x     x  
  x  instances  generate     random jsp instances run procedure
k        otherwise  generate      random jsp instances run procedure
k     

figure    a    b    c  plot expected exactness function neighborhood radius
n
 normalized number disjunctive edges  three values
  figure
   d  shows           quantiles     instance specific sample means
three smallest instance sizes 
    discussion
examining figure    see normalized neighborhood radius  neighborhood
n
exactness lowest instances
    higher two extreme ratios
 
n
n
            view neighborhood exactness measuring smoothness
landscape  data suggest typical jsp landscapes least smooth
n
n
n
intermediate value
  become smooth
 
 
suggests easy hard easy pattern typical case instance difficulty jsp 
phenomenon explored fully next section 
using methodology      found expected proportions backbone
edges  x     x     x   instances                   respectively 
expected distance global optima      three cases  contrast 
expected proportions backbone edges   x    x  instances near zero 
expected distances global optima            respectively  conclude
landcapes random n jsp instances typically clustering global
n
n
optima property
    
     however  figure   suggests small
n
n
improving moves property present
    
     accordingly  would
n
 
n
say typical landscapes     big valleys 
    landscape
comprised many big valleys rather one 
n
data     show
     typical landscapes clustering
global optima property  examining figure    b   see able descend
random schedule globally optimal schedule probability     normalized 
neighborhood radius     reason  think landscapes random
n
jsp instances
    small improving moves property extent 
this  combination curve figure    a   which shows expected distance
random  optimal schedules function   leads us say typical landscapes
n
random jsp instances
    still roughly described big valleys  however 
valley much rougher  meaning larger steps required move random
schedule global optimum via sequence improving moves  extreme
n
values
 

table   summarizes empirical findings discussed 
   

fistreeter   smith

 a  job machine ratio    

 b  job machine ratio    

 

 
   

 x   instances
   

e exactness 

e exactness 

   

 x   instances

   

 x   instances

 x  instances
   

 x  instances
 x  instances

   
   

   

 

 
 

   

   

 

   

   

   

normalized radius

normalized radius

 c  job machine ratio    

 d  comparison

 

 
   

e exactness 

   

e exactness 

   

  x  instances
   

  x  instances
   

 x   instances

   

 x  instances
   

  x  instances

   

   

 

 
 

   

   

   

 

   

   

   

normalized radius

normalized radius

figure    expected exactness nr function  normalized  neighborhood radius
n
r  graphs  a    b    c  depict curves random instances
      
      respectively  graph  d  compares curves depicted  a    b  
 c   only curves largest instances shown  d     d   top
bottom error bars represent           quantiles  respectively  instancespecific exactness 

   

fithe landscape random job shop scheduling instances

n

 
 

n
table    landscape attributes three values
 
clustering
small
improving
description
global optima  moves 
yes
yes
big valley

 

yes

somewhat

 rough  big valley

 



yes

multiple big valleys

    analysis
first establish behavior curves depicted figure   limiting cases
n
n
    use results characterize landscapes random
jsp instances using  r    p  notation introduced     
n
n
following two lemmas show
   resp 
   random schedule
almost surely close optimal schedule  proofs given appendix a 
lemma    let random n jsp instance  let random schedule
i  let optimal schedule ks sk minimal  let f  m  
unbounded  increasing function   fixed n   holds whp  as  
ks sk   f  m   
lemma    let random n jsp instance  let random schedule i 
let optimal schedule ks sk minimal  fixed
     holds whp  as n   ks sk   n     
following immediate corollaries lemmas     
corollary    fixed n   expected exactness nf  m   approaches    
f  m   unbounded  increasing function  
corollary    fixed      expected exactness nn    approaches  
n  

total number disjunctive edges n    two corollaries imply
n
n
   resp 
   curve depicted figure   approaches horizontal line

height   
using lemmas      theorems     characterize landscape random jsp
instances using  r    p  notation      presenting theorems  slight
disclaimer order  lemmas      the proofs fairly involved  indicate
n
n
extreme cases
 
jump random schedule
globally optimal schedule via single small move  strongly believe cases
possible go random schedule global optimum sequence many
 smaller  improving moves  although proving seems difficult  nevertheless 
understood theoretical results strictly imply existence landscapes
depicted figure    where starting points sequence two
small improving moves leading global optimum  
n
theorem   shows
   random jsp instance almost certainly

 r    p  landscape r grows arbitrarily slowly function   o m n    
   

fistreeter   smith

n
p arbitrarily close    words 
  landscape small
improving move s  property clustering global optima property  contrast 
n
theorem   shows
  random jsp instance almost surely
 r    p  landscape unless  n      instead  landscape contains  n     r     valleys 
n
r o m n     thus 
  landscape small improving move s 
property clustering global optima property  analytical results confirm
trend suggested figure   discussed     

theorem    let random n jsp instance  let f  m   unbounded 
increasing function   fixed n      holds whp  as  
 r    p  landscape r   f  m      n  p      
proof  let v set schedules l s  nr   global optimum  follows
corollary   whp  exactness r least p  means v
probability least p  remains show v  r    valley whp  part  
definition  r    valley satisfied definition v   part   follows theorem
  
theorem    let random n jsp instance  let random schedule
i  exists set v  i    ni   vi schedules fixed      v
following properties whp 
   v  
   vi  r    valley r   n         n  
   n   n       
   max s   s   v ks  s  k    n     
proof  let  s    s            sn   set globally optimal schedules i  define vi
 s   l s  n        si    property   holds whp lemma    property   holds definition
vi  
fact property   holds whp consequence lemma    recall lemma
n
  showed
  priority rule generates optimal schedule whp 
k
 i  ji       k  indices assigned jobs arbitrary  lemma  
applies priority rule  i  jik        k   permutation  n   
n   possible choices   let f number choices fail yield globally
optimal schedule  property   fail hold f n    lemma    e f  
o   n    hence f   n   whp markovs inequality 
establish property    choose permutations     list elements  n  
reverse order  i e      i       n i   n     lemma    schedules s   
s      i  s    s      i  globally optimal whp  disjunctive edge
e    j    j     must  e s        e s     hence ks  s  k    j  j       m j     
 
 
m j       n m 
   n      obtain expression n m 
using pigeonhole
principle 
   

fithe landscape random job shop scheduling instances

   quality random schedules
    methodology
section examine quality randomly generated schedules changes
function job machine ratio  specifically  various combinations n  
estimate expected value following four quantities 
 a  makespan random schedule 
 b  makespan locally optimal schedule obtained starting random schedule
applying next descent using n  move operator 
 c  makespan optimal schedule 
 d  lower bound makespan optimal schedule given maximum
maximum job duration maximum machine workload 


x
max max  j   max
 o   
ji

m m  

oops i  m o  m

n
considered experiments set r                        
values
     
 
       s                               consider combinations n set
n
rr sr   sr   n     
  r  min n       max n       n         
 n    s  estimate expected value  a   resp   b   generating    
random n jsp instances and  instance  generating     random schedules
 resp  local optima   estimate  d  generating      random jsp instances
 n    s  combinations  n    ssmall s  practical compute
n
quantity  c   let nr    ssmall sr   number combinations  n   
  r
 
computed  c   chose ssmall nr   r      n       
 
 n    ssmall   estimate  c  using      random jsp instances 

    results
figure   plots mean values  a    b    c   respectively  mean value
 d   various combinations n   data points combination n
n
assigned symbol based value
  top bottom error bars represent     
     quantiles  respectively  instance specific sample means  note width
error bars small relative differences curves different values
n

 
n
examining figure    see set data points value
approximately  though exactly  collinear  furthermore  three graphs slope line
n
formed data points
  r maximized r      decreases r gets
away    see figure    a   
investigate trend  performed least squares linear regression set
n
data points value
  slopes resulting lines shown function
n
figure    a  
examination figure    a   apparent
   

fistreeter   smith

 a  random schedules
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

 b  random local optima
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

 c  optimal schedules
mean makespan

    
    
    
    

ratio    

    

ratio    
ratio    

    

ratio    

    

ratio    

 
 

                                  

mean lower bound

figure    expected makespan  a  random schedules   b  random local optima   c 
optimal schedules vs  expected lower bound  various combinations n
n
 grouped symbol according
   top bottom error bars represent
          quantiles  respectively  instance specific sample means 
   

fithe landscape random job shop scheduling instances

 a  results least squares regression

slope e makespan 
vs  e lower bound 

 

random schedules
random local optima
optimal schedules

 

 

 
   

 

  

job machine ratio

 b  branch bound search cost
   

num  tree nodes

     

   

   
   

    
   

   

   

   
   
   

  

   

   
   

   

   
   

 
 

   

    

    

log search space size 

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

    

figure     a  graphs slope least squares fits data figure    a    b  
n
n
 c  function
 includes values
depicted figure      b 
th
graphs number search tree nodes     percentile  used branch
bound algorithm brucker et al         find optimal schedule 

   

fistreeter   smith

n
value
becomes extreme  i e   approaches either      expected makespan random schedules  resp  random local optima  comes closer
expected value lower bound makespan 

difference expected makespan random schedules  resp  random
local optima  expected value lower bound makespan maximized
n
value
  
n
first two observations suggests
approaches either    
random schedule almost certainly near optimal      contains two theorems confirm
this 
second two observations suggests expected difference
makespan random schedule makespan optimal schedule maximized
n
value
somewhere neighborhood    observation particularly interesting
n
light empirical fact square instances jsp  i e  
    
harder solve rectangular ones  fisher   thompson        
figure    b  graphs number search tree nodes    th percentile  required
branch bound algorithm brucker et al         optimally solve random n
instances  function log  base     search space size  take size
search space n jsp instance number possible disjunctive graphs 

namely  n         note disjunctive graphs contain cycles therefore
correspond feasible schedules  expression overestimates size search
space  data points given combination n could afford
run branch bound  i e   combination n computed quantity
n
 c    data points grouped curves according
 
examining figure    b   see curves steepest ratios                
n
   curves substantially less steep extreme values
  
   thus  least point view particular branch bound algorithm 
random jsp instances exhibit easy hard easy pattern instance difficulty  discuss
pattern     

    analysis
following two theorems show that 
almost surely near optimal 

n


approaches either     random schedule

theorem    let random n jsp instance optimal makespan  min  i 
let random schedule i  fixed n      holds whp  as  
  s         min  i  
proof  priority rule rand associates priority operation ops i   let
sequence contain elements ops i   sorted ascending order priority 
schedule   s rand   i  depends   n   possible choices   thus
rand seen choosing random set n   instance independent priority
rules  instance independent priority rules subject lemma    rand

lemma   thus j  e sj   o n    thus e   s   min  i  
palso subject

 
j e j     o n      s   min  i  exceed  min  i     m   whp markovs
inequality 
   

fithe landscape random job shop scheduling instances

theorem    let random n jsp instance optimal makespan  min  i 
let random schedule i  fixed      holds whp  as n  
  s         min  i  
proof  see appendix a 
idea behind proof theorem   following  shown lemma   
priority rule almost surely generates optimal schedule  relevant property
that  operations sorted order ascending priority  number
operations j  o   n    key proof theorem  
expectation  rand shares property operations ops i  
    easy hard easy pattern instance difficulty
n
n
proofs corollary    resp  lemma    show
   resp 
  exist
simple priority rules almost surely produce optimal schedule  moreover  theorems
    show two limiting cases  even random schedule almost surely
n
n
makespan close optimal  thus 
 
  almost
jsp instances easy 
n
contrast 
   figure    a  suggests random schedules  as well random
local optima  far optimal  literature jsp  as well results depicted
n
figure    b   attests fact random jsp instances
  hard 
thus conjecture that    sat  typical instance difficulty jsp follows easyhard easy pattern function certain parameter  contrast   sat  easyhard easy pattern jsp  to knowledge  associated phase transition
n
 i e   identified quantity undergoes sharp threshold
   
furthermore  although empirical results figures    a   b  support idea
typical case instance difficulty jsp follows easy hard easy pattern 
n
claim isolated particular value
point maximum
difficulty  shown figure    b   random jsp n jsp instances difficult
n
branch bound algorithm brucker et  al       
   may
true branch bound algorithms jsp heuristics based local search 
leave task characterizing easy hard easy pattern precisely future
work 
related work  beck        studied constraint satisfaction  as opposed makespanminimization  version jsp  gave empirical evidence probability
random jsp instance satisfiable undergoes sharp threshold function quantity
called constrainedness instance 

   limitations extensions
primary limitation work reported paper theoretical
empirical results apply random instances job shop scheduling problem 
guarantee observations generalize instances drawn distributions
interesting structure  watson et al          difficulty extending
analysis distributions analytical results similar ones presented
   

fistreeter   smith

paper may become much difficult derive  however  least three
distributions studied scheduling literature believe
difficult adapt proofs  the conclusions may change part
adaptation process  
random workflow jsp instances  workflow jsp instance  set machines
partitioned sets  say m    m            mk      j  job must use
machines mi using machines mj   mattfeld et al         define
random distribution workflow jsps generalizes natural way
distribution defined      the difference permutations                 n
chosen uniformly random set permutations satisfy workflow
constraints  
random instances  permutation  flow shop scheduling problem  instance
flow shop scheduling problem  fsp  jsp instance jobs use
machines order  equivalently  fsp instance workflow jsp instance
k      permutation flow shop problem  pfsp  special case fsp
which  additionally  machine must process jobs order 
large literature  p fsp  framinan et al         hejazi saghafian
       provide relevant surveys 
job correlated machine correlated jsp instances  job correlated jsp instance 
distribution operation durations drawn depends job
operation belongs  similarly  machine correlated jsp instance distribution
depends machine operation performed  watson et al        
studied job correlated machine correlated instances pfsp 
regarding difficulty instances drawn three distributions  computational
experience shows  i  random workflow jsps harder random jsps   ii  random pfsps easier random jsps   iii  job correlated machine correlated
pfsps easier random pfsps  extending theoretical analysis
distributions may give insight relevant differences them 
    big valley vs  cost distance correlations
   defined big valley landscape one exhibits two properties  small improving moves clustering global optima  analytical experimental results
based definition  although believe definition captures properties jsp
landscapes important designers heuristics understand  properties
 e g   cost distance correlations  likely important well  particular  may
possible algorithms exploit cost distance correlations landscapes neither
small improving moves clustering global optima properties 
existing literature  term big valley used amorphously mean either
    landscape depicted figure       landscape exhibits high costdistance correlations  making sharper distinction two distinct concepts 
improve understanding jsp landscapes well landscapes
combinatorial problems 
   

fithe landscape random job shop scheduling instances

   conclusions
    summary experimental results
n
empirically  demonstrated low values job machine ratio  
   lowmakespan schedules clustered small region search space backbone
n
size high 
increases  low makespan schedules become dispersed throughout
n
search space backbone vanishes  function
  smoothness
landscape  as measured statistic called neighborhood exactness  starts small
n
n
n
low values
 e g  
        relatively high
   becomes small
n
n
n
high values  e g         extremely low extremely high values
 
expected makespan random schedules comes close optimal schedules 
quality random schedules  resp  random local optima  appears worst
n
value
  
    discussed implications results big valley picture jsp search
n
   concluded typical landscape described big
landscapes 
n
n
valley  larger values
 e g  
   many big valleys      discussed
data support idea jsp instance difficulty exhibits easy hard easy
n
 
pattern function

    summary theoretical results
table   shows asymptotic expected values various attributes random n
n
n
jsp instance limiting cases
 
 
table    attributes random jsp instances 
fixed n   fixed   n
optimum makespan

max  job length
 corollary   

max  machine workload
 corollary   

normalized backbone size

   theorem   

   theorem   

normalized maximum distance global optima
normalized distance random
schedule nearest global optimum
ratio makespan random schedule
optimum makespan

   theorem   

     theorem   

   lemma   

   lemma   

   theorem   

   theorem   

    rules thumb designing jsp heuristics
though claim deep insights solve random instances
jsp  results suggest two general rules thumb 
n
n

low  say 
  lower   algorithm attempt locate
cluster global optima exploit it 

   

fistreeter   smith

n
n

high  say 
   algorithm attempt isolate one
clusters global optima deal separately them 

briefly discuss ideas relation two recent algorithms  backbone guided local
search  zhang        i tsab  nowicki   smutnicki        
      backbone guided local search
several recent algorithms attempt use backbone information bias move operator employed local search  example  zhang        describes approach called
backbone guided local search frequency attribute  e g   assignment particular value particular variable boolean formula  appears
random local optima used proxy frequency attribute appears global optima  approach improved performance walksat algorithm
 selman  kautz    cohen        large instances satlib  hoos   stutzle        
similar algorithm successfully applied tsp  zhang   looks       
improve performance iterated lin kernighan algorithm  martin  otto    felten 
       zhang writes 
method built upon following working hypothesis  problem
whose optimal near optimal solutions form cluster  local search algorithm reach close vicinities solutions  algorithm effective
finding information solution structures  backbone particular 
 zhang        p    
based results      working hypothesis satisfied random jsps
  lower  seems plausible backbone guided local search could used boost
performance early local search heuristics jsp van laarhoven
et al         taillard         whether results would competitive
recent algorithms i tsab separate question  
n
hypothesis typically violated random jsp instances larger values
 
cases makes sense attempt exploit local clustering optimal
near optimal schedules 
n


      i tsab
nowicki smutnicki        present jsp heuristic called i tsab employs multiple
runs tabu search algorithm tsab  nowicki   smutnicki         i tsab employs path
relinking localize center bv  big valley   probably close global minimum
 nowicki   smutnicki         words  i tsab designed based intuitive
picture depicted figure    a   inaccurate typical random jsp instances
n
n
   note although random jsp instances become easy   instances
n

  means easy  evidenced figure    b  
concreteness  briefly describe i tsab works  initially  i tsab performs
number independent runs tsab adds best of run schedule pool elite
solutions  performs additional runs tsab uses best of run schedules
additional runs replace schedules pool elite solutions  starting points
   

fithe landscape random job shop scheduling instances

additional tsab runs either  i  random elite solutions  ii  schedules obtained
performing path relinking random pair elite solutions  given two schedules s 
s    path relinking uses move operator generate new schedule midway
 in terms disjunctive graph distance  s  s    pool elite solutions
thought cloud particles hovers search space  hopefully 
converges region space containing global optimum 
n
random jsp instances
   results consistent idea
cloud elite solutions converges center big valley  random jsp
n
instances
   however  cloud must either converge one many big valleys
converge all  alternate approach one imagine using multiple clouds 
intention cloud specializes particular big valley  seems plausible
ideas could improve performance i tsab random jsp instances
n
larger values
 

appendix a  additional proofs
p
proofs section  define  o  oo  o   set operations 
make use following inequality  spencer        
azumas perimetric inequality  a p i    let x    x    x            xn   vector n independent random variables  let function f  x  take input vector x    x    x            xn   
xi realization xi  n   produce output real number  suppose
    holds two vectors x x  differ one
component 
 f  x  f  x      
    




 
p x   e x    n exp    
 

inequality holds p  x e x  n  
lemma    let random n jsp instance  fixed   holds whp  as
n   schedule   s    i  property
s o       m o   ops i   
proof  remains prove claim     proof    says whp 
ops    i 
 
s o  s j  o   e s o  s j  o     
 
pick arbitrary operation ops    i   suppose random choices used
construct made following order 
   randomly choose m    m o  m    j  o  
   k   n  
   

fistreeter   smith

 a  randomly choose order job j k uses machines  if j k
part choice already made step    
 b  randomly choose  jik    m   
let random variable xk denote sequence random bits used steps  a 
 b  k th iteration loop  define s o  s j  o    then  fixed choices
m  m    function n independent events x    x            xn   easy
check altering particular xi changes value  max   thus
h



  
p      e o     p   e o    n
 m
h

n
p   e o    m


 
exp    m n
 
max  
first step used fact  from proof    e o      nm  
last step used a p i  taking union bound n  m    operations
ops    i  proves claim 

lemma    let random n jsp instance  let random schedule
i  let optimal schedule ks sk minimal  let f  m  
unbounded  increasing function   fixed n   holds whp  as  
ks sk   f  m   
proof  let   s     i   proof corollary   showed j  e sj   o n     
thus holds whp sj   log f  m    j  proof theorem    procedure
used produce mixture instance independent priority rules  subject
lemma    thus j  e sj   o n    whp sj   log f  m    j 
p
p
let onear  ji      jj    j      j    i   i  ji    j    j  jj         log f  m       onear  ji  
set operations would scheduled near time ji ignored fact
machine may perform one operation time   let enear    e    ji   jj   
e i    jj  onear  ji     assumptions previous paragraph  each
hold whp   ks sk  enear    ji   e  onear  ji     o n log f  m     thus


e ks sk e   enear     

x
oops i 


 
e   onear  o      n   log f  m   


ks sk   f  m   whp markovs inequality 
purpose remaining proofs  convenient introduce additional
notation  let    t    t            t t     sequence operations  define
t i   i     ti   i    i    
t im   i     ti t i   i      m ti     m   
   

fithe landscape random job shop scheduling instances

lemma    let random n jsp instance  let random schedule i 
let optimal schedule ks sk minimal  fixed
     holds whp  as n   ks sk   n     
proof  let sequence operations ops i   sorted ascending order priority
rand  i  o   where rand random priority rule used create s   note
ops i  j  o       j  o  must appear   let ti denote ith operation
 
consider schedule defined following procedure 
   s o  ops i  
   q     let qj denote j th operation q 
   let function ready o  return true    m o      j  o    false otherwise 
     n do 
 a  ready ti    set s o     m ti     otherwise append ti onto q 
 b  j    q  do 
i  ready qj    set s qj      m qj    remove qj q 
   schedule remaining operations q manner specified  in last
paragraph proof  
construction construction s  except manipulations
involving q  purpose q delay scheduling operation that 
scheduled immediately  might produce schedule s o       m o    first
show ks sk   n    whp  show optimal whp 
let p
qi denote q exists iterations step   performed  let
nm

iterations q  claim
q o   
i  
p  o q   number
n

   letting e       e e i     e s      e s   
ks sk oops i  q o     n    q
ks sk     e e      e qn          e e      e qn      
  e e      e qn         n    qn  
p
suffices show   e e      e qn     
oops i  q o   see this  let
 
 
n

e    o    o    e e q
    must q o      q o         charge e
operation  o    o    inserted q first  easy see operation
charged one edge perpiteration spends q  establishing claim 
thus suffices show ks sk oops i  q o     n    qn   n    whp 
 

 

 

 

divide construction n   n   epochs  consisting n    
iterations step    to be specified        let zj denote number iterations
step   occur end j th epoch  zj     j   convention  let

cjm t   z
  qzj set operations scheduled run
j 

end j th epoch 
   

fistreeter   smith


onear j n   o t zj   zj     j  o  t zj m      zj     set operations whose
job predecessor belongs nearby epoch 
 

 

 n    p ti onear    m     n       thus j  n   e  onear
 
t zj   zj       m     n     using a p i  straightforward show whp 
 onear t zj   zj     n

   
 

j  n   

     

claim whp  following statements hold j  n  
 

qi onear  

     

izj

j qzj      j qzj  qzj      j qzj   
zj

zjm

q q

 qzj   n

j  

     

   
   
 

     

 

     

prove induction  step induction fails exponentially
small probability  j                  hold trivially        true
operations t   z      onear first operations jobs  hence cannot added
q        follows             
consider case j      show        let arbitrary operation t zj   zj    onear  
m j  o  

induction hypothesis  specifically  equation         j  o  cj 




m j  o  
m o 
  cj 
  cj    induction hypothesis 

  thus q o   









   
m o 
m j  o  
m o 
m j  o  
 
cj  cj 
t   zj    n   t   zj   
letting denote right hand side inequality  e    
   
 

 
  
 
 
mn



  a p i  used show k     independent n   p   
mn
 
 
   exp  k  n    thus       holds probability least   exp  k  n   
show        let j j qzj       let ji qzj 
chosenso
m j  ji   
m j  ji   
m j  
minimal  j  ji   cj 
  thus ji qzj cj 
  cj         
   

       induction hypothesis  equation          qzj    m     n     using
 
technique above  show       holds probability least   exp  k  n  
k     independent n  
      implies                    together       imply        thus whp       
      hold j  n  
            


x
 
 
 
e
q o  e  onear   m n        m     n    
oops i 


   

fithe landscape random job shop scheduling instances

 

e  qn    e  t znm  zn   onear     m     n  
p
setting       gives ks sk oops i  q o     n    qn   n    whp 
remains show optimal whp  first prove following claim 
claim      non negative integers b  probability t a b  contains
two operations job

 ba  
n  

proof claim      let x denote number pairs operations t a b  belong
 
 ba  
job  p x      e x  ba
  n
n  
see optimal whp  note operations scheduled prior step  
cause idle time machine  operations qn cause
sub optimal  let  m    o ops i    m o    m   denote workload machine
m  let   arg maxm m    m   following hold whp 
set z
last   it holds

 

consists operations belonging jobs use

 n  m n    n  
whp z z 

z

 

 n n    n  

  z contains

operation job use last  z must contain two operations
job  claim      probability happens
 
 n      n    o     
 

n    z    z    m   m     m   this follows applying
central limit theorem  z     m    m   
thus whp holds prior execution step    contains period length
 
least  z   n   operations processed z  
 
 o ops i    j  o  z       assuming  qn     n    holds whp   always
schedule operations qn guarantee   s     m   implies optimal 

theorem    let random n jsp instance optimal makespan  min  i 
let random schedule i  fixed      holds whp  as n  
  s         min  i  
proof  proof lemma    let sequence operations ops i   sorted
ascending order priority rand  i  o   where rand random priority rule used
create s   note ops i  j  o       j  o  must appear  
let ti denote ith operation  
rather analyze directly  analyze schedule defined following procedure 
     
     n do 
   

fistreeter   smith

 a  set s ti     max t     j  ti        m ti      
 b     j  ti         m ti     set   maxi     ti    
procedure identical one used construct s  except that  whenever
operation ti assigned start time s ti        m ti     procedure inserts artificial
delays schedule order re synchronize machines    clear
  s    s   thus  suffices show   s         min  i  whp 
divide construction n epochs  update  in step   b   defines beginning new epoch  let zi number operations scheduled
end ith epoch  z      convention  let ti   maxi  zi    oi     updated 
p
 
 
value end ofpthe ith epoch  define
m  
ptni maxi   i m ti    m  ti   
n
  s   min  i  i     suffices show i    min  i  whp 
p
 
let p
   n   let l    i   zi zi  n      first consider il  
consider ii l  
 

let i  i  arbitrary integers   i    i  n i  i  n     let
i 
    function outcome
   t im   i       e      i m
i  i  events  namely  definition jobs  j   j t i   i          
alters value max   follows a p i 
 
 

n  
 
p   e       n
i  i      exp  
 max

       thus  holds whp   e     n i  i  possible choices
 
i  i    particular  whp
 m n zi zi  l  implies
p
p
  p
 
 
 
 
 
 m n n      m n      
il n
il
p
consider
ii l   shown proof lemma    claim      
non negative integers b probability t a b  contains two operations
 

 

 
job  ba 
n   thus probability arbitrary subsequence size n
 
  
contains two operations job n   e  i   l   n     clearly
p
 
 
max n     l  e  ii l   o n     
p
p
 
 
 
 
thus e  ii   o n              ii n      whp  easy
see  min  i  n  whp 

references
achlioptas  d     peres  y          threshold random k sat  k log   o k  
journal ams             
balas  e          machine sequencing via disjunctive graphs  implicit enumeration
algorithm  operations research          
beasley  j  e          or library  distributing test problems electronic mail  journal
operational research society                   
   

fithe landscape random job shop scheduling instances

beck  j  c     jackson  w  k          constrainedness phase transition job
shop scheduling  tech  rep  cmpt       school computing science  simon fraser
university 
boese  k  d   kahng  a  b     muddu  s          new adaptive multi start technique
combinatorial global optimizations  operations research letters             
brucker  p   jurisch  b     sievers  b          job shop  c codes   european journal operational research              code available http   optimierung 
mathematik uni kl de orsep contents html 
brucker  p   jurisch  b     sievers  b          branch bound algorithm
job shop scheduling problem  discrete applied mathematics                  
cheeseman  p   kanefsky  b     taylor  w  m          really hard problems are 
proceedings twelfth international joint conference artificial intelligence 
ijcai     sidney  australia  pp         
fisher  h     thompson  g  l          probabilistic learning combinations local job shop
scheduling rules  muth  j  f     thompson  g  l   eds    industrial scheduling 
pp          prentice hall  englewood cliffs  nj 
framinan  j  m   gupta  j  n  d     leisten  r          review classification
heuristics permutation flow shop scheduling makespan objective  journal
operational research society                   
french  s          sequencing scheduling  introduction mathematics
job shop  wiley  new york 
glover  f     laguna  m          tabu search  kluwer academic publishers  boston  ma 
hejazi  s  r     saghafian  s          flowshop scheduling problems makespan criterion  review  international journal production research                   
hoos  h  h     stutzle  t          satlib  online resource research sat 
gent  i  p   v  maaren  h     walsh  t   eds    proceedings sat       pp         
satlib available online www satlib org 
jain  a     meeran  s          state of the art review job shop scheduling techniques 
tech  rep   department applied physics  electronic mechanical engineering 
university dundee  dundee  scotland 
jones  a     rabelo  l  c          survey job shop scheduling techniques  tech  rep  
national institute standards technology  gaithersburg  md 
kim  y  h     moon  b  r          investigation fitness landscapes graph bipartitioning  empirical study  journal heuristics             
lourenco  h   martin  o     stutzle  t          iterated local search  glover  f    
kochenberger  g   eds    handbook metaheuristics  kluwer academic publishers 
boston  ma 
mammen  d  l     hogg  t          new look easy hard easy pattern combinatorial search difficulty  journal artificial intelligence research          
   

fistreeter   smith

martin  o  c   otto  s  w     felten  e  w          large step markov chains
traveling salesman problem  complex systems            
martin  o  c   monasson  r     zecchina  r          statistical mechanics methods
phase transitions combinatorial problems  theoretical computer science           
    
mattfeld  d  c          evolutionary search job shop  investigations genetic
algorithms production scheduling  physica verlag  heidelberg 
mattfeld  d  c   bierwirth  c     kopfer  h          search space analysis job shop
scheduling problem  annals operations research             
mezard  m     parisi  g          replica analysis traveling salesman problem 
journal de physique               
monasson  r   zecchina  r   kirkpatrick  s   selman  b     troyansky  l          determining computational complexity characteristic phase transitions  nature      
       
nowicki  e     smutnicki  c          fast taboo search algorithm job shop problem 
management science                
nowicki  e     smutnicki  c          new ideas ts job shop scheduling  tech 
rep           university wroclaw 
nowicki  e     smutnicki  c          advanced tabu search algorithm job shop
problem  journal scheduling            
reeves  c  r     yamada  t          genetic algorithms  path relinking  flowshop
sequencing problem  evolutionary computation          
roy  b     sussmann  b          les problemes dordonnancement avec contraintes disjonctives  note d s  no    bis  sema  paris  france  decembre 
selman  b   kautz  h     cohen  b          noise strategies local search  proceedings
aaai     pp         
slaney  j     walsh  t          backbones optimization approximation  proceedings   th international joint conference artificial intelligence  ijcai       pp         
spencer  j          modern probabilistic methods combinatorics  http   www cs nyu 
edu cs faculty spencer papers stirlingtalk pdf 
streeter  m  j     smith  s  f       a   characterizing distribution low makespan
schedules job shop scheduling problem  biundo  s   myers  k     rajan  k 
 eds    proceedings icaps       pp       
streeter  m  j     smith  s  f       b   supplemental material icaps      paper
characterizing distribution low makespan schedules job shop scheduling
problem  http   www cs cmu edu  matts icaps      
taillard  e          benchmarks basic scheduling problems  european journal operational research             
   

fithe landscape random job shop scheduling instances

taillard  e          parallel taboo search techniques job shop scheduling problem 
orsa journal computing            
van laarhoven  p   aarts  e     lenstra  j          job shop scheduling simulated
annealing  operations research                
watson  j  p   barbulescu  l   whitley  l  d     howe  a          contrasting structured
random permutation flow shop scheduling problems  search space topology
algorithm performance  informs journal computing               
watson  j  p   beck  j  c   howe  a  e     whitley  l  d          toward understanding
local search cost job shop scheduling  cesta  a   ed    proceedings sixth
european conference planning 
yokoo  m          adding constraints makes problem easier hill climbing
algorithms  analyzing landscapes csps  principles practice constraint
programming  pp         
zhang  w          configuartion landscape analysis backbone guided local search  part
i  satisfiability maximum satisfiability  artificial intelligence              
zhang  w     looks  m          novel local search algorithm traveling salesman problem exploits backbones  proceedings   th international joint
conference artificial intelligence  pp         

   


