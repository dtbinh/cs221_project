journal artificial intelligence research                  

submitted        published      

scheduling conservation designs maximum flexibility
via network cascade optimization
xue
alan fern

xue eecs oregonstate edu
afern eecs oregonstate edu

school eecs  oregon state university
corvallis        usa

daniel sheldon

sheldon cs umass edu

school computer science  university massachusetts
amherst         usa

abstract
one approach conserving endangered species purchase protect set land
parcels way maximizes expected future population spread  unfortunately 
ideal set parcels may cost beyond immediate budget constraints
must thus purchased incrementally  raises challenge deciding
schedule parcel purchases way maximizes flexibility budget usage
keeping population spread loss control  paper  introduce formulation
scheduling problem rely knowing future budgets organization 
particular  consider scheduling purchases way achieves population spread
less desired delays purchases long possible  schedules offer conservation
planners maximum flexibility use available budgets efficient way 
develop problem formally stochastic optimization problem network cascade
model describing commonly used model population spread  solution approach
based reducing stochastic problem novel variant directed steiner tree
problem  call set weighted directed steiner graph problem  show
problem computationally hard  motivating development primal dual algorithm
problem computes feasible solution bound quality
optimal solution  evaluate approach real synthetic conservation data
standard population spread model  algorithm shown produce near optimal
results much scalable generic off the shelf optimizers  finally 
evaluate variant algorithm explore trade offs budget savings
population growth 

   introduction
reserve site selection key problem conservation planning planners select land
regions designated nature reserves  either achieve general conservation goals
preserving biodiversity  achieve specific goals supporting recovery
endangered species  general  problem extremely complex involves reasoning
interplay uncertain population spread  uncertain future budgets 
problem specific factors  particular  properly assessing population spread involves
reasoning spatial aspects landscapes sizes  shapes  connectivity 
further  decision space huge  consisting possible land investment combinations
time 
c
    
ai access foundation  rights reserved 

fixue  fern    sheldon

given factors  would highly desirable conservation practitioners
enhance decision making via automated  semi automated  planning scheduling
algorithms  unfortunately  problem beyond scope existing off the shelf stochastic planners schedulers  largely due combination enormous state
action spaces  highly uncertain  exogenous dynamics  need spatio temporal
reasoning  main contribution paper make progress toward handling
complexities studying useful subproblem conservation planning used
practitioners realistic scenarios  general schema used develop algorithm
widely applicable  see section    one received significant attention
ai community  thus  hope work inspire new specialized
general purpose approaches complex stochastic planning scheduling problems 
recently  sheldon et al         studied restricted  still challenging  version
conservation planning problem  refer upfront conservation design
optimization  problem  planner given upfront budget stochastic
metapopulation model  hanski   ovaskainen        describes species
consideration spread throughout landscape available habitat  addition
system given information costs potential land parcels available
purchase conservation  objective select set land parcels immediately
purchase conserve  subject budget constraint  maximize spread
population within specified time horizon 
key simplification present problem land parcels assumed
purchased upfront currently available budget  advantage simplification
allows reasonably efficient near optimal solution approach  sheldon
et al          however  upfront simplification limits utility approach
number ways  first  conservation budgets generally arrive increments time 
unrealistic purchase large set parcels advance restricting small set
parcels using current budget may suboptimal long run  moreover 
often unnecessary purchase parcels spatially remote current population
species spread enough make relevant population growth 
second  upfront simplification requires planners commit advance conservation
strategies may take many years play out  ignores potential advantage
observing responding stochastic outcomes population spreading process
unfolds  example  population spread observed  may beneficial divert
money failed subpopulations purchase parcels near thriving populations 
contrast upfront planning  ideal approach would fully adaptive planning 
where  regular decision epochs  planner would make purchase decisions based
recent population budgetary information  unfortunately  currently available
adaptive planning tools scale realistic conservation scenarios  due
combination enormous state space  possible population purchase configurations  
enormous action space  possible subsets land parcels purchase   long horizons  tens
hundreds years   high degree stochasticity population spread model 
given challenge arriving fully adaptive solution  main contribution
paper introduce problem strikes important middle ground
upfront fully adaptive approaches  particular  consider conservation design
scheduling exploring trade off future population cost 
   

fischeduling conservation designs maximum flexibility

given initial conservation design  i e  set parcels purchase  asked
schedule purchase time parcel way     achieves population spread
time horizon within arbitrary tolerance population loss      maximizes
purchase flexibility delaying specified purchase time  i e  purchase deadline 
parcel long possible 
problem formulation simplifies fully adaptive problem number ways 
first  set parcels purchased provided input  removes degree
freedom planning problem  second  significantly  order select
action current time step  general case fully adaptive planning requires
computing policy dictates possible future contingency  least
reasonably likely ones  contrast  space possible schedules  focus here 
much smaller space policies even partial policies  allows compact
encoding scheduling problem  appear possible problem
computing full  even  partial policies  distinction fully adaptive
scheduling setting akin distinction closed loop open loop planning 
generally computing closed loop plans considered difficult openloop plans large stochastic problems 
solution scheduling problem yields useful tool conservation planners 
first develop conservation designs capture complex decision making
objectives  perhaps optimization software  schedule purchases obtain
efficient cost effective implementation design  conservation planner
flexibility purchase parcels time schedule specified
deadlines  knowing population spread hurt much purchase
delays 
addition  scheduling problem potentially used component
adaptive planner  common successful approach many adaptive planning problems
replanning  decision epoch non adaptive plan computed current
state first actions executed  work enables replanning approach
decision epoch first computes upfront design using existing work  e g  sheldon
et al          computes schedule purchases parcels scheduled
purchased immediately  purchase strategy would spend minimum amount
budget step guaranteeing limited loss population spread 
addition introducing formalizing problem conservation design scheduling  second contribution paper develop principled algorithm solving
it  key idea apply sample average approximation  saa  approach  shapiro 
      order arrive novel deterministic optimization problem  develop principled solution motivation special case  particular 
approximated loss tolerance ratio    deterministic optimization problem one
network cascade optimization  show equivalent novel variant directed
steiner tree problem  traditional steiner tree problem  graph edges associated
costs  objective compute steiner tree minimum cumulative edge
cost  variant  set weighted directed steiner graph problem  costs associated sets edges  possibly non disjoint  rather individual edges  show
problem computationally hard even restrictions traditional problem
admits efficient solution  present efficient primal dual algorithm 
   

fixue  fern    sheldon

guaranteed compute feasible solution bound quality optimal
solution  early stopping version algorithm provides natural approach
explore trade off future population budget flexibility 
experiments real synthetic data red cockaded woodpecker
conservation problem show primal dual algorithm produces near optimal results
much scalable standard optimization tools  cplex   show
trade off population budget allows flexibility purchasing land
parcels 
follows  section   first presents related work  followed problem formulation section    section   shows reduce subproblem set weighted
directed steiner graph problem  section   derives corresponding primal dual algorithm
natural extension trade off problem  experiments presented section   
finally conclude discuss future work 

   related work
previously  many different algorithms proposed select reserve sites formulating numerical measure reserve quality  together possible addition
constraints reserve must satisfy  solving optimal set sites
proposed model  e g  see review article  williams  revelle    levin         although
earliest reserve site selection algorithms largely ignored spatial considerations  many
newer models incorporate spatial objectives constraints directly optimization
problems  williams  revelle  levin argue primary reason importance
spatial attributes fact capture properties landscape favorable
underlying population dynamics  important  computationally difficult  research direction directly optimize respect model population
dynamics instead using spatial attributes proxy  direction
following paper addressing problem spatial conservation planning
respect specific widely adopted model population dynamics 
recent approach explicitly reasons population dynamics model
work sheldon et al         upfront conservation design problem  described
section    order cope stochasticity model  popular sample
average approximation  saa  approach employed transform stochastic problem
deterministic combinatorial optimization problem  problem encoded
mixed integer program  mip  solved using state of the art solvers 
approach able solve reasonably large problems via various speedup techniques 
scalability still limited relatively small number sample scenarios used saa 
controls accuracy approach  kumar et al         addressed
aspect approach  lagrangian relaxation used decompose saa problem
independent subproblems could solved practical time frame  possibly
parallel  standard optimizers  shown significantly reduce runtime
dependence number saa samples used 
unfortunately  directly extending approach compute multi stage adaptive
solutions  budget arrives increments time  seem practical  one
attempt two stage problems considered ahmadizadeh et al         
   

fischeduling conservation designs maximum flexibility

explore re planning using two stage non adaptive problem formulation  find
indeed offer advantages upfront planning  setting  budget split
decision epochs manually fixed  unlike work  work explicitly separates
decision parcels buy decision buy  the focus
work   may develop efficient special purpose algorithms latter problem
scale much easily bigger problems stages 
several existing approaches might considered fully adaptive
solution conservation problem  example  fully adaptive problem
encoded markov decision process  mdp   resulting state action spaces
would far big state of the art solvers  instance  recent advances solving
large spatio temporal mdps  crowley   poole        require significant restrictions
solution space  acceptable application  existing approach
stochastic planning successfully applied bent et al          chang
et al          chong et al         yoon et al          hindsight optimization
samples future outcomes optimistically estimates state value based
determined futures  however  action space huge  approach would
computational problems current algorithms require enumeration candidate
actions approximating state value  another approach would formulate
adaptive planning problem multi stage stochastic integer program  however  size
problem formulation scales exponentially number stages  running
time already costly single stage  sheldon et al          two stage problem
simpler setting fully adaptive  ahmadizadeh et al         
recently  golovin et al         proved simple greedy planning strategy provides
near optimal solutions adaptive conservation setting first appears similar
ours  however  order provide approximation guarantees  authors restrict
population dynamics spread occurs distinct land parcels  may
reasonable assumption slow moving species certain insects 
focus work  ignores critical aspects population dynamics highly mobile
animals birds  including red cockaded woodpecker experiments
based 

   problem formulation
section  first introduce basic terminology conservation design planning
define main stochastic optimization problem  next  describe sample average
approximation  saa  used transform problem deterministic optimization
problem  focus remainder paper 
    basic concepts
largely follow formulation sheldon et al          conservation problems
involve  large  land region interest divided land parcels
smallest land units available purchase  parcel contains number distinct
habitat patches  atomic units population dynamics model
either occupied unoccupied species interest  example  redcockaded woodpecker problem considered experiments  habitat patches correspond
   

fixue  fern    sheldon

particular trees prepared humans  or existing birds  facilitate
nesting  parcel p cost c p   denotes cost purchasing land
restoring conserving habitat patches suitable species
occupy 
conservation design set parcels intended purchased conserved 
given conservation design d  purchase schedule mapping parcels
purchase times                h     h time horizon interest purchasing
parcel time   means parcel going purchased  thus scheduler
may choose purchase parcels even though part design
realize best tradeoff budget flexibility population spread  although
species population dynamics yearly time step model  described below  
allowed purchase times  i e  decision epochs  may less frequent depending specific
problem  upfront schedule one assigns parcels purchase time     
worth noting purchase times specified schedule best viewed
purchase deadlines  is  interpret schedule constraining purchases occur
specified times  view justified fact setup below 
purchasing parcel earlier time specified never result worse population
spread 

      population dynamics model
use stochastic dynamics model sheldon et al          instance
popular metapopulation model ecology literature  hanski   ovaskainen        
patch two possible states time step  either unoccupied occupied 
conserved patches may occupied  population dynamics consists two types
stochastic events  colonization events occur population patch colonizes
unoccupied patch b  happens probability pab   extinction events occur
patch occupied time becomes unoccupied time      happens
probability   paa   events independent  details probabilities used
experiments given section   
single step colonization probability pab experiments typically decays
distance patches b  encodes spatio temporal dynamics
populations slowly spread source population new habitat made available 
thus  long term planning population spread  often unnecessary purchase
parcels distant source population time      since probability
population spreading distant patches near future negligible  delaying
purchases become relevant design  i e  population spread
nearby   conservation organization use limited funds much flexibly  however 
non trivial decide much delay purchases harm spread  since
decision depends much spatio temporal details population spread
model  decision optimization problem defined designed make 
   

fischeduling conservation designs maximum flexibility

    stochastic optimization problem
problem statement rely two important concepts     reward schedule 
   flexibility schedule  first define two concepts formulate
optimization problem terms them 
reward schedule   denoted r    random variable encodes
amount population spread time h  simply count number occupied
patches time h  easy show model upfront schedule always
achieves least much reward schedule thus maximizes expected
reward  thus  define maximum expected reward r   e r upfront    
optimization goal find schedule almost achieves optimal expected reward 
i e  e r        r positive real number indicates percentage
tolerance reward loss maximum purchase flexibility  know
upfront schedule achieves     r   however  requires commitment expenditures
first time step thus least flexible  indeed  formalize notion
flexibility terms expenditures time 
given schedule define corresponding cost curve c function
purchase times accumulated cost  c  t  equal total cost parcels
purchased time   including time t  curve non decreasing
provides view schedules spending profile time horizon  particular 
profile cost curve c  never c    i e  total expenditures  
never exceed     say   offers flexibility terms budget
management compared   preferred else equal 
define surrogate cost function schedules
costf     

x

c p  f   p  

p

parameterized function f times             h    real numbers 
require f        f parcel purchased within time horizon
would contribute surrogate cost  see surrogate cost function
simply weighted sum parcel costs  weight determined f based
parcels purchase time  although algorithm work real valued function 
assume henceforth f strictly decreasing  two reasons this  first 
discounting future costs makes sense due economic factors inflation  second 
intuitively  since f decreases purchase times  minimizing respect costf would
favor schedules delay purchasing  particular  policy   cost profile
never greater       assigned lower surrogate cost f
strictly decreasing 
parcels positive costs  upfront schedule unique element
maximizes surrogate cost  schedule defers purchases time h gives
unique minimum f strictly decreasing function  however  restrict
schedules achieve least reward     r   latter schedule excluded
may longer unique minimum 
   

fixue  fern    sheldon

specify problem conservation design scheduling  find
schedule set possible schedules that 
arg min costf    s t  e r        r


   

is  schedules achieve reward     r want return one
minimal terms surrogate cost  i e  maximal flexibility   thus  controls
trade off flexibility reward  particular  using larger increases
set feasible schedules allows potential returning flexible schedule
sacrificing reward 
note varying choice f may possible generate different solutions
equation    minimal sense feasible policy strictly
lower cost curve  experiments  use simple discounted f given f  t   
discount factor        
practice  likely conservation manager particular value
mind design time  rather  best viewed parameter varied order
observe different flexibility reward trade offs possible  final selection
schedule would based assessment possibilities 
finally  worth noting      no reward approximation   upfront solution
feasible solution typical population spread models  thus  using
    necessary achieving additional flexibility  requiring
policy achieve expected reward exactly r  i e        requires make purchases
accommodate unlikely outcomes population spread model contribute tiny 
positive  amount expected reward  example  consider outcome
population jumps initial location distant location first year 
undergoes spread  vanishingly small  positive  probability 
upfront schedule support population spread  since distant location purchased
first step  thus  schedule purchase distant parcel first
step suffer tiny loss reward compared upfront schedule 
achieve      however  purchase tend useless vast majority
probability mass 
    deterministic optimization problem
optimization problem stochastic sense constraint defined
terms expectation complicated population spread distribution  greatly
complicates direct solution problem  prior work stochastic optimization
upfront schedules  sheldon et al          address complication converting
stochastic problem approximately equivalent deterministic optimization problem 
done via common sample average approximation  saa  approach  see
shapiro       survey results   key idea approximate stochastic
optimization problem using collection samples probability distribution 
used approximate expectations probabilities via averages samples 
problem formulation  sample corresponds so called cascade scenario 
particular realization population spread process time horizon 
main idea behind application saa generate set cascade scenarios
   

fischeduling conservation designs maximum flexibility

probabilistic population spread model  approximate expected reward
schedules average reward scenarios  scenarios combined single
scenario graph  illustrated figure   explained detail remainder
section 
concretely  cascade scenario layered graph  layers correspond time
steps  vertex va t patch time step t  pair patches
 a  b  time step t  coin flipped probability pab determine directed
edge  va t   vb t     present not  edge present patch occupied time
 through previous colonizations non extinctions   patch b colonized
become occupied time      long conserved  is  presence edge
 va t   vb t     interpreted meaning occupied time b conserved
time      b occupied time     particular scenario 
way  cascade scenario graph encodes occupancy reachability  particular  assuming
 for now  patches conserved  patch b occupied time exactly
vb t reachable vertex va   corresponding initially occupied patch a 
approximate probabilistic spread model  sample set n i i d  cascade
n    scenarios
scenarios  c            cn    denote vertices cn  va t
combined single scenario graph  additional root vertex r
n   vertex representing initially occupied patch a  figure  
directed edges  r  va  
shows example scenario graph three scenarios range five time steps
involving three patches a  b  c  two parcels  one containing b
containing c  example  initially occupied patch hence
connected time step zero root node r across three scenarios  assuming
parcels conserved  i e  purchased upfront   vertex connected root node r 
corresponding patch considered occupied corresponding time
particular scenario  defined r connected
vertices initially occupied patches 
scenario graphs used work estimate reward schedules follows 
n incoming
given scenario graph  schedule said purchase node va t
edges patch purchased later time t  is   p  belongs
parcel p  thus  purchasing parcel p time viewed purchasing vertices
scenario graph  along incoming edges involve patches p occur
layer later  reflects fact patch purchased conserved 
considered conserved hence eligible occupancy remainder time
horizon  figure    example schedule shown purchases parcel p   containing
b  time    parcel p   containing c  time    vertices purchased
schedule shown shaded region  purchased  incoming edges
shown bold 
define conditions vertex scenario graph considered
n becomes occupied path
occupied given schedule  vertex va t
n   define variable x n  a  t  equal  
purchased edges r va t

n
va t occupied   otherwise  figure    shaded red set
vertices occupied example policy  example  note scenario   
  occupied since path r purchased edges 
vertex vc  
despite fact path graph r  since path involves
   

fixue  fern    sheldon

figure    example scenario graph  n      problem parcels p     a  b   p     c  
schedule   p          p         illustrated  using shaded boxes
indicate purchased nodes heavy line weights indicate purchased edges 
vertices representing occupied patches schedule colored red 

unpurchased edges  note upfront schedule would purchase node  since
vertices edges would considered purchased schedule 
average reward schedule relative scenario graph built scenarios
 c            cn   denoted follows 
r    

n
  xx n
x  a  h 
n

n  

average across scenarios number occupied patches time h 
figure   average reward example schedule would    key property
scenario graphs n r   converges e r    fixed
  implies set schedules     r       r upfront    converges
set     r       r   n grows  set policies wish
optimize flexibility over  further  policy   one use standard probability
concentration bounds  e g  chernoff bounds  show event  r   r   
probability mass decreases exponentially fast n grows  suggests
relatively small number scenarios required reliably obtain tight approximation
true expected reward policy  practice  however  important empirically
validate approximation errors reasonable number scenarios used
approximation 
   

fischeduling conservation designs maximum flexibility

motivates deterministic saa formulation original stochastic optimization problem     flexibility optimized subject constraint based
empirical reward r  is  deterministic problem solve 
arg min costf    s t  r       r


   

r   r upfront   
    overview solution approach
recall stochastic optimization problem     setting     resulted optimization problem would typically upfront schedule feasible solution 
rather  here  approximate saa formulation  typically non upfront
solutions feasible  even using      even large  but practical  values n   set scenarios used approximation tend include
highly unlikely scenarios  need accounted stochastic solution
using      observation motivates solution approach      particular 
section    first consider problem      turns new variant
classic steiner tree problem  derive incremental primal dual algorithm
problem  section    used approximately solve     case
    case early stopping  experiments show approach able
provide significant flexibility little loss reward  flexibility reward trade off
controlled     

   set weighted directed steiner graph formulation
motivated above  focus optimization problem     case     
is  must optimize flexibility subject constraint obtain optimal
empirical reward measured r  section  show formulate problem
novel variant steiner tree problem 
    set weighted directed steiner graph
     arrive final optimization problem     
arg min costf    s t  r     r  


   

view problem type steiner tree problem scenario graph 
particular  say vertex time   h terminal vertex reachable
root r  set nodes xnupfront  a  h      hence contribute
upfront reward r   way satisfy constraint r     r purchase
set edges scenario graph connect target nodes r  thus 
constraint equation   corresponds purchasing edges r path
terminal  steiner tree problem 
example  consider scenario graph figure    terminal nodes
  v     two
example nodes layer     except vb  
b  
nodes connected r directed path  schedule satisfies constraint
   

fixue  fern    sheldon

r     r must purchase edges terminals reachable r  note
example schedule figure    set purchased edges satisfy
   
constraint since path purchased edges terminal vertex vc  
problem similar traditional steiner tree problem 
significant difference  traditional problem  edge associated distinct
weight purchased individually  goal connecting terminals using
set edges minimum total weight  which always forms tree   rather  situation
complicated purchase parcels  correspond subsets edges
scenario graph  particular  purchasing parcel p time t  incurs cost c p f  t 
equation      corresponds purchasing edge set ep t cost c p f  t  contains
n   come vertex u arrive vertex v n p 
edges  u  va t
 
a t 
t  n             n    note cost model  total cost edge sets
purchased schedule exactly equals surrogate objective costf    
see problem instance problem call
set weighted directed steiner graph  sw dsg  problem  novel variant steiner
tree problem  goal select set vertices minimal total cost order
connect terminal vertices root  remainder paper
discuss problem general form simplify notation  input sw dsg
directed graph g    v  e  single root vertex r  set terminal vertices v 
set edge sets e    e            em   es e  non negative cost
cs es   particular  conservation problem edge sets e    ep t  
n      u  v n   e  p  t  t  n             n    cost c
ep t     u  va t
 
p t   c p f  t  
a t 
subset e forms steiner graph union edges connect r vertices  
desired output minimum cost subset e forms steiner graph  note
optimal steiner graph need tree sw dsg  unlike traditional steiner
tree problem 
clear sw dsg general original deterministic optimization
problem since latter specific edge set structure  instance  ep t  ep t 
t    t    however  structure make easier problem sw dsg 
following sections  prove problems np complete primaldual algorithm either setting  special structure lead
algorithmic advantages deriving primal dual algorithm  therefore  mainly discuss
problem form sw dsg simplify notation 
sw dsg problem motivated particular conservation application 
relevant problems steiner style objectives  edge
resources best considered groups  example  steiner trees often used
design communication networks edges correspond existing potentially new
communication links  situations links must purchased coherent sets
 e g  communication infrastructure different companies organizations   sw dsg
problem would appropriate formulation 
    computational complexity
knowledge  sw dsg generalization steiner tree problem
previously studied hence consider computational complexity 
   

fischeduling conservation designs maximum flexibility

sw dsg problem generalization traditional directed steiner tree  dst 
problem  known np complete  hwang  richards    winter         further 
standard complexity assumptions  dst hard approximate factor better
log  t     charikar  chekuri  cheung  dai  guha    li         note results
hold even acyclic directed graphs  number effective heuristic algorithms
dst  drummond   santos         many successful relying shortest path computations subroutine  shortest paths computed edge
weighted graphs efficiently  turns case set weighted problem 
particular  note shortest path problem special case dst  or sw dsg 
single terminal vertex  problem turns np hard swdsg  even restricted acyclic graphs special edge set structure shown
original deterministic optimization problem  case scenario graphs
conservation problem 
theorem    sw dsg problem np hard even restricted acyclic graphs
single terminal vertex edge set structure scenario graph 
proof  prove hardness reducing weighted set cover problem subclass
sw dsg problems restricted scenario graph one scenario exactly one terminal 
note consider decision version sw dsg problem  asks
feasible steiner graph whose cost less specified threshold c   instance
weighted set cover problem specifies ground set elements    e            en    set
   s            sm   subsets sj s  cost cj subset  cost bound c  
 

problem
asks whether collection total cost c
sj     s 
given set cover instance  first describe construct scenario graph illustrated figure   later describe corresponding sw dsg instance  graph
contains  n layers  alternate set layers element layers starting
set layer  n layers each  hence  n layers   layer vertices labeled s            sm
represent sets n vertices labeled e            en represent elements s 
addition include root vertex r  vertex seen parcel
single patch  edges graph go one layer immediate next layer
follows  root vertex edge going sj first set layer  ith
element layer  i e  layer  i graph   include edge vertex label sj
previous layer vertex label ei current layer whenever ei sj   finally 
vertex ei ith element layer edge sj next layer 
corresponding sw dsg  conservation problem  instance graph specified
follows  root node r single terminal vertex en final element layer 
edge sets specified follows  setting scenario graph 
edge sets ej t sj time t  particular  ej t contains every incoming
edge vertex vertex labeled sj layers t  t  let
strictly decreasing f  t  sufficiently close   ts  cost ej t equal
cj f  t  cj cost sj original set cover problem  words 
cost ej t almost cj   similarly  edge sets ei t ei time t  set
costs    cost threshold sw dsg problem equal threshold c
set cover problem 
   

fixue  fern    sheldon

see reduction correct  consider case resulting sw dsg
instance feasible solution  solution provides path r en purchased
edge sets total cost c  
since edge set ei t ei zero cost  edge set cost result
purchasing edge sets ej t   construction path must go sequence
alternating element nodes set nodes  particular  path must traverse element
node ei              n  way happen purchase
ei least one edge leading ei one immediately preceding sj layer  i 
possible ei sj   happen purchasing corresponding
edge set ej t   corresponding sj   cost  almost  cj   see
collection sj corresponding purchased edge sets must cover elements
total cost c   thus  collection sets solution set
cover problem 
conversely consider instance set cover problem feasible solution 
easy verify feasible solution corresponding sw dsg problem purchase
edge sets ej   corresponding sj set cover solution  combining
see feasible solution sw dsg instance feasible
solution set cover instance 

figure    description reduction set cover sw dsg single terminal
vertex scenario graph 

result proves shortest  or least cost  path problem np hard
sw dsg  i e  problem finding least cost path edges purchased
sets  thus  difficult extend prior shortest path based heuristics steiner tree
problem problem  given sw dsg np  np complete  motivates
derivation efficient heuristic solution approach next section  computes
feasible solution along bound cost optimal solution  importantly
bound provides sense good computed solution compared optimal 
   

fischeduling conservation designs maximum flexibility

   primal dual algorithm
potential solution approach sw dsg problem encode mixed integer
program  mip   straightforward  use off the shelf mip optimizer 
approach produced non trivial results upfront conservation problem  sheldon et al          experiments demonstrate  scale well problem 
related approach could consider rounding procedure mips lp relaxation 
solving lp relaxation easier solving mip  experiments show
scalability lp solvers poor problem sizes interest us  instead 
exploit mip encoding another way  following primal dual schema  vazirani        derive scalable algorithm performs near optimally experiments 
work considered non trivial generalization previous work  wong        
primal dual schema applied dst  moreover  early stopping version
primal dual algorithm provides way trade off schedule flexibility reward
        note primal dual algorithms sw dsg original deterministic
conservation problem differ notations  words  edge set structure
conservation problem offer improvements algorithm  thus
following  present approach sw dsg 
    primal dual algorithm sw dsg
apply primal dual schema  start giving primal mip sw dsg problem
along dual lp relaxation figure    primal mip includes binary
variable y es   edge set e  indicates whether es purchased  y es       
 y es         objective primal simply sum variables
weighted costs corresponding edge sets  steiner graph constraint  requiring
terminals connected root node purchased edges  encoded using
standard network flow encoding  lines     involving flow variables xki j   flow variable
xki j encodes flow edge  i  j  destined terminal k  flow balance constraints
    guarantee one unit flow carried path root node r terminal k 
lp relaxation primal simply replaces integer constraints y es  
variables positivity constraint  dual relaxed problem  lines     includes
k corresponding primal flow constraints  note
dual variables uki wi j
constraint one unit flow leaves root implied flow constraints 
omitting constraint  one could simplify dual eliminating ukr variables  or 
equivalently  set ukr     k   
given primal dual formulations problem  apply primaldual schema designing optimization algorithms  particular  primal dual algorithm
iterative iteration increases value dual objective purchases
single edge set es   corresponds setting primal variable y es       
iteration stops purchased edges form steiner graph  i e  primal becomes
feasible   value dual objective end iteration serves lower bound
optimal primal objective  provides worst case indication far
optimal returned solution is  high level  algorithm simple greedy heuristic
continuously purchases beneficial edge set order build paths
   

fixue  fern    sheldon

 primal  min


x

y es   cs  

subject to 

   

s  

x
 i h e

xki h

x

xkj i

 j i e

xki j



  r
  
       k   k t  v


  
 
  r  k
x
y es    k t   i  j  e


   

   

s  i j es

xki j     i  j  e  k
y es         

 dual  max

x

 ukk ukr   

   
   

subject to 

   

kt

x

k
wi j
cs                

   

k
ukj uki wi j
   k t   i  j  e

   

k  i j es

k
wi j

 

   

figure    mip sw dsg problem corresponding dual lp mips lprelaxation  sw dsg problem defined graph g    v  e   root vertex
r  set terminal vertices   set edges sets e    es                  
es e 

unconnected terminal  primal dual schema provides principled way incrementally
computing heuristic time computing lower bound 
algorithm   gives pseudo code algorithm  main data structure auxiliary
graph g     v  a  vertices input graph g  auxiliary graph edge
set initially empty iteration adds newly purchased edges es e 
algorithm terminates edges form steiner graph  edge sets used
construct graph returned solution  following pruning step
removes obviously redundant edge sets  algorithm sometimes include
iteration process 
order describe algorithm detail  first introduce terminology  given
current auxiliary graph a  let c k  denote set vertices directed
paths terminal node k via edges a  note consider k included
c k   also  define cut set terminal node k  denoted cut k   set
edges  i  j  j c k    c k   intuitively  k already reachable
root  know least one edge cut k  must added order
arrive steiner graph 
   

fischeduling conservation designs maximum flexibility

algorithm   primal dual algorithm sw dsg 
    inputs  graph g    v  e   edge sets e    e            em    costs  c      cm    terminals
v 
   initialize 
k       i  j  e  k
uki      k t  v  wi j
 
g    v  a   
lowerbound      solution  
   g  steiner graph
  
let k random vertex connected r g 
  
   s   es cut k         solution 
  
  arg minss  s 
k p

k 
 s  k    cs k  t  m n es wm n
  es cut k  
  
  
  
   
   
   
   

ukj   ukj    s   k   j c k 
k   w k    s   k    i  j  cut k 
wi j
i j
  es
lowerbound   lowerbound    s   k 
solution   solution  s  
end
pruning  solution   solution  s   s  solution  es es   

algorithm first initializes dual variables zeros auxiliary graph
include vertices edges  iteration proceeds first randomly selecting
terminal vertex k connected r auxiliary graph  intuitive level 
algorithm select edge set es contains cutset edge k according
heuristic  s  k  derived applying primal dual schema  concretely 
aim iteration raise dual objective value increasing value ukk
maintaining feasibility  increasing ukk violate constraints type    
dual lines     algorithm maintain feasibility selecting edge set
es among intersects cut set k raising variables corresponding
vertices c k  edges cut k  value  s   k   including ukk    done
way causes dual constraint type     corresponding edge set es become
tight  since constraint corresponds primal variable y es    algorithm effectively
sets y es        indicating purchase  adding edges es a  dual objective
value termination sum across iterations  s   k  returned lower
bound 
key property algorithm iteration increases dual objective 
maintaining feasibility dual  guarantees iteration
dual objective value corresponds true lower bound optimal value primal 
theorem    iteration primal dual algorithm produces feasible dual solution
increased objective 
proof  base case  initialization assigns dual variables zeros 
l   
feasible solution  suppose iteration q   starts feasible solution  uli   wi j
satisfies dual constraints type          algorithm terminates 
   

fixue  fern    sheldon

get feasible solution  otherwise let k terminal vertex selected  variables
l   l    k values changed      satisfied  remaining
 uli   wi j
variables l   k  three cases  case    j   c k   variables ukj
k unchanged  cannot contribute violation          case   
wi j
edge  i  j  j  c k   increase ukj uki  s   k  continue
satisfy corresponding constraint      case    cut set edge  i  j  cut k  
k  s   k      remains satisfied  since w k edges
increase ukj wi j
i j
cut set increased  must ensure constraints type     become violated 
choice  s   k  made algorithm verified never violate
constraints makes least one tight 
main portion algorithm terminates  pruning step conducted
remove edge set subset edge set solution  decreases
total cost maintaining feasibility  particular  context conservation
scheduling problem  pruning step ensures parcel purchased
final solution  aggressive computationally expensive
pruning techniques could used  example  one could consider removing
one selected edge sets final solution test feasibility 
solution still feasible  edge set eliminated  find
aggressive style pruning necessary experiments 
      implementation running time
k dual variables 
note pseudo code stores updates values ukj wi j
naive implementation algorithm would result o  e  t    runtime
initialization well computation per iteration   e  number edges
graph  t   number terminals  could much sw dsg
problems large network one conservation application  however 
algorithm described way presentation purposes  turns
purposes running algorithm  implemented significantly efficiently 
k values
particular  need store update sum corresponding wi j
edge set  i e  sum term appears inside definition  s  k  line
    maintain current objective value  stored lowerbound pseudo code  
updated line     therefore  iterations     variables
need initialized  number edge sets much smaller
size network  implementation dominant computation per iteration
computation cut set selected terminal k  find cut set backward
traversal terminal k toward root  time computation acceptable
terminals connected relatively small parts overall graph 
case conservation problem  terminals connected nodes
cascade among ones spatially close enough reached 
applications terminals possibly connected large portion graph 
may preferable incrementally maintain cut set every terminal iteration
reduce computation  memory needed o c t    c maximum
size cut set presumably c  e   getting cut set  algorithm takes
o m c  time identify best edge set update solution 

   

fischeduling conservation designs maximum flexibility

    early stopping fractional connection
primal dual algorithm  computation continues terminals
scenario graph connected paths root  context conservation
problem corresponds reward approximation loss         modify
primal dual algorithm allow reward approximation loss     
case corresponds modifying sw dsg feasibility constraint require
fraction   terminals connected  leading natural way exploring
trade off reward flexibility 
given incremental  greedy nature primal dual algorithm  adds one
edge set iteration  natural choice fractional connection problem stop
algorithm whenever least fraction   terminals connected 
basic early stopping approach lead improvement cost returned
solution  compared      savings often quite minimal  due fact
primal dual algorithm grows paths terminal nodes root
unaware early stopping condition  result  paths
grown never actually connected root point algorithm stopped 
unconnected paths considered waste resources respect
meeting fractional connection constraint  thus  make early stopping algorithm
viable  necessary perform pruning early stopping result  algorithm
fractional coverage two stages     generation  early stopping used
generate initial solution meets fractional connection constraint     pruning 
solution produced stage   pruned maintaining fractional connection
constraint 
pruning stage use simple effective greedy strategy  idea
iterate purchased parcels schedule returned early stopping stage
delay purchase parcel long possible ensuring number
connected terminal nodes almost always within required fractional connection
tolerance 
found conservation application  sw dsg problem corresponds set cascades  beneficial prune using independently generated
larger set scenarios used create initial solution  analogous using validation data tune algorithm parameters machine learning prediction problems 
beneficial reasons  found pruning based original set
scenarios often overly aggressive hurt empirical performance due over fitting
saa scenarios  since easily generate independent scenarios estimate true
expected reward pruned policies  better prune based criterion instead 
also  since computational complexity evaluating reward pruned policies low
compared saa optimization  afford use larger set scenarios 
particular  experiments formed initial schedules based set    cascade
scenarios conducted pruning step respect    cascade scenarios 
approach pruning viewed directly enforcing threshold
 independently estimated  expected reward original stochastic problem  equation
   instead enforcing threshold objective value saa problem  equation
    since cant calculate correct threshold value  the rhs equation    without
   

fixue  fern    sheldon

knowing true optimum r stochastic problem  use saa optimum r
place  saa optimum stochastic upper bound r   generally
conservative approach enforcing equation   

   experiments
section  first evaluate primal dual algorithm applying real  full scale
conservation problem  next  verify robustness approach problems 
present results using synthetic conservation data problem generator used several
recent studies  focus first two parts experimentation case     
see provides substantial gains flexibility  order explore trade off
flexibility reward  population spread   end section  evaluate
early stopping approach     
    evaluation primal dual algorithm real conservation map
real map use dataset prior work sheldon et al        
computing upfront conservation designs  data derived conservation problem
involving red cockaded woodpecker  rcw  large land region southeastern
united states interest conservation fund  region divided
    non overlapping parcels  each area least     acres       patches
serving potential habitat sites  parcel costs based land prices land
parcels already conserved thus cost zero  use population spread
model sheldon et al          based individual based models rcw 
since approach requires conservation design input  use design computed
sheldon et al         using total budget constraint     m  map area
shown left cell figure    parcels making design shaded green free
parcels  with cost    shaded grey  red   marks indicate initially occupied patches 
method requires specifying strictly decreasing function defining surrogate cost
function  use f  t            found results
sensitive value  
      comparing optimal solutions
compare solutions primal dual algorithm optimal solutions found using
cplex solver applied mip encoding sw dsg problem  mip encodings
become large horizon number scenarios increase  particular 
    h        h n variables number constraints grows number
edges  cascade network  becomes impractical n h grow  since
optimal solver cant scale large versions problem  consider problems involving
cascade networks   scenarios horizons ranging       years 
use cplex compute solutions lp relaxation mip  objective value
returned lp provides alternative approach computing lower bound
optimal solution thus interesting compare lower bound terms tightness
runtime  since primal dual algorithm stochastic due random selection
   

fischeduling conservation designs maximum flexibility

h
h
h
h
h
h

 
 
 
 
 
 

  
  
  
  
  
  

cost
mip
     
     
     
     

 m  
pd
      
     
     
     
     
     

lower
lp
     
     
     
     
     

bound
pd
    
    
    
    
    
    

run
mip
   
   
  
    

time
lp
    
   
  
  
  

 s 
pd
   
   
   
  
  
  

table    comparison primal dual  pd  mip lp 

terminal nodes  report averages    runs  noting standard deviations
negligible 
first two data columns table       show  surrogate  cost solutions
found cplex solving mip algorithm  pd  increasing horizons  larger
horizons correspond larger problems  method fails return solution due
memory constraints value shown table  see horizons mip
able yield solutions cplex  algorithm produces solutions similar
costs  here lower cost better   see mip solver runs memory
unable return solutions   largest problem instances  already scaled
versions problem  small number cascades horizon  
next two columns table       provide results lower bound computed
cplex solving lp pd algorithm  see lower bound produced
lp significantly tighter bound produced algorithm  however 
lp cannot solved cplex largest problem  approach still yields
lower bound  overall  though lower bound good lp  when
computed   generally within factor two optimal solution  provides
non trivial assurance quality returned solution large problems 
final three columns table       present time used approaches
problem  blank cells indicate method ran memory  algorithm
significantly faster mip approach  fails two largest problems 
comparable lp approach  provides lower bound fails
largest problem  later result indicates solution based lp rounding would
face difficulty  since even solving lp large problems     time steps     
patches each  computationally demanding  advantage primal dual algorithm
avoids encoding lp rather works directly graph 

   pd cost less optimal mip cost returned cplex  investigating  found
cplex correctly evaluates solution returns  thinks solution optimal
not  appears issue due small error tolerance allowed cplex solver 
   mip takes less time lp  think possibly cplex uses different algorithms
lp mip  especially  mip solved branch and bound algorithm uses modern features
cutting planes heuristics  making cplex powerful mip solver 

   

fixue  fern    sheldon

      number cascades scenario graph
according saa  optimal solution finite set cascade scenarios converge
true optimum scenarios  previously two cascades used due
poor scalability cplex  study number cascade scenarios use
ensure good solution  recall n increases  original stochastic problem
approximated accurately  yet larger n corresponds computation 
importantly       larger n leaves schedule less space flexibility 
extreme case n   possible schedule upfront schedule minimal
flexibility  find good value n practice  study primal dual solutions
different number cascade scenarios validating reward r   primaldual schedule achieve  given population spread stochastic  compute
reward r   running    simulations stochastic population spread model 
simulation provides reward value  number occupied patches horizon 
average results  schedules produced primal dual algorithm
upfront schedule  recall intention nearly match reward
upfront schedule  figure   presents results time horizon h      
observe primal dual schedule achieves reward n increases 
reward converging towards expected reward upfront schedule 
see    cascades quite close get best performance rate improvement
slowing down  thus  remainder experiments use    cascades saa 

figure    rewards pd solutions w r t number cascade scenarios 

      quality conservation schedules
evaluate algorithm problems realistic sizes  here  consider
problems based    cascades horizons ranging        years  well
beyond range approachable mip lp  solution times algorithm
ranged    seconds h         minutes h       
first  evaluate average accumulated reward schedule returned
method horizon figure    average reward upfront schedule ranged
    h          h       time horizons primal dual solution
attained average reward least       optimal  negligible error bars
   

fischeduling conservation designs maximum flexibility

averages  small gap indicates    scenarios saa approximation quite
goodthe gap could reduced increasing number scenarios 

figure    rewards pd schedules w r t 
time horizon h 

figure    cost curves pd schedules
horizons        

course  must consider cost curves corresponding schedules  since
affords flexibility criterion problem  figure   presents cost
curves schedules  note defined section      cost curve shows  nondiscounted  accumulated cost schedule time  cost curve schedule
produced horizon h increase time h remain flat  reflecting
purchases made time  see horizons cost curves show
fairly gradual increase cost expenditures time  indicating schedules
indeed providing significant amount flexibility regarding purchase times  particularly
compared upfront schedule  cost curve flat black line
figure   since parcels purchased time    experiments shown  found
cost curves vary small amount different values   general
trend present  interestingly  curves sudden jump cost around   
years  understand figure   show parcel purchases made
schedule population spread map     year horizon  see
     sharp increase cost due purchase relatively expensive
vast parcels southern part design  looking population spread dynamics 
apparent parcels critical gateway ensuring reliable spread
southwestern part design later years  delaying purchase longer significantly
increases probability spread occur  approach discovers 
another interesting observation seen comparing expected population
spread pd computed schedule expected population spread upfront
schedule  figure     striking difference spreads seen time steps
             northeastern part map  upfront schedule entire
northeastern part occupied large part  pd schedule hole
northeastern part near initial bird populations located  note  however 
hole finally occupied horizon problem  t         time 
spread upfront pd schedules visually similar  agrees fact
measured rewards similar  reason difference population
spread pd schedule delays purchase northeastern parts
   

fixue  fern    sheldon

    

    

    

     

figure     left  original conservation design used scheduling shown green shaded
parcels  free  zero cost  parcels shaded dark grey red   indicates
initially occupied patches   right  top row shows parcels purchased
 shaded green  pd schedule horizon     years  middle
row shows population spread horizon schedule 
lighter red shading patch indicates smaller probability occupied
 as measured    simulations   bottom row shows population spread
upfront schedule horizon     years 

map near initial bird population    years time horizon ends 
population spread process schedules  found parcels
closely connected hence become occupied fairly short time bird population
nearby  apparent upfront schedule  areas already occupied
      thus  purchase parcels delayed long enough time
left population spread landscapes  therefore  purchasing
delayed parcels far away current population  parcels
covered quickly reliably  note flexibility mainly due definition
reward function  takes population time h account  count
population every time step  presumably good schedule would purchase hole
area soon population 
    evaluation primal dual synthetic maps
evaluate primal dual algorithm thoroughly  randomly selected    synthetic
maps generated used prior work  ahmadizadeh et al          maps consist
region     non overlapping parcels     patches  different configurations
parcel costs initial population  map  considered problems involving
   

fischeduling conservation designs maximum flexibility

different conservation designs  design corresponded upfront solution
budget limited factor b total parcel cost map  b ranged    
     section  present similar analysis section     show consistent
results  indicating primal dual algorithm stable across different problems 
      comparing optimal solutions
first compare upper lower bounds returned primal dual algorithm
optimal objective values mip lp computed using cplex  since cplex still
scalability issues solving larger synthetic problems  restrict comparison
problems     scenarios horizon    years 
results    maps similar  example  figure   shows
surrogate cost  pd ub  dual objective value  pd lb  primal dual solution
map      together optimal surrogate cost  cplex mip  lower bound
computed lp cplex  see compared optimal  algorithm still
produce solutions similar costs  especially problem easy  b smaller  
also  see lower bound computed cplex better pd lower
bound  however  pd lower bound still within factor   

figure    cost objective value problems map      horizontal axis varies
amount budget used compute upfront solution used
conservation design given scheduling algorithms 

      quality conservation schedules
consider larger problems based    cascade scenarios horizon h      
mip lp practically solvable 
first compare average accumulated reward schedule returned primaldual algorithm upfront schedule  figure   shows results one maps 
indicating rewards achieved primal dual schedules always close
upfront schedules  desired  results maps similar 
study cost curves schedules order illustrate flexibility
compared upfront schedules  figure    presents average cost curves schedules
across    maps  noted budget limited  purchase
delayed much  example  b        parcels purchased      
long ahead time horizon  analysis explained fact
   

fixue  fern    sheldon

figure    rewards primal dual schedule upfront schedule
map      

figure     average cost curves pd
schedules    maps 

many maps small budgets  sets affordable parcels fairly spread
loosely connected  means population requires time order
reliably spread across sets  thus  parcels must purchased quite early
horizon support spread  rather larger budgets  sets parcels must
purchased spread tightly coupled  allows easier 
reliable population spread  thus  possible delay purchases much larger extent
seen cost curves larger budgets  shows algorithm able
afford considerable flexibility initial conservation design supports reasonably
reliable population spread 
    early stopping trading flexibility reward
consider early stopping variant primal dual algorithm  referred
pd es  producing schedules trade flexibility reward using     
dataset use real conservation map  figure    illustrates cost curves
early stopping schedules                               h                  
demonstrates possible budget saving time corresponding fraction reward loss
allowed  figure    shows average simulated rewards schedules 
first notice average reward achieved early stopping schedules
almost always within specified error tolerance  shows pruning step
generalizing effectively  see cost curves early stopping schedules
show significant improvement even small values compared early stopping
        example  h              almost cost first
several years  several decades cost approximately half cost required
     results show approach able provide set schedules spans
spectrum trade offs  considered conservation managers 

   summary future work
work  addressed problem scheduling purchases parcels conservation
design  formulated problem network cascade optimization problem
   

fischeduling conservation designs maximum flexibility

h     

h     

h     

h     

figure     cost curves pd es schedules pruning  red line        shows
cost curve non early stopping pd schedule 
reduced novel variant classic directed steiner tree problem  showed
problem computationally hard developed primal dual algorithm
problem  experiments showed algorithm produces close optimal results
much scalable state of the art mip solver  showed
early stopping variant algorithm able explore possible trade offs
flexibility reward  important consideration practice 
scheduling problem considered work poses considerable challenges generic
off the shelf schedulers planners  complicating factors include     highly stochastic 
exogenous dynamics arise population spread model     need reason
spatio temporal processes     long horizons must considered    
combinatorial space potential investment options point time  general
solution schema pursued work likely applicable problems
pose similar challenges existing techniques  particular  general schema suggests
approximating problem via saa studying resulting deterministic
optimization problem  often resulting deterministic problem correspond
existing well studied problems  state of the art approximation algorithms
used  cases  work  resulting problem related
existing well studied problem solution designed extending existing
solution frameworks  expect generic saa schema particularly useful
   

fixue  fern    sheldon

h     

h     

h     

h     

figure     rewards primal dual schedules early stopping  number
data point indicates percentage pd es reward pd reward 

problems involving stochastic spread populations information across networks 
since deterministic problems typical map graph theoretic problems 
vast literature 
future work  plan consider several improvements primal dual algorithm 
currently  iteration  algorithm randomly picks unconnected terminal
grow path from  likely intelligent selection mechanisms improve
overall results  interested developing primal dual algorithm directly
incorporates error tolerance constraint early stopping approach  would
provide direct method trading reward improved flexibility  furthermore 
intend pursue fully adaptive approaches conservation problems 
one idea incorporate scheduling approach replanning algorithm selects
purchases current decision epoch based up to date information 
particular  decision epoch schedule would formed parcels scheduled
purchased immediately  those flexibility  would purchased subset
cases immediate budget would exceeded  considering sophisticated
approaches take account immediate budget would natural useful
extension  would interesting consider conservation problem
variants reward function  species  rather caring population
   

fischeduling conservation designs maximum flexibility

end  ecological goal may value spread whole period
even more  presumably models would different properties complexities
one study paper 

acknowledgements
parts material paper appeared earlier work xue  fern  sheldon
        work supported nsf grant iis         

references
ahmadizadeh  k   dilkina  c   gomes  c  p     sabharwal  a          empirical study
optimization maximizing diffusion network    th international conference
principles practice constraint programming 
bent  r     van hentenryck  p          regret only  online stochastic optimization
time constraints  nineteenth aaai conference artificial intelligence 
chang  h  s   givan  r  l     chong  e  k          on line scheduling via sampling 
artificial intelligence planning scheduling 
charikar  m   chekuri  c   cheung  t   dai  a   guha  s     li  m          approximation algorithm directed steiner tree problems  ninth annual acm siam
symposium discrete algorithms 
chong  e  k   givan  r  l     chang  h  s          framework simulation based
network control via hindsight optimization  ieee cdc conference 
crowley  m     poole  d          policy gradient planning environmental decision making
existing simulators  twenty fifth aaai conference artificial intelligence 
drummond  l  m     santos  m          distributed dual ascent algorithm steiner
problems multicast routing  networks             
golovin  d   krause  a   gardner  b   converse  s  j     morey  s          dynamic resource
allocation conservation planning  twenty fifth aaai conference artificial
intelligence 
hanski  i     ovaskainen  o          metapopulation capacity fragmented landscape  nature                     
hwang  f  k   richards  d  s     winter  p          steiner tree problem  springer 
kumar  a   wu  x     zilberstein  s          lagrangian relaxation techniques scalable spatial conservation planning  twenty sixth aaai conference artificial
intelligence 
shapiro  a          monte carlo sampling methods  stochastic programming  handbooks
operations research management science  vol      pp         
sheldon  d   dilkina  b   elmachtoub  a   finseth  r   sabharwal  a   conrad  j   gomes 
c   shmoys  d   allen  w   amundsen  o     vaughan  b          maximizing
   

fixue  fern    sheldon

spread cascades using network design  uncertainty artificial intelligence
 uai  
vazirani  v  v          approximation algorithms  springer  berlin 
williams  j   revelle  c     levin  s          spatial attributes reserve design models 
review  environmental modeling assessment                 
wong  r  t          dual ascent approach steiner tree problems directed graph 
mathematical programming             
xue  s   fern  a     sheldon  d          scheduling conservation designs via network
cascade optimization  twenty sixty aaai conference artificial intelligence 
yoon  s   fern  a   givan  r  l     kambhampati  s          probabilistic planning via
determinization hindsight  twenty third aaai conference artificial intelligence 

   


