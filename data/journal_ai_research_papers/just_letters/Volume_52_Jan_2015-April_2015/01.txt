journal of artificial intelligence research                 

submitted        published      

deterministic oversubscription planning as heuristic search 
abstractions and reformulations
carmel domshlak
vitaly mirkis

dcarmel ie technion ac il
mirkis   gmail com

faculty of industrial engineering   management 
technion   israel institute of technology 
haifa  israel

abstract
while in classical planning the objective is to achieve one of the equally attractive goal
states at as low total action cost as possible  the objective in deterministic oversubscription
planning  osp  is to achieve an as valuable as possible subset of goals within a fixed
allowance of the total action cost  although numerous applications in various fields share
the latter objective  no substantial algorithmic advances have been made in deterministic
osp  tracing the key sources of progress in classical planning  we identify a severe lack of
effective domain independent approximations for osp 
with our focus here on optimal planning  our goal is to bridge this gap  two classes
of approximation techniques have been found especially useful in the context of optimal
classical planning  those based on state space abstractions and those based on logical landmarks for goal reachability  the question we study here is whether some similar in spirit 
yet possibly mathematically different  approximation techniques can be developed for osp 
in the context of abstractions  we define the notion of additive abstractions for osp  study
the complexity of deriving effective abstractions from a rich space of hypotheses  and reveal
some substantial  empirically relevant islands of tractability  in the context of landmarks 
we show how standard goal reachability landmarks of certain classical planning tasks can
be compiled into the osp task of interest  resulting in an equivalent osp task with a lower
cost allowance  and thus with a smaller search space  our empirical evaluation confirms the
effectiveness of the proposed techniques  and opens a wide gate for further developments
in oversubscription planning 

   introduction
the tools of automated action planning allow autonomous systems selecting a course of
action to get things done  deterministic planning is probably the most basic  and thus
the most fundamental  setting of automated action planning  russell   norvig         it
can be viewed as the problem of finding trajectories of interest in large scale yet concisely
represented state transition systems  computational approaches to deterministic planning
vary around the way those trajectories of interest are defined 
the basic structure of acting in situations with underconstrained or overconstrained
resources is respectively captured by what these days is called classical deterministic
planning  fikes   nilsson         and by what smith        termed oversubscription
deterministic planning  osp   in classical planning  the task is to find the most cost effective
trajectory possible to a goal satisfying state  in oversubscription planning  the task is to
find the most goal effective  or valuable  state possible via a cost satisfying trajectory  in
c
    
ai access foundation  all rights reserved 

fidomshlak   mirkis

optimal classical planning and in optimal osp  the tasks are further constrained to finding
only most cost effective trajectories and most goal effective states  respectively  classical
planning and osp can be viewed as foundational variants of deterministic planning  with
many other variants  such as net benefit planning and cost bounded planning  being defined
in terms of mixing and relaxing the two  
while osp has been extensively advocated over the years  the theory and practice of
classical planning have been studied and advanced much more intensively  the remarkable
success and continuing progress of heuristic search solvers for classical planning is one notable example  primary enablers of this success are the advances in domain independent
approximations  or heuristics  of the cost needed to achieve a goal state from a given state 
it is thus possible that having a similarly rich palette of effective heuristic functions for
osp would advance the state of the art in that problem 
two classes of approximation techniques have been found especially useful in the context of optimal classical planning  those based on state space abstractions  edelkamp       
haslum  botea  helmert  bonet    koenig        helmert  haslum  hoffmann    nissim 
      katz   domshlak      a  and those based on logical landmarks for goal reachability  karpas   domshlak        helmert   domshlak        domshlak  katz    lefler 
      bonet   helmert        pommerening   helmert         considering osp as heuristic search  a question is then whether some similar in spirit  yet possibly mathematically
different  approximation techniques can be developed for heuristic search osp  this is precisely the question we study here 
 starting with the most basic question of what state space abstractions for osp actually are  we show that the very notion of abstraction differs substantially for classical planning and osp  hence  first we define  additive  abstractions and abstraction
heuristics for osp  we then investigate the computational complexity of deriving
effective abstraction heuristics in the scope of homomorphic abstraction skeletons 
paired with cost  value  and budget partitions  along with revealing some significant
islands of tractability  this study exposes an interesting interplay between knapsackstyle problems of combinatorial optimization  continuous convex optimization  and
certain principles borrowed from explicit abstractions for classical planning 
 we introduce and study  landmarks  the logical properties of osp plans that achieve
valuable states  we show that  landmarks correspond to regular goal reachability
landmarks of certain classical planning tasks that can be straightforwardly derived
from the osp tasks of interest  we then show how such  landmarks can be compiled
back into the osp task of interest  resulting in an equivalent osp task  but with a
stricter cost satisfaction constraint  and thus with a smaller effective search space 
finally  we show how such landmark based task enrichment can be combined in a
mutually stratifying way with the best first branch and bound search used for osp
planning  resulting in an incremental procedure that interleaves search and landmark
discovery  the entire framework is independent of the osp planner specifics  and in
particular  of the heuristic functions it employs 
   the connections and differences between some popular variants of deterministic planning are discussed
in section   

  

fion oversubscription planning as heuristic search

our empirical evaluation on a large set of osp tasks confirms the effectiveness of the proposed techniques  moreover  to the best of our knowledge  our implementation constitutes
the first domain independent solver for optimal osp  and we hope that more advances in
this important computational problem will follow 
this work is a revision and extension of the formulations and results presented by the
authors at icaps      and ecai       mirkis   domshlak               the paper is
structured as follows  in section   we formulate a general model of deterministic planning 
define several variants of deterministic planning in terms of this model  and  in particular 
show that oversubscription planning differs conceptually not only from classical planning 
but also from other popular variants of deterministic planning such as net benefit planning
and cost bounded planning  we also specify a simple model representation language for
osp  as well as provide the essential background on heuristic search  and  in particular 
on osp as heuristic search  sections   and   are devoted  respectively  to abstractions
and abstraction approximations for osp  section   is devoted to exploiting reachability
landmarks in osp tasks  in section   we conclude and discuss some promising directions
for future work  for the sake of readability  some of the proofs are relegated to appendix a 
and some details of the empirical results are relegated to appendix b 

   background
as mentioned in the introduction  specific variants of deterministic planning differ in the
way the interest and preference over trajectories are defined  for instance  in classical
planning  fikes   nilsson         a trajectory is of interest if it connects a designated initial
state to one of the designated goal states  with the preference being towards trajectories
with lower total cost of the transitions along them  among other  non classical variants
of deterministic planning are
 oversubscription planning  smith         the topic of interest here 
 net benefit planning  van den briel  sanchez  do    kambhampati        sanchez
  kambhampati        baier  bacchus    mcilraith        bonet   geffner       
benton  do    kambhampati        coles   coles        keyder   geffner        
 cost bounded  also known as resource constrained  planning  haslum   geffner       
hoffmann  gomes  selman    kautz        gerevini  saetti    serina        thayer  
ruml        thayer  stern  felner    ruml        haslum        nakhost  hoffmann 
  muller         and
 planning with preferences over temporal properties of the trajectories  baier et al  
      gerevini  haslum  long  saetti    dimopoulos        benton  coles    coles 
      
interestingly  while working on this paper  we have learned that quite a few different
variants of deterministic planning are often collectively referred to as oversubscription
planning  as a result  the difference between them in terms of expressiveness is not necessarily clear  and thus  the relationship between what we do here and what has already been
done in the collective sense of oversubscription planning is not always apparent  this is
the issue we will address first 
  

fidomshlak   mirkis

    models
adopting and extending the notation of geffner and bonet         we can view many
variants of deterministic planning  including classical planning  as well as many popular
non classical variants  as special cases of a state model
m   hs  s    u  o    c  qi

   

with 
 a finite set of states s 
 an initial state s   s 
 a state value function u   s   r       
 operators o s   o applicable in each state s  s 
 a deterministic state transition function  s  o  such that s     s  o  stands for the
state resulting from applying o  o s  in s 
 an operator cost function c   o  r     and
 a quality measure q   p   r      where p is the  infinite  set of trajectories
from s  along operators o  a trajectory in p is a sequence of operators ho            on i
such that o   o s    and  inductively  oi  o          s    o            oi     oi     
in this model  any trajectory   p is a solution  with preference towards solutions of
higher quality  in what
p follows  sjk stands for the end state of a trajectory  applied at
state s  and c     o c o  is the additive cost of   likewise  the graphical skeleton
gm   hs  t   oi of a model m refers to the edge annotated  unweighted digraph induced
by m where the nodes of gm are the states s  the edge labels are the operators o  and t
contains an edge from s to s  labeled with o iff o  o s  and s     s  o  
first  consider a quality measure
q       u sjk   c   

   

this measure assumes that state values and operator costs are comparable  and thus represents a tradeoff between the value of the end state and the cost of the trajectory  consider
now a fragment of the state model      instances of which all have the quality measure q   
and for each instance  the value function
 
 
s  sgoal
u s   
   
  otherwise
partitions the state space into sgoal  s  on which u takes a finite value      and the
rest of the states  on which u takes the value of   finding an optimal solution for an
instance m of this fragment corresponds to finding a shortest path from s  to a single node
s in an edge weighted digraph g  which is obtained from gm by  i  annotating the edges
of the latter with costs c  and  ii  adding a dummy node s and zero cost edges from all
   

fion oversubscription planning as heuristic search

constraint

preference

net benefit

oversubscription

constraint

end state value

action cost
preference

classical

cost bounded

figure    schematic classification of four deterministic planning models along the strictness
with which they approach the cost of operator sequences and the value of the
operator sequence end states  white blocks are for planning models that can be
solved as single source single target shortest path problems 

goal nodes s  sgoal to s   while specified in a non canonical way  this fragment can be
easily verified to correspond to the model of classical planning  with sgoal being the classical
planning goal states 
staying with the quality measure q  and removing now the requirement on u to comply
with eq     we obtain a fragment that generalizes classical planning  and constitutes the
basic model of what is called net benefit planning  sanchez   kambhampati         importantly  any instance m of this fragment can be reduced to finding a shortest path from
a single node s  to a single node s in an edge weighted digraph g  obtained from gm by
 i  annotating edges of gm with costs c   ii  adding a dummy node s andpedges from all
nodes s  s to s   and  ii  setting the cost of each such new edge  s  s   to s  s  s  u s    
this reduction works because net value maximization over the end state s is equivalent
to minimization of the net loss of giving up on all the other possible end states  this
same basic idea underlies keyder and geffners        scheme for compiling certain standard representation formalisms for net benefit planning into a standard classical planning
formalism  
consider now an alternative quality measure
 
u sjk   c    b
q     
 
 
otherwise
b

   

   it is worth noting that the wost case complexity equivalence between classical planning and net benefit
planning has been shown prior to the work of keyder and geffner        by van den briel et al         
however  this equivalence was not prescriptive enough to suggest practically effective compilations of
compactly represented net benefit planning tasks to classical planning tasks 

   

fidomshlak   mirkis

where b  r   is a predefined bound on the cost of the trajectories  the fragment of the
basic model  instances of which are characterized by having the quality measure qb and
the  or  value functions as in eq     constitutes the model of what is called costbounded planning  thayer   ruml         here as well  finding an optimal solution for a
problem instance m corresponds to finding a shortest path from s  to s in an edge weighted
digraph g  which is derived from gm identically to the case of classical planning   this 
in particular  explains why it is only natural for heuristic search methods for cost bounded
planning to exploit heuristics developed for classical planning  haslum        
we now arrive to a fourth fragment of the basic model  staying with the quality measure qb and removing the requirement on u to comply with eq     we obtain a fragment
that generalizes cost bounded planning  and constitutes the model of oversubscription planning  smith         as illustrated in figure    the hard constraint of classical planning
translates to soft preference in osp  and the hard constraint of osp translates to soft preference in classical planning  however  in contrast to cost optimal  net benefit  and classical
planning  this fragment does not appear to be reducible to the single source single target
shortest path problem  in terms of the digraph g obtained from gm by annotating the
edges with costs c  finding an optimal solution to an instance of oversubscription planning
requires  i  finding shortest paths from s  to all states s  s with u s        ii  filtering out
from these states those that are not reachable from s  within the cost allowance b  and  iii 
selecting from the remaining states a state that maximizes u 
this contrast between oversubscription planning and the three other popular variants of
deterministic planning discussed above has at least two important implications  first  while
a single shortest path can be searched for using best first forward search procedures such
as a   searching for shortest paths to numerous targets simultaneously requires a different 
more exhaustive  forward search framework such as branch and bound  second  net benefit
and cost bounded planning clearly have the potential to  directly or indirectly  reuse the rich
toolbox of heuristic functions developed over the years for classical planning  in contrast 
due to the differences in the underlying computational model  the same is not necessarily
true for oversubscription planning  and examining the prospects of heuristic functions in
osp is precisely the focus of our work here 
    notation
for k  n    by  k  we denote the set                k   the indicator function of a subset a of
a set x is a function  a   x         defined as  a  x      if x  a and  a  x      if x   a 
following nebel         when we talk about the size of a mathematically well defined object
x  symbolically   x    we mean the size of a  reasonable  encoding of x  an assignment of a
variable v to value d is denoted by hv di  we often refer to such single variable assignments
as propositions 

   strictly speaking  once a shortest path  from s  to s is found  it should still be checked against the
cost bound b  this test  however  is local to   and problem solving finishes independently of the tests
outcome 

   

fion oversubscription planning as heuristic search

    model representation
departing from a very general model of oversubscription planning  in what follows we restrict our attention to instances of that model that are compactly representable in a language
close to the sas  language for classical planning  backstrom   klein        backstrom  
nebel         in this language  a deterministic oversubscription planning  osp  task
is given by a sextuple
   hv  s    u  o  c  bi 

   

where
    v    v            vn   is a finite set of finite domain state variables  with each complete
assignment to v representing a state  and s   dom v         dom vn   being the state
space of the task 
    s   s is a designated initial state 
    u is an efficiently computable state value function u   s  r    
    o is a finite set of operators  with each operator o  o being represented by a pair
hpre o   eff o i of partial assignments to v   called preconditions and effects of o  respectively 
    c   o  r   is an operator cost function 
    b  r   is a cost budget allowed for the task 
now consider the semantics of such a task description in terms of 
our basic model  an
ff
osp task    hv  s    u  o  c  bi can be said to induce the model m   s  s    u  o    c  qb  
with qb being the quality measure     instantiated with the s budget b  and the transition
function  being specified as follows  for a partial assignment p to v   let v p   v denote
the subset of variables instantiated by p  and  for v  v p   p v  denote the value provided
by p to the variable v  similarly to the classical planning semantics of sas    operator o
is applicable in a state s iff s v    pre o  v  for all v  v pre o    applying o changes the
value of each v  v eff o   to eff o  v   and the resulting state is denoted by sjok  this
notation is only defined if o is applicable in s  denoting an empty sequence of operators by  
applying a sequence of operators ho            om i to a state s is defined inductively as sjk    s
and sjo            oj k    sjo            oj  kjoj k  an operator sequence  is called an s plan if it is
applicable in state s and qb         that is  c    b 
some
s auxiliary notation is used later on  for an osp task    hv  s    u  o  c  bi  by
d   vv dom v  we denote the union of the  uniquely labeled  state variable domains 
for a state s and a proposition hv di  d  hv di  s is used as a shortcut notation for
s v    d 
an example of a simple osp task in figure   is used to illustrate this model representation  in this example  a truck is initially at location a  and it can drive  only  from location
a to location b and from location b to location c  two packages  x and y  are initially
at location b  when a package and the truck are in the same location  the package can
be loaded onto the truck  and when a package is on the truck  it can be unloaded at the
   

fidomshlak   mirkis

x
y
a

b

c

 a 
oi
pre oi  
eff oi  

driveab
i  
 ht ai 
 ht bi 

drivebc
i  
 ht bi 
 ht ci 

loadbx
i  
 ht bi   hx bi 
 hx t i 

loadby
i  
 ht bi   hy bi 
 hy t i 

unloadcx
i  
 ht ci   hx t i 
 hx ci 

oi
pre oi  
eff oi  

unloadbx
i  
 ht bi   hx t i 
 hx bi 

unloadby
i  
 ht bi   hy t i 
 hy bi 

unloadcy
i  
 ht ci   hy t i 
 hy ci 

loadcx
i  
 ht ci   hx ci 
 hx t i 

loadcy
i     
 ht ci   hy ci 
 hy t i 

 b 
u  

cbb

o 
abb

o 

bbb

btb
o 
o 
o 
o 
bbt

ctb

o 
o 

ccb

btt

o 

ctt

o 
o 
o 
o 
o 
o 

o  
o 
u  

o  
o 

cbc

ctb

o 
o 

ccb

btt

o 

ctt

cbt

u  

o 
o 

ctc

u  
cct

o  u  
o 
ccc

o  
o 

 c 
u  

cbb

o 
abb

o 

bbb

btb
o 
o 
o 
o 
bbt

o 
o 
o 
o 
o 
o 

o  
o 
u  

cbt

o  
o 

u  

o 
o 

ctc

u  
cct

o  u  
o 
ccc

o  
o 

cbc

 d 

figure    a simple running example of an osp task  with  a  illustrating the story   b  listing the operators  and  c   d  depicting the graphical skeleton of the induced state
model   c  shows the region of the graphical skeleton gm that is structurally
reachable from the initial state abb  and the grayed area in  d  corresponds to
the sub region that cannot be reached from the initial state under the budget
b     

trucks current location  each  drive  load  and unload  operator in the task costs one unit
of cost  and the cost budget is set to four units of cost  finally  a value of one  value unit 
is earned for each package present at location c 
this osp task  is described here using three state variables v    t  x  y   with
dom t     a  b  c  and dom x    dom y     a  b  c  t    corresponding to the possible
locations of the truck and the two packages  respectively 

 the operator set ffo    o            o    
is detailed in figure   b   in the state model m   s  s    u  o    c  qb induced by this
   

fion oversubscription planning as heuristic search

bfbb     hv  s    u  o  c  bi 
open    new max heap ordered by f  n    h shni  b  g n  
initialize best solution n    make root node s   
open insert n  
closed    
best cost    
while not open empty  
n    open pop max  
if f  n   u shn i   break
if u shni    u shn i   update n    n
if shni   closed or g n    best cost shni  
closed   closed   shni 
best cost shni     g n 
foreach o  o shni  
n     make node shnijok  n 
if g n      b or f  n     u shn i   continue
open insert n   

return n
figure    best first branch and bound  bfbb  search for osp
task  we have s   dom t dom x dom y   the initial state s    abb  with the three letters in the names of the states capturing the three components of the domain cross product  
operator cost c oi       for all operators oi   cost budget b      and state values


   s    ac   bc   ca   cb 
u s       s    cc 


   otherwise

 

the graphical skeleton gm is depicted in figures   c  and   d   figure   c  shows the
region of the graphical skeleton gm that is structurally reachable from the initial state
abb  and the grayed area in figure   d  corresponds to the sub region that cannot be
reached from the initial state under the budget b     
    osp as heuristic search
the two major ingredients of any heuristic search planner are its search algorithm and
heuristic function  in classical planning  the heuristic is typically a function h   s  r   
    with h s  estimating the cost h  s  of optimal s plans  a heuristic h is admissible
if it is lower bounding  that is  h s   h  s  for all states s  all common heuristic search
algorithms for optimal classical planning  such as a   require admissible heuristics 
in contrast  a heuristic in osp is a function h   s  r    r     with h s  b  estimating
the value h  s  b  of optimal s plans under cost budget b  a heuristic h is admissible if it is
upper bounding  that is  h s  b   h  s  b  for all states s and all cost budgets b  here as well 
   

fidomshlak   mirkis

search algorithms for optimal osp  such as best first branch and bound  bfbb    require
admissible heuristics for pruning search branches without violating solution optimality 
figure   depicts a pseudo code description of bfbb for osp  shni there denotes the state
associated with search node n  and cost so far g n  is the total cost of the action sequence
associated with n  unlike in a   the order in which the nodes are selected from the open
list does not affect the optimality guarantees  though it may  of course  seriously affect the
empirical efficiency of the search   in figure    the ordering of open corresponds to the
decreasing order of h shni  b  g n    the duplicate detection and reopening mechanisms
in bfbb are similar to those in a  pearl         in addition  bfbb maintains the best
solution n found so far and uses it to prune all generated nodes evaluated no higher than
u shn i   likewise  complying with the semantics of osp  all generated nodes n with costso far g n  higher than the problems budget b are also immediately pruned  when the
open list becomes empty or the node n selected from the list promises less than the lower
bound  bfbb returns  the plan associated with  the best solution n   if h is admissible 
that is  the h based pruning of the generated nodes is sound  then the returned plan is
guaranteed to be optimal 
let us now return to the heuristic functions  in domain independent planning they
should be automatically derived from the description of the model in the language of choice 
a useful heuristic function must be both efficiently computable from the description of the
model  as well as relatively accurate in its estimates  improving the accuracy of a heuristic
function without substantially worsening the time complexity of computing it translates
into faster search for plans 
in classical planning  numerous approximation techniques  such as monotonic relaxation  bonet   geffner              hoffmann   nebel         critical trees  haslum
  geffner         network flow  van den briel  benton  kambhampati    vossen       
bonet         logical landmarks for goal reachability  richter  helmert    westphal       
karpas   domshlak        helmert   domshlak        bonet   helmert         and
abstractions  edelkamp        helmert  haslum    hoffmann        katz   domshlak 
    a   have been translated to effective heuristic functions  likewise  different heuristics
for classical planning can also be combined into their point wise maximizing and or additive
ensembles  edelkamp        haslum  bonet    geffner        coles  fox  long    smith 
      katz   domshlak      b  helmert   domshlak        
in contrast  development of heuristic functions for osp has not progressed beyond the
initial ideas of smith         in principle  the reduction of keyder and geffner        from
net benefit to classical planning can be used to reduce osp to classical planning with realvalued state variables  koehler        helmert        fox   long        hoffmann       
gerevini  saetti    serina        gerevini et al         edelkamp        dvorak   bartak 
      coles  coles  fox    long         so far  however  progress in heuristic search classical
planning with numeric state variables has mostly been achieved around direct extensions
of delete relaxation heuristics via numeric relaxed planning graphs  hoffmann       
edelkamp        gerevini et al                unfortunately  these heuristics do not preserve
information on consumable resources such as budgeted operator cost in oversubscription
   bfbb is also extensively used for net benefit planning  benton  van den briel    kambhampati       
coles   coles        do  benton  van den briel    kambhampati         as well as some other variants
of deterministic planning  bonet   geffner        brafman   chernyavsky        

   

fion oversubscription planning as heuristic search

planning  the negative action effects that decrease the values of numeric variables are
ignored  possibly up to some special handling of so called cyclic resource transfer  coles
et al         
as a first step in overcoming the lack of effective heuristics for osp  in the next section
we study abstractions for osp  from their very definition and properties  to the prospects
of deriving admissible abstraction heuristics  in section   we then study the prospects of
adapting to osp the toolbox of logical landmarks for goal reachability  to date  abstractions
and landmarks are responsible for most state of the art admissible heuristics for classical
planning  and thus are of special interest here 

   abstractions
the term abstraction is usually associated with simplifying the original model  factoring
out details less crucial in the given context  context determines which details can be reduced  which should better preserved  and how the abstraction is created and used  cousot
  cousot        clarke  grumberg    peled        helmert et al         domshlak  hoffmann    sabharwal        katz   domshlak      b   in general terms  abstracting a model
m corresponds to associating it with a set of  typically computationally more attractive 
models m            mk such that solutions to these models satisfy certain properties with respect to the solutions of m   in particular  in deterministic planning as heuristic search 
abstractions are used to derive heuristic estimates for the states of the model of interest m  
given a state s of m and an abstraction m            mk  
    s is mapped to some abstract states s   m            sk  mk  
    the k models of the abstraction are solved for the respective initial states s            sk  
and
    an aggregation of the quality of the resulting k solutions is used as the heuristic estimate
for s 
sometimes schematically and sometimes precisely  the process of constructing abstractions as above for a state model m   hs  s    u  o    c  qi can be seen as a two step process
of
    selecting an abstraction skeleton as     g                  gk   k     where each pair
 gi   i   comprises an edge labeled digraph gi   hsi   ti   oi i  with nodes si   edges ti  
and edge labels oi   and a state mapping i   s  si   and
    extending as to a set of abstract models m    m            mk    such that  for i   k  
gi is the graphical skeleton gmi of mi  
to qualify as a valid abstraction of the model m   the resulting set of abstract models
m should satisfy certain conditions specific to the variant of the deterministic planning
under consideration  for instance  the optimal solutions of abstract models in classical
planning are required to be at most as costly as the respective solutions in the original
models  with that constraint to be satisfied by individual abstract models in case of maxaggregation  pearl         or by the k abstract models jointly  in case of additive abstractions  yang  culberson  holte  zahavi    felner        katz   domshlak      b   as we
   

fidomshlak   mirkis

now show  the concept of abstractions in general  and additive abstractions in particular  is
very different in osp  and  for better or for worse  has many more degrees of freedom than
the respective concepts in classical planning 
    abstractions of osp problems
given
an abstraction


ff skeleton as     g                  gk   k    for an osp state model m  
s  s    u  o    c  qb   each digraph gi   hsi   ti   oi i implicitly defines a set of osp state
models consistent with it  this set is given by ci  ui  bi   where ci is the set of all
functions from operators oi to r     ui is the set of all functions from states si to r    
and bi   r     in these terms  each point  c  u  b   ci  ui  bi induces an osp model
consistent with gi   and vice versa 
connecting between these sets of models for all the digraphs in as  let
c   c       ck  
u   u       uk  
b   b       bk  
for each state s  m   every point  c  u  b   c  u  b induces a set of models
n
o
 c u b 
 c u b 
m c u b    m 
          mk
 
 c u b 

with mi



ff
  si   i  s     u i   oi   i   c i   qb i   

 the states si and operators oi correspond to the nodes and edge labels of gi  
 the transition function i  s  o    s  iff ti contains an arc from s to s  labeled with
o  oi  
 the initial state i  s    is determined by the initial state s  and the state mapping i  
and
 the operator cost function  state value function  and cost budget are all directly determined by the choice of  c  u  b  
for some choices  c  u  b  from c  u  b  the induced sets of models m c u b  can be
used for deriving admissible estimates for the state of interest s    while others cannot  the
respective qualification is defined below 
definition
    additive osp
ff abstraction 
let m   s  s    u  o    c  qb be an osp model and as     g                  g    k    be
an abstraction skeleton for m   for  c  u  b   c  u  b  m c u b  is an  additive 
abstraction for m   denoted as
m c u b  aas m 
if and only if
def

h  s    b   hm c u b   s    b   

x

hi  i  s     b i   

i k 

that is  when hm c u b   s    b  is an admissible estimate of h  s    b  
   

fion oversubscription planning as heuristic search

gm

  s 
o     
  
  
  s 
s 
o 

o 

  s 

g 

g 

s
     
o  zz
z
zz
zz

o 

o 
o 

  s 

s   

o 

  s   

 a 

o 

  s    

s   

o 

o 

  s   
o 



  s   

 b 
figure    illustration for our running example

in simple terms  a set of models forms an additive osp abstraction if jointly the models
in it do not underestimate the value that can be obtained from the initial state  within the
  for example  let g
given cost budget 
 a be the graphical skeleton of a state
m in figure ff


model m    s            s     s    u   o            o       c  qb   with c oi       for all operators oi  
b      and u si           i   let as     g          g         be an abstraction skeleton for
m   with g  and g  as in figure  b and with state mappings
 
s      i        
   si    
 
s  i   otherwise
 
s      i    
   si    
 
s  i   otherwise
consider a set of models m c u b    with constant c        c           b      b         and 
for j       u i  si j           j   the optimal plan s   plan for m is    h s    o    s      s    o    s   i 
 c u b 

with qb         while the optimal    s    plan for m 
is     h s      o    s     i  with
 c u b 
b   
q           and the optimal    s    plan for m 
is     h s      o    s     i  with
qb              since
h  s    b    qb     qb           qb           h      s     b       h      s     b     
m c u b  is an additive abstraction for m  
theorem   for any osp task    hv  s    u  o  c  bi  any abstraction skeleton as  
  g                  gk   k    of m   and any m aas m   if the digraphs of as are given
explicitly  then hm  s    b  can be computed in time polynomial in      and   m   


ff
proof  let m    mi  i k    with mi   si   i  s     ui   oi   i   ci   qbi   be an additive abstraction for m on the basis of as  for i   k   let si     s  si   ci  i  s     s   bi    since
   in optimal classical planning  the requirement for the abstraction to not overestimate the costs is typically
posed for all the states of the original model  not just for the initial state  yang et al         katz  
domshlak      b  helmert et al          this extra requirement  however  is for pragmatic reasons of
efficiency as it allows the abstraction to be computed in preprocessing and not individually for every
state examined by the search  heuristics for osp  however  are functions not only of the state but also
of the available cost budget  and the latter directly applies to the initial  aka current  state only  in
sum  while defining abstractions with respect to the entire state space is not a necessity in classical
planning  in osp it is not even clear whether defining abstractions with respect to a specific pair of a
state and a budget can deliver any practical benefits  this should not  however  be interpreted as a
formal impossibility claim  and further investigation in this direction is definitely worthwhile 

   

fidomshlak   mirkis

      

ssss
kk
ss
kkkk
   u   
sssskk  c      sssskk      b 
kkkkss
kkkkss
 c  u   

   u  b 
 c    b 
sss
sss
kkk
kkk
 c  u  b 

figure    fragments of restricted optimization over the abstractions a  c  u  b
the digraphs of as are given explicitly  shortest paths from i  s    to all states in gi  and
thus  in particular  determining si    can be computed in time polynomial
in   m   for all
p
i   k   in turn  since hi  i  s     bi     maxssi  ui  s   hm  s    b    i k  hi  i  s     bi   can
be computed in time polynomial in   m   

the message of theorem   is positive  yet it establishes only a necessary condition for
the relevance of osp abstractions in practice  given an osp task   and having fixed an
abstraction skeleton as with a joint performance measure space c  u  b  we should
be able to automatically separate between those  c  u  b   c  u  b that constitute
abstractions for m and those that do not  and within the former set  denoted as
a  c  u  b 
home in on an abstraction that provides us with as accurate  aka as low  an estimate of
h  s    b  as possible  here  even the first item on the agenda is not necessarily trivial as 
in general  a seems to lack convenient combinatorial properties  for instance  generally
a does not form a combinatorial rectangle in c  u  b  consider the osp state model
gm and abstraction skeleton as from our running example  let c  c be a cost function
vector with both c    and c    being constant functions with value of    and two performance
measures  c  u  b    c  u    b     cub defined via budget vectors b    b         b        
and b     b           b            and value function vectors u and u    with u     u     u      
and u      evaluating to zero on all states except for u    s        u      s           it is not
   
hard to verify that both m c u b  aas m and m c u  b   aas m   in m c u b    the state
 c u b 
s    with u    s          is reachable in m 
from s         s    under b         while
 
 
 c u   b   
 c u
 b
 
 
in m
  the state s    with u     s          is reachable in m 
from s         s   
 
 
under b           in contrast  both m c u  b   aas m and m c u b    aas m   in both sets
of models  each model either comes with no budget  and the initial state in the model has
 
the value of zero   or has no states with non zero value at all  hence  both m c u  b  and
 
m c u b   will estimate h  s    b  as zero  while h  s    b      
in light of the above  we approach the overall agenda of complexity analysis of abstractionbased heuristic functions in steps  under different fixations of some of the three dimensions
of a  if  for instance  we are given a vector of value functions u that is known to belong to
the projection of a on u  then we can search for a quality abstraction from the abstraction
subset a   u     a  corresponding to the projection of a on  u   as we show below 
even some constrained optimizations of this kind can be challenging  the lattice in figure   depicts the range of options for such constrained optimization  at the extreme settings 
   

fion oversubscription planning as heuristic search

o 

g 

g 

  s   
uu
u
u
uu

o 

  s   

o 

s   

o 

  s   

o 

  s    
j

s   

o   o 

o 



o 

  s   
j

o 

figure    homomorphic abstraction skeleton for g   in figure  
a       is simply a renaming of a  and a c  u  b  corresponds to a single abstraction
m c u b   a 
    partitions and homomorphic abstractions
we now proceed to consider a specific family of additive abstractions  reveal some of its
interesting properties  and show that it contains substantial islands of tractability  with
definition   allowing for very general abstraction skeletons  in this work we focus on homomorphic abstraction skeletons   helmert et al         
definition 
  an abstraction skeleton
as     g                  gk   k    for an osp state
ff
model m   s  s    u  o    c  qb is homomorphic if  for i   k   oi   o  and  s  o    s 
only if  i  s   o  i  s      ti  
for instance  in our running example  the abstraction skeleton in figure  b is not homomorphic  since  e g    s    o    s     gm yet     s     o       s        s      o    s        gm     while
the abstraction skeleton in figure   is homomorphic  furthermore  we focus on a fragment
of additive abstractions
ap   a   cp  up  bp    
where cp  c  up  u  and bp  b correspond to cost  value  and budget partitions 
respectively 


ff
definition   given an osp state model m   s  s    u  o    c  qb   and a homomorphic
abstraction skeleton as     g                  gk   k    for m with a joint performance measure
c  u  b 
p
 c  c is a cost partition iff  for each operator o  o  i k  c i  o   c o  
p
 u  u is a value partition iff  for each state s  s  i k  u i  i  s    u s   and
p
 b  b is a budget partition iff  i k  b i   b 
in what follows  for any node x of the lattice in figure    by ap  x  we refer to a x ap  
e g   ap    u      a   u     ap  
we begin our analysis of ap by establishing an interesting completeness relationship
between the sets cp and bp   as well as an even stronger individual completeness of cp and
bp   formulated in theorem    these properties of ap play a key role in our computational
analysis later on 
   all the results also hold verbatim for the more general labeled paths preserving abstraction skeletons
studied by katz and domshlak      b  in the context of optimal classical planning  however  the
presentation is somewhat more accessible when restricted to homomorphic abstraction skeletons 

   

fidomshlak   mirkis

c

cp

b

bp

up

   

b

c

bp

cp

up

   

figure    illustration for sub claims     and     of theorem    in      the gray ellipse
within bp stands for the subset of budget partitions b that pair with c in some
abstraction  that is  ap  c    b       however  while pairing some of these budget
partitions b with c requires then a careful selection of a value partition u  so that
m c u b  will be an abstraction   there exists some budget partition b for which
any choice of u will do the job 

theorem   given an osp task    hv  s    u  o  c  bi and a homomorphic abstraction
skeleton as     g                  gk   k    of m  
    for each cost partition c  cp   there exists a budget partition b  bp such that

m c u b   as as for all value partitions u  up  

    for each budget partition b  bp   there exists a cost partition c  cp such that

m c  u b  as as for all value partitions u  up  
the proof of theorem   appears in appendix a  p       figure   illustrates the statement of sub claim     of theorem    as well as  indirectly  some of its corollaries   the first
corollary of theorem   is that the projections of ap on cp   up   and bp are the entire sets
cp   up   and bp   respectively  that is  any cost partition c  and similarly  any budget partition and any value partition  can be matched with an abstraction that has that partition
as its component  second  while not any budget partition b can be paired with a given cost
partition c in abstractions for m   that is  not for all b  bp   ap  c    b       there are
always some budget partitions that can be paired with c  finally  while pairing some of
these c compatible budget partitions b with c requires then a careful selection of a value
partition u  there exists some c compatible budget partition b for which any choice of
u will result in m c u b  being an abstraction of m  
a priori  these properties of ap should simplify the task of abstraction discovery and
optimization within the space of partitions cp  up  bp   and later we show that this is
indeed the case  however  complexity analysis of abstraction discovery within cp up bp
in most general terms is still problematic because the osp formalism is parametric in
   the respective illustration of sub claim     of theorem   is completely similar  mutatis mutandis 

   

fion oversubscription planning as heuristic search

the representation of value functions  hence  here we proceed with examining abstraction
discovery for osp in the context of fixed value partitions u  up  

   from value partitions to complete abstractions
let  be an osp task  as be an explicitly given homomorphic abstraction skeleton of m  
and u  up be a value partition over as  an immediate corollary of theorem   is that
ap    u    is not empty  and thus we can try computing min c u b ap   u   hm c u b   s    
as of yet  however  we do not know whether this task is polynomial time solvable for any
non trivial class of value partitions  in fact  although ap    u    is known  by theorem   
to be non empty  and so  too  are all of its subsets ap    u  b  and ap  c  u     finding even
just any abstraction  c  u  b   ap    u    is not necessarily easy 
      binary value partitions
as a first step  we now examine abstraction discovery within a fragment of ap in which all
value functions u i  of the abstract models are what we call   binary  later  in section     
we show how our findings for   binary abstract value functions can be extended to general
value partitions 
definition   a real valued function f is called   binary if the codomain of f is       for
some   r    a set f of   binary functions is called strong if all the functions in f have
the same codomain       
on the one hand    binary functions constitute a rather basic family of value functions 
hence  if abstraction optimization is hard for them  it is likely to be hard for any nontrivial family of abstract value functions  on the other hand    binary abstract value
functions seem to fit well abstractions of planning tasks in which value functions are linear
combinations of indicators  each representing achievement of a goal value for some state
variable 
in that respect  our first tractability results are for abstraction discovery in ap    u   
where u is a strong   binary value partition  the first  and the simpler  result in theorem  
further assumes a fixed action cost partition  while the next result  in theorem    is on
simultaneous selection of admissible pairs of cost and budget partitions  in corollary   and
theorem    we then show how the results of theorem   and theorem    respectively  can
be extended to pseudo polynomial algorithms for general   binary value partitions 
      strong   binary value partitions and the knapsack problem
our first tractability result is for abstraction discovery within ap  c  u    where u is a strong
  binary value partition and c is an arbitrary cost partition  the key role here is played by
the well known
knapsackffproblem  dantzig        kellerer  pferschy    pisinger         an


instance  wi   i  i n    w of the knapsack problem is given by a weight allowance w and
a set of objects  n   with each object i   n  being annotated
i  
pwith a weight wi and a value
    n 
the objective
is
to
find
a
subset
z

 n 
that
maximizes

over
all
subsets
z
iz i
p
with
w

w 
by
strict
knapsack
we
refer
to
a
variant of knapsack in which
 
i
iz
that inequality constraint is strict  knapsack is np hard  karp        garey   johnson 
   

fidomshlak   mirkis

       but there exist pseudo polynomial algorithms for it that run in time polynomial in the
description of the problem and in the unary representation of w  dudzinski   walukiewicz 
       the latter property makes solving knapsack practical in many applications where the
ratio minwi wi is reasonably low  likewise  if i   j for all i  j   n   then a greedy algorithm
solves the problem in linear time by iteratively expanding z by one of the weight wise
lightest objects in  n    z  until z cannot be expanded any further within w  
theorem    ap  c  u      strong   binary u 
let    hv  s    u  o  c  bi be an osp task  as be an explicit homomorphic abstraction skeleton of m   and u  up be a strong   binary value partition  given a cost partition c  cp  
finding an abstraction  c  u  b   ap  c  u    and computing the corresponding heuristic
estimate hm c u b   s    b  can be done in time polynomial in      and   as   
proof  the proof is by reduction to the polynomial fragment of the knapsack problem
corresponding to all items having identical value  let as     g                  gk   k     and 
given that u is a strong   binary value partition  let the codomain of all u i  be       for
some   r   
for i   k   let wi be the cost of the cheapest path in gi from i  s    to  one of the 
states s  si with u i  s      since as is an explicit abstraction skeleton  the set  wi  i k 
can be computed in time polynomial in   as   using one of the standard algorithms
for the


ff
single source shortest paths problem  consider now a knapsack problem  wi    i k    b  
with weights wi being as above and value  being identical for all objects  let z   k 
be a solution to that  optimization  knapsack problem  recall that it is computable in
polynomial time  given that  we define budget profile b  b as follows 
 
wi   i  z
for i   k   b  i   
  
otherwise 
what remains to be shown is that  c  u  b   actually induces an additive abstraction

for m   assume to the contrary that m c u b    aas m   and let  be an optimal s   plan
for   by the construction of our knapsack problem and of b   for each i  z  there is

 c u b  
a i  s  plan p
with qb  i   i       by definition    our assumption implies
i for mi

that qb      iz qb  i   i        z   however  by theorem    there exists at least one
budget partition b  bp such that m c u b  aas m   note that this budget partition
induces ap
feasible solution z      i   wi  b i   for our knapsack problem  satisfying
qb     iz   qb i   i        z      this  however  implies  z     z      contradicting the

optimality of z  and thus accomplishing the proof that m c u b   aas m  

the construction in the proof of theorem   may appear somewhat counterintuitive 
while we are interested in minimizing the heuristic estimate of h  s    b   the abstraction

m c u b   is selected via the value maximizing knapsack problem  indeed  while ultimately
we would like to obtain
min
hm c u b   s    b  
   
b    c u b ap

the heuristic we manage to compute in polynomial time is actually
max
b    c u b ap

hm c u b   s    b  
   

   

fion oversubscription planning as heuristic search

at the same time  note that  for a fixed pair of c  cp and u  up   this estimate in eq    is
still at least as  and possibly much more  accurate as the estimate that would be obtained
by providing each of the k abstract models with the entire budget b  later we show that
this superior accuracy is verified in our experiments  but first we proceed with examining
working with general   binary value partitions 
while strong   binary value partitions are rather restrictive  finding an element of
ap  c  u    for general   binary u is no longer polynomiala reduction from knapsack
is straightforward  however  knapsack is solvable in pseudo polynomial time  and plugging
that knapsack algorithm into the proof of theorem   results in a search algorithm for
ap  c  u    with general   binary u 
corollary    ap  c  u        binary u 
let    hv  s    u  o  c  bi be an osp task  as be an explicit homomorphic abstraction skeleton of m   and u  up be a   binary value partition  given a cost partition c  cp   finding
an abstraction  c  u  b   ap  c  u    and computing the corresponding heuristic estimate
hm c u b   s    b  can be done in time polynomial in         as    and the unary representation
of the budget b of  
to test and illustrate the value that additive abstractions can bring to heuristic search
osp  we implemented a prototype heuristic search osp solver  on top of the fast downward
planner  helmert         since  unlike classical and net benefit planning  osp still lacks
a standard suite of benchmarks for comparative evaluation  we have cast in this role the
strips classical planning tasks from the international planning competitions  ipc            this translation to osp was done by associating a separate unit value with each
proposition in the conjunctive goal of the corresponding classical ipc task 
within our prototype  we implemented the bfbb search for osp  and provided support
for some basic pattern database abstraction skeletons  action cost partitions  and abstraction selection in ap  c  u    for strong   binary value partitions as in the proof of theorem   
specifically  for a task with k sub goals 
 i  the abstraction skeleton comprised a set of k projections of the planning task onto
connected subsets of ancestors of the respective k goal variables in the causal graph 
the size of each projection was limited to      abstract states  and the ancestors of
the goal variable v were added to the corresponding projection  initialized to contain
v  in a breadth first manner  from v back along the arcs of the causal graph  until the
abstraction could not be expanded within the aforementioned size limit 
 ii  the value partition u associated the entire value of each sub goal hv di  only  with
the projection associated with v 
 iii  the cost partition c distributed the cost of each operator o uniformly between all the
projections that did not invalidate o  i e   that reflected at least one state variable
affected by o 
in our evaluation  we compared bfbb node expansions with three heuristic functions 
tagged blind  basic  and hm   with all three heuristics  the h value of a node n is set to  
if the cost budget at n is over consumed  if the cost budget is not over consumed  then 
   we are not aware of any other domain independent planner for optimal osp 

   

fidomshlak   mirkis

airport     
blocks     
depot    
driverlog     
freecell    
grid    
gripper    
logistics     
miconic     
mystery    
openstacks    
rovers     
satellite    
tpp    
trucks    
pipesw t     
pipesw nt    
psr small     
zenotravel     
total

hm
  
  
 
  
 
 
 
  
  
 
 
  
 
 
 
  
 
  
  
   

   
basic
  
  
 
  
 
 
 
  
  
 
 
  
 
 
 
  
 
  
  
   

blind
  
  
 
  
 
 
 
  
  
 
 
  
 
 
 
  
 
  
  
   

hm
  
  
 
  
 
 
 
  
  
 
 
  
 
 
 
  
 
  
  
   

   
basic
  
  
 
  
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

blind
  
  
 
  
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

hm
  
  
 
  
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

   
basic
  
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

blind
  
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

hm
  
  
 
  
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

    
basic
  
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

blind
  
  
 
 
 
 
 
  
  
 
 
 
 
 
 
  
 
  
 
   

table    number of problems solved across the different budgets using the open list ordered by the heuristic evaluation as in figure  

 blind bfbb constitutes a trivial baseline in which h n  is simply set to the total value
of all goals 
 in basic bfbb  h n  is set to the total value of goals  each of which can be individually
achieved within the respective projection abstraction  see theorem    given the entire
remaining budget 
 hm is an additive abstraction heuristic that is selected from ap  c  u    as in the
proof of theorem   
the evaluation contained all the planning tasks for which we could determine offline
the minimal cost budget needed to achieve all the goals  each such task was approached
under four different budgets  corresponding to                and      of the minimal
cost needed to achieve all the goals in the task  and each run was restricted to    minutes 
table   shows the number of tasks solved within each domain for each level of cost budget  
figure   depicts the results in terms of expanded nodes across the four levels of cost budget 
 figures       in appendix b provide a more detailed view of the results in figure   by
breaking them down into different levels of cost budget   despite the simplicity of the
abstraction skeletons we used  the number of nodes expanded by bfbb with hm was
typically substantially lower than the number of nodes expanded by basic bfbb  with the
difference sometimes reaching three orders of magnitude 
   we reiterate that a task is considered solved only upon the termination of bfbb  that is  when an
optimal plan is found and proven to be optimal 

   

fion oversubscription planning as heuristic search

 a 
   

unsolved

   
   
   
hm

   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
blind

 b 
   

unsolved

   
   
hm

   
   
   
unsolved

   
   

     
                                  
basic

figure    comparative view of empirical results from table   in terms of expanded nodes

      freeing cost partition  knapsack meets convex optimization
returning now to the algorithmic analysis in the context of strong   binary value partitions 
we now proceed with relaxing the constraint of sticking to a fixed action cost partition c 
this buys more flexibility in selecting abstractions from ap    u     allowing us to improve
the accuracy of the heuristic estimates  while still retaining computational tractability 
   

fidomshlak   mirkis

input     hv  s    u  o  c  bi  as     g                  gk   k    of m  
strong   binary value partition u  up
output   u 
for i     to k do
reduce gi to only nodes reachable from i  s   
for m   k downto   do
if always achievable m  then return m
return  
always achievable m  
m
ellipsoid method separation oracle lm
      solution x  dom x   to l 
if x    b then return true
else return false
 a 
separation oracle lm
   x  dom x    
let  be a permutation of  k  such that
x b 
p       x b             x b   k   
if x    i m  x b   i    then return yes
p
else return constraint   i m  b   i  
 b 
figure    a polynomial time algorithm for computing  u  for a strong   binary value
partition u  up  theorem   

given an osp task    hv  s    u  o  c  bi  a homomorphic abstraction skeleton as  and
a value partition u  up over as  let


 u    min
max
   
hm c u b   s    b   
ccp

b    c u b ap

obviously  the estimate h s    b     u  is at least as accurate as the estimate in eq    that
is derived with respect to a fixed cost partition c 
we now show that  for any osp task   any abstraction skeleton as     g                
 gk   k    of m   and any strong   binary value partition u  up over as   u  can be
computed in polynomial time  the corresponding algorithm is shown in figure    with
figure  a depicting the macro flow of the algorithm and figure  b depicting the specific
implementation of the solve sub routine that makes the overall time complexity of the
algorithm polynomial 
the high level flow of the algorithm in figure  a is as follows  since u is a strong  binary value partition  let the codomain of all the abstract value functions u i  be       for
some   r    given that  for each  c  u  b   ap    u     it holds that hm c u b   s    m
for some m        k   this is because each of the k abstract models in m c u b  can
contribute to the additive estimate hm c u b   s  either  or   
   

fion oversubscription planning as heuristic search

the first loop of the algorithm is a preprocessing for loop that eliminates from the
abstraction skeleton all the nodes that are structurally unreachable from the abstract initial
states    s             k  s       for ease of presentation  in what follows we assume that this
cleanup of the abstraction skeleton leaves each gi with at least one state whose value is
  the second for loop of the algorithm decreasingly iterates over all the values  k   k 
                 that can possibly come from the abstractions in ap    u    as a positive
estimate of h  s    b   each of these candidates for  u  is tested in turn via the sub routine
always achievable  if and when this test returns positive for the first time  then we are done 
and the tested candidate m is identified as  u   otherwise  if the test fails for all m   k  
then  u       in particular implying that no state with value greater than   can be reached
from s  under budget b 
the test of always achievable for  u    m is based on a linear program  lp  lm
    given
by eq      this linear program is defined over variables
 
 
 
 
   
 c i  o    
x      
 d s  sgi   b i   
oo

i k 

constraints    a     c   and the objective of maximizing the value of the variable  
lm
   
max 
subject to


d i  s         
i   k    d s   d s      c i  o    s    o  s   gi
 


b i   d s  
s  gi s t  u i  s    
 
c i  o     
i   k 
o  o   p
 
i k  c i  o   c o 
x
z   k    z    m    
b i  

   a 

   b 
   c 

iz

the roles of the different variables in lm
  are as follows 
 variable c i  o  captures the cost to be associated with label o in the digraph gi of
as 
 for a state s in gi   variable d s  captures the cost of the cheapest path in gi from
i  s    to s  given that the edges of gi are weighted consistently with the values of the
variables c i    
 variable b i  captures the minimal budget needed for reaching in gi a state with value
 from state i  s     given that  again  the edges of gi are weighted consistently with
the variable vector c i  
    this preprocessing step can be replaced by adding some extra constraints in the linear program described
below  however  that would unnecessarily complicate the presentation without adding much value 

   

fidomshlak   mirkis

 the singleton variable  captures the minimal total cost of reaching states with value
 in precisely m out of k models in m c u b   
the semantics of the constraints in lm
  are as follows 
 the first two sets of constraints in    a  come from a simple lp formulation of
the
p single
p source shortest paths problem with the source node i  s     optimizing
i k 
sgi d s  under a fixed weighting c of the edges leads to computing precisely
that  for all k digraphs in as simultaneously 
 the third set of constraints in    a  establishes the costs of the cheapest paths in  gi  
from states i  s    to states valued   enforcing the semantics of variables b             b k  
 constraints    b  are the cost partition constraints that enforce c  cp  
 constraints    c  enforce the aforementioned semantics of the objective variable  
two things are worth noting here  first  if all the nodes in the digraphs g            gk
are structurally reachable from the source nodes    s             k  s     respectively  as it is
m
ensured by the first for loop of the algorithm   then
s the polytope induced by l  is bounded
and non empty  indeed  for any assignment to oo  c i  o   that is consistent with the
positiveness constraints in    b   all the variables d   are bounded from above by the
lengths of the respective shortest paths  in turn  this bounding of d   bounds from above
the variables c             c k  via the third set of constraints in    a   and the constraints    c 
then bound from above the objective  
second  while the number of variables  as well as the number of constraints in    a 
and

k
   b   are polynomial in      and   as    the number of constraints in    c  is m
  thus 
solving lm
  using standard methods for linear programming is infeasible  in lemma   below
we show that this problem can actually be mitigated  and then  in lemma   we show that
the semantics of lm
  match our objective of finding  u  
lemma   the algorithm in figure   terminates in time polynomial in      and   as   
proof  the runtime complexity of the algorithm boils down to the complexity of solving
lm
    and  while the number of variables in l   m   as well as the number of constraints in
   a 
are polynomial in      and   as    the number of constraints in    c  is
 and    b  
k
m cannot be solved in polynomial time using standard methods for linear
 
thus 
l
 
m
programming  such as the simplex algorithm  dantzig        or the interior point methods  nemirovsky   yudin         however  using some other algorithms  such as the
ellipsoid algorithm  grotschel  lovasz    schrijver        and the random walks family
of algorithms originating in the work of bertsimas and vempala         an lp with an
exponential number of constraints can be solved in polynomial time  provided that we have
a polynomial time separation oracle for that lp  a polynomial time separating oracle for
a convex set k  rn is a procedure which given x  rn   either verifies that x  k or
returns a hyperplane separating x from k  the procedure should run in polynomial time 
in our case  the separation problem is  given an assignment to the variables of lm
    to test
whether it satisfies    a      b   and    c   and if not  produce an inequality among    a  
   b   and    c  violated by that assignment 
   

fion oversubscription planning as heuristic search

we now show how our separation problem for lm
  can be solved in polynomial time
using what is called m sum minimization lps  punnen         and this is precisely what the
 parametrized with m  procedure separation oracle lm
  in figure  b does  as the number of
constraints in    a  and    b  is polynomial  their satisfaction by an assignment x  dom x  
can be tested directly by substitution  for constraints    c   letp be a permutation of  k 
such that x b         x b             x b   k     if x    i m  x b   i     then it is
easy to see that
px satisfies all the constraints in    c   otherwise  we have our violated
inequality   i m  b   i   

lemma   the algorithm in figure  a computes  u  
the proof of lemma   appears in appendix a  p       combining the statements of
lemmas   and    theorem   summarizes our tractability result for abstraction discovery in
ap    u    for strong   binary value partitions u 
theorem    ap    u    s    strong   binary u 
given an osp task    hv  s    u  o  c  bi  a homomorphic explicit abstraction skeleton as of
m   and a strong   binary value partition u  up    u  can be computed in time polynomial
in      and   as   
unfortunately  the practical value of the result in theorem   is yet to be evaluated  so
far  we have not found a reasonably efficient implementation of the ellipsoid method for
linear inequalities  while  to the best of our knowledge  the random walks algorithms  bertsimas   vempala        have never been implemented at all  we hope that this state of
affairs will change soon  allowing these powerful algorithms to be used not only in theory 
but also in practice 
      from strong to general   binary value partitions
recall that the polynomial result of theorem   for strong   binary value partitions easily
extends in corollary   to a pseudo polynomial algorithm for general   binary value partitions  it turns out that a pseudo polynomial extension of theorem   is possible as well 
though it is technically more involved  the corresponding algorithm is shown in figure    
following the format of figure    figure   a depicts the macro flow of the algorithm and
figure   b shows the specific implementation of the solve sub routine by which the desired
time complexity can be achieved 
similarly to the algorithm in figure    a preprocessing for loop of the algorithm first
eliminates from the abstraction skeleton all the nodes that are structurally unreachable
from the abstract initial states    s             k  s     next  the algorithm performs a binary
search over an interval containing  u     since u is a   binary value partition  for i   k  
by     i    i  r    we denote the codomain of the abstract value
p function u i   given that 
for each  c  u  b   ap    u     it holds that h c u b   s    iz i for some z   k   as
the size of this combinatorial hypothesis space is prohibitive  the while loop in figure   
performs a binary search over a relaxed hypothesis space  corresponding to the continuous
    while a binary search could have been used in the algorithm in figure   as well  there it would be a
mere optimization  while here it is necessary to avoid an exponential blowup of the time complexity 

   

fidomshlak   mirkis

input     hv  s    u  o  c  bi  as     g                  gk   k    of m  
  binary value partition u  up
output  s  u 
for i     to k do
reduce gi to only nodes reachable from i  s   
let        mini k  i
p
 
  i k  i
while       do
v           
if always achievable v  then   v
else   v
if      then return  
else return 
always achievable v  
ellipsoid method separation oracle lv      solution x  dom x   to lv 
if x    b then return true
else return false
 a 
separation oracle lv 
 x  dom x    
ff
strict knapsack   x b i    i  i k    x       solution z   k 
p
if iz i   v then return yes
p
else return constraint   iz b i 
 b 
figure     a pseudo polynomial algorithm for approximating  u  for general   binary
value partitions u  up  theorem    

p
interval     i k  i   of r     the parameter  serves as the sufficient precision criterion
for termination 
at an iteration corresponding to an interval       the algorithm uses its sub routine
always achievable to test the hypothesis  u   v  where v is the mid point of       if the
test is positive  then the next tested hypothesis is s  u   v     where v   is the midpoint
of  v     otherwise  the next hypothesis corresponds to the midpoint of    v   when the
while loop is done  the reported estimate is set to   while there still might be some lag
between  and  u   this lag can be arbitrarily reduced by reducing   and anyway     u 
ensures admissibility of the estimate  if  however  the while loop terminates with      
then  u        mini k  i implies  u       and this is what we return 
the test of always achievable for  u   v is based on a linear program lv    which is
defined over variables x as in eq     and is obtained from lm
  by replacing constraints    c 
with constraints    c  
   

fion oversubscription planning as heuristic search

lv   
max 
subject to


d i  s         
i   k    d s   d s      c i  o    s    o  s   gi
 


b i   d s  
s  gi s t  u i  s    i
 
c i  o     
i   k 
o  o   p
 
i k  c i  o   c o 
x
x
z   k  s t 
i  v    
b i  
iz

   a 

   b 
   c 

iz

while the semantics of all variables but  remains as in lm
     now captures the minimal
total cost ofpreaching some states  si  i k  in the abstract models m c u b  such that the
total value i k  u i  si    v  the new constraint    c  enforces this semantics of  
lemma   for any       the algorithm in figure    terminates in time polynomial in
        as    log     and a unary representation of the budget b of  
p

i

proof  the number of iterations of the while loop is approximately log  i k 
  and the

run time of each of its iterations boils down to the complexity of solving lv    here  as in
v
lemma   with linear programs lm
    the number of variables in l    as well as the number
of constraints in    a  and    b   are polynomial in      and   as    while the number
of constraints in    c  is   k    therefore  always achievable v  also employs the ellipsoid
method with a sub routine separation oracle lv  for the associated separation problem  we
now show how that separation problem for lv  can be solved in pseudo polynomial time
using a standard pseudo polynomial procedure for the strict knapsack problem 
given an assignment x  dom x    its feasibility with respect to    a  and    b  can be
tested directly by substitution  
for constraints    c  
ff let z   k  be an optimal solution
to the strict knapsack problem  x b i    i  i k    x     with a weight allowance x   and k
objects  with each object i   k  being associated with weight x b i   and value i  
p
 if the value iz i of z is smaller than v  then x satisfies all the constraints in
   c   assume to the contrary that x violatesp
some constraint in    c   corresponding
 
to a setpz   k   by definition of    c  
iz   i  v  and by our assumption 
x    
x b i   
that 
however 
implies
that z   is a feasible solution for our
 
iz
strict knapsack  and of value higher than that of presumably optimal z 
p
 otherwise  if iz i  v  then z itselfpprovides us with a constraint in    c  that is
violated by x  this is because x     
iz x b i   holds by the
ff virtue of z being a
solution to the strict knapsack problem  x b i    i  i k    x    


   

fidomshlak   mirkis

lemma   for any        mini k  i   the algorithm in figure   a computes  such that
   u    
the proof of lemma   appears in appendix a  p       combining the statements of
lemmas   and    theorem    summarizes our result for optimized abstraction discovery in
ap    u    for general   binary value partitions u  importantly  note that the algorithm in
figure    depends on the unary representation of only the budget  and not of the possible
state values  in particular  it means that dependence of the complexity on the number of
alternative sub goals in the osp task of interest is only polynomial  finally  theorem    is
formulated in terms of the estimate precision only because the i values of the abstract value
functions u i  can be arbitrary real numbers  in the case of integer valued sets of functions
u  as well as in various special cases of real valued functions   u  can be determined
precisely using a simplification of the algorithm in figure     for instance  if all             k
are integers  then setting  to any value in        results in the while loop terminating with
    u   these details  however  are more of a theoretical interest  for reasonably small
values of   in practice there will be no difference between estimates h s  b  and h s  b     
theorem     ap    u    s      binary u 
given an osp task    hv  s    u  o  c  bi  a homomorphic explicit abstraction skeleton as  
  g                  gk   k    of m   a   binary value partition u  up   and       it is possible
to approximate s  u  within an additive factor of  in time polynomial in         as    log    
and a unary representation of the budget b of  
    general value partitions
while   binary value partitions can be rather useful by themselves  it turns out that the
pseudo polynomial algorithms for abstraction discovery with explicit homomorphic abstraction skeletons and   binary value partitions can be extended rather easily to arbitrary value
partitions  using the following observations 
    for any osp task    hv  s    u  o  c  bi  any homomorphic abstraction skeleton as  
  g                  gk   k    of m   and any value partition u over as  the number of
distinct values taken by u i  is trivially upper bounded by the number of states in gi  
and
    the pseudo polynomial solvability of the knapsack problem extends to its more general
variant known as multiple choice knapsack  dudzinski   walukiewicz        kellerer
et al         
the multiple choice  mc  knapsack problem hn            nm   w i is given by a weight
allowance w and m classes of objects n            nm   with each object j  ni being annotated
with a weight wij and a value ij   the objective
is to find a set z that contains at most
p
one
p object from each class and maximizes  i j z ij over all such sets while satisfying
 i j z wij  w  by strict mc knapsack  we refer to a variant of mc knapsack in
which that inequality constraint is strict  mc knapsack generalizes regular knapsack and
thus it is np hard  however  similarly to the regular knapsack problem  mc knapsack also
admits a pseudo polynomial  dynamic programming algorithm that runs in time polynomial
   

fion oversubscription planning as heuristic search

in the description of the problem and in the unary representation of w  dudzinski  
walukiewicz        kellerer et al         
theorem     ap  c  u    
let    hv  s    u  o  c  bi be an osp task  let as     g                  gk   k    be an explicit homomorphic abstraction skeleton of m   and let u  up be an arbitrary value
partition over as  given a cost partition c  cp   it is possible to find an abstraction
 c  u  b   ap  c  u    and compute the corresponding heuristic estimate hm c u b   s    b  in
time polynomial in         as    and the unary representation of the budget b 
proof  the proof is very similar to the proof of theorem    but with the compilation being
to the mc knapsack problem 
for i   k   let ni be the number of distinct values taken by u i   let  i            ini    r 
be the codomain of u i   and  for j   ni    let wij be the cost of the cheapest path in gi from
i  s    to  one of the  states s  si with u i  s    ij   since as is an explicit abstraction
skeleton  for i   k   it holds that ni   si    and the set  wij  i k  j ni   can be computed in
time polynomial in   as   using one of the standard algorithms for the single source shortest
paths problem 
consider now an mc knapsack problem with a weight allowance b and k classes of
objects n            nk   with  ni     ni and each object j  ni annotated with a weight wij and
s
a value ij   let z  ki   ni be a solution to that  optimization  mc knapsack problem 
recall that it is computable in pseudo polynomial time  given that  we define budget profile
b  b as follows 
 
wij    i  j   z

for i   k   b  i   
  
otherwise 
showing that  c  u  b   actually induces an additive abstraction for m is completely identical to the proof of the corresponding argument in theorem    and thus omitted 

theorem     ap    u    
given an osp task    hv  s    u  o  c  bi  a homomorphic explicit abstraction skeleton as  
  g                  gk   k    of m   an arbitrary value partition u  up over as  and       it
is possible to approximate s  u  within an additive factor of  in time polynomial in      
  as    log     and a unary representation of the budget b of  
an algorithm for abstraction discovery as in theorem    is depicted in figure     its
high level flow differs from the flow of the algorithm from figure    for general   binary
value partitions only in the initialization of parameters  and   the major difference
between the algorithms is that here the tests of candidate values v are based on linear
programs lv    which are defined as follows 
for i   k   let  i            ini    r  be the codomain of u i   for v  r    the linear
program lv  is defined in eq     over variables


 
 
 
 d s  sgi 
x      
 b i  j   
 c i  o   
    
i k 

j ni  

   

oo

fidomshlak   mirkis

input     hv  s    u  o  c  bi  as     g                  gk   k    of m  
  binary value partition u  up
output  s  u 
for i     to k do
reduce gi to only nodes reachable from i  s   
let        mini k  minj ni   ij
p
 
  i k  maxj ni   ij
while       do
v           
if always achievable v  then   v
else   v
if      then return  
else return 
always achievable v  
ellipsoid method separation oracle lv      solution x  dom x   to lv 
if x    b then return true
else return false
 a 
separation oracle lv   x 
 dom x    
ff
strict mc knapsack   x b    j     j  j n               x b k  j    kj  j nk     x    
  solution z   n          nk  
p
if i k  iz i    v then return yes
p
else return constraint   i k  b i  z i  
 b 
figure      a  a modification of the algorithm from figure    to arbitrary value partitions
u  up  theorem      and  b  a pseudo polynomial time separation oracle for
the corresponding linear programs lv  in eq    

these variables differ from the variable set of lv   see eq     by a larger set of b variables 
variable b i  j  here captures the minimal budget needed for reaching in gi a state with
value i j from state i  s     given that the edges of gi are weighted consistently with the
variable vector c i  
   

fion oversubscription planning as heuristic search

lv   
max 
subject to


d i  s         
i   k    d s   d s      c i  o    s    o  s   gi
 


b i  j   d s  
j   ni  s  gi s t  u i  s    ij
   a 
 
c i  o     
i   k 
o  o   p
 
   b 
i k  c i  o   c o 
z   n          nk  
x
x
s t 
iz i   v    
b i  z i   
i k 

   c 

i k 

like what we had in lemma   with linear programs lv    while the number of variables
in lv    as well as the number of constraints in    a  and    b   are polynomial in     
and   as    the number of constraints in    c  is  dk   where d   maxi k  ni   therefore 
always achievable v  also employs the ellipsoid method with a pseudo polynomial time separation oracle  but here the latter is based on solving a strict mc knapsack problem  see
figure   b   otherwise  solving lv  and solving lv  are similar 
lemma    for any       the algorithm in figure    terminates in time polynomial in
        as    log     and a unary representation of the budget b of  
lemma    given an osp task    hv  s    u  o  c  bi  a homomorphic explicit abstraction
skeleton as     g                  gk   k    of m   an arbitrary value partition u  up over
as  and       the algorithm in figure    computes  such that    u    
the proof of lemma    is similar to the proof of lemma    with strict knapsack
separation problems being replaced with strict mc knapsack separation problems  the
proof of lemma    is also similar to the proof of lemma    mutatis mutandis  together 
lemmas    and    establish theorem    

   landmarks in osp
in addition to state space abstractions  a family of approximation techniques that have been
found extremely effective in the context of optimal classical planning is based on the notion
of logical landmarks for goal reachability  karpas   domshlak        helmert   domshlak 
      domshlak et al         bonet   helmert        pommerening   helmert         in
this section we proceed with examining the prospects of such reachability landmarks in
heuristic search osp planning 
   

fidomshlak   mirkis

    landmarks in classical planning
for a state s in a classical planning task   a landmark is a property of operator sequences
that is satisfied by all s plans  hoffmann  porteous    sebastia         for instance  a
fact landmark for a state s is an assignment to a single variable that is true at some point
in every s plan  most state of the art admissible heuristics for classical planning use what
are called disjunctive action landmarks  each corresponding to a set of operators such
that every s plan contains at least one operator from that set  karpas   domshlak       
helmert   domshlak        bonet   helmert        pommerening   helmert         in
what follows we consider this popular notion of landmarks  and simply refer to disjunctive
action landmarks for a state s as s landmarks  for ease of presentation  most of our discussion will take place in the context of landmarks for the initial state of the task  and these
will simply be referred to as landmarks  for   
deciding whether an operator set l  o is a landmark for classical planning task  is
pspace hard  porteous  sebastia    hoffmann         therefore  all landmark heuristics
employ landmark discovery methods that are polynomial time and sound  but incomplete 
in what follows we assume access to such a procedure  the actual way the landmarks are
discovered is tangential to our contribution  for
a landmark cost
p a set l of s landmarks 

  
function lcost   l  r is admissible if
ll lcost l   h  s   for a singleton set
l    l   lcost l     minol c o  is a natural admissible landmark cost function  and it
extends directly to non singleton sets of pairwise disjoint landmarks  for more general sets
of landmarks  lcost can be devised in polynomial time via operator cost partitioning  katz
  domshlak      b   either given l  karpas   domshlak         or within the actual
process of generating l  helmert   domshlak        
     landmarks and budget reduction
while landmarks play an important role in  both satisficing and optimal  classical planning 
so far they have not been exploited in osp  at first glance  this is probably no surprise 
and not only because osp has been investigated much less than classical planning  since
landmarks must be satisfied by all plans and because an empty operator sequence is always
a plan for any osp task  the notion of landmark does not seem useful here  having said
that  consider the anytime output improvement property of the bfbb forward search 
the empty plan is not interesting there not only because it is useless  but also because it
is found by bfbb right at the very beginning  in general  at all stages of the search 
anytime search algorithms like bfbb maintain the best so far solution   and prune all
branches that promise value lower or equal to qb     hence  in principle  such algorithms
may benefit from information about properties that are satisfied by all plans with value
larger than qb     polynomial time discovery of such value landmarks for arbitrary osp
tasks is still an open problem  however  looking at what is needed and what is available 
here we show that the classical planning machinery of reachability landmarks actually can
be effectively exploited in osp 
p in what follows  we assume that the value function of  is additive  with u s   
hv dis uv  d   with uv  d     for all variable value pairs hv di  that is  the value of state
s is the sum of the  mutually independent  non negative marginal values of the propositions
comprising s  with the value of different s plans in an osp task  varying between zero
   

fion oversubscription planning as heuristic search

and the value of the optimal s plan  which may also be zero   let  landmark for state
s be any property that is satisfied by any s plan  that achieves something valuable  for
instance  with the disjunctive action landmarks we use here  if l  o is an  landmark for
s  then every s plan  with qb        contains an operator from l  in what follows  unless
stated otherwise  we focus on  landmarks for  the initial state of   
definition   given an osp task    hv  s    u  o  c  bi  the  compilation of  is a classical planning task    hv   s    g   o   c i where
v   v   g  
with dom g           
s    s    hg  i  
g    hg  i  

 
o   o  og   o  ohv di   hv di  d  uv  d       
with pre ohv di      hv di  and eff ohv di      hg  i  
 
c       o  o
c  o   
 
  
   ohv di  og
to put it simply  the semantics of the value hg  i of the auxiliary variable g in  is
that it has been verified that some proposition with a positive value has been achieved 
in these terms   simply extends the structure of  with a set of zero cost actions such
that applying any of them corresponds to verifying that a positive value can be achieved
in   constructing  from  is trivially polynomial time  and it allows us to discover
 landmarks for  using the standard machinery for classical planning landmark discovery 
theorem    for any osp task   any landmark l for  such that l  o is an landmark for  
proof  the proof is rather straightforward  let p be the set of all plans  for  with
qb        and p the set of all plans for    by the definition of p  for any plan   p 
there exists a proposition hv di  d such that uv  d      and hv di  s  jk  likewise  since
s 
    s ff  hg  i  and o  o   is applicable in

 s    ffhence  by definition


ff of ohv di  o  
 ohv di is applicable in s  and 
hg  i 
s
j
o
k 
that
is 

o
 
hv di
hv di  p   in turn 
ff
if l is a landmark for    then  ohv di contains an operator from l  and if l  o  then
 contains an operator from l as well  this proves that all landmarks l for  over the
operators o of  are  landmarks for  

with theorem    in hand  we can now derive  landmarks for  using any method
for classical planning landmark extraction  such as that employed by the lama planner  richter et al         or the lm cut family of techniques  helmert   domshlak       
bonet   helmert         however  at first glance  the discriminative power of knowing
what is needed to achieve something valuable seems to be negligible when it comes to deriving effective heuristic estimates for osp  the good news is that  in osp  such information
can be effectively exploited in a slightly different way 
   

fidomshlak   mirkis

consider a schematic example of searching for an optimal plan for an ops task  with
budget b  using bfbb with an admissible heuristic h  suppose that there is only one
sequence of  all unit cost  operators     ho    o            ob   i  applicable in the initial state
of   and that the only positive value state along  is its end state  while clearly no
value higher than zero can be achieved in  under the given budget of b  the search will
continue beyond the initial state  unless h s      counts the cost of all the b     operators
of   now  suppose that h s      counts only the cost of  oi           ob     for some i      but
 o      o              oi    are all discovered to be  landmarks for   given that  suppose that
we modify  by  a  setting the cost of operators o    o            oi  to zero  and  b  reducing
the budget to b  i      since all the operators o    o            oi  have to be applied anyway
along any value collecting plan for   this modification seems to preserve the semantics of
  at the same time  on the modified task  bfbb with the same heuristic h will prune the
initial state and thus establish without any search that the empty plan is an optimal plan
for   of course  the way  is modified in this example is as simplistic as the example itself 
yet  this example does motivate the idea of landmark based budget reduction for osp  as
well as illustrates the basic idea behind the generically sound task modifications that we
discuss next 

definition   let    hv  s    u  o  c  bi be an osp task  l    l            ln   be a set of
pairwise disjoint  landmarks for   and lcost be an admissible landmark cost function from
l  the budget reducing compilation of  is an osp task l   hvl   s l   ul   ol   cl   bl i
where
n
x
bl   b 
lcost li  
    
i  

and
vl   v   vl            vln  
with dom vli            
s l   s    hvl    i           hvln   i  
ul   u 
ol   o 

n
 
i  

oli   o 

n
 

 o   o  li   

i  

with pre o    pre o    hvli   i  and eff o    eff o    hvli   i  
 
c o  
 oo
cl     
 
c o   lcost li       o  oli
in other words  l extends the structure of  by
 mirroring the operators of each  landmark li with their cheaper by lcost li   versions 
   

fion oversubscription planning as heuristic search

cbb

o 
o 

o  o 
abb

o 
o 

o 
btb
o 
o 
bbb
o 
o 
bbt
o 

ctb

o 
o 
o 
btt
o 
o 
o 
o 
cbt
o 

u  

o 
o 
o 

u  

ccb

o 
o  
o 
o 
ctt
o 
o 
u  

o 
o 
o 
o  
o 

ctc

u  
cct

o 
u  
o 
o 
o 
ccc
o  
o 

cbc

 a 
u  

cbb
ctb

o 
abb

o 

bbb

btb
o 
o 
o 
o 
bbt

o 
o 
o 
btt

o 
o 
o 

o 
o 

o 

cbb

o  
o 
ctt

u  
cbt

o  
o 

u  

ccb

o 
o 

ctc

o  o 

o  u  

o 
u  
cct

ccc

abb

o  
o 

cbc

o 
o 

o 
btb
o 
o 
bbb
o 
o 
bbt
o 

o 
o 

ctb

o 
o 
o 
btt
o 
o 
o 
o 
cbt
o 

o 
o 
o 

o 
o 
o 
o  
o 

u  
ccb

o 
o  
o 
o 
ctt
o 
o 
u  

u  
ctc

u  
cct

o 
u  
o 
o 
o 
ccc
o  
o 

cbc

figure     illustrations for our example of the landmark based budget reducing compilation
l    a  the structurally reachable parts of the graphical skeleton of the model
induced by l   illustrated on the projection of l on the variables of the original
task   along with a comparison between the budget wise reachable parts of the
graphical skeletons induced by the models of the  b  original task  and  c  the
compiled task l  

 using the disposable propositions hvl    i           hvln   i to ensure that at most one
instance of these discounted operators for each li can be applied along an operator
sequence from the initial state     and
 compensating for the discounted operators for li by reducing the budget by precisely
lcost li   
for example  consider the simple osp task  from figure    p       with cost budget
b      and assume we are provided with a set of four landmarks l    l            l    where
l     o     l     o     l     o    o    and l     o    o     and with admissible landmark cost
function lcost li       for i       compiling  l  lcost  into  using the budget reducing
compilation in definition s
  results in a task l with budget bl     and c o      for all the
discounted operators o  ni   oli    o    o    o    o    o    o    
while the states of  correspond to complete assignments to only three variables v  
 t  x  y   l already has seven variables vl    t  x  y  vl    vl    vl    vl     thus  depicting
    note that  while the auxiliary variable g in the  compilation  of  can effectively change its value only
from hg  i to hg  i  the auxiliary variables vli in l change their values  only  from hvli   i to hvli   i 
this difference reflects the positive semantics that is usually associated with the value    aka value
true  of the planning propositions  the semantics of a state s of l containing the proposition hvli   i
is that we are still allowed to apply  one of the  discounted operators associated with the landmark li
from s onwards 

   

fidomshlak   mirkis

compile and bfbb     hv  s    u  o  c  bi 
     compilation of 
l    a set of landmarks for 
lcost    admissible landmark cost function from l
l    budget reducing compilation of  l  lcost  into 
n    bfbb l  
return plan for  associated with n
figure     bfbb search with landmark based budget reduction
the structurally reachable parts of the graphical skeleton gml is problematic  still  to
illustrate the search space of   in figure    a  we show the  structurally reachable parts
of the  graphical skeleton of the model induced by the projection of  on the variables
 t  x  y  only  the arcs corresponding to discounted operators are colored  with each color
distinguishing the landmark responsible for the respective discounted operators 
figures    b  and    c  illustrate the effect of the budget reducing compilation by depicting the parts of the graphical skeletons gm and gml that are actually reachable
under the respective cost budgets b     and bl      while the states btt and ctt are
reachable from the initial state of  under the budget allowance of    the states corresponding to btt and ctt are no longer reachable in l   reducing the size of the search space
for bfbb  at the same time  as formulated in theorem    below  this reduction of the
search space does not affect plans for  that lead to valuable states  resulting in an effective
equivalence between  and l  
theorem    let    hv  s    u  o  c  bi be an osp task  l be a set of pairwise disjoint
 landmarks for   lcost be an admissible landmark cost function from l  and l be the
respective budget reducing compilation of   for every  for  with qb         there is a
plan l for l with qbl  l     qb     and vice versa 
the proof of theorem    appears in appendix a  p       the budget reducing ospto osp compilation in definition   is clearly polynomial time  the compile and bfbb
procedure  depicted in figure    
    generates an  compilation  of  
    uses off the shelf tools for classical planning to generate a set of landmarks l for 
and an admissible landmark cost function lcost  and
    compiles  l  lcost  into   obtaining an osp task l  
the optimal solution for l  and thus for   is then searched for using a search algorithm
for optimal osp such as bfbb 
before we proceed to consider more general sets of landmarks  a few comments concerning the setup of theorem    are in order  first  if the reduced budget bl turns out to
be lower than the cost of the cheapest action applicable in the initial state  then obviously
no search is needed  and the empty plan can be reported as optimal right away  second 
   

fion oversubscription planning as heuristic search

zero cost landmarks are useless in our compilation as much as they are useless in deriving
landmark heuristics for optimal planning  hence  lcost in what follows is assumed to be
strictly positive  third  having both o and o applicable at a state of  brings no benefits
yet adds branching to the search  hence  in our implementation  for each landmark li  l
and each operator o  li   the precondition of the regular operators o in ol is extended
with  hvli   i   it is not hard to verify that this extension preserves the correctness of
l in terms of theorem     finally  if the value of the initial state is not zero  that is 
the empty plan has some positive value  then  compilation  of  will have no positive
cost landmarks at all  however  this can easily be fixed by considering as valuable only
propositions hv di such that both uv  d      and hv di   s    we ignore for the time being
the problem of non zero value initial states  and assume that qb          but return to it
later for a more systematic discussion 
    non disjoint  landmarks
while the budget reducing compilation l above is sound for pairwise disjoint landmarks 
this is not so for more general sets of  landmarks  for example  consider a planning task
 in which  for some operator o  we have c o    b  qb  hoi       and qb        for all other
operator sequences     hoi  that is  a value greater than zero is achievable in   but only
via the operator o  suppose now that our set of  landmarks for  is l    l            ln   
n      with lcost li       for all i   n   and
pnthat all of these  landmarks contain o  in this
case  while the budget in l is bl   b  i   lcost li    the cost of the cheapest replica o
of o  that is  the cost of the cheapest operator sequence achieving a non zero value in   is
n

n

i  

i  

c o   max lcost li     b  max lcost li     b 

n
x

lcost li     bl  

i  

hence  no state with positive value will be reachable from s l in l   and thus  and l
are not value equivalent in the sense of theorem    
this example shows why compiling non disjoint  landmarks into  independently is
not sound  in principle  it can be made sound as follows  let    hv  s    u  o  c  bi be an
osp task  let l    l            ln   be a set of  landmarks for   and let lcost be an admissible
landmark cost function from l  all the components in l   hvl   s l   ul   ol   cl   bl i are
still defined as in definition    except for the operator sets ol            oln   the latter are
now constructed not independently of each other  but sequentially  with the content of
oli depending on the content of all olj   j   i  the ordering in which the sets oli are
constructed can be arbitrary 
for each operator o  o and each    i  n  let oo i denote the set of all cost
discounted representatives of o introduced
during the construction of ol            oli   for
s
   i  n  if for some operator o  o  li oo   i  we have cl  o       then oli     
otherwise  oli contains an operator o for each operator
o  li 

 
o  li

   

oo   i   

    

fidomshlak   mirkis

with o being defined very similarly to definition   as 
pre o    pre o    hvli   i  
eff o    eff o    hvli   i  
 
c o   lcost li   
cl  o   
cl  o   lcost li   

o  li  
 
s
o  o  li oo   i 

    

the compilation extended this way is sound for arbitrary sets of  landmarks  and
on pairwise disjoint landmarks it reduces to the basic compilation used in theorem    
in general  however  this extended compilation is no longer polynomial in the size of the
explicit representation of  because
 oo i        lj  ji olj     
for example  let l    l    l    l     l     a  b   l     a  c   l     a  d   generation of
ol      a    b    effectively follows definition    but for ol    the base set of operators as in
eq     is already  a  c  a     thus  ol      a    c    a     where  for i         and denoting a
by a    ai is derived according to eq     from ai    consequently  the base set of operators
for ol  is  a  d  a    a    a     resulting in ol     a    d    a    a    a     where  for i               
ai is derived from ai    in sum  l ends up with       l  representatives of the operator a 
since non disjoint landmarks can bring more information  and they are typical to outputs
of standard techniques for landmark extraction in classical planning  we now present a
different  slightly more involved  compilation that is both polynomial and sound for arbitrary
sets of  landmarks 
definition   let    hv  s    u  o  c  bi be an osp task  l    l            ln   be a set of
pairwise disjoint  landmarks for   and lcost be an admissible landmark cost function
from l  for each operator o  let l o  denote the set of all landmarks in l that contain
o  then  the generalized budget reducing compilation of  is an osp task l  
hvl   s l   ul   ol   cl   bl i where
bl   b 

n
x

lcost li   

i  

vl   v   vl            vln  
with dom vli            
s l   s    hvl    i           hvln   i  
ul   u 
ol   o   o   o  ll l    get l    l  l 
with
pre o    pre o    hvl   i   l  l o   
eff o    eff o    hvl   i   l  l o   

    

and
pre get l      hvl   i  
eff get l      hvl   i  
   

    

fion oversubscription planning as heuristic search

and


c o   p
cl      c o   ll o  lcost l  


lcost l  

 oo
 
 o

    

   get l 

to illustrate this compilation  we will let l    l    l    l    
l     a  b  
l     b  c  
l     a  c  
with all operators having the cost of    and let
lcost l      lcost l      lcost l        
in l   we have vl   v   vl    vl    vl    and
ol   o   a  b  c  get l     get l     get l     
with  e g  
pre a    pre a    hvl    i   hvl    i  
eff a    eff a    hvl    i   hvl    i  
cl  a      
and  for get l    
pre get l        hvl   i  
eff get l        hvl   i  
cl  get l         
the intuition behind the compilation in definition   is as follows  by eq      applying
a discounted operator o saves the total cost of all landmarks containing o  therefore 
 o can be executed only at states s in which all the corresponding control propositions
 hvl   i   l  l o   hold  indicating that the cost of no landmark in l o  has already
been saved before reaching s  and
 to avoid double savings around l o   applying o in s turns off all these control propositions in sjok 
however  considering the example above  suppose that the optimal plan  for the original
task contains an instance of operator a  followed by an instance of operator b  and no
instance of operator c  applying a instead of a would block us from applying b instead
of b  and thus the value of the optimal plan in the compilation can be lower than qb    
the rescue here comes from the get l  actions that allow for selective spending of the
individual landmark costs lcost l   in our example  while applying a in s saves the cost
of the landmarks l  and l    applying get l    will then spend lcost l    and safely set the
   

fidomshlak   mirkis

control proposition hvl    i  in turn  this will enable b to be applied at the next steps 
and applying b will then save the cost of l  and re save the cost of l    this way  the
compilation leads to equivalence between  and l   formulated in theorem    below and
proven in appendix a  p      
theorem    let    hv  s    u  o  c  bi be an osp task  let l    l            ln   be a set of
 landmarks for   let lcost be an admissible landmark cost function from l  and let l
be the  generalized  budget reducing compilation of   for every  for  with qb        
there is a plan l for l with qbl  l     qb     and vice versa 
     landmarks   incremental bfbb
as we discussed earlier  if the value of the initial state is not zero  then the empty plan
has some positive value  and thus the  compilation  of  as in definition   will have no
landmarks with positive cost  in passing we noted that this small problem can be remedied
by considering as valuable only facts hv di such that both uv  d      and hv di   s    we
now consider this aspect of osp more closely  and show how the discovery of  landmarks
and the incremental revelation of plans by bfbb can be combined in a mutually stratifying
way 
let    hv  s    u  o  c  bi be the osp task of interest  and suppose we are given a set
of plans             n for   if so  then we are no longer interested in searching for plans
that achieve something  but in searching for plans that achieve something beyond what
            n already achieve  specifically  let si   s  ji k be the end state of i   and for any
set of propositions s  d  let goods s   s be the set of all propositions hv di  s such that
uv  d       if a new plan  with end state s achieves something beyond what             n
already achieve  then  for all    i  n 
goods s    goods si       
we now put this observation to work 
definition   given an osp task    hv  s    u  o  c  bi and a set of reference states sref  
 s            sn   of   the    sref   compilation of  is a classical planning task   sref    
hv   s    g   o   c i with
v   v   x            xn   search  collect  
with dom xi     dom search    dom collect           
s    s    hsearch  i   hcollect  i   hx    i           hxn   i  
g    hx    i           hxn   i  
n
 
o   o 
oi   f inish  
i  

where
   

fion oversubscription planning as heuristic search

 o    o   o  o  
pre o    pre o    hsearch  i  
eff o    eff o  
c  o    c o  

pre f inish     
eff f inish     hcollect  i   hsearch  i  
c  f inish      
 oi    oi g   si  sref   g  goods d    si   
pre oi g      g  hcollect  i  
eff oi g      hxi   i  
c  oi g       
note that
 the goal g cannot be achieved without applying the f inish operator 
 the regular operators o can be applied only before f inish  and
 the subgoal achieving operators oi g can be applied only after f inish 
this way  the first part of any plan for   sref   determines a plan for   and the second part
verifies that the end state of that plan achieves a subset of value carrying propositions
goods d  that is included in no state from sref    
theorem    let    hv  s    u  o  c  bi be an osp task  sref    s            sn   be a subset of
s states  and l be a landmark for   sref   such that l  o  for any plan  for  such
that goods s  jk    goods si       for all si  sref    contains an instance of at least one
operator from l     o   o  l  
proof  assume to the contrary that there exists a plan    ho            ok i for  such that
goods s  jk    goods si       for all si  sref   and yet   l      let  g            gn   be an
arbitrary set of propositions from goods s  jk    goods s             goods s  jk    goods sn   
respectively  by the construction of   sref     it is immediate that
  sref     ho            ok   f inish  o  g            on gn i
is a plan for   sref   and  by our assumption about  and l    it holds that   sref    l    
this  however  contradicts that l is a landmark for   sref    

    this solve   verify technique appears to be helpful in many planning formalism compilations  see 
e g   the work of keyder and geffner        

   

fidomshlak   mirkis

inc compile and bfbb     hv  o  s    c  u  bi 
initialize global variables 
n    s 
   best solution so far
sref     s       current reference states
loop 
  sref        sref   compilation of 
l    a set of landmarks for   sref  
lcost    admissible landmark cost function from l
l    budget reducing compilation of  l  lcost  into 
if inc bfbb l   sref   n     done 
return plan for  associated with n
inc bfbb    sref   n  
open    new max heap ordered by f  n    h shni  b  g n  
open insert make root node s    
closed   
best cost    
while not open empty  
n    open pop max  
if f  n   u shn i   break
if u shni    u shn i   update n    n
if goods shni    goods s    for all s   sref  
sref    sref   shni 
if termination criterion  return updated
   the rest is similar to bfbb in figure  

if shni   closed or g n    best cost shni  
closed   closed   shni 
best cost shni     g n 
foreach o  o shni  
n     make node shnijok  n 
if g n      b or f  n     u shn i   continue
open insert n   
return done
figure     iterative bfbb with landmark enhancement
theorem    allows us to define an iterative version of bfbb  inc compile and bfbb 
depicted in figure     the successive iterations of inc compile and bfbb correspond to
running the regular bfbb on successively more informed    sref   compilations of   with
the states discovered at iteration i making the    sref   compilation used at iteration i    
more informed 
inc compile and bfbb maintains as a pair of global variables  a set of reference states
sref and the best solution so far n   at each iteration of the loop  a modified version of
bfbb  inc bfbb  is called with an    sref   compilation of   created on the basis of the
   

fion oversubscription planning as heuristic search

current sref   the reference set sref is then extended by inc bfbb with all the non redundant
value carrying states discovered during the search  and n is updated if the search discovers
nodes of higher value 
if and when the open list becomes empty or the node n selected from the list promises
less than the lower bound  inc bfbb returns an indicator  done  that the best solution
n found so far  across the iterations of inc compile and bfbb  is optimal  in that case 
inc compile and bfbb leaves its loop and extracts that optimal plan from n   however 
inc bfbb may also terminate in a different way  if a certain complementary termination
criterion is satisfied  the latter criterion comes to assess whether the updates to sref
performed in the current session of inc bfbb warrant updating the    sref   compilation
and restarting the search  if terminated this way  inc bfbb returns a respective indicator 
and inc compile and bfbb goes into another iteration of its loop  with the updated sref and
n   we note that  while the optimality of the algorithm holds for any such termination
condition  the latter should greatly affect the runtime efficiency of the algorithm 
theorem    the inc compile and bfbb search algorithm is sound and complete for optimal osp 
proof  first  for any complementary termination criterion employed by the inc bfbb procedure  inc compile and bfbb is guaranteed to terminate  this is because that complementary termination criterion is checked in inc bfbb only after a proper expansion of the
global reference set sref   and thus the number of calls to inc bfbb by inc compile and bfbb
is upper bounded by  s  
it terms of search  inc bfbb is no different from the regular bfbb procedure  in turn  by
theorem     the additional pruning power of the budget reducing compilation with reference
states sref affects only search nodes n such that u shni    maxssref u s   note also that 
each time the best solution so far n is updated in inc bfbb  it is necessarily added to sref
 since goods shn i  of the new n can be included in no goods s  for s  sref    thus  optimal
solutions cannot be pruned out by inc bfbb and the overall search by inc compile and bfbb
is therefore sound 

    empirical evaluation
to evaluate the merits of the landmark based budget reducing compilation  we have extended our prototype osp solver from section   with the following components 
    sref   compilation of osp tasks  for arbitrary sets of reference states sref  
 generation of disjunctive action landmarks for    sref   compilations using the lm cut
procedure  helmert   domshlak        of fast downward  and
 the incremental bfbb procedure inc compile and bfbb as in figure     with the
search termination criterion being satisfied  only  if the examined node n improves
over the current value lower bound  i e   n becomes the new best so far node n  
after some preliminary evaluation  we also added two optimality preserving enhancements to the search  because the auxiliary variables of our compilations increase the dimensionality of the problem  and this is known to negatively affect the quality of the abstraction
   

fidomshlak   mirkis

 a  blind
   

unsolved

   
   
   
   
   
   

unsolved

compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

   
                                   
bfbb

 b  hm
   

unsolved

   
   
   
   
   

unsolved

compile and bfbb

   

   

   
                                   
bfbb

figure     comparative view of empirical results in terms of expanded nodes  for bfbb
vs  compile and bfbb  with  a  blind and  b  abstraction hm heuristics

heuristics  domshlak et al          we first devised the projections with respect to the original osp problem   and the open list was ordered as if the search is done on the original
problem  that is  by


x
h shniv   b  g n   
lcost l   
vl  shni

where sv is the projection of the l s state s on the variables of the original osp task  
this change in heuristic evaluation is sound  as theorem    in particular implies that any
   

fion oversubscription planning as heuristic search

admissible heuristic for  is also an admissible heuristic for l   and vice versa  second 
when a new node n is generated  we check whether
x
x
lcost l  
lcost l   g n     
g n   
l hvl   ishn  i

l hvl   ishni

for some previously generated node n  that corresponds to the same state of the original
problem   that is  shn  iv   shniv   if so  then n is pruned right away  optimality
preservation of this enhancement is established in lemma    and proven in appendix a 
p      
lemma    let  be an osp task    sref   be a    sref   compilation of   l be a set of
landmarks for   sref     lcost be an admissible landmark cost function for l  and l be the
respective budget reducing compilation of  l  lcost  into   let   and   be a pair of plans
v
for l with end states s  and s    respectively  such that sv
    s  and
cl       

x

lcost l   cl       

l hvl   is 

x

lcost l  

    

l hvl   is 

then  for any plan    that extends     there exists a plan    that extends   such that
  qbl       

qbl      

our evaluation included the regular bfbb planning for   solving  using landmarkbased compilation via compile and bfbb  and the simple setting of inc compile and bfbb
described above  all three approaches were evaluated under the blind heuristic and the
additive abstraction heuristic hm described in section    figures       depict the results
of our evaluation in terms of expanded nodes  similarly to the experiment reported in
section    each task was approached under four different budgets  corresponding to     
          and      of the minimal cost needed to achieve all the goals in the task 
and each run was restricted to    minutes  figures   a and   b compare the number
of expanded nodes of bfbb and compile and bfbb across the four levels of cost budget 
under blind  a  and abstraction hm  b  heuristics  figures   a and   b provide a similar
comparison between bfbb and inc compile and bfbb  figures   a and   b do the same
for compile and bfbb and inc compile and bfbb    figures       and figures       in
appendix b provide a more detailed view of the results in figures    and     respectively 
by breaking them down into different levels of cost budget 
as figure   shows  the results were very satisfactory  with no informative heuristic
guidance at all  the number of nodes expanded by compile and bfbb was typically much
lower than the number of nodes expanded by bfbb  with the difference reaching three
orders of magnitude more than once  of the     task budget pairs behind figure  a    
pairs were solved by compile and bfbb with no search at all  by proving that no plan can
achieve value higher than that of the initial state   while  unsurprisingly  only   of these
tasks were solved with no search by bfbb 
    we do not present here a detailed comparison in terms of the running times  but the per node cpu
time overhead due to landmark based budget reduction was       some technical difficulties with our
implementation of inc compile and bfbb led us to limit our comparison of it in each graph only to tasks
solved by both methods 

   

fidomshlak   mirkis

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
   
                                   
bfbb

 b  hm
   
inc compile and bfbb

   
   
   
   
   
   
   
   
                                   
bfbb

figure     comparative view of empirical results in terms of expanded nodes  for bfbb
vs  inc compile and bfbb  with  a  blind and  b  abstraction hm heuristics

as expected  the impact of the landmark based budget reduction is lower when the
search is equipped with a meaningful heuristic  figure   b   nonetheless  even with our
abstraction heuristic in hand  the number of nodes expanded by compile and bfbb was
often substantially lower than the number of nodes expanded by bfbb  here  bfbb and
compile and bfbb solved with no search    and    task budget pairs  respectively  finally  despite the rather ad hoc setting of our incremental inc compile and bfbb procedure 
switching from compile and bfbb to inc compile and bfbb was typically beneficial  obvi   

fion oversubscription planning as heuristic search

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
     
                                  
compile and bfbb

 b  hm
   
inc compile and bfbb

   
   
   
   
   
   
   
     
                                  
compile and bfbb

figure     comparative view of empirical results in terms of expanded nodes  for
compile and bfbb vs  inc compile and bfbb  with  a  blind and  b  abstraction hm heuristics

ously  much deeper investigation and development of inc compile and bfbb is still required 
especially in the context of the choice of the iteration termination criterion 

   summary and future work
deterministic oversubscription planning captures the computational core of one of the most
important setups of automated action selection  and yet  despite the apparent importance of
   

fidomshlak   mirkis

this problem  it has not been sufficiently investigated  in this work  we progressed towards
translating the spectacular advances in classical deterministic planning to deterministic
osp  tracing the key sources of progress in classical planning  we identified a severe lack
of effective approximations for osp  and worked towards bridging this gap 
our focus was on two classes of approximation techniques that underly most state ofthe art optimal heuristic search solvers for classical planning  state space abstractions and
goal reachability landmarks  first  we defined the notion of additive abstractions for osp 
studied the complexity of deriving effective abstractions from a rich space of hypotheses 
and revealed some substantial  empirically relevant islands of tractability of this abstraction
discovery problem  next  we showed how standard goal reachability landmarks of certain
classical planning tasks can be compiled into the osp task of interest  resulting in an
equivalent osp task with a lower cost allowance  and thus with a sometimes dramatically
smaller search space 
all the techniques proposed here satisfy the properties required by the efficient search
algorithms for optimal osp  however  we believe that these techniques  and especially
landmark based budget reducing compilations  should be as beneficial in satisficing osp
as in optimal osp  in particular because the difference between optimal and satisficing
planning appears to be much smaller in osp than in classical deterministic planning 
many interesting questions remain open for future work  and the prospects for further
developments in oversubscription planning now appear quite promising  within the specific
context of our work  the two most interesting research directions are     optimization of value
partitions given cost partitions  that is  optimizing abstraction discovery in ap  c      
and     thoroughly investigating the interleaved landmark discovery and search for osp
introduced in section      in a broader context  we propose  as well  additional candidates
for future research 
 following the work of katz and domshlak      a  on implicit abstractions for classical planning  the computational merits of implicit abstractions for osp should be
investigated  this will inevitably give us a better understanding of the computational
tractability boundaries of deterministic osp 
 the basic model of deterministic planning in section     was used to provide a unifying
comparative view of the basic models of classical  cost bounded  net benefit  and
oversubscription planning  one practically motivated extension of this model is to lift
action costs to vectors of action costs  such a variant of cost bounded planning has
already been investigated  nakhost et al          and it is only natural to examine
this extension in the context of osp 
unfortunately  our results on abstractions do not seem to extend directly to vectors of
costs  at the level of the planning model  adding cost measures shifts problem solving
from polynomial time shortest path s  problems to np hard restricted shortest path s 
problems  handler   zang         nonetheless  like the knapsack problem  the restricted shortest path problem can be solved in pseudo polynomial time  desrochers
  soumis         and thus some extension of our results to vectors of costs might still
be achievable 
at the same time  the machinery of landmark based budget reducing compilations
for osp straightforwardly extends to vectors of costs and budgets  hence  even if no
   

fion oversubscription planning as heuristic search

quality heuristic for osp with multiple cost measures is available  the blind search
can still be stratified with information coming from problem landmarks 
 while the pruning mechanism of bfbb must rely on admissible  upper bounding
heuristic estimates  no special properties are required from a heuristic used to guide the
search choices of bfbb  thus  developing informative yet not necessarily admissible
heuristics for osp is clearly of interest 
acknowledgments
this work was partially supported by the eoard grant fa                and the isf
grant         

appendix a  proofs
theorem   given an osp task    hv  s    u  o  c  bi and a homomorphic abstraction
skeleton as     g                  gk   k    of m  
    for each cost partition c  cp   there exists a budget partition b  bp such that

m c u b   as as for all value partitions u  up  
    for each budget partition b  bp   there exists a cost partition c  cp such that

m c  u b  as as for all value partitions u  up  
proof  let    h s    o    s      s    o    s              sn    on   sn  i be an optimal s   plan for m  
and  for i   k   let i   h i  s     o    i  s               i  sn     on   i  on   i be the mapping of
 to gi   since as is homomorphic  the paths             k are well defined 
    p
given a cost partition c  cp   let budget profile b  b be defined as b  i   

j n  c i  oj    for i   k   first  note that b  bp since
x
i k 

  

x x

b  i   

c i  oj   

i k  j n 

x

  

c oj    b 

j n 

where    is by c being a cost partition  and    is by  being an s   plan for m  
second  for any u  u  by the construction of b   i is an i  s    plan for the abstract
 c u b  
model mi
  now  let u  up   and for i   k   let i be an optimal i  s    plan for
 c u b  
mi
  we have
x
i k 

qb

  i 

  

 i   

x

  i 

qb

  

 i    qb    

    

i k 

where    is by optimality of i   and    is by i  sn   being the end state of i and u
being a value partition  therefore   c  u  b   induces an additive abstraction for   that

is  m c u b   aas m  
   

fidomshlak   mirkis

    given a budget partition b  let cost profile c  c be defined as c  i  o    c o   b i 
b  
forpall operators o  o  and all i   k   first  we have c  cp since b  bp implies
 

i k  b i           second  for any u  u  by the construction of c   i is an i  s   b
 c  u b 

plan for mi
  following now exactly the same line of reasoning as for eq     above

accomplishes the proof that m c  u b  aas m for any u  up  

lemma   the algorithm in figure  a computes  u  
proof  due to the boundness and non emptiness of the polytope induced by lm
    the termination of the algorithm is straightforward  thus  given a strong   binary partition u  the
only question is whether the value with which the algorithm terminates is  u   first  let
us show that 
   for m   k   if x is a solution of lm
    then x    b if and only if  for each cost partition
c  cp   there exists a budget partition b  bp such that  c  u  b  is an abstraction
for m and hm c u b   s     m 
   assume to the contrary that  for each cost partition c  cp   there exists a budget partition b  bp with hm c u b 
s  s     m  and yet x     b  given the values provided by x to the cost variables oo  c i  o    let c be the corresponding cost partition 
and             k be the induced lengths of the shortest paths from    s             k  s    to valued states in g            gk   respectively  by our assumption  let b be a budget partition
such that hm c u b   s     m  first  by the definition of strong   binary value partitions 
hm c u b   s     m implies that there exists z  k   z    m such that  for i  z  b i   i  
second  constraint    c   maximization of   and the fact that the only bound on each b i 
is by i imply together that  for i  z  x b i     i   putting things together  we obtain
bbp

b 

x

b i  

iz

x

i  

iz

x

   c 

x b i     

iz

contradicting our assumption 
   assume to the contrary that  x    b  and yet there exists a cost partition c  cp
such that  for all budget partitions b  bp with  c  u  b   ap   we have hm c u b   s      m 
let the shortest path lengths             k be defined as above  but now with respect to the
specific cost partition c from the assumption 
likewise  let xc be a solution to lm
  with an
s
extra constraint on the cost variables oo  c i  o   to be assigned to c  since the objective
in lm
  is to maximize the value of   we have
x    xc    

    

now  let
z 

argmax

x

z    k   z     m iz  

   

i  

fion oversubscription planning as heuristic search

together  constraint    c   maximization of   and the fact that the only bound on each
b i  is by i  via the cost variables  imply that
xc     

x

xc  b i    

iz

x

i  

    

iz

in turn  together with x    b and eq      eq     implies that
 
xc  b i   
b i   
  

iz
otherwise

is a budget partition with  c  u  b   ap   and hm c u b   s     m  contradicting our assumption 
having proved the sub claim     which basically captures the semantics of lm
    suppose
that the algorithm terminates within the loop  and returns m for some m      by the
construction of the algorithm  if x is a solution of lm
    then x    b  by     for each cost
partition c  cp   there exists  c  u  b   ap such that h c u b   s   m  if m   k  then
trivially s  u    m  otherwise  if m   k  we know that the algorithm did not terminate
at the previous iteration corresponding to m      again     then implies that there exists a
cost partition c  cp for which no  c  u  b   ap will induce h c u b   s    m       hence 
by the definition of s  u   s  u     m       and in turn  since u is a strong   binary value
partition  we have s  u    m  finally  if the algorithm terminates after the loop and
returns    then precisely the same argument on the basis of    implies s  u      

lemma   for any        mini k  i   the algorithm in figure   a computes  such that
   u    
proof  the arguments for the boundness and non emptiness of the polytope induced by
lv  are precisely the same as for the polytope of lm
  studied in lemma    and thus the
termination of the algorithm is straightforward  in what follows  we prove that the value
returned by the algorithm satisfies the claim of the lemma  let u be the given   binary
partition  similarly to the proof of lemma    first we prove a sub claim that 
   for v  r     if x is a solution of lv    then x    b if and only if  for each cost partition
c  cp   there exists a budget partition b  bp such that  c  u  b  is an abstraction
for m and hm c u b   s     v 
the proof of    mirrors the proof of the respective sub claim in lemma    mutatis mutandis 
and thus it is provided here only for ease of verification 
   assume to the contrary that  for each cost partition c  cp   there exists a budget
partition b  bp with hm c u b   s     v  and yet x     b 
s
given the values provided by x to the cost variables oo  c i  o    let c be the corresponding cost partition  and  for i   k   let i be the induced length of the shortest
path from i  s    to the i  valued states in gi   by our assumption  let b be a budget
partition such that hm c u b   s     v  first  by the
p definition of   binary value partitions 
hm c u b   s     v implies that there exists z  k  iz i  v such that  for i  z  b i   i  
   

fidomshlak   mirkis

second  constraint    c   maximization of   and the fact that the only bound on each b i 
is by i   imply together that  for i  z  x b i     i   putting things together  we obtain
bbp

b 

x

b i  

iz

x

i  

iz

x

   c 

x b i     

iz

contradicting our assumption 
   assume to the contrary that  x    b  and yet there exists a cost partition c  cp
such that  for all budget partitions b  bp with  c  u  b   ap   we have hm c u b   s      v 
let the shortest path lengths             k be defined as above  but now with respect to the
specific cost partition c from the assumption 
likewise  let xc be a solution to lv  with an
s
extra constraint on the cost variables oo  c i  o   to be assigned to c  since the objective
in lv  is to maximize the value of   we have
x    xc    

    

now  let
z   argmax

x

 
pz  k   iz  
iz   i v

i  

together  constraint    c   maximization of   and the fact that the only bound on each
b i  is by i  via the cost variables  imply that
xc     

x

xc  b i    

iz

x

i  

    

iz

in turn  together with x    b and eq      eq     implies that
 
xc  b i    i  z
b i   
 
  
otherwise
is a budget partition with  c  u  b   ap   and hm c u b   s     v  contradicting our assumption 
this finalizes the proof of the sub claim     now pconsider the interval end points 
and  at the termination
of the while loop  if   
i k  i   then  trivially   u    
p
otherwise  if    i k  i   then  by the construction of the algorithm  at some iteration of
the while loop  a test always achievable   was issued  came back negative  and thus  for the
solutions x of l    we have x      b  hence  by      u      now  if        then  by the
construction of the algorithm  at some iteration of the while loop  a test always achievable  
was issued  came back positive  and thus  for the solutions x of l    we have x     b 
hence  by      u     putting these properties on  and  together with the while loops
termination condition      implies    u       u     finally  if       then
   mini k  i implies    mini k  i   in turn  since  u  corresponds to a sum of values of
some states in the k models of m c u b     u    concluded above implies     u      

   

fion oversubscription planning as heuristic search

theorem    let    hv  s    u  o  c  bi be an osp task  l be a set of pairwise disjoint
 landmarks for   lcost be an admissible landmark cost function from l  and l be the
respective budget reducing compilation of   for every  for  with qb         there is a
plan l for l with qbl  l     qb     and vice versa 
proof  let l be a plan
snfor l   and let  be the operator sequence obtained by replacing
all operators o from i   oli along l with the respective operators o  o  by the
definition s
of the action set of l in eq      we have  applicable in s    and s  jk  
s l jl k   ni   dom vli    thus  qb      qbl  l    likewise  again by the definition of
the action set of l in eq     and the fact that no operator in ol achieves the control
propositions  hvl    i           hvln   i   we have  oli  l       from that  we have

c    cl  l    

n
x

lcost li   

i  

p
in turn  b   bl   ni   lcost li   by eq      and cl  l    bl by the virtue of l being a
plan for l   therefore  it holds that c    b  and thus  is a plan for  
in the opposite direction  let  be a plan for  with qb         and let l be an
operator sequence obtained by replacing  for each  landmark l  l  every first occurrence
of an operator from l with the respective cost reduced operator from ol   it is easy to
verify that l is applicable in s l   and that qbl  l     qb     likewise  by the definition
of  landmarks  every l  l will have a presence along   from that  we have

c l     c   

n
x

lcost li    b 

i  

n
x

lcost li     bl  

i  

where the first equality is by pairwise disjointness of  l            ln    the inequality is by 
being a plan for   and the second equality is by eq      thus  l is a plan for l  


theorem    let    hv  s    u  o  c  bi be an osp task  let l    l            ln   be a set of
 landmarks for   let lcost be an admissible landmark cost function from l  and let l
be the  generalized  budget reducing compilation of   for every  for  with qb        
there is a plan l for l with qbl  l     qb     and vice versa 
proof  let l be a plan for l   and let  be the operator sequence obtained by  i  replacing
all operators o with the respective operators o  o  and  ii  removal of all get operators  by
eq      we have  applicable in s    and s  jk   s l jl k    hvl    i           hvln   i   thus 
qb      qbl  l    now  for each  landmark l  l  let  l  be the number of instances
of the cost reduced counterparts o of the operators from l along l   by eqs     and    
for each l  l  l must contain at least  l     instances of operator get l   from that 
we have
   

fidomshlak   mirkis

x

c    cl  l    

x

lcost l  

ol ll o 

  cl  l    

x
x

  l     lcost l 

ll

 l lcost l  

ll

  cl  l    

x

x

  l     lcost l 

ll

lcost l 

ll

 bl  

x

lcost l 

ll

  b 
and thus  is a plan for  
in the opposite direction  let    ho            om i be a plan for  with qb         by
the definition of  landmarks  every landmark li  l will have a presence along   let
of  i    f  i    n   be the first occurrence
of an ffoperator from li along   that is  f  i   


let    o              o k    k  n  be the operator sequence obtained
argminj m   oj  li    and s
by ordering the operators i n   of  i    consistently with   note that  since  landmarks
in l are not necessarily disjoint  we may have f  i    f  j  for some    i    j  n  and thus
k can be strictly smaller than n 
given the above  let l be an operator sequence obtained from  based on  by
    replacing each o i  along  with o i    and
    inserting right before each o i  an arbitrary ordered sequence of actions
i 
 

 get l    l  l   o j    o i     l  

    

j  

note the set union semantics of eq      even if multiple operators from  o              o i    
appear in some landmark l together with o i    only one instance of the operator get l  is
inserted in step     before o i   
it is not hard to verify that l is applicable in s l   and that qbl  l     qb     now 
step     of expanding  to l reduces the cost of the operator sequence by
k
x

x

lcost l   

i   ll o i   

x

 l lcost l  

ll

where  l  is the number of all occurrences of the operators fromp
l in   in turn  step     of
expanding  to l increases the cost of the operator sequence by ll   l     lcost l  
this is because  by eq      among all  l  operators o i  along l such that o i   l  all
but the first are preceded by the dedicated instances of the operator get l   thus 
x
x
cl  l     c   
lcost l   b 
lcost l    bl  
ll

ll

that is  l is a plan for l  


   

fion oversubscription planning as heuristic search

lemma    let  be an osp task    sref   be a    sref   compilation of   l be a set of
landmarks for   sref     lcost be an admissible landmark cost function for l  and l be the
respective budget reducing compilation of  l  lcost  into   let   and   be a pair of plans
v
for l with end states s  and s    respectively  such that sv
    s  and
cl       

x

lcost l   cl       

then  for any plan
b
l
q          qbl       

lcost l  

    

l hvl   is 

l hvl   is 

  

x

that extends     there exists a plan    that extends   such that

proof  under the notation in the claim  the proof is by a constructive mapping of the plan
   to the corresponding plan     
first  we derive from    a plan    for  by  i  removing the f inish operator and all
the get   operators  and  ii  replacing all instances of each discounted operator o with
instances of the respective original operator o  this results in a plan           e for 
p
with s           sv
  and c       cl       
l hvl   is  lcost l   to see the latter  for each

operator   ol   let       denote the number of instances of  along     given that 
we have
c       cl      

x

 get l  lcost l   

ll

x

  cl       

lcost l  

ll

  cl       

x

x

x

 o 

ll

o ll o 






x

lcost l 

 o    get l  

o ll o 

    

lcost l    s   hvl   i 

ll

  cl       

x

lcost l  

l hvl   is 

where the second and fourth equalities are just formula manipulations  the first equality is
direct from the construction of     and the third equality is by the definition of the budget
reducing compilation  and specifically  by eqs     and    
similarly to the construction of p
  from     we can construct   from     with and

s           sv
and
c 
 
 
c
 
 
 
 
 
l
 
l hvl   is  lcost l   thus  by eq      c      c     
and also  by the setting of the lemma  s           s          hence           e is also a plan
for   and qb         qb       
as the last step  we now construct from    a plan    for l as in the claim  first  by
the properties of   in the claim  the plan   for  achieves all the landmarks l s     l  
hvl   i  s     second  by the definition of the landmark set l   e must satisfy the rest of
the landmarks  that is  ls     l   hvl   i  s     let us denote the operator instances along
 e as ho            ok i  k     e    and let  l            lk   be a partition of ls  with li  ls 
being the subset of all landmarks from ls  for which oi is their first achiever along  e  
given that  consider an operator sequence  e      k    recursively defined via         
and  if li     then   i      i    hoi i  else   i      i      hoi i  where  is some  arbitrary 
   

fidomshlak   mirkis

sequencing of operators
 get l    l  li  hvl   i  s  j  kj  i   k  
finally  we set           e  
by eqs     and    in the definition of the budget reducing compilation 
it is easy to
p
verify that the above construction of  e ensures cl   e     c  e   hvl   is  lcost l  and
qbl   e     qb        in turn  by the properties of     this implies that qbl         qbl      
and cl         cl        cl   e   
finally  since
x
lcost l 
cl        c     
hvl   is 

and
x

cl   e     c  e   

lcost l  

hvl   is 

we have
cl         c       c  e   

x

lcost l  

ll

thus  since c      c     and          e is a valid plan for   we have
x
cl        c       c  e   
lcost l 
ll



c     



x

lcost l 

ll

b

x

lcost l  

ll

finalizing the proof that    is a plan for l as in the claim 

   



fion oversubscription planning as heuristic search

appendix b  detailed evaluation results
 a 
   

unsolved

   
   
   
hm

   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
blind

 b 
   

unsolved

   
   
hm

   
   
   
unsolved

   
   

     
                                  
basic

figure     the comparison in figure    p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a 
   

unsolved

   
   
   
hm

   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
blind

 b 
   

unsolved

   
   
hm

   
   
   
unsolved

   
   

     
                                  
basic

figure     the comparison in figure    p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

 a 
   

unsolved

   
   
   
hm

   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
blind

 b 
   

unsolved

   
   
hm

   
   
   
unsolved

   
   

     
                                  
basic

figure     the comparison in figure    p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a 
   

unsolved

   
   
   
hm

   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
blind

 b 
   

unsolved

   
   
hm

   
   
   
unsolved

   
   

     
                                  
basic

figure     the comparison in figure    p       restricted to the tasks budgeted with     
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

 a  blind
   

unsolved

   
compile and bfbb

   
   
   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

   
                                   
bfbb

 b  hm
   

unsolved

compile and bfbb

   
   
   
   
   
unsolved

   
   

   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a  blind
   

unsolved

   
compile and bfbb

   
   
   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

   
                                   
bfbb

 b  hm
   

unsolved

compile and bfbb

   
   
   
   
   
unsolved

   
   

   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

 a  blind
   

unsolved

   
compile and bfbb

   
   
   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

   
                                   
bfbb

 b  hm
   

unsolved

compile and bfbb

   
   
   
   
   
unsolved

   
   

   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a  blind
   

unsolved

   
compile and bfbb

   
   
   
   
   

unsolved

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   

     
                                  
bfbb

 b  hm
   

unsolved

compile and bfbb

   
   
   
   
   
unsolved

   
   

     
                                  
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with     
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
   
                                   
bfbb

 b  hm
   

inc compile and bfbb

   
   
   
   
   
   
   
   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
   
                                   
bfbb

 b  hm
   

inc compile and bfbb

   
   
   
   
   
   
   
   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
   
                                   
bfbb

 b  hm
   

inc compile and bfbb

   
   
   
   
   
   
   
   
                                   
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with    
of the minimal cost of achieving the entire set of subgoals

   

fidomshlak   mirkis

 a  blind
   
   
inc compile and bfbb

airport
blocks
depot
driverlog
freecell
grid
gripper
logistics
miconic
mystery
openstacks
pipesworld
psr small
tpp
trucks
rovers
satellite
zenotravel

   
   
   
   
   
   
     
                                  
bfbb

 b  hm
   

inc compile and bfbb

   
   
   
   
   
   
   
     
                                  
bfbb

figure     the comparison in figure     p       restricted to the tasks budgeted with     
of the minimal cost of achieving the entire set of subgoals

   

fion oversubscription planning as heuristic search

references
backstrom  c     klein  i          planning in polynomial time  the sas pubs class 
computational intelligence                
backstrom  c     nebel  b          complexity results for sas  planning  computational
intelligence                 
baier  j  a   bacchus  f     mcilraith  s          a heuristic search approach to planning
with temporally extended preferences  artificial intelligence                    
benton  j   coles  a  j     coles  a  i          temporal planning with preferences and
time dependent continuous costs  in proceedings of the   nd international conference
on automated planning and scheduling  icaps   pp      
benton  j   do  m     kambhampati  s          anytime heuristic search for partial satisfaction planning  artificial intelligence                    
benton  j   van den briel  m     kambhampati  s          a hybrid linear programming
and relaxed plan heuristic for partial satisfaction planning problems  in proceedings
of the seventeenth international conference on automated planning and scheduling
 icaps   pp       
bertsimas  d     vempala  s          solving convex programs by random walks  journal
of the acm                 
bonet  b          an admissible heuristic for sas  planning obtained from the state
equation  in proceedings of the   rd international joint conference on artificial
intelligence  ijcai   pp           
bonet  b     geffner  h          planning as heuristic search  artificial intelligence        
        
bonet  b     geffner  h          heuristics for planning with penalties and rewards formulated in logic and computed through circuits  artificial intelligence              
         
bonet  b     helmert  m          strengthening landmark heuristics via hitting sets  in
proceedings of the   th european conference on artificial intelligence  ecai   pp 
       
brafman  r  i     chernyavsky  y          planning with goal preferences and constraints 
in proceedings of the international conference on automated planning and scheduling  pp         
clarke  e   grumberg  o     peled  d          model checking  mit press 
coles  a  i   fox  m   long  d     smith  a  j          additive disjunctive heuristics for
optimal planning  in proceedings of the   th international conference on automated
planning and scheduling  icaps   pp       
coles  a  j   coles  a   fox  m     long  d          a hybrid lp rpg heuristic for modelling
numeric resource flows in planning  journal of artificial intelligence research     
       
   

fidomshlak   mirkis

coles  a  j     coles  a  i          lprpg p  relaxed plan heuristics for planning with
preferences  in proceedings of the   st international conference on automated planning and scheduling  icaps   pp       
cousot  p     cousot  r          abstract interpretation frameworks  journal of logic and
computation                
dantzig  g  b          linear programming and extensions  princeton university press 
dantzig  t          number  the language of science  macmillan 
desrochers  m     soumis  f          a generalized permanent labelling algorithm for
the shortest path problem with time windows  information systems and operations
research             
do  m  b   benton  j   van den briel  m     kambhampati  s          planning with goal
utility dependencies  in proceedings of the   th international joint conference on
artificial intelligence  ijcai   pp           
domshlak  c   hoffmann  j     sabharwal  a          friends or foes  on planning as
satisfiability and abstract cnf encodings  journal of artificial intelligence research 
           
domshlak  c   katz  m     lefler  s          landmark enhanced abstraction heuristics 
artificial intelligence            
dudzinski  k     walukiewicz  s          exact methods for the knapsack problem and its
generalizations  european journal of operational research          
dvorak  f     bartak  r          integrating time and resources into planning  in proceedings of the   nd ieee international conference on tools with artificial intelligence
 ictai   pp       
edelkamp  s          planning with pattern databases  in proceedings of the european
conference on planning  ecp   pp       
edelkamp  s          taming numbers and durations in the model checking integrated
planning system  journal of artificial intelligence research             
fikes  r  e     nilsson  n          strips  a new approach to the application of theorem
proving to problem solving  artificial intelligence            
fox  m     long  d          pddl     an extension to pddl for expressing temporal
planning problems  journal of artificial intelligence research            
garey  m  r     johnson  d  s          computers and intractability  a guide to the theory
of np completeness  w h  freeman and company  new york 
geffner  h     bonet  b          a concise introduction to models and methods for automated planning  synthesis lectures on artificial intelligence and machine learning 
morgan   claypool 
gerevini  a   haslum  p   long  d   saetti  a     dimopoulos  y          deterministic
planning in the fifth international planning competition  pddl  and experimental
evaluation of the planners  artificial intelligence                    
   

fion oversubscription planning as heuristic search

gerevini  a   saetti  a     serina  i          planning through stochastic local search and
temporal action graphs in lpg  journal of artificial intelligence research         
    
gerevini  a   saetti  a     serina  i          an approach to efficient planning with numerical
fluents and multi criteria plan quality  artificial intelligence                    
grotschel  m   lovasz  l     schrijver  a          the ellipsoid method and its consequences
theorems in combinatorial optimization  combinatorica            
handler  g     zang  i          a dual algorithm for the constrained shortest path problem 
networks             
haslum  p          heuristics for bounded cost search  in proceedings of the   rd international conference on automated planning and scheduling  icaps   pp         
haslum  p   bonet  b     geffner  h          new admissible heuristics for domainindependent planning  in proceedings of the   th national conference on artificial
intelligence  aaai   pp           
haslum  p   botea  a   helmert  m   bonet  b     koenig  s          domain independent
construction of pattern database heuristics for cost optimal planning  in proceedings
of the   th national conference on artificial intelligence  aaai   pp           
haslum  p     geffner  h          admissible heuristics for optimal planning  in proceedings of the   th international conference on artificial intelligence planning systems
 aips   pp         
haslum  p     geffner  h          heuristic planning with time and resources  in proceedings
of the  th european conference on planning  ecp   pp         
helmert  m          decidability and undecidability results for planning with numerical
state variables  in proceedings of the sixth international conference on artificial
intelligence planning and scheduling  aips   pp       
helmert  m          the fast downward planning system  journal of artificial intelligence
research             
helmert  m     domshlak  c          landmarks  critical paths and abstractions  whats
the difference anyway   in proceedings of the   th international conference on automated planning and scheduling  icaps   pp         
helmert  m   haslum  p     hoffmann  j          flexible abstraction heuristics for optimal
sequential planning  in proceedings of the   th international conference on automated
planning and scheduling  icaps   pp         
helmert  m   haslum  p   hoffmann  j     nissim  r          merge and shrink abstraction 
a method for generating lower bounds in factored state spaces  journal of the acm 
               
hoffmann  j          the metric ff planning system  translating ignoring delete lists
to numeric state variables  journal of artificial intelligence research             
hoffmann  j   gomes  c  p   selman  b     kautz  h  a          sat encodings of statespace reachability problems in numeric domains  in proceedings of the   th international joint conference on artificial intelligence  ijcai   pp           
   

fidomshlak   mirkis

hoffmann  j     nebel  b          the ff planning system  fast plan generation through
heuristic search  journal of artificial intelligence research             
hoffmann  j   porteous  j     sebastia  l          ordered landmarks in planning  journal
of artificial intelligence research             
karp  r          reducibility among combinatorial problems  in complexity of computer
computations  pp         plenum press  new york 
karpas  e     domshlak  c          cost optimal planning with landmarks  in proceedings
of the international joint conference on artificial intelligence  ijcai      pp      
     
katz  m     domshlak  c       a   implicit abstraction heuristics  journal of artificial
intelligence research            
katz  m     domshlak  c       b   optimal admissible composition of abstraction heuristics  artificial intelligence              
kellerer  h   pferschy  u     pisinger  d          knapsack problems  springer verlag
berlin 
keyder  e     geffner  h          soft goals can be compiled away  journal of artificial
intelligence research             
koehler  j          planning under resource constraints  in proceedings of the   th european
conference on artificial intelligence  ecai   pp         
mirkis  v     domshlak  c          abstractions for oversubscription planning  in proceedings of the   rd international conference on automated planning and scheduling
 icaps   pp         
mirkis  v     domshlak  c          landmarks in oversubscription planning  in proceedings
of the   rd european conference on artificial intelligence  ecai   pp         
nakhost  h   hoffmann  j     muller  m          resource constrained planning  a monte
carlo random walk approach  in proceedings of the   nd international conference on
automated planning and scheduling  icaps   pp         
nebel  b          on the compilability and expressive power of propositional planning
formalisms  journal of artificial intelligence research             
nemirovsky  a     yudin  n          interior point polynomial methods in convex programming  siam 
pearl  j          heuristics   intelligent search strategies for computer problem solving 
addison wesley 
pommerening  f     helmert  m          incremental lm cut  in proceedings of the   rd
international conference on automated planning and scheduling  icaps   pp     
     rome  italy 
porteous  j   sebastia  l     hoffmann  j          on the extraction  ordering  and usage
of landmarks in planning  in proceedings of the  th european conference on planning
 ecp      pp       
   

fion oversubscription planning as heuristic search

punnen  a  p          k sum linear programming  the journal of the operational research
society                 
richter  s   helmert  m     westphal  m          landmarks revisited  in proceedings of
the   rd aaai conference on artificial intelligence  aaai      pp         
russell  s     norvig  p          artificial intelligence  a modern approach    edition  
pearson 
sanchez  r     kambhampati  s          planning graph heuristics for selecting objectives in over subscription planning problems  in proceedings of the   th international
conference on automated planning and scheduling  icaps   pp         
smith  d          choosing objectives in over subscription planning  in proceedings of the
  th international conference on automated planning and scheduling  icaps   pp 
       
thayer  j  t     ruml  w          bounded suboptimal search  a direct approach using
inadmissible estimates  in proceedings of the   nd international joint conference on
artificial intelligence  ijcai   pp         
thayer  j  t   stern  r  t   felner  a     ruml  w          faster bounded cost search
using inadmissible estimates  in proceedings of the   nd international conference on
automated planning and scheduling  icaps   pp         
van den briel  m   sanchez  r   do  m  b     kambhampati  s          effective approaches
for partial satisfaction  over subscription  planning  in proceedings of the   th aaai
conference on artificial intelligence  aaai   pp         
van den briel  m   benton  j   kambhampati  s     vossen  t          an lp based heuristic for optimal planning  in proceedings of the   th international conference on
principles and practice of constraint programming  cp   pp         
yang  f   culberson  j   holte  r   zahavi  u     felner  a          a general theory
of additive state space abstractions  journal of artificial intelligence research     
       

   

fi