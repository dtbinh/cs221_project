journal of artificial intelligence research                

submitted       published     

pattern matching and discourse processing in information
extraction from japanese text
tsuyoshi kitani

tkitani cs cmu edu

yoshio eriguchi
masami hara

eriguchi rd nttdata jp
masami rd nttdata jp

center for machine translation
carnegie mellon university
pittsburgh  pa       usa
development headquarters
ntt data communications systems corp 
     horikawa cho  saiwai ku  kawasaki shi  kanagawa     japan

abstract
information extraction is the task of automatically picking up information of interest
from an unconstrained text  information of interest is usually extracted in two steps 
first  sentence level processing locates relevant pieces of information scattered throughout
the text  second  discourse processing merges coreferential information to generate the
output  in the first step  pieces of information are locally identified without recognizing
any relationships among them  a key word search or simple pattern search can achieve this
purpose  the second step requires deeper knowledge in order to understand relationships
among separately identified pieces of information  previous information extraction systems
focused on the first step  partly because they were not required to link up each piece
of information with other pieces  to link the extracted pieces of information and map
them onto a structured output format  complex discourse processing is essential  this
paper reports on a japanese information extraction system that merges information using
a pattern matcher and discourse processor  evaluation results show a high level of system
performance which approaches human performance 

   introduction
in recent information extraction systems  most individual pieces of information to be extracted directly from a text are usually identified by key word search or simple pattern
search in the preprocessing stage  lehnert et al         weischedel et al         cowie et al  
      jacobs et al          among the systems presented at the fifth message understanding conference  muc     however  the main architectures ranged from pattern matching to
full or fragment parsing  onyshkevych         full or fragment parsing systems  in which
several knowledge sources such as syntax  semantics  and domain knowledge are combined
at run time  are generally so complicated that changing a part of the system tends to affect
the other components  in past information extraction research  this interference has slowed
development  jacobs        hobbs et al          a pattern matcher  which identifies only
patterns of interest  is more appropriate for information extraction from texts in narrow
domains  since this task does not require full understanding of the text 

c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fikitani  eriguchi    hara

textract  the information extraction system described here  uses a pattern matcher
similar to sri s fastus pattern matcher  hobbs et al          the matcher is implemented
as a finite state automaton  unlike other pattern matchers  textract s matcher deals
with word matching problems caused by the word segmentation ambiguities often found in
japanese compound words 
the goal of the pattern matcher is to identify the concepts represented by words and
phrases in the text  the pattern matcher first performs a simple key word based concept
search  locating individual words associated with concepts  the second step is a template
pattern search which locates phrasal patterns involving critical pieces of information identified by the preprocessor  the template pattern search identifies relationships between
matched objects in the defined pattern as well as recognizing the concept behind the relationship  one typical concept is the relationship of  economic activity  which companies
can participate in with each other 
it is usually dicult to determine the relationships among pieces of information which
have been identified in separate sentences  these relationships are often stated implicitly 
and even if the text explicitly mentions them the descriptions are often located far enough
apart to make detection dicult  although the importance of discourse processing for information extraction has been emphasized in the message understanding conferences  lehnert
  sundheim        hirschman         no system presented has satisfactorily addressed the
issue 
the discourse processor in textract is able to correlate individual pieces of information
throughout the text  textract merges concepts which the pattern matcher has identified
separately  and usually in different sentences  when the concepts involve the same companies  textract can unify multiple references to the same company even when the company
name is missing  abbreviated  or pronominalized  furthermore  the processor segments the
discourse to isolate portions of text relevant to a particular conceptual relationship  the
discourse segmentation lessens the chance of merging unrelated information  kitani        
this paper analyzes some evaluation results for textract s discourse module and describes the tipster muc   evaluation results in order to assess overall system performance 

   tipster information extraction task
the goal of the tipster project sponsored by arpa is to capture information of interest
from english and japanese newspaper articles about corporate joint ventures and microelectronics  a system must fill a generic template with information extracted from the text
by a fully automated process  the template is composed of several objects  each containing several slots  slots may contain pointers to related objects  tipster         extracted
information is to be stored in an object oriented database 
in the joint ventures domain  the task is to extract information concerning joint venture
relationships which organizations form and dissolve  the template structure represents
these relationships with tie up relationship objects  which contain pointers to organization
entity objects representing the organizations involved  entity objects contain pointers to
other objects such as person and facility objects  as shown in figure   
in the microelectronics domain  extraction focuses on layering  lithography  etching  and
packaging processes in semiconductor manufacturing for microchip fabrication  the entities
  

fipattern matching and discourse processing

template
doc  no 
doc  date
doc  source
content    

entity
name
aliases
location
nationality
type
entity rel     
person   
facility    

tie up rel 
tie up status
entity    
created
entity    
activity    

activity
industry    

entity rel 
entity     
entity     
rel  of ent 
to ent 
person
name
persons entity
position
facility
name
location
type
industry
industry type
product  
service

denotes instantiations of multiple objects
    points to zero or more objects      points to one or more objects

figure    object oriented template structure of the joint ventures domain
extracted include manufacturer  distributor  and user  in addition to detailed manufacturing
information such as materials used and microchip specifications such as wafer size and device
speed  the microelectronics template structure is similar to that of the joint ventures but
has fewer objects and slots 
both of these extraction tasks must identify not only individual entities but also certain
relationships among them  often  however  a particular piece of extracted information
describes only part of a relationship  this partial information must be merged with other
pieces of information referring to the same entities  for merging to produce correct results 
therefore  correct identification of entity references is crucial 

   problem definition
this section first describes word matching problems caused by the word segmentation ambiguities  diculties of reference resolution of company names are then explained  issues
of discourse segmentation and concept merging are also discussed using an example text 

    word segmentation
japanese word segmentation in the preprocessor gives rise to a subsequent under matching
problem  when a key word in the text is not found in the word segmentor s lexicon  the
segmentor tends to divide it into separate words  with our current lexicon  for example  the
  

fikitani  eriguchi    hara

compound noun   f    teikei kaisyo   consisting of two words        teikei  joint
venture  and   f    kaisyo  dissolve   is segmented into the two individual nouns  thus a
key word search for   f    teikei kaisyo  does not succeed in the segmented sentence 
on the other hand  the pattern matching process allows  by default  partial matching
between a key word and a word in the text        teikei  and    z    gyoum teikei  
both meaning  a joint venture   can both be matched against the single key word     
 teikei   this exibility creates an over matching problem  for example  the key word
  js    silicon  matches   f  js   nisanka silicon  silicon dioxide   although
they are different materials to be reported in the microelectronics domain  these segmentation diculties for compound nouns also cause major problems in word based japanese
information retrieval systems  fujii   croft        

    company name references

in the corporate joint ventures domain  output templates mostly describe relationships
among companies  as described in section     information of interest is therefore found in
sentences which mention companies or their activities  it is essential for the extractor to
identify topic companies the main concern of the sentences they appear in in order to
correlate other information identified in the sentence  there are three problems which make
it dicult to identify topic companies 
   missing subject
topic companies are usually the subject of a sentence  japanese sentences frequently
omit subjects  however even in formal newspaper articles  the veniex system which
nec presented at muc   can identify the company implied by a missing subject if
there is an explicit reference to it in the immediately preceding sentence  doi et al  
      muraki et al          it is not clear whether veniex can resolve the missing
reference when the explicit reference appears in a sentence further separated from the
subjectless sentence 
   company name abbreviations
as is also seen in english  company names are often abbreviated in a japanese text after their first appearance  a variety of ways to abbreviate company names in japanese
is given in  karasawa         the following examples show some typical abbreviations
of japanese company names 
 a  a partial word
  ak   s        s   
 mercedes benz 
 benz 
 b  an english abbreviation
  o  ntt        ntt  
 nippon telegraph and telephone 
 c  the first katakana character       
  ajffs l         
 american express corp  
  

fipattern matching and discourse processing
 d  the first character of each primitive segment
 o           o   
 japan airlines 
 e  some randomly selected characters
 o         o  
 shin nihon steel 
locating company name abbreviations is dicult  since many are not identified as
companies by either a morphological analyzer or the name recognizer in the preprocessor  another problem is that the variety of ways of abbreviating names makes it
dicult to unify multiple references to one company 
almost all muc   systems include a string matching mechanism to identify company name abbreviations  these abbreviations are specified in an aliases slot in the
company entity object  to the authors  knowledge  none of the systems other than
textract can detect company name abbreviations of type  d  or  e  above without
using a pre defined abbreviation table 
   company name pronouns
company name pronouns are often used in formal texts  frequently used expressions
include        ryosya  both companies          dosya  the company   and   r
    jisya  the company itself   as shown in the following examples  resolving the
references is particularly important for full understanding of a text  direct english
translation follows the japanese sentences 
 a    x y     wr r  is  k  

 y 

 x 

 x corp  has tied up with y corp  and sells products of the company by its own
brand name  
 y corp    x corp  
 b    x        p nj  

 x 

 x corp  is the biggest company in this field  the president of the company is
mr  suzuki  
 x corp  
reference resolution for        dosya  the company  is implemented in veniex  doi
et al          veniex resolves the pronominal reference in the same way as it identifies
missing company references  the crl brandeis diderot system presented at muc  simply chooses the nearest company name as the referent of  dosya   this algorithm
was later improved by wakao using corpus based heuristic knowledge  wakao        
these systems do not handle pronominalized company names other than  dosya  
the three problems described in this section often cause individual information to be
correlated with the wrong company or tie up relationship object  to avoid this error  the
topic companies must be tracked from the context  since they can be used to determine
which company objects an information fragment should be assigned to  abbreviated and
pronominalized company names must be unified as references to the same company 
     o     nihon  japan  and       koukuu  airlines  are the primitive segments in this example 
  

fikitani  eriguchi    hara

    discourse segmentation and concept merging

in the joint ventures domain  a tie up relationship object contains pointers to other objects
such as economic activities  as shown in figure     when a company is involved in multiple tie ups  merging information into a tie up relationship according to topic companies
sometimes yields incorrect results  consider the following example 
 x corp  has tied up with y corp  x will start selling products
in japan next month  last year x started a similar joint venture
with z inc  

obviously  the sale in the second sentence is related to the tie up relationship of x and
y  however  since the topic company  which is the subject of a sentence  is x in all three
sentences  the sale could also be related to the x and z tie up relationship  this incorrect
merging can be avoided by separating the text into two blocks  the first two sentences
describe the x and y tie up  and the last sentence describes the x and z tie up  thus 
discourse segmentation is necessary to identify portions of text containing related pieces
of information  the crl brandeis diderot system segments the joint ventures text into
two types of text structures  cowie et al          it is not known how well their discourse
segmentation performed  however 
once the text is segmented  concepts or identified pieces of information can be merged
within the same discourse segment  for example  the expected income from a joint venture
is often stated in a sentence which does not explicitly mention the participating companies 
they appear in the previous sentence  in this case  the joint venture concept identifying the
companies and the income concept identifying the expected income must be merged so that
the latter will be linked to the correct entity objects 
   the solution

this section describes details of textract s pattern matcher and discourse processor as
well as the system architecture 

   

textract architecture
textract is an information extraction system developed for the tipster japanese do 

mains of corporate joint ventures and microelectronics  jacobs        jacobs et al         
as shown in figure    the textract joint ventures system comprises four major components  preprocessor  pattern matcher  discourse processor  and template generator  because
of its shorter development time  the textract microelectronics system has a simpler configuration than the joint ventures system  it does not include the template pattern search
in the pattern matcher  or the discourse segmentation and concept merging in the discourse
processor  as also shown in figure   
in the preprocessor  a japanese segmentor called majesty segments japanese text into
primitive words tagged with their parts of speech  kitani         next  the name recognizer
identifies proper names and monetary  numeric  and temporal expressions  majesty tags
proper names which appear in its lexicon  the name recognizer identifies additional proper
names by locating name designators such as       sya  corresponding to  inc   or  corp   
  

fipattern matching and discourse processing

pattern matcher
preprocessor

concept
search

template
pattern
search

  concept
  concept
identification
identification
  information
merging within
a sentence

  morphological
analysis
  name
recognition

discourse processor
company
discourse
concept
name
segmentamerging
unification
tion
  company
name
reference
resolution

  information
  text
segmentation merging
within a text

joint ventures
system only

template
generator
  output
generation

figure    textract system architecture
for company names  the recognizer extends the name string forward and backward from
the designator until it meets search stop conditions  kitani   mitamura         the name
segments are grouped into units which are meaningful to the pattern matching process
 kitani   mitamura         most strings to be extracted directly from the text are identified
by majesty and the name recognizer 
details of the pattern matcher and discourse processor are given in the following sections  the template generator assembles the extracted information and creates the output
described in section   

    pattern matcher

the following subsections describe the concept search and the template pattern search in
the pattern matcher which identify concepts in the sentence  whereas the former simply
searches for key words  the latter searches for phrasal patterns within a sentence  the
template pattern search also identifies relationships between matched objects in the defined
pattern  in the course of textract development  key words and template patterns were
obtained manually by a system developer using a kwic  key word in context  tool and
referring to a word frequency list obtained from the corpus 
      concept search

key words representing the same concept are grouped into a list and used to recognize the
concept in a sentence  the list is written in a simple format   concept name word  word 
      for example  key words for recognizing a dissolved joint venture concept can be written
in the following way 
  

fikitani  eriguchi    hara
 dissolved

f  fn 

or
 dissolved dissolve terminate cancel  

the concept search module recognizes a concept when it locates one of the associated
words in a sentence  this simple procedure sometimes yields incorrect concepts  for example  the concept  dissolved  is erroneously identified from an expression such as  cancel a
hotel reservation   key word based concept search is most successful when processing text
in a narrow domain in which words are used with restricted meanings 
the under matching problem occurs when a compound noun in the key word list of a
concept fails to match the text because the instance of the compound in the text has been
segmented into separate primitive words  to avoid the problem  adjacent nouns in the text
are automatically concatenated during the concept search process  generating compound
nouns at run time  the over matching problem  on the other hand  arises when a key word
successfully matches part of a compound noun which as a whole is not associated with
the concept  over matching can be prevented by anchoring the beginning and or end of a
key word pattern to word boundaries  with the symbol     at the beginning and     at
the end   for example     js     silicon  must be matched against a single complete
word in the text  since this problem is rare  its solution is not automatic  system developers
attach anchors to key words which are likely to over match 
      template pattern search
textract s pattern matcher is implemented as a finite state recognizer  this choice of

implementation is based on the assumption that a finite state grammar can eciently handle
many of the inputs that a context free grammar covers  pereira         the pattern matcher
is similar to the pattern recognizer used in the muc   fastus system developed at sri
 hobbs et al         
patterns for the textract template pattern matcher are defined with rules similar
to regular expressions  each pattern definition specifies the concept associated with the
pattern   for the joint ventures domain  textract uses eighteen concepts  
in the matcher  state transitions are driven by segmented words or grouped units from
the preprocessor  the matcher identifies all possible patterns of interest in the text that
match defined patterns  recognizing the concepts associated with the patterns  for some
inputs  the matcher must skip words that are not explicitly defined in the pattern 
figure   shows definitions of equivalent japanese and english patterns for recognizing
the concept  joint venture   this english pattern is used to capture expressions such
as  xyz corp  created a joint venture with pqr inc   the notation   string  represents
a variable matching an arbitrary string  variables whose names begin with   cname 
are called company name variables and are used where a company name is expected to
appear  in the definitions shown  a string matched by   cname partner subj  is likely
to contain at least one company name referring to a joint venture partner and functioning
as the subject in a sentence 
the pattern     fi strict p  matches the grammatical particles        wa   and   fi  
 ga    which serve as subject case markers  the symbol  strict  specifies a full string match
 the default in case of template pattern search   whereas  loose  allows a partial string
  

fipattern matching and discourse processing
 a 

 jointventure   
 cname partner subj
  fi strict p
 cname partner with
  strict p
 skip
 loose vn 

 b 

 jointventure   
 cname partner subj
create  v
a joint venture  np
with  p
 cname partner with 

figure    a matching pattern for  a  japanese and  b  english

match  partial string matching is useful for matching a defined pattern to compound words 
the verbal nominal pattern     loose vn  matches compound words such as      
 kigyo teikei  a corporate joint venture  as well as       teikei  a joint venture  
the first field in a pattern is the pattern name  which refers to the concept associated
with the pattern  the second field is a number indexing a field in the pattern  this field s
contents are used to decide quickly whether or not to search within a given string  the
matcher only applies the entire pattern to a string when the string contains the text in
the indexed field  for eciency  therefore  this field should contain the least frequent word
in the entire pattern  in this case        teikei  for japanese and  a joint venture  for
english  
the order of noun phrases is relatively unconstrained in a japanese sentence  case
markers  usually attached to the ends of noun phrases  provide a strong clue for identifying
the case role of each phrase  subject  object  etc    thus pattern matching driven mainly
by case markers recognizes the case roles well without parsing the sentence 
approximately     patterns are used to extract various concepts in the japanese joint
ventures domain  several patterns usually match a single sentence  moreover  since patterns
are often defined with case markers such as        wa     fi    ga   and        to   a single
pattern can match a sentence in more than one way when several of the same case markers
appear in the sentence  the template generator accepts only the best matched pattern 
which is chosen by applying the following three heuristic rules in the order shown 
   select patterns that include the largest number of matched company name variables
containing at least one company name 
   select patterns that consume the fewest input segments  the shortest string match  
and
   select patterns that include the largest number of variables and defined words 
these heuristic rules were obtained from an examination of matched patterns reported
by the system  to obtain more reliable heuristics  a large scale statistical evaluation must
be performed  heuristics for a similar problem of pattern selection in english are discussed
in  rau   jacobs         their system chooses the pattern which consumes the most input
segments  the longest string match   as opposed to textract s choice of the shortest string
match in its second heuristic rule  
   in rau and jacobs  system  the third heuristic rule seems to be applied before the second rule  in this
case  there should be little difference in performance between the heuristic rules of the two systems 
  

fikitani  eriguchi    hara
another important feature of the pattern matcher is that rules can be grouped according
to their concept  the rule name  jointventure   in figure    for example  represents
the concept  joint venture   using this grouping  the best matched pattern can be
selected from matched patterns of a particular concept group instead of from all the matched
patterns  this feature enables the discourse and template generation processes to narrow
their search for the best information to fill a particular slot 
    discourse processor

the following subsections describe the algorithm of company name reference resolution
throughout the discourse  discourse segmentation and concept merging processes are also
discussed 
      identifying topic companies

since no syntactic analysis is performed in textract  topic companies are simply identified wherever a subject case marker such as   fi    ga          wa   or   b    mo  follows
company names  if no topic companies are found in a sentence  the previous sentence s
topic companies are inherited  even if the current sentence contains a non company subject   this is based on the supposition that a sentence which introduces new companies
usually mentions them explicitly in its subject 
      abbreviation detection and unification

company name abbreviations have the following observed characteristics 


majesty tags most abbreviations as  unknown    company    person   or  place  



a company name precedes its abbreviations 
an abbreviation is composed of two or more characters from the company name  in
their original order 





the characters need not be consecutive within the company name  and
english word abbreviations must be identical with an english word appearing in the
company name 

thus the following are regarded as abbreviations   unknown    company    person  
and  place  segments composed of two or more characters which also appear in company
names previously identified in the text  when comparing possible abbreviations against
known company names  the length of the longest common subsequence or lcs  wagner  
fischer        is computed to determine the maximum number of characters appearing in
the same order in both strings  
to unify multiple references to the same company  a unique number is assigned to
the source and abbreviated companies  repeated company names which contain strings
appearing earlier in the text are treated as abbreviations  and thus given unique numbers 
   for example  the lcs of  abacbba  and  bcda  is  bca  
  

fipattern matching and discourse processing
   step    initialization to assign each entity in c a unique number 
for i in c do     i  cmax 
c  i   id   i
done
   step    search abbreviations and give unique numbers
for i in c do     i  cmax 
if c  i   id      i then
  already recognized as an abbreviation
continue i loop
lensrc length of c  i   string  
for j in c do  i      j  cmax 
if c  j   id      j then
  already recognized as an abbreviation
continue j loop
len length of c  j   string  
lcs length of the lcs of c  i   string   and c  j   string  
if lcs    then do
if c  i   eg      yes  and lensrc   lcs   len then
c j   id   c  i   id     an english word abbreviation
else if c  i   eg      no  and lcs   len then
  an abbreviation
c j   id   c  i   id  
done
done
done
figure    algorithm to unify multiple references to the same company
by the algorithm described in figure    in the pseudocode shown  all identified company
names are stored in an associative array named c    unknown    company    person   and
 place  segments are also stored in the array as possible abbreviations  company names are
sorted in ascending order of their starting position in the text and numbered from   to cmax
 step     a company name string which is indexed i can be addressed by c  i   string    a
ag c  i   eg   records whether the company name is an english word abbreviation or not 
step   compares each company name in the array c with all names higher in the array
 and thus later in the text   when the lcs of a pair of earlier and later company names
is equal to the length of the later company name  the later company name is recognized as
an abbreviation of the earlier company name  then  the  id  of the later company name is
replaced with that of the earlier company name  the lcs must be two or more characters 
and if the abbreviation is an english word  the lcs must be equal to the length of the
earlier company name 
at the end of execution  a number is given in c  i   id    if c  i   id   was changed during
execution  c  i   string   was recognized as a company name abbreviation 
  

fikitani  eriguchi    hara
      anaphora resolution of company name pronouns

the approach for reference resolution described in this section is based on heuristics obtained
by corpus analysis rather than linguistic theories  three company name pronouns are the
target of reference resolution         ryosya          dosya   and   r    jisya   meaning
 both companies    the company   and  the company itself   they are three of the most
frequent company name pronouns appearing in our corpus provided by arpa for the tipster
information extraction project   ryosya    dosya   and  jisya  appeared           and    
times  respectively  in      newspaper articles containing an average of     characters per
article 
the following heuristics  derived from analysis of pronoun reference in the corpus  were
used for reference resolution 






 ryosya  almost always referred to the  current  tie up company  with one exception
in a hundred occurrences 
about ninety percent of  dosya  occurrences referred to the topic company when there
was only one possible referent in the same sentence  but 
when more than two companies  including the topic company  preceded  dosya  in
the same sentence  about seventy five percent of the pronoun occurrences referred to
the nearest company  not necessarily the topic company  and
about eighty percent of  jisya  occurrences referred to the topic company 

two additional heuristic rules were discovered but not implemented in textract 
 about four percent of  jisya  occurrences referred to more than one company  and
 about eight percent of  jisya  occurrences referred to entities which are general expressions about a company such as   fi    kaisya  a company  
as a result of the discourse processing described above  every company name  including
abbreviations and pronominal references  is given a unique number 
      discourse segmentation and concept merging
in the     articles of the tipster muc   joint ventures test set  multiple tie up relationships

appeared in thirty one articles which included ninety individual tie up relationships  the
two typical discourse models representing the discourse structures of tie up relationships
are shown in figure   




type i  tie ups are described sequentially
descriptions of tie ups appear sequentially in this model  one tie up is not mentioned
again after a new tie up has been described 
type ii  a main tie up reappears after other tie ups are mentioned
a major difference from the type i model is that a description of a main tie up
reappears in the text after other tie up relationships have been introduced  non main
tie ups are usually mentioned briey 
   

fipattern matching and discourse processing

tie up  

tie up  

tie up  

tie up  
 
 non main tie ups
 

tie up  
 
 
 

tie up n

tie up n

tie up  

type i

type ii

figure    discourse structure of tie up relationships
eleven type i structures and thirteen type ii structures appeared in the thirty one articles  seven of the articles contained complicated discourse structures regarding the tie up
relationships 
the two types of text structure described above are similar to the ones implemented in
the crl brandeis diderot joint ventures system  the difference is only in the type ii
structure  diderot processes all tie up relationships which reappear in the text  not just
the reappearing main tie up focused on by textract 
textract s discourse processor divides the text when a different tie up relationship is
identified by the template pattern search  a different tie up relationship is recognized when
the numbers assigned to the joint venture companies are not identical to those appearing in
the previous tie up relationships  diderot segments the discourse if any other related pieces
of information such as date and entity location are different between the tie up relationships 
such strict merging is preferable when the pieces of information in comparison are correctly
identified  the merging conditions of discourse segments should be chosen according to the
accuracy of identification of the information to be compared 
after the discourse is segmented  identified concepts and extracted words and phrases
are merged  figure   shows the merging process for the following text passage which actually
appeared in the tipster muc   test set  a direct english translation follows  
    o  daffak  o u   

rkrs  fi kh  k      
fiz firfik b   

 on the eighth  of this month   tanabe pharmaceuticals made a joint
venture contract with a german pharmaceutical maker  merck and co 
inc   to develop and sell its new medicine in japan  they also agreed that
both companies would invest equally to establish a joint venture company
in five or six years when they start selling new medicine  
   

fikitani  eriguchi    hara

first sentence 
 on the eighth  of this month  
tanabe pharmaceuticals made
a joint venture contract with a
german pharmaceutical maker 
merck and co  inc   to develop
and sell its new medicine in
japan  

second sentence 
 they also agreed that both
companies would invest equally
to establish a joint venture
company in five or six years when
they start selling new medicine  

 tanabe pharmaceuticals 
template
pattern
search

 establish 
 a joint venture
 both
company 
companies 

 economicactivity 
 merck and co  inc  

 tanabe pharmaceuticals 
discourse
processor

 both
companies 

 economicactivity 

 establish 

 a joint venture
company 

 merck and co  inc  

figure    example of concept merging
the two company names in the first sentence        tanabe seiyaku  tanabe
pharmaceuticals  and   ak    ei meruku sya  merck and co  inc    are identified
by either majesty or the name recognizer during preprocessing  next  the template pattern
search locates in the first sentence the  economic activity  pattern shown in figure    a  
the  economic activity  concept relating the two companies has now been recognized 
the template pattern search also recognizes the  establish  concept in the second sentence
by the template pattern shown in figure    b  
after sentence level processing  discourse processing recognizes that        ryosya 
both companies  in the second sentence refers to tanabe pharmaceuticals and merck in
the first sentence because they are the current tie up companies  since the second sentence
does not introduce a new tie up relationship  both sentences are in the same discourse
segment  concepts separately identified in the two sentences can now be merged because
the subjects of the two sentences are the same  the  establish  concept is therefore joined
to the  economic activity  concept 
 a 

 economicactivitye  
 cname partner subj
 strict p
 cname partner subj
 strict p
 skip
 loose vn 

 b 

 establish   
 cname partner subj
 strict p
 cname created obj
 strict p
 skip
 loose vn 

  fi
r
fi

  fi
 
 

figure    economic activity pattern  a  and establish pattern  b 
   

fipattern matching and discourse processing

   performance evaluation
this section shows some evaluation results for textract s discourse module  muc   evaluation metrics and overall textract performance are also discussed 

    unique identification of company name abbreviations
a hundred joint ventures newspaper articles used for the tipster    month evaluation
were chosen as a blind test set for this evaluation  the evaluation measures were recall 
the percentage of correct answers extracted compared to possible answers  and precision 
the percentage of correct answers extracted compared to actual answers  majesty and
the name recognizer identified company names in the evaluation set with recall of seventyfive percent and precision of ninety five percent when partial matches between expected
and recognized strings were allowed  and with recall of sixty nine percent and precision of
eighty seven percent in an exact matching condition 
company names that appeared in a form different from their first appearance in an
article were considered to be company name abbreviations  among     abbreviations  the
recall and precision of abbreviation detection were sixty seven and eighty nine percent  respectively  most importantly  detected abbreviations were unified correctly with the source
companies as long as the source companies were identified correctly by majesty and the
name recognizer 
the evaluation results clearly show that company name abbreviations were accurately
detected and unified with the source companies as long as company names were correctly
identified by the preceding processes  it is possible  however  that the simple string matching
algorithm currently used could erroneously unify similar company names  which are often
seen among family companies 

    anaphora resolution of company name pronouns
the accuracy of reference resolution for  ryosya    dosya   and  jisya  is shown in table
   the numbers in parentheses were obtained by restricting attention to pronouns which
referred to companies identified correctly by the preceding processes  since companies
referred to by  ryosya   both companies  were usually  current  tie up companies in the
joint ventures domain  reference resolution accuracy depended on the accuracy with which
tie up relationships were identified 
company name pronouns

number of
references
       ryosya  both companies          
       dosya  the company 
        
  r    jisya  the company itself         

resolution
accuracy
         
         
         

table    accuracy of reference resolutions
   

fikitani  eriguchi    hara
a major cause of incorrect references of  dosya  was the failure to locate topic companies  the simple mechanism of searching for topic companies using case markers did not
work well  a typical problem can be seen in the following example      x    a
joint venture partner is x corp    here x corp is a topic company  but the subject   x  
 x corp   is not followed by a subject case marker  other errors can be attributed to the
fact that  dosya  did not always refer to a topic company as discussed in the heuristic rules
of  dosya  reference resolution 
regarding  jisya  resolutions  five instances which should have referred to multiple
companies were bound to a single company  since multiple companies are usually listed
using conjunctions such as        to  and  and      comma   they can be identified easily
if a simple phrase analysis is performed 
it became clear from this evaluation that resolving  dosya  references to a non topic
company required intensive text understanding  forty seven percent of the occurrences of
 dosya  and  jisya  were bound to topic companies inherited from a previous sentence  this
result strongly supported the importance of keeping track of topic companies throughout
the discourse 

    discourse segmentation
thirty one of the     tipster muc   evaluation test articles included ninety multiple tieup relationships  textract s discourse processor segmented the thirty one articles into
seventy one individual tie up relationship blocks  only thirty eight of the blocks were correctly segmented  main tie up relationships which reappeared in type ii discourse structures were not detected well  which caused the structures to be incorrectly recognized as
type i  this error was caused by the fact that the joint venture relationships were usually mentioned implicitly when they reappeared in the text  for example  a noun phrase 
        the joint venture this time   which was not detected by the template patterns used  brought the focus back to the main tie up  as a result  textract identified eight
percent fewer tie up relationships than the possible number expected in the tipster muc  
evaluation  this merging error must have affected system performance since the information in the reappearing main tie up segment would not have been correctly linked to the
earlier main tie up segment 
this preliminary study suggested that recognizing segmentation points in the text should
be regarded as crucial for performance  the template pattern matching alone was not good
enough to recognize the segmentation points  the discourse processor simply segmented
the text when it found a new tie up relationship  the discourse models  currently unused at
run time in textract  could be used to help infer the discourse structure when the system
is not sure whether to merge or separate discourse segments  reference resolution of definite
and indefinite noun phrases must also be solved for accurate discourse segmentation in future
research 
the accuracy of discourse segmentation might be improved by checking the difference or
identity of date and entity location  as well as entity name  when deciding whether or not to
merge a tie up relationship  textract did not take date and location objects into account
in making segmentation decisions  because textract s identification of these objects was
not considered reliable enough  for example  the date object was identified with recall of
   

fipattern matching and discourse processing
only twenty seven percent and precision of fifty nine percent  on the other hand  entities
were identified with over eighty percent accuracy in both recall and precision  to avoid
incorrect discourse segmentation  therefore  textract s merging conditions included only
entity names as reliable information 

    overall textract performance

    newspaper articles      about japanese corporate joint ventures and     about japanese
microelectronics  were provided by arpa for use in the tipster muc   system evaluation 
six joint ventures systems and five microelectronics systems  including textract developed at cmu as an optional system of ge cmu shogun  were presented in the japanese
system evaluation at muc    a scoring program automatically compared the system output
with answer templates created by human analysts  when a human decision was necessary 
analysts instructed the scoring program whether the two strings in comparison were completely matched  partially matched  or unmatched  finally  the scoring program calculated
an overall score combined from all the newspaper article scores  although various evaluation metrics were measured in the evaluation  chinchor   sundheim         only the
following error based and recall precision based metrics are discussed in this paper  the
basic scoring categories used are  correct  cor   partially correct  par   incorrect  inc  
missing  mis   and spurious  spu   counted as the number of pieces of information in the
system output compared to the possible information 
    error based metrics
 error per response fill  err  
wrong   inc   p ar     mis   spu
total cor   par   inc   mis   sp u


undergeneration  und  

mis
mis  
possible cor   par   inc   mis


overgeneration  ovg  

spu  
spu
actual cor   p ar   inc   sp u


substitution  sub  

inc   p ar  
cor   p ar   inc

   

fikitani  eriguchi    hara

domain
err und ovg sub rec pre p r
textract  jjv 
  
  
  
  
  
       
system a  jjv 
  
  
  
  
  
       
system b  jjv 
  
  
  
  
  
       
textract  jme    
  
  
  
  
       
system a  jme 
  
  
  
  
  
       
system b  jme 
  
  
  
  
  
       
table    scores of textract and two other top ranking ocial systems in tipster muc  
    recall precision based metrics


recall  rec  



precision  pre  



p r f measure  p r  

cor   par  
possible
cor   par  
actual

   rec  p re
rec   pre
the error per response fill  err  was the ocial measure of muc   system performance 
secondary evaluation metrics were undergeneration  und   overgeneration  ovg   and
substitution  sub   the recall  precision  and f measure metrics were used as unocial
metrics for muc   
table   shows scores of textract and two other top ranking ocial systems taken
from the tipster muc   system evaluation results   textract processed only japanese
domains of corporate joint ventures  jjv  and microelectronics  jme   whereas the two
other systems processed both english and japanese text  textract performed as well as
the top ranking systems in the two japanese domains 
the human performance of four well trained analysts was reported to be about eighty
percent in both recall and precision in the english microelectronics domain  will        
this is about thirty percent better than the best tipster muc   systems  performance
in p r f measure in the same language domain  in the japanese joint ventures domain 
textract scored recall of seventy five percent and precision of eighty one percent with
a core template comprising only essential objects  this result suggests that the current
technology could be used to support human extraction work if the task is well constrained 
   the textract scores submitted to muc   were unocial  it was scored ocially after the conference 
table   shows textract s ocial scores 
   

fipattern matching and discourse processing
running on a sun sparcstation ipx  textract processed a joint ventures article in
about sixty seconds and a microelectronics article in about twenty four seconds on average 
the human analysts took about fifteen minutes to complete an english microelectronics
template and about sixty minutes for a japanese joint ventures template  will        
thus a human machine integrated system would be the best solution for fast  high quality 
information extraction 
some tipster muc   systems processed both japanese and english domains  these
systems generally performed better in the japanese domains than in the corresponding english domains  one likely reason is that the structure of japanese articles is fairly standard 
particularly in the japanese joint ventures domain  and can be readily analyzed into the
two discourse structure types described in this paper  another possible reason is a characteristic of writing style  expressions which need to be identified tend to appear in the first
few sentences in a form suitable for pattern matching 
the textract japanese microelectronics system copied the preprocessor  the concept
search of the pattern matcher  and the company name unification of the discourse processor
used in the textract japanese joint ventures system  the microelectronics system was
developed in only three weeks by one person who replaced joint ventures concepts and key
words with representative microelectronics concepts and key words  the lower performance
of the textract microelectronics system compared to the joint ventures system is largely
due to the short development time  it is also probably due to the less homogeneous discourse
structure and writing style of the microelectronics articles 
   conclusions and future research

this paper has described the importance of discourse processing in three aspects of information extraction  identifying key information throughout the text  i e  topic companies and
company name references in the tipster muc   domains  segmenting the text to select relevant portions of interest  and merging concepts identified by the sentence level processing 
the basic performance of the system depends on the preprocessor  however  since many
pieces of identified information are put directly into slots or are otherwise used to fill slots
during later processing  textract s pattern matcher solves the matching problem caused
by the segmentation ambiguities often found in japanese compound words  the pattern
matching system based on a finite state automaton is simple and runs fast  these factors
are essential for rapid system development and performance improvement 
to improve system performance with the pattern matching architecture  an increase
in the number of patterns is unavoidable  since matching a large number of patterns is
a lengthy process  an ecient pattern matcher is required to shorten the running time 
tomita s new generalized lr parser  known to be one of the fastest parsers for practical
purposes  skips unnecessary words during parsing  bates   lavie         the parser is
under evaluation to investigate if it is appropriate for information extraction from japanese
text  eriguchi   kitani         pattern matching alone  however  will not be able to improve
the system performance to human levels in a complicated information extraction task such
as tipster muc    even if the task is well defined and suitable for pattern matching  more
efforts should be made in discourse processing such as discourse segmentation and reference
resolution for definite and indefinite noun phrases 
   

fikitani  eriguchi    hara
the research discussed in this paper is based on an application oriented  domain specific 
and language specific approach relying on patterns and heuristic rules collected from a
particular corpus  it is obvious that the patterns and heuristic rules described in this paper
do not cover a wide range of applications  domains  or languages  the empirical approach
described here is worth investigating even for an entirely new task  however  since it can
achieve a high level of system performance in a relatively short development time  while
linguistic theory based systems tend to become complex and dicult to maintain  especially
if they incorporate full text parsing  the simplicity of an empirically based  pattern oriented
system such as textract keeps the development time short and the evaluation cycle quick 
corpus analysis is a key element in this corpus based paradigm  it is estimated that
corpus analysis took about half of the development time for textract  statistically based
corpus analysis tools are necessary to obtain better performance in a shorter development
time  such tools could help developers not only extract important patterns and heuristic
rules from the corpus  but also monitor the system performance during the evaluationimprovement cycle 

acknowledgements

the authors wish to express their appreciation to jaime carbonell  who provided the opportunity to pursue this research at the center for machine translation  carnegie mellon
university  thanks are also due to teruko mitamura and michael mauldin for their many
helpful suggestions 
references

bates  j     lavie  a          recognizing substrings of lr k  languages in linear time 
tech  rep  cmu cs         carnegie mellon university  school of computer science 
chinchor  n     sundheim  b          muc   evaluation metrics  in proceedings of the
fifth message understanding conference  muc     pp        
cowie  j   guthrie  l   et al          crl brandeis  description of the diderot system
as used for muc    in proceedings of the fifth message understanding conference
 muc     pp          
doi  s   ando  s     muraki  k          context analysis in information extraction system
based on keywords and text structure  in proceedings of the forty seventh annual
conference of ipsj  in japanese  
eriguchi  y     kitani  t          a preliminary study of using tomita s generalized lr
parser for information extraction  unpublished paper  center for machine translation  carnegie mellon university 
fujii  h     croft  b          a comparison of indexing techniques for japanese text retrieval  in proceedings of the sixteenth annual international acm sigir conference
on research and development in information retrieval  pp          
hirschman  l          an adjunct test for discourse processing in muc    in proceedings
of the fourth message understanding conference  muc     pp        
   

fipattern matching and discourse processing
hobbs  j   appelt  d   et al          fastus  a system for extracting information from
natural language text  tech  rep       sri international 
jacobs  p          tipster shogun    month progress report  in notebook of tipster    month meeting 
jacobs  p   krupka  g   et al          ge cmu  description of the shogun system used
for muc    in proceedings of the fifth message understanding conference  muc    
pp          
karasawa  i          detection of company name abbreviations in japanese texts  unpublished paper  center for machine translation  carnegie mellon university 
kitani  t          an ocr post processing method for handwritten japanese documents 
in proceedings of natural language processing pacific rim symposium  pp        
kitani  t          merging information by discourse processing for information extraction 
in proceedings of the tenth ieee conference on artificial intelligence for applications  pp          
kitani  t     mitamura  t          a japanese preprocessor for syntactic and semantic
parsing  in proceedings of the ninth ieee conference on artificial intelligence for
applications  pp        
kitani  t     mitamura  t          an accurate morphological analysis and proper name
identification for japanese text processing  journal of information processing society
of japan                  
lehnert  w   mccarthy  j   et al          umass hughes  description of the circus
system used for muc    in proceedings of the fifth message understanding conference  muc     pp          
lehnert  w     sundheim  b          a performance evaluation of text analysis technologies  ai magazine  fall        
muraki  k   doi  s     ando  s          nec  description of the veniex system as used
for muc    in proceedings of the fifth message understanding conference  muc    
pp          
onyshkevych  b          technology perspective  in notebook of the fifth message understanding conference  muc    
pereira  f          finite state approximations of grammars  in proceedings of darpa
speech and natural language workshop  pp        
rau  l     jacobs  p          creating segmented databases from free text for text
retrieval  in proceedings of fourteenth annual international acm sigir conference
on research and development in information retrieval  pp          
tipster         joint venture template fill rules  in plenary session notebook of the
tipster    month meeting 
   

fikitani  eriguchi    hara
wagner  r     fischer  m          the string to string correction problem  journal of
acm                  
wakao  t          reference resolution using semantic patterns in japanese newspaper
articles  in proceedings of coling     pp            
weischedel  r   ayuso  d   et al          bbn  description of the plum system as used
for muc    in proceedings of the fifth message understanding conference  muc    
pp         
will  c          comparing human and machine performance for natural language information extraction  results for english microelectronics from the muc   evaluation 
in proceedings of the fifth message understanding conference  muc     pp        

   

fi