journal of artificial intelligence research                  

submitted        published      

supporting temporal reasoning by mapping
calendar expressions to minimal periodic sets
claudio bettini
sergio mascetti

bettini dico unimi it
mascetti dico unimi it

dipartimento di informatica e comunicazione  universita di milano
via comelico             milan  italy

x  sean wang

sean wang uvm edu

department of computer science  university of vermont
   colchester avenue  burlington  vt        usa

abstract
in the recent years several research efforts have focused on the concept of time granularity and its applications  a first stream of research investigated the mathematical models
behind the notion of granularity and the algorithms to manage temporal data based on
those models  a second stream of research investigated symbolic formalisms providing a set
of algebraic operators to define granularities in a compact and compositional way  however  only very limited manipulation algorithms have been proposed to operate directly
on the algebraic representation making it unsuitable to use the symbolic formalisms in
applications that need manipulation of granularities 
this paper aims at filling the gap between the results from these two streams of research 
by providing an efficient conversion from the algebraic representation to the equivalent
low level representation based on the mathematical models  in addition  the conversion
returns a minimal representation in terms of period length  our results have a major
practical impact  users can more easily define arbitrary granularities in terms of algebraic
operators  and then access granularity reasoning and other services operating efficiently
on the equivalent  minimal low level representation  as an example  we illustrate the
application to temporal constraint reasoning with multiple granularities 
from a technical point of view  we propose an hybrid algorithm that interleaves the
conversion of calendar subexpressions into periodical sets with the minimization of the period length  the algorithm returns set based granularity representations having minimal
period length  which is the most relevant parameter for the performance of the considered reasoning services  extensive experimental work supports the techniques used in the
algorithm  and shows the efficiency and effectiveness of the algorithm 

   introduction
according to a      research by oxford university press  the word time has been found
to be the most common noun in the english language  considering diverse sources on the
internet including newspapers  journals  fictions and weblogs  what is somehow surprising
is that among the    most common nouns we find time granularities like day  week  month
and year  we are pretty sure that many other time granularities like business day  quarter 
semester  etc  would be found to be quite frequently used in natural languages  however 
the way computer applications deal with these concepts is still very naive and mostly hidden in program code and or based on limited and sometimes imprecise calendar support 

c
    
ai access foundation  all rights reserved 

fibettini  mascetti   wang

temporal representation and reasoning has been for a long time an ai research topic aimed
at providing a formal framework for common sense reasoning  natural language understanding  planning  diagnosis and many other complex tasks involving time data management 
despite the many relevant contributions  time granularity representation and reasoning
support has very often been ignored or over simplified  in the very active area of temporal
constraint satisfaction  most proposals implicitly assumed that adding support for granularity was a trivial extension  only quite recently it was recognized that this is not the
case and specific techniques were proposed  bettini  wang    jajodia      a   even the
intuitively simple task of deciding whether a specific instant is part of a time granularity
can be tricky when arbitrary user defined granularities like e g   banking days  or academic
semesters are considered 
granularities and periodic patterns in terms of granularities are playing a role even
in emerging application areas like inter organizational workflows and personal information
management  pim   for example  inter organizational workflows need to model and monitor
constraints like  event  should occur no later than two business days after the occurrence
of event   in the context of pim  current calendar applications  even on mobile devices 
allow the user to specify quite involved periodical patterns for the recurrence of events  for
example  it is possible to schedule an event every last saturday of every two months  the
complexity of the supported patterns has been increasing in the last years  and the current
simple interfaces are showing their limits  they are essentially based on a combination of
recurrences based on one or two granularities taken from a fixed set  days  weeks  months 
and years   we foresee the possibility for significant extensions of these applications by
specifying recurrences over user defined granularities  for example  the user may define  or
upload from a granularity library  the granularity corresponding to the academic semester
of the school he is teaching at  and set the date of the finals as the last monday of each
semester  a bank may want to define its banking days granularity and some of the bank
policies may then be formalized as recurrences in terms of that granularity  automatically
generated appointments from these policies may appear on the devices of bank employees
involved in specific procedures  we also foresee the need to show a user preferred view of
the calendar  with current standard applications the user has a choice between a businessday limited view and a complete view  but why not enabling a view based on the userss
consulting days  for example  a new perspective in the use of mobile devices may also result
from considering the time span in which activities are supposed to be executed  expressed
in arbitrary granularities   and having software agents on board to alert about constraints
that may be violated  even based on contextual information like the user location or traffic
conditions  this scenario highlights three main requirements  a  a sufficiently expressive
formal model for time granularity  b  a convenient way to define new time granularities 
and c  efficient reasoning tools over time granularities 
consider a   in the last decade significant efforts have been made to provide formal
models for the notion of time granularity and to devise algorithms to manage temporal
data based on those models  in addition to logical approaches  montanari        combi 
franceschet    peron         a framework based on periodic set representations has been
extensively studied  bettini  wang    jajodia         and more recently an approach based
on strings and automata was introduced  wijsen        bresolin  montanari    puppis 
       we are mostly interested in the last two approaches because they support the effective
   

fimapping calendar expressions to minimal periodic sets

computation of basic operations on time granularities  in both cases the representation of
granularities can be considered as a low level one  with a rather involved specification in
terms of the instants of the time domain 
consider requirement b  above  users may have a hard time in defining granularities
in formalisms based on low level representations  and to interpret the output of operations 
it is clearly unreasonable to ask users to specify granularities by linear equations or other
mathematical formalisms that operate directly in terms of instants or of granules of a fixed
time granularity  hence  a second stream of research investigated more high level symbolic
formalisms providing a set of algebraic operators to define granularities in a compact and
compositional way  the efforts on this task started even before the research on formal
models for granularity  leban  mcdonald    forster        niezette   stevenne        and
continued as a parallel stream of research  bettini   sibi        ning  wang    jajodia 
      terenziani        urgun  dyreson  snodgrass  miller  soo  kline    jensen        
finally  let us consider requirement c  above  several inferencing operations have been
defined on low level representations  including equivalence  inclusion between granules in
different granularities  and even complex inferencing services like constraint propagation
 bettini et al       a   even for simple operations no general method is available operating
directly on the high level representation  indeed  in some cases  the proposed methods
cannot exploit the structure of the expression and require the enumeration of granules 
which may be very inefficient  this is the case  for example  of the granule conversion
methods presented by ning e at          moreover  we are not aware of any method to
perform other operations  such as equivalence or intersection of sets of granules  directly in
terms of the high level representation 
the major goal of this paper is to provide a unique framework to satisfy the requirements
a   b   and c  identified above  by adding to the existing results a smart and efficient
technique to convert granularity specifications from the high level algebraic formalism to the
low level one  for which many more reasoning tools are available  in particular  in this paper
we focus on the conversion from the high level formalism called calendar algebra  ning
et al         to the low level formalism based on periodical sets  bettini et al             a  
among the several proposals for the high level  algebraic  specification of granularities  the
choice of calendar algebra has two main motivations  first  it allows the user to express
a large class of granularities  for a comparison of the expressiveness of calendar algebra
with other formalisms see  bettini et al          second  it provides the richest set of
algebraic operations that are designed to reflect the intuitive ways in which users define
new granularities  a discussion on the actual usability of this tool and on how it could
be enhanced by a graphical user interface can be found in section      the choice of
the low level formalism based on periodic sets also has two main motivations  first  an
efficient implementation of all the basic operations already exists and has been extensively
experimented  bettini  mascetti    pupillo         second  it is the only one currently
supporting the complex operations on granularities needed for constraint satisfaction  as it
will be illustrated in more detail in section     
the technical contribution of this paper is a hybrid algorithm that interleaves the conversion of calendar subexpressions into periodical sets with a step for period minimization 
a central phase of our conversion procedure is to derive  for each algebraic subexpression 
the periodicity of the output set  this periodicity is used to build the periodical represen   

fibettini  mascetti   wang

tation of the subexpression that can be recursively used as operand of other expressions 
given a calendar algebra expression  the algorithm returns set based granularity representations having minimal period length  the period length is the most relevant parameter
for the performance both of basic operations on granularities and of more specialized ones
like the operations used by the constraint satisfaction service  extensive experimental work
reported in this paper validates the techniques used in the algorithm  by showing  among
other things  that     even large calendar expressions can be efficiently converted  and    
less precise conversion formulas may lead to unacceptable computation time  this latter
property shows the importance of carefully and accurately designed conversion formulas 
indeed  conversion formulas may seem trivial if the length of periodicity is not a concern 
in designing our conversion formulas  we made an effort to reduce the period length of the
resulting granularity representation  and thus render the whole conversion process computationally efficient 
in the next section we define granularities  several interesting relationships among them
are highlighted and the periodical set representation is formalized  in section   we define
calendar algebra and present its operations  in section   we describe the conversion
process  after the definition of the three steps necessary for the conversion  for each algebraic
operation we present the formulas to perform each step  in section   we discuss the period
minimality issue  and we report experimental results based on a full implementation of
the conversion algorithm and of its extension ensuring minimality  in section   we further
motivate our work by presenting a complete application scenario  section   reports the
related work  and section   concludes the paper 

   formal notions of time granularities
time granularities include very common ones like hours  days  weeks  months and years 
as well as the evolution and specialization of these granularities for specific contexts or
applications  trading days  banking days  and academic semesters are just few examples
of specialization of granularities that have become quite common when describing policies
and constraints 
    time granularities
a comprehensive formal study of time granularities and their relationships can be found
in  bettini et al          in this paper  we only introduce notions that are essential to
show our results  in particular  we report here the notion of labeled granularity which was
proposed for the specification of a calendar algebra  bettini et al         ning et al         
we will show later how any labeled granularity can be reduced to a more standard notion of
granularity  like the one used by bettini et al       a  
granularities are defined by grouping sets of instants into granules  for example  each
granule of the granularity day specifies the set of instants included in a particular day  a
label is used to refer to a particular granule  the whole set of time instants is called time
domain  and for the purpose of this paper the domain can be an arbitrary infinite set with
a total order relationship   

   

fimapping calendar expressions to minimal periodic sets

definition   a labeled granularity g is a pair  lg   m    where lg is a subset of the
integers  and m is a mapping from lg to the subsets of the time domain such that for each
pair of integers i and j in lg with i   j  if m  i      and m  j       then     each element
in m  i  is less than every element of m  j   and     for each integer k in lg with i   k   j 
m  k      
the former condition guarantees the monotonicity of the granularity  the latter is
used to introduce the bounds  see section      
we call lg the label set and for each i  lg we call g i  a granule  if g i      we call
it a non empty granule  when lg is exactly the integers  the granularity is called fullinteger labeled  when lg   z  we have the same notion of granularity as used in several
applications  e g    bettini et al       a   for example  following this labeling schema  if
we assume to map day    to the subset of the time domain corresponding to january   
      day     would be mapped to february          b day    to january          the
sixth business day   and month     to march       the generalization to arbitrary label
sets has been introduced mainly to facilitate conversion operations in the algebra  however
our final goal is the conversion of a labeled granularity denoted by a calendar expression
into a positive integer labeled one denoted by a periodic formula 
    granularity relationships
some interesting relationships between granularities follows  the definitions are extended
from the ones presented by bettini et al         to cover the notion of labeled granularity 
definition   if g and h are labeled granularities  then g is said to group into h  denoted
g   h  if for each non empty
granule h j   there exists a  possibly infinite  set s of labels
s
of g such that h j    is g i  
intuitively  g   h means that each granule of h is a union of some granules of g  for
example  day   week since a week is composed of   days and day   b day since each business
day is a day 
definition   if g and h are labeled granularities  then g is said to be finer than h 
denoted g  h  if for each granule g i   there exists a granule h j  such that g i   h j  
for example business day is finer than day  and also finer than week 
we also say that g partitions h if g   h and g  h  intuitively g partitions h if
g   h and there are no granules of g other than those included in granules of h  for
example  both day and b day group into b week  business week  i e   the business day in a
week   but day does not partition b week  while b day does 
definition   a labeled granularity g  is a label aligned subgranularity of a labeled granularity g  if the label set lg  of g  is a subset of the label set lg  of g  and for each i in
lg  such that g   i       we have g   i    g   i  
intuitively  g  has a subset of the granules of g  and those granules have the same label in
the two granularities 
   

fibettini  mascetti   wang

granularities are said to be bounded when lg has a first or last element or when g i    
for some i  lg   we assume the existence of an unbounded bottom granularity  denoted
by  which is full integer labeled and groups into every other granularity in the system 
there are time domains such that  given any set of granularities  it is always possible
to find a bottom one  for example  it can be easily proved that this property holds for each
time domain that has the same cardinality as the integers  on the other hand  the same
property does not hold for other time domains  e g  the reals   however  the assumption
about the existence of the bottom granularity is still reasonable since we address problems
in which granularities are defined starting from a bottom one  the definition of a calendar
as a set of granularities that have the same bottom granularity  bettini et al         captures
this idea 
    granularity conversions
when dealing with granularities  we often need to determine the granule  if any  of a
granularity h that covers a given granule z of another granularity g  for example  we
may wish to find the month  an interval of the absolute time  that includes a given week
 another interval of the absolute time  
this transformation is obtained with the up operation  formally  for each label z  lg  
h
 
 
dzeg is undefined if  z    lh s t  g z   h z       otherwise  dzeh
g   z   where z is the
 
 
unique index value such that g z   h z    the uniqueness of z is guaranteed by the
monotonicity   of granularities  as an example  dzemonth
second gives the month that includes
month
the second z  note that while dzesecond is always defined  dzemonth
week is undefined if week
z falls between two months  note that if g  h  then the function dzeh
g is defined for
week
each index value z  for example  since day  week  dzeday is always defined  i e   for
each day we can find the week that contains it  the notation dzeh is used when the source
granularity can be left implicit  e g   when we are dealing with a fixed set of granularities
having a distinguished bottom granularity  
another direction of the above transformation is the down operation  let g and h
h
be granularities such that
s g   h  and z an  integer  define bzcg as the set s of labels of
granules of g such that js g j    h z   this function is useful for finding  e g   all the
days in a month 
    the periodical granules representation
a central issue in temporal reasoning is the possibility of finitely representing infinite granularities  the definition of granularity provided above is general and expressive but it may
be impossible to provide a finite representation of some of the granularities  even labels
 i e   a subset of the integers  do not necessarily have a finite representation 
a solution has been first proposed by bettini et al          the idea is that most of the
commonly used granularities present a periodical behavior  it means that there is a certain
pattern that repeats periodically  this feature has been exploited to provide a method for
   condition     of definition   
   this definition is different from the one given by bettini et al        since it also considers non contiguous
granules of g 

   

fimapping calendar expressions to minimal periodic sets

finitely describing granularities  the formal definition is based on the periodically groups
into relationship 
definition   a labeled granularity g groups periodically into a labeled granularity h
 g   h  if g   h and there exist positive integers n and p such that
    for each label i of h  i   n is a label of h unless i   n is greater than the greatest
label of h  and
s
    for each label i of h  if h i    kr   g jr   and h i   n   is a non empty granule of
s
h then h i   n     kr   g jr   p    and
    if h s  is the first non empty granule in h  if exists   then h s   n   is non empty 
the groups periodically into relationship is a special case of the group into characterized
by a periodic repetition of the grouping pattern of granules of g into granules of h  its
definition may appear complicated but it is actually quite simple  since g groups into h 
any granule h i  is the union of some granules of g  for instance assume it is the union of
the granules g a     g a             g ak    condition     ensures that the label i   n exists  if
it not greater than the greatest label of h  while condition     ensures that  if h i   n   is
not empty  then it is the union of g a    p    g a    p            g ak   p    we assume that
r           k   jr   p    lg   if not  the conditions are considered not satisfied  condition
    simply says that there is at least one of these repetitions 
we call each pair p and n in definition    a period length and its associated period
label distance  we also indicate with r the number of granules of h corresponding to each
groups of p consecutive granules of   more formally r is equal to the number of labels of
h greater or equal than i and smaller than i   n where i is an arbitrary label of h  note
that r is not affected by the value of i 
the period length and the period label distance are not unique  more precisely  we
g the period label
indicate with phg the period length of h in terms of g and with nh
distance of h in terms of g  the form ph and nh is used when g     note that the
period length is an integer value  for simplicity we also indicate with one period of a
granularity h a set of r consecutive granules of h 
in general  the periodically groups into relationship guarantees that granularity h can
be finitely described  in terms of granules of g  
definition   if g   h  then h can be finitely described by providing   i  a value for p
p
and n    ii  the set lp of labels of h in
s one period of h   iii  for each a  l   the finite set
sa of labels of g  such that h a    isa g i    iv  the labels of first and last non empty
granules in h  if their values are not infinite 
in this representation  the granules that have labels in lp are the only ones that need
to be explicitly represented  we call these granules the explicit granules 
if a granularity h can be represented as a periodic set of granules of a granularity g 
g   for which the periodically groups
then there exists an infinite number of pairs  phg   nh
into relation is satisfied  if the relation is satisfied for a pair  p  n    then it can be proved
that it can also be satisfied for each pair  p  n   with   n   

   

fibettini  mascetti   wang

definition   a periodic representation of a granularity h in terms of g is called minimal
if the period length p used in the representation has the smallest value among the period
g   for which h periodically groups into g 
lengths appearing in all the pairs  phg   nh
if h is fully characterized in terms of g  it is possible to derive the composition  in
terms of g  of any granule of h  indeed  if lp is the set of labels of h with values in
g      and we assume h to be unbounded  the description of an arbitrary
 b          b   nh
g     
granule h j  can be obtained by the following formula  given j       j     mod nh
and
k
k
j
 j
b 
b 
g   j 
g   j   b


n
 nh
if

g
g
h

nh
nh
k 
k

j


b 

     n g   j   otherwise
g
nh

h

we have
h j   

 


g

phg

isk




k 
j 
g
  i  ph 
 

g
g
nh
nh


example   figure   shows granularities day and week parts i e   the granularity that 
for each week  contains a granule for the working days and a granule for the weekend  for
the sake of simplicity  we denote day and week parts with d and w respectively  since
d   w   w is fully characterized in terms of d  among different possible representations 
d      n d      lp          
in this example we decide to represent w in terms of d by pw
w
w
s                       and s              the composition of each granule of w can then
be easily computed  for example the composition of w     is given by the formula presented
above with j       and k      hence w       d                   d                   
d      d     
d
                                                                                     
j

b

k

 

 

 

j

w
 

 

 

 

 

figure    periodically groups into example

   calendar algebra
several high level symbolic formalisms have been proposed to represent granularities  leban
et al         niezette   stevenne        
in this work we consider the formalism proposed by ning et al         called calendar
algebra  in this approach a set of algebraic operations is defined  each operation generates
a new granularity by manipulating other granularities that have already been generated 
the relationships between the operands and the resulting granularities are thus encoded in
the operations  all granularities that are generated directly or indirectly from the bottom
granularity form a calendar  and these granularities are related to each other through the
   

fimapping calendar expressions to minimal periodic sets

operations that define them  in practice  the choices for the bottom granularity include day 
hour  second  microsecond and other granularities  depending on the accuracy required in
each application context 
in the following we illustrate the calendar algebra operations presented by ning et al 
       together with some restrictions introduced by bettini et al         
    the grouping oriented operations
the calendar algebra consists of the following two kinds of operations  the grouping oriented
operations and the granule oriented operations  the grouping oriented operations group
certain granules of a granularity together to form new granules in a new granularity 
      the grouping operation
let g be a full integer labeled granularity  and m a positive integer  the grouping operation
groupm  g  generates a new granularity g  by partitioning the granules of g into m granule
groups and making each group a granule of the resulting granularity  more precisely  g   
groupm  g  is the granularity such that for each integer i 
im
 

g   i   

g j  

j  i  m  

for example  given granularity day  granularity week can be generated by the calendar
algebra expression week   group   day  if we assume that day    corresponds to monday 
i e   the first day of a week 
      the altering tick operation
let g    g  be full integer labeled granularities  and l  k  m integers  where g  partitions
m  g   g   generates a new granularity
g    and    l  m  the altering tick operation alterl k
 
 
by periodically expanding or shrinking granules of g  in terms of granules of g    since g 
partitions g    each granule of g  consists of some contiguous granules of g    the granules
of g  can be partitioned into m granule groups such that g      to g   m  are in one group 
g   m      to g    m  are in the following group  and so on  the goal of the altering tick
operation is to modify the granules of g  so that the l th granule of every m granule group
will have  k  additional  or fewer when k      granules of g    for example  if g  represents
   day groups  i e   g    group    day   and we want to add a day to every   rd month
 i e   to make march to have    days   we may perform alter  
     day  g    
the altering tick operation can be formally described as follows  for each integer i such
i
that g   i       let bi and ti be the integers such that g   i    tj b
g   j   the integers bi
i
m
 
and ti exist because g  partitions g     then g   alterl k  g    g    is the granularity such
that for each integer i  let g   i     if g   i      and otherwise let
 

 

g  i   

ti
 
j b i

   

g   j  

fibettini  mascetti   wang

where
b i


 

bi    h      k  if i    h      m   l 
bi   h  k 
otherwise 
t i   ti   h  k 

and


il
    
h 
m


example   figure   shows an example of the alter operation  granularity g  is defined
by g    group   g    and granularity g  is defined by g    alter      g    g     which means
shrinking the second one of every two granules of g  by one granule of g   
g 
                                                                                  

g 
  

 

 

 

 

 

g
 

 

 

 

 

 

 

figure    altering tick operation example
the original definition of altering tick given by ning et al         as reported above 
has the following problems when an arbitrary negative value for k is used      it allows
the definition of a g  that is not a full integer labeled granularity and     it allows the
definition of a g  that does not even satisfy the definition of granularity  in order to avoid
this undesired behavior  we impose the following restriction 
k    mindist g      g      
where mindist   is formally defined by bettini et al         
intuitively  mindist g      g   represents the minimum distance  in terms of granules
of g   between two consecutive granules of g  
      the shift operation
let g be a full integer labeled granularity  and m an integer  the shifting operation
shiftm  g  generates a new granularity g  by shifting the labels of g by m positions  more
formally  g    shiftm  g  is the granularity such that for each integer i  g   i    g i  m  
note that g  is also full integer labeled 
      the combining operation
let g  and g  be granularities with label sets lg  and lg  respectively  the combining
operation combine g    g    generates a new granularity g  by combining all the granules
of g  that are included in one granule of g  into one granule of g    more formally  for each
i  l    let s i     if g   i      and otherwise let s i     j  lg     
  g   j   g   i   

   

fimapping calendar expressions to minimal periodic sets

then g    combine g    g    is the granularity
with the label set lg     i  lg   s i      
s
such that for each i in lg    g   i    js i  g   j  
as an example  given granularities b day and month  the granularity for business months
can be generated by b month   combine month  b day  
      the anchored grouping operation
let g  and g  be granularities with label sets lg  and lg  respectively  where g  is a
label aligned subgranularity of g    and g  is a full integer labeled granularity  the anchored
grouping operation anchored group g    g    generates a new granularity g  by combining
all the granules of g  that are between two granules of g  into one granule of g    more
formally  g    anchored group g    g    is the granularity with the label set lg    lg 
s    
g   j  where i  is the next label of g  after i 
such that for each i  lg    g   i    ij i
for example  each academic year at a certain university begins on the last monday in
august  and ends on the day before the beginning of the next academic year  then  the
granularity corresponding to the academic years can be generated by academicy ear  
anchored group day  lastmondayofaugust  
    the granule oriented operations
differently from the grouping oriented operations  the granule oriented operations do not
modify the granules of a granularity  but rather enable the selection of the granules that
should remain in the new granularity 
      the subset operation
let g be a granularity with label set lg   and m  n integers such that m  n  the subset
operation g    subsetnm  g  generates a new granularity g  by taking all the granules of
g whose labels are between m and n  more formally  g    subsetnm  g  is the granularity
with the label set lg     i  lg   m  i  n   and for each i  lg    g   i    g i  
for example  given granularity year  all the years in the   th century can be generated by
 
  centuryyear   subset    
      year   note that g is a label aligned subgranularity of g 
and g  is not a full integer labeled granularity even if g is  we also allow the extensions of
setting m    or n    with semantics properly extended 
      the selecting operations
the selecting operations are all binary operations  they generate new granularities by
selecting granules from the first operand in terms of their relationship with the granules of
the second operand  the result is always a label aligned subgranularity of the first operand
granularity 
there are three selecting operations  select down  select up and select by intersect  to
facilitate the description of these operations  the lk  s  notation is used  intuitively  if
s is a set of integers  lk  s  selects l elements starting from the k th one  for a formal
description of the  operator see  ning et al          
select down operation  for each granule g   i   there exits a set of granules of g  that
is contained in g   i   the operation select downlk  g    g     where k      and l     are
   

fibettini  mascetti   wang

integers  selects granules of g  by using lk    on each set of granules  actually their labels 
of g  that are contained in one granule of g    more formally  g    select downlk  g    g   
is the granularity with the label set
lg    ilg  lk   j  lg        g   j   g   i    
and for each i  lg    g   i    g   i   for example  thanksgiving days are the fourth
thursdays of all novembers  if thursday and november are given  it can be generated by
thanksgiving   select down    thursday  november  
select up operation  the select up operation select up g    g    generates a new granularity
g  by selecting the granules of g  that contain one or more granules of g    more formally 
g    select up g    g    is the granularity with the label set
  g   j   g   i     
lg     i  lg   j  lg     
and for each i  lg    g   i    g   i   for example  given granularities thanksgiving
and week  the weeks that contain thanksgiving days can be defined by thanxweek  
select up week  thanksgiving  
select by intersect operation  for each granule g   i   there may exist a set of granules of g   
each intersecting g   i   the select by intersectlk  g    g    operation  where k      and l    
are integers  selects granules of g  by applying lk    operator to all such sets  generating
a new granularity g    more formally  g    select by intersectlk  g    g    is the granularity
with the label set
lg    ilg  lk   j  lg    g   j   g   i        
and for each i  lg    g   i    g   i   for example  given granularities week and month  the
granularity consisting of the first week of each month  among all the weeks intersecting the
month  can be generated by firstweekofmonth   select by intersect    week  month  
      the set operations
in order to have the set operations as a part of the calendar algebra and to make certain
computations easier  we restrict the operand granularities participating in the set operations
so that the result of the operation is always a valid granularity  the set operations can be
defined on g  and g  only if there exists a granularity h such that g  and g  are both
label aligned subgranularities of h  in the following  we describe the union  intersection 
and difference operations of g  and g    assuming that they satisfy the requirement 
union  the union operation g   g  generates a new granularity g  by collecting all the
granules from both g  and g    more formally  g    g   g  is the granularity with the
label set lg    lg   lg    and for each i  lg   

g   i   i  l   
 
g  i   
g   i   i  l   l   
for example  given granularities sunday and saturday  the granularity of the weekend days
can be generated by weekendday   sunday  saturday 
   

fimapping calendar expressions to minimal periodic sets

intersection  the intersection operation g   g  generates a new granularity g  by taking
the common granules from both g  and g    more formally  g    g   g  is the granularity
with the label set lg    lg   lg    and for each i  lg    g   i    g   i   or equivalently
g   i   
difference  the difference operation g    g  generates a new granularity g  by excluding
the granules of g  from those of g    more formally  g    g    g  is the granularity with
the label set lg    lg    lg    and for each i  lg    g   i    g   i  

   from calendar algebra to periodical set
in this section we first describe the overall conversion process and then we report the
formulas specific for the conversion of each calendar algebra operation  finally  we present
a procedure for relabeling the resulting granularity  a sketch complexity analysis and some
considerations about the period length minimality 
    the conversion process
our final goal is to provide a correct and effective way to convert calendar expressions
into periodical representations  under appropriate limitations  for each calendar algebra
operation  if the periodical descriptions of the operand granularities are known  it is possible
to compute the periodical characterization of the resulting granularity 
this result allows us to calculate  for any calendar  the periodical description of each
granularity in terms of the bottom granularity  in fact  by definition  the bottom granularity is fully characterized  hence it is possible to compute the periodical representation of
all the granularities that are obtained from operations applied to the bottom granularity 
recursively  the periodical description of all the granularities can be obtained 
the calendar algebra presented in the previous section can represent all the granularities
that are periodical with finite exceptions  i e   any granularity g such that bottom groups
periodically with finite exceptions into g   since with the periodical representations defined
in section   it is not possible to express the finite exceptions  we need to restrict the calendar
algebra so that it cannot represent them  this implies allowing the subset operation to
be only used as the last step of deriving a granularity  note that in the calendar algebra
presented by ning et al         there was an extension to the altering tick operation to allow
the usage of  as the m parameter  i e   g    alter
l k  g    g      the resulting granularity
has a single exception hence is not periodic  this extension is disallowed here in order to
generate periodical granularities only  without finite exceptions  
the conversion process can be divided into three steps  in the first one the period length
and period label distance are computed  in the second we derive the set lp of labels in one
period  and in the last one the composition of the explicit granules is computed  for each
operation we identify the correct formulas and algorithms for the three steps 
the first step consists in computing the period length and the period label distance of
the resulting granularity  those values are calculated as a function of the parameters  e g 
the grouping factor m  in the group operation  and the operand granularities  actually
their period lengths and period label distances  

   

fibettini  mascetti   wang

the second step in the conversion process is the identification of the label set of the
resulting granularity  in section     we pointed out that in order to fully characterize a
granularity it is sufficient to identify the labels in any period of the granularity  in spite
of this theoretical result  to perform the computations required by each operation we need
the explicit granules of the operand granularities to be aligned  there are two possible
approaches  the first one consist in computing the explicit granules in any period and
then recalculate the needed granules in the correct position in order to eventually align
them  the second one consists in aligning all the periods containing the explicit granules
with a fixed granule in the bottom granularity  after considering both possibilities  for
performance reasons  we decided to adopt the second approach  we decided to use     as
the alignment point for all the granularities  a formal definition of the used formalism
follows 
let g be a granularity and i be the smallest positive integer such that dieg is defined 
we call lg   dieg and lg the set of labels of g contained in lg       lg  ng    note that this
definition of lg is an instance of the definition of lp given in section      the definition
of lg provided here is useful for representing g and actually the final goal of this step is to
compute lg   however lg is not suitable for performing the computations  the problem is
that if g lg   starts before      i e   min blg cg        then the granule g lg   ng   begins
at pg or before pg   and hence g lg   ng   is necessary for the computations  however
lg   ng 
  lg  
to solve the problem we introduce the symbol lg to represent the set of all labels of
granules of g that cover one in            pg    it is easily seen that if g lg   does not cover
     then lg   lg   otherwise lg   lg   lg   ng    therefore the conversion between
l and l and vice versa is immediate 
the notion of l is still not enough to perform the computations  the problem is that
when a granularity g is used as an operand in an operation  the period length of the
resulting granularity g  is generally bigger than the period length of g  therefore it is
necessary to extend the notion of lg to the period length pg  of g  using pg  in spite of
p  
pg in the definition of l  the symbol used for this notion is lgg  
p  
the idea is that when g is used as the operand in an operation that generates g    lgg is
computed from lg   this set is then used by the formula that we provide below to compute
lg   
the computation of lg  is performed as follows  if g  is defined by an operation that
   
returns a full integer labeled granularity  then it is sufficient to compute the value of lg
 
 
 
indeed it is easily seen that lg     i  z lg  i  lg   ng       if g is defined by
any other algebraic operation  we provide the formulas to compute lg    from lg  we easily
derive lg   
example   figure   shows granularities   g and h  it is clear that pg   ph     and
ng   nh      moreover  lg   lh     and therefore lg   lh           since   
  b cg
h
then lg   lg   on the other hand  since    b c   then lh   lh          
p 
suppose that a granularity g  has period length pg       then lgg                 and
p  
lhg                     

   

fimapping calendar expressions to minimal periodic sets

 

                                        

g
 

 

 

 

 

 

  

  

h
 

 

 

 

 

 

  

     

figure    l  l  l and lpg  examples
the third  and last  step of the conversion process is the computation of the composition of the explicit granules  once lg  has been computed  it is sufficient to apply  for each
label of lg  the formulas presented in chapter   
in sections     to      we show  for each calendar algebra operation  how to compute
the first and second conversion steps 
    computability issues
in some of the formulas presented below it is necessary to compute the set s of labels of a
granularity g such that i  s g i   h j  where h is a granularity and j is a specific label
of h  since lg contains an infinite number of labels  it is not possible to check  i  lg
if g i   h j   however it is easily seen that i  s k s t  g dkeg    h j   therefore
i  s k s t  g dkeg   is defined and k  bjch  
therefore we compute the set s by considering all the labels i of lg s t  n  bjch s t 
dneg   i and g i   h j   since the set bjch is finite    the computation can be performed
in a finite time  the consideration is analogous if s is the set such that i  s g i   h j 
or i  s  g i   h j       
    the group operation
proposition   if g    groupm  g   then 
pg m
   pg    gcd m n
and ng   
g 
j
k

lg  
 
 
 
   lg   
m

   i  lg  g   i   

ng
gcd m ng    

sim

j  i  m   g j  

example   figure   shows an example of the group operation  g    group   g   since
pg     and ng      then pg      and ng      moreover  since lg        then lg    
and therefore lg      and lg         finally g        g     g     g    i e  
g                      
   with the calendar algebra it is not possible to define granularities having granules that maps to an
infinite set of time instants 

   

fibettini  mascetti   wang

 

                                                                      

g
                                                                       

g
  

  

  

  

 

 

 

 

 

figure    group operation example
    the altering tick operation
proposition   if g    alterm
l k  g    g    then 
  


n

g 

pg   ng 
ng   m
  lcm ng    m 
 
gcd pg   ng    pg    gcd ng   m   k  

and


pg   

ng   k
ng   pg   ng 
 
ng   pg 
m






pg 
ng 

 

   lg    dlg  eg
g   
   i  lg  g   i   

st i

j b i

g j  where b i and t i are defined in section       

referring to step     note that when computing lg  the explicit characterization of the
 
granules of g  is still unknown  to perform the operation dlg  eg
g  we need to know at least
the explicit granules of one of its periods  we choose to compute the granules labeled by
        ng    when lg  is derived  the granules labeled by lg        lg    ng     will be computed
so that the explicit granules are aligned to     as required 
example   figure   shows an example of the altering tick operation  g    alter      g    g    
since pg       ng       pg      and ng       then ng      and pg       
g     
moreover  since lg             then lg       and therefore lg    d  eg
 
and hence lg                          finally g        g        g        g       
                         analogously we derive g       g       g       g     
and g      

    the shift operation
proposition   if g    shiftm  g   then 
   pg    pg  and ng    ng   
   lg    lg   m 
   i  lg  g   i    g i  m  
   

fimapping calendar expressions to minimal periodic sets

 

                                                                                                                            

g 
  

  

  

  

  

 

 

 

 

 

 

g 
       

  

  

  

  

  

  

  

  

  

 

 

 

 

 

 

 

 

 

 

  

g
  

  

  

  

 

 

 

 

 

figure    alter operation example
example   the shifting operation can easily model time differences  suppose granularity
useast hour stands for the hours of us eastern time  since the hours of the us pacific
time are   hours later than those of us eastern time  the hours of us pacific time can
be generated by uspacific hour  shift   useast hour  
useast hour
                                   

uspacific hour
                                      

figure    shift operation example

    the combining operation
proposition   given g    combining g    g     then 
   pg    lcm pg    pg    and ng   
p

 

p

lcm pg   pg   ng 
 
pg 
p

 

 

   i  lgg  let be se i     j  lgg     
  g   j   g   i    then lg     i  lgg   e
s i       
s
   i  lg  g   i    js i  g   j  
example   figure   shows an example of the combining operation  g    combine g    g    
since pg       ng       pg      and ng       then pg       and ng       moreover 
p  
since lg        and    b cg    then lg           and hence lgg               since
 
s i      for i             then lg               moreover  since    b cg   then lg           
finally s             and s              consequently  g        g       g      i e  
g                      and g        g       g      i e   g                      

    the anchored grouping operation
proposition   given g    anchored group g    g     then 
   pg    lcm pg    pg    and ng   

lcm pg   pg   ng 
 
pg 

   

fibettini  mascetti   wang

 

                                                                      

g 
 

 

 

 

g 
  

  

  

 

 

 

 

 

 

 

 

 

 

g
 

 

 

 

figure    combine operation example
  
 
lg   

p

 

lgg   
if lg    lg   
pg 
 
 lg     lg    otherwise 

 
where lg
is the greatest among the labels of lg  that are smaller than lg   
 

   i  lg  g   i   

si   
j i

g   j  where i  is the next label of g  after i 

example   figure   shows an example of the anchored grouping operation  the usweek
 i e   a week starting with a sunday  is defined by the operation anchored group day 
sunday   since pday     and psunday      then the period length of usweek is    morepusweek
over since lday       lsunday      and lsunday
        then lusweek             
s
clearly  since    b cusweek then lusweek        finally  usweek        
j   day j   
s 
k    k  

 

                                                                                   

day
                                                                                  

sunday
  

 

 

  

  

usweek
  

 

 

  

figure    anchored grouping operation example

    the subset operation
the subset operation only modifies the operand granularity by introducing the bounds 
the period length  the period label distance  l and the composition of the explicit granules
are not affected 

   

fimapping calendar expressions to minimal periodic sets

    the selecting operations
      the select down operation
proposition   given g    select downlk  g    g     then 
   pg    lcm pg    pg    and ng   
   i  lg  let

lcm pg   pg   ng 
 
pg 

  g   j   g   i     
a i    lk   j  lg     

then

o
  n
p  
a  a i  a  lgg   

lg   

p  

ilgg
 

   i  lg  g   i    g   i  
example   figure   shows an example of the select down operation in which granularity
g  is defined as  g    select down    g    g     since pg       ng      and pg     
then pg       and ng       moreover  since lg        and    b cg    then lg   
p  
       and lgg               intuitively  a           a          and
 
a           hence lg              and therefore  since    b cg   lg           
finally g        g                 and g        g            
 

                                                                                              

g 
  

  

  

  

  

  

  

  

  

 

 

 

 

 

 

 

 

g 
  

  

  

  

 

 

g
  

  

  

 

 

figure    select down operation example

      the select up operation
proposition   given g    select up g    g     then 
   pg    lcm pg    pg    and ng   

lcm pg   pg   ng 
 
pg 

  
p

 

lg     i  lgg   j  lg  s t    
  g   j   g   i   
   i  lg  g   i    g   i  

   

 

fibettini  mascetti   wang

example    figure    shows an example of the select up operation  g    select up g    g    
since pg       ng      and pg      then pg       and ng       moreover  since lg   
p 

          and    b cg    then lg                 and lgg                          
since g       g       g       g      and g       g      then lg             
 
and  since    b cg   then lg           finally g        g                 and
g        g            
 

                                                                   

g 
     

  

     

  

     

 

   

 

   

g 
   

  

  

  

  

 

 

g
  

  

  

 

 

figure     select up operation example

      the select by intersect operation
proposition   given g    select by intersectlk  g    g     then 
   pg    lcm pg    pg    and ng   

lcm pg   pg   ng 
 
pg 

   then i  lg  let
a i    lk   j  lg   g   j   g   i         
then
lg   

o
  n
p  
a  a i  a  lgg   
p  

ilgg
 

   i  lg  g   i    g   i  
example    figure    shows an example of the select by intersect operation in which
g    select by intersect    g    g     since pg       ng      and pg      then pg      
and ng       moreover  since lg        and    b cg    then lg           and
p  
lgg               intuitively  a           a          and a           hence
 
lg           and therefore  since   
  b cg   then lg            finally g       
g            and g        g             

   

fimapping calendar expressions to minimal periodic sets

 

                                                                                              

g 
  

  

  

  

  

  

  

  

  

 

 

 

 

 

 

 

 

g 
  

  

  

  

 

 

g
  

  

  

 

 

 

figure     select by intersect operation example
     the set operations
since a set operation is valid if the granularities used as argument are both labeled aligned
granularity of another granularity  the following property is used 
proposition   if g is a labeled aligned subgranularity of h  then

ng
pg

 

nh
ph  

proposition    given g    g   g    g     g   g  and g      g    g    then 
   pg    pg     pg      lcm pg    pg    and
lcm pg   pg   ng 
 
ng    ng     ng     
pg
 

p

 

p

 

p

  

p

lcm pg   pg   ng 
 
pg 

  

p

   

p

   

   lg    lgg   lgg    lg     lgg   lgg    lg      lgg    lgg   

g   i   i  lg 
 
   i  lg  g  i   
g   i   otherwise 
i  lg   g    i    g   i  and i  lg    g     i    g   i 
example    figure    shows an example of the set operations  note that both g  and
g  are labeled aligned subgranularities of h  then g    g   g    g     g   g  and
g      g    g    since pg    pg      and ng    ng      then pg    pg     pg       
and ng    ng     ng         moreover  since lg           and lg            then
lg               lg         and lg           finally g        g       g        g      and
g        g       g         g      and g          g      

     relabeling
granularity processing algorithms are much simpler if restricted to operate on full integer
labeled granularities  moreover  a further simplification is obtained by using only the positive integers as the set of labels  i e   l   z    
in this section we show how to relabel a granularity g to obtain a full integer labeled
granularity g    a granularity g   such that lg     z  can be obtained by using g    
 
subset
   g  
note that with the relabeling process some information is lost  for example  if g is
a labeled aligned subgranularity of h and g    h  then  after the relabeling  g is not a
   

fibettini  mascetti   wang

 

                                                                                              

h
  

  

  

  

  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

  

g 
  

g 
  

  

 

  

 

 

 

 

 

 

 

 

 

 

 

 

 

g
  

  

 

 

 

  

g
  

 

 

 

g
  

 

 

 

  

figure     set operations example
labeled aligned subgranularity of h  the lost information is semantically meaningful in the
calendar algebra  and therefore the relabeling must be performed only when the granularity
will not be used as an operator in an algebraic operation 
let g be a labeled granularity  i and j integers with i  lg s t  g i       the
relabeling operation relabelji  g  generates a full integer labeled granularity g  by relabeling
g i  as g   j  and relabel the next  and previous  granule of g by the next  and previous 
respectively  integer  more formally  for each integer k  if k   j  then let g   k    g i  
and otherwise let g   k    g i    where g i    is the  j  k  th granule of g after  before 
respectively  g i   if the required  j  k  th granule of g does not exist  then let g   k     
note the g  is always a full integer labeled granularity 
the relabeling procedure can be implemented in the periodic representation we adopted
by computing the value of lg    it is easily seen that once lg  is known  the full characterization of g  can be obtained with  pg    pg   ng    rg    rg and lg   
 lg    lg               lg    ng      lg    ng       it is clear that the explicit representation of
the granules is not modified 
j
k
ilg
 
 
to compute lg consider the label i   i  ng  ng   i  represents the label of lg such
that i  i  is a multiple of ng   jtherefore
it is clear that the label j    lg  s t  g   j       g i   
k
g
can be computed by j     j  il
 ng    finally lg  is obtained with lg    j       where
ng
 is the distance  in terms of number of granules of g  from g lg   to g i    
 
example    figure    shows an example of the relabel operation  g    relabel
     g  
   
 
since pg    and r
i      
     
 
 g     then pg      and ng         moreover 
    is the next granule of g
and j           

 
 
  
since
l
 
 
and
i
 
 
then
g i
g
 
after g lg    then      and hence lg              it follows that lg           
finally g        g    and g        g    

the gstp constraint solver imposes that the first non empty granule of any granularity
  included  is labeled with    therefore  when using the relabeling operation for producing
   

fimapping calendar expressions to minimal periodic sets

figure     relabeling example
granularities for gstp  the parameter j must be set to    the parameter i has to be equal
to the smallest label among those that identify granules of g covering granules of  that
are all labeled with positive values  by definition of lg   i   lg if min blg cg        otherwise
i is the next label of g after lg  
     complexity issues
for each operation the time necessary to perform the three conversion steps  depends on
the operation parameters  e g  the grouping factor m  in the group operation  and on
the operand granularities  in particular the period length  the period label distance and the
number of granules in one period  
a central issue is that if an operand granularity is not the bottom granularity  then its
period is a function of the periods of the granularities that are the operands in the operation
that defines it  for most of the algebraic operations  in the worst case the period of the
resulting granularity is the product of the periods of the operands granularity 
for all operations  the first step in the conversion process can be performed in a
constant or logarithmic time  indeed the formulas necessary to derive the period length and
the period label distance involve  i  standard arithmetic operations   ii  the computation of
the greatest common divisor and  iii  the computation of the least common multiple  part
 i  can be computed in a constant time while  ii  and  iii  can be computed in a logarithmic
time using euclids algorithm 
for some operations  the second step can be performed in constant time  e g  group 
shift or anchored group  or in linear time  e g  set operations   for the other operations it
is necessary to compute the set s of labels of a granularity g such that i  s g i   h j 
where h is a granularity and j  lh  analogously if s is the set such that i  s g i  
h j  or i  s  g i   h j         this computation needs to be performed once for each
p  
granule i  phg   the idea of the algorithm for solving the problem has been presented
in section      several optimizations can be applied to that algorithm  but in the worst
case  when h covers the entire time domain  it is necessary to perform a number of deg
operations linear in the period length of the resulting granularity  if an optimized data
structure is used to represent the granularities  the deg operation can be performed in
constant time     then the time necessary to perform the second step is linear in the period
length of the resulting granularity  o pg     
the last step in the conversion process is performed in linear time with respect to the
number of granules in a period of g   
   if a non optimized data structure is used  deg requires logarithmic time 

   

fibettini  mascetti   wang

the complexity analysis of the conversion of a general algebraic expression needs to
consider the composition of the operations and hence their complexity  finally  relabeling 
can be done in linear time 
a more detailed complexity analysis is out of the scope of this work 

   minimal representation and experimental results
in this section we address the problem of guaranteeing that the converted representation
is minimal in terms of the period length  as we will show in example    the conversion
formulas proposed in this paper do not guarantee a minimal representation of the result and
it is not clear if conversion formulas ensuring minimality exist  our approach is to apply a
minimization step in the conversion 
the practical applicability of the minimization step depends on the period length of the
representation that is to be minimized  indeed  in our tests we noted that the minimization
step is efficient if the conversion formulas proposed in section   are adopted  while it is
impractical when the conversion procedure returns a period that is orders of magnitude
higher than the minimal one as would be the case if conversion formulas were constructed
in a naive way 
    period length minimization
as stated in section    each granularity can have different periodical representations and 
for a given granularity  it is possible to identify a set of representations that are minimal
i e  adopting the smallest period length 
unfortunately  the conversions do not always return a minimal representation  as shown
by example    
example    consider a calendar that has day as the bottom granularity  we can define
week as week   group   day   by applying the formulas for the group operation we obtain
pweek     and nweek     
we can now apply the altering tick operation to add one day to every first week every
two weeks  let this granularity be g    alter      day  week   applying the formulas for the
altering tick operation we obtain pg       and ng      
we can again apply the altering tick operation to create a granularity g  by removing
one day from every first granule of g  every two granules of g    g    alter      day  g    
intuitively  by applying this operation we should get back to the granularity week  however
using the formulas for the altering tick operation we obtain pg       and ng       hence
g  is not minimal 
in order to qualitatively evaluate how close to the minimal representations the results
of our conversions are  we performed a set of tests using an algorithm  bettini   mascetti 
      for minimality checking  in our experimental results the conversions of algebraic
expressions defining granularities in real world calendars  including many user defined nonstandard ones  always returned exactly minimal representations  non minimal ones could
only be obtained by artificial examples like the one presented in example    
although a non minimal result is unlikely in practical calendars  the minimality of the
granularity representation is known to greatly affect the performance of the algorithms for
   

fimapping calendar expressions to minimal periodic sets

granularity processing  e g   granularity constraint processing  bettini et al       a   calendar calculations  urgun et al          workflow temporal support  combi   pozzi        
hence  we considered an extension of the conversion algorithm by adding a minimization
step exploiting the technique illustrated by bettini et al         to derive a minimal representation 
the choice of using only the conversion algorithm or the extended one with minimizations  should probably be driven by performance considerations  in section     we report
the results of our experiments showing that generally it is advantageous to apply the minimization step  in our implementation  presented in section      it is possible to specify if
the minimization step should be performed 
    implementation of the calendarconverter web service
the conversion formulas presented in section   have been implemented into the calendarconverter web service that converts calendar algebra representations into the equivalent
periodical ones  more precisely  given a calendar in which granularities are expressed by calendar algebra operations  the service converts each operation into an equivalent periodical
representation 
the service first rewrites each calendar algebra expression in order to express it only
in terms of the bottom granularity  for example  if the bottom granularity is hour  the
expression monday   select down    day  week  is changed to
monday   select down    group    hour   group   group    hour   
then  procedure   is run for each granularitys expression  the idea is that the periodical
representation of each subexpression is recursively computed starting from the expressions
having the bottom granularity as operand  once each operand of a given operation has been
converted to periodical representation  the corresponding formula presented in section   is
applied  we call this step the convertoperation procedure 
a trivial optimization of procedure   consists in caching the results of the conversions
of each subexpression so that it is computed only once  even if the subexpression appears
several times  like group    hour  in the above monday definition  
    experimental results
our experiments address two main issues  first  we evaluate how the conversion formulas
impact on the practical applicability of the conversion procedure and  second  we evaluate
how useful is the minimization step 
for the first issue  we execute the conversion procedure with two different sets of conversion formulas and compare the results  the first set is laid out in section    the other 
that is less optimized  is taken from the preliminary version of this paper  bettini et al  
      
table   shows that when converting calendars having granularities with small minimal
period length  first two rows   using the formulas in section   improves the performance
by one order of magnitude  however  conversions and minimizations are almost instantaneous with both approaches  on the contrary  when the minimal period length is higher 
   

fibettini  mascetti   wang

procedure   convertexpression
 input  a calendar algebra expression ex  a boolean value minimize that is set to
true if the minimization step is to be executed 
 output  the periodical representation of ex 
 method 
  
  
  
  
  
  
  
  
  
   
   
   

if  ex is the bottom granularity  then
return the periodical representation of the bottom granularity
end if
operands    
for  each operand op of ex  do
add convertexpression op  minimize  to operands 
end for
result   convertoperation ex getoperator    operands 
if  minimize  then
minimize the periodical representation of result
end if
return result 

table    impact of the conversion formulas on the performance of the conversion and minimization procedures  time in milliseconds  

calendar
period
bot
  year
day
  years
day
  year
hour
  years
hour
    years day

section   formulas
conv  min  tot 
 
 
 
 
 
 
 
 
  
  
 
  
   
     

less optimized formulas
conv 
min 
tot 
  
  
  
  
  
   
     
       
       
     
       
       
                         

 last three rows  the time required to minimize the periodical representation is up to five
orders of magnitude larger if the formulas proposed by bettini et al         are used  as
a consequence  the entire conversion may require several minutes while  using the formulas
presented in section    it still requires only a fraction of a second  if the period length is
even larger  the conversion procedure is impractical if the formulas presented by bettini et
al         are used  and indeed in our experiments we did not obtain a result in less than
thirteen hours 
for the second issue  we perform a set of three experiments  in the first one we compare
the performance of the conversion procedure with the performance of the minimization step 

   

fimapping calendar expressions to minimal periodic sets

in the experiment we consider the case in which the conversion procedure produces minimal
representations  in this case the minimization step is always an overhead since it cannot
improve the performance of the conversion procedure 
figure    shows the result of the experiment  four calendars are considered  each one
containing a set of granularities of the gregorian calendar  the four calendars differs in the
values of two parameters  the bottom granularity  it is second for cal   and cal   while it
is minute for cal   and cal    and the period in which leap years and leap years exceptions
are represented  it is           and     years for cal    cal    cal   and cal   respectively  
as a consequence  the minimal period length of the granularities month and year is about
       for cal           for cal        for cal   and        for cal   

figure     impact of minimization over conversion  minimal conversions case 
as can be observed in figure     the ratio between the time required to perform the
conversions and the time required for the minimization step varies significantly from a
minimum of    for cal   to a maximum of     for cal    the reason is that the complexity
of the conversion procedure is mainly affected by the period length of the granularity having
the largest period length  on the other hand  the complexity of the minimization step is
affected also by other features of the granularities such as their internal structure and the
number of integers that can divide at the same time the period label distance  the period
length and the number of granules in one period  for more details see  bettini   mascetti 
      
in the second experiment we consider the case in which the conversion procedure produces a non minimal representation for a granularity in the input calendar  in this case it is
possible to benefit from the minimization step  for example  suppose that a granularity g
is converted and that it is then used as an argument of another calendar algebra operation
that defines a granularity h  the time required to compute the periodical representation
of h strongly depends on the period length of g  if the period length of g is reduced by
the execution of the minimization step  the conversion of h can be executed faster 
we produced this situation using a technique similar to the one of example     we
created calendar algebra definitions of the gregorian calendar in which the granularity
day is converted into a granularity having a non minimal representation  figure    shows
the performance obtained converting the same granularities that were used in figure    
   

fibettini  mascetti   wang

the difference was that in this case the definition of the granularity day is such that  after
the conversion procedure  its period is twice as large as the minimal one  i e      hours or
     minutes or        seconds depending on the bottom granularity that is used   it can
be easily seen that in this case the use of the minimization step can improve the performance
of the entire algorithm  indeed  when the minimization step is performed  the conversion
procedure requires about one half of the time that is required when no minimization is
performed 

figure     impact of minimization over conversion  non minimal case 
in the third experiment we evaluate the impact of the minimal representation on the
performance of applications involving intensive manipulations of granularities  in the test we
use the gstp solver as such an application  it computes solutions of temporal constraints
with granularities  a description of the architecture of the gstp system is provided in
section     
figure    shows our experiments performed on four temporal constraint networks with
granularities  the four networks differs in the number of variables  in the number of constraints and in the granularities used to express the constraints  the networks labeled as
non minimal use granularities definitions that are obtained with a technique similar to
the one used in example     and have a period that is twice as large as the minimal one 
figure    shows that the use of minimal representations greatly improves the performance of the gstp solver  indeed in our experiments the ratio between the time required
to solve the network using a non minimal representation and a minimal one is between
three and five  moreover  the more time required to solve the network  the greater the
improvement obtained using the minimal representation  this means that for very complex
temporal networks we expect the improvement to be even higher 
considering the results of our experiments  we conclude that  in general  it is advisable
to perform the minimization step  in particular  it is very advantageous in the specific case
of gstp  based on the following considerations  i  the time required to perform the minimization step is only a fraction of the time required to perform the conversion procedure  ii 
the conversions are performed off line in most cases  with respect to granularity processing 
and conversion results are cached for future use  and iii  the period length strongly influ 

   

fimapping calendar expressions to minimal periodic sets

figure     impact of minimal representations on the performance of the gstp solver 
ences the gstp processing time that is in most cases much longer than the time needed
for conversion 

   applications
in this section we complement the motivations for this work with a sketch of the applications
enabled by the proposed conversion  firstly we describe the gstp system  as an example
of applications involving intensive manipulation of time granularities  gstp is used to
check the consistency and to find solutions of temporal constraint satisfaction problems
with granularities    it has also been applied to check the consistency of inter organizational
workflow models  bettini  wang    jajodia      b   then  we discuss the use of calendar
algebra to define new granularities that may later be part of the input of reasoning services 
such as gstp 
    the gstp system
the gstp system has been developed at the university of milan with the objective of
providing universal access to the implementation of a set of algorithms for multi granularity
temporal constraint satisfaction  bettini et al       a   it allows the user to specify binary
constraints of the form y  x   m  n g where m and n are the minimum and maximum
values of the distance from y to x in terms of granularity g  variables take values in the
positive integers  and unary constraints can be applied on their domains  for example  the
constraint  event  should occur   to   business days after the occurrence of event  can be
modeled by occe   occe         bday  this problem is considered an extension of stp
 dechter  meiri    pearl        to multiple and arbitrary granularities  to our knowledge 
gstp is the only available system to solve this class of temporal constraint satisfaction
problems 
figure    shows the general architecture of the gstp system  there are three main
modules  the constraint solver  the web service  which enables external access to the solver 
   for a detailed description of the system  see  bettini et al         

   

fibettini  mascetti   wang

and a user interface that can be used locally or remotely to design and analyze constraint
networks 

figure     the gstp architecture
the constraint solver is the c implementation of the acg algorithm which has been
proposed by bettini et al       a   and it runs on a server machine  following the approach of bettini et al       a   the solver uses the representation of granularities based on
periodical sets  this representation makes it possible to efficiently compute the core operations on granularities that are required to solve the constraint satisfaction problem  these
operations involve  for example  the union and the intersection of periodical sets  while
we cannot exclude that these operations may be computed in terms of alternative low level
representations  it seems much harder to obtain similar results if a high level representation 
such as calendar algebra  is used 
the second module of the system is the web service that defines  through a wsdl
specification  the parameters that can be passed to the constraint solver  including the
xml schema for the constraint network specification 
the third module is a remote java based user interface  which allows the user to easily
edit constraint networks  to submit them to the constraint solver  and to analyze results  in
particular  it is possible to have views in terms of specific granularities  to visualize implicit
constraints  to browse descriptions of domains  and to obtain a network solution  fig    
shows a screenshot from the interface 
    defining new granularities
while the gstp solver can handle arbitrary granularities  new granularities must be added
by editing their explicit periodical representation  this is true in general for any multi   

fimapping calendar expressions to minimal periodic sets

figure     the gstp user interface
granularity reasoning service based on a low level representation of granularities  and it is
a painful task when the granularities have a large period  for example  in the experimental
results illustrated in figure     we used a representation of the granularity month that
considers leap years and leap years exceptions in a period of     years  in this case  the
users have to specify the representation of      granules i e   the number of months in    
years 
because the period length of real world granularities is generally high  a graphical interface does not help if it only supports the user to individually select the explicit granules  an
effective solution requires the use of implicit or explicit operations on granules  among the
various proposals  calendar algebra provides the richest set of such operators  a question
arises  is the definition of granularities in terms of calendar algebra really simpler than the
specification of the periodical representation  calendar algebra does not seem to be user
friendly  the exact semantics of each operator may not be immediate for an inexperienced
user and some time is required in order to learn how to use each operator 
in practice  we do not think that it is reasonable to ask an unexperienced user to
define granularities by writing calendar algebra expressions  nevertheless  we do think
that calendar algebra can be used by specialized user interfaces to guide the user when
specifying granularities  in this sense  we believe that calendar algebra plays the same
role that sql does in the definition of databases queries  similarly to calendar algebra 
sql is an abstraction tool that can be directly exploited in all its expressive power by an
advanced user  but can also be used by a less experienced user through a graphical user
interface  possibly with a reduced expressiveness 
as mentioned above  in the case of periodical representations  graphical user interfaces
are not sufficient for making the specification of new granularities practical  on the contrary  in the case of calendar algebra  user interfaces can strongly enhance the usability
of calendar algebra  making its practical use possible also for the definition of involved
granularities  there are at least two reasons for this difference  firstly  the main difficulty
of calendar algebra is the understanding of the semantics of the operators and the choice
of the most appropriate one for a given task  an effective user interface can hide the existence of the algebraic operators to the user showing only how the operators modify existing

   

fibettini  mascetti   wang

 a  step   

 b  step   

 c  step   

figure     a   steps wizard for visually defining a granularity using calendar algebra
granularities  i e   the semantics of the operators   secondarily  calendar algebra allows
the compact definition of granularities  this is due to the fact that the calendar algebra
operations are specifically designed to reflect the intuitive ways in which users define new
granularities 
example    shows how a graphical user interface can be effectively used to define a new
granularity in terms of calendar algebra expression 
example    this example shows how a graphical user interface can be used to support the
user in the definition of the granularity final as the set of days  each one corresponding to
   

fimapping calendar expressions to minimal periodic sets

the last monday of every academic semester  we assume that the granularities monday and
academicsemester have already been defined  the graphical user interface that we use in
this example is a wizard that guides the user step by step  in the first step  figure    a   the
user chooses the kind of operation he wants to perform  in the second step  figure    b  
the user can provide more details about how he wants to modify the operand granularity
 monday  in the example   the results of this choice is a calendar algebra expression that
is shown in the third step  figure    c    in this last window the user can also give a name
to the granularity that has been defined 
    the global architecture

figure     integration of gstp and calendarconverter web services
figure    shows a possible architecture for the integration of gstp  the interface for
new granularity definitions and the calendarconverter web service  a granularity repository
collects the calendar algebra definitions  upon request by the gstp system definitions are
converted in low level representation by the calendarconverter web service to be efficiently
processed  clearly  caching techniques can be used to optimize the process 

   related work
several formalisms have been proposed for symbolic representation of granularities and
periodicity  periodicity and its application in the ai and db area have been extensively
investigated  tuzhilin   clifford        morris  shoaff    khatib        kabanza  stevenne 
  wolper        ladkin         regarding symbolic representation  it is well known the
formalism proposed by leban et al          that is based on the notion of collection  and
it is intended to represent temporal expressions occurring in natural language  a collection
is a structured set of time intervals where the order of the collection gives a measure of
the structure depth  an order   collection is an ordered list of intervals  and an order n
 n      collection is an ordered list of collections having order n     two operators 
   

fibettini  mascetti   wang

called slicing and dicing are used to operate on collections by selecting specific intervals
or sub collections  and by further dividing an interval into a collection  respectively  for
example  weeks during january     divides the interval corresponding to january    
into the intervals corresponding to the weeks that are fully contained in that month  this
formalism has been adopted with some extensions by many researchers in the ai  koomen 
      cukierman   delgrande        and database area  chandra  segev    stonebraker 
      terenziani         in particular  the control statements if then else and while
have been introduced by chandra et al         to facilitate the representation of certain
sets of intervals  for example  it is possible to specify  the fourth saturday of april if not
an holiday  and the previous business day otherwise 
as for the deductive database community  a second influential proposal is the slice
formalism introduced by niezette et al          a slice denotes a  finite or infinite  set of not
necessarily consecutive time intervals  for example  the slice all years         months
      days     days denotes a set of intervals corresponding to the first   days of february
and april of each year 
a totally different approach is the calendar algebra described by ning et al          and
considered in this paper  the representation is based on a rich set of algebraic operators
on periodic sets as opposed to slicing and dicing over nonconvex intervals 
none of the above cited papers provide a mapping to identify how each operator changes
the mathematical characterization of the periodicity of the argument expressions  the
problem of finding these mappings is not trivial for some operators 
in  bettini   sibi        the expressive power of the algebras proposed by leban et
al         and niezette et al         is compared and an extension to the first is proposed
in order to capture a larger set of granularities  since the periodical representation is
used to compare expressiveness  a mapping from calendar expressions in those formalisms
to periodical representations can be found in the proofs of that paper  however  since
minimality is not an issue for the purpose of comparing expressiveness  in many cases the
mapping returns non minimal representations 
regarding alternative approaches for low level representation  we already mentioned
that the ones based on strings  wijsen        and automata  dal lago  montanari   
puppis        bresolin et al         may be considered as an alternative for the target of
our conversion  as a matter of fact  an example of the conversion of a calendar algebra
expression into a string based representation can be found in  dal lago   montanari 
       a complete conversion procedure appeared during the revision process of this paper
in the phd dissertation by puppis         the aim of the conversion is to prove that the
granspecs formalism  used to represent granularities in terms of automata  has at least the
same expressiveness as the calendar algebra  hence  obtaining minimal representations was
not the goal  moreover  in their case minimization is not in terms of the period length  but in
terms of the automaton size and automaton complexity  about the complexity of reasoning 
given an automaton m   the worst case time complexity of the operations analogous to our up
and down depends linearly on   m     a value computed from m itself and called complexity
of m   in this sense   m    has the same role of our period length  p    even if a precise
relationship between the two values is hard to obtain  in our approach we compute up in
logarithmic time with respect to p and down in linear time with respect to the dimension
of the result  that is bounded by p    other operations  like checking for equivalence  seem
   

fimapping calendar expressions to minimal periodic sets

to be more complex using automata  bresolin et al          techniques for minimization
in terms of automaton complexity are presented by dal lago et al          and the time
complexity is proved to be polynomial  even if the exact bound is not explicitly given  in
 
our approach  the worst case time complexity for the minimization is o p      bettini  
mascetti         overall  the automata approach is very elegant and well founded  but 
on one side it still misses an implementation in order to have some experimental data to
compare with  and on the other side only basic operations have been currently defined 
it would be interesting to investigate the definition on that formalism of more complex
operations like the ones required by gstp 

   conclusion and future work
we have presented an hybrid algorithm that interleaves the conversion of calendar algebra
subexpressions into periodical sets with the minimization of the period length  we have
proved that the algorithm returns set based granularity representations having minimal
period length  which is extremely important for the efficiency of operations on granularities  based on the technical contribution of this paper  a software system is being developed
allowing users to access multi granularity reasoning services by defining arbitrary time granularities with a high level formalism  our current efforts are mainly devoted to completing
and refining the development of the different modules of the architecture shown in section     
as a future work  we intend to develop effective graphical user interfaces to support the
definition of calendar algebra expressions in a user friendly way  example    described one
of the possible interfaces  another open issue is how to convert a periodical representation
of a granularity into a user friendly calendar algebra expression  this conversion could
be useful  for example  to present the result of a computation performed using the periodical
representation  however  a naive conversion may not be effective since the resulting calendar
algebra expression could be as involved as the periodical representation from which it is
derived  for example  a conversion procedure is presented by bettini et al         to prove
that the calendar algebra is at least as expressive as the periodical representation  however 
the resulting calendar algebra expression is composed by a number of calendar algebra
operations that is linear in the number of granules that are in one period of the original
granularity  on the contrary  an effective conversion should generate calendar algebra
expressions that are compact and easily readable by the user  this problem is somehow
related to the discovery of calendar based association rules  li  ning  wang    jajodia 
       finally  we intend to investigate the usage of the automaton based representation
as a low level granularity formalism  it would be interesting to know whether  using this
representation  it is possible to compute the same operations that can be computed with
the periodical representation and if any performance gain could be achieved 

acknowledgments
we thank the anonymous referees for their useful comments and suggestions  the work of
bettini and mascetti was partially supported by italian miur interlink project n ii  c ec d 
the work of wang was partially supported by the us nsf grant iis         

   

fibettini  mascetti   wang

appendix a  proofs
a   transitivity of the periodically groups into relationship
in order to prove the correctness of the conversions of algebraic expressions into periodical
sets  it is useful to have a formal result about the transitivity of the periodically groups into
relation  in addition to transitivity of     theorem   also says something about period
length values 
theorem   let g and h be two unbounded granularities such that g is periodic in terms
of the bottom granularity  i e      g  and h is periodic in terms of g  i e   g   h   let
g be the period length and the period label distance of h in terms of granules of
phg and nh
g  and ng the period label distance of g in terms of   then  if phg   ng for some
positive integer   then h is periodic in terms of the bottom granularity  i e      h  and
ph   pg  
g

proof  since
sni by hypothesis g   h and ph   ng   i if h i   
g
nh     r   g ir   ng    this can be also written as follows 
if

sni

r   g ir   

then h i  

h i    g i          g ini  

   

g
h i   nh
    g i    ng         g ini   ng  

   

then   ns t  

since    g  if


g ij    

ij
 

 ij k  

   

 ij k   pg  

   

k  

then


g ij   ng    

ij
 

k  

this can be clearly extended using ng instead of ng  


g ij   ng    

ij
 

 ij k   pg  

   

k  

rewriting     substituting g ij   according to     and rewriting     substituting g ij  
ng   according to      we obtain 
if h i     i               i  i             ini             ini  in  
i
 
 z
 
 
 z
 
g i   

g ini  

   

fimapping calendar expressions to minimal periodic sets

g      i
then h i   nh
      pg            i  i    pg         
 z
 
 
g i   ng  

  ini      pg            ini  in   pg  
i
 
 z
 
g ini  ng  

hence the second condition of definition   is satisfied  the third one is always satisfied for
unbounded granularities  the first one is satisfied too  in fact since g   h with a period
g   then for each label i of h  i   n g is a label of h  hence  by definition
label distance of nh
h
g 
of periodically groups into    h with ph   pg and nh   nh

a   proof of proposition  
a     part  
from the definition of the group operation  for all i  n 
 

g  i   

im
 

g j    g im  m              g im    g           g    m    

j  i  m  

with    im  m      furthermore  k  n 
 i k m

 

 

g  i   k   

g j    g im   km  m              g im   km   

j  i k  m  

  g    km          g    km   m    
hence 
 

 

if g  i    

m 
 

 

m 
 

 

g    r  then g  i   k   

r  

g    r   km  

   

r  

g
this holds for each k  if we use k   gcmn m n
 note that k  n   then all the hypotheses
g 
of theorem   are satisfied   i     g  by hypothesis    ii  g   g   since g   g    lg    z 
mng
ng
and     holds    iii  pgg    gcm
 m ng    since we use k   gcm  m ng   and  from     we

know that pgg    km   therefore  by theorem       g  with pg   
ng   

mpg
gcm  m ng  

ng
gcm  mng    

a     part  
from the definition of the group

j

k

j

g 





lg  
  
m
 
operation  g  i   

by definition of l  we need to show that g 



lg   
  
m



lg  
m

k 
   m

 

 
j 

   

s
  tj b g j  with b  lg  t 
sim
j  i  m   g i    hence 

j

lg  
m

k
m  

g j 

and

fibettini  mascetti   wang

we prove the thesis showing that    
lg  
    since

j

lg  
m

k



lg  
m  

j

lg  
m

lg  
g
 lm
m
lg    lg   mod m 
g
 lm
   it
m

    first we prove that
prove that

hence
k
j

j

lg  
m

k

m    lg and that    

j

lg  
m

k


    m 

k

 m      lg
j
k
    since lgm   

lg    lg   mod m 
m

we have to

is equivalent to thej inequality
   lg    mod m  
k

m     that is true since  lg    mod m  m     since
k

j
lg  
 
 
 m  lg  
m

lg  
m



lg
m

   it is trivial that

a   proof of proposition  
a     part  
proof sketch
we show that g    g  with pgg     ng  and then we apply theorem   to obtain the thesis 
in particular we use


pg   ng 
ng   m
   lcm ng    m 
 
gcd pg   ng    pg    gcd ng   m   k  
and


pg 
  pg   ng 
k

 
 
ng   pg 
m
ng 
s
s
such that  for each i  if j  k   g   i    kr   g   j   r   then g   i       kr   g   j   r  
ng    
given an arbitrary granule g   i   we show that g   i     is the union of granules that
can be obtained by adding ng  to the index of each granule of g  contained in g   i   note
that i     lg  since g  is full integer labeled  in order to show that this is correct we
consider the way granules of g  are constructed by definition of altering tick  more precisely 
we compute the difference between the label b i  of the first granule of g  included in
g   i     and the label b i of the first granule of g  included in g   i   we show that this
difference is equal to the difference between the label t i  of the last granule of g  included
in g   i     and the label t i of the last granule of g  included in g   i   this fact together
with the consideration that g  is a full integer labeled granularity  leads to the conclusion
that g   i  and g   i     have the same number of granules  it is then clear that the above
computed label differences are also equal to the difference between the label of an arbitrary
n th granule of g  included in g   i     and the label of the n th granule
of g  included
s
in g   i   if this difference is b i   b i   then we have  if j  k   g   i    kr   g   j   r   then

s
g   i       kr   g  j   r   b i   b i   by showing that b i   b i is a multiple of ng 
the thesis follows 
proof details


   

fimapping calendar expressions to minimal periodic sets

si
sti 
assume g   i    tj b
g   j  and g   i       j b
g   j   we need to compute
i
i 
 
 
bi   bi   from the definition of the the altering tick operation 
b i

 

 

k
 bi   il
m


bi  

 il 
m

if i  

 il 
m

m   l 
   


    k otherwise 

and
b i 

 




k
 bi    i l
m


bi   

 i l 
m

if i     

 i l 
m

m   l 
   


    k otherwise 

 




note that if i   il
m   l  then i      i l
indeed  i l
 l  
m
m  m   l  
m  m
 il  

il

il
 
m l
and 
since

is
a
multiple
of
m 
then
 
m l
 
 
m 
m
m
m
m
m
m

il
l      m m   l 
hence  to compute b i   b i we should consider two cases 
b i   b i  



 
 

k  bi  il
k if i   il
m l
 bi    i l
m
m
m


bi   

 i l 
m

   


 

    k  bi  il
m     k otherwise 

in both cases  again considering the fact that  is a multiple of m  
b i   b i    bi   bi    

k
m

    

we are left to compute bi  bi   i e   the distance in terms of granules of g    between g   bi  
sti 
si
g   j  
g   j  and g   i       j b
and g   bi     since  by hypothesis  g   i    tj b
i
i 
then the first granule of  making g   bi   and the first granule of  making g   i  is the
same granule  the same can be observed for the first granule of  making g   bi    and
the first granule of  making g   i      more formally 
min bbi cg    min bicg 
and
min bbi  cg    min bi   cg 
hence  we have 
min bbi  cg   min bbi cg    min bi   cg   min bicg 

    

we have shown that the difference between the index of the first granule of  making
g   bi    and the index of the first granule of  making g   bi   is equal to the difference
between the index of the first granule of  making g   i     and the index of the first
granule of  making g   i   then  we need to compute the difference between the index
of the first granule of  making g   i     and the index of the first granulesof  making
g   i   since    g  and  is a multiple of ng    for each i  if j     g   i    r    j   r  
   

fibettini  mascetti   wang

s
p
p
then g   i       r    j   ngg     hence  this difference has value ngg    and for what
 
 
shown above this is also the value of the difference between the index of the first granule
of  making g   bi    and the index of the first granule of  making g   bi    then  since
p
   g  with period length pg  and since ngg  is a multiple of pg    we have that  if 
 

 j   g   i 
then 
 j  
thus  bi   bi  
reconsidering    

  pg 
  pg   ng 
 
   g   i  
ng 
ng   pg 

pg  ng 
ng  pg   

b i   b i  

  pg   ng 
k
 
 
ng   pg 
m
p

n

analogously we can compute t i   t i   ngg pgg    k
m  
 
 
 
 
 
 
thus  bi   bi   ti   ti   hence ti   bi    ti  bi   since g  is a full integer labeled
granularity  then g   i  and g   i     are formed by the same number of granules 
st i 
st i
 
 
 
 
since we now know g   i     j b
g   j    j b
  g   j   bi  bi    and  bi  bi  
 
i

i 

  g   

pgg  

pg  ng 
ng  pg 

is a multiple of ng    we have g 
 
and    g    hence  all the
hypothesis of theorem   hold  and its application leads the thesis of this proposition 
a     part  
 

since g  partitions g   see table     of  bettini et al           then     dlg  eg
g  is al 
ways defined and     min  n  n  i  lg  s t   n   g   i      min  m  n   j 
lg  s t   m   g   j     therefore lg  is the label of the granule of g  that covers the
 
granule of g  labeled with lg    by definition of de operation  lg    dlg  eg
g   
a   proof of proposition  
a     part  
by definition of the shift operation  g   i    g im   hence g   lg  m    g lg  mm   
g lg   
a   proof of proposition  
a     part  
the thesis will follow from the application of theorem    indeed  we know that    g  and
we show that g    g  with pgg   multiple
 and  s t   for
s of ng    for this we  need to identify
s
 
each i  if there exists s i  s t  g  i    js i  g   j   then g  i       js i  g   j   ng    
lcm p

 p

 n

g  g 
g 
consider an arbitrary i  n and   
  by definition of the combining
pg 
s
s
 
 
operation  we have g  i    js i  g   j  and g  i       js i   g   j  with

s i     j  lg     
  g   j   g   i  
   

fimapping calendar expressions to minimal periodic sets

and
s i        j  lg     
  g   j   g   i       
we now show that s i     is composed by all and only the elements of s i  when the
lcm pg   pg   ng 
quantity    
is added  for this purpose we need 
pg
 

j  s i   j        s i    

    


 j      s i     j  s i 

    

and

about     note that if j  s i   then g   j   g   i   since    g    if
g   j   

k
 

 jr  

r  

then
 



g  j     

k
 

 jr   lcm pg    pg    

    

r  

since g   i   g   j   

sk

r    jr   

and since    g    then

g   j     

k
 

 jr   lcm pg    pg    

    

r  

from    and    we derive g   i      g   j        and hence  j        s i     
analogously
validitysof     hence  for each i  if there exists s i  s t 
s can be proved the
 
 
g  i    js i  g   j   then g  i       js i  g   j        hence  considering the fact that
g    g    we can conclude g    g    finally  since pgg   is a multiple of ng    by theorem  
we obtain the thesis 
a     part  
let

p  
s i      
leg     i  lgg   e
p

 

p

 

where i  lgg  se i     j  lgg     
  g   j   g   i   
we show that leg    lg  by proving that      leg   lg  and     leg   lg   
    suppose by contradiction that exists k  lg    leg    since k  lg  and since g 
is derived by the combine operation 
then q  lg   g   q   g   k   by definition of the
s
 
combine operation g  k    js k  g   j   since q  s k   then g   q   g   k   hence  a 
q  lg   g   q   g   k  
p  
moreover  since k   leg    then se k      therefore  j  lgg   g   j   g   k   by
definition of the combine operation it is easily seen that g   g    using this and the
p  
previous formula  we derive that  b   j  lgg   g   j   g   k  
   

fibettini  mascetti   wang

p

 

from  a  and  b  it follows that q  lg    lgg   g   q   g   k   we show that this
leads to a contradiction 
p  
p  
p  
p  
since q   lgg  and labels of lgg  are contiguous  i e    i  lg    lgg  s t  min lgg     
p

p

 

p

 

 

i   max lgg      then q   min lgg    or q   max lgg     we consider the first case  the
proof for the second is analogous 
p  
p  
if q   min lgg    then max bqcg         otherwise q  lgg    
 
 
let be    min bmin lg   cg    since k  lg    then   bkcg  
if      then g   k   g   q     contradicting g   k   g   q  
if       then g   lg         and we show that lg   leg    indeed  by definition of
p  
p  
combine  j  lgg   g   j   g   lg     since g   g  we also have j  lgg   g   j  
g   lg     hence j  se lg    and then lg   leg   
since    g   lg    and max bqcg        then max bqcg        otherwise g   q  
 
 
g   lg      therefore  since min bkcg      then bqcg   blg  cg     in contradiction with
g   q   g   k  
e
    suppose by contradiction that k  leg    lg    since k  leg    by definition of l 
p

p

 

 

k  lgg  and se k       therefore  by definition of se  j  lgg   g   j   g   k  
p

 

since j  lgg    by definition of l  h with     h  pg  s t  dheg    j  since
 
g   j   g   k   then dheg    k  by definition of the combine operation  dheg   k 
 
moreover  since     h  pg    by definition of l  dheg   k  lg    contradicting the
hypothesis 
a   proof of proposition  
a     part  
the thesis will follow from the application of theorem    indeed  we show that g    g  with
pgg   multiple of ng    for this we need to identify  and  s t   for each i  if there exists s i 
s
s
lcm pg   pg   ng 
s t  g   i    js i  g   j   then g   i     js i  g   j  ng     let   
 
pg 
 
s
s
 
 i    
 
g   j  and g   i       j i  g   j 
by definition of anchored grouping  g   i    ij i
where i  is the first label of g  after i and  i      is the first label of g  after i     by
periodicity of g     and since  is a multiple of ng    the difference between the label of
the granule following g   i     and the label of the granule following g   i  is
sk  more
 
 
 
 
 
formally   i      i     hence  i       i     then  for each i  if g  i    j i g   j  
s     
s    
then g   i       ij i 
g   j    ij i
g   j      by this result and considering g    g   
we conclude g    g  with pgg       note that by proposition    ng   
pgg  

is a multiple of   then  by theorem    we have the thesis 

a     part  
let

 
leg   

p

 

if lg    lg   
lgg   
pg 
 
 lg     lg    otherwise 

   

pg  ng 
pg   

hence

fimapping calendar expressions to minimal periodic sets

 
where lg
is the greatest among the labels of lg  that are smaller than lg    we show that
 
e
lg    lg  by proving that     leg   lg  and     lg   leg   
p  
    suppose by contradiction that k  leg    lg    then  since k  leg    then k  lgg 
   
or k   lg
 
p

p

 

 

if k  lgg    then  by definition of lgg    h with     h  pg  s t  dheg    k  by
s    
definition of anchored group  g   k    kj k
g   j  where k   is the first label of g  after
 
k  therefore g  k   g   k   since g  is a labeled aligned subgranularity of g  and since
 
k  lg    then k  lg  and g   k    g   k   hence g   k   g   k   it follows that dheg   k
and therefore  by definition of l  k  lg  in contrast with the hypothesis 
    then  by definition of l
eg    lg    lg   therefore  since g  is a labeled aligned
if k   lg
 
 
 
   l
 
then
h
with
    h   min blg  cg    s t  dheg    lg   
 
l
subgranularity of g  lg
g
g
 
 
 
s
lg   
     
 
since  by definition of anchored group  g   lg
g   j  and since lg
  lg    lg   
j l 
 
 
g 

 

     g  l    hence dheg   l 
 
then g   lg
  g 
g  and therefore  by definition of l  lg    k  lg 
 
in contrast with the hypothesis 
p  
    suppose by contradiction that k  lg    leg    if k  lgg  then  by definition of
leg    k  leg    in contrast with the hypothesis 
p  
p  
p  
p  
p  
if k 
  lgg    since  q  lg   lgg  s t  min lgg     q  max lgg     then k   max lgg   
p

 

or k   min lgg    

p

 

if k   max lgg    then  by definition of l  min bkcg      pg    since g  is a labeled
aligned subgranularity of g  then g   k    g   k  and hence min bkcg      pg    since
s    
 
g   k    kj k
g   j  then min bkcg     pg  in contrast with the hypothesis k  lg   
p

 

    k   l 
 
if k   min lgg    then  by definition of lg
g  or k   lg   
 
 
 
if k   lg
then  let k   be the next label of g  after k  since k   lg
then  by definition
 
 
 
 
 
 
 
g
lg    k  lg    by definition of lg  then max blg  c         since g  is a labeled aligned
      g  l     therefore max bl  cg        since g   k   
subgranularity of g  then g   lg
  g 
g 
 
sk   
 
 
g       in contrast with the hypothesis
g
 j 
and
k

l
 
follows
that
max bkc
 
j k
g 
k  lg   
slg   
 
     
 
finally if k   lg
then g   lg
g   j   since k   lg
 lg  then h with
j l 
 
 
 
 

g 

    since g  is the composition of granules of g   dheg  is
    h  pg  s t  dheg   lg
 
 
p

 

defined  let q   dheg    by definition of l  q  lgg  and therefore q  lg    since  by
 
 
definition of anchored group  g  is the composition of granules of g  and since dheg   lg
 
s
lg   
     therefore since g   l     
and dheg    q  then g   q   g   lg
g
 j 
then
q
 
l
 
g   
g 
j l 
 
g 

 
it follows that lg   q   lg  and hence lg     lg    by definition of leg    lg
  k  leg  in
 
contrast with the hypothesis 

a   selecting operations
the selecting operations have a common part in the proof for the computation of the period
length and the period label distance 

   

fibettini  mascetti   wang

lcm p

 p

 n

g  g 
g 
let be   
  the proof is divided into two steps  first we show that for
pg 
each select operation if i  lg  then i     lg   details for select down  select up and
select by intersect operations can be found below   the second step is the application of
theorem    indeed  for each select operation  the following holds  i  lg  g   i    g   i  
this implies g    g    from step   follows that i     lg    hence g   i       g   i     
by this result and considering g    g    we conclude that g    g  with pgg      which is a
multiple of ng  by definition  then  by theorem   we have the thesis 

a   proof of proposition  
a     part  
see section a   
we prove that if   lg  then          lg   
by definition of the select down operation  if   lg  then i  lg  s t    lk  s i  
where s i  is an ordered set defined as follows  s i     j  lg     
  g   j   g   i   
in order to prove the thesis we need to show that i   lg      lk  s i      consider
i    i 

lcm pg  pg   ng 
pg 

we will note that i   lg   this is trivially derived from the periodicity

of g     to prove that    lk  s i     we show that s i    is obtained from s i  by adding 
to each of its elements 
indeed note that from periodicity of g    j  s i  if 
j
 

 jr  

    

 jr   lcm pg  pg    

    

g   j   

r  

then 
g  j

 



 

j
 
r  

since j  s i   g   j   g   i  then  from       g   i  
periodicity of g   

 



g  i 

j
 

 jr   lcm pg  pg    

sj

r    jr   

moreover  from

    

r  

since      and       g   i     g   j      hence j  s i   j      j      s i     analogously
we can prove that j    s i     j    j       s i  
thus s i    is obtained from s i  by adding  to each of its elements  therefore if j  s i 
has position n in s i   so j    s i    has position n in s i     hence it is trivial that if  has
position between k and k   l    in s i   then   has position between k and k   l    in
s i     hence if   lg    then    lg   

   

fimapping calendar expressions to minimal periodic sets

a     part  
let
leg   

o
  n
p  
a  a i  a  lgg   
p  

ilgg
 

where i  lg   

  g   j   g   i     
a i    lk   j  lg     

we show that leg    lg  by proving that     leg   lg  and     leg   lg   
p  
   suppose by contradiction that q  leg    lg    by definition of leg    q  lgg   
therefore h with     h  pg  s t  dheg    q  moreover  by definition of leg  and by
definition of select down  leg   lg  hence q  lg    since  by definition of select down
 
g   q    g   q   then dheg   q  hence  by definition of l  q  lg  in contradiction with
hypothesis 
   suppose by contradiction that q  lg    leg    since q  lg  then  by definition of
select down
  g   j   g   i   
i  lg  s t  q  lk   j  lg     
therefore  by definition of a i   q  a i  
 
since q  lg  then h with     h  pg  s t  dheg   q  by definition of select down 
p  
g   q    g   q   then dheg    q and therefore q  lgg    moreover  since g   q   g   i  
p

p

 

 

p

 

then dheg    i and therefore i  lgg    since q  a i   q  lgg  and i  lgg  then  by
definition of leg    q  leg    in contrast with the hypothesis 
a   proof of proposition  
a     part  
see section a    we prove that if i  lg  then i     lg    from the periodicity of g   
i   lg   this is trivially derived from the periodicity of g     hence we only need to show
that j    lg     
  g   j   g   i      since i  lg  then j  lg     
  g   j   g   i  
from the periodicity of g    if 
g   j   

j
 

 jr  

    

r  

then 

  
j
lcm pg  pg   ng 
g  j  
 
 jr   lcm pg  pg    
pg 
r  

moreover  from the      and since g   i   g   j  
g   i  

j
 
r  

from the periodicity of g   
   

 jr  

    

fibettini  mascetti   wang

g   i     

j
 

 jr   lcm pg  pg    

    

r  


from      and      follows that g   i      g  j  

lcm pg  pg   ng 
pg 



  that is the thesis 

a     part  
let

p  
  g   j   g   i   
leg     i  lgg   j  lg  s t    

we show that leg    lg  by proving that     leg   lg  and     leg   lg   
p  
    suppose by contradiction that k  leg    lg    since k  leg    then k  lgg   
therefore h with     h  pg  s  t  dheg    k  moreover  by definition of leg  and
by definition of select down  leg   lg  hence q  lg    since  by definition of select up 
 
g   k    g   k   then dheg   k  hence  by definition of l  k  lg    in contrast with the
hypothesis 
    suppose by contradiction that k  lg    leg    since k  lg    then h with    
 
h  pg  s t  dheg   k  since  by definition of select up  g   k    g   k   then dheg    k 
p  
therefore  by definition of l  k  lgg    moreover  since k  lg  and lg   lg    by
definition of the select up operation  then j  lg  s t      g   j   g   k   hence by
definition of leg    k  leg    in contradiction with hypothesis 
a    proof of proposition  
a      part  
see section a    we prove that if   lg    then          lg   
by definition of the select by intersect operation  if   lg    then i  lg     
lk  s i   where s i  is an ordered set defined as follows  s i     j  lg   g   j g   i       
in order to prove the thesis we need to show that i   lg       lk  s i      consider
i    i  

lcm pg  pg   ng 
note that i   lg   this
pg 
prove that    lk  s i     we show that

is trivially derived from the periodicity of

g     to
s i    is obtained from s i  by adding  to
each of its elements 
indeed note that j if j  s i   then g   j   g   i       hence l  z    l   g   j 
and  l   g   i   from the periodicity of g    g   j       l   lcm pg  pg      from
the periodicity of g    g   i      l   lcm pg  pg      so g   j      g   i         therefore
j  s i    j      s i    
analogously we can prove that j    s i      j       s i   hence s i    is obtained from
s i  by adding  to each of its elements  therefore  if j  s i  has position n in s i   then
j     s i    has position n in s i     hence if j has position between k and k   l    in s i  
then also j    has position between k and k   l    in s i    and so j     lg   
a      part  
the proof is analogous to the ones of proposition   
   

fimapping calendar expressions to minimal periodic sets

a    set operations
a      proof of proposition  
given the periodical granularities h and g with g label aligned subgranularity of h  we
nh
g
prove that n
pg   ph   the thesis is proved by considering the common period length of h
and g i e  pc   lcm pg   ph   
let ng  be the difference between the label of the ith granule of one period of g and
the label of the ith granule of the next period  considering pc as the period length of g 
  is defined 
analogously nh
s
s
by periodicity of g  if g i    kr    ir   then g i   ng      kr    ir   pc    since g is
s
an aligned subranularity of h  i  lh h i    g i    kr    ij   and  since h is periodic 
sk
    
 
 
h i   nh
r    ij   pc    from which we can easily derive that i   ng   i   nh   hence
 
 
ng   nh  
    n     then
from the definition of pc       n s  t  ph   pg   moreover  since nh
g
pg
ph
 
 
nh   ng   therefore n
ng
h
a      property used in the proofs for set operations
lcm p

 p

 n

lcm p

 p

 n

g  g 
g 
g  g 
g 
let   be
and   be
  since g  and g  are aligned subgranpg 
pg 
ularity of a certain granularity h  from proposition   we can easily derive that        

a    proof of proposition   
a      part  
union  let   be

lcm pg   pg   ng 
lcm pg   pg   ng 
and   be
  the thesis
pg 
pg 
s
sk
 
 
lg  if  g  i    r    ir    then g  i       kr    ir

will be proved by

  lcm pg    pg    
showing that i 
 
with            since lg   lg   lg    two cases will be considered 
s
 i  lg  g   i    g   i    kr    ir    from the periodicity of g    g   i        
sk
sk
 
r    ir   lcm pg    pg      hence g  i        
r    ir   lcm pg    pg     
s
 i  lg   lg  g   i    g   i    kr    ir    from the periodicity of g    g   i        
sk
sk
 
r    ir   lcm pg    pg      hence g  i        
r    ir   lcm pg    pg     
s
since         then i  lg  if g   i    kr    ir    then g   i         g   i        
sk
r    ir   lcm pg    pg      hence  by definition of     we have the thesis 
s
intersect  i  lg    lg   lg  g   i    g   i    kr    ir    from the periodicity of
g  and g    i      lg  esi      lg    since         then i      lg    moreover
g   i         g   i         kr    ir   lcm pg    pg      hence  by the definition of     we
have the thesis 
s
difference  i  lg    lg   lg  g   i    g   i    kr    ir    since i  lg  from the
periodicity of g  i      lg    since i 
  lg    from the periodicity of g    i     
  lg 
 if it would exists i      lg    from periodicity of g  would exists i  lg  that is
 
 
not
sk possible for hypothesis   hence i      lg   moreover g  i         g   i        
r    ir   lcm pg    pg      hence  by the definition of     we have the thesis 
   

fibettini  mascetti   wang

a      part  
p  
p  
let leg    lgg   lgg   
we show that leg    lg  by proving that     leg   lg  and     leg   lg   
p  
    suppose by contradiction that k  leg    lg    since k  leg  then k  lgg  or
p

 

p

p

 

 

p

 

k  lgg    suppose that k  lgg   the proof is analogous if k  lgg     since k  lgg    then
 
     h   pg  s t  dheg   k  since  by definition of the union operation g   k    g   k  
 
then dheg   k  hence  by definition of l  k  lg  in contrast with the hypothesis 
    suppose by contradiction that k  lg    leg    since k  lg    then  by definition of
 
l       h   pg  s t  dheg   k  moreover  by definition of the union operation  k  lg 
p  
p  
or k  lg    suppose that k  lgg   the proof is analogous if k  lgg     by definition of the
p

 

union operation  g   k    g   k  therefore dheg    k and so  by definition of l  k  lgg   
e k  leg  in contradiction with the hypothesis 
hence  by definition of l 

references
bettini  c     mascetti  s          an efficient algorithm for minimizing time granularity
periodical representations  in proc  of the   th international symposium on temporal
representation and reasoning  time   pp        ieee computer society 
bettini  c   mascetti  s     pupillo  v          a system prototype for solving multigranularity temporal csp  in recent advances in constraints  revised selected papers from the workshop on constraint solving and constraint logic programming
 csclp   volume      of lecture notes in computer science  pp          springer 
bettini  c   mascetti  s     wang   x  s          mapping calendar expressions into periodical granularities  in proc  of the   th international symposium on temporal
representation and reasoning  time   pp         ieee computer society 
bettini  c     sibi  r  d          symbolic representation of user defined time granularities 
annals of mathematics and artificial intelligence                 
bettini  c   wang  x  s     jajodia  s          time granularities in databases  data
mining  and temporal reasoning  springer 
bettini  c   wang  x  s     jajodia  s       a   solving multi granularity temporal constraint networks  artificial intelligence                    
bettini  c   wang  x  s     jajodia  s       b   temporal reasoning in workflow systems 
distributed and parallel databases                 
bresolin  d   montanari  a     puppis  g          time granularities and ultimately periodic
automata  in proc  of the  th european conference on logics in artificial intelligence
 jelia  volume      of lecture notes in computer science  pp          springer 
chandra  r   segev  a     stonebraker  m          implementing calendars and temporal
rules in next generation databases  in proc  of the   th international conference on
data engineering  icde   pp          ieee computer society 
combi  c   franceschet  m     peron  a          representing and reasoning about temporal
granularities  journal of logic and computation               
   

fimapping calendar expressions to minimal periodic sets

combi  c     pozzi  g          temporal conceptual modelling of workflows  in proc  of the
  nd international conference on conceptual modeling  er  volume      of lecture
notes in computer science  pp        springer 
cukierman  d     delgrande  j  p          expressing time intervals and repetition within
a formalization of calendars  computational intelligence             
dal lago  u     montanari  a          calendars  time granularities  and automata  in proc 
of the  th international symposium on spatial and temporal databases  sstd  
volume      of lecture notes in computer science  pp          springer 
dal lago  u   montanari  a     puppis  g          towards compact and tractable
automaton based representations of time granularities  in proc  of the  th italian
conference on theoretical computer science  ictcs   volume      of lecture notes
in computer science  pp        springer 
dechter  r   meiri  i     pearl  j          temporal constraint networks  artificial intelligence                 
kabanza  f   stevenne  j  m     wolper  p          handling infinite temporal data  in proc 
of the  th acm sigact sigmod sigart symposium on principles of database
systems  pods   pp          acm press 
koomen  j          reasoning about recurrence  international journal of intelligent systems            
ladkin  p  b          primitives and units for time specification  in proc  of the  th national
conference on artificial intelligence  aaai   pp          morgan kaufmann 
leban  b   mcdonald  d     forster  d          a representation for collections of temporal
intervals  in proc  of the  th national conference on artificial intelligence  aaai  
pp          morgan kaufmann 
li  y   ning  p   wang  x  s     jajodia  s          discovering calendar based temporal
association rules  in proc  of the  th international symposium on temporal representation and reasoning  time   pp          ieee computer society 
montanari  a          metric and layered temporal logic for time granularity  ph d 
thesis  illc dissertation series          university of amsterdam 
morris  r   shoaff  w     khatib  l          domain independent temporal reasoning with
recurring events  computational intelligence             
niezette  m     stevenne  j  m          an efficient symbolic representation of periodic
time  in proc  of the first international conference on information and knowledge
management  cikm  volume     of lecture notes in computer science  pp         
springer 
ning  p   wang  x  s     jajodia  s          an algebraic representation of calendars 
annals of mathematics and artificial intelligence                
puppis  g          automata for branching and layered temporal structures  ph d  thesis 
universita degli studi di udine 
terenziani  p          symbolic user defined periodicity in temporal relational databases 
ieee transactions of knowledge and data engineering                 
   

fibettini  mascetti   wang

tuzhilin  a     clifford  j          on periodicity in temporal databases  information
systems                 
urgun  b   dyreson  c  e   snodgrass  r  t   miller  j  k   soo  m  d   kline  n     jensen 
c  s          integrating multiple calendars using tauzaman  software practice
experience  to appear 
wijsen  j          a string based model for infinite granularities  in spatial and temporal
granularity  papers from the aaai workshop  technical report ws        pp      
aaai press 

   

fi