journal artificial intelligence research                  

submitted       published     

unifying class based representation formalisms

calvanese dis uniroma  it
lenzerini dis uniroma  it
nardi dis uniroma  it

diego calvanese
maurizio lenzerini
daniele nardi

dipartimento di informatica e sistemistica
universita di roma  la sapienza 
via salaria      i       roma  italy
abstract

notion class ubiquitous computer science central many formalisms
representation structured knowledge used knowledge representation
databases  paper study basic issues underlying representation formalisms single common characteristics distinguishing features 
investigation leads us propose unifying framework able capture fundamental aspects several representation languages used different contexts 
proposed formalism expressed style description logics 
introduced knowledge representation means provide semantically well founded
basis structural aspects knowledge representation systems  description logic
considered paper subset first order logic nice computational characteristics  quite expressive features novel combination constructs
studied before  distinguishing constructs number restrictions  generalize existence functional dependencies  inverse roles  allow one refer inverse
relationship  possibly cyclic assertions  necessary capturing real world
domains  able show precisely combination constructs makes
logic powerful enough model essential set features defining class structures
common frame systems  object oriented database languages  semantic data
models  consequence established correspondences  several significant extensions
formalisms become available  high expressiveness logic
propose need capturing reasoning different contexts forces us distinguish unrestricted finite model reasoning  notable feature proposal
reasoning cases decidable  argue that  virtue high expressive
power associated reasoning capabilities unrestricted finite models 
logic provides common core class based representation formalisms 
   introduction

many fields computer science find formalisms representation objects
classes  motschnig pitrik   mylopoulous         generally speaking  object denotes
element domain interest  class denotes set objects common characteristics  use term  class based representation formalism  refer formalism
allows one express several kinds relationships constraints  e g   subclass constraints  holding among classes meaningful set applications  moreover 
class based formalisms aim taking advantage class structure order provide
various information  whether class consistent  i e   admits least one object 
whether class subclass another class  generally  whether given constraint
c      ai access foundation morgan kaufmann publishers  rights reserved 

ficalvanese  lenzerini    nardi

holds given set classes  characterization  clear
formalisms referred paper deal structural aspects objects
classes  include features specification behavioral properties
objects 
three main families class based formalisms identified paper  first one
comes knowledge representation particular work semantic networks
frames  see example lehmann        sowa         second one originates
field databases particular work semantic data models  see
example hull   king         third one arises work types programming
languages object oriented systems  see example kim   lochovsky        
past several attempts establish relationships among various
families class based formalisms  see section   brief survey   proposed solutions
fully general formalism capturing modeling constructs
reasoning techniques families still missing  paper address
problem proposing class based representation formalism  based description logics
 brachman   levesque        schmidt schau   smolka        donini  lenzerini  nardi 
  schaerf         using comparing formalisms 
description logics  structured knowledge described means called concepts
roles  denote unary binary predicates  respectively  starting set
atomic symbols one build complex concept role expressions applying suitable
constructors characterize description logic  formally  concepts interpreted
subsets domain roles binary relations domain  constructs
equipped precise set theoretic semantics  common constructs include
boolean operations concepts  quantification roles  example  concept
person u  child male  denotes set individuals instances concept
person connected role child instances concept male 
concept  child denotes individuals connected role child
individual  constructs considered important include
general forms quantification  number restrictions  allow one state limits
number connections individual may via certain role  constructs
roles  intersection  concatenation inverse  description logic knowledge base 
expressing intensional knowledge modeled domain  built stating inclusion
assertions concepts  satisfied models knowledge base 
assertions used specify necessary and or necessary sucient conditions
individuals instances certain concepts  reasoning knowledge bases includes
detection inconsistencies knowledge base itself  determining whether concept
populated model knowledge base  checking subsumption  i e   whether
instances concept necessarily instances another concept models
knowledge base 
paper propose description logic called aluni  quite expressive
includes novel combination constructs  including number restrictions  inverse roles 
inclusion assertions restrictions cycles  features make aluni powerful
enough provide unified framework frame systems  object oriented languages 
semantic data models  show establishing precise correspondence framebased language style one proposed fikes kehler        
   

fiunifying class based representation formalisms

entity relationship model  chen         object oriented language style
one introduced abiteboul kanellakis         specifically  identify
relevant features model classes cited settings show
specification class based formalisms equivalently expressed
knowledge base aluni  way  able identify commonalities
among families specificities family  therefore  even though
specific features every family addressed aluni  able
show formalism proposed paper provides important features
currently missing family  although relevance often stressed 
sense  unifying framework points possible developments languages belonging
three families 
one fundamental reason regarding aluni unifying framework class based
representation formalisms reasoning aluni hard  nonetheless decidable 
shown calvanese  lenzerini  nardi         calvanese      c   consequently 
language features arising different frameworks build class based representations
given common semantic account  combined expressive setting
one retains capability solving reasoning tasks  combination constructs
included language makes necessary distinguish reasoning respect
finite models  i e   models finite domain  reasoning respect unrestricted
models  calvanese      c  devises suitable techniques unrestricted finite model
reasoning  enable reasoning different contexts arising assuming finite
domain  often case field databases  assuming domain
infinite  paper  discuss results reasoning aluni  compare
results reasoning class based representation formalisms 
summarizing  framework provides adequate expressive power account
significant features major families class based formalisms  moreover 
equipped suitable techniques reasoning finite unrestricted models 
therefore  believe aluni captures essential core class based representation
formalisms belonging three families mentioned above 
paper organized follows  next section present formalism
sections         discuss three families class based formalisms  namely  frame
languages  semantic data models  object oriented data models  showing basic
features captured knowledge bases aluni  final sections contain review
related work  including discussion reasoning aluni class based formalism 
concluding remarks 
   unifying class based representation language

section  present aluni  class based formalism style description logics
 dls   brachman   levesque        schmidt schau   smolka        donini et al        
donini  lenzerini  nardi    nutt         dls domain interest modeled means
concepts roles  denote classes binary relations  respectively  generally
speaking  dl formed three basic components 
description language  specifies construct complex concept role
expressions  also called simply concepts roles   starting set atomic
   

ficalvanese  lenzerini    nardi
construct

atomic concept
atomic negation
conjunction
disjunction
universal quantification
number restrictions
atomic role
inverse role

syntax

 a
c  u c 
c  c 
 r c
 nr
 nr
p
p

semantics
ai
n ai
c i   c i
c i   c i
fo j  o     o  o      ri   o    c g
fo j  fo  j  o  o      ri g ng 
fo j  fo  j  o  o      ri g ng
p
f o  o    j  o    o    p g

table    syntax semantics aluni
symbols applying suitable constructors  set allowed constructs
characterizes description language 
knowledge specification mechanism  specifies construct dl knowledge base  properties concepts roles asserted 
set basic reasoning tasks provided dl 
rest section describe specific form three components assume
aluni 
    description language

aluni

description language aluni  called aluni   concepts roles formed according syntax shown table    denotes atomic concept  p atomic
role  c arbitrary concept expression  r arbitrary role expression  n nonnegative integer  increase readability concept expressions  introduce following
abbreviations 
   a  atomic concept
  u  a  atomic concept
 r   r
  nr  nr u  nr

concepts interpreted subsets domain roles binary relations
domain  intuitively   a represents negation atomic concept  interpreted
complement respect domain interpretation  c  u c  represents
conjunction two concepts interpreted set intersection  c  c  represents
disjunction interpreted set union  consequently    represents whole domain 
    s denotes cardinality set  

   

fiunifying class based representation formalisms

  empty set   r c called universal quantification roles used
denote elements interpretation domain connected role r
instances concept c    nr  nr called number restrictions  impose
instances restrictions minimum maximum number objects
connected role r  p   called inverse role p   represents inverse
binary relation denoted p  
formally  interpretation    i     consists interpretation domain
interpretation function maps every concept c subset c
every role r subset ri according semantic rules specified table   
sets c ri called extensions c r respectively 
example     consider concept expression
 enrolls student u   enrolls u     enrolls u
 teaches   professor gradstudent  u    teaches u
 advcourse

specifying constraints object university course  expression ects
fact course enrolls students  restrictions minimum maximum
number enrolled students  using role teaches inverse constructor
state property course taught exactly one individual  either
professor graduate student  finally  negation used express disjointness
concept denoting advanced courses 
    knowledge bases

aluni

aluni knowledge base  expresses knowledge classes relations
modeled domain  formally defined triple k    a  p      finite set
atomic concepts  p finite set atomic roles  finite set called inclusion
assertions  assertion form
  c
atomic concept c arbitrary concept expression  inclusion
assertion states means concept c necessary properties element domain
order instance atomic concept a  formally  interpretation satisfies
inclusion assertion   c ai c   interpretation model knowledge
base k satisfies inclusion assertions k  finite model model finite
domain 
example      cont   assertion
   enrolls student u   enrolls u    enrolls u
course
 teaches   professor gradstudent  u    teaches
makes use complex concept expression state necessary conditions object
instance concept course 
   

ficalvanese  lenzerini    nardi

aluni restrictions imposed form inclusion assertions may
assume  particular rule cyclic assertions  i e   assertions
concept expression right hand side refers  either directly indirectly via
assertions  atomic concept left hand side  presence cyclic assertions
different semantics may adopted  nebel         one defined above  called descriptive
semantics  accepts interpretations satisfy assertions knowledge base 
hence interprets assertions constraints domain modeled  inclusion
assertions  descriptive semantics claimed provide intuitive results
 buchheit  donini  nutt    schaerf         alternative semantics proposed
based fixpoint constructions  nebel        schild        de giacomo   lenzerini 
    b   hence allow define unique way interpretation concepts 
general  cycles knowledge base increase complexity reasoning  nebel 
      baader        calvanese      b  require special treatment reasoning procedures  baader        buchheit  donini    schaerf         reason  many dl based
systems assume knowledge base acyclic  brachman  mcguinness  patel schneider 
alperin resnick    borgida        bresciani  franconi    tessaris         however  assumption unrealistic practice  cycles definitely necessary correct modeling
many application domains  indeed  use cycles allowed data models used
databases  and  shown following sections  order capture semantics
aluni possibility using cyclic assertions fundamental 
besides inclusion assertions  dl based systems make use equivalence assertions  buchheit et al          express necessary sucient conditions
object instance concept  although possibility ruled aluni 
limit ability capturing frame based systems database models 
constraints expressed correspond naturally inclusion assertions 
    reasoning

aluni

basic tasks consider reasoning aluni knowledge base concept
consistency concept subsumption 
concept consistency problem deciding whether concept c consistent
knowledge base k  written k  j  c     i e   whether k admits model
c      
concept subsumption problem deciding whether concept c  subsumed
concept c  knowledge base k  written k j  c  c    i e   whether c i c i
model k 
inclusion number restrictions inverse roles aluni ability
aluni using arbitrary  possibly cyclic inclusion assertions allows one construct knowledge base certain concept consistent necessarily empty extension
finite models knowledge base  similarly  subsumption relation two
concepts may hold infinite models knowledge base ruled finite
models considered 
   

fiunifying class based representation formalisms
keven    a p   
  fnumber eveng 
p   fdoublesg 
set assertions consists of 
 

 

 

number
even

   doubles u  doubles  even
  number u    doubles u  doubles number

figure    aluni knowledge base two concepts equivalent finite
models
let keven knowledge base shown figure    intuitively  assertions keven state number even number doubles it 
numbers double even  even number number  doubles
one number  doubles numbers  observe model keven   universal quantifications together functionality doubles assertions imply
 eveni  numberi   direct inclusion assertion even number implies
 eveni  numberi   therefore  two concepts cardinality  since
one sub concept other  domain finite  extensions coincide 
necessarily hold infinite domains  fact  names chosen suggest
already infinite model knowledge base number even interpreted
differently  model obtained taking natural numbers domain  interpreting number whole domain  even even numbers  doubles set
f  n  n  j n  g 
example shows aluni finite model property 
states concept consistent knowledge base knowledge base admits
finite model concept nonempty extension  therefore  important
distinguish reasoning respect unrestricted models reasoning
respect finite models  call  unrestricted  concept consistency  written k  j u c
    unrestricted  concept subsumption  written k j u c   reasoning tasks
described above  i e   carried without restricting attention finite models 
corresponding reasoning tasks carried considering finite models only  called finite
concept consistency  written k  j f c    finite concept subsumption  written
k j f c   
example      cont   summing previous considerations  say number
subsumed even keven   i e   keven  j u number even  finitely subsumed  i e  
keven j f number even  equivalently numberu even consistent keven   i e   keven  j u
number u even    finitely consistent  i e   keven j f number u even   
distinguishing feature aluni reasoning finite unrestricted case decidable  particular  unrestricted concept satisfiability concept
subsumption decidable deterministic exponential time  de giacomo   lenzerini 
example    

   

ficalvanese  lenzerini    nardi

    a  calvanese et al          since reasoning strict sublanguages aluni already exptime hard  calvanese      c   known algorithms computationally optimal  finite concept consistency aluni decidable deterministic exponential time
finite concept subsumption  in general case  decidable deterministic double
exponential time  calvanese      c   precise discussion methods reasoning aluni provided section      detailed account adopted algorithms
analysis computational complexity presented calvanese      c  
next sections show two forms reasoning respect unrestricted
finite models  capture reasoning tasks typically considered different
formalisms structured representation knowledge 
   frame based systems

frame languages based idea expressing knowledge means frames 
structures representing classes objects terms properties instances
must satisfy  properties defined frame slots  constitute items
frame definition  since   s large number frame systems developed 
different goals different features  dls bear close relationship kl one family
frame systems  woods   schmolze         however  would consider frame
systems general perspective  discussed example karp         karp 
myers  gruber         establish correspondence aluni knowledge bases
context 
remark restricting attention aspects related
taxonomic structure  moreover  discussed below  consider assertional knowledge
bases  intensional knowledge characterized terms inclusion assertions rather
definitions  addition  consider features cannot captured
first order framework  default values slots  attached procedures 
specification overriding inheritance policies  issues concerning modeling
aspects dls addressed donini  lenzerini  nardi  nutt  schaerf        
donini  nardi  rosati         within modal nonmonotonic extension dls 
    syntax frame based systems

make correspondence precise  need fix syntax semantics frame
systems consider  unfortunately  accepted standard chosen
use basically notation adopted fikes kehler         used
kee  system 
frame knowledge base  denoted f   formed set frame
slot names  constituted set frame definitions following form 
definition    

frame   f kb f e 
   kee trademark intellicorp  note kee user directly specify knowledge base
notation  allowed define frames interactively via graphical system interface 

   

fiunifying class based representation formalisms
  course kb university
  enrolls
valueclass  student
cardinality min   
cardinality max    
memberslot  taughtby
valueclass   union gradstudent
professor 
cardinality min   
cardinality max   

frame

  bascourse kb university
  course
memberslot  taughtby
valueclass  professor

frame

memberslot

superclasses

  professor

frame

  student

frame

kb

university

university

  gradstudent kb university
  student
memberslot  degree
valueclass  string
cardinality min   
cardinality max   

frame

superclasses

  advcourse kb university
  course
memberslot  enrolls
valueclass   intersection

frame

superclasses

gradstudent
 not undergrad  

kb

  undergrad kb university
  student

frame

superclasses

    

cardinality max

figure    kee knowledge base
e frame expression  i e   expression formed according following syntax 
e   superclasses   f            fh
memberslot   s 
valueclass   h 
cardinality min   m 
cardinality max   n 

memberslot   sk
valueclass   hk
cardinality min   mk
cardinality max   nk
f denote frame slot names  respectively  n denote positive integers 
h denotes slot constraint  specified follows 
h

  fj

 intersection h  h   j
 union h  h   j
 not h  

readers familiar kee system  point omit
specification sub classes frame present kee  since directly derived
specification super classes 
example     figure   shows simple example knowledge base modeling situation
university expressed frame language presented  frame course
   

ficalvanese  lenzerini    nardi

represents courses enroll students taught either graduate students
professors  cardinality restrictions used impose minimum maximum number
students may enrolled course  express course taught
exactly one individual  frame advcourse represents courses enroll graduate
students  i e   students already degree  basic courses  hand  may
taught professors 
    semantics frame based systems

give semantics set frame definitions resort interpretation terms
first order predicate calculus  hayes         according interpretation  frame names
treated unary predicates  slots considered binary predicates 
frame expression e interpreted predicate logic formula e  x   one
free variable  consists conjunction sentences  obtained super class
specification slot specification  particular  super classes f            fh
have 
f   x            fh  x 
slot specification
memberslot  
valueclass   h
cardinality min  
cardinality max   n

 y   s  x  y   vh  y    
 y           ym     i  j yi    yj      x  y         x  ym     
 y           yn      s  x  y         x  yn       wi  j yi   yj   
assumption within one frame definition occurrences x refer
free variable  finally constraints slots interpreted conjunction  disjunction
negation  respectively  i e  
 intersection h  h   interpreted h  x    h  x 
 union h  h  
interpreted h  x    h  x 
 not h  
interpreted  h  x 
frame definition
frame   f kb f e
considered universally quantified sentence form
 x  f  x    e  x   
whole frame knowledge base f considered conjunction first order sentences corresponding frame definitions f  
regard frame definitions necessary conditions  commonplace
frame systems known assertional frame systems  opposed definitional systems 
frame definitions interpreted necessary sucient conditions 
   

fiunifying class based representation formalisms

order enable comparison formalisms representing structured knowledge restrict attention reasoning tasks involve frame knowledge base 
independently assertional knowledge  i e   frames instances  fikes kehler
       mention several reasoning services associated frames  as 
consistency checking  amounts verifying whether frame f satisfiable
knowledge base  particular  involves reasoning cardinalities
checking whether filler given slot belongs certain frame 
inheritance  which  case  amounts ability identifying
frames general given frame  sometimes called all super of  karp
et al          properties general frames inherited
specific one  reasoning therefore based general ability
check mutual relationhips frame descriptions knowledge base 
reasoning services formalized first order semantics follows 
definition     let f frame knowledge base f frame f   say f
consistent f first order sentence f    x f  x  satisfiable  moreover  say
frame description e general f f f j   x  f  x    e  x   
    relationship frame based systems

aluni

first order semantics given allows us establish straightforward relationship
frame languages aluni  indeed  present translation frame
knowledge bases aluni knowledge bases 
first define function maps frame expression aluni concept
expression follows 
every frame name f mapped atomic concept  f   
every slot name mapped atomic role  s   
every slot constraint mapped follows
 union h  h  
mapped  h    h   
 intersection h  h   mapped  h   u  h   
 not h  
mapped   h   
every frame expression form
superclasses   f            fh
memberslot   s 
valueclass   h 
cardinality min   m 
cardinality max   n 

memberslot   sk
valueclass   hk
cardinality min   mk
cardinality max   nk
   

ficalvanese  lenzerini    nardi
k    a p   
  fcourse advcourse bascourse professor student gradstudent undergrad stringg 
p   fenrolls taughtby degreeg 
set assertions consists of 
 

 

 

 

 

course
advcourse
bascourse
gradstudent
undergrad

 

 

 

 

 

 

   enrolls student u    enrolls u     enrolls u
 taughtby  professor gradstudent  u     taughtby
  course u  enrolls  gradstudent u  undergrad  u     enrolls
  course u  taughtby professor
  student u  degree string u     degree
  student

figure    aluni knowledge base corresponding kee knowledge base figure  
mapped class expression
 f    u u  fh   u
  s    h   u  m  s   u  n  s   u

  sk    hk   u  mk  sk   u  nk  sk  
 

 

mapping allows us translate frame knowledge base aluni knowledge base 
specified following definition 
aluni knowledge base  f      a  p     corresponding frame
knowledge base f obtained follows 
consists one atomic concept  f   frame name f f  
p consists one atomic role  s   slot name f  
consists inclusion assertion
 f      e  
frame definition
frame   f kb f e
f  
definition    

example      cont   illustrate translation frame knowledge base figure    corresponding aluni knowledge base shown figure   
   

fiunifying class based representation formalisms

correctness translation follows correspondence settheoretic semantics aluni first order interpretation frames  see example
hayes        borgida        donini et al          observe inverse roles
fact necessary formalization frames  indeed  possibility referring
inverse slot rarely considered frame knowledge representation systems  some
exceptions reported karp         due absence inverse roles distinction
reasoning finite unrestricted models necessary    consequently 
mentioned forms reasoning captured unrestricted concept consistency
concept subsumption aluni knowledge bases  summarized following
theorem 
theorem     let f frame knowledge base  f frame f   e frame description   f     f     e   translations aluni  following
hold 

f consistent f  f    j u  f     
e general f f  f   j u  f    e   

claim directly follows semantics frame knowledge bases
translation dls adopted 
theorem     becomes possible exploit methods unrestricted reasoning
aluni knowledge bases order reason frame knowledge bases  since problem
reasoning  e g   kee already exptime complete  pay terms computational complexity expressiveness added constructs aluni  fact 
resorting correspondence aluni becomes possible add frame systems
useful features  possibility specifying inverse slot  karp        
still retain ability reason exptime 
proof 

   semantic data models

semantic data models introduced primarily formalisms database schema design 
provide means model databases much richer way traditional data
models supported database management systems  becoming
important adopted recent database design methodologies
computer aided software engineering tools 
widespread semantic data model entity relationship  er  model introduced chen         become standard  extensively used design
phase commercial applications  commonly accepted er notation  classes called
entities represented boxes  whereas relationships entities represented
diamonds  arrows entities  called isa relationships  represent inclusion assertions  links entities relationships represent er roles  number
restrictions associated  dashed links used whenever restrictions refined
specific entities  finally  elementary properties entities modeled attributes 
   eliminate

aluni inverse roles  resulting dl finite model property 
   

ficalvanese  lenzerini    nardi

whose values belong one several predefined domains  integer  string 
boolean 
er model provide constructs expressing explicit disjointness disjunction entities  extensions model allow use generalization hierarchies
represent combination two constructs  order keep presentation simple  consider generalization hierarchies formalization provide 
although addition would straightforward  similarly  omit attributes relations 
show relevant aspects er model captured aluni 
thus reasoning er schema reduced reasoning corresponding
aluni knowledge base  since aluni equipped capabilities reason knowledge
bases  respect finite unrestricted models  see section       reduction
shows reasoning er model  generally semantic data models 
decidable 
case frame based systems  restrict attention aspects
constitute core er model  reason consider features 
keys weak entities  introduced literature  chen        
appear formalizations er model methodologies
conceptual modeling based model  proposal treatment keys description
logics presented borgida weddell        
order establish correspondence er model aluni  present
formal syntax semantics er schemata 
    syntax entity relationship model

although er model become industrial standard  several variants
extensions introduced  differ minor aspects expressiveness
notation  chen        teorey        batini  ceri    navathe        thalheim              
also  er schemata usually defined using graphical notation particularly
useful easy visualization data dependencies  well suited
purposes  therefore chosen formalization er model abstracts
respect important characteristics allows us develop correspondence
aluni 
following  two finite sets x call function subset x
x  labeled tuple   labeled tuple maps xi   x yi    
  f           kg  denoted  x    y            xk   yk    write  xi   denote yi  
er schema tuple    ls     att   rel   card   
ls finite alphabet partitioned set es entity symbols  set attribute
symbols  set us role symbols  set rs relationship symbols  set ds
domain symbols  domain symbol associated predefined basic domain
dbd   assume various basic domains pairwise disjoint 
es es binary relation es  
att function maps entity symbol es  labeled tuple ds  

definition    

   

fiunifying class based representation formalisms

function maps relationship symbol rs us  labeled tuple
es   assume without loss generality that 
  role specific exactly one relationship  i e   two relationships
r  r    rs r    r    rel  r     u    e            uk   ek   rel  r     
 u     e             uk      ek       fu           uk g fu             uk    g disjoint 
  role u   us relationship r entity e
rel  r             u   e         
card function es rs us in   in    f g  satisfies following condition  relationship r   rs rel  r     u    e            uk   ek   
card  e  r  u   defined u   ui   f           kg  e ei
 where denotes exive transitive closure    first component
card  e  r  u   denoted cmin  e  r  u   second component
cmax  e  r  u    stated otherwise  cmin  e  r  u   assumed  
cmax  e  r  u   assumed   
specifying formal semantics er schemata give intuitive description
components schema  relation models isa relationship entities 
need make special assumption form acyclicity
injectivity  function att used model attributes entities  example
att associates  labeled tuple  a    integer  a    string  entity e   e
two attributes a    a  whose values integers strings respectively  simplicity
assume attributes single valued mandatory  could easily handle multivalued attributes associated cardinalities  function rel associates set roles
relationship symbol r  determining implicitly arity r  role
u set distinguished entity  called primary entity u r  database
satisfying schema instances primary entity allowed participate
relationship via role u   function card specifies cardinality constraints  i e  
constraints minimum maximum number times instance entity may
participate relationship via role  since constraints meaningful
entity effectively participate relationship  function defined
sub entities primary entity  special value   used restriction
posed maximum cardinality  constraints used specify existence
dependencies functionality relations  cosmadakis   kanellakis        
often used restricted form  minimum cardinality either    
maximum cardinality either      cardinality constraints form considered
introduced already abrial        subsequently studied grant
minker         lenzerini nobili         ferg         ye  parent  spaccapietra
        thalheim        
example     figure   shows simple er schema modeling state affairs similar
one represented kee knowledge base figure    used standard graphic
notation er schemata  except dashed link  represents refinement
cardinality constraint participation sub entity  in case advcourse 
relationship  in case enrolling  


rel

   

ficalvanese  lenzerini    nardi

tof

     

course

 

ein

      

teaching

enrolling

tby

     

eof

     

teacher

student

 

      
advcourse

degree string

gradstudent

figure    er schema
    semantics entity relationship model

semantics er schema given specifying database states
consistent information structure represented schema  formally  database
state b corresponding er schema    ls     att   rel   card   constituted
nonempty finite set b   assumed disjoint basic domains  function b
maps
every domain symbol   ds corresponding basic domain dbd  
every entity e   es subset e b b  
every attribute   set ab b sd ds dbd  
every relationship r   rs set rb us  labeled tuples b  
elements e b   ab   rb called instances e   a  r respectively 
database state considered acceptable satisfies integrity constraints
part schema  captured definition legal database state 
definition     database state b said legal er schema  
 ls     att   rel   card    satisfies following conditions 
pair entities e   e    es e  e   holds e b e b  
entity e   es   att  e      a    d            ah   dh   instance
e   e b   f           hg following holds 
  exactly one element ai   abi whose first component e 
  second component ai element dibd  
relationship r   rs rel  r     u    e            uk   ek    instances
r form  u   e            uk   ek    ei   eib     f           kg 
   

fiunifying class based representation formalisms
number

     

 

even

doubles

     

figure    er schema corresponding example    
relationship r   rs rel  r     u    e            uk   ek   
  f           kg  entity e   es e ei instance e e
  holds
cmin  e  r  ui    fr   rb j r ui     eg cmax  e  r  ui   

notice definition database state ects usual assumption databases
database states finite structures  see cosmadakis  kanellakis    vardi        
fact  basic domains required finite  legal database state
schema  finite set values basic domains actually interest 
define active domain bact database state b set elements basic
domains dbd     ds   effectively appear values attributes b  formally 
bact   fd   dbd j   ds    a     e   b    e  d    ab g 
since b finite contains finite number attributes  functional
definition  bact finite 
reasoning er model includes verifying entity satisfiability deducing inheritance  entity satisfiability amounts checking whether given entity populated
legal database state  atzeni   parker jr         lenzerini   nobili        di battista
  lenzerini         corresponds notion concept consistency dls  deducing
inheritance amounts verifying whether databases legal schema 
every instance entity instance another entity  implied isa relationships arise different reasons  either trivially  transitive closure
explicit isa relationships present schema  subtle ways  specific
patterns cardinality restrictions along cycles schema requirement
database state finite  lenzerini   nobili        cosmadakis et al         
figure   shows er schema modeling situation knowledge
base example      arguing exactly example conclude two
entities number even denote set elements every finite database legal
schema  although isa relation number even stated explicitly 
implied  however  due cycle involving relationship two entities due
particular form cardinality constraints 
example    

   

ficalvanese  lenzerini    nardi
    relationship entity relationship schemata

aluni

show different forms reasoning er schemata captured finite
concept consistency finite concept subsumption aluni  correspondence
two formalisms established defining translation er schemata aluni
knowledge bases  proving correspondence legal database
states finite models derived knowledge base 
definition     let    ls     att   rel   card   er schema  aluni knowledge base  s      a  p     defined follows 
set atomic concepts  s   contains following elements 
domain symbol   ds   atomic concept  d  
entity e   es   atomic concept  e   
relationship r   rs   atomic concept  r  
set p atomic roles  s   contains following elements 
attribute     atomic role  a  
relationship r   rs rel  r     u    e            uk   ek    k atomic roles
 u              uk   
set assertions  s   contains following elements 
pair entities e   e    es e  e   assertion
 e       e   
   
entity e   es att  e      a    d            ah  dh    assertion
 e       a     d    u u   ah    dh   u     a    u u      ah      
relationship r   rs rel  r     u    e            uk   ek    assertions
 r      u     e    u u   uk    ek   u      u    u u     uk      
 ei        ui      r  
  f           kg
   
relationship r   rs rel  r     u    e            uk   ek     
f           kg  entity e   es e ei 
    cmin  e  r  ui         assertion
 e      m   ui     
   
  n   cmax  e  r  ui         assertion
 e      n   ui     
   
pair symbols x    x    es  rs  ds x     x  x    rs  ds  
assertion
 x        x    
   
   

fiunifying class based representation formalisms
k    a p   
  fcourse advcourse teacher student gradstudent teaching enrolling stringg 
p   ftof tby ein eof degreeg 
set assertions consists of 
 

 

 

 

 

 

 

 

 

 

 

 

 

teaching
enrolling
course
advcourse
teacher
student
gradstudent

   tof course u     tof u
 tby teacher u     tby
   ein course u     ein u
 eof student u     eof
   tof  teaching u     tof u
 ein  enrolling u    ein u     ein
  course u     ein
   tby  teaching
   eof  enrolling u    eof u    eof
  student u  degree string u     degree

 

figure    aluni knowledge base corresponding er schema figure  
illustrate translation er schema figure   
knowledge base captures exactly semantics shown figure   
brevity disjointness assertions     omitted  assertions concept
left hand side collapsed 
translation makes use inverse attributes number restrictions capture
semantics er schemata  observe that  means inverse constructor 
binary relationship could treated simpler way choosing traversal direction
mapping relationship directly role  notice assumption acyclicity
resulting knowledge base unrealistic case  order exploit correspondence reasoning er model  need techniques deal inverse
attributes  number restrictions  cycles together  shown example      combination factors causes finite model property fail hold  need
resort reasoning methods finite models 
fact  reduce reasoning er model finite model reasoning aluni
knowledge bases  purpose define mapping database states corresponding er schema finite interpretations knowledge base derived it 
due possible presence relations arity greater    mapping however
one to one first need characterize interpretations knowledge base
directly correspond database states 
definition     let    ls     att   rel   card   er schema  s   defined
above  interpretation  s   relation descriptive  every relationship r  
rs   rel  r     u    e            uk   ek    every d  d      r  i  
 
   
   d         d  d         ui   i    d    d         ui   i        d   
example      cont  
aluni

 ik

   

ficalvanese  lenzerini    nardi

intuitively  extension relationship database state set labeled tuples 
set contain element twice  therefore implicit
semantics er model cannot two labeled tuples connected
roles relationship exactly elements domain  model
aluni knowledge base corresponding er schema  hand  tuple
represented new individual  condition implicit anymore 
cannot imposed aluni suitable assertions  following lemma  however  shows
need explicit condition  interested reasoning
aluni knowledge base corresponding er schema  due fact
always restrict considering relation descriptive models 
er schema   s   aluni knowledge base obtained
according definition      c concept expression  s    c finitely consistent
 s    finite relation descriptive model  s   c      
lemma     let

let i  finite model  s   c       build finite relationdescriptive model   starting i  applying following construction
relationship rs  
let model obtained previous step let r   rs rel  r   
 u    e            uk   ek   next relationship apply construction  construct model ir condition   satisfied relationship r 
given individual r     r  i   denote ui d     f           kg  unique 
individual e  r  e      ui   i   ei     ei   i     f           kg define
x u  e      uk  ek     fr     r  i j ui  d    ei     f           kgg  call con ict set
set x u  e      uk ek   one element  con ict set x u  e      uk ek 
randomly choose one individual r  say others induce con ict
 u    e            uk   ek    call conf  finite  set objects inducing con ict
 u    e            uk   ek   
define interpretation i conf disjoint union   conf copies   one copy 
denoted iz   every set z    conf   denote dz copy iz individual
  since disjoint union two models aluni knowledge base
model  i conf model  s    let iz iz   two copies i conf   call
exchanging uk  rz   uk  rz     operation i conf consisting replacing   uk   iz
pair  rz   uk  rz     rz   uk  rz      and  time  replacing   uk   iz 
pair  rz     uk  rz       rz     uk  rz     intuitively  exchanging uk  rz   uk  rz     
individuals rz rz   induce con icts anymore 
construct i conf interpretation ir follows  r   conf
z    conf r   z   exchange uk  rz   uk  rznfrg    possible
show con icts thus eliminated new con ict created  hence 
ir  condition   r satisfied  still show ir model  s  
c ir       indeed  straightforward check induction every concept
expression c   appearing  s    z    conf     c  i dz   c  ir   thus
assertions  s   still satisfied ir c ir      
proof 

   

   

   

   

fiunifying class based representation formalisms

result  following correspondence legal database states
er schema relation descriptive models resulting aluni knowledge base
established 
proposition     every er schema    ls     att   rel   card   exist two
mappings ffs   database states corresponding finite interpretations translation  s    fis   finite relation descriptive interpretations  s   database states
corresponding   that 

   legal database state b   ffs  b  finite model  s   
symbol x   es     rs   ds   x b     x   ffs  b   

   finite relation descriptive model  s    fis  i   legal database state
  entity e   es     e   i   e fis  i     symbol x    rs  ds  
  x  i    x fis  i    

proof 

    given database state b  define interpretation   ffs  b   s  

follows 
  b   bact   sr rs rb  
symbol x   es     rs   ds  
  x   i   x b  

relationship r   rs rel  r     u    e            uk   ek   
  ui   i   f r  e    j r   rb   r ui    eg    f           kg 

   
    

let b legal database state  prove claim     sucient show satisfies
every assertion  s    assertions   satisfied since b satisfies set inclusion
extensions corresponding entities  respect assertions    let e   es
entity att  e      a    d            ah   dh   consider instance e     e   i  
show   f           hg  exactly one element ei  
 e  ei       ai   i   moreover ei     di   i      e   e b   definition legal
database state exactly one element ai   abi     ai   bi whose first component e 
moreover  second component ei ai element di     di   i   respect
assertions    let r   rs relationship rel  r     u    e            uk   ek   
consider instance r     r  i   show   f           kg
exactly one element ei    r  ei       ui   i   moreover
ei     ei   i      r   rb   definition legal database state  r labeled tuple
form  u    e             uk   e k    e i   eib     f           kg  therefore r function
defined fu            uk g      ei unique equal e i  moreover    
ei     ei   i   eib   assertions   satisfied  since    first component
element   ui   i always element rb     r  i   respect assertions   
let r   rs relationship rel  r     u    e            uk   ek    let e   es
entity e ei    f           kg    cmin  e  r  ui        
   

ficalvanese  lenzerini    nardi

consider instance e     e   i   show least pairs
  ui   i e second component  since assertions   satisfied know
first component pairs instance  r     definition
legal database state  least labeled tuples rb whose ui component
equal e        ui   i contains least pairs whose second component equal
e  respect assertions   proceed similar way  finally  assertions  
satisfied since first  definition basic domains pairwise disjoint disjoint
b set labeled tuples  second  element b labeled tuple 
third  labeled tuples corresponding different relationships cannot equal since
defined different sets roles 
    let finite relation descriptive interpretation  s    basic domain
  ds   let fid function dbd one to one onto  since
finite basic domain contains countable number elements  function
always exists  order define fis  i   first specify mapping associates
individual   element follows 
    e   i entity e   es    d    d 
    r  i relationship r   rs rel  r     u    e            uk   ek   
individuals d           dk    d  di       ui   i     f           kg 

 d     u    d            uk   dk   

    d  i basic domain   ds    d    fid  d  
otherwise  d    d 

pair individuals  d    d        fi  d    d        fi  d      d      set
x    x     ffi  x  j x   x g 
model  s   rules define fi d  every     indeed 
assertions      instance one atomic concept corresponding
relationship basic domain  case instance atomic
concept corresponding entity  moreover      r  i relationship r   rs
rel  r     u   e            uk   ek    assertions      f           kg
exactly one element di    d  di       ui   i   model  s  
    fi d  uniquely determined  choose nondeterministically
one possible value 
define database state b   fis  i   corresponding  
b   n







r rs   r     d ds   d     

symbol x   es     rs   ds   x b   fi   x   i   

dicult see  model  s    b defined way legal
database state active domain sd ds   d  i  
   

fiunifying class based representation formalisms

following theorem allows us reduce reasoning er schemata finite model
reasoning aluni knowledge bases 
theorem     let er schema  e  e   two entities    s   translation   following holds 

 s    j f  e     
   e inherits e    s   j f  e    e     
b      part   proposition     
proof          let b legal database state e  

 
b
 

ffs  b  finite model  s     e   
     
    let  e   finitely consistent  s    lemma     finite relationdescriptive model  s    e  i       part   proposition      fis  i  
database state legal e b      
        let  s    j f  e    e       e   u  e     finitely consistent  s   
lemma     finite relation descriptive model  s       e   i
     e     i       part   proposition      fis  i   database state legal
  e b    e  b   therefore e inherit e   
    assume e inherit e    database state b legal
instance e   e b e    e  b   part   proposition     
ffs  b  finite model  s   e     e   ffs  b  e      e     ffs  b    therefore
 s    j f  e    e     
   e satisfiable

theorem     allows us effectively exploit reasoning methods developed aluni order reason er schemas  complexity resulting method
reasoning er schemata exponential  observe however  known algorithms
reasoning er schemata exponential  calvanese   lenzerini      b  
precise computational complexity problem still open 
moreover  exploiting correspondence aluni  becomes possible add
er model  and general semantic data models  several features modeling
primitives currently missing  considered important  fully
take account reasoning schemata  additional features include
example possibility specify use arbitrary boolean combinations entities 
refine properties entities along isa hierarchies 
   object oriented data models

object oriented data models proposed goal devising database formalisms could integrated object oriented programming systems  kim        
subject active area research database field  based
following features 
rely notion object identifier extensional level  as opposed
traditional data models value oriented  notion class
intensional level 
   

ficalvanese  lenzerini    nardi

structure classes specified means typing inheritance 

previous section  present common basis object oriented data models
class based formalisms introducing language specifying object oriented
schemata show schemata correctly represented aluni knowledge
bases  analysis  concentrate attention structural aspects objectoriented data models  one characteristics object oriented approach provide
mechanisms specifying dynamic properties classes objects  typically
definition methods associated classes  aspects outside
scope investigations  nevertheless  argue general techniques schema level
reasoning  particular  type consistency type inference  profitably exploited
restricted forms reasoning methods  abiteboul  kanellakis  ramaswamy    waller 
      
    syntax object oriented model

define simple object oriented language style popular models
featuring complex objects object identity  although refer specific
formalism  model inspired ones presented abiteboul kanellakis        
hull king        
definition     object oriented schema tuple    cs     ds    where 
cs finite set class names  denoted letter c  
finite set attribute names  denoted letter a 
ds finite set class declarations form
class c is a c            ck type is t 
denotes type expression built according following syntax 


  cj

union t            tk end j
set of j
record a   t            ak   tk end 
ds contains exactly one declaration class c   cs  
figure   shows fragment object oriented schema corresponding
kee knowledge base figure   
class declaration imposes constraints instances class refers to 
is a part class declaration allows one specify inclusion sets instances
involved classes  type is part specifies type expression structure
assigned objects instances class 
example    

   

fiunifying class based representation formalisms
class teacher type is
union professor  gradstudent
end
class gradstudent is a student type is
record
degree  string
end

class course type is
record
enrolls  set of student 
taughtby  teacher
end

figure    object oriented schema
    semantics object oriented model

meaning object oriented schema given specifying characteristics
instance schema  definition instance makes use notions object
identifier value 
let us first characterize set values constructed set symbols 
called object identifiers  given finite set symbols denoting real world objects  set
vo values inductively defined follows 
vo  
v            vk   vo fjv            vk jg   vo  
v            vk   vo   a    v            ak   vk     vo  
nothing else vo  
database instance j schema    cs     ds   constituted
finite set oj object identifiers 
mapping j assigning class cs subset oj  
mapping j assigning value voj object oj  
although set voj values constructed set oj object identifiers
infinite  database instance one needs consider finite subset voj  
definition     given object oriented schema instance j   set vj
active values respect j constituted by 
set oj object identifiers 
set values assigned j elements oj   including values
explicitly associated object identifiers  used form values 
interpretation type expressions j defined interpretation function j assigns type expression subset voj following conditions satisfied 
c j   j  c  
   

ficalvanese  lenzerini    nardi

 union t            tk end j   t j     tkj
 set of  j   ffjv            vk jg j k    vi   j     f           kgg
 record a    t            ak   tk end j   f  a    v            ah   vh  j h k 
vi   tij     f           kg 
vj   voj   j   fk              hgg 
notice instances type record may components specified
type class  thus using open semantics records  typical
object oriented data models  abiteboul   kanellakis        
order characterize object oriented data models consider instances
admissible schema 
definition     let    cs     ds   object oriented schema  database instance
j said legal  with respect   declaration
class c is a c            cn type is
ds   holds c j cij   f           ng  j  c j   j  
therefore  legal database instance  type expressions present
schema determine  finite  set active values must considered  construction
values limited depth type expressions 
    relationship object oriented schemata

aluni

establish relationship aluni object oriented language presented
above  done providing mapping object oriented schemata aluni
knowledge bases  since interpretation domain aluni knowledge bases consists
atomic objects  whereas instance object oriented schema assigned possibly
structured value  see definition vo    need explicitly represent
notions underlie object oriented language  particular  correspondence concepts classes  one must explicitly account type structure
class  accomplished introducing aluni concepts abstractclass 
represent classes  rectype settype represent corresponding types 
associations classes types induced class declarations  well
basic characteristics types  modeled means roles   functional  role value
models association classes types  role member used specifying
type elements set  moreover  concepts representing types assumed
mutually disjoint  disjoint concepts representing classes  constraints
expressed adequate inclusion assertions part knowledge base
going define 
first define function maps type expression aluni concept
expression follows 
every class c mapped atomic concept  c   
every type expression union t           tk end mapped  t     tk   
   

fiunifying class based representation formalisms

every type expression set of mapped settype u  member   t   
every attribute mapped atomic role  a   every type expression

record a   t            ak   tk end mapped

 a      t    u      a    u u
   ak     tk   u      ak   

rectype u  

using define aluni knowledge base corresponding object oriented schema 
aluni knowledge base  s      a  p     corresponding objectoriented schema    cs     ds   obtained follows 
definition    

  fabstractclass  rectype  settypeg   f  c   j c   cs g 
p   fvalue  memberg   f  a  j   g 
consists following assertions 
abstractclass
rectype
settype

 
 
 

   value
 value  
 value   u  rectype

class declaration
class c is a c            cn type is
ds   inclusion assertion
 c     abstractclass u  c    u u  cn  u  value   t   
translation observe inverse roles necessary
formalization object oriented data models  indeed  possibility referring
inverse attribute generally ruled models  however  strongly limits
expressive power data model  pointed recent papers  see example
albano  ghelli    orsini        cattell         note use number restrictions
limited value    corresponds existence constraints functionality 
whereas union used general form example kee system 
illustrate translation fragment object oriented
schema figure    corresponding aluni knowledge base shown figure   
example      cont  

   

ficalvanese  lenzerini    nardi
k    a p   
  fabstractclass rectype settype string
 

 

 

p

 

 

 

course  teacher  professor  student  gradstudentg 
  fvalue  member  enrolls  taughtby  degreeg 

set assertions consists of 
course

 

teacher
gradstudent

 
 

abstractclass
rectype
settype

abstractclass u
 value  rectype u     enrolls u     taughtby u
 enrolls  settype u  member student  u  taughtby teacher 
abstractclass u  value  gradstudent professor 
abstractclass u student u
 value  rectype u  degree string u     degree 

      value
   value  
   value   u  rectype

figure    aluni knowledge base corresponding object oriented schema figure  
discuss effectiveness translation   first observe
knowledge base  s   resulting translation object oriented schema
may admit models direct counterpart among legal database instances
  precisely  interpretation  s   database instance
viewed directed labeled graph  case interpretation  nodes domain
individuals arcs labeled roles  case database instance 
nodes either object identifiers active values  arc either connects object
identifier associated value  in case labeled value   part
sub structure representing set record value  in case labeled member
attribute  accordance type value   legal database instance
  value v represented sub structure form finite tree v
root  set record values intermediate nodes  objects identifiers leaves  clearly 
substructure contain cycles  conversely  model  s    may
cycles involving nodes instances settype rectype
roles different value  call cycles bad  model containing bad cycles
cannot put directly correspondence legal database instance  also  due
open semantics records one cannot adopt different translation bad cycles
model ruled out 
aluni

example    

consider object oriented schema   containing single class declaration

class c type is record a    record a    record a    c end end end
   

fiunifying class based representation formalisms

o 
c

value

v 

rectype
a 

a 

a 

o 
c

v 

rectype
value

v 

a 

rectype

v 

a 

rectype

v 

rectype

a 

figure    model containing cycles
translated
c   abstractclass u
 value  rectype u    a  u  a   rectype u    a  u  a   rectype u    a  u  a  c     
figure   shows model  s   represented graph  clarity  named
instances c   hence abstractclass  instances rectype
v  observe two different types cycles graph  cycle involving individuals
o    v    v    v  cause problems since contains arc labeled value 
part structure constituting complex value  fact  v  represents
record value   a     a    a   o          hand  due bad cycle involving v 
v    individual v  represents  together o  connected via a  v    record infinite
depth 
nevertheless establish correspondence finite models  s   possibly
containing bad cycles legal instances object oriented schema  
achieved unfolding bad cycles model  s   infinite trees  obviously 
unfolding cycle infinite tree  generates infinite number nodes 
would correspond infinite database state  however  restrict duplication
individuals represent set record values  thus instances settype
rectype  instances abstractclass  instead  duplicated process
unfolding  therefore number remains finite  moreover  since set possible
active values associated object identifier bound depth schema 
fact block unfolding bad cycles finite tree depth equal depth
schema 
let us first formally define depth object oriented schema  
definition     type expression define depth  t   inductively follows 
    
  c  
 
 
  max
  union t            tk end 
 ik  depth  ti    
depth  t    
    
 
 
 
depth
 

  set of   
 
 
    max ik  depth  ti       record a   t            ak   tk end 
depth object oriented schema defined maximum depth  t   type
expression  
   

ficalvanese  lenzerini    nardi

o 
c

value

a 

 

v 

rectype

a 

 

v 

rectype

a 

a 

c

rectype

 

v 

a 

rectype

 

v 

a 

rectype

   

a 

value
o 

a 

 

v 

a 

v 

rectype

v 

rectype

a 

v 

rectype

a 

figure     unfolded version model figure  
introduce notion unfolding aluni interpretation 
definition     let object oriented schema   s   translation aluni
finite interpretation  s    call unfolded version interpretation obtained
follows  individual v part bad cycle  unfold bad cycle
 infinite  tree v root  generating new individuals instances
rectype settype  nonnegative integer m  call m unfolded version  
denoted ijm  interpretation obtained truncating depth infinite tree
generated process unfolding 
example      cont   figure    shows unfolded version model figure   
notice bad cycle unfolded infinite tree  arcs labeled
a  lead o   instance abstractclass duplicated 

correctness  s   sanctioned following proposition 
proposition     every object oriented schema depth m  exist mappings 

   ffs instances finite interpretations  s   ffv active values
instances domain elements finite interpretations  s   that 
legal instance j   ffs  j   finite model  s    type
expression v   vj   v   j ffv  v       t   ffs  j    

   fis finite interpretations  s   instances fiv domain elements m unfolded versions finite interpretations  s   active
values instances   that  finite model  s    fis  i   legal
instance   concept  t    translation type expression
  ijm        t   ijm fiv  d    fis  i    

proof 

follows 

    given database instance j define interpretation ffs  j    s  
   

fiunifying class based representation formalisms

ffv function mapping every element vj distinct element ffs  j    
therefore ffs  j   defined set elements ffv  v  v   vj   moreover

denote id  rec  set elements ffs  j   corresponding object
identifiers  record set values  respectively 
interpretation atomic concepts defined follows 
   c   ffs  j     fffv  o  j   j  c  g 
every  c   corresponding class name c
abstractclassffs  j     id
rectypeffs  j     rec
settypeffs  j     set
interpretation atomic roles defined follows 
   a  ffs  j     f d    d    j d    rec ffv    d                a  ffv    d            g 
every  a  corresponding attribute name

 
j
 

member
  f d    d    j d    set ffv   d      fj        ffv    d          jgg

 
j
 
value
  f d    d    j  ffv    d     ffv    d       j g

prove type v   vj   v   j ffv  v   
   t   ffs  j     first part thesis follows definition ffs  j   
proof induction structure type expression 
base case    c  i e   class  name     c j ffv  o       c   ffs  j    
vice versa      c   ffs  j   ffv  d    c j  
inductive case    record a    t            ak   tk end  t     rectype u
   a      t    u      a    u u    ak     tk   u      ak    assume v   tij
iff ffv  v       ti   ffs  j      f           kg  show v   j iff ffv  v       t   ffjs  j   
suppose v   j   i e   v     a    v            ah  vh  h k vi   ti
  f           kg  induction hypothesis ffv  vi        ti   ffs  j       f           kg 
definition ffs   ffv  v    rectypeffs  j      ffv  v   ffv  vi         ai   ffs  j     f           kg 
roles  a  corresponding attribute names functional  therefore  ffv  v   
   t   ffs  j    
conversely  suppose   ffv  v       t   ffs  j     then    f           kg
exactly one di   ffs  j    d  di        ai   ffs  j    moreover di      t i   ffs  j    
definition ffs v     a   v            ahj  vh    h k vi   ffv  di   
  f           kg  induction hypothesis vi   ti     f           kg  therefore v  
 record a    t            ak   tk end j  
cases   union t           tk end   set of   treated analogously 
    given finite model  s   depth m  define legal database instance fis  i  
follows 
fiv function mapping every element ijm distinct element vfis  i  
following conditions satisfied 
  ofis  i   vfis  i   set elements fiv  d    abstractclassijm  
   

ficalvanese  lenzerini    nardi

  rectypeijm    d idi        ai   ijm     f           kg 

individual d    jm attribute a   d  d         a    ijm  
fiv  d      a    fiv  d             ak   fiv  dk     
    settypeijm    d  di     memberijm     f           kg 
individual d    ijm  d  d       member ijm   fiv  d   
ffiv  d             fiv  dk  g 
every class name c   fis  i    c     ffiv  d  j      c   ijm g 
fis  i     f o  v  j fiv  d      o  fiv  d      v   d    d      valueijm g 
first prove concept  t    translation type expression
    ijm        t   ijm fiv  d    fis  i     proof
induction structure concept expression  inductive part
restrict attention case record types 
base case    c  i e    t   atomic
concept  

     c   ijm fiv  d   
c fis  i     vice versa   c fis  i   fiv    o       c   ijm  
inductive case   t     rectype u    a      t    u      a    u u    ak     itk   u
     ak     record a   t            ak   tk end  assume      ti    jm iff
fiv  d    tifis  i       f           kg  show      t   ijm iff fiv  d    fis  i    
suppose      t   ijm    i rectypeijm eachi   f           kg
individual di di      ti    jm  d  di        ai    jm   construction
fiv  d      a    v            ah   vh   h k  moreover  induction hypothesis fiv  di    
tifis  i   therefore fiv  d    fis  i    
conversely  suppose fiv  d    fis  i     i e   fiv  d      a   v            ah  vh   h k
vi   tifis  i     f           kg  induction hypothesis di   fiv   vi        ti   ijm  
  f           kg  definition fiv     rectypeijm  d  di        ai   ijm  
  f           kg  since roles  a  corresponding attribute names functional 
     t   ijm  
remains show declaration
class c is a c            cn type is
 

ds    a  c fis  i   cifis  i     f           ng   b  fis  i   c fis  i     fis  i    
 a  follows fact  s   contains assertion  c      c    u u  cn  
definition fis  i    
 b  follows shown fact ijm still satisfies
assertion  c     abstractclass u  value   t    fact       c   i let d 
unique individual  d i d      valuei   since model  s    d       t   i  
argue d       t    jm   d  part bad cycle  
ijm coincide sub structure rooted d  formed individuals reached via
member roles corresponding attributes  done  otherwise  ijm
sub structure expanded finite tree  since construction depth tree
least depth  t    connections individuals preserved ijm 
follows d       t   ijm  
   

fiunifying class based representation formalisms

basic reasoning services considered object oriented databases subtyping
 check whether type denotes subset another type every legal instance  type
consistency  check whether type consistent legal instance   based proposition      show forms reasoning fully captured finite concept
consistency finite concept subsumption aluni knowledge bases 
object oriented schema  t    two type expressions  
translation   following holds 

theorem      let

 s  



 s    j f  t     
subtype    s   j f  t    t     

   consistent
  

proof analogous proof theorem      makes use proposition     instead proposition     
again  correspondence aluni established theorem      allows us make
use reasoning techniques developed aluni reason object oriented schemas 
observe reasoning object oriented models already pspace hard  bergamaschi
  nebel        thus known algorithms exponential  however  resorting
aluni  becomes possible take account reasoning various extensions
object oriented formalism  extensions useful conceptual modeling
already proposed literature  cattell   barry         first all 
considerations developed er model regard use arbitrary boolean
constructs classes applied object oriented setting  provides
disjunction admit form negation  additional features added
object oriented models inverses attributes  cardinality constraints set valued
attributes  general forms restrictions values attributes 
proof 

   related work

section brie discuss recent results correspondence class based
formalisms techniques reasoning aluni class based representation
formalisms 
    relationships among class based formalisms

past several attempts establish relationships among class based
formalisms  blasius  hedstuck  rollinger         lenzerini  nardi  simi       
carry comparative analysis class based languages attempt provide unified
view  analysis makes clear several diculties arise identifying common
framework formalisms developed different areas  recent papers address
problem  example  analysis relationships frame based languages
types programming languages carried borgida         bergamaschi
sartori         piza  schewe  schmidt        use frame based languages enrich
deductive capabilities semantic object oriented data models 
   

ficalvanese  lenzerini    nardi

artale  cesarini  soda        study reasoning object oriented data models
presenting translation dls style one discussed section    however 
proposed translation applicable case shema contains recursive
class declarations  limitation present work bergamaschi nebel
        formalism derived dls used model complex objects
algorithm computing subsumption classes provided 
recent survey application dls problem data management
presented borgida          application task data modeling reasoning
techniques derived correspondences presented sections     discussed
detail calvanese  lenzerini  nardi        
recently  proposals integrate object oriented logic
programming paradigms  kifer   wu        kifer  lausen    wu         proposals
however directly related present work  since aim providing mechanisms
computing structured objects  rather means reasoning conceptual
 object oriented  representation domain interest 
    reasoning

aluni

class based representation formalisms

equipped techniques reason respect unrestricted
respect finite models  brie sketch main ideas underlying reasoning
contexts  detailed account reasoning techniques carried calvanese
     c  
aluni

      unrestricted model reasoning

remind reasoning knowledge base respect unrestricted models amounts
check either concept consistency  i e   determine whether knowledge base admits
 possibly infinite  model given concept nonempty extension  concept
subsumption  i e   determine whether extension one concept contained extension another concept every model  including infinite ones  knowledge
base 
method reason aluni respect unrestricted models exploits well known
correspondence dls propositional dynamic logics  pdls   kozen   tiuryn 
       class logics specifically designed reason programs 
correspondence  first pointed schild         relies substantial
similarity interpretative structures formalisms  allows one exploit
reasoning techniques developed pdls reason corresponding dls  particular 
since aluni   description language aluni  includes construct inverse roles 
correspondence one resort converse pdl  variant pdl includes
converse programs  kozen   tiuryn         however  presence number
restrictions aluni direct correspondence pdls  cannot rely
traditional techniques reasoning pdls  recently  encoding techniques
developed  allow one eliminate number restrictions knowledge base
preserving concept consistency concept subsumption  de giacomo   lenzerini      a  
encoding applicable knowledge bases formulated expressive variants dls 
particular used reduce unrestricted model reasoning aluni knowledge
   

fiunifying class based representation formalisms

bases  both concept consistency concept subsumption  deciding satisfiability
formula converse pdl  reasoning converse pdl decidable exptime  kozen  
tiuryn         since encoding polynomial  de giacomo   lenzerini      a 
obtain exptime decision procedure unrestricted concept consistency concept
subsumption aluni knowledge bases  simplified form encoding 
applied decide unrestricted concept consistency aluni presented
calvanese et al         
      finite model reasoning

remind reasoning knowledge base respect finite models amounts
check either finite concept consistency finite concept subsumption 
finite models knowledge base must considered 
finite model reasoning  techniques based reduction reasoning pdls
applicable  indeed  pdl formula corresponding aluni knowledge base
contains constructs converse programs  corresponding inverse roles 
functionality direct inverse programs  thus formula variant pdl
finite model property  vardi         however  encoding
functionality  one obtains converse pdl formula  since converse pdl finite
model property  fischer   ladner         formula satisfiable
finitely satisfiable  shows encoding number restrictions  and particular
encoding functionality   preserving unrestricted satisfiability preserve
finite satisfiability  de giacomo   lenzerini      a  
finite model reasoning aluni one adopt different technique  based
idea separating reasoning process two distinct phases  see calvanese      c 
full details   first phase deals constructs except number restrictions 
builds  expanded knowledge base  constructs embedded implicitly
concepts roles  second phase assertions involving number restrictions
used derive expanded knowledge base system linear inequalities 
system defined way solutions certain type  acceptable solutions 
directly related finite models original knowledge base  particular 
acceptable solution one directly deduce cardinalities extensions concepts
roles possible finite model  proposed method allows one establish aluni
exptime decidability finite concept consistency special cases finite concept
subsumption  resorting complicated encoding one obtain  exptime
decision procedure finite concept subsumption aluni general  calvanese      a 
    c  
reasoning respect finite models investigated context dependency theory databases  shown casanova  fagin  papadimitriou       
relational model  functional inclusion dependencies interact  dependency
implication problem finite case differs one unrestricted case 
implication problem arbitrary functional inclusion dependencies undecidable
 chandra   vardi        mitchell         functional unary inclusion dependencies
solvable polynomial time  finite unrestricted case  cosmadakis
et al         
   

ficalvanese  lenzerini    nardi

consistency respect finite models schemata expressed enriched entityrelationship model cardinality constraints shown decidable polynomial
time lenzerini nobili         calvanese lenzerini      b  extend decidability result include isa relationships  calvanese lenzerini      a  show
exptime decidability reasoning expressive object oriented model  algorithm
computing refinement ordering types  the analogue concept hierarchy 
framework o  object oriented model discussed lecluse richard        
reasoning strict sublanguage aluni obtained omitting inverse roles
number restrictions already exptime hard  calvanese      b   therefore  known
algorithms deciding unrestricted concept consistency subsumption finite concept
consistency essentially optimal 
   conclusions

presented unified framework representing information class structures
reasoning them  pursued goal looking various class based
formalisms proposed different fields computer science  namely frame based systems
used knowledge representation  semantic object oriented data models used
databases  rephrasing framework description logics  resulting description logic  called aluni includes combination constructs addressed
before  although constructs previously considered separately 
major achievement paper demonstration class based formalisms
given precise characterization means powerful fragment first order logic 
thus regarded essential core class based representation formalisms
belonging three families mentioned above  several consequences 
first all  formalisms considered paper enriched constructs
originating formalisms treated general framework  sense 
work reported provides common powerful representation formalism 
may contribute significant developments languages belonging three
families  example  usage inverse roles concept languages greatly enhances
expressivity roles  combination isa  number restrictions  union enriches
reasoning capabilities available semantic data models 
secondly  comparison class based formalisms fields knowledge representation conceptual data modeling makes feasible address development
reasoning tools support conceptual modeling  calvanese et al          fact  reasoning capabilities become especially important complex scenarios arising
heterogenous database applications data warehousing  line work among
motivations developing systems based expressive description logics  horrocks 
      horrocks   patel schneider         lead extending language
description logics support information integration and  specifically  conceptual
modeling data warehouses  calvanese  de giacomo  lenzerini  nardi    rosati        
   

fiunifying class based representation formalisms
references

abiteboul  s   kanellakis  p   ramaswamy  s     waller  e          method schemas  tech 
rep  cs        brown university  earlier version appeared
 
abiteboul  s     kanellakis  p          object identity query language primitive 
proceedings acm sigmod international conference management data 
pp          
abrial  j  r          data semantics  klimbie  j  w     koffeman  k  l   eds    data
base management  pp        north holland publ  co   amsterdam 
albano  a   ghelli  g     orsini  r          relationship mechanism strongly typed
object oriented database programming languages  proceedings seventeenth international conference large data bases  vldb      pp         
barcelona 
artale  a   cesarini  f     soda  g          describing database objects concept
language environment  ieee transactions knowledge data engineering        
        
atzeni  p     parker jr   d  s          formal properties net based knowledge representation schemes  proceedings second ieee international conference data
engineering  icde      pp          los angeles 
baader  f          augmenting concept languages transitive closure roles  alternative terminological cycles  proceedings twelfth international joint
conference artificial intelligence  ijcai     sydney  australia 
baader  f          using automata theory characterizing semantics terminological
cycles  annals mathematics artificial intelligence              
batini  c   ceri  s     navathe  s  b          conceptual database design  entityrelationship approach  benjamin cummings publ  co   menlo park  california 
bergamaschi  s     nebel  b          acquisition validation complex object database
schemata supporting multiple inheritance  applied intelligence                 
bergamaschi  s     sartori  c          taxonomic reasoning conceptual design  acm
transactions database systems                  
blasius  k  h   hedstuck  u     rollinger  c  r   eds            sorts types artificial
intelligence  vol      lecture notes artificial intelligence  springer verlag 
borgida  a          type systems knowledge representation  natural semantics
specifications description logics  journal intelligent cooperative information
systems                
borgida  a          description logics data management  ieee transactions knowledge data engineering                 
proc   th

symp  principles database systems pods   

   

ficalvanese  lenzerini    nardi

borgida  a          relative expressiveness description logics predicate logics 
artificial intelligence              
borgida  a     weddell  g  e          adding functional dependencies description logics 
proceedings fifth international conference deductive object oriented
databases  dood     
brachman  r  j     levesque  h  j          tractability subsumption frame based
description languages  proceedings fourth national conference artificial
intelligence  aaai      pp        
brachman  r  j     levesque  h  j   eds            readings knowledge representation 
morgan kaufmann  los altos 
brachman  r  j   mcguinness  d  l   patel schneider  p  f   alperin resnick  l     borgida 
a          living classic  use kl one like language 
sowa  j  f   ed    principles semantic networks  pp           morgan kaufmann 
los altos 
bresciani  p   franconi  e     tessaris  s          implementing testing expressive
description logics  preliminary report  borgida  a   lenzerini  m   nardi  d    
nebel  b   eds    working notes      description logics workshop  technical
report  rap        dipartimento di informatica e sistemistica  universita di roma
 la sapienza   pp          rome  italy  
buchheit  m   donini  f  m   nutt  w     schaerf  a          refined architecture
terminological systems  terminology   schema   views  artificial intelligence         
        
buchheit  m   donini  f  m     schaerf  a          decidable reasoning terminological
knowledge representation systems  journal artificial intelligence research         
    
calvanese  d       a   finite model reasoning description logics  aiello  l  c   doyle 
j     shapiro  s  c   eds    proceedings fifth international conference
principles knowledge representation reasoning  kr      pp           morgan
kaufmann  los altos 
calvanese  d       b   reasoning inclusion axioms description logics  algorithms
complexity  wahlster  w   ed    proceedings twelfth european conference artificial intelligence  ecai      pp           john wiley   sons 
calvanese  d       c   unrestricted finite model reasoning classbased representation formalisms 
ph d  thesis  dipartimento di informatica e sistemistica  universita di roma  la sapienza   available
http   www dis uniroma  it pub calvanes thesis ps gz 
calvanese  d   de giacomo  g   lenzerini  m   nardi  d     rosati  r          description
logic framework information integration  proceedings sixth international
   

fiunifying class based representation formalisms
conference principles knowledge representation reasoning  kr     

pp 
     
calvanese  d     lenzerini  m       a   making object oriented schemas expressive 
proceedings thirteenth acm sigact sigmod sigart symposium
principles database systems  pods      pp          minneapolis  acm press
addison wesley 
calvanese  d     lenzerini  m       b   interaction isa cardinality
constraints  proceedings tenth ieee international conference data
engineering  icde      pp          houston  texas   ieee computer society press 
calvanese  d   lenzerini  m     nardi  d          unified framework class based representation formalisms  doyle  j   sandewall  e     torasso  p   eds    proceedings
fourth international conference principles knowledge representation
reasoning  kr      pp          bonn  morgan kaufmann  los altos 
calvanese  d   lenzerini  m     nardi  d          description logics conceptual data
modeling  chomicki  j     saake  g   eds    logics databases information
systems  pp           kluwer academic publisher 
casanova  m  a   fagin  r     papadimitriou  c  h          inclusion dependencies
interaction functional dependencies  journal computer system
sciences                
cattell  r  g  g   ed            object database standard  odmg     morgan kaufmann  los altos  release     
cattell  r  g  g     barry  d  k   eds            object database standard  odmg
     morgan kaufmann  los altos 
chandra  a  k     vardi  m  y          implication problem functional inclusion
dependencies undecidable  siam journal computing                  
chen  p  p          entity relationship model  toward unified view data  acm
transactions database systems              
cosmadakis  s  s     kanellakis  p  c          functional inclusion dependencies  
graph theoretical approach  kanellakis  p  c     preparata  f  p   eds    advances
computing research  vol     pp           jai press 
cosmadakis  s  s   kanellakis  p  c     vardi  m          polynomial time implication
problems unary inclusion dependencies  journal acm                
de giacomo  g     lenzerini  m       a   boosting correspondence description logics propositional dynamic logics  proceedings twelfth national
conference artificial intelligence  aaai      pp           aaai press the mit
press 
   

ficalvanese  lenzerini    nardi

de giacomo  g     lenzerini  m       b   concept language number restrictions
fixpoints  relationship  calculus  proceedings eleventh european
conference artificial intelligence  ecai      pp          
di battista  g     lenzerini  m          deductive entity relationship modeling  ieee
transactions knowledge data engineering                 
donini  f  m   lenzerini  m   nardi  d     nutt  w          complexity concept
languages  information computation            
donini  f  m   lenzerini  m   nardi  d   nutt  w     schaerf  a          queries  rules
definitions  foundations knowledge representation reasoning  springerverlag 
donini  f  m   lenzerini  m   nardi  d     schaerf  a          reasoning description
logics  brewka  g   ed    principles knowledge representation  studies logic 
language information  pp           csli publications 
donini  f  m   nardi  d     rosati  r          non first order features concept languages  gori  m     soda  g   eds    proceedings fourth conference
italian association artificial intelligence  ai ia      vol      lecture notes
artificial intelligence  pp          springer verlag 
ferg  s          cardinality concepts entity relationship modeling  proceedings
tenth international conference entity relationship approach  er      pp 
     
fikes  r     kehler  t          role frame based representation reasoning  communications acm                  
fischer  m  j     ladner  r  e          propositional dynamic logic regular programs 
journal computer system sciences              
grant  j     minker  j          numerical dependencies  gallaire  h   minker  j    
nicolas  j  m   eds    advances database theory ii  plenum publ  co   new york 
hayes  p  j          logic frames  metzing  d   ed    frame conceptions text
understanding  pp         walter de gruyter co  republished  brachman  
levesque        
horrocks  i          using expressive description logic  fact fiction   proceedings
sixth international conference principles knowledge representation
reasoning  kr      pp          
horrocks  i     patel schneider  p  f          optimizing description logic subsumption 
journal logic computation                 
hull  r  b     king  r          semantic database modelling  survey  applications
research issues  acm computing surveys                  
   

fiunifying class based representation formalisms

karp  p  d          design space knowledge representation systems  tech  rep  sri
ai technical note      sri international  menlo park  ca 
karp  p  d   myers  k  l     gruber  t          generic frame protocol  proceedings
fourteenth international joint conference artificial intelligence  ijcai     
vol  a  pp          montreal  canada 
kifer  m   lausen  g     wu  j          logical foundations object oriented framebased languages  journal acm                  
kifer  m     wu  j          logic programming complex objects  journal
computer system sciences             
kim  w          introduction object oriented databases  mit press 
kim  w     lochovsky  f  h   eds            object oriented concepts  databases 
applications  acm press addison wesley  new york 
kozen  d     tiuryn  j          logics programs  van leeuwen  j   ed    handbook
theoretical computer science   formal models semantics  pp           elsevier
science publishers  north holland   amsterdam 
lecluse  c     richard  p          modeling complex structures object oriented databases 
proceedings eighth acm sigact sigmod sigart symposium principles database systems  pods      pp          
lehmann  f   ed            semantic networks artificial intelligence  pergamon press 
oxford 
lenzerini  m   nardi  d     simi  m   eds            inheritance hierarchies knowledge
representation programming languages  john wiley   sons  chichester 
lenzerini  m     nobili  p          satisfiability dependency constraints entityrelationship schemata  information systems                  
mitchell  j  c          implication problem functional inclusion dependencies 
information control              
motschnig pitrik  r     mylopoulous  j          classes instances  journal intelligent cooperative information systems        
nebel  b          terminological cycles  semantics computational properties  sowa 
j  f   ed    principles semantic networks  pp           morgan kaufmann  los
altos 
piza  b   schewe  k  d     schmidt  j  w          term subsumption type constructors  yesha  y   ed    proceedings international conference information
knowledge management  cikm      pp          baltimore 
   

ficalvanese  lenzerini    nardi

schild  k          correspondence theory terminological logics  preliminary report 
proceedings twelfth international joint conference artificial intelligence
 ijcai      pp          sydney  australia 
schild  k          terminological cycles propositional  calculus  doyle  j  
sandewall  e     torasso  p   eds    proceedings fourth international conference principles knowledge representation reasoning  kr      pp 
        bonn  morgan kaufmann  los altos 
schmidt schau  m     smolka  g          attributive concept descriptions complements  artificial intelligence               
sowa  j  f   ed            principles semantic networks  morgan kaufmann  los altos 
teorey  t  j          database modeling design  entity relationship approach 
morgan kaufmann  los altos 
thalheim  b          fundamentals cardinality constraints  pernoul  g     tjoa 
a  m   eds    proceedings eleventh international conference entityrelationship approach  er      pp        springer verlag 
thalheim  b          fundamentals entity relationship model  springer verlag 
vardi  m  y          taming converse  reasoning two way computations 
parikh  r   ed    proc   th workshop logics programs  vol     
lecture notes computer science  pp           springer verlag 
woods  w  a     schmolze  j  g          kl one family  lehmann  f  w   ed   
semantic networks artificial intelligence  pp           pergamon press  published
special issue computers   mathematics applications  volume     number
    
ye  x   parent  c     spaccapietra  s          cardinality consistency derived objects
dood systems  loucopoulos  p   ed    proceedings thirteenth international
conference entity relationship approach  er      vol      lecture notes
computer science  pp          manchester  uk   springer verlag 

   


