journal of artificial intelligence research                  

submitted       published     

unifying class based representation formalisms

calvanese dis uniroma  it
lenzerini dis uniroma  it
nardi dis uniroma  it

diego calvanese
maurizio lenzerini
daniele nardi

dipartimento di informatica e sistemistica
universita di roma  la sapienza 
via salaria      i       roma  italy
abstract

the notion of class is ubiquitous in computer science and is central in many formalisms
for the representation of structured knowledge used both in knowledge representation and
in databases  in this paper we study the basic issues underlying such representation formalisms and single out both their common characteristics and their distinguishing features 
such investigation leads us to propose a unifying framework in which we are able to capture the fundamental aspects of several representation languages used in different contexts 
the proposed formalism is expressed in the style of description logics  which have been
introduced in knowledge representation as a means to provide a semantically well founded
basis for the structural aspects of knowledge representation systems  the description logic
considered in this paper is a subset of first order logic with nice computational characteristics  it is quite expressive and features a novel combination of constructs that has not been
studied before  the distinguishing constructs are number restrictions  which generalize existence and functional dependencies  inverse roles  which allow one to refer to the inverse of
a relationship  and possibly cyclic assertions  which are necessary for capturing real world
domains  we are able to show that it is precisely such combination of constructs that makes
our logic powerful enough to model the essential set of features for defining class structures
that are common to frame systems  object oriented database languages  and semantic data
models  as a consequence of the established correspondences  several significant extensions
of each of the above formalisms become available  the high expressiveness of the logic we
propose and the need for capturing the reasoning in different contexts forces us to distinguish between unrestricted and finite model reasoning  a notable feature of our proposal is
that reasoning in both cases is decidable  we argue that  by virtue of the high expressive
power and of the associated reasoning capabilities on both unrestricted and finite models 
our logic provides a common core for class based representation formalisms 
   introduction

in many fields of computer science we find formalisms for the representation of objects and
classes  motschnig pitrik   mylopoulous         generally speaking  an object denotes an
element of the domain of interest  and a class denotes a set of objects with common characteristics  we use the term  class based representation formalism  to refer to a formalism
that allows one to express several kinds of relationships and constraints  e g   subclass constraints  holding among the classes that are meaningful in a set of applications  moreover 
class based formalisms aim at taking advantage of the class structure in order to provide
various information  such as whether a class is consistent  i e   it admits at least one object 
whether a class is a subclass of another class  and more generally  whether a given constraint
c      ai access foundation and morgan kaufmann publishers  all rights reserved 

ficalvanese  lenzerini    nardi

holds between a given set of classes  from the above characterization  it should be clear
that the formalisms referred to in this paper deal only with the structural aspects of objects
and classes  and do not include any features for the specification of behavioral properties of
objects 
three main families of class based formalisms are identified in this paper  the first one
comes from knowledge representation and in particular from the work on semantic networks
and frames  see for example lehmann        sowa         the second one originates in
the field of databases and in particular from the work on semantic data models  see for
example hull   king         the third one arises from the work on types in programming
languages and object oriented systems  see for example kim   lochovsky        
in the past there have been several attempts to establish relationships among the various
families of class based formalisms  see section   for a brief survey   the proposed solutions
are not fully general and a formalism capturing both the modeling constructs and the
reasoning techniques for all the above families is still missing  in this paper we address this
problem by proposing a class based representation formalism  based on description logics
 brachman   levesque        schmidt schau   smolka        donini  lenzerini  nardi 
  schaerf         and by using it for comparing other formalisms 
in description logics  structured knowledge is described by means of so called concepts
and roles  which denote unary and binary predicates  respectively  starting from a set of
atomic symbols one can build complex concept and role expressions by applying suitable
constructors which characterize a description logic  formally  concepts are interpreted as
subsets of a domain and roles as binary relations over that domain  and all constructs
are equipped with a precise set theoretic semantics  the most common constructs include
boolean operations on concepts  and quantification over roles  for example  the concept
person u  child male  denotes the set of individuals that are instances of the concept
person and are connected through the role child only to instances of the concept male 
while the concept  child denotes all individuals that are connected through the role child
to some individual  further constructs that have been considered important include more
general forms of quantification  number restrictions  which allow one to state limits on the
number of connections that an individual may have via a certain role  and constructs on
roles  such as intersection  concatenation and inverse  a description logic knowledge base 
expressing the intensional knowledge about the modeled domain  is built by stating inclusion
assertions between concepts  which have to be satisfied by the models of the knowledge base 
the assertions are used to specify necessary and or necessary and sucient conditions for
individuals to be instances of certain concepts  reasoning on such knowledge bases includes
the detection of inconsistencies in the knowledge base itself  determining whether a concept
can be populated in a model of the knowledge base  and checking subsumption  i e   whether
all instances of a concept are necessarily also instances of another concept in all models of
the knowledge base 
in this paper we propose a description logic called aluni  which is quite expressive
and includes a novel combination of constructs  including number restrictions  inverse roles 
and inclusion assertions with no restrictions on cycles  such features make aluni powerful
enough to provide a unified framework for frame systems  object oriented languages  and
semantic data models  we show this by establishing a precise correspondence with a framebased language in the style of the one proposed by fikes and kehler         with the
   

fiunifying class based representation formalisms

entity relationship model  chen         and with an object oriented language in the style
of the one introduced by abiteboul and kanellakis         more specifically  we identify
the most relevant features to model classes in each of the cited settings and show that
a specification in any of those class based formalisms can be equivalently expressed as a
knowledge base in aluni  in this way  we are able to identify which are the commonalities
among the families and which are the specificities of each family  therefore  even though
there are specific features of every family that are not addressed by aluni  we are able
to show that the formalism proposed in this paper provides important features that are
currently missing in each family  although their relevance has often been stressed  in this
sense  our unifying framework points out possible developments for the languages belonging
to all the three families 
one fundamental reason for regarding aluni as a unifying framework for class based
representation formalisms is that reasoning in aluni is hard  but nonetheless decidable  as
shown by calvanese  lenzerini  and nardi         calvanese      c   consequently  the
language features arising from different frameworks to build class based representations are
not just given a common semantic account  but are combined in a more expressive setting
where one retains the capability of solving reasoning tasks  the combination of constructs
included in the language makes it necessary to distinguish between reasoning with respect to
finite models  i e   models with a finite domain  and reasoning with respect to unrestricted
models  calvanese      c  devises suitable techniques for both unrestricted and finite model
reasoning  that enable for reasoning in the different contexts arising from assuming a finite
domain  as it is often the case in the field of databases  or assuming that a domain can also
be infinite  in the paper  we discuss the results on reasoning in aluni  and compare them
with other results on reasoning in class based representation formalisms 
summarizing  our framework provides an adequate expressive power to account for
the most significant features of the major families of class based formalisms  moreover  it
is equipped with suitable techniques for reasoning in both finite and unrestricted models 
therefore  we believe that aluni captures the essential core of the class based representation
formalisms belonging to all three families mentioned above 
the paper is organized as follows  in the next section we present our formalism and
in sections       and   we discuss three families of class based formalisms  namely  frame
languages  semantic data models  and object oriented data models  showing that their basic
features are captured by knowledge bases in aluni  the final sections contain a review of
related work  including a discussion of reasoning in aluni and class based formalism  and
some concluding remarks 
   a unifying class based representation language

in this section  we present aluni  a class based formalism in the style of description logics
 dls   brachman   levesque        schmidt schau   smolka        donini et al        
donini  lenzerini  nardi    nutt         in dls the domain of interest is modeled by means
of concepts and roles  which denote classes and binary relations  respectively  generally
speaking  a dl is formed by three basic components 
 a description language  which specifies how to construct complex concept and role
expressions  also called simply concepts and roles   by starting from a set of atomic
   

ficalvanese  lenzerini    nardi
construct

atomic concept
atomic negation
conjunction
disjunction
universal quantification
number restrictions
atomic role
inverse role

syntax
a
 a
c  u c 
c  t c 
 r c
 nr
 nr
p
p

semantics
ai  i
i n ai
c i   c i
c i   c i
fo j  o     o  o      ri   o    c i g
fo j  fo  j  o  o      ri g  ng 
fo j  fo  j  o  o      ri g  ng
p i  i  i
f o  o    j  o    o    p i g

table    syntax and semantics of aluni
symbols and by applying suitable constructors  it is the set of allowed constructs that
characterizes the description language 
 a knowledge specification mechanism  which specifies how to construct a dl knowledge base  in which properties of concepts and roles are asserted 
 a set of basic reasoning tasks provided by the dl 
in the rest of the section we describe the specific form that these three components assume
in aluni 
    the description language of

aluni

in the description language of aluni  called aluni   concepts and roles are formed according to the syntax shown in table    where a denotes an atomic concept  p an atomic
role  c an arbitrary concept expression  r an arbitrary role expression  and n a nonnegative integer  to increase readability of concept expressions  we also introduce the following
abbreviations 
   a t  a  for some atomic concept a
   a u  a  for some atomic concept a
 r    r
  nr   nr u  nr

concepts are interpreted as subsets of a domain and roles as binary relations over that
domain  intuitively   a represents the negation of an atomic concept  and is interpreted
as the complement with respect to the domain of interpretation  c  u c  represents the
conjunction of two concepts and is interpreted as set intersection  while c  t c  represents
disjunction and is interpreted as set union  consequently    represents the whole domain 
    s denotes the cardinality of a set s  

   

fiunifying class based representation formalisms

and   the empty set   r c is called universal quantification over roles and is used to
denote those elements of the interpretation domain that are connected through role r only
to instances of the concept c    nr and  nr are called number restrictions  and impose
on their instances restrictions on the minimum and maximum number of objects they are
connected to through role r  p   called the inverse of role p   represents the inverse of the
binary relation denoted by p  
more formally  an interpretation i    i   i   consists of an interpretation domain i
and an interpretation function i that maps every concept c to a subset c i of i and
every role r to a subset ri of i  i according to the semantic rules specified in table   
the sets c i and ri are called the extensions of c and r respectively 
example     consider the concept expression
 enrolls student u   enrolls u     enrolls u
 teaches   professor t gradstudent  u    teaches u
 advcourse

specifying the constraints for an object to be a university course  the expression reects the
fact that each course enrolls only students  and restrictions on the minimum and maximum
number of enrolled students  by using the role teaches and the inverse constructor we
can state the property that each course is taught by exactly one individual  who is either a
professor or a graduate student  finally  negation is used to express disjointness from the
concept denoting advanced courses 
    knowledge bases in

aluni

an aluni knowledge base  which expresses the knowledge about classes and relations of the
modeled domain  is formally defined as a triple k    a  p   t    where a is a finite set of
atomic concepts  p is a finite set of atomic roles  and t is a finite set of so called inclusion
assertions  each such assertion has the form
a   c
where a is an atomic concept and c an arbitrary concept expression  such an inclusion
assertion states by means of the concept c necessary properties for an element of the domain
in order to be an instance of the atomic concept a  formally  an interpretation i satisfies
the inclusion assertion a   c if ai  c i   an interpretation i is a model of a knowledge
base k if it satisfies all inclusion assertions in k  a finite model is a model with finite
domain 
example      cont   the assertion
   enrolls student u   enrolls u    enrolls u
course 
 teaches   professor t gradstudent  u    teaches
makes use of a complex concept expression to state necessary conditions for an object to
be an instance of the concept course 
   

ficalvanese  lenzerini    nardi

in aluni no restrictions are imposed on the form that the inclusion assertions may
assume  in particular we do not rule out cyclic assertions  i e   assertions in which the
concept expression on the right hand side refers  either directly or indirectly via other
assertions  to the atomic concept on the left hand side  in the presence of cyclic assertions
different semantics may be adopted  nebel         the one defined above  called descriptive
semantics  accepts all interpretations that satisfy the assertions in the knowledge base  and
hence interprets assertions as constraints on the domain to be modeled  for inclusion
assertions  descriptive semantics has been claimed to provide the most intuitive results
 buchheit  donini  nutt    schaerf         alternative semantics which have been proposed
are based on fixpoint constructions  nebel        schild        de giacomo   lenzerini 
    b   and hence allow to define in a unique way the interpretation of concepts 
in general  cycles in the knowledge base increase the complexity of reasoning  nebel 
      baader        calvanese      b  and require a special treatment by reasoning procedures  baader        buchheit  donini    schaerf         for this reason  many dl based
systems assume the knowledge base to be acyclic  brachman  mcguinness  patel schneider 
alperin resnick    borgida        bresciani  franconi    tessaris         however  this assumption is unrealistic in practice  and cycles are definitely necessary for a correct modeling
in many application domains  indeed  the use of cycles is allowed in all data models used
in databases  and  as shown in the following sections  in order to capture their semantics in
aluni the possibility of using cyclic assertions is fundamental 
besides inclusion assertions  some dl based systems also make use of equivalence assertions  buchheit et al          which express both necessary and sucient conditions for
an object to be an instance of a concept  although this possibility is ruled out in aluni 
this does not limit its ability of capturing both frame based systems and database models 
where the constraints that can be expressed correspond naturally to inclusion assertions 
    reasoning in

aluni

the basic tasks we consider when reasoning over an aluni knowledge base are concept
consistency and concept subsumption 
 concept consistency is the problem of deciding whether a concept c is consistent in
a knowledge base k  written as k  j  c      i e   whether k admits a model i such
that c i      
 concept subsumption is the problem of deciding whether a concept c  is subsumed by
a concept c  in a knowledge base k  written as k j  c   c    i e   whether c i  c i
for each model i of k 
the inclusion of number restrictions and inverse roles in aluni and the ability in
aluni of using arbitrary  possibly cyclic inclusion assertions allows one to construct a knowledge base in which a certain concept is consistent but has necessarily an empty extension
in all finite models of the knowledge base  similarly  a subsumption relation between two
concepts may hold only if infinite models of the knowledge base are ruled out and only finite
models are considered 
   

fiunifying class based representation formalisms
keven    a p t    where
a   fnumber eveng 
p   fdoublesg 
and the set t of assertions consists of 
 

 

 

number
even

   doubles u  doubles  even
  number u    doubles u  doubles number

figure    an aluni knowledge base with two concepts that are equivalent in all finite
models
let keven be the knowledge base shown in figure    intuitively  the assertions in keven state that for each number there is an even number which doubles it  and
that all numbers which double it are even  each even number is a number  doubles at most
one number  and doubles only numbers  observe that for any model i of keven   the universal quantifications together with the functionality of doubles in the assertions imply that
 eveni   numberi   while the direct inclusion assertion between even and number implies
that  eveni   numberi   therefore  the two concepts have the same cardinality  and since
one is a sub concept of the other  if the domain is finite  their extensions coincide  this
does not necessarily hold for infinite domains  in fact  the names we have chosen suggest
already an infinite model of the knowledge base in which number and even are interpreted
differently  the model is obtained by taking the natural numbers as domain  and interpreting number as the whole domain  even as the even numbers  and doubles as the set
f  n  n  j n   g 
the example above shows that aluni does not have the finite model property  which
states that if a concept is consistent in a knowledge base then the knowledge base admits
a finite model in which the concept has a nonempty extension  therefore  it is important
to distinguish between reasoning with respect to unrestricted models and reasoning with
respect to finite models  we call  unrestricted  concept consistency  written as k  j u c 
   and  unrestricted  concept subsumption  written as k j u a  c   the reasoning tasks
as described above  i e   carried out without restricting the attention to finite models  the
corresponding reasoning tasks carried out by considering finite models only  are called finite
concept consistency  written as k  j f c     and finite concept subsumption  written as
k j f a  c   
example      cont   summing up the previous considerations  we can say that number is
not subsumed by even in keven   i e   keven  j u number  even  but is finitely subsumed  i e  
keven j f number  even  equivalently numberu even is consistent in keven   i e   keven  j u
number u even     but is not finitely consistent  i e   keven j f number u even    
a distinguishing feature of aluni is that reasoning both in the finite and in the unrestricted case is decidable  in particular  unrestricted concept satisfiability and concept
subsumption are decidable in deterministic exponential time  de giacomo   lenzerini 
example    

   

ficalvanese  lenzerini    nardi

    a  calvanese et al          and since reasoning in strict sublanguages of aluni is already exptime hard  calvanese      c   the known algorithms are computationally optimal  finite concept consistency in aluni is also decidable in deterministic exponential time
while finite concept subsumption  in the general case  is decidable in deterministic double
exponential time  calvanese      c   a more precise discussion on the methods for reasoning in aluni is provided in section      while a detailed account of the adopted algorithms
and an analysis of their computational complexity is presented by calvanese      c  
in the next sections we show how the two forms of reasoning with respect to unrestricted
and finite models  capture the reasoning tasks that are typically considered in different
formalisms for the structured representation of knowledge 
   frame based systems

frame languages are based on the idea of expressing knowledge by means of frames  which
are structures representing classes of objects in terms of the properties that their instances
must satisfy  such properties are defined by the frame slots  that constitute the items of a
frame definition  since the   s a large number of frame systems have been developed  with
different goals and different features  dls bear a close relationship with the kl one family
of frame systems  woods   schmolze         however  here we would like to consider frame
systems from a more general perspective  as discussed for example by karp         karp 
myers  and gruber         and establish the correspondence with aluni knowledge bases
in this context 
we remark that we are restricting our attention to those aspects that are related to
the taxonomic structure  moreover  as discussed below  we consider assertional knowledge
bases  where intensional knowledge is characterized in terms of inclusion assertions rather
than definitions  in addition  we do not consider those features that cannot be captured in
a first order framework  such as default values in the slots  attached procedures  and the
specification of overriding inheritance policies  some of the issues concerning the modeling
of these aspects in dls are addressed by donini  lenzerini  nardi  nutt  and schaerf        
donini  nardi  and rosati         within a modal nonmonotonic extension of dls 
    syntax of frame based systems

to make the correspondence precise  we need to fix syntax and semantics for the frame
systems we consider  unfortunately  there is no accepted standard and we have chosen to
use here basically the notation adopted by fikes and kehler         which is used also in
the kee  system 
a frame knowledge base  denoted by f   is formed by a set of frame and
slot names  and is constituted by a set of frame definitions of the following form 
definition    

frame   f in kb f e 
   kee is a trademark of intellicorp  note that a kee user does not directly specify her knowledge base
in this notation  but is allowed to define frames interactively via the graphical system interface 

   

fiunifying class based representation formalisms
  course in kb university
  enrolls
valueclass  student
cardinality min   
cardinality max    
memberslot  taughtby
valueclass   union gradstudent
professor 
cardinality min   
cardinality max   

frame

  bascourse in kb university
  course
memberslot  taughtby
valueclass  professor

frame

memberslot

superclasses

  professor in

frame

  student in

frame

kb

university

university

  gradstudent in kb university
  student
memberslot  degree
valueclass  string
cardinality min   
cardinality max   

frame

superclasses

  advcourse in kb university
  course
memberslot  enrolls
valueclass   intersection

frame

superclasses

gradstudent
 not undergrad  

kb

  undergrad in kb university
  student

frame

superclasses

    

cardinality max

figure    a kee knowledge base
where e is a frame expression  i e   an expression formed according to the following syntax 
e   superclasses   f            fh
memberslot   s 
valueclass   h 
cardinality min   m 
cardinality max   n 

memberslot   sk
valueclass   hk
cardinality min   mk
cardinality max   nk
f and s denote frame and slot names  respectively  m and n denote positive integers  and
h denotes slot constraint  which can be specified as follows 
h

  fj

 intersection h  h   j
 union h  h   j
 not h  

for readers that are familiar with the kee system  we point out that we omit the
specification of the sub classes for a frame present in kee  since it can be directly derived
from the specification of the super classes 
example     figure   shows a simple example of a knowledge base modeling the situation
at an university expressed in the frame language we have presented  the frame course
   

ficalvanese  lenzerini    nardi

represents courses which enroll students and are taught either by graduate students or
professors  cardinality restrictions are used to impose a minimum and maximum number
of students that may be enrolled in a course  and to express that each course is taught by
exactly one individual  the frame advcourse represents courses which enroll only graduate
students  i e   students who already have a degree  basic courses  on the other hand  may
be taught only by professors 
    semantics of frame based systems

to give semantics to a set of frame definitions we resort to their interpretation in terms of
first order predicate calculus  hayes         according to such interpretation  frame names
are treated as unary predicates  while slots are considered binary predicates 
a frame expression e is interpreted as a predicate logic formula e  x   which has one
free variable  and consists of the conjunction of sentences  obtained from the super class
specification and from each slot specification  in particular  for the super classes f            fh
we have 
f   x            fh  x 
and for a slot specification
memberslot   s
valueclass   h
cardinality min   m
cardinality max   n
we have
 y   s  x  y   vh  y    
 y           ym     i  j yi    yj     s  x  y           s  x  ym     
 y           yn      s  x  y           s  x  yn       wi  j yi   yj   
under the assumption that within one frame definition the occurrences of x refer to the same
free variable  finally the constraints on the slots are interpreted as conjunction  disjunction
and negation  respectively  i e  
 intersection h  h   is interpreted as h  x    h  x 
 union h  h  
is interpreted as h  x    h  x 
 not h  
is interpreted as  h  x 
a frame definition
frame   f in kb f e
is then considered as the universally quantified sentence of the form
 x  f  x    e  x   
the whole frame knowledge base f is considered as the conjunction of all first order sentences corresponding to the frame definitions in f  
here we regard frame definitions as necessary conditions  which is commonplace in the
frame systems known as assertional frame systems  as opposed to definitional systems 
where frame definitions are interpreted as necessary and sucient conditions 
   

fiunifying class based representation formalisms

in order to enable the comparison with our formalisms for representing structured knowledge we restrict our attention to the reasoning tasks that involve the frame knowledge base 
independently of the assertional knowledge  i e   the frames instances  fikes and kehler
       mention several reasoning services associated with frames  such as 
 consistency checking  which amounts to verifying whether a frame f is satisfiable
in a knowledge base  in particular  this involves both reasoning on cardinalities and
checking whether the filler of a given slot belongs to a certain frame 
 inheritance  which  in our case  amounts to the ability of identifying which of the
frames are more general than a given frame  sometimes called all super of  karp
et al          all the properties of the more general frames are then inherited by the
more specific one  such a reasoning is therefore based on the more general ability to
check the mutual relationhips between frame descriptions in the knowledge base 
these reasoning services are formalized in the first order semantics as follows 
definition     let f be a frame knowledge base and f a frame in f   we say that f is
consistent in f if the first order sentence f    x f  x  is satisfiable  moreover  we say that
a frame description e is more general than f in f if f j   x  f  x    e  x   
    relationship between frame based systems and

aluni

the first order semantics given above allows us to establish a straightforward relationship
between frame languages and aluni  indeed  we now present a translation from frame
knowledge bases to aluni knowledge bases 
we first define the function  that maps each frame expression into an aluni concept
expression as follows 
 every frame name f is mapped into an atomic concept  f   
 every slot name s is mapped into an atomic role  s   
 every slot constraint is mapped as follows
 union h  h  
is mapped into  h   t  h   
 intersection h  h   is mapped into  h   u  h   
 not h  
is mapped into   h   
 every frame expression of the form
superclasses   f            fh
memberslot   s 
valueclass   h 
cardinality min   m 
cardinality max   n 

memberslot   sk
valueclass   hk
cardinality min   mk
cardinality max   nk
   

ficalvanese  lenzerini    nardi
k    a p t    where
a   fcourse advcourse bascourse professor student gradstudent undergrad stringg 
p   fenrolls taughtby degreeg 
and the set t of assertions consists of 
 

 

 

 

 

course
advcourse
bascourse
gradstudent
undergrad

 

 

 

 

 

 

   enrolls student u    enrolls u     enrolls u
 taughtby  professor t gradstudent  u     taughtby
  course u  enrolls  gradstudent u  undergrad  u     enrolls
  course u  taughtby professor
  student u  degree string u     degree
  student

figure    the aluni knowledge base corresponding to the kee knowledge base in figure  
is mapped into the class expression
 f    u    u  fh   u
  s    h   u  m  s   u  n  s   u

  sk    hk   u  mk  sk   u  nk  sk  
 

 

this mapping allows us to translate a frame knowledge base into an aluni knowledge base 
as specified in the following definition 
the aluni knowledge base  f      a  p   t   corresponding to a frame
knowledge base f is obtained as follows 
 a consists of one atomic concept  f   for each frame name f in f  
 p consists of one atomic role  s   for each slot name s in f  
 t consists of an inclusion assertion
 f      e  
for each frame definition
frame   f in kb f e
in f  
definition    

example      cont   we illustrate the translation on the frame knowledge base in figure    the corresponding aluni knowledge base is shown in figure   
   

fiunifying class based representation formalisms

the correctness of the translation follows from the correspondence between the settheoretic semantics of aluni and the first order interpretation of frames  see for example
hayes        borgida        donini et al          we can observe that inverse roles are in
fact not necessary for the formalization of frames  indeed  the possibility of referring to the
inverse of a slot has been rarely considered in frame knowledge representation systems  some
exceptions are reported in karp         due to the absence of inverse roles the distinction
between reasoning in finite and unrestricted models is not necessary    consequently  all
the above mentioned forms of reasoning are captured by unrestricted concept consistency
and concept subsumption in aluni knowledge bases  this is summarized in the following
theorem 
theorem     let f be a frame knowledge base  f be a frame in f   e be a frame description  and  f     f    and  e   be their translations in aluni  then the following
hold 

 f is consistent in f if and only if  f    j u  f      
 e is more general than f in f if and only if  f   j u  f     e   

the claim directly follows from the semantics of frame knowledge bases and the
translation into dls that we have adopted 
by theorem     it becomes possible to exploit the methods for unrestricted reasoning
on aluni knowledge bases in order to reason on frame knowledge bases  since the problem
of reasoning  e g   in kee is already exptime complete  we do not pay in terms of computational complexity for the expressiveness added by the constructs of aluni  in fact  by
resorting to the correspondence with aluni it becomes possible to add to frame systems
useful features  such as the possibility of specifying the inverse of a slot  karp         and
still retain the ability to reason in exptime 
proof 

   semantic data models

semantic data models were introduced primarily as formalisms for database schema design 
they provide a means to model databases in a much richer way than traditional data
models supported by database management systems  and are becoming more and more
important because they are adopted in most of the recent database design methodologies
and computer aided software engineering tools 
the most widespread semantic data model is the entity relationship  er  model introduced by chen         it has by now become a standard  extensively used in the design
phase of commercial applications  in the commonly accepted er notation  classes are called
entities and are represented as boxes  whereas relationships between entities are represented
as diamonds  arrows between entities  called isa relationships  represent inclusion assertions  the links between entities and relationships represent the er roles  to which number
restrictions are associated  dashed links are used whenever such restrictions are refined for
more specific entities  finally  elementary properties of entities are modeled by attributes 
   if we eliminate from

aluni inverse roles  then the resulting dl has the finite model property 
   

ficalvanese  lenzerini    nardi

whose values belong to one of several predefined domains  such as integer  string  or
boolean 
the er model does not provide constructs for expressing explicit disjointness or disjunction of entities  but extensions of the model allow for the use of generalization hierarchies
which represent a combination of these two constructs  in order to keep the presentation simple  we do not consider generalization hierarchies in the formalization we provide 
although their addition would be straightforward  similarly  we omit attributes of relations 
we now show that all relevant aspects of the er model can be captured in aluni  and
thus that reasoning on an er schema can be reduced to reasoning on the corresponding
aluni knowledge base  since aluni is equipped with capabilities to reason on knowledge
bases  both with respect to finite and unrestricted models  see section       the reduction
shows that reasoning on the er model  and more generally on semantic data models  is
decidable 
as in the case of frame based systems  we restrict our attention to those aspects that
constitute the core of the er model  for this reason we do not consider some features 
such as keys and weak entities  that have been introduced in the literature  chen        
but appear only in some of the formalizations of the er model and the methodologies for
conceptual modeling based on the model  a proposal for the treatment of keys in description
logics is presented by borgida and weddell        
in order to establish the correspondence between the er model and aluni  we present
formal syntax and semantics of er schemata 
    syntax of the entity relationship model

although the er model has by now become an industrial standard  several variants and
extensions have been introduced  which differ in minor aspects in expressiveness and in
notation  chen        teorey        batini  ceri    navathe        thalheim              
also  er schemata are usually defined using a graphical notation which is particularly
useful for an easy visualization of the data dependencies  but which is not well suited for our
purposes  therefore we have chosen a formalization of the er model which abstracts with
respect to the most important characteristics and allows us to develop the correspondence
to aluni 
in the following  for two finite sets x and y we call a function from a subset of x
to y an x  labeled tuple over y   the labeled tuple t that maps xi   x to yi   y   for
i   f           kg  is denoted  x    y            xk   yk    we also write t  xi   to denote yi  
an er schema is a tuple s    ls   s   att s   rel s   card s    where
 ls is a finite alphabet partitioned into a set es of entity symbols  a set as of attribute
symbols  a set us of role symbols  a set rs of relationship symbols  and a set ds of
domain symbols  each domain symbol d has an associated predefined basic domain
dbd   and we assume the various basic domains to be pairwise disjoint 
 s  es  es is a binary relation over es  
 att s is a function that maps each entity symbol in es to an as  labeled tuple over ds  

definition    

   

fiunifying class based representation formalisms

is a function that maps each relationship symbol in rs to an us  labeled tuple
over es   we assume without loss of generality that 
  each role is specific to exactly one relationship  i e   for two relationships
r  r    rs with r    r    if rel s  r     u    e            uk   ek   and rel s  r     
 u     e             uk      ek       then fu           uk g and fu             uk    g are disjoint 
  for each role u   us there is a relationship r and an entity e such that
rel s  r             u   e         
 card s is a function from es  rs  us to in    in    f g  that satisfies the following condition  for a relationship r   rs such that rel s  r     u    e            uk   ek   
card s  e  r  u   is defined only if u   ui for some i   f           kg  and if e s ei
 where s denotes the reexive transitive closure of s    the first component
of card s  e  r  u   is denoted with cmin s  e  r  u   and the second component with
cmax s  e  r  u    if not stated otherwise  cmin s  e  r  u   is assumed to be   and
cmax s  e  r  u   is assumed to be   
before specifying the formal semantics of er schemata we give an intuitive description of
the components of a schema  the relation s models the isa relationship between entities 
we do not need to make any special assumption on the form of s such as acyclicity
or injectivity  the function att s is used to model attributes of entities  if for example
att s associates the as  labeled tuple  a    integer  a    string  to an entity e   then e has
two attributes a    a  whose values are integers and strings respectively  for simplicity we
assume attributes to be single valued and mandatory  but we could easily handle also multivalued attributes with associated cardinalities  the function rel s associates a set of roles
to each relationship symbol r  determining implicitly also the arity of r  and for each role
u in such set a distinguished entity  called the primary entity for u in r  in a database
satisfying the schema only instances of the primary entity are allowed to participate in
the relationship via the role u   the function card s specifies cardinality constraints  i e  
constraints on the minimum and maximum number of times an instance of an entity may
participate in a relationship via some role  since such constraints are meaningful only if
the entity can effectively participate in the relationship  the function is defined only for
the sub entities of the primary entity  the special value   is used when no restriction is
posed on the maximum cardinality  such constraints can be used to specify both existence
dependencies and functionality of relations  cosmadakis   kanellakis         they are
often used only in a restricted form  where the minimum cardinality is either   or   and
the maximum cardinality is either   or    cardinality constraints in the form considered
here have been introduced already by abrial        and subsequently studied by grant
and minker         lenzerini and nobili         ferg         ye  parent  and spaccapietra
        thalheim        
example     figure   shows a simple er schema modeling a state of affairs similar to the
one represented by the kee knowledge base in figure    we have used the standard graphic
notation for er schemata  except for the dashed link  which represents the refinement of
a cardinality constraint for the participation of a sub entity  in our case advcourse  in a
relationship  in our case enrolling  


rel s

   

ficalvanese  lenzerini    nardi

tof

     

course

 

ein

      

teaching

enrolling

tby

     

eof

     

teacher

student

 

      
advcourse

degree string

gradstudent

figure    an er schema
    semantics of the entity relationship model

the semantics of an er schema can be given by specifying which database states are
consistent with the information structure represented by the schema  formally  a database
state b corresponding to an er schema s    ls   s   att s   rel s   card s   is constituted by a
nonempty finite set b   assumed to be disjoint from all basic domains  and a function b
that maps
 every domain symbol d   ds to the corresponding basic domain dbd  
 every entity e   es to a subset e b of b  
 every attribute a   as to a set ab  b  sd ds dbd   and
 every relationship r   rs to a set rb of us  labeled tuples over b  
the elements of e b   ab   and rb are called instances of e   a  and r respectively 
a database state is considered acceptable if it satisfies all integrity constraints that are
part of the schema  this is captured by the definition of legal database state 
definition     a database state b is said to be legal for an er schema s  
 ls   s   att s   rel s   card s    if it satisfies the following conditions 
 for each pair of entities e   e    es such that e  s e   it holds that e b  e b  
 for each entity e   es   if att s  e      a    d            ah   dh   then for each instance
e   e b and for each i   f           hg the following holds 
  there is exactly one element ai   abi whose first component is e  and
  the second component of ai is an element of dibd  
 for each relationship r   rs such that rel s  r     u    e            uk   ek    all instances
of r are of the form  u   e            uk   ek    where ei   eib   i   f           kg 
   

fiunifying class based representation formalisms
number

     

 

even

doubles

     

figure    the er schema corresponding to example    
 for each relationship r   rs such that rel s  r     u    e            uk   ek    for each
i   f           kg  for each entity e   es such that e s ei and for each instance e of e
in i   it holds that
cmin s  e  r  ui     fr   rb j r ui     eg  cmax s  e  r  ui   

notice that the definition of database state reects the usual assumption in databases
that database states are finite structures  see also cosmadakis  kanellakis    vardi        
in fact  the basic domains are not required to be finite  but for each legal database state
for a schema  only a finite set of values from the basic domains are actually of interest  we
define the active domain bact of a database state b as the set of all elements of the basic
domains dbd   d   ds   that effectively appear as values of attributes in b  more formally 
bact   fd   dbd j d   ds    a   as   e   b    e  d    ab g 
since b is finite and as contains only a finite number of attributes  which are functional
by definition  also bact is finite 
reasoning in the er model includes verifying entity satisfiability and deducing inheritance  entity satisfiability amounts to checking whether a given entity can be populated in
some legal database state  atzeni   parker jr         lenzerini   nobili        di battista
  lenzerini         and corresponds to the notion of concept consistency in dls  deducing
inheritance amounts to verifying whether in all databases that are legal for the schema 
every instance of an entity is also an instance of another entity  such implied isa relationships can arise for different reasons  either trivially  through the transitive closure of the
explicit isa relationships present in the schema  or in more subtle ways  through specific
patterns of cardinality restrictions along cycles in the schema and the requirement of the
database state to be finite  lenzerini   nobili        cosmadakis et al         
figure   shows an er schema modeling the same situation as the knowledge
base of example      arguing exactly as in that example we can conclude that the two
entities number and even denote the same set of elements in every finite database legal for
the schema  although the isa relation from number to even is not stated explicitly  it is
implied  however  due to the cycle involving the relationship and the two entities and due
to the particular form of cardinality constraints 
example    

   

ficalvanese  lenzerini    nardi
    relationship between entity relationship schemata and

aluni

we now show that the different forms of reasoning on er schemata are captured by finite
concept consistency and finite concept subsumption in aluni  the correspondence between
the two formalisms is established by defining a translation  from er schemata to aluni
knowledge bases  and then proving that there is a correspondence between legal database
states and finite models of the derived knowledge base 
definition     let s    ls   s   att s   rel s   card s   be an er schema  the aluni knowledge base  s      a  p   t   is defined as follows 
the set a of atomic concepts of  s   contains the following elements 
 for each domain symbol d   ds   an atomic concept  d  
 for each entity e   es   an atomic concept  e   
 for each relationship r   rs   an atomic concept  r  
the set p of atomic roles of  s   contains the following elements 
 for each attribute a   as   an atomic role  a  
 for each relationship r   rs such that rel s  r     u    e            uk   ek    k atomic roles
 u              uk   
the set t of assertions of  s   contains the following elements 
 for each pair of entities e   e    es such that e  s e   the assertion
 e       e   
   
 for each entity e   es such that att s  e      a    d            ah  dh    the assertion
 e       a     d    u    u   ah    dh   u     a    u    u      ah      
 for each relationship r   rs such that rel s  r     u    e            uk   ek    the assertions
 r      u     e    u    u   uk    ek   u      u    u    u     uk      
 ei        ui      r  
i   f           kg
   
 for each relationship r   rs such that rel s  r     u    e            uk   ek    for i  
f           kg  and for each entity e   es such that e s ei 
  if m   cmin s  e  r  ui         the assertion
 e      m   ui     
   
  if n   cmax s  e  r  ui         the assertion
 e      n   ui     
   
 for each pair of symbols x    x    es  rs  ds such that x     x  and x    rs  ds  
the assertion
 x        x    
   
   

fiunifying class based representation formalisms
k    a p t    where
a   fcourse advcourse teacher student gradstudent teaching enrolling stringg 
p   ftof tby ein eof degreeg 
and the set t of assertions consists of 
 

 

 

 

 

 

 

 

 

 

 

 

 

teaching
enrolling
course
advcourse
teacher
student
gradstudent

   tof course u     tof u
 tby teacher u     tby
   ein course u     ein u
 eof student u     eof
   tof  teaching u     tof u
 ein  enrolling u    ein u     ein
  course u     ein
   tby  teaching
   eof  enrolling u    eof u    eof
  student u  degree string u     degree

 

figure    the aluni knowledge base corresponding to the er schema in figure  
we illustrate the translation on the er schema of figure    the
knowledge base that captures exactly its semantics is shown in figure    where for
brevity the disjointness assertions     are omitted  and assertions with the same concept on
the left hand side are collapsed 
the translation makes use of both inverse attributes and number restrictions to capture
the semantics of er schemata  we observe that  by means of the inverse constructor  a
binary relationship could be treated in a simpler way by choosing a traversal direction and
mapping the relationship directly to a role  notice also that the assumption of acyclicity
of the resulting knowledge base is unrealistic in this case  and in order to exploit the correspondence for reasoning in the er model  we need techniques that can deal with inverse
attributes  number restrictions  and cycles together  as shown in example      the combination of these factors causes the finite model property to fail to hold  and we need to
resort to reasoning methods for finite models 
in fact  we can reduce reasoning in the er model to finite model reasoning in aluni
knowledge bases  for this purpose we define a mapping between database states corresponding to an er schema and finite interpretations of the knowledge base derived from it 
due to the possible presence of relations with arity greater than    this mapping is however
not one to one and we first need to characterize those interpretations of the knowledge base
that directly correspond to database states 
definition     let s    ls   s   att s   rel s   card s   be an er schema and  s   be defined
as above  an interpretation i of  s   is relation descriptive  if for every relationship r  
rs   with rel s  r     u    e            uk   ek    for every d  d      r  i   we have that
 
   
   d     i     d  d         ui   i    d    d         ui   i      d   d   
example      cont  
aluni

 ik

   

ficalvanese  lenzerini    nardi

intuitively  the extension of a relationship in a database state is a set of labeled tuples 
and such a set does not contain the same element twice  therefore it is implicit in the
semantics of the er model that there cannot be two labeled tuples connected through all
roles of the relationship to exactly the same elements of the domain  in a model of the
aluni knowledge base corresponding to the er schema  on the other hand  each tuple is
represented by a new individual  and the above condition is not implicit anymore  it also
cannot be imposed in aluni by suitable assertions  the following lemma  however  shows
that we do not need such an explicit condition  when we are interested in reasoning on an
aluni knowledge base corresponding to an er schema  this is due to the fact that we can
always restrict ourselves to considering only relation descriptive models 
s be an er schema   s   be the aluni knowledge base obtained from s
according to definition      and c be a concept expression of  s    if c is finitely consistent
in  s    then there is a finite relation descriptive model i of  s   such that c i      
lemma     let

let i  be a finite model of  s   such that c i       we can build a finite relationdescriptive model i   by starting from i  and applying the following construction once for
each relationship in rs  
let i be the model obtained in the previous step and let r   rs with rel s  r   
 u    e            uk   ek   be the next relationship to which we apply the construction  we construct from i a model ir such that condition   is satisfied for relationship r 
given an individual r     r  i   we denote by ui d   i   f           kg the  unique 
individual e such that  r  e      ui   i   for ei     ei   i   i   f           kg we define
x u  e      uk  ek     fr     r  i j ui  d    ei   for i   f           kgg  we call conict set
a set x u  e      uk ek   with more than one element  from each conict set x u  e      uk ek 
we randomly choose one individual r  and we say that the others induce a conict on
 u    e            uk   ek    we call conf the  finite  set of all objects inducing a conict on some
 u    e            uk   ek   
we define an interpretation i conf as the disjoint union of   conf copies of i   one copy 
denoted by iz   for every set z    conf   we denote by dz the copy in iz of the individual
d in i   since the disjoint union of two models of an aluni knowledge base is again a
model  i conf is a model of  s    let iz and iz   be two copies of i in i conf   we call
exchanging uk  rz   with uk  rz     the operation on i conf consisting of replacing in   uk   iz
the pair  rz   uk  rz    with  rz   uk  rz      and  at the same time  replacing in   uk   iz  the
pair  rz     uk  rz      with  rz     uk  rz     intuitively  by exchanging uk  rz   with uk  rz      the
individuals rz and rz   do not induce conicts anymore 
we construct now from i conf an interpretation ir as follows  for each r   conf and
for each z    conf such that r   z   we exchange uk  rz   with uk  rznfrg    it is possible
to show that all conicts are thus eliminated while no new conict is created  hence  in
ir  condition   for r is satisfied  we still have to show that ir is a model of  s   in
which c ir       indeed  it is straightforward to check by induction that for every concept
expression c   appearing in  s    for all z    conf   d   c  i if and only if dz   c  ir   thus
all assertions of  s   are still satisfied in ir and c ir      
proof 

   

   

   

   

fiunifying class based representation formalisms

with this result  the following correspondence between legal database states for an
er schema and relation descriptive models of the resulting aluni knowledge base can be
established 
proposition     for every er schema s    ls   s   att s   rel s   card s   there exist two
mappings ffs   from database states corresponding to s to finite interpretations of its translation  s    and fis   from finite relation descriptive interpretations of  s   to database states
corresponding to s   such that 

   for each legal database state b for s   ffs  b  is a finite model of  s    and for each
symbol x   es   as   rs   ds   x b     x   ffs  b   

   for each finite relation descriptive model i of  s    fis  i   is a legal database state for
s   for each entity e   es     e   i   e fis  i     and for each symbol x   as  rs  ds  
  x  i    x fis  i    

proof 

    given a database state b  we define the interpretation i   ffs  b  of  s   as

follows 
 i   b   bact   sr rs rb  
 for each symbol x   es   as   rs   ds  
  x   i   x b  

 for each relationship r   rs such that rel s  r     u    e            uk   ek   
  ui   i   f r  e    i  i j r   rb   and r ui    eg  i   f           kg 

   
    

let b be a legal database state  to prove claim     it is sucient to show that i satisfies
every assertion in  s    assertions   are satisfied since b satisfies the set inclusion between
the extensions of the corresponding entities  with respect to assertions    let e   es be an
entity such that att s  e      a    d            ah   dh   and consider an instance e     e   i   we
have to show that for each i   f           hg  there is exactly one element ei   i such that
 e  ei       ai   i   and moreover that ei     di   i   by    e   e b   and by definition of legal
database state there is exactly one element ai   abi     ai   bi whose first component is e 
moreover  the second component ei of ai is an element of di d     di   i   with respect
to assertions    let r   rs be a relationship such that rel s  r     u    e            uk   ek   
and consider an instance r     r  i   we have to show that for each i   f           kg
there is exactly one element ei   i such that  r  ei       ui   i   and that moreover
ei     ei   i   by    r   rb   and by definition of legal database state  r is a labeled tuple
of the form  u    e             uk   e k    where e i   eib   i   f           kg  therefore r is a function
defined on fu            uk g  and by     ei is unique and equal to e i  moreover  again by   
ei     ei   i   eib   assertions   are satisfied  since by    the first component of each
element of   ui   i is always an element of rb     r  i   with respect to assertions   
let r   rs be a relationship such that rel s  r     u    e            uk   ek    let e   es be an
entity such that e s ei  for some i   f           kg  and such that m   cmin s  e  r  ui        
   

ficalvanese  lenzerini    nardi

consider an instance e     e   i   we have to show that there are at least m pairs in
  ui   i that have e as their second component  since assertions   are satisfied we know
that the first component of all such pairs is an instance of  r   by   and by definition
of legal database state  there are at least m labeled tuples in rb whose ui component is
equal to e  by       ui   i contains at least m pairs whose second component is equal to
e  with respect to assertions   we can proceed in a similar way  finally  assertions   are
satisfied since first  by definition the basic domains are pairwise disjoint and disjoint from
b and from the set of labeled tuples  second  no element of b is a labeled tuple  and
third  labeled tuples corresponding to different relationships cannot be equal since they are
defined over different sets of roles 
    let i be a finite relation descriptive interpretation of  s    for each basic domain
d   ds   let fid be a function from i to dbd that is one to one and onto  since i
is finite and each basic domain contains a countable number of elements  such a function
always exists  in order to define fis  i   we first specify a mapping fi that associates to
each individual d   i an element as follows 
 if d     e   i for some entity e   es   then fi  d    d 
 if d     r  i for some relationship r   rs with rel s  r     u    e            uk   ek    and
there are individuals d           dk   i such that  d  di       ui   i   for i   f           kg 

then fi  d     u    d            uk   dk   

 if d     d  i for some basic domain d   ds   then fi  d    fid  d  
 otherwise fi  d    d 

for a pair of individuals  d    d      i  i   fi  d    d        fi  d     fi  d      and for a set
x   fi  x     ffi  x  j x   x g 
if i is a model of  s   the above rules define fi d  for every d   i   indeed  by
assertions    each d   i can be an instance of at most one atomic concept corresponding
to a relationship or basic domain  and if this is the case it is not an instance of any atomic
concept corresponding to an entity  moreover  if d     r  i for some relationship r   rs
with rel s  r     u   e            uk   ek    then by assertions    for each i   f           kg there is
exactly one element di   i such that  d  di       ui   i   if i is not a model of  s   and
for some d   i   fi d  is not uniquely determined  then we choose nondeterministically
one possible value 
we can now define the database state b   fis  i   corresponding to i  
 b   i n

s



i s
i
r rs   r     d ds   d     

 for each symbol x   es   as   rs   ds   x b   fi   x   i   

it is not dicult to see  that if i is a model of  s    then b defined in such a way is a legal
database state for s with active domain sd ds   d  i  
   

fiunifying class based representation formalisms

the following theorem allows us to reduce reasoning on er schemata to finite model
reasoning on aluni knowledge bases 
theorem     let s be an er schema  e  e   be two entities in s   and  s   be the translation of s   then the following holds 

s if and only if  s    j f  e      
   e inherits from e   in s if and only if  s   j f  e     e     
b      by part   of proposition     
proof          let b be a legal database state with e  
ff
 
b
 
s
ffs  b  is a finite model of  s   in which   e   
     
    let  e   be finitely consistent in  s    by lemma     there is a finite relationdescriptive model i of  s   with  e  i       by part   of proposition      fis  i   is a
database state legal for s in which e b      
        let  s    j f  e     e      then  e   u  e     is finitely consistent in  s   
by lemma     there is a finite relation descriptive model i of  s   with d     e   i and
d      e     i   for some d   i   by part   of proposition      fis  i   is a database state legal
for s in which d   e b and d    e  b   therefore e does not inherit from e   
    assume e does not inherit from e    then there is a database state b legal
for s where for an instance e   e b we have e    e  b   by part   of proposition     
ffs  b  is a finite model of  s   in which e     e   ffs  b  and e      e     ffs  b    therefore
 s    j f  e     e     
   e is satisfiable in

theorem     allows us to effectively exploit the reasoning methods that have been developed for aluni in order to reason on er schemas  the complexity of the resulting method
for reasoning on er schemata is exponential  observe however  that the known algorithms
for reasoning on er schemata are also exponential  calvanese   lenzerini      b   and
that the precise computational complexity of the problem is still open 
moreover  by exploiting the correspondence with aluni  it becomes possible to add to
the er model  and more in general to semantic data models  several features and modeling
primitives that are currently missing  and which have been considered important  and fully
take them into account when reasoning over schemata  such additional features include for
example the possibility to specify and use arbitrary boolean combinations of entities  and
to refine properties of entities along isa hierarchies 
   object oriented data models

object oriented data models have been proposed with the goal of devising database formalisms that could be integrated with object oriented programming systems  kim        
they are the subject of an active area of research in the database field  and are based on
the following features 
 they rely on the notion of object identifier at the extensional level  as opposed to
traditional data models which are value oriented  and on the notion of class at the
intensional level 
   

ficalvanese  lenzerini    nardi

 the structure of the classes is specified by means of typing and inheritance 

as in the previous section  we present the common basis of object oriented data models
with other class based formalisms by introducing a language for specifying object oriented
schemata and show that such schemata can be correctly represented as aluni knowledge
bases  in our analysis  we concentrate our attention on the structural aspects of objectoriented data models  one of the characteristics of the object oriented approach is to provide
mechanisms for specifying also the dynamic properties of classes and objects  typically
through the definition of methods associated to the classes  those aspects are outside the
scope of our investigations  nevertheless  we argue that general techniques for schema level
reasoning  in particular  type consistency and type inference  can be profitably exploited for
restricted forms of reasoning on methods  abiteboul  kanellakis  ramaswamy    waller 
      
    syntax of an object oriented model

below we define a simple object oriented language in the style of most popular models
featuring complex objects and object identity  although we do not refer to any specific
formalism  our model is inspired by the ones presented by abiteboul and kanellakis        
hull and king        
definition     an object oriented schema is a tuple s    cs   as   ds    where 
 cs is a finite set of class names  denoted by the letter c  
 as is a finite set of attribute names  denoted by the letter a 
 ds is a finite set of class declarations of the form
class c is a c            ck type is t 
in which t denotes a type expression built according to the following syntax 
t

  cj

union t            tk end j
set of t j
record a   t            ak   tk end 
ds contains exactly one such declaration for each class c   cs  
figure   shows a fragment of the object oriented schema corresponding to
the kee knowledge base of figure   
each class declaration imposes constraints on the instances of the class it refers to  the
is a part of a class declaration allows one to specify inclusion between the sets of instances of
the involved classes  while the type is part specifies through a type expression the structure
assigned to the objects that are instances of the class 
example    

   

fiunifying class based representation formalisms
class teacher type is
union professor  gradstudent
end
class gradstudent is a student type is
record
degree  string
end

class course type is
record
enrolls  set of student 
taughtby  teacher
end

figure    an object oriented schema
    semantics of an object oriented model

the meaning of an object oriented schema is given by specifying the characteristics of an
instance of the schema  the definition of instance makes use of the notions of object
identifier and value 
let us first characterize the set of values that can be constructed from a set of symbols 
called object identifiers  given a finite set o of symbols denoting real world objects  the set
vo of values over o is inductively defined as follows 
 o  vo  
 if v            vk   vo then fjv            vk jg   vo  
 if v            vk   vo then   a    v            ak   vk     vo  
 nothing else is in vo  
a database instance j of a schema s    cs   as   ds   is constituted by
 a finite set oj of object identifiers 
 a mapping j assigning to each class in cs a subset of oj  
 a mapping j assigning a value in voj to each object in oj  
although the set voj of values that can be constructed from a set oj of object identifiers
is infinite  for a database instance one needs only to consider a finite subset of voj  
definition     given an object oriented schema s and an instance j of s   the set vj of
active values with respect to j is constituted by 
 the set oj of object identifiers 
 the set of values assigned by j to the elements of oj   including those values that
are not explicitly associated with object identifiers  but are used to form other values 
the interpretation of type expressions in j is defined through an interpretation function j that assigns to each type expression a subset of voj such that the following conditions are satisfied 
c j    j  c  
   

ficalvanese  lenzerini    nardi

 union t            tk end j   t j        tkj
 set of t  j   ffjv            vk jg j k     vi   t j   for i   f           kgg
 record a    t            ak   tk end j   f  a    v            ah   vh  j h  k 
vi   tij   for i   f           kg 
vj   voj   for j   fk              hgg 
notice that the instances of type record may have more components than those specified in
the type of the class  thus we are using an open semantics for records  which is typical of
object oriented data models  abiteboul   kanellakis        
in order to characterize object oriented data models we consider the instances that are
admissible for the schema 
definition     let s    cs   as   ds   be an object oriented schema  a database instance
j of s is said to be legal  with respect to s   if for each declaration
class c is a c            cn type is t
in ds   it holds that c j  cij for each i   f           ng  and that j  c j    t j  
therefore  for a legal database instance  the type expressions that are present in the
schema determine the  finite  set of active values that must be considered  the construction
of such values is limited by the depth of type expressions 
    relationship between object oriented schemata and

aluni

we establish now a relationship between aluni and the object oriented language presented
above  this is done by providing a mapping from object oriented schemata into aluni
knowledge bases  since the interpretation domain for aluni knowledge bases consists of
atomic objects  whereas each instance of an object oriented schema is assigned a possibly
structured value  see the definition of vo    we need to explicitly represent some of the
notions that underlie the object oriented language  in particular  while there is a correspondence between concepts and classes  one must explicitly account for the type structure
of each class  this can be accomplished by introducing in aluni concepts abstractclass 
to represent the classes  and rectype and settype to represent the corresponding types 
the associations between classes and types induced by the class declarations  as well as the
basic characteristics of types  are modeled by means of roles  the  functional  role value
models the association between classes and types  and the role member is used for specifying
the type of the elements of a set  moreover  the concepts representing types are assumed to
be mutually disjoint  and disjoint from the concepts representing classes  these constraints
are expressed by adequate inclusion assertions that will be part of the knowledge base we
are going to define 
we first define the function that maps each type expression into an aluni concept
expression as follows 
 every class c is mapped into an atomic concept  c   
 every type expression union t           tk end is mapped into  t    t    t  tk   
   

fiunifying class based representation formalisms

 every type expression set of t is mapped into settype u  member   t   
 every attribute a is mapped into an atomic role  a   and every type expression

record a   t            ak   tk end is mapped into

 a      t    u      a    u    u
   ak     tk   u      ak   

rectype u  

using we define the aluni knowledge base corresponding to an object oriented schema 
the aluni knowledge base  s      a  p   t   corresponding to the objectoriented schema s    cs   as   ds   is obtained as follows 
definition    

 a   fabstractclass  rectype  settypeg   f  c   j c   cs g 
 p   fvalue  memberg   f  a  j a   as g 
 t consists of the following assertions 
abstractclass
rectype
settype

 
 
 

   value
 value  
 value   u  rectype

and for each class declaration
class c is a c            cn type is t
in ds   an inclusion assertion
 c     abstractclass u  c    u    u  cn  u  value   t   
from the above translation we can observe that inverse roles are not necessary for the
formalization of object oriented data models  indeed  the possibility of referring to the
inverse of an attribute is generally ruled out in such models  however  this strongly limits
the expressive power of the data model  as pointed out in recent papers  see for example
albano  ghelli    orsini        cattell         note also that the use of number restrictions
is limited to the value    which corresponds to existence constraints and functionality 
whereas union is used in a more general form than for example in the kee system 
we illustrate the translation on the fragment of object oriented
schema in figure    the corresponding aluni knowledge base is shown in figure   
example      cont  

   

ficalvanese  lenzerini    nardi
k    a p t    where
a   fabstractclass rectype settype string
 

 

 

p

 

 

 

course  teacher  professor  student  gradstudentg 
  fvalue  member  enrolls  taughtby  degreeg 

and the set t of assertions consists of 
course

 

teacher
gradstudent

 
 

abstractclass
rectype
settype

abstractclass u
 value  rectype u     enrolls u     taughtby u
 enrolls  settype u  member student  u  taughtby teacher 
abstractclass u  value  gradstudent t professor 
abstractclass u student u
 value  rectype u  degree string u     degree 

      value
   value  
   value   u  rectype

figure    the aluni knowledge base corresponding to the object oriented schema in figure  
below we discuss the effectiveness of the translation   first of all observe that the
knowledge base  s   resulting from the translation of an object oriented schema s
may admit models that do not have a direct counterpart among legal database instances
of s   more precisely  both an interpretation of  s   and a database instance of s can be
viewed as a directed labeled graph  in the case of an interpretation  the nodes are domain
individuals and the arcs are labeled with roles  in the case of a database instance  the
nodes are either object identifiers or active values  and an arc either connects an object
identifier to its associated value  in which case it is labeled with value   or is part of the
sub structure representing a set or record value  in which case it is labeled with member or
with an attribute  in accordance with the type of the value   in a legal database instance
of s   a value v is represented by a sub structure that has the form of a finite tree with v as
root  set and record values as intermediate nodes  and objects identifiers as leaves  clearly 
such a substructure does not contain cycles  conversely  in a model of  s    there may
be cycles involving only nodes that are instances of settype and rectype and in which
all roles are different from value  we call such cycles bad  a model containing bad cycles
cannot be put directly in correspondence with a legal database instance  also  due to the
open semantics of records one cannot adopt a different translation for which bad cycles in
the model are ruled out 
aluni

example    

consider the object oriented schema s   containing a single class declaration

class c type is record a    record a    record a    c end end end
   

fiunifying class based representation formalisms

o 
c

value

v 

rectype
a 

a 

a 

o 
c

v 

rectype
value

v 

a 

rectype

v 

a 

rectype

v 

rectype

a 

figure    a model containing cycles
which is translated to
c   abstractclass u
 value  rectype u    a  u  a   rectype u    a  u  a   rectype u    a  u  a  c     
figure   shows a model of  s   represented as a graph  for clarity  we have named the
instances of c   and hence of abstractclass  with o and the instances of rectype with
v  observe the two different types of cycles in the graph  the cycle involving individuals
o    v    v    and v  does not cause any problems since it contains an arc labeled with value 
which is not part of the structure constituting a complex value  in fact  v  represents the
record value   a     a    a   o          on the other hand  due to the bad cycle involving v  and
v    individual v  represents  together with o  connected via a  to v    a record of infinite
depth 
we can nevertheless establish a correspondence from finite models of  s   possibly
containing bad cycles to legal instances of the object oriented schema s   this can be
achieved by unfolding the bad cycles in a model of  s   to infinite trees  obviously  the
unfolding of a cycle into an infinite tree  generates an infinite number of nodes  which
would correspond to an infinite database state  however  we can restrict the duplication of
individuals to those that represent set and record values  and thus are instances of settype
and rectype  the instances of abstractclass  instead  are not duplicated in the process
of unfolding  and therefore their number remains finite  moreover  since the set of possible
active values associated with each object identifier is bound by the depth of the schema  we
can in fact block the unfolding of bad cycles to the finite tree of depth equal to the depth
of the schema 
let us first formally define the depth of an object oriented schema s  
definition     for a type expression t we define depth  t   inductively as follows 
    
if t   c  
 
 
  max
if t   union t            tk end 
 ik  depth  ti    
depth  t    
    
 
 
 
depth
 
t
if t   set of t   
 
 
    max ik  depth  ti     if t   record a   t            ak   tk end 
the depth of an object oriented schema s is defined as the maximum of depth  t   for a type
expression t in s  
   

ficalvanese  lenzerini    nardi

o 
c

value

a 

 

v 

rectype

a 

 

v 

rectype

a 

a 

c

rectype

 

v 

a 

rectype

 

v 

a 

rectype

   

a 

value
o 

a 

 

v 

a 

v 

rectype

v 

rectype

a 

v 

rectype

a 

figure     the unfolded version of the model in figure  
we can now introduce the notion of unfolding of an aluni interpretation 
definition     let s be an object oriented schema   s   its translation in aluni and i
a finite interpretation of  s    we call unfolded version of i the interpretation obtained
from i as follows  for each individual v that is part of a bad cycle  unfold the bad cycle
into an  infinite  tree having v as root  by generating new individuals only for the instances
of rectype and settype  for a nonnegative integer m  we call m unfolded version of i  
denoted as ijm  the interpretation obtained by truncating at depth m each infinite tree
generated in the process of unfolding 
example      cont   figure    shows the unfolded version of the model in figure   
notice that only the bad cycle has been unfolded to an infinite tree  and that all arcs labeled
with a  lead to o   which is an instance of abstractclass and has not been duplicated 

the correctness of  s   is sanctioned by the following proposition 
proposition     for every object oriented schema s of depth m  there exist mappings 

   ffs from instances of s into finite interpretations of  s   and ffv from active values
of instances of s into domain elements of the finite interpretations of  s   such that 
for each legal instance j of s   ffs  j   is a finite model of  s    and for each type
expression t of s and each v   vj   v   t j if and only if ffv  v       t   ffs  j    

   fis from finite interpretations of  s   into instances of s and fiv from domain elements of the m unfolded versions of the finite interpretations of  s   into active
values of instances of s   such that  for each finite model i of  s    fis  i   is a legal
instance of s   and for each concept  t    which is the translation of a type expression
t of s and each d   ijm   d      t   ijm if and only if fiv  d    t fis  i    

proof 

follows 

    given a database instance j we define an interpretation ffs  j   of  s   as
   

fiunifying class based representation formalisms

 ffv is a function mapping every element of vj into a distinct element of ffs  j    
therefore ffs  j   is defined as the set of elements ffv  v  such that v   vj   moreover

we denote with id  rec  and set the elements of ffs  j   corresponding to object
identifiers  record and set values  respectively 
 the interpretation of atomic concepts is defined as follows 
   c   ffs  j     fffv  o  j o   j  c  g 
for every  c   corresponding to a class name c in s
abstractclassffs  j     id
rectypeffs  j     rec
settypeffs  j     set
 the interpretation of atomic roles is defined as follows 
   a  ffs  j     f d    d    j d    rec and ffv    d                a  ffv    d            g 
for every  a  corresponding to an attribute name a in s
ff
 
j
 
s
member
  f d    d    j d    set and ffv   d      fj        ffv    d          jgg
ff
 
j
 
value s
  f d    d    j  ffv    d     ffv    d       j g

we prove that for each type t and each v   vj   v   t j if and only if ffv  v   
   t   ffs  j     the first part of the thesis then follows from the definition of ffs  j    the
proof is by induction on the structure of the type expression 
base case  t   c  i e   t is a class  name   if o   c j then ffv  o       c   ffs  j     and
vice versa if d      c   ffs  j   then ffv  d    c j  
inductive case  t   record a    t            ak   tk end and  t     rectype u
   a      t    u      a    u    u    ak     tk   u      ak    we assume that v   tij
iff ffv  v       ti   ffs  j    for i   f           kg  and show that v   t j iff ffv  v       t   ffjs  j   
suppose that v   t j   i e   v     a    v            ah  vh  with h  k and vi   ti for
i   f           kg  by induction hypothesis ffv  vi        ti   ffs  j     for i   f           kg  and by
definition of ffs   ffv  v    rectypeffs  j      ffv  v   ffv  vi         ai   ffs  j   for i   f           kg 
and all roles  a  corresponding to attribute names are functional  therefore  ffv  v   
   t   ffs  j    
conversely  suppose that d   ffv  v       t   ffs  j     then  for each i   f           kg there is
exactly one di   ffs  j   such that  d  di        ai   ffs  j    and moreover di      t i   ffs  j    
by definition of ffs we have v     a   v            ahj  vh    with h  k and vi   ffv  di    for
i   f           kg  by induction hypothesis vi   ti   for i   f           kg  and therefore v  
 record a    t            ak   tk end j  
the cases for t   union t           tk end and t   set of t   can be treated analogously 
    given a finite model i of  s   of depth m  we define a legal database instance fis  i  
as follows 
 fiv is a function mapping every element of ijm into a distinct element of vfis  i   such
that the following conditions are satisfied 
  ofis  i    vfis  i   is the set of elements fiv  d  such that d   abstractclassijm  
   

ficalvanese  lenzerini    nardi

if d   rectypeijm    d idi        ai   ijm   for i   f           kg  and there
is no
other individual d     jm and attribute a  such that  d  d         a    ijm   then
fiv  d      a    fiv  d             ak   fiv  dk     
  if d   settypeijm    d  di     memberijm   for i   f           kg  and there is no
other individual d    ijm such that  d  d       member ijm   then fiv  d   
ffiv  d             fiv  dk  g 
 for every class name c   fis  i    c     ffiv  d  j d      c   ijm g 
 fis  i     f o  v  j fiv  d      o  fiv  d      v  and  d    d      valueijm g 
we first prove that for each concept  t    which is the translation of a type expression
t of s   and each d   ijm   d      t   ijm if and only if fiv  d    t fis  i     the proof is
by induction on the structure of the concept expression  again for the inductive part we
restrict our attention to the case of record types 
base case  t   c  i e    t   is an atomic
concept  
if
d      c   ijm then fiv  d   
c fis  i     and vice versa if o   c fis  i   then fiv    o       c   ijm  
inductive case   t     rectype u    a      t    u      a    u    u    ak     itk   u
     ak   and t   record a   t            ak   tk end  we assume that d      ti    jm iff
fiv  d    tifis  i     for i   f           kg  and show that d      t   ijm iff fiv  d    t fis  i    
suppose that d      t   ijm   then d  i rectypeijm and for eachi i   f           kg there
is an individual di such that di      ti    jm and  d  di        ai    jm   by construction
fiv  d      a    v            ah   vh   for some h  k  moreover  by induction hypothesis fiv  di    
tifis  i   and therefore fiv  d    t fis  i    
conversely  suppose that fiv  d    t fis  i     i e   fiv  d      a   v            ah  vh   with h  k
and vi   tifis  i   for i   f           kg  by induction hypothesis di   fiv   vi        ti   ijm  
for i   f           kg  and by definition of fiv   d   rectypeijm and  d  di        ai   ijm  
for i   f           kg  since all roles  a  corresponding to attribute names are functional 
d      t   ijm  
it remains to show that for each declaration
class c is a c            cn type is t
 

in ds    a  c fis  i    cifis  i   for each i   f           ng  and  b  fis  i   c fis  i      t fis  i    
 a  follows from the fact that  s   contains the assertion  c      c    u    u  cn  
and from the definition of fis  i    
 b  follows from what we have shown above and from the fact that ijm still satisfies the
assertion  c     abstractclass u  value   t    in fact  for some d      c   i let d  be
the unique individual such that  d i d      valuei   since i is a model of  s    d       t   i  
we argue that also d       t    jm   if d  is not part of a bad cycle in i   then i and
ijm coincide on the sub structure rooted at d  and formed by the individuals reached via
member and roles corresponding to attributes  and we are done  otherwise  in ijm such
sub structure is expanded into a finite tree  since by construction the depth of this tree
is at least depth  t    and the connections between individuals in i are preserved in ijm  it
follows that d       t   ijm  
   

fiunifying class based representation formalisms

the basic reasoning services considered in object oriented databases are subtyping
 check whether a type denotes a subset of another type in every legal instance  and type
consistency  check whether a type is consistent in a legal instance   based on proposition      we can show that these forms of reasoning are fully captured by finite concept
consistency and finite concept subsumption in aluni knowledge bases 
be an object oriented schema  t  t   two type expressions in s   and
the translation of s   then the following holds 

theorem      let

 s  

s

s if and only if  s    j f  t      
t is a subtype of t   in s if and only if  s   j f  t     t     

   t is consistent in
  

the proof is analogous to the proof of theorem      but it makes use of proposition     instead of proposition     
again  the correspondence with aluni established by theorem      allows us to make
use of the reasoning techniques developed for aluni to reason on object oriented schemas 
observe that reasoning in object oriented models is already pspace hard  bergamaschi
  nebel        and thus the known algorithms are exponential  however  by resorting
to aluni  it becomes possible to take into account for reasoning also various extensions
of the object oriented formalism  such extensions are useful for conceptual modeling and
have already been proposed in the literature  cattell   barry         first of all  the same
considerations developed for the er model with regard to the use of arbitrary boolean
constructs on classes can be applied also in the object oriented setting  which provides
disjunction but does not admit any form of negation  additional features that can be added
to object oriented models are inverses of attributes  cardinality constraints on set valued
attributes  and more general forms of restrictions on the values of attributes 
proof 

   related work

in this section we briey discuss recent results on the correspondence between class based
formalisms and on techniques for reasoning in aluni and in class based representation
formalisms 
    relationships among class based formalisms

in the past there have been several attempts to establish relationships among class based
formalisms  blasius  hedstuck  and rollinger         lenzerini  nardi  and simi       
carry out a comparative analysis of class based languages and attempt to provide a unified
view  the analysis makes it clear that several diculties arise in identifying a common
framework for the formalisms developed in different areas  some recent papers address this
problem  for example  an analysis of the relationships between frame based languages and
types in programming languages has been carried out by borgida         while bergamaschi
and sartori         piza  schewe  and schmidt        use frame based languages to enrich
the deductive capabilities of semantic and object oriented data models 
   

ficalvanese  lenzerini    nardi

artale  cesarini  and soda        study reasoning in object oriented data models by
presenting a translation to dls in the style of the one discussed in section    however  the
proposed translation is applicable only in the case where the shema contains no recursive
class declarations  this limitation is not present in the work by bergamaschi and nebel
        where a formalism derived from dls is used to model complex objects and an
algorithm for computing subsumption between classes is provided 
a recent survey on the application of dls to the problem of data management has been
presented by borgida          the application to the task of data modeling of reasoning
techniques derived from the correspondences presented in sections   and   is discussed in
more detail by calvanese  lenzerini  and nardi        
recently  there have also been proposals to integrate the object oriented and the logic
programming paradigms  kifer   wu        kifer  lausen    wu         these proposals
are however not directly related to the present work  since they aim at providing mechanisms
for computing with structured objects  rather than means for reasoning over a conceptual
 object oriented  representation of the domain of interest 
    reasoning in

aluni

and in class based representation formalisms

is equipped with techniques to reason both with respect to unrestricted and with
respect to finite models  we briey sketch the main ideas underlying reasoning in both
contexts  a detailed account of the reasoning techniques has been carried out by calvanese
     c  
aluni

      unrestricted model reasoning

we remind that reasoning on a knowledge base with respect to unrestricted models amounts
to check either concept consistency  i e   determine whether the knowledge base admits a
 possibly infinite  model in which a given concept has a nonempty extension  or concept
subsumption  i e   determine whether the extension of one concept is contained in the extension of another concept in every model  including the infinite ones  of the knowledge
base 
the method to reason in aluni with respect to unrestricted models exploits a well known
correspondence between dls and propositional dynamic logics  pdls   kozen   tiuryn 
       which are a class of logics specifically designed to reason about programs  the
correspondence  which has first been pointed out by schild         relies on a substantial
similarity of the interpretative structures of both formalisms  and allows one to exploit the
reasoning techniques developed for pdls to reason in the corresponding dls  in particular 
since aluni   the description language of aluni  includes the construct for inverse roles 
for the correspondence one has to resort to converse pdl  a variant of pdl that includes
converse programs  kozen   tiuryn         however  because of the presence of number
restrictions in aluni which have no direct correspondence in pdls  we cannot rely on
traditional techniques for reasoning in pdls  recently  encoding techniques have been
developed  which allow one to eliminate number restrictions from a knowledge base while
preserving concept consistency and concept subsumption  de giacomo   lenzerini      a  
the encoding is applicable to knowledge bases formulated in expressive variants of dls  and
in particular it can be used to reduce unrestricted model reasoning on aluni knowledge
   

fiunifying class based representation formalisms

bases  both concept consistency and concept subsumption  to deciding satisfiability of a
formula of converse pdl  reasoning in converse pdl is decidable in exptime  kozen  
tiuryn         and since the encoding is polynomial  de giacomo   lenzerini      a  we
obtain an exptime decision procedure for unrestricted concept consistency and concept
subsumption in aluni knowledge bases  a simplified form of the encoding  which can be
applied to decide unrestricted concept consistency in aluni has also been presented by
calvanese et al         
      finite model reasoning

we remind that reasoning on a knowledge base with respect to finite models amounts to
check either finite concept consistency or finite concept subsumption  for which only the
finite models of the knowledge base must be considered 
for finite model reasoning  the techniques based on a reduction to reasoning in pdls
are not applicable  indeed  the pdl formula corresponding to an aluni knowledge base
contains constructs both for converse programs  corresponding to inverse roles  and for
functionality of direct and inverse programs  and thus is a formula of a variant of pdl
which does not have the finite model property  vardi         however  after encoding
functionality  one obtains a converse pdl formula  and since converse pdl has the finite
model property  fischer   ladner         this formula is satisfiable if and only if it is
finitely satisfiable  this shows that the encoding of number restrictions  and in particular
the encoding of functionality   while preserving unrestricted satisfiability does not preserve
finite satisfiability  de giacomo   lenzerini      a  
for finite model reasoning in aluni one can adopt a different technique  which is based
on the idea of separating the reasoning process in two distinct phases  see calvanese      c 
for full details   the first phase deals with all constructs except number restrictions  and
builds an  expanded knowledge base  in which these constructs are embedded implicitly
in the concepts and roles  in the second phase the assertions involving number restrictions
are used to derive from this expanded knowledge base a system of linear inequalities  the
system is defined in such a way that its solutions of a certain type  acceptable solutions  are
directly related to the finite models of the original knowledge base  in particular  from each
acceptable solution one can directly deduce the cardinalities of the extensions of all concepts
and roles in a possible finite model  the proposed method allows one to establish for aluni
exptime decidability for finite concept consistency and for special cases of finite concept
subsumption  by resorting to a more complicated encoding one can obtain a  exptime
decision procedure for finite concept subsumption in aluni in general  calvanese      a 
    c  
reasoning with respect to finite models has also been investigated in the context of dependency theory in databases  as shown by casanova  fagin  and papadimitriou        for
the relational model  when functional and inclusion dependencies interact  the dependency
implication problem in the finite case differs from the one in the unrestricted case  while
the implication problem for arbitrary functional and inclusion dependencies is undecidable
 chandra   vardi        mitchell         for functional and unary inclusion dependencies
it is solvable in polynomial time  both in the finite and the unrestricted case  cosmadakis
et al         
   

ficalvanese  lenzerini    nardi

consistency with respect to finite models of schemata expressed in an enriched entityrelationship model with cardinality constraints has been shown decidable in polynomial
time by lenzerini and nobili         calvanese and lenzerini      b  extend the decidability result to include also isa relationships  and calvanese and lenzerini      a  show
exptime decidability of reasoning in an expressive object oriented model  an algorithm
for computing a refinement ordering for types  the analogue to a concept hierarchy  in the
framework of the o  object oriented model in discussed by lecluse and richard        
reasoning in the strict sublanguage of aluni obtained by omitting inverse roles and
number restrictions is already exptime hard  calvanese      b   therefore  the known
algorithms for deciding unrestricted concept consistency and subsumption and finite concept
consistency are essentially optimal 
   conclusions

we have presented a unified framework for representing information about class structures
and reasoning about them  we have pursued this goal by looking at various class based
formalisms proposed in different fields of computer science  namely frame based systems
used in knowledge representation  and semantic and object oriented data models used in
databases  and rephrasing them in the framework of description logics  the resulting description logic  called aluni includes a combination of constructs that was not addressed
before  although all of the constructs had previously been considered separately 
the major achievement of the paper is the demonstration that class based formalisms
can be given a precise characterization by means of a powerful fragment of first order logic 
which thus can be regarded as the essential core of the class based representation formalisms
belonging to all three families mentioned above  this has several consequences 
first of all  any of the formalisms considered in the paper can be enriched with constructs
originating from other formalisms and treated in the general framework  in this sense  the
work reported here not only provides a common powerful representation formalism  but
may also contribute to significant developments for the languages belonging to all the three
families  for example  the usage of inverse roles in concept languages greatly enhances the
expressivity of roles  while the combination of isa  number restrictions  and union enriches
the reasoning capabilities available in semantic data models 
secondly  the comparison of class based formalisms from the fields of knowledge representation and conceptual data modeling makes it feasible to address the development of
reasoning tools to support conceptual modeling  calvanese et al          in fact  reasoning capabilities become especially important in complex scenarios such as those arising in
heterogenous database applications and data warehousing  this line of work was among
the motivations for developing systems based on expressive description logics  horrocks 
      horrocks   patel schneider         and has lead to further extending the language of
description logics to support information integration and  more specifically  the conceptual
modeling of data warehouses  calvanese  de giacomo  lenzerini  nardi    rosati        
   

fiunifying class based representation formalisms
references

abiteboul  s   kanellakis  p   ramaswamy  s     waller  e          method schemas  tech 
rep  cs        brown university  an earlier version appeared in
 
abiteboul  s     kanellakis  p          object identity as a query language primitive  in
proceedings of the acm sigmod international conference on management of data 
pp          
abrial  j  r          data semantics  in klimbie  j  w     koffeman  k  l   eds    data
base management  pp        north holland publ  co   amsterdam 
albano  a   ghelli  g     orsini  r          a relationship mechanism for strongly typed
object oriented database programming languages  in proceedings of the seventeenth international conference on very large data bases  vldb      pp         
barcelona 
artale  a   cesarini  f     soda  g          describing database objects in a concept
language environment  ieee transactions on knowledge and data engineering        
        
atzeni  p     parker jr   d  s          formal properties of net based knowledge representation schemes  in proceedings of the second ieee international conference on data
engineering  icde      pp          los angeles 
baader  f          augmenting concept languages by transitive closure of roles  an alternative to terminological cycles  in proceedings of the twelfth international joint
conference on artificial intelligence  ijcai     sydney  australia 
baader  f          using automata theory for characterizing the semantics of terminological
cycles  annals of mathematics and artificial intelligence              
batini  c   ceri  s     navathe  s  b          conceptual database design  an entityrelationship approach  benjamin and cummings publ  co   menlo park  california 
bergamaschi  s     nebel  b          acquisition and validation of complex object database
schemata supporting multiple inheritance  applied intelligence                 
bergamaschi  s     sartori  c          on taxonomic reasoning in conceptual design  acm
transactions on database systems                  
blasius  k  h   hedstuck  u     rollinger  c  r   eds            sorts and types in artificial
intelligence  vol      of lecture notes in artificial intelligence  springer verlag 
borgida  a          from type systems to knowledge representation  natural semantics
specifications for description logics  journal of intelligent and cooperative information
systems                
borgida  a          description logics in data management  ieee transactions on knowledge and data engineering                 
proc  of the  th

symp  on principles of database systems pods   

   

ficalvanese  lenzerini    nardi

borgida  a          on the relative expressiveness of description logics and predicate logics 
artificial intelligence              
borgida  a     weddell  g  e          adding functional dependencies to description logics 
in proceedings of the fifth international conference on deductive and object oriented
databases  dood     
brachman  r  j     levesque  h  j          the tractability of subsumption in frame based
description languages  in proceedings of the fourth national conference on artificial
intelligence  aaai      pp        
brachman  r  j     levesque  h  j   eds            readings in knowledge representation 
morgan kaufmann  los altos 
brachman  r  j   mcguinness  d  l   patel schneider  p  f   alperin resnick  l     borgida 
a          living with classic  when and how to use a kl one like language  in
sowa  j  f   ed    principles of semantic networks  pp           morgan kaufmann 
los altos 
bresciani  p   franconi  e     tessaris  s          implementing and testing expressive
description logics  preliminary report  in borgida  a   lenzerini  m   nardi  d    
nebel  b   eds    working notes of the      description logics workshop  technical
report  rap        dipartimento di informatica e sistemistica  universita di roma
 la sapienza   pp          rome  italy  
buchheit  m   donini  f  m   nutt  w     schaerf  a          a refined architecture for
terminological systems  terminology   schema   views  artificial intelligence         
        
buchheit  m   donini  f  m     schaerf  a          decidable reasoning in terminological
knowledge representation systems  journal of artificial intelligence research         
    
calvanese  d       a   finite model reasoning in description logics  in aiello  l  c   doyle 
j     shapiro  s  c   eds    proceedings of the fifth international conference on the
principles of knowledge representation and reasoning  kr      pp           morgan
kaufmann  los altos 
calvanese  d       b   reasoning with inclusion axioms in description logics  algorithms
and complexity  in wahlster  w   ed    proceedings of the twelfth european conference on artificial intelligence  ecai      pp           john wiley   sons 
calvanese  d       c   unrestricted and finite model reasoning in classbased representation formalisms 
ph d  thesis  dipartimento di informatica e sistemistica  universita di roma  la sapienza   available at
http   www dis uniroma  it pub calvanes thesis ps gz 
calvanese  d   de giacomo  g   lenzerini  m   nardi  d     rosati  r          description
logic framework for information integration  in proceedings of the sixth international
   

fiunifying class based representation formalisms
conference on principles of knowledge representation and reasoning  kr     

pp 
     
calvanese  d     lenzerini  m       a   making object oriented schemas more expressive 
in proceedings of the thirteenth acm sigact sigmod sigart symposium on
principles of database systems  pods      pp          minneapolis  acm press
and addison wesley 
calvanese  d     lenzerini  m       b   on the interaction between isa and cardinality
constraints  in proceedings of the tenth ieee international conference on data
engineering  icde      pp          houston  texas   ieee computer society press 
calvanese  d   lenzerini  m     nardi  d          a unified framework for class based representation formalisms  in doyle  j   sandewall  e     torasso  p   eds    proceedings
of the fourth international conference on the principles of knowledge representation
and reasoning  kr      pp          bonn  morgan kaufmann  los altos 
calvanese  d   lenzerini  m     nardi  d          description logics for conceptual data
modeling  in chomicki  j     saake  g   eds    logics for databases and information
systems  pp           kluwer academic publisher 
casanova  m  a   fagin  r     papadimitriou  c  h          inclusion dependencies and
their interaction with functional dependencies  journal of computer and system
sciences                
cattell  r  g  g   ed            the object database standard  odmg     morgan kaufmann  los altos  release     
cattell  r  g  g     barry  d  k   eds            the object database standard  odmg
     morgan kaufmann  los altos 
chandra  a  k     vardi  m  y          the implication problem for functional and inclusion
dependencies is undecidable  siam journal on computing                  
chen  p  p          the entity relationship model  toward a unified view of data  acm
transactions on database systems              
cosmadakis  s  s     kanellakis  p  c          functional and inclusion dependencies   a
graph theoretical approach  in kanellakis  p  c     preparata  f  p   eds    advances
in computing research  vol     pp           jai press 
cosmadakis  s  s   kanellakis  p  c     vardi  m          polynomial time implication
problems for unary inclusion dependencies  journal of the acm                
de giacomo  g     lenzerini  m       a   boosting the correspondence between description logics and propositional dynamic logics  in proceedings of the twelfth national
conference on artificial intelligence  aaai      pp           aaai press the mit
press 
   

ficalvanese  lenzerini    nardi

de giacomo  g     lenzerini  m       b   concept language with number restrictions and
fixpoints  and its relationship with  calculus  in proceedings of the eleventh european
conference on artificial intelligence  ecai      pp          
di battista  g     lenzerini  m          deductive entity relationship modeling  ieee
transactions on knowledge and data engineering                 
donini  f  m   lenzerini  m   nardi  d     nutt  w          the complexity of concept
languages  information and computation            
donini  f  m   lenzerini  m   nardi  d   nutt  w     schaerf  a          queries  rules and
definitions  in foundations of knowledge representation and reasoning  springerverlag 
donini  f  m   lenzerini  m   nardi  d     schaerf  a          reasoning in description
logics  in brewka  g   ed    principles of knowledge representation  studies in logic 
language and information  pp           csli publications 
donini  f  m   nardi  d     rosati  r          non first order features in concept languages  in gori  m     soda  g   eds    proceedings of the fourth conference of the
italian association for artificial intelligence  ai ia      vol      of lecture notes in
artificial intelligence  pp          springer verlag 
ferg  s          cardinality concepts in entity relationship modeling  in proceedings of the
tenth international conference on the entity relationship approach  er      pp 
     
fikes  r     kehler  t          the role of frame based representation in reasoning  communications of the acm                  
fischer  m  j     ladner  r  e          propositional dynamic logic of regular programs 
journal of computer and system sciences              
grant  j     minker  j          numerical dependencies  in gallaire  h   minker  j    
nicolas  j  m   eds    advances in database theory ii  plenum publ  co   new york 
hayes  p  j          the logic of frames  in metzing  d   ed    frame conceptions and text
understanding  pp         walter de gruyter and co  republished in  brachman  
levesque        
horrocks  i          using an expressive description logic  fact or fiction   in proceedings
of the sixth international conference on principles of knowledge representation and
reasoning  kr      pp          
horrocks  i     patel schneider  p  f          optimizing description logic subsumption 
journal of logic and computation                 
hull  r  b     king  r          semantic database modelling  survey  applications and
research issues  acm computing surveys                  
   

fiunifying class based representation formalisms

karp  p  d          the design space of knowledge representation systems  tech  rep  sri
ai technical note      sri international  menlo park  ca 
karp  p  d   myers  k  l     gruber  t          the generic frame protocol  in proceedings
of the fourteenth international joint conference on artificial intelligence  ijcai     
vol  a  pp          montreal  canada 
kifer  m   lausen  g     wu  j          logical foundations of object oriented and framebased languages  journal of the acm                  
kifer  m     wu  j          a logic for programming with complex objects  journal of
computer and system sciences             
kim  w          introduction to object oriented databases  the mit press 
kim  w     lochovsky  f  h   eds            object oriented concepts  databases  and
applications  acm press and addison wesley  new york 
kozen  d     tiuryn  j          logics of programs  in van leeuwen  j   ed    handbook of
theoretical computer science   formal models and semantics  pp           elsevier
science publishers  north holland   amsterdam 
lecluse  c     richard  p          modeling complex structures in object oriented databases 
in proceedings of the eighth acm sigact sigmod sigart symposium on principles of database systems  pods      pp          
lehmann  f   ed            semantic networks in artificial intelligence  pergamon press 
oxford 
lenzerini  m   nardi  d     simi  m   eds            inheritance hierarchies in knowledge
representation and programming languages  john wiley   sons  chichester 
lenzerini  m     nobili  p          on the satisfiability of dependency constraints in entityrelationship schemata  information systems                  
mitchell  j  c          the implication problem for functional and inclusion dependencies 
information and control              
motschnig pitrik  r     mylopoulous  j          classes and instances  journal of intelligent and cooperative information systems        
nebel  b          terminological cycles  semantics and computational properties  in sowa 
j  f   ed    principles of semantic networks  pp           morgan kaufmann  los
altos 
piza  b   schewe  k  d     schmidt  j  w          term subsumption with type constructors  in yesha  y   ed    proceedings of the international conference on information
and knowledge management  cikm      pp          baltimore 
   

ficalvanese  lenzerini    nardi

schild  k          a correspondence theory for terminological logics  preliminary report 
in proceedings of the twelfth international joint conference on artificial intelligence
 ijcai      pp          sydney  australia 
schild  k          terminological cycles and the propositional  calculus  in doyle  j  
sandewall  e     torasso  p   eds    proceedings of the fourth international conference on the principles of knowledge representation and reasoning  kr      pp 
        bonn  morgan kaufmann  los altos 
schmidt schau  m     smolka  g          attributive concept descriptions with complements  artificial intelligence               
sowa  j  f   ed            principles of semantic networks  morgan kaufmann  los altos 
teorey  t  j          database modeling and design  the entity relationship approach 
morgan kaufmann  los altos 
thalheim  b          fundamentals of cardinality constraints  in pernoul  g     tjoa 
a  m   eds    proceedings of the eleventh international conference on the entityrelationship approach  er      pp        springer verlag 
thalheim  b          fundamentals of the entity relationship model  springer verlag 
vardi  m  y          the taming of converse  reasoning about two way computations 
in parikh  r   ed    proc  of the  th workshop on logics of programs  vol      of
lecture notes in computer science  pp           springer verlag 
woods  w  a     schmolze  j  g          the kl one family  in lehmann  f  w   ed   
semantic networks in artificial intelligence  pp           pergamon press  published
as a special issue of computers   mathematics with applications  volume     number
    
ye  x   parent  c     spaccapietra  s          cardinality consistency of derived objects in
dood systems  in loucopoulos  p   ed    proceedings of the thirteenth international
conference on the entity relationship approach  er      vol      of lecture notes
in computer science  pp          manchester  uk   springer verlag 

   

fi