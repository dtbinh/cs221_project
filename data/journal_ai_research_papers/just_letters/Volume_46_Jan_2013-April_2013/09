journal artificial intelligence research                  

submitted        published      

hybrid lprpg heuristic modelling numeric
resource flows planning
amanda coles
andrew coles
maria fox
derek long

amanda coles kcl ac uk
andrew coles kcl ac uk
maria fox kcl ac uk
derek long kcl ac uk

department informatics
kings college london
strand building
london  wc r  ls  uk

abstract
although use metric fluents fundamental many practical planning problems 
study heuristics support fully automated planners working fluents
remains relatively unexplored  widely used heuristic relaxation metric
fluents interval valued variables idea first proposed decade ago  heuristics
depend domain encodings supply additional information fluents 
capacity constraints resource related annotations 
particular challenge approaches handling interactions metric
fluents represent exchange  transformation quantities raw materials
quantities processed goods  trading money materials  usual relaxation
metric fluents often poor situations  since recognise
resources  spent  longer available spent again 
present heuristic numeric planning problems building propositional
relaxed planning graph  using mathematical program numeric reasoning 
define class producerconsumer planning problems demonstrate numeric
constraints modelled mixed integer program  mip   mip
combined metric relaxed planning graph  rpg  heuristic produce integrated
hybrid heuristic  mip tracks resource use accurately usual relaxation 
relaxes ordering actions  rpg captures causal propositional aspects
problem  discuss two components interact produce single unified
heuristic go explore numeric features planning problems
integrated mip  show encoding limited subset propositional problem augment mip yield accurate guidance  partly exploiting structure
propositional landmarks propositional resources  results show
use heuristic enhances scalability problems numeric resource interaction
key finding solution 

   introduction
domain independent planning research last decade focussed  part 
propositional planning  leading important discoveries powerful new heuristics
planning propositional domains  relatively little effort invested planning
metric fluents  despite importance representing many practical planning problems 
c
    
ai access foundation  rights reserved 

ficoles  coles  fox   long

numbers essential efficiently encoding resources  money  fuel materials 
state of the art remains influential approach proposed hoffmann        
extends ignore delete effects relaxation propositional fluents metric fluents
tracking accumulating upper bound increasing fluents ignoring decreasing  negative  effects  symmetrical treatment fluents purposes determining
lower bound leads representation equivalent interval metric
fluent  goals preconditions satisfied provided value interval
sufficient satisfy condition  although lpg  gerevini  saetti    serina       
mips  edelkamp        capable handling metric fluents  depend
relaxation heuristic offer search guidance  approaches explored
 do   kambhampati        koehler         comparatively less successful 
planners using metricff heuristic generally effective solving problems complex interactions values numeric resources 
exchange quantities one materials production others 
contrast  solving problems numbers heart operational research mathematical programming techniques  many powerful solvers developed solving
linear programming problems  lps  mixed integer programming problems  mips  
problems expressed linear constraints variables  which  case
mips  integers   although efforts exploit linear programming
propositional planning  either schedule actions  long   fox      a  directly 
heuristic  van den briel  benton  kambhampati    vossen         relatively little work
considered exploitation linear programming techniques improve behaviour
numeric domain independent planners  kautz   walser        shin   davis        wolfman   weld        benton  van den briel    kambhampati         this work
considered section      
paper  revisit issue planning numeric resources  beginning
metric relaxed planning graph  rpg  heuristic  hoffmann         focus specifically
domains exclusively exhibit call producer consumer behaviour  defined
section       actions increase decrease numeric resources fixed quantities 
course  represents subset possible numeric behaviours  common
intuitive one  furthermore  easy recognise syntactically domain encoding 
simple resort alternative strategies domains conform
constraint  might include use producer consumer relaxations approximations
domains complex numeric behaviour 
explore behaviour rpg heuristic  demonstrating typical
patterns interactions producer consumer numeric planning domains lead highly
uninformative heuristic guidance  particularly domains offer opportunities exchanges metric variables  address this  introduce novel heuristic based
mixed integer program  mip   used alongside rpg  better capture numeric
constraints  described mip constructed  used complement rpg  discuss extensions improve identified weakness 
encode information propositional behaviour problem  evaluate
lp rpg heuristic exploring spectrum between  one end  strict separation
numbers propositions mip rpg components  and  other  discarding
   

fia hybrid lp rpg heuristic planning

rpg entirely encoding preconditions effects actions entirely mip 
so  determine best trade off two lies 
work report paper extension earlier work reporting development lp rpg  coles  fox  long    smith         extends work
additional detail several variants core heuristic  exploring impact
tighter integration propositional metric fluents heuristic 
    related work
integration linear programming  lp  mip techniques planning
considered number contexts  relevant present work use
lp basis heuristic propositional over subscription planning problems  benton 
do    kambhampati         setting  goal planning find plan
maximum utility  defined terms reward goals achieved  minus costs
occurred achieving them  benton et al  use lp optimisation tool help
decide set goals planner satisfy order achieve maximum reward 
work benton et al  work described paper exploit relaxation
action ordering rather effects  employ lp well rpg
structure  two key differences focus work using mip
capture interactions within numeric planning problems  rely conventional
relaxed planning graph  hoffmann   nebel        propositional reasoning  rather
encoding structure mip  work van den briel et al   van den briel et al  
      van den briel  vossen    kambhampati        explores use mathematical
programming encode solve planning problems 
structure lp mip models proposed benton et al         van den
briel et al         makes time consuming solve  requiring actions selected
satisfy preconditions effects actions  delete effects paired
add effects  contrast  mip lp models propose attempt capture
causal plan structure  making construction solutions programs
state much feasible  difference interaction two
components  integration mip rpg lp rpg much tighter 
mip used graph building indicate variable bounds  relaxed plan
extraction indicate actions use  comparison  earlier approach  mip
used solely introduce bias rpg action selection  giving preference actions
used solution mip 
linear programming exploited planning work  lpsat  wolfman
  weld        uses planning as satisfiability approach  linked use lp solver
ensure literals representing  linear  constraints metric fluents maintained
plan construction  heuristic guidance search  based
standard dpll search satisfying assignment combined confirmation
corresponding lp satisfiable  ip sat  kautz   walser        uses mip encoding
planning problems basis solving them  vossen et al          similar way
later work van den briel et al   van den briel et al          planners mip
used directly heart solver  planning problems translated mips
rather used guide search  tm lpsat  shin   davis        uses lpsat
   

ficoles  coles  fox   long

system solve planning problems continuous processes  kongming  li   williams 
      another example planner exploits compilation planning problems
mathematical programs  solved using cplex  tackle hybrid mixed continuous planning
problems  colin system  coles  coles  fox    long        uses lp encodings
manage reasoning effects continuous processes 
completely different use linear mixed integer programming planning lies
work ono williams        blackmore  ono williams        uses
mixed integer programming foundation solving problem risk allocation
plan level control systems 
alternative approaches handling numeric variables planning include implemented metricff  discussed detail section    sapa  do   kambhampati       
resource ipp  koehler         sapa heuristic cost estimates generated using relaxed plan extraction supplemented additional costs representing minimal set
additional resource producing actions required achieve resource requirements
relaxed plans  approach straightforward implement interesting
modification pure relaxed plan heuristic  separates problem producing
resources solution rest problem  consequence relaxed
plan using steps high resource demands constructed preference
longer plan lower demands  heuristic value state distorted
penalty attached relaxed plan achieve high resource requirement  potentially hugely overestimating true distance state goal  resource ipp depends
identification consumers producers  paper  builds
resource time map tracks production consumption resources
graphplan based search plan  approach leads extension mutex
relation used constrain search graphplan  blum   furst         however 
iterative deepening search used graphplan based planners scalable solve
large problems forward state space search proved dominant strategy past
decade 

   problem definition
section define class planning problems consider paper 
subset general class pddl     non temporal  numeric planning problems 
represent linear producerconsumer problems  include example settlers
domain  used throughout paper illustrate ideas presented 
    pddl     numeric planning problems
work  concerned finding sequential plans solve non temporal  numeric
planning problems  defined using  a subset of  pddl      fox   long         within
pddl  class problems defined follows  
   pddl    supports specification objective function measure plan quality  defined
numeric variables planning problem  work focus minimising plan length 

   

fia hybrid lp rpg heuristic planning

initial state  state consists set propositions  and or assignment values set numeric variables  notational convenience  refer
vector numeric values given state v propositional facts f  
a  set actions  tuple hpre  eff i 
pre preconditions a  conditions must hold state
executed 
eff effects a  applied  state updated according
effects  eff consists of 
eff   propositions deleted state 
eff     propositions added state 
eff n   effects acting upon numeric variables 
g  goal  set propositions f   set conditions numeric variables 
n     sets may empty  state hf  vi goal state f   f v
satisfies condition n    
general case  pddl numeric conditions  as used pre n     expressed
form 
hf  v   op  ci
s t 
op                c  
numeric effects  as eff n  expressed as 
hv  op  f  v i

s t 

op                 

common hoffmanns work metricff        restrict attention
preconditions expressed linear normal form  lnf   is  expression
f  v  within preconditions must form weighted sum state variables
plus constant  w v   k  likewise  consider numeric effects f  v  lnf 
op             restrictions guarantee termination construction
rpg evaluating state  introducing non lnf preconditions  scaling effects 
lead asymptotic numeric behaviour certain conditions satisfied
infinite limit  lp rpg heuristic describe work  require
numeric behaviour actions represented producerconsumer behaviour  is 
effects cause constant increments decrements variables affect and  apart
specific circumstances  permit assignment effects  precisely define
notions circumstances allow assignment effects later paper 
solution planning problem  sequential  plan  sequence actions transforms initial state goal state  respecting preconditions action application 
state hf  vi  application action effects eff  eff    eff n yields successor
state hf     v  i  where 
f      f   eff   eff  
v   x  op  w v   c  hv  op  w v   ci eff n
v   x    v x 
otherwise
   

ficoles  coles  fox   long

    example problem  settlers
settlers domain  introduced      international planning competition  ipc   long
  fox      b  used       hoffmann   edelkamp         good example
problem exhibiting interesting use metric fluents  aim settlers problems
build transport building infrastructure extraction  refinement
transportation materials  numeric structure domain perhaps sophisticated ipc domains date  first  six numeric resources several
actions act upon each  available resources  effects actions upon
 consumption resource shown negative value production shown
positive value  shown table      another interesting feature domain
resources directly produced  whilst raw materials timber  stone
ore directly extracted  wood  coal iron must refined respective
raw form  finally  domain contains transferable resources  addition actions
shown table  resources refined consumed fuel transportation 
resources loaded unloaded vehicles  effect load unload
actions increase decrease amount resource vehicle  decrease
increase amount stored given location  apart consuming producing  i e 
releasing  remaining cargo space vehicle  resource produced consumed
loading unloading moved  however  expressing model pddl
requires pair effects described  decreasing one variable increasing another 
indistinguishable combination production consumption 
    producerconsumer problems
define constrained producerconsumer numeric behaviour considered
paper  first define producer consumer actions  two categories producer  using
define notion producerconsumer variable  identification
consumers producers new idea common identify resource producers
consumers scheduling  for example  laborie work scheduling
resource constraints  see laborie        
      producerconsumer actions
simple production action defined follows 
definition     simple producer
ground action simple producer given numeric variable v iff 
effect  increase  v  c   where c positive constant 
precondition refers v 
definition two important consequences 
   table represents debugged version original domain available http   sourceforge net 
projects tsgp files 

   

fia hybrid lp rpg heuristic planning

action
move cart
move train
move ship
fell timber
quarry stone
mine ore
saw wood
make coal
smelt iron
build cabin
build quarry
build mine
build saw mill
build iron works
build coal stack
build dock
build wharf
build house
build cart
build train
build ship
build rail

timber

stone

ore

wood

coal

iron

  
  
  
  
  
  
  

  
  
  

  

  

  
  
  

  

  
  
  

  

  
  
  

  
  

  
  
  

table    production consumption settlers domain
   simple producer produces uniformly  state satisfies preconditions 
effect upon v always increase value constant amount  c 
irrespective precise details s 
   potential maximum value v attained use
restricted value v itself  minimum maximum bounds v
must hold allow production 
define bounded producer follows 
definition     bounded producer
ground action bounded producer numeric variable v iff 
effect  increase  v  c   where c positive constant  
precondition      v     ub c  
preconditions depending v 
bounded producer  a  applied v  ub c   therefore  maximum
amount v attained using a  denoted max prod  a  v   ub  achieved
applying state v    ub c    in practice  state might reachable
actual upper bound value v reachable using might lower ub  
simple producer  a    assume max prod  a    v     
   

ficoles  coles  fox   long

define bounded consumer follows 
definition     bounded consumer
ground action consumer respect given numeric variable v iff 
precondition      v     lb c    
effect  decrease  v  c   c constant
preconditions depending v 
definition analogous bounded producer  since requires v exceed
minimum value allowing consumption  consequence  lb minimum amount
v attained using a  denoted min cons a  v   by applying state
v   lb   c  
are  course  many resource use behaviours might encoded
planning domains  producer consumer behaviour identify natural intuitive
one  a producer produces fixed quantity resource consumer consumes fixed
quantity depends availability quantity   variants
compiled form  e g  consumers must leave fixed sized store resource
untouched simply translate origin resource measurement  consider 
below  possible extensions basic behaviour  nonetheless  must emphasise
heuristic develop paper targeted producer consumer behaviour
usefulness depends common domains practice  frequent
occurrence model scheduling resources suggests natural
useful behaviour 
      producerconsumer variables
definitions  bounded  producer consumer actions  define properties
variables manipulate 
definition     producerconsumer variable
variable v denotes resource produced consumed iff 
set prod  v  actions increase value v contains bounded producers 
set cons v  actions decrease value v contains consumers 
upper bound v bounded producers v
lower bound v consumers v 

   

fia hybrid lp rpg heuristic planning

      handling integer resources
consumer actions  definition      require amount resource available
consumption must least much consumer actually consumes 
domain encodings  behaviour essentially consistent producerconsumer patterns
represented using precondition consumer action consumes c units v
form v   k rather v c  and k   c   general case  v    know
v k    where epsilon infinitesimal positive   c units v consumed 
suggesting lower bound v  k c      however  case consumers
consume integral quantities  rewrite strict inequality since must  
case  consider  example  fragment load action settlers 
 precondition     available timber l     
 effect
 decrease  available timber l     
effects change quantities available resources integral 
rewritten 
 precondition      available timber l     
 effect
 decrease  available timber l     
similar transformation used constant effects variable
rational  simply finding least common multiple  lcm   denominators
fractions involved using     lcm  

   metricff revisited
section briefly review way metricff  hoffmann        handles metric
fluents highlight weaknesses approach faced particular
kinds numeric behaviours planning domains 
    metric relaxed planning graph heuristic
metric rpg heuristic based performing relaxed reachability analysis forwards
state evaluated  reachability analysis captured planning
graph  blum   furst        structure  two elements domain relaxed  delete
conditions actions ignored optimistic upper lower bounds used record
interval possible values metric fluent may reach  positive effects metric
variable increase upper bound reachable values negative effects decrease
lower bound  satisfaction preconditions tested checking value interval
variable satisfies metric condition precondition  interesting note
preconditions tested individually  possible  principle  single value could
satisfy conditions simultaneously  even though condition separately satisfied
value  conjunctions convex preconditions  includes linear conditions 
satisfiable value case condition satisfiable interval
associated variable  except case conjunction inconsistent 
likely arise erroneous domain encodings 
   

ficoles  coles  fox   long

metricff allows preconditions combine multiple variables  effects depend
values variables  lp rpg allow linear combinations variables
preconditions  effects must conform producerconsumer definitions
allow constant increases decreases 
heuristic evaluation state using metric rpg heuristic undertaken two
phases  graph expansion phase solution extraction phase  remind
reader two processes convenience reference discussion follows 
      metric rpg expansion
graph expansion concisely defined follows 
definition     rpg expansion
let f  i  denote fact layer  comprising 
f p  i   set propositions 
f v  i   array upper  lower  bound pairs task numeric variable v
a i  denotes action layer  consisting list ground actions  rpg begins
fact layer  f      defined based state evaluated 
f p     contains propositions hold s 
entry hlbv   ubv f v     set hs v   s v i  i e  value v s 
rpg expanded adding successive action layers  followed new fact layers 
action layer a i      contains actions a  that 
propositional preconditions f p  i  
numeric preconditions satisfied values variables
f v  i  
fact layer f p  i      determined a i      
propositions f p  i      f p  i   plus new facts added
action a i      
values numeric values f v  i      first set f v  i   updated
extending interval variable include values achieved
maximum minimum possible assignment effects  action a i     
turn 
termination condition met  rpg expanded actionlayerfact layer pairs 
reachability analysis therefore consists alternate steps  determining actions
applicable  hence instantiating next action layer  using extend
next fact layer  process presented graphically figure    small problem
facts f     fn numeric variables v    v    considering first propositions 
   

fia hybrid lp rpg heuristic planning



i  

f i  

f 

i  

f i  

f 

f 

f 



f 



f 

f 

b

f 

b

f 

f 

f 

f 

v      

v      
 

v      

  

f 

  

  

 

c

  

 

c

v      
 

v      

v      

figure    portion relaxed planning graph  c produces   units v   consumes
  units v 
arrows fact action layers denote precondition dependencies actions
instance  action appear layer a i      f  present f  i  
arrows action fact layers denote effects instance  f  f  i     
added a 
numeric variables v    v    bounds shown square brackets  action c
seen one precondition  v     two effects  increase v     decrease v 
    c exhibits producerconsumer behaviour consumes   units v    produces
  units v    preconditions satisfied f  i  therefore effects applied
layer a i       upper bound v  increased lower bound v 
decreased  moreover  bounds change layer f  i       possible
application c 
variable bounds continue diverge way  rpg expansion needs
well defined termination condition  positive case  terminate success
first layer f  i  goal propositions f p  i  goal numeric expressions
satisfied f v  i   in relaxed sense   negative case  terminate failure
f  i  three following hold 
   actions appear a i      present a i   and hence new propositions would present f p  i       
   hitherto unsatisfied preconditions v c  action  u b v  would change
f v  i  f v  i      
   hitherto unsatisfied preconditions v c  action  lb v  would change
f v  i  f v  i      
   

ficoles  coles  fox   long

algorithm    adding action relaxed plan
data  r metric rpg  action include relaxed plan  q subgoal
queue
  foreach propositional precondition pre
 
l layer pre first appears 
 
l     insert pre q l  prop 
 
 
 

foreach numeric precondition pre
l layer pre first appears 
l     insert pre q l  num 

intuition behind conditions monotonic expansion rpg
implies that  new facts appearing numeric preconditions could become satisfied future layer  graph expansion stagnated relaxed problem
unsolvable 
      metric rpg solution extraction
expanded planning graph found relaxed solution exists  all
goals appeared   next step extract relaxed solution plan  done
regressing planning graph  using priority queue intermediate sub goals
 latest layer first   subgoal  achieving action added relaxed plan
preconditions added queue goals achieved earlier layer 
relaxed plan extraction algorithm shown algorithm    lines      priority
queue initialised top level goals problem  propositional numeric
goals added priority queue achieved earliest fact layer
appeared  priority queue seeded  solution extraction proceeds regressing
layer by layer  propositions  suffices find action adds fact
increment heuristic value one add preconditions achieving action
queue  using algorithm    numeric preconditions  process slightly
involved 
subgoal achieve v k v k layer f  l   action a l 
assigns value k v  action chosen satisfy subgoal 
otherwise  v k  or v k  must achieved layer f  l   actions increasing
 decreasing  v chosen a l  residual value k  i e 
original value k adjusted take account effects selected actions 
small enough  large enough  reachable layer f  l     residual condition
v k  v k  added queue subgoal achieved f  l    
modified value k 
note lines                    actions chosen action layer  
recorded adding set ha  used basis helpful action set 
action effect common action set ha considered helpful  helpful
actions important element performance metricff  actions achieve
effects exploited relaxed solution state promoted search
state 
   

fia hybrid lp rpg heuristic planning

algorithm    relaxed plan extraction

 

data  r   metric rpg  f     n     problem goals
result  ha   helpful actions  h   heuristic value
ha   h   
q deepest first priority queue goal layers 
foreach p f  
l layer p first appears 
insert p q l  prop 

 
 
 

foreach f n  
l layer f first holds 
insert f q l  num 

 

q empty
 l  hprop  numi  pop q  
foreach p prop
h h      achiever p 
action layer   add ha 
prop prop   add effects a 
call algorithm   r  a  q 

 
 
 
 

  
  
  
  
  
  
  
  
  
  
  
  

foreach  v c  num
action a l  assigned v   k  k c
h h     
l     add ha 
call algorithm   r  a  q 
remove  v c     c  k  v c     c  k num 

  
  
  
  
  

foreach  v c  num
action a l  assigned v   k  k c
h h     
l     add ha 
call algorithm   r  a  q 
remove conditions  v c   c k num 

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

foreach  v c  num
f v  l    v  upper   c
h h      next increaser v 
decrease c  v  a  
l   add ha 
call algorithm   r  a  q 
l     insert  v c  q l    num 
foreach  v c  num
f v  l    v  lower   c
h h      next decreaser v 
increase c  v  a  
l   add ha 
call algorithm   r  a  q 
l     insert  v c  q l    num 

   

ficoles  coles  fox   long

      use relaxed plan search
relaxed plan  computed heuristic calculation  used two ways search 
metricff makes use two stage search approach  number actions
relaxed plan used heuristic goal distance estimate  first search phase 
enforced hill climbing  ehc   greedy hill climbing search approach  thought
performing breadth first search forward initial state i  state progression
action application  state new global best heuristic value found 
state  s  found  states discarded ehc search continues
manner s  search strategy incomplete due greedy nature 
discarding states could lead loss solution  such  followed
complete wa  search  order guarantee completeness planner  subject
sufficient time memory  
since ehc phase already incomplete  designed find solutions quickly 
metricff makes use another completeness sacrificing technique order attempt
guide planner solutions quickly  technique referred helpful action
pruning  here  actions helpful action set state considered
successor generation  actions helpful discarded  note pruning
used best first search would compromise completeness  practice helpful
action pruning improves performance metricff many domains  however 
lead difficulties actions needed find solution given state appear
helpful action set  attempt compensate this  ehc terminates
considering helpful actions  returns state last global best heuristic
value  searches considering applicable actions  either terminates
 leading wa   state new global best heuristic value found 
point helpful action pruning re enabled  ehc continues 
    problems metric rpg heuristic
although metric rpg powerful tool support planning metric fluents 
common situations planning problems heuristic gives flawed
guidance  problems include resource persistence cyclical resource transfer 
discuss phenomena result misleading heuristic guidance
relaxed plan length poorly approximating actual solution length helpful
action distortion 
      resource persistence
resource persistence consequence using relaxation ignores negative effects 
resource consumed disappear relaxation negative effects 
opportunity reuse resource suggest significantly shorter plan
available case reality  although problem occurs propositional
metric fluents  fact metric fluents commonly encode resources must
carefully managed means problem often acute domains metric
fluents  example  state settlers domain   units resource
produced ship required  either goal means travel
   

fia hybrid lp rpg heuristic planning

otherwise inaccessible location   relaxed plan require production
resources  see table    
one approach approximating number missing resource production actions
introduced planner sapa  do   kambhampati         v   state
evaluated  relaxed plan consumes c units v  produces p 
 c p    s  shortfall production v  would necessitate additional
actions added relaxed plan  case  maximum amount v
produced single action v  heuristic value increased by 


cps
 
v
increase lower bound number additional actions needed and 
indicate actions might be  serves increase heuristic value states whose
relaxed plans resource production shortfalls  does  however  two main limitations  first  relaxed plan extraction  such approach shown algorithm    chooses
actions without consideration undesirable resource consumption side effects 
good search choice might lead state worse heuristic value purely
accident choice achieving actions  consuming resource unnecessarily   second 
increasing heuristic value without adding specific additional actions relaxed plan 
helpful actions record fact appropriate resource production helpful 
      cyclical resource transfer
phenomenon cyclical resource transfer  crt  consequence encoding
actions move resources around  combined relaxation negative effects 
encode movement resource  removed one location added another 
removal encoded decrease relaxed building metric rpg 
result  moving resources appears generate new resource destination  making
movement spuriously attractive alternative production  consider state  
unit timber cart location  p   goal   units timber
p   clearly  solution plan must involve production timber  however 
valid relaxed plan solution  found using metric rpg heuristic  is 
  
  

 load v  p  timber 
 unload v  p  timber 

      helpful action distortion
problems resource persistence crt important consequence ehc
search  result relaxed plans misleadingly short lengths 
relaxed plans typically contain production actions useless transfer actions 
situation  production actions often appear helpful action set 
therefore included ehc search  even states could conveniently
applied  refer problem helpful action distortion  illustrate arises 
reference settlers domain  consider state unit
timber location a  goal unit timber location b  relaxed
plan use timber construct cart load timber onto cart
transport it  planner therefore consider producing timber 
   

ficoles  coles  fox   long

   compiling producerconsumer behaviour mathematical
program
section describe mathematical program built characterise
interaction numeric variables action choices producerconsumer framework 
    constraints producerconsumer variables actions
definition producerconsumer variables  definition      implies actions
useful property preconditions variables derived effects
actions  together global variable bounds  specifically  action a 
produces c units v precondition requiring v d    ub v  c 
ub v  global upper bound v applied  condition
expresses effect upper bound precondition value
v  since v ub v   
consumes c units v v must satisfy v lb v    c action
applied  again  expression leads effect precondition tied
one constraint 
ordering actions relaxed  that is  causal relations force
ordered ignored  value v series actions applied  v    
given by 
x
v    v  
ca   v  a 
   
aa

ca non negative  count  variable indicating many times action
applied  v    lb v   ub v    v  a  defined follows 
produces c units v  v  a    c 
consumes c units v  v  a    c 
otherwise   v  a      
note equation linear  since definitions         require  v  a  constant
v a 
equations support construction mathematical program consisting one
variable action  a  one variable flow equation producerconsumer
variable  v  program is  fact  mixed integer program  mip   variables
 the action counts  a  represent applications actions  integral  however 
relaxation exploited allow action count variables take non integral
values  yielding linear program  lp   significant potential benefit
lps solved far efficiently mips 
   

fia hybrid lp rpg heuristic planning

    bounding action variables
within equation associated state variable  i e  equation     action
corresponding variable denoting many times applied  general
limit number times action applied  however  numeric decrease
effects propositional delete effects may impose constraints practice  due limited
availability resources  example  applying action increases v expense
decreasing w  w resource producer  limit
ca implicit consequence instance equation   governing value w 
specifically  ai never exceed w  w  a   value w divided change causes
w  moreover  w monotonically decreasing  w  a  constant action
a  global upper bound ca set w i   w  a   w i  value w
initial state  i 
action increases v expense irreversibly deleting fact p  fact
precondition  clearly applied one shot action  coles 
coles  fox    long         however  contrast numeric delete effects discussed
above  captured producerconsumer constraints concerned
numeric change  however  constraint use captured
setting upper bound ca    moreover  collection actions a     an 
depend fact p irreversibly delete it  say form one shot
action set p  add constraint 
ca    ca          can   

   

    assignment constraints
general  direct assignments values variables cannot represented directly constraints following form equation    assignments correspond  effectively  statedependent increases decreases  instance  assignment value   variable
v  state v      equivalent producing   units  equivalent consuming
  unit applied state v      however  producerconsumer equations
notion state  coefficients action variables denote production
consumption  therefore  state variables subject constant valued change
mip cannot used encode general assignment effects without extending
allow quadratic constraints  that is  constraints involving products pairs variables  
however  specific conditions assignments safely modelled
within mathematical program retaining linearity constraints 
one class assignment effects encoded mip
actions assignment effects variable  v   k  applied states
v   c known constant  c  case  effect rewritten
increase effect v k c  making assignment actions follow standard pattern
producer consumer actions  particular case rewriting made possible
following conditions hold set actions a 
   action depend upon affect v condition satisfied
achieved actions actions a 
   applying action precludes assignments v 
   

ficoles  coles  fox   long

conditions ensure set actions assign v form one shot action
set value v assumed   prior application one actions
set  action set rewritten increase v assignment value 
situation one arises encodings objects created certain actions
objects associated metric variables initialised object creation
 such capacity newly created vehicle settlers domain  

   linear programmingrelaxed planning graph heuristic
defined producerconsumer behaviour shown supports construction
mip action ordering relaxed  mip is  principle  hard solve  constructing
solutions np hard   basis heuristic evaluation states seems sensible
relax integrality constraints action variables reduce problem
linear program  first consider lp used two stages heuristic
evaluation state  reachability analysis relaxed plan extraction 
reconsider question whether relaxation linear program necessary practice
compromise might full mip lp 
    overview
context use lp forward state space search planner  task
intend use heuristic evaluation states  thus  assume
state  a complete assignment variables define problem 
propositional numeric  interested estimating number actions
required transition goal state  approach use based
strategy used metricff  first construct reachability analysis using layered graph
alternating facts actions extract relaxed plan  determine whether
action applied reachability stage check propositional preconditions
usual way numeric preconditions checked determining whether values
reachable ranges recorded metric variables satisfy condition 
reachable ranges calculated using lp described  explain below 
extraction relaxed plan involves determining actions support required
conditions  both goals preconditions selected actions   conditions
involve numeric variables use lp decide actions required
many used 
    using lp graph expansion
graph expansion phase calculation metric rpg heuristic seen
layer by layer relaxed propositional reachability analysis  synchronised relaxed
numeric bounds analysis  definition     shows numeric variable bounds appear
graph expansion algorithm two places  first  f  i  used determine
actions appear a i       next action layer  those whose preconditions within
reachable range   then  actions deemed applicable used update variable
bounds subsequent fact layer  f  i      
   

fia hybrid lp rpg heuristic planning

maximise  v  
v           cc
v         cc
v    
v    
c 

v  
 
 

v  

 

cc
  
 

 
 




 
 
 

 a  equations

max
 
 
 
 
 

v         
v         
 c  solutions min max

 b  rowcolumn

figure    lp maximise value v  layer f  i      figure    treating layer
initial state construction 

due relaxed nature way numeric values considered  metric rpg
tends produce highly optimistic bounds numeric values  returning figure   
see that  effect  action c converts two units v  two units v  and 
initially  two units v  present  hence  most  could hope produce two
v    f v  i       upper bound v  already    ignoring consumption effect
c makes possible produce arbitrary amounts v    c applicable upper
bound v  greater equal two  reality true long c
yet applied 
accurate estimate variable bounds layer f v  i  found using
lp encoding described section      model parameterised follows 
action variables corresponding actions a i  used  ensures
reachable actions considered computing resource bounds  relevant
one shot action constraints included  absence restriction number
action applications contrasts constraint used metric action
may applied per action layer  practice prevent lp variables
becoming unbounded  set finite  large maximum value action variables 
initial value variable v set state  s  evaluated 
post value variable  v     f v  i  v   range values could reach
f v  i   always  v    lb v   ub v   
substituting parameters producerconsumer equation  equation    yields 
x
f v  i  v    s v   
ca   v  a 
   
aa i 

model  use lp solver find upper lower bounds
f v  i  v   setting objective function accordingly 
returning example  consider finding upper bounds variables f  i   
figure   starting state corresponding one given figure  thus 
considering constraints layer   following state treating starting
point   corresponding lp shown figure    primed variables ones
   

ficoles  coles  fox   long

use represent values numeric variables layer interest  i e 
case layer   ahead state evaluated   maximising v     i e  using upper
bound f v  i  v     yields result    greater value possible  since setting c
value greater    and thus producing v    would lead violation constraint
v      ranges variables computed  using lp four times  minimising
maximising two variables   shown figure  c  seen 
improve bounds calculated situation metricff  figure    
v          v          respectively 
      notes lp efficiency
lp solved twice per variable per layer expanding planning
graph  important steps taken minimise computational cost  reduce
costs using combination techniques  avoid needing solve lp
computing bound given variable  others reduce cost solving
lp itself 
   first  consequence termination criteria rpg expansion  section        
need compute upper  lower  bound given variable current
value large enough  small enough  satisfy preconditions goals
appears  case  avoid solve lp determine variable
bound  instead re use bound computed previous layer  without
affecting behaviour heuristic 
   variable never appears numeric precondition goal  entirely
excluded lp 
   bounds variables change monotonically additional layers added
planning graph  therefore  computing new upper  lower  bound variable v temporarily add lp constraints corresponding bounds
computed preceding layer  each added separately variable first minimised maximised   so  refuse admit tighter variable bound
previous layer 
   finally  actions increase  decrease  effect variable yet
added lp  need compute upper  lower  bound variable 
effect bound variable increased  decreased 
beyond value state evaluated 
    basic use lp solution extraction
consider lp used give guidance action selection relaxed
plan extraction  first  observe lp directly affected propositions 
hence cannot used find actions able achieve given fact  thus 
concern lp used identify actions use attain
numeric subgoals either top level numeric goals  numeric preconditions
actions chosen solution extraction 
   

fia hybrid lp rpg heuristic planning

algorithm    adding weighted action relaxed plan

 
 
 
 
 
 
 
 
 
  
  
  

data  r metric rpg  action include relaxed plan  q subgoal
queue  w weight
foreach propositional precondition pre
l layer pre first appears 
l    
 pre  k  q l  prop
k   w k w 
else insert  pre  w  q l  prop 
foreach numeric precondition pre
l layer pre first appears 
l    
  pre   k  q l  num
k   w k w 
else insert   pre   w  q l  num 

first key difference using lp relaxed plan extraction concerns
choice actions achieve numeric preconditions  original metric rpg heuristic 
given numeric precondition  e g  x c  fact layer     regressed
beneficial numeric effects layer i  giving residual numeric precondition  e g  x c   
achieved fact layer i   this process shown lines       algorithm    
lp rpg case  shown algorithm    numeric precondition layer l  temporarily 
added lp generated layer l  as constraint  line      find actions use
achieve this  lp solved  line      objective minimise weighted
sum across action variables  one possible weighting scheme suffice
purpose minimise sum action variables  though return question
appropriate weighting schemes later paper   finally  actions whose corresponding
variables non zero  line     added relaxed plan  lines        
second  must accommodate fact lp  relaxation underlying
mip  in action variables integers   may solved applying actions nonintegral number times  simple example  several actions increment
given variable  alone would suffice achieve goal value variable 
valid optimal solution lp sum variables corresponding actions    every action non zero action count variable
solution considered applied relaxed plan length could greatly over estimate
required number actions  mitigate problem  subgoal  e g  x c  arising
solution extraction associated weight  weights  along
values given action variables lp  used update relaxed plan length 
weights manipulated throughout algorithms      use summarised
follows 

initially  goal fact added subgoal queue associated weight    i e 
achieved  entirely  note that  contrast algorithm   
   

ficoles  coles  fox   long

algorithm    relaxed plan extraction lp

 
 
 
 
 

data  r   metric rpg  p g   propositional goals 
n g   numeric goals
result  ha   helpful actions  h   heuristic value
ha   h   
q deepest first priority queue goal layers 
foreach p p g
l layer p first appears 
insert  p     q l  prop 

 n g     
l final layer r 
 
insert  n g     q l  num 

 
 

 
  
  
  

else
f fact n g 
l layer f first holds 
insert   f       q l  num 

q empty
 l  hprop  numi  pop q  
foreach  p  w  prop
h h   w 
achiever p 
action layer   add ha 
  
call algorithm   r  a  q  w 
  
prop prop   add effects a 

  
  
  
  
  
  

  
  
  
  
  
  
  
  
  
  
  
  
  
  

foreach  g  w  num
lp lp l    constraint s  g 
solve lp  minimising weighted action sum 
av  action variable  a   c  lp   c       
foreach av
h h   w c 
layer   add ha 
foreach propositional precondition pre
l layer pre first appears 
c min c     
 pre  k  q l  prop
k   w c k w c 
remove  pre  k  q l  prop 
else insert  pre  w c  q l  prop 

subgoal queue records layer goal introduced well
associated weight 
action chosen applied ca times achieve queued propositional numeric sub goal g  either 
chosen applied  i e  ca      achiever propositional
subgoal g  associated weight w 
   

fia hybrid lp rpg heuristic planning

action applied  given non zero value ca   solving lp
achieve numeric subgoal g  associated weight w 
cases  relaxed plan length incremented ca  w 
weight given preconditions w    w min ca       weights
preconditions used update weight attached achieving corresponding sub goals earlier layers 
propositional precondition p already recorded subgoal earlier
layer  weight k  weight updated max k  w     otherwise 
p added subgoal rpg  satisfied first layer
appears  weight w   
case added support propositional sub goal  numeric
precondition p already recorded subgoal earlier layer 
weight k  weight updated max k  w     otherwise  p added
subgoal rpg  satisfied first layer appears 
weight w   
    consequences use lp solution extraction
use lp aid identification selection actions support achievement
numeric goals subgoals extraction relaxed solution lead
important consequences heuristic guidance offered relaxed solution 
already noted problem non integral fragments actions might combined
achieve numeric effects indicated managed handling fractional
preconditions fractional action costs  however  potential problems
discuss 
      partially applied helpful actions
consider situation precisely five possible ways achieve particular
numeric goal  uses three actions  simple example small
problem settlers domain  five carts unit timber available
location a  goal one unit timber location b achieved loading
timber onto carts a  moving b  unloading b 
metric rpg heuristic used achieve goal  three actions would used 
working backwards goal  selected actions would be 
action layer three  unload action  from cart c  increase amount timber
b 
action layer two  action move cart c b 
action layer one  action load unit timber onto cart c 
solving lp achieve goal  ignoring propositional preconditions  
objective minimising sum action variables  solution returned
   

ficoles  coles  fox   long

objective value    denote relevant load unload action variable pair
cart  li   ui    pool solutions could returned satisfying 


li   ui

i      

 

x

 li   ui       

i      

then  non zero variable ui   k relevant action move cart b
added relaxed plan  weight k  line     algorithm    
purposes providing contribution relaxed plan length  unimportant
solutions returned  sum action variables   
sum move actions added    giving total relaxed plan length    however 
discussed section        relaxed plan used determine set helpful actions 
effect common actions relaxed plan chosen
action layer one  example  action layer one consists action  or actions 
load unit timber onto cart a  original metric rpg case  exactly one action
would used  however  using lp five actions could  fractionally  used 
consequence within pool lp solutions could returned 
lead search much greater branching factor  case factor
five greater 
source problem relaxation integrality constraints action
variables extent affects search depends precise solution returned
lp solver  different solvers may greater lesser tendency return solutions
action variables assigned non integral values  extreme response
problem would revert mip require action variables integral rather
real valued  alternatively  focussing issue identified here  one could require
action variables corresponding actions action layer one integers  either
case  result mixed integer programming problem  since cost mip solving
exponential number integer variables  difference variants
significant  change need made point switch using
lp solution extraction rather graph expansion as  prior this  assignments
action variables unimportant  only value objective function used  
course  price pay potentially significant  mip solving np hard 
lp solving polynomial  however  exchange shift complexity 
example given above  left single helpful action  longer possible
fractionally load timber onto cart  one cart must chosen  extent
two possible integer modifications affect search performance considered later
evaluation 
      preferring earlier actions
within metric rpg heuristic explicit preference using actions
appear earlier relaxed planning graph  shown algorithm    fact
needed  either goal satisfy precondition action chosen insertion
relaxed plan  queued sub goal satisfied first fact layer
appeared  then  action chosen support fact  amongst
earliest possible achievers  intuition behind preference earlier actions based
   

fia hybrid lp rpg heuristic planning

observation that  later action appears relaxed planning graph 
greater number actions need added relaxed plan support
preconditions  therefore  preferring earlier actions usually leads shorter relaxed plans
hence closer approximations optimal relaxed plan length 
within lp  objective set minimise sum action variables  i e  use
actions possible   distinction actions appear earlier
rpg appear later  recalling lp disregards propositional
preconditions actions  failing take account action first added
rpg lead lp based relaxed plan extraction generating poor quality solutions
and  consequently  poor search guidance 
address this  pressure generated within lp objective function
tuned prefer actions need fewer supporting actions relaxed plan 
achieved forcing lp favour actions appear rpg earlier  encode
preference earlier actions weighting scheme action variables
objective function  actions appearing earlier given smaller weights
appear later  propose  and  later  evaluate  two ways achieving this  first 
simpler  use geometric series dictate coefficient given action variable
based layer l first appears  case  objective coefficient
is 
kl
k   k     
value k controls extent earlier actions preferred  interpreted treating k n actions selected layer l exactly good selecting n actions
layer l      so anything less k n actions layer l preferable selecting
n actions layer l       throughout remainder paper  refer scheme
layer weighting value k 
second option record  cost action  estimate number
actions needed support propositional preconditions  use weight
objective function  achieved using rpg cost propagation algorithm
sapa  do   kambhampati         achieve this  planning graph expanded 
costs fact action recorded updated layer  initially  fact
p state evaluated  cost fact layer zero  cost p      zero   for fact
p true time zero  cost p          fact costs used derive action
costs  using rules akin used hadd  hmax  bonet   geffner         cost
action layer t  cost a  t  defined according one either 
cost max  a  t    max cost p    
ppre a 

cost sum  a  t   

x

cost p     

ppre a 

action costs  turn  used update costs proposition
subsequent fact layer  cost fact reduced cheaper
way achieve it  action layer t  potentially reduce cost
propositions p adds 
cost p  t    cost a  t      iff  cost a  t         cost p    
  cost p     otherwise
   

ficoles  coles  fox   long

planning graph expanded  process alternating action cost estimation 
fact cost estimation  used propagate cost information rpg 
setting objective lp  use cost action  cost a  t   coefficient
action variable corresponding a  using cost propagation described 
costs derived solely basis propositional preconditions effects  therefore 
cost a  t  estimate number actions needed support preconditions
a  purposes  desirable  lp will  itself  add actions support numeric
preconditions  estimate number actions needed support propositional
preconditions action measure cost impact upon relaxed plan due
action selected 

   adding propositions lp
benton et al         explore idea using lp guide search propositional planning
problems context over subscription planning  work lp used
determine goal subset achieve  gain maximum utility  whilst successful
achieving aim  authors observe use lp heuristic guide search
expensive  indeed expensive feasible  propositions encoded
lp way propose  task solving lp becomes equivalent solving
entire planning problem relaxed action ordering non integer action variables 
section  reconsider inclusion propositions lp  considering spectrum
possibilities including propositions way include propositions 
even though focus work numeric problems  including propositions
lp might still interest  instance  supporting propositional goal might
require consumption numeric resources  worst case  one could compile
problem numeric goals become preconditions action achieves
dummy propositional fact goal  modify problem goal goal  since
numeric goals modified problem  lp used solve
individual preconditions dummy action  inevitably  chosen  rather
requiring goals satisfied conjunction  described section      since
dummy goal model merely reformulation original problem  information
theoretically accessible conveyed lp  generally  hope
identify intermediate landmark propositions  well final goals  could usefully
encoded lp 
    adding propositional goals lp
although lp describe section   contain specific reference propositions  hence propositional goals  formulate constraints act proxy
them  considering actions achieve them  need introduce additional
variables  instead  add constraints ensure least one achiever chosen
propositional goal  goal fact g true state evaluated 
list actions  a    an    achieve g  add constraint lp
recent layer planning graph 
a          an    
   

fia hybrid lp rpg heuristic planning

is  least one achieving action must used or  specifically  given actions
partially applied  total least one achieving action must used  lp
containing constraints used augment positive termination criteria
graph expansion  detailed section        terminate first fact layer where 
   goal propositions f   f p  i   as before  
   goal numeric expressions n   satisfied  individually  f v  i   as before  
   lp used compute numeric bounds layer f  i  still solvable
constraints propositional goals added 
use goal checking lp two key consequences  first  actions layer
f  i  cannot used satisfy goals whilst respecting numeric constraints
lp  additional layers added planning graph necessary actions
appeared  or termination criterion reached   thus  reasoning resource
persistence  section         heuristic better able recognise cases where  although propositional goals might appear individually reachable  either additional
production needed meet collectively  alternative actions need used 
state dead end  second  solution lp used confirm point     above  used
indicate actions add relaxed plan achieve propositional goals 
propositional preconditions actions satisfied usual way  line   
algorithm    
requiring sum action variables selected achieve goals
least one  allowing variables real valued  lp could  theory  provide
weaker guidance rpg  similar issue noted section      
considering helpful actions  could ameliorated similar manner  namely making
goal achieving action variables integral  return issue evaluation 
considering whether benefits search 
    using landmarks lp
landmark fact  hoffmann  porteous    sebastia        propositional fact must
true point every solution plan given planning problem  first work
landmarks  porteous  sebastia    hoffmann        proposed method extracting
subset landmarks planning problem based regressing goals using
delete relaxation ff  since introduction idea       porteous et al         
landmarks come play increasingly important role planning  recent development new techniques extracting landmarks  richter  helmert    westphahl       
zhu   givan        development heuristics based different relaxations  richter
  westphal        domshlak  katz    lefler        helmert   domshlak        karpas  
domshlak        allowed planning community exploit landmarks successfully 
relaxed plan extraction phase lp rpg heuristic relaxes action ordering
propositional preconditions effects might benefit substantially delete relaxation
landmarks  use landmark facts lp offers mechanism
tightly couple lp rpg  allowing increased information sharing
   

ficoles  coles  fox   long

propositional numeric components heuristic  know landmark
fact must occur solution plan  yet appeared path state
evaluated  add constraints representing lp 
propositional goals  is  sum action variables  a    an    achieving
given landmark must greater equal    propositional goals  constraint introduces need provide numeric support action s  chosen support
landmark  goals special case landmarks  important feature goals
that  even achieved path current state  true
current state must reachieved  constraints added lp
ensure this  reflect landmarks achieved path current state 
state modified record record updated new landmarks seen 
approach similar lama  richter   westphal        
set disjunctive landmarks set propositional facts  one must
true solution planning problem  extraction disjunctive landmarks
considered  gregory  cresswell  long    porteous        even difficult
case conjunctive landmarks exploit planning systems 
knowledge certain fact must true allow planner infer certain actions
must present solution plans  inform heuristics  however  disjunctive
landmarks less informative  disjunctive landmarks often arise problem symmetry 
example  might know order deliver package one place another
loaded truck  truck  disjunctive landmark
package truck generated  even know truck use 
know one disjunctive landmarks must hold  thus  context numeric
resources  truck must fueled  assuming start empty   might entail
additional costs  therefore interest take account disjunctive landmarks
numeric reasoning 
able make use disjunctive landmarks lp constrain
problem  ensuring support given least one fact within  unreached  disjunctive landmark  dealing standard conjunctive landmarks  constraint
sum least one achiever must added propositional landmark 
disjunctive landmarks  however  constraint slightly different  disjunctive landmark
set l satisfied constituent landmarks satisfied  is  apply
actions 
achieves l     a   eff    a  l      
encode disjunctive landmarks lp  assuming yet met 
two possibilities  first add binary variable sf fact f l 
constraints sf take value   least total one action
adding f   least one variable sf take value    is  least
one disjunctive landmarks top
fully met  alternative  potentially cheaper 
approach add constraint   achieves l      allows disjunctive
landmark considered satisfied sum across action variables supporting
constituent facts least    somewhat weaker constraint individual 
non disjunctive landmarks  guarantee support least  
individual constituent fact  instance  two fact disjunctive landmark satisfied
support constituent fact      considered approaches
   

fia hybrid lp rpg heuristic planning

found negligible difference performance  time taken nodes expanded 
two encodings real saving achieved using relaxed approach 
    managing propositional preconditions effects
far  considered propositions must achieved planning problem due
goals landmarks  however  second class propositions  that  given
values assigned action variables lp  must supporting actions added
solution relaxed plan 
extend lp capture propositional preconditions effects  first introduce
binary variable f  an integer whose value      fact f true
state evaluated  involved two constraints  first  actions
 
 a 
     an    add f  
 
a 
          an  f 
case proposition corresponding f goal  f     hence one
achieving actions must positive value  since constraint expressed using
continuous variables  actions might partially applied relaxation   then 
actions  ap    apm    f precondition 
n f ap          apm 
use n denote  sufficiently  large number  constraint ensures
least one actions depending proposition corresponding f used relaxed
plan  f must positive  that is  corresponding proposition required true
within relaxation   use n ensure f     sufficient satisfy
preconditions many actions  pair constraints effectively conditional version
constraint meet propositional goal  described section      cases
proposition neither goal landmark  constraints serve enforce least
one action adds f chosen  has positive value  lp action requiring f
chosen even partially  
    recognising propositional resources
finally  consider one case potentially useful model propositions
equivalent numeric form  pddl  finite domain integer resources modelled
two ways  numeric variables  set propositions  consider following two
formulations fell timber action settlers domain  for simplicity effect
metric tracking variable labour omitted  
  action fell timber
 parameters   p   place 
 precondition  has cabin  p 
   tempting consider replacing constraint  slightly troublesome n   constraints
form f api i  unfortunately  appropriate action variable  api  
greater    due multiple applications action  yet f     sufficient satisfy
precondition action applications 

   

ficoles  coles  fox   long

 effect  increase  available timber  p    
 
  action fell timber
 parameters   p   place  n   n    value 
 precondition  and  has cabin  p 
 timber  p  n  
 less than  n   n   
 effect  and  not  timber  p  n   
 timber  p  n   
 
representations models situation  uses different mechanism so  first uses numeric variables  second uses propositions 
using either numeric propositional formulations metricff heuristic 
little practical difference guidance given  numeric case  fell timber
action applied  upper bound amount timber place p increased 
means action consuming amount timber executed subsequent
layers  regardless many actions using resource applied 
propositional case  delete effect timber  i e  deleting fact
previously some  relaxed so  again  number actions requiring amount
timber applied 
turning attention lp rpg heuristic  however  observe although
rpg part heuristic exhibits weakness propositional case 
different relaxation used lp numeric reasoning means consumption
timber would disregarded  lp relaxes action ordering  rather delete
effects  or production consumption effects   resource modelled numerically 
interaction captured accounted for  therefore interests using
lp rpg convert resources modelled propositionally numeric formulation 
reasoned lp  rather rpg 
although formulation resources example instance common
idiom used capture numeric resources propositional encoding  situations
natural model resources propositionally outset  often
case binary resources  resources either present not  resources are 
course  special case general resource model described above  consider
propositional numeric counterparts action switch water pump 
  action activate
 parameters   p   pump 
 precondition  off  p 
 effect  and  not  off  p  
 on  p  
 
  action activate
 parameters   p   pump 
   

fia hybrid lp rpg heuristic planning

 precondition      pumping  p    
 effect  increase  pumping  p    
 
corresponding actions similarly created switch pump  the fact  on
 p  deleted  off  p  added  equivalently unit  pumping  p  consumed  
many senses  natural formulation action first  using propositions 
way binary resources encoded benchmark domains  however 
second formulation equivalent  assuming value  pumping  p  initial state
      interaction propositional resource resources
identified planning problem  little motivation add lp  since
numeric support required  case binary resource impact another
numeric variable is  shall see  efficient model numeric resources 
suppose water pumps control flow water  two ways model
pddl shown below 
  action activate
 parameters   p   pump 
 precondition  off  p 
 effect
 and  increase  water flow    
 not  off  p  
 on  p  
 
  action activate
 parameters   p   pump 
 precondition      pumping  p    
 effect  and  increase  pumping  p    
 increase  water flow     
 
first two actions switches pump  a binary  propositional resource 
produces unit  water flow   actions domain preconditions
water flow  action run water wheel precondition    water flow    
interaction propositional numeric variables problem 
use first model action  rpg capture propositional part
action  whether pump off  lp encode numeric part
action  since rpg relaxes delete effects represent fact  off  p 
longer true and  hence  prevent pump switched many times 
lp built using first formulation  action activate consume numeric
resources  used arbitrarily often increase water flow fact
switching necessary achieve increase ignored  thus  mixing propositions
numeric resources action degrades information available lp 
using second formulation  state pump appears lp variable 
use activate deactivate denote actions activating deactivating
   

ficoles  coles  fox   long

pump  constraints pumping   variable are 
pumping     init   activate deactivate
pumping    
pumping    
clear activate action applied once  applied
deactivate must applied  corresponding effect water flow  order
satisfy last constraints  provides useful guidance  indicates
water flow cannot reach   units using actions  actions control pumps 
means increasing flow  need added lp  expansion
planning graph  means attain sufficient flow found  dead end
discovered would otherwise wasted search effort 
static analysis techniques capable identifying propositional resources developed  such tim system described long   fox         used
preprocessing stage recognise propositional resources planning domains translate
equivalent numeric resources  use translation approach recognised
resources  resulting numeric preconditions effects included lp
way numeric variables  so  lp order relaxation rather
rpg delete relaxation used compute heuristic values  preventing impossible reuse
resource cases described 

   extending scope numeric reasoning lp
section   discussed lp encoding captures producerconsumer behaviour
actions  used first version lprpg  coles et al          section discuss
encoding enhanced  use numeric information representing
structure planning problem  improve guidance resulting heuristic
provide planner  address two key issues here  ensuring conjunctions
numeric goals satisfied  considering issue fractionally applied actions
lp 
    checking numeric goals alongside propositional goals
section     noted constrain lp finds actions achieve
propositional goals  extend further  capture numeric goals  n     adding
numeric goal directly lp constraint  propositional goals 
clear advantages terms resource persistence  section         insisting goals
simultaneously achievable  rather individually achievable  additionally  though 
raises expressive power numeric goals able handle anything
expressed linear normal form  lnf  lnf formula added
lp constraint 
    catalytic resources
far considered numeric variables conform producerconsumer behaviour  however  another related class variables expressed
   

fia hybrid lp rpg heuristic planning

lp similar way producerconsumer variables  variables represent resources must present order action applied 
consumed  resources used support many actions    example
resource catalyst chemical reaction  catalyst must either created
reactions  bought  present  enables reactions  allows take
place quickly  catalytic reactions  resource must present 
consumed  though could non catalytic reactions may consume resource 
another example one might consider building unit plant  support
process  unit must order process occur  built
used many times enable actions without necessitating destruction  often
planning problems  presence structures represented propositions 
need case  many indistinguishable processing units present  several
units catalyst needed  often makes sense represent numerically   
extend lp rpg heuristic provide guidance problems 
actions require v c affect value v  encounter difficulty
lp encodes notion time  ordering actions relaxed  impossible ascertain
value v specific time order determine whether  catalyst  precondition
satisfied not  therefore add additional constraints lp determine upper
lower bounds v obtained optimistic pessimistic possible ordering
actions whose variables non zero  find optimistic upper lower bound
v  v v respectively  add constraints 
x
v   v  
a  max  v  a     
   
aa
v   v  

x

a  min  v  a     

   

aa
upper bound equivalent ordering production actions consumption
actions  lower bound  reversed  equivalent consumption actions
ordered production actions  bounds computed
possible values resource variables reachability graph 
considering actions actually selected execution relaxed plan 
rather could possibly applied  seen  neither requires
explicit notion time 
using bounds  action precondition v c applied  even
fractionally  must case v c  otherwise precondition action
could never met ordering actions chosen  course  v c  cannot
guarantee legal ordering producers consumers achieves
value  need least feasible opportunity satisfy precondition
added lp introduction binary         integer  variable pair
constraints  actions  a    an    requiring precondition v c  using n
   note complementary class variables whose values must remain certain level
order actions applied  produced  seem less useful real problems 
nonetheless handled analogous way 
   section   show could captured lp even expressed propositionally 

   

ficoles  coles  fox   long

denote large number  denote new binary variable  add pair constraints 
n s a          an 
v lb v     c lb v   s

   

first constraint forces take value   actions requiring
precondition v c applied  second constraint determines lower bound
v based value s       lower bound v lb v   global lower
bound v  otherwise       since action needing precondition applied 
thus v c  constraint     implies least one
actions  a     an    applied  however  since non zero value makes
lp harder solve  pressure set     reason
precondition must satisfied  important note constraints
added lp problems v c preconditions matched v   c effect 
modified heuristic able support planning models previously could not 
behaviour domains without characteristics entirely unaffected 

   results
section present thorough evaluation lp rpg heuristic  comparing
state of the art numeric planners  considering use different lp solvers performing
ablation studies determine effective many potential different configurations lp rpg discussed paper  include weighting action variables
lp according rpg layer appear  inclusion propositions
numeric goals lp consideration variables lp remain
integer relaxed real numbers  tests run    ghz
pentium iv machines limited    minutes    gb memory  planner
planner configuration fails report solution within limits deemed
failed solve problem 
    evaluation domains
first discuss selection evaluation domains  purpose selecting domains
select construct examples informative evaluating behaviour
heuristic  domains numeric variables conform producer consumer
behaviour identified syntactically different planning strategy
employed  since syntactic analysis trivial  overhead making decision
negligible  assume performance domains approach
applicable consistent whichever alternative strategy selected deployment 
consider existing competition benchmarks producerconsumer behaviour 
introduce new domains exhibit behaviour  current benchmarks exhibit interesting producerconsumer behaviour  order make comparison informative possible make use do 
mprime domain ipc   
rovers domain  numeric variant  ipc   
   

fia hybrid lp rpg heuristic planning

settlers domain ipc   
alternative encoding settlers domain  described below  
pathways domain ipc     we developed metric domain derived
metric time variant  replacing durative actions comparable nontemporal actions  
addition standard ipc problem set settlers  problems       introduce
new problems make full use scope domain  domain allows
building ships transporting materials disjoint islands  however 
benchmark set none problems require this  building ships requires large amount
infrastructure  therefore add problems challenge planners 
materials must imported overseas order achieve goals  first problems
     requires merely building ship     requires import timber overseas 
   requires building housing overseas     adds goals     requiring
planner achieve goals mainland build housing island  final
problem      considers   disjoint islands resources must combined achieve
goal island  problems requires building much greater infrastructure
required original ipc   settlers problems  consider two variants
settlers domain  standard ipc   domain  encoding based representation
carts proposed gregory rendl         here  number carts given
location represented numeric variable  carts at  location   two
possible move actions carts  one moves cart unit resource one
location another  one moves cart without moving resources  i e 
cart moves whilst empty  encoding possible carts transport
single unit material  necessary maintain specific named identities
capacities cart 
addition benchmark domains  use two domains created development lp rpg 
market trader domain  coles et al         
hydro power domain 
market trader domain  trader begins small amount money 
goal increased certain level  must achieved travelling
markets  sells collection goods certain price
good type  buys another  lower  price  money made buying items
cheaper transporting  via camel  locations command
higher price  moving associated cost food required camel 
representation general class real world trading problems aim
make money buying  transporting selling goods  hydro power domain
concerned financial gains  domain different structure  rather
transportation  concerned energy storage using hydroelectric reservoirs 
buying electricity pump water uphill periods low demand  electricity
cheaper  storing potential energy  electricity sold higher price
   

ficoles  coles  fox   long

domain
market trader
hydro power
pathways metric
settlers
settlers numeric carts
mprime
rovers numeric
sugar
total

lp rpg
  
  
  
  
  
  
  
  
   

lp rpg ff
 
 
  
 
  
  
  
 
  

metricff
 
 
  
 
 
  
  
  
  

lpgtd
 
 
 
  
 
  
  
  
   

table    coverage achieved different planners

times greater demand  domain encoding augmented take account energy
loss  purchasing one unit energy sufficient provide one unit energy later
losses storage process  problem  despite temporal axis 
interested profit made  force planner advance time
specific point  ask sufficient profit made planner
choose advance time necessary  general problem models continuous processes 
customer demand changes continuously  here  simplify problem discretising
   minute time intervals  using demand schedule transformer domain  bell 
coles  coles  fox    long         based uk national grid figures  original
transformer model represent temporal features problem advance time
action  rather temporal pddl  since lp rpg temporal planner 
final domain consider sugar domain  radzi         here  objective
produce sugar industrial processes  refining raw cane  domain
taken set domains designed optimisation planning  several
paths goal  originally included allow planner choice trajectories
challenge find better quality solutions  set domains designed
challenging metric optimisation problems  domains set trivial
standard metricff  plan metric ignored almost problems solved
less   second    therefore  domains  consider sugar domain 
remains challenging metricff even optimisation required  number
paths appear lead goal large without good guidance difficult
find solution problem 

   say domains uninteresting present interesting challenge
explored radzi         using carefully modified variant lp rpg  however  challenge
find good quality plans  quality determined complex metric simple plan length 
neither metricff lp rpg form discussed difficulty finding poor quality plans
problems 

   

fia hybrid lp rpg heuristic planning

markettrader
   

hydropower
     

lprpg

    

lprpg
lprpg ff

lpg

   
  

time  s 

time  s 

  

 

 
   
    
   

     
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  
  
problem number

     

lprpg
lprpg ff

metric lpg

   

  

sugar

pathwaysmetric
    

  

    

lprpg
lprpg ff

lpg

   
  

time  s 

time  s 

  

 

 

   
   
    

    

     

     
 

  

  
  
problem number

  

  

 

 

 

 

  
  
problem number

settlers
     

    

  

  

  

  

settlersnumeric
    

lprpg
lprpg ff

lpg

lprpg
lprpg ff

lpg

   

time  s 

time  s 

   

  

  

 
 
   

   

    

    
 

  
  
problem number

  

  

 

  
  
problem number

mprime
    

   

  

roversnumeric
    

lprpg
lprpg ff

lpg

   

lprpg
lprpg ff

lpg

  
time  s 

  
time  s 

  

 

 

   

   

    

    

     

     
 

  

  
  
problem number

  

  

 

 

 

 

  
  
problem number

  

  

  

figure    comparison metricff lpgtd  time taken solve problems

   

  

ficoles  coles  fox   long

market trader
   

hydro power
   

lprpg
best known

lprpg
lprpg ff

lpg
best known

   
   
   
   
solution quality

solution quality

   
   
   

   

   
  
  
  
  

 
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  
problem number

pathways metric
    

    

  

lprpg
lprpg ff

lpg
best known

   

   
solution quality

    
solution quality

  

sugar
   

lprpg
lprpg ff

metric lpg
best known

    

  

    
    

   

    

   

    
  
    
 

 
 

  

  
problem number

  

  

  

 

 

 

 

  
  
problem number

settlers
   

   

    

  

  

lprpg
lprpg ff

lpg
best known

   
solution quality

   
solution quality

  

settlers num  carts
    

lprpg
lprpg ff

lpg
best known

   

  

   
   
   

   

   

   
   
   
 

 
 

  

  
problem number

  

  

 

  

m prime
   

   

  

  

rovers numeric
   

lprpg
lprpg ff

lpg
best known

   

lprpg
lprpg ff

lpg
best known

   
solution quality

   
solution quality

  
problem number

   

   

   

   

  

  

 

 
 

  

  
problem number

  

  

  

 

 

 

 

  
  
problem number

  

figure    comparison metricff lpgtd  plan length

   

  

  

  

fia hybrid lp rpg heuristic planning

    comparison planners
first compare performance lp rpg existing numeric planners  use
found strong  though uniformly best  configuration planner 
demonstrate subsequent sections 
landmarks propositional goals added lp  as section      
weight action variable objective function used solution extraction  l   l layer appeared rpg expansion 
action variables corresponding actions action layer   integral 
ibm ilog cplex version        used lp solver 
compare two historically successful numeric planners  metricff  hoffmann        lpgtd  gerevini et al          remain state art  many
modern planners  e g  lama  handle numeric preconditions  action costs 
clarify differences performance  compare lp rpg ff  reimplementation metricff based lp rpg code difference that  computing
upper  lower bounds numeric variables rpg expansion  lp rpg ff allows
actions applied many times action layer  rather per action
layer metricff  since publication earlier comparison lpgtd  coles et al  
       new improved version lpgtd produced  version lpgtd
performs much better earlier version  use results here 
consider variant lpgtd  metric lpgtd  gerevini  saetti    serina         designed
responsive plan metrics based numeric variables  experiments showed
metric lpgtd perform significantly differently lpgtd generating first
feasible plans problems plan length metric  apart pathways domain lpgtd crashes problems  therefore  report performance lpgtd
domains except pathways report figures metric lpgtd 
interesting pattern emerges relative performance planners across set
evaluation domains  shown figure    domains organised top
strongly numeric  relying propositions  towards bottom
propositional structure consequently less numeric structure  two
heavily propositional domains  mprime rovers  lpgtd generally
successful planner  solving problems evaluation sets  often
fastest planner problems  pattern holds standard competition
problems        competition formulation settlers domain  metricff
performs quite well mprime rovers domains  struggles settlers
domain due numeric structure present 
strongly numeric domains  however  lpgtd performs poorly  indeed fails
solve single problem pathways market trader domains  due
crashing  rather planner searches exhausts resource limits without finding
solution  hydro power  lpgtd solves five easiest problems  able
scale beyond this  experiments observed lpgtd struggles domains
limited propositional structure generally  search guidance gets
numeric problems poor  comparing two settlers variants gives
   

ficoles  coles  fox   long

interesting insights  carts turned numeric resource  lpgtd struggles
much solving    instead    problems  whereas performance lp rpg fact
improved  note although lpgtd successful ipc   problems  cannot solve
richer problems ship building overseas transport required  whereas lp rpg
capable solving instances 
turning attention comparison metricff observe problems
solved planners generally solved quickly metricff  particularly
domains propositional structure  lp rpg additional
overhead solving lp state  and partly  course  due highly efficient
metricff code base   occasionally general pattern broken  lp rpg faster 
slight variations ordering heuristically equivalent states lead
significant differences performance  results lp rpg ff show similar
coverage metricff  although sometimes solving different problems  again
branch orderings different code base cause differences  marked
pathways sugar domains   serve demonstrate basic
implementation performing drastically differently standard metricff causing
gains observe 
looking numeric domains particular  lp rpg heuristic able provide much better guidance  allowing lp rpg solve many problems metricff 
notably  market trader domain neither metricff lp rpg ff solve
problems  due poor guidance standard rpg heuristic gives domain  relaxing transfer numeric resources  relaxed plan buy item
repeatedly sell item sufficient profit made  again  hydro power 
similar situation occurs  one unit energy pumped up  unit
energy repeatedly sold future time day  making sufficient profit without
guidance  pathways  chemical reactions must take place  relaxation used
metricff allow units substance used repeatedly  several different
reactions  despite fact used consumed  lp rpg heuristic permit therefore gives much better search guidance  allowing lp rpg
solve problems domain  numeric resource transfer present settlers
domain leads poor guidance metricff heuristic metricff able solve
problems result  use lp effective domain allowing
problems solved  different formulations seem make little difference
coverage metricff  neither making problems easier metricff solve 
quality solutions  plan length  produced different planners displayed
figure    emphasize lp rpg current form making attempt
minimise general measure plan quality  results merely intended give
indication whether large degradation  indeed fortuitous increase 
quality moving using standard rpg heuristic hybrid lp rpg approach 
potential improve plan quality using lp rpg style approach explored
work domains preferences  coles   coles        range
different metrics  radzi         none problems use specified metric functions
minimise  instead use number actions solution plan  value
rpg heuristic tend minimise  none planners run optimisation
mode  where available  simply report first plan found search 
   

fia hybrid lp rpg heuristic planning

domains quality solutions produced lp rpg comparable
produced metricff lpgtd  sugar domain lp rpg heuristic compares
favourably lpgtd  although could perhaps hope running lpgtd quality mode
would enable produce better solutions  pathways  lp rpg produces particularly
long solutions  trade off  able scale solve far problems 
return issue solution length domain considering weighting
action variables lp solution extraction 
summary  lpgtd seems generally successful domains sufficient propositional structure metricff generally efficient problems
capable solving  structure domain becomes heavily numeric
planners perform poorly  lp rpg  however  able solve many problems
planners  making use search guidance lp captures numeric
interactions well 
    lp solvers
lp rpg construction use lp performed using functions commonly
available wide range lp solvers  adding variables constraints model  setting
variable bounds  marking whether variables real integer valued  changing objective
function  on  current implementation employs minimal abstraction layer
lp rpg lp solver itself  almost lp solver used 
section  consider use three lp solvers 
ibm ilog cplex version         commercial mixed integer linear programming
solver 
coin or lp  clp  version         open source lp solver  models feature
integer variables  clp used within coin or branch and cut  cbc  version       
is  again  open source 
lpsolve version           open source mixed integer linear programming solver 
experiments lp solvers  found cplex substantially
robust two  particularly lp extended include satisfying
propositional goals landmarks  thus  purposes comparison here 
use configuration lp rpg  equivalent used earlier paper  coles et al  
       efficient presented elsewhere paper  robust
 caused clp lpsolve crash less often  testing 
propositional goals landmarks added lp  encodes numeric goals
only 
integer variables  potentially  helpful actions  assignment
effects 
layer weighting scheme k       used 
refer configuration limited lp rpg 
   

ficoles  coles  fox   long

market trader
    

hydro power
  

cplex
lpsolve
clp

cplex
lpsolve
clp

   
 
time  s 

time  s 

  

 
   
   

    

    
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  
  
problem number

pathways metric
    

   

  

  

sugar
     

cplex
lpsolve
clp

cplex
lpsolve
clp

    

   

time  s 

time  s 

  

 

  
   
 

    

     

   
 

  

  

  

  

  

 

 

 

 

problem number

settlers
     

  

  

  

  

  

  

problem number

settlers numeric carts
     

cplex
lpsolve
clp

    

    

cplex
lpsolve
clp

   
time  s 

time  s 

   

  

  
 
 

   

   

    
 

  
  
problem number

  

  

 

  
  
problem number

m prime

  

rovers numeric
    

cplex
lpsolve
clp

   

   

  

  

time  s 

time  s 

    

  

 

 

   

   

    

cplex
lpsolve
clp

    
 

  

  
  
problem number

  

  

 

 

 

 

  
  
problem number

  

  

  

  

figure    time taken limited lp rpg solve problems using different lp solvers

   

fia hybrid lp rpg heuristic planning

market trader
   

hydro power
   

cplex
clp
lpsolve

   

   
plan length

   
plan length

cplex
clp
lpsolve

   

   

   

   

   

  

  

 

 
 

 

 

 

  
  
problem number

  

  

  

  

 

  

  
problem number

pathways metric
    

    

  

  

sugar
  

cplex
clp
lpsolve

cplex
clp
lpsolve

  
  
  

    

  

plan length

plan length

  

    

  
  

    

  
  

   

  
 

 
 

  

  
  
problem number

  

  

 

 

 

 

settlers
   
   

  
  
problem number

  

  

  

  

settlers num  carts
   

cplex
clp
lpsolve

   

cplex
clp
lpsolve

   
   
   
plan length

plan length

   
   
   

   
   
   

   
   
   
   

  
 

 
 

  
  
problem number

  

  

 

  
  
problem number

m prime
  

  

  

rovers numeric
   

cplex
clp
lpsolve

   

cplex
clp
lpsolve

  
plan length

  
plan length

  

  

  

  

  

  

  

 

 
 

  

  
problem number

  

  

  

 

 

 

 

  
  
problem number

  

  

  

  

figure    lengths plans produced limited lp rpg using different lp solvers

   

ficoles  coles  fox   long

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric carts
mprime
rovers numeric
total

cplex
  
  
  
 
  
  
  
  
   

clp
  
  
 
  
  
  
  
  
   

lpsolve
  
  
 
 
  
 
  
  
   

table    coverage limited lp rpg different lp solvers

results tests shown figure    table    beginning market
trader domain  quite clear cplex faster clp domain  lpsolve 
turn  substantially out performs cplex many problems  two orders magnitude 
speed  though  comes cost terms robustness  cplex solves    problems 
lpsolve solves     lpsolve demonstrates strong performance hydro
power domain  clp falls lpsolve cplex 
pathways metric domain illustrates robustness cplex extension beyond
basic producerconsumer model encoding  domain contains actions numeric
preconditions must true  affected action  described section      encoding requires integer variable precondition  domain
contains goals referring multiple numeric variables  e g 
        available cycdp    available c myc max       
seen  domain  cplex lp solver allows lp rpg
solve anything smallest problems  beyond problem    clp unable solve
lp reach goals initial state  using lpsolve  solvable lps reported
unsolvable  whilst planner make attempt search  erroneous state pruning
happening result lps falsely declared unsolvable renders unable find
solutions 
sugar domain  solver leads planner performing particularly well 
   problems solved  contrasts earlier results  shown table   
different configuration lp rpg  using cplex richer lps  able solve
   problems  however  noted start section  compromise
performance planner using cplex allow reasonable comparison clp
lpsolve  using richer lp models here  cplex solves    problems lpsolve
clp perform far worse  falsely claiming lps unsolvable  returning suboptimal
solutions  detriment performance planner  
two different encodings settlers domain  carts represented either explicitly using carts at function  see cplex robust
alternative domain encodings  original ipc domain model  lpsolve performs
particularly well  clp markedly different cplex  using numeric carts
   

fia hybrid lp rpg heuristic planning

domain

lpsolve
clp
cplex
build  ms solve  ms build  ms solve  ms build  ms solve  ms 
market trader
   
     
   
     
    
    
hydro power
   
   
   
   
   
   
pathways metric
   
   
   
   
   
   
sugar
   
   
   
    
    
    
settlers
   
    
   
     
     
    
settlers num  carts
   
    
   
    
    
    
mprime
   
   
   
    
    
   
rovers numeric
   
   
   
   
    
   
average
   
    
   
    
    
    
table    time spent lp building solving using different lp solvers

encoding  however  cplex considerably better solvers  robust
change lp structure arising alternative domain encoding 
mprime rovers domain  clp lpsolve consistently faster
cplex 
summarising  see limited lp rpg solve problem using clp
lpsolve  usually faster using cplex  cplex offers better coverage
greater robustness grants access richer encodings allow better performance 
order investigate detail planner takes much longer solve problems using cplex devised tests  table   shows average time spent 
per state  building solving lp lp solver   the building time time
required integrate constraints inserted lp rpg internal model used
particular solver   note results necessarily directly comparable  planners necessarily take paths state space  might evaluating
different states  paths are  nonetheless  often similar times taken
strongly indicative  give fairest possible comparison  include table
data problems solved three configurations  data presented
planner across exactly problem set  startling observation cplex
typically spends order magnitude longer building lps two solvers  in
settlers two orders magnitude   so  often solves lps quickly  total time spent handling lps generally greater  indeed  cplex  time spent
solving lps is      domains  dominated time spent building them 
indicates that  although cplex good choice use lp solver  it solves
lps efficiently   practice solvers faster due substantial overheads
building large number lps necessary  at least one per state   results suggest
robust lp solver low lp building overheads could dramatically improve
performance lp rpg 
considering solution quality note way lp solvers
direct search different trajectory solvers return different optimal solutions
lp point search  recall planner configuration seeks
directly minimise plan length  objective function lps uses weighted sum
   

ficoles  coles  fox   long

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric carts
mprime
rovers numeric
total

 l
  
  
  
  
  
  
  
  
   

   l
  
  
  
 
  
  
  
  
   

 l
  
  
  
  
  
  
  
  
   

 l
  
  
  
  
  
  
  
  
   

  l
  
  
  
  
  
  
  
  
   

hmax
  
  
  
  
  
  
  
  
   

hadd
  
  
  
  
  
  
  
  
   

table    coverage varying lp objective function weighting schemes

number actions  figure   shows similar picture arises plan length
time performance  lpsolve often leads planner shorter solutions cplex  also
helping explain often faster  since explores search tree smaller depth  
particular happens rovers numeric sugar domains well settlers
variants  across domains little variation quality solutions produced 
    lp objective function weighting schemes
using lp solution extraction phase  one open issue weighting
scheme use objective function  since lp ignores propositional preconditions
actions  using simple objective minimising sum action variables  layerweighting scheme k      gives lp solver freedom select equally actions
appearing layers rpg  regardless many actions subsequently need
added relaxed plan support them  discussed earlier  using layer weighting
scheme k      using weighting scheme based estimated costs achieving
preconditions actions  encourage lp solutions favour actions
cheaper apply  hmax hadd heuristics candidates base
estimates cost application actions  course  cases
choice earlier action  one lower costs achieve preconditions 
flawed choice  worse choice would made using k    
layer weighting scheme  simply nature heuristics 
section  evaluate range lp action variable layer weighting schemes
action cost estimate schemes  use k                  layer weighting schemes 
consider setting action variable weights   plus cost meeting propositional
preconditions hmax hadd action cost estimate schemes  parameters
planners set sensible defaults  action variables first action layer
integral  propositional goals landmarks included goal checking lp 
results showing coverage configurations shown table    first
observation weighting scheme better using layer weighting
k     action variables  particularly noticeable settlers domain 
several situations earlier actions preferred  example 
   

fia hybrid lp rpg heuristic planning

weight   vs weight      time
sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

weight      nodes 

   

weight      time  s  

weight   vs weight      nodes expanded

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

  

 

   

  
   

    
    

 
   

 

  
weight    time  s  

   

    

 

  

weight   vs weight  
sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

weight   nodes 

weight    time  s  

   

    

weight   vs weight    nodes expanded

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

   
weight    nodes 

  

 

   

  
   

    
    

 
   

 

  
weight    time  s  

   

    

 

  

   
weight    nodes 

weight   vs weight    time
sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

weight   nodes 

   

weight    time  s  

weight   vs weight    nodes expanded

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

    

  

 

   

  
   

    
    

 
   

 

  
weight    time  s  

   

    

 

  

weight   vs weight     time

weight     time  s  

   

    

weight   vs weight     nodes expanded

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

weight    nodes 

    

   
weight    nodes 

  

 

   

  
   

    
    

 
   

 

  
weight    time  s  

   

    

 

  

   
weight    nodes 

    

figure    layer weighting schemes lp  k     versus k   x different values x 

   

ficoles  coles  fox   long

weight   vs h max  nodes expanded

weight   vs h max  time

h max  time  s  

   

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

h max  nodes 

    

  

 

   

  
   

    
    

 
   

 
  
weight    time  s  

   

 

    

  

   
weight   nodes 

weight   vs h add  nodes expanded

weight   vs h add  time

h add  time  s  

   

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

h add  nodes 

    

    

  

 

   

  
   

    
    

 
   

 
  
weight    time  s  

   

 

    

  

   
weight    nodes 

    

figure    action weighting schemes lp objective function  layer weighting k    
versus action cost estimate based schemes using hadd hmax  
supposing cart location a  unit resource  initially available
b  needs moved location c  two two action solutions lp 
annotating action layer appears  are 
load cart      unload cart c     
load cart b      unload cart c     
using layer weighting scheme k     two solutions indistinguishable
 each cost     however  latter selected  two actions needed support
relaxed plan  moving cart b moving cart c  alternative action
variable weighting schemes set weight loading cart b higher
loading a  leading preference first solution  better outcome
search guidance  similar phenomenon occurs rovers domain  favouring
earlier actions increases preference recharging rovers close current
locations  domain leads better avoidance dead ends  since postponing
recharging actions risks possibility rover little charge left get
back recharging location 
data layer weighting schemes show results peak k      reasonable trade off minimising number actions chosen lp solution
favouring earlier actions  overall performance hmax same  losing performance
   

fia hybrid lp rpg heuristic planning

time taken
nodes expanded
plan length
k 
           hmax hadd            hmax hadd            hmax hadd
k   x x x x x
x x x x x x
x   x x x x
x
k      
x x x  
 
x x x  
x
x x x x
x
k  
    x
x
    x
x
x x x
x
k  
x x
x
  x
 
  x
x
k     
x
x
x
 
x
x
hmax
 
x
 

table    results two tailed wilcoxon signed rank tests comparing different lp weighting schemes  x indicates significance             colour indicates better performer
 faster  fewer nodes expanded shorter plans  

sugar rovers gaining settlers hydro power  using hadd gives
gains settlers  leading slightly better coverage layer weighting scheme
k      difference performance k     hadd weighting schemes
domain dependent  hadd increases weight action   propositional preconditions true state evaluated  settlers domain 
gives particularly good performance  sound approach  neatly capturing
example case discussed earlier section  loading unloading cart
current location preferable later locations  domains earlier actions
preferable even propositional preconditions require little support  hadd fails
give adequate bias  layer weighting scheme higher k performs better 
instance  sugar domain  best coverage obtained using k      
k     scheme performs strongly hadd here 
examining performance configurations detail  comparing time
taken find solution plans number nodes evaluated  scatterplots comparing
configurations tested layer weighting k     shown figures  
   layer weighting schemes action cost estimate based schemes  lprpg usually exhausts time limit    minutes memory limit  time taken
scatterplots closely similar coverage table  coverage directly reflected
number points far right graphs  indicating layer weighting scheme
k      the x axis  unable find solution within    minutes  lp rpg using
different weighting scheme able solve problem  points
k     hadd schemes  points hadd appearing predominantly
settlers domain k     spread across domains 
since always clear scatterplots whether one configuration better
whether differences significant  used two tailed wilcoxon
signed rank test compare pair tested configurations terms time taken
nodes evaluated  plan length   tests performed p         results
tests summarised table    number interesting observations made 
   wilcoxon signed rank test non parametric statistical test used compare set matched
samples  such pairs results two different planners sequence problems 
assess whether population mean ranks differ  i e  paired difference test   useful
absolute values necessarily comparable samples drawn completely

   

ficoles  coles  fox   long
 l vs    l  plan length
     

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    
 l  plan length 

    
   l  plan length 

 l vs  l  plan length
     

   

   

  

  

 

 
 

  

   

    

     

 

  

   

 l  plan length 

 l vs  l  plan length
     

  l  plan length 

 l  plan length 

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

   

  

   

  

 

 
 

  

   

    

     

 

  

 l  plan length 

    

     

    

     

 l vs hadd  plan length
     

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

hadd

    

   
 l  plan length 

   l vs hmax
     

hmax  plan length 

     

 l vs   l  plan length
     

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

    

 l  plan length 

   

  

   

  

 

 
 

  

   

    

     

l

 

  

   
l

     plan length 

   plan length 

figure    effect quality varying action weighting schemes lp objective function

k     gives better coverage k     k       take significantly
different amount time explore significantly different number nodes 
is  however  significant difference time taken nodes  favour k     
compared configurations tested 
action cost based weighting schemes slower layer weighting schemes
k    furthermore  compared k      expand nodes 
unknown distribution  two tailed version makes assumption two contenders
better performance  i e  lower mean rank  

   

fia hybrid lp rpg heuristic planning

key strength action cost based weighting schemes lies quality
solutions found  general trend  layer weighting schemes gain coverage lose
quality k increases  action cost based schemes generate significantly shorter
plans configuration tested  including layer weighting k     
increase plan length plans found using layer weighting scheme increasing k seen figure    reason increase quite clear  basic
objective function lp minimise number actions  however  weightings
added actions according rpg layer appear  longer plans
make use earlier actions become attractive  increase plan length is 
however  largely restricted two domains  first  worst affected  pathways metric  increase k causes preference reactions less efficient  in terms
number actions needed  performed using actions earliest layers
planning graph  second settlers numeric carts  increase k
leads solutions preference resource production refinement approaches
less efficient  comprise actions appear earlier planning graphs 
perhaps expected  two domains excluded statistical analysis 
significant difference plan length k     action cost based
schemes 
weighting schemes tested best results obtained using k     hadd  
single best option  former faster  expands fewer nodes  gives good
balance coverage across domains used  latter less prone variations plan
quality domains  strong performance settlers domain leads two
problems solved overall within test domains 
    use integer constraints
section       discussed fact lp relaxation mip  proposed
certain situations may beneficial relax action variables  making
integral  section  explore hypothesis  considering five configurations
lp rpg 
   minimal integers  actions assignment effects  as section      integers 
   first layer  above  variables actions appearing rpg layer    the potentially helpful actions  integral 
   propositional goal achievers  above  variables actions achieve
propositional goals landmarks integral 
   numeric goal achievers  above  additionally  variables actions affecting
numeric state variables appear numeric goals integral 
   all   action  variables integral 
coverage configurations shown tables      layerweighting using k       k      respectively  k     results  coverage fairly
insensitive configuration used  peak coverage numeric goal
   

ficoles  coles  fox   long

domain

minimal
first layer prop  goal num  goal

 assignments  actions
achievers achievers variables
market trader
  
  
  
  
  
hydro power
  
  
  
  
  
pathways metric
  
  
  
  
  
settlers
  
  
  
  
  
settlers num  carts
  
  
  
  
  
mprime
  
  
  
  
  
rovers numeric
  
  
  
  
  
sugar
  
 
 
 
  
total
   
   
   
   
   
table    coverage varying action variables integer mip  layer weighting
k       

domain

minimal
first layer prop  goal num  goal

 assignments  actions
achievers achievers variables
market trader
  
  
  
  
  
hydro power
  
  
  
  
  
pathways metric
  
  
  
  
  
settlers
  
  
  
  
  
settlers num  carts
  
  
  
  
  
mprime
  
  
  
  
  
rovers numeric
  
  
  
  
  
sugar
  
  
  
  
  
total
   
   
   
   
   
table    coverage varying action variables integer mip  layer weighting
k     

achievers configuration  though difference worst configuration
  problems  using k        marked increase coverage action
variables integral  due sugar domain  compared preceding configuration table  additional    problems solved  domain 
using k      though  even better coverage obtained using minimal number
integral action variables  thus  appears need integral variables domain
reduced objective preference earlier actions sufficiently high  disregarding
sugar domain  results k       domains close  k    
configuration 
interesting that  even many integers mip  performance lp rpg
terms coverage different using integers all  considering
computational complexity solving mip  rather solving lp  time spent
calculating heuristic considerably higher  rendering all integers approach
   

fia hybrid lp rpg heuristic planning

minimal ints vs first layer actions  time

   

minimal ints vs first layer actions  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

first layer actions  nodes 

first layer actions  time  s  

    

  

 

   

  

   

    
    

 
   

 
  
minimal ints  time  s  

   

    

 

  

minimal ints vs  first layer actions    prop goal achievers  time

   

    

minimal ints vs  first layer actions    prop goal achievers  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

prop goal achievers  nodes 

prop goal achievers  time  s  

    

   
minimal ints  nodes 

  

 

   

  

   

    
    

 
   

 
  
minimal ints  time  s  

   

    

 

minimal ints vs  first layer actions   prop goal achievers  numeric goal achievers  time

   

   
minimal ints  nodes 

    

minimal ints vs  first layer actions   prop goal achievers  numeric goal achievers  nodes exp 

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

num  goal achievers  nodes 

num  goal achievers  time  s  

    

  

  

 

   

  

   

    
    

 
   

 
  
minimal ints  time  s  

   

    

 

  

minimal ints vs ints  time

ints  time  s  

   

    

minimal ints vs ints  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

ints  nodes 

    

   
minimal ints  nodes 

  

 

   

  
   

    
    

 
   

 
  
minimal ints  time  s  

   

    

 

  

   
minimal ints  nodes 

figure     changing variables integer  k     

   

    

ficoles  coles  fox   long

time taken
first prop  num 
layer goal goal
acts ach  ach 
minimal ints
x
x
x
first layer acts
 
x
prop  goal ach 
x
num  goal ach 

nodes expanded
plan length
first prop  num  first prop  num 
in  layer goal goal in  layer goal goal ints acts ach  ach  ts acts ach  ach  ts
x
 
 
 
 
 
 
 
 
x
 
x x
 
 
 
x
x x
 
 
x
 
 

table    results two tailed wilcoxon signed rank tests comparing different sets
variables integers mip  using layer weighting k         x indicates significance
 p          colour indicates better performer  faster  fewer nodes expanded shorter
plans  

time taken
first prop  num 
layer goal goal
acts ach  ach 
minimal ints
x
x
x
first layer acts
x
x
prop  goal ach 
x
num  goal ach 

nodes expanded
plan length
first prop  num  first prop  num 
in  layer goal goal in  layer goal goal ints acts ach  ach  ts acts ach  ach  ts
x
 
 
 
 
 
 
 
 
x
 
x x
 
 
 
x
 
x
 
 
x
 
 

table     results two tailed wilcoxon signed rank tests comparing different sets
variables integers mip  using layer weighting k       x indicates significance
 p          colour indicates better performer  faster  fewer nodes expanded shorter
plans  

impractical  investigating further  scatterplots time taken number
nodes expanded shown figure      the results shown k      overall
picture k       used   configuration compared minimal
integers configuration  general trend  one moves left column  increasing
proportion action variables integral   points drift line
  x  i e  time taken solve problems increases  time  though  moving
right hand column decrease number nodes evaluated  thus 
increasing proportion integral action variables seems improve search guidance 
though sufficiently allow pay off terms time taken solve problems 
confirm significance observations  applied two tailed wilcoxon signed
rank tests  results tables       k       k      respectively 
cases  consistent increase time taken solve problems
proportion integral action variables increased  difference significant every
case using k       comparing first layer actions propositional
goal achievers  significant difference plan length pair
configurations  results nodes somewhat less clear  appear
using minimal integers leads expansion significantly different number nodes 
   

fia hybrid lp rpg heuristic planning

domain

minimal ints
first layer actions
ints
build  ms solve  ms build  ms solve  ms build  ms solve  ms 
market trader    
    
    
    
    
    
    
hydro power     
   
   
   
   
    
   
pathways metric     
    
     
    
     
    
      
sugar     
    
    
    
    
    
     
settlers    
     
    
     
     
     
     
settlers num  carts           
     
     
     
     
     
mprime     
    
   
    
   
    
   
rovers numeric     
    
   
    
   
    
   
average
     
    
     
     
     
     
table     time spent building solving lp varying variables integer
mip  numbers shown domains indicate many problem instances solved
used computing reported average

compared configuration  part due limitation
tests pairwise solved problems included  difference coverage
reflected data analysed test  considering configurations  though 
integers evaluates fewer nodes first layer actions propositional goal
achievers  regardless weight used  cannot shown expand fewer nodes
numeric goal achievers  configuration offered better coverage table   
although seen increasing number integer variables makes planner
slower  somewhat surprising amount planner made slower
greater is  theory would expect making variables integer would
dramatically decrease performance planner  however  appears so 
investigate consider long spent building solving lp
state configuration  table    gives indication seeing
surprising result      domains solving time lp less building
time  for ints configuration   showing key bottleneck using lp
solver is  fact  building lp  building time is  course  likely vary
configurations  the variation due different states expanded  compared
solving time small  two three remaining domains  pathways
sugar  see increase cost solving lp first layer actions made
integral  much larger increase actions made integral  pattern
expected  final domain  market trader  main increase occurs
first layer action variables integral  structure domain means integral
first layer actions often causes variables layers become integral  solving
times does  however  remain within order magnitude building time  overhead
particularly large domain compared previous two 
   

ficoles  coles  fox   long

    including numeric goal conjunct
section     discussed possibility including entire numeric goal conjunct
problem lp  well theoretically increasing ability detect dead ends
insisting goals attainable time  rather individually
allows arbitrary lnf goals used  found domains pathways 
section  investigate impact extension  particular  explore whether
use numeric goal checking lp including numeric goal conjunct improves
worsens performance  ensure goal checking lp case
numeric goal conjunction used  tests  configurations 
disable inclusion propositional goals landmarks lp  gain insights
impact numeric goal checking lp affected choice action variable
layer weighting schemes  consider two  k       k     
domain

market trader
hydro power
pathways metric
sugar
settlers
settlers num  carts
mprime
rovers numeric
total  excl  pathways 
total


num goal
 k     
  
  
  
  
  
  
  
  
   
   

without
num  goal
 k     
  
  
 
  
  
  
  
  
   
   


num  goal
 k       
  
  
  
 
  
  
  
  
   
   

without
num  goal
 k       
  
  
 
  
  
  
  
  
   
   

table     coverage varying whether numeric goal conjunct included lp  with 
 without 

coverage results running lp rpg without numeric goal conjunct
shown table     looking results excluding pathways domain  which
solved numeric goal conjunct included  since goals expressed
arbitrary lnf   one make two immediate observations  use numeric
goal conjunct improves performance actions weighted k      solving   additional
problems  use worsens performance actions weighted k        solving  
fewer problems  difference impact interesting consequence relationship
rpg structure lp 
no goal conjunct case  goal appears fact layer l  lp used meet
goal lp  l  lp containing actions action layer l  algorithm   
line      favours earlier actions rpg  precluding actions
layer l used 
numeric goal conjunct case  lp extended layer l  which 
first  goals appear  second  lp constrained meet goals  using
actions layer l    satisfied  individual goals  point may later
   

fia hybrid lp rpg heuristic planning

vs without numeric goal conjunct  nodes expanded

vs without numeric goal conjunct  time
sugar
rovers numeric
m prime
settlers num  carts
settlers
hydro power
market trader

   

numeric goal conjunct  nodes 

numeric goal conjunct  time  s  

    

  

 

   

    

     
     

    

   
 
  
   
without numeric goal conjunct  time  s  

sugar
rovers numeric
m prime
settlers num  carts
settlers
hydro power
market trader

    

   

  

 

    

 

sugar
rovers numeric
m prime
settlers num  carts
settlers
hydro power
market trader

  

 

   

    

     
     

    

   
 
  
   
without numeric goal conjunct  time  s  

sugar
rovers numeric
m prime
settlers num  carts
settlers
hydro power
market trader

    
numeric goal conjunct  nodes 

numeric goal conjunct  time  s  

   

    

vs without numeric goal conjunct  weight     nodes expanded

vs without numeric goal conjunct  weight     time
    

  
   
without numeric goal conjunct  nodes 

   

  

 

    

 

  
   
without numeric goal conjunct  nodes 

    

figure     including numeric goals lp
layer l first appeared  case actions l 
l chosen meet goals  whereas previous case could not 
difference actions available support given goal makes
action variable weighting scheme important  use k     rather k      
means actions added layer l layer l   inclusive  available meet
goal first appeared layer l  objective function leads preference use
earlier actions 
coverage results experiments give unequivocal picture
impact feature performance  figure    shows scatterplots time taken
solve problems  number nodes evaluated  numeric goal conjunct
used not  k       k      appears general trend
inclusion numeric goal conjunct reduce number nodes evaluated  case
weighting k      two tailed wilcoxon signed rank test confirms use
numeric goal conjunct reduces number nodes evaluated  p          using k      
suggests similar trend  results significant 
weighting schemes  use numeric goal conjunct introduces small
statistically significant time overhead  due additional time taken
evaluate state  rpg must extended point goals
satisfied together  rather individually  whether pays off  i e  whether reduction
nodes evaluated sufficient offset this  depends domain appears
   

ficoles  coles  fox   long

correlated extent numeric goals interact  one extreme 
rovers domain  goals propositional difference performance 
hand  sugar domain  settlers domain numeric carts
used  beneficial  domains concern production reprocessing raw
materials  one form another  leading interaction goals  instance  unit
resource may sufficient satisfy goals individually  additional production may
required support both  cases use numeric goal conjunct improves
time performance  inclusion numeric goal conjunct significant impact
length plans produced  according two tailed wilcoxon signed rank test  
summarise results section  main benefit use numeric
goal conjunct able extend expressivity planner domains
goals written using arbitrary lnf  success approach domains
varies  terms coverage  whether better use numeric goal conjunct
evaluation domains depends weighting scheme  using layer weighting
scheme  k      inclusion numeric goal conjunct slightly beneficial lp rpg
therefore set use configuration default 
    including propositions lp
previous section  observed inclusion numeric goal conjunct
goal checking lp variable impact performance  depending weighting scheme
used  perhaps interesting use goal checking lp using lp meet
propositional goals  landmarks  described section      evaluate technique
consider four configurations 
   propositions  using goal checking lp containing numeric goal conjunct 
   propositional goals  previous case  including propositional goals
goal checking lp 
   landmarks  previous case  including landmarks 
   propositions  previous case  constrained ensure action
variable non zero  actions added meet propositional preconditions  as
described section      
form spectrum  case information propositions
included lp all  last goal checking lp must meet
propositional goals  preconditions actions chosen so  consider
two layer weighting schemes  k       k       action variables actions
first action layer integral 
coverage results k       shown table    k     table    
seen  cases  general pattern emerges  coverage improves
including configuration landmarks included lp  declines
final propositions configuration  including propositions appears  however 
remain better including propositions all 
scatterplots illustrating time taken number nodes evaluated solving
problems shown figures        for weights k       k      respectively  
   

fia hybrid lp rpg heuristic planning

props vs propositional goals  time

   

props vs propositional goals  nodes expanded
     

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

  

 

sugar
rovers numeric
m prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader

    

propositional goals  nodes 

propositional goals  time  s  

    

   

  

   

    
    

 
   

 
  
props  time  s  

   

    

 

  

props vs landmarks  time

landmarks  time  s  

   

    

     

props vs landmarks  nodes expanded
     

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader

    
landmarks  nodes 

    

   
props  nodes 

  

 

   

  
   

    
    

 
   

 
  
props  time  s  

   

    

 

  

props vs props  time

props  time  s  

   

    

     

props vs props  nodes expanded
     

sugar
rovers num 
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader

    
props  nodes 

    

   
props  nodes 

  

 

   

  
   

    
    

 
   

 
  
props  time  s  

   

    

 

  

   
props  nodes 

    

figure     varying propositions included lp  k       

   

     

ficoles  coles  fox   long

props vs propositional goals  time

prop goals  time  s  

   

props vs propositional goals  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

propositional goals  nodes 

    

  

 

   

  

   

    
    

 
   

 
  
props  time  s  

   

    

 

  

props vs landmarks  time

landmarks  time  s  

   

    

props vs landmarks  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

   

landmarks

    

   
props  nodes 

  

 
  
   

    
    

 
   

 
  
props  time  s  

   

    

 

  

props vs props  time

props  time  s  

   

    

props vs props  nodes expanded

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
m prime
settlers num  carts
settlers
pathways metric
hydro power
market trader

    

props  nodes 

    

   
props

  

 

   

  
   

    
    

 
   

 
  
props  time  s  

   

    

 

  

   
props  nodes 

figure     varying propositions included lp  k     

   

    

fia hybrid lp rpg heuristic planning

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric
mprime
rovers numeric
total

props
  
  
  
 
  
  
  
  
   

prop goals
  
  
  
 
  
  
  
 
   

landmarks
  
  
  
 
  
  
  
  
   

props
  
  
  
  
  
  
  
  
   

table     coverage varying propositions included lp  using k       

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric
mprime
rovers numeric
total

props
  
  
  
  
  
  
  
  
   

prop goals
  
  
  
  
  
  
  
  
   

landmarks
  
  
  
  
  
  
  
  
   

props
  
  
  
  
  
  
  
  
   

table     coverage varying propositions included lp  using k     

scatterplot compares one configurations    enumerated list
configuration    no propositions   comparing propositional goals landmarks
configurations suggests inclusion landmarks leads problems
solved quickly compared propositions configuration  particularly
evident settlers  settlers numeric carts  mprime rovers numeric domains 
whether using landmarks offer gains propositional goals alone depends structure problems  two settlers variants  including propositional goals  such
 connected by rail p  p    has ironworks p    necessitates use specific actions   build rail p  p    build ironworks p    respectively   since actions
consume numeric resources  including propositional goals sufficient cause lp
introduce production actions necessary support resource consumption  rovers 
goals communicated data generated rock samples  soil analyses
images  actions adding facts consume number units energy 
benefit including propositional goals lp  however  actions
propositional preconditions  instance  rover communicate rock data 
must taken sample rock  propositional preconditions included
landmarks lp  thereby forcing production energy needed
   

ficoles  coles  fox   long

communicate requisite data  energy acquired it  leads
inclusion additional recharge actions or  suitable actions available  better deadend detection  similar situation arises mprime  actions achieve goal facts
consume resources  actions achieve  landmark  preconditions
actions do  including landmarks improves informedness heuristic 
two tailed wilcoxon signed rank tests shown tables       confirm
 p         either k       k     use propositional goals improves
propositions  use landmarks improves propositional goals  indeed 
p        total ordering time performance k     
propositions propositional goals landmarks
results show similar behaviour numbers nodes evaluated  the right hand
columns figures        although differences statistically significant 
wilcoxon tests show neither k       k     difference
propositional goals landmarks statistically significant  note  however  using
landmarks allows problems solved  comparisons propositions 
propositional goals landmarks  weight k        significant  latter two
improving upon former  weight k     tests inconclusive  although
using landmarks allows    additional problems solved  recall comparisons
restricted problems solved variants comparison  

props
prop goals
landmarks

time taken
prop landall
goals marks props
x
x
 
x
x
x

nodes expanded
prop landall
goals marks props
x
x
x
 
x
x

plan length
prop landall
goals marks props
 
 
x
 
x
x

table     results two tailed wilcoxon signed rank tests comparing inclusion different propositions lp  using layer weighting k         x indicates significance
 p          colour indicates better performer  faster  fewer nodes expanded shorter
plans  

props
prop goals
landmarks

time taken
prop landall
goals marks props
x
x
 
x
x
x

nodes expanded
prop landall
goals marks props
x
 
x
 
x
x

plan length
prop landall
goals marks props
 
 
x
 
x
x

table     results two tailed wilcoxon signed rank tests comparing inclusion different propositions lp  using layer weighting k       x indicates significance  p         
colour indicates better performer  faster  fewer nodes expanded shorter plans  

   

fia hybrid lp rpg heuristic planning

domain

props
landmarks
props
build  ms solve  ms build  ms solve  ms build  ms solve  ms 
market trader     
    
    
    
    
    
    
hydro power     
   
   
   
   
    
   
pathways metric     
    
     
    
     
    
     
sugar     
    
    
    
    
    
    
settlers    
     
     
     
     
     
      
settlers num  carts           
     
     
     
     
      
mprime     
    
   
    
   
    
    
rovers numeric     
    
   
    
   
    
    
average
     
     
     
     
     
     
table     time spent building solving lp  varying propositions included 
numbers shown domains indicate many problem instances solved used
computing reported average

results shown bottom figures       indicate propositions
configuration less consistent performance 
show  however   p         k       k      propositions
configuration takes longer solve problems propositional goals configuration
landmarks configuration  perhaps surprising feasible consider
including propositions lp manner  given results reported van den briel
et al          key difference disregarding delete effects  fact
needed precondition need added once  work reported van
den briel et al   however  cases fact required precondition deleted 
delete effect must balanced equivalent number add effects  less one
fact true initially  
looking number nodes evaluated using propositions configuration
find important result  shown bottom right figures        whichever
weight used  propositions tends expand fewer nodes  furthermore  propositions expands fewer nodes three configurations overall
best configuration terms nodes expanded  significant result  p          unfortunately 
overhead associated node higher results poorer coverage
time performance  result indicates numericpropositional separation used
lp rpg heuristic sensible trade off  use rpg meet propositional
preconditions sacrificing performance terms nodes expanded exchange
reduction time taken solve problems 
table    shows increase costs associated solving lps including propositions 
results taken problems solved three configurations  although
remains case configurations expand exactly states solving
problems  three domains hydro power  mprime rovers numeric
cost building lps dominates cost solving them  significant
decreases performance domains  course  cost building lps increases
propositions included since variables required  settlers domain
   

ficoles  coles  fox   long

order magnitude increase time spent solving lps  indicating
including propositions lps makes difficult solve  sometimes
informed search guidance gleaned information allows planner find
solutions expanding far fewer nodes 
adding landmarks lp appears make solving lp slightly faster 
partly side effect landmarks configuration needing solve fewer lps per state 
since uses one lp meet goals instead one lp per goal  propositions
configuration often needs solve one lp solution extraction phase  however 
size difficulty lp means benefits solving fewer lps  in terms
time taken  negated 
tables       show results statistical tests comparing lengths plans
found various configurations  significant results that  regardless
weight used  propositions finds shorter plans configurations 
propositions included lp  typically single lp call made
solution extraction  simultaneously achieving goals action preconditions 
configurations  first  lp call made goals  then  action
added support propositional precondition action implied solution
lp  numeric preconditions met another lp call  thus  several
lp calls rather one  fragmenting production relaxed plan
way  efficacy relaxed plan eroded  example  plan lengths improved
two variants settlers  here  production resources requires building
infrastructure  sawmill required refine timber wood  on  two units
wood made  lp knowledge propositional preconditions 
difference lp building two units wood location a  one unit
location b one location c need build one two sawmills  depending
option chosen  discovered actions chosen meet
propositional preconditions actions required solution lp  lp
includes propositions  cases this  difference building
one sawmill two  lp prefer single sawmill solution  ultimately leading
better search guidance  thus  propositions produces plans significantly shorter 
domains fact propositions outside lp disguises true costs
action choices solution lp 
    propositional resource analysis
end section      identified conditions possible turn propositions model resources equivalent numeric representation  purposes 
lp rpg  would allow resource  within heuristic  managed lp
rather rpg  end  use three domains containing propositional stacks
represent resources  evaluate encoding affects performance lp rpg 
numeric planners  five planners evaluated metricff  lpgtd  lp rpg  using
analysis translates propositional resource stacks equivalent numeric representation described long   fox         lp rpg analysis disabled 
lp rpg ff  three domains use are 
   

fia hybrid lp rpg heuristic planning

domain

metricff

lpgtd

lp rpg ff

settlers prop  timber
settlers prop  carts
mprime prop 
total

 
 
  
  

 
 
  
  

 
  
  
  

lp rpg
anal 
anal 
 
  
  
  
  
  
  
  

table     coverage without propositional resource analysis

variant ipc  settlers domain  amount timber given location
 or given vehicle  represented stack propositions  range n 
n   
variant settlers numeric carts encoding  number carts
given location represented stack propositions 
mprime domain ipc   encoding represents fuel level stack
propositions 
first two these  propositional encoding enforces limit    amount
timber  respectively  number carts  given location  necessary limitation forced action grounding  numeric representation  decreasing one resource
increasing another done single ground action  appropriate numeric
effects conditions  ground action need stipulate precise levels
resource operation  long limits resource levels
respected  propositional case  however  one ground action needed pair
discrete levels two resources  parameters action stipulating pre 
post values resource  level    chosen avoid placing overly restrictive
bounds resource levels  creating manageable number ground actions 
issue grounding accounts limited choice domains  propositional stack
used represent resources take modest range discrete values 
rovers domain  example  set reachable energy levels rover
range          market trader domain  amount money could held
given time real value one decimal place  this consequence choice
problem files   greater equal zero 
results domains shown table     comparing  first  lp rpg without
analysis lp rpg analysis  see encoding resources lp
numbers grants consistent improvement performance  figure    shows time
taken find solutions similarly improved  perhaps strikingly second settlers
variant  with propositional cart levels  
metricff lpgtd perform well mprime domain  two settlers
encodings  lp rpg resource analysis performs markedly better 
planners solving handful problems  contrasts earlier results  shown
table    lpgtd particular performed well settlers domain 
interesting contrast see here  propositional timber variant derived
ipc   model lpgtd performs well leads considerably worse performance 
   

ficoles  coles  fox   long

settlers propositional stack timber
     

    

settlers propositional stack carts
     

lprpg analysis
lprpg ff

lpg
lprpg no analysis

    

time  s 

   

time  s 

   

lprpg analysis
lprpg ff

lpg
lprpg no analysis

  

  

 

 

   

   
 

  

  
problem number

  

  

 

  

  
problem number

  

  

m prime propositional resource stack
     

    

lprpg analysis
lprpg ff

lpg
lprpg no analysis

time  s 

   

  

 

   

    
 

  

  
problem number

  

  

  

figure     using propositional resource analysis

supports role resource analysis allowing lp rpg robust
number almost equivalent domain encodings used  mixed propositional
numeric encodings resource levels  observed significant change length
plans produced lp rpg without propositional resource analysis 

   conclusions future work
modern planning systems ineffective reasoning numbers  however  managing complex numeric interactions important part driving ai planning towards
future real world application  paper shown that  using linear program
model numeric resource flows  ability planners reason domains involving
complex numeric interactions greatly improved 
key contribution separation heuristic search control relaxed
planning graph  based delete relaxation  linear program allows exact reasoning
numeric constraints relaxes action ordering 
explored different configurations heuristic  put
less information lp  impact performance planner whole 
exploration different lp solvers reveals less efficient handling
various combinations constraints  found that  lpsolve clp  conjunction
limited version lp rpg published       coles et al          solve simple
   

fia hybrid lp rpg heuristic planning

problems quickly  cplex coupled full power extended lprpg needed
handle complex test instances 
work far focussed developing search control methods perform
well numeric planning problems particular character  producer consumer
behaviour define sectionsect prodcondefinition  although believe
common behaviour  practice  numeric domains exhibit range behaviours 
several possible ways exploit lp rpg approach domains  one use
approach actions conform constraints producer consumer behaviour 
pushing numeric behaviour metric rpg way currently
handle propositional goals preconditions separate rpg  would yield
benefits potentially better estimates reachable ranges action use costs
parts domain express producer consumer behaviour  challenging
consider behaviours relaxed producer consumer behaviour
obtain useful heuristic information  example  actions production effects vary
could encoded family producers increasing capability  discretising range
production options introducing reachability analysis increased
production capabilities become available  general  relaxations must make reachability
least permissive actual reachability  that is  action must applicable
relaxed reachability analysis least early action actually reachable 
relaxed plan extraction minimise estimated cost goal effectively  this
difficult relaxed plan optimal   within constraints  believe
use lp approximations provide tool tackling wider range behaviours
explore paper 
exciting challenge future work integrate lp rpg method
optimising plans according given objective function  recent          
planning competitions highlighted importance optimising planning emphasis solution quality  development is  however  non trivial  challenges lie
integration cost optimisation lp rpg well deciding
use heuristic trades goal distance quality search  first step
direction accomplished radzi phd thesis  radzi         advances
numeric planning described paper open many possibilities extending
initial work 

references
bell  k  r  w   coles  a  j   coles  a  i   fox  m     long  d          role ai planning
decision support tool power substation management  artificial intelligence
communications               
benton  j   do  m  b     kambhampati  s          over subscription planning numeric goals  proceedings   th international joint conference artificial
intelligence  ijcai   pp           
benton  j   van den briel  m     kambhampati  s          hybrid linear programming
relaxed plan heuristic partial satisfaction planning problems  proceedings
  th international conference planning scheduling  icaps  
   

ficoles  coles  fox   long

blackmore  l   ono  m     williams  b          chance constrained optimal path planning
obstacles  robotics  ieee transactions on                    
blum  a     furst  m          fast planning planning graph analysis  proceedings
  th international joint conference artificial intelligence  ijcai      pp 
         
bonet  b     geffner  h          heuristic search planner      artificial intelligence magazine               
coles  a   coles  a   fox  m     long  d          colin  planning continuous linear
numeric change  journal artificial intelligence research          
coles  a  i   fox  m   long  d     smith  a  j          hybrid relaxed planning graph lp
heuristic numeric planning domains  proceedings eighteenth international
conference automated planning scheduling  icaps     
coles  a  j     coles  a  i          lprpg p  relaxed plan heuristics planning
preferences  proceedings   st international conference automated planning scheduling  icaps  
coles  a  j   coles  a  i   fox  m     long  d          extending use inference
temporal planning forwards search  proceedings   th international
conference automated planning scheduling  icaps     
do  m  b     kambhampati  s          sapa  domain independent heuristic metric temporal planner  proceedings european conference planning  ecp    
do  m  b     kambhampati  s          sapa  multi objective metric temporal planner 
journal artificial intelligence research             
domshlak  c   katz  m     lefler  s          abstractions met landmarks  proceedings   th international conference planning scheduling  icaps  
edelkamp  s          taming numbers durations model checking integrated
planning system  journal artificial intelligence research             
fox  m     long  d          pddl     extension pddl expressing temporal
planning domains  journal artificial intelligence research            
gerevini  a   saetti  a     serina  i          approach temporal planning scheduling domains predictable exogenous events  journal artificial intelligence
research             
gerevini  a   saetti  a     serina  i          approach efficient planning numerical
fluents multi criteria plan quality  artificial intelligence                    
gregory  p     rendl  a          constraint model settlers planning domain 
aylett  r   ed    proceedings uk planning special interest group  plansig  
herriot watt university 
gregory  p   cresswell  s   long  d     porteous  j          extraction disjunctive landmarks planning problems via symmetry reduction   proceedings
conference symmetry search  symcon        pp       
   

fia hybrid lp rpg heuristic planning

helmert  m     domshlak  c          landmarks  critical paths abstractions  whats
difference anyway   proceedings   th international conference planning scheduling  icaps   pp         
hoffmann  j          metric ff planning system  translating ignoring delete lists
numeric state variables  journal artificial intelligence research             
hoffmann  j     edelkamp  s          deterministic part ipc    overview  journal
artificial intelligence research             
hoffmann  j   porteous  j     sebastia  l          ordered landmarks planning  journal
artificial intelligence research             
hoffmann  j     nebel  b          planning system  fast plan generation
heuristic search  journal artificial intelligence research             
karpas  e     domshlak  c          cost optimal planning landmarks  proceedings
  st international joint conference artificial intelligence  ijcai      pp 
         
kautz  h     walser  j          integer optimization models ai planning problems 
knowledge engineering review                 
koehler  j          planning resource constraints  proceedings european
conference artificial intelligence  ecai     pp         
laborie  p          algorithms propagating resource constraints ai planning
scheduling  existing approaches new results  artificial intelligence              
    
li  h  x     williams  b  c          generative planning hybrid systems based flow
tubes  proceedings   th international conference automated planning
scheduling  icaps  pp         
long  d     fox  m          automatic synthesis use generic types planning 
proceedings artificial intelligence planning scheduling  aips   pp         
long  d     fox  m       a   exploiting graphplan framework temporal planning 
proceedings international conference artificial intelligence planning
scheduling  icaps  
long  d     fox  m       b    rd international planning competition  results
analysis  journal artificial intelligence research          
ono  m     williams  b  c          efficient motion planning algorithm stochastic
dynamic systems constraints probability failure  proceedings   rd
aaai conference artificial intelligence  aaai  pp           
porteous  j   sebastia  l     hoffmann  j          extraction  ordering  usage
landmarks planning  proceedings  th european conference planning
 ecp     
radzi  n  h  m          multi objective planning using linear programming  ph d  thesis 
university strathclyde 
   

ficoles  coles  fox   long

richter  s   helmert  m     westphahl  m          landmarks revisited  proceedings
  rd aaai conference artificial intelligence  aaai      pp         
richter  s     westphal  m          lama planner  guiding cost based anytime
planning landmarks   journal artificial intelligence research             
shin  j  a     davis  e          processes continuous change sat based planner 
journal artificial intelligence research              
van den briel  m   benton  j   kambhampati  s     vossen  t          lp based heuristic
optimal planning  principles practice constraint programming  cp
       pp         
van den briel  m  h  l   vossen  t     kambhampati  s          loosely coupled formulations automated planning  integer programming perspective  journal
artificial intelligence research             
vossen  t   ball  m  o   lotem  a     nau  d  s          use integer programming
models ai planning  proceedings   th international joint conference
artificial intelligence  ijcai      pp         
wolfman  s     weld  d          combining linear programming satisfiability solving
resource planning  knowledge engineering review         
zhu  l     givan  r          landmark extraction via planning graph propagation  proceedings doctoral consortium   th international conference planning
scheduling  icaps dc      pp         

   


