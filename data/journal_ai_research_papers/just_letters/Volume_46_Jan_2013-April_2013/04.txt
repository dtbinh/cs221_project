journal of artificial intelligence research                 

submitted        published      

description logic knowledge and action bases
babak bagheri hariri
diego calvanese
marco montali

bagheri   inf  unibz   it
calvanese   inf  unibz   it
montali   inf  unibz   it

krdb research centre for knowledge and data
free university of bozen bolzano
piazza domenicani          bolzano  italy

giuseppe de giacomo
riccardo de masellis
paolo felli

degiacomo   dis   uniroma    it
demasellis   dis   uniroma    it
felli   dis   uniroma    it

dipartimento di ingegneria informatica automatica e gestionale
sapienza universita di roma
via ariosto           roma  italy

abstract
description logic knowledge and action bases  kab  are a mechanism for providing both a
semantically rich representation of the information on the domain of interest in terms of a description logic knowledge base and actions to change such information over time  possibly introducing
new objects  we resort to a variant of dl lite where the unique name assumption is not enforced
and where equality between objects may be asserted and inferred  actions are specified as sets
of conditional effects  where conditions are based on epistemic queries over the knowledge base
 tbox and abox   and effects are expressed in terms of new aboxes  in this setting  we address
verification of temporal properties expressed in a variant of first order  calculus with quantification across states  notably  we show decidability of verification  under a suitable restriction inspired
by the notion of weak acyclicity in data exchange 

   introduction
recent work in business processes  services and databases is bringing forward the need of considering both data and processes as first class citizens in process and service design  nigam   caswell 
      bhattacharya  gerede  hull  liu    su        deutsch  hull  patrizi    vianu        vianu 
      meyer  smirnov    weske         in particular  the so called artifact centric approaches 
which advocate a sort of middle ground between a conceptual formalization of dynamic systems
and their actual implementation  are promising to be effective in practice  cohn   hull         the
verification of temporal properties in the presence of data represents a significant research challenge  for a survey  see calvanese  de giacomo    montali         since taking into account how
data evolve over time results in systems that have an infinite number of states  neither finite state
model checking  clarke  grumberg    peled        nor most of the current techniques for infinitestate model checking  which mostly tackle recursion  burkart  caucal  moller    steffen        
apply to this case  recently  there have been some advancements on this issue  cangialosi  de giacomo  de masellis    rosati        damaggio  deutsch    vianu        bagheri hariri  calvanese 
de giacomo  de masellis    felli        belardinelli  lomuscio    patrizi         in the context
of suitably constrained relational database settings 
c
    
ai access foundation  all rights reserved 

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

while most of this work is based on maintaining information in a relational database  for more
sophisticated applications it is foreseen to enrich data intensive business processes with a semantic
level  where information can be maintained in a semantically rich knowledge base which allows for
operating with incomplete information  calvanese  de giacomo  lembo  montali    santoso       
limonad  de leenheer  linehan  hull    vaculin         this leads us to look into how to combine
first order data  ontologies  and processes  while maintaining basic inference tasks  specifically
verification  decidable  in this setting  we capture the domain of interest in terms of semantically
rich formalisms as those provided by ontological languages based on description logics  dls 
 baader  calvanese  mcguinness  nardi    patel schneider         such languages natively deal
with incomplete knowledge in the modeled domain  this additional flexibility comes with an added
cost  however  differently from relational databases  to evaluate queries we need to resort to logical
implication  moreover  incomplete information combined with the ability of evolving the system
through actions results in a notoriously fragile setting w r t  decidability  wolter   zakharyaschev 
    b      a  gabbay  kurusz  wolter    zakharyaschev         in particular  due to the nature
of dl assertions  which in general are not definitions but constraints on models   we get one of
the most difficult kinds of domain descriptions for reasoning about actions  reiter         which
amounts to dealing with complex forms of state constraints  lin   reiter        
to overcome this difficulty  virtually all solutions that aim at robustness are based on a so called
functional view of knowledge bases  levesque         the kb provides the ability of querying
based on logical implication  ask   and the ability of progressing it to a new kb through forms
of updates  tell   baader  ghilardi    lutz        calvanese  de giacomo  lenzerini    rosati 
       notice that this functional view is tightly related to an epistemic interpretation of the kb
 calvanese  de giacomo  lembo  lenzerini    rosati      a   indeed our work is also related to
that on epistemic dynamic logic  van ditmarsch  van der hoek    kooi         and  though out of
the scope of this paper  the decidability results presented here could find application in the context
of that research as well 
we follow this functional view of kbs  however  a key point of our work is that at each execution step external information is incorporated into the system in form of new individuals  denoted
by function terms   that is  our systems are not closed w r t  the available information  this makes
our framework particularly interesting and challenging  in particular  the presence of these individuals requires a specific treatment of equality  since as the system progresses and new information is
acquired  distinct function terms may be inferred to denote the same object 
specifically  we introduce the so called knowledge and action bases  kabs   a kab is
equipped with an ontology or  more precisely  a tbox expressed  in our case  in a variant of dllitea  calvanese  de giacomo  lembo  lenzerini    rosati      b   which extends the core of the
web ontology language owl   ql  motik  cuenca grau  horrocks  wu  fokoue    lutz       
and is particularly well suited for data management  such a tbox captures intensional information
on the domain of interest  similarly to uml class diagrams or other conceptual data models  though
as a software component to be used at run time  the kab includes also an abox  which acts as a
storage or state  the abox maintains the data of interest  which are accessed by relying on query answering based on logical implication  certain answers   notably  our variant of dl litea is without
the unique name assumption  una   and we allow for explicit equality assertions in the abox  in
this way we can suitably treat function terms to represent individuals acquired during the execution 
technically  the need of dealing with equality breaks the first order rewritability of dl litea query
answering  and requires that  in addition to the rewriting process  inference on equality is performed
   

fid escription l ogic k nowledge and action bases

 artale  calvanese  kontchakov    zakharyaschev         as a query language  we use unions of
conjunctive queries  possibly composing their certain answers through full fol constructs  this
gives rise to an epistemic query language that asks about what is known by the current kb  calvanese et al       a   apart from the kb  the kab contains actions  whose execution changes
the state of the kb  i e   its abox  such actions are specified as sets of conditional effects  where
conditions are  epistemic  queries over the kb and effects are expressed in terms of new aboxes 
actions have no static pre conditions  whereas a process is used to specify which actions can be
executed at each step  for simplicity  we model such processes as condition action rules  where the
condition is again expressed as a query over the kb 
in this setting  we address the verification of temporal dynamic properties expressed in a firstorder variant of  calculus  park        stirling         where atomic formulae are queries over
the kb which can refer both to constants and to function terms  and where a controlled form of
quantification across states is allowed  notice that all previous decidability results on actions over
dl kbs assumed that no information is coming from outside of the system  in the sense that no
new individual terms are added while executing actions  calvanese et al         baader et al        
rosati   franconi         in this paper  instead  we allow for arbitrary introduction of new terms 
unsurprisingly  we show that even for very simple kabs and temporal properties  verification is
undecidable  however  we also show that for a rich class of kabs  verification is in fact decidable
and reducible to finite state model checking  to obtain this result  following cangialosi et al         
and bagheri hariri et al          we rely on recent results in data exchange on the finiteness of the
chase of tuple generating dependencies  fagin  kolaitis  miller    popa         though  in our case 
we need to extend the approach to deal with  i  incomplete information   ii  inference on equality 
and  iii  quantification across states in the verification language 
the paper is organized as follows  in section   we give preliminaries about dl litea without
una   which is going to be our knowledge base formalism  section   describes the kab framework in detail  while section   discusses its execution semantics  in section   we introduce the
verification formalism for kabs  in section    we show that verification of kabs is in general undecidable  even considering very simple temporal properties and kabs  in section    we give our
main technical result  verification of weakly acyclic kabs is decidable in e xp t ime  in section   
we extensively survey related work  section   concludes the paper 

   knowledge base formalism
description logics  dls   baader et al         are knowledge representation formalisms that are
tailored for representing the domain of interest in terms of concepts  or classes   denoting sets of
objects  and roles  or relations   denoting binary relations between objects  dl knowledge bases
 kbs  are based on an alphabet of concept and role names  and an alphabet of individuals  a
dl kb is formed by two distinct parts  a tbox  which represents the intensional level of the kb
and contains a description of the domain of interest in terms of universal assertions over concepts
and roles  and an abox  which represents the instance level of the kb and contains extensional
information on the participation of individuals to concepts and roles 
for expressing kbs we use dl litenu   a variant of the dl litea language  poggi  lembo 
calvanese  de giacomo  lenzerini    rosati        calvanese  de giacomo  lembo  lenzerini   
rosati        in which we drop the unique name assumption  una  in line with the standard web
ontology language  owl     bao et al          essentially  dl litenu extends the owl   ql
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

profile of owl    by including functionality assertions and the possibility to state equality between
individuals 
the syntax of concept and role expressions in dl litenu is as follows 
r  p   p   
v  r   r 

b  n   r 
c  b   b 

where n denotes a concept name  p a role name  and p  an inverse role 
formally  in a dl litenu kb  t  a   the tbox t is a finite set of tbox assertions of the form
b v c 

r v v 

 funct r  

called respectively concept inclusions  role inclusions  and functionality assertions  we follow
the usual assumption in dl lite  according to which a tbox may contain neither  funct p   nor
 funct p    if it contains r v p or r v p    for some role r  poggi et al         calvanese et al  
       this condition expresses that roles in functionality assertions cannot be specialized 
dl litenu tboxes are able to capture the essential features of conceptual modeling formalisms 
such as uml class diagrams  or entity relationship schemas   namely isa between classes and
associations  relationships   disjointness between classes and between associations  typing of associations  and association multiplicities  in particular  mandatory participation and functionality  
the main missing feature is completeness of hierarchies  which would require the introduction of
disjunction and would compromise the good computational properties of dl lite 
the abox a in a dl litenu kb  t  a  is a finite set of abox assertions of the form
n  t    

p  t    t    

t    t   

called respectively  concept  membership  assertions  role  membership  assertions  and equality
assertions  where t    t  are terms denoting individuals  see below   the presence of equality assertions in the abox requires a specific treatment of equality that goes beyond the usual reasoning
techniques for dl lite based on first order rewritability  although reasoning remains polynomial
 artale et al          on the other hand  we do not allow for explicit disequality  though one can use
membership in disjoint concepts to assert that two individuals are different 
dl litenu admits complex terms for denoting individuals  such terms are inductively defined
by starting from a finite set of constants  and applying a finite set of  uninterpreted  functions of
various arity greater than    as a result  the set of individual terms is countably infinite  we
call function terms those terms involving functions  also  the structure of terms has an impact on
inference over equality  which is a congruence relation on the structure of terms  i e   if ti   t i   for
i              n   and f is a function symbol of arity n  then f  t            tn     f  t             t n    apart
from this aspect related to equality  we can treat individuals denoted by terms simply as ordinary
individual constants in dls 
we adopt the standard semantics of dls based on fol interpretations i    i   i    where i
is the interpretation domain and i is the interpretation function such that ti  i   n i  i   and
p i  i i   for each term t concept name n   and role name p   coherently with the congruence
relation on terms  we have that  f  t            tn   i    f  t             t n   i   whenever tii   t i i   for i 
            n  
complex concepts and roles are interpreted as follows 
 r i
 b i

   o   o    o  o     ri   
  i   b i  

 p   i
 r i
   

    o    o       o    o     p i   
   i  i   r i  

fid escription l ogic k nowledge and action bases

an interpretation i satisfies an assertion of the form 
 b v c  if b i  c i  
 r v v   if ri  v i  
  funct r   if for all o  o    o  we have that  if   o  o      o  o      ri   then o    o   
 n  t     if ti   n i  
 p  t    t     if  ti    ti     p i  
 t    t    if ti    ti   
i is a model of a kb  t  a  if it satisfies all assertions in t and a  kb  t  a  is satisfiable if it has
a model  we also say that an abox a is consistent w r t  a tbox t if the kb  t  a  is satisfiable 
an assertion  is logically implied by a kb  t  a   denoted  t  a       if every model of  t  a 
satisfies  as well 
the following characterization of satisfiability and logical implication in dl litenu is an easy
consequence of results by artale et al         
theorem   checking satisfiability and logical implication in dl litenu are pt ime complete 
proof  the pt ime lower bound is an immediate consequence of the same lower bound established
by artale et al         for dl litenu in which we do not allow the use of complex individual terms 
for the upper bound  artale et al         provide a pt ime algorithm that is based on first using
functionality assertions to exhaustively propagate equality  and then resorting to a pt ime algorithm
 in combined complexity  for reasoning in dl lite in the absence of una  we can adapt that
algorithm by changing the first step  so as to propagate  again in pt ime  equality over terms in the
active domain not only due to functionalities  but also due to congruence 
next we introduce queries  as usual  cf  owl     answers to queries are formed by constants terms denoting individuals explicitly mentioned in the abox  the  active  domain of an
abox a  denoted by adom a   is the  finite  set of constants terms appearing in concept  role  and
equality assertions in a  the  predicate  alphabet of a kb  t  a   denoted alph  t  a   is the set
of concept and role names occurring in t  a 
a union of conjunctive queries  ucq  q over a kb  t  a  is a fol formula of the form
 y   conj     x   y          yn  conj n   x   yn   with free variables  x and existentially quantified variables  y             yn   each conj i   x  y i   in q is a conjunction of atoms of the form n  z   p  z  z     where
n and p respectively denote a concept and a role name occurring in alph  t  a    and z  z   are
constants in adom a  or variables in  x or y i   for some i              n   the certain answers to q
over  t  a  is the set ans  q  t  a  of substitutions   of the free variables of q with constants terms
in adom a  such that q evaluates to true in every model of  t  a   i e   q is logically implied by
 t  a   following the notation used for assertions  we denote this as  t  a     q  if q has no free
variables  then it is called boolean and its certain answers are either the empty substitution denoting
true or nothing denoting false 
again  as an easy consequence of the results by artale et al          we obtain the following
characterization of query answering in dl litenu  
theorem   computing ans  q  t  a  of an ucq q over a dl litenu kb  t  a  is pt ime complete
in the size of t and a 
   as customary  we can view each substitution simply as a tuple of constants  assuming some ordering of the free
variables of q 

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

proof  as in the proof of theorem    we can first propagate in pt ime equality over terms in the
active domain by using functionality and congruence closure  and then resort to query answering in
dl lite in the presence of una  which is in pt ime in the combined size of the tbox t and the
abox resulting from the above equality propagation  actually  in ac  in the size of this abox  
we also consider an extension of ucqs  called ecqs  which are queries of the query language
eql lite ucq   calvanese et al       a   that is  the fol query language whose atoms are ucqs
evaluated according to the certain answer semantics above  an ecq over a kb  t  a  is a possibly
open formula of the form
q   q     x   y    q   q   q    x q 
where  q  denotes the certain answers of a ucq q over  t  a    x   y  denotes the certain answers
of x   y over  t  a   that is  the set  hx  yi  adom a     t  a      x   y    logical operators
have the usual meaning  and quantification ranges over elements of adom a  
formally we define the relation q holds in  t  a  under substitution  of all free variables in
q  written t  a      q  inductively as follows 
t  a  
t  a  
t  a  
t  a  
t  a  

    q 
    x   y 
   q
   q   q 
   x q

if
if
if
if
if

 t  a     q 
 t  a      x   y  
t  a       q 
t  a      q  and t  a      q   
exists t  adom a  such that t  a   x t     q 

where  x t  denotes the substitution obtained from  by assigning to x the constant term t  if x is
already present in  its value is replaced by t  if not  the pair x t is added to the substitution  
the certain answer to q over  t  a   denoted ans  q  t  a   is the set of substitutions  for the
free variables in q such that q holds in  t  a  under   i e  
ans  q  t  a 

      t  a      q  

following the line of the proof by calvanese et al       a   but considering theorem   for the
basic step of evaluating an ucq  we get 
theorem   computing ans  q  t  a  of an ecq q over a dl litenu kb  t  a  is pt imecomplete in the size of t and a 
we recall that dl lite enjoys a rewritability property  which states that for every ucq q and
for every dl lite kb  t  a  
ans  q  t  a 

  ans  rew t  q     a  

where rew t  q  is a ucq computed by the reformulation algorithm of calvanese et al       b  
notice that  in this way  we have compiled away the tbox  this result can be extended to ecqs
as well  i e   for every ecq q  ans  q  t  a    ans  rew t  q     a  where the query rew t  q  is
obtained from q by substituting each atom  q   where q is an ucq  by  rew t  q    calvanese et al  
    a   in our setting  we can again exploit rewritability  but only after having pre processed the
abox  in pt ime  by propagating equalities between individual terms in adom a  according to
functionality assertions and congruence of terms 
   

fid escription l ogic k nowledge and action bases

we say that two aboxes a  and a  are equivalent w r t  tbox t and predicate alphabet  
denoted by
a  t  a   
if for every abox assertion    a  which is either a concept assertion n  t  with n    role
assertion p  t    t    with p    or equivalence assertion t    t    we have  t  a           and viceversa  for every abox assertion    a    which is either a concept assertion n  t  with n   
role assertion p  t    t    with p    or equivalence assertion t    t    we have  t  a          
notice that if a  t  a    then for every ecq q whose concept and role names belong to  we
have that ans  q  t  a      ans  q  t  a     notice also that  by applying theorem   to the boolean
query    corresponding to the abox assertion   for each  in a  and a    we obtain that abox
equivalence can be checked in pt ime 

   knowledge and action bases
a knowledge and action base  kab  is a tuple k    t  a        where t and a  form the
knowledge component  or knowledge base   and  and  form the action component  or action
base   in practice  k stores the information of interest into a kb  formed by a fixed tbox t and
an initial abox a    which evolves by executing actions  according to the sequencing established
by process   during the evolution new individuals can be acquired by the kb  such individuals
are witnesses of new pieces of information inserted into the kab from the environment the kab
runs in  i e   the external world   we represent these new objects as function terms  as the kab
evolves  the identity of individuals should be intuitively preserved and this induces the necessity of
remembering equalities between terms denoting individuals discovered in the past  we describe in
detail the components of the kab 
    tbox
t is a dl litenu tbox  used to capture the intensional knowledge about the domain of interest 
such a tbox is fixed once and for all  and does not evolve during the execution of the kab 
    abox
a  is a dl litenu abox  which stores the extensional information of interest  notice that a  is
the abox of the initial state of the kab  and as the kab evolves due to the effect of actions  the
abox  which is indeed the state of the system  evolves accordingly to store up to date information 
through actions we acquire new information from the external world by using calls to external
services represented through functions  given that we have no information about these services 
except for their name and the parameters that are passed to them  the functions remain uninterpreted 
we only assume that the result of such service calls depends only on the passed parameters  hence 
we represent the new individuals returned by service calls as function terms  the presence of
function terms has an impact on the treatment of equality  since in principle we need to close equality
w r t  congruence  while this closure generates an infinite number of logically implied equality
assertions  we are going to keep such assertions implicit  computing them only when needed 
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

    actions
 is a finite set of actions  an action    modifies the current abox a by adding or deleting
assertions  thus generating a new abox a    an action  has the form
act  x     e            en   
where act  x  is the signature of  and  e            en   is a  finite  set of effects forming the effect
specification of   the action signature is constituted by a name act and a list  x of individual input
parameters  which need to be instantiated with actual individuals at execution time   an effect ei
has the form
 qi     q
a i  
   
i
where
 qi  is an ucq  i e   a positive query  which extracts the bulk data to process  obtained as the
certain answers of qi     the free variables of qi  include the action parameters 
 
 q
i is an arbitrary ecq  whose free variables occur all among the free variables of qi   which
refines  by using negation and quantification  the result of qi    the query  qi     q
i as a
whole extracts individual terms to be used to form the new state of the kab  notice that the
ucq ecq division is also a convenience to have readily available the positive part of the
condition  which we will exploit later  

 a i is a set of  non ground  abox assertions  which include as terms  constants in a    free
variables of qi    and function terms f   x  having as arguments  x free variables of qi    these
terms  once grounded with the values extracted from  qi     q
i   give rise to  ground  abox
assertions  which contribute to form the next state of the kab 
more precisely  given the current abox a of k and a substitution  for the input parameters of the
action   we denote by  the action instantiated with the actual parameters coming from   by
firing  on the state a  we get a new state a  which is computed by simultaneously applying all
instantiated effects of  as follows 
 each effect ei in  of form     extracts from a the set ans    qi     q
i    t  a  of tuples of
terms in adom a  and  for each such tuple   asserts a set a i  of abox assertions obtained
from a i  by applying the substitution  for the free variables of qi    for each function term
f   x  appearing in a i   a new ground term is introduced having the form f   x   these
terms represent new constants coming from the external environment the kab is running
in 
we denote by ei  a  the overall set of abox assertions  i e  
 

ei  a   

a i  

ans    qi   q
i   t a 

   we disregard a specific treatment of output parameters  and assume instead that the user can freely pose queries over
the kb  extracting whatever information she he is interested in 

   

fid escription l ogic k nowledge and action bases

 moreover  let eq t  a     t    t    ht    t  i  ans   x    x     t  a    observe that  due
to the semantics of queries  the terms in eq t  a  must appear explicitly in adom a   that
is  the possibly infinite number of equalities due to congruence do not appear in eq t  a  
though they are logically implied  hence  the equalities in eq t  a  are the equality assertions involving terms in adom a  that either appear explicitly in a  or are obtained by
closing these under functionality and congruence of terms 
the overall effect of the action  with parameter substitution  over a is the new abox a   
do  t  a    where
 
ei  a  
do  t  a      eq t  a  
 in

notice that the presence of function terms in action effects makes the domain of the aboxes obtained by executing actions continuously changing and in general unbounded in size  notice also
that we do have a persistence assumption on equalities  i e   we implicitly copy all equalities holding in the current state to the new one  this implies that  as the system evolves  we acquire new
information on equalities between terms  but never lose information on equalities already acquired 
finally  we observe that in the above execution mechanism no persistence frame assumption  except for equality  is made  in principle at every move we substitute the whole old state  i e   abox 
with a new one  on the other hand  it should be clear that we can easily write effect specifications
that copy big chunks of the old state into the new one  for example   p  x  y  
p  x  y  copies
the entire set of assertions involving the role p   in some sense  the execution mechanism adopted
in this paper is very basic and does not address any of the elaboration tolerance issues typical of
reasoning about actions  such as the frame problem  ramification problem or qualification problem
 reiter           this is not because we consider them irrelevant  on the contrary  they are relevant
and further research on such issues is desirable  we adopt this basic mechanism simply because
it is general enough to expose all difficulties we need to overcome in order to get decidability of
verification in this setting 
    process
the process component of a kab is a possibly nondeterministic program that uses the kab aboxes
to store its  intermediate and final  computation results  and the actions in  as atomic instructions 
the aboxes can be arbitrarily queried through the kab tbox t   while they can be updated only
through actions in   to specify such a process component we adopt a rule based specification 
specifically  a process is a finite set  of condition action rules  a condition action rule   
is an expression of the form
q    
where  is an action in  and q is an ecq  whose free variables are exactly the parameters of
  the rule expresses that  for each tuple  for which condition q holds  the action  with actual
parameters  can be executed  processes do not force the execution of actions but constrain them 
the user of the process will be able to choose any action that the rules forming the process allow 
moreover  our processes inherit entirely their states from the kab knowledge component  tbox
and abox   see  e g   cohn   hull        
   but see also the work by kowalski and sadri        

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

villain v character
livesin v character
livesin v city
character v livesin
 funct livesin 
enemy v villain
enemy v superhero
defeated v villain
defeated v superhero
defeated v enemy
alterego v superhero
alterego v character
 funct alterego 

    

alterego
enemy

superhero

character

    

livesin

city

villain

 subset 
defeated

figure    kabs tbox for example  
we observe that we adopt a basic rule based specification here because  in spite of its simplicity 
it is able to expose all the difficulties of our setting  other choices are also possible  in particular 
the process could maintain its own state besides the one of the kab  as long as such an additional
state is finite  or embeddable into the kab itself  the results here would easily extend to such a case 
example   let us consider a kab k    t  a        describing a super heroes comics world 
where we have cities in which characters live  figure   shows the tbox t and its rendering as a
uml class diagram  for the relationship between uml class diagrams and description logics
in general and dl lite in particular  we refer to the work by berardi  calvanese  and de giacomo
       and by calvanese  de giacomo  lembo  lenzerini  poggi  rodrguez muro  and rosati
        as for the dynamics of the domain  characters can be superheroes or  super villains  who
fight each other  as in the most classic plot  superheroes help the endeavors of law enforcement
fighting villains threatening the city they live in  when a villain reveals himself for perpetrating
his nefarious purposes against the citys peace  he consequently becomes a declared enemy of all
superheroes living in that city  each character lives in one city at the time  a common trait of
superheroes is a secret identity  a superhero is said to be the alter ego of some character  which is
his identity in common life  hence  the abox assertion alterego s  p  means that the superhero s is
the alter ego of character p  villains always try to unmask superheroes  i e   find their secret identity 
in order to exploit such a knowledge to defeat them  notice the subtle difference here  we use the
alterego s  p  assertion to model the fact that s is the alter ego of p  whereas only by asserting s   p
we can capture the knowledge that s and p semantically denote the same individual   may include
actions like the following ones 
becomesh p  c       character p   livesin p  c   v villain v   livesin v  c  
 superhero sh p    alterego sh p   p   
copyall  
states that if there exists at least one villain living in the city c  a new superhero sh p  can be created 
with the purpose of protecting c  such a superhero has p as alter ego  copyall is a shortcut for
explicitly copying all concept and role assertions to the new state  equality assertions are always
   

fid escription l ogic k nowledge and action bases

implicitly copied   action
unmask s  p       alterego s  p  
copyall  

 s   p  

states that superhero s  who is the alter ego of p  gets unmasked by asserting the equality between s
and p  it is now known that s   p   action
fight v  s      p  villain v   character p   alterego s  p     s   p 
copyall  

 defeated v  s   

states that when villain v fights superhero s  he defeats s if s has been unmasked  i e   it is known
that s is equal to his alter ego  action
challenge v  s   
   villain v   superhero s   p alterego s  p   livesin p  sc     defeated v  s  
 livesin v  sc   enemy v  s   
copyall  
states that when villain v challenges superhero s and has not defeated him  next he lives in the same
city as s and is an enemy of s  action
threatencity v  c   
   villain v   superhero s   p alterego s  p   livesin p  c  
 enemy v  s   livesin v  c  
copyall  
states that when villain v threatens city c  then he becomes an enemy of all and only superheroes
that live in c 
a process  might include the following rules 
 character p     s superhero s   livesin s  c  
 superhero s   character c  
 enemy v  s     v    defeated v     s  
 villain v   superhero s  
 villain v   city c    v     villain v      livesin v     c     v   v     

 
 

 
 
 

becomesh p  c  
unmask s  c  
fight v  s  
challenge v  s  
threatencity v  c  

for instance  the first rule states that a character can become a superhero if the city does not already
have one  whereas the last one states that a villain can threaten a city  if the city does not have
another villain that is  known to be  distinct from him her 
notice that  during the execution  reasoning on the kb is performed  for instance  consider an
initial abox
a      superhero batman   villain joker   alterego batman  bruce  
livesin bruce  gotham   livesin batman  gotham   livesin joker  city     
in this state  bruce and batman live in the same city  and batman is the alter ego of bruce  but it is not
known whether they denote the same individual  executing challenge joker  batman  in a    which
is indeed allowed by the process   generates a new abox with added assertions enemy joker 
batman   livesin joker  gotham   and gotham   city  is implied by the functionality on livesin 

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

   kab transition system
the semantics of kabs is given in terms of possibly infinite transition systems that represent the
possible evolutions of the kab over time  as actions are executed according to the process  notice
that such transition systems must be equipped with semantically rich states  since a full kb is associated to them  formally we define the kind of transition system we need as follows  a transition
system  is a tuple of the form  u  t    s    abox      where 
 u is a countably infinite set of terms denoting individuals  called universe 
 t is a tbox 
  is a set of states 
 s    is the initial state 
 abox is a function that  given a state s   returns an abox associated to s which has as
individuals terms of u  and which conforms to t  
      is a transition relation between pairs of states 
for convenience 
s we introduce the active domain of the whole transition system  defined as
adom      s adom  abox  s    also we introduce the  predicate  alphabet alph    of  as
the set of concepts and roles occurring in t or in the co domain of abox  
the kab generates a transition system of this form during its execution  formally  given a
kab k    t  a         we define its  generated  transition system k    u  t    s    abox    
as follows 
 u is formed by all constants and all function terms inductively formed starting from
adom  a    by applying the functions occurring in the actions in  
 t is the tbox of the kab 
 abox is the identity function  i e   each state is simply an abox  
 s    a  is the initial state 
  and  are defined by mutual induction as the smallest sets satisfying the following property  if s    then for each rule q     evaluate q and  for each tuple  returned  if
do  t  abox  s     is consistent w r t  t   then s  s  where s    do  t  abox  s     
notice that the alphabet alph k   of k is simply formed by the set alph k  of concepts and
roles that occur in k 
the kab transition system k is an infinite tree with infinitely many different aboxes in
its nodes  in general  in fact  to get a transition system that is infinite  it is enough to perform
indefinitely a simple action that adds new terms at each step  e g   an action of the form
        c x  

 c f  x     copyall   

hence the classical results on model checking  clarke et al          which are developed for finite
transition systems  cannot be applied directly for verifying kabs 
   

fid escription l ogic k nowledge and action bases

   verification formalism
to specify dynamic properties over kabs  we use a first order variant of  calculus  stirling       
park          calculus is virtually the most powerful temporal logic used for model checking of
finite state transition systems  and is able to express both linear time logics such as ltl and psl 
and branching time logics such as ctl and ctl   clarke et al          the main characteristic of
 calculus is its ability of expressing directly least and greatest fixpoints of  predicate transformer 
operators formed using formulae relating the current state to the next one  by using such fixpoint
constructs one can easily express sophisticated properties defined by induction or co induction 
this is the reason why virtually all logics used in verification can be considered as fragments of
 calculus  technically   calculus separates local properties  asserted on the current state or on
states that are immediate successors of the current one  from properties talking about states that are
arbitrarily far away from the current one  stirling         the latter are expressed through the use
of fixpoints 
in this work  we use a first order variant of  calculus  where we allow local properties to be
expressed as ecqs  and at the same time we allow for arbitrary first order quantification across
states  given the nature of ecqs used for formulating local properties  first order quantification
ranges over terms denoting individuals  formally  we introduce the logic la defined as follows 
  q             x    hi   z   z  
where q is a possibly open ecq and z is a second order predicate variable  of arity     we make use
of the following abbreviations  x     x                         hi 
and z    z  z z   the formulae z  and z  respectively denote the least and
greatest fixpoint of the formula   seen as the predicate transformer z    as usual in  calculus 
formulae of the form z   and z   must obey to the syntactic monotonicity of  w r t  z  which
states that every occurrence of the variable z in  must be within the scope of an even number of
negation symbols  this ensures that the least fixpoint z   as well as the greatest fixpoint z  
always exists 
the semantics of la formulae is defined over possibly infinite transition systems of the form
hu  t    s    abox   i seen above  since la also contains formulae with both individual and
predicate free variables  given a transition system   we introduce an individual variable valuation
v  i e   a mapping from individual variables x to u  and a predicate variable valuation v   i e   a
mapping from the predicate variables z to subsets of   with these three notions in place  we
assign meaning to formulae by associating to   v  and v an extension function   
v v   which maps

formulae to subsets of   formally  the extension function   v v is defined inductively as follows 
 q 
v v
  
v v
       
v v
 x  
v v
 hi 
v v
 z 
v v
 z  
v v

 
 
 
 
 
 
 

 s     ans  qv  t  abox  s     true  
     
v v  

    
v v      v v  
 s     t t  adom abox  s   and s    
v x t  v   

 
 
 
 s     s  s  s and s    v v   
v  z  
t
 e       
v v  z e   e  

here qv stands for the  boolean  ecq obtained from q by substituting its free variables according
to v  intuitively    
v v assigns to such constructs the following meaning 
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

 the boolean connectives have the expected meaning 
 the quantification of individuals is done over the terms of the current abox  notice that
such terms can be referred in later states where the associated abox does not include such
terms anymore 
 the extension of hi consists of the states s such that  for some state s  with transition
s  s    the formula  holds in s  under valuation v  
 the extension of    consists of the states s such that  for all states s  with transition s  s   
the formula  holds in s  under valuation v 
 the extension of z  is the smallest subset e of  such that  when assigning to z the
extension e   the resulting extension of   under valuation v  is contained in e   that is  the
extension of z  is the least fixpoint of the operator   
v v  z e    where v  z e  denotes the
predicate valuation obtained from v by forcing the valuation of z to be e 
 similarly  the extension of z  is the greatest subset e of  such that  when assigning to
z the extension e   the resulting extension of  contains e   that is  the extension
of z 
s

 
 e

 e 
 
formally 
 z  
is the greatest fixpoint of the operator   
v v
v v  z e 
  
v v  z e    
when  is a closed formula    
v v does not depend on v or v   and we denote the extension of 

simply by      a closed formula  holds in a state s   if s       in this case  we write
  s      a closed formula  holds in   denoted by       if   s       we call model
checking the problem of verifying whether      holds 
the next example shows some simple temporal properties that can be expressed in la  
example   considering the kab of example    we can easily express temporal properties as the
following ones 
 from now on all current superheroes that live in gotham will live in gotham forever  a form
of safety  
x  superhero x   livesin x  gotham    z   livesin x  gotham      z  
 eventually all current superheroes will be unmasked  a form of liveness  
x  superhero x    z   alterego x  x      z  
 there exists a possible future situation where all current superheroes will be unmasked  another form of liveness  
x  superhero x    z   alterego x  x    hiz  
 along every future  it is always true  for every superhero  that there exists an evolution that
eventually leads to unmask him  a form of liveness that holds in every moment  
y  x  superhero x    z   alterego x  x    hiz      y 
   

fid escription l ogic k nowledge and action bases

consider two transition systems sharing the same universe and the same predicate alphabet 
we say that they are behaviorally equivalent if they satisfy exactly the same la formulas  to
formally capture such an equivalence  we make use of the notion of bisimulation  milner        
suitably extended to deal with query answering over kbs 
given two transition systems  
 
hu  t      s     abox       i and  
 
hu  t      s     abox       i sharing the same universe u  the same tbox t   and such that
alph        alph          a bisimulation between   and   is a relation b       such
that  s    s     b implies that 
   abox  s    t  abox  s    
   if s    s     then there exists s   such that s    s   and  s     s      b 
   if s    s     then there exists s   such that s    s   and  s     s      b 
we say that two states s  and s  are bisimilar if there exists a bisimulation b such that  s    s    
b  two transition systems   with initial state s   and   with initial state s   are bisimilar if
 s     s      b  the following theorem states that the formula evaluation in la is indeed invariant
w r t  bisimulation  so we can equivalently check any bisimilar transition systems 
theorem   let   and   be two transition systems that share the same universe  the same tbox 
and the same predicate alphabet  and that are bisimilar  then  for two states s  of   and s  of  
 including the initial ones  that are bisimilar  and for all closed la formulas   we have that
s      

iff

s        

proof  the proof is analogous to the standard proof of bisimulation invariance of  calculus  stirling         though taking into account our bisimulation  which guarantees that ecqs are evaluated
identically over bisimilar states  notice that the assumption that the two transition systems share the
same universe and the same predicate alphabet makes it easy to compare the answers to queries 
making use of such a notion of bisimulation  we can  for example  redefine the transition system
generated by a kab k    t  a        while maintaining bisimilarity  by modifying the definition
of k   hu  t    s    abox   i given in section   as follows 
 i  we modify do   so that no function term t  is introduced in the generated abox a  if in the
current abox  a there is already a term t such that  t  a     t   t   
 ii  if the abox a    do t  abox  s     obtained from the current state s is logically equivalent
to the abox abox  s      for some already generate state s     we do not generate a new state  but
simply add s  s   to k  

   verification of kabs
it is immediate to see that verification of kabs is undecidable in general as it is easy to represent
turing machines using a kab  actually we can do so using only a fragment of the capabilities of
kabs  as shown in the next lemma 
lemma   checking formulas of the form z  n  a   hiz   where n is an atomic concept and
a is an individual occurring in a    is undecidable already for a kab k    t  a        where 
   note that all terms that are present in the current abox are preserved in the new abox  together with equalities
between terms 

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

 first c  
 value c  x  
 value c  av    
 cell cr   aq    
 cell n c   aq     next c  n c    last n c   
 last c  
 cell c     
 cell cr      
 stop    

 first c  
 cell c      value c  x  
 cell c  aq    value c  av   
 cell c  aq    value c  av    next c  cr   
 cell c  aq    value c  av    last c  
 cell c      last c  
 cell c      first c  
 cell c      next c  cr   
 cell c  aqf   

figure    effects of the action used to encode a transition  q  v  q     v     r  of a turing machine
 t is the empty tbox 
 the actions in  make no use of negation nor equality 
  is the trivial process that poses no restriction on executability of actions 
proof  given a turing machine m   hq    q      qf   i  we show how to construct a corresponding
kab km      a        that mimics the behavior of m  specifically  we encode the halting
problem for m as a verification problem over km   roughly speaking  km maintains the tape
and state information in the  current  abox  and encodes the transitions of m as actions  our
construction makes use of a tape that initially contains a unique cell  represented by the constant
   and is extended on the fly as needed  cells to the right of   are represented by function terms of
the form n n               while cells to the left of   are represented by function terms of the form
p p               then  we make use of one constant aq for each state q  q  of one constant av
for each tape symbol value v    of a special constant    and of the following concepts and roles 
 cell c  h  models a cell of the tape  where c is a cell identifier  and h corresponds to the current
state of m  if the head of m currently points to c  or to   if the head does not currently point
to c 
 next cl   cr   models the relative position of cells  stating that cr is the cell immediately following cl  
 value c  v  models that cell c currently contains value v  with v   
 first c  and last c  respectively denote the current first cell and last cell of the portion of
tape explored so far 
 stop c  is used to detect when m halts 
the initial state of km contains a unique cell and is defined as
a      cell    aq     value    a    first     last      
as for the action component   contains an action with no parameters for each transition in   while
the process  poses no restriction on executability of actions  i e   it contains a rule true      for
each such action  
we now provide the specification of actions  detailing the case of a right shift transition
 q  v  q     v     r   the corresponding action specification consists of the set of effects shown in
figure    the first effect maintains the first position of the tape unaltered  the second and third
   

fid escription l ogic k nowledge and action bases

effects deal with the cell values  they remain the same except for the current cell  that is updated
according to the transition  the next three effects deal with the right shift and the turing machine
state  if the current cell has a next cell and therefore is not the last one  then the head is moved
to the next cell and the state change of m is recorded there  in this case the last cell remains the
same  if instead the current cell is the last one  before moving the head the tape must be properly
extended  the function n   is used to create the identifier of this new successor cell  starting from
the identifier of the current one  furthermore  since the transition corresponds to a right shift of one
cell  the first cell and all the cells immediately following a cell marked   will be marked   in the
next state  finally  the last effect is used to identify the case in which m has reached a final state 
this is marked by inserting into the new state the special assertion stop    
the construction for a left shift transition is done symmetrically  using the function p   to create
a new predecessor cell  by construction  km satisfies the conditions of the theorem  observe that 
in the transition system km generated by km   every action corresponding to every transition of
m can be executed in each abox state s of km   and since t is empty  it will actually generate a
successor state of s  however  in each state  only the  unique  action that corresponds to the actually
executed transition of m will generate a successor state containing an abox assertion of the form
cell c  aq    for some state q of m  therefore  only those aboxes states properly corresponding to
configurations of m could eventually lead to an abox state in km where stop    holds  and the
latter will happen if and only if m halts  more precisely  one can show by induction on the length
respectively of a halting computation of m and of the shortest path from the initial state of km
to a state where stop    holds  that m halts if and only if km    z   stop      hiz   which
concludes the proof 
from the previous lemma  which shows undecidability already in a special case  we immediately
obtain the following result 
theorem   verification of la formulae over kabs is undecidable 
we observe that lemma   uses a kb that is constituted only by an abox containing concept
and role assertions  and makes use only of conjunctive queries in defining actions effects  moreover  the formula that we check makes no use of quantification at all  and can simply be seen as a
propositional ctl formula of the form ef p  expressing that proposition p eventually holds along
one path 

   verification of weakly acyclic kabs
in spite of theorem    next we introduce a notable class of kabs for which verification of arbitrary
la properties is decidable  to do so  we rely on a syntactic restriction that resembles the notion of
weak acyclicity in data exchange  fagin et al            and that guarantees boundedness of aboxes
generated by the execution of the kab and  in turn  decidability of verification 
now we are ready to introduce the notion of weak acyclicity in our context  we introduce the
edge labeled directed dependency graph of a kab k    t  a         defined as follows  nodes 
called positions  are obtained from the tbox t  there is a node for every concept name n in t   and
two nodes for every role name p in t   corresponding to the domain and to the range of p   edges
   we use the original definition of weak acyclicity  however  our results can be applied also to other variants of weak
acyclicity  see discussion in section    

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

villain

livesin  

livesin  

city

enemy  

character

alterego  

defeats  

 
defeats  

 

 

alterego  

 
superhero

enemy  

figure    weakly acyclic dependency graph for example   
are drawn by considering every effect specification  q      q
a  of each action contained in
  tracing how values are copied or contribute to generate new values as the system progresses  in
particular  let p be a position corresponding to a concept role component in the rewriting rew t  q    
of q   with variable x  for every position p  in a  with the same variable x  we include a normal
edge p  p    for every position p   in a  with a function term f   t  such that x   t  we include a

special edge p 
 p     we say that k is weakly acyclic if its dependency graph has no cycle going
through a special edge 
example   the kab of example   is weakly acyclic  its dependency graph  shown in figure   
does not contain any cycle going through special edges  for readability  self loops are not shown
in the figure  but are present for all nodes   and dashed edges are used to compactly represent the
contributions given by the rewriting of the queries  e g   the dashed edge form villain to character
denotes that for every outgoing edge from character  there exists an outgoing edge from villain
with the same type and target  hence  w r t  weak acyclicity dashed edges can be simply replaced
by normal edges 
we are now ready to state the main result of this work  which we are going to prove in the remainder
of this section 
theorem   verification of la properties for a weakly acyclic kab is decidable in e xp t ime in
the size of the kab 
we observe that the restriction imposed by weak acyclicity  or variants  is not too severe  and in
many real cases kabs are indeed weakly acyclic or can be transformed into weakly acyclic ones
at cost of redesign  indeed  weakly acyclic kabs cannot indefinitely generate new values from the
old ones  which then depend on a chain of unboundedly many previous values  in other words 
current values depend only on a bounded number of old values  while unbounded systems exist in
theory  e g   turing machines  higher level processes  as those in business process management or
service oriented modeling  typically require such a boundedness in practice  how to systematically
transform systems into weakly acyclic ones remains an open issue 
in the remainder of this section we present the proof of theorem    we do so in several steps 
   normalized kab  first we introduce a normalized form k of the kab k  which isolates the
contribution of equalities and of the tbox in actions effects of the kab  an important point
is that normalizing the kab preserves weak acyclicity 
   

fid escription l ogic k nowledge and action bases

   normalized do    then  we introduce a normalized version do norm    of do    which avoids
to consider equalities in generating the bulk set of tuples to be used in the effects to generate
the next abox  the transition system k norm generated through this normalized version
do norm    of do    by the normalized kab k is bisimilar to the transition system k generated through do   by k  hence the two transition systems satisfy the same la formulae 

   positive dominant  the next step is to introduce what we call the positive dominant k   of
the normalized kab k  this is obtained from k essentially by dropping equalities  negations 
and tbox  however k   contains enough information in the positive part so that  when we
drop all of these features  the active domain of the transition system k   generated by
k   overestimates the active domain of the transition system k norm generated by the
normalized kab k  moreover  if the normalized  and hence the original  kab is weakly
acyclic  so is its positive dominant  finally if the positive dominant is weakly acyclic then the
size of the active domain of its transition system k   is polynomially bounded by the size
of its initial abox  and hence so is the size of the active domain of k norm   this implies
that the size of k norm is finite and at most exponential in the size of its initial abox 
   putting it all together  tying these results together  we get the claim 
in the following  we detail each of these steps 
    normalized kab
given a kab k    t  a         we build a kab k    t  a         called the normalized form
of k  by applying a sequence of transformations that preserve the semantics of k while producing
a kab of a format that is easier to study 
   we view each abox a as partitioned into a part collecting all concept and role assertions  and
a part collecting all equality assertions  we denote with a e q the former and with eq t  a 
the latter  after having closed it w r t   the functionality assertions in  the tbox t   notice that
such a closure can be computed in polynomial time in the size of a and t  
   in k all individuals appearing in equality assertions in an abox also occur in special concept assertions of the form dummy t   where the concept dummy is unrelated to the other
concepts and roles in the kab  we do so by 
 adding concept assertions dummy t  for each t in an equality assertion in a  that does
not appear elsewhere 
 adding to the right hand part of each action effect ei a concept assertion dummy t  for
each t in an equality assertion in the right hand part of ei  
 adding to each action an effect specification of the form
 dummy x  

 dummy x   

notice that  as the result of this transformation  we get aboxes containing the additional
concept dummy  which however is never queried by actions effects and by the rules forming
the process  the impact of the transformation is simply that now the adom a  of the aboxes
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

a in the kab transition system can be readily identified as the set of terms occurring in
concept and role assertion only  without looking at equality assertions  
given an abox a  we denote by a the result of the two above transformations  which respectively add to a the closure of equalities and the extension of dummy 
   we manipulate each resulting effect specification
 q      q

a 

as follows 
     we replace  q      q by  rew t  q       rew t  q    calvanese et al       a   exploiting
the results by calvanese et al       b  and by artale et al          which guarantee that 
for every ecq q and every abox a where equalities are closed under functionality and
congruence  we have that
ans  q  t  a 

  ans  rew t  q     a  

     we replace each effect specification  rew t  q       rew t  q  
a    resulting from
 

step      by a set of effect specifications  qi    rew t  q  
a    one for each cq qi in
 
the ucq rew t  q   
     for each effect specification  qi     rew t  q  
a    we re express qi  so as to make
equalities used to join terms explicit and so as to remove constants from qi    specifically 
we replace the effect specification by
 qi      q    rew t  q  

a   

where 
 qi   is the cq without repeated variables obtained from qi  by  i  replacing for each
variable x occurring in qi    the j th occurrence of x except for the first one  by x j   
and  ii  replacing each constant c with a new variable xc  
v
v
 q      x   x j      xc   c  where  i  the first conjunction contains one equality
 x   x j    for each variable x in qi  and for each variable x j  introduced in the step
above  and  ii  the second conjunction contains one equality for each constant c in
qi   
to clarify the latter consider the following example 
example   given a query
 
 qi       n  x   p   x  y   p   c  x   
step     above replaces it by  qi      q     where
 
qi     n  x   p   x      y   p   xc   x      
   

 
q      x   x        x   x        xc   c  

fid escription l ogic k nowledge and action bases

as for the correctness
of step      it is immediate to notice that  qi    is equivalent to  qi   
v
v
 j 
 x   x    xc   c    the equivalence between the latter and  qi    q   is a consequence
of the construction by artale et al          which shows that query entailment in the presence
of equalities can be reduced to query evaluation by saturating equalities w r t  transitivity 
reflexivity  symmetry  and functionality 
given an action   we denote by  the action normalized as above 
since all transformations preserve logical equivalence  as long as we do not query dummy  
we have
lemma   do t  a    t alph k  do t  a    
also the normalization of a kab preserves weak acyclicity  which is a crucial consideration for
later results 
lemma   if k is weakly acyclic  then also k is weakly acyclic 
proof  consider each effect specification  q      q
a  belonging to an action in k  the
contribution of this effect specification to the dependency graph g of k is limited to each cq qi in
the ucq rew t  q      and to the set of concept and role assertions of a    we observe that each such
qi corresponds to a query qi   in k in which each variable of qi occurs exactly once  for every free
variable x of qi that also appears in a    and for every occurrence of x in qi itself  an edge is included
in g  in the dependency graph g of k  only one of such edges appears  corresponding to the single
occurrence of the variable x in qi    
notice that dummy can be omitted from the dependency graph of g since  by definition of k 
dummy does not occur in the left hand side of effects except for the trivial effect  dummy x  
 dummy x    this is not true for k  where dummy is needed  therefore  g is indeed a subgraph
of g  and hence weak acyclicity of g implies weak acyclicity of g 
    normalized do  
next we give a simplified version of do    which we call do norm     we start by observing that
we can reformulate the definition of do   given in section    for that  we first need to define a
suitable notion of join of two queries  let q  and q  be two ecqs  which may have free variables in
common  and let a  and a  be two aboxes  then we define ans  q      a       ans  q      a    as
the set of substitutions  over the free variables in q  and q  such that qi holds in   ai under   i e  
  ai       qi   for i          then  given an action  with parameters substitution  and an abox
a  we have
 
do  t  a     
apply  t  a  e    
e in 

where for an effect specification e    q       q    q
apply  t  a  e   

 

 

a    we have
a  

ans  q      a   ans   q   q    a 

   

 eq t  a  

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

instead  we define do norm    as
do norm  t  a   

 

 

apply norm  t  a  e    

e in 

where  for an effect specification e    q       q    q
apply norm  t  a  e   

a    we have
 

 

a  

 eq t  a  

ans  q      a e q    ans   q   q    a 

notice that the only difference between do   and do norm    is that in the latter we use only a e q
instead of a to compute the answers to the cqs q     
the following lemma shows that the applications of do   and of do norm    give rise to logically
equivalent aboxes 
lemma    do t  a    t alph k  do norm  t  a    
proof  in order to prove the claim  it is enough to show that for each concept role assertion    do norm  t  a    whose concept role name belongs to alph k   we have that
 t  do t  a            and for each concept role assertion    do t  a    whose concept role name belongs to alph k   we have that  t  do norm  t  a            we actually prove
a slightly stronger result 
    for each abox assertion    apply norm  t  a  e     we have that  t  apply t  a  e       
   
    for each abox assertion    apply t  a  e     we have that  t  apply norm  t  a  e       
   
for      by monotonicity of q    and the fact that a e q  a  we have that
 
 
a  
is contained in
a   
 ans  q      a e q    ans   q   q    a  

 ans  q      a   ans   q   q    a  

hence the claim follows 
for      consider an abox assertion   apply t  a  e     by definition of apply    we know
that there exists an effect e    q       q    q
a  and an assignment  to the free variables
  
 
of q
 which include also the free variables of q  q   such that    ans  q        a    
 
ans   q  q      a   and   a    let  x            xn   be all free variables in q      and
    x   t            xn  tn      for each variable xi   let n  xi   be the  unique  concept atom
in q     in which xi occurs  similar considerations hold when xi occurs in a role atom   then 
either n  ti    a e q   or for some t i   n  t i    a e q and  ti   t i    eq t  a   in the former
case  let t  i denote ti   while in the latter case let t  i denote t i   then  consider the substitution
      x   t              xn  t  n      by construction  we have that     ans  q        a e q    and since
  ans   q    q      a   and  t  i   ti    eq t  a  for each i              n   we also have that
    ans  q        a e q      ans   q    q      a   since
   a   
   

fid escription l ogic k nowledge and action bases

  and    are identical modulo eq t  a  and
 eq t  a   apply norm  t  a  e    
we can infer that  t  apply norm  t  a  e          hence the claim holds 
by combining lemma   and lemma     we get that do   on k and do norm    on k behave
equivalently  when starting from equivalent aboxes 
lemma    if a  t alph k  a  then do t  a      t alph k  do norm  t  a      
proof  the claim is a direct consequence of lemma    lemma     the equivalence between a  and
a    and the observation that logical equivalence is transitive 
given a kab k and its normalized version k  we call the transition system generated in the
same way as k   but using do norm    on k instead of do   on k  the normalized transition system
generated by k  and denote it with k norm  
lemma    given a kab k  the transition systems k and k norm are bisimilar 
proof  let k    u  t    s    abox     and k norm    u  t  norm   s    abox norm   norm   
we define the relation b    norm as follows   s    s     b iff abox  s    t alph k 
abox norm  s    and show that b is a bisimulation  to do so  we prove that b is closed under the
definition of bisimulation itself  indeed  if  s    s     b  then 
 abox  s    t alph k  abox  s    by definition 
 if s   s   then there exists an action  and a substitution  such that s    
do  t  abox  s        notice that abox  s      s    and s   is consistent w r t  t   now let
us consider s     do norm  t  abox  s        since abox  s    t alph k  abox  s     then
by lemma     we have s   t alph k  s     therefore  s   is consistent w r t  t   and hence
s  norm s     and  s     s      b 
 similarly  if s  norm s   then there exists an action  and a substitution  such that
s     do norm  t  abox  s       and s   is consistent w r t  t   now let us consider s    
do  t  abox  s        since s  t alph k  s    then by by lemma     we have s   t alph k 
s   therefore  s   is consistent w r t  t   and hence s   s     and  considering that equivalence
enjoys symmetry  we have  s     s      b 
this proves the claim 
the direct consequence of the above lemma is that  by considering the bismulation invariance
theorem    we can faithfully check la formulas over k norm instead of k  
    positive dominant
our next step is to show that for a weakly acyclic kab k  the normalized transition system k norm
is finite  we do so by considering another transition system  which is behaviorally unrelated to
k norm   and hence to k   but whose active domain bounds the active domain of k norm   we
obtain such a transition system essentially by ignoring all negative information and equalities  this
allows us to refer back to the literature on data exchange to show boundedness  we call such a
transition system positive dominant 
given a normalized kab k    t  a         we define the positive dominant of k as the kab
 e q

k       a            true         
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

the only action    is without parameters and its effect specification is constituted by copyall and
by one effect of the form
 e q
 qi    
a i
for each effect  qi      qi   q
a i in every action of   observe that the parameters of the
i
actions in  become simply free variables in     
notice that    is applicable at every step because the process trivially always allows it  the
resulting state is always consistent  since k  has an empty tbox  moreover  no equality assertion
is ever generated  the transition system k  is constituted by a single run  which incrementally
accumulates all the facts that can be derived by the iterated application of    over such increasing
abox  this behavior closely resembles the chase of tuple generating dependencies  tgds  in data
exchange  where an application of    corresponds to a parallel chase step  deutsch  nash   
remmel        
from a technical point of view  notice that k  is already in normalized form  i e   k    k    
and that do   and do norm    are identical since neither equality nor negation are considered  hence
k    k   norm  
the next lemma shows that k  preserves weak acyclicity of k 
lemma    if k is weakly acyclic then also its positive dominant k  is weakly acyclic 
proof  the claim follows from the fact that  by construction  the dependency graph g   of k  is
equal to g  indeed  both qi   and its connection with ai are preserved by k    hence  we get the
claim 
next we show that if k  is weakly acyclic the active domain of the aboxes in its transition
system k  are polynomially bounded by the active domain of the initial abox 
lemma    if k  is weakly acyclic  then there exists a polynomial p   such that
 e q

 adom k       p  adom a      
proof  we observe that there exists a strict connection between the execution of k  and the chase
of a set of tgds in data exchange  therefore  the proof closely resembles the one by fagin et al 
       thm        where it is shown that for weakly acyclic tgds  every chase sequence is bounded 
let k     u      a   e q   abox      let g      v  e  be the dependency graph of k    and
let n    adom a   e q     for every node p  v   we consider an incoming path to be any  finite
or infinite  path ending in p  let rank  p  be the maximum number of special edges on any such
incoming path  since k  is weakly acyclic by hypothesis  g   does not contain cycles going through
special edges  and therefore rank  p  is finite  let r be the maximum among rank  pi   over all
nodes  we observe that r   v    indeed no path can lead to the same node twice using special
edges  otherwise g   would contain a cycle going through special edges  thus breaking the weak
acyclicity hypothesis  next we observe that we can partition the nodes in v according to their rank 
obtaining a set of sets  v    v            vr    where vi is the set of all nodes with rank i 
let us now consider a state a obtained from a   e q by applying the only action    contained
in k  an arbitrary number of times  we now prove  by induction on i  the following claim  for
every i there exists a polynomial pi such that the total number of distinct values c that occur in a at
positions in vi is at most pi  n  
   

fid escription l ogic k nowledge and action bases

 base case  consider p  v    by definition  p has no incoming path containing special edges 
therefore  no new values are stored in p along the run a   e q      a  indeed p can just store
values that are part of the initial abox a   e q   this holds for all nodes in v  and hence we can fix
p   n    n 
 inductive step  consider p  vi   with i              r   the first kind of values that may be stored
inside p are those values that were stored inside p itself in a   e q   the number of such values is at
most n  in addition  a value may be stored in p for two reasons  either it is copied from some other
position p   vj with i    j  or it is generated as a possibly new function term  built when applying
effects that contain a function in their head 
we first determine the number of fresh individuals that can be generated from function terms 
the possibility of generating and storing a new value in p as a result of an action is reflected by
the presence of special edges  by definition  any special edge entering p must start from a node
 
p   v       vi    by
p induction hypothesis  the number of distinct values that can exist in p
is bounded by h n    j       i   pj  n   let ba be the maximum number of special edges that
enter a position  over all positions in the tbox  ba bounds the arity taken by each function term
contained in   then for every choice of ba values in v       vi   one for each special edge that
can enter a position   the number of new values generated at position p is bounded by tf  h n ba  
where tf is the total number of facts contained in all effects of      note that this number does not
depend on the data in a   e q   by considering all positions in vi   the total number of values that can
be generated is then bounded by f n     vi    tf  h n ba   clearly  f   is a polynomial  because
tf and ba are determined by     
we count next the number of distinct values that can be copied to positions of vi from positions
of vj   with j    i  a copy is represented in the graph as a normal edge going from a node in vj
to a node in vi   with j    i  we observe first that such normal edges can start only from nodes in
v    vi    that is  they cannot start from nodes in vj with j   i  we prove this by contradiction 
assume that there exists p   p  e  such that p  vi and p   vj with j   i  in this case  the
rank of p would be j   i  which contradicts the fact that p  vi   as a consequence  the number
of distinct values that can be copied to positions in vi is bounded by the total number of values in
v       vi    which corresponds to h n  from our previous consideration 
putting it all together  we define pi  n    n   f n    h n   since pi    is a polynomial  the
claim is proven 
notice that  in the above claim  i is bounded by r  which is a constant  hence  there exists a
fixed polynomial p   such that the number of distinct values that can exist in every state s  
is bounded by p n   k  is inflationary  because when    is applied it copies all concept and role
assertions from the current to the next state  since k  contains only a single run  p n  is a bound
for adom k    as well 
the following lemma shows the key feature of the positive dominant 
lemma    adom k    adom k    
 e q

proof  let k    t  a        and k       a            true         
we first observe that  for every abox a in k   adom a    adom a e q   by definition of k
 this is the role of the special concept dummy  
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

we show by induction on the construction of k  u  t      a    abox       and k   
 e q

 u        a    abox        that for each state a     we have that there exists a state a    
such that a   e q  a   
 e q
the base case holds for the initial states a  and a  of the two transition systems by definition 
for the inductive case  we have to show that  given a     and a     with a   e q  a    for
each a      with a    a     the unique state a      with a    a   is such that a    a     to
show this  note that a    a   if there exists an action  of k and a substitution  for the parameters
of  such that a     do norm  t  a       similarly  taking into account that    has no parameters
and is always executable in k    we have that a     do t  a           do norm  t  a          by
construction of k    for each effect e    of the form
e     q       q    q

a e   

there is an effect e      of the form
e     q     

 e q

a e   

where a e   e q is obtained from a e  by removing all equality assertions  by induction hypothesis 
we have that a   e q  a    by observing that ans   q         a   e q      ans   q    q      a    
 e q
ans   q         a     we then obtain that a e 
 a e    where a e    apply norm  t  a    e      and
a e    apply   a    e       hence  we get the claim that a    e q  a    
now since for an abox a of k the active domain adom a  of a and adom a e q   are identical by construction  and since adom k   and adom k    are simply the union of the active
domains of all generated aboxes  we get the claim 
    putting it all together
if a kab k is weakly acyclic  then  by lemma    its normalized form k is weakly acyclic as well
and  by lemma     so is its positive dominant k    hence  by lemma     the size of the active
domain adom k    of the transition system k  of k  is polynomially related to the size of its
initial abox 
now  by lemma    this implies that also the size of the active domain adom k norm   of the
transition system k of k is polynomially related to the size of its initial abox  hence  the number
of possible states of k is finite  and in fact at most exponential in the size of the initial abox  it
follows that checking la formulae over k can be done in e xp t ime w r t  the size of k 
finally  by lemma     k and k are bisimilar  and by the bisimulation invariance theorem   
k and k satisfy exactly the same la formulae  hence  to check a la formula on k it
is sufficient to check it over k   which can be done in e xp t ime  this concludes the proof of
theorem   

   related work
we provide now a detailed review of work that is related to the framework and the results presented
in the previous sections 
   

fid escription l ogic k nowledge and action bases

    combining description logics and temporal logics
our work is deeply related to the research that studies combinations of description logics and temporal logics  indeed  actions progress knowledge over time and  although temporal logics do not
mention actions  we can easily used them for describing progression mechanisms  including transition systems  see  e g   clarke et al         calvanese  de giacomo    vardi        
such research has mostly explored the combination of standard description logics with standard
temporal logics at the level of models  which is certainly the most natural form of combination from
a logical point of view  technically  this form of combination gives rise to a combined logic with
a two dimensional semantics  where one dimension is for time and the other for the dl domain
 schild        wolter   zakharyaschev      b      a  gabbay et al          unfortunately  from
a computational point of view  this form of combination suffers from a key undecidability result 
which makes it too fragile for many practical purposes  the possibility of specifying that roles
preserve their extension over time  the so called rigid roles  causes undecidability    referring
to the domain of interest in example    this would result  for example  in the undecidability of
theories that specify that each instance of character livesin the same city forever  moreover  this
undecidability result already holds for concept satisfiability w r t  a fixed tbox  i e   where the same
tbox axioms must hold at all time points   without aboxes  and with only a single rigid role  wolter
  zakharyaschev      b      a  gabbay et al          that is  it holds for a reasoning service that
is much simpler than conjunctive query answering  calvanese  de giacomo    lenzerini        
even with a fixed tbox and no data  no abox assertions  hence no individual terms  and for one of
the simplest kinds of temporal formulae  namely forever something is true  safety   clarke et al  
      
decidability can be regained by   i  dropping tboxes altogether  but the decision problem is
still hard for non elementary time  gabbay et al           ii  allowing temporal operators only on
concepts  schild        artale   franconi              gutierrez basulto  jung    lutz       
jamroga         and in this case the complexity depends crucially on the description logic   iii  allowing temporal operators only on tbox and abox assertions  lutz  wolter    zakharyaschev 
      baader et al          in fact cases  ii  and  iii  can be mixed  baader   laux        wolter
  zakharyaschev        
allowing for temporal operators over assertions only  case  iii  above   is tightly related to the
functional approach adopted in this paper  the fact that we admit temporal operators only in front of
assertions allows us to consider temporal models whose time points are actually sets of models of
description logic assertions  hence it keeps the temporal component distinct from the description
logic one  exactly as we do here  in particular  the results by baader et al         can be directly
compared with ours  apart from the obvious differences in the formalism used  one key point to get
decidability there is that the individual terms mentioned in the abox assertions are fixed a priori  it
is possible that  by adapting the techniques presented here  those results could be extended to allow
functions for denoting terms  hence allowing for adding fresh individual terms during the temporal
evolution 

   to lose decidability  it suffices to be able to specify verify the persistence of binary predicates roles  which allows
one to build an infinite grid and hence to encode any turing machine computation  robinson        van emde boas 
      

   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

    combining description logics and actions
somehow hampered by the undecidability results mentioned at the beginning of the section  also
combinations of description logics and action theories have been studied in the years  in particular 
liu  lutz  milicic  and wolter      b      a  study combinations of description logics and action
theories at the level of models  but only w r t  the two classical problems in reasoning about actions 
namely projection and executability  both of these problems require to explicitly give a sequence of
actions and then check a property of the resulting final state  projection   or check the executability
of the sequence of actions  each of which comes with a certain precondition  reiter         more
sophisticated temporal properties  in particular  forever something is true mentioned above  would
lead to undecidability  by the way  notice that such undecidability result also deeply questions from
the computational point of view the possibility of adding  sound and complete  automated reasoning
capabilities to proposals such as owl s  semantic markup for web services   martin  paolucci 
mcilraith  burstein  mcdermott  mcguinness  parsia  payne  sabou  solanki  srinivasan    sycara 
      
possibly the first proposal based implicitly on the functional view of the kb was the pioneering
work by de giacomo  iocchi  nardi  and rosati         which adopts an epistemic description logic
 based on certain answers  combined with an action formalism to describe routines of a mobile
robot  again  one important point there is that individual terms are bounded and fixed a priori 
the functional view approach was first spelled out by calvanese  de giacomo  lenzerini  and
rosati         and by calvanese et al          in that work  only projection and executability are
studied  however there is a distinction between the kb in the states and the actions  there specified
as updates   so that the framework gives rise to a single transition system whose states are labeled
by kbs  in fact the tbox is fixed while the abox changes from state to state   however  again 
the individual terms considered are fixed a priori and hence the resulting transition system is finite 
so  although not studied in that work  sophisticated forms of temporal properties as those proposed
here are readily verifiable in that setting  interestingly  apart from the kbs and action  in that work
also golog like programs are considered  these are programs whose atomic actions are defined
by the action formalism  and are combined using  usual and less usual  programming constructs 
such as sequence  while loop  if then else  and nondeterministic pick of a value  levesque  reiter 
lesperance  lin    scherl        de giacomo  lesperance    levesque         an important
characteristic of these programs is that they have a finite number of control states  notice that the
memory storage of these programs is kept in the action theory  or the kb in our case   although out
of the scope of this paper  this finiteness allows for easily extending our results to such program as
well 
an interesting alternative way to combine description logics and reasoning about actions is the
one reported by gu and soutchanski         there  a description logics kb  is used as a special
fol theory describing the initial situation in a situation calculus basic action theory  reiter        
notice that as a result  tbox assertions do not act as state constraints  lin   reiter         which
would lead to undecidability as discussed above  wolter   zakharyaschev      b      a  gabbay
et al          in fact they essentially do not persist in any way through actions 

   they actually mainly focus on concepts only but in a description logic that includes the universal role  which allows
one to express tbox assertions as concepts  baader et al         

   

fid escription l ogic k nowledge and action bases

    description logics update
observe that effects of an action in our setting can be seen as a basic form of update of the previous
state  katsuno   mendelzon         although our mechanism sidesteps the semantic and computational difficulties of description logic kb update  liu et al       b  de giacomo  lenzerini  poggi 
  rosati        calvanese  kharlamov  nutt    zheleznyakov        lenzerini   savo        by
simply rejecting the execution of actions that would lead to an inconsistent state  adopting proper
forms of update in our setting is an interesting issue for future research 
    artifacts and data aware processes
our work is also closely related to research in verification of artifact centric business processes
 nigam   caswell        bhattacharya et al          artifact centric approaches model business
processes by giving equal importance to the control flow perspective and the data of interest  an
artifact is typically represented as a tuple of a schema  which models the artifact type  together
with a set of actions services that specify how the information maintained in the artifact can be
manipulated over time  each action is usually represented in terms of pre  and post conditions
that are respectively used to determine when the action is eligible for execution  and to relate the
current artifact state with the successor state obtained after the action execution  pre  and postconditions are modeled as first order formulae  and post conditions employ existentially quantified
variables to account for external inputs from the environment  differently from kabs  most of
the approaches targeting artifact centric processes assume complete information about data  using
a relational database to maintain the artifacts information  as in this paper  the aim of such works
is to verify whether a relational artifact centric process meets some temporal dynamic property 
formalized using first order variants of branching or linear temporal logics 
in the work by deutsch et al          the infinite domain of the artifacts database is equipped
with a dense linear order  which can be mentioned in pre conditions  post conditions  and properties 
runs can receive unbounded external input from an infinite domain  decidability of verification is
achieved by avoiding branching time properties  and by restricting the formulae used to specify
pre   post conditions and properties  in particular  the approach refers to read only and read write
database relations differently  querying the latter only by checking whether they contain a given tuple of constants  the authors show that this restriction is tight  and that integrity constraints cannot
be added to the framework  since even a single functional dependency leads to undecidability of
verification  damaggio et al         extend this approach by disallowing read write relations  but
this allows the extension of the decidability result to integrity constraints expressed as embedded
dependencies with terminating chase  and to any decidable arithmetic  this is a major difference
with our approach  where all concepts of the kab are considered as read write relations  and can
be arbitrarily queried to determine the progression of the system  differently from these works 
belardinelli et al         consider a first order variant of ctl with no quantification across states
as verification formalism  the framework supports the incorporation of new values from the external environment as parameters of the actions  the corresponding execution semantics considers
all the possible actual values  thus leading to an infinite state transition systems  as for decidability of verification  the authors show that  under the assumption that each state of the system
 constituted by the union of artifacts relational instances  has a bounded active domain  it is possible to construct a faithful abstract transition system which  differently from the original one  has
a finite number of states  belardinelli  lomuscio  and patrizi        improve the results by belar   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

dinelli et al         by introducing a semantic property of uniformity which  roughly speaking 
says that the transition system representing the execution of the process under study is not able to
distinguish among states that have the same constants and the same patterns of data  under the assumptions of uniformity and state boundedness  decidability of verification is achieved for a richer
logic  namely ctl with quantification across states  interpreted under the active domain semantics 
the notion of state boundedness has also been adopted by the independently developed framework
of bagheri hariri  calvanese  de giacomo  deutsch  and montali               where first order
variants of  calculus  similar to the one considered here  are considered  there  beside differences
in the way data and external information are modeled  sufficient syntactic conditions that guarantee state boundedness are proposed  all these works are developed within the relational database
setting  and do not extend trivially to systems where actions change dl knowledge bases 
the connection between data  artifact centric business processes and data exchange that we exploit in this paper was first established by cangialosi et al          and by de giacomo  de masellis 
and rosati         there the transition relation itself is described in terms of tgds  which map the
current state  represented as a relational database instance  to the next one  null values are used to
model the incorporation of new  unknown data into the system  the process evolution is essentially
a form of chase  under suitable weak acyclicity conditions this chase terminates  guaranteeing  in
turn  that the system is finite state  decidability is then shown for a first order  calculus without
first order quantification across states  this approach was extended by bagheri hariri et al         
where tgds were replaced by actions and a rule based process that follow the same structure of
the kab action component  in this revised framework  values imported from the external environment are represented by uninterpreted function terms  which play the same role as nulls in the
work by cangialosi et al          and by de giacomo et al          since bagheri hariri et al 
        cangialosi et al          and de giacomo et al         all rely on a purely relational setting  this choice leads to an ad hoc interpretation of equality  where each null value function term
is considered only equal to itself  differently from these works  here we allow for sophisticated
schema constraints  i e   the tbox itself  and provide at the same time a more fine grained treatment
of equality  where individuals can be inferred to be equal due to the application of such schema
constraints and or the execution of some action  this treatment of equality differentiates this work
also from the one of bagheri hariri  calvanese  de giacomo  and de masellis         which introduces a preliminary version of the framework here presented  where una is assumed and equality
is not considered  more specifically  bagheri hariri et al         propose semantic artifacts as a
means to represent artifacts and corresponding processes at a higher level of abstraction than relational artifacts  representing the artifact data with a semantically rich knowledge base operating
with incomplete information  kabs constitute a more general framework  which can be seamlessly
customized to account for semantic artifacts  a major difference with the work by bagheri hariri
et al         is also constituted by the verification formalism  in particular  both works focus on a
form of  calculus where ecqs are used to query the states of the system  but bagheri hariri et al 
       do not support quantification across states  as done here 
calvanese et al         investigate a framework for data centric processes that mixes the approach proposed by bagheri hariri et al         for relational artifacts with the notion of knowledge
bases as used here  in particular  semantically governed data aware processes are introduced as a
mechanism to model a dynamic system working over a relational database  providing at the same
time a conceptual representation of the manipulated data in terms of a dl lite knowledge base  by
relying on ontology based data access  calvanese et al          declarative mappings are used to
   

fid escription l ogic k nowledge and action bases

connect the knowledge base with the underlying relational database  differently from kabs  the
system evolves at the relational layer  and the knowledge base is used to understand and ultimately
govern such an execution at a higher level of abstraction 
we observe that the results presented here fully subsume those by bagheri hariri et al         
where the underlying description logic is owl   ql  on the one hand  if we remove the possibility
of asserting functionality of roles in the knowledge component  and of equating individuals as a result of an action in the action component  we precisely obtain the setting presented by bagheri hariri
et al          on the other hand  for both frameworks the established complexity upper bounds are
the same 

   conclusions
in this paper we have studied verification of knowledge and action bases  which are dynamic systems
constituted by a knowledge base  expressed in description logics  and by an action specification that
changes the knowledge base over time  we have obtained an interesting decidability result by
relying on the notion of weak acyclicity  based on a connection with the theory of chase of tgds in
relational databases 
in our work  we have used the original notion of weak acyclicity  however  it is easy to adopt
more advanced forms of acyclicity  since our results depend only on the ability of finding a finite
bound on the number of distinct function terms that are generated  when applying the chase   while
the majority of approaches that adopt forms of weak acyclicity focus on databases  marnette  
geerts        meier  schmidt  wei    lausen         cuenca grau  horrocks  krotzsch  kupke 
magka  motik  and wang        investigate sophisticated forms of acyclicity in the context of
knowledge bases without una  their results can thus be seamlessly applied to kabs  interestingly 
to manage the impact of equalities in a setting without una  they resort to the singularization technique presented by marnette         which closely resembles the normalization of kabs introduced
in section   
weak acyclicity allows us to gain decidability by bounding the number of distinct function
terms that occur in the transition system  an alternative approach to gain decidability is to bound the
number of distinct terms occurring in the abox assertions of a state  variants of this notion of state
boundedness have been proposed recently in other contexts  belardinelli et al         de giacomo 
lesperance    patrizi        bagheri hariri et al          it is of great interest to explore such an
approach in the setting presented here of actions acting on a description logic knowledge base 
we observe that our decidability result  as well as the ones commented here and in section    
comes with an algorithm for verification that is exponential in the size of the initial abox  this precludes a direct application of these techniques to large scale systems  without a careful analysis of
how these can be modularized in small units to be verified  almost  separately  this is an important
direction for further investigation 
acknowledgments
this research has been partially supported by the eu under the ict collaborative project acsi
 artifact centric service interoperation   grant agreement n  fp          and under the large scale
integrating project  ip  optique  scalable end user access to big data   grant agreement n  fp        
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

references
artale  a   calvanese  d   kontchakov  r     zakharyaschev  m          the dl lite family and
relations  j  of artificial intelligence research          
artale  a     franconi  e          a temporal description logic for reasoning about actions and
plans  j  of artificial intelligence research            
artale  a     franconi  e          temporal description logics  in gabbay  d   fisher  m     vila  l 
 eds    handbook of temporal reasoning in artificial intelligence  foundations of artificial
intelligence  elsevier 
baader  f   calvanese  d   mcguinness  d   nardi  d     patel schneider  p  f   eds            the
description logic handbook  theory  implementation and applications  cambridge university press 
baader  f   ghilardi  s     lutz  c          ltl over description logic axioms  acm trans  on
computational logic                   
baader  f     laux  a          terminological logics with modal operators  in proc  of the   th
int  joint conf  on artificial intelligence  ijcai     pp         
bagheri hariri  b   calvanese  d   de giacomo  g     de masellis  r          verification of
conjunctive query based semantic artifacts  in proc  of the   th int  workshop on description logic  dl        vol      of ceur electronic workshop proceedings  http 
  ceur ws org  
bagheri hariri  b   calvanese  d   de giacomo  g   de masellis  r     felli  p          foundations
of relational artifacts verification  in proc  of the  th int  conference on business process
management  bpm        vol       of lecture notes in computer science  pp         
springer 
bagheri hariri  b   calvanese  d   de giacomo  g   deutsch  a     montali  m          verification of relational data centric dynamic systems with external services  corr technical report arxiv            arxiv org e print archive  available at http   arxiv org abs 
          
bagheri hariri  b   calvanese  d   de giacomo  g   deutsch  a     montali  m          verification
of relational data centric dynamic systems with external services  in proc  of the   nd acm
sigact sigmod sigart symp  on principles of database systems  pods       
bao  j   et al          owl   web ontology language document overview  second edition   w c
recommendation  world wide web consortium  available at http   www w  org 
tr owl  overview  
belardinelli  f   lomuscio  a     patrizi  f          verification of deployed artifact systems via data
abstraction  in proc  of the  th int  joint conf  on service oriented computing  icsoc       
vol       of lecture notes in computer science  pp          springer 
belardinelli  f   lomuscio  a     patrizi  f          an abstraction technique for the verification
of artifact centric systems  in proc  of the   th int  conf  on the principles of knowledge
representation and reasoning  kr        pp         
berardi  d   calvanese  d     de giacomo  g          reasoning on uml class diagrams  artificial
intelligence                 
   

fid escription l ogic k nowledge and action bases

bhattacharya  k   gerede  c   hull  r   liu  r     su  j          towards formal analysis of artifactcentric business process models  in proc  of the  th int  conference on business process
management  bpm        vol       of lecture notes in computer science  pp         
springer 
burkart  o   caucal  d   moller  f     steffen  b          verification of infinite structures   in
handbook of process algebra  elsevier science 
calvanese  d   de giacomo  g   lembo  d   lenzerini  m   poggi  a   rodrguez muro  m    
rosati  r          ontologies and databases  the dl lite approach  in tessaris  s     franconi  e   eds    reasoning web  semantic technologies for informations systems   th int 
summer school tutorial lectures  rw        vol       of lecture notes in computer science  pp          springer 
calvanese  d   de giacomo  g   lembo  d   lenzerini  m     rosati  r       a   eql lite  effective first order query processing in description logics  in proc  of the   th int  joint conf  on
artificial intelligence  ijcai        pp         
calvanese  d   de giacomo  g   lembo  d   lenzerini  m     rosati  r       b   tractable reasoning and efficient query answering in description logics  the dl lite family  j  of automated
reasoning                
calvanese  d   de giacomo  g   lembo  d   lenzerini  m     rosati  r          data complexity
of query answering in description logics  artificial intelligence              
calvanese  d   de giacomo  g   lembo  d   montali  m     santoso  a          ontology based
governance of data aware processes  in proc  of the  th int  conf  on web reasoning and rule
systems  rr        vol       of lecture notes in computer science  pp        springer 
calvanese  d   de giacomo  g     lenzerini  m          conjunctive query containment and answering under description logics constraints  acm trans  on computational logic       
          
calvanese  d   de giacomo  g   lenzerini  m     rosati  r          actions and programs over description logic ontologies  in proc  of the   th int  workshop on description logic  dl       
vol      of ceur electronic workshop proceedings  http   ceur ws org   pp    
   
calvanese  d   de giacomo  g   lenzerini  m     rosati  r          actions and programs over
description logic knowledge bases  a functional approach  in lakemeyer  g     mcilraith 
s  a   eds    knowing  reasoning  and acting  essays in honour of hector levesque  college
publications 
calvanese  d   de giacomo  g     montali  m          foundations of data aware process analysis 
a database theory perspective  in proc  of the   nd acm sigact sigmod sigart symp 
on principles of database systems  pods       
calvanese  d   de giacomo  g     vardi  m  y          reasoning about actions and planning in
ltl action theories  in proc  of the  th int  conf  on the principles of knowledge representation and reasoning  kr        pp         
calvanese  d   kharlamov  e   nutt  w     zheleznyakov  d          updating aboxes in dl lite 
in proc  of the  th alberto mendelzon int  workshop on foundations of data management
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

 amw        vol      of ceur electronic workshop proceedings  http   ceur ws 
org   pp          
cangialosi  p   de giacomo  g   de masellis  r     rosati  r          conjunctive artifact centric
services  in proc  of the  th int  joint conf  on service oriented computing  icsoc       
vol       of lecture notes in computer science  pp          springer 
clarke  e  m   grumberg  o     peled  d  a          model checking  the mit press  cambridge 
ma  usa 
cohn  d     hull  r          business artifacts  a data centric approach to modeling business
operations and processes  bull  of the ieee computer society technical committee on data
engineering            
cuenca grau  b   horrocks  i   krotzsch  m   kupke  c   magka  d   motik  b     wang  z         
acyclicity conditions and their application to query answering in description logics  in
proc  of the   th int  conf  on the principles of knowledge representation and reasoning
 kr        pp         
damaggio  e   deutsch  a     vianu  v          artifact systems with data dependencies and
arithmetic  in proc  of the   th int  conf  on database theory  icdt        pp       
de giacomo  g   de masellis  r     rosati  r          verification of conjunctive artifact centric
services  int  j  of cooperative information systems                
de giacomo  g   iocchi  l   nardi  d     rosati  r          a theory and implementation of
cognitive mobile robots  j  of logic and computation               
de giacomo  g   lenzerini  m   poggi  a     rosati  r          on instance level update and erasure in description logic ontologies  j  of logic and computation  special issue on ontology
dynamics                
de giacomo  g   lesperance  y     levesque  h  j          congolog  a concurrent programming
language based on the situation calculus  artificial intelligence                  
de giacomo  g   lesperance  y     patrizi  f          bounded situation calculus action theories
and decidable verification  in proc  of the   th int  conf  on the principles of knowledge
representation and reasoning  kr        pp         
deutsch  a   hull  r   patrizi  f     vianu  v          automatic verification of data centric business
processes  in proc  of the   th int  conf  on database theory  icdt        pp         
deutsch  a   nash  a     remmel  j  b          the chase revisited  in proc  of the   th acm
sigact sigmod sigart symp  on principles of database systems  pods        pp     
    
fagin  r   kolaitis  p  g   miller  r  j     popa  l          data exchange  semantics and query
answering  theoretical computer science                
gabbay  d   kurusz  a   wolter  f     zakharyaschev  m          many dimensional modal logics 
theory and applications  elsevier science publishers 
gu  y     soutchanski  m          a description logic based situation calculus  ann  of mathematics
and artificial intelligence               
   

fid escription l ogic k nowledge and action bases

gutierrez basulto  v   jung  j  c     lutz  c          complexity of branching temporal description
logics  in proc  of the   th eur  conf  on artificial intelligence  ecai        pp         
jamroga  w          concepts  agents  and coalitions in alternating time  in proc  of the   th eur 
conf  on artificial intelligence  ecai        pp         
katsuno  h     mendelzon  a          on the difference between updating a knowledge base and
revising it  in proc  of the  nd int  conf  on the principles of knowledge representation and
reasoning  kr     pp         
kowalski  r  a     sadri  f          abductive logic programming agents with destructive
databases  ann  of mathematics and artificial intelligence                 
lenzerini  m     savo  d  f          updating inconsistent description logic knowledge bases  in
proc  of the   th eur  conf  on artificial intelligence  ecai        pp         
levesque  h  j   reiter  r   lesperance  y   lin  f     scherl  r          golog  a logic programming language for dynamic domains  j  of logic programming           
levesque  h  j          foundations of a functional approach to knowledge representation  artificial
intelligence             
limonad  l   de leenheer  p   linehan  m   hull  r     vaculin  r          ontology of dynamic
entities  in proc  of the   st int  conf  on conceptual modeling  er       
lin  f     reiter  r          state constraints revisited  j  of logic programming               
liu  h   lutz  c   milicic  m     wolter  f       a   reasoning about actions using description
logics with general tboxes  in proc  of the   th eur  conference on logics in artificial
intelligence  jelia        vol       of lecture notes in computer science  springer 
liu  h   lutz  c   milicic  m     wolter  f       b   updating description logic aboxes  in proc  of
the   th int  conf  on the principles of knowledge representation and reasoning  kr       
pp       
lutz  c   wolter  f     zakharyaschev  m          temporal description logics  a survey  in proc 
of the   th int  symp  on temporal representation and reasoning  time        pp      
marnette  b          generalized schema mappings  from termination to tractability  in proc 
of the   th acm sigact sigmod sigart symp  on principles of database systems
 pods        pp       
marnette  b     geerts  f          static analysis of schema mappings ensuring oblivious termination  in proc  of the   th int  conf  on database theory  icdt        pp         
martin  d   paolucci  m   mcilraith  s   burstein  m   mcdermott  d   mcguinness  d   parsia  b  
payne  t   sabou  m   solanki  srinivasan  n     sycara  k          bringing semantics to
web services  the owl s approach  in proc  of the  st int  workshop on semantic web
services and web process composition  swswpc       
meier  m   schmidt  m   wei  f     lausen  g          semantic query optimization in the presence
of types  in          ed    proc  of the   th acm sigact sigmod sigart symp  on
principles of database systems  pods       
meyer  a   smirnov  s     weske  m          data in business processes  emisa forum        
    
   

fibagheri h ariri   c alvanese   d e g iacomo   d e m asellis   f elli     m ontali

milner  r          an algebraic definition of simulation between programs  in proc  of the  nd int 
joint conf  on artificial intelligence  ijcai     pp         
motik  b   cuenca grau  b   horrocks  i   wu  z   fokoue  a     lutz  c          owl   web ontology language profiles  second edition   w c recommendation  world wide web consortium  available at http   www w  org tr owl  profiles  
nigam  a     caswell  n  s          business artifacts  an approach to operational specification 
ibm systems journal                
park  d  m  r          finiteness is mu ineffable  theoretical computer science               
poggi  a   lembo  d   calvanese  d   de giacomo  g   lenzerini  m     rosati  r          linking
data to ontologies  j  on data semantics  x         
reiter  r          knowledge in action  logical foundations for specifying and implementing
dynamical systems  the mit press 
robinson  r          undecidability and nonperiodicity of tilings on the plane  inventiones math  
           
rosati  r     franconi  e          generalized ontology based production systems  in proc  of the
  th int  conf  on the principles of knowledge representation and reasoning  kr        pp 
        aaai press 
schild  k          combining terminological logics with tense logic  in proc  of the  th portuguese
conf  on artificial intelligence  epia     vol      of lecture notes in computer science 
pp          springer 
stirling  c          modal and temporal properties of processes  springer 
van ditmarsch  h   van der hoek  w     kooi  b          dynamic epistemic logic  springer 
van emde boas  p          the convenience of tilings  in sorbi  a   ed    complexity  logic  and
recursion theory  vol      of lecture notes in pure and applied mathematics  pp         
marcel dekker inc 
vianu  v          automatic verification of database driven systems  a new frontier  in proc  of the
  th int  conf  on database theory  icdt        pp      
wolter  f     zakharyaschev  m          satisfiability problem in description logics with modal
operators  in proc  of the  th int  conf  on the principles of knowledge representation and
reasoning  kr     pp         
wolter  f     zakharyaschev  m       a   modal description logics  modalizing roles  fundamenta
informaticae                
wolter  f     zakharyaschev  m       b   temporalizing description logic  in gabbay  d    
de rijke  m   eds    frontiers of combining systems  pp          studies press wiley 

   

fi