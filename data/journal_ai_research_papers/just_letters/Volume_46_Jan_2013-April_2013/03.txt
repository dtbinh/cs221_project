journal of artificial intelligence research                  

submitted        published      

probabilistic planning for continuous dynamic systems
under bounded risk
masahiro ono

ono   appi   keio   ac   jp

keio university
       hiyoshi  kohoku ku
yokohama  kanagawa           japan

brian c  williams

williams   mit  edu

massachusetts institute of technology
   massachusetts avenue
cambridge  ma       usa

lars blackmore

lars   blackmore   spacex   com

spacex
  rocket road
hawthorne  ca       usa

abstract
this paper presents a model based planner called the probabilistic sulu planner or the p sulu
planner  which controls stochastic systems in a goal directed manner within user specified risk
bounds  the objective of the p sulu planner is to allow users to command continuous  stochastic
systems  such as unmanned aerial and space vehicles  in a manner that is both intuitive and safe  to
this end  we first develop a new plan representation called a chance constrained qualitative state
plan  ccqsp   through which users can specify the desired evolution of the plant state as well as
the acceptable level of risk  an example of a ccqsp statement is go to a through b within   
minutes  with less than        probability of failure  we then develop the p sulu planner  which
can tractably solve a ccqsp planning problem  in order to enable ccqsp planning  we develop
the following two capabilities in this paper     risk sensitive planning with risk bounds  and   
goal directed planning in a continuous domain with temporal constraints  the first capability is to
ensures that the probability of failure is bounded  the second capability is essential for the planner
to solve problems with a continuous state space such as vehicle path planning  we demonstrate the
capabilities of the p sulu planner by simulations on two real world scenarios  the path planning
and scheduling of a personal aerial vehicle as well as the space rendezvous of an autonomous cargo
spacecraft 

   introduction
there is an increasing need for risk sensitive optimal planning in uncertain environments  while
guaranteeing an acceptable probability of success  a motivating example for this article is the
boeing concept of a future aerial personal transportation system  pts   as shown in figure    the
pts consists of a fleet of small personal aerial vehicles  pav  that enable the flexible point to point
transportation of individuals and families 
c
    
ai access foundation  all rights reserved 

fio no   w illiams     b lackmore

in order to provide safety  pts should be highly automated  in       in the us  pilot error was
listed as the primary cause of       of fatal general aviation accidents  according to the      joseph
t  nall report  aircraft owners and pilots association air safety foundation         automated
path planning  scheduling  collision avoidance  and traffic management will significantly improve
the safety of pts  as well as its efficiency  the challenges to operating such a system include
adapting to uncertainties in the environment  such as storms and turbulence  while satisfying the
complicated needs of users 
there is a substantial body of work on planning under uncertainty that is relevant  however 
our approach is distinctive in three key respects  first  our planner  the p sulu planner  allows
users to explicitly limit the probability of constraint violation  this capability is particularly important for risk sensitive missions where the impact of failure is significant  second  the planner
is goal directed  by which we mean that it achieves time evolved goals within user specified temporal constraints  third  the planner works in a continuous state space  a continuous state space
representation fits naturally to many real world applications  such as planning for aerial  space  and
underwater vehicles  it is also important for problems with resources 

figure    personal transportation system  pts    courtesy of the boeing company 
figure   shows a sample pts scenario  a passenger of a pav starts in provincetown  ma
and wants to go to bedford within    minutes  the passenger also wants to go through a scenic
area and remain there between   and    minutes during the flight  there is a no fly zone  nfz 
and a storm that must be avoided  however  the storms future location is uncertain  the vehicles
location is uncertain as well  due to control error and exogenous disturbances  thus there is a risk
of penetrating the nfz or the storm  the passengers want to limit such risk to at most        
in order to handle such a planning problem  we introduce a novel planner called the probabilistic
sulu planner  p sulu planner   building upon prior work on the model based plan executive called
sulu  leaute   williams         the p sulu planner provides the following three capabilities  in
order to meet the needs described in the above scenario     goal directed planning in a continuous
domain     near optimal planning  and    risk sensitive planning with risk bounds 
 goal directed planning in a continuous domain the p sulu planner must plan actions with
continuous effects that achieve time evolved goals specified by users  in the case of the pts
scenario in figure    the pav must sequentially achieve two temporally extended goals  called
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

figure    a sample plan for personal aerial vehicle  pav 

episodes  going through the scenic area and then arriving at bedford  there are additional
temporal constraints on the goals that are inherent to the scenario  some temporal constraints
come from physical limitations  such as fuel capacity  and others come from passenger requirements 
 near optimal stochastic planning cost reduction and performance improvement are important issues for any system  in the pts scenario  passengers may want to minimize the trip
time or fuel usage  the p sulu planner finds a near optimal control sequence according to the
user defined objective function  while satisfying given constraints 
 risk sensitive planning with risk bounds real world systems are subject to various uncertainties  such as state estimation error  modeling uncertainty  and exogenous disturbance 
in the case of pavs  the position and velocity of the vehicle estimated by the kalman filter
typically involve gaussian distributed uncertainties  the system model used for planning and
control is not perfect  and the vehicles are subject to unpredictable disturbances such as turbulence  under such uncertainty  the executed result of a plan inevitably deviates from the
original plan and hence involves risk of constraint violation  deterministic plan execution is
particularly susceptible to risk when it is optimized in order to minimize a given cost function 
since the optimal plan typically pushes against one or more constraint boundaries  and hence
leaves no margin for error  for example  the shortest path in the pts scenario shown in figure
  cuts in close to the nfzs and the storm  or more generally  constraint boundaries  then 
a tiny perturbation to the planned path may result in a penetration into the obstacles  such
risk can be reduced by setting a safety margin between the path and the obstacles  at a cost of
longer path length  however  it is often impossible to guarantee zero risk  since there is typically a non zero probability of having a disturbance that is large enough to push the vehicle
out of the feasible region  therefore  passengers of the vehicle must accept some risk  but at
the same time they need to limit it to a certain level  more generally  users of an autonomous
system under uncertainty should be able to specify their bounds on risk  the planner must
guarantee that the system is able to operate within these bounds  such constraints are called
chance constraints 
   

fio no   w illiams     b lackmore

    overview of the planner
this section describes the inputs and outputs of the p sulu planner informally  they are rigorously
defined in section   
      i nputs
initial condition the p sulu planner plans a control sequence starting from the current state 
which is typically estimated from noisy sensor measurements  therefore  the p sulu planner takes
the probability distribution  instead of the point estimate  of the current state as the initial condition 
stochastic plant model in the control community the planning problem is to generate a sequence
of control inputs that actuate a physical system  called the plant  the action model for a plant is
typically a system of real valued equations over control  state and observable variables  the psulu planner takes as an input a linear stochastic plant model  which specifies probabilistic state
transitions in a continuous domain  this is a stochastic extension of the continuous plant model used
by leaute and williams         in this paper we limit our focus to gaussian distributed uncertainty 
chance constrained qualitative state plan  ccqsp  in order to provide users with an intuitive way to command stochastic systems  we develop a new plan representation called a chanceconstrained qualitative state plan  ccqsp   it is an extension of qualitative state plan  qsp   developed and used by leaute and williams         hofmann and williams         and blackmore 
li  and williams         ccqsp specifies a desired evolution of the plant state over time  and is
defined by a set of discrete events  a set of episodes  which impose constraints on the plant state
evolution  a set of temporal constraints between events  and a set of chance constraints that specify
reliability constraints on the success of sets of episodes in the plan 
a ccqsp may be depicted as a directed acyclic graph  as shown in figure    the circles
represent events and squares represent episodes  flexible temporal constraints are represented as a
simple temporal network  stn   dechter  meiri    pearl         which specifies upper and lower
bounds on the duration between two events  shown as the pairs of numbers in parentheses   the
plan in figure   describes the pts scenario depicted in figure    which can be stated informally as 
start from provincetown  reach the scenic region within    time units  and remain
there for between   and    time units  then end the flight in bedford  the probability
of failure of these episodes must be less than     at all times  remain in the safe region
by avoiding the no fly zones and the storm  limit the probability of penetrating such
obstacles to          the entire flight must take at most    time units 
a formal definition of ccqsp is given in section       
objective function the user of the p sulu planner can specify an objective function  e g   a cost
function   we assume that it is a convex function 
      o utput
executable control sequence the p sulu planner plans over a finite horizon  one of the two
outputs of the p sulu planner is an executable control sequence over the horizon that satisfies all
constraints specified by the input ccqsp  in the case of the pts scenario  the outputs are the vehicles actuation inputs  such as acceleration and ladder angle  that result in the nominal paths shown
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

figure    an example of a chance constrained qualitative state plan  ccqsp   a new plan representation to specify the desired evolution of the plant state and the acceptable levels of
risk  in the pts scenario in figure    the passengers of a pav would like to go from
provincetown to bedford  and fly over the scenic region on the way  the safe region
means the entire state space except the obstacles  risk of the episodes must be within the
risk bounds specified by chance constraints 

in figure    in order for the control sequence to be executable  it must be dynamically feasible  for
example  the curvature of the pavs path must not exceed the vehicles maneuverability 
optimal schedule the other output of the p sulu planner is the optimal schedule  a set of execution time steps for events in the input ccqsp that minimizes a given cost function  in the case of
the pts scenario shown in figure    a schedule specifies when to leave the scenic region and when
to arrive at bedford  for example  the p sulu planner finds a schedule that satisfies all the simple
temporal constraints specified by the ccqsp  and minimizes the cost function 
the two outputs  the control sequence and the schedule  must be consistent with each other 
the time evolved goals are achieved on the optimal schedule by applying the control sequence to the
given initial conditions 
    approach
the p sulu planner must solve a very difficult problem of generating an executable control sequence
for a ccqsp  which involves both combinatorial optimization of a discrete schedule and non convex
optimization of a continuous control sequence  our approach in this article is to develop the p sulu
planner in three technical steps  which we call spirals 
in the first spiral  described in section    we solve a special case of the ccqsp planning problem  where the feasible state space is convex  e g   path planning problem without obstacles  and
the schedule is fixed  as shown in figure    a   this problem can be transformed into a convex optimization problem by the risk allocation approach  which is presented in our previous work  ono
  williams      a   we obtain a feasible  near optimal solution to the ccqsp planning problem
by optimally solving the convex optimization using an interior point method  blackmore   ono 
      
in the second spiral  which is presented in section    we consider a ccqsp problem with a
non convex state space in order to include obstacles  as in figure    b   we develop a branch and
bound based algorithm  called non convex iterative risk allocation  nira   subproblems of the
branch and bound search of nira are convex chance constrained optimal control problems  which
are solved in the first spiral  the nira algorithm cannot handle a problem with a flexible schedule 
   

fio no   w illiams     b lackmore

in the third spiral  which is described in section    we develop another branch and boundbased algorithm  namely the p sulu planner  which can solve a general ccqsp planning problem
with a flexible schedule and obstacles  subproblems of the branch and bound search of the psulu planner are non convex chance constrained optimal control problems  which are solved by the
nira algorithm 
dp suluw  section   

nira  section   

 ono   williams     b   section   

fixed schedule

fixed schedule

t  

simple temporal
constraints

     

t  
t  

c

t  

goal

     

goal

c

obstacle
start

start

 a  convex  fixed schedule

obstacle

waypoint

waypoint

waypoint
start

 b  non convex  fixed schedule

goal

     

 c  non convex  flexible schedule

figure    three spiral approach to the ccqsp planning problem

    related work
recall that the ccqsp planning problem is distinguished by its use of time evolved goals  continuous states and actions  stochastic optimal solutions and chance constraints  while the planning
and control disciplines have explored aspects of this problem  its solution in total is novel  and our
approach to solving this problem efficiently through risk allocation is novel 
more specifically  there is an extensive literature on planning with discrete actions to achieve
temporally extended goals  tegs   such as tlplan  bacchus   kabanza        and talplan
 kvarnstrom   doherty         which treat tegs as temporal domain control knowledge and prune
the search space by progressing the temporal formula  however  since these teg planners assume
discrete state spaces  they cannot handle problems with continuous states and effects without discretization  ignoring chance constraints  the representation of time evolved goals used by tlplan
and the p sulu planner is similar  tlplan uses a version of metric interval temporal logic  mitl 
 alur  feder    henzinger        applied to discrete states  while the p sulu planner uses qualitative state plans  qsps   leaute   williams        hofmann   williams        li        over
continuous states  li        shows that  for a given state space  any qsp can be expressed in mitl 
the key difference that defines the p sulu planner is the addition of chance constraints  together
with its use of continuous variables 
several planners  particularly those that are employed as components of model based executives  command actions in continuous state space  for example  sulu  leaute   williams       
takes as input a deterministic linear model and qsp  which specifies a desired evolution of the plant
state as well as flexible temporal constraints  and outputs a continuous control sequence  chekhov
 hofmann   williams        also takes as input a qsp and a nonlinear deterministic system model 
and outputs a continuous control sequence  in order to enable fast real time plan execution  chekhov
precomputes flow tubes  the sets of continuous state trajectories that end in the goal regions specified by the given plan  kongming  li        provides a generative planning capability for hybrid
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

systems  involving both continuous and discrete actions  it employs a compact representation of
hybrid plans  called a hybrid flow graph  which combines the strengths of a planning graph for
discrete actions and flow tubes for continuous actions  these planners adapt to the effects of uncertainty  but do not explicitly reason about the effects of uncertainty during planning  for example 
sulu employs a receding horizon approach  which continuously replans the control sequence using
the latest measurements  chekhovs flow tube representation of feasible policies allows the executive to generate new control sequences in response to disturbances on line  the p sulu planner is
distinct from these continuous planners in that it plans with a model of uncertainty in dynamics  instead of just reacting to it  its plan guarantees the user specified probability of success by explicitly
reasoning about the effects of uncertainty 
in ai planning literatures  a planning domain description language  pddl   supports mixed
discrete continuous planning domains  fox   long         probabilistic pddl  younes   littman 
      and the relational dynamic influence diagram language  rddl   sanner        can handle stochastic systems  recently  coles  coles  fox  and long        developed a forward chaining
heuristic search planner named colin  which can deal with continuous linear change and durationdependent effects  however  these planners do not handle chance constraints  we note that the
outputs of the p sulu planner is continuous in space but discrete in time  the time dependent mdp
developed by boyan and littman        can handle continuous time by encoding time in the state 
extension of the p sulu planner to continuous time planning would be an interesting future direction 
most work within the ai community on probabilistic planning has focused on planning in discrete domains and builds upon the markov decision process  mdp  framework  a growing subcommunity has focused on extensions of mdps to the continuous domain  however  tractability
is an issue  since they typically require partitioning or approximation of continuous state space 
a straightforward partitioning of continuous state and action spaces into discrete states and actions often leads to an exponential blow up in running time  furthermore  when the feasible state
space is unbounded  it is impossible to partition the space into a finite number of compact subspaces  an alternative approach is the function approximation  boyan   moore         but its
convergence is guaranteed only when the approximation error is bounded  bertsekas   tsitsiklis 
      lagoudakis   parr         time dependent mdps  boyan   littman        feng  dearden 
meuleau    washington        can do efficient partitioning of continuous state space  but make an
assumption that the set of available states and actions are finite  i e   discrete   hence  planning by
these mdps in a continuous state space  such as rn   requires to approximate the state space by a
finite number of discrete states  our approach is essentially different from the mdp approaches in
that the continuous variables are directly optimized through convex optimization without discretization of continuous state space  hence  the continuity of the state space does not harm the tractability
of the p sulu planner 
a second point of comparison is the treatment of risk  like the p sulu planner  the mdp
framework offers an approach to marrying utility and risk  however  most mdp algorithms balance
the utility and risk by assigning a large negative utility to the event of constraint violation  such an
approach cannot guarantee bounds on the probability of constraint violation  the constrained mdp
approach  altman        can explicitly impose constraints  dolgov and durfee        showed
that stationary deterministic policies for constrained mdps can be obtained by solving a mixed
integer linear program  milp   however  the constrained mdp framework can only impose bounds
on the expected value of costs  and again  cannot guarantee strict upper bounds on the probability
   

fio no   w illiams     b lackmore

of constraint violation  in contrast  the p sulu planner allows users to impose chance constraints 
which explicitly restrict the probability of constraint violation  as far as the authors know  the
risk sensitive reinforcement learning approach proposed by geibel and wysotzki        is the only
work that considers chance constraints in the mdp framework  they developed a reinforcement
learning algorithm for mdps with a constraint on the probability of entering error states  our work
is distinct from theirs in that the p sulu planner is goal directed  by which we mean that it achieves
time evolved goals within user specified temporal constraints  to summarize  no prior mdp work
supports continuous state and actions in combination with general continuous noise on transitions
while ensuring that the probability of failure is bounded 
risk sensitive control methods in a continuous domain have been extensively studied in the discipline of control theory  for example  the celebrated h control method minimizes the effect of
disturbances on the output of a system while guaranteeing the stability of the system  stoorvogel 
       risk sensitive control approaches allow users to choose the level of risk averseness through
the minimization of an expected exponentiated cost function  jacobson        fleming   mceneaney         however  these approaches do not address chance constraints and optimal scheduling  several methods have been proposed for solving stochastic optimal control problems over
continuous variables with chance constraints  the method proposed by van hessem        turns
a stochastic problem into a deterministic problem using a very conservative ellipsoidal relaxation 
blackmore        proposes a sampling based method called particle control  which evaluates joint
chance constraints by a monte carlo simulation  instead of using a conservative bound  as a result 
the stochastic planning problem is reduced to a milp problem  although it has a theoretical guarantee that it can obtain the exactly optimal solution when an infinite number of samples are used 
computation time is an issue  blackmore et al         and nemirovski and shapiro        employed
booles inequality to decompose a joint chance constraint into individual chance constraints  although booles inequality is less conservative than the ellipsoidal relaxation  their approach still
has non negligible conservatism since it fixes each individual risk bound to a uniform value  our
approach builds upon this approach  with modifications to allow flexible individual risk bounds 
to the best of the authors knowledge  the p sulu planner is the first goal directed planner that
is able to plan in a continuous state space with chance constraints 
    innovations
the p sulu planner is enabled by six innovations presented in this article 
first  in order to allow users to command stochastic systems intuitively  we develop a new plan
representation  ccqsp  section        
second  in order to decompose a chance constraint over a disjunctive clause into a disjunction
of individual chance constraints  we introduce the risk selection approach  section        
third  in order to obtain lower bounds for the branch and bound search in nira  we develop
the fixed risk relaxation  frr   a linear program relaxation of the subproblems  section        
fourth  we minimize the search space for the optimal schedule by introducing a new forward
checking method that efficiently prunes infeasible assignment of execution time steps  section      
fifth  in order to enhance the computation time of schedule optimization  we introduce a method
to obtain a lower bound for the branch and bound by solving fixed schedule planning problems with
an partial assignment of a schedule   section     
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

sixth  in order to minimize the number of non convex subproblems solved in the branch andbound search  we introduce a variable ordering heuristic  namely the convex episode first  cef 
heuristic  which explores the episodes with a convex feasible state region before the ones with a
non convex state region  section        
the rest of this article is organized as follows  section   formally defines the ccqsp and
states the ccqsp planning problem  section   derives the encoding of the problem as a chanceconstrained optimization problem  as well as the encodings of two limited versions of the ccqsp
planning problem  one with a fixed schedule and a convex state space  and another with a fixed
schedule and a non convex state space  section   reviews the solution to a fixed schedule ccqsp
planning problem with a convex state space  section   develops the nira algorithm  which solves
a fixed schedule ccqsp planning problem with a non convex state space  and section   introduces
the p sulu planner  which solves a ccqsp planning problem with a flexible schedule and a nonconvex state space  finally  section   shows simulation results on various scenarios  including the
personal transportation system  pts  

   problem statement
recall that the p sulu planner takes as input a linear stochastic plant model  which specifies the
effects of actions  an initial state description  describing a distribution over initial states  a ccqsp 
which specifies desired evolutions of the state variables  as well as acceptable levels of risk  and an
objective function  its output is an executable control sequence and an optimal schedule  planning
is performed over a finite horizon  since the p sulu planner is incorporated with the finite horizon
optimal control  we first define the variables used in the problem formulations  then we define
elements of the inputs and outputs 
    definition of time step
we consider a series of discretized finite time steps t               n with a fixed time interval
t   where integer n is the size of the planning horizon  since the time interval t can take any
positive real value  it suffices to consider time steps with only integer indices to approximate the
systems dynamics  we use the term time step to mean an integer index of the discretized time
steps  while using the term time to mean a real valued time  we define sets t and t as follows 
t                 n   


t                 n     

   
   

we limit the scope of this article to a discrete time stochastic system  this is because optimizing
a control sequence for a continuous time stochastic system requires solving a stochastic differential
equation  sde  repeatedly  performing such a computation is not tractable except for very simple
problems 
    definitions of events
an event denotes the start or end of an episode of behavior in our plan representation 
definition    an event e  e is a instance that is executed at a certain time step in t 
   

fio no   w illiams     b lackmore

we define two special events  the start event e  and the end event ee   without loss of generality 
we assume that e  is executed at t      the end event ee represents the termination of the entire
plan 
    definitions of variables
variables used in our problem formulation involve a discrete schedule  a continuous state vector 
and a continuous control vector 
we formally define an event as well as a schedule as follows 
definition    an execution time step s e   t is an integer valued scalar that represents the
time step at which an event e  e is executed  a schedule s     s e     s e        s ee    is
a sequence of execution time steps of all the events e  e  finally  a partial schedule    
  e   s   e  e  e  is an ordered set of execution time steps of a subset of events e  
by definition  the start event is executed at t     i e  s e         following the notation of a
schedule  we denote by  e  the execution time of an event e  e   see also the definition of a
schedule  definition    
we consider a continuous state space  where a state vector and a state sequence are defined as
follows 
definition    a state vector xt  rnx is a real valued vector that represents the state of the plant
at time step t  a state sequence x  n     x     xn   is a vector of state variables from time step  
to n  
our actions are assignments to continuous decision variables  which are referred to as a control
vector 
definition    a control vector ut  rnu is a real valued vector that represents the control input to
the system at time step t  a control sequence u  n       u     un     is a vector of control inputs
from time   to n    
    definitions of inputs
this subsection defines the four inputs of the p sulu planner  an initial condition  a stochastic plant
model  a ccqsp  and an objective function 
      i nitial c ondition
the belief state at the beginning of the plan is represented by an initial state  which is assumed to
have a gaussian distribution with a known mean x  and a covariance matrix x   
x   n  x    x    

   

the parameters in     are specified by an initial condition  which is defined as follows 
definition    an initial condition i is a pair i   x    x    where x  is the mean initial state and
x  is the covariance matrix of the initial state 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

      s tochastic p lant m odel
the p sulu planner controls dynamical systems in which actions correspond to the settings of continuous control variables  and whose effects are on continuous state variables  the p sulu planner
specifies these actions and their effects through a plant model  a plant model is considered as a state
transition model in a continuous space  we employ a variant of a linear plant model with additive
gaussian uncertainty that is commonly used in the context of chance constrained stochastic optimal control  charnes   cooper        nemirovski   shapiro        oldewurtel  jones    morari 
      van hessem         with a modification to consider controller saturation  specifically  we
assume the following plant model 
xt     at xt   b t u  ut     wt

   

where wt  rnx is a state independent disturbance at t th time step that has a zero mean gaussian
distribution with a given covariance matrix denoted by wt  
wt  n     wt   

   

although this model prohibits state dependent disturbance  most types of noise involved in our
target applications are state independent  for example  in the pts scenario introduced in section
   the primary source of uncertainty is a wind turbulence  which is typically not dependent on the
state of a vehicle  in the space rendezvous scenario discussed in section      the main sources of
perturbations for a space craft are the tidal force and unmodeled gravitational effects of sun  moon 
and other planets  wertz   wiley j  larson         such noises can be modeled as a state dependent
noise in practice when the scale of the planned actions is significantly smaller than that of the solar
system 
not dependent on the state of the space craft  we note that our problem formulation can encode
time varying noise by specifying different covariance matrices wt for each time step 
the set u  rnu is a compact convex set that represents the continuous domain of the feasible
control inputs  if an infeasible control input ut 
  u is given to the plant  its actuators saturate  the
function u      rnu   u in     represents the effect of actuator saturation as follows 
 
u
 if u  u 
u  u    
 
pu  u   otherwise 
where pu  u  is a projection of u on u  for example  when u is one dimensional and u    l  u  
pu  u    max min u  u   l   note that u introduces nonlinearity in the plant 
the parameters in     and     are specified by a stochastic plant model  which is defined as
follows 
definition    a stochastic plant model m is a four tuple m   a  n     b   n     w  n     u 
where a  n   and b   n   are sets of n matrices a  n       a    a       an      b   n     
 b     b        b n      w  n   is a set of n covariance matrices w  n      w    w         wn     
and u  rnu is a compact convex set that represents the domain of the feasible control inputs 
note that xt   as well as wt   is a random variable  while ut is a deterministic variable  figure
  illustrates our plant model  in a typical plant model  the probability circles grow over time since
disturbance wt is added at every time step  as drawn in the figure  this effect represents a commonly
observed tendency that the distant future involves more uncertainty than the near future 
   

fio no   w illiams     b lackmore

x 

x 

     
   
   

x 
x 

     
   

x 

     
   
   

nominal
path

x 

   

x 

figure    illustration of the stochastic plant model used by the p sulu planner 
in order to mitigate the accumulation of uncertainty  we employ a close loop control approach 
which generates the control input ut by incorporating a nominal control input ut  rnu with an
error feedback  as follows 
ut   ut   k t  xt  xt   
   
where k t is a matrix representing a constant stabilizing feedback gain at time t and xt is the
nominal state vector  the nominal state xt is obtained by the following recursion 
x     x 
xt     at xt   b t ut  

   
   

a closed loop control approach has been employed by geibel and wysotzki        and oldewurtel
et al         in the context of chance constrained optimal control and shown that it significantly
improves performance 
in this closed loop planning method  the nominal control input ut is planned before the execution  the actual control input ut is computed in real time by using      the feedback term in
    linearly responds to the error xt  xt   by choosing the feedback gain k t appropriately  the
growth of the probability circles in figure   can be slowed down  neglecting the effect of controller
saturation  i e   assuming u   rnx    it follows from     and     that xt has a gaussian distribution
with a covariance matrix xt   which evolves as follows 
xt      at   b t k t  xt  at   b t k t  t   wt  

   

in a typical plant  some of the eigenvalues of a are one  therefore  when there is no error feedback
 i e   k t       the size of xt grows by wt at each iteration  by choosing k t so that the
norm of the largest eigenvalue of  at   b t k t   is less than one  the covariance xt does not grow
continuously  such a feedback gain can be found by using standard control techniques  such as a
linear quadratic regulator  lqr   bertsekas         since we consider a finite horizon  discretetime planning problem  the optimal time varying lqr gain k t is obtained by solving the finitehorizon  discrete time riccati equation  in practice  it often suffices to use the steady state  i e  
time invariant  lqr gain  which is obtained by solving the infinite horizon  discrete time riccati
equation for simplicity  we note that the feedback gain k t can also be optimized in real time  this
approach is often used for robust and stochastic model predictive controls  goulart  kerrigan   
maciejowski        oldewurtel et al         ono         however  such an extension is beyond the
scope of this paper 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

an issue is that  if the error xt  xt happens to be very large  the control input ut may exceed
its feasible domain u  resulting in actuator saturation  therefore      does not hold due to the
nonlinearity of the function u     we address this issue through the risk allocation approach  more
specifically  we impose chance constraints on control saturation  and allocate risk to both state and
control constraints  this approach is discussed more in detail in section       
      c hance   constrained q ualitative s tate p lan  ccqsp 
a qualitative state plan  qsp   leaute   williams        is a temporally flexible plan that specifies
the desired evolution of the plant state  the activities of a qsp are called episodes and specify
constraints on the plant state  ccqsp is an extension of qsps to stochastic plans that involve
chance constraints  defined as follows 
definition    a chance constrained qualitative state plan  ccqsp  is a four tuple p   e  a  t   c 
where e is a set of discrete events  a is a set of episodes  t is a set of simple temporal constraints 
and c is a set of chance constraints 
the four elements of a ccqsp are defined precisely in a moment  like a qsp  a ccqsp can
be illustrated diagrammatically by a directed acyclic graph in which the discrete events in e are
represented by vertices  drawn as circles  and the episodes as arcs with ovals  a ccqsp has a start
event e  and an end ee   which corresponds to the beginning and the end of the mission  respectively 
for example  figure   shows the ccqsp of the pts scenario  the state regions and obstacles in
the ccqsp are illustrated in figure    it involves four events  e    e    e    e    ee    their meanings
are described as follows 
   the start event e  corresponds to the take off of the pav from provincetown 
   the second event e  corresponds to the time step when pav reaches the scenic region 
   event e  is associated with the time instant when the pav has just left the scenic region 
   the end event ee corresponds to the arrival of the pav in bedford 
the ccqsp has four episodes a    a    a    a    a    and two chance constraints c    c    c    
a natural language expression of the ccqsp is 
 start from provincetown  reach the scenic region within    time units  and remain
there for between   and    time units  then end the flight in bedford  the probability
of failure of these activities must be less than     at all times  remain in the safe region
by avoiding the no fly zones and the storm  limit the probability of penetrating such
obstacles to          the entire flight must take at most    time units 
below we formally define the three types of constraints   episodes  temporal constraints  and
chance constraint 
episodes each episode a  a specifies the desired state of the system under control over a time
interval 
s
definition    an episode a   esa   ee
a   a  ts   te    ra  has an associated start event ea and an end
n
event ee
a   ra  r is a region in a state space  a  t is a set of time steps at which the state xt
must be in the region ra  

   

fio no   w illiams     b lackmore

the feasible region ra can be any subset of rn   we will approximate ra with a set of linear
constraints later in section       
a  ts   te   is a subset of t given as a function of the episodes start time step ts   s esa   and
its end time step te   s ee
a    different forms of a  ts   te   result in various types of episodes  the
following three types of episodes are particularly of interest to us 
   start in episode  a  ts   te      ts  
   end in episode  a  ts   te      te  
   remain in episode  a  ts   te      ts   ts           te  
for a given episode a  the set of time steps at which the plant state must be in the region ra is
obtained by substituting s esa   and s ee
a    the execution time steps of the start event and the end
event of the episode  into ts and  te   in other  words  an episode a requires that the plant state
is in ra for all time steps in a s esa    s ee
a     for the rest of the article  we use the following
abbreviated notation 
 
 
a  s     a s esa    s ee
a   
using this notation  an episode is equivalent to the following state constraint 

xt  ra  

    

ta  s 

for example  in the ccqsp shown in figure    there are four episodes  a   start in  provincetown    a   remain in  scenic region    a   end in bedford   and a   remain in  safe region   
in section    we solve a relaxed optimization problem with a partial schedule  definition   
in order to obtain a lower bound on the optimal objective value  in such relaxed problems  only
a subset of the episodes that are relevant to the given partial schedule are imposed  we formally
define a partial episode set of a partial schedule  as follows 
definition    given a partial schedule   a    a is its partial episode set  which is a subset of
a that involves the episodes whose start event and end event are assigned execution time steps 
 
 
a     a  a   esa  e  ee
a  e  
where the definition of e is given in definition   
chance constraint recall that a chance constraint is a probabilistic constraint that requires the
constraints defining each episode to be satisfied within a user specified probability  a ccqsp can
have multiple chance constraints  a chance constraint is associated with at least one episode 
a chance constraint is formally defined as follows 
definition     a chance constraint c   c   c  is a constraint requiring that 


 
pr 
xt  ra      c  

    

ac ta  s 

where c is a user specified risk bound and c  a is a set of episodes associated with the chance
constraint c 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

note that every episode in a ccqsp must be associated with exactly one chance constraint 
any episode in a must not be involved in more than one chance constraint or unassociated with any
chance constraint 
for example  the ccqsp shown in figure   has two chance constraints  c  and c    their associated episodes are c     a    a    a    and c     a     therefore  c  requires that the probability
of satisfying the three episodes a    a    and a   colored in green  is more than than      while c 
requires that the probability of satisfying the episode a  is more than           
we make the following assumption  which is necessary in order to guarantee the convexity of
constraints in section     
assumption   
c     
this assumption requires that the risk bounds are less than      we claim that this assumption
does not constrain practical applications  since typically the user of an autonomous system would
not accept more than     risk 
temporal constraint a ccqsp includes simple temporal constraints  stcs   dechter et al  
       which impose upper and lower bounds on the duration of episodes and on the temporal
distances between two events in e 
min max  is a constraint  specifydefinition     a simple temporal constraint    es   ee
   b   b
ing that the duration from a start event es to an end event ee
 be in the real valued interval
max           
 bmin
 
b



temporal constraints are represented diagrammatically by arcs between nodes  labeled with the
max    or by labels over episodes  for example  the ccqsp shown in figure  
time bounds  bmin
   b
has four simple temporal constraints  one requires the time between e  and e  to be at most   
time units  one requires the time between e  and e  to be at least   units and at most    units  one
requires the time between e  and ee to be at most    time units  one requires the time between e 
and ee to be at most    time units 
a schedule s is feasible if it satisfies all temporal constraints in the ccqsp  the number of
feasible schedules is finite  since t is discrete and finite  we denote by sf the domain of feasible
schedules  which is formally defined as follows 
sf    s  t e     t

s
max
bmin
 t  s ee
  

    s e     b

    

where  e  is the number of events in the ccqsp  the temporal duration is multiplied by the time
are real valued time  while s is a set of discrete time steps in t 
and bmin
interval t because bmin


      o bjective f unction
in this section  we formally define the objective function 
definition     an objective function j   un  xn  sf   r is a real valued function over the
nominal control sequence u  n     the nominal state sequence x  n   and the schedule s  we assume
that j is a convex function over x  n and u  n    
   

fio no   w illiams     b lackmore

a typical example of an objective function is the quadratic sum of control inputs  which requires
the total control efforts to be minimized 
j u  n     x  n   s   

n
 


  ut      

t  

another example is 
j u  n     x  n   s    s ee   

    

which minimizes the total plan execution time  by requiring that the end event ee of the qualitative
state plan be scheduled as soon as possible 
there is often a need to minimize the expectation of a cost function  note that  in our case  the
expectation of a function over x  n and u  n   can be reduced to a function over u  n   because it
follows from         that the probability distributions of x  n and u  n   are uniquely determined
by u  n   and k t   in practice  it is often more convenient to express the objective function as
a function of u  n   and x  n   rather than as a function of u  n     since x  n are specified by
u  n   using      the two expressions are equivalent  the conversion from the expectation of a cost
function to a function over nominal values can be conducted a priori 
if there is no controller saturation  such a conversion can often be obtained in a closed form 
the conversion is particularly straight forward when the cost function is polynomial  since the
expectation is equivalent to a combination of raw moments  which can be readily derived from the
cumulants  note that the third and higher cumulants of the gaussian distribution are zero  below we
show examples of the conversion regarding three commonly used cost functions  linear  quadratic 
and the manhattan norm 
e xt     xt
e xtt qxt  

    
  xtt qxt  

nx


e   xt        

xt  i

i  

tr qxt  
 
 
x t i
 
   
 
  f       

     x t  i

    
    

where q is a positive definite matrix  xt  i is the ith diagonal element of xt   and   f     is a
confluent hypergeometric function  all functions above are convex  the expectation of a function
of ut can also be transformed to a function of ut in the same manner  note that the second term
on the right hand side of      is a constant  hence  minimizing xtt qxt yields the same solution as
minimizing e xtt qxt   
when there is controller saturation  it is difficult to obtain the conversion in a closed form due
to the nonlinearity of u    in      in practice  we use an approximation that assumes no saturation 
since our closed loop control approach explicitly limits the probability of controller saturation to a
small probability  see section       for the detail   the approximation error is trivial  this claim is
empirically validated in section       
    definitions of outputs
the output of the p sulu planner is an optimal solution  which consists of an optimal control sequence u  n    un and an optimal schedule s  sf  
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

definition     the optimal solution is a pair u  n     s   the solution satisfies all constraints
in the given ccqsp  definition     the initial condition i  and the stochastic plant model m   the
solution minimizes the given objective function j u  n     x  n   s   definition     
    problem statement
we now formally define the ccqsp planning problem 
problem    ccqsp planning problem
given a stochastic plant model m   a  n     b   n     w  n     an initial condition i  
x    x    a ccqsp p   e  a  t   c  and an objective function j u  n     x  n   s   a ccqsp
planning problem is to find an optimal solution u  n     s  for m  i  p   and j 
we note that the p sulu planner gives a near optimal solution to problem    the p sulu planner
employs two approximations  namely risk allocation  section        and risk selection  section
        for the sake of computational tractability  as a result  its solution is not strictly optimal in
general  however  we empirically show in section   that the suboptimality due to risk allocation
and risk selection is significantly smaller than existing approximation methods 

   problem encoding
this section encodes the ccqsp planning problem stated in the previous section into a mathematical programming problem  sections       then address how to solve this form of mathematical
problem  recall that we build our ccqsp planner  the p sulu planner  in three spirals  we first
present the problem encoding of a general ccqsp planning problem with a non convex state space
and a flexible schedule  figure    c   in subsection      then we present the encodings of the two
special cases of the ccqsp planning problem in subsections     and      one with a non convex
state space and a fixed schedule  figure    b    and one with a convex state space and a fixed schedule  figure    a   
    encoding of a ccqsp planning problem with a non convex state space and flexible
schedule
      e ncoding of f easible r egions
in order to encode problem   into a mathematical programming problem  the geometric constraint
in       xt  ra   must be represented by algebraic constraints  for that purpose  we approximate
the feasible state regions ra by a set of half spaces  each of which is represented by a linear state
constraint 
figure   shows two simple examples  the feasible region of  a  is outside of the obstacle  which
is approximated by a triangle  the feasible region of  b  is inside of the pickup region  which is
again approximated by a triangle  each feasible region is approximated by a set of linear constraints
as follows 
 a 

 


hti x  g i  

 b 

i  

 


hti x  g i  

i  

we approximate the feasible regions so that the set of linear constraints is a sufficient condition of
the original state constraint xt  ra  
   

fio no   w illiams     b lackmore

figure    approximate representation of feasible regions by a set of linear constraints

we assume that the set of linear state constraints that approximates a feasible region has been
reduced to conjunctive normal form  cnf  as follows 




hta k j xt  ga k j    

    

kka jja k

where ka              ka    and jc i              jc i    are sets of indices  by replacing xt  ra
in      by       a chance constraint c is encoded as follows 

pr 










htc a k j xt  gc a k j        c  

    

ac ta  s  kka jja k

in order to simplify the notation  we merge indices a  c   t  a  s  
 and k  ka into a new
index i  ic  s   where ic  s               ic  s    and  ic  s      ka    ac  a  s    we let ai  
ki   and ti the indices that correspond to to the combined index i  and let hc i j   hc ai  ki  j   using
these notations  the three conjunctions of      are combined into one  and we obtain the following
encoding of a chance constraint 

pr 






htc i j xti  gc i j        c  

    

iic  s  jjc i

the specification of chance constraints given in      requires that all  ic  s   disjunctive clauses of
state constraints must be satisfied with a probability    c   the ith disjunctive clause of the cth
chance constraint is composed of  jc i   linear state constraints 
      ccqsp p lanning p roblem e ncoding
using                     and       a ccqsp planning problem  problem     which is solved in the
third spiral  is encoded as follows 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

problem    general ccqsp planning problem
min
u  n    s
s t 

j u  n     x  n   s 

    

s  sf

    

xt     at xt   b t u  ut     wt  

t  t



    



ut   ut   k t  xt  xt    t  t



 
pr 
htc i j xti  gc i j        c  
cc

    
    

iic  s  jjc i

x   n  x    x    

wt  n     wt   

t  t

    

recall that sf   formally defined in       is the set of schedules that satisfy all temporal constraints in the given ccqsp  this ccqsp execution problem is a hybrid optimization problem over
both discrete variables s  schedule  and continuous variables u  n    control sequence   note that
the temporal constraints within problem   are solved in section    a similar problem encoding is
also employed in the chance constraint mdp proposed by geibel and wysotzki         however 
our encoding differs from geibel and wysotzki in two respects     we optimize not only the continuous control sequence u  n   but also the discrete schedule s with temporal constraints     we
allow joint chance constraints  which require the satisfaction of multiple state constraints for a given
probability  problem   is solved in section   
    encoding of a ccqsp planning problem with a non convex state space and fixed
schedule
a restricted version of a ccqsp planning problem with a fixed schedule  which is solved in the
second spiral  is obtained by fixing s in problem   as follows 
problem    ccqsp planning problem with a fixed schedule
j   s    min
u  n  
s t 

j   u  n     x  n  

    

xt     at xt   b t u  ut     wt  

t  t


ut   ut   k t  xt  xt    t  t



 
pr 
htc i j xti  gc i j        c  
cc

    
    
    

iic  s  jjc i

x   n  x    x    

wt  n     wt   

t  t

    

where j   s  is the optimal objective value of the ccqsp planning problem with the schedule fixed
to s  note that the schedule s  which is a decision variable in problem    is treated as a constant in
problem    therefore  the objective function j  is now a function of only control sequence and mean
   

fio no   w illiams     b lackmore

state  since we have fixed the schedule  since we assumed that j is a convex function regarding to
u  n   and x  n   j  is also a convex function  section   solves problem   
    encoding of a ccqsp planning problem with a convex state space and fixed schedule
a more restrictive version of a ccqsp planning problem with a fixed schedule and a convex state
space  which is solved in the first spiral  is obtained by removing the disjunctions in the chance
constraints in problem   as follows 
problem    ccqsp planning problem with a fixed schedule and a convex state space

min
u  n  

j   u  n     x  n  

    

xt     at xt   b t u  ut     wt  

t  t


ut   ut   k t  xt  xt    t  t




pr 
htc i xti  gc i        c  
cc

    
    
    

iic  s 

x   n  x    x    

wt  n     wt   

t  t

    

section   solves problem   

   ccqsp planning with a convex state space and a fixed schedule
this section presents the solution methods to problem    which is the ccqsp planning problem
with a convex state space and a fixed schedule  as shown in figure    a   when there are no obstacles
in the environment and the execution time steps to achieve time evolved goals are fixed  the ccqsp
planning problem is reduced to a convex chance constrained finite horizon optimal control problem 
in our past work we presented the risk allocation approach  which conservatively approximates
the chance constrained finite horizon optimal control problem by a tractable convex optimization
problem  ono   williams      a      b  blackmore   ono         although an optimal solution
to the approximated convex optimization problem is not an exactly optimal solution to the original convex chance constrained finite horizon optimal control problem  its suboptimality is significantly smaller than previous approaches  this section gives a brief overview of the risk allocation
approach  as well as the solution to the convex chance constrained finite horizon optimal control
problem 
    deterministic approximation of problem  
evaluating whether a joint chance constraint      is satisfied requires computing an integral of a
multivariate probability distribution over an arbitrary region  since the probability in      involves
multiple constraints  such an integral cannot be obtained in a closed form  we address this issue by
decomposing the intractable joint chance constraint      into a set of individual chance constraints 
each of which involves only a univariate probability distribution  the key feature of an individual
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

goal

goal
walls

walls

nominal path
safety margin

start

start

 a  uniform risk allocation

 b  optimal risk allocation

figure    risk allocation strategies on the racing car example

chance constraint is that it can be transformed into an equivalent deterministic constraint that can
be evaluated analytically 
      r isk a llocation a pproach
the decomposition can be considered as an allocation of risk  through the decomposition  the risk
bound of the joint chance constraint is distributed to the individual chance constraints  there are
many feasible risk allocations  the problem is to find a risk allocation that results in the minimum
cost  we offer readers an intuitive understanding of the risk allocation approach using the example
below 

racing car example consider a racing car example  shown in figure    the dynamics of the
vehicle have gaussian distributed uncertainty  the task is to plan a path that minimizes the time to
reach the goal  with the guarantee that the probability of crashing into a wall during the race is less
than       chance constraint   planning the control sequence is equivalent to planning the nominal
path  which is shown as the solid lines in figure    to limit the probability of crashing into the wall 
a good driver would set a safety margin  which is colored in dark gray in figure    and then plan the
nominal path outside of the safety margin 
the driver wants to set the safety margin as small as possible in order to make the nominal path
shorter  however  since the probability of crashing during the race is bounded  there is a certain
lower bound on the size of the safety margin  given this constraint  there are different ways of
setting a safety margin  in figure   a  the width of the margin is uniform  in figure   b  the safety
margin is narrow around the corner  and wide at the other places 
an intelligent driver would take the strategy of  b   since he knows that going closer to the wall
at the corner makes the path shorter  while doing so at the straight line does not  a key observation
here is that taking a risk  i e   setting a narrow safety margin  at the corner results in a greater reward
 i e  time saving  than taking the same risk at the straight line  this gives rise to the notion of risk
allocation  the good risk allocation strategy is to save risk when the reward is small  while taking
it when the reward is great  as is illustrated in this example  the risk allocation must be optimized
in order to minimize the objective function of a joint chance constrained stochastic optimization
problem 
   

fio no   w illiams     b lackmore

      d ecomposition of c onjunctive j oint c hance c onstraints through r isk
a llocation
we derive the mathematical representation of risk allocation by reformulating each chance constraint over a conjunction of constraints into a conjunction of chance constraints  the reformulation
was initially presented by prekopa        and introduced to chance constrained optimal control by
ono and williams      b   the concept of risk allocation was originally developed by ono and
williams      a   let ci be a proposition that is either true or false  then the following lemma
holds 
lemma   
pr

 n


 
ci     



n


i    

i  

pr  ci       i 

i  

n


i  

i  

proof 
pr

 n


 
ci       pr

i  





 n

i  
n


 
ci  

    

   
pr ci  

    

cc i  

 i   
 i   

n

i  
n

i  

n

   
pr ci  i 
i  
i  

pr  ci       i 

n


i   

    

i  

the overline c is the negation of a literal c  we use the following booles inequality to obtain     
from      
 
 n
n


pr cc i   
pr
cc i 
i  

i  

the following result immediately follows from lemma   by substituting a linear constraint
htc i xti  gc i    for ci for each chance constraint c 
corollary    the following set of constraints is a sufficient condition of the joint chance constraint
     in problem   



 

  t
 
c i   
pr hc i xti  gc i        c i 
c i  c
    


cc

iic  s 

iic  s 

the newly introduced variables c i represent the upper bounds on the probability of violating
each linear state constraint  we refer to them as individual risk bounds  each individual risk bound 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

c i   can be viewed as the amount of risk allocated to the ith clause  the fact that c i is a bound on
probability implies that    c i     the second term of      requires that the total amount of risk
is upper bounded to the original risk bound c   here we find an analogue to the resource allocation
problem  where the allocation of a resource is optimized with an upper bound on the total amount
of available resource  likewise  the allocation of risk c i must be optimized in order to minimize
the cost  therefore  we call this decomposition method a risk allocation 
      c onservatism of r isk a llocation a pproach
as mentioned previously  the risk allocation approach gives a conservative approximation of the
original chance constraint  this subsection evaluates the level of conservatism of the risk allocation
approach 
let pf ail be the true probability of failure  defined as the probability that a solution violates the
constraints  i e   the left hand side of        since      is a sufficient but not necessary condition
for       pf ail is smaller than or equal to the risk bound  in general    pf ail   hence  the
conservatism introduced by risk allocation is represented as
  pf ail  
the best case scenario for the risk allocation approach is when the violations of all constraints
are mutually exclusive  meaning that a solution that violates one constraint always satisfies all the
other constraints  in that case       becomes a necessary and sufficient condition for      and hence 
risk allocation does not involve any conservatism  therefore 
  pf ail     
on the other hand  the worst case scenario is when all constraints are equivalent  meaning that
a solution that violates one constraint always violates all the other constraints  in such a case 
  pf ail  

n  
 
n

where n is the number of constraints 
most practical problems lie somewhere between the best case scenario and the worst case scenario  but typically closer to the best case than to the worst case scenario  for example  if there are
two separate obstacles in a path planning problem  collisions with the two obstacles are mutually
exclusive events  collision with an obstacle at one time step does not usually imply collisions at
other time steps  a rough approximation of such a real world situation is to assume that the satisfaction of constraints are probabilistically independent  with such an assumption  the true probability
of failure is 


pf ail  
pr  qc i  u         
    i   
iic

iic

where ic is the set of the index of all state constraints  note that i    therefore  the conservatism introduced by risk allocation is at the second order of  
  pf ail  o     
for example  if        the true probability of failure is approximately pf ail         in most
practical cases  the users prefer to set very small risk bounds  typically less than     in such cases 
the conservatism introduced by risk allocation becomes very small 
   

fio no   w illiams     b lackmore

      c onversion to d eterministic c onstraints
each individual chance constraint in      only involves a single linear constraint  furthermore 
assuming that there is no actuator saturation  xti has a gaussian distribution with the covariance
matrix given by      hence  htc i xti has a univariate gaussian distribution  the following lemma
transforms an individual chance constraint into an equivalent deterministic constraint that involves
the mean of state variables  instead of the random state variables 
lemma    the following two conditions are equivalent 
 
 
pr htc i xti  gc i        c i  htc i xti  gc i  mc i  c i  
where
mc i  c i     



 htc i x ti hc i erf     c i     

    

note that erf  is the inverse of the gauss error function and x ti is the covariance matrix
of xti   this lemma holds because mc i    is the inverse of cumulative distribution function of
univariate  zero mean gaussian distribution with variance htc i x ti hc i  
      r isk a llocation a pproach for the c losed   loop c ontrol p olicy
when a close loop control policy is employed  i e   k t     in       there is a risk of actuator
saturation  since the nonlinearity of the function u    in     makes the probability distribution
of xti non gaussian  mc i    cannot be obtained by       although it is theoretically possible to
derive mc i    for non gaussian distributions  it is very difficult in our case since the inverse of the
cumulative distribution function of xti cannot be obtained in a closed form 
our solution to this issue is summarized in lemma   below  which allows us to assume that xti
is gaussian distributed and hence to use       even if there is a possibility of actuator saturation 
this approach is enabled by imposing additional chance constraints that bound the risk of actuator
saturation as follows 
pr  ut  u      t   t  t  
    
where t is the bound on the risk of actuator saturation at time step t  using the method presented
in section        we approximate u by a polytope as follows 

ut  u 
hu i ut  gu i   
iiu

assuming that xti is gaussian distributed  we use lemma   to transform      into deterministic
constraints on nominal control inputs as follows 


hu i ut  gu i  mu t i  t i   
t i  t   t  t  
    
iiu

iiu

where
mu t i  c i     



 htu i x t hu i erf     c i     

the following lemma holds 
   

    

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

lemma    the following set of constraints is a sufficient condition of the joint chance constraint
     in problem   

 
c i     t   
htc i xti  gc i  mc i  c i  

cc iic  s 

tcmax


 

c i  
t i  c

t   iiu
iic  s 
 

hu i ut  gu i  mu t i  t i   
    
tt iiu

    
where mc i    and mu t i are given by      and       tcmax is the last time step that the episodes
associated with the chance constraint c are executed  given the schedule s 
tcmax   max s ee
a   
ac

intuitively  the constraint      requires that  with probability    c   the episode constraints are
satisfied and the actuators do not saturate until all episodes associated with c are executed 
proof  we consider two plants  m   a  n     b   n     w  n     u and
m    a  n     b   n     w  n     rnu   where u  rnu is a compact convex set  see definition
    the difference between the two plants is that m has a possibility of actuator saturation  while m 
does not  as a result  while the probability distribution of the state variables of m is non gaussian 
that of m  is gaussian  note that m and m  result in different probability distributions of xti and
ut   in order to explicitly show which plant model is considered  we use notations such as xm
ti and

m
ut in this proof 
we first consider m    it follows from lemmas   and   that 

 
  max

tc





m




pr 
htc i xm

g

 

u

u

 


 
      
c i
c
ti
t


cc

t  

iic  s 

let w  n       w     wn      we define a feasible disturbance set  wc  v   n     s   rn nx   as
follows 


  max
fi
tc

fi





fi
m



htc i xm
u

u
 

g

 

wc  v   n     s     w  n    rn nx fi 
c i
ti
t
fi


iic  s 

t  

    
then  by definition 


  max
tc





 u   pr  w  n    wc  v   n     s    
pr 
htc i xm
um
ti  gc i   
t
iic  s 

t  

   

fio no   w illiams     b lackmore

next we consider m   note that m and m  are identical as long as there is no actuator saturations
m
 i e   um
t  u   therefore  for a given w   n    wc  v   n     s   it follows from      that xt  


m
m
xm
t and ut   ut   hence 

  max

tc




w  n    wc  v   n     s    
htc i xm
um
ti  gc i   
t u  
t  

iic  s 

accordingly  for a given c  c 




htc i xm
pr 
ti  gc i   
iic  s 





 pr 





tcmax


htc i xm
ti  gc i   





um
t u

t  

iic  s 

 pr  w  n    wc  v   n     s  
  max


tc





um
 u
  pr 
htc i xm
t
ti  gc i   
t  

iic  s 

    c  
this completes the proof of lemma  
we note that lemma   is a probabilistic extension of the closed loop robust model predictive
control  rmpc  methods proposed by acikmese  carson iii  and bayard        and richards and
how         these methods avoid the risk of actuator saturation by imposing tightened control
constraints on ut   since we consider stochastic uncertainty  we replace the constraint tightening by
chance constraints 
    convex programming solution to problem  
using lemma    we replace the stochastic optimization problem  problem    with the deterministic
convex optimization problem 
problem    deterministic approximation of problem  
min
u  n  c i   t i  
s t 

j   u  n   x  n  
t  t  
 

    

xt  
t
hc i xti

  at xt   b t ut

    

 gc i  mc i  c i  

    

cc iic  s 

 

tt

hu i ut  gu i  mu t i  t i  

    

iiu

 

tcmax

c i  

cc iic  s 

   

 
t   iiu

t i  c  

    

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

it follows immediately from corollaries   and   that a feasible solution to problem   is always
a feasible solution to problem    furthermore  blackmore and ono        showed that an optimal
solution to problem   is a near optimal solution to problem    the following lemma guarantees the
tractability of problem   
lemma    problem   is a convex optimization problem 
proof  the inverse error function erf   x  is concave for x  since we assume in section       that
c       the feasible ranges of  and  are upperbounded by      since the safety margin function
mc i  c i   and mu t i  t i   are convex for     c i      and     t i       the constraints     
and      are convex within the feasible region  all other constraints are also convex since they are
linear  finally  the objective function is convex by assumption  section         therefore  problem
  is a convex optimization problem 
since problem   is a convex optimization problem  it can be solved by an interior point method
optimally and efficiently  this completes our first spiral  planning for ccqsps with a fixed schedule
and convex constraints  in the next section we present a solution method for a non convex problem
through a branch and bound algorithm  whose subproblems are convex problems 

   ccqsp planning with a non convex state space
next  we consider the second spiral  comprised of problem   in section      a variant of the ccqsp
planning problem that involves a fixed schedule and non convex constraints  such as obstacles  as
shown in figure    b   once again  this is encoded as a chance constrained optimization problem 
but the addition of the obstacle avoidance constraints requires disjunctive state constraints  hence 
the problem results in a non convex  chance constrained optimization  this section introduces a
novel algorithm  called non convex iterative risk allocation  nira   that optimally solves a deterministic approximation of problem   
the solution to a ccqsp planning problem with a non convex state space is two fold  in the
first step  described in section      we obtain a deterministic approximation of problem    in order
to handle disjunctive chance constraints  we develop an additional decomposition approach called
risk selection  which reformulates each chance constraint over a disjunction of constraints into a disjunction of individual chance constraints  once the chance constraints in      are decomposed into
a set of individual chance constraints through risk allocation and risk selection  the same technique
as in section       is used to obtain equivalent deterministic constraints  as a result  we obtain a
disjunctive convex programming problem  problem   in section        
the deterministic disjunctive convex programming problem is solved in the second step  described in sections          we introduce the nira algorithm  algorithm    that significantly reduces the computation time without making any compromise in the optimality of the solution  the
reduction in computation time is enabled by our new bounding approach  fixed risk relaxation
 frr   frr relaxes nonlinear constraints in the subproblems of the branch and bound algorithm
with linear constraints  in many cases  frr of the nonlinear subproblems is formulated as a linear
programming  lp  or approximated by an lp  nira obtains a strictly optimal solution of problem
  by solving the subproblems exactly without frr at unpruned leaf nodes of the search tree  while
other subproblems are solved approximately with frr in order to reduce the computation time 
   

fio no   w illiams     b lackmore

    deterministic approximation
as in section    we first obtain a deterministic approximation of problem   
      r isk s election a pproach
the deterministic approximation is obtained by decomposing the non convex joint chance constraint
     into a set of individual chance constraints  through risk allocation and risk selection  we revisit
the race car example to explain the concept of risk selection intuitively 

figure    in the racing car example  the risk selection approach guarantees the      risk bound for
both paths  and lets the vehicle choose the better one 

racing car example we consider the example shown in figure    where a vehicle with uncertain
dynamics plans a path that minimizes the time to reach the goal  the vehicle is allowed to choose
one of the two routes shown in figure    we impose a chance constraint that limits the probability
of crashing into a wall during the mission to      
the satisfaction of the chance constraint can be guaranteed by the following process  first  for
each of the routes  we find a safety margin that limits the probability of crash throughout the route
to      from the start to the goal  then  we let the vehicle plan a nominal path that operates within
the safety margins  since both routes have a      safety margin  the chance constraint is satisfied
no matter which route the vehicle chooses  therefore  the vehicle can optimize the path by choosing
the route that results in a smaller cost  the optimization process can be considered as a selection of
risk  the vehicle is given two options as in figure    routes  a  and  b   both of which involve the
same level of risk  then the vehicle selects the one that results in less cost  hence  we name this
decomposition approach as the risk selection 
      d ecomposition of c onjunctive j oint c hance c onstraint through r isk
s election
in this subsection  we derive the mathematical representation of risk selection  let ci be a proposition that is either true or false  then the following lemma holds 

   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

lemma   
pr

 n


 
ci      

i  

n


pr  ci       

i  

proof  the following inequality always holds 
i

pr

 n


 
ci  pr  ci    

    

i  

hence 

pr

 n


 
ci       i pr  ci        

i  

n


pr  ci        

    

i  

the following corollary follows immediately from lemmas   and   
corollary    the following set of constraints is a sufficient condition of the disjunctive joint chance
constraint      in problem   

c i     t   


 
cc







iic  s  jjc i



tcmax

c i  

 

tt

 
t   iiu

iic  s 



htc i j xti  gc i j  mc i  c i  

t i  c





 

hu i ut  gu i  mu t i  t i   

    

iiu

note that the resulting set of constraints      is a sufficient condition for the original chance
constraint       therefore  any solution that satisfies      is guaranteed to satisfy       furthermore 
although      is a conservative approximation of       the conservatism introduced by risk selection
is generally small in many practical applications  this claim is empirically validated in section
      
      d eterministic a pproximation of p roblem  
using corollary    the non convex fixed schedule ccqsp planning problem  problem    is approximated by the following deterministic convex optimization problem  for later convenience  we
label each part of the optimization problem as o  objective function   m  plant model   c  chance
constraints on states   d  chance constraints on control inputs   and r  risk allocation constraint  
   

fio no   w illiams     b lackmore

problem    deterministic approximation of problem  
min
u  n  c i   t i  
s t 

 o   

j   u  n   x  n  

    

 m    t  t   xt     at xt   b t ut
  
 c   
htc i j xti  gc i j  mc i j  c i  

    
    

cc iic  s  jjc i

 d   

 

hu i ut  gu i  mu t i  t i  

    

tt iiu

 r   

 

tcmax

c i  

cc iic  s 

 

t i  c  

    

t   iiu

it follows immediately from corollary   that an optimal solution to problem   is guaranteed
to be a feasible solution to the original problem with regard to satisfying the chance constraints
 problem     furthermore  we empirically demonstrate in section       that it is a near optimal
solution to problem   in our applications 
    nira  branch and bound based solution to problem  
we next present the non convex iterative risk allocation  nira  algorithm  recall that nira
optimally solves problem   by a branch and bound algorithm  the standard branch and bound
solution to problems involving disjunctive nonlinear constraints  such as those in problem    is
to use a bounding approach in which the nonlinear convex relaxed subproblems are constructed
by removing all non convex constraints below the corresponding disjunction  this approach was
used by balas        and li and williams        for a different problem known as disjunctive linear
programming  whose subproblems are lps instead of convex programmings  however  although the
standard branch and bound algorithm is guaranteed to find a globally optimal solution to problem   
its computation time is slow because the algorithm needs to solve numerous nonlinear subproblems
in order to compute relaxed bounds 
our new bounding approach  fixed risk relaxation  frr   addresses this issue by computing
lower bounds more efficiently  we observe that the relaxed subproblems are nonlinear convex optimization problems  frr relaxes the nonlinear constraints to linear constraints  particularly  when
the objective function is linear  an frr of a subproblem  problem    is an lp  which can be very
efficiently solved  the optimal objective value of an frr of a subproblem is a lower bound of the
optimal objective value of the original subproblem 
nira solves the frrs of the subproblems in order to efficiently obtain the lower bounds  while
solving the original subproblems exactly without relaxation at unpruned leaf nodes in order to obtain
an exact optimal solution  as a result  nira achieves significant reduction in computation time 
without any loss in optimality 
      t he nira a lgorithm overview
algorithm   shows the pseudocode of the nira algorithm  its input is the deterministic approximation of a non convex chance constrained optimal control problem  problem     which is a five tuple
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

algorithm   non convex iterative risk allocation  nira  algorithm
function nira problem  returns optimal solution to problem  
   set up queue as a filo queue
   incumbent  
   rootsubproblem  obtainrootsubproblem problem 
   queue  rootsubproblem
   while queue is not empty do
  
subproblem  the last entry in queue
  
remove subproblem from queue
  
lb  obtainlowerbound subproblem 
  
if lb  incumbent then
   
if c    c   i    ic  s   then
   
 j  u    solve subproblem 
   
if j    incumbent then

   
incumbent  j  u  u   update the optimal solution
   
end if
   
else
   
ii  
   
if i    ic  s   then
   
c  c      i   
   
end if
   
for j  jc i do
   
newsubproblems  expand subproblem problem c i j 
   
add newsubproblems to queue
   
end for
   
end if
   
end if
    end while

    return u

o  m  c  d  r  as well as a fixed schedule s  its output is an optimal nominal control sequence

u     u     un     
each node of the branch and bound search tree corresponds to a subproblem that is a convex
chance constrained optimization problem  problem     we use a filo queue to store subproblems
so that the search is conducted in a depth first manner  line     at each node  the corresponding
subproblem is solved to obtain a lower bound of the objective value of all subsequent subproblems
 line     the details of the bounding approaches are explained in subsection      if the lower bound
is larger than the incumbent  the algorithm prunes the branch  otherwise  the branch is expanded
 line      if a branch is expanded to the leaf without being pruned  subproblems are solved exactly
 line      subsection     explains our expansion procedure in detail  the nira algorithm always

results in a globally optimal solution to problem    since the solution u is obtained by solving the
subproblems at leaf nodes exactly  the next two subsections introduces the branching and bounding
methods 
   

fio no   w illiams     b lackmore

    branching
this subsection explains how nira constructs the root subproblem  line   of algorithm     as
well as how it expands the nodes  line    of algorithm     the root subproblem is a convex
optimal ccqsp planning problem without any chance constraints  when a node is expanded  the
subproblems of its children nodes are constructed by adding one constraint in a disjunction to the
subproblem of the parent node  in order to simplify notations  we let cc i j represent each individual
chance constraint      in problem   
 
t rue  if htc i j  gc i j xti  mc i j  c i   
cc i j   
f alse  otherwise  
      walk   through e xample
we first present a walk through example to intuitively explain the branching procedure  the example is an instance of problem    which involves four individual chance constraints 


ht  i j xti  g  i j  m  i j    i  
    
i      j     

using this notation defined above  the set of individual chance constraints      is represented as
follows 
 c       c          c       c       

    

figure    a  shows a tree obtained by dividing the original problem into subproblems sequentially 
the subproblems corresponding to the trees four leaf nodes  nodes     in figure    a   exhaust all
conjunctive  i e   convex  combinations among the chance constraints       on the other hand  the
subproblems corresponding to the three branch nodes  nodes     in figure    a   involve disjunctive
 i e   nonconvex  clauses of chance constraints  we relax such non convex subproblems to convex
subproblems by removing all clauses that contain disjunctions in order to obtain the search tree
shown in figure    b  

figure    branch and bound search tree for a sample disjunctive convex programming problem
 problem    with constraints        a  tree of non convex subproblems   b  tree of relaxed convex subproblems 

   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

the non convex problem  problem    can be optimally solved by repeatedly solving the relaxed
convex subproblems using the algorithms presented in section    the following subsections introduce the algorithms that construct a search tree with relaxed convex subproblems  such as the one
in figure    b  
      r elaxed c onvex s ubproblem
the formulation of the relaxed convex subproblems is given in problem    we represent the index
j as j c  i  since the convex relaxation chooses only one disjunct for each disjunction specified by
 the optimal objective value of the relaxed
 c  i   let ic be a set of indices for i  we denote by jsp
subproblem 
problem    convex relaxed subproblem of nira


jsp
 

min
u  n  c i   t i  
s t 

 o    j   u  n   x  n  
 m   
 c   

t  t   xt     at xt   b t ut
 
htc i j c i  xti  gc i j c i   mc i j c i   c i       
cc iic

 d   

 

hu i ut  gu i  mu t i  t i  

    

tt iiu

 r   



tcmax

c i  

cc iic

 

t i  c  

    

t   iiu

note that problem   is identical to problem    hence  the algorithms introduced in section  
can be used to solve the relaxed subproblems 
      c onstruction of root s ubproblem
the root subproblem is a special case of problem   above with ic being an empty set for all c  c 
the function presented in algorithm   is used in line   of the nira algorithm  algorithm   
to construct the root subproblem of the branch and bound tree  note that  in algorithm    we
use an object oriented notation  such as subproblem o  to represent the objective function o of
subproblem  the resulting root subproblem is as follows 
      e xpansion of s ubproblems
in order to create a child subproblem of a subproblem  the function described in algorithm   is
used in line    of the nira algorithm  algorithm     it adds the individual chance constraint
specified by the indices  c  i  j  as a conjunct  note that the resulting child subproblem is still a
convex optimization  because the individual chance constraint is added conjunctively  the nira
algorithm  algorithm    enumerates children nodes for all disjuncts in jc i  lines        
   

fio no   w illiams     b lackmore

algorithm   construction of the root subproblem of nira
function obtainrootsubproblem problem  returns root subproblem
   rootsubproblem o  problem o
   rootsubproblem m  problem m
   rootsubproblem d  problem d
   for c  c do
  
rootsubproblem ic    max 
tc
  
rootsubproblem rc  lhs  t  
iiu t i
  
rootsubproblem rc  rhs  problem rc  rhs
   end for
   return rootsubproblem
algorithm   expansion of a subproblem of nira
function
expand subproblem  problem  c  i  j 
lem
   subproblem ic  subproblem ic  i
   subproblem rc  lhs  subproblem rc  lhs   c i
   return subproblem

returns

a

child

subprob 

    bounding
in this subsection  we present two implementations of the obtainlowerbound function in line  
of algorithm    the first one uses the optimal solution of the convex subproblems  problem    as
lower bounds  this approach typically results in extensive computation time  the second one solves
an lp relaxation of the convex subproblems  called fixed risk relaxation  frr   frr dramatically
reduces the computation time compared to the first implementation  the nira algorithm employs
the second implementation 
      s imple b ounding
algorithm   shows the most straightforward way to obtain lower bounds  it simply solves the
convex relaxed subproblems  problem    using the methods presented in section      the optimal
objective value of a relaxed subproblem gives a lower bound of the optimal objective value of all the
subproblems below it  for example  the optimal solution of the relaxed subproblem at node   in
figure    b  gives a lower bound of the objective value of the subproblems at nodes   and    this
is because the constraints of the relaxed subproblems are always a subset of the constraints of the
subproblems below  note that optimization problems are formulated as minimizations 
however  despite the simplicity of this approach  its computation time is slow because the algorithm needs to solve a myriad of subproblems  for example  a simple path planning problem with
algorithm   a simple implementation of the obtainlowerbound function in line   of algorithm  
function obtainlowerbound naive subproblem  returns a lower bound
   solve subproblem using algorithms presented in section    
   return the optimal objective value

   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

ten time steps and one rectangular obstacle requires the solution of                   in the worst
case  although the branch and bound process often significantly reduces the number of subproblems
to be solved  moreover  the subproblems  problem    are nonlinear convex optimization problems
due to the nonlinearity of mc i j and mu t i in      and       a general nonlinear optimization problem requires significantly more solution time than more specific classes of optimization problems 
such as linear programmings  lps  and quadratic programmings  qps  
      f ixed r isk r elaxation
our new relaxation approach  fixed risk relaxation  frr   addresses this issue  frr linearizes
the nonlinear constraints      and      in problem   by fixing all the individual risk allocations 
c i and t i   to their upper bound   when the objective function is linear  an frr is an lp 
an frr with a convex piecewise linear objective function can also be reformulated as an lp by
introducing slack variables  see section       for an example    a general convex objective function
can be approximated by a convex piecewise linear function  hence  in many cases  the frrs of
subproblems result in lps  which can be solved very efficiently  the fixed risk relaxation of problem
  is as follows 
problem    fixed risk relaxation of problem  

jf rr   min
u  n
s t 

j   u  n   x  n  
t  t  
 

xt     at xt   b t ut
htc i xti  gc i  mc i j c i   c  

    

cc iic  s 

 

hu i ut  gu i  mu t i  c  

    

tt iiu

note that the nonlinear terms in      and       mc i j and mu t i   become constant by fixing c i
and t i to c   which is a constant  the optimal objective value of the frr provides a tightest lower
bound among the linear relaxations of constraints      and       the following lemmas hold 
lemma    problem   gives a lower bound to the optimal objective value of problem   

jf rr  jsp

proof  mc i j    and mu t i    are monotonically decreasing functions  since c i  c and t i 
c   all individual chance constraints      and      of the fixed risk relaxation are less stricter
than the first conjunct of      and       therefore  the cost of the optimal solution of the fixed risk
relaxation is less than or equal to the original subproblem 
lemma    frr gives the tightest lower bound among the linear relaxations of constraints      and
     
proof  the linear relaxation of      and      becomes tighter by fixing c i and t i to a lesser value 
however  setting c i and t i to values less than c may exclude feasible solutions  such as the one
   

fio no   w illiams     b lackmore

algorithm   an frr implementation of the obtainlowerbound function in line   of algorithm  
function obtainlowrebound frr subproblem  returns lower bound
   for  c  i  j  in subproblem c do
  
subproblem cc i j  rhs  mc i j  c     apply fixed risk relaxation
   end for
   for  t  i  do
  
subproblem dt i  rhs  mu t i   apply fixed risk relaxation
   end for
   remove subproblem r
   solve subproblem using an lp solver
   return the optimal objective value

that sets c i   c for some  c  i   hence  frr is the tightest linear relaxation of      and      
resulting in the tightest lower bound 
note that the optimal solution of fixed risk relaxation  problem    is typically an infeasible
solution to problem    since setting c i   t i   c violates the constraint      
algorithm   implements the fixed risk relaxation  the lp relaxation is solved by an lp solver 
and its optimal objective value is returned 
this completes our second spiral  planning for ccqsps with a fixed schedule and nonconvex
constraints  in the next section  we turn to our final spiral  which involves flexible temporal constraints 

   ccqsp planning with a flexible schedule
this section presents the complete p sulu planner  which efficiently solves the general ccqsp
planning problem with a flexible schedule and a non convex state space  problem   in section
        the problem is to find a schedule of events s that satisfies simple temporal constraints  as
well as a nominal control sequence u  n   that satisfies the chance constraints and minimizes cost 
our approach is to first generate a feasible schedule and then to extend it to a control sequence for
that schedule  while iteratively improving the candidate schedules using branch and bound 
we build the p sulu planner upon the nira algorithm presented in the previous section  recall
that nira optimizes the nominal control sequence u  n   given a fixed schedule s  the p sulu
planner uses nira as a subroutine that takes a schedule s as an input  and outputs the optimal
objective value as well as an executable control sequence  we denote the optimal objective value
for a given schedule s as j   s   using this notation  the ccqsp planning problem with a flexible
schedule  problem    can be rewritten as a schedule optimization problem as follows 
min j   s  

ssf

    

recall that the domain of feasible schedules sf  definition     is a finite set  since we consider a
discretized  finite set of time steps t  see section       hence  the schedule optimization problem
     is a combinatorial constraint optimization problem  where the constraints are given in the form
of simple temporal constraints 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

algorithm   the the p sulu planner
function psulu ccqsp  returns optimal schedule and control sequence
   incumbent   
   set up queue as a filo queue
   e     e        e       
  initialize the partial schedule
   queue  e      
   while queue is not empty do
  
e     the last entry in queue
  
remove e    from queue
  
 j    u  n      obtainlowerbound ccqsp  e    
  
if j    incumbent then
   
if e   e then
   
incumbent  j    optctlsequence  u  n     optschedule  
   
else
   
expand ccqsp  queue  e  e    
   
end if
   
end if
    end while
    return optctlsequence  optschedule

    algorithm overview
our solution approach is again to use a branch and bound algorithm  in the branch and bound
search  the p sulu planner incrementally assigns an execution time step to each event in order to
find the schedule that minimizes j   s  in       the objective function is evaluated by solving the
fixed schedule ccqsp planning problem using the nira algorithm  although the combination of
the two branch and bound searches in the p sulu planner and nira are equivalent to one unified
branch and bound search in practice  we treat them separately for ease of explanation 
as shown in figure     the branch and bound algorithm searches for an optimal schedule by
incrementally assigning execution time steps to each event in a depth first manner  each node of the
search tree corresponds to a partial schedule  definition     which assigns execution time steps to a
subset of the events included in the ccqsp  the partial schedule at the root node only involves an
assignment to the start node e    the tree is expanded by assigning an execution time step to one new
event at a time  for example  the node  e        in figure     a  represents a partial schedule that
assigns the execution time step t     to the event e  and t     to e    while leaving ee unassigned 
the the p sulu planner obtains the lower bound of the objective function value j   s  by solving
a ccqsp planning problem with a partial schedule that can be extended to s  the the p sulu
planner minimizes the search space by dynamically pruning the domain through forward checking 
more specifically  after an execution time is assigned to an event at each iteration of the branch andbound search  the the p sulu planner runs a shortest path algorithm to tighten the real valued upper
and lower bounds of the execution time step of unassigned events according to the newly assigned
execution time step 
algorithm   shows the pseudocode of the algorithm  at each node of the search tree  a fixedschedule ccqsp planning problem is solved with the given partial schedule  if the node is at the
   

fio no   w illiams     b lackmore

leaf of the tree and the optimal objective value is less than the incumbent  the optimal solution is
updated  line      if the node is not at the leaf  the optimal objective value of the corresponding
subproblem is a lower bound for the optimal objective value of subsequent nodes  if the lower
bound is less than the incumbent  the node is expanded by enumerating the feasible execution time
assignments to an unassigned event  line      otherwise  the node is not expanded  and hence
pruned  details of this branch and bound process are described in later subsections 

figure      a  an example of ccqsp   b  a plan that satisfies the ccqsp in  a 

figure      a  the directed distance graph representation of the ccqsp in figure     a    b  the dgraph of  a   which shows the shortest distances between nodes   c  the updated d graph
after the execution time t     is assigned to the event e   

 e      
 e  

 e      

 
 

 

 e      

 

 ee 

 ee 
 a 

 
 

 
 

 
 

 b 

figure     branch and bound search over a schedule s  we assume that the time interval is t  
      a 
the node  e        is expanded  de                 given  e        
  max
since de     dmin
      
e                 from figure     b    b  the
  is
  node  emin
  
 
   
d
expanded  dee           given  e        and  e         since dmax
e
e
           from figure     c  

   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

walk through example we present a walk through example to give readers insight into the solution process  we consider a ccqsp shown in figure     a   the ccqsp specifies a mission to
go through a waypoint a and get to the goal region b while avoiding the obstacle c  as shown in
figure     b   we assume that the time interval is t       
figures    and    illustrate the solution process  the the p sulu planner algorithm is initialized
by assigning the execution time   to the start event e    figure     a  is the distance graph representation of the simple temporal constraints  dechter        of the ccqsp  note that a simple chance
constraint is equivalently represented as a pair of inequality constraints as follows 
s e   s e     l  u   s e   s e    u  s e    s e   l 
the two inequality constraints are represented by two directional edges between each two nodes in
the distance graph  the the p sulu planner runs an all pair shortest path algorithm on the distance
graph to obtain the d graph shown in figure     b   a d graph is a completed distance graph
where each edge is labeled by the shortest path length  the d graph represents the tightest temporal
constraints  then the algorithm enumerates the feasible execution time assignments for the event
e  using the d graph  according to the d graph  the execution time for the event e  must be between
    and      since we consider discrete time steps with the time interval t        the feasible
execution time steps for e  are            the idea behind enumerating all feasible execution time
steps is to assign an event  and thus to tighten the bounds of all unassigned events in order to ensure
feasibility 
at the node  e         the the p sulu planner solves the frr of the fixed schedule ccqsp
planning problem only with the end in a episode and the execution schedule  e         in other
words  it tries to find the optimal path that goes through a at t      but neglects the goal b and
obstacle c  if a solution exists  its optimal cost gives a lower bound on the objective value of all
feasible paths that go through a at t      assume here that such a solution does not exist  then 
the the p sulu planner prunes the node  e         and goes to the next node  e         it solves
the frr of the corresponding fixed schedule subproblem to find the best path that goes through a
at t      assume that the the p sulu planner finds a solution  then  the the p sulu planner expands
the node in the following process  first  it fixes the execution time  e        in the d graph  and
runs a shortest path algorithm in order to tighten the temporal constraints      c    then the the psulu planner uses the updated d graph to enumerate the feasible execution time assignments for the
event ee   which are         it visits both nodes and solves the fixed schedule subproblems exactly
with all episodes and a fully assigned schedule  for example  at the node  ee        it computes
the best path that goes through a at t     and reaches b at t     while avoiding the obstacle c  as
shown in figure     b   assume that the optimal objective values of the subproblems are      for
 ee       and     for  ee        the algorithm records the solution with  ee       and its cost
    as the incumbent 
the algorithm then backs up and visits the node  e         where a relaxed subproblem with
only the end in a episode is solved to obtain the lower bound of the objective value of subsequent
nodes  the lower bound turns out to be      which exceeds the incumbent  therefore  the branch is
pruned  since there are no more nodes to expand  the algorithm is terminated  and the incumbent
solution is returned 
   

fio no   w illiams     b lackmore

algorithm   implementation of expand function in line    of algorithm  
function expand ccqsp  queue  e  e    
   fix the distance between e  and e to  e t on the d graph of ccqsp
   update the d graph by running a shortest path algorithm
   choose e from e e
  choose an unassigned event
   e     e  e
max
   de         t  t   dmin
e     tt  de    
   for t in de    do
 
 e   e  e  

  
  e    
  update the partial schedule
t
 e   e  
  
queue  e     
   end for
    branching
algorithm   outlines the implementation of the expand   function in algorithm    it takes a partial
schedule  as an input  and adds to the queue a set of schedules that assign an execution time step to
an additional event e   in other words  the domain of the newly added schedules e has one more
assigned event than the domain of the input partial schedule e   the details of algorithm   are
explained in the following parts of this subsection 
      e numeration of f easible t ime s tep a ssignments using d   graph
when enumerating all feasible time steps  the simple temporal constraints must be respected  to
accomplish this  we use a d graph to translate the bounds on the durations between two events into
the bounds on the execution time step of each event  it is shown by dechter et al         that the
set of feasible execution times for an event e is bounded by the distance between e and e  on the dgraph  a d graph is a directed graph  where the weights of the edges represent the shortest distances
between nodes  as in figure     b   in order to obtain the d graph representation  we first translate
the simple temporal constraints into a directed distance graph  as in figure     a   the weight of an
edge between two nodes  events  corresponds to the maximum duration of time from the origin node
to the destination node  as specified by the corresponding simple temporal constraint  the distance
takes a negative value to represent lower bounds  the d graph  figure     b   is obtained from the
distance graph  figure     a   by running an all pair shortest path algorithm  dechter et al         
forward checking over a d graph the the p sulu planner algorithm incrementally assigns an
execution time step to each event  as explained in the walk through example  the p sulu planner
minimizes the search space through forward checking using the d graph  as in forward checking
methods of constraint programming  our method prunes all values of unassigned variables  i e  
execution times of an unassigned event  that violate simple temporal constraints  what is different
here from normal forward checking is that no back tracking is performed  due to decomposability of
d graph  the forward checking is conducted in the following process  once an execution time step
t is assigned to an event e  i e    e    t   the distance from e  to e is fixed to tt   and the distance
from e to e  is fixed to tt on the distance graph  line   of algorithm     recall that t is an
index of discretized time steps with a fixed interval t   while the temporal bounds are given as
real valued times  section       we then run a shortest path algorithm to update the d graph  line
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

    given a partial schedule   we denote the updated shortest distance from the start event e  to e

min
on the d graph by dmax
e     and the distance from e to e  by de    
for example  the execution time   is assigned to the event e  in figure     c   i e    e         
so the distance between e  and e  is fixed to   and the distance in the opposite direction is fixed
to    then we run a shortest path algorithm again to update the d graph  as a result  we obtain
min
updated distances dmax
ee          and dee          
max
dechter et al         showed that de    corresponds to the upper bound of the feasible execution time for an unassigned event e   while dmin
ee    corresponds to the negative of the lower bound 
hence  after a partial schedule  is assigned to events e  e   the updated domain for an unassigned
max
event e 
  e is bounded by dmin
e    and de     note that the domain of the execution time steps
max
e is included in  but not equal to  dmin
e     de      because we only consider discrete execution
time steps in a finite set t  during the forward checking  the p sulu planner only computes the
max

real valued bounds  dmin
e     de      the feasible values of an unassigned variable e are not

enumerated until the search tree is expanded to e  
enumerating the domain of execution time steps for an unassigned event we can readily
extract the feasible execution time steps for any unassigned event e 
  e from the updated d graph
with a partial schedule   let de    be the domain of execution time steps for an unassigned event
e 
  e   given a partial schedule   the finite domain de    is obtained as follows 
max
de         t  t   dmin
e     tt  de     

note that de    may be empty when the temporal constraints are tight  even though they are feasible  the user of the p sulu planner must make t small enough so that de is not empty 
for example  figure     b  is the d graph given the partial schedule   e          according to
the d graph  e  must be executed between     and      assuming that t      the set of feasible
execution time steps for e  is de                  as shown in figure     a   likewise  figure     c 
is the d graph given the partial schedule   e          e          the feasible execution time of ee
is between     and      hence  the set of feasible execution time steps for ee is dee             
as shown in figure     b  
the enumeration is conducted in line   in algorithm    then the algorithm creates extensions
of the input partial schedule by assigning each of the time steps to e  line     and puts the extended
partial schedules in the queue  line    
      e fficient variable o rdering of b ranch   and  b ound s earch
when choosing the next event to assign a time step in line   of algorithm    two variable ordering
heuristics are found to be effective in order to reduce computation time 
the first heuristic is our new convex episode first  cef  heuristic  which prioritizes events that
are not associated with non convex constraints  the idea of the cef heuristic is based on the
observation that subproblems of the branch and bound algorithm are particularly difficult to solve
when the episodes in a e   involve non convex state constraints  the remain in r   c   d
plane minus the obstacle c  episode in the walk through example in figures    is an example of
such non convex episodes  therefore  an effective approach to reduce the computation time of the
p sulu planner is to minimize the number of non convex subproblems solved in the branch andbound process  this idea can be realized by sorting the events so that the episodes with a convex
feasible region are always examined in the branch and bound process before the episodes with a
   

fio no   w illiams     b lackmore

non convex feasible region  in the walk through example  note that we visited the event e  before
the event ee in this example  this is because the end in a episode only involves a convex state
constraint while remain in r   c   d plane minus the obstacle c  is non convex 
the second one is the well known most constrained variable heuristic  when the p sulu planner
expands a node  it counts the number of feasible time steps of all unassigned events  and chooses
the one with the least number of feasible time steps  the second heuristic used to break ties in the
first heuristic 

    bounding
we next present the implementation of the obtainlowerbound   function in line   of algorithm   
the algorithm obtains the lower bound by solving a relaxed ccqsp planning problem with a fixed
partial schedule 
algorithm   outlines the implementation of the obtainlowerbound   function  it takes a partial
schedule  as an input  and outputs the lower bound of the objective function  as well as the optimal
control sequence  given the partial schedule   it constructs a relaxed optimization problem  which
only involves episodes whose start and end events are both assigned execution time steps  line     if
the optimization problem involves non convex constraints  the nira algorithm is used to obtain the
solution to the problem  line     otherwise we solve the frr of the convex optimization problem
to obtain the lower bound efficiently  line     if the input is a fully assigned schedule  e   e  
the corresponding node is a leaf node  in such case we obtain an exact solution to the ccqsp
planning problem with the fixed schedule  by running the nira algorithm  line     the details of
algorithm   are explained in the subsequent part of this subsection 

algorithm   implementation of obtainlowerbound function in line   of algorithm  
function obtainlowerbound ccqsp  e     returns optimal objective value and control sequence
   subprblem  problem   with  given ccqsp
   if e   e or a   has episodes with non convex state regions  then
  
 j    u  n      nira subprblem    algorithm  
   else
  
j  obtainlowrebound frr subprblem    algorithm  
  
u  n    
   end if
   return  j    u  n    

      r elaxed o ptimization p roblem with partial s chedule
we consider a relaxed optimization problem as follows 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

problem    relaxed optimization problem for a partial schedule 
j      

min
u  n   un
s t 

j u  n     x  n    

    

t  t   xt     at xt   b t ut


  

    
htc a k j xt  gc a k j  mc a k j  c a k  

cc a c a    ta    kka jja k

    



c a k     c  

    

kka  a c a   

where j     is the optimal objective value of the relaxed subproblem with a partial schedule  
recall that a   is the partial episode set of   which only involves the episodes whose start and
end nodes are both assigned execution time steps by the partial schedule   definition     for
notational simplicity  we merge the three conjunctions of      and obtain the following 
  
htc i j xti  gc i j  mc i j  c i   
cc iic    jjc i

note that this chance constraint is exactly the same as       except that a partial schedule  is
specified instead of a fully assigned schedule s  hence  problem   is an instance of a non convex
ccqsp planning problem with a fixed schedule  problem     and can be optimally solved by the
nira algorithm  also note that  is a fully assigned schedule at the leaf node of the branch andbound search tree 
the optimal objective value of problem   gives a lower bound of the optimal objective value
of all the subsequent subproblems in the branch and bound tree  this property is formally stated
in lemma   below  in order to prove this feature  we first define the concept of an extension of a
partial schedule as follows 
definition     a schedule s   e   t is an extension of a partial schedule    e   t if and only
if both assign the same time steps to all the events in the domain of  
 e    s e  e  e  
for example  in figure     b   a fully assigned schedule  s e         s e         s ee        and
 s e         s e         s ee        is an extension of a partial schedule   e          e         
the following lemma always holds 
lemma    if a schedule s is an extension of a partial schedule   then the optimal objective value
of problem   with  is a lower bound of the optimal objective value with s 
j      j   s  
proof  since  is a partial schedule  e  e  and hence a    a  also  since  e    s e  for all
e  e   all the state constraints in the chance constraint      of problem   with a partial schedule
 are included in the problem with a full schedule s  this means that the feasible state space of the
   

fio no   w illiams     b lackmore

problem with s is a subset of the one with   hence  if the chance constraint      of the problem
with s is satisfied  the chance constraint      of the problem with  is also satisfied  therefore  the
problem with  always results in a better  less  or equal cost than the problem with     because the
former has looser constraints 

for example  in figure     b   e  has been assigned an execution time step but ee has not 
therefore  at node  e         the chance constrained optimization problem with only the end in
a episode is solved with the partial schedule   e          e          see figure     a    it gives
a lower bound of the cost of the problems with the fully assigned schedules  s e         s e     
   s ee        and  s e         s e         s ee        
algorithm   obtains a lower bound by solving problem   exactly using the nira algorithm  if
it involves episodes with non convex state regions  line     if the function is called on a leaf node 
problem   is also solved exactly by nira  this is because the solutions of leaf subproblems are
candidate solutions of an optimal solution of the overall problem  hence  by solving them exactly 
we can ensure the optimality of the branch and bound search 
      f urther b ounding with frr
if the relaxed subproblem  problem    is convex  then the p sulu planner solves the frr of the subproblem  instead of solving it exactly with nira  in order to obtain a lower bound more efficiently
 line   of algorithm     many practical ccqsp execution problems have only one episode that
has a non convex feasible region  for example  in the ccqsp planning problem shown in figures
  and    only the safe region  r  minus the obstacles  is non convex  while provincetown  start
region   scenic region  and bedford  goal region  are convex  in such a case subproblems are
solved exactly only at the leaf nodes  and their lower bounds are always evaluated by approximate
solutions of frrs of the subproblems at the non leaf nodes 

   results
in this section we empirically demonstrate that the p sulu planner can efficiently operate various
systems within the given risk bound  we first present the simulation settings in section      section     presents the simulation results of the nira algorithm  and validates our claim that it can
efficiently compute a feasible and near optimal solution  section     demonstrates the p sulu planner on two different benchmark problems  the simulation results highlight the p sulu planners
capability to operate within the user specified risk bound  section     deploys the p sulu planner
on the pts scenarios  while section     applies the p sulu planner to the space rendezvous of an
autonomous cargo spacecraft to the international space station 
    simulation settings
recall that  as we stated in section      the p sulu planner takes four inputs  a stochastic plant model
m  an an initial condition i  a ccqsp p   and an objective function j  this section specifies m
and j  which are commonly used by all the problems in sections          we specify p and i for
each problem in the corresponding section 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

      s tochastic p lant m odel
this section explains the plant model used in sections            section     uses a different plant
model that is described in detail in section        we consider a point mass double integrator plant 
as shown in            parameters  such as umax   vmax        and t are set individually for each
problem  this plant model is commonly assumed in literatures on unmanned aerial vehicle  uav 
path planning  kuwata   how        leaute        wang  yadav    balakrishnan        
our state vector xt consists of positions and velocities in x and y directions  while the control
vector consists of the accelerations 
xt     x y vx vy  t  

ut     ax ay  t  

the plant model is specified by the following matrices 





    t  
t    
 
       t 


 
t     
  b   
   w   
a 
      

 t


 
     
 
 
t
t  t    ut     umax     cxt     vmax  
 

where
c 

       
       

   
   
   
   

 
 
 
 


 
  
     
  
 
    

 
 

the first constraint in      is imposed in order to limit the acceleration  this nonlinear constraint is
approximated by the following set of linear constraints 
t  t  r n  ut  umax  n              nr  
 
 
 n
 n
  sin
r n   cos
nr
nr
we choose nr       the second constraint in      is imposed in order to limit the velocity  we use
the same linear approximation as above 
      o bjective f unction
in sections             and      the cost function is the manhattan norm of the control input over the
planning horizon  as follows 
j xti   u   s   

t


  ux t      uy t     

t  

this cost function represents the total change in momentum  which is roughly proportional to the
fuel consumption of an aerial vehicle  note that a minimization problem with the piece wise linear
cost function above can be equivalently replaced by the following minimization problem with a
linear cost function and additional linear constraints by introducing slack variables x t and y t  
min

t


 x t   y t  

t  

s t 

t  t 

x t  ux t  x t  ux t  y t  uy t  y t  uy t
   

fio no   w illiams     b lackmore

in section        we minimize expected quadratic cost as follows 
t

 
 
j xti   u   s   
e u x t   u y t  

    

t  

      c omputing environment
all simulations except for the ones in section     are conducted on a machine with a dual core
intel xeon cpu clocked at      ghz  and with    gb of ram  the algorithms are implemented
in c c    and run on debian       os  the simulations in section     are conducted on a machine
with a quad core intel core i  cpu clocked at      ghz  and with   gb of ram  the algorithms
are implemented in matlab  and run on windows   os  we used ibm ilog cplex optimization
solver academic edition version      as the linear program solver  and snopt version       as
the convex optimization solver 
    nira simulation results
we first statistically compare the performance of nira with the prior art  recall that nira is
a solver for ccqsp planning problems with non convex state constraints and a fixed schedule
 problem     and used as a subroutine in the p sulu planner 
      c ompared a lgorithms
there are two existing algorithms that can solve the same problem 
   fixed risk allocation  blackmore et al           this approach fixes the risk allocation to a
uniform value  as a result  with an assumption that the cost function is linear  problem  
can be reformulated to a mixed integer linear programming  milp  problem  which can be
solved efficiently by a milp solver  such as cplex 
   particle control  blackmore          particle control is a sampling based method  which
uses a finite number of samples to approximate the joint chance constraints  the control
sequence is optimized so that the number of samples that violate constraints is less than c np  
where np is the total number of samples  the optimization problem is again reformulated into
milp  with an assumption that the cost function is linear 
we also compare nira with an mdp in section        although an mdp does not solve
exactly the same problem as nira  it can also avoid risk by considering a penalty cost of constraint
violations  the purpose of the comparison is to highlight the capabilities of chance constrained
planning to provide a guarantee on the probability of failure 
      p roblem s ettings
we compare closed loop and open loop niras with the two algorithms on a   d path planning
problem with a randomized location of an obstacle  as shown in figure     a vehicle starts from
       and heads to the goal at             while avoiding a rectangular obstacle  the obstacle with
edge length     is placed at a random location within the square region with its corners at        
                and         we consider ten time steps with the time interval t        we require that
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

the mean state at t      is at             the risk bound is set to          we set the standard
deviation of the disturbance as          we use the expected quadratic cost function given in      
the steady state lqr gain is used for the closed loop nira with q   i  and r        i    where
in is the n  n identity matrix and q and r are cost matrices for the state and control variables 
respectively 
 

nira  closed loop 
nira  open loop 
fixed risk allocation
particle control

   

nira  closed loop 
nira  open loop 

 
   

   

   

   

   

   

   
 

 
 

   

   

   

   

 

 

 a  nominal trajectories

   

   

   

   

 

 b  nominal trajectories and   ellipses

figure      a  an instance of the   d path planning problem used in        the obstacle with a
fixed size is randomly placed within the unit square for each run   b  the mean and the
standard deviation of the closed loop and open loop niras 

      p erformance c omparison
recall that the solution of the nira algorithm  which is used by the p sulu planner to solve subproblems  is not an exactly optimal solution to problem    since risk allocation  section        and
risk selection  section        replace the chance constraint      with its sufficient condition     
       since the chance constraint      is very difficult to evaluate  all the previously proposed
methods solve optimization with its approximation  we provide empirical evidence that our risk
allocation selection approach results in a solution that is significantly closer to the optimal solution
than the prior art  while satisfaction of the original constraint      is guaranteed 
we evaluate the suboptimality of the solutions by the difference between the risk bound    
       and the resulting probability of constraint violation  pf ail   estimated by a monte carlo simulation     pf ail is equal to the left hand side value of      in problem    hence  the chance
constraint      is equivalent to 
pf ail   
the strictly optimal solution to this problem should achieve pf ail     although such an exact
solution is unavailable  since there is no algorithm to solve problem   exactly  a solution is suboptimal if pf ail     and their ratio  pf ail represents the degree of suboptimality  a solution
violates the chance constraint if pf ail    
   

fio no   w illiams     b lackmore

algorithm
nira  closed loop 
nira  open loop 
fixed risk allocation
particle control
     particles 

computation time
 sec 
          
          
          

probability of failure

cost

              
              
                 

            
            
            

          

            

            

table    the averages and the standard deviations of the computation time  the probability of constraint violation  and the cost of the four algorithms  each algorithms are run     times
with random location of an obstacle  the risk bound is set to          note that particle
control results in less cost than the other two methods because its solutions violate the
chance constraint 

table   compares the performance of the four algorithms  the values in the table are the averages and the standard deviations of     runs with random locations for the obstacle  the probability
of constraint violation  pf ail   is evaluated by monte carlo simulations with     samples 
comparison of closed loop and open loop niras before comparing nira with existing algorithms  we first compare the two variants of nira  the closed loop and open loop niras  table
  shows that the closed loop nira results in less cost than the open loop nira  importantly  the
former outperforms the latter in all the     test cases  this reduction in cost by the closed loop
approach is explained by figure     b   which shows the   ellipses of the probability distribution
of the state  since the closed loop nira assumes a feedback control  the future position is less uncertain  as a result  the plan generated by the closed loop nira is less conservative  in fact  table
  shows that pf ail of the closed loop nira is closer to the risk bound than that of the open loop
nira  however  the closed loop planning problem requires about twice as much solution time as
the open loop one since it is more complicated due to additional chance constraints on control input 
comparison with the fixed risk allocation approach table   shows that closed and open niras
result in the average probabilities of failure        and        respectively  which is within the userspecified risk bound          on the other hand  the fixed risk allocation approach results in a
very conservative probability of failure  pf ail             which is     smaller than   this
result indicates that the solution by nira is significantly closer to the exactly optimal solution than
the fixed risk allocation approach  in fact  the nira algorithm results in less cost than the fixed risk
allocation approach in all the     runs  this is because it optimizes the risk allocation while the
fixed risk allocation approach uses the predetermined risk allocation 
figure    shows the suboptimality measure  pf ail of the open loop nira with different settings of the risk bound   for all values of   the suboptimality of nira is significantly smaller
than the fixed risk allocation approach  the graph shows a tendency that the suboptimality of nira
gets smaller for less   while the suboptimality of the fixed risk allocation approach is approximately constant 
nira achieves the improvement in solution optimality with a cost of computation time  table
  shows that nira takes longer computation time than the risk allocation approach by the factor
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

pfail  

figure     suboptimality of nira and the fixed risk allocation approach  strictly optimal solution
has  pf ail      a smaller value of  pf ail indicates that the solution is suboptimal 

of two  hence  nira and the fixed risk allocation approach provide users with a trade off between
suboptimality and computation time 
comparison with the particle control table   shows that the average probability of failure of
the particle control approach is higher than the risk bound          meaning that the approach
tends to generate infeasible solutions  on the other hand  nira guarantees the satisfaction of the
chance constraint since it employs a conservative approximation of the joint chance constraint 
particle control has a guarantee that its solution converges to an optimal solution when increasing the number of samples to infinity  however  using a large number of samples is impractical 
since computation time and memory usage grow exponentially as the number of samples increases 
for example  we used only     samples in the analysis in table    when using     samples  it took
     seconds  about     hours  to solve the same problem with the obstacles centered at            
computation with      samples could not be conducted  because of the shortage of memory  on
the other hand  the computation time of nira is significantly shorter than pc  while guaranteeing
the feasibility of the solution 
      o ptimal p lanning with e xpected c ost
next we demonstrate the capability of the p sulu planner to handle expected cost  instead of the cost
of the expected trajectory  for the same path planning problem presented above  specifically  we
consider the expected quadratic cost function shown in       when conducting open loop planning 
this cost function can be transformed to a function of nominal control inputs with a constant term
by using the equality       however  when performing closed loop planning  this equality is not
exact  due to controller saturation  nevertheless  we use      as an approximation of the expected
cost  as explained in section        in this subsection we empirically evaluate the error of this
approximation 
   

fio no   w illiams     b lackmore

approximate expected cost
                        

actual expected cost
                        

table    comparison of the approximate expected cost obtained by the closed loop nira with the
actual expected cost  the table shows the mean and variance of     runs with random
location of the obstacle 

table   compares the approximate expected cost function value obtained by the closed loop
nira with the actual expected cost estimated by monte carlo simulation with one million samples 
the path planning problem is solved     times with a randomized location of the obstacle  the risk
bound is set to          as shown in the table  the approximate cost almost exactly agrees with
the actual cost  this is because our closed loop planning approach explicitly bounds the risk of
controller saturation 
      c omparison with mdp
next we compare nira with an mdp formulation  for the sake of tractability of the mdp  we
consider a single integrator dynamics with a two dimensional state space and a two dimensional
control input  which specifies the velocity of a vehicle  the rest of the problem setting is the same 
except that the state space is discretized into a     by     grid  we implement a finite horizon
mdp based path planner  which imposes a penalty c on an event of failure and minimizes the
expected cost based on explicit state dynamic programming  the mdp based path planner imposes
a cost as follows 
 
  t
 
 
u x t   u y t   ci xt    
e
t  

where i xt   is an indicator function that is one if xt is in a obstacle and zero otherwise  the
resulting optimization problem is solved via dynamic programming 
we ran the mdp based path planner with three values of penalty c         and      for each
choice of c  we conducted     simulations with a randomized obstacle position  figure    shows
a typical output of the mdp based path planner  note that  with a small penalty  c       the path
planner chooses to take a      risk of failure by ignoring the obstacle  this is simply because
the penalty of failure is smaller than the expected reduction of cost by going through an obstacle 
an issue of utilitarian approaches such as mdps is that minimization of unconstrained cost can
sometimes lead to such impractical solution 
table   shows the mean and the standard deviation of path lengths  as well as the maximum 
minimum  and the mean of the resulting probability of failure among the     runs  as expected 
by imposing a larger penalty  the mdp path planner chooses a more risk averse path  which has a
longer nominal path length  in this sense  an mdp can also conduct a trade off between cost and
risk  mdp is particularly useful when the primary concern of the user is the cost of failure instead of
the probability of failure  on the other hand  when a user would like to impose a hard bound on the
probability of failure  our chance constrained planning approach has an advantage  observe that 
even with the same penalty value  the mdp based path planner results in a wide range of failure
probabilities depending on the location of the obstacle  most notably  with c       some of the
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

paths move directly across the obstacle  and in so doing  accept a      probability of failure  while
others go around the obstacle  undesirable behaviors  such as crossing an obstacle  are likely to
be suppressed by imposing a greater penalty  but without a guarantee  moreover  imposing a heavy
penalty on failure often results in an overly conservative  risk averse solution  on the other hand 
the behavior of nira with regarding to risk is predictable  in a sense that the path is guaranteed
to go around the obstacle  regardless of its location  this is because the chance constraint requires
that there exists a margin between the path and the boundary of the obstacle  the p sulu planner
inherits this property from nira 

 

   

   

   

   

c  
c   
c    

 
 

   

   

   

   

 

figure     optimal paths generated by an mdp based planner with different penalty levels   c  the
red rectangle represents an obstacle  note that the path with c     cuts through the
obstacle 

penalty c

path length

 
  
   

          
          
          

probability of failure
max
mean min
                 
                 
                  

table        runs with a randomized obstacle location

    the p sulu planner simulation results
next we present the simulation results of the p sulu planner on two problems  in order to illustrate
its capability of planning with schedule constraints  we also empirically evaluate the scalability of
p sulu 
   

fio no   w illiams     b lackmore

figure     a sample ccqsp for a personal aerial vehicles path planning and scheduling problem 

figure     output of the p sulu planner for the ccqsp in figure    with three different settings
of the risk bound obs   compared to the path planned by a deterministic planner  sulu 
which does not consider chance constraints 

      path p lanning with o bstacles
in this simulation we test the p sulu planner on a path planning problem in the environment shown
in figure     the input ccqsp is shown in figure     the ccqsp requires a vehicle to arrive at
the goal region within    minutes  by going through waypoint   and waypoint   with the temporal
constraints specified in figure     it also imposes two chance constraints  one that requires the
vehicle to achieve the time evolved goals with     certainty  and another that requires the vehicle
to limit the probability of violating the obstacles to obs   we set t     and             
figure    shows the plans generated by the p sulu planner with three different risk bounds 
obs              and         the computation times were      seconds       seconds  and
     seconds  respectively  figure    also shows the plan generated by sulu  a deterministic planner
that does not explicitly consider uncertainty  leaute   williams         observe that sulu leaves no
margin between the path and obstacles  as a result  the sulu path results in a       probability of
hitting obstacles  as estimated by a monte carlo simulation with     samples  on the other hand  the
p sulu planner leaves margins between the path and the obstacles in order to satisfy the risk bound 
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

specified in the chance constraint  the margins are larger for the plans with smaller risk bounds  the
probabilities of failure of the three plans generated by the p sulu planner  estimated by monte carlo
simulations with     samples  are                 and           respectively  hence the chance
constraints are satisfied  the schedule optimized by the p sulu planner is  s e         s e     
   s e          s ee          which satisfies all the temporal constraints in the ccqsp 
in figure     it appears that the path cuts across the obstacle  this is due to the discretization
of time  the optimization problem only requires that the vehicle locations at each discrete time step
satisfy the constraints  and does not consider the state in between  this issue can be addressed by a
constraint tightening method  kuwata        
      path p lanning in an i ndoor e nvironment

figure     a sample ccqsp for a path planning problem in an indoor environment 

      
     
       

   
 
goal
   
   
   
   
 

start

   
   

 

   

   

   

   

 

   

figure     output of the p sulu planner for the ccqsp in figure    with three different settings
of the risk bound obs  

we next give the p sulu planner the ccqsp shown in figure     which simulates a path planning problem in an indoor environment  a vehicle must get to the goal region at the other side of
the room in three to five seconds  the remain in safe region episode requires the vehicle to stay
   

fio no   w illiams     b lackmore

within the room and outside of the obstacle during the five second planning horizon  the ccqsp
imposes two chance constraints shown in figure     we set t       and                
given this ccqsp  the planner faces a choice  heading straight to the goal by going through
the narrow passage between the left wall and the obstacle minimizes the path length  but involves
higher risk of constraint violation  making a detour around the right side of the obstacle involves
less risk  but results in a longer path 
figure    shows the p sulu planners outputs with obs            and       the computation times were      seconds       seconds  and      seconds  respectively  the result is consistent
with our intuition  when the p sulu planner is allowed a     risk  the planner chooses to go straight
to the goal  resulting in the cost function value of       when the user gives a    or      risk bound 
it chooses the risk averse path  resulting in the cost function values of      and       respectively 
this example demonstrates the p sulu planners capability to make an intelligent choice in order to
minimize the cost  while limiting the risks to user specified levels 
      s calability a nalysis
in this subsection we conduct an empirical analysis of the scalability of the p sulu planner  as the
environment becomes increasingly constrained   as shown in figure     we measured the computation time to solve a path planning problem with different numbers of obstacles and waypoints  in
all simulations  the path starts at         and ends in a square region centered at           figure   
shows twenty simulation results  with zero to three obstacles and zero to four waypoints  obstacles
and waypoints are represented by blue and red squares in the figure  respectively  the positions of
the center of the obstacles are                    and           while the positions of the center of the
waypoints are                            and          the computation time is shown in the caption of
each subfigure in figure    
by comparing the results in figure    horizontally  we observe exponential growth in computation time with the number of obstacles  this result is expected since the number of disjunctive
clauses in the state constraint of the p sulu planner increases exponentially with the number of
obstacles  building a tractable extension of the p sulu planner for a large number of obstacles is
future work  on the other hand  by comparing the results vertically  we find that the computation
time with the same number of obstacles and different number of waypoints stays in the same order
of magnitude  this is because adding an extra waypoint only increases the number of conjunctive
clauses in the state constraints 
in the remaining sections we describe the application of psulu to two real world problems  air
vehicle and space vehicle control  a third application  building energy management  using a variant
of the p sulu planner  is reported by ono  graybill  and williams        
    pts scenarios
next  we deploy the p sulu planner on pts scenarios  the robotic air taxi system introduced in
section   
      s cenarios
we consider three scenarios  specified by the ccqsps shown in figure     scenarios   and   are
similar to the scenic flight scenario introduced at the beginning of this paper  see figure     in
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

      sec

      sec

      sec

      sec

      sec

      sec

      sec

      sec

      sec

      sec

      sec

     sec

      sec

      sec

      sec

     sec

      sec

      sec

      sec

     sec

  
  
 

  
  
 

  
  
 

  
  
 

  
  
 
 

 

  

  

 

 

  

  

 

 

  

  

 

 

  

  

figure     computation time of the p sulu planner for a path planning problem with different numbers of obstacles and waypoints 

scenario    a personal aerial vehicle  pav  takes off from runway    of provincetown municipal
airport  kpvc  in provincetown  massachusetts  fly over a scenic region  and lands on runway   
of hanscom field  kbed  in bedford  massachusetts  the vehicle is required to stay within the
scenic region at least for   minutes and at most for    minutes  the entire flight must take more than
   minutes and less than    minutes  scenario   is the same as scenario    except for the runways
used for take off and landing 
scenario   simulates a leisure flight off the coast of massachusetts  a pav takes off runway  
of provincetown municipal airport  and flies over two regions where whales are often seen  then
the vehicle lands on runway    of hanscom field 
we place three no fly zones  as shown in figure     the entire flight must take more than   
minutes and less than    minutes  each scenario has three chance constraints   c    c    c     as shown
in figure     the first one  c    is concerned with the vehicles operation  it requires the vehicle to
take off from and land on the right runways at the right airports with less than      probability
of failure  the second chance constraint  c    is concerned with the leisure activities  it requires
the vehicle to fly over the scenic regions with less than      probability of failure  finally  c  is
concerned with the passengers safety  it requires the vehicle to limit the risk of penetrating the
no fly zones to        
   a runway of an airport is specified by a number  which represents the clockwise angle from the north  for example 
runway   points    degrees away from the north 

   

fio no   w illiams     b lackmore

      p lant parameters
we set umax       m s  which approximates the maximum cruise speed of private jet airplanes 
such as gulfstream v  the maximum acceleration is determined from the maximum bank angle 
assuming that an aircraft is flying at a constant speed  the lateral acceleration a is given as a function
of the bank angle  as follows 
a   g  tan  
where g is the acceleration of gravity  typically passenger aircraft limits the bank angle to   
degrees for passenger comfort  even though the aircraft is capable of turning with a larger bank
angle  hence  we use 
umax       m s   tan            m s   
we set        m and t      seconds 
      s imulation r esults
figure    shows the paths planned by the p sulu planner for the three scenarios  in all the scenarios 
all the episode requirements in the ccqsps in figure    are met within the specified temporal and
chance constraints 
table   compares the performance of sulu and the p sulu planner  as expected  sulus plans
result in excessive probabilities of failure in all scenarios  this is because sulu does not consider
uncertainty in the planning process  although the pav is subject to disturbance in reality  on the
other hand  the p sulu planner successfully limits the probability of failure within the user specified
risk bounds for all three scenarios  furthermore  although the p sulu planner significantly reduces
the risk of failure  its cost is higher than that of sulu only by               such a capability of
limiting the risk and maximizing the efficiency at the same time is a desirable feature for pts 
which transports passengers 
scenario number
planner
computation time  sec 
pf ail  
pf ail  
pf ail  
cost function value j 

 
sulu
    
     
     
     
    

 

p sulu
    
         
         
         
    

sulu
    
     
     
     
    

p sulu
   
         
         
         
    

 
sulu
    
     
     
     
    

p sulu
   
         
         
         
    

table    performance comparison of the prior art  sulu  and the p sulu planner  pf ail     pf ail    
and pf ail   represent the probabilities of failure regarding the chance constraints c    c   
and c  in figure     respectively 

   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

figure     the ccqsps for the pts scenarios 

figure     the paths planned by the p sulu planner 

   

fio no   w illiams     b lackmore

as shown in table    the p sulu planner typically takes several minutes to compute the plan 
this length of computation time would be allowed for pts applications  since we assume that the psulu planner is used for preplanning  before take off  the passengers of a pav specify requirements 
and the p sulu planner creates a risk sensitive flight plan  we assume that a real time plan executive
executes the plan after take off 
we note that it is more desirable to have a real time risk sensitive plan executive  since risk factors  such as the location of storms  change over time  our future work is to reduce the computation
time of the p sulu planner so that it can be used for real time execution 
    space rendezvous scenario
the p sulu planner is a general planner whose application is not limited to a specific plant model 
in order to show the generality of the planner  we deployed the p sulu planner on a system whose
plant model is significantly different from pts 
specifically  we chose an autonomous space rendezvous scenario of the h ii transfer vehicle
 htv   shown in figure     as our subject  htv is an unmanned cargo spacecraft developed by the
japanese aerospace exploration agency  jaxa   which is used to resupply the international space
station  iss   collision of the vehicle with the iss may result in a fatal disaster  even if the collision
speed is low  for example  in august       the russian unmanned resupply vehicle progress m   collided with the mir space station in a failed attempt to automatic rendezvous and docking 
as a result  one of the modules of mir was permanently depressurized  in order to avoid such an
accident  htv is required to follow a specified safety sequence during the automated rendezvous 
as described in the following subsection 

figure     h ii transfer vehicle  htv   a japanese unmanned cargo vehicle  conducts autonomous
rendezvous with the international space station  image courtesy of nasa 

      htv r endezvous s equence
in htvs autonomous rendezvous mission  the final approach phase starts from the approach initiation  ai  point  which is located   km behind the iss  as shown in figure     first  htv moves
to the r bar initiation  ri  point  which is located     m below the iss  guided by the relative gps
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

navigation  at the ri point  htv switches the navigation mode to rendezvous sensor  rvs  navigation  in rvs navigation  htv measures the distance to iss precisely by beaming the laser to the
reflector placed on the nadir  earth facing  side of the iss  then  htv proceeds to the hold point
 hp   located     m below the iss  it is required to hold at hp in order to perform a     degree
yaw around maneuver  the new orientation of htv allows the vehicle to abort the rendezvous
quickly in case of emergency  after the yaw around maneuver  htv resumes the approach  and
holds again at the parking point  pp   which is    m below the iss  finally  htv approaches at
a distance of    meters from the iss  and stops within the capture box  cb  of the isss robotic
arm  the robotic arm then grabs htv and docks it to the iss  please refer to the report by japan
aerospace exploration agency        for the details of the rendezvous sequence 
ri

hp

pp cb

y
iss

    m

   m    m

iss orbit

     m

x

earth
ai  approach initiation
ri  r bar initiation
hp  hold point
pp  parking point
cb  capture box

ai point
      m

figure     htvs final approach sequence  japan aerospace exploration agency        
the rendezvous sequence described above is represented by the ccqsp shown in figure     in
addition to the time evolved goals specified in the actual rendezvous sequence  we specify temporal
constraints and chance constraints in the simulation  as shown in the figure  we require htv to hold
at each intermediate goal for at least     seconds  the transition between the goals must take at
least     seconds  in order to make sure that the vehicle moves slowly enough  the entire mission
must be completed within      seconds    hour    minutes   we require htv to stay within the
safe zone  a conic area below the iss  during the rvs navigation phase with       probability 
since otherwise the laser may not be reflected back to htv properly  we assume that the goals are
square regions  with    m sides for ri and hp    m sides for pp  and   m sides for cb  finally  we
require that htv achieves all the time evolved goals with       success probability 
      o rbital dynamics
the rendezvous can be considered as a two body problem  where a chaser spacecraft  e g   htv 
moves in relation to a target spacecraft  e g   iss   which is in a circular orbit  in such a problem 
it is convenient to describe the motion of the chaser spacecraft using a rotating frame that is fixed
to the target space craft  known as a hill coordinate frame  schaub   junkins         as shown
in figure     we set the x axis pointing away from the center of the earth and the y axis along the
   

fio no   w illiams     b lackmore

figure     a ccqsp representation of the htvs final approach sequence  we assume the same
time evolved goals as the ones used for actual flight missions  the temporal constraints
and the chance constraints are added by the authors 

orbital velocity of the target spacecraft  since htvs path is within the x y plane  we dont consider
the z axis 
it is known that the relative motion of the chase spacecraft in the hill coordinate frame is described by the following clohessy wiltshire  cw  equation  vallado        
x     y       x   fx
y     x   fy
where  is the angular speed of the target spacecrafts orbit  and fx and fy are the force per unit
mass  or the acceleration in x and y directions  the first terms on the right hand sides represent the
coriolis force 
an object that follows the cw equation moves in an unintuitive manner  its unforced motion is
not in a straight line due to the coriolis effect  in general  an object cannot stay at the same position
without external force  for example  figure    shows the fuel optimal path to visit two waypoints 
a and b  and come back to the start  as can be seen in the figure  the optimal path is not typically a
straight line  the virtue of the p sulu planner is that it can handle such irregular dynamic systems
in the same way as regular systems  just by setting the a and b matrices of our plant model    
appropriately 
the state vector consists of positions and velocity in the x  y plane 
x    x y vx vy  t
we obtain the discrete time cw equation using the impulse invariant discretization 
xk     axk   buk  
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

a

start

b

figure     a typical motion of spacecraft in the hill coordinate frame  the solid line is the fuel
optimal path to visits a and b and returns to the start in    minutes  note that the
optimal path is not a straight line in the hill coordinate frame 

where




a   




b   


     cos t  
  t  sin t   
  sin t  
     cos t   

 
 
 
 

sin t  

   cos t   


   cos t   

  sin t  
  t


cos t  
  sin t  


  sin t  
  cos t     

sin t  

   cos t   


   cos t   

  sin t  
  t


cos t  
  sin t  

  sin t  
  cos t     












we use the isss orbital angular speed              rad sec  at which the station goes around the
earth in    minutes  we choose the interval t       seconds  the number of time steps n is
set to     hence  the entire plan is      seconds    hour and    minutes   in the discretization  we
assumed impulse inputs as follows 
 

fx
fy

 
 

n
 


 t  t  k uk  

k  

where    is the dirac delta function  such an assumption is justified because the thrusters of the
reaction control system  rcs  of the spacecraft  which are used for the final approach maneuver 
operate for a very short duration            seconds  at each burn  wertz   wiley j  larson        
we consider stochastic uncertainty w  added to the discrete time dynamic equation 
xk     axk   buk   w 
such an assumption of additive uncertainty is commonly used in past research on autonomous
rendezvous and formation flight in space  shields  sirlin    wette        smith   hadaegh       
   

fio no   w illiams     b lackmore

campbell   udrea         we assume that w has a
following covariance matrix 
  
  
 
  
   
w   
  
 
 
 

zero mean gaussian distribution  with the

 
 
 
 


 
  
 
  
 

      o bjective f unction
we employ an objective function j that requires for the p sulu planner to minimize the fuel consumption  it follows from the tsiolkovsky rocket equation that the fuel consumption of spacecraft is
proportional to the total change in velocity  called delta v or v  wertz   wiley j  larson        
the total fuel consumption is the summation of the fuel consumption of reaction jets in x and y
directions for all time steps  hence our objective function is described as follows 
j u  n     vx   vy
  n   t
 
 fx      fy  dt
 
fi
fi fi
fi
k n
fi fi  n   t
fi
  fifi  n   t
fi fi
fi
 
 t  t  k ux k dtfi   fi
 t  t  k uy k dtfi
fi
fi  
fi fi  
fi
 

k  
k n
 

 ux k      uy k   

k  

      s imulation r esult
figure    shows the planning result of the p sulu planner  we compare the result with sulu  as
well as a nominal planning approach  in which we assume that htv moves from ai to ri using a
two impulse transition  called cw guidance law   matsumoto  dubowsky  jacobsen    ohkami 
      vallado         from ri to cb  it follows a predetermined path that goes through the center
of the safe zone  as shown in figure     b   with a constant speed 
as shown in figure     the optimal paths generated by the p sulu planner and sulu are not
straight  such curved paths exploit the coriolis effect to minimize fuel consumption 
table   compares the performance of the three planning approaches  the two rows regarding
the probabilities of failure correspond to the two chance constraints specified in the ccqsp  shown
in figure     the probabilities are evaluated by monte carlo simulation with one million samples 
as expected  the probabilities of failure of the path generated by the p sulu planner are less
than the risk bounds specified by the ccqsp  shown in figure     on the other hand  once again 
sulus path results in almost      probability of failure  this is because sulu minimizes the fuel
consumption without considering uncertainty  the resulting path pushes against the boundaries
of feasible regions  as is evident in figure     c   also note that  although the p sulu planner
significantly reduces the probability of constraint violation compared with sulu  its cost  delta v 
is higher than sulu only by       the p sulu planner results in a significantly smaller cost  delta
v  than the nominal planning approach  the      m sec reduction in delta v is equivalent to an
     kg saving of fuel  assuming the         kg mass of the vehicle and the     sec specific impulse
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

figure     planning results of sulu  the p sulu planner  and a nominal planning approach  the
input ccqsp is shown in figure    

 isp   of the thrusters  although the p sulu planner takes longer to compute the plan than the other
two approaches  the      second computation time is negligible compared with the   hour and   
minute plan duration 

computation time  sec 
probability of failure pf ail  navigation 
probability of failure pf ail  goals 
cost function value  delta v  j   m sec 

sulu
   
    
   
    

the p sulu planner
    
      
      
    

nominal
    
     
     
    

table    performance comparison of sulu  the p sulu planner  and the nominal approach on the
htv rendezvous scenario 

   

fio no   w illiams     b lackmore

   conclusions
this article introduced a model based planner  the p sulu planner  which operates within userspecified risk bounds  the p sulu planner optimizes a continuous control sequence and a discrete
schedule  given as input a continuous stochastic plant model  an objective function  and a newly
developed plan representation  a chance constrained qualitative state plan  ccqsp   a ccqsp
involves time evolved goals  simple temporal constraints  and chance constraints  which specify the
users acceptable levels of risk on subsets of the plan 
our approach to developing the p sulu planner was two fold  in the first step  we developed
an efficient algorithm  called non convex iterative risk allocation  nira   that can plan in a nonconvex state space but for a fixed schedule  we solved the problem based on the key concept of
risk allocation and risk selection  which achieves tractability by allocating the specified risk to individual constraints and by mapping the result into an equivalent disjunctive convex program  the
nira algorithm employs a branch and bound algorithm to solve the disjunctive convex program 
its subproblems are fixed schedule ccqsp problems with a convex state space  which can be solved
by our previously developed algorithms  blackmore   ono         we developed a novel relaxation method called fixed risk relaxation  frr   which provides the tightest linear relaxation of the
nonlinear constraints in the convex subproblems 
in the second step  we developed the p sulu planner  which can solve a ccqsp planning problem with a flexible schedule  the scheduling problem was formulated as a combinatorial constrained
optimization problem  cop   which is again solved by a branch and bound algorithm  each subproblem of the branch and bound search is a ccqsp planning problem with a fixed schedule  which
is solved by nira  the domain of the feasible schedule is pruned by running a shortest path algorithm on the d graph representation of the given temporal constraints  the lower bounds of the optimal objective value of the subproblems are obtained by solving fixed schedule ccqsp planning
problems where a subset of the state constraints are imposed  we proposed an efficient variable
ordering that prioritizes convex subproblems over non convex ones  we demonstrated the p sulu
planner on various examples  from a personal aerial transportation system to autonomous space
rendezvous  and showed that it can efficiently solve ccqsp planning problems with small suboptimality  compared to past algorithms 

acknowledgments
this paper is based upon work supported in part by the boeing company under grant no  mitba gta   and by the national science foundation under grant no  iis          any opinions 
findings  and conclusions or recommendations expressed in this publication are those of the authors
and do not necessarily reflect the view of the sponsoring agencies  we would like to thank michael
kerstetter  scott smith  ronald provine  and hui li at boeing company for their support  thanks
also to robert irwin for advice on the draft 

references
acikmese  b   carson iii  j  m     bayard  d  s          a robust model predictive control algorithm
for incrementally conic uncertain nonlinear systems  international journal of robust and
nonlinear control                
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

aircraft owners and pilots association air safety foundation              joseph t  nall report
  accident trands and factors for       
altman  e          constrained markov decision processes  stochastic modeling  chapman  
hall crc 
alur  r   feder  t     henzinger  t  a          the benefits of relaxing punctuality  journal of the
acm     
bacchus  f     kabanza  f          planning for temporally extended goals  annals of mathematics
and artificial intelligence  pp      
balas  e          disjunctive programming  annals of discrete mathematics 
bertsekas  d  p          dynamic programming and optimal control volume i  third edition  
athena scientific 
bertsekas  d  p     tsitsiklis  j  n          neuro dynamic programming   st edition   athena
scientific 
blackmore  l          a probabilistic particle control approach to optimal  robust predictive control 
in proceedings of the aiaa guidance  navigation and control conference 
blackmore  l   li  h     williams  b  c          a probabilistic approach to optimal robust path
planning with obstacles  in proceedings of american control conference 
blackmore  l     ono  m          convex chance constrained predictive control without sampling 
in proceedings of the aiaa guidance  navigation and control conference 
boyan  j  a     littman  m  l          exact solutions to time dependent mdps  in in advances
in neural information processing systems  pp            mit press 
boyan  j  a     moore  a  w          generalization in reinforcement learning  safely approximating the value function  advances in neural information processing systems   
campbell  m  e     udrea  b          collision avoidance in satellite clusters  in proceedings of
the american control conference 
charnes  a     cooper  w  w          chance constrained programming  management science    
     
coles  a  j   coles  a   fox  m     long  d          colin  planning with continuous linear numeric
change  j  artif  intell  res   jair           
dechter  r          constraint processing  elsevier 
dechter  r   meiri  i     pearl  j          temporal constraint networks  artificial intelligence     
     
dolgov  d     durfee  e          stationary deterministic policies for constrained mdps with multiple rewards  costs  and discount factors  in in proceedings of the nineteenth international
joint conference on artificial intelligence  ijcai     pp           
feng  z   dearden  r   meuleau  n     washington  r          dynamic programming for structured
continuous markov decision problems  in proceedings of the proceedings of the twentieth
conference annual conference on uncertainty in artificial intelligence  uai      pp     
     arlington  virginia  auai press 
   

fio no   w illiams     b lackmore

fleming  w     mceneaney  w          risk sensitive control on an infinite time horizon  siam
journal on control and optimization                  
fox  m     long  d          modelling mixed discrete continuous domains for planning  journal
of artificial intelligence research             
geibel  p     wysotzki  f          risk sensitive reinforcement learning applied to control under
constraints  journal of artificial intelligence research            
goulart  p  j   kerrigan  e  c     maciejowski  j  m          optimization over state feedback
policies for robust control with constraints  automatica                  
hofmann  a  g     williams  b  c          robust execution of temporally flexible plans for bipedal
walking devices  in proceedings of the international conference on automated planning and
scheduling  icaps     
jacobson  d          optimal stochastic linear systems with exponential performance criteria and
their relation to deterministic differential games  automatic control  ieee transactions on 
                
japan aerospace exploration agency         htv   mission press kit  available on line at http 
  www jaxa jp countdown h bf  pdf presskit htv e pdf 
kuwata  y     how  j  p          cooperative distributed robust trajectory optimization using receding horizon milp  ieee transactions on control systems technology                
kuwata  y          real time trajectory design for unmanned aerial vehicles using receding horizon
control  masters thesis  massachusetts institute of technology 
kvarnstrom  j     doherty  p          talplanner  a temporal logic based forward chaining planner 
annals of mathematics and artificial intelligence 
lagoudakis  m  g     parr  r          least squares policy iteration  journal of machine learning
research          
leaute  t          coordinating agile systems through the model based execution of temporal plans 
masters thesis  massachusetts institute of technology 
leaute  t     williams  b  c          coordinating agile systems through the model based execution of temporal plans  in proceedings of the twentieth national conference on artificial
intelligence  aaai  
li  h     williams  b  c          generalized conflict learning for hybrid discrete linear optimization  in proc    th international conf  on principles and practice of constraint programming 
li  h  x          kongming  a generative planner for hybrid systems with temporally extended
goals  ph d  thesis  massachusetts institute of technology 
matsumoto  s   dubowsky  s   jacobsen  s     ohkami  y          fly by approach and guidance
for uncontrolled rotating satellite capture  in proceedings of aiaa guidance  navigation  and
control conference and exhibit 
nemirovski  a     shapiro  a          convex approximations of chance constrained programs 
siam journal on optimization             
   

fip robabilistic p lanning for c ontinuous dynamic s ystems under b ounded r isk

oldewurtel  f   jones  c  n     morari  m          a tractable approximation of chance constrained
stochastic mpc based on affine disturbance feedback  in proceedings of conference on decision and control 
ono  m          closed loop chance constrained mpc with probabilistic resolvability  in proceedings of the ieee conference on decision and control 
ono  m   graybill  w     williams  b  c          risk sensitive plan execution for connected sustainable home   in proceedings of the  th acm workshop on embedded systems  buildsys  
ono  m     williams  b  c       a   an efficient motion planning algorithm for stochastic dynamic
systems with constraints on probability of failure  in proceedings of the twenty third aaai
conference on artificial intelligence  aaai     
ono  m     williams  b  c       b   iterative risk allocation  a new approach to robust model
predictive control with a joint chance constraint  in proceedings of   th ieee conference on
decision and control 
prekopa  a          the use of discrete moment bounds in probabilistic constrained stochastic
programming models  annals of operations research           
richards  a     how  j          robust stable model predictive control with constraint tightening 
in american control conference        p    pp 
sanner  s          relational dynamic influence diagram language  rddl   language description 
available at http   users cecs anu edu au ssanner ippc      rddl 
pdf 
schaub  h     junkins  j  l          analytical mechanics of space systems  american institute of
aeronautics and astronautics  inc 
shields  j   sirlin  s     wette  m          metrology sensor characterization and pointing control
for the formation interferometer testbed  fit   in proceedings of ieee aerospace conference 
smith  r     hadaegh  f          distributed estimation  communication and control for deep space
formations  iet control theory and applications 
stoorvogel  a          the h control problem  a state space approach  prentice hall 
vallado  d  a          fundamentals of astrodynamics and applications  second edition  microcosm press 
van hessem  d  h          stochastic inequality constrained closed loop model predictive control
with application to chemical process operation  ph d  thesis  delft university of technology 
wang  x   yadav  v     balakrishnan  s  n          cooperative uav formation flying with obstacle collision avoidance  ieee transactions on control systems technology        
wertz  j  r     wiley j  larson  e          space mission analysis and design  third edition  
microcosm springer 
younes  h  l  s     littman  m  l          ppddl     an extension to pddl for expressing planning
domains with probabilistic effects  tech  rep   carnegie mellon university 

   

fi