journal artificial intelligence research                   

submitted        published      

constraint solver flexible protein models
federico campeotto

campe  nmsu edu

dept  computer science  new mexico state university
depts  math    computer science  university udine

alessandro dal palu

alessandro dalpalu unipr it

dept  math    computer science  university parma

agostino dovier

agostino dovier uniud it

dept  math    computer science  university udine

ferdinando fioretto

ffiorett cs nmsu edu

dept  computer science  new mexico state university
depts  math    computer science  university udine

enrico pontelli

epontell cs nmsu edu

dept  computer science  new mexico state university

abstract
paper proposes formalization implementation novel class constraints aimed modeling problems related placement multi body systems
  dimensional space  multi body system composed body elements  connected
joint relationships constrained geometric properties  emphasis investigation use multi body systems model native conformations protein
structureswhere body represents entity protein  e g   amino acid 
small peptide  geometric constraints related spatial properties
composing atoms  paper explores use proposed class constraints support
variety different structural analysis proteins  loop modeling structure
prediction 
declarative nature constraint based encoding provides elaboration tolerance
ability make use additional knowledge analysis studies  filtering
capabilities proposed constraints allow control number representative
solutions withdrawn conformational space protein  means
criteria driven uniform distribution sampling principles  scenario possible
select desired degree precision and or number solutions  filtering component
automatically excludes configurations violate spatial geometric properties
composing multi body system  paper illustrates implementation constraint
solver based multi body perspective empirical evaluation protein structure
analysis problems 

   introduction
constraint programming  cp  declarative programming methodology gained
predominant role addressing large scale combinatorial optimization problems 
paradigm  cp provides tools necessary guide modeling resolution search
problemsin particular  offers declarative problem modeling  in terms variables
constraints   ability rapidly propagate effects search decisions  flexible
efficient procedures explore search space possible solutions  field cp
c
    
ai access foundation  rights reserved 

ficampeotto  dal palu  dovier  fioretto    pontelli

roots seminal work sutherland        sketchpad system 
successive efforts systems constraints  sussmann   steele        thinglab
 borning         years  cp become paradigm choice address hard search
problems  drawing integrating ideas diverse domains  artificial intelligence
operations research  rossi  van beek    walsh         declarative nature
cp enables fast natural modeling problems  facilitating development 
rapid exploration different models resolution techniques  e g   modeling choices 
search heuristics  
recent years  several research groups started appreciating potential constraint programming within realm bioinformatics  field bioinformatics presents
number open research problems grounded critical exploration combinatorial search space  highly suitable manipulated constraint based search 
constraint methodologies applied analyze dna sequences instance 
locate cis regulatory elements  guns  sun  marchal    nijssen         dna restriction
maps construction  yap   chuan         pair wise multiple sequence alignment  yang        yap        tsai  huang  yu    lu         constraint methodologies
applied biological networks  corblin  trilling    fanchon        larhlimi  
bockmayr        ray  soh    inoue        gay  fages  martinez    soliman        gebser 
schaub  thiele    veber        biological inference problems  haplotype inference  graca  marques silva  lynce    oliveira        erdem   ture        
phylogenetic inference  erdem        
particular area bioinformatics witnessed extensive use cp techniques
domain structural biologyi e   branch molecular biology biochemistry
deals molecular structure nucleic acids proteins  structure
affects behavior functions  constraint programming progressively gained pivotal
role providing effective ways explore space conformations macromolecules 
address problems secondary tertiary structure prediction  flexibility  motif discovery  docking  backofen  will    bornberg bauer        krippahl   barahona       
thebault  de givry  schiex    gaspin        dal palu  dovier    pontelli        mann
  dal palu        shih   hwang        krippahl   barahona        dal palu  spyrakis 
  cozzini      b  chelvanayagam  knecht  jenny  benner    gonnet        yue   dill 
       two comprehensive surveys use constraint based methods structural
bioinformatics recently proposed  dal palu  dovier  fogolari    pontelli      a 
barahona   krippahl        
focus work use constraint based technology support structural
studies proteins  proteins macromolecules fundamental importance way
regulate vital functions biological processes  structural properties critical
determining biological functions proteins  skolnick  fetrow    kolinski        baker
  sali        investigating protein protein interactions  central virtually cellular processes  alberts  johnson  lewis  raff  roberts    walter        
refer protein structure prediction  psp  problem problem determining
tertiary structure protein knowledge primary structure and or knowledge structures  e g   secondary structure components  templates homologous
proteins   psp problem often broken specialized classes problems
related specific aspects tertiary structure protein  side chain geometry
   

fia constraint solver flexible protein models

prediction  dunbrack         loop modeling prediction  go   scheraga        xiang  soto 
  honig        rufino  donate  canard    blundell        soto  fasnacht  zhu  forrest   
honig         protein flexibility investigation  bennett   huber        
classes problems share common rootsthe need track possible conformations chains amino acids  variations problem relate factors
length chain considered  from short peptides case loop modeling
entire proteins general psp case  diverse criteria employed selection
solutions  as  instance  lowest basin effective energy surface  composed
intra molecular energy protein plus solvation free energy  karplus  
shakhnovich        lazaridis  archontis    karplus        
modeling variability protein chain involves many degrees freedom
needed represent different protein conformations  tracking variability requires
exploration vast conformational space  model simplifications adopted reduce
computational cost  instance backbone only models represent backbone
proteins  side chain representation could simplified single central point  centroid 
describing center mass  one adopt approximated representation space
though lattice models 
nevertheless  even strong simplifications  search space remains intractable
prevents use brute force search methods space possible conformations
 crescenzi  goldman  papadimitriou  piccolboni    yannakakis        
constraint programming methodologies found natural use addressing psp
related problemswhere structural chemical properties modeled terms
constraints spatial positions atoms  transforming search conformations
constraint satisfaction optimization problem  proposed approaches range
pure ab initio methods  backofen et al         dal palu et al         methods based
nmr data  krippahl   barahona        methods based fragments assembly  dal
palu  dovier  fogolari    pontelli         spite efforts  design effective
approaches filter space conformations lead feasible search remains
challenging open problem 
work present constraint solver targeted modeling general class protein
structure studies  particular solution suitable address protein structure analysis
study  requiring generation set unbiased sampled diverse conformations
satisfy certain given restraints  one unique features solution presented
work capability generate uniformly distributed sampling target protein regions
among given portion cartesian space selected granularityaccounting
spatial rotational properties 
abstract problem general multi body system  composing body
constrained means geometric properties related bodies joint
relationships  body represent entity protein  individual amino
acid small peptide  e g   protein fragment   bodies relate spatial positions
organization individual atoms composing it 
view exploration protein structures multi body systems suggests number different constraints  used model different classes structural studies
applied filter infeasible  or unlikely  conformations  propose investigation
several classes constraints  terms theoretical properties practical use
   

ficampeotto  dal palu  dovier  fioretto    pontelli

filtering  particular emphasis given joined multibody  jm  constraint  whose
satisfaction prove np complete  realistic protein models require assembly
hundreds different body versions  making problem intractable  study efficient
approximated propagator  called jm filtering  jmf   allows us efficiently compute
classes solutions  partitioned structural similarity controlled tolerance error 
perspective novel holds strong potential  structural problems investigating computationally intractable  use global constraints specifically designed
meet needs enables effective exploration search space greater
potential effective approximations 
multi body model provides interesting perspective exploring space
conformationswhile actual search operates discrete sets alternatives  e g   sets
fragments   filtering process avails reasoning processes operates continuous
domain  allows propagation filtering effective 
proposed multi body constraints filtering techniques constitute core
resolution engine fiasco  fragment based interactive assembly protein structure
prediction constraints   efficient c   based constraint solver  demonstrate
flexibility efficiency fiasco using engine model solve class
problems derived loop modeling instances  throughout paper show
ability fiasco providing uniform efficient modeling platform studying
different structural properties  that been  far  addressed using significantly
distinct methods tools   declarative nature constraint based methods supports
level elaboration tolerance offered frameworks protein structure
prediction  facilitating integration additional knowledge guiding studies  e g  
availability information secondary structure elements  
rest paper organized follows  section    provide high level
background biological chemical properties proteins review commonly used approaches address structural studies  section    develop constraint
framework dealing fragments multi body structures  section   describes
implementation constraints propagation schemes fiasco system 
section   report experimental results using fiasco collection
benchmarks loop modeling  section   provides concluding remarks 
preliminary version research pursued paper presented  campeotto 
dal palu  dovier  fioretto    pontelli         work campeotto et al  focused
one new class constraints targeting problem loop closure  work presented
paper provides comprehensive constraint system  focused modeling structural
protein properties investigating different types problems  e g   structure prediction 
studies flexibility   present manuscript includes precise detailed
formalization extensive experimentation comparison 

   background  general context  related work
section briefly review basic biology notions  introduce problems
tackling paper refer selection related literature 
   

fia constraint solver flexible protein models

h

side
chain

n

c

h

h

n
c 

h
c


c 
side
chain



figure    schematic sequence two amino acids showing amino acid backbone
side chains  arrow c   n denotes peptidic bond 
    general background
protein molecule made smaller building blocks  called amino acids  one amino acid
connected another one peptidic bond  several amino acids pairwise
connected linear chain forms whole protein  backbone protein 
illustrated figure    formed sequence n c c   atoms contained amino
acid  backbone rather flexible allows large degree freedom protein 
amino acid characterized variable group atoms influences specific
physical chemical properties  group  named side chain  ranges      atoms
connects c atom amino acid     kinds amino acids found
common eukaryotic organisms 
proteins made           amino acids  average globular protein
    amino acids long  amino acid contains     atoms  therefore number
atoms arrangements space grow easily beyond computational
power  since beginning protein simulation studies  different algorithms exploring conformations devised  molecular dynamics  local search  monte
carlo  genetic algorithms  constraint approaches  well different geometric representations  neumaier        
literature  several geometric models proteins proposed  one choice
influences quality complexity computational approaches number
points describe single amino acid 
simplest representation one amino acid represented one
point  typically c atom  given robust geometric property  distance
c atoms two consecutive amino acids preserved low variance  roughly     a  
usually  volumetric constraints enforced points  order simulate
average occupancy amino acid  representation visualized chain
beads moved space 
refined representation models store  or all  points backbone  plus
centroid mass  cg  represents whole side chain connects c atom 
models  amino acid described different c cg distances cg volumes 
centroid approximation side chain flexibility allows refined
energetic models  number points taken care still low  paper

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    native structure intact influenza virus m  protein  indexed  ea 
pdb  modeled full atom     model  simple c c model
 from left right   secondary structures   helices  emphasized 

figure    amino acid concatenation    model
use particular case simplified models     model  described precisely
below  particular instance coarse grained protein models  clementi       
shehu         end spectrum  atom amino acid represented
one point  representation accurate  time allows
accurate energetic considerations  drawback computational demand
handling backbone side chain flexibility increases significantly 
figure   report three representations protein 
paper select intermediate representation amino acids atoms
n  c   c   backbone centroid side chain  cg  accounted for 
include oxygen  o  atom attached c   atom  atom together
c   n identifies triangle chemically stable along backbone used
assembly amino acids  see complete formalization   position
two h atoms backbone deduced position atoms
deal explicitly  conclusion  deal   atomic elements per amino
acid    atoms n c c   centroid cg  briefly refer representation
   model  figure   illustrates atoms involved concatenation
two consecutive amino acids  inter atomic distances consecutive atoms fixed
due chemical bonds  thus  differences structures identified
differences angles involved  common find substructures

   

fia constraint solver flexible protein models

protein consecutive amino acids arranged according repeated characteristic
patterns  property found almost every protein  refer typical patterns
secondary structure elements  common examples  helices  sheets
 see figure    
    context proposed work
paper present tool assembling reasoning amino acids
space  similar approaches  e g  simons  kooperberg  huang    baker        
system relies set admissible elementary shapes  or fragments  represents
spatial dictionary arrangements every part protein 
element dictionary general enough describe specific atomic structure
either single amino acid longer sequence  even hundreds amino acids long  
amino acid sequence  several alternative arrangements expected populate
database  offer various hypothesis local shape sequence 
protein partitioned contiguous fragments arranged according one
possible shapes recorded database 
sequence amino acids free rotate bonds space  typically two degrees
freedom along backbone several others along side chain   however  due
chemical properties physical occupancy specific types amino acids
involved surrounding environment  arrangements impossible and or unlikely  core assumption assembling approaches rely statistical database
arrangements describe local feasible behavior  order direct search candidates high probability energetically favorable  presence multiple
candidate fragments every part protein requires combinatorial search among
possible choices that  assembled together  leads alternative putative configurations
protein  search process charge verifying feasibility assembly 
since combination local arrangements could generate non feasible global shape  e g  
one leads spatial clash atoms different fragments  one  or more 
fragment described one single arrangement  part protein rigidly imposed 
particular degenerate case exploited describe rigid parts protein 
specific combination fragment length number instances fragment determines type protein problem modeled  range complete backbone
flexibility  fragments made hundreds choices amino acids  secondary structure   loop models  interleaving longer fragments modeling helices  strands shorter
fragments  
library fragments usually derived content protein data bank
 pdb  www pdb org  contains        protein structures  design adopted
study parametric choice library fragments use  example 
experiments use library fragments derived subset pdb known
top      lovell  davis  arendall  de bakker  word  prisant  richardson    richardson 
       contains non redundant proteins preserves statistical relevance  alternative libraries fragments obtained use sophisticated protein database
search algorithms  fread  choi   deane         retrieve information depending specific amino acid sequence  since local properties greatly influence typical

   

ficampeotto  dal palu  dovier  fioretto    pontelli

arrangements observed  moreover  build libraries different sequences lengths h  even
longer sequences statistical coverage becomes weak  nevertheless  micheletti  seno 
maritan        conjectured relatively small set fragment shapes  a dozens 
length    able describe virtually protein  handl  knowles  vernon  baker 
lovell        demonstrate size structure search space affected
choice fragment length used optimize search process  similar considerations explored others  hegler  latzer  shehu  clementi 
  wolynes         recent work show efficiently build dictionaries  fogolari 
corazza  viglino    esposito         models easily accommodated
framework 
considered sequence associated several configurations    models  placed
according standardized coordinate system  activity  consider c  
group preceding amino acid n atom following amino acid 
extra information needed fragments combination  assuming fragment
connected two peptidic bonds  therefore  specific sequence  store
occurrences
c   n c c   n
   z  
h times
relative positions  order reduce impact specific properties
database used  cluster set way two fragments rmsd  less
given threshold  one stored  example  length h    
rmsd threshold   a  derive fragment database roughly    fragments per
amino acid 
cg information added later using statistical considerations side chain mobility  accounted clustering described  fogolari  esposito 
viglino    cattarinussi        
    protein structure prediction
protein structure prediction problem  sequence amino acids composing protein  known primary structure  given input  task predict three
dimensional   d  shape  known native conformation tertiary structure 
protein standard conditions 
common assumption  based anfinsens work          d structure
minimizes given energy function modeling atomic force fields  candidate best approximates functional state protein  setting  choice
number atoms used represent amino acid controls quality
computational complexity 
moreover  spatial domains proteins points  e g   atoms  centroids 
placed impact type algorithms search performed 
domain either continuous  often represented floating point coordinates 
discrete  often derived discretization space based crystal lattice structure 
   root mean square deviation captures overall similarity space corresponding atoms 
performing optimal roto translation best overlap two structures 

   

fia constraint solver flexible protein models

geometric model determined  necessary introduce energy
function  mostly based atoms considered distances  structure prediction problem  energy function used assign score geometrically feasible
candidate  candidate optimal score represents solution prediction
problem 
let us briefly review popular approaches problem  particular emphasis solutions rely constraint programming technology 
natural approach investigating protein conformations simulations
physical movements atoms molecules is  unfortunately  beyond current computational capabilities  jauch  yeo  kolatkar    clarke        ben david  noivirt brik  paz 
prilusky  sussman    levy        kinch  yong shi  cong  cheng  liao    grishin        
originated variety alternative approaches  many based comparative modelingi e   small structures related protein family members used templates
model global structure protein interest  jones        fujitsuka  chikenji   
takada        simons et al         lee  kim  joo  kim    lee        karplus  karchin 
draper  casper  mandel gutfreund  diekhans    source          methods  often
referred fragments assembly  protein structure assembled using small protein subunits templates present relevant sequence similarities  homologous affinity  w r t 
target sequence 
literature  constraint programming  cp  techniques shown potential 
structural variability protein modeled constraints  constraint solving
performed order deduce optimal structure  backofen   will        barahona
  krippahl        dal palu  dovier    fogolari        dal palu et al          cp
used provide approximated solutions ab initio lattice based modeling protein
structures  using local search large neighboring search  shmygelska   hoos       
dotu  cebrian  van hentenryck    clote         exact resolution problem lattice
spaces using cp  along clever symmetry breaking techniques  investigated  backofen   will         approaches solve constraint optimization problem
based simple energy function  hp   precise energy function used
dal palu et al                information secondary structures  i e    helices 
 sheets  taken consideration  due approximation errors introduced
lattice discretization  approaches scale medium size proteins  off lattice
models  based idea fragment assembly  implemented using constraint logic
programming finite domains  presented  dal palu et al         dal palu 
dovier  fogolari    pontelli         applied structure prediction
structural analysis problems  instance  dal palu et al       b  use approach generate sets feasible conformations studies protein flexibility  use
cp analyze nmr data related problem protein docking
investigated  barahona   krippahl        
context ab initio prediction  recent work  olson  molloy    shehu       
shown increasing complexity conformational search spaceby using
refined fragment libraryin combination sampling strategy  enhances
generation near native structure sets  work shehu        molloy  saleh 
shehu        illustrates various enhancement fragment based assembly process leading
faster computations improved sampling conformation spacee g   using
   

ficampeotto  dal palu  dovier  fioretto    pontelli

tree based methods inspired motion planning guarantee progress towards minimal
energy conformations maintaining geometrically separate conformations  terms
energy landscape  native state generally lower free energy non native structures 
extremely difficult locate  hence  targeted conformational sampling may aid
protein structure prediction different near native structure used guide
search  several schemes based monte carlo movements sampling conformation
space fragments assembly proposed  shmygelska   levitt        xu  
zhang        debartolo  hocky  wilde  xu  freed    sosnick         methods based
non uniform probabilistic mass functions  derived previously generated decoys 
proposed aid problem  simoncini  berenger  shrestha    zhang        
sampling  however  remains great challenge protein complex topologies and or
large sizes  kim  blum  bradley    baker        shmygelska   levitt        
widely accepted proteins  native state  considered dynamic
entities instead steady rigid structures  indeed  recent years research focus
shifted towards prediction schemes take account non static nature proteins 
supported recent observations based magnetic resonance techniques  processes
enzyme catalysis  protein transport antigen recognition rely ability proteins
change conformation according required conditions  dynamic nature
visualized set different structures coexist time  generation
sets capture non redundant structures  in pure geometric terms  great
challenge  kim et al          robotics inverse kinematics methods extensively
explored sampling proteins conformational space  zhang   kavraki        cortes
  al bluwi        molecular simulations  al bluwi  simeon    cortes        moll 
schwarz    kavraki        noonan  obrien    snoeyink        kirillova  cortes  stefaniu 
  simeon        
motivation work provide ability generating protein set
contains optimal sub optimal candidates  order capture dynamic information
behavior protein  desirable property conformations returned
pool sufficiently diverse uniformly distributed  d space 
    protein loop modeling
protein loop modeling problem restricted version structure prediction problem  use problem working example remaining part paper 
context  protein structure already partially defined  e g   large number
atoms already placed space  usually  common scenario derives xray crystallography analysis  spatial resolution atoms degenerates presence
regions protein exposed surface presents increased
instability  since crystal contains several copies protein order perform measurement  regions appear fuzzy  therefore placement atoms
regions may ambiguous  usually  regions  referred loops  involved
secondary structures  instead stable  dealing homology modeling  protein found another organism  typically shows variations
sequence due evolution  especially loop regions  since less essential
protein stability functionality  starting homologous protein structure  usually

   

fia constraint solver flexible protein models

loops need recomputed specialized loop modeling approach use
minimization techniques 
length loop typically range      amino acids  nevertheless 
compared secondary structures  flexibility loops produces large  physically
consistent  conformation search spaces  constraints mutual positions orientations  dihedral angles  loop atoms deduced used simplify search 
restrictions defined loop closure constraints  figure     simple 
possible scenario two macro structures  two helices  connected loop 
setting  assume know position two helices  loop atoms
determined 
procedure protein loop modeling typically consists   phases  sampling  filtering 
ranking  jamroz   kolinski         sampling commonly based loop candidate generation  using dihedral angles sampled structural databases  felts  gallicchio 
chekmarev  paris  friesner    levy         subsequent candidate modification order
satisfy loop closure constraints  conformations checked w r t  loop constraints geometries rest structure  loops detected
physically infeasible  e g   causing steric clashes  discarded filtering procedure 
popular methods used loop modeling include cyclic coordinate descent  ccd 
method  canutescu   dunbrack         algorithms based inverse kinematics  kolodny 
guibas  levitt    koehl        shehu   kavraki         self organizing  sos  algorithm  liu  zhu  rassokhin    agrafiotis         simultaneously satisfy loop
closure steric clash restrictions iteratively superimposing small fragments  amide
c   adjusting distances atoms  wriggling method  cahill  cahill 
  cahill         employs suitably designed monte carlo local moves satisfy loop
closure constraints  multi method approaches proposede g   lee  lee 
park  coutsias  seok        propose loop sampling method combines fragment
assembly analytical loop closure  based set torsion angles satisfying imposed
constraints  ab initio methods  rapp   friesner        fiser  do    sali        jacobson 
pincus  rapp  day  honig  shaw    friesner        spassov  flook    yan        deane
  blundell        felts et al         xiang et al         methods based templates
extracted structural databases  choi   deane        explored 
finally  ranking stepe g   based statistical potential energy  dope  shen
  sali         dfire  zhou   zhou         one proposed fogolari et al         
used select best loop candidates 
sampling filtering procedures work together direct search towards structurally diverse admissible loop conformations  order maximize
probability including candidate close native one reduce time needed
analyze candidates  work motivated need controlling properties resulting set candidates  particular  model structural diversity
distance orientation backbone make sampling phase guided loop
constraints 
fragment based assembly methods investigated context loop
modeling  lee et al         zhang   hauser         shehu kavraki        review
great detail loop modeling techniques 

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    left  two fragments b   light grey  b   dark grey 
points b                                       points b                                               
arrows address initial points  right  observe rotating b     degrees translating    units x axis  last three points b   last b    
first three points b   first b     perfectly overlap  thus  end b      front b    

   constraint solving  d fragments
assume reader familiarity basic principles constraint programming constraint satisfaction problems  csp   reader referred  e g   handbook constraint programming  rossi et al          section  introduce
formalization effective solution tackle practical applications concerning
placement  d fragments  applications described combinatorial problems 
modeled set variables  representing entities problem deals with  set
constraints  representing relationships among entities  context constraint
programming system  variables constraints adopted provide solution
csp  is  assignment variables satisfies constraints  extend
concept enabling constraint solver find representative solution csp
satisfies additional properties expressed among variables whole solution set 
    terminology
fragment b composed ordered list least three  distinct   d points  denoted
points b   number points fragment referred length  front 
end anchors fragment b  denoted front b  end b   two lists containing
first three last three points points b   b i  denote i th point
fragment b  two ordered lists points p   q  write p     q
perfectly overlapped rigid coordinate translation and or rotation  briefly  rototranslation see figure    let us assume z coordinate   points omitted
simplicity  
non empty set fragments length called body  body
used model set possible shapes sequence points  say body
length k fragment contains length k 
multi body sequence s            sn bodies 

   

fia constraint solver flexible protein models

figure    left right  body s  composed unique fragment  bodies
s  s  composed two fragments each  arrows address initial points fragments 
    s    s    s  constitutes multi body  rightmost
three bodies length   
figure report spatial shapes associated four rigid bodies obtained
  one identified full lines  three dashed
multi body s 
lines  observe rigid body identified                                                 
obtained rotation     degrees fragment                                  s 
x axis  flipping  translation   units x    units y  observe
moreover rigid body identified                                                  contains
point        twice 
    s            sn   rigid body
  sequence fragments
given multibody
b            bn   bi si              n end bi     front bi                   n  
rigid body uniquely identified sequence b            bn   however  consecutive
fragments overlapped  rigid body alternatively identified list points
form spatial shape  figure   report examples bodies  multi bodies  rigid
bodies  previous example  assume z coordinate   points 
remark      working example  concepts related loop modeling problem  points atoms  fragment spatial shape atoms  last three atoms
one fragment overlap first three atoms another fragment  join them 
body set admissible shapes given list atoms  multi body s            sn
sequence elements  corresponding sequence atoms  of amino acids  
idea last three atoms body si first three successive
body si     rigid body possible complete shape atoms  provided last three
atoms fragment selected set si overlap first three atoms fragment
selected si    
overlapping points end bi   front bi     constitute i th joint rigid
body  number rigid bodies obtained single multi body s            sn
bounded ni    si    figure   provides schematic general representation rigid
body 
rigid body defined overlap joints  relies chain relative rototranslations fragments  points points bi   therefore positioned according
 homogeneous  coordinate system associated fragment bi    note
reference system b  defined  whole rigid body completely positioned  
   exception case points joint collinear  points p            pn   n  
collinear points p    p            pn belongs straight line containing two points p  p   

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    schematic representation rigid body  joints connecting two adjacent
fragments emphasized  points points b  fragment represented
circles  fragment extends first point joint last point
successive joint 
relative positions two consecutive fragments bi  bi rigid body    n 
defined transformation matrix ti r     matrix depends standard
denavit hartenberg parameters  hartenberg   denavit        obtained start
end fragmentsthe reader referred work lavalle        details 
denote product t  t        ti  x  y  z    t ti  x  y  z  
let us analyze first matrix t    fragment b  forced start given
point oriented given way  case matrix t  defines roto translation
b  fulfilling constraints  absence constraints  assume b 
normalized t  i e  its first point            second point aligned along z axis
third belongs plane formed x z axes  orientation referred
reference system    
             n  coordinate system conversion  x        z      point  x  y  z 
points bi   coordinate system b    obtained by 
 x        z       t   t  t        ti  x  y  z    t   ti  x  y  z 

   

homogeneous transformations last value tuple always   
rest paper  focus    model  however proposed formalization
methods used models  e g   c c model  latter
case  points bi   contains least   amino acids  joints guaranteed noncolinear  due chemical properties backbone  combining c fragments 
specific rotational angles full atom backbone lost imprecise multibody assembly produced 
fragment body associated sequence amino acids  fragment sequence
h   amino acids described body length  h      modeling concatenation
atoms represented regular expression  c   o n c c   o h n   representation first last sequence c   atoms coincide front  end anchor 
respectively  employed process assembling consecutive fragments  i e  
used roto translation  
discretized r  space represented regular lattice  composed cubic cells
side length equal given parameter k  cell referred  d voxel
 or  simply  voxel    assume voxel receives unique identifier  denote
voxel p  k  identifier voxel contains  d point p context
discretization space using cubes side length equal k  spatial quantization
allows efficient treatment approximated propagation required
geometric constraints introduced following sections 
   

fia constraint solver flexible protein models

    variables domains
let us define variables adopted describe entities problem fragments 
domain variable v set allowable values v   denoted
dv   deal fragments placements  d space adopt two distinct types
variables 
finite domain variables  fdvs   domain finite domain variable finite
set non negative integer numbers 
point variables  pvs   variables assume coordinates  d point r   
domains are  initially   d boxes identified two opposite vertices hmin  maxi 
done discrete solver cola  dal palu  dovier    pontelli              
remark      working example  following remark      fdvs identifiers
various fragments body  pvs used represent  d coordinates assigned
various structural points  e g   atoms  centroids  interest molecule
considered  clearly  values pvs depend deterministically values fdvs
 and vice versa  
variable assigned domain contains unique value  case point variables 
happens dv   hmin  maxi min   max 
    constraints
section  formalize constraints define fragments placement 
used describe protein structure problems context fragment assembly 
      distance constraints
distance constraints model spatial properties point variables operating  d space 
point variables p q related distance constraint form
kp qk op

   

k k euclidean norm  r  op  
built in global constraint alldistant associates minimal radius di point
variable pi  i              n  ensures spheres surrounding pair point variables
intersect 
alldistant p            pn   d            dn   
   
constraint equivalent constraints kpi pj k di  dj i  j             n    
j  used avoid steric clashes among different atoms  and centroids  
different volumes  checking consistency alldistant constraint  given domains
variables pi   np complete  dal palu  dovier    pontelli       the proof based
encoding bin packing problem using alldistant constraint  holds true
even particular setting  point variables intervals r  domains 
remark      working example  alldistant constraint introduced avoid clashes
rigid body obtained multi body s            sn   distance constraints
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    fragments assembled overlapping plane r   described rightmost
c     o  n atoms first fragment  left   plane l   described leftmost
c     o  n atoms second fragment  right   common nitrogen atom
useful extra information known  e g   one might inferred biological
arguments pair amino acid stay within certain distance  
      fragment constraint
fragment constraints relate finite domain variables point variables  let us assume
database f fragments  f  i  represents i th fragment database 
thus  given fdv variable v   f  v   denotes fragment indexed v v
instantiated  fragments stored f ordered list  d points 
given list point variables p    constraint 
fragment v  p    f  

   

states exists roto translation rot p    rot f  v  namely  v  
list points p  take form fragment f  i   simplicity 
omit database f clear context  intuitively  constraints ensure
fragment choice reproduce correct shape associated  d point 
regardless space orientation fragment  orientation determined
joined multi body constraint presented following section 
      centroid constraint
centroid constraint enforces relation among four pvs  intuitively  first three
associated atoms n  c   c   amino acid fourth related
centroid cg  constraint parametric w r t  type amino acid
deterministically establishes position cg depending position points 
centroid pn   pc   pc     pcg   a 

   

figure   centroids displayed along backbone purple circles labeled
cg  constraint used database fragment contains full backbone information  centroid information used place missing full atom side
chain  side chain centroid computed taking account average c  side chain
center mass distance  average bend angle formed side chain center of massc  c     torsional angle formed n  c  c    side center mass  fogolari et al  
   

fia constraint solver flexible protein models

       abstraction allows us reduce number fragments consider  removing
fragments would geometrically conflict position cg  consider
single side chain may     main configurations  rotamers  
      table constraint
constraint used restrict assignments set fdvs  representing fragments 
specific tuples choices  useful modeling specific local collaborative
behavior involves one fragment  example  happens modeling
secondary structure multiple arrangements underlying amino acids and or specific
approximation strategies employed 
  k tuple fdvs  table  or
let f set k tuples integer values v
combinatorial  constraint  form
   f 
table v

   

  assumes values restricted tuples listed f   i e  
requires list variables v
 
exists f v  i    t i              k   
remark      working example  going back loop modeling problem  role
fragment constraint evident  relates  ids the  selected fragments multibody  d positions various atoms involved  centroid constraint
instead introduced add position centroid represents side chain
   representation  table constraint common constraint constraint languages
useful info consecutive fragments rigid body known due external
knowledge 
      joined multibody constraint
joined multibody  jm  constraint enforces relation list fdvs encoding
multibody  limits spatial domains various fragments composing multibody
order retain fragments assemble properly compenetrate 
  v
    a 
  e 
  i  where 
joined multibody  jm  constraint described tuple  j   hs 
    s            sn multi body  let b    b            bk   set fragments s 
 

sn
i e   b   i   si  
    v            vn list fdvs  domains dvi    j   bj si   
v
    a    a    a    e    e            e n lists sets  d points that 

a  a  a  set admissible points front b   b s   
e i  e i  e i set admissible points end b   b si                n 
constant  used express minimal distance constraint different point 
               b   s t  exist
solution jm constraint j assignment   v
matrices t            tn  used   following properties 
domain               n   vi   dvi  
joint               n    let  a    a    a      end b vi      b    b    b      front b vi       
holds  for j            
ti  ajx   ajy   ajz     ti    bjx   bjy   bjz  
   

ficampeotto  dal palu  dovier  fioretto    pontelli

spatial domain  let  a    a    a      front b v       t  aj aj        
           n  let  e    e    e      end b vi    
ti  ejx   ejy   ejz   e  i   j    
  j   t            ti  in ti   matrices overlap end b vi     
front b vi    
minimal distance  j                 n  j      points points b vj    
b points b v       holds that  
ktj  ax   ay   az   t   bx     bz  k
proved establishing consistencyi e   existence solutionof jm
constraints np complete  campeotto et al          proved remains
np complete even assuming fragments problem three
atoms spatial position  holds last three atoms  of
course fragments allowed contain three atoms otherwise problem
trivial   proof reported www cs nmsu edu fiasco  
remark      working example  jm constraint contains exactly ingredients
  corresponding fds
needed modeling loop problem  multi body s 
    set possible  d points loop starts
  set possible  d
v
 
points loop ends e weak version alldistant constraint pair
 
atoms avoid clashes  solutions  non clashing  rigid bodies starts
 
ends e 
let us observe jm constraint explicitly forbid spatial positions pvs
variables  save first three last three points loop   however 
additional constraints explicitly required domain definition pvs variables
used encoding 
remark     choice using three points overlap resembles method proposed
kolodny  guibas  levitt  koehl         hand  observe
technical exercise modify jm constraints allow parametric
overlap contiguous fragments 

   fiasco constraint solver
present overall structure implementation hybrid constraint solver capable
handling classes constraints described previous section 
    constraint solving
distinctive feature fiasco possibility handle continuous domains cost
keeping discrete library choices  finite domain variables   handling fragments
allows us reason spatial properties efficient descriptive way
pure  d domain modeling adopted previous proposals  moreover  fiasco allows
   product     necessary use homogeneous coordinates 
   let us observe weak form alldistant constraint different distances
point allowed  is  sense  closer alldifferent constraint 

   

fia constraint solver flexible protein models

solver uniformly sample search space means spatial equivalence relation
used control tradeoff accuracy efficiency  particularly
effective finite domains heavily populated  critical component
model real world problems 
constraint solver builds classical prop labeling tree exploration constraint propagation phases interleaved non deterministic branching phases used
explore different value assignments variables  apt         solver able handle
point variables finite domain variablesthis reason refer
hybrid solver  particular  assignments finite domain variables guide search 
values imply assignments point variables  turn may propagate reduce
domains point variables finite domain variables  moreover  propagation technique implemented jm constraint classical filtering techniqueit
approximated technique describe later 
presence point variables allows  principle  infinite number domain values
r    however  noted information carried assembling fragments  encoded
finite domain variables  much informative complex demanding
model  d continuous space  e g   oct trees  csg  no goods   particular  direct
kinematics encoded jm constraint able efficiently identify set admissible
regions point variable fast  approximated  controlled way  therefore 
point variables seen internal aid propagation  variables updated
jm propagation phase interact jm propagator prune
corresponding fragment variables  distance constraints point variables included
standard ac  propagation loop domains updates 
aspect extends classical solver structure capability controlling amount search tree explored  search tree contains large number
branches similar  point view geometric distance
corresponding point variables  goal produce subset feasible solutions
exhibit significant  d differences themselves  accomplished introducing
possibility explore subtree given depth  enumerating specific limited
number branches  rather following standard recursion propagation expansion  achieve behavior  necessary selectively interfere standard
recursive call solver  implement non deterministic assignment partial tuples
finite domain variables  resembles implementation table constraint 
dynamically created search  strategy allows us significantly reduce
number branches explored subtree  produces significant results
selection branches controlled adequate partitioning function  work 
propose effective partitioning function based measure  d similarity point
variables  used direct search along specific branches controlled depth
adequately separated partitioning function  practically realized
introducing form look ahead  controlled jm propagator  returns set
partial assignments well filtered domains finite domain variables 
      hybrid solver

   

ficampeotto  dal palu  dovier  fioretto    pontelli

    p    d 
  c    
algorithm   search v
    p    d 
  c   
require  v
   
        v
  
output  p   
  
return
   end
   fragment index f dv 
    p    d 
 
  
ac   c  v    f    v
nm
  

get table jm  
  
n    
  
non deterministically select    n
   
j      m
   
c c  v  j    i  j  
   
end
    p    d 
  c      m 
   
search v
   
else
    p    d 
  c        
   
search v
   
end
   
end
    end
general structure solver highlighted algorithm    solver designed
    v            vn finite domains variables  together domains
process list v
dv            dvn them  intuitively  domain set indices set fragments 
moreover  solver receives list p    p            p n   n point variables 
variables p i           p i   related fragment domain dvi   point variable
 
pj has  turn  spatial domain dpj   c represents constraints elements v
p    finally  solver receives input current level   exploration
search tree  set   first time procedure called   sake simplicity 
choice variables assigned based ordering input list  more
sophisticated selection strategies easily introduced   enter level   
assume variables v            v   already assigned 
  already assigned
let us briefly describe algorithm  variables v
 lines      search algorithm terminates returns computed solution  represented values assigned variables p    otherwise  non deterministically select
fragment index domain variable v  assign variable  lines   
indicate execution standard constraint propagation step  using ac     propagation step fails  assume another non deterministic choice made  possible 
every reference non deterministic choice algorithm corresponds creation
choice point target backtracking case failure  for simplicity 
assume chronological backtracking   succeeds  leading possible reduction
  computation proceed  table constraint might produced
domains d 
propagation jm constraint ac   procedure  see details  
case  lines       m  variables non deterministically assigned
values table  lines       search continues less variables
   

fia constraint solver flexible protein models

assigned  line      case  search continue one less
variable  v    assigned  line     
peculiar feature constraint solver  not reported abstract algorithm
defined  used avoid search solutions similar others 
let us assume  d space partitioned cubic voxels size k a  then  given list
  list pvs p    user state 
fdvs v
    p    k 
uniqueseq v

   

constraint forces solver prune search tree following way  given
  variable assigned next step
partial assignment   let v v
 
p            ph p pvs consequently instantiated  constraint ensures
two assignments       extending v  p            ph holds exists least
one             h     pi      pi   belong voxel 
    constraint propagation
section  discuss propagation rules associated various constraints introduced section      applied within call ac   procedure  line  
algorithm     constraint propagation used reduce domain size pvs
fdvs  ensuring constraint consistency  ac   standard implementation fixpoint
propagation loop  apt        rossi et al         
      joined multibody constraint
jm constraint complex constraint triggered leftmost points involved constraint  anchors  instantiated  jm propagation  jmf  based
analysis distribution space points involved  goal propagation reduce domains fdvs identification fragments
cannot contribute generation rigid body compatible corresponding point variable domains  viewed form hyper arc consistency
set fragments  moreover  due complexity precision considerations 
propagator approximated use spatial equivalence relation     identifies
classes tuples fragments  classes property spatially different
one another 
allows compact handling combinatorics multi body  controlled
error threshold allows us select precision filtering  equivalence relation
captures rigid bodies geometrically similar  allowing search compact
small differences among them 
  v
    a 
  e 
  i  along
jmf algorithm receives input jm constraint hs 
set g points available placement bodies 
equivalence relation  
sake readability  assume domain information variables avail    tab   process  algorithm
able  algorithm builds table constraint table  v
makes use function  lines       function takes input two lists  a  b
 d points  computes homogeneous transformation overlap  b  a  call
   

ficampeotto  dal palu  dovier  fioretto    pontelli

algorithm   jmf algorithm 
  v
    a 
  e 
    g 
require  s 
ensure  tab
     tab  
   n  v



t  start b  a  a  a 






t  end b  e  e  e 



   r   b  t    b s    t 
p points b  q g  k t  p  qk





c c involving p consistent c  
   p   t  end b     b  t    r   
                n
  
pi     ri    
  
e
pi   

   e  start b      fail






end b  e i  e i  e i
  
ri ri b si
p points b  q g  k t p  qk





c c involving p consistent c  
  
pi   e  start b   end b    b ri  
  
end
   
compute pi   filter ri accordingly
    end
    representative l pn  
   
tab   tab  l 
    end
function fail  a     b  simplicity  fourth component  always   
homogeneous transformation explicitly reported algorithm 
     algorithm computes sets ri pi   respectively
             n    v
contain fragments si still lead solution  corresponding allowed
 d positions end points  fragment b ri   denote parent b 
set fragments b   ri end b       front b  via   fragment b 
denote label b  corresponding fd value associated 
computing updating ri pi   fragments end anchors contained
bounds e i    e i    e i kept  fragments would cause points collapsei e  
due distance smaller previously placed pointsare filtered  lines  
    moreover  spatial positions points first fragment validated
 line     finally  enforce consistency check constraint c c involving points
points b  si retain points potentially reach admissible positions
 lines      
      iterations  lines       first ri pi computed
algorithm performs  v
basis sets end anchors previous level pi  starting point
selected fragment b  filtering overlapping lead
wrong portions space  lines      filtering based applied  line     
step  set triples  d points pi clustered using   representative
equivalence class chosen  within pi   corresponding fragment ri identified 
 non identified  fragments filtered ri   let us note

   

fia constraint solver flexible protein models

filtering based clustering performed initial step p    typically
already captured restrictions imposed a 
fragments reachable last iteration determined representatives
selected  populate tab set tuples associated representative l 
  allows us overlap last point
function  l  returns assignments v
l 
jmf algorithm parametric w r t  clustering relation function selecting
representative  express degree approximation rigid bodies
built  proposed clustering relation loop modeling takes account two factors   a  positions end anchors  d space  b  orientation
plane formed fragments anchor l w r t  fixed reference system   adopted
fiasco  c f  figure     combination clusterings allows capture local geometrical
similarities  since spatial rotational features taken account 
spatial clustering  a  used following  given set fragments  three end
points c    end anchors  cluster considered  centroid triangle
c   computed  use three parameters  kmin   kmax n  kmin kmax   r r 
r    start selecting set kmin fragments  pairwise distant least  r 
fragments selected representatives equivalence class fragments fall
within sphere radius r centered centroid representative  clustering
ensures rather even initial distribution clusters  however fragments may fall
within kmin clusters  allow create kmax kmin new clusters 
covering sphere radius r  remaining fragments assigned closest
cluster  employed technique variant k means clustering algorithm called
leader clustering algorithm  allows fast implementation acceptable results 
orientation clustering  b  partitions fragments according relative orientation planes r w r t      plane spatial orientation described euler angles
    frame w r t      algorithm produces variable number partitions depending   particular  given threshold              possible partitions
describing equal regions sphere though interval                     
fragment allotted partition determined  
final cluster intersection two partitioning algorithms  defines
equivalence relation depending kmin   kmax   r    representative selection
function selects fragment partition according preferences  e g  
frequent fragment  closest center  etc   
note r             kmax unbounded  clustering performed
would cause combinatorial explosion every possible end anchor whole
problem  spatial error introduced depends r          error
introduced step bounded  r dimension  iteration
errors linearly increased  since new fragment placed initial error gathered
previous iterations  thus resulting  nr bound last end anchor  clearly
bound coarse  average experimental results show better performances 
similar considerations argued rotational errors  however intersection
two clusterings  provide  general  much tighter bound 

   

fif  campeotto et al 

campeotto  dal palu  dovier  fioretto    pontelli

figure
   graphical
representation
propagation
jm constraint
theconstraint
variables viover
          vthe
i    variables vi           vi 
figure
   graphical
representation
theofpropagation

jm
 a  simultaneous placement elements domain variable vi   simulated 
 a  simultaneous placement elements domain variable vi   simulated 
overlapping corresponding fragment end anchor fragment associated element
overlapping
eachsetcorresponding
fragment
end anchor
fragment
element
domain
vi  
points pi  
computedwith
clustered
using theofrelation
 pointsassociated
within
domain
vieach
 
set one
points
pi  
computed
andchosen
clustered
using fragments
relation  points
dotted
ellipses   offor
cluster
fragment
representative
hence
 highlighted
dotted
ellipses  
forcollection
cluster
one fragment
representative
hence
 highlighted fragmen
filled
rightmost
circle  
representatives
constitutes
set ri  
 b  thechosen
previous
step iswith
performed
circle  
basis
end anchors
fragmentsconstitutes
representatives
ini    b  previo
filled
rightmost

collectionrelated
representatives
thechosen
set r
previous
filled
box on
represents

setthe
points
g
available
placement
step islevel 
performed

basis
end anchors
related
thefor
fragments
representatives chosen
bodies  for instance due distance constraint   fragment falling area discarded 

previous
level 

filled
box 
represents

set

points
g



available
placeme
 c  last iteration jmf algorithm set points pi   clustered 

bodies
 for
instance
due


distance
constraint  


fragment
falling


area
discarde
reach desired position retained  instance front anchor associated fragment next
 c 


last
iteration


jmf
algorithm

set

points
p


clustered 


th
variable  sequence fragments able lead condition  marked thick
i   lines  selected
populate

table
tab 
reach desired position retained  instance front anchor associated fragment ne
variable  sequence fragments able lead condition  marked thick lines  select
populate table tab 
   

fia constraint solver flexible protein models

p
  p q  d

q
figure    effect distance constraint   p q   propagation  empty boxes
represent original pvs domains full boxes represent reduced pvs domains
effect constraint propagation 
      distance constraints
propagation distance constraints approximated technique reduces
size box domains  introduce following operations pvs box domains
two variables p q used describe propagation rule
following subsections 
domain intersection  dp dq   hmax pmin   qmin    min pmax   qmax  i
domain union  dp dq   hmin pmin   qmin    max pmax   qmax  i
domain dilatation 
dp     hpmin d  pmin   di
max p  q     max px   qx    max py   qy    max pz   qz      and similarly min  
p      px   d  py   d  pz   d  
given two point variables p q  domains dp dq   respectively  simplification rule constraint   p q   updates domains follows 
dp     dq   d  dp  

dq     dp   d  dq  

   

ensures points dp dq positioned within approximation
sphere radius d  sphere approximated considering box inscribing  a cube
side  d   illustrated figure   
propagation constraint   p q   harder coarse representation
box domains adopted work model pvs allow description
complex polyhedron  hence apply simple form bound consistency described
following rule 

 dp dq     hl  ui    u l    
p

  p q    
    dq  


establishes unsatisfiability constraint 
   

   

ficampeotto  dal palu  dovier  fioretto    pontelli

      fragment constraint
propagation fragment constraints fragment v  p      exploited solution
search enforce assembly process fragment  v   along point variables
p            pn p    recall dv domain v containing references  j            jk  
database fragments  
p 

   p     dp     p     dp     p     dv    j            jk  
 

fragment v  p      
jk
n
 

 
   p    p    p      f     f   i  
dpi   dpi


i  

    

f  j 

  p    p    p      f    roto translation applied overlap first three
points fragment  f   start anchor  p    p    p    
conjunction bottom part rule re evaluates domains p    p    p   
may reduce singleton domains empty whenever compatible
selected fragment 
      centroid constraint
positions atoms n   c c   amino acids determined 
propagation algorithm enforces value pv pcg involved centroid constraint 

p
n    pn    dc    pc    dpc      pc    

centroid pn   pc   pc     pcg   a    p
    
cg    dpcg  cg pn   pc   pc     a   
cg pn   pc   pc     a  support function returns center mass
side chain amino acid considering points pn   pc   pc     described
sect        
      implementation details
proposed solver relies efficient c   implementation  carefully designed
allow additional tailored solving capability without need reshaping core structures 
internal representation domains finite domain variables abstracted two arrays length size initial domain  one array points
values boolean bit mask states whether value still
domain  flags set    current partial assignment cannot part solution
overall constraint  exactly one set    variable assigned value 
representation implies linear scan domains propagation
justified reasonably small size domains target application  typically less
    values   internal representation domains point variables simply
pair hmin  maxi uniquely characterizes  d box r    since variables used
mostly distance constraints  representation expressive enough  oct trees
considered significant advantage  
point variables propagation described above  variables instantiated
fragment selection 
   

fia constraint solver flexible protein models

management uniqueseq property     implemented dedicated data
structure based hash tables  every time pv assigned  value mapped  d
voxel fixed size   d grid implemented via hash table voxel indexes keys
points contained voxels values  operations performed o   
 amortized complexity  
    one jm constraints
briefly describe modeled two problems fiasco  jm constraint
able model geometrically assembly fragments therefore used every
protein model  single jm covers protein ensures flexibility  however long
proteins computational precision issues arise  beneficial model
protein multiple jm constraints  e g  jm  i  j  jm  j  k  amino acids
j covered jm constraints overlap common amino acid 
practical choice improves approximate search allows increase number
different solutions produced  practice  protein section handled jm constraint
potentially combined different arrangements sections  therefore 
expected number solutions found grows exponentially number jm
constraints  jm constraint parameters used control clustering precision
number conformations found 

   experimental results
report experimental results obtained fiasco system  available
http   www cs nmsu edu fiasco   experiments conducted linux intel core i 
         ghz  memory   gb  machine  solver implemented c   
fragment database adopted fread database shown effective loop structure prediction  choi   deane         parameters analysis      
use database fragments length    fragments classified amino
acid class frequency occurrence whole top     
set system model two applications described below  particular 
section     analyze loop modeling scenario focus performances jm
filtering examining filtering power computational costs  next  compare
quality loop conformations generated  measuring rmsd proposed loop
respect native conformation  present relationships among
jm parameters control quality efficiency 
section     show examples ab initio protein structure prediction
conclude comparison fiasco constraint solvers  protein models
described common subset constraints 
    loop modeling
loop modeling problem formalized presence two known  large  fragments
fixed space  sequence amino acids length n given connecting
two parts protein  jm constraint defined sequence  particular
attention starting ending points fixed  start first fragment
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure     example loop computed tool
end last fragment  namely sequence c    initial points  coordinates
 a    a    a    a     sequence c    final points  coordinates  e    e    e    e   
known  one caveat end points  due discrete nature fragment
assembly  unlikely exactly reach final points  accommodate errors 
require jm constraint produces results fall within threshold
corresponding final points 
figure    show example loop computed tool  the parts protein
connected shown left connecting loop right  
additional spatial constraints points  e g  no good regions determined presence
atoms  given  constant  now      a  asserts minimum distance
pairs atoms 
      filtered search space performances
selected    protein targets set non redundant x ray crystallography structures
done canutescu dunbrack         partitioned proteins   classes
according loop region lengths  n              model csp uses
fragment assembly model loop  particular using jm constraint loop
region 
assess filtering capabilities fiasco  perform exhaustive search generating solution protein targets  using clusterization    a  number
different fragments length   found amino acid  see fig       size
domains corresponding fdvs bound    this adequate sampling
describe reasonable amino acid flexibility  cases number fragments
exceeds          frequent ones kept 
increases likelihood generating loop structure similar native
one  loop length n generates exponential search space size bounded    n  
selected variable leftmost one  fragments selected decreasing frequency order 
imposed jm constraint every   consecutive amino acids  clustering
parameters set follows  kmin value equal size domains 

   

fi           
  
  
  
 

  

n  different fragments

constraint solver flexible protein models



c



e

f

g

h



k

l



n

p

q

r





v

w



amino acids

figure     number different fragments  after clustering  per amino acid dataset
used different values kmax based loop lengths  values r set
        setting  summary parameters listed table   
table   report average times needed exhaustively explore loop search
space  average number solutions generated 
n
 
 
  

  jm
 
 
 

jm parameters
kmin kmax

            
   
       
   
       

r
   
   
   

full jm
  solutions time  s 
   
    
     
     
      
     

table    loop modeling settings average running times  in seconds  number
solutions generated 

      jm approximated propagator quality
even approximated jm produces small set solutions  show
good representation overall variability protein structure  test 
compare solutions means rmsd original structures  experiments
carried    protein targets settings described table   
exception kmax loop set size     set     
figure    show bar chart rmsd predictions protein
loop within group targets analyzed  precisely  x axis       
loop length  protein targets  bar reports best rmsd  dark   average
rmsd  grey   worst rmsd  light grey  found  numbers bars represent
number loops found  multiplied factors indicated underneath   results
biased fragment database use  excluded fragments belong

   

fi   
    

   

   

   

    

 
   

   

   
    

    

    
   

   

   

    

    
    

    

    

    

    

    
   

    

    

   

 

    

 

best rmsd
avg rmsd
worst rmsd

 
 

 

rmsd  angstrm 

   

campeotto  dal palu  dovier  fioretto    pontelli

     

     

length  

length  

     

length   

figure     rmsd comparison loop set  x axis     protein targets 

deposited protein targets  therefore  possible reconstruct original
target loop none searches expected reach rmsd equal   
loops length       exploration whole conformational search space
using simple search procedure would result excessively long computation time 
enforces need propagator jm  filtering algorithm successfully removes
redundant conformations allows us cover whole search space short period
time 
fig     loop predictions calculated using fragments length    study
choice affects time accuracy sampling model loops length
   using fragment length          best rmsds reported figure    
experiments kept settings used  kmax         moreover  jm constraint
imposed fragments order cover whole fragment  e g  fragments
length   set jm constraint every three consecutive amino acids  set time out
     seconds 
notice increasing length fragments accuracy decreases due
reduced size domains  nevertheless  time reduced since sampling
performed smaller search space jm constraints cover longer sequences amino
acids  average times are                      seconds using fragments length   
     respectively 

   

fi 
 
 

 

rmsd  angstrm 

 

 

constraint solver flexible protein models

len 

len 

len 

figure     rmsd comparison loop sampling loops length    using fragments
length         

   

ficampeotto  dal palu  dovier  fioretto    pontelli

      comparison state of the art loop samplers
section  compare method three state of the art loop samplers  cyclic
coordinate descent  ccd  algorithm  canutescu   dunbrack         self organizing
algorithm  sos   liu  zhu  rassokhin    agrafiotis         falcm method  lee 
lee  park  coutsias    seok        
table   shows average best rmsd benchmarks length        
computed four programs  report results given table   canutescu
dunbrack ccd  table   liu et al  sos  table ii lee et al 
falcm method  rmsds obtained adopting settings jmf provided
best results previous section  see subsection         noted
results line produced systems 
loop
length
 
 
  

average  best  rmsd
ccd
sos
falcm
jmf
    
    
    
    
    
    
    
    
    
    
    
    

table    comparison loop sampling methods
execution time reported appear competitive  e g   considered
results reported soto et al         
      jm parameters analysis
section  analyze impact jm parameters quality best
solutions found execution times  particular  aim experiments
shed light relationship jm constraint settings results 
figure     analyze impact kmax execution times  left 
precision  right  filtering jm constraint  top bottom  use
                tests performed protein loops length    see section
above   adopting cluster parameters  r                       kmin        dot
plots represents average best rmsd found predictions  left 
average execution time  right   rmsd values tend decrease smaller clustering
parameters r number clusters increases  filtering time increases
kmax increases 
figure    study relation rmsd number jms
cover given target loop protein voxel side parameter  experiments
used values                            kmax   set r            
averaged rmsds values resulting sample set structures  relation
rmsd number jm well average worst computational times
shown fig     left  use medium length loop taken protein  xpc
 res           vary number jms cover loop  the side voxel
set  a   figure observe increasing number jms  i e 
covering less amino acids single jm  rmsd decreases computational
cost higher  notice best rmsd given loop covered   jm

   

fia constraint solver flexible protein models

   



    


   

   

    


r


   

r

time  s 

 
rmsd  a

   

   
   
   
   



   



   
   
   
   

   


   

   


   





     

   

   

   

    

    

    

    

jm kmax

     

jm kmax

    


   


   
    

   

r



   
   
   
   



   

time  s 

 
rmsd  a

   
r





   

   

   
   
   
   

   



   




   

   

    

    

     

   

    

jm kmax

    

     

jm kmax

   





   



   

r




   

   
   
   
   

time  s 

 
rmsd  a

   

r

   



   

   
   
   
   

   



   




    

     

   

   

    

   

jm kmax

    

    

     

jm kmax

figure     comparison best rmsd values execution times varying
kmax clustering parameter       top        center        bottom 

   

fi 
rmsd

 le 
 mxn
 fdf

 

 

 

 

 

                 

                 

               

            

             

 
 

rmsd

 

 

 

 

 

campeotto  dal palu  dovier  fioretto    pontelli

 

 

 

 

 

 

n of jm

  

  

  

  

   

voxelside

figure     left  rmsd  best average  time  average worst  values increasing
number jm constraints completely cover target loop length     right 
average  dotted line  best  solid line  rmsd targets  le  length     top  
 mxn length     medium    fdf length     low   jm voxel side parameter
voxels clustering varies        jm kmax parameter varies
          targets completely covered multiple jm constraints 
constraint  i e   jm constraint four consecutive amino acids   rule thumb
suggest use jm constraint cover     consecutive amino acids since
setting produces best results within acceptable time  fig     right report
best rmsd  solid line  average rmsd  dotted line  structures found using
multiple jm constraints cover sequences   consecutive amino acids whole
target proteins  namely  protein target length n  set jm constraints
         j    j   n    experiments  considered three proteins
relatively short length  order obtain complete exploration search space
reasonable computational time   le   length       mxn  length       fdf  length
     moreover used values                             side voxels used
clustering 
figure    observe voxel size  enabled uniqueseq 
impact clustering values lower   a  recall proteins diameter
less   a   voxel sides lower  a observe substantial improvement
terms quality  time required solver compute solutions increases
exponentially 
      results summary default parameters
provide guidelines may helpful tune jm parameters given
protein modeling problem  suggest several levels parametrization might used
according user needs respect running time prediction accuracy  stress

   

fia constraint solver flexible protein models

merely guidelines  outlined empirical evaluations  several
tests done establish desired tuning 
suggest set jm model sequence least   amino acids general
longer    payoff computational load jm clustering  default choice
kmin set average size variable domains involved jm constraint 
suggest set kmax least kmin greater        latter 
together number consecutive jm constraints  greatest impact
computational cost prediction accuracy  computational costs grow number
consecutive jm increases  time produce general higher
accuracy  trend exhibited growing kmax parameter  table   illustrates
five basic settings could used incrementally establish trade running
times prediction accuracy  first level  lev     associated faster computational
times lower accuracy last one  lev     slowest accurate 
second column table indicates length amino acid sequence modeled
single jm 
lev 
 
 
 
 
 

n jm
 
 
 
 
 

kmin
 d 
 d 
 d 
 d 
 d 

kmax
   
    
   
   
    


   
   
   
   
   

r
 
 
 
 
 

speed






accuracy






table    jm default parameters

    application protein structure prediction
protein structure prediction problem  model generic backbone multiple
jm constraints  principle  unique jm constraint model whole problem 
previous cases  split smaller parts  moreover  presence secondary
structure valid help placement jm constraints handle loops
consecutive pair  simple search generate pool conformations  energy
scoring select best candidate  used statistical energy function developed
   model  energy function used instead 
section  study applicability fiasco protein structure prediction
problem  particular  consider prediction problems secondary structure
elements protein given  furthermore  order assess potential structure 
introduce energy functionthe adopted previous studies 
precisely described http   www cs nmsu edu fiasco 
modeling  used information location type
secondary structure elements primary sequence provided directly protein
data bank  imposed sequence jm constraints every consecutive
pair secondary structure elements  number consecutive jm constraints varied
according length unstructured sequence modeled  covering  
amino acids single jm constraint  addition one jm constraint imposed
first amino acid beginning first secondary structure element another
   

ficampeotto  dal palu  dovier  fioretto    pontelli

end last secondary structure element last amino acid  the tails
protein   domains initial end points jm constraints set
admissible points  a box large enough contain protein   search phase 
first secondary structure deterministically set space  labeling proceeds
jm constraint attached leading next secondary structure on 
tails instantiated end 
propagation constraints generates set admissible structures  represents possible folds target protein  set  select structure
minimum energy  extract structure minimum rmsd  order evaluate
quality energy function  tests adopt fread database  table  
reports best energy values found fiasco  rmsd columns reported
corresponding rmsd associated conformation best energy found solver 
 jm column reports total number jm used model protein  together
maximum number consecutive jm adopted model contiguous sequence
amino acids  within parentheses  
protein id
 zdd
 gp 
 k d
 enh
 igd
 sn 
 ail
 b r
 jhg

len 
  
  
  
  
  
  
  
  
   

  jm
    
    
    
    
    
    
    
     
    

energy
      
      
      
      
      
      
      
      
      

rmsd
    
    
    
    
     
    
    
    
    

time  min  
     
    
    
     
     
     
    
    
    

table    ab initio prediction fiasco 
results show quality predictions computed fiasco      average
rmsd  competitive  and  shown following section  par better
produced methods   results particularly encouraging proteins longer
length  sampling search space aids development admissible structures 
time required fiasco completely explore search space depends strongly
type mutual arrangement secondary structure elements target 
example  protein  k d protein  enh length  fiasco
significantly faster first protein second one  observation
made proteins  igd  sn   results reported table   promising
suggest feasible approach solve ab initio prediction problem 
future work  explore integration local search techniques  e g   largeneighboring search   order sample search space decrease time
needed explore it 

   

fia constraint solver flexible protein models

    comparison fiasco state of the art constraint solvers
section  motivate choice designing ad hoc solver instead using
general purpose constraint solver  particular provide comparison fiasco
state of the art constraint solving  results justify choice implementing new
solver scratch instead using available constraint programming library constraint programming language  solver chosen comparison gecode  gecode
team         efficient solver winner recent minizinc challenges  stuckey  becket    fischer        
gecode recently introduced  in version      handling floating point variables 
nevertheless  since gecode fastest solver fd variables  first encoded
psp discretizing fragments positions  particular  multiplied real
number scaling factor       obtain integer values  spatial position encoded
triple variables  representing coordinates point  operation  e g  
multiplications  applied variables requires re scaling result  unfortunately
leads ineffective propagation  particularly evident dealing distance
constraints  require implementation euclidean distance pairs triples
variables 
order understand solvers capabilities propagate constraints placement overlapping fragment implemented three versions code  considered
different number constraints  precisely 
   implementation uses jm constraint  jm only 
   implementation adds alldistant constraint
   implementation adds alldistant centroid constraints
cases use complete search  in particular  clustering tabling constraints
lines         algorithm   disabled  
table    report execution times required fiasco gecode  with
considered constraints  determine increasing number solutions        
             solutions computed target protein  zdd length
    table   shows execution time solvers increases proportionally
number solutions found  however  fiasco one order magnitude faster gecode
unconstrained case  two orders magnitude faster cases  main
reason fiasco specifically developed handle finite domains  d point
variables  approximated fd variables gecode  constraints
approximations propagate poorly slowly  moreover  approximation fragments
using finite domain variables introduces approximation errors  grow search
phase  and consequently  less solutions returned constrained cases   errors
may result final structures relatively imprecise coordinates atoms
converted back real values 
table    consider small sequence four amino acids  ser trp thr trpthe
first four amino acids protein  le    generate solutions  report
values best average rmsd among structures sets solutions computed using fiasco gecode implementation complete enumeration
   

ficampeotto  dal palu  dovier  fioretto    pontelli

number
solutions
    
     
      
       

jm
     
     
     
      

fiasco
alldistant alldistant   centroid
     
     
     
     
     
     
      
      

jm
     
     
      
       

gecode
alldistant alldistant   centroid
     
     
      
      
       
       
       
       

table    comparison execution times fiasco gecode  increasing number
solutions different sets considered constraints 
domains  observe fiasco significantly faster exploring search space 
moreover  approximation introduces errors leads loss feasible solutions 

jm
alldistant
alldistant   centroid

n  sol 
      
      
      

fiasco
time  sec   rmsd
      
     
      
     
      
     

avg  rmsd
     
     
     

n  sol
      
      
      

gecode
time  sec   rmsd
       
     
       
     
       
     

avg  rmsd
     
     
     

table    number solutions  time  best rmsd  average rmsd set structures
found fiasco gecode complete enumeration solution space using
different constraints
encoded constraint satisfaction problem using new version
gecode allows employ float variables  labeled finite domain variables
allow select fragments  values point variables obtained constraint
propagation  since constraint propagation float variables based interval arithmetics 
turns amino acids intervals large able reconstructing protein evaluating energy value  instance  complete
assignment variables related fragments protein  zdd  domains
float variables associated position first two amino acids singletons 
related tenth amino acids intervals size one two a  even worse 
domains atoms eleventh amino acids unbounded  stage
labeling float variables required computational time orders magnitude higher
reported table   finite domain gecode implementation 
constraint solvers eclipse  cheadle  harvey  sadler  schimpf  shen    wallace        choco  choco team        support mixed use integer
real variables  eclipse prolog based language handles integer real variables together  however  great number matrix operations required application fit well prolog implementation  furthermore  current trend
eclipse replace direct constraint solving translation flatzinc 
case choco  current support real variables still development  c f 
http   choco sourceforge net userguide pdfpage     things may change
next releases 
experimented another constraint solver  implementing multi body
constraints using jacop library  jacop team         similar way done
gecode  eventually  tested protein used results reported table   

   

fia constraint solver flexible protein models

observe substantial difference terms execution time 
gecode implementation 
terms protein structure prediction  design fiasco influenced
previous work tuples system  dal palu et al          tuples
constraint solver protein structure prediction  based fragments assembly  figure   
compares performance tuples fiasco set proteins discussed
section      make comparison fair  make use energy function
systems assume secondary structure elements known  note
important differences two systems  tuples implemented using
constraint logic programming techniques  specifically  sicstus prolog  swedish institute
computer science         tuples make use floating point variables 
hand  tuples introduces heuristic search mechanism based large neighboring
search 
results show quality predictions computed fiasco      average
rmsd  better quality predictions computed tuples      average
rmsd   complete sampling search space allows us obtain better results
proteins longer length benchmark        instead  shorter proteins 
obtain comparable results  similarity quality depends use
energy function systems  notice energy function used designed
simpler model adopted tuples  c c    moreover  tuples based prolog
implementation provide floating point variables hence value must
rounded approximated  aspects explain quality differences
rmsd best rmsd found fiasco behavior
proteins  e g    zdd   gp     energy  rmsd values better fiasco even
corresponding energy  rmsd  values higher tuples  execution times
fiasco significantly faster tuples  spite fiascos lack sophisticated
search heuristic 
performed comparison state of the art online robetta predictor  raman  vernon  thompson  tyka  sadreyev  pei  kim  kellogg  dimaio  lange  kinch  sheffler  kim  das  grishin    baker        first four proteins table    built
dictionary     amino acid long peptides robetta interface 
disabled homology inference  order maintain fair comparison  results are 
 zdd computed   s      rmsd   gp  computed   s      rmsd   k d
computed   s      rmsd   enh computed   s      rmsd  noted
results line robetta predictor 
let us conclude section mentioning results reported previous section
 where compared fiasco tuples  provide implicit comparison another off the shelf solver  sicstus prolog constraint logic programming solver  swedish
institute computer science        

   conclusions
paper  presented novel constraint  joined multibody  model rigid bodies
connected joints  constrained degrees freedom  d space  presented
polynomial time approximated filtering algorithm joined multibody constraint 
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure     comparison rmsd execution time tuples fiasco

   

fia constraint solver flexible protein models

exploits geometrical features rigid bodies  particular  filtering algorithm
combined search heuristics produce pool admissible solutions
uniformly sampled  allows direct control quality number solutions 
filtering algorithm based  d clustering procedure able cope
high variability rigid bodies  preserving computational cost  practical
advantages joined multibody constraint shown extensive set real protein
simulations two main categories  protein loop reconstruction structure prediction
 ab initio   tests showed parameters constraint able control
effectively quality computational cost search  conclusion  constraint
solver fiasco able model effectively various common protein case studies analyses 
future work  applications side  plan explore protein loop closure
problem  use specific databases scoring functions  close problem
protein flexibility  plan use fiasco solver generate conformational space
long scale movements nuclear receptors  dal palu et al       b   finally  plan use
fiasco general context protein structure prediction combination local
search methods protein ligand spatial constraints  constraint side  plan
integrate jm filtering algorithm distance constraints  order generate
accurate clusters  plan integrate spatial constraints inferred bounds
energy terms  e g   favorable contributions provided pairing secondary structure
elements translate energy bounds distance constraints   plan investigate
use multiple jm constraints model super secondary structures placement 
useful capture important functional structural protein features  latter
thought imposing several spatial path preferences given chain points  finally 
intend integrate constraint solver visual interface make easily available
biologist practitioners porting parts tool within gpu based
framework recently explored campeotto  dovier  pontelli        

acknowledgments
thank federico fogolari comments several parts work  authors
would express gratitude jair reviewers helped us sensibly improve
presentation 

references
al bluwi  i   simeon  t     cortes  j          motion planning algorithms molecular
simulations  survey  computer science review                
alberts  b   johnson  a   lewis  j   raff  m   roberts  k     walter  p          molecular
biology cell   th edition edition   garland science 
anfinsen  c  b          principles govern folding protein chains  science      
       
apt  k          principles constraint programming  cambridge university press 
backofen  r     will  s          constraint based approach fast exact structure
prediction   dimensional protein models  constraints              
   

ficampeotto  dal palu  dovier  fioretto    pontelli

backofen  r   will  s     bornberg bauer  e          application constraint programming techniques structure prediction lattice proteins extended alphabet 
bioinformatics                
baker  d     sali  a          protein structure prediction structual genomics  science 
                 
barahona  p     krippahl  l          constraint programming structural bioinformatics 
constraints                
ben david  m   noivirt brik  o   paz  a   prilusky  j   sussman  j  l     levy  y         
assessment casp  structure predictions template free targets  proteins     
     
bennett  w     huber  r          structural functional aspects domain motions
proteins  crit  rev  biochem              
borning  a          programming language aspects thinglab  constraintoriented simulation laboratory  acm transactions programming languages
systems                
cahill  s   cahill  m     cahill  k          kinematics protein folding  journal
computational chemistry                    
campeotto  f   dovier  a     pontelli  e          protein structure prediction gpu 
declarative approach multi agent framework  international conference
parallel processing  icpp   pp          ieee computer society press 
campeotto  f   dal palu  a   dovier  a   fioretto  f     pontelli  e          filtering
technique fragment assembly based proteins loop modeling constraints 
milano  m   ed    cp  vol       lecture notes computer science  pp         
springer 
canutescu  a     dunbrack  r          cyclic coordinate descent  robotics algorithm
protein loop closure  protein sci             
cheadle  a  m   harvey  w   sadler  a  j   schimpf  j   shen  k     wallace  m  g         
eclipse  introduction  technical report ic parc      ic parc  imperial college
london 
chelvanayagam  g   knecht  l   jenny  t   benner  s     gonnet  g          combinatorial distance constraint approach predicting protein tertiary models
known secondary structure  folding design            
choco team         choco  open source java constraint programming library 
workshop open source software integer constraint programming  available http   www emn fr z info choco solver  
choi  y     deane  c  m          fread revisited  accurate loop structure prediction
using database search algorithm  proteins                 
clementi  c          coarse grained models protein folding  toy models predictive
tools   curr opin struct biol           
   

fia constraint solver flexible protein models

corblin  f   trilling  l     fanchon  e          constraint logic programming modeling
biological system described logical network  workshop constraintbased methods bioinformatics 
cortes  j     al bluwi  i          robotics apporach enhance conformational sampling proteins  international design engineering technical conferences
computers information engineering conference  vol     pp            asme 
crescenzi  p   goldman  d   papadimitriou  c   piccolboni  a     yannakakis  m         
complexity protein folding  proceedings thirtieth annual acm
symposium theory computing  pp          acm press 
dal palu  a   dovier  a   fogolari  f     pontelli  e       a   protein structure analysis
constraint programming  cozzini  p     kellogg  g   eds    computational
approaches nuclear receptors  chap     pp        royal society chemistry 
dal palu  a   spyrakis  f     cozzini  p       b   new approach investigating protein
flexibility based constraint logic programming  first application case
estrogen receptor  european journal medicinal chemistry             
dal palu  a   dovier  a     fogolari  f          constraint logic programming approach
protein structure prediction  bmc bioinformatics         
dal palu  a   dovier  a   fogolari  f     pontelli  e          clp based protein fragment
assembly  theory practice logic programming                   
dal palu  a   dovier  a   fogolari  f     pontelli  e          exploring protein fragment
assembly using clp  walsh  t   ed    proceedings international joint
conference artificial intelligence  ijcai  pp            ijcai aaai 
dal palu  a   dovier  a     pontelli  e          new constraint solver  d lattices
application protein folding problem  international conference logic
programming artificial intelligence reasoning  pp        springer verlag 
dal palu  a   dovier  a     pontelli  e          constraint solver discrete lattices 
parallelization  application protein structure prediction  software practice
experience                    
dal palu  a   dovier  a     pontelli  e          computing approximate solutions
protein structure determination problem using global constraints discrete
crystal lattices  international journal data mining bioinformatics        
    
deane  c     blundell  t          coda  combined algorithm predicting structurally variable regions protein models  protein sci             
debartolo  j   hocky  g   wilde  m   xu  j   freed  k     sosnick  t          protein
structure prediction enhanced evolutionary diversity  speed  protein science 
               
dotu  i   cebrian  m   van hentenryck  p     clote  p          lattice protein structure
prediction revisited  ieee acm trans  comput  biology bioinform             
     
   

ficampeotto  dal palu  dovier  fioretto    pontelli

dunbrack  r          rotamer libraries   st century  curr  opin  struct  biol  
               
erdem  e          applications answer set programming phylogenetic systematics 
logic programming  knowledge representation  nonmonotonic reasoning  pp 
        springer verlag 
erdem  e     ture  f          efficient haplotype inference answer set programming 
national conference artificial intelligence  aaai   pp          aaai mit
press 
felts  a   gallicchio  e   chekmarev  d   paris  k   friesner  r     levy  r          prediction protein loop conformations using agbnp implicit solvent model
torsion angle sampling  j chem theory comput            
fiser  a   do  r     sali  a          modeling loops protein structures  protein sci 
            
fogolari  f   esposito  g   viglino  p     cattarinussi  s          modeling polypeptide
chains c chains  c chains c   c chains ellipsoidal lateral
chains  biophysical journal               
fogolari  f   pieri  l   dovier  a   bortolussi  l   giugliarelli  g   corazza  a   esposito  g  
  viglino  p          scoring predictive models using reduced representation
proteins  model energy definition  bmc structural biology              
fogolari  f   corazza  a   viglino  p     esposito  g          fast structure similarity
searches among protein models  efficient clustering protein fragments  algorithms
molecular biology        
fujitsuka  y   chikenji  g     takada  s          simfold energy function de novo
protein structure prediction  consensus rosetta  proteins             
gay  s   fages  f   martinez  t     soliman  s          constraint program subgraph
epimorphisms application identifying model reductions systems biology 
workshop constraint based methods bioinformatics 
gebser  m   schaub  t   thiele  s     veber  p          detecting inconsistencies large
biological networks answer set programming  theory practice logic
programming                   
gecode team         gecode  generic constraint development environment  available
http   www gecode org 
go  n     scheraga  h          ring closure local conformational deformations
chain molecules  macromolecules            
graca  a   marques silva  j   lynce  i     oliveira  a          haplotype inference
pseudo boolean optimization  annals or                  
guns  t   sun  h   marchal  k     nijssen  s          cis regulatory module detection using
constraint programming  ieee international conference bioinformatics
biomedicine  bibm   pp         
   

fia constraint solver flexible protein models

handl  j   knowles  j   vernon  r   baker  d     lovell  s          dual role
fragments fragment assembly methods de novo protein structure prediction 
proteins  structure  function bioinformatics                 
hartenberg  r     denavit  j          kinematic notation lower pair mechanisms
based matrices  journal applied mechanics             
hegler  j   latzer  j   shehu  a   clementi  c     wolynes  p          restriction versus
guidance protein structure prediction  proc natl acad sci u s a                  
      
jacobson  m   pincus  d   rapp  c   day  t   honig  b   shaw  d     friesner  r         
hierarchical approach all atom protein loop prediction  proteins             
jacop team         jacop web page  visited november       
http   www jacop eu 

available

jamroz  m     kolinski  a          modeling loops proteins  multi method approach  bmc struct  biol          
jauch  r   yeo  h   kolatkar  p  r     clarke  n  d          assessment casp  structure
predictions template free targets  proteins           
jones  d          predicting novel protein folds using fragfold  proteins     
       
karplus  k   karchin  r   draper  j   casper  j   mandel gutfreund  y   diekhans  m  
  source   r  h          combining local structure  fold recognition  new fold
methods protein structure prediction  proteins                 
karplus  m     shakhnovich  e          protein folding  theoretical studies thermodynamics dynamics  protein folding  pp          wh freeman 
kim  d  e   blum  b   bradley  p     baker  d          sampling bottlenecks de novo
protein structure prediction  journal molecular biology                   
kinch  l   yong shi  s   cong  q   cheng  h   liao  y     grishin  n  v          casp 
assessment free modeling target predictions  proteins           
kirillova  s   cortes  j   stefaniu  a     simeon  t          nma guided path planning approach computing large amplitude conformational changes proteins 
proteins  structure  function  bioinformatics                 
kolodny  r   guibas  l   levitt  m     koehl  p          inverse kinematics biology 
protein loop closure problem  international journal robotics research 
                 
krippahl  l     barahona  p          psico  solving protein structures constraint
programming optimization  constraints                  
krippahl  l     barahona  p          applying constraint programming rigid body
protein docking  principles practice constraint programming  pp     
     springer verlag 
krippahl  l     barahona  p          applying constraint programming protein structure determination  principles practice constraint programming  pp     
     springer verlag 
   

ficampeotto  dal palu  dovier  fioretto    pontelli

larhlimi  a     bockmayr  a          new constraint based description steadystate flux cone metabolic networks  discrete applied mathematics           
         
lavalle  s          planning algorithms  cambridge university press 
lazaridis  t   archontis  g     karplus  m          enthalpic contribution protein
stability  atom based calculations statistical mechanics  adv  protein chem  
           
lee  j   kim  s   joo  k   kim  i     lee  j          prediction protein tertiary structure
using profesy  novel method based fragment assembly conformational
space annealing  proteins                 
lee  j   lee  d   park  h   coutsias  e     seok  c          protein loop modeling using
fragment assembly analytical loop closure  proteins                    
liu  p   zhu  f   rassokhin  d     agrafiotis  d          self organizing algorithm
modeling protein loops  plos comput biol        
lovell  s   davis  i   arendall  w   de bakker  p   word  j   prisant  m   richardson  j    
richardson  d          structure validation c geometry    c deviation 
proteins             
mann  m     dal palu  a          lattice model refinement protein structures 
workshop constraint based methods bioinformatics 
micheletti  c   seno  f     maritan  a          recurrent oligomers proteins  optimal scheme reconciling accurate concise backbone representations automated
folding design studies  proteins                 
moll  m   schwarz  d     kavraki  l          roadmap methods protein folding  humana press 
molloy  k   saleh  s     shehu  a          probabilistic search energy guidance
biased decoy sampling ab initio protein structure prediction  ieee acm trans 
comput  biology bioinform  preprint 
neumaier  a          molecular modeling proteins mathematical prediction
protein structure  siam review             
noonan  k   obrien  d     snoeyink  j          protein backbone motion inverse
kinematics  international journal robotics research                  
olson  b  s   molloy  k     shehu  a          search protein native state
probabilistic sampling approach  j  bioinformatics computational biology 
              
raman  s   vernon  r   thompson  j   tyka  m   sadreyev  r   pei  j   kim  d   kellogg  e  
dimaio  f   lange  o   kinch  l   sheffler  w   kim  b  h   das  r   grishin  n  v  
  baker  d          structure prediction casp  all atom refinement using
rosetta  proteins      suppl           
rapp  c  s     friesner  r  a          prediction loop geometries using generalized
born model solvation effects  proteins             
   

fia constraint solver flexible protein models

ray  o   soh  t     inoue  k          analyzing pathways using asp based approaches 
algebraic numeric biology   th international conference  pp          springer
verlag 
rossi  f   van beek  p     walsh  t          handbook constraint programming  elsevier
science inc 
rufino  s   donate  l   canard  l     blundell  t          predicting conformational
class short medium size loops connecting regular secondary structures 
application comparative modeling  j  mol  biol               
shehu  a          ab initio tree based exploration enhance sampling low energy
protein conformations  proceedings robotics  science systems v 
shehu  a          conformational search protein native state  pp          john
wiley   sons  inc 
shehu  a     kavraki  l          modeling structures motions loops protein
molecules  entropy             
shen  m     sali  a          statistical potential assessment prediction protein
structures  protein sci               
shih  e     hwang  m  j          use distance constraints protein protein
docking computations  proteins  structure  function  bioinformatics         
       
shmygelska  a     hoos  h          ant colony optimisation algorithm  d
 d hydrophobic polar protein folding problem  bmc bioinformatics          
shmygelska  a     levitt  m          generalized ensemble methods de novo structure
prediction  proceedings national academy science  usa                
     
simoncini  d   berenger  f   shrestha  r     zhang  k          probabilistic fragmentbased protein structure prediction algorithm  plos one         e      
simons  k   kooperberg  c   huang  e     baker  d          assembly protein tertiary
structures fragments similar local sequences using simulated annealing
bayesian scoring functions  j  mol  biol               
skolnick  j   fetrow  j     kolinski  a          structural genomics importance
gene function analysis  nat  biotechnology                 
soto  c   fasnacht  m   zhu  j   forrest  l     honig  b          loop modeling  sampling 
filtering  scoring  proteins  structure  function  bioinformatics         
    
spassov  v   flook  p     yan  l          looper  molecular mechanics based algorithm protein loop prediction  protein eng            
stuckey  p  j   becket  r     fischer  j          philosophy minizinc challenge 
constraints                 
sussmann  g     steele  g          constraints  language expressing almosthierarchical descriptions  artificial intelligence              
   

ficampeotto  dal palu  dovier  fioretto    pontelli

sutherland  i          sketchpad  man machine graphical communication system  tech 
rep       lincoln laboratory  mit 
swedish institute computer science         sicstus prolog home page  http   www 
sics se sicstus  
thebault  p   de givry  s   schiex  t     gaspin  c          combining constraint processing pattern matching describe locate structured motifs genomic
sequences  fifth workshop modeling solving problems constraints 
pp       
tsai  y   huang  y   yu  c     lu  c          music  tool multiple sequence
alignment constraints  bioinformatics                    
xiang  z   soto  c     honig  b          evaluating conformal energies  colony energy
application problem loop prediction  pnas               
xu  d     zhang  y          ab initio protein structure assembly using continuous
structure fragments optimized knowledge based force field  proteins         
         
yang  r          multiple protein dna sequence alignment constraints  international conference practical applications constraint programming 
yap  r          parametric sequence alignment constraints  constraints            
yap  r     chuan  h          constraint logic programming framework constructing
dna restriction maps  artificial intelligence medicine                
yue  k     dill  k          constraint based assembly tertiary protein structures
secondary structure elements  proteins science                   
zhang  m     kavraki  l          new method fast accurate derivation
molecular conformations  journal chemical information computer sciences 
             
zhang  y     hauser  k          unbiased  scalable sampling protein loop conformations probabilistic priors  bmc structural biology   to appear http 
   www  indiana  edu    motion  slikmc  papers  bmc  zhang  pdf   
zhou  h     zhou  y          distance scaled  finite ideal gas reference state improves
structure derived potentials mean force structure selection stability prediction  protein sci               

    


