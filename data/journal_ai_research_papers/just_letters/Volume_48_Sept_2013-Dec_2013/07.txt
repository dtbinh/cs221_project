journal of artificial intelligence research                   

submitted        published      

a constraint solver for flexible protein models
federico campeotto

campe  nmsu edu

dept  computer science  new mexico state university
depts  math    computer science  university of udine

alessandro dal palu

alessandro dalpalu unipr it

dept  math    computer science  university of parma

agostino dovier

agostino dovier uniud it

dept  math    computer science  university of udine

ferdinando fioretto

ffiorett cs nmsu edu

dept  computer science  new mexico state university
depts  math    computer science  university of udine

enrico pontelli

epontell cs nmsu edu

dept  computer science  new mexico state university

abstract
this paper proposes the formalization and implementation of a novel class of constraints aimed at modeling problems related to placement of multi body systems in the
  dimensional space  each multi body is a system composed of body elements  connected
by joint relationships and constrained by geometric properties  the emphasis of this investigation is the use of multi body systems to model native conformations of protein
structureswhere each body represents an entity of the protein  e g   an amino acid  a
small peptide  and the geometric constraints are related to the spatial properties of the
composing atoms  the paper explores the use of the proposed class of constraints to support
a variety of different structural analysis of proteins  such as loop modeling and structure
prediction 
the declarative nature of a constraint based encoding provides elaboration tolerance
and the ability to make use of any additional knowledge in the analysis studies  the filtering
capabilities of the proposed constraints also allow to control the number of representative
solutions that are withdrawn from the conformational space of the protein  by means of
criteria driven by uniform distribution sampling principles  in this scenario it is possible to
select the desired degree of precision and or number of solutions  the filtering component
automatically excludes configurations that violate the spatial and geometric properties of
the composing multi body system  the paper illustrates the implementation of a constraint
solver based on the multi body perspective and its empirical evaluation on protein structure
analysis problems 

   introduction
constraint programming  cp  is a declarative programming methodology that has gained
a predominant role in addressing large scale combinatorial and optimization problems  as
a paradigm  cp provides the tools necessary to guide the modeling and resolution of search
problemsin particular  it offers declarative problem modeling  in terms of variables and
constraints   the ability to rapidly propagate the effects of search decisions  and flexible
and efficient procedures to explore the search space of possible solutions  the field of cp
c
    
ai access foundation  all rights reserved 

ficampeotto  dal palu  dovier  fioretto    pontelli

has its roots on the seminal work by sutherland        in the sketchpad system  and the
successive efforts in systems like constraints  sussmann   steele        and thinglab
 borning         over the years  cp has become a paradigm of choice to address hard search
problems  drawing and integrating ideas from diverse domains  like artificial intelligence
and operations research  rossi  van beek    walsh         the declarative nature of
cp enables fast and natural modeling of problems  facilitating not only development  but
the rapid exploration of different models and resolution techniques  e g   modeling choices 
search heuristics  
in recent years  several research groups have started appreciating the potential of constraint programming within the realm of bioinformatics  the field of bioinformatics presents
a number of open research problems that are grounded in critical exploration of combinatorial search space  highly suitable to be manipulated through constraint based search 
constraint methodologies have been applied to analyze dna sequences for instance  to
locate cis regulatory elements  guns  sun  marchal    nijssen         to dna restriction
maps construction  yap   chuan         and to pair wise and multiple sequence alignment  yang        yap        tsai  huang  yu    lu         constraint methodologies
have been applied to biological networks  corblin  trilling    fanchon        larhlimi  
bockmayr        ray  soh    inoue        gay  fages  martinez    soliman        gebser 
schaub  thiele    veber        and to other biological inference problems  such as haplotype inference  graca  marques silva  lynce    oliveira        erdem   ture         and
phylogenetic inference  erdem        
a particular area of bioinformatics that has witnessed an extensive use of cp techniques
is the domain of structural biologyi e   the branch of molecular biology and biochemistry
that deals with the molecular structure of nucleic acids and proteins  and how the structure
affects behavior and functions  constraint programming has progressively gained a pivotal
role in providing effective ways to explore the space of conformations of macromolecules 
to address problems like secondary and tertiary structure prediction  flexibility  motif discovery  docking  backofen  will    bornberg bauer        krippahl   barahona       
thebault  de givry  schiex    gaspin        dal palu  dovier    pontelli        mann
  dal palu        shih   hwang        krippahl   barahona        dal palu  spyrakis 
  cozzini      b  chelvanayagam  knecht  jenny  benner    gonnet        yue   dill 
       two comprehensive surveys on the use of constraint based methods in structural
bioinformatics have been recently proposed  dal palu  dovier  fogolari    pontelli      a 
barahona   krippahl        
our focus in this work is on the use of constraint based technology to support structural
studies of proteins  proteins are macromolecules of fundamental importance in the way they
regulate vital functions in all biological processes  their structural properties are critical in
determining the biological functions of proteins  skolnick  fetrow    kolinski        baker
  sali        and in investigating protein protein interactions  which are central to virtually all cellular processes  alberts  johnson  lewis  raff  roberts    walter         we
refer to the protein structure prediction  psp  problem as the problem of determining the
tertiary structure of a protein from knowledge of its primary structure and or from knowledge of other structures  e g   secondary structure components  templates from homologous
proteins   the psp problem is also often broken down to specialized classes of problems
related to specific aspects of the tertiary structure of a protein  such as side chain geometry
   

fia constraint solver for flexible protein models

prediction  dunbrack         loop modeling prediction  go   scheraga        xiang  soto 
  honig        rufino  donate  canard    blundell        soto  fasnacht  zhu  forrest   
honig         and protein flexibility investigation  bennett   huber        
all these classes of problems share common rootsthe need to track the possible conformations of chains of amino acids  the variations of the problem relate to factors like the
length of the chain being considered  from short peptides in the case of loop modeling to
entire proteins in the general psp case  and the diverse criteria employed in the selection
of the solutions  as  for instance  the lowest basin of the effective energy surface  composed
by the intra molecular energy of the protein plus the solvation free energy  karplus  
shakhnovich        lazaridis  archontis    karplus        
modeling the variability of a protein chain involves many degrees of freedom which are
needed to represent different protein conformations  tracking this variability requires the
exploration of a vast conformational space  model simplifications can be adopted to reduce
such computational cost  for instance backbone only models represent only the backbone of
proteins  the side chain representation could be simplified to a single central point  centroid 
describing its center of mass  or one can adopt approximated representation of the space
though lattice models 
nevertheless  even under strong simplifications  the search space remains intractable
and prevents the use of brute force search methods in the space of possible conformations
 crescenzi  goldman  papadimitriou  piccolboni    yannakakis        
constraint programming methodologies have found natural use in addressing psp and
related problemswhere structural and chemical properties have been modeled in terms
of constraints over spatial positions of atoms  transforming the search of conformations
into a constraint satisfaction optimization problem  the proposed approaches range from
pure ab initio methods  backofen et al         dal palu et al         to methods based on
nmr data  krippahl   barahona        to methods based on fragments assembly  dal
palu  dovier  fogolari    pontelli         in spite of all these efforts  the design of effective
approaches to filter the space of conformations and lead to a feasible search remains a
challenging and open problem 
in this work we present a constraint solver targeted at modeling a general class of protein
structure studies  in particular our solution is suitable to address protein structure analysis
study  requiring the generation of a set of unbiased sampled diverse conformations which
satisfy certain given restraints  one of the unique features of the solution presented in this
work is its capability to generate a uniformly distributed sampling of target protein regions
among a given portion of cartesian space and with selected granularityaccounting both
for spatial and rotational properties 
we abstract the problem as a general multi body system  where each composing body is
constrained by means of geometric properties and it is related to other bodies through joint
relationships  each body can represent an entity in the protein  such as an individual amino
acid or a small peptide  e g   a protein fragment   bodies relate to the spatial positions and
organization of individual atoms composing it 
the view of the exploration of protein structures as multi body systems suggests a number of different constraints  that can be used to model different classes of structural studies
and applied to filter infeasible  or unlikely  conformations  we propose an investigation of
several classes of constraints  in terms of both their theoretical properties and practical use
   

ficampeotto  dal palu  dovier  fioretto    pontelli

for filtering  particular emphasis is given to the joined multibody  jm  constraint  whose
satisfaction we prove to be np complete  realistic protein models require the assembly of
hundreds of different body versions  making the problem intractable  we study an efficient
approximated propagator  called jm filtering  jmf   that allows us to efficiently compute
classes of solutions  partitioned by structural similarity and controlled tolerance for error 
this perspective is novel and holds strong potential  the structural problems we are investigating are computationally intractable  the use of global constraints specifically designed
to meet their needs enables a more effective exploration of the search space and a greater
potential for effective approximations 
the multi body model provides an interesting perspective in exploring the space of
conformationswhile the actual search operates on discrete sets of alternatives  e g   sets of
fragments   the filtering process avails of reasoning processes that operates with continuous
domain  this allows the propagation and filtering to be effective 
the proposed multi body constraints and filtering techniques constitute the core of the
resolution engine of fiasco  fragment based interactive assembly for protein structure
prediction with constraints   an efficient c   based constraint solver  we demonstrate
the flexibility and efficiency of fiasco by using its engine to model and solve a class
of problems derived from loop modeling instances  throughout the paper we show the
ability of fiasco of providing a uniform and efficient modeling platform for studying
different structural properties  that have been  so far  addressed only using significantly
distinct methods and tools   the declarative nature of constraint based methods supports
a level of elaboration tolerance that is not offered by other frameworks for protein structure
prediction  facilitating the integration of additional knowledge in guiding the studies  e g  
availability of information about secondary structure elements  
the rest of the paper is organized as follows  in section    we provide a high level
background on the biological and chemical properties of proteins and review the most commonly used approaches to address structural studies  in section    we develop the constraint
framework for dealing with fragments and multi body structures  section   describes the
implementation of the constraints and their propagation schemes in the fiasco system 
in section   we report the experimental results from using fiasco on a collection of
benchmarks on loop modeling  section   provides some concluding remarks 
a preliminary version of the research pursued in this paper was presented  campeotto 
dal palu  dovier  fioretto    pontelli         while the work of campeotto et al  focused
on one new class of constraints targeting the problem of loop closure  the work presented
in this paper provides a comprehensive constraint system  focused on modeling structural
protein properties and investigating different types of problems  e g   structure prediction 
studies of flexibility   the present manuscript includes also a more precise and detailed
formalization and a more extensive experimentation and comparison 

   background  general context  and related work
in this section we will briefly review some basic biology notions  introduce the problems we
are tackling in this paper and refer to a selection of the related literature 
   

fia constraint solver for flexible protein models

h

side
chain

n

c

h

h

n
c 

h
c

o
c 
side
chain

o

figure    a schematic sequence of two amino acids showing the amino acid backbone and
their side chains  the arrow from c   to n denotes the peptidic bond 
    general background
a protein is a molecule made of smaller building blocks  called amino acids  one amino acid
can be connected to another one by a peptidic bond  several amino acids can be pairwise
connected into a linear chain that forms the whole protein  the backbone of a protein  as
illustrated in figure    is formed by a sequence of n c c   atoms contained in each amino
acid  the backbone is rather flexible and it allows a large degree of freedom to the protein 
each amino acid is characterized by a variable group of atoms that influences the specific
physical and chemical properties  this group  named side chain  ranges from   to    atoms
and connects to the c atom of each amino acid  there are    kinds of amino acids found
in common eukaryotic organisms 
proteins can be made of    up to        amino acids  while an average globular protein
is about     amino acids long  each amino acid contains     atoms  therefore the number
of atoms and arrangements in the space can grow very easily beyond any computational
power  since the beginning of protein simulation studies  different algorithms for exploring the conformations have been devised  such as molecular dynamics  local search  monte
carlo  genetic algorithms  constraint approaches  as well as different geometric representations  neumaier        
in the literature  several geometric models for proteins have been proposed  one choice
that influences the quality and the complexity of computational approaches is the number
of points that describe a single amino acid 
the simplest representation is the one where each amino acid is represented by one
point  typically the c atom  given its robust geometric property  the distance between the
c atoms of two consecutive amino acids is preserved with a low variance  roughly     a  
usually  volumetric constraints are enforced over those points  in order to simulate the
average occupancy of each amino acid  this representation can be visualized as a chain of
beads that can be moved in the space 
more refined representation models store some  or all  the points of the backbone  plus
a centroid of mass  cg  that represents the whole side chain that connects to the c atom 
in these models  each amino acid is described by different c cg distances and cg volumes 
the centroid is an approximation of the side chain flexibility and allows for more refined
energetic models  while the number of points to be taken care of is still low  in this paper

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    the native structure of intact influenza virus m  protein  indexed as  ea 
in the pdb  modeled as full atom  with the    model  and with the simple c c model
 from left to right   the secondary structures   helices  are emphasized 

figure    amino acid concatenation in the    model
we use a particular case of these simplified models  the    model  described precisely
below  this is a particular instance of coarse grained protein models  clementi       
shehu         at the end of the spectrum  each atom in the amino acid is represented by
one point  this representation is the most accurate  and at the same time allows for the
most accurate energetic considerations  the drawback is that the computational demand
for handling backbone and side chain flexibility increases significantly 
in figure   we report three representations for the same protein 
in this paper we select the intermediate representation for amino acids where the atoms
n  c   c   of the backbone and the centroid of the side chain  cg  are accounted for  we
also include an oxygen  o  atom attached to the c   atom  because this atom together with
the c   and n identifies a triangle that is chemically stable along the backbone and it is used
for the assembly of amino acids  see below for a complete formalization   the position of
the two h atoms in the backbone can be deduced by the position the other atoms and we
will not deal with them explicitly  in conclusion  we deal with   atomic elements per amino
acid  the   atoms n c c   o and the centroid cg  we briefly refer to this representation as to
the    model  figure   illustrates how these atoms are involved in the concatenation of
two consecutive amino acids  inter atomic distances between consecutive atoms are fixed
due to their chemical bonds  thus  the differences between these structures are identified
by the differences between the angles involved  it is common to find substructures of a

   

fia constraint solver for flexible protein models

protein where consecutive amino acids are arranged according to repeated and characteristic
patterns  this property is found in almost every protein  we refer to these typical patterns
as secondary structure elements  the most common examples are  helices and  sheets
 see figure    
    context of the proposed work
in this paper we present a tool for assembling and reasoning about amino acids in the
space  as in other similar approaches  e g  simons  kooperberg  huang    baker        
the system relies on a set of admissible elementary shapes  or fragments  that represents
the spatial dictionary of arrangements for every part of a protein 
each element of the dictionary is general enough to describe the specific atomic structure
of either a single amino acid or a longer sequence  even hundreds of amino acids long   for
each amino acid sequence  several alternative arrangements are expected to populate the
database  so that to offer various hypothesis about the local shape of the sequence  the
protein is partitioned into contiguous fragments that can be arranged according to one of
the possible shapes recorded in the database 
a sequence of amino acids is free to rotate its bonds in the space  typically two degrees
of freedom along the backbone and several others along the side chain   however  due to
chemical properties and physical occupancy that are specific to the types of amino acids
involved and the surrounding environment  some arrangements are impossible and or unlikely  the core assumption in assembling approaches is to rely on a statistical database of
arrangements to describe local and feasible behavior  in order to direct the search to candidates that have high probability and are energetically favorable  the presence of multiple
candidate fragments for every part of the protein requires a combinatorial search among the
possible choices that  once assembled together  leads to alternative putative configurations
for the protein  the search process is in charge of verifying the feasibility of each assembly 
since the combination of local arrangements could generate a non feasible global shape  e g  
one that leads to a spatial clash between atoms from different fragments  if one  or more 
fragment is described by one single arrangement  that part of the protein is rigidly imposed 
this particular degenerate case can be exploited to describe rigid parts of the protein  a
specific combination of fragment length and number of instances for each fragment determines the type of protein problem being modeled  we can range from complete backbone
flexibility  fragments made of hundreds of choices for each amino acids  to secondary structure   loop models  interleaving of longer fragments modeling helices  strands and shorter
fragments  
the library of fragments is usually derived from the content of the protein data bank
 pdb  www pdb org  that contains more than        protein structures  the design adopted
in our study is parametric on the choice of the library of fragments to use  for example 
our experiments use a library of fragments derived from a subset of the pdb known as
top      lovell  davis  arendall  de bakker  word  prisant  richardson    richardson 
       which contains non redundant proteins and preserves statistical relevance  alternative libraries of fragments can be obtained through the use of sophisticated protein database
search algorithms  such as fread  choi   deane         we retrieve information depending on the specific amino acid sequence  since local properties greatly influence the typical

   

ficampeotto  dal palu  dovier  fioretto    pontelli

arrangements observed  moreover  we build libraries for different sequences lengths h  even
if for longer sequences the statistical coverage becomes weak  nevertheless  micheletti  seno 
and maritan        conjectured that a relatively small set of fragment shapes  a few dozens 
of length    is able to describe virtually any protein  handl  knowles  vernon  baker  and
lovell        demonstrate how the size and the structure of the search space is affected
by the choice of the fragment length and how this can be used to optimize the search process  similar considerations have been explored by others  hegler  latzer  shehu  clementi 
  wolynes         recent work show how to efficiently build such dictionaries  fogolari 
corazza  viglino    esposito         these models can be easily accommodated into our
framework 
each considered sequence is associated to several configurations of    models  placed
according to a standardized coordinate system  in this activity  we also consider the c   o
group of the preceding amino acid and the n atom of the following amino acid  this
extra information is needed for fragments combination  assuming that the fragment will
be connected by two peptidic bonds  therefore  for a specific sequence  we store all the
occurrences of
c   o n c c   o n
   z  
h times
and relative positions  in order to reduce the impact of the specific properties of the
database used  we cluster this set in such a way that if two fragments have a rmsd  less
than a given threshold  just one of them is stored  for example  for length h     and a
rmsd threshold of   a  we can derive a fragment database of roughly    fragments per
amino acid 
the cg information is added later using statistical considerations about side chain mobility  that are not accounted for during the clustering described above  fogolari  esposito 
viglino    cattarinussi        
    protein structure prediction
in the protein structure prediction problem  the sequence of amino acids composing a protein  known as the primary structure  is given as input  the task is to predict the three
dimensional   d  shape  known as the native conformation or tertiary structure  of the
protein under standard conditions 
the common assumption  based on anfinsens work         is that the  d structure
which minimizes some given energy function modeling the atomic force fields  is the candidate that best approximates the functional state of a protein  in such setting  the choice
of the number of atoms used to represent each amino acid controls the quality and the
computational complexity 
moreover  the spatial domains where the proteins points  e g   atoms  centroids  can
be placed have an impact on the type of algorithms and search that can be performed 
the domain can be either continuous  often represented by floating point coordinates  or
discrete  often derived from a discretization of the space based on a crystal lattice structure 
   the root mean square deviation captures the overall similarity in space of corresponding atoms  by
performing an optimal roto translation to best overlap the two structures 

   

fia constraint solver for flexible protein models

once the geometric model has been determined  it is necessary to introduce an energy
function  mostly based on the atoms considered and their distances  in the structure prediction problem  the energy function is used to assign a score to each geometrically feasible
candidate  the candidate with the optimal score represents the solution of the prediction
problem 
let us briefly review some popular approaches to this problem  with a particular emphasis on solutions that rely on constraint programming technology 
the natural approach of investigating protein conformations through simulations of
physical movements of atoms and molecules is  unfortunately  beyond the current computational capabilities  jauch  yeo  kolatkar    clarke        ben david  noivirt brik  paz 
prilusky  sussman    levy        kinch  yong shi  cong  cheng  liao    grishin        
this has originated a variety of alternative approaches  many based on comparative modelingi e   small structures from related protein family members are used as templates to
model the global structure of the protein of interest  jones        fujitsuka  chikenji   
takada        simons et al         lee  kim  joo  kim    lee        karplus  karchin 
draper  casper  mandel gutfreund  diekhans    source          in these methods  often
referred to as fragments assembly  a protein structure is assembled using small protein subunits as templates that present relevant sequence similarities  homologous affinity  w r t 
the target sequence 
in the literature  constraint programming  cp  techniques have shown their potential 
the structural variability of a protein can be modeled as constraints  and constraint solving
is performed in order to deduce the optimal structure  backofen   will        barahona
  krippahl        dal palu  dovier    fogolari        dal palu et al          cp has
been used to provide approximated solutions for ab initio lattice based modeling of protein
structures  by using local search and large neighboring search  shmygelska   hoos       
dotu  cebrian  van hentenryck    clote         exact resolution of the problem on lattice
spaces using cp  along with with clever symmetry breaking techniques  has also been investigated  backofen   will         these approaches solve a constraint optimization problem
based on a simple energy function  hp   a more precise energy function has been used
by dal palu et al                where information on secondary structures  i e    helices 
 sheets  is also taken into consideration  due to the approximation errors introduced by
lattice discretization  these approaches do not scale to medium size proteins  off lattice
models  based on the idea of fragment assembly  and implemented using constraint logic
programming over finite domains  have been presented  dal palu et al         dal palu 
dovier  fogolari    pontelli         and applied not only to structure prediction but also
to other structural analysis problems  for instance  dal palu et al       b  use this approach to generate sets of feasible conformations for studies of protein flexibility  the use
of cp to analyze nmr data and the related problem of protein docking has also been
investigated  barahona   krippahl        
in the context of ab initio prediction  a recent work  olson  molloy    shehu       
has shown that increasing the complexity of the conformational search spaceby using
a more refined fragment libraryin combination with a sampling strategy  enhances the
generation of near native structure sets  the work of shehu        and molloy  saleh  and
shehu        illustrates various enhancement the fragment based assembly process leading
to faster computations and an improved sampling of the conformation spacee g   using
   

ficampeotto  dal palu  dovier  fioretto    pontelli

tree based methods inspired from motion planning to guarantee progress towards minimal
energy conformations while maintaining geometrically separate conformations  in terms of
energy landscape  the native state has generally lower free energy than non native structures 
but it is extremely difficult to locate  hence  a targeted conformational sampling may aid
protein structure prediction in that different near native structure can be used to guide
the search  several schemes based on monte carlo movements in sampling conformation
space through fragments assembly have been proposed  shmygelska   levitt        xu  
zhang        debartolo  hocky  wilde  xu  freed    sosnick         methods based on
non uniform probabilistic mass functions  derived from previously generated decoys  have
been proposed to aid in this problem  simoncini  berenger  shrestha    zhang        
sampling  however  remains a great challenge for protein with complex topologies and or
large sizes  kim  blum  bradley    baker        shmygelska   levitt        
it is widely accepted that proteins  in their native state  should be considered as dynamic
entities instead of steady rigid structures  indeed  in recent years the research focus has
shifted towards prediction schemes that take into account the non static nature of proteins 
supported by recent observations based on magnetic resonance techniques  processes such
as enzyme catalysis  protein transport and antigen recognition rely on the ability of proteins
to change conformation according to the required conditions  this dynamic nature can be
visualized as a set of different structures that coexist at the same time  the generation
of such sets that capture non redundant structures  in pure geometric terms  is a great
challenge  kim et al          robotics and inverse kinematics methods have been extensively
explored both in sampling proteins conformational space  zhang   kavraki        cortes
  al bluwi        and for molecular simulations  al bluwi  simeon    cortes        moll 
schwarz    kavraki        noonan  obrien    snoeyink        kirillova  cortes  stefaniu 
  simeon        
a motivation for our work is to provide the ability of generating a protein set that
contains optimal and sub optimal candidates  in order to capture dynamic information
about the behavior of a protein  a desirable property is that the conformations returned
in the pool are sufficiently diverse and uniformly distributed in the  d space 
    protein loop modeling
the protein loop modeling problem is a restricted version of the structure prediction problem  we will use this problem as a working example in the remaining part of the paper 
in this context  the protein structure is already partially defined  e g   a large number of
atoms are already placed in the space  usually  this common scenario derives from an xray crystallography analysis  where the spatial resolution of atoms degenerates in presence
of some regions of the protein that are exposed on the surface and presents an increased
instability  since a crystal contains several copies of a protein in order to perform the measurement  such regions appear as more fuzzy  and therefore the placement of atoms in these
regions may be ambiguous  usually  these regions  referred to as loops  are not involved in
secondary structures  which are instead more stable  when dealing with homology modeling  the same protein found in another organism  typically shows some variations in the
sequence due to evolution  especially in the loop regions  since they are less essential for
protein stability and functionality  starting from an homologous protein structure  usually

   

fia constraint solver for flexible protein models

loops need to be recomputed with a specialized loop modeling approach and the use of
minimization techniques 
the length of a loop is typically in the range of   to    amino acids  nevertheless 
compared to secondary structures  the flexibility of loops produces very large  physically
consistent  conformation search spaces  constraints on the mutual positions and orientations  dihedral angles  of the loop atoms can be deduced and used to simplify the search 
such restrictions are defined as the loop closure constraints  in figure    we have a  simple 
possible scenario where two macro structures  two helices  are connected by a loop  in this
setting  we can assume to know the position of the two helices  while the loop atoms are to
be determined 
a procedure for protein loop modeling typically consists of   phases  sampling  filtering 
and ranking  jamroz   kolinski         sampling is commonly based on a loop candidate generation  using dihedral angles sampled from structural databases  felts  gallicchio 
chekmarev  paris  friesner    levy         and subsequent candidate modification in order
to satisfy the loop closure constraints  these conformations are checked w r t  the loop constraints and the geometries from the rest of the structure  and the loops that are detected
as physically infeasible  e g   causing steric clashes  are discarded by a filtering procedure 
popular methods used for loop modeling include the cyclic coordinate descent  ccd 
method  canutescu   dunbrack         the algorithms based on inverse kinematics  kolodny 
guibas  levitt    koehl        shehu   kavraki         the self organizing  sos  algorithm  liu  zhu  rassokhin    agrafiotis         which can simultaneously satisfy loop
closure and steric clash restrictions by iteratively superimposing small fragments  amide
and c   and adjusting distances between atoms  and the wriggling method  cahill  cahill 
  cahill         that employs suitably designed monte carlo local moves to satisfy the loop
closure constraints  multi method approaches have also been proposede g   lee  lee 
park  coutsias  and seok        propose a loop sampling method which combines fragment
assembly and analytical loop closure  based on a set of torsion angles satisfying the imposed
constraints  ab initio methods  rapp   friesner        fiser  do    sali        jacobson 
pincus  rapp  day  honig  shaw    friesner        spassov  flook    yan        deane
  blundell        felts et al         xiang et al         and methods based on templates
extracted from structural databases  choi   deane        have been explored 
finally  a ranking stepe g   based on statistical potential energy  like in dope  shen
  sali         dfire  zhou   zhou         or the one proposed in fogolari et al         
is used to select the best loop candidates 
the sampling and filtering procedures should work together and direct the search towards structurally diverse and admissible loop conformations  in order to maximize the
probability of including a candidate close to the native one and to reduce the time needed
to analyze the candidates  our work is motivated by the need of controlling the properties of the resulting set of candidates  in particular  we model structural diversity both in
distance and orientation of the backbone and make the sampling phase guided by the loop
constraints 
fragment based assembly methods have also been investigated in the context of loop
modeling  lee et al         zhang   hauser         shehu and kavraki        review in
great detail loop modeling techniques 

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    on the left  two fragments b   light grey  and b   dark grey  such that
points b                                       and points b                                               
the arrows address their initial points  on the right  observe that by rotating b  of    degrees and then translating it by    units on the x axis  the last three points of b   last b    
and the first three points of b   first b     perfectly overlap  thus  end b      front b    

   constraint solving with  d fragments
we assume the reader to have familiarity with the basic principles of constraint programming and constraint satisfaction problems  csp   the reader is referred  e g   to the handbook of constraint programming  rossi et al          in this section  we introduce the
formalization of an effective solution to tackle practical applications concerning with the
placement of  d fragments  such applications are described as combinatorial problems 
modeled as a set of variables  representing the entities the problem deals with  and a set of
constraints  representing the relationships among the entities  in the context of a constraint
programming system  variables and constraints are adopted to provide a solution for the
csp  that is  an assignment to the variables that satisfies all the constraints  we extend this
concept by enabling the constraint solver to find a representative solution for the csp that
satisfies some additional properties expressed among the variables of the whole solution set 
    some terminology
a fragment b is composed of an ordered list of at least three  distinct   d points  denoted
by points b   the number of points of a fragment is referred to as its length  the front  and
end anchors of a fragment b  denoted by front b  and end b   are the two lists containing
the first three and the last three points of points b   with b i  we denote the i th point
of the fragment b  for two ordered lists of points p  and  q  we write p     q if they can
be perfectly overlapped by a rigid coordinate translation and or rotation  briefly  a rototranslation see figure    let us assume the z coordinate is   for all points and omitted
for simplicity  
a non empty set of fragments with the same length is called a body  a body can be
used to model a set of possible shapes for a sequence of points  we say that a body has
length k if each fragment it contains has length k 
a multi body is a sequence s            sn of bodies 

   

fia constraint solver for flexible protein models

figure    from left to right  the body s  composed by an unique fragment  and the bodies
s  and s  composed by two fragments each  arrows address the initial points of fragments 
    s    s    s  constitutes a multi body  in the rightmost
all the three bodies have length    s
figure we report the spatial shapes associated to the four rigid bodies that can be obtained
  one of them is identified by full lines  the other three by dashed
from the multi body s 
lines  observe that the rigid body identified by                                                  can
be obtained by a rotation of     degrees of the fragment                                  of s  on
the x axis  flipping  and by a translation of   units on x and of    units on y  observe
moreover that the rigid body identified by                                                  contains
the same point        twice 
    s            sn   a rigid body from s
  is a sequence of fragments
given a multibody s
b            bn   where bi  si for i              n and end bi     front bi      for all i              n  
a rigid body is uniquely identified by the sequence b            bn   however  when consecutive
fragments are overlapped  the rigid body can be alternatively identified by a list of points
that form a spatial shape  in figure   we report examples of bodies  multi bodies  and rigid
bodies  as in the previous example  we assume that the z coordinate is   for all points 
remark      working example  these concepts are related to the loop modeling problem  points are atoms  a fragment is a spatial shape of some atoms  if the last three atoms
of one fragment overlap with the first three atoms of another fragment  we can join them 
a body is a set of admissible shapes for a given list of atoms  a multi body s            sn is
a sequence of these elements  corresponding to a sequence of atoms  of amino acids   the
idea is that the last three atoms of a body si are the same as the first three of the successive
body si     a rigid body is a possible complete shape of those atoms  provided the last three
atoms of the fragment selected in the set si overlap with the first three atoms of the fragment
selected in si    
the overlapping points end bi   and front bi     constitute the i th joint of the rigid
body  the number of rigid bodies that can be obtained from a single multi body s            sn
is bounded by ni    si    figure   provides a schematic general representation of a rigid
body 
a rigid body is defined by the overlap of joints  and relies on a chain of relative rototranslations of its fragments  each points in points bi   is therefore positioned according
to the  homogeneous  coordinate system associated to a fragment bi    note that once
the reference system for b  is defined  the whole rigid body is completely positioned   the
   with the exception of the case where all points of a joint are collinear  points p            pn   with n    are
collinear if the points p    p            pn belongs to the straight line containing the two points p  and p   

   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    a schematic representation of a rigid body  the joints connecting two adjacent
fragments are emphasized  the points in points b  of each fragment are represented by
circles  each fragment extends from the first point of a joint to the last point of the
successive joint 
relative positions of two consecutive fragments bi  and bi of a rigid body     i  n  can
be defined by a transformation matrix ti  r     each matrix depends on the standard
denavit hartenberg parameters  hartenberg   denavit        obtained from the start and
end of the fragmentsthe reader is referred to the work of lavalle        for details  we
denote the product t   t          ti   x  y  z    t by ti  x  y  z  
let us analyze the first matrix t    the fragment b  can be forced to start in a given
point and oriented in a given way  in this case the matrix t  defines the roto translation
of b  fulfilling these constraints  in the absence of such constraints  we assume that b  is
normalized by t  i e  its first point is            the second point is aligned along the z axis
and the third belongs to the plane formed by the x and z axes  this orientation is referred
as the reference system    
for i              n  the coordinate system conversion  x    y     z      for a point  x  y  z  
points bi   into the coordinate system of b    is obtained by 
 x    y     z       t   t   t          ti   x  y  z    t   ti  x  y  z 

   

homogeneous transformations are such that the last value of a tuple is always   
in the rest of the paper  we focus on the    model  however the proposed formalization
and methods can be used also for other models  e g   the c c model  in the latter
case  points bi   contains at least   amino acids  and the joints are guaranteed to be noncolinear  due to the chemical properties of the backbone  when combining c fragments 
the specific rotational angles of the full atom backbone are lost and a more imprecise multibody assembly is produced 
a fragment is a body associated to a sequence of amino acids  a fragment for a sequence
of h    amino acids is described by a body of length  h      modeling the concatenation
of the atoms represented by the regular expression  c   o n c c   o h n   in such representation the first and last sequence of c   on atoms coincide with the front  and end anchor 
respectively  and are employed during the process of assembling consecutive fragments  i e  
they are used in the roto translation  
a discretized r  space can be represented as a regular lattice  composed of cubic cells
with side length equal to a given parameter k  each cell is referred to as a  d voxel
 or  simply  voxel    we assume that each voxel receives a unique identifier  we denote
with voxel p  k  the identifier of the voxel that contains the  d point p in the context of a
discretization of the space using cubes with side length equal to k  this spatial quantization
allows an efficient treatment of the approximated propagation required by some of the
geometric constraints introduced in the following sections 
   

fia constraint solver for flexible protein models

    variables and domains
let us now define the variables adopted to describe the entities of a problem with fragments 
the domain of a variable v is the set of allowable values for v   and it will be denoted by
dv   to deal with fragments placements in the  d space we adopt two distinct types of
variables 
finite domain variables  fdvs   the domain of a finite domain variable is a finite
set of non negative integer numbers 
point variables  pvs   these variables will assume the coordinates of a  d point in r   
their domains are  initially   d boxes identified by two opposite vertices hmin  maxi 
as done in the discrete solver cola  dal palu  dovier    pontelli              
remark      working example  following remark      fdvs are the identifiers of the
various fragments in a body  while pvs are used to represent the  d coordinates assigned
to the various structural points  e g   atoms  centroids  of interest for each molecule being
considered  clearly  the values of pvs will depend deterministically on the values of fdvs
 and vice versa  
a variable is assigned if its domain contains a unique value  in the case of point variables 
this happens if dv   hmin  maxi and min   max 
    constraints
in this section  we formalize the constraints that define the fragments placement  that can
be used to describe protein structure problems in the context of fragment assembly 
      distance constraints
distance constraints model spatial properties of point variables operating in the  d space 
point variables p and q can be related by a distance constraint of the form
kp  qk op d

   

where k  k is the euclidean norm  d  r  and op is  or  
the built in global constraint alldistant associates a minimal radius di to each point
variable pi  i              n  and ensures that spheres surrounding each pair of point variables
do not intersect 
alldistant p            pn   d            dn   
   
this constraint is equivalent to the constraints kpi pj k  di  dj for all i  j              n   i  
j  it is used to avoid steric clashes among different atoms  and centroids   which have
different volumes  checking consistency of the alldistant constraint  given the domains
of the variables pi   is np complete  dal palu  dovier    pontelli       the proof is based
on an encoding of the bin packing problem using the alldistant constraint  and holds true
even in this particular setting  where the point variables have intervals of r  as domains 
remark      working example  the alldistant constraint is introduced to avoid clashes
when a rigid body is obtained from the multi body s            sn   the distance constraints are
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure    fragments are assembled by overlapping the plane r   described by the rightmost
c     o  n atoms of the first fragment  left   with the plane l   described by the leftmost
c     o  n atoms of the second fragment  right   on the common nitrogen atom
useful when some extra information is known  e g   one might have inferred by biological
arguments that a pair of amino acid should stay within a certain distance  
      fragment constraint
fragment constraints relate finite domain variables and point variables  let us assume we
have a database f of fragments  where f  i  represents the i th fragment in the database 
thus  given an fdv variable v   f  v   denotes the fragment indexed by v when v is
instantiated  the fragments are stored in f as an ordered list of  d points 
given a list of point variables p    the constraint 
fragment v  p    f  

   

states that there exists a roto translation rot such that p    rot  f  v  namely  if v   i
then the list of points p  should take the form of the fragment f  i   for simplicity  we
will omit the database f when clear from the context  intuitively  these constraints ensure
that any fragment choice will reproduce the correct shape for the associated  d point 
regardless of the space orientation of the fragment  the orientation is determined by the
joined multi body constraint presented in a following section 
      centroid constraint
the centroid constraint enforces a relation among four pvs  intuitively  the first three
of them are associated to the atoms n  c   c   of an amino acid and the fourth is related
to the centroid cg  the constraint is parametric w r t  the type a of an amino acid and
deterministically establishes the position of cg depending on the position of the other points 
centroid pn   pc   pc     pcg   a 

   

in figure   the centroids are displayed along the backbone as purple circles and labeled
cg  this constraint can be used when the database of fragment contains only full backbone information  the centroid information is used in place of the missing full atom side
chain  the side chain centroid is computed by taking into account the average c  side chain
center of mass distance  the average bend angle formed by the side chain center of massc  c     and the torsional angle formed by the n  c  c    side center of mass  fogolari et al  
   

fia constraint solver for flexible protein models

       this abstraction allows us to reduce the number of fragments to consider  removing
fragments that would geometrically conflict with the position of the cg  consider that a
single side chain may have up to     main configurations  rotamers  
      table constraint
this constraint is used to restrict the assignments of a set of fdvs  representing fragments 
to specific tuples of choices  this is useful when modeling a specific local and collaborative
behavior that involves more than one fragment  for example  this happens when modeling a
secondary structure multiple arrangements of underlying amino acids and or when specific
approximation strategies are employed 
  a k tuple of fdvs  a table  or
let f be a set of k tuples of integer values and v
combinatorial  constraint  of the form
   f 
table v

   

  assumes values restricted to the tuples listed in f   i e  
requires that the list of variables v
 
there exists t  f such that v  i    t i   with i in            k    
remark      working example  going back to the loop modeling problem  the role of
the fragment constraint is evident  it relates the  ids of the  selected fragments of a multibody with the  d positions of the various atoms involved  the centroid constraint is
instead introduced to add the position of the centroid that represents the side chain in the
   representation  table constraint is a common constraint in constraint languages and it
is useful when some info on consecutive fragments in a rigid body is known due to external
knowledge 
      joined multibody constraint
the joined multibody  jm  constraint enforces a relation over a list of fdvs encoding a
multibody  it limits the spatial domains of the various fragments composing the multibody
in order to retain those fragments that assemble properly and that do not compenetrate 
  v
    a 
  e 
  i  where 
the joined multibody  jm  constraint is described by a tuple  j   hs 
    s            sn is a multi body  let b    b            bk   be the set of all fragments in s 
 
 s
sn
i e   b   i   si  
    v            vn is a list of fdvs  with domains dvi    j   bj  si   
 v
    a    a    a    and e    e            e n are lists of sets of  d points such that 
 a
 a   a   a  is the set of admissible points for front b   with b  s   
 e i   e i   e i is the set of admissible points for end b   with b  si   i              n 
  is a constant  used to express a minimal distance constraint between different point 
                b   s t  there exist
a solution for the jm constraint j is an assignment    v
matrices t            tn  used in t   with the following properties 
domain  for all i              n   vi    dvi  
joint  for all i              n     let  a    a    a      end b vi     and  b    b    b      front b vi       
then it holds that  for j            
ti  ajx   ajy   ajz     ti    bjx   bjy   bjz  
   

ficampeotto  dal palu  dovier  fioretto    pontelli

spatial domain  let  a    a    a      front b v       then t   aj  aj        for all i  
           n  let  e    e    e      end b vi     then
ti  ejx   ejy   ejz    e  i   j     
where    j    and t            ti  in ti   are the matrices that overlap end b vi      and
front b vi    
minimal distance  for all j                 n  j      and for all points a  points b vj     and
b  points b v       it holds that  
ktj  ax   ay   az    t   bx   by   bz  k  
it has been proved that establishing consistencyi e   existence of a solutionof jm
constraints is np complete  campeotto et al          we have also proved that it remains
np complete even assuming that all all the fragments of the problem have the same three
atoms with the same spatial position  and that the same holds for the last three atoms  of
course fragments are allowed to contain more than three atoms otherwise the problem is
trivial   the proof is reported in www cs nmsu edu fiasco  
remark      working example  the jm constraint contains exactly all the ingredients
  and the corresponding fds
needed for modeling a loop problem  we have a multi body s 
    we have a set of possible  d points where the loop starts a
  and a set of possible  d
v
 
points where the loop ends e and a weak version of the alldistant constraint between pair of
 
atoms that avoid clashes  the solutions are the  non clashing  rigid bodies that starts in a
 
and ends in e 
let us observe that the jm constraint does not explicitly forbid spatial positions to pvs
variables  save for the first three and the last three points of the loop   however  these
additional constraints can be explicitly required during domain definition of the pvs variables
used for the encoding 
remark     the choice of using three points of overlap resembles the method proposed by
kolodny  guibas  levitt  and koehl         on the other hand  we should observe that it is
only a technical exercise to modify the jm constraints and so that they allow a parametric
overlap between contiguous fragments 

   the fiasco constraint solver
we present the overall structure and implementation of a hybrid constraint solver capable
of handling the classes of constraints described in the previous section 
    constraint solving
a distinctive feature of fiasco is the possibility to handle continuous domains at the cost
of keeping a discrete library of choices  finite domain variables   the handling of fragments
allows us to reason about spatial properties in a more efficient and descriptive way than
the pure  d domain modeling adopted in previous proposals  moreover  fiasco allows
   the product     is necessary as we use homogeneous coordinates 
   let us observe that this is a weak form of the alldistant constraint where different distances for each
point are allowed  it is  in a sense  closer to the alldifferent constraint 

   

fia constraint solver for flexible protein models

the solver to uniformly sample the search space by means of a spatial equivalence relation
that is used to control the tradeoff between accuracy and efficiency  this is particularly
effective when the finite domains are heavily populated  and is a critical component to
model real world problems 
the constraint solver builds on the classical prop labeling tree exploration where constraint propagation phases are interleaved with non deterministic branching phases used to
explore different value assignments to variables  apt         the solver is able to handle
both point variables and finite domain variablesthis is the reason why we refer to it as
an hybrid solver  in particular  the assignments to finite domain variables guide the search 
their values imply assignments of the point variables  that in turn may propagate and reduce
the domains of both point variables and finite domain variables  moreover  the propagation technique implemented for the jm constraint is not a classical filtering techniqueit
is an approximated technique that we describe later 
the presence of point variables allows  in principle  an infinite number of domain values
in r    however  we noted that the information carried by assembling fragments  encoded
by finite domain variables  is much more informative than any complex and demanding
model for  d continuous space  e g   oct trees  csg  no goods   in particular  the direct
kinematics encoded by a jm constraint is able to efficiently identify a set of admissible
regions of a point variable in a fast  approximated  and controlled way  therefore  the
point variables can be seen as an internal aid to propagation  these variables are updated
during the jm propagation phase and can interact with the jm propagator to prune the
corresponding fragment variables  distance constraints on point variables are included in a
standard ac  propagation loop for domains updates 
the other aspect that extends the classical solver structure is the capability of controlling the amount of the search tree to be explored  the search tree contains a large number
of branches that are very similar  from the point of view of the geometric distance between
corresponding point variables  the goal is to produce a subset of feasible solutions that
exhibit significant  d differences between themselves  this is accomplished by introducing
the possibility to explore a subtree of a given depth  by enumerating a specific and limited
number of branches  rather than following the standard recursion of propagation and expansion  to achieve this behavior  it is necessary to selectively interfere with the standard
recursive call to the solver  and implement a non deterministic assignment of partial tuples
of finite domain variables  this resembles the implementation of a table constraint  which
is dynamically created during the search  this strategy allows us to significantly reduce
the number of branches explored in the subtree  and produces significant results when the
selection of the branches is controlled by an adequate partitioning function  in this work 
we propose an effective partitioning function based on a measure of  d similarity for point
variables  this is used to direct the search along specific branches of controlled depth that
are adequately separated by the partitioning function  this is practically realized by
introducing a form of look ahead  controlled by the jm propagator  that returns a set of
partial assignments as well as the filtered domains for the finite domain variables 
      the hybrid solver

   

ficampeotto  dal palu  dovier  fioretto    pontelli

    p    d 
  c    
algorithm   search v
    p    d 
  c   
require  v
    then
   if      v
  
output  p   
  
return
   end if
   for each fragment index f in dv  do
    p    d 
  then
  
if ac   c   v    f    v
nm
  
t
 get table from jm  
  
if n     then
  
non deterministically select i in    n
   
for j      m do
   
c  c   v  j   t  i  j  
   
end for
    p    d 
  c      m 
   
search v
   
else
    p    d 
  c        
   
search v
   
end if
   
end if
    end for
the general structure of the solver is highlighted in algorithm    the solver is designed
    v            vn of finite domains variables  together with the domains
to process a list v
dv            dvn for them  intuitively  each domain is a set of indices for the set of fragments 
moreover  the solver receives a list p    p            p n of    n point variables  where the
variables p i           p i   are related to the fragment in the domain dvi   each point variable
 
pj has  in turn  a spatial domain dpj   c represents the constraints between elements of v
and p    finally  the solver receives also as input the current level   in the exploration of
the search tree  set to   the first time the procedure is called   for the sake of simplicity 
the choice of variables to be assigned is based on their ordering in the input list  more
sophisticated selection strategies can be easily introduced   when we enter the level    we
assume that the variables v            v   have already been assigned 
  have already been assigned
let us briefly describe the algorithm  if all the variables in v
 lines      then the search algorithm terminates and returns the computed solution  represented by the values assigned to the variables p    otherwise  we non deterministically select
a fragment index in the domain of the variable v  and assign it to the variable  lines   
indicate the execution of a standard constraint propagation step  using ac     if the propagation step fails  then we assume that another non deterministic choice is made  if possible 
every reference to a non deterministic choice in the algorithm corresponds to the creation
of a choice point that will be the target of backtracking in case of failure  for simplicity 
we assume chronological backtracking   if it succeeds  leading to a possible reduction of
  then the computation will proceed  a table constraint might be produced
the domains d 
during the propagation of the jm constraint in the ac   procedure  see below for details  
if this is the case  lines      some  m  variables are non deterministically assigned with
the values in the table  lines       and the search continues with m less variables to be
   

fia constraint solver for flexible protein models

assigned  line      if this is not the case  then the search will continue with only one less
variable  v    to be assigned  line     
a peculiar feature of our constraint solver  not reported in the abstract algorithm just
defined  is that it can be used to avoid the search of solutions too similar to each others 
let us assume that the  d space is partitioned in cubic voxels of size k a  then  given a list
  and a list of pvs p    the user can state 
of fdvs v
    p    k 
uniqueseq v

   

this constraint forces the solver to prune the search tree in the following way  given
  be the variable to be assigned at the next step and
a partial assignment   let v  v
 
p            ph  p the pvs to be consequently instantiated  the constraint ensures that for
any two assignments       extending  to v  p            ph it holds that there exists at least
one i              h  such that    pi   and    pi   do not belong to the same voxel 
    constraint propagation
in this section  we discuss the propagation rules associated to the various constraints introduced in section      these are applied within the call to the ac   procedure  line   of
algorithm     the constraint propagation is used to reduce the domain size of the pvs and
fdvs  ensuring constraint consistency  ac   is a standard implementation of a fixpoint
propagation loop  apt        rossi et al         
      joined multibody constraint
the jm constraint is a complex constraint that is triggered when the leftmost points involved in the constraint  anchors  are instantiated  the jm propagation  jmf  is based on
the analysis of the distribution in the space of the points involved  the goal of the propagation is to reduce the domains of the fdvs through the identification of those fragments
that cannot contribute to the generation of a rigid body that is compatible with the corresponding point variable domains  this can be viewed as a form of hyper arc consistency
over a set of fragments  moreover  due to complexity and precision considerations  this
propagator is approximated by the use of a spatial equivalence relation     that identifies
classes of tuples of fragments  these classes have the property to be spatially different
from one another 
this allows a compact handling of the combinatorics of the multi body  while a controlled
error threshold allows us to select the precision of the filtering  the equivalence relation
captures those rigid bodies that are geometrically similar  allowing the search to compact
small differences among them 
  v
    a 
  e 
  i  along with
the jmf algorithm receives as input a jm constraint hs 
 a set g of points that are not available for the placement of bodies  and
 the equivalence relation  
for the sake of readability  we assume that the domain information for variables are avail    tab   in this process  the algorithm
able  the algorithm builds a table constraint table  v
makes use of a function   lines   and     this function takes as input two lists  a and  b of
 d points  and computes the homogeneous transformation to overlap  b on  a  a call to
   

ficampeotto  dal palu  dovier  fioretto    pontelli

algorithm   the jmf algorithm 
  v
    a 
  e 
    g  
require  s 
ensure  tab
     tab   
   n   v


 
t   start b   a   a   a  






 t   end b   e   e   e 



   r    b  t    b  s    t  
 p  points b  q  g  k t   p   qk     





c  c involving p consistent c  
   p    t   end b     b  t     r   
   for each i              n do
  
pi     ri    
  
for each e 
pi     do

t    e  start b    t    fail 






t  end b   e i   e i   e i 
  
ri  ri  b  si
p  points b  q  g  k t  p   qk    





c  c involving p consistent c  
  
pi    e  start b    end b    b  ri  
  
end for
   
compute pi    and filter ri accordingly
    end for
    for each representative l of pn    do
   
tab   tab   l 
    end for
this function will fail if  a     b  for simplicity  the fourth component  always    of the
homogeneous transformation is not explicitly reported in the algorithm 
     the algorithm computes the sets ri and pi   that will respectively
for i              n    v
contain the fragments from si that can still lead to a solution  and the corresponding allowed
 d positions of their end points  for each fragment b  ri   we denote with parent b 
the set of fragments b    ri such that end b       front b  via   for each fragment b  we
denote with label b  the corresponding fd value associated 
in computing updating ri and pi   only fragments that have end anchors contained in
the bounds e i    e i    e i are kept  fragments that would cause points to collapsei e  
due to a distance smaller than  from previously placed pointsare filtered out  lines   and
    moreover  the spatial positions of the points of the first fragment are validated against a
 line     finally  we enforce the consistency check of each constraint c  c involving points in
points b   si to retain only those points that can potentially reach the admissible positions
 lines   and    
       iterations  lines       first ri and pi are computed
the algorithm performs  v
on the basis of the sets of end anchors of the previous level pi  and the starting point of
a selected fragment b  filtering out those that are not overlapping and those that lead to
wrong portions of space  lines      the filtering based on  is applied  line      during
this step  the set of triples of  d points pi is clustered using   a representative of each
equivalence class is chosen  within pi   and the corresponding fragment in ri is identified 
all the other  non identified  fragments are filtered out from ri   let us also note that the

   

fia constraint solver for flexible protein models

filtering based on clustering is not performed for the initial step p    as typically this is
already captured by the restrictions imposed by a 
once the fragments reachable at last iteration are determined and their representatives
selected  we populate the tab with the set of tuples associated to each representative l 
  that allows us to overlap the last point to
the function  l  returns the assignments to v
l 
the jmf algorithm is parametric w r t  the clustering relation and the function selecting
the representative  they both express the degree of approximation of the rigid bodies to
be built  the proposed clustering relation for loop modeling takes into account two factors   a  the positions of the end anchors in the  d space and  b  the orientation of the
plane formed by the fragments anchor l w r t  a fixed reference system   adopted by
fiasco  c f  figure     this combination of clusterings allows to capture local geometrical
similarities  since both spatial and rotational features are taken into account 
the spatial clustering  a  used is the following  given a set of fragments  three end
points c   on  end anchors  of each cluster are considered  and the centroid of the triangle
c   on is computed  we use three parameters  kmin   kmax  n  kmin  kmax   and r  r 
r     we start by selecting a set of kmin fragments  pairwise distant at least  r  these
fragments are selected as representatives of an equivalence class for other fragments that fall
within a sphere of radius r centered in the centroid of the representative  this clustering
ensures a rather even initial distribution of clusters  however some fragments may not fall
within the kmin clusters  we allow to create up to kmax  kmin new clusters  each of
them covering a sphere of radius r  remaining fragments are then assigned to the closest
cluster  the employed technique is a variant of the k means clustering algorithm called
leader clustering algorithm  it allows a fast implementation and acceptable results 
the orientation clustering  b  partitions the fragments according to their relative orientation of planes r w r t      a plane spatial orientation is described by the euler angles
     of its frame w r t      this algorithm produces a variable number of partitions depending on   in particular  given a threshold      there are           possible partitions
describing equal regions on a sphere though the interval                           each
fragment is allotted to the partition determined by  
the final cluster is the intersection of the two partitioning algorithms  this defines an
equivalence relation  depending on kmin   kmax   r  and   the representative selection
function selects the fragment for each partition according to some preferences  e g   most
frequent fragment  closest to the center  etc   
note that for r              and kmax unbounded  no clustering is performed and
this would cause the combinatorial explosion of every possible end anchor on the whole
problem  the spatial error introduced depends on r and   with         the error
introduced at each step can be bounded by  r for each dimension  at each iteration the
errors are linearly increased  since a new fragment is placed with an initial error gathered
from previous iterations  thus resulting in a  nr bound for the last end anchor  clearly this
bound is very coarse  and on average the experimental results show better performances 
similar considerations can be argued for rotational errors  however the intersection of the
two clusterings  provide  in general  a much tighter bound 

   

fif  campeotto et al 

campeotto  dal palu  dovier  fioretto    pontelli

figure
   a graphical
representation
of the propagation
a jm constraint
theconstraint
variables viover
          vthe
i    variables vi           vi 
figure
   a graphical
representation
of theofpropagation
of over
a jm
 a  a simultaneous placement of all the elements in the domain of the variable vi   is simulated  by
 a  a simultaneous placement of all the elements in the domain of the variable vi   is simulated 
overlapping each corresponding fragment with the end anchor of the fragment associated to the element in
overlapping
eachsetcorresponding
fragment
the end anchor
the fragment
to the element
the domain
of vi   the
of points pi   is
computedwith
and clustered
using theofrelation
  pointsassociated
within
the domain
vieach
  the
set one
of points
pi  
is computed
andchosen
clustered
using fragments
the relation   points with
the dotted
ellipses   offor
cluster
fragment
representative
is hence
 highlighted
the dotted
ellipses  
forcollection
each cluster
one fragment
representative
is hence
 highlighted fragmen
with filled
rightmost
circle   the
of representatives
constitutes
the set ri  
 b  thechosen
previous
step iswith
performed
on the circle  
basis of the
end anchors
to the fragmentsconstitutes
representatives
ini    b  the previo
filled again
rightmost
the
collectionrelated
of representatives
thechosen
set r
the previous
the filled
box on
represents
the of
setthe
of points
g that are
not available
the placement
step islevel 
performed
again
the basis
end anchors
related
to thefor
fragments
representatives chosen
of bodies  for instance due to a distance constraint   and the fragment falling in such area are discarded 
the
previous
level 
the
filled
box 
represents
the
set
of
points
g
that
are
not
available
for the placeme
 c  in the last iteration of the jmf algorithm the set of points pi   is not clustered  but only those that
of
bodies
 for
instance
due
to
a
distance
constraint  
and
the
fragment
falling
in
such
area
are discarde
reach the desired position are retained  for instance the front anchor associated to the fragment of the next
 c 
in
the
last
iteration
of
the
jmf
algorithm
the
set
of
points
p
is
not
clustered 
but
only
those th
variable  and the sequence of fragments able to lead to such condition  marked by thick
i   lines  are selected
to populate
the
table
tab 
reach the desired position are retained  for instance the front anchor associated to the fragment of the ne
variable  and the sequence of fragments able to lead to such condition  marked by thick lines  are select
to populate the table tab 
   

fia constraint solver for flexible protein models

p
  p q  d

q
figure    the effect of a distance constraint   p  q    d propagation  empty boxes
represent the original pvs domains and the full boxes represent the reduced pvs domains
after the effect of constraint propagation 
      distance constraints
the propagation of the distance constraints is an approximated technique that reduces the
size of the box domains  we introduce the following operations over pvs box domains of
two variables p and q that will be used to describe the propagation rule in this and in the
following subsections 
domain intersection  dp  dq   hmax pmin   qmin    min pmax   qmax  i
domain union  dp  dq   hmin pmin   qmin    max pmax   qmax  i
domain dilatation 
dp   d   hpmin  d  pmin   di
where max p  q     max px   qx    max py   qy    max pz   qz      and similarly for min   and
p   d    px   d  py   d  pz   d  
given two point variables p and q  with domains dp and dq   respectively  the simplification rule for the constraint   p  q    d updates the domains as follows 
dp     dq   d   dp  

dq     dp   d   dq  

   

which ensures that the points in dp and dq are positioned within an approximation of a
sphere of radius d  the sphere is approximated by considering the box inscribing it  a cube
of side  d   as illustrated in figure   
the propagation of the constraint   p  q    d is harder as the coarse representation
of the box domains adopted in this work to model pvs does not allow the description of
more complex polyhedron  we hence apply a simple form of bound consistency described
by the following rule 
 
 dp  dq     hl  ui    u  l     d
 p
 
  p  q    d  
d     dq   


that establishes unsatisfiability of the constraint 
   

   

ficampeotto  dal palu  dovier  fioretto    pontelli

      fragment constraint
the propagation a fragment constraints fragment v  p    t   is exploited during the solution
search to enforce the assembly process of the fragment t  v   along the point variables
p            pn of p    recall that dv is the domain of v containing the references  j            jk  
to the database of fragments t  
 p 
 
d    p     dp     p     dp     p     dv    j            jk  
 

fragment v  p   t     
jk
n
 

 
   p    p    p     t  f     t  f   i  
dpi   dpi 


i  

    

f  j 

where   p    p    p     t  f    is the roto translation to be applied to overlap the first three
points of the fragment t  f   with the start anchor  p    p    p    
the conjunction in the bottom part of the rule re evaluates the domains for p    p    p   
and it may reduce the singleton domains to empty whenever there is no compatible  for
the selected fragment 
      centroid constraint
when the positions of the atoms n   c and c   for an amino acids a are determined  the
propagation algorithm enforces the value for the pv pcg involved in the centroid constraint 
 
 p
d n    pn    dc    pc    dpc      pc    
 
centroid pn   pc   pc     pcg   a     p
    
d cg    dpcg   cg pn   pc   pc     a   
where cg pn   pc   pc     a  is a support function which returns the center of the mass for
the side chain of the amino acid a by considering the points pn   pc   pc     as described in
sect        
      some implementation details
the proposed solver relies on an efficient c   implementation  and it is carefully designed
to allow additional tailored solving capability without the need of reshaping the core structures 
the internal representation of the domains of the finite domain variables can be abstracted by two arrays of the same length of the size of the initial domain  one array points
to the values and the other is a boolean bit mask that states whether a value is still in the
domain  if all flags are set to    the current partial assignment cannot be a part of a solution
of the overall constraint  if exactly one is set to    then the variable is assigned to a value 
this representation implies a linear scan of the domains during the propagation but it is
justified by the reasonably small size of the domains of the target application  typically less
than     values   the internal representation of the domains for point variables is simply a
pair hmin  maxi that uniquely characterizes a  d box in r    since these variables are used
mostly in distance constraints  this representation is expressive enough  oct trees have been
considered but with no significant advantage  
point variables propagation has been described above  these variables are instantiated
after fragment selection 
   

fia constraint solver for flexible protein models

for the management of the uniqueseq property     we implemented a dedicated data
structure based on hash tables  every time a pv is assigned  its value is mapped into a  d
voxel of fixed size  the  d grid is implemented via a hash table with voxel indexes as keys
and points contained in such voxels as values  all the operations can be performed in o   
 amortized complexity  
    one or more jm constraints
we briefly describe how we have modeled two problems with fiasco  the jm constraint
is able to model geometrically assembly of fragments and therefore it is used for every
protein model  a single jm that covers a protein ensures its flexibility  however for long
proteins some computational and precision issues arise  it can be beneficial to model a
protein by multiple jm constraints  e g  jm  i  j  and jm  j  k  so that the amino acids
from i to j are covered and the jm constraints overlap on a common amino acid  this
practical choice improves the approximate search and allows to increase the number of
different solutions produced  in practice  each protein section handled by a jm constraint
is potentially combined to the different arrangements for the other sections  therefore  it
is expected that the number of solutions found grows exponentially in the number of jm
constraints  the other jm constraint parameters can be used to control clustering precision
and number of conformations found 

   experimental results
we report on the experimental results obtained with the fiasco system  available at
http   www cs nmsu edu fiasco   experiments are conducted on a linux intel core i 
         ghz  memory   gb  machine  the solver has been implemented in c   
the fragment database adopted is the fread database which has been shown to be effective in loop structure prediction  choi   deane         for the parameters analysis      
we use a database of fragments of length    these fragments are classified by their amino
acid class and their frequency of occurrence over the whole top     
we set the system to model the two applications described below  in particular  in
section     we analyze the loop modeling scenario and we focus on the performances of jm
filtering by examining the filtering power and computational costs  next  we compare the
quality of the loop conformations generated  by measuring the rmsd of the proposed loop
with respect to the native conformation  we then present some relationships among the
jm parameters to control quality and efficiency 
in section     we show some examples of ab initio protein structure prediction and we
conclude with a comparison of fiasco against other constraint solvers  for protein models
that can be described by a common subset of constraints 
    loop modeling
the loop modeling problem is formalized by the presence of two known  large  fragments
that are both fixed in the space  a sequence of amino acids of length n is given for connecting
these two parts of the protein  a jm constraint is defined over the sequence  with particular
attention to the starting and ending points that are fixed  the start of the first fragment
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure     an example of loop computed by our tool
and the end of the last fragment  namely a sequence c   on  initial points  of coordinates
 a    a    a    a     and a sequence c   on  final points  of coordinates  e    e    e    e    are
known  there is one caveat about the end points  due to the discrete nature of fragment
assembly  it is unlikely to exactly reach the final points  we accommodate for some errors 
and require that the jm constraint produces results that fall within some threshold from
the corresponding final points 
in figure    we show an example of loop computed by our tool  the parts of the protein
to be connected are shown on the left and the connecting loop on the right  
additional spatial constraints about points  e g  no good regions determined by presence
of other atoms  are given  the constant   now       a  asserts a minimum distance
between pairs of atoms 
      filtered search space and performances
we selected    protein targets from a set of non redundant x ray crystallography structures
as done by canutescu and dunbrack         we partitioned the proteins into   classes
according to their loop region lengths  n         and      we model a csp that uses
fragment assembly to model the loop  in particular using the jm constraint over the loop
region 
to assess the filtering capabilities of fiasco  we perform an exhaustive search generating all the solution for each of the protein targets  using a clusterization of    a  a number
of different fragments of length   is found for each amino acid  see fig       the size of
the domains for the corresponding fdvs is bound by    this is an adequate sampling to
describe a reasonable amino acid flexibility  in those cases where the number of fragments
exceeds      the     most frequent ones are kept 
this increases the likelihood of generating a loop structure that is similar to the native
one  a loop of length n generates an exponential search space of size bounded by    n   the
selected variable is the leftmost one  fragments are selected in decreasing frequency order 
we have imposed a jm constraint for every   consecutive amino acids  the clustering
parameters are set as follows  the kmin value is equal to the size of the domains  while we

   

fi           
  
  
  
 

  

n  of different fragments

a constraint solver for flexible protein models

a

c

d

e

f

g

h

i

k

l

m

n

p

q

r

s

t

v

w

y

amino acids

figure     number of different fragments  after clustering  per amino acid in the dataset
have used different values for kmax based on loop lengths  the values for r and  are set to
    and     in each setting  a summary of the parameters is listed in table   
in table   we report the average times needed to exhaustively explore the loop search
space  and the average number of solutions generated 
n
 
 
  

  jm
 
 
 

jm parameters
kmin kmax

            
   
       
   
       

r
   
   
   

full jm
  solutions time  s 
   
    
     
     
      
     

table    loop modeling settings and average running times  in seconds  and number of
solutions generated 

      jm approximated propagator quality
even if the approximated jm produces a small set of solutions  we show here that this is
a good representation of the overall variability of the protein structure  for this test  we
compare the solutions by means of rmsd from the original structures  the experiments
were carried out with the same    protein targets and settings described in table    with
the only exception of kmax for the loop set of size     which was set to     
in figure    we show the bar chart for the rmsd of the predictions for each protein
loop within the group of targets analyzed  precisely  in the x axis there are the        for
each loop length  protein targets  each bar reports the best rmsd  dark   the average
rmsd  grey   and the worst rmsd  light grey  found  numbers over the bars represent
the number of loops found  multiplied by the factors indicated underneath   the results
are biased by the fragment database in use  we excluded from it the fragments that belong

   

fi   
    

   

   

   

    

 
   

   

   
    

    

    
   

   

   

    

    
    

    

    

    

    

    
   

    

    

   

 

    

 

best rmsd
avg rmsd
worst rmsd

 
 

 

rmsd  angstrm 

   

campeotto  dal palu  dovier  fioretto    pontelli

     

     

length  

length  

     

length   

figure     rmsd comparison for each loop set  x axis  the    protein targets 

to the deposited protein targets  therefore  it is not possible to reconstruct the original
target loop and none of the searches are expected to reach a rmsd equal to   
for loops of length   and     the exploration of the whole conformational search space
using a simple search procedure would result in an excessively long computation time  this
enforces the need for a propagator such as jm  as its filtering algorithm successfully removes
redundant conformations and it allows us to cover the whole search space in a short period
of time 
in fig     loop predictions are calculated using fragments of length    to study how
this choice affects both time and accuracy of the sampling we also model the loops of length
   using fragment of length       and    best rmsds are reported in figure     for these
experiments we kept the settings used above  kmax         moreover  each jm constraint
is imposed on the fragments in order to cover the whole fragment  e g  for fragments of
length   we set a jm constraint every three consecutive amino acids  and we set a time out
of      seconds 
notice that increasing the length of the fragments the accuracy decreases due to the
reduced size of the domains  nevertheless  the time is also reduced since the sampling is
performed on a smaller search space and the jm constraints cover longer sequences of amino
acids  the average times are                 and      seconds using fragments of length   
   and   respectively 

   

fi 
 
 

 

rmsd  angstrm 

 

 

a constraint solver for flexible protein models

len 

len 

len 

figure     rmsd comparison for loop sampling on loops of length    using fragments of
length       and   

   

ficampeotto  dal palu  dovier  fioretto    pontelli

      comparison with state of the art loop samplers
in this section  we compare our method to three state of the art loop samplers  the cyclic
coordinate descent  ccd  algorithm  canutescu   dunbrack         the self organizing
algorithm  sos   liu  zhu  rassokhin    agrafiotis         and the falcm method  lee 
lee  park  coutsias    seok        
table   shows the average of the best rmsd for the benchmarks of length      and   
as computed by the four programs  we report the results as given in table   of canutescu
and dunbrack for the ccd  table   of liu et al  for sos  table ii of lee et al  for the
falcm method  and the rmsds obtained adopting the settings for jmf that provided
the best results in the previous section  see also subsection         it can be noted that our
results are in line with those produced by the other systems 
loop
length
 
 
  

average  best  rmsd
ccd
sos
falcm
jmf
    
    
    
    
    
    
    
    
    
    
    
    

table    comparison of loop sampling methods
the execution time we reported appear to be very competitive  e g   if we considered
the results reported in soto et al         
      jm parameters analysis
in this section  we analyze the impact of the jm parameters on the quality of the best
solutions found and on the execution times  in particular  the aim of these experiments is
to shed light on the relationship between the jm constraint settings and the results 
in figure     we analyze the impact of the kmax on the execution times  left  and on
the precision  right  of the filtering of the jm constraint  from top to bottom  we use
                 the tests are performed over the protein loops of length    see section
above   adopting as cluster parameters  r in                       and kmin        each dot in
the plots represents the average of the best rmsd found by each predictions  left  and the
average execution time  right   the rmsd values tend to decrease for smaller clustering
parameters r and  and as the number of clusters increases  while the filtering time increases
as kmax increases 
in figure    we study the relation between the rmsd and both the number of jms that
cover a given target loop or protein and the voxel side parameter  for these experiments
we used the values                            for the kmax   we set r              and we
averaged the rmsds values on the resulting sample set of structures  the relation between
the rmsd and number of jm as well as the average and worst computational times are
shown in fig     left  here we use a medium length loop taken from the protein  xpc
 res           and we vary the number of jms that cover the loop  the side of the voxel
has been set to  a   from the figure we observe that increasing the number of jms  i e 
covering less amino acids with a single jm  the rmsd decreases but the computational
cost is higher  notice that the best rmsd is given when the loop is covered by   jm

   

fia constraint solver for flexible protein models

   



    


   

   

    


r


   

r

time  s 

 
rmsd  a

   

   
   
   
   



   



   
   
   
   

   


   

   


   





     

   

   

   

    

    

    

    

jm kmax

     

jm kmax

    


   


   
    

   

r



   
   
   
   



   

time  s 

 
rmsd  a

   
r





   

   

   
   
   
   

   



   




   

   

    

    

     

   

    

jm kmax

    

     

jm kmax

   





   



   

r




   

   
   
   
   

time  s 

 
rmsd  a

   

r

   



   

   
   
   
   

   



   




    

     

   

   

    

   

jm kmax

    

    

     

jm kmax

figure     comparison of the best rmsd values and execution times at varying of the
kmax clustering parameter for        top        center        bottom 

   

fi 
rmsd

 le 
 mxn
 fdf

 

 

 

 

 

                 

                 

               

            

             

 
 

rmsd

 

 

 

 

 

campeotto  dal palu  dovier  fioretto    pontelli

 

 

 

 

 

 

n of jm

  

  

  

  

   

voxelside

figure     left  rmsd  best and average  and time  average and worst  values increasing
the number of jm constraints that completely cover a target loop of length     right 
average  dotted line  and best  solid line  rmsd for the targets  le  of length     top  
 mxn of length     medium   and  fdf of length     low   the jm voxel side parameter
for the voxels of the clustering varies from   to      the jm kmax parameter varies from
    to       the targets are completely covered by multiple jm constraints 
constraint  i e   a jm constraint each four consecutive amino acids   as a rule of thumb
we suggest to use a jm constraint to cover from   to   consecutive amino acids since this
setting produces the best results within an acceptable time  in fig     right we report the
best rmsd  solid line  and the average rmsd  dotted line  of the structures found using
multiple jm constraints that cover sequences of   consecutive amino acids through the whole
target proteins  namely  if the protein target has length n  we set the jm constraints from
i to i      where i      j     j   n    for these experiments  we considered three proteins
of relatively short length  in order to obtain a complete exploration of the search space in
reasonable computational time   le   length       mxn  length      and  fdf  length
     moreover we used the values                             for the side of the voxels used for
the clustering 
from the figure    we observe that the voxel size  enabled by the uniqueseq  has an
impact on the clustering for values lower than   a  recall that these proteins have a diameter
less than   a   for voxel sides lower than  a we observe no substantial improvement in
terms of quality  while the time required by the solver to compute the solutions increases
exponentially 
      results summary and default parameters
we now provide some guidelines that may be helpful to tune the jm parameters for a given
protein modeling problem  we suggest several levels of parametrization that might be used
according to the user needs with respect to running time or prediction accuracy  we stress

   

fia constraint solver for flexible protein models

that these are merely guidelines  outlined from our empirical evaluations  and that several
tests should be done to establish the desired tuning 
we suggest to set a jm to model a sequence of at least   amino acids and in general not
longer than    to payoff the computational load of the jm clustering  the default choice
for kmin is set to be the average size of the variable domains involved in a jm constraint 
while we suggest to set kmax to be at least as kmin and not greater than        the latter 
together with the number of consecutive jm constraints  will have the greatest impact on the
computational cost and prediction accuracy  computational costs will grow as the number
of consecutive jm increases  and at the same time it will also produce in general higher
accuracy  the same trend is exhibited by the growing kmax parameter  table   illustrates
five basic settings that could be used incrementally to establish a trade off between running
times and prediction accuracy  the first level  lev     is associated to faster computational
times and lower accuracy while the last one  lev     is the slowest but also the most accurate 
the second column of the table indicates the length of the amino acid sequence modeled
by a single jm 
lev 
 
 
 
 
 

n jm
 
 
 
 
 

kmin
 d 
 d 
 d 
 d 
 d 

kmax
   
    
   
   
    


   
   
   
   
   

r
 
 
 
 
 

speed
   
  
  



accuracy



  
   

table    jm default parameters

    an application in protein structure prediction
in the protein structure prediction problem  we model a generic backbone through multiple
jm constraints  in principle  an unique jm constraint can model the whole problem  as
in the previous cases  we split it into smaller parts  moreover  the presence of secondary
structure is a valid help in the placement of jm constraints that can handle loops between
each consecutive pair  a simple search can generate a pool of conformations  then energy
scoring can select the best candidate  we have used a statistical energy function developed
for the    model  but any other energy function can be used instead 
in this section  we study the applicability of fiasco to the protein structure prediction
problem  in particular  we consider prediction problems where the secondary structure
elements of the protein are given  furthermore  in order to assess the potential structure 
we introduce an energy functionthe same that we have adopted in previous studies  and
more precisely described in http   www cs nmsu edu fiasco 
for the modeling  we have used the information about the location and the type of
the secondary structure elements on the primary sequence provided directly by the protein
data bank  we have imposed a sequence of jm constraints between every consecutive
pair of secondary structure elements  the number of consecutive jm constraints varied
according to the length of the unstructured sequence being modeled  covering at most  
amino acids with a single jm constraint  in addition one jm constraint was imposed from
the first amino acid to the beginning of the first secondary structure element and another
   

ficampeotto  dal palu  dovier  fioretto    pontelli

from the end of the last secondary structure element and the last amino acid  the tails of
the protein   the domains for the initial and end points of the jm constraints are the set of
all admissible points  a box large enough to contain the protein   in the search phase  the
first secondary structure is deterministically set in the space  then the labeling proceeds
with the jm constraint attached to it leading to the next secondary structure and so on 
tails are instantiated at the end 
the propagation of the constraints generates a set of admissible structures  that represents the possible folds of the target protein  from this set  we select the structure with
minimum energy  we extract also the structure with minimum rmsd  in order to evaluate
the quality of the energy function  for these tests we adopt the fread database  table  
reports the best energy values found by fiasco  in the rmsd columns is reported the
corresponding rmsd associated to the conformation with best energy found by the solver 
the  jm column reports the total number of jm used to model each protein  together
with the maximum number of consecutive jm adopted to model a contiguous sequence of
amino acids  within parentheses  
protein id
 zdd
 gp 
 k d
 enh
 igd
 sn 
 ail
 b r
 jhg

len 
  
  
  
  
  
  
  
  
   

  jm
    
    
    
    
    
    
    
     
    

energy
      
      
      
      
      
      
      
      
      

rmsd
    
    
    
    
     
    
    
    
    

time  min  
     
    
    
     
     
     
    
    
    

table    ab initio prediction with fiasco 
the results show that the quality of the predictions computed by fiasco      as average
rmsd  is competitive  and  as shown in the following section  at par or better than what
produced by other methods   the results are particularly encouraging for proteins of longer
length  where the sampling of the search space aids in development of admissible structures 
the time required by fiasco to completely explore the search space depends strongly on
the type and the mutual arrangement of secondary structure elements of the target  for
example  the protein  k d and the protein  enh have the same length  but fiasco is
significantly faster on the first protein than on the second one  the same observation can
be made for the proteins  igd and  sn   the results reported in table   are promising
and they suggest that this is a feasible approach to solve the ab initio prediction problem 
as a future work  we will explore the integration of local search techniques  e g   largeneighboring search   in order to sample the search space and to further decrease the time
needed to explore it 

   

fia constraint solver for flexible protein models

    a comparison of fiasco with state of the art constraint solvers
in this section  we motivate our choice of designing an ad hoc solver instead of using a
general purpose constraint solver  in particular we provide a comparison between fiasco
and state of the art constraint solving  the results justify the choice of implementing a new
solver from scratch instead of using an available constraint programming library or a constraint programming language  the solver chosen for this comparison is gecode  gecode
team         a very efficient solver and the winner of the most recent minizinc challenges  stuckey  becket    fischer        
gecode has recently introduced  in version      the handling of floating point variables 
nevertheless  since gecode is the fastest solver for fd variables  we have first encoded
the psp by discretizing fragments and positions  in particular  we multiplied each real
number by a scaling factor       to obtain integer values  each spatial position is encoded
by a triple of variables  representing the coordinates of the point  each operation  e g  
multiplications  applied to such variables requires re scaling of the result  this unfortunately
leads to ineffective propagation  this is particularly evident when dealing with distance
constraints  that require the implementation of euclidean distance between pairs of triples
of variables 
in order to understand the solvers capabilities to propagate constraints on the placement of overlapping fragment we implemented three versions of the code  that considered
a different number of constraints  precisely 
   an implementation that uses only jm constraint  jm only 
   an implementation that adds the alldistant constraint and
   an implementation that adds the alldistant and centroid constraints
in all cases we use a complete search  in particular  the clustering and tabling constraints
of lines    and      of algorithm   are disabled  
in table    we report the execution times required by fiasco and by gecode  with the
same considered constraints  to determine an increasing number of solutions  from       
to              these solutions are computed for the target protein  zdd which has length
    table   shows that the execution time of both solvers increases proportionally with the
number of solutions found  however  fiasco is one order of magnitude faster than gecode
in the unconstrained case  and two orders of magnitude faster in the other cases  the main
reason is that fiasco is specifically developed to handle the finite domains and  d point
variables  while these are approximated by fd variables in gecode  constraints on these
approximations propagate poorly and slowly  moreover  the approximation of fragments
using finite domain variables introduces approximation errors  that grow during the search
phase  and consequently  less solutions are returned in the constrained cases   these errors
may result in final structures that are relatively imprecise when the coordinates of the atoms
are converted back into real values 
in table    we consider a small sequence of four amino acids  ser trp thr trpthe
first four amino acids of the protein  le    and we generate all solutions  we report the
values of the best and the average rmsd among the structures of the sets of solutions computed using fiasco and the gecode implementation after a complete enumeration of the
   

ficampeotto  dal palu  dovier  fioretto    pontelli

number of
solutions
    
     
      
       

jm only
     
     
     
      

fiasco
alldistant alldistant   centroid
     
     
     
     
     
     
      
      

jm only
     
     
      
       

gecode
alldistant alldistant   centroid
     
     
      
      
       
       
       
       

table    comparison of the execution times of fiasco and gecode  for increasing number
of solutions and with different sets of considered constraints 
domains  we can observe that fiasco is significantly faster in exploring the search space 
moreover  the approximation introduces errors that leads to the loss of feasible solutions 

jm only
alldistant
alldistant   centroid

n  sol 
      
      
      

fiasco
time  sec   rmsd
      
     
      
     
      
     

avg  rmsd
     
     
     

n  sol
      
      
      

gecode
time  sec   rmsd
       
     
       
     
       
     

avg  rmsd
     
     
     

table    number of solutions  time  best rmsd  and average rmsd on the set of structures
found by fiasco and gecode after a complete enumeration of the solution space using
different constraints
we have encoded the same constraint satisfaction problem using the new version of
gecode that allows to employ float variables  we labeled the finite domain variables that
allow to select fragments  while values for the point variables are obtained by constraint
propagation  since constraint propagation of float variables is based on interval arithmetics 
it turns out that after few amino acids these intervals are too large for being able of reconstructing the protein and or evaluating the energy value  for instance  after a complete
assignment of the variables related to fragments of protein  zdd  while the domains of the
float variables associated with the position of the first two amino acids are singletons  those
related to the tenth amino acids are intervals with size from one to two a  even worse 
the domains of the atoms of the eleventh amino acids are unbounded  a further stage of
labeling of the float variables required computational time of orders of magnitude higher
than those reported in table   for the finite domain gecode implementation 
constraint solvers like eclipse  cheadle  harvey  sadler  schimpf  shen    wallace        and choco  choco team        also support the mixed use of integer and
real variables  eclipse is a prolog based language which handles integer and real variables together  however  the great number of matrix operations required in our application does not fit well with a prolog implementation  furthermore  the current trend
of eclipse is to replace a direct constraint solving with a translation to flatzinc  in
the case of choco  the current support of real variables is still under development  c f 
http   choco sourceforge net userguide pdfpage     things may change with the
next releases 
we also experimented with another constraint solver  by implementing the multi body
constraints using the jacop library  jacop team         in a similar way as done for
gecode  eventually  we tested the same protein used for the results reported in table   

   

fia constraint solver for flexible protein models

and we did not observe any substantial difference in terms of execution time  from the
gecode implementation 
in terms of protein structure prediction  the design of fiasco has been influenced by
our own previous work on the tuples system  dal palu et al          tuples is also a
constraint solver for protein structure prediction  based on fragments assembly  figure   
compares the performance of tuples and fiasco on the same set of proteins discussed
in section      to make the comparison fair  we make use of the same energy function in
both systems and assume that the secondary structure elements are known  note that there
are some important differences between the two systems  tuples is implemented using
constraint logic programming techniques  specifically  sicstus prolog  swedish institute for
computer science         tuples does not make use of floating point variables  on the
other hand  tuples introduces a heuristic search mechanism based on large neighboring
search 
the results show that the quality of the predictions computed by fiasco      as average
rmsd  is better than the quality of the predictions computed by tuples      as average
rmsd   the complete sampling of the search space allows us to obtain better results for
the proteins of longer length in the benchmark        instead  for shorter proteins  we
obtain comparable results  the similarity of the quality depends on the use of the same
energy function for both the systems  notice that the energy function used is designed for
the simpler model adopted in tuples  c c    moreover  tuples is based on a prolog
implementation that does not provide floating point variables and hence each value must
be rounded and approximated  these aspects explain both the quality differences between
the rmsd and the best rmsd found by fiasco and the behavior for which for some
proteins  e g    zdd   gp    the  energy  rmsd values are better in fiasco even if their
corresponding energy  rmsd  values are higher than in tuples  the execution times of
fiasco are significantly faster than tuples  in spite of fiascos lack of a sophisticated
search heuristic 
we also performed a comparison with the state of the art online robetta predictor  raman  vernon  thompson  tyka  sadreyev  pei  kim  kellogg  dimaio  lange  kinch  sheffler  kim  das  grishin    baker        for the first four proteins of table    we built
the dictionary for   and   amino acid long peptides through the robetta interface  and we
disabled any homology inference  in order to maintain a fair comparison  the results are 
 zdd computed in   s with      rmsd   gp  computed in   s with      rmsd   k d
computed in   s with      rmsd   enh computed in   s with      rmsd  it can be noted
that our results are in line with robetta predictor 
let us conclude this section mentioning that the results reported in the previous section
 where we compared fiasco with tuples  provide also an implicit comparison with another off the shelf solver  the sicstus prolog constraint logic programming solver  swedish
institute for computer science        

   conclusions
in this paper  we presented a novel constraint  joined multibody  to model rigid bodies
connected by joints  with constrained degrees of freedom in the  d space  we presented a
polynomial time approximated filtering algorithm of the joined multibody constraint  that
   

ficampeotto  dal palu  dovier  fioretto    pontelli

figure     comparison of rmsd and execution time between tuples and fiasco

   

fia constraint solver for flexible protein models

exploits the geometrical features of the rigid bodies  in particular  the filtering algorithm
is combined with search heuristics that can produce a pool of admissible solutions that are
uniformly sampled  this allows for a direct control of the quality and number of solutions 
the filtering algorithm is based on a  d clustering procedure that is able to cope with
a high variability of rigid bodies  while preserving the computational cost  the practical
advantages of the joined multibody constraint are shown by an extensive set of real protein
simulations for two main categories  protein loop reconstruction and structure prediction
 ab initio   the tests showed how the parameters of the constraint are able to control
effectively the quality and computational cost of the search  in conclusion  the constraint
solver fiasco is able to model effectively various common protein case studies analyses 
as future work  from the applications side  we plan to explore the protein loop closure
problem  with the use of specific databases and scoring functions  for the close problem of
protein flexibility  we plan to use fiasco solver to generate the conformational space of
long scale movements for nuclear receptors  dal palu et al       b   finally  we plan to use
fiasco in the general context of protein structure prediction with the combination of local
search methods and protein ligand spatial constraints  from the constraint side  we plan
to integrate the jm filtering algorithm with other distance constraints  in order to generate
more accurate clusters  we plan to integrate spatial constraints inferred from bounds on
energy terms  e g   the favorable contributions provided by pairing secondary structure
elements translate into energy bounds and distance constraints   we plan to investigate the
use of multiple jm constraints to model super secondary structures placement  which are
useful to capture important functional and structural protein features  the latter can be
thought of as imposing several spatial path preferences to a given chain of points  finally 
we intend to integrate the constraint solver with a visual interface to make it easily available
to biologist and other practitioners and porting some parts of this tool within a gpu based
framework as recently explored by campeotto  dovier  and pontelli        

acknowledgments
we thank federico fogolari for his comments on several parts of this work  the authors
would like to express gratitude to jair reviewers that helped us to sensibly improve the
presentation 

references
al bluwi  i   simeon  t     cortes  j          motion planning algorithms for molecular
simulations  a survey  computer science review                
alberts  b   johnson  a   lewis  j   raff  m   roberts  k     walter  p          molecular
biology of the cell   th edition edition   garland science 
anfinsen  c  b          principles that govern the folding of protein chains  science      
       
apt  k          principles of constraint programming  cambridge university press 
backofen  r     will  s          a constraint based approach to fast and exact structure
prediction in   dimensional protein models  constraints              
   

ficampeotto  dal palu  dovier  fioretto    pontelli

backofen  r   will  s     bornberg bauer  e          application of constraint programming techniques for structure prediction of lattice proteins with extended alphabet 
bioinformatics                
baker  d     sali  a          protein structure prediction and structual genomics  science 
                 
barahona  p     krippahl  l          constraint programming in structural bioinformatics 
constraints                
ben david  m   noivirt brik  o   paz  a   prilusky  j   sussman  j  l     levy  y         
assessment of casp  structure predictions for template free targets  proteins     
     
bennett  w     huber  r          structural and functional aspects of domain motions
in proteins  crit  rev  biochem              
borning  a          the programming language aspects of thinglab  a constraintoriented simulation laboratory  acm transactions on programming languages and
systems                
cahill  s   cahill  m     cahill  k          on the kinematics of protein folding  journal
of computational chemistry                    
campeotto  f   dovier  a     pontelli  e          protein structure prediction on gpu 
a declarative approach in a multi agent framework  in international conference on
parallel processing  icpp   pp          ieee computer society press 
campeotto  f   dal palu  a   dovier  a   fioretto  f     pontelli  e          a filtering
technique for fragment assembly based proteins loop modeling with constraints 
in milano  m   ed    cp  vol       of lecture notes in computer science  pp         
springer 
canutescu  a     dunbrack  r          cyclic coordinate descent  a robotics algorithm for
protein loop closure  protein sci             
cheadle  a  m   harvey  w   sadler  a  j   schimpf  j   shen  k     wallace  m  g         
eclipse  an introduction  technical report ic parc      ic parc  imperial college
london 
chelvanayagam  g   knecht  l   jenny  t   benner  s     gonnet  g          a combinatorial distance constraint approach to predicting protein tertiary models from
known secondary structure  folding and design            
choco team         choco  an open source java constraint programming library  in
workshop on open source software for integer and constraint programming  available from http   www emn fr z info choco solver  
choi  y     deane  c  m          fread revisited  accurate loop structure prediction
using a database search algorithm  proteins                 
clementi  c          coarse grained models of protein folding  toy models or predictive
tools   curr opin struct biol           
   

fia constraint solver for flexible protein models

corblin  f   trilling  l     fanchon  e          constraint logic programming for modeling
a biological system described by a logical network  in workshop on constraintbased methods for bioinformatics 
cortes  j     al bluwi  i          a robotics apporach to enhance conformational sampling of proteins  in international design engineering technical conferences and
computers and information in engineering conference  vol     pp            asme 
crescenzi  p   goldman  d   papadimitriou  c   piccolboni  a     yannakakis  m         
on the complexity of protein folding  in proceedings of the thirtieth annual acm
symposium on the theory of computing  pp          acm press 
dal palu  a   dovier  a   fogolari  f     pontelli  e       a   protein structure analysis
with constraint programming  in cozzini  p     kellogg  g   eds    computational
approaches to nuclear receptors  chap     pp        the royal society of chemistry 
dal palu  a   spyrakis  f     cozzini  p       b   a new approach for investigating protein
flexibility based on constraint logic programming  the first application in the case
of the estrogen receptor  european journal of medicinal chemistry             
dal palu  a   dovier  a     fogolari  f          constraint logic programming approach
to protein structure prediction  bmc bioinformatics         
dal palu  a   dovier  a   fogolari  f     pontelli  e          clp based protein fragment
assembly  theory and practice of logic programming                   
dal palu  a   dovier  a   fogolari  f     pontelli  e          exploring protein fragment
assembly using clp  in walsh  t   ed    proceedings of the international joint
conference on artificial intelligence  ijcai  pp            ijcai aaai 
dal palu  a   dovier  a     pontelli  e          a new constraint solver for  d lattices and
its application to the protein folding problem  in international conference on logic
for programming artificial intelligence and reasoning  pp        springer verlag 
dal palu  a   dovier  a     pontelli  e          a constraint solver for discrete lattices 
its parallelization  and application to protein structure prediction  software practice
and experience                    
dal palu  a   dovier  a     pontelli  e          computing approximate solutions of
the protein structure determination problem using global constraints on discrete
crystal lattices  international journal of data mining and bioinformatics        
    
deane  c     blundell  t          coda  a combined algorithm for predicting the structurally variable regions of protein models  protein sci             
debartolo  j   hocky  g   wilde  m   xu  j   freed  k     sosnick  t          protein
structure prediction enhanced with evolutionary diversity  speed  protein science 
               
dotu  i   cebrian  m   van hentenryck  p     clote  p          on lattice protein structure
prediction revisited  ieee acm trans  comput  biology bioinform             
     
   

ficampeotto  dal palu  dovier  fioretto    pontelli

dunbrack  r          rotamer libraries in the   st century  curr  opin  struct  biol  
               
erdem  e          applications of answer set programming in phylogenetic systematics 
in logic programming  knowledge representation  and nonmonotonic reasoning  pp 
        springer verlag 
erdem  e     ture  f          efficient haplotype inference with answer set programming 
in national conference on artificial intelligence  aaai   pp          aaai mit
press 
felts  a   gallicchio  e   chekmarev  d   paris  k   friesner  r     levy  r          prediction of protein loop conformations using agbnp implicit solvent model and
torsion angle sampling  j chem theory comput            
fiser  a   do  r     sali  a          modeling of loops in protein structures  protein sci 
            
fogolari  f   esposito  g   viglino  p     cattarinussi  s          modeling of polypeptide
chains as c chains  c chains with c   and c chains with ellipsoidal lateral
chains  biophysical journal               
fogolari  f   pieri  l   dovier  a   bortolussi  l   giugliarelli  g   corazza  a   esposito  g  
  viglino  p          scoring predictive models using a reduced representation of
proteins  model and energy definition  bmc structural biology              
fogolari  f   corazza  a   viglino  p     esposito  g          fast structure similarity
searches among protein models  efficient clustering of protein fragments  algorithms
for molecular biology        
fujitsuka  y   chikenji  g     takada  s          simfold energy function for de novo
protein structure prediction  consensus with rosetta  proteins             
gay  s   fages  f   martinez  t     soliman  s          a constraint program for subgraph
epimorphisms with application to identifying model reductions in systems biology 
in workshop on constraint based methods for bioinformatics 
gebser  m   schaub  t   thiele  s     veber  p          detecting inconsistencies in large
biological networks with answer set programming  theory and practice of logic
programming                   
gecode team         gecode  generic constraint development environment  available
from http   www gecode org 
go  n     scheraga  h          ring closure and local conformational deformations of
chain molecules  macromolecules            
graca  a   marques silva  j   lynce  i     oliveira  a          haplotype inference with
pseudo boolean optimization  annals of or                  
guns  t   sun  h   marchal  k     nijssen  s          cis regulatory module detection using
constraint programming  in ieee international conference on bioinformatics and
biomedicine  bibm   pp         
   

fia constraint solver for flexible protein models

handl  j   knowles  j   vernon  r   baker  d     lovell  s          the dual role of
fragments in fragment assembly methods for de novo protein structure prediction 
proteins  structure  function and bioinformatics                 
hartenberg  r     denavit  j          a kinematic notation for lower pair mechanisms
based on matrices  journal of applied mechanics             
hegler  j   latzer  j   shehu  a   clementi  c     wolynes  p          restriction versus
guidance in protein structure prediction  proc natl acad sci u s a                  
      
jacobson  m   pincus  d   rapp  c   day  t   honig  b   shaw  d     friesner  r          a
hierarchical approach to all atom protein loop prediction  proteins             
jacop team         jacop web page  visited november       
http   www jacop eu 

available from

jamroz  m     kolinski  a          modeling of loops in proteins  a multi method approach  bmc struct  biol          
jauch  r   yeo  h   kolatkar  p  r     clarke  n  d          assessment of casp  structure
predictions for template free targets  proteins           
jones  d          predicting novel protein folds by using fragfold  proteins     
       
karplus  k   karchin  r   draper  j   casper  j   mandel gutfreund  y   diekhans  m  
  source   r  h          combining local structure  fold recognition  and new fold
methods for protein structure prediction  proteins                 
karplus  m     shakhnovich  e          protein folding  theoretical studies of thermodynamics and dynamics  in protein folding  pp          wh freeman 
kim  d  e   blum  b   bradley  p     baker  d          sampling bottlenecks in de novo
protein structure prediction  journal of molecular biology                    
kinch  l   yong shi  s   cong  q   cheng  h   liao  y     grishin  n  v          casp 
assessment of free modeling target predictions  proteins           
kirillova  s   cortes  j   stefaniu  a     simeon  t          an nma guided path planning approach for computing large amplitude conformational changes in proteins 
proteins  structure  function  and bioinformatics                 
kolodny  r   guibas  l   levitt  m     koehl  p          inverse kinematics in biology 
the protein loop closure problem  the international journal of robotics research 
                 
krippahl  l     barahona  p          psico  solving protein structures with constraint
programming and optimization  constraints                  
krippahl  l     barahona  p          applying constraint programming to rigid body
protein docking  in principles and practice of constraint programming  pp     
     springer verlag 
krippahl  l     barahona  p          applying constraint programming to protein structure determination  in principles and practice of constraint programming  pp     
     springer verlag 
   

ficampeotto  dal palu  dovier  fioretto    pontelli

larhlimi  a     bockmayr  a          a new constraint based description of the steadystate flux cone of metabolic networks  discrete applied mathematics           
         
lavalle  s          planning algorithms  cambridge university press 
lazaridis  t   archontis  g     karplus  m          enthalpic contribution to protein
stability  atom based calculations and statistical mechanics  adv  protein chem  
           
lee  j   kim  s   joo  k   kim  i     lee  j          prediction of protein tertiary structure
using profesy  a novel method based on fragment assembly and conformational
space annealing  proteins                 
lee  j   lee  d   park  h   coutsias  e     seok  c          protein loop modeling by using
fragment assembly and analytical loop closure  proteins                    
liu  p   zhu  f   rassokhin  d     agrafiotis  d          a self organizing algorithm for
modeling protein loops  plos comput biol        
lovell  s   davis  i   arendall  w   de bakker  p   word  j   prisant  m   richardson  j    
richardson  d          structure validation by c geometry     and c deviation 
proteins             
mann  m     dal palu  a          lattice model refinement of protein structures  in
workshop on constraint based methods for bioinformatics 
micheletti  c   seno  f     maritan  a          recurrent oligomers in proteins  an optimal scheme reconciling accurate and concise backbone representations in automated
folding and design studies  proteins                 
moll  m   schwarz  d     kavraki  l          roadmap methods for protein folding  humana press 
molloy  k   saleh  s     shehu  a          probabilistic search and energy guidance for
biased decoy sampling in ab initio protein structure prediction  ieee acm trans 
comput  biology bioinform  preprint 
neumaier  a          molecular modeling of proteins and mathematical prediction of
protein structure  siam review             
noonan  k   obrien  d     snoeyink  j          protein backbone motion by inverse
kinematics  international journal of robotics research                  
olson  b  s   molloy  k     shehu  a          in search of the protein native state with
a probabilistic sampling approach  j  bioinformatics and computational biology 
              
raman  s   vernon  r   thompson  j   tyka  m   sadreyev  r   pei  j   kim  d   kellogg  e  
dimaio  f   lange  o   kinch  l   sheffler  w   kim  b  h   das  r   grishin  n  v  
  baker  d          structure prediction for casp  with all atom refinement using
rosetta  proteins      suppl           
rapp  c  s     friesner  r  a          prediction of loop geometries using a generalized
born model of solvation effects  proteins             
   

fia constraint solver for flexible protein models

ray  o   soh  t     inoue  k          analyzing pathways using asp based approaches  in
algebraic and numeric biology   th international conference  pp          springer
verlag 
rossi  f   van beek  p     walsh  t          handbook of constraint programming  elsevier
science inc 
rufino  s   donate  l   canard  l     blundell  t          predicting the conformational
class of short and medium size loops connecting regular secondary structures 
application to comparative modeling  j  mol  biol               
shehu  a          an ab initio tree based exploration to enhance sampling of low energy
protein conformations  in proceedings of robotics  science and systems v 
shehu  a          conformational search for the protein native state  pp          john
wiley   sons  inc 
shehu  a     kavraki  l          modeling structures and motions of loops in protein
molecules  entropy             
shen  m     sali  a          statistical potential for assessment and prediction of protein
structures  protein sci               
shih  e     hwang  m  j          on the use of distance constraints in protein protein
docking computations  proteins  structure  function  and bioinformatics         
       
shmygelska  a     hoos  h          an ant colony optimisation algorithm for the  d
and  d hydrophobic polar protein folding problem  bmc bioinformatics          
shmygelska  a     levitt  m          generalized ensemble methods for de novo structure
prediction  proceedings of the national academy of science  usa                
     
simoncini  d   berenger  f   shrestha  r     zhang  k          a probabilistic fragmentbased protein structure prediction algorithm  plos one         e      
simons  k   kooperberg  c   huang  e     baker  d          assembly of protein tertiary
structures from fragments with similar local sequences using simulated annealing
and bayesian scoring functions  j  mol  biol               
skolnick  j   fetrow  j     kolinski  a          structural genomics and its importance for
gene function analysis  nat  biotechnology                 
soto  c   fasnacht  m   zhu  j   forrest  l     honig  b          loop modeling  sampling 
filtering  and scoring  proteins  structure  function  and bioinformatics         
    
spassov  v   flook  p     yan  l          looper  a molecular mechanics based algorithm for protein loop prediction  protein eng            
stuckey  p  j   becket  r     fischer  j          philosophy of the minizinc challenge 
constraints                 
sussmann  g     steele  g          constraints  a language for expressing almosthierarchical descriptions  artificial intelligence              
   

ficampeotto  dal palu  dovier  fioretto    pontelli

sutherland  i          sketchpad  a man machine graphical communication system  tech 
rep       lincoln laboratory  mit 
swedish institute for computer science         sicstus prolog home page  http   www 
sics se sicstus  
thebault  p   de givry  s   schiex  t     gaspin  c          combining constraint processing and pattern matching to describe and locate structured motifs in genomic
sequences  in fifth workshop on modeling and solving problems with constraints 
pp       
tsai  y   huang  y   yu  c     lu  c          music  a tool for multiple sequence
alignment with constraints  bioinformatics                    
xiang  z   soto  c     honig  b          evaluating conformal energies  the colony energy
and its application to the problem of loop prediction  pnas               
xu  d     zhang  y          ab initio protein structure assembly using continuous
structure fragments and optimized knowledge based force field  proteins         
         
yang  r          multiple protein dna sequence alignment with constraints  in international conference on practical applications of constraint programming 
yap  r          parametric sequence alignment with constraints  constraints            
yap  r     chuan  h          a constraint logic programming framework for constructing
dna restriction maps  artificial intelligence in medicine                
yue  k     dill  k          constraint based assembly of tertiary protein structures from
secondary structure elements  proteins science                   
zhang  m     kavraki  l          a new method for fast and accurate derivation of
molecular conformations  journal of chemical information and computer sciences 
             
zhang  y     hauser  k          unbiased  scalable sampling of protein loop conformations from probabilistic priors  bmc structural biology   to appear http 
   www  indiana  edu    motion  slikmc  papers  bmc  zhang  pdf   
zhou  h     zhou  y          distance scaled  finite ideal gas reference state improves
structure derived potentials of mean force for structure selection and stability prediction  protein sci               

    

fi