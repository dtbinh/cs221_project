journal artificial intelligence research                  

submitted        published     

backbone fragility local search cost peak
josh singer

joshuas dai ed ac uk

division informatics  university edinburgh
   south bridge  edinburgh eh   hn  united kingdom

ian p  gent

ipg dcs st and ac uk

school computer science  university st  andrews
north haugh  st  andrews  fife ky    ss  united kingdom

alan smaill

a smaill ed ac uk

division informatics  university edinburgh
   south bridge  edinburgh eh   hn  united kingdom

abstract
local search algorithm wsat one successful algorithms solving
satisfiability  sat  problem  notably effective solving hard random   sat
instances near so called satisfiability threshold  still shows peak search cost
near threshold large variations cost different instances  make number
significant contributions analysis wsat high cost random instances  using
recently introduced concept backbone sat instance  backbone set
literals entailed instance  find number solutions predicts
cost well small backbone instances much less relevant large backbone
instances appear near threshold dominate overconstrained region 
show strong correlation search cost hamming distance
nearest solution early wsats search  pattern leads us introduce measure
backbone fragility instance  indicates persistent backbone clauses
removed  propose high cost random instances local search
large backbones backbone fragile  suggest decay cost
beyond satisfiability threshold due increasing backbone robustness  the opposite
backbone fragility   hypothesis makes three correct predictions  first 
backbone robustness instance negatively correlated local search cost
factors controlled for  second  backbone minimal instances  which   sat
instances altered backbone fragile  unusually hard wsat  third 
clauses often unsatisfied search whose deletion
effect backbone  understanding pathologies local search methods  hope
contribute development new better techniques 

   introduction
problem instances require high computational cost algorithms
solve  answering question help us understand interaction search
algorithms problem instance structure potentially suggest principled improvements  example minimise kappa heuristic  gent  macintyre  prosser    walsh 
      walsh        
paper study propositional satisfiability problem  sat   sat important
first perhaps archetypal np complete problem  furthermore  many
c
    
ai access foundation morgan kaufmann publishers  rights reserved 

fisinger  gent   smaill

ai tasks practical interest constraint satisfaction  planning timetabling
naturally encoded sat instances 
sat instance c propositional formula conjunctive normal form  c bag
clauses represents conjunction  clause disjunction literals 
boolean variables negations  variables constitute set n symbols v  
assignment mapping v  true  false   decision question sat asks whether
exists assignment makes c true standard logical interpretation
connectives  assignment solution instance  solution 
sat instance said satisfiable  study  assignments clauses
unsatisfied important  refer quasi solutions  k sat sat
problem restricted clauses containing k literals  notably  k sat decision problem
np hard k    cook         several np hard decision problems   sat  certain probabilistic distributions instances parameterised control parameter
exhibit sharp threshold phase transition probability solution
 cheeseman  kanefsky    taylor        gent et al         mitchell  selman    levesque 
       critical value control parameter instances generated
parameter region lower critical value  the underconstrained region 
almost always solutions  generated overconstrained region
control parameter higher critical value almost always solutions 
many problem distributions  threshold associated peak search cost
wide range algorithms  instances generated distribution control
parameter near critical value hardest cost decays move value
lower higher values  behaviour interest basic ai research  devoid
regularities  random instances represent challenge faced algorithm
absence assumptions problem domain  knowledge
exploited design algorithm transformation problem instance 
random k sat parameterised distribution k sat instances  random k sat 
n fixed control parameter m n  varying m n produces sharp threshold
probability satisfiability associated cost peak range complete algorithms
 crawford   auton        larrabee   tsuji         cost peak pattern random
k sat conjectured extend reasonable complete methods cook
mitchell         give overview analytic experimental results
average case hardness sat distributions 
paper study behaviour local search random k sat  term local
search encompasses class procedures series assignments examined
objective finding solution  first assignment typically selected random 
local search proceeds moving one assignment another flipping  i e 
inverting  truth value single variable  variable flip chosen using heuristic
may include randomness  element hill climbing  for example number
satisfied clauses  memory  usually  local search incomplete sat decision
problem  guarantee solution exists  found within time
bound  unlike complete procedures  local search cannot usually prove certain
solution exists 
relatively recent discovery  e g  selman  levesque mitchell       
average cost local search procedures scales much better best complete
   

fibackbone fragility local search cost peak

procedures critical value m n random   sat  recent studies   e g  parkes
walser        confirmed detail  therefore system completeness
may sacrificed  local search procedures important role play 
generated much interest recent years 
restrict instances distribution satisfiable
increase control parameter  peak cost local search procedures
solve instances near critical value several constraint like problems  clark  frank 
gent  macintyre  tomov    walsh        hogg   williams         underconstrained
region  average cost increases m n due decreasing number solutions per
instance  clark et al          however  overconstrained region  cost decreases
m n although number solutions per instance continues fall  several researchers
noted fact surprise  clark et al         parkes        yokoo        since
number solutions change special way near critical value  why  then 
cost satisfiable instances peak near critical value  decay 
parkes        provided appealing answer first part question study
backbone satisfiable random   sat instances  satisfiable sat instances 
backbone set literals logically entailed clauses instance   
variables appear entailed literals forced take particular truth
value solutions  parkes study demonstrated instances underconstrained region  small fraction variables  any  appear backbone 
however  control parameter increased towards critical value  subclass
instances large backbones  mentioning around        variables  rapidly
emerges  soon control parameter increased overconstrained region
large backbone instances account satisfiable instances  parkes
showed fixed value control parameter  cost local search procedure wsat strongly influenced size backbone  suggests peak
average wsat cost near critical value control parameter increased may due
emergence large backbone instances point  parkes noted given
size backbone  cost actually higher instances underconstrained region
falls control parameter increased  identified fall indicative
another factor produces overall peak cost  main aim paper
identify factor responsible pattern  instances certain size
backbone costly solve others 
remainder paper organised follows  section   review details
wsat algorithm random k sat distribution discuss experimental
conditions used  elucidate patterns cost intend
explain show number solutions backbone size interact  section
  identify remarkable pattern wsats search behaviour clearly distinguishes
high cost lower cost instances certain backbone size  wsat usually drawn
early search quasi solutions clauses unsatisfied  high cost
instances  quasi solutions distant nearest solution  lower cost
instances equal backbone size  less distant  section   develop causal
hypothesis  postulating structural property instances induces search space
   here  use term backbone follows monasson  zecchina  kirkpatrick  selman troyansky
     a      b  whose definition backbone equivalent satisfiable instances 

   

fisinger  gent   smaill

structure turn causes observed search behaviour thus cost pattern 
suggest instances certain backbone size high cost backbonefragile  i e  removal clauses random results instance
greatly reduced backbone size  discuss property may measured show
control parameter increased  instances certain backbone size become less
backbone fragile 
hypothesis true scientific merit makes correct predictions  hypothesis made three correct predictions provide experimental evidence 
section   show degree instance backbone fragile accounts
variance cost control parameter backbone size fixed 
section   consider generation instances backbone fragile 
clauses removed backbone unaffected  found resulting instances became progressively backbone fragile  eventually  clauses
removed without affecting backbone instance said backbone minimal 
hypothesis correctly predicts clauses removed way random
  sat instances  cost becomes considerably higher  section   show hypothesis makes correct prediction relating search behaviour  clauses
often unsatisfied search whose removal affects backbone 
section   relate study previous research give suggestions work 
finally  section   concludes 

   background
section discuss local search algorithm wsat  measurement computational cost representativeness local search algorithms general 
review random k sat distribution overall cost pattern wsat random
k sat  finally look backbone size number solutions interact affect
cost 
    wsat algorithm
term wsat first introduced selman et al          refers local search
architecture subject number subsequent empirical studies
 hoos      a  mcallester  selman    kautz        parkes   walser        parkes        
pseudocode outline wsat algorithm given figure    important feature
wsat that  unlike earlier local search algorithms  chooses unsatisfied clause
flips variable appearing clause  select variable from clause must
return variable mentioned clause  architecture first seen random walk
algorithm due papadimitriou         wsat may use different strategies selectvariable from clause  study  used skc strategy introduced selman 
kautz cohen         refer combination simply wsat  pseudocode
skc strategy given figure   
follow hoos        approach measuring computational cost sat
instances local search algorithm wsat  rather run times  measure runlengths   number flips taken find solution  set noise level p      
hoos found approximately optimal random   sat  hoos stutzle        showed
   

fibackbone fragility local search cost peak

wsat c  max tries  max flips  p 
    max tries
   random assignment
j     max flips
clause    unsatisfied clause c  selected random
v    select variable from clause clause  c  p 
   vs value flipped
satisfying
return
end
end
end
return satisfying assignment found

figure    wsat local search algorithm

select variable from clause clause  c  p 
variable x mentioned clause
breaks x     number clauses c would
become unsatisfied x flipped
end
variable clause breaks y     
return variable  breaking ties randomly
else
probability   p
return variable z clause
minimises breaks z   breaking ties randomly
probability p
return variable z clause
chosen randomly
end

figure    skc variable selection strategy

run lengths easiest instances exponentially distributed many local
search variants  implies random restart mechanism  the re randomisation
max flips flips  significantly worthwhile 
   

fisinger  gent   smaill

known date whether  without using restart  wsat almost surely  i e 
probability approaching    find solution satisfiable   sat instances given unlimited
flips  local search algorithm eventually find solution conditions 
said probabilistically approximately complete  pac   hoos      a  proved whether
several local search algorithms pac culberson gent      a  proved
wsat pac   sat case  hoos        observed data suggested wsat
could pac  set max tries   max flips infinite runs reported
paper  solution found every run  evidence wsat may
pac 
another implication exponential distribution run lengths large number
samples must taken obtain good estimate mean  following hoos  use
median      wsat runs instance descriptive statistic representing
wsats search cost instance  appears give stable estimate cost
 as less sensitive long tail mean  moderate amount
computational effort 
one objection studying single algorithm local search class may
representative  results obtained algorithm may generalise members
class  accept objection  evidence certain conditions 
one local search algorithm actually large extent representative whole class 
example hoos        found high correlation computational costs
random instances pairs different local search algorithms  including wsat 
suggests algorithm independent property instances results
high cost class algorithms 
    random k sat
use well studied random k sat distribution  franco   paull        mitchell et al  
      k      random k sat distribution k sat instances  parameterised
ratio clauses variables m n  let v fixed set boolean variable symbols
size n  generate instance random k sat clauses n variables 
clause c independently chosen randomly selecting literals k distinct variables
v independently negating probability      guarantee
variables mentioned instance contain duplicate clauses 
local search cannot solve unsatisfiable instances  filter using complete
sat procedure  order control effects backbone size  need
isolate portion satisfiable part distribution backbone size
certain value  obtained calculating backbone size satisfiable
instance discarding whose backbone required size  term
controlling backbone size  satisfiable instances certain backbone sizes rare
certain values m n  example m n       found         
generated instances satisfiable backbone size     hence generation instances
way somewhat costly computational terms  therefore one
limits value n data could collected 
   

fibackbone fragility local search cost peak

primarily interested threshold region control parameter 
cost peak occurs  region near point     instances satisfiable 
looked region         satisfiability 
    pattern wsat cost random   sat
figure   show peak wsat cost mentioned e g  parkes
        peak slightly     point        median appears shift
higher percentiles  similar pattern noticed hogg williams       
local search cost graph colouring 

    

    
  th

    

cost

    

    

  th

    

    
  th
    
  th
    

 

  th

 

   

   

   
m n

   

   

figure    cost peak wsat m n varied  level m n  generated
     satisfiable instances  measured per instance wsat cost these 
line plot gives different point cost distribution  e g    th
percentile difficulty    th costly instance wsat 

parkes        yokoo        suggest local search cost peak shown
wsat figure   result two competing factors  m n increased number
solutions per instance falls causes onset high cost  however  number
solutions continues fall overconstrained region cost decreases 
must therefore second factor whose effect outweighs number solutions
overconstrained region cause fall cost  main aim paper
identify factor  pattern wsat cost random   sat identified parkes       
   

fisinger  gent   smaill

starting point  parkes observed given backbone size n  average
cost falls m n increased 
figure   shows fall wsat cost n       random   sat instances 
point plot median cost      instances  length bars
interquartile range instance cost  fall cost approximately exponential decay
range m n near threshold range backbone sizes  rate decay
affected backbone size  cost large backbone instances decaying fastest 
length error bars figure   along log scale cost axis indicates
distribution per instance cost positively skewed even backbone size
controlled  example point m n      backbone size    n
difference   th percentile median      whereas
median   th percentile half that  spread cost large  particularly
relative effect control parameter  think significant portion
variance cost among instances due errors estimates cost
instance 

backbone size       n
backbone size       n
backbone size       n

 

cost

  

 

  

 

    

   

    

   

    
m n

   

    

   

    

   

figure    effect varying m n cost backbone size controlled 

   cost instance defined median run length      runs point figure  
median medians 

   

fibackbone fragility local search cost peak

    number solutions backbone size controlled
studied effect number solutions wsat cost  number solutions
determined using modified complete procedure  small backbone instances 
evidence number solutions actually increases m n  least
overconstrained region  figure   shows plot number solutions  backbone
size controlled    n  point median      instances bars show
interquartile range  possible increase number solutions may help explain
fall cost small backbone instances  appears weak effect
account full 
 

  

number solutions

backbone size       n

 

  

 

  

 

    

   

    

   

    
m n

   

    

   

    

   

figure    number solutions n        m n varied  backbone size controlled
   n 

studied relationship number solutions wsat cost
backbone size controlled different values  figure   shows log log plot number
solutions cost  m n      backbone size    n  linear least squares
regression  lsr  fit superimposed  table   gives summary data log log scatter plot
different backbone sizes transition   gradient intercept lsr fits 
product moment correlation r rank correlation 
number solutions strongly negatively related cost smaller backbone sizes transition strength relationship fairly constant
m n varied  speculate strong relationship instances arises
   

fisinger  gent   smaill

m n
    

    

    

    

    

    

    

    

backbone
size
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n

intercept
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

gradient
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

r

rank corr 

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

table    data log log correlations number solutions cost n       
m n varied backbone size fixed different values 

   

fibackbone fragility local search cost peak

m n         backbone size       n

 

cost

  

 

  

 

  
 
  

 

  

 

  

 

  
number solutions

 

  

 

  

 

  

figure    scatter plot number solutions cost n        m n       
backbone size fixed    n 

finding backbone straightforward main difficulty encountering solution
backbone satisfied  density solutions region satisfying
backbone important  larger backbone sizes  number solutions less
relevant cost  significant change number solutions large backbone
instances observed m n varied  number solutions cost
strongly related instances unsurprising  large backbone size implies
solutions lie compact cluster local searchs main difficulty finding
cluster  i e  satisfying backbone   therefore expect density solutions
within cluster important  hoos        observed correlation
number solutions local search cost becomes small overconstrained region 
explained simply fact large backbone instances dominate
region 

   search behaviour  hamming distance nearest solution
order suggest cause cost decay large backbone instances
observed section      made detailed study wsats search behaviour  i e 
assignments visited search  report exploratory part research
   

fisinger  gent   smaill

section  explain somewhat novel search behaviour metrics used
giving results discussion them 
    definitions methods
assuming local search algorithm pac  given run unlimited length  fb  
number flips taken find first assignment b clauses unsatisfied 
well defined b    f  equal run length 
particular run local search algorithm consists series assignments
t    t         tf    ti assignment visited flips made  found
random   sat n        assignment satisfying clauses quickly
found remainder search  clauses          unsatisfied 
shown gent walsh        gsat  rapid hill climbing phase 
suggested hoos         followed long plateau like phase number
unsatisfied clauses low constantly changing  experiments used f 
arbitrary indicator length hill climbing phase  unlike gsat  wsat
well defined end point hill climbing phase  since short bursts hill climbing
continue occur rest search  think using fb indicator
value b      would give similar results 
local search proceeds flipping variable values might expect hamming distance current assignment nearest solution may
interest  hamming distance two assignments hd t    t    simply number
variables t  t  assign differently  studied hamming distance
current assignment solution tsol c hd t  tsol   minimised 
abbreviate hdns t  c   hamming distance nearest solution   assignment
  hdns t  c  may calculated using complete sat procedure modified
every solution c visited hamming distance calculated 
    results
section  data based random   sat instances n       backbone size
controlled various values    n    n  recall control backbone
certain value  generate satisfiable random   sat instances usual discard
whose backbone required size  varied m n point    
satisfiability        point     satisfiability         hdns tf    c  hamming
distance first assignment   clauses unsatisfied
nearest solution  instance calculated median value f  mean
value hdns tf    c  based      runs wsat  plots figures     
point median      instances 
figure   shows effect varying m n f  backbone size controlled 
values f  low compared cost range small  although
cost find solution varies considerably instance instance  quasi solutions
quickly found matter overall cost  however  notable effects
backbone size m n f    might expected  larger backbone instances 
overall cost generally higher  wsat takes slightly longer find quasi solution 
effect m n unexpected  backbone size controlled    n more  m n
   

fibackbone fragility local search cost peak

increased wsat takes slightly longer find quasi solution  although simultaneously cost
decreasing seen figure   

   

backbone size       n
backbone size       n
backbone size       n
backbone size       n
backbone size       n

   

   

   

f 

   

   

   

   

  

  

 

    

   

    

   

    
m n

   

    

   

    

   

figure    effect varying m n f  backbone size controlled 
figure   shows effect varying m n hdns tf    c  effects backbone
size controlled for  plot  bars give interquartile range  spread
values mean hdns tf    c  point small relative effect varying
m n  positive effect backbone size hdns tf    c  one might expect
since backbone size affects cost 
backbone size controlled  m n increased satisfiability threshold 
mean hdns tf    c  decreases linearly wide range backbone values  hence  although
quasi solution  tf    usually quickly found  instances lower m n quasisolution considerably hamming distant nearest solution  m n increased 
backbone size controlled  effect gradually lessened 
looked relationship search behaviour cost
m n fixed backbone size controlled  found case variance
hdns tf    c  accounts cost variance  figure   shows plot mean
hdns tf    c  cost backbone size controlled    n m n fixed      
lsr fit superimposed  plot suggests hdns tf    c  linearly related log cost 
table   gives intercept gradient lsr fits r values backbone size
controlled three values m n varied  variance hdns tf    c  accounts
variance cost three different backbone sizes consistent
   

fisinger  gent   smaill

  

backbone size       n
backbone size       n
backbone size       n
  

 

hdns tf  c 

  

  

  

  

  

 

    

   

    

   

    
m n

   

    

   

    

   

figure    effect varying m n hdns tf    c  backbone size controlled 

threshold  scatter plots  not shown  linear lsr fits data similar
shape figure   consistent linear relationship  r values
greatest small backbone instances reasons unclear  possibly  since
search shorter small backbone instances  success follows quickly f 
hdns tf    c  better indicator likelihood finding solution 
figure   showed backbone size controlled  hdns tf    c  falls linearly m n
increased  gradient fall     table   showed backbone size
controlled m n fixed  hdns tf    c  linearly related log cost  gradient
fit around       given linear relationship continues hold
constant gradient m n varied  in fact gradient decreases slightly  assuming
increasing m n affecting cost means  would expect linear
decrease log mean cost gradient       slightly steeper
observed decrease log median cost shown figure   
results consistent idea whatever factor causes cost decay
exponentially m n varied largely causing hdns tf    c  fall linearly 
    discussion
identified pattern search behaviour strongly related pattern
cost discussed section      interpretation pattern follows 
   

fibackbone fragility local search cost peak

m n

backbone size

    

   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n

    

    

    

    

    

    

    

intercept
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

gradient
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

r
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

table    data correlations hdns tf    c  log   cost n       m n
backbone size fixed different values 

   

fisinger  gent   smaill

 

  

 

cost

  

 

  

 

  

  

  

  

  

  

  
hdns tf  c 

  

  

  

  

  

 

figure    relationship hdns tf    c  log cost backbone size controlled
   n m n fixed      

instance quasi solutions wsat visits form interconnected areas search space
local search always move solution them  without often moving
assignment many clauses unsatisfied  evidence simply wsat
runs apparently always successful visit assignments clauses
unsatisfied infrequently  frank  cheeseman stutz        mentioned
analysis gsat search spaces random   sat  local minima clauses
unsatisfied usually escaped unsatisfying one clause 
believe instances higher cost quasi solution area extends parts
search space hamming distant solutions  whereas instances lower cost
area less extensive  mean hamming distance early quasi solution
tf  nearest solution accurate indicator extensive quasi solution
area is  interpretation suggests hdns tf    c  strongly correlated cost 
extensiveness quasi solution area determines costly search 
suggests why  instances higher cost  quasi solutions found slightly quickly 
quasi solution area extensive  random starting point shorter series
hill climbing flips required find quasi solution 
   

fibackbone fragility local search cost peak

mean hdns tf    c  decreases linearly m n increased backbone size
controlled  time  cost decays exponentially  think m n
increased  quasi solution area becomes progressively less extensive 

   causal hypothesis
pattern search behaviour section   interpretation suggested
causal hypothesis account decay cost discussed section     hence
overall peak  key hypothesis property sat instances  backbone fragility 
property qualitatively consistent observations  importantly 
although backbone fragility implications instances search space topology 
property based logical structure sat instance  section motivate
define backbone fragility  discuss may measured show relates
patterns reported sections       
    backbone fragility   motivation
suppose b small sub bag clauses satisfiable sat instance c 
exists set quasi solutions qb clauses b unsatisfied 
structural property c would cause quasi solutions qb attractive wsat 
already know backbone random   sat instance small  solutions
found little search  parkes         solutions c b  c b denotes c
one copy member b removed  either solutions c members qb  
assume assignments attractive wsat c approximately
assignments attractive c b  members qb  which
solutions c b  attractive c backbone c b small  particularly
cs backbone large  furthermore tb qb   number variables
appear backbone c b upper bound hdns tb   c   large reduction
backbone size allows high hdns tb   c   summarise  removal certain
small sub bag clauses causes backbone size greatly reduced  expect
quasi solutions clauses unsatisfied attractive wsat
possibly hamming distant nearest solution 
interested quasi solutions general rather qb   removing
random small set clauses average causes large reduction backbone size 
say instance backbone fragile  effect backbone smaller
average  instance backbone robust  large backbone instance backbone fragile 
extension argument expect general quasi solutions attractive
may hamming distant nearest solution  hence idea consistent
observations interpretation section    backbone fragility approximately
corresponds extensive quasi solution area is 
idea backbone fragility underlying factor causing search behaviour
pattern appealing reasons  entailed literal l c  must
sub bag clauses c whose conjunction entails l  given backbone size  clauses
added  given entailed literal l expect extra clauses allow alternative
combinations clauses entail l  hence adding clauses whilst controlling
backbone size  random removal clauses less effect backbone since
   

fisinger  gent   smaill

fact literal entailed depends less presence particular sub bags 
clauses added  expect instances become less backbone fragile  given
hypothetical relationship backbone fragility search behaviour  would
explain qualitatively search behaviour changes m n varied 
think backbone fragility property instances logical structure 
study may lead results complexity issues  postpone discussion
section   
    measurement backbone robustness
define measure backbone robustness instance allow us
test predictions hypothesis  take instance c delete clauses random 
halting process backbone size reduced least half  point
record result number deleted clauses  constitutes one robustness trial 
metric backbone robustness mean result possible trials  i e 
average number random deletions clauses must made reduce
backbone size half 
infeasible compute results possible robustness trials  therefore 
measuring backbone robustness instance estimated computing average
random sample trials  used least     robustness trials case order
ensure reasonably accurate estimate  continued sample robustness trials
standard error less      sample mean  in case estimate
mean accurate within         confidence level   n       
using satisfiable instances near satisfiability threshold whose backbone size
controlled     usually less     robustness trials required estimate
converge way  even then  backbone robustness costly compute 
different possible metrics backbone fragility robustness  found
metric described gave clearest results purposes without unnecessarily complicated definition  metrics  reduction backbone size
random fixed fraction clauses removed  may suitable contexts 
    change backbone robustness control parameter varied
discussed section     expect backbone size controlled  backbone robustness
increases m n increased  since measure backbone robustness defined terms
size backbone  useful comparing instances equal backbone
size 
found increasing control parameter made instances backbone robust 
expected  figure    shows effect backbone robustness increasing m n
satisfiability threshold n       backbone size controlled  point
median      instances 
note backbone robustness defined measure generally higher
instances larger backbones  think large backbone
instances  backbone must reduced larger number literals fragility trial
requires clauses removed 
   

fibackbone fragility local search cost peak

  

  

  

backbone robustness

  

  

  

  

 

backbone size       n
backbone size       n
backbone size       n

 

 

 

    

   

    

   

    
m n

   

    

   

    

   

figure     backbone robustness satisfiability transition  backbone size
fixed    n    n    n 

   correct prediction cost variance
may assert fall cost observed increase control parameter
due change factor f   example yokoo        has 
assertion makes important testable prediction  variation f
control parameter fixed accounts variation cost  however may
factors whose influence cost great obscure effect f
control parameter fixed  best reveal effect f   any  effects
factors may controlled for 
backbone robustness proposed factor f   backbone size another factor
strongly influences cost  result section effects
m n backbone size controlled for  i e  fixed  effects backbone
robustness seen quite clearly large backbone instances 
    correlation data
figure    shows plot log cost measure backbone robustness
random   sat instances n        m n      backbone size controlled    n 
   n    n  linear lsr fit superimposed case  table   gives intercept 
   

fisinger  gent   smaill

m n

backbone size

    

   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n
   n

    

    

    

    

    

    

    

intercept
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

gradient
lsr fit
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

r

r    

r     

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

rank corr 
coefficient
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      

table    data correlation backbone robustness log   cost n      
m n backbone size fixed different values 

gradient r values lsr fits backbone size controlled three values
m n varied threshold 
r values suggest effect backbone robustness cost  particularly large
backbone sizes  smaller backbone sizes  imagine finding backbone less
issue backbone fragility  hinders this  less effect  larger
backbone sizes  think main difficulty wsat satisfying backbone  backbone
fragility important  however  given somewhat unclear shape scatter plots 
several concerns significance correlation  address
using simple statistical methods 
   

fibackbone fragility local search cost peak

m n         backbone size       n

 

cost

  

 

  

 

 

  

  
  
  
backbone robustness

  

  

  

  

  

  

  

m n         backbone size       n

 

cost

  

 

  

 

  

 

 

  

  
  
  
backbone robustness

  

m n         backbone size       n
 

  

cost

 

  

 

  

 

  

 

 

  

  
  
  
backbone robustness

  

figure     scatter plot backbone robustness cost n        m n       
backbone size fixed    n     n    n 

   

fisinger  gent   smaill

    artifact distributions variables 
one concern observed r could arisen simply distributions
two variables rather relationship them  serious
concern distributions unknown 
null hypothesis  h  value r results distributions
two variables equal observed r  randomisation method used test h   
see appendix details method  data set presented       randomised
pairings data constructed  case  found observed r
fall within range sampling distribution r randomised pairings  h 
therefore rejected       confidence level 
r coefficient  given above  greatly affected outliers  therefore rank
correlation coefficient  less affected  calculated  rank correlation
given table    found case rank correlation coefficient
considerably different r coefficient  demonstrates observed r
greatly affected outliers 
    confidence intervals correlation
given relationship two variables merely artifact
distributions outliers  accurate measurement r  bootstrap
method used obtain bounds confidence interval statistic  again 
reader referred appendix details method  using method     
pseudo samples obtained lower upper bounds     confidence interval r 
given table   r     r      respectively  data implies    
confidence  upper bounds amount error estimates r  
          

   correct prediction backbone fragile instances
hypothesis proposes high backbone fragility instances quite accurately represents
factor  via search behaviour patterns uncovered section    causes high
wsat cost instances  however  plausible high backbone fragility
by product unmeasured latent factor causally related
cost 
help establish causal link backbone fragility cost  therefore created sets random sat instances higher backbone fragility usual random
  sat instances  degree following methodological precedent bayardo
schrag         created random instances contained small unsatisfiable subinstances constraints overall  often found exceptionally
hard complete procedure ntab  experiments thereby helped establish
feature instance structure cause exceptionally high cost complete
procedures 
cannot easily set backbone fragility directly  since generation parameter 
one manipulation experiment possible use instance generation procedure results instances higher backbone fragility  hypothesis predicts
   

fibackbone fragility local search cost peak

instances generated using procedure harder random   sat instances 
section define procedure test prediction  may procedure manipulating latent factor  however  since procedure specifically
designed increase backbone fragility  correct prediction still lends credibility
hypothesis 
    backbone minimal sub instances
suppose sat instance c remove clause backbone
affected removal clause  clauses repeatedly removed  eventually
instance clause removed without disturbing backbone 
case backbone minimal sub instance  bms  c  formally 
following definition 
definition sat instance c   bms c iff
c   sub instance c  i e  sub bag clauses  c  
backbone c 
clause c c   exists literal l that 
   c   l
    c    c   l satisfiable
i e  every strict sub instance c   strictly smaller backbone backbone c    
bmss seen satisfiable analogues minimal unsatisfiable sub instances
 muss  unsatisfiable instances studied amongst others culberson gent      b 
context graph colouring gent walsh        bayardo schrag
       satisfiability  mus instance c sub instance unsatisfiable 
removal one clause sub instance renders satisfiable 
unsatisfiable instances must mus  satisfiable sat instances must
bms  bms depend non empty backbone
backbone instance empty  bms empty sub instance  instance
one bms  different bmss instance may share clauses  one bms
instance cannot strict sub instance another 
suppose backbone satisfiable instance c set literals  l    l            lk    let
clause l  l        lk   following useful fact 
theorem c   bms c iff c   mus c  
simple proof given appendix b  due fact  methods studying
muss applied study bmss  study bmss satisfiable
instance c finding backbone c studying muss c d 
corresponds bms c since must present every mus c d 
find bms c determine backbone  find random mus c using
mus finding method gent walsh        remove result 
   

fisinger  gent   smaill

instances
preserve backbone c     c    
preserve backbone c     c    
preserve backbone c      c    
preserve backbone c      c    
preserve backbone c      c    
preserve backbone c      c    
bms

backbone robustness
  th percentile median   th percentile
              
       
              
       
              
       
      
      
       
      
      
      
      
      
      
      
      
      

table    effect preserve backbone backbone robustness 

    interpolating instance one bmss
bms c   established  study effects interpolation
c c   removing random c clauses appear
c     equivalent removing clauses random backbone preserved 
preserve backbone c  mr   c     denote c mr clauses  appear
bms c     removed random  resulting instance backbone
c 
increasing m n controlling backbone size causes backbone robustness
increase  found deleting clauses backbone unaffected causes
backbone robustness  as measured above  decrease  one might expect 
used     random   sat instances n       m n         instance
found one bms  used preserve backbone interpolate mr set
various values  table   shows effect increasing mr backbone robustness 
bmss threshold instances backbone fragile removal one clause
likely reduce backbone half more 
hypothesis predicts interpolation c c   proceeds  cost
local search increases backbone robustness decreases  conceivable 
although would surprising  removing clauses random instances
near threshold generally makes cost local search increase 
case  increase cost interpolation towards bms could merely due
removal clauses per se rather removal clauses whilst preserving backbone 
control possibility removed clauses according two procedures 
procedure random c  mr   removes mr clauses c random  procedure
reduce backbone c  mr   removes mr clauses time clause removed 
size backbone reduced  clause removed chosen randomly
clauses  procedure therefore uses opposite removal criterion preservebackbone  backbone becomes empty  clauses removed 
figure    shows effect per instance cost applying three clause removal
procedures set     random   sat threshold instances  plot
median per instance cost 
   

fibackbone fragility local search cost peak

 

  

cost

preservebackbone
reducebackbone
random

 

  

 

  

 

  

  

  

  
mr

  

  

  

  

figure     effect three clause removal procedures median per instance cost 

observe removing clauses randomly backbone strictly reduced  causes cost reduced  removal clauses cause higher
cost  reduce backbone procedure causes greater initial fall cost  backbone size reduced quickly random  however  cost stabilises
reduce backbone backbone becomes empty thereafter clauses
removed 
removing clauses according preserve backbone causes local search cost
increase amount approximately exponential number clauses removed  table
  gives data effect cost data bmss  interpolation shifts
whole distribution up  median  median cost bmss 
backbone fragile instances  three times   th cost
percentile random   sat instances 
bmss instances         clauses  results
therefore demonstrate existence instances underconstrained region
much harder typical instances near satisfiability threshold  however since
obtained sampling random   sat directly  know
often occur  far know  vanishingly rare therefore  contrast
exceptionally hard instances complete algorithms  seems unlikely affect
mean cost  also  gent walsh        showed exceptionally hard
   

fisinger  gent   smaill

instances
preserve backbone c     c    
preserve backbone c     c    
preserve backbone c      c    
preserve backbone c      c    
preserve backbone c      c    
preserve backbone c      c    
bms

per instance cost
  th percentile median   th percentile
   
    
    
   
    
    
   
    
    
   
    
    
   
    
     
   
    
     
    
     
      

table    effect preserve backbone per instance cost 

instances complete algorithms hard different reason threshold
instances  bmss apparently hard reason backbonefragile 
one useful by product section means generating harder test instances
local search variants without increasing n  however instances require o m   n 
complete searches generate  o n  determine satisfiability backbone o m 
reduce bms 

   correct prediction search behaviour
recall motivating discussion section     suggested quasisolutions qb would attractive backbone c b small  say
clauses b likely set unsatisfied clauses removal
clauses b large effect backbone  part hypothesis makes
prediction search behaviour clauses often unsatisfied wsat
whose removal reduces backbone size most  section show prediction
correct 
looked individual instances cost percentiles set      random
k sat instances n       m n         per instance cost determined
previous sections  clause instance  calculated number backbone
literals longer entailed clause removed  simple measure
backbone contribution  bc  clause much backbone size depends
presence clauses  clauses backbone contribution high  termed backbonecritical clause  made      runs wsat instance conditions
previous sections  search  time current assignment changed recorded
whether clause unsatisfied  result averaging number times clause
unsatisfied runs gives unsatisfaction frequency  uf   clause 
figure    shows plot two quantities clauses instance whose cost
median      threshold instances  note figure clauses whose
presence contributes backbone often unsatisfied average
wsat search 
   

fibackbone fragility local search cost peak

 

  

unsatisfaction frequency

 

  

 

  

 

  

 

 

  
  
backbone contribution

  

  

figure     scatter plot unsatisfaction frequency backbone contribution
clauses cost median      instances  m n         n       

table   confirms pattern  row table gives data one instance 
selected cost percentiles  individual instances varying degrees difficulty  example
row labelled   th corresponds instance whose cost     th rank
easiest difficult      instances    th percentile instance
one used produce figure     third fourth columns give mean
standard deviation unsatisfaction frequency clauses instance
last two columns give statistics sub bag clauses
backbone critical  their backbone contribution top      
table   shows converse effect present  clauses often
unsatisfied  their unsatisfaction frequency top      backbone critical
average  although effect quite clear means  sometimes particularly
large standard deviations bc values frequently unsatisfied clauses 
because  seen figure     clauses often unsatisfied even
though removing affect backbone size all 
found experiments removal clauses along small random
bags clauses average reduce backbone size considerably  large standard
deviations therefore arise true backbone contribution clauses
apparent using simple measure 
   

fisinger  gent   smaill

cost
percentile

backbone
size

  th
  th
  th
  th
  th
  th
  th
  th
  th

  
  
  
  
  
  
  
  
  

clauses
uf mean
       
       
       
       
       
       
       
       
        

uf std  dev 
      
       
       
       
       
       
       
       
        

backbonecritical clauses
uf mean uf std  dev 
       
      
       
       
       
       
       
       
       
       
       
       
        
       
        
        
        
        

table    unsatisfaction frequencies clauses different cost percentile instances 

cost
percentile
  th
  th
  th
  th
  th
  th
  th
  th
  th

backbone
size
  
  
  
  
  
  
  
  
  

clauses
bc mean
      
      
      
      
      
      
      
      
      

bc std  dev 
      
      
      
      
      
      
      
      
       

often
unsatisfied clauses
bc mean bc std  dev 
      
      
      
      
      
      
      
      
      
      
      
      
       
       
      
      
       
       

table    backbone contributions clauses different cost percentile instances 

   

fibackbone fragility local search cost peak

instances different costs satisfiability threshold  clauses
likely unsatisfied search higher backbone contribution average 
conversely  clauses largest backbone contribution likely
unsatisfied search  section therefore demonstrates well explaining
differences cost instances  backbone fragility hypothesis explain
differences difficulty satisfying particular clauses search 

   related work
clark et al         showed number solutions correlated search cost
number local search algorithms random instances different constraint problems 
including random   sat  pattern confirmed hoos        using improved
methodology  clark et al s work first step towards understanding variance
cost number constraints fixed  followed approach
looking number solutions using linear regression estimate strengths
relationships factors 
schrag crawford        made early empirical study clauses  including
literals  entailed random   sat instances  parkes         whose study
discussed section    looked detail backbone size random   sat effect
local search cost  linked position cost peak satisfiability
threshold emergence large backbone instances occurs point  parkes
identified fall wsat cost instances given backbone size 
therefore basis study  parkes conjectured presence failed cluster
may cause high wsat cost large backbone random   sat instances 
according hypothesis  addition single clause could remove group solutions
hamming distant remaining solutions  reducing size backbone
dramatically  clause would large backbone contribution  therefore
explanation general high cost threshold region certain features common
parkes conjecture  particular agree presence clauses
large backbone contribution causes high cost  especially demonstrated
results section   
frank et al         studied detail topology gsat search space induced
different classes random sat instances  study discussed implications search
space structure future algorithms  well effects structures algorithms
gsat  noted local search algorithms wsat may
blind structures studied search different ways gsat 
yokoo        addressed question cost peak local search
m n increased  approach analyse whole search space small satisfiable random instances  study  examined sat  yokoo
showed results generalised colourability problem  yokoo used deterministic
hill climbing algorithm  studied number assignments solution
reachable  solution reachable assignments  via algorithms deterministic moves 
largely determines cost algorithm 
followed yokoo looking factor competing number solutions whose
effect cost changes m n increased  factor yokoo proposed cause
   

fisinger  gent   smaill

overall fall cost decrease number local minima assignments
local move decreased number unsatisfied clauses  decrease
number demonstrated m n increased  decrease attributed
decreasing size basins  interconnected regions local minima number
unsatisfied clauses   yokoo claimed  p       that 
adding constraints       makes  instance  easier decreasing number
local minima 
however  think clear priori relationship number
local minima cost given instance yokoo study sufficiently
convince us explanation  contrast yokoo  studied detail
relationship backbone fragility instances wsats cost instances
confirmed testing predictions hypothesis  also  studied instance properties related logical structure clauses rather search space topology
induced think potential generalise across algorithms
even address complexity issues  explain towards end section 
hoos        analysed search spaces sat instances relation local search
cost looking two new measures induced objective function defined 
including one based local minima  although via measures  hoos able
account random   sat cost peak  found features correlated
cost sat encodings problems shown  hoos      b 
measures help distinguish alternative encodings problem 
pattern uncovered fit work makes instances
require high cost solve  gent walsh        looked probability unsatisfiable sat instance became satisfiable fixed number clauses removed random 
unsatisfiable instances highest computational cost complete procedure found unsatisfiability fragile unsatisfiability
sensitive random removal clauses  may therefore fragility instances unsatisfiability backbone size cause high computational cost
context complete procedures incomplete local search  would interesting
link two algorithm classes  link may form basis possible explanation reasons threshold random   sat instances may universally hard
average case  opposed merely costly class algorithms  recent work
monasson et al       a      b  suggested parameterised distributions instances
hard average case  e g  random   sat  exhibit discontinuity
backbone size  control parameter varied  whereas polynomial time average case
distributions  random   sat  backbone size changes smoothly  propose
complexity distribution linked presence discontinuity 
conjecture may asymptotic limit  instances backboneor unsatisfiability fragile persist n increased discontinuity 
line research may therefore establish testable causal mechanism pattern 
showing properties instance distributions affect algorithm performance 
would interesting compare backbone fragility different random distributions
  sat instances  introduced bayardo schrag        iwama 
   monasson et al s definition backbone extends unsatisfiable instances 

   

fibackbone fragility local search cost peak

miyano asahiro        see whether differences local search cost could explained 
method generates satisfiable instances quickly solved local search
analysed koutsoupias papadimitriou        gent         random clauses
added formula random   sat conflict certain
solution set advance  conjecture overconstrained examples
quickly solved local search backbone robust 
interesting possibility mentioned hoos stutzle        suggested exponential run length distribution  local search equivalent random generate andtest drastically reduced search space  conjecture reduced search space
corresponds quasi solution area  measurements hdns tb   c  quasi solutions
tb may therefore indicative extensiveness reduced search space  especially
since metric linearly correlated log cost  experimentation vein
may therefore reveal topology reduced search space could
turn lead better local search algorithms designed exploit knowledge 
finally  emphasise notions backbone backbone fragility
equally applicable non random sat instances  future may able confirm
results shown random sat instances apply equally benchmark realworld sat instances  however  one caveat entailed literals may uncommon
instances may need study fragility sets entailed formulas 

   conclusion
reconsidered question cost local search peaks near random
  sat satisfiability threshold  overall pattern one two competing factors 
cause onset high cost control parameter increased previously
established decreasing number solutions  proposed cause
subsequent fall cost falling backbone fragility 
found striking pattern search behaviour local search algorithm wsat 
instances given backbone size  underconstrained region control parameter  wsat attracted early quasi solutions hamming distant
nearest solution  distance strongly related search cost  control
parameter increased  distance decreases  suggested backbone fragility
cause pattern 
defined measure backbone robustness  backbone fragile instances low
robustness  able test predictions hypothesis fall backbone
fragility cause overall decay cost control parameter increased 
found hypothesis made three correct predictions  firstly degree
instance backbone fragile correlated cost effects factors
controlled for  secondly  random   sat instances altered
backbone fragile  by removing clauses without disrupting backbone  cost
increases  thirdly  clauses often unsatisfied search whose
deletion effect backbone 
summarise interpretation evidence  underconstrained region 
instances small backbones predominant  region  rapid hill climbing
phase typically results assignment close nearest solution  and probably
   

fisinger  gent   smaill

satisfies backbone   since finding small backbone largely accomplished hillclimbing  typical cost wsat low region variance cost due variance
density solutions region search space backbone satisfied 
threshold region  large backbone instances quickly appear large quantities 
large backbone instances  main difficulty local search identify backbone
rather find solution backbone identified  identification
large backbone may accomplished rapid hill climbing phase greater lesser
extent  think extent determined backbone fragility instance 
large backbone instance backbone fragile hill climbing phase ineffective
results assignment hamming distant nearest solution  probably
implying much backbone identified   costly plateau search
required find solution  hence rare large backbone instances occur
underconstrained region  extremely costly solve high backbone
fragility 
large backbone instance backbone robust  rapid hill climbing phase
effective determining backbone plateau phase shorter  overall
instance less costly wsat solve  hence large backbone instances  since
backbone fragility increases add clauses  cost decreases  overconstrained region 
large backbone instances dominant backbone fragility becomes main factor
determining cost  hence cost decreases region  hypothesis proposes following
explanation cost peak  typical cost peaks threshold region
appearance many large backbone instances still moderately backbone fragile 
followed increasing backbone robustness instances 

acknowledgments
research supported uk engineering physical sciences research council
studentship          first author  first two authors members crossuniversity apes research group  http   www cs strath ac uk  apes    would
thank members apes group  anonymous reviewers
earlier paper andrew tuson invaluable comments discussions 

   

fibackbone fragility local search cost peak

appendix a  randomisation bootstrap tests
summarise methods used context  explanation methods
given cohen        
a   randomisation estimating correlation coefficient due
distributions variables
randomisation used estimate correlation coefficient two variables
results simply distributions rather relationship  start
two vectors data x   hx    x            xn   hy    y            yn i  correlation
coefficient merely due distributions x y  dependent
particular xi paired yi   therefore calculate correlation coefficient resulting
merely distributions pair x data randomly 
construct k randomisations  randomisation consists vector    
simply random permutation y  randomisation  calculate correlation
coefficient x   note value xi paired random value
y  randomised correlation coefficients give us estimate correlation
coefficients resulting distributions variables  k large enough 
accurate estimate compared correlation coefficient
observed data 
a   bootstrap estimation confidence intervals correlation coefficients
original sample h x    y      x    y            xn   yn  i n pairs  pseudo sample
original consists n pairs  j th pair pseudo sample  xbj   yjb      xq   yq  
q random number   n   pair pseudo sample chosen
independently i e  pairs sampled original replacement  assume
original sample pairs data representative whole population pairs 
given this  composing pseudo samples sampling whole population 
therefore measuring correlation coefficient many pseudo samples  study
correlation coefficient would looked taken many sets samples
whole population  distribution correlation coefficient among many
pseudo samples  the bootstrap sampling distribution  infer bounds confidence
interval observed correlation coefficients 
many pseudo samples taken  correlation coefficient calculated
pseudo samples  gives bootstrap sampling distribution correlation coefficient      th percentile distribution upper bound     confidence
interval correlation coefficient     th percentile lower bound 

appendix b  relationship bmss muss
let c satisfiable sat instance  l    l            lk   set literals entailed
c  let clause l  l        lk  
theorem c   bms c iff c   mus c  
   

fisinger  gent   smaill

proof suppose c   bms c  c   d  sub instance c d  must
unsatisfiable  violates every literal backbone c     removed c   d 
result c   satisfiable  clause c removed c   d  must
literal backbone c     li say   c    c   li satisfiable  therefore 
since li literal d   c    c   satisfiable  therefore c   mus
c d 
conversely  suppose c   mus c d  since c   minimally unsatisfiable 
 
c satisfiable  since c   sub instance c  backbone c   must subset
backbone c  suppose literal lj backbone c
backbone c     would solution c   lj   would
solution c   d  since lj one literal d  contradicts c   unsatisfiable
lj i e  c   c must backbone 
c   minimally unsatisfiable  therefore clause c c      c    c  
satisfiable  solution  c    c   must make literal lk true  must
therefore solution  c    c   lk   therefore lk   backbone
c     backbone  c    c    hence c   bms c  

references
bayardo  r  j     schrag  r          using csp look back techniques solve exceptionally hard sat instances  proceedings second international conference
principles practice constraint programming  pp        springer 
cheeseman  p   kanefsky  b     taylor  w          really hard problems are 
proceedings ijcai     pp          morgan kaufmann 
clark  d   frank  j   gent  i  p   macintyre  e   tomov  n     walsh  t          local search
number solutions  proceedings second international conference
principles practice constraint programming  pp          springer 
cohen  p          empirical methods artificial intelligence  mit press 
cook  s          complexity theorem proving procedures  proc   rd ann  acm
symp  theory computing  pp         
cook  s     mitchell  d          finding hard instances satisfiability problem 
survey  satisfiability problem  theory applications  vol     dimacs series
discrete mathematics theoretical computer science  pp        american
mathematical society 
crawford  j  m     auton  l  d          experimental results crossover point
random  sat  artificial intelligence           
culberson  j     gent  i  p       a   completeness walksat   sat  tech 
rep  apes          apes research group 
available http   apes cs strath ac uk apesreports html 
   

fibackbone fragility local search cost peak

culberson  j     gent  i  p       b   well reach  hard problems hard  tech 
rep  apes          apes research group 
available http   apes cs strath ac uk apesreports html 
franco  j     paull  m          probabilistic analysis davis putnam procedure
solving satisfiability problem  discrete applied math           
frank  j   cheeseman  p     stutz  j          gravity fails  local search topology 
j  artificial intelligence research            
gent  i  p          stupid algorithm satisfiability  tech  rep  apes         
apes research group 
available http   apes cs strath ac uk apesreports html 
gent  i  p   macintyre  e   prosser  p     walsh  t          constrainedness search 
proceedings aaai     pp          aaai press   mit press 
gent  i  p     walsh  t          empirical analysis search gsat  j  artificial
intelligence research          
gent  i  p     walsh  t          satisfiability constraint gap  artificial intelligence 
         
hogg  t     williams  c  p          hardest constraint problems  double phase
transition  artificial intelligence             
hoos  h          stochastic local search   methods  models  applications  ph d  thesis 
darmstadt university technology 
hoos  h       a   run time behaviour stochastic local search algorithms
sat  proceedings aaai     pp          aaai press   mit press 
hoos  h       b   sat encodings  search space structure  local search performance 
proceedings ijcai     pp          morgan kaufmann 
hoos  h     stutzle  t          characterising run time behaviour stochastic local
search  tech  rep  aida        darmstadt university technology 
iwama  k   miyano  e     asahiro  y          random generation test instances controlled attributes  cliques  coloring  satisfiability  vol     dimacs series
discrete mathematics theoretical computer science  pp          american
mathematical society 
koutsoupias  e     papadimitriou  c  h          greedy algorithm satisfiability 
information processing letters                
larrabee  t     tsuji  y          evidence satisfiability threshold random  cnf
formulas  tech  rep  ucsc crl        jack baskin school engineering  university
california  santa cruz 
   

fisinger  gent   smaill

mcallester  d   selman  b     kautz  h          evidence invariants local search 
proceedings aaai     pp          aaai press   mit press 
mitchell  d   selman  b     levesque  h          hard easy distributions sat
problems  proceedings aaai     pp          aaai press   mit press 
monasson  r   zecchina  r   kirkpatrick  s   selman  b     troyansky  l       a     psat  relation typical case complexity nature phase transition 
random structures algorithms              
monasson  r   zecchina  r   kirkpatrick  s   selman  b     troyansky  l       b   determining computational complexity characteristic phase transitions  nature      
       
papadimitriou  c  h          selecting satisfying truth assignment  proc    nd
ieee symp  foundations comp  sci   pp         
parkes  a          clustering phase transition  proceedings aaai     pp 
        aaai press   mit press 
parkes  a     walser  j          tuning local search satisfiability testing  proceedings aaai     pp          aaai press   mit press 
schrag  r     crawford  j          implicates prime implicates random   sat 
artificial intelligence             
selman  b   kautz  h     cohen  b          noise strategies improving local search 
proceedings aaai     pp          aaai press   mit press 
walsh  t          constrainedness knife edge  proceedings aaai     pp     
     aaai press   mit press 
yokoo  m          adding constraints makes problem easier hill climbing
algorithms  analysing landscapes csps  proceedings third international
conference principles practice constraint programming  pp         
springer 

   


