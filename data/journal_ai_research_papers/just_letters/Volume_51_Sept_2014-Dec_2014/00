journal artificial intelligence research               

submitted       published     

cooperative monitoring diagnose multiagent plans
roberto micalizio
pietro torasso

micalizio di unito it
torasso di unito it

dipartimento di informatica 
universita di torino
corso svizzera              torino  italy

abstract
diagnosing execution multiagent plan  map  means identifying explaining
action failures  i e   actions reach expected effects   current approaches
map diagnosis substantially centralized  assume action failures independent other 
paper  diagnosis maps  executed dynamic partially observable
environment  addressed fully distributed asynchronous way  addition  action
failures longer assumed independent other 
paper presents novel methodology  named cooperative weak committed monitoring  cwcm   enabling agents cooperate monitoring actions  cooperation helps agents cope scarcely observable environments  agent
cannot observe directly acquired agents  cwcm exploits nondeterministic action models carry two main tasks  detecting action failures building
trajectory sets  i e   structures representing knowledge agent environment recent past   relying trajectory sets  agent able explain
action failures terms exogenous events occurred execution
actions themselves  cope dependent failures  cwcm coupled diagnostic
engine distinguishes primary secondary action failures 
experimental analysis demonstrates cwcm methodology  together
proposed diagnostic inferences  effective identifying explaining action failures
even scenarios system observability significantly reduced 

   introduction
multiagent plans  maps  adopted many applicative domains  web services
service robots  whenever interactions among cooperative agents organized
advance  i e   planned   order reach acceptable efficiency level execution 
consider instance  orchestrated web services  yan  dague  pencole    cordier        
assembling tasks  heger  hiatt  sellner  simmons    singh        sellner  heger  hiatt 
simmons    singh         service robotics  micalizio  torasso    torta         maps
therefore characterized cooperative team agents perform actions concurrently
order achieve common global goal 
use maps real world scenarios  however  cope critical issue 
plan actions deviate expected nominal behaviors due occurrence
 unpredictable  exogenous events  deviations typically considered plan failures
since prevent agents reach goals  indeed  although maps versatile
c
    
ai access foundation  rights reserved 

fimicalizio   torasso

systems  particularly fragile  failure action easily propagate
system causing failures actions  even assigned different agents 
order make execution map robust  i e   tolerant least exogenous
events   therefore important detect isolate action failures  provide human
user  or plan repair module  set possible explanations detected failures 
recent works  see e g   mi   scacchi        gupta  roos  witteveen  price    de kleer 
      micalizio        argued plan repair procedure effective
causes plan failure known  e g   identified via diagnosis  
last decade  problem diagnosing execution map faced
different perspectives  since seminal work  kalech kaminka        focus
coordination failures introduce notion social diagnosis  social diagnosis relies
abstract representation map hand  given terms behaviors  aims
explaining two agents selected conflicting behaviors  kalech kaminka
       kalech        present alternative algorithms inferring social diagnosis 
approaches  see e g   de jonge  roos    witteveen        roos   witteveen 
      micalizio   torasso              adopt explicit representation map terms
agents actions shared resources  particular  diagnostic framework  roos
witteveen        de jonge et al         consider action failures  i e   actions
reach expected effects   introduce notion plan diagnosis  plan
diagnosis subset  already performed  actions that  assumed abnormal  make
plan execution consistent observations received far  since set
observations possibly explained many plan diagnoses  roos witteveen       
present criterion identifying preferred diagnoses based predictive power
diagnoses 
proposals  however  rely assumptions might limit applicability real world scenarios  first all  assume form synchronization
among agents  e g   synchronized selection behaviors  execution actions  
importantly  action failures assumed mutually independent  furthermore 
particular case social diagnosis  agents cooperate exchanging
belief states  might critical issue keep information private  hand  framework proposed roos witteveen        
diagnostic inferences substantially centralized 
paper aim relaxing assumptions extending relational based
framework introduced micalizio torasso               similarly roos witteveen  adopt explicit representation map hand term agents actions
shared resources  differently them  action models include nominal well
faulty evolutions  argue rest paper  kind extended action
models subsumes action models proposed roos witteveen 
addition  aim fully distributed solution rely synchronized
execution actions  i e   global clock available   distributed solution social
diagnosis proposed kalech  kaminka  meisels  elmaliach        
work  however  form synchronization among agents required agents select
next behavior simultaneously  moreover  agents cooperate sharing
belief states  proposal  coordination among agents achieved means
exchange direct observations agents  idea observation
 

ficooperative monitoring diagnose multiagent plans

acquired agent used agents reasoning  understand
difference exchanging belief states direct observations  note
belief state interpretation observations made specific agent according
local knowledge  since agent might partial knowledge environment 
belief states could ambiguous even erroneous  therefore  agents exchange
beliefs  may propagate errors  conversely 
coordination consists exchange direct observations  agents infer
beliefs without risk conditioned errors made others 
propose framework that  relying notion partial order  causal link
 pocl  plans  see cox  durfee    bartold        weld        boutilier   brafman        
limits number messages exchanged agents number causal links
existing actions assigned different agents 
proposal  communication plays central role assuring consistent
execution map  easing diagnostic task  consider environment agents operate scarcely observable  agents directly acquire
information small portion surroundings  dealing scarce observations challenging solving diagnostic task situation might
prevent detection action failures  cope issue propose paper
strategy named cooperative weak committed monitoring  cwcm   extends
weak committed monitoring introduced micalizio torasso         cwcm allows
agents cooperate agent infer outcome
actions  i e   failure detection  pieces information provided agents 
soon failures detected  must diagnosed order identify
root causes  paper  propose local diagnostic process agent
diagnose failure actions without need interacting agents 
particular  diagnostic inferences take account failures different actions
may dependent  words  action failure indirect consequence  i e  
secondary failure  failure preceding action  i e   primary failure   identifying
primary secondary failures essential point view plan repair primary
failures root causes anomalous observed execution  principle  plan repair
recovers primary failures recover secondary failures  interesting property methodology process inferring primary secondary
failures performed autonomously agent  relying trajectory sets built
cooperative monitoring 
    contributions
paper contributes diagnosis map execution many ways  first all 
paper shows extended action models proposed monitoring purpose
obtained compositionally nominal models actions  models
exogenous events affect actions  thus  knowledge engineer take
advantage focusing models elementary components systems
 e g   actions exogenous events   creating complex  extended  action models
composing elementary components 
 

fimicalizio   torasso

addition  proposed cwcm framework fully distributed  agent monitors
actions  central agent traces actions progress  thus 
cwcm applied domains agents operate physically distributed
environments  hence centralized solution could impractical  another important
feature cwcm asynchronous  neither assumption synchronized execution
actions  assumptions long actions last made  words  agents
share global clock  course  form synchronization still necessary
mutual exclusion required accessing critical resources  cases  however 
prefer use term coordination 
cwcm represents valid solution whenever diagnosis map performed
environments characterized scarce observability levels  fact  significant contribution
cwcm cooperative monitoring protocol enables agents acquire information system resources other  paper argue number
messages exchanged via cooperative protocol linear number inter agent
causal links  i e   causal dependencies existing pair agents  
last important contribution paper ability distinguishing primary secondary failures  previous approaches  see e g   micalizio   torasso        roos
  witteveen         fact  assume action failures independent other 
    outline
paper organized follows  section   introduce basic multiagent planning
framework use starting point work  section   basic framework
extended relaxing important assumptions  section   formally presents cooperative weak committed monitoring  cwcm  strategy  local diagnostic inferences
discussed section    paper closes detailed experimental analysis section
   critical discussion related works section   
paper includes appendix briefly discuss cwcm
implemented means ordered binary decision diagrams  obdds   bryant       
       formally analyze computational complexity implementation 

   multiagent planning  basic framework
section organized three parts  first  introduce basic notions multiagent planning terminology use throughout paper  then  discuss
propositional planning language translated state variable representation 
finally  present basic strategy plan execution multiagent settings
highlight importance cooperation among agents even strong assumption exogenous event occurs  assumption relaxed section   
    preliminary concepts multiagent planning
since interested diagnosing systems modeled multiagent plans 
begin discussion presenting framework developed within planning community
represent synthesize kind plans  worth noting planning problem
typically approached propositional terms  preconditions effects actions literals
 

ficooperative monitoring diagnose multiagent plans

must true  respectively  application actions themselves 
thus intuitively introduce section planning notions propositional terms 
however  section      argue addressing problem plan execution 
convenient handle representation system terms state variables 
hence translate propositional framework state variables one 
important assumption holding throughout paper that  although observations gathered agents execution time partial  always correct 
elaborate point section     
      multiagent plans
multiagent plan  map  systems take account paper modeled
tuple s ht   res   p i  where 
team cooperating agents  agents denoted letters j 
res set shared resources objects available environment 
assume resources reusable  i e   consumable  
accessed mutual exclusion  note agents exchange pieces
information resources  space resource names common
language agents communicate 
p completely instantiated partial order causal link plan  pocl   weld        
resulting planning phase ones boutilier brafman       
cox et al          sake simplicity  map p simplified structure
since involve concurrency non concurrency constraints  precisely 
map p tuple hi  g  a  r  ci where 
  set propositional atoms representing initial state system
planning time 
  g another set propositional atoms representing global goal achieved 
note g conjunction sub goals gi agent charge of 
  set action instances agents execute  action
assigned specific agent   planning time  assume action
modeled terms preconditions pre a  effects eff  a  
conjunctions grounded atoms  see pddl level    fox   long        
rest paper  denote ail l th action performed agent i 
  r set precedence links action instances  precedence link ha  a 
r means action a  start completion action a 
  c set causal links form lk   ha  q  a  i  link lk states action
provides action a  service q  q atom occurring
effects preconditions a   
assume map p  
flaw free  nominal execution p achieves g 
 

fimicalizio   torasso

safe respect use resources  intuitively  say resource
res res used safely iff execution step  res either assigned 
assigned exactly one agent  similar concurrency requirement  roos
  witteveen         two actions executed concurrently require
subset resources 
redundant actions  even though p necessarily optimal  contains
actions directly indirectly provide services help achievement goal 
means always exists chain causal links action
plan least one atom goal g 
guarantee resource safeness  introduce notion working sessions associated resources agents 
definition   let res resource res   agent   working session
wshres ii using res pair haio   aic actions ai that 
aio precedes aic  i e   aio aic   transitive closure precedence
relations r  
aio action ai agent acquires res  modeled specifying
atom available res  preconditions aio   moreover  exists c
incoming causal link form hajk   available res   aio i  ajk action assigned
agent j  possibly ajk a  i e   pseudo action whose effects determine
initial state system   action aio opens working session  action
aih ai aio aic  i e   aio aih aic    incoming causal link labeled
service available res  coming action another agent j    i 
aic action ai agent relinquishes resource res favor another
agent j    i  modeled means causal link haic   available res   ajk c 
meaning action aic releases res one effects  available res 
one preconditions ajk   action aic closes working session  course 
agent release resource res one agent  i e   outgoing link
haic   available res   ajk unique  addition  action aih ai aio aic  
outgoing link labeled service available res  directed towards action
another agent j 
action aih aio aic use res  i e   res mentioned preconditions effects aih   precisely  causal link mentioning res two
actions aih aik ai allowed aih aik belong working
session  namely  aio aih aik aic  
given working session wshres ii   denote opening closing actions
opening wshres ii   closing wshres ii    respectively  two working sessions wshres ii
ws hres ji consecutive  wshres ii   ws hres ji   closing wshres ii   provides opening ws hres ji  
service available res  
proposition   map p satisfies resource safeness requirement resource
res res  working sessions res totally ordered sequence
ws hres i    ws hres i          wsnhres in   agent ij  with j      n  
 

ficooperative monitoring diagnose multiagent plans

means that  independently agents accessing resource  two working sessions
resource res never overlap other  possibly  agent
one session sequence  meaning agent acquires relinquishes resource
res many times along plan 
resource safeness requirement extension concurrency requirement introduced roos witteveen         fact  concurrency requirement implicitly
imposes ordering two actions cannot performed simultaneously 
resource safeness imposes ordering blocks actions identified working session  necessary order model situations agent uses set resources
number consecutive actions cannot interleaved actions
agents  working session sort critical section cannot interrupted  worth
noting that  since working session associated single resource  since
constraint working sessions two resources  possible action
aic ai closes two different working sessions  example  let wshres ii ws hres   ii
two working sessions agent using resources res res    respectively  possible
action aic closing wshres ii   closing ws hres   ii    addition  resource
res could released favor agent j  resource res  could released favor
another agent k  modeled two causal links haic   available res   ajx
haic   available res     aky i 
      local plans
since interested fully distributed framework plan execution plan
diagnosis  impose every agent knows portion p perform 
thus introduce notion local plan  intuitively  local plan p projection p
actions assigned agent i  p therefore partitioned many local plans
agents   formally  given agent   local plan p assigned

  c i  represents portion
tuple p  hi   gi   ai   ri   clocal
  cin

initial state known agent plan execution starts  gi sub goal assigned

agent i  ai   ri clocal
meaning a  r c  respectively  restricted
  highlight causal

cin
actions assigned agent i  remaining sets  cout
dependencies existing actions agent actions assigned agents
maintains outgoing causal links modeling services agent provides
  cout
maintains incoming causal links modeling services
agents with  whereas  cin
agent receives agents  simplify plan structure  precedence links
actions different agents allowed r  this  however  real limitation
precedence links actions different agents could expressed causal links
exchanged service refers dummy resource 
rest paper consider local plan p partially ordered set
actions  however  assume agent perform one action per time 
rest paper index actions according execution step  words 
p executed sequence hai    ai              ai i  ai  ai two pseudoactions similar ones introduced weld         action ai  preconditions
effects coincide initial state known agent i  particular  pseudo action
used determine initial set resources assigned agent i  link leaving
 

fimicalizio   torasso

ai  labeled service available resk   denotes resk assigned agent i 
action ai   hand  effects preconditions correspond sub goal
gi assigned i 
    translating propositional framework state variable
representation
although planning approaches literature relies propositional language
represent planning problems  adopt paper representation based multivalued state variables similar sas  approach introduced jonsson
backstrom         reason choice stems fact multi valued
variable implicitly encode mutual exclusion constraints among values domain 
variable assume one value given time  thus  easier represent
evolution system state time sequence assignments values state
variables  solution effectively adopted diagnosis plans  roos  
witteveen         helmert        proven  restrictive since always
possible translate propositional representation set multi valued state variables 
rest section briefly describe propositional planning language  see
e g   nebel        mapped state variables representation  three main aspects
addressed      represent agents states terms state variables rather
sets propositional fluents      represent exchange services among agents 
    model actions terms state variables 
      mapping atoms variables
point view  action models system states represented terms
finite set multi valued state variables  finite discrete domain 
given map system s ht   res  p i  associate agents resources
res set state variables  variables maps subset atoms
corresponding propositional representation 
follows current system state given values currently assigned
state variables agents resources  global view  however  inadequate
achieve fully distributed framework  thus introduce notion agent state 
captures portion system state relevant specific agent team 
agent associated set vari variables  variable v vari
finite discrete domain dom v   state sli agent given execution step l
therefore assignment values variables vari   precisely  sli  v  dom v 
value assumed variable v vari agent state sli   partial agent state li
assignment values subset variables vari  
variables vari partitioned two subsets  end env   set end includes
endogenous state variables  e g   agent position   whereas env includes variables
shared resources  partitioning global system state agent states 
state variables resources duplicated many copies agents
  therefore  resource resk res   exists private copy resik belonging
env   maintain consistency among private copies  rely two assumptions 
    map p flaw free      p satisfies resource safeness requirement  two
 

ficooperative monitoring diagnose multiagent plans

assumptions induce variables env implicit constraint  execution step
one agent knows actual state given resource resk   consequence 
private copy resik keeps correct value  agents  resource resk
sight  modeled assigning value unknown local variables resk  
namely  j    i  resjk  unknown  thus consistency among different private
copies implicitly maintained 
course  agent j acquires resource resk agent i  comes know
actual state resource  values variables env fact exchanged
among agents  section     present basic cooperative protocol enables
agents share knowledge resources preserving resource safeness
requirement  basic protocol later extended section      variables end  
hand  refer agent i  framework cannot shared
agents 
      mapping services variables assignments
since adopt representation based state variables  service exchanged
two agents conveniently modeled value assignment resource variable  instance  causal link lk   hai   available resk    aj used propositional representation
model action ai ai provides action aj aj resource resk   link
rewritten state variables representation hai   resk   available  aj i  resk
name agents j refer specific resource res   words 
resk sort meta variable known agent agent j  course 
agent maps meta variable resk private copy  precisely  means
link hai   resk   available  aj i  agent able communicate j change state
resource resk   agent j knows that  execution ai   private variable resjk
value available  meaning j use resk   worth noting available
special value  used agents exchanging resources  general  agents communicate
domain dependent values state resource  e g   position
block blocks world domain  
relying state variables representation  identify set resources
available given agent l th plan execution step availresi  l     resk
res  sli  resik     available   next subsection focus coordination protocol
allows agents j exchange information shared resources 
      mapping propositional action models function like models
let q subset state variables vari   rest paper denote  q 
space possible assignments variables q  q denote specific
assignment  q   is  specific partial state agent i  rest paper
use premises ali   effects ail   denote subset status variables vari
preconditions effects  respectively  action ail defined  thus premises ail  
represents specific assignment values space  premises ail     note set
premises includes services must provided agents 
therefore correspond incoming causal links action ail   similarly  set effects
 

fimicalizio   torasso

includes services agent provides agents with  encoded causal links
outgoing ail  
given action instance ail ai   deterministic  nominal  model ail mapping 
  premises ail   effects ail  
fanom

l

premises ail   assignment variables premises ail   var representing
preconditions ail   effects ail   assignment variables effects ail   vari
modeling effects action  assume effects ail   premises ail   
substantial limitation  however  variable v  principle would
mentioned effects action model  mentioned premises
action allowing v assume possible value domain  reason
assumption clear section     formalize notion exogenous events 
since interested execution plans  reformulate applicability
action state  see nebel        terms executability  given agent state sli  
action instance ail ai executable sli  vari   iff sli    premises ail    indeed 
strong condition relaxed next section  using terminology
roos witteveen         say action ail executable sli ail fully


enabled sli   result execution ail enabled sli new agent state sl  

 var    called successor state 


 sli   effects ail    effects ail   sli    premises ail  




sli     effects ail        

sl  
 




 
otherwise 

precisely  sli   effects ail   partial agent state obtained removing sli
variables mentioned effects ail    partial state subsequently completed
  state
new assignments effects ail    yielding new  complete  agent state sl  
transformation  however  legal when      action ail fully enabled sli  i e   sli    
sli    premises ail         action effects consistent  i e   effects ail         
otherwise  new agent state undefined 

    plan execution nominal conditions
actual execution map requires form coordination among agents 
decomposition global plan local plans  fact  allows agents execute actions fully distributed way without intervention global manager 
agents execute actions concurrently asynchronously  i e   global clock required  
addition  differently previous approaches  see e g   de jonge et al         micalizio
  torasso         actions take single time slot completed execution globally synchronized  make assumption duration
action  agent coordination therefore essential order violate precedence
causal constraints introduced planning phase  sake clarity  first
present basic coordination strategy assuming that 
  

ficooperative monitoring diagnose multiagent plans




bade p  hi   gi   ai   e   clocal
  cin
  cout
i 
   l  
   sli
   ail    ai
  
sli consume inter agent messages inbox 
  
ail executable sli
  
execute ail

  
sl  
fanom
 sli  

l

  
obsil   gather observations

  
sl  
obsil     
   
stop execution propagate failure
   
end

   
causal link lk cout
lk   hail   v   d  ajm
   
notify agent j achievement service v  
   
v res   available

   
sl  
 v  unknown
   
end
   
end
   
l l  
   
end
    end

figure    basic distributed plan execution  bade  strategy 
  action based observability  even though agents complete view
environment  agent always able observe preconditions effects
actions performs  addition  observations assumed reliable correct 
denote obsil   set observations received agent l th plus  
execution step execution l th action  observations obsil  
thought sets value assignments variables effects ail    is 
variable v effects ail    assignment v   belongs obsil     dom v  
  deterministic actions  actions never fail models precisely define
agent state changes 
  static environment  environment change consequence execution
agents actions 
three strong assumptions relaxed section    present
complex coordination strategy guarantees consistent access resources even
actions fail 
      basic coordination protocol
coordination protocol adopt simple effective  exploits causal links
models  fact  exchange service resource
p   outgoing link cout
agent   service provider   another agent j   service client  order support
communication among agents  assume agent inbox  i e   folder
messages coming agents stored  whenever executes action
  sends message outgoing link ai notifying
ail outgoing links cout
l

receiver needed service resource available  likewise  link cin
  

fimicalizio   torasso

models exchange service resource receiver another agent j
  waits
provider  whenever execute action incoming links cin
message links since action becomes executable required
services resources provided  assumptions made map p  
protocol guarantees resources always accessed consistently  fact  assumption
p satisfies resource safeness requirement  assures working sessions
resource totally serialized  particular  two working sessions wshres ii  ws hres ji
serialized means causal link hclosing wshres ii    res   available  opening ws hres ji  i 
therefore  wshres ii closes  agent notifies agent j resource res available 
    basic distributed plan execution  bade  strategy
high level plan execution strategy performed agent team outlined
figure    strategy consists loop iterates long actions
p executed  first step loop acquire new information
agents shared resources  accomplish task  agent plays role client
coordination protocol gathers notification messages  any  sent
agents  notification messages  i e   value assignments convey  asserted
within current agent state sli updates local view system status
acquires  if available  new resources  step  next action ail selected 
ail executable yet  agent keeps waiting notification messages  i e  
services resources still missing   otherwise  agent executes ail real world 

   note
exploiting nominal model fanom
estimates successor state sl  

l

actual execution ail real world may take time necessarily
known advance  
action ail completed  agent gathers observations efi  
fects action matches observations estimated successor state sl  
since assuming actions cannot fail  discrepancy observations
estimations discovered  include control line   compatibility
extension described sections      actions may fail 
execution ail   agent plays role provider coordination protocol
propagates  positive  effects action ail towards agents sending notificai  see lines       algorithm
tion message outgoing link ail cout
figure     particular  case agent released resource  v res   agent
sets private copy resource unknown  way resource becomes
unreachable mutual exclusive access guaranteed 
last remark basic strategy regards increment counter l  note
l incremented action executed  thus l correspond metric
time  pointer next action performed  adhering bade strategy 
agent conclude local plan within finite amount time 
proposition   let   ht   res  p map system p flaw free satisfies
resource safeness requirement  agents follow bade strategy figure   
p successfully completed finite amount time 
  

ficooperative monitoring diagnose multiagent plans

proof  sufficient show least one action p always execution 
step  achievement goal  contradiction  let us assume goal
reached  action progress  since assume failure
occur  situation happen agents deadlock  waiting services
one provide with  deadlock may arise either erroneous planning
phase  p flaw free initially assumed  bade coordination
strategy erroneous  let us show agents adopt bade strategy 
failure occurs  agents never wait indefinitely accessing resource  since p satisfies
assumption resource safeness requirement  must hold wshres ji   wshres ii   i e  
closing wshres ji   provides opening wshres ii    i e   ail   service res   available  agent
waits service res   available two situations      agent j performed
action closing wshres ji   yet  correct behavior       agent j already performed action
closing wshres ji    sent appropriate message i  second case contradicts hypotheses agents adopt bade coordination protocol  fact 
required protocol  whenever working session wshres ji closes  agent j send
message next agent accessing resource 
therefore  agents never deadlock  least one action always execution 
since p finite number actions  goal g must achieved within finite amount
time 

example    conclude section briefly exemplifying concepts introduced
far  particular  present office like domain used test scenario
experiments  section     domain similar ones adopted micalizio       
steinbauer wotawa         domain  robotic agents deliver parcels
desks number clerks  robot carry one two parcels depending whether
heavy light  respectively  figure   shows office like environment used
tests  includes    desks  distributed   office rooms  connected
means   doors  moreover  two repositories contain    parcels delivered
   light   heavy   parcels  repositories  doors  desks critical resources
used accessed one agent per time  domain includes three
parking areas  locations agents positioned simultaneously
critical resources   the term location used identify either parking areas
resources agent physically positioned  e g   parcels locations  
agents perform following actions  move location another  load unload
parcels within resources locations  i e   parking areas   addition 
impose one parcel positioned desk  repositories
unlimited capacity  finally  agents carry one heavy parcel two light parcels
location another 
figure   shows simple example map office domain  team involves three
agents a   a   a   whose plans given three columns  respectively 
bottom picture effects pseudoaction a  represent initial states three
agents  top picture  premises pseudoaction represent desired
final state  objective map figure deliver parcel  desk   i e  
agent unload parcel  positioned desk    bring parcel back
initial position repository repos   similarly  parcel  first delivered desk  
  

fimicalizio   torasso

figure    office like environment used experiments  five rooms r  r   two
repositories  repos  repos   eight doors  nine desks  three parking areas 

brought back repository repos   parcel   already delivered
desk   delivered desk   ease readability picture  show
inter agent causal links  use two different graphical notations distinguish
causal links giving access resources  diamond headed   causal links model
kinds services  black circle headed   instance  link actions a  
a   diamond headed  means action a   provides a   service desk    available
 i e   a     agent a  longer access desk    three dashed rectangles
picture represent working sessions associated resource desk   used
three agents different execution steps   the working sessions resources
highlighted avoid picture becoming confused  
black circle headed links used represent services  instance 
  encodes service desk  content empty 
link actions a   a    labeled  
required action a   since one parcel located desktop  link labeled
   from a   a     encodes two services  desk  content parcel  parcel  pos desk  

  refer desk  parcel  
similar services encoded link  


   extending framework
previous section described simple coordination strategy guarantees
consistent execution map p three strong assumptions hold      agent
action based observability  precisely observe preconditions effects
actions performs      environment static  no exogenous events permitted  
    actions deterministic  no deviation nominal behavior possible  
henceforth extend basic framework relaxing three assumptions and 
consequence  increasing complexity strategy controlling distributed
plan execution 
  

ficooperative monitoring diagnose multiagent plans

parcel  pos repos 
parcel  delivered desk 
a  pos p 


parcel  pos desk 
parecel  delivered desk 
a  pos p 

parcel  pos repos 
parcel  delivered desk 
a  pos p 

a   

move repos   p  

a   

a   

unload repos   parcel  

a   

a  

move repos   p  

repos 

a   

carry desk   repos  

move door   p  

a  

a  

unload repos   parcel  
repos 

 


a  

load desk   parcel  

move desk   door  

carry door   repos  

desk 

a  

a  

a  

move door   desk  

unload desk   parcel  

a  

a  

door 

move p   door  

carry door   desk  

 


a  

move p   desk  

desk 

move door   desk  

a  

unload desk   parcel  

move desk   door  

a  

a  

carry door   desk  

unload desk   parcel  

a  

a  

carry repos   door  

a  pos p 
desk  avail
desk  avail
parcel  pos desk 
parcel  delivered desk 
door  avail

load desk   parcel  

a  

load desk   parcel  
desk 

a  
a  

move desk   p  

a  

parcel 

a  

a  
carry desk   door  

carry desk   door  

 


carry repos   desk  

a  

a  

load repos   parcel  

load repos   parcel  

a  

a  

move p   repos  

move p   repos  

a  pos p 
repos  avail
parcel  pos repos 
parcel  delivered no
door  avail

a  pos p 
repos  avail
parcel  pos repos 
parcel  delivered no
desk  avail
door  avail

a 

figure    simple example map office like domain used testing 

  

fimicalizio   torasso

    partial observability
first assumption relax action based observability  basic framework 
observations obsil   agent receives  l      th step execution cover
variables effects ail    extended framework  obsil   becomes partial since
subset variables effects ail   covered general  possibly obsil even empty 
case assume observations correct  meaning actual
state agent cannot inconsistent observations received agent itself 
however  observations ambiguous sense given variable  agent
receives disjunction possible values  addition  guarantee termination
plan execution phase  assume agent observes least achievement
atoms local goal gi g 
    plan threats
second extension dynamics system  move static system
dynamic one  means that  besides changes due agents actions 
system change consequence exogenous  unpredictable events  typically represent plan threats  birnbaum  collins  freed    krulwich        nominal
execution plan  intuitively  plan threat seen abrupt change happened
environment  i e   resources   state agent 
paper associate occurrence exogenous event execution
action  words  exogenous event occur execution
action affect active variables action  namely  variables
mentioned within premises effects action  thus  exogenous event
cannot affect simultaneously two actions  indirect effects many
actions  even different agents  means shared resources 
principle  given exogenous event   one could define model predict
affect execution action  real world domains  however  always possible
precisely know advance actual impact exogenous event  one hand 
may non deterministic effects  hand  effects may
known  take account possibly non deterministic effects exogenous events 
model exogenous event relation happens defined follows 
happens  affectedby       affectedby  

   

affectedby vari    affectedby   space partial agent states defined
affectedby   worth noting  affectedby   empty affectedby
empty  too  enables us state that  exogenous event occurs  variable
affectedby must necessarily evolve unexpectedly  thus  tuple relation happens
represents non deterministic effect   namely  tuple represents possible abrupt
change agents status variables 
deal known effects exogenous event   extend domain dom v 
variable v vari special value unknown leaves open possible
evolution v 
denote x set exogenous events might occur plan
execution  note x includes pseudo event modeling absence abrupt
  

ficooperative monitoring diagnose multiagent plans

changes  special event must hold affectedby     since exogenous
event defined state transition agents state variables  affect
action ail iff
affectedby effects ail   
   
namely  affects subset variables action ail defined 
given action ail   x  ail   denotes subset exogenous events x satisfy
relation      note that  pseudo event always included x  ail    action
ail ai   since affectedby  i e   empty set  trivially satisfies relation     
    extended action models
last extension propose action models  since plan threats occur
execution actions  effects combine actions effects  estimate
system evolves time  essential extend nominal action model order
encode  single piece knowledge  nominal well anomalous evolutions
action  intuitively  extended model describe agent state sli evolves

agent carried action instance ail   when 
new agent state sl  
execution action  exogenous event x occurred  possibly  
moreover  basic framework give granted action performed
fully enabled  extended framework condition necessarily satisfied  due
partial observability  fact  agent may unable precisely determine whether
next action fully enabled not  cope situation  introduce section    
concept possibly enabled action  time being  anticipate agent
may decide perform action even action fully enabled  hence
extended action model must rich estimate state agent evolves even
situation 
  given
extended model m ail   action ail derived nominal model fanom

l

terms premises effects  set exogenous events x  ail    formally
defined as 
  x  ail     ail     ail  i 
m ail     hfanom

l

x  ail   already introduced  whereas  ail    ail   two
fanom

l

transition relations partial states  premises a    effects a   
possible predict execution action ail changes state
environment  i e   resources held i  agent itself 
relation  ail   estimates next agents states action ail fully enabled
state sli   relation results combination nominal action model
models exogenous events x  ail   
 ail    

 

happens  
 fanom

l

x  ail  

   

intuitively  fanom
happens set tuples form hpre    eff i  pre equals

l

premises ail    eff  effects ail    models abrupt changes caused event
  

fimicalizio   torasso

nominal effects action ail   formally  happening h      happens holds 


premises ail        effects ail     affectedby      




 
sli    premises ail   premises ail       
fanom
fihappens  

l


h    ihappens

otherwise 

   
important note that  since always part x  ail    nominal model hpremises ail   
  effects ail  i always included  ail    particular  state transition  variable assume value unknown  follows directly by      nominal model fanom

l

cannot mention unknown value definition      exogenous event cannot
happens
affect variable since affectedby empty  thus  operation fanom

l
reproduces nominal behavior 
addition  note x  ail   include special exogenous event     symbol
denotes indefinite exogenous event model given  hence variables
effects ail   mapped unknown  occurrence   prediction possible 
relation  ail   structure  ail   terms preconditions  effects
exogenous events  represents dual version  ail   since defined ail
executable sli   fact   ail   defined states action ail enabled 
let  premises ail    space assignments values variables premises ail   
 ail   defined space states  premises ail     premises ail      premises ail  
as 
 ail    premises ail         hunknown          unknowni 
   
  denotes indefinite exogenous event   note  ail   weaker model
 ail   since invariably assigns unknown value variable effects ail   
say  whenever action performed wrong configuration  impact
effects ail   variables becomes unpredictable  although use symbol   denote
indefinite events occurring  ail     slightly different meanings
diagnostic point view discussed detail section   
remark    relational action models propose sufficiently flexible deal
incomplete imprecise knowledge  many cases  fact  may costly  or even
impossible  determine exogenous events impact variables effects ali   
extended framework copes problem allowing three forms incompleteness 
  unknown value included domain variable allows represent that 
effect exogenous event  value variable becomes predictable 
extreme case  variables effects action set unknown
 see weak model exogenous event     
  non deterministic action evolutions defined  exogenous event may
non deterministic effects states agents 
  weak relation allows us model status agent execution
action wrong conditions 
  

ficooperative monitoring diagnose multiagent plans

remark    since actions performed even though fully enabled 
guarantee execution plan violate resource safeness
requirement  answer question coordination protocol part
cooperative weak committed monitoring  cwcm  strategy discussed section   
useful anticipate  however  coordination protocol guarantees agent
uses resource actions violate resource safeness requirement 
example    let us consider simple example office domain  assume
agent a  charge performing action carry a   parc   desk   desk   
action requires a  move current position desk  position desk 
loaded parcel parc   nominal model action expressed
state transition 
hpos   desk   cobj parc   parc pos  a     pos   desk   cobj parc   parc pos  a i 
pos cobj two endogenous variables a  representing current position
agent carried object  respectively  state shared resource parc 
encoded variable parc pos   private variable agent a  keeps maintain
position parcel parc   agents  local copy variable parc pos
unknown 
actual execution carry action affected number exogenous
events  instance  wheelsblocked prevents agent moving all  wrongstep
allows agent move  wrong direction  another event affect
carry action lostparcel   agent moving  carried object s  lost  finally 
  denotes unpredictable event occurring carry action attempted state
preconditions satisfied  alternative situations summarized
within extended model showed table    first entry table nominal
state transition  one labeled   entries     describe action
behaves known exogenous event occurs  note that  although exogenous
event one foreseen possibilities  effects may precisely known 
instance  effect wrongstep lostparcel variables assume value
unknown  first five entries table represent relation extended model 
last entry table  instead  relation allows us make weak
predictions  tuple hpos    cobj    parc  place  i shortcut represent
possible assignment preconditions satisfied  note that  practical
point view  necessary compute  potentially huge  set explicitly 
discuss appendix implementation 

    extending basic concepts
since relaxed three assumptions basic framework  review
three important concepts  state agent  executability action 
outcome action 
  

fimicalizio   torasso

end

t 
t 
t 
t 
t 
t 

env

end

env

pos

cobj

parc pos 

event

pos

cobj

parc pos 

desk 
desk 
desk 
desk 
desk 
 

parc 
parc 
parc 
parc 
parc 
 

a 
a 
a 
a 
a 
 



desk 
desk 
unknown
desk 
desk 
unknown

parc 
parc 
parc 
empty
empty
unknown

a 
a 
a 
desk 
unknown
unknown

wheelblocked
wrongstep
lostparcel
lostparcel
 

table    extended model action instance carry a   b   desk   desk  
office domain 

      agents belief states
first all  agent team must able deal form uncertainty 
since actions may evolve non deterministically since agent cannot observe
effects actions  agent must able deal belief states rather agent
states  agent state sli   agent belief state bli encodes knowledge agent
l th execution step  sli precise state assumed step
l  bli set possible agent states consistent observations received i 
rest paper use lowercase indicate agent state among others within given
belief state  use uppercase indicate actual agent state given execution
step  important note that  exactly agent state sli   belief state bli defined
state variables agent i  two states s  s  bli differ least one
variable  words  must exists least one variable v varil s   v  
value assumed v s    different s   v   course  ambiguity represents
issue understanding whether next action ail executable 
      possibly enabled actions
since agent belief state bli   notion action executability needs
revised  conservative policy would require action ail fully enabled every
state bli   due partial observability condition might satisfied 
execution map could stopped action enabled even though plan
threat occurred 
avoid situation  propose optimistic policy introduce notion
possibly enabled action 
definition   optimistic policy action ail possibly enabled bli iff bli
ail fully enabled s  namely     premises ail   
worth noting value unknown cannot used qualify action fully
enabled  value  fact  used explicitly state agent know
value variable  therefore  variable v value unknown state s  v
mentioned premises ail    ail fully enabled s 
possibly enabled action therefore sort conjecture  since action premises
satisfied least one state belief state  action assumed executable 
  

ficooperative monitoring diagnose multiagent plans

course  may case s  although possible  real state agent 
hence action performed preconditions satisfied real world 
      action outcome
basic framework given granted outcome action always
nominal  extended framework  however  actions fail  individuate three possible action outcomes  nominal ok  anomalous failed  pending intermediate
situations 
     effects ai   
definition   action ail outcome ok iff bl  
l

 estimated execution ail   
is  actions effects hold every state bl  

definition   hold exists least one state bl  
nominal
effects satisfied  previous approaches  micalizio   torasso            a  
introduced adopted strong committed policy  effects action ail
  action outcome failed  see
satisfied state belief state bl  
definition     strong committed policy based assumption that  whenever action
ail successfully completed  agent receives amount observations sufficient
detect success  thereby  success cannot detected  failure must
occurred 
policy  however  may unacceptable real world domains
guarantees system observability  consequence  agent could infer failure
even action ail completed success  observations sufficient
confirm it 
paper define failure action dual case success 
      effects ai   
definition   action ail outcome failed iff bl  
l

state expected effects ail
namely  possible find bl  
achieved 
situations neither success  definition    failure  definition
   inferred  action outcome pending 
     effects ai   s  b  
definition   action ail outcome pending iff bl  
l  
l
 

    effects al   

words  whenever agent unable determine success failure
action ail   postpones evaluation action outcome step future 
action enqueued list pactsi pending actions maintained agent i  refer
policy weak committed since agent take decisions whenever
insufficient observations sufficient support them  next section discuss
impact weak committed policy monitoring task 

   cooperative weak committed monitoring
section discuss fully distributed approach problem monitoring
execution map  consider extended framework previously discussed introduces two sources ambiguity  agent belief states  ambiguous action outcomes 
  

fimicalizio   torasso

cope forms uncertainty  propose monitoring methodology called
cooperative weak committed monitoring  cwcm   relies weak committed
policy  cwcm approach allows agent detect outcome action
time execution  idea possibly uncertain knowledge agent
environment refined time exploiting observations
agent receive future  get result  cwcm allows team members
cooperate monitoring tasks 
rest section organized follows  first formalize notion trajectoryset maintained agent  explain extended action models used
extend trajectory set one step further  discuss trajectory set
refined observations helps determining outcomes
pending actions  if any   finally  redefine cooperative protocol sketched basic
framework obtain cooperative monitoring protocol  cwcm entirely formalized
terms relational algebra operators   for short introduction used operators  see
micalizio        
    trajectory set
weak committed approach requires agent able reason past 
means agent cannot maintain last belief state  keep
trajectory set  i e   sequence belief states traces recent history agents
state 
define trajectory set generalization agent trajectory  agent trajectory
agent i  denoted tr     l   defined segment  ai            ail    local plan p  
consists ordered sequence agent states interleaved exogenous events x
 including    agent trajectory represents possible evolution status agent i 
consistent observations agent received far  formally 
definition   agent trajectory tr     l  plan segment  ai            ail   
tr     l  hs    e    s            el    sl
where 
  sk  k      l  state agent k th step obsik sk      
  eh  h      l    event x  ah   labeling state transition sh sh    
agent trajectory therefore sequence agent states  interleaved events  traces
agent behavior along given plan segment  sake discussion  consider
plan segment starting first performed action ai    practice  however  plan
segment consideration intermediate portion agents local plan 
return point section     
since state sk  k     l   complete assignment values agent state
variables vari   variables duplicated many times actions
plan segment consideration  following  denote varik copies
state variables referring k th execution step 
noticed above  however  partial system observability general sufficient
estimation unique trajectory  reason agent keeps trajectory set r     l  
  

ficooperative monitoring diagnose multiagent plans

contains possible agent trajectories tr     l  consistent observations received execution plan segment  ai            ail    
note that  given trajectory set r     l   agent belief state execution step k
    l  easily inferred projecting r     l  state variables varik  
bki   projectvari  t r     l  
k

   

thus definitions    possibly enabled actions      successfully completed actions      failed
actions      pending action   based belief states  still meaningful
require redefined 
rest paper  term trajectory frontier  or simply frontier  refers
last belief state maintained within trajectory set  instance  frontier r     l 
belief state bli   general rule  use l denote index last execution step
 and hence frontier   k used refer generic execution step     l  
    extending trajectory set
extension trajectory set corresponds predictive step basic framework
next agent state estimated  however  basic framework
step easy mapping state another  need complex procedure
extended framework  given current trajectory set r     l  extended
model m ail    estimation step defined relational terms follows 
r     l        r     l  m ail     r     l  join   ail    ail    

   

new trajectory set r     l      built contribution
relations  relations fact used estimate execution action ail changes
state system  relation applied portion bli action ail fully
enabled  whereas  relation applied states bli action ail
enabled  i e   occurrence exogenous event already assumed 
    refining trajectory set observations
basic framework assumed that  whenever action ail completed  agent
  extended framework 
receives observation obsil   new agent state sl  
agent receive observation obsik referring past execution step k  i e     k l  
next section present cooperative monitoring protocol basis
message passing among agents  section discuss observation
past handled given agent i  intuitively  consuming observation obsik means
selecting bki states consistent it  relational terms 
refined bki   selectobsi bki
k

   

result refined belief state less ambiguous original one number
states inconsistent observations pruned off 
important note unknown value consistent concrete observed
value  therefore  state bki   variable v unknown s  v mentioned
obsik   v assumes observed value obsik  v  refined bki   note allow
observed variable obsik assume value unknown 
  

fimicalizio   torasso

bla 
s l



s l  
wheelblocked
wrongstep

s l

a 
bl  

s l  
s l  

lostparcel
lostparcel
 

s l  
s l  
s l  

figure    one step trajectory set corresponding transition step l step l     

example    let us consider office domain  assume l steps 
trajectory frontier agent a  consists following belief state bla   
s l   h pos   desk   cobj   parc   parc pos   a 
s l   h pos   unknown   cobj   parc   parc pos   a 
namely  bla  consists two alternative agent states s l s l   let us assume
next l th action performed a  carry action  whose model previously
presented table    according equation      easy see s l matches
state transitions t  t  carry action model   portion model   whereas
state s l matches transition t    portion model   figure   gives idea
two relations used infer new frontier 
s l     h pos   desk   cobj   parc   parc pos    a 
s l     h pos   desk   cobj   parc   parc pos    a 
s l     h pos   unknown  cobj   parc   parc pos   a 
s l     h pos   desk   cobj   empty  parc pos   desk 
s l     h pos   desk   cobj   empty  parc pos   unknown
s l     h pos   unknown   cobj  unknown  parc pos  unknown
now  let us assume agent a  receives observation obsa 
l      hpos   desk i  
used refine new frontier  easy see obsa 
l   consistent
states except s l     pos assigned different value  states s l   s l  
consistent obsa 
l   unknown value consistent precise value 
new refined frontier therefore
s l     h pos   desk   cobj   parc   parc pos    a 
s l     h pos   desk    cobj   parc   parc pos    a 
  

ficooperative monitoring diagnose multiagent plans

s l     h pos   desk   cobj   empty  parc pos   desk 
s l     h pos   desk   cobj   empty  parc pos   unknown
s l     h pos   desk    cobj  unknown  parc pos  unknown
seems s l   s l   identical  indeed consider single
belief states  trajectories  two states differ way achieved  s l  
inferred assuming everything goes smoothly  s l   inferred assuming something
wrong occurred  i e   wrongstep    course  second hypothesis plausible
discuss next section pruned trajectory set 

example shows consuming set observations obsik reduces ambiguity
within agent belief state bki   addition  consumption messages
beneficial effect reducing ambiguity trajectory set r     l   fact  refined
belief state turn used filter trajectory set follows 
refined r     l    selectrefinedbi r     l  
k

   

refined r     l  maintains trajectories k th step
state refined bki   important result since agent take advantage
observations whenever available  even though refer past execution step 
may happen  fact  even though obsik enough determine outcome
action aik    another belief state bhi refined r     l  becomes sufficiently precise
determine outcome pending action aih    next section  exploit
characteristic determine outcomes pending actions 
    inferring propagating action outcomes
whenever current trajectory set refined observations  useful scan
pending action list pactsi   assess  action aik pactsi   whether either definition
    applies 
outcome action important piece information exploit 
well observations  refine current trajectory set  outcome action aik   either
positive negative  fact used infer outcome actions pactsi  
reach result exploit notions causal predecessors aik  predecessors aik    
causal successors aik  successors aih     first all  say action aih indirectly
provides action aik service  aik indirectly receives service aih   iff
exists sequence actions aiv            aivn that 
   aiv  coincides aih
   aivn coincides aik

 
   action aivx   x      n    exists causal link haivx   q  aivx   clocal

words  must exist chain causal links starts aih   passes
actions sequence aiv            aivn   ends aik   indirect causal dependencies pass plans agents considered definition 
example  two causal links haih   q  ajv hajv   q     aik i  cannot say aih
  

fimicalizio   torasso

indirectly provides aik service since action ajv belongs agent j  limitation  advantage otherwise agents interact heavily order compute
indirect causal relations  notion indirect dependency actions basis
locality principle allows agent consider portion local plan
monitoring diagnosis 
set predecessors  aik   therefore subset ai including actions
directly indirectly provide aik service  side  successors aik  
subset ai including actions which  directly indirectly  receive
service aik  

given action aik   denote chains to aik   subset causal links clocal
defined


actions predecessors ak    similarly  denote chains f rom ak   subset

defined actions successors aki   
causal links clocal
proposition   let aik action whose outcome ok  causal links
chains to aik   represent services satisfied 
fact  aik outcome ok  services required aik satisfied 
recursively  services required actions predecessors aik   satisfied too 
proposition    backward propagation success  let aik action whose outcome ok  let us mark satisfied causal links chains to aik    action
pactsi predecessors  aik   outgoing links marked satisfied  outcome ok 
too 
proposition   let aik action whose outcome failed  services
chains f rom aik   might missing 
fact  since aik outcome f ailed  least one expected effects missing 
hand  action aik could reached subset effects  services could
sufficient enable subsequent actions  forward propagation failure must
therefore take account results successfully achieved  let us denote miss aik  
set causal links leaving aik representing missing services 
proposition    forward propagation failure  let aik action whose outcome
failed  let us mark missing causal link cl chains f rom aik   reachable
one links miss aik   via chain missing causal links  unless cl already
marked satisfied  then  action pactsi successors aik    least one
outgoing link marked missing  outcome failed  too 
intuitively  properties     assume action performed fully
enabled produce correct results  hand  action achieves
effects must performed fully enabled  hence services
mentioned premises must provided 
  

ficooperative monitoring diagnose multiagent plans

a 

 

a 

 
   

 

a 

a 

 

 

a 

 

a 

a 

   

 

 

 
figure    portion local plan restricted causal links clocal

example    example show outcome action actually exploited
determine outcomes actions  course  agent able determine
outcome relying observations messages agents  cooperative
protocol discussed details following subsection  time being  important
observe that 
positive messages  formalized confirm messages following  received
given step processed negative message  i e   disconfirm message 
received step 
agent receiving least one negative message stop execution plan 
start diagnostic phase 

shown 
let us consider plan segment figure    links clocal
let us assume agent performs actions order a    a    a    a    a    a   
actions pending  execution a    agent discovers a 
outcome ok  outcome propagated backwards  predecessors a       a    a     thereby
links chains to a             marked satisfied  course  link   marked
satisfied nominal outcome a    enables conclude action a 
outcome ok  whereas nothing concluded action a  since links     neither
marked satisfied  missing  let us assume receives observations
service link    consequence concludes a  outcome failed 
case outcome propagated forwardly  successors a       a    a    a    a    a    a    
thereby chains f rom a                                however  links         already
marked satisfied  addition  links     reachable via chain missing
causal links link    thus  links      marked missing  agent hence
concludes actions a  a  outcome f ailed  outcome inferred
action a    remains pending  outcome inferred action a 
performed yet  outcome pending action a  inferred means diagnosis
inferences discussed section   


relying properties      determine outcome pending actions
exploiting causal dependencies existing among actions  even though
current trajectory set still ambiguous apply either definition    outcome ok 
definition    outcome failed  
  

fimicalizio   torasso

note discover action aih outcome ok  exogenous event occurred
action necessarily   thus  filter r     l  follows 
refined r     l    selecteh   r     l 

    

eh refers h th exogenous event labeling transition state sh state
sh   r     l   refinement      keep r     l  trajectories
h th exogenous event   thus keep transitions obtained
relation   prune spurious trajectories contributed relation  
hand  outcome action aih f ailed  cannot refine
trajectory set via eh since know eh cannot   already implicitly
obtained thanks refinement equation     
summing up  weak committed methodology able deal scarce observations using two essential mechanisms  first  build trajectory set maintaining
history agent state  keep list pending action outcomes  second 
take advantage observations whenever available revising knowledge
agent itself  favorable case  revision process empty set
pending actions 
    cooperative monitoring protocol
last element cwcm methodology cooperative monitoring protocol
allows agent exploit information provided others  idea agent
take advantage direct observations  observations
agents environment  particular shared resources 
cooperative protocol plays central role preserving resource safeness requirement even actions fully enabled performed 
      interaction scenarios
bade strategy  cwcm two agents  j  need interact
share causal link lk   hail   v   d  ajm v res  dom v   v  
value assignment representing change state resource requested agent
   whereas 
j  contextually lk  agent plays service provider role  with lk cout
j
agent j plays role service client  with lk cin    following first present
three interaction scenarios cwcm  shortly report messages
exchanged two agents  then  present client provider roles detail
means high level algorithms 
notify ready interaction interaction provider sure provided
client requested service  thus  provider sends message habout lk notify
v   readyi client j  answer client provider required 
notify not accomplished interaction scenario  agent sure requested
service missing  therefore sends agent j message habout lk notify v   notaccomplishedi client j  answer j foreseen 
ask if interaction case  provider unable determine whether
service v   achieved  thus asks j info sending j message
  

ficooperative monitoring diagnose multiagent plans

cooperative protocol  client inbox  r     l   ail  
   message m  h lk notify v   ready inbox s t  lk incoming link ail
  
remove inbox
  
assert v   frontier r     l 
   end
   message m  h lk ask if v   accomplished  inbox s t  lk incoming link ail

  
remove inbox
  
unable observe v
  
reply h lk no info
  
else
   
obs observe v
   
obs equals
   
reply h lk confirm v  
   
else obs equal
   
reply h lk disconfirm v  
   
end
   
end
    end
    message m habout lk notify v   not accomplishedi inbox s t  lk incoming message
ail
   
remove inbox
   
stop plan execution
    end

figure    pseudo code cooperative protocol  client behavior 
habout lk ask if v   accomplished i  client reply message three
different ways 
   habout lk confirm v   di  message confirms provider expected
service v   actually achieved 
   habout lk disconfirm v   di expected service missing 
   habout lk no infoi client unable determine whether assignment
v   holds environment not 
case receives no info message j  eventually reply either ready
message not accomplished one 
      client role
algorithm figure   outlines behavior agent behaving client 
algorithm takes inputs inbox  i e   collector messages coming agents  
current trajectory set r     l   next action performed ail  
agent consumes message inbox service required
premise execution ail   incoming message type ready  lines  
    agent uses information provided another agent observation  use
term assert  line    shortcut relational operations presented equations    
    
incoming message ask if interaction  lines        agent determines whether capable observing v  e g   equipped right sensor v   
  

fimicalizio   torasso

case cannot observe v  replies provider no info message  otherwise 
agent acquires observation v  replies provider accordingly 
finally  whenever agent receives not accomplished message  lines        
stops execution plan service required performing ail missing  
important note agent playing client consumes message
relevant next action performed  thereby  ask if message could
answered certain amount delay 
      provider role
provider behavior outlined figure    algorithm takes inputs inbox 
current trajectory set r     l   list pending actions pactsi   last performed
action ail   precisely  last argument either null  action
performed recently  actual action instance whose outcome still assessed 
refine concept recently performed action next section present
main cwcm plan execution loop 
algorithm starts checking inbox order consume answers  if any 
previous ask if interactions  algorithm specifies behavior agent according
type received message  case confirm messages  lines       agent uses
v   observation refine trajectory set  term assert used
shortcut relational operations equations          belief state
actually refined k th     is  one contains effects action aik  
case disconfirm message  lines        agent prunes k th    belief
state r     l  state v   holds  case incoming message
type no info  line         agent checks whether outgoing links action

marked ans no info  meaning none services provided
aik cout

ak agents achieved sure  case  agent marks aik
not enough info 
preliminary steps  agent possibly acquired information
others  thus  assess outcome pending actions pactsi   including ail
null  line      algorithm figure   outlines steps assessing outcomes
actions pactsi   discussed later on  sufficient say assess pendingactions returns two lists actions  ok list f ailed list  empty  contain
actions whose outcome ok f ailed  respectively  course  whenever action pactsi
found either ok f ailed  removed pactsi   added corresponding
list  process involves actions previously marked not enough info 
action ail null  an action performed recently   first time
outcome ail assessed  thus  case ail outcome pending  line      agent
starts ask if interaction  lines        asking information agents
requires one services produced ail   otherwise  ail null ail outcome
pending  ask if interaction skipped 
line    line     agent sends ready not accomplished messages
according actions ok list f ailed list  respectively  addition  agent sends
   impact action failure estimated means failure propagation mechanism  micalizio
  torasso      b   sake discussion  leave topic paper 

  

ficooperative monitoring diagnose multiagent plans

cooperative protocol  provider inbox  r     l   pactsi   ail  
   message m habout lk confirm v   di inbox
  
remove inbox
  
let lk haik   v   d  ajm
  
assert v   k th    belief state within r     l 
   end
   message m habout lk disconfirm v   di inbox
  
remove inbox
  
let lk haik   v   d  ajm
  
prune k th    belief state within r     l  state v  
    end
    message m habout lk no infoi inbox
   
remove inbox
   
let lk haik   v   d  ajm
   
mark lk ans no info
   
links outgoing aik marked ans no info
   
mark aik not enough info
   
end
    end
    hok list  f ailed listi assess pending actions pactsi   r     l  
    ail null outcome pending

   
link lk hail   v   d  ajm i  lk cout
 i    j 
   
send j message m h ask if v   accomplished i
   
end
    end
    action aik ok list
   
link lk   haik   v   d  ajm
   
send j message m habout lk notify v   readyi
   
end
    end
    action aik s t   aik f ailed list   aik pactsi marked not enough info 
   
link lk   haik   v   d  ajm
   
send j message m habout lk notify v   not accomplishedi
   
end
    end
    return hok list  f ailed listi

figure    pseudo code cooperative protocol  provider behavior 

not accomplished message pending action aik marked not enough info  pending
action marked not enough info highlights scarcely observable environment is 
fact  neither agent i  agents waiting services provided aik   capable
determine whether least one expected services provided not 
deal ambiguity  agent prudentially considers action probably failed 
although choice could seem strong  necessary preserve resource safeness
requirement scarcely observable environments  agent evidence supporting
successful achievement effects expected ail   hence cannot notify
success  time  agents might waiting services provided ail  
thus agents would stalling without even knowing it  considering ail failed allows
get impasse notifying failure agents  may attempt
form plan repair 
  

fimicalizio   torasso

assess pending actions pactsi   r     l  
   ok list   
   f ailed list   
   action aik pactsi

  
bk  
     effects aik  
  
ok list ok list  aik  
  
r     l  selectek   r     l 
  
oks propagatesuccess pactsi   aik  
  
ok list ok list oks
  
pactsi pactsi   oks

   
else bk  
      effects aik  
   
f ailed list f ailed list  aik  
   
faultypropagatefailure pactsi   aik  
   
f ailed list f ailed list faulty
   
pactsi pactsi   faulty
   
end
    end
    remove  present  mark not enough info action ok list f ailed list
    return hok list  f ailed listi

figure    pseudo code assessment pending actions 
algorithm terminates returning two lists ok list f ailed list calling
algorithm  shown figure    discussed next section 
      assessing action outcomes
presenting main cwcm algorithm  shortly present algorithm assessing
pending actions pactsi given execution step  discussed earlier  assessment
relies properties      equation       algorithm shown figure   
takes inputs list pending actions pactsi   current trajectory set r     l  
algorithm returns two lists  ok list f ailed list  actions whose outcomes either
ok f ailed  respectively 
algorithm considers actions pactsi  if any   tests whether
action outcome ok f ailed  first case  success backward propagated
 line     oks list successfully completed actions discovered means propagation  actions removed pactsi added ok list  second case 
failure forward propagated  line      faulty list faulty actions discovered means
failure propagation  actions removed pactsi added f ailed list 
algorithm terminates returning two  possibly empty  lists ok list f ailed list 
mentioned above  action aik pactsi   previously marked not enough info 
found definitive outcome  ok f ailed   may happen because  although
agents provided information effects aik   agent could
exploit outcome propagation actions preceding following aik   course  mark
not enough info removed actions ok list f ailed list 
proposition    protocol correctness   resource usage  cooperative monitoring protocol guarantees resource safeness requirement never violated
  

ficooperative monitoring diagnose multiagent plans

execution map p   words  shared resources used correctly throughout
plan execution even action failures occur 
proof  let us consider interaction scenarios  show
resources accessed consistently  namely  never happens two  or more  agents
access resource simultaneously 
given causal link lk   haik   res   available  ajm i  interaction activated agent
depends outcome action aik  
notify ready interaction equivalent interaction bade framework 
occurs aik outcome ok  case expected services achieved
sure  thus  notifies j res available  already released res 
resource passed j consistently 
ask if scenario occurs aik outcome pending  splits three cases 
   agent j  i e   client  directly observes resource available  therefore
access resource safely mutual exclusion 
   agent j directly observes resource still occupied i  case j
attempt access res  resource used single agent resource
safeness requirement violated 
   agent j unable say whether resource res available  point view
j  state res unknown  hence  since preconditions ajm
satisfied  j keeps waiting information i  case res used
one agent 
last interaction scenario occurs aik outcome f ailed  case  notifies
j resource available  j try use res preconditions ajm
satisfied 

proposition    protocol correctness   provided services  let j two agents
playing roles provider client  respectively  given causal link lk   haik   v  
d  ajm i  cooperative monitoring protocol enables two agents determine actual
value variable v least determine whether v different expected value d 
proof  proposition proved considering different interaction scenarios
protocol  notify ready interaction occurs agent conclude action
aik outcome ok   this may happen means direct observations effects
aik   means backward propagation nominal outcomes   since action aik
outcome ok  effects  including v   d  achieved  ask if interaction
occurs agent cannot determine outcome aik   hence truth value
statement v   known  case agent j charge determining whether
statement v   true false  agent j reach result means direct
observations v  possible answers j three 
j directly observes v   d  thus service provided 
j directly observes v d  thus service provided 
  

fimicalizio   torasso

e   


b a 
r a        



b a 
s 

 
 

b a 

obsa 
 
b a 


b a 



s 

 

s 

s 

 

s 

  

s 

 

s  

  

s  

s 

 

s  

  

s  

s  
  
s  

 

s 
 

s 
 

figure    trajectory set kept agent a  execution first four actions 
j unable observe v  case agent relies answers provided agents 
any  asked link  agent conclude v   true
least one received answers allows conclude nominal outcome aik  
otherwise  action assumed failed  hence service v   considered
missing 
last interaction scenario  agent directly observed  indirectly inferred means
forward failure propagation  v   false 

proposition considered sort generalization proposition  
applies possible services  services mentioning available value 
proposition important allows agents diagnose without
necessity interacting other  discuss section   
proposition    protocol complexity  number messages exchanged among
agents linear number n inter agent causal links 
proof  provider client interaction occurs agent  playing role
provider  performed action ail least one outgoing  inter agent causal link 
number messages exchanged handling inter agent causal link depends
outcome ail   ail either outcome ok f ailed  provider sends one message
client  i e   ready not accomplished  respectively   hand  ail
outcome pending  two agents exchange three messages  provider sends
ask if  client answers no info  provider either replies ready not accomplished 
thus worst scenario  number messages exchanged among agents  n 
hence o n  

example    let us assume execution first four actions  trajectoryset kept agent a  one depicted figure    trajectory set contains   belief
states none sufficiently refined determine outcome action  thus 
actions currently pending  edges state another labeled
represent nominal progress plan execution  others instead  labeled
             model occurrence exogenous event  possibly     
  

ficooperative monitoring diagnose multiagent plans

show agent take advantage pieces information provided
others  let us assume agent a  receives another agent observation obsa 
 
effects action a    instance  let us assume action a  corresponds move
action  observation obsa 
  refers position agent a  execution
a 
a    observation obs  therefore used refine belief state b a    example  s 
s  states b a  consistent observation  thanks
first refinement  see equations          able prune trajectories
pass either s  s   trajectories depicted dotted
edges  dashed edges  hand  still possible trajectories still kept
within trajectory set 
however  refinement trajectory set possible discover
refined b a  sufficiently precise determine action a  outcome ok 
fact  a s position conveyed observation obsa 
  matches expected one 
means event e    affecting a      pruning trajectory set e   
 equation        fortunate case b a  contains state s   
nominal effects action a  satisfied  too  backwards propagating success a   
first a    a  conclude three actions outcome ok 
fact  process  resulting trajectory set maintains bold  solid edges 
whereas dashed edges pruned off  resulting trajectory set  however 
allow us conclude anything a    still remains pending 

    cooperative weak committed monitoring  main algorithm
main cwcm algorithm outlined figure     agent follows algorithm execute monitor local plan p  
initial steps set agent trajectory set set pending
actions  algorithm iterates actions p far next action performed
coincides pseudo action ai   meaning p completed   remind
assume actions p providing atoms premises ai   observable effects  
beginning iteration  agent interacts agents  line    playing
client role cooperative protocol  step  agent consumes ready
not accomplished messages  if any   acquires information resources required
perform next action ail   case agent receives not accomplished message  stops
plan execution preconditions ail never satisfied  case
ask if message received  agent establishes whether able observe required
service answers accordingly  see algorithms figures      
new information acquired asserted within agent trajectory set 
agent assesses whether next action ail possibly enabled  definition     positive
case  action performed real world  line     subsequently  agent estimates
possible evolutions ail exploiting  ail    ail   extend current
trajectory set  line     completion action ail   agents direct observations
gathered obsil    line     asserted extended trajectory set  line     
case assert shortcut relational operations described equations    
     action ail temporarily put list pending actions  line     
outcome assessment fact postponed step regards current pending actions 
  

fimicalizio   torasso

cooperative weak committed monitoring p  
   l  
   r     l    the initial belief state initial state agent
   pactsi
   ail   
  
cooperative protocol  client inbox  r     l   ail  
  
last null
  
ail possibly enabled frontier r     l 
  
execute ail
  
r     l      r     l  m ail     trajectory set extension using  ail    ail  
   
obsil   gather direct observations
   
assert obsil   frontier r     l     
   
pactsi pactsi  ail  
   
last ail
   
l l  
   
end
   
hok list  f ailed listi cooperative protocol  provider inbox  r     l   pactsi   last 
   
f ailed list    aik pactsi marked not enough info
   
stop execution
   
diagnose p   pactsi   ok list  f ailed list  r     l  
   
switch safe mode
   
end
    end

figure     cooperative weak committed monitoring  high level algorithm 
activated even action executed  important note
iteration loop necessarily corresponds execution action 
seen  provider behavior cooperative protocol needs know whether
action recently performed  i e   whether action performed
current iteration   purpose use variable last  set null
beginning iteration  set action ail action actually performed
 line      whenever action performed  counter l incremented  line     
is  l th plan execution step completed 
loop proceeds agent behaving provider  line      step
includes evaluation outcomes actions pactsi list  see algorithm
figure     provider behavior returns two lists  ok list f ailed list  maintaining
actions outcome ok f ailed  respectively  course  lists could empty 
side effect  pactsi modified removing action whose outcome longer pending 
list f ailed list empty  least one action pactsi marked notenough info  agent stops plan execution  starts diagnostic process  discussed
section     switches safe mode  agent safe mode perform actions 
interacts agents trying reduce impact failure  first all  agent
safe mode answers ask if message no info  prevents sender waiting
indefinitely answer  moreover  agent safe mode releases many resources
possible sending appropriate ready messages  allows agents access
resources proceed plans  detailed discussion safe mode
scope paper  found works micalizio torasso      b 
micalizio        
  

ficooperative monitoring diagnose multiagent plans

case failure discovered  actions performed far outcome
ok  i e   pactsi gets empty   trajectory set r simplified  fact  since
past actions nominal outcome  longer required keep whole past history
since beginning plan execution  thus  safe convenient forget past
keep within trajectory set frontier  implementation used
experiments adopts strategy keeping size trajectory set manageable 
sake discussion  provide details point 
    cooperative weak committed monitoring  correctness
conclude section discussing correctness algorithm figure    
theorem    cwcm correctness  cwcm assigns action aik outcome 
  ok iff action affected exogenous events 
  f ailed iff exogenous event  possibly     affected aik  
  alternatively  cwcm marks pending action aik not enough info iff outcome
inferred relying observations agents  outcome propagation technique 
proof  part    action aik outcome ok iff aik affected exogenous events 
words  show aik reaches effects aik   iff ek   trajectory within
r     l   k      l   
   contradiction  let us assume effects aik   reached  nominal
trajectory pruned r     l   happen monitoring process
two ways   a  observations   b  outcome propagation  let us
consider case  a   let us suppose monitoring phase agent receives observations obsik   consistent effects aik    effect pruning r     l  obsik    
nominal transition ek   pruned r       l   this  however  contradiction
definition extended model m aik    nominal transitions labeled
lead nominal effects aik    thus  either obsik   inconsistent effects aik   
hence aik cannot ok  obsik   consistent effects aik   ek trajectories
within r     l  
let us consider case  b   outcome propagation  two cases  backward
propagation ok  forward propagation f ailed  backward propagation ok
possibly assigns nominal outcome actions aik pactsi   propagation  ek
equals trajectory within r   definition  forward propagation f ailed
possibly assigns nominal outcome actions aik pactsi   propagation ek trajectory r     l   two propagations cannot change
outcome action pactsi   action already assigned outcome  outcome cannot changed anymore  particular  aik outcome ok 
aih predecessors aik   discovered faulty  forward propagation f ailed cannot
prune ek   r     l   fact  discussed proposition    forward propagation
impacts causal links neither marked satisfied  missing 
along chain links starting one links miss aih    aik
assigned outcome ok  agent must received sufficient observations determine
premises aik satisfied  follows services required aik
  

fimicalizio   torasso

already marked satisfied  thus  nominal transition ek   cannot lost
effect outcome propagation 
   aik affected exogenous event  hence eh   trajectory within
r       l   aik outcome ok  i e   reaches effects aik     construction  extended
model m aik   guarantees transitions labeled leads states
expected effects hold  follows that  ek   trajectories r     l   aik must
outcome ok necessarily 
part    action aik outcome f ailed iff exogenous event  possibly     affected
execution  demonstrated following reasoning similar one part   
omit brevity 
part    action aik marked not enough info iff outcome inferred relying
observations agents  outcome propagation technique  easy see
cwcm marks aik not enough info one occasion  provider behavior 
answers gathered aik ask if interaction no info  exactly
means agent team provide information services provided
aik   hand  marking removed aik inserted either
ok list f ailed list  thus cannot happen action definite outcome
marked not enough info 

theorem   given map system   ht   res  p i  p plan hi  g  a  r  ci 
global goal g achieved iff actions outcome ok 
proof  previous theorem demonstrated action outcome ok
effects achieved  outcome cannot changed
effect refinements trajectory set  thereby  global goal g
reached  actions must reached effects  hence must outcome ok 
fact  since assume p redundant action  i e   action p contributes
g   sufficient least one action fails reaching one effect have     least
one action outcome f ailed     least one piece g achieved 
hand  actions outcome ok  g must achieved
necessarily  absurd  actions ok  g reached 
happen p flaw  produce g even nominal conditions 
initial assumptions  see section    p flaw free actually produces g 

example   used clarify proof  example shown that 
restrict b a  belief state state satisfies expected effects action
a    action a  outcome ok  time  outcome backward propagated
edges labeled lead b a    action a  last action a s
plan  effects action must observable  hypothesis  now  depending
available observations  agent a  either conclude s   actual state a 
 thereby      goal reached      trajectory set contains one trajectory
edge labeled       actions outcome ok   s  
actual agents state  hence least one action  i e   a  itself  must outcome f ailed 
corollary   global goal g achieved  agent keeps trajectory set
r     l  nominal trajectory hs      s              sl   i  s     sl      gi  
  

ficooperative monitoring diagnose multiagent plans

proof  follows two previous theorems  g reached  actions
outcome ok  theorem     hand  since aik ok iff ek  
every trajectory within r     l   theorem     follows agent keeps
trajectory set nominal trajectory 

correctness monitoring process therefore summarized following
statement  execution p affected anomalous event  cooperative
monitoring able keep trace progress achievement goal g since
nominal transition never lost  hand  execution p affected
least one anomalous event  even known advance  cooperative monitoring
able detect stop execution phase  addition  proposition   assures
nominal  well anomalous  situations resources always accessed consistently 

   plan diagnosis  local strategy
plan diagnostic inferences start soon cwcm algorithm discovered failure
least one action  i e   f ailed list empty   pending action marked notenough info  section discuss mean plan diagnosis 
inferred  propose distributed approach agent infers diagnosis
local plan autonomously  fact  thanks proposition    plan execution safe
respect use resources  agent never blame agents explain
action failures 
    inputs cwcm
previous section focused monitoring purpose cwcm methodology  important note  however  cwcm produces useful pieces information
diagnostic point view  first all  actions f ailed list could considered
plan diagnosis according definition roos witteveen         namely  subset
actions assumed faulty explain observations  however  f ailed list
take account action failures might indirect consequences
others  thus  f ailed list sufficient would isolate primary action
failures caused secondary action failures 
addition  cwcm produces trajectory set r     l   seen set
consistency based diagnoses  reiter         trajectory r     l  possible
explanation agents behavior consistent observations received agent
itself 
    event based explanations
dealing directly r     l   however  might awkward since encodes possible explanations  including ones mentioning indefinite exogenous event    
considered unlikely  moreover  trajectories share sequence
events  differ state variables  considered completely different explanations  thus  r     l  needs processed order useful  first reduction
r     l  given projecting event variables e            el    call resulting
  

fimicalizio   torasso

structure event based explanations  eve  
eve   projecte       el  r     l  

    

eve set sequences exogenous events  including      sequence
set possible consistency based diagnosis anomalous behavior agent 
since eve could still contain huge number diagnoses  eve informative
human user decide recover plan failure  one way
reducing number diagnoses would prefer diagnoses involve
minimum number exogenous events  unfortunately  preference criterion would lead
misleading results events dependent one another  find meaningful
explanations  one identify exogenous events caused primary action failures
exogenous events correspond secondary action failures 
    minimum primary action failures
facilitate identification primary action failures  distinguish indefinite
events   contributed portion action model  indefinite events   contributed portion  distinction necessary cwcm  turns
useful diagnostic purpose  intuitively    denotes occurrence exogenous
event affecting execution  possibly  enabled action    therefore unknown
abrupt change affecting nominal behavior action  hand   
indefinite event use label state transitions action performed
state satisfying preconditions  relying distinction  possible
identify primary failure means following definition 
definition   action ak pactsi f ailed list primary action failure iff exists
explanation x eve x ek      x ek          x ek   k th event
explanation x 
words  action ak considered primary failure given event based
explanation x eve iff occurrence exogenous event mentioned  ak  
assumed x  note definition   examine set pending actions pactsi  
including actions marked not enough info  addition  note set primary action
failures never empty  fact  agent starts diagnosis phase one
performed actions labeled failed  hand  agent stops
execution plan another agent fails providing service  first agent
exonerated diagnosing since none actions labeled failed 
root causes missing service located outside plan 
secondary failures caused primary failure  defined follows 
definition   let x eve possible explanation  let ak f ailed list pactsi
primary failure x  actions ah successors ak   x eh      
secondary failures caused ak according explanation x 
note that  given primary failure ak explanation x eve   actions
successors ak   necessarily secondary failures  see proposition     fact  even though
ak achieved effects  i e   outcome failed   action may reached
  

ficooperative monitoring diagnose multiagent plans

them  consequence  actions successors ak   may enabled
despite failure ak   reason  definition   require action ah
successors ak   labeled secondary failure exogenous event   assumed
explanation x  definitions primary secondary failures proposition
follows directly 
proposition    given explanation x eve   set primary action failures p rmx  
set secondary action failures sndx extracted x disjointed 
relying proposition  define primary action failure diagnoses  pads  
definition   let x eve possible event based explanation  primary action failure
explanation  pad  extracted x pair hp rmx   sndx p rmx sndx
sets primary secondary failures  respectively  extracted x 
course  since eve general contains several explanations  since primary failures
assumed independent other  possible extract minimum cardinality
primary action failure diagnoses  mpads  simply selecting explanations
minimum set primary failures 
mp ads    p rmx x eve  p rmx   minimum  

    

minimum primary action failure diagnoses  mpads  indeed mean plan
diagnosis  localize actions qualified failed order explain
anomalous observations  
    refining plan diagnosis
inferred plan diagnosis  one refine diagnoses identifying root
causes  refined explanations expressed terms exogenous events 
extracted eve set 
definition    let ah primary action failure  let eve  ah   set explanations x eve ah p rmx   refined explanation action ah
refinedexp ah    

 

x eh   

    

xeve  ah  

words  refinedexp ah   consists exogenous events might
occurred execution action ah   hence might caused failure ah  
course  since ah primary failure  secondary failures caused ah
explained occurrence one events refinedexp ah   
   note different preference criteria could adopted select explanations eve   instance  one
could prefer minimality rather minimum cardinality 

  

fimicalizio   torasso

a 

a 

a 

a 

a 

a 

a 

a 

figure     portion local plan assigned agent
example    let us consider simple local plan figure    assigned agent i 

  let us assume that 
simplify picture show local causal links clocal
execution local plan  agent detects failure action a    diagnostic
process activated order explain failure identifying  minimum  set
primary action failures  diagnostic process receives input list failed actions
f ailed list  a     list successfully completed actions ok list  a     list
pending actions pactsi    a    a    a    a    a    a     addition  diagnostic process
receives trajectory set r         simplicity show table   set
event based explanations  eve   extracted trajectory set 
table   easy see explanations  except last one  explain
failure action a  indirect effect previous failure  i e   a  secondary
failure   last explanation considers a  primary failure  unknown 
unlikely  exogenous event   must assumed 
first step diagnostic process consists inferring set mp ads diagnoses 
thus  identify primary secondary failures explanation eve  
p ad     x   x   
x   

h a    

 a    a    a   i

h a    a    

 a   i

x    h a    a    a      a   i
x   

h a    

 a    a   i

x   

h a    

 

observe interesting consequences  first all  explanations eve
collapsed within single explanation p ads  see instance explanations x  x  
advantage reduce number alternative explanations  addition 
sets primary action failures used identify  subset  minimal diagnoses 
instance  explanation  a    a    derived x  minimal diagnosis  whereas explanation
 a    a    a    extracted x  not  finally  since assume primary failures
independent other  prefer subset minimal diagnoses whose cardinality

x 
x 
x 
x 
x 
x 

a 
 
 





a 




 


a 
 
 

 



a 







a 
 
 





a 


 
 



a 


 
 
 


a 
 
 
 
 
 
 

table    set eve maintained within current trajectory set
  

ficooperative monitoring diagnose multiagent plans

minimal  example mp ads     a      a      a      fact  thus sufficient
assume failure one actions explain observations 
step  action mp ads  one infer refined diagnosis 
instance  easy see primary action failure a  two alternative refined
diagnoses  either      see table     whereas primary action failure a   
single possible refined diagnosis  finally  one assume occurrence   explain
primary action failure a    relying refined diagnoses  preference criteria could
employed conclude primary failure a  less likely a  a   
hence could disregarded 

note that  since agent able diagnose plan autonomously  plan
diagnosis global level could inferred combining local solutions inferred
agent team  integration guaranteed globally consistent  fact 
thanks proposition   agent never blame another agent failure one
actions 

   experimental analysis
far addressed cwcm methodology diagnostic inferences
declarative manner means relations relational operators relations 
relations simple  yet powerful formalism represent nondeterministic action models
ambiguous belief states  addition  used model complex
structures trajectory set event based explanations  eve   
comes actually implementing cwcm methodology  however  must
noticed computational complexity algorithm figure    dominated
complexity  macro  operator involved extension current trajectoryset  hand  diagnostic inferences based projection current
trajectory set event variables  see equation      steps might computationally expensive  efficient implementation relations relational
operators therefore becomes essential  possible way cope issue translate
relations symbolic  hence compact  formalism  encode relational operators operations selected symbolic formalism  alternatively  may
possible exploit recent advancements continuous query languages  cqls  deal
data streams  see e g   stream system arasu  babu    widom         implement cwcm relying primitives made available data stream management
system hand 
paper  chosen method knowledge compilation  particular 
selected ordered binary decision diagram  obdd   bryant              formalism encode relation relational operators  choice justified two main
reasons  first  obdds nowadays well known language made available many
mature libraries  second  theoretical results darwiche marquis        suggest
obdds answer queries polynomial time provided sizes remain
tractable  in depth description cooperative monitoring diagnosis
implemented via obdds reported appendix 
rest section organized follows  first  section      sketch
software architecture implementation  section      present experimen  

fimicalizio   torasso

domain

initial
state

p

xml

xml

xml

dispatcher

a 

p a 

ra 

outcome assessment

cw cm

ran

outcome assessment

   

cw cm

diagnosis

extend trj



p

r a 

diagnosis

extend trj

detected failure

r

detected failure

cooperative protocol messages

observations
observations a 

ans next action

simulator

a s next action

domain  initial state

xml

exogenous events

figure     software architecture cwcm implementation used tests 

tal setting used carry tests  consisting simulated execution several
maps  finally  discuss interesting results monitoring  section      
diagnosis  section      

    software architecture implementation
cwcm proposal implemented java sdk   program  software
architecture shown figure     highlighting main actors  dispatcher  n
agents team  from agent a  agent an   simulator  picture shows
internal architecture agents  solid edges modules represent data flows 
dashed edges represents instead control flows  whereas dotted edge cw cm
abstracts messages exchanged agents cooperative monitoring 
simulation map p starts submitting dispatcher module three xml files
containing  respectively  system domain  i e   agents objects defined
scenario hand   system initial state  e g   initial positions agents  initial
states resources  etc    map p performed  dispatcher decomposes
p local plans agent receive portion p interest 
particular  p decomposed  dispatcher activates agents 
implemented threads  passing initial states local plans 
  

ficooperative monitoring diagnose multiagent plans

obdds made available javabdd library     provides java  easyto use interface java buddy     popular mature library manipulating
obdds written c 
besides agents  dispatcher activates simulator  implemented thread 
differently agents  however  simulator receives input plan 
initial state system  addition  simulator reads fourth xml file
exogenous events injected plan execution  precisely 
file list agents actions  associated anomalous event
must occur execution action  course  subset actions
affected exogenous events mentioned file 
environment set up  dispatcher starts agents 
execute cwcm algorithm discussed section    actual execution action
simulated simulator  whenever agent intends perform action 
sends message simulator conveying action performed  simulator
simulate action execution taking account possible exogenous events
injected  action associated observations  simulator sends
corresponding agent appropriate message  worth noting simulator 
agent  uses obdds estimate next state whole system according
actions currently progress  differently agents  however 
simulator always knows precise state agent resource system 
details use obdds handling relations given appendix a 
discussed section    whenever failure action detected agent i 
diagnosis module agent activated  results diagnosis inferences 
discussed section   saved report file ri associated agent i 
experiments described following performed pc  intel core   duo 
     ghz    gb ram equipped windows   os  test repeated ten times 
average values considered experimental analysis order absorb load
fluctuations cpu 
    experimental setting
domain used tests already introduced example    actions
agent perform summarized table       reporting details
encoding action models obdds  precisely    variables number state
variables obdd defined  number includes one variable encoding
possibly anomalous event occurring action execution  remaining variables
used encode agent state transition step t  action starts  step t   
action ends  columns   nodes   trans  report  respectively  number
nodes obdd encoding portion action model  number state
transitions encoded   columns  m nodes  m trans  refer whole extended
model m  including portion  domain  agent handles    variables
encode belief state environment 
   http   javabdd sourceforge net index html
   http   sourceforge net projects buddy 
   examples test cases action models found
http   www di unito it micalizi cwcm index html 

  

fimicalizio   torasso

move
carry
load
unload

  variables
  
  
  
  

  nodes
   
   
   
   

  trans 
  
  
  
  

 m nodes
   
   
   
   

 m trans 
   
    
   
   

table    details relational action models 
    objectives experimental analysis
least three main questions want get answered means
experiments  questions are 
cwcm scale well number agents team grows 
cwcm affected level system observability  extent 
cooperation among agents really useful monitoring purpose 
answer questions  carried tests varying three main characteristics 
team size  observability level  monitoring strategy 
      team size
assess scalability cwcm  generated maps teams     agents 
thus    scenarios  them  synthesized    maps  main
characteristics maps reported table    note maps trivial
consist significant number actions subgoals achieved  term mapspan refers number execution steps required complete plan
nominal conditions full observability  concurrency rate  computed number
actions divided map span  indicates agents perform actions concurrently 
finally  number inter agent causal links shows often agents interact
achieve subgoals 
      observability level
assess competence cwcm  maps performed different conditions
observability  particular  considered three degrees domain observability 
following  term full denotes complete observability effects actions
performed agents  level observability unrealistic practice 
represents benchmark compare performance cwcm observability
conditions  term high denotes degree observability guarantees observe
effects     maps actions  randomly selected  finally  term low denotes
degree observability     maps actions  randomly selected 
      monitoring strategies
finally  assess actual benefits achieved cooperation among agents
monitoring phase  considered three alternative monitoring strategies 
bade  already presented section    simplest strategy  based strong
committed policy 
  

ficooperative monitoring diagnose multiagent plans

scenario

 agents

 actions

 subgoals

map span

concurrency
rate

scn 

 

scn 

 

scn 

 

scn 

 

scn 

 

scn 

 

     

     

     

     

     

    

     

     

     

    

    

    

     

     

     

    

    

    

      

     

     

     

    

    

      

     

     

     

     

    

      

     

     

    

    

    

   
   
   
   
   
   

 causal

 inter agent

links

links

      

    

     

    

      

    

     

    

      

    

     

   

      

  

     

    

      

    

     

    

      

     

    

    

table    characteristics maps six scenarios nominal conditions  average
values confidence intervals  

wcm  weak committed monitoring  introduced micalizio torasso       
      based weak committed policy allows agents keep trajectorysets cope scarce observability  wcm  agent able keep pending
actions far actions provide services agents  differently
cwcm  wcm agents cannot cooperate other  therefore 
outcome action cannot precisely determined  provides another agent
j  i e      j  service  assumed failed i  stops execution
plan 
cwcm  discussed section    extends weak committed policy active
cooperation among agents 
      exogenous events
although exogenous events generated randomly  generation reflects
 expected  probability given exogenous event occur  instance  completely unexpected event  encoded     unlikely occur  hence frequency
experiments pretty low  table   shows probability distribution used generate
exogenous events randomly 
    experimental analysis  monitoring
experimental analysis monitoring task subdivided two main parts 
first one  assess three strategies bade  wcm  cwcm  nominal
conditions  is  exogenous event occurs simulated execution
maps  goal study impact observability degree competence
  

fimicalizio   torasso

exogenous event
blocked wheel
wrong move
lose parcel
slip parcel
blocked arm
 

probability
    
    
    
    
    
  

table    exogenous events frequencies experiments 
high observability

wcm

cwcm

  achieved subgoals

  performed actions

high observability
bade
   
  
  
  
  
 
 

 

 

 

 

 

bade

wcm

  
  
  
  
 
 

 

  agent

   
  
  
  
  
 
 

 

 

 

 

 

 

 

 

low observability
bade

cwcm

  achieved subgoals

  performed actions

wcm

 

  agents

low observability
bade

cwcm

   

 

 

wcm

cwcm

   
  
  
  
  
 
 

 

 

 

  agents

  agents

figure      nominal conditions  competence 
achieved goals 

percentage performed actions

three strategies  second part  assess competence three
strategies exogenous events occur 
      nominal conditions
competence  competence estimated percentage actions performed
subgoals actually achieved agents  since condition full observability
agents perform      actions achieve      subgoals
three strategies  figure    report results high low conditions 
expected  bade sensitive observability degree  hand  since
wcm cwcm keep trajectory sets  tolerant partial observability 
generally behave much better bade  cwcm better wcm
cooperation agents allows compensate lack direct observations
messages coming others  discussed section      however  may possible
even agents unable provide useful pieces information  thus 
cwcm strategy  agent decides stop execution plan when 
even asking agents observations  possible determine outcome
action  explained section      case agent stops execution
plan marking actions not enough info  reason percentage
performed actions achieved goals      observability levels high
  

ficooperative monitoring diagnose multiagent plans

full observability
wcm

low observability

high observability
bade

cwcm

wcm

cwcm

bade

   

   

   

   

   

   

   

   

   

msec

   

msec

msec

bade

   

   

   

  

  

  

 

 

 

 

 

  agents

 

 

cwcm

   

   

 

wcm

 
 

 

 

 

  agents

 

 

 

 

 

 

 

 

  agents

figure      nominal conditions  monitoring time  average     confidence interval 
single execution step 

low  results obtained cwcm case remarkable  worst case  scn  
least     actions performed     subgoals achieved despite
    actions observable 
computational time  figure    shows average time  and     confidence interval  monitoring single step execution  note bade strategy monitoring consists estimating next belief state  whereas  wcm cwcm
extend trajectory sets  addition  cwcm cooperate agents 
cooperation introduce costs consumption message another
agent corresponds operation obdd encoding current trajectory set  first
positive result emerging figure    that  even worst scenario  cwcm takes
    milliseconds monitoring execution action  allows us
conclude cwcm could employed effectively real world domains agents
actions performed order seconds 
addition  easy see computational time strongly depends observability level  example  full observability  cwcm wcm behave similarly 
case  fact  cwcm agents need cooperate other  hence
two strategies almost same  however  observability decreases  cwcm
slightly expensive wcm bade  higher cost counterbalanced
competence cwcm  that  already noticed  outperforms competence
bade wcm 
charts figure    apparent strict dependency
number agents team computational time three strategies 
this  fact  consequence distributed approach agent maintains
point view environment  cooperation agents
based exchange messages belief states 
obdd dimensions  relation time observability becomes clear
consider sizes obdds encoding trajectory sets  see figure     left 
brevity report average sizes obdds maintained three strategies
high low observability conditions    easy see exists relation
computational time shown figure    sizes obdds figure
   full observability case  obdd sizes cwcm well      nodes  average 
addition  cwcm wcm generate obdds similar sizes  expected 

  

fimicalizio   torasso

high observability

high observability
bade

wcm

cwcm

wcm

high observability
wcm

cwcm

cwcm

     

     
    
    
 
 

 

 

 

 

  
  
  
  
  
  
  
  
 

length trajectory

  trajectories

  obdd nodes

     

 

 

 

 

low observability
wcm

 

    
    
    
    
    

 

 

 

 

  agents

  agents

bade

 

     

low observability

cwcm

wcm

 

 

 

 

 

 agents
low observability
wcm

cwcm

cwcm

     

     
    
    
 
 

 

 

 

  agents

 

 

  
  
  
  
  
  
  
  
 

length trajectory

  trajectories

  obdd nodes

     

 

 

 

 

  agents

 

 

     
    
    
    
    
    
 

 

 

 

 agents

figure      nominal conditions  left  sizes obdds number nodes  average
    confidence interval   center  average number trajectories within
trajectory set  right  average length one trajectory 

    left  bigger obdds higher computational time  already
noted  although obdds may get large  computational time still acceptable 
 the biggest obdd observed        nodes  built cwcm
scn  low observability  
obviously  level observability strong impact dimensions obdds  fact  reduced level observability makes trajectory sets ambiguous 
hence trajectories encoded within single obdd  made explicit figure     center  show number trajectories encoded  average 
within trajectory set time instant  length  figure     right   course 
two last charts  consider wcm cwcm since bade strategy
build trajectory sets  moreover  note actual implementation cwcm 
extension trajectory set cover whole plan performed far 
current subset pending actions 
cwcm communication analysis  conclude study nominal conditions
analysis communication required cwcm methodology  figure   
shows average number messages exchanged among agents  first interesting
result that  full conditions  number exchanged messages coincides
number inter agent causal links  fact  since results taken nominal
conditions  action reaches nominal effects  therefore  cooperative protocol handles inter agent causal link means simple ready message sent provider
client  answer required  observability level high  however 
number messages tends increase  even though increase significantly except
scenario scn   expected  largest number messages exchanged
observation low  expected 
  

ficooperative monitoring diagnose multiagent plans

cwcm messages nominal conditions
full

high

low

  

  messages

  
  
  
  
  
  
 
 

 

 

 

 

 

  agents

figure     number messages exchanged cwcm agents nominal conditions 
high observability

cwcm

bade

   
  
  
  
  
 
 

 

 

 

 

  
  
  
 
 

 

  
  
 
 

 

 

  agents

  achieved subgoals

  achieved subgoals

  

 

 

 

 

wcm

  
  
  
 
 

 

bade

  
  
  
 
 

 

  agents

 

 

 

 

 

low observability

cwcm

  

 

 

  agents

   

 

cwcm

  

high observability
bade

cwcm

  

 

 

wcm

   

  agents

   

 

bade

  

full observability
wcm

low observability

cwcm

   

  agents

bade

wcm

 

 

  achieved subgoals

 

  performed actions

  performed actions

wcm

  performed actions

full observability
bade

wcm

cwcm

   
  
  
  
  
 
 

 

 

 

  agents

figure      faulty conditions  competence  percentages performed actions achieved
goals 
      faulty conditions
competence  let us consider test set before  randomly inject
single exogenous event map  goal assess well three strategies
behave partial observability exogenous events combine together  figure    shows
competence three strategies faulty setting three observability
levels  environment fully observable  three strategies behave exactly
same  expected  course  percentages performed actions achieved goals
depend early  late  exogenous event occurs map  general 
say least     actions performed despite injected exogenous event 
similar consideration made percentage achieved goals 
observability conditions degrade high low  however  easy
see cwcm outperforms two strategies  means cwcm actually
tolerant strategies partial observability even faulty scenario 
  

fimicalizio   torasso

full observability
wcm

bade

cwcm

wcm

low observability

cwcm

bade

   

   

   

   

   

   

   

   

   
   

   
   

  

  

 

 

 

 

 

 

 

msec

   

msec

msec

bade

high observability

 

wcm

cwcm

   
   
  
 

 

 

  agents

 

 

 

 

 

 

  agents

 

 

 

 

  agents

figure      faulty conditions  monitoring time  average     confidence interval 
single execution step 
high observability

high obervability

cwcm

wcm

     
     
    
    
    
    

  
  
  
  
  
 

 
 

 

 

 

 

 

 

 

 

wcm

 

 

wcm

cwcm

     

  trajectories

     
     
    
    
    
    
 

 

  agents

 
 
 
 
 

 

 

 

 

wcm

  
  
  
  
  
 

 

 

 

  agents

 

 

 

 

 

low observability

cwcm

 

 
 

 

  agents

  

 

  

low observability

low observability
bade

 

cwcm

  

  agents

  agents

  obdd nodes

wcm

  

  trajectories

  obdd nodes

     

high observability

cwcm

length trajectory

wcm

 

 

length trajectory

bade

cwcm

  
  
 
 
 
 
 
 

 

 

 

  agents

figure      faulty conditions  average sizes obdds encoding trajectory set  left  
average number trajectories within trajectory set  center   average length
trajectory set  right  
particular  since difference cwcm wcm cooperative monitoring  conclude cooperation among agents actually beneficial 
computational time  figure    reports computational cost  milliseconds 
three strategies faulty conditions three levels system observability 
important note case computational time strongly depends
observability level  whereas depend number agents team 
presence exogenous event  fact  time monitoring map affected
exogenous event order magnitude monitoring map
nominal conditions  differences observed comparing charts figure
   charts figure    due fact execution map affected
fault terminates earlier map executed nominal conditions  independently
level observability 
course  bade strategy cheapest three  unable monitor
effectively execution map  fact  strong committed policy basis
  

ficooperative monitoring diagnose multiagent plans

cwcm messages faulty conditions
full

high

low

  

  messages

  
  
  
  
  
 
 

 

 

 

 

 

 agents

figure     number messages exchanged cwcm agents faulty conditions 
strategy sensitive level observability  high low conditions
performs poorly 
obdd dimensions  let us consider dimensions obdds maintained
three strategies  left hand side figure     report sizes  number
nodes  obdds representing current belief state  bade strategy   current
trajectory set  wcm cwcm strategies  three conditions observability 
expected  bade keeps smallest obdds since maintains last belief state 
makes bade strategy unable deal low observability levels  wcm
cwcm behave similarly full observability conditions  cwcm tends
maintain bigger obdds observability level decreases  result explained
fact cwcm build longer trajectory sets wcm  figure     right  
longer trajectory sets tend ambiguous demonstrated average
number trajectories within trajectory set  figure     right  
cwcm communication analysis  figure    shows number messages exchanged
cwcm agents faulty conditions  trend similar nominal conditions  however  number messages slightly lower  happens occurrence failure prevents agents performing actions  consequence
messages exchanged  reason slightly less messages scn  scn   fact  number inter agent causal links two
scenarios almost same  faults scn  stronger impact scn  
evident looking number performed actions scn  scn   see figure     
    experimental analysis  diagnosis
competence  competence diagnostic inferences evaluated percentage
cases action affected injected exogenous event included
within set preferred explanations mp ads  figure     left hand side  shows
diagnostic inferences behave three levels observability  obviously  full
observability  diagnostic inferences always identify correct primary action failure 
high low observability  however  impaired agent stop plan execution due lack observations  i e   not enough info   cases diagnosis cannot
identify primary failure  figure     right hand side  shows average distance
 i e   number actions   action affected exogenous event  action
  

fimicalizio   torasso

full

high

low

full

high

low

 

  

 actions

  diagnosed cases

   

  
  

 
 
 

  
 

 
 

 

 

 

 

 

 

 

 

 agents

 

 

 

 agents

figure      diagnosis  competence  left   responsiveness  right  


xplanations

eve  inferred explanations
full

high

low

full

  explanantions

  explanations

  
  
  
  
  
 
 

 

 

 

 

 

low

 
 
 
 
 
 

  agents

high

 

 

 

 

 

 

  agents

figure      diagnosis  eve explanations  left   mpads explanations  right  
failure actually detected  full observability  diagnosis highly
responsive detects action failure soon exogenous event occurs  i e  
distance zero   hand  observability partial  cwcm agent
take longer detect failure 
explanations preferred explanations  section    pointed that 
given trajectory set  one identify two types explanations  eve mp ads 
set eve represents explanations consistent observations received
agent  whereas mp ads set primary action failures inferred eve   figure    shows cardinalities  on average  two sets inferred six scenarios
different levels observability  two charts figure    draw two conclusions  first  cardinality eve strongly depends observability level  namely 
reduction observability level causes increment number possible explanations  however  cardinality mp ads almost independent observability
level  fact  number preferred explanations inferred low observability similar number preferred explanations inferred full observability six
scenarios  course  mp ads sets computed low observability tend slightly
bigger mp ads sets computed full observability  consequence
fact initial eve set ambiguous low observability 
means that  regardless initial ambiguity eve sets  preferred explanations
reduced almost subsets six scenarios 
second important conclusion mp ads explanations substantially
useful identifying fault eve explanations  fact  average cardinality
mp ads sets three worst cases low observability  whereas  average
  

ficooperative monitoring diagnose multiagent plans

diagnosis  computational time
full

high

low

    

msec

   
   
   
   
 
 

 

 

 

 

 

  agents

figure     diagnosis  computational time 

number eve explanations best case full observability eight 
rises    worst case low observability  see scn    means
mp ads explanations may actually help human user refine her his hypotheses
current situation system  essential consider diagnosis
first step recovery  micalizio         thus  human user  possibly automatic
supervisor  consider small number alternative explanations  hence better
focus plan recovery process fault s  believed plausible 
computational effort  finally  consider computational time required infer
diagnoses  inferring eve explanations  computational cost mainly due
cost removing non relevant variables trajectory set provided cwcm  see
appendix discussion theoretical point view cost variable
removal   figure    reports average computational time  milliseconds  extracting
eve explanations six scenarios three different levels observability 
noticed previous section  low observability  trajectory set tends
bigger two observability levels  consequence time
inferring diagnoses low conditions tends higher  however  time
  second even worst case  side  high observability conditions 
worst time     milliseconds  see scenario scn    worst time falls
   milliseconds consider full observability level  computational times
allow us conclude diagnostic task  monitoring one  performed
on line number applicative domains actions performed order
seconds  even minutes 
    discussion
beginning experimental analysis posed three questions 
position answering them  first all  experimental results show cwcm
sensitive number agents team  consequence partitioning
global plan local plans  way  fact  agent keeps point
view states shared resources  namely  agent local belief state
depend number agents team  seen  consistency
among local beliefs guaranteed exchange messages whose number
linear number inter agent causal links map consideration 
  

fimicalizio   torasso

hand  level observability system strong impact
computational effort cwcm ambiguity trajectory sets computed 
lower observability  higher computational cost bigger
trajectory sets  important result emerges analysis worst case
scenarios depicted appendix rare  never occurred experiments  indeed  compact encoding trajectory sets action models obtained via
obdds facilitates efficient implementation cwcm takes  average 
hundreds milliseconds monitor single action  allows us conclude cwcm
successfully employed on line monitoring many real world domains 
level observability impact diagnostic inferences  fact 
number eve explanations significantly grows observability level decreases 
however  number preferred mp ads explanations strongly influenced
observability level 
finally  direct comparison cwcm wcm demonstrates cooperation among agents essential tolerant scarce observations 
cooperation  fact  means agent cwcm keep longer
trajectory sets wcm  longer trajectory sets give agent chances
collect pieces information successful completion pending actions 

   related works
consider four main families model based approaches diagnosis dynamic
systems close maps 
discrete event systems  dess  
relation oriented 
team oriented 
resource oriented 
rest section briefly review main approaches within families 
highlighting differences similarities cwcm methodology proposed here 
    discrete event systems
since seminal work sampath  sengupta  lafortune  sinnamohideen  teneketzis
       diagnoser  huge number works addressed diagnosis dynamic
systems modeling systems dess  diagnoser approach compiles
diagnostic model  i e   diagnoser itself  whole system off line  approaches
 see e g   lamperti   zanella        cordier   grastien        compute possible system
behaviors  check behaviors correct  grastien  haslum  thiebaux
       extends dess conflict based approach initially proposed reiter       
static systems 
best knowledge  des framework gets closer one
presented grastien  anbulagan  rintanen  kelareva         framework 
diagnosis label either normal faulty  associated system trajectory 
trajectory sequence system states interleaved events  thus similar
  

ficooperative monitoring diagnose multiagent plans

trajectories kept within trajectory sets  trajectory normal contain
fault events  trajectory faulty  otherwise 
grastien et al  propose reduce diagnosis problem sat one  idea formulate sat problem  order answer question observed behavior compatible
faults occurring   course  answer yes      system
assumed nominal exists least one normal path consistent observations 
principle  proposed system description could encode map  execution actions
could modeled subset observable events  whereas exogenous events could
mapped unobservable events directly  however  des framework cannot directly
applied domains cwcm deal with  first all  des approach
next state whole system inferred taking account synchronous occurrence
set events  thus  agents event generators  follows perform
actions synchronously  cwcm restriction imposed  moreover  satbased methodology centralized trajectories whole system states  whereas
cwcm enables agent build local trajectory sets distributed way 
    relation oriented approaches
relation oriented approaches proposed micalizio torasso              
define works relation oriented since action models expressed terms relations
agents state variables  advantage kind model possibility
representing single piece knowledge nominal abnormal evolutions
action  cwcm methodology falls within category  extends previous
works two ways  first all  cwcm able deal completely unexpected events 
denoted     model exists  indeed  occurrence   execution
action maps variables effects a  unknown value  meaning
variables longer predictable 
second important extension protocol allows agents cooperate
monitoring task  experimental results demonstrated 
cooperation among agents essential cope scarce observations  means
cooperation  fact  agent acquire new pieces information would
acquire directly  pieces therefore used refine trajectory set 
possibly outcome pending actions could determined 
    teamwork oriented approaches
rather diagnosing action failures  cwcm  teamwork oriented approaches
focused diagnosing teamwork failures  i e   coordination failures  type failures
necessarily due erroneous actions  wrong decisions taken agents 
detection teamwork failures addressed seminal works tambe
       kaminka tambe         kalech kaminka        later focused
diagnosis coordination failures  introduced notion social
diagnosis  specifically  team cooperating agents represented abstract
terms means hierarchy behaviors  behavior abstraction concrete
actions agent actually takes real world  indeed  behaviors abstract
single actions  possibly sequences actions  thus  differently relational 
  

fimicalizio   torasso

resource oriented approaches  see later   explicit model agents plans missing
teamwork oriented solutions 
social diagnosis framework assumes agents synchronize jointly
select team behavior  disagreement arises least two agents select two behaviors
incompatible other  disagreements represent instances social
diagnosis problems  course  agents select behaviors according beliefs 
thus social diagnosis disagreement set conflicting belief states held subset
agents  kalech kaminka                    propose different methods inferring
social diagnosis  solutions  however  rely assumptions may limit
applicability real world scenarios  first all  assumed agents team
share hierarchy behaviors belief states agents homogeneous
 i e   defined set propositional atoms   moreover  agents must willing
exchange beliefs  cwcm methodology propose  however 
suffer limitations  cwcm  fact  makes assumption
agents internal beliefs  addition  communication among agents exchange
agents internal beliefs  observations shared resources agents directly gather 
guarantees agents high degree privacy 
    resource oriented approaches
approaches within resource oriented family mainly proposed roos
witteveen  call approaches resource oriented because  point view 
system diagnosed plan  state system given states
system resources  execution action change state s  one
resource s   approaches deserve particular attention similarities
cwcm methodology  number relevant differences 
witteveen  roos  van der krogt  de weerdt        present basic framework
use extend subsequent works  framework  actions modeled
atomic plan steps  precisely  action models functions deterministically map
resource states input resource states output  models therefore represent
changes normally caused actions successfully performed 
faulty behavior actions  conversely  modeled via weak abnormal function 
maps state resource input unknown value  means that 
action fails  states resources handled action become unpredictable 
diagnostic problem arises observations received execution step
inconsistent nominal predictions made action models  means
least one actions performed far behaved abnormally  witteveen et al 
       introduce notion plan diagnosis subset plan actions that  qualified
abnormal  make observations consistent predictions made assuming
actions nominal 
course  since may exist many possible plan diagnoses  important look
diagnoses preferable others  roos witteveen        propose different preference criterion based predictive power plan diagnosis has 
therefore introduce notion maximally informative plan diagnosis  maxi diagnosis 
set plan diagnoses predict correctly biggest subset observations  no  

ficooperative monitoring diagnose multiagent plans

tion diagnosis subsequently refined notion minimal maximally informative
plan diagnosis  mini maxi diagnosis   subset maxi diagnosis
number failed actions assumed minimal 
work de jonge et al          basic framework extended  agents
seen resources  action models includes variables agents equipment
environment events  i e   exogenous events   extension allows distinction
primary secondary diagnoses  primary diagnosis plan diagnosis  i e  
expressed terms failed actions   secondary diagnosis thought second
level diagnosis tries explain given action failure occurred 
cwcm tries resolve problem one addressed roos witteveen
        diagnosing execution map  however  action models significantly different two approaches  roos witteveens point view  action models
deterministic functions nominal behavior only  whereas cwcm  model actions
relations easily accommodate nominal faulty evolutions  particular 
faulty evolutions nondeterministic  partially specified support
unknown value indicate expectations possible given variable 
another important difference two approaches execution
actions  roos witteveen assume actions take one time instant performed
action execution proceeds synchronously agents  cwcm
realistic since action execution asynchronous  even though actions modeled
terms preconditions effects  actual duration necessarily one time instant 
seen  fact  agents cooperate exploiting causal
precedence links explicitly defined within plan model  plan model adopted
roos witteveen  instead  mentions explicitly precedence links only 
include causal links 
process diagnosis inferred presents substantial differences 
witteveen et al         de jonge et al         present centralized method carry
diagnostic inferences  distributed procedure qualifying actions abnormal proposed
roos witteveen         case detection diagnostic problem
made centralized way  moreover  methodology proposed roos witteveen
sort strong committed approach  sense whenever observations 
system infer diagnosis  hand  cwcm methodology fully
distributed detection diagnostic problem  i e   monitoring  
solution  addition  cwcm inherently weak committed  observations necessarily
trigger diagnostic process  diagnosis inferences start interpretation
observations either lead     determining action failure      determining
service produced favor another agents action actually missing  cwcm achieves
second point exploiting direct observations gathered agent  messages
coming agents  means observations sufficient either
reach condition          diagnosis inferred 
said above  de jonge et al         introduce distinction primary
secondary diagnosis  distinction found methodology  primary
diagnosis de jonge et al  corresponds minimum primary action failures  mpads  
identify actions assumed faulty order make plan execution
consistent observations  secondary diagnosis  hand  corresponds
  

fimicalizio   torasso

refined explanations  refinedexp   associate action mpads
set exogenous events that  consistently observations  might occurred
hence caused action failure 
paper assess impact primary action failure mp ads
inferring set secondary action failures  namely  subset actions fail
indirect consequence failure a  although identification secondary failures
would possible  de jonge et al  take account problem 
conclusion  cwcm framework considered extension frameworks de jonge et al         roos witteveen         fact  action models
proposed roos witteveen reproduced within framework including
relation based model two entries  one deterministic nominal evolution
action  one abnormal behavior agent variables become unknown consequence unpredictable event  action models could used
cwcm usual infer plan diagnosis fully distributed way 

   conclusion
plan diagnosis essential step implement robust multiagent planning systems 
shown works  mi   scacchi        gupta et al         micalizio         fact 
explanations provided plan diagnosis steer repair procedure make repair
process effective 
paper addressed problem plan diagnosis splitting two
subproblems  detection action failures  actual explanation detected
action failures terms exogenous events might occurred  detection action failures achieved means cooperative weak committed monitoring  cwcm 
strategy  allows agents cooperate monitoring task  cooperation among agents plays central role detection action failures 
explanations  cwcm methodology  fact  allows agent build
structure  i e   trajectory set   internal representation world
point view agent itself  relying structure  agent infer explanations
action failures without need interacting agents 
proposed framework diagnosis maps extends previous approaches
literature  first all  cwcm fully distributed asynchronous  previous approaches
 see e g   kalech   kaminka        roos   witteveen        micalizio   torasso        
instead  based synchronous step  e g   agents execute actions synchronously  
framework agent perform next action soon actions preconditions
satisfied  verify condition  impose agents adhere coordination
protocol guarantees consistent access shared resources 
addition  propose extension relational language modeling nondeterministic actions  micalizio   torasso         previous approach  fact 
assume know advance exogenous events affect given action 
paper able deal partial knowledge exogenous events  particular  allow specify subset effects exogenous event action
 i e   agents variables might become unknown event   allow
specify action might affected indefinite event whose effects completely
  

ficooperative monitoring diagnose multiagent plans

unpredictable  i e   agents variables become unknown due event   kind
extended action model subsumes action models proposed roos witteveen 
consists two parts  nominal action model  abnormal model maps
agents variable unknown value 
cooperation among agents nondeterministic action models make cwcm particularly apt deal dynamic partially observable environments  one side 
nondeterministic action models discussed capture unexpected changes
environment  side  cooperative monitoring allows agent acquire
information environment agents  important note that 
differently works agents exchange internal belief states
 see e g   kalech   kaminka         cwcm agent needs communicate
observes  enables agents keep private internal beliefs  addition  agents
could adopt specific policies deciding observations forwarded
agents  forwarding observations agents  single agent
current proposal  might help agents discover earlier outcomes
pending actions  leave opportunity future research 
must noted cwcm assumes observations correct 
actual state agent must pruned agent belief state due erroneous
observation  assumption often made many model based approaches diagnosis  see e g   birnbaum et al         brusoni  console  terenziani    theseider dupre 
      pencole   cordier        roos   witteveen        eiter  erdem  faber    senko 
      mention few   correctness observations  however  implies
observations must precise  cwcm fact consume ambiguous messages given
disjunction values variable  i e   var   v  var   v        var   vn   
negation specific value  i e   var    v   point view cwcm 
consuming observations simply corresponds selection states within belief
state observations refer to  although aspect emphasized paper 
ability dealing ambiguous observations enriches communicative capacities
agents  instance  ask if interaction  client  rather answering
generic no info  could give provider disjunction possible resource states among
which  however  client incapable discriminate actual one  set alternative
states is  point view provider  much informative no info 
possibly could lead provider determine actual state resource hand 
point view diagnostic inference  shown possible
explain action failures extracting explanations trajectory sets built cwcm 
particular  pointed assuming action failures independent
might lead spurious diagnoses  reason proposed methodology
identifying primary action failures secondary action failures  indirect
consequence primary ones  simple preference criterion  based minimality
primary action failures  proposed prefer alternative explanations 
deep experimental analysis shown cooperative monitoring diagnosis practically feasible  efficient implementation based obdds discussed
appendix together computational analysis theoretical point view 
experiments highlighted cwcm scales well number agents 
affected level observability environment  trajectory sets tend big  

fimicalizio   torasso

ger environment less observable  however  experiments demonstrate
cooperation effective even dealing scarcely observable environments  competence rates noncooperative solutions  fact  comparable cwcm
environment fully observable  situations  instead  cwcm always
exhibits highest competence 
proposed framework extended different ways  mentioned above 
far adopted careful approach communication restricting agents talk
exchanged services  however  agents might willing
communicate pieces knowledge acquired  interesting possible
extension improve cooperative protocol along direction  intuition  fact 
agent acquires information  could infer outcome
pending actions earlier now  course  communication must
become bottleneck  agents able identify piece information worth
forwarded agents  avoid broadcasting every observation agents 
important extension aim at  however  relax assumption
communication among agents always reliable  removing assumption
many consequences  first all  cooperative monitoring protocol extended
order deal messages lost  moreover  proposition    safe use
resources  might longer guaranteed cwcm  thus resources could accessed
inconsistently  diagnose situations could take point view similar kalech
kaminkas social diagnosis  fact  erroneous access resources  could considered
coordination failures  would impact diagnostic inferences longer
local  distributed  is  monitoring task  diagnosis
performed means cooperation number agents 

acknowledgments
authors wish thank anonymous reviewers insightful comments 
substantially contributed final shape work 

appendix a  implementation computational analysis
appendix first recall basic obdd operators complexities 
study computational cost expensive relational operations involved
cwcm diagnostic methodologies discussed above 
a   obdd operators complexities
computational analysis discuss next subsection relies results presented
bryant               works  author discusses efficient implementation
obdds operators corresponding computational complexities  results
summarized table    f   f    f  denote boolean functions  encoded
reduced function graphs g  g    g    respectively  size graph g corresponds
number vertices  represented  g   primitive obdd operators
reported upper side table   
  

ficooperative monitoring diagnose multiagent plans

  reduce builds canonical form boolean function f   i e   given specific variables
ordering  reduce operator gets graph g whose size minimal 
  apply implements binary logical operations two boolean functions f  f   
operator works graphs g  g  encoding two functions  respectively 
op binary logical operator           computational complexity
worst case product sizes  i e   number vertices  two
graphs 
  restrict substitutes constant b variable xi time almost linear number
vertices within graph g 
  rename renames set variables  x new one  x    complexity exponential
number renamed variables 
  equiv checks equivalence two boolean functions f  f    since operator
scans two corresponding graphs simultaneously  computational complexity
linear sizes 
lower side table   report computational cost time space relational operators join  intersect  union project obtained combining
primitive obdd operators  observe that  among relational operators  projection
expensive  fact  exponential number  binary  variables
removed  see e g   torta   torasso        torasso   torta       details  
a   cwcm  computational analysis
analyze computational complexity cwcm  consider high level algorithm
presented figure     focus computational cost performing single iteration
loop action ail actually performed real world 
situation three main steps hide potentially expensive operations relations 
extension current trajectory set  line    
refinement trajectory set available observations  line     
detection outcomes pending actions  line     figure    
rest section analyze computational effort steps 
operator
reduce f  
apply op  f    f   
restrict xi   b  f  
rename  f    x   x   
equiv f    f   

time
o  g  log  g  
o  g     g    
o  g  
o  g     x   
o max  g      g     

size
 g 
 g     g   
 g 
 g     x 
n a

join  f    f     union f    f    
intersect f    f     i e   select 
project f    x            xn     y            ym   

o  g     g    
o  g     g    
o    nm   g     

 g     g   
 g     g   
  nm   g 

table    obdd operators complexity 
  

fimicalizio   torasso

a     extending trajectory set
according equation      operator   r     l  yields new trajectory set
r  i  l       involves two join operations  one r     l   ail    one
r     l   ail    results two operations subsequently merged new
trajectory set r     l      via union operation  understand computational cost
relational operations  necessary map obdd operators  already
shown previous works  see e g   torta   torasso        micalizio         natural
join mapped two boolean functions  and hence two
obdds   whereas union two relations becomes boolean or  let gl   gl     g  
g obdds corresponding relations r     l   r     l        ail   
 ail    respectively  operator mapped following expression terms
obdds operations 
gl     apply   apply   gl   g    apply   gl   g   

    

given operator complexities table    computational effort infer new
trajectory set worst case 
o  gl        o  gl    g    o  gl    g   
  o  gl     g    g    

    

a     refinement observations
new trajectory set inferred  refined observations obsik
received agent  sake exposition  equations         defined
refinement trajectory set intersection trajectory set
belief state bki refined obsik   note extraction belief state
expensive operation  thus try avoid operation whenever possible  particular
case  since agent variables v arki included within current trajectory set 
refinement operation carried intersection r     l      obsik  
terms obdd operators 
gref  l     apply   gl     gobsi  
k

    

gobsi obdd encoding obsik   gref  l   obdd corresponding
k
refined trajectory set refinedt r     l       follows computational cost
operation
    
o  gref  l        o  gl      gobsi   
k

a     detecting pending actions outcomes
last step cwcm algorithm consider assessment outcome every
action currently within list pending actions pactsi   section    noted
verify success given action aik pactsi   sufficient check whether nominal

effects aik satisfied every state bk  
 definition     case condition
hold  one verify whether expected nominal effects aik missing
  

ficooperative monitoring diagnose multiagent plans


state bk  
 definition     checks result negative answer  i e   belief state

bk   still ambiguous   action aik remains pending 

explicitly checking conditions might parextracting belief state bk  
ticularly expensive  especially trajectory set grows time  extraction
belief state project operation  fact  would require elimination
r     l      variables interested in  thus  would remove variables
steps               k  k              l      l  vari   variables  table   shows 
complexity project exponential number variables removed  could
easily become bottleneck 
cope problem  implemented checking ok f ailed outcomes
different way  particular  definition   directly follows 


 
join effects aik   equals bk  
proposition    aik outcome ok iff bk  

proof  proof straightforward  definition aik outcome ok iff nominal effects



satisfied every state bk  
  join bk  
effects aik   yields bk  


nominal effects already included every state bk     hence action
outcome ok 

since bk   included refinedt r      l       proposition extended
whole trajectory set 
proposition    aik outcome ok iff
refined r     l      join effects aik  equalsrefined r     l      
say  refinement trajectory set observations  action aik
outcome ok iff nominal effects filter trajectory refinedt r     l      
relying proposition  verify whether aik outcome ok two steps  first 
build temporary obdd maintaining result join r     l     
effects aik    check whether temporary obdd equivalent original
trajectory set  terms obdd operators 
outcomeok    equiv gref l     apply   gref l     geffects ai     
k

    

since size geffects ai   negligible compared size gref l     computak
tional complexity check o  gref l        
f ailed outcome checked similar way  case want discover
whether nominal effects aik missing r     l       happens
negation effects effects aik   represent possible filter r     l     
r     l      join effects aik   equals r     l       terms obdd operators
outcomefailed    equiv gref l     apply   gref l     geffects ai     

    

k

important note obdd geffects ai   computed constant time directly
k
geffects ai     fact  given boolean function f corresponding graph gf  
k
sufficient exchange     nodes gf obtain graph
representation boolean function not f    thus  check o  gref l        
  

fimicalizio   torasso

follows cost determining outcomes actions pactsi is 
o  pactsi    g ref  l        

    

equation       easy see computational cost cwcm methodology strongly depends amount available observations  worst case fact
give step l  due scarce observations  number pending actions
close l itself  is   pactsi   l  meaning almost actions performed far
outcome pending 
a   diagnosis  computational analysis
computational cost diagnostic process strongly dominated cost
inferring event based explanations  eve    shown  fact  possible
extract set minimum cardinality primary action failures explanations  mp ads 
structure  according equation     eve set extracted projection
current trajectory set r     l  event variables e            el    unfortunately 
case way avoid expensive operation 
estimate computational cost  first consider many binary variables
within obdd gl encoding r     l   many  binary  variables going
remove obdd  state event variable r  i  l  fact multi valued
variable actually implemented terms number binary variables within
obdd gl   number required binary variables depends size domain
original high level variable  let us assume size largest domain
variables vari   estimate need b   log binary variables
variable mentioned r     l   both state event variables   easy see
number binary variables required represent single belief state w   b  vari   
multi valued variable vari b binary variables obdd level 
number binary variables encoding trajectory set r  i  l  therefore p  
l w    l    b  fact  within r     l   l beliefs l   event variables  cost
projecting r     l  event variables therefore 
o   plw  gl       

    

eve diagnoses extracted  possible infer minimum cardinality
primary failures exploiting techniques torasso torta         proven
polynomial size obdd 
a   discussion
first important result emerges computational analysis
monitoring single execution step cwcm exponential  fact 
shown step declarative definition mapped number obdd
operators whose complexity polynomial  provided sizes involved obdds
remain manageable  particular  shown exponential operation used
declarative definition  projection  avoided actual implementation 
main concern cwcm trajectory set may grow time agent
  

ficooperative monitoring diagnose multiagent plans

performs actions without receiving observations  consequently  computational cost
cwcm tends grow time since size obdd encoding trajectoryset may increase  important note  however  growth exponential
quadratic  see equation        addition  estimate computational costs
monitoring diagnosis  exploited estimations reported table    these 
however  estimates worst possible cases  practice cases
common  bryant conjectures that  although theoretical cost apply operator
two obdds g  g  o  g     g     worst case  practice actual
cost cases closer o  g       g       g     g  resulting obdd
 bryant         thus size resulting  intermediate obdds plays central
role determining actual computational cost 
specific case cwcm  observe common
agent perform long portion plan without receiving observations  cwcm
allows fact agents communicate other  therefore  unless agent
completely isolated others  agent likely receive observations coming
agents services provided with  means that  practice 
size obdd encoding trajectory set become intractable
cooperation among agents  experiments conducted far support
hypothesis 
hand  diagnostic inferences slightly expensive monitoring strategy  project operation cannot avoided order infer
diagnosis  case  however  observe plan execution already
stopped consequence detected failure  thus  diagnosis take
time infer result since constrained on line 

references
arasu  a   babu  s     widom  j          cql continuous query language  semantic
foundations query execution  international journal large data
bases                 
birnbaum  l   collins  g   freed  m     krulwich  b          model based diagnosis
planning failures  proc  association advancement artificial intelligence
 aaai     pp         
boutilier  c     brafman  r  i          partial order planning concurrent interacting
actions  journal artificial intelligence research             
brusoni  v   console  l   terenziani  p     theseider dupre  d          spectrum
definitions temporal model based diagnosis  artificial intelligence            
bryant  r          graph based algorithms boolean function manipulation  ieee transactions computers                 
bryant  r          symbolic boolean manipulation ordered binary decision diagrams 
acm computer surveys             
  

fimicalizio   torasso

cordier  m  o     grastien  a          exploiting independence decentralised
incremental approach diagnosis  proc  international joint conference
artifical intelligence  ijcai     pp         
cox  j  s   durfee  e  h     bartold  t          distributed framework solving
multiagent plan coordination problem  proc  international conference autonomous agents multiagent systems  aamas     pp         
darwiche  a     marquis  p          knowledge compilation map  journal artificial
intelligence research             
de jonge  f   roos  n     witteveen  c          primary secondary diagnosis multiagent plan execution  journal autonomous agent multiagent systems         
       
eiter  t   erdem  e   faber  w     senko  j          logic based approach finding
explanations discrepancies optimistic plan execution  fundamenta informaticae 
               
fox  m     long  d          pddl     extension pddl expressing temporal
planning domains  journal artificial intelligence research            
grastien  a   anbulagan  rintanen  j     kelareva  e          diagnosis discrete event
systems using satisfiability algorithms  proc  association advancement
artificial intelligence  aaai     pp         
grastien  a   haslum  p     thiebaux  s          conflict based diagnosis discrete event
systems  theory practice  proceedings thirteenth international conference principles knowledge representation reasoning  kr     pp         
gupta  s   roos  n   witteveen  c   price  b     de kleer  j          exploiting shared
resource dependencies spectrum based plan diagnosis  proc  association
advancement artificial intelligence  aaai     pp            
heger  f  w   hiatt  l  m   sellner  b   simmons  r     singh  s          results sliding
autonomy multi robot spatial assembly  proc  international symposium
artificial intelligence  robotics automation space  isairas  
helmert  m          concise finite domain representations pddl planning tasks  artificial intelligence                    
jonsson  p     backstrom  c          state variable planning structural restrictions 
algorithms complexity  artificial intelligence                    
kalech  m          diagnosis coordination failures  matrix based approach  journal
autonomous agents multiagent systems                
kalech  m     kaminka  g  a          design social diagnosis algorithms
multi agent teams  proc  international joint conference artificial intelligence
 ijcai     pp         
kalech  m     kaminka  g  a          diagnosing team agents  scaling up  proc 
international conference autonomous agents multi agent systems  aamas     pp         
  

ficooperative monitoring diagnose multiagent plans

kalech  m     kaminka  g  a          design coordination diagnosis algorithms
teams situated agents  artificial intelligence                    
kalech  m     kaminka  g  a          coordination diagnostic algorithms teams
situated agents  scaling up  computational intelligence                 
kalech  m   kaminka  g  a   meisels  a     elmaliach  y          diagnosis multi robot
coordination failures using distributed csp algorithms  proc  association
advancement artificial intelligence  aaai     pp         
kaminka  g  a     tambe  m          robust multi agent teams via socially attentive
monitoring  journal artificial intelligence research             
lamperti  g     zanella  m          diagnosis discrete event systems uncertain
temporal observations  artificial intelligence                   
mi  p     scacchi  w          articulation  integrated approach diagnosis  replanning  rescheduling software process failures  proc  knowledge based
software engineering conference  pp       
micalizio  r          action failure recovery via model based diagnosis conformant
planning  computational intelligence                 
micalizio  r     torasso  p       a   on line monitoring plan execution  distributed
approach  knowledge based systems                 
micalizio  r     torasso  p       b   plan diagnosis agent diagnosis multi agent
systems  proc  congress italian association artificial intelligence
 ai ia     vol       lncs  pp         
micalizio  r     torasso  p          monitoring execution multi agent plan  dealing
partial observability  proc  european conference artificial intelligence
 ecai     pp         
micalizio  r     torasso  p          agent cooperation monitoring diagnosing
map  proc  multiagent system technologies  mates     vol       lncs 
pp       
micalizio  r   torasso  p     torta  g          on line monitoring diagnosis team
service robots  model based approach  ai communications                 
nebel  b          compilability expressive power propositional planning
formalisms  journal artificial intelligence research             
pencole  y     cordier  m          formal framework decentralized diagnosis
large scale discrete event systems application telecommunication networks 
artificial intelligence              
reiter  r          theory diagnosis first principles  artificial intelligence         
     
roos  n     witteveen  c          models methods plan diagnosis  journal
autonomous agent multiagent systems               
sampath  m   sengupta  r   lafortune  s   sinnamohideen  k     teneketzis  d         
diagnosability discrete event systems   ieee transactions automatic control 
                 
  

fimicalizio   torasso

sellner  b   heger  f   hiatt  l   simmons  r     singh  s          coordinated multiagent teams sliding autonomy large scale assembly  ieee   special issue
multi robot systems                    
steinbauer  g     wotawa  f          enhancing plan execution dynamic domains using
model based reasoning  intelligent robotics applications  first international
conference   icira     vol       lnai  pp         
tambe  m          implementing agent teams dynamic multi agent environments  applied
artificial intelligence                   
torasso  p     torta  g          computing minimum cardinality diagnoses using obdds 
german conference ai  ki     vol       lncs  pp         
torasso  p     torta  g          model based diagnosis obdd compilation  complexity analysis  reasoning  action interaction ai theories systems 
vol       lncs  pp         
torta  g     torasso  p          role modeling causal independence system
model compilation obdds  ai communications               
weld  d  s          introduction least commitment planning  ai magazine         
     
witteveen  c   roos  n   van der krogt  r     de weerdt  m          diagnosis single
multi agent plans  proc  international conference autonomous agents
multiagent systems  aamas     pp         
yan  y   dague  p   pencole  y     cordier  m  o          model based approach
diagnosing fault web service processes  journal web service research         
      

  


