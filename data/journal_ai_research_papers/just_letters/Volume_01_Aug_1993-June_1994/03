journal artificial intelligence research                 

submitted       published     

research note

applying gsat non clausal formulas

roberto sebastiani

mechanized reasoning group  dist  viale causa           genova  italy 
mechanized reasoning group  irst  loc  pante        povo  trento  italy 

rseba dist unige it

abstract

paper describe modify gsat applied non clausal
formulas  idea use particular  score  function gives number clauses
cnf conversion formula false given truth assignment 
value computed linear time  without constructing cnf conversion itself 
proposed methodology applies variants gsat proposed far 

   introduction

gsat  selman  levesque    mitchell        selman   kautz        incomplete
model finding algorithm clausal propositional formulas performs randomized
local search  gsat shown solve many  hard  problems much eciently
traditional algorithms like  e g   dp  davis   putnam         since gsat
applies clausal formulas  using find models ordinary propositional formulas
requires previous clausal form conversion  requires extra computation  which
extremely heavy  standard  clausal conversion used   much worse  clausal form
conversion causes either large increase size input formula enlargement
search space 
paper describe modify gsat applied non clausal
formulas directly   i e   previous clausal form conversion  extended version
paper  sebastiani        provides proofs theorems detailed description
algorithm introduced 
achievement could enlarge gsat s application domain  selman et al         suggest traditional ai problems formulated model finding tasks  e g   visual
interpretation  reiter   mackworth         planning  kautz   selman         generation
 vivid  knowledge representation  levesque         often case non clausal
representations compact problems  instance  rule form
 vi   gives rise several distinct clauses disjuncts conjunct  automated theorem proving  a t p   applications model finding
proposed  see  e g    artosi   governatori        klingerbeck          instance 
decision procedures decidable subclasses first order logic iteratively perform nonclausal model finding propositional instances input formulas  jeroslow        
generally  model guided techniques proof search  goal deletion  ballantyne   bledsoe         false preference   semantic resolution  slaney         seem
applicable non clausal a t p  well 
c      ai access foundation morgan kaufmann publishers  rights reserved 

fisebastiani

procedure gsat  
j      max tries

   initial  
k      max  ips

j 
return
else poss  ips    hill climb    
v    pick poss  ips 
   ip v t 
updatescores   v  

end
end
return  no satisfying assignment found  
figure    general schema gsat 

   gsat

clausal propositional formula truth assignment variables
  number clauses falsified called score
 score t      satisfies iff score t         notion score plays key role
gsat  considered  distance  truth assignment satisfying one 
schema figure   describes gsat well many possible variants  use
notation  gent   walsh         gsat performs iterative search satisfying
truth assignment   starting random assignment provided initial    
step  successive assignment obtained ipping  inverting  truth value one
single variable v   v chosen minimize score  let ti assignment obtained
ipping i th variable vi   hill climb   returns set poss  ips variables
vr minimize score tr      current values si   score ti      score t   
stored every variable vi   hill climb   simply returns set variables vr
best sr   pick   chooses randomly one variables  ip   returns v  s
value ipped  ipping  updatescores   updates values si   i 
paper exploits observation functions initial     hill climb     pick  
ip   depend structure input formula   computation
scores step input formula required clausal form 
idea thus find suitable notion score non clausal formulas  ecient
algorithm computing it 

   extended notion score

let cnf    result converting propositional formula   clausal form
standard method  i e   applying rules de morgan   following definition
extends notion score propositional formulas 

definition     score truth assignment propositional formula  
number clauses cnf    falsified  
   

fiapplying gsat non clausal formulas

mpp
pp
pp
pp      
     
p

      







  b
 

     

      
        

       
      
  

     
         

       
         

   


b
                   
 
b      


 
       
                   
b
 
      


 
     c
     
 e b  

         
j                  


     

e
      
 
j


ss          

e
     
     
     
 
         


j
aa

   

     
     
   
  
 
 f
 b
     d
b
b
      c    

     
     
 
   

b
b






c  
b
c    
   






b

 
     a  b c  e  f      d  e c f  a  f  b e  c f
                             
        
                
              
                
                
                                                               





       
        





 
      
        









        
       



   
      
       

       
       

 
      
        

       
        



      
      
  



        
       

 
      
        

figure    computation tree s t     
cnf   represents  natural  clausal form conversion  cnf    number
propositional variables   logically equivalent    problem cnf  
exponential size growth cnf      is  jcnf    j   o  j j   definition     overcomes
problem  possible introduce linear time computable function s t    
gives score formula    done directly  i e   without converting  
clausal form  define s t     recursively follows   
 
s  t    
s   t    
  j   
  j   
  literal
  otherwise
  otherwise
 v  
sp   t     
sq t     
   k  
 

 
t 
 
 
wk  k
q k s t    k 
pk ss   t 
t   k 
k
k k
k
k
      s   t      s t     
s t        s   t     
 
      s t        s   t      
      ss  t t      ss  t 
 t     
 s   t        s t      
 

 

 

 

s   t   k  s t    k    distinction s t   k   s   t   k  due polarity
current subformula  k   computation s t      call function
s t   j    s   t   j    invoked iff  j positive  negative  subformula   
example     figure   represents computation tree score truth assignment
formula    
 d

   

  

  

b c     e f    c    e    c f    
e b      d a    f b   f     e c f   b    
 

 

 

 

  

  

 

 

 

  

 

 

  

  

 

  

 

 

 

  

 



  

 

 

 

  

assigns  true  variables    information square brackets associated
subformula  j represents  s t   j    s   t   j     instance  consider small
subtree left figure    score computed following way 
   notice definition s t     easily extended formulas involving connectives  e g  
nand     xor   if then else           complicate boolean functions 

   

fisebastiani

s t    b c     e f      
s t  b c   s t  d  s t  e f    
 s t  a    s t  b     s t  c    s t  d   s t  e     s t  f     
                          
 

 

  

  

 

 

 



 



  

 

 

 

  



 



  

 



 

 

w

q

  s t  vk  k     pk s t   k  
  s t  k  k     k s t   k  
  literals



 

notice cnf         clauses long 

theorem     let   propositional formula truth assignment variables
   function s t     gives score   

proof follows consideration that  truth assignment   set
false clauses cnf          cross product two sets false clauses
cnf     cnf      
theorem     let   propositional formula truth assignment variables
   number operations required calculating s t     grows linearly
size   
proof follows fact that  time s   i     number operations required
computing s t   i  s   t   i   time s   i     ai j ij   bi  
time s            maxi  ai  j     j     maxi  bi         f        g 
number operations required computing score assignment
clausal formula o jj     cnf      jj   o  j j   thus standard
computation score requires o  j j  operations  s t     performs
result directly linear time 

   gsat non clausal formulas

follows sections      extend gsat non clausal formulas   simply
using extended notion score definition      let nc gsat  non clausal gsat 
new version gsat scores computed implementation
function s     follows theorem     nc gsat    function hillclimb   always returns sets variables gsat cnf      nc gsat   
performs ips returns result gsat cnf      theorem     ensures
every score computation performed linear time 
current implementation gsat  selman   kautz        provides highlyoptimized implementation updatescores   v     analyzes clauses
last  ipped variable v occurs in  allows strong reduction computational cost 
 sebastiani        describe detail analogous optimized version updating
procedure nc gsat  called nc updatescores    v     prove following properties 
 i    clausal form  i e       cnf      nc updatescores    v  
complexity updatescores    v    
 ii    cnf      nc updatescores    v   o j j   updatescores   v   o  j j  
latter mirrors complexity issues presented section   
   

fiapplying gsat non clausal formulas

idea introduced paper applied variants gsat   csat 
 cautious sat  hill climb   returns variables cause decrease score 
 dsat   deterministic sat  function pick   performs deterministic choice 
 rsat   random walk sat  variable picked randomly among variables 
 msat   memory sat  pick   remembers last ipped variable avoids picking it 
variants  proposed  gent   walsh               transposed ncgsat well  independent structure input formula  selman
kautz        suggest variants improve performance overcome
problems  escaping local minima  strategy  averaging   suggests
different implementation function initial     instead random assignment  initial  
returns bitwise average best assignments two latest cycles  independent
form input formula  strategy  random walk   sequence hill climb  
  pick   substituted probability p simpler choice function   choose randomly
variable occurring unsatisfied clause   idea transposed nc gsat
well   choose randomly branch passing nodes whose score different
zero  pick variable leaf  
one final observation worth making  order overcome exponential growth
cnf formulas  algorithms proposed  plaisted   greenbaum        de la
tour        convert propositional formulas   polynomial size clausal formulas  
methods based introduction new variables  representing subformula
original input    unfortunately  issue size polynomiality valid   
occurs    number clauses grows exponentially number   
   even worse  introduction k new variables enlarges search space  k factor
reduces strongly solution ratio  fact  model model   
model   know one  k extensions model  plaisted  
greenbaum        

acknowledgements
fausto giunchiglia enrico giunchiglia given substantial continuous feedback
whole development paper  toby walsh provided important feedback
previous version paper  aaron noble  paolo pecchiari  luciano serafini
helped final revision  bart selman henry kautz thanked assistance
gsat code 

references

artosi  a     governatori  g          labelled model modal logic  proc  cade  
workshop automated model building 

ballantyne  m     bledsoe  w          generating using examples proof discovery  michie  d   ed    machines intelligence  vol      pp        halsted press 
davis  m     putnam  h          computing procedure quantification theory  journal
acm             
   

fisebastiani

de la tour  t  b          minimizing number clauses renaming  proc 
  th conference automated deduction  pp           springer verlag 
gent  i  p     walsh  t          enigma sat hill climbing procedures  tech  rep 
     university edinburgh  dept  artificial intelligence 
gent  i  p     walsh  t          towards understanding hill climbing procedures
sat  proc    th national conference artificial intelligence  pp        
jeroslow  r          computation oriented reduction predicate propositional logic 
decision support system             
kautz  h     selman  b          planning satisfiability  proc    th european conference artificial intelligence  pp          
klingerbeck  s          generating finite counter examples semantic tableaux
interpretation revision  proc  cade   workshop automated model building 

levesque  h          making believers computers  artificial intelligence              
plaisted  d     greenbaum  s          structure preserving clause form translation 
journal symbolic computation             
reiter  r     mackworth  a          logical framework depiction image interpretation  artificial intelligence                   
sebastiani  r          applying gsat non clausal formulas  tech  rep          
dist  university genova  italy  available via anonimous ftp mrg dist unige it 
 pub mrg ftp  
selman  b     kautz  h          domain independent extension gsat  solving large
structured satisfiability problems  proc    th international joint conference
artificial intelligence  pp          
selman  b   levesque  h     mitchell  d          new method solving hard satisfiability problems  proc    th national conference artificial intelligence 
pp          
slaney  j          scott  model guided theorem prover  proc    th international joint conference artificial intelligence  pp           morgan kaufmann 

   


