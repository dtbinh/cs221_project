journal artificial intelligence research                 

submitted        published     

substructure discovery using minimum description
length background knowledge
diane j  cook
lawrence b  holder

department computer science engineering
box      
university texas arlington
arlington  tx       usa

cook cse uta edu
holder cse uta edu

abstract

ability identify interesting repetitive substructures essential component discovering knowledge structural data  describe new version subdue substructure discovery system based minimum description length principle 
subdue system discovers substructures compress original data represent
structural concepts data  replacing previously discovered substructures
data  multiple passes subdue produce hierarchical description structural regularities data  subdue uses computationally bounded inexact graph match
identifies similar  identical  instances substructure finds approximate
measure closeness two substructures computational constraints  addition minimum description length principle  background knowledge used
subdue guide search towards appropriate substructures  experiments
variety domains demonstrate subdue s ability find substructures capable compressing original data discover structural concepts important domain 

   introduction
large amount data collected today quickly overwhelming researchers  abilities
interpret data discover interesting patterns within data  response
problem  number researchers developed techniques discovering concepts
databases  techniques work well data expressed non structural  attributevalue representation  address issues data relevance  missing data  noise uncertainty  utilization domain knowledge  however  recent data acquisition projects
collecting structural data describing relationships among data objects  correspondingly  exists need techniques analyze discover concepts structural
databases 
one method discovering knowledge structural data identification common substructures within data  motivation process find substructures
capable compressing data identify conceptually interesting substructures
enhance interpretation data  substructure discovery process identifying
concepts describing interesting repetitive substructures within structural data 
discovered  substructure concept used simplify data replacing instances
substructure pointer newly discovered concept  discovered substructure concepts allow abstraction detailed structure original data provide
c      ai access foundation morgan kaufmann publishers  rights reserved 

ficook   holder
new  relevant attributes interpreting data  iteration substructure discovery
replacement process constructs hierarchical description structural data terms
discovered substructures  hierarchy provides varying levels interpretation
accessed based goals data analysis 
describe system called subdue  holder  cook    bunke        holder   cook 
      discovers interesting substructures structural data based minimum
description length principle  subdue system discovers substructures compress
original data represent structural concepts data  replacing previouslydiscovered substructures data  multiple passes subdue produce hierarchical description structural regularities data  subdue uses computationally bounded
inexact graph match identifies similar  identical  instances substructure
finds approximate measure closeness two substructures computational
constraints  addition minimum description length principle  background
knowledge used subdue guide search towards appropriate substructures 
following sections describe approach detail  section   describes process
substructure discovery introduces needed definitions  section   compares subdue
discovery system work found literature  section   introduces minimum
description length encoding used approach  section   presents inexact
graph match algorithm employed subdue  section   describes methods incorporating
background knowledge substructure discovery process  experiments detailed
section   demonstrate subdue s ability find substructures compress data
re discover known concepts variety domains  section   details hierarchical
discovery process  conclude observations directions future research 

   substructure discovery
substructure discovery system represents structured data labeled graph  objects
data map vertices small subgraphs graph  relationships
objects map directed undirected edges graph  substructure connected
subgraph within graphical representation  graphical representation serves input
substructure discovery system  figure   shows geometric example input
graph  objects figure  e g   t   s   r   become labeled vertices graph 
relationships  e g   on t  s    shape c  circle   become labeled edges graph 
graphical representation substructure discovered subdue data
shown figure   
instance substructure input graph set vertices edges
input graph match  graph theoretically  graphical representation
substructure  example  instances substructure figure   shown
figure   
substructure discovery algorithm used subdue computationally constrained
beam search  algorithm begins substructure matching single vertex
graph  iteration algorithm selects best substructure expands
instances substructure one neighboring edge possible ways  new unique
generated substructures become candidates expansion  algorithm searches
   

fisubstructure discovery

input graph

substructure

t 

pe

s 

triangle


sh

c 
r 

t 

t 

s 

s 



t 

pe

square


sh

s 

figure    example substructure graph form 
instance

 

instance

 

instance

 

instance

t 

t 

t 

t 

s 

s 

s 

s 

 

figure    instances substructure 
best substructure possible substructures considered total
amount computation exceeds given limit  evaluation substructure guided
mdl principle background knowledge provided user 
typically  description length expanding substructure begins increase 
expansion substructure yield smaller description length 
result  subdue makes use optional pruning mechanism eliminates substructure
expansions consideration description lengths expansions increases 

   related work
several approaches substructure discovery developed  winston s arch program  winston        discovers substructures order deepen hierarchical description
scene group objects general concepts  arch program searches
two types substructure blocks world domain  first type involves sequence
objects connected chain similar relations  second type involves set
objects similar relationship  grouping  object  main difference
substructure discovery procedures used arch program subdue
arch program designed specifically blocks world domain  instance 
sequence discovery method looks supported by in front of relations only 
subdue s substructure discovery method domain independent  although inclusion
domain specific knowledge would improve subdue s performance 
motivated need construct knowledge base chemical structures  levinson
 levinson        developed system storing labeled graphs individual graphs
   

ficook   holder
represented set vertices universal graph  addition  individual graphs
maintained partial ordering defined subgraph of relation  improves
performance graph comparisons  universal graph representation provides
method compressing set graphs stored knowledge base  subgraphs
universal graph used several individual graphs suggest common substructure
individual graphs  one difference two approaches levinson s system
designed incrementally process smaller individual graphs  whereas  subdue processes
larger graphs once  also  levinson s system discovers common substructure
indirect result universal graph construction  whereas  subdue s main goal
discover output substructure definitions reduce minimum description
length encoding graph  finally  subgraph of partial ordering used levinson s
system included subdue  maintaining partial ordering would improve
performance graph matching procedure pruning number possible matching
graphs 
segen  segen        describes system storing graphs using probabilistic graph
model represent subsets graph  alternative models evaluated based minimum description length measure information needed represent stored graphs
using model  addition  segen s system clusters graphs classes based
minimizing description length graphs according entire clustering  apart
probabilistic representation  segen s approach similar levinson s system
methods take advantage commonalities graphs assist graph storage matching  probabilistic graphs contain information identifying common
substructure exact graphs represent  portion probabilistic graph
high probability defines substructure appears frequently exact graphs 
notion emphasized segen s work  provides alternative method
substructure discovery clustering subgraphs original input graphs  levinson s approach  graphs processed incrementally  substructure found across several
graphs  within single graph subdue 
labyrinth system  thompson   langley        extends cobweb incremental
conceptual clustering system  fisher        handle structured objects  labyrinth uses
cobweb form hierarchical concepts individual objects domain based
primitive attributes  concepts structured objects formed similar manner
using individual objects attributes  resulting hierarchy represents componential
model structured objects  cobweb s concepts probabilistic  labyrinth
produces probabilistic models structured objects  added hierarchical
organization  upper level components structured object hierarchy produced
labyrinth represent substructures common examples  therefore  although
primary focus  labyrinth discovering substructure  constrained context
general graph representation used subdue 
conklin et al   conklin   glasgow        developed i mem system constructing image hierarchy  similar labyrinth  used discovering common
substructures set images ecient retrieval images similar given image 
images expressed terms set relations defined user  specific general
 conceptual  images stored hierarchy based subsumption relation similar
   

fisubstructure discovery
levinson s subgraph of partial ordering  image matching utilizes transformational
approach  similar subdue s inexact graph match  measure image closeness 
approaches segen levinson  i mem designed process individual
images  therefore  general image concepts appear higher i mem s hierarchy
represent common substructures across several images  subdue designed discover
common substructures within single image  subdue mimic individual approach
systems processing set individual images one disconnected graph 
substructures found common individual images  hierarchy represents
componential view images  view constructed subdue using
multiple passes graph replacing portions input graph substructures
discovered previous passes  i mem performed well simple chess domain
molecular chemistry domains  conklin   glasgow         however  i mem requires
domain specific relations expressing images order hierarchy find relevant
substructures image matching ecient  again  maintaining concepts
 images  graphs  partially ordered hierarchy improves eciency matching
retrieval  suggests possible improvement subdue 
clip system  yoshida  motoda    indurkhya        graph based induction
similar subdue previous systems  clip iteratively discovers patterns
graphs expanding combining patterns discovered previous iterations  patterns
grouped views based collective ability compress original input
graph  iteration clip uses existing views contract input graph
considers adding views new patterns consisting two vertices edge
contracted graph  compression new proposed views estimated 
best views  according given beam width  retained next iteration 
clip discovers substructures  patterns  differently subdue  first  clip produces
set substructures collectively compress input graph  whereas  subdue produces
single substructures evaluated using principled minimum description length 
clip ability grow substructures agglomeratively  i e   merging two substructures
together   whereas  subdue always produces new substructures using incremental growth
along one new edge  clip initially estimates compression value new views based
compression value parent view  whereas  subdue performs expensive exact
measurement compression new substructure  finally  clip employs ecient
graph match based graph identity  graph isomorphism subdue  graph identity
assumes ordering incident edges vertex consider possible
mappings looking occurrences pattern input graph  differences
clip suggest possible enhancements subdue 
research pattern recognition begun investigate use graphs graph
grammars underlying representation structural problems  schalkoff         many
results grammatical inference applicable constrained classes graphs  e g   trees 
 fu        miclet         approach begins set sample graphs produces
generalized graph grammar capable deriving original sample graphs many others 
production rules general grammar capture regularities  substructures 
sample graphs  jeltsch kreowski  jeltsch   kreowski        describe approach
begins maximally specific grammar iteratively identifies common subgraphs
right hand sides production rules  common subgraphs used form
   

ficook   holder
new  general production rules  although method address underlying
combinatorial nondeterminism  heuristic approaches could provide feasible method
extracting substructures form graph grammars  furthermore  graph grammar
production rule may provide suitable representation background knowledge
substructure discovery process 

   minimum description length encoding graphs

minimum description length principle  mdlp  introduced rissanen  rissanen 
      states best theory describe set data theory minimizes
description length entire data set  mdl principle used decision
tree induction  quinlan   rivest         image processing  pednault        pentland       
leclerc         concept learning relational data  derthick         learning models
non homogeneous engineering domains  rao   lu        
demonstrate minimum description length principle used discover
substructures complex data  particular  substructure evaluated based well
compress entire dataset using minimum description length  define
minimum description length graph number bits necessary completely
describe graph 
according minimum description length  mdl  principle  theory best
accounts collection data one minimizes  s      gjs   
discovered substructure  g input graph   s   number bits required encode
discovered substructure   gjs   number bits required encode input
graph g respect  
graph connectivity represented adjacency matrix  consider graph
n vertices  numbered              n      n n adjacency matrix
formed entry a i  j   set      a i  j        connection
vertex vertex j   a i  j        least one connection vertex
vertex j   undirected edges recorded one entry matrix  adjacency
matrix graph figure   shown below 
x              
triangle                  
                   
square                  
r              
rectangle            
encoding graph consists following steps  assume decoder
table lu unique labels original graph g 
   determine number bits vbits needed encode vertex labels graph 
first  need  lg v   bits encode number vertices v graph  then 
encoding labels v vertices requires  v lg lu   bits  assume vertices
specified order appear adjacency matrix  total number
bits encode vertex labels
vbits   lg v   v lg lu
   

fisubstructure discovery

triangle

e

p
ha


x



pe

square


sh




pe

rectangle


sh
r

figure    mdl example graph 
example figure    v      assume lu     unique
labels original graph  number bits needed encode vertices
lg       lg           bits 
   determine number bits rbits needed encode rows adjacency matrix
a  typically  large graphs  single vertex edges small percentage
vertices entire graph  therefore  typical row adjacency matrix
much fewer v  s  v total number vertices graph 
apply variant coding scheme used  quinlan   rivest        encode bit
strings length n consisting k  s  n   k   s  k  n   k  
case  row    v   represented bit string length v containing ki
 s  let b   maxi ki   ith row adjacency matrix encoded
follows 
 a  encoding value ki requires lg b      bits 

 b  given ki  s occur row bit string length v   kvi strings
 s  s
since strings equal probability
possible 

v
occurrence  lg ki bits needed encode positions  s row i 
value v known vertex encoding 
finally  need additional lg b      bits encode number bits needed
specify value ki row  total encoding length bits adjacency
matrix

rbits   lg b       

v
x
i  

   v      lg b     
   



lg b        lg kvi
v
x
i  



lg kvi

ficook   holder
example figure    b     


number

bits
needed
encode

 
 
 
 
 
 
adjacency matrix    lg    lg    lg    lg    lg    lg    lg          
bits 
   determine number bits ebits needed encode edges represented
entries a i  j       adjacency matrix a  number bits needed encode
entry a i  j    lg m    e i  j       lg lu    e i  j   actual number edges
vertex j graph   maxi j e i  j     lg m  bits needed
encode number edges vertex j        lg lu   bits needed
per edge encode edge label whether edge directed undirected 
addition encoding edges  need encode number bits  lg m  needed
specify number edges per entry  total encoding edges

ebits   lg  

v x
v
x
i   j   

lg   e i  j       lg lu  

  lg   e     lg lu    

v x
v
x
i   j   

a i  j   lg

  e     lg lu      k      lg
e number edges graph  k number  s adjacency
matrix a  example figure    e      k           lu      number
bits needed encode edges       lg        lg        
total encoding graph takes  vbits   rbits   ebits  bits  example
figure    value       bits 
input graph discovered substructure encoded using
scheme  substructure discovered  instance substructure input
graph replaced single vertex representing entire substructure  discovered
substructure represented  s   bits  graph substructure replacement
represented  gjs   bits  subdue searches substructure graph g minimizing
 s      gjs   

   inexact graph match

although exact structure match used find many interesting substructures  many
interesting substructures show slightly different form throughout
data  differences may due noise distortion  may illustrate slight
differences instances general class structures  consider image
shown figure    pencil cube would make ideal substructures picture 
exact match algorithm may consider strong substructures 
rarely occur form level detail throughout picture 
given input graph set defined substructures  want find subgraphs
input graph closely resemble given substructures  furthermore  want
associate distance measure pair graphs consisting given substructure
subgraph input graph  adopt approach inexact graph match given
bunke allermann  bunke   allermann        
   

fisubstructure discovery

g 

g 

b

b




b

 

 



 

 



b

b
 
b

figure    two similar graphs g  g   
inexact match approach  distortion graph assigned cost  distortion
described terms basic transformations deletion  insertion  substitution
vertices edges  distortion costs determined user bias match
particular types distortions 
inexact graph match two graphs g  g  maps g  g  g 
interpreted distorted version g   formally  inexact graph match mapping
f   n    n    fg  n  n  sets vertices g  g   respectively 
vertex v   n  mapped  i e   f  v       deleted  is  corresponding
vertex g   given set particular distortion costs discussed above  define cost
inexact graph match cost f    sum cost individual transformations
resulting f   define matchcost g    g   value least cost function
maps graph g  onto graph g  
given g    g   set distortion costs  actual computation matchcost g    g  
determined using tree search procedure  state search tree corresponds
partial match maps subset vertices g  subset vertices g  
initially  start empty mapping root search tree  expanding state
corresponds adding pair vertices  one g  one g   partial mapping
constructed far  final state search tree match maps vertices g 
g    complete search tree example figure   shown figure   
example assign value   distortion cost  numbers circles
figure represent cost state  eventually interested mapping
minimum cost  state search tree gets assigned cost partial mapping
represents  thus goal state found tree search procedure
final state minimum cost among final states  figure   conclude
minimum cost inexact graph match g  g  given mapping f          f         
cost mapping   
given graphs g  n vertices g  vertices  n  complexity
full inexact graph match o nm      routine used heavily throughout
   

ficook   holder

        

        

        

   

  

                                                                             
 

 

  

 

 

 

 

 

  

 

  

 

  

figure    search tree computing matchcost g  g   figure   
discovery evaluation process  complexity algorithm significantly degrade
performance system 
improve performance inexact graph match algorithm  extend bunke s
approach applying branch and bound search tree  cost root
tree given node computed described above  nodes considered pairings
order heavily connected vertex least connected  constrains
remaining match  branch and bound search guarantees optimal solution 
search ends soon first complete mapping found 
addition  user place limit number search nodes considered
branch and bound procedure  defined function size input graphs  
number nodes expanded search tree reaches defined limit  search
resorts hill climbing using cost mapping far measure choosing
best node given level  defining limit  significant speedup realized
expense accuracy computed match cost 
another approach inexact graph match would encode difference
two graphs using mdl principle  smaller encodings would indicate lower match cost
two graphs  leave future research direction 

   guiding discovery process background knowledge
although principle minimum description length useful discovering substructures maximize compression data  scientists may realize benefit
discovery substructures exhibit domain specific domain independent characteristics 
make subdue powerful across wide variety domains  added
ability guide discovery process background knowledge  although minimum
description length principle still drives discovery process  background knowledge
used input bias toward certain types substructures  background knowledge
encoded form rules evaluating substructures  represent domainindependent domain dependent rules  time substructure evaluated  input
   

fisubstructure discovery
rules used determine value substructure consideration 
most favored substructures kept expanded  rules bias discovery
process system 
background rule assigned positive  zero  negative weight  biases
procedure toward type substructure  eliminates use rule  biases
procedure away type substructure  respectively  value substructure
defined description length  dl  input graph using substructure multiplied weighted value background rule set rules r applied
substructure 

value s    dl g  s 

jrj

r  

ruler  s er

   

three domain independent heuristics incorporated rules subdue system compactness  connectivity  coverage  definitions rules 

let g represent input graph  represent substructure graph 
represent set instances substructure g  instance weight w
instance   substructure defined
 i  s 
   
w i  s        matchcost
size i   
size i     vertices i     edges i   match cost greater size
larger graph  w i  s       instance weights used rules compute
weighted average instances substructure  value   added formula
exponential weights used control rule s significance 
first rule  compactness  generalization wertheimer s factor closure 
states human attention drawn closed structures  wertheimer         closed
substructure least many edges vertices  whereas non closed substructure
fewer edges vertices  prather         thus  closed substructures higher
compactness value  compactness defined weighted average ratio
number edges substructure number vertices substructure 

compactness s        j i j

x

i i

edges i 
w i  s    vertices
 i 

   

second rule  connectivity  measures amount external connection instances substructure  connectivity rule variant wertheimer s factor
proximity  wertheimer         related earlier numerical clustering techniques
 zahn         works demonstrate human preference  isolated  substructures 
is  substructures minimally related adjoining structure  connectivity measures  isolation  substructure computing inverse average number
external connections weighted instances substructure input graph 
external connection defined edge connects vertex substructure
vertex outside substructure  formula determining connectivity
substructure instances input graph g given below 
   

ficook   holder
 

connectivity s         

x

ji j i i w i  s  num external conns i 

   

   

third rule  coverage  measures fraction structure input graph described
substructure  coverage rule motivated research inductive learning
provides concept descriptions describing input examples considered better
 michalski   stepp         although mdl measures amount structure  coverage
rule includes relevance savings respect size entire input graph 
coverage defined number unique vertices edges instances
substructure divided total number vertices edges input graph 
formula  unique structure i  instance number vertices edges
already appeared previous instances summation 

coverage s       

p
i i w i  s  unique

size g 

structure i 

   

domain dependent rules used guide discovery process domain
scientists contribute expertise  example  cad circuits generally consist
two types components  active passive components  active components
main driving components  identifying active components first step understanding main function circuit  add knowledge subdue include
rule assigns higher values substructures  circuit components  representing active
components lower values substructures representing passive components  since
active components higher scores  expected selected  system
focus attention active components expanded functional
substructures 
another method biasing discovery process background knowledge let
background rules affect prior probabilities possible substructures  however  choosing
appropriate prior probabilities express desired properties substructures dicult  indicates future direction inclusion background knowledge
substructure discovery process 

   experiments
experiments section evaluate subdue s substructure discovery capability
several domains  including chemical compound analysis  scene analysis  cad circuit design
analysis  analysis artificially generated structural database 
two goals substructure discovery system find substructures reduce
amount information needed describe data  find substructures
considered interesting given database  result  evaluate subdue system
section along two criteria  first  measure amount compression
subdue provides across variety databases  second  use subdue system
additional background knowledge rules re discover substructures identified
interesting experts specific domain  section     describes domains used
experiments  section     presents experimental results 
   

fisubstructure discovery

ch  oh


ch  

ch  



c


oh

figure    cortisone 
ch  
c
ch
 

ch  

h

c

c
ch

 

ch

ch

 
c

ch  

 

ch  

h

c

c
ch

ch

 

 

ch

ch

 

 

c

c
ch  

h

h

ch

 

c
ch

 

c
h

figure    natural rubber  all cis polyisoprene  

    domains
      chemical compound analysis

chemical compounds rich structure  identification common interesting
substructures benefit scientists identifying recurring components  simplying data
description  focusing substructures stand merit additional attention 
chemical compounds represented graphically mapping individual atoms 
carbon oxygen  labeled vertices graph  mapping bonds
atoms onto labeled edges graph  figures         show graphs representing
chemical compound databases cortisone  rubber  portion dna molecule 
      scene analysis

images scene descriptions provide rich source structure  images humans
encounter  natural synthesized  many structured subcomponents draw
attention help us interpret data scene 
discovering common structures scenes useful computer vision system 
first  automatic substructure discovery help system interpret image  instead
working low level vertices edges  subdue provide abstract structured
components  resulting hierarchical view image machine analyze
many levels detail focus  depending goal analysis  second  substructure
discovery makes use inexact graph match help identify objects  d image
 d scene noise orientation differences likely exist  object appears often scene  inexact graph match driving subdue system may capture
slightly different views object  although object may dicult identify
   

ficook   holder


ch 
n

adenine

n
n

n




n

p




h
n

oh



n

ch  



h
p

ho


n

h

n

h



n

guanine
n

p





ch 



thymine

ch 



h

n

n





n
h

oh

n

cytosine

ch 
ch  



h

p

ho








ch 
n

thymine
p

n

h

n



n




n
n

ch  



h

oh

ch 

adenine

n
h


p

ho




figure    portion dna molecule 

figure    scene analysis example 
   



fisubstructure discovery

f



k

x

l



p



figure     possible vertices labels 

l

l
l

l

l

l

l

l



l

l




l







l

l

l

l

l

l

l




l



l



f
l

l



figure     portion graph representing scene figure   
one  d picture  subdue match instances similar objects  differences instances provide additional information identification  third 
substructure discovery used compress image  replacing common interesting
substructures single vertex simplifies image description reduces amount
storage necessary represent image 
apply subdue image data  extract edge information image
construct graph representing scene  graph representation consists eight types
vertices two types arcs  edge space   vertex labels  f   a  l  t  k  x  p 
m  follow waltz labelings  waltz        junctions edges image represent
types vertices shown figure     edge arc represents edge object
image  space arc links non connecting objects together  edge arcs represent
edge scene connects two vertices  space arcs connect closest vertices
two disjoint neighboring objects  distance  curve  angle information
included graph representation  added give additional information
scene  figure    shows graph representation portion scene depicted
figure    figure  edge arcs solid space arcs dashed 
   

ficook   holder

vcc

ext pin

drain
drain
gate
n mosfet

gate
source

source
connect

drain

drain
gate
connect

gate

n mosfet

source

ext pin

gnd

figure     amplifier circuit graph representation 
      cad circuit analysis

domain  employ subdue find circuit components cad circuit data  discovery substructures circuit data valuable tool engineer attempting
identify common reusable parts circuit layout  replacing individual components
circuit description larger substructure descriptions simplify representation
circuit 
data circuit domain obtained national semiconductor  consists set components making circuit output cadence design system 
particular circuit used experiment portion analog to digital converter  figure    presents circuit amplifier gives corresponding graph
representation 
      artificial domain

final domain  artificially generate graphs evaluate subdue s ability discover
substructures capable compressing graph  four substructures created varying
sizes randomly selected vertices edges  see figure      name substructure
ects number vertices edges graph representation  next  substructures embedded larger graphs whose size    times size substructure 
graphs vary across four parameters  number possible vertex edge labels  one
times two times number labels used substructure   connectivity
substructure      external connections   coverage instances           
   

fisubstructure discovery

e 
e 

e 

n 

n 

e 
n 

e 

n 

n 

n 
e 

n 

e 
e 
n 

e 
n 

e 
n 

e 
n 

e 

e 

n 

n 

n 

n 

e 

e 
e 
n 

e 
n 

n 

e 

e 
n 

n 

e 
n 

n 

e 

e 
e 
e 

figure     four artificial substructures used evaluate subdue 

amount distortion instances         distortions   yields total   
graphs     different substructure  

    experimental results
      experiment    data compression

first experiment  test subdue s ability compress structural database  using
beam width   subdue s pruning mechanism  applied discovery algorithm
databases mentioned above  repeat experiment match thresholds
ranging         increments      table   shows description length  dl 
original graph  description length best substructure discovered subdue 
graph
value compression  compression defined dldlofofcompressed
original graph   figure    
shows actual discovered substructures first four datasets 
seen table    subdue able reduce database slightly
larger    original size best case  average compression value
domains  treating artificial graphs one value        results
experiment demonstrate substructure discovered subdue significantly
reduce amount data needed represent input graph  expect compressing
graph using combinations substructures hierarchies substructures realize
even greater compression databases 
   

ficook   holder

database
dloriginal thresholdoptimal dlcompressed compression
rubber
      
   
     
    
cortisone
      
   
      
    
dna
       
   
       
    
pencils
       
   
      
    
cad   m 
       
   
      
    
cad   s segdec
       
   
       
    
cad   s drvblk
        
   
       
    
cad   blanksub
       
   
       
    
cad   and 
      
   
      
    
artificial  avg     graphs         
           
       
    
table    graph compression results 

ch  

h

ch 







c
c

c

c

c

ch

ch
 

 

 a 

c

c

 b 

c
l



 c 



 d 

figure     best substructure  a  rubber database   b  cortisone database   c  dna
database   d  image database 

   

fisubstructure discovery

figure     benzene ring discovered subdue 
      experiment    re discovery known substructures using background
knowledge

another way evaluating discovery process evaluate interestingness
discovered substructures  determination value change domain
domain  result  second set experiments test subdue s ability discover
substructures already labeled important experts domains
consideration 
chemical compound domain  chemists frequently describe compounds terms
building block components heavily used  example  rubber compound
database shown figure    compound made chain structures
labeled chemists isoprene units  subdue s ability re discover structure
exemplified figure   a  substructure  discovered using mdl principle
extra background knowledge  represents isoprene unit 
although subdue able re discover isoprene units without extra background
knowledge  substructure affording compression always interesting important substructure database  example  cortisone database
benzene ring consists ring carbons discovered using mdl
principle  however  additional background rules used increase chance
finding interesting substructures domains  case cortisone compound 
know interesting structures exhibit characteristic closure  therefore 
give strong weight       compactness background rule use match threshold
    allow deviations benzene ring instances  resulting output  subdue
finds benzene ring shown figure    
way  use background rules find pencil substructure
image data  image figure   viewed  substructure interest
pencil various forms  however  substructure afforded compression
make entire pencil  know pencils high degree closure
coverage  weights rules set      weights  subdue
able find pencil substructure shown figure    tested match thresholds
        

   hierarchical concept discovery

substructure discovered  instance substructure input graph
replaced single vertex representing entire substructure  discovery procedure
repeated compressed data set  resulting new interesting substructures 
newly discovered substructures defined terms existing substructure concepts 
substructure definitions form hierarchy substructure concepts 
   

ficook   holder

l

l




l

figure     pencil substructure discovered subdue 

hierarchical concept discovery adds capability improve subdue s performance  subdue applied large input graph  complexity algorithm
prevents consideration larger substructures  using hierarchical concept discovery  subdue first discover smaller substructures best compress data  applying
compression reduces graph manageable size  increasing chance
subdue find larger substructures subsequent passes database 
subdue selects substructure  vertices comprise exact instances
substructure replaced graph single vertex representing discovered
substructure  edges connecting vertices outside instance vertices inside instance
connect new vertex  edges internal instance removed  discovery
process applied compressed data  hierarchical description concepts
particularly desired  heavier weight given substructures utilize previously
discovered substructures  increased weight ects increased attention substructure  figure    illustrates compressed rubber compound graph using substructure
shown figure   a 
demonstrate ability subdue find hierarchy substructures  let system make multiple passes database represents portion dna molecule 
figure   shows portion two chains double helix  using three pairs bases
held together hydrogen bonds  figure    shows substructures found subdue
three passes data  note that  third pass  subdue linked
together instances substructure second pass find chains double
helix 
although replacing portions input graph discovered substructures compresses data provides basis discovering hierarchical concepts data 
substructure replacement procedure becomes complicated concepts inexact
instances discovered  inexact instances discovered concept replaced
single vertex data  distortions graph  differences instance
graph substructure definition  must attached annotations vertex label 
   

fisubstructure discovery

highest valued substructure

ch  

h

 
 

c

c
ch

ch

 

 

compressed graph using discovered substructure

g

s 

 

ch

ch

c
 

c
 

ch

ch

 

 
c

ch  

ch

h

 

c
ch

s 

s 

ch

h

 

 

s 


 

c

c
ch

ch

 

 

ch

ch

 

 

c

c
ch  

h

h

 

ch

 

c
h

figure     compressed graph rubber compound data 

   

c
ch

 

ficook   holder

highest valued substructure
first pass

ch 

s   




highest valued substructure
second pass

s 

c

ch 



s   

 


p
p


ch 

highest valued substructure
third pass





s 

p

oh

oh


 

s   

ch 



s 

oh



s 

oh




p



oh

ch 




p

oh


figure     hierarchical discovery dna data 

   

fisubstructure discovery

   conclusions

extracting knowledge structural databases requires identification repetitive substructures data  substructure discovery identifies interesting repetitive structure
structural data  substructures represent concepts found data means
reducing complexity representation abstracting instances substructure  shown minimum description length  mdl  principle used
perform substructure discovery variety domains  substructure discovery process
guided background knowledge  use inexact graph match allows
deviation instances substructure  substructure discovered  instances
substructure replaced concept definition  affording compression
data description providing basis discovering hierarchically defined structures 
future work combine structural discovery discovery concepts using linearbased representation autoclass  cheeseman  kelly  self  stutz  taylor    freeman 
       particular  use subdue compress data fed autoclass 
let subdue evaluate interesting structures classes generated autoclass 
addition  developing parallel implementation autoclass   subdue
system enable application substructure discovery larger structural databases 

acknowledgements

project supported nasa grant nas         authors would thank
mike shay national semiconductor providing circuit data  would
thank surnjani djoko tom lai help project  thanks
reviewers numerous insightful comments 

references

bunke  h     allermann  g          inexact graph matching structural pattern recognition  pattern recognition letters                 
cheeseman  p   kelly  j   self  m   stutz  j   taylor  w     freeman  d          autoclass 
bayesian classification system  proceedings fifth international workshop
machine learning  pp        
conklin  d     glasgow  j          spatial analogy subsumption  proceedings
ninth international machine learning workshop  pp          
derthick  m          minimal encoding approach feature discovery  proceedings
ninth national conference artificial intelligence  pp          
fisher  d  h          knowledge acquisition via incremental conceptual clustering  machine
learning                 
fu  k  s          syntactic pattern recognition applications  prentice hall 
holder  l  b   cook  d  j     bunke  h          fuzzy substructure discovery  proceedings
ninth international machine learning conference  pp          
   

ficook   holder
holder  l  b     cook  d  j          discovery inexact concepts structural data 
ieee transactions knowledge data engineering                 
jeltsch  e     kreowski  h  j          grammatical inference based hyperedge replacement  fourth international workshop graph grammars application
computer science  pp          
leclerc  y  g          constructing simple stable descriptions image partitioning  international journal computer vision                
levinson  r          self organizing retrieval system graphs  proceedings
second national conference artificial intelligence  pp          
michalski  r  s     stepp  r  e          learning observation  conceptual clustering 
michalski  r  s   carbonell  j  g     mitchell  t  m   eds    machine learning 
artificial intelligence approach  vol  i  pp           tioga publishing company 
miclet  l          structural methods pattern recognition  chapman hall 
pednault  e  p  d          experiments applying inductive inference principles
surfa ce reconstruction  proceedings international joint conference
artificial intelligence  pp            
pentland  a          part segmentation object recognition  neural computation    
      
prather  r          discrete mathemetical structures computer science  houghton
min company 
quinlan  j  r     rivest  r  l          inferring decision trees using minimum description length principle  information computation              
rao  r  b     lu  s  c          learning engineering models minimum description length principle  proceedings tenth national conference artificial
intelligence  pp          
rissanen  j          stochastic complexity statistical inquiry  world scientific publishing
company 
schalkoff  r  j          pattern recognition  statistical  structural neural approaches 
john wiley   sons 
segen  j          graph clustering model learning data compression  proceedings
seventh international machine learning workshop  pp         
thompson  k     langley  p          concept formation structured domains  fisher 
d  h     pazzani  m   eds    concept formation  knowledge experience unsupervised learning  chap     morgan kaufmann publishers  inc 
waltz  d          understanding line drawings scenes shadows  winston  p  h 
 ed    psychology computer vision  mcgraw hill 
   

fisubstructure discovery
wertheimer  m          laws organization perceptual forms  ellis  w  d   ed   
sourcebook gestalt psychology  pp           harcourt  brace company 
winston  p  h          learning structural descriptions examples  winston  p  h 
 ed    psychology computer vision  pp           mcgraw hill 
yoshida  k   motoda  h     indurkhya  n          unifying learning methods colored
digraphs  proceedings learning knowledge acquisition workshop
ijcai    
zahn  c  t          graph theoretical methods detecting describing gestalt clusters 
ieee transactions computers                

   


