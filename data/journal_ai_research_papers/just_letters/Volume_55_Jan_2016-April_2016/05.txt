journal of artificial intelligence research                  

submitted        published      

large scale election campaigns 
combinatorial shift bribery
robert bredereck

robert bredereck tu berlin de

tu berlin 
berlin  germany

piotr faliszewski

faliszew agh edu pl

agh university of science and technology 
krakow  poland

rolf niedermeier
nimrod talmon

rolf niedermeier tu berlin de
nimrodtalmon   gmail com

tu berlin 
berlin  germany

abstract
we study the complexity of a combinatorial variant of the shift bribery problem
in elections  in the standard shift bribery problem  we are given an election where
each voter has a preference order over the set of candidates and where an outside agent 
the briber  can pay each voter to rank the bribers favorite candidate a given number of
positions higher  the goal is to ensure the victory of the bribers preferred candidate  the
combinatorial variant of the problem  introduced in this paper  models settings where it is
possible to affect the position of the preferred candidate in multiple votes  either positively
or negatively  with a single bribery action  this variant of the problem is particularly
interesting in the context of large scale campaign management problems  which  from the
technical side  are modeled as bribery problems   we show that  in general  the combinatorial variant of the problem is highly intractable  specifically  np hard  hard in the
parameterized sense  and hard to approximate  nevertheless  we provide parameterized
algorithms and approximation algorithms for natural restricted cases 

   introduction
we study the computational complexity of election campaign management for the case
where campaign actions  such as airing a tv advertisement  launching a web based campaign  or organizing meetings with voters  may have large scale effects which affect multiple
voters  further  we are interested in settings where these actions can have both positive effects  for example  some voters may choose to rank the promoted candidate higher because
they find arguments presented in a given advertisement appealing  as well as negative ones
 for example  because some other voters find the advertisement to be too aggressive   thus 
in our setting  the two major issues faced by a campaign manager are  a  choosing actions
c
    
ai access foundation  all rights reserved 

fibredereck  faliszewski  niedermeier    talmon

that positively affect as many voters as possible and  b  balancing the negative effects of
campaigning actions  for example  by concentrating these negative effects on voters who
disregard the promoted candidate anyway  
our research falls within the field of computational social choice  a subarea of multiagent
systems  we use the standard election model  where we are given a set c of candidates
and a collection v of voters  each represented by her preference order  that is  a ranking of
the candidates from the most preferred one to the least preferred one   we assume that we
know the preferences of all the voters  while having such perfect knowledge is impossible
in practice  this assumption is a convenient simplification that models the fact that we may
have  approximate  information from preelection polls or some other sources 
we consider two voting rules  the plurality rule  where we pick the candidate who
is ranked first by most voters  and the borda rule  where each candidate c gets from
each voter v as many points as there are candidates that v prefers c to  and we pick the
candidate with the most points   these rules are chosen because the plurality rule is the
most widespread rule in practice and because the borda rule is very well studied in the
context of campaign management 
within computational social choice  the term campaign management  introduced in
elkind  faliszewski    slinko        elkind   faliszewski        is an alternative name for
the bribery family of problems  introduced in faliszewski  hemaspaandra    hemaspaandra      a  for the cases where one focuses on modeling actions available during election
campaigns  as a result of money spent by a campaign manager  some of the voters change
their votes  in this paper we study campaign management through the shift bribery
problem  elkind et al         elkind   faliszewski        bredereck  chen  faliszewski 
nichterlein    niedermeier      a  bredereck  faliszewski  niedermeier    talmon        
in shift bribery we have a candidate p who we want to win  for each voter v we have a
price v  i  for which this voter is willing to shift p forward by i positions in her preference
order    and we ask for the lowest cost of ensuring that p is a winner  see section     for
references to other campaign management problems  
the shift bribery problem has one major drawback as a model for campaign management  it is incapable of capturing large scale effects of campaign actions  in particular 
if one puts forward a tv spot promoting a given candidate  then some voters will react
positively and rank the candidate higher  some will be oblivious to it  and some will react
negatively  by ranking the candidate lower  shift bribery cannot model such correlated
effects  in this paper we introduce and study the combinatorial shift bribery problem  allowing campaign actions to have effects  positive or negative  on whole groups of
voters 
we are interested in understanding how a more realistic model of campaign management
affects the complexity of the problem  indeed  shift bribery is  computationally  a very
well behaved problem  for example  for the plurality rule it is solvable in polynomial time
and for the borda rule it is np complete  elkind et al          but there is a polynomial time
  approximation algorithm  elkind et al         elkind   faliszewski        and there are
fixed parameter  fpt  algorithms  either exact or capable of finding solutions arbitrarily
close to the optimal ones  bredereck et al       a   in this work  we ask to what extent
   of course  this price does not necessarily reflect a direct money transfer to the voter  but rather the cost
of convincing the voter to change his or her mind 

   

ficombinatorial shift bribery

do we retain these good computational properties when we allow large scale effects  the
results are surprising both positively and negatively 
   combinatorial shift bribery becomes both np complete and w    hard even for
the plurality rule  even for very restrictive choice of parameters  even if the correlated
effects of particular campaign actions are limited to at most two voters  moreover 
our hardness results imply that good  general approximation algorithms do not exist
when we allow negative effects of campaign actions 
   in spite of the above  it is still possible to derive relatively good  approximation 
algorithms  both for the plurality rule and for the borda rule  provided that we
restrict the effects of the campaign actions to be only positive and to either only
involve few voters each  or to only involve groups of consecutive voters  with respect
to an ordering over the voters which might correspond  for example  to time  
our results are summarized in table   in section    with the generality of our problem
and its combinatorial nature it is natural that we obtain many hardness results  yet  their
extent and strength is surprising  and so is the fact that we also find a nontrivial landscape
of tractable cases 
    related work
our work builds on top of two main research ideas  first  on studying campaign management bribery problems  and  second  on studying combinatorial variants of election
problems 
the study of the computational complexity of bribery in elections was initiated by
faliszewski et al       a   and continued by a number of researchers  faliszewski  hemaspaandra  hemaspaandra    rothe      b  hazon  lin    kraus        mattei  goldsmith 
  klapper      a  mattei  pini  rossi    venable      b   elkind et al         and elkind
and faliszewski        realized that the formalism of election bribery problems is useful
from the point of view of planning election campaigns  in particular  they defined the
swap bribery problem and its restricted variant  shift bribery  in the former it is possible  at a given price  to swap any two adjacent candidates in a given vote  in the latter 
we are only allowed to shift the preferred candidate forward  various problems  modeling
different flavors of campaign management  have been studied  including  for example  the
possibility to alter the number of approved ranked candidates  baumeister  faliszewski 
lang    rothe        faliszewski  reisch  rothe    schend        schlotter  faliszewski 
  elkind         different  positive  applications of bribery problems include  for example 
the margin of victory problem  where the goal of the briber is to prevent some candidate from winning  if it is possible to do so at low cost  then this suggests that the election
could have been tampered with  cary        magrino  rivest  shen    wagner        xia 
      reisch  rothe    schend        
from our point of view  the most related works are those of elkind et al          elkind
and faliszewski         bredereck et al       a         and dorn and schlotter        
the former ones study shift bribery  which we generalize  parameterized complexity of
shift bribery is studied in bredereck et al       a  while shift bribery for multiwinner
   

fibredereck  faliszewski  niedermeier    talmon

elections are studied in bredereck et al          whereas the work of dorn and schlotter
       pioneers the use of parameterized complexity analysis for  swap  bribery problems 
our work is largely inspired by that of bulteau  chen  faliszewski  niedermeier  and
talmon        and chen  faliszewski  niedermeier  and talmon         who introduced and
studied combinatorial variants of election control  election control is a very well studied
topic in computational social choice  initiated by bartholdi  tovey  and trick        and
then studied by numerous researchers  we point the readers to faliszewski  hemaspaandra 
  hemaspaandra        faliszewski   rothe        for a detailed account   briefly put 
control problems model attempts at changing the election results by changing their structure  the standard types of control include adding  deleting  and partitioning candidates or
voters  control problems  especially those related to adding and deleting voters  are quite
relevant to the issues of campaign management  and  indeed  in section   we do show a connection between combinatorial shift bribery and  combinatorial  control by adding
voters  bulteau et al         
the idea of combinatorial shift bribery is somewhat related to the problem of lobbying
in multiple referenda  as introduced by christian  fellows  rosamond  and slinko       
 parameterized study was provided in bredereck  chen  hartung  kratsch  niedermeier 
suchy    woeginger      b  probabilistic variant was studied  also in the parameterized
sense  in binkele raible  erdelyi  fernau  goldsmith  mattei    rothe         there  we
have a number of yes no elections and the goal is to ensure that for each of these election
a majority of the voters vote yes  each single lobbying action can convince one voter to
vote yes in all the elections  in combinatorial shift bribery we have a single election and
a single action can affect multiple voters  whereas in the lobbying problem we have multiple
elections but each action affects only one voter 
we stress that our use of the term combinatorial variants of election problems is
different than the one used in the well established line of work regarding combinatorial
candidate spaces  see lang   xia        and further works  for example  boutilier  brafman 
hoos    poole        conitzer  lang    xia        mattei et al       b   in our work we use
the term combinatorial to refer to the combinations of voters affected by each bribery
action 
    organization of the paper
after providing some preliminaries in section    we give the formal definition of the combinatorial shift bribery problem in section    in section   we give an overview of our
results  we shed light on some connections between combinatorial shift bribery and
the problem of combinatorial control in section    then  in section    we present
a series of strong hardness results covering all our classes of shift actions for very restrictive sets of parameters  for example  many of our results already apply to the case of two
candidates   in section    we develop several exact algorithms for special cases of combinatorial shift bribery  while in section   we describe our approximation algorithms
for combinatorial shift bribery  some of our proofs are available in the appendices
 either when a given proof relies on ideas already presented in other proofs  oras in the
case of theorem  when the proof is particularly involved   we end with conclusions in
section   
   

ficombinatorial shift bribery

   preliminaries
in this section  we briefly describe our model of elections  define the two voting rules that
we study  and review basic concepts from parameterized complexity 
    elections
an election e    c  v   consists of a set c    c            cm   of candidates and of a collection
v    v            vn   of voters  each voter is represented through her preference order  that is 
a linear ranking of the candidates from the most preferred one to the least preferred one 
we use voters and preference orders interchangeably  for example  if c    c    c    c     then
voter v  may have preference order v    c   c   c  to indicate that she likes c  best  then
c    and then c   for clarity  we treat the voters as females and the candidates as males  
we assume that there is an arbitrary  but fixed  canonical order over the set of candidates  for example  one could order the candidates lexicographically by their names   for


a subset a  c of candidates  writing a within a preference order means listing the can

didates from a in this canonical order  and writing a means listing them in the reverse of
this order 
    voting rules
a voting rule r is a function that  given an election e    c  v    outputs a set r e   c
of  tied  election winners  each candidate c  r e  is said to be an r winner of the
election e  we consider two election rules  the plurality rule and the borda rule  both
assign points to candidates and output those with the highest score  under the plurality
rule  each candidate receives one point for each voter that ranks him first  under the borda
rule  each candidate receives i points for each voter that prefers this candidate to exactly i
other ones 
we use the nonunique winner model  that is  all the candidates selected by a given
voting rule are viewed as equally successful winners  in practice  of course  one has to use
some sort of a tie breaking rule to resolve the situation  but disregarding ties simplifies the
analysis  however  an interested reader should consult papers on the effects of tie breaking
on the complexity of election problems  e g  obraztsova   elkind        obraztsova  elkind 
  hazon        
    parameterized complexity
we assume familiarity with standard notions regarding algorithms and complexity theory 
but briefly review notions regarding parameterized complexity theory  downey   fellows 
      flum   grohe        niedermeier        
in parameterized complexity theory we measure the complexity of a given problem
with respect to both the input size and a particular parameter of the problem  typical
parameters for election problems include the number of candidates  the number of voters 
and the solution size  for example  the number of campaign actions one can perform  see
betzler  bredereck  chen    niedermeier        for a survey of parameterized complexity
and voting   we say that a parameterized problem is fixed parameter tractable  is in fpt  if
there is an algorithm that given an input instance i with parameter k solves the problem in
   

fibredereck  faliszewski  niedermeier    talmon

g k  i o    time  where g is some computable function and  i  is the length of the encoding
of i  there is also a hierarchy of hardness classes for parameterized problems  of which the
two most important levels are formed by the classes w    and w     the most convenient
way of defining these classes is through an appropriate reduction notion and their complete
problems  specifically  we say that a parameterized problem a reduces to a parameterized
problem b if there are two computable functions  h and h    with the following properties 
given an instance i of a with parameter k  h i  outputs in fpt time  i e   in time g k  i o   
for some computable function g  an instance i   of b with parameter k    h   k   such that
i is a yes instance of a if and only if i   is a yes instance of b  in other words  h is a
many one reduction from a to b that is allowed to run in fpt time  but that is required to
output an instance whose parameter is upper bounded by a function of the input instances
parameter 
the class w    is defined as the class of problems that parameterically reduce to the
clique problem  and w    as the class of problems that parameterically reduce to the set
cover problem  where both problems are parameterized by the solution size  that is  by
the value h from their definitions  
clique
input  an undirected graph g    v  g   e g   and an integer h 
question  is there a set h of h vertices such that there is an edge between
each pair of vertices from h 
set cover
input  a universe set x  a family s of subsets of x  and an integer h 
question  is there a subset s    s of at most h subsets whose union gives x 
we sometimes consider special variants of these problems that we describe in detail
within relevant proofs 
a parameterized problem is contained in the class xp if there is an algorithm that  given
an instance i for it with parameter k  solves it in time  i g k    where g is some computable
function  it holds that fpt  w     w     xp  we point the readers interested in
further details regarding parameterized complexity theory  and the design of parameterized
algorithms  to the textbooks of downey and fellows         flum and grohe         and
niedermeier        

   the combinatorial shift bribery problem
in this section we first define the combinatorial shift bribery problem in its full
generality and  then  we describe why and how we simplify it for the remainder of our
study 
    the definition
let r be some voting rule  the definition of r combinatorial shift bribery is somewhat involved  therefore we first define some necessary components  we are given an election
e    c  v   and a preferred candidate p  c  the goal is to ensure that p is an r winner
of the election  to this end  we have a number of possible actions to choose from 
   

ficombinatorial shift bribery

let m     c  be the number of candidates in e and let n     v   be the number
of voters  a shift action f is an n dimensional vector of  possibly negative  integers 
f    f               f  n     in r combinatorial shift bribery we are given a family f  
 f            f   of shift actions  each particular shift action models a possible campaigning
action  such as airing a tv spot or organizing a meeting with the voters  the components
of a given shift action measure the effects of this action on the particular voters  for a given
subset f    f of available shift actions  we define the effect of f   on voter vi     i  n  as
p
 i 
e  i   f       fj f   fj   further  each shift action fj     j    comes with a nonnegative
integer cost w fj   for its application 
each voter vi     i  n  has her individual threshold function i   z  z describing
how shift actions affect this voter  we require that i         and that i is nondecreasing 
let f   be a collection of shift actions  after applying the shift actions from f     each voter vi
    i  n  shifts the preferred candidate p by t     positions forward if  a  e  i   f         
and  b  i  t   e  i   f       i  t       the shift is by t     positions back if  a  e  i   f         
and  b  i  t   e  i   f       i  t     
finally  we are given a nonnegative integer b  the budget pwe ask for the existence of
a collection f    f of available shift actions with total cost fj f   w fj   at most b and
such that after applying them p is an r winner of the given election  if this is the case 
then we say that f   is successful  consider the following example 
example    consider the election below  where the set of candidates is c    a  b  c  p  
the collection of voters is v    v    v    v     and p is the preferred candidate  there are three
available shift actions  each with the same unit cost  i e   w f      w f      w f         
election
v    c  b  p  a
v    b  a  c  p
v    p  a  b  c

shift actions
     
 
 
 
     
       
     
 
 
 
f 

f 

f 

the threshold functions are such that 
                                                
                                             
                                             
we use the borda rule  candidates a  b  c  and p have  respectively           and   points 
it is easy to see that applying any single shift action does not ensure ps victory  however 
applying shift actions f      f    f    results in p being a winner  the total effect of these
two shift actions is            according to the threshold functions  this means that p is
shifted forward by one position in v  and v    and is shifted back by one position in v    after
these shifts  the modified election looks as follows 
   

fibredereck  faliszewski  niedermeier    talmon

v  
v  
v  

election
 cpba
 bapc
 apbc

that is  after we apply the shift actions f      f    f     we have that candidate c has
  points  while all other candidates have   points each  thus  a  b  and p are tied as winners
and f   is indeed a successful set of shift actions 
 
formally  given a voting rule r  we define the r combinatorial shift bribery
problem as follows 
r combinatorial shift bribery
input  an election e    c  v    where c    c            cm   is the set of candidates
and v    v            vn   is the collection of voters  a set f    f            f   of shift
actions with costs w f             w f    threshold functions             n   and a nonnegative integer budget b  one of the candidates is designated as the preferred
candidate p 
question  is there a subset f    f of shift actions with total cost at most b
such that after we apply the shift actions from f   candidate p is an r winner
of the resulting election 
while this definition is quite complicated  it captures some important features of campaigning  for example  the use of threshold functions allows us to model voters who are
unwilling to change the position of the preferred candidate beyond a certain range  irrespective of the strength of the campaign  the fact that different shift actions have different
costs models the fact that particular actions  for example  airing tv spots or organizing
meetings  may come at different costs 
    relation to standard shift bribery
it is necessary to comment on the relation between our combinatorial shift bribery
problem and its non combinatorial variant  shift bribery  elkind et al         elkind  
faliszewski        
the non combinatorial variant of the shift bribery problem is defined very similarly
to the combinatorial one  but the voters have no threshold functions and instead of the
collection of shift actions and their costs  each voter vi has his or her shift bribery price
function i   the cost of shifting the preferred candidate forward by t positions in vi s
preference order is i  t   only forward shifts are allowed   we require that i         and
that the functions are nondecreasing  formally  we have the following definition  r is a
voting rule  
r shift bribery
input  an election e    c  v    where c    c            cm   is the set of candidates and v    v            vn   is the collection of voters  a collection              n   of
shift bribery price functions  and a nonnegative integer budget b  one of the
   

ficombinatorial shift bribery

candidates is designated as the preferred candidate p 
question 
is there a vector  s            sn   of natural numbers such that  a 
pn
i   i  si    b and  b  if for each voter vi we shift p forward by si positions 
then p is an r winner of the resulting election 
while intuitively it seems that r shift bribery is simpler than its combinatorial
cousin  making this observation formal requires some care 
proposition    let r be a voting rule  it holds that r shift bribery many one reduces
to r combinatorial shift bribery in polynomial time 
proof  consider an instance of r shift bribery with an election e    c  v    where
c    c            cm   and v    v            vn    with a collection of shift bribery price functions
 v            vn    and with budget b  without loss of generality  we take c  to be the preferred
candidate and denote him or her as p  we form an instance of r combinatorial shift
bribery with the same election  the same budget  and the same preferred candidate 
but where the shift actions  their costs  and voters threshold functions are constructed
as
pt
mj
 
follows  for each voter vi   we set his or her threshold function to be i  t    j    
and for each number t of positions by which it is possible to shift the preferred candidate
forward in vi s preference order  we create a shift action fi t that has a zero effect on all
voters but vi   on whom it has effect  mt   the cost
p of fi t is w fi t      t    t     
if there is a sequence  s            sn   such that ni   i  si    b and p is an r winner of
the election where for each voter vi we shift p forward by si positions  then there is also a
solution for our constructed instance of combinatorial shift bribery  if for each vi  
we use shift actions fi             fi si   then the total bribery cost is the same as in the shift
bribery instance and  after implementing the shifts  for each vi the preferred candidate is
shifted by exactly si positions 
now assume that our constructed combinatorial shift bribery instance is a yesinstance  consider some subset f   of shift actions whose total cost is at most b and which
ensure that p is the r winner of the election  and recall that each shift action can be used
at most once   for each voter vi  v   we define si to be the largest integer such that shift
actions fi             fi si all belong to f     let us fix some voter vi   we claim that after applying
the shift actions from f    in the combinatorial shift bribery instance   the preferred
candidate is shifted forward by exactly si positions  by the definition of si   it is immediate
that he or she is shifted forward by at least si positions  he or she is not shifted forward
by more positions
the following reason  the shift actions fi             fi si have total effect
p i for mj
on vi equal to sj  
 
  which is equal to i  si    by definition  shift action fi si    is not
in f     the sum of all the remaining shift actions that have an effect on vi is smaller than 
m
x
j si   

mj

 

 

ms
i  
x

 j    msi      

j  

however  i  si       i  si      msi     this means that even if we used all the shift actions
aside from fi si      in vi s preference order we still would shift p by exactly si positions 
in conclusion  this means that implementing the shift actions f   ensures that for each
voter vi we shift p forward by exactly si positions  further  for each vi we have that
   

fibredereck  faliszewski  niedermeier    talmon

w fi            w fi si     i  si    therefore  the sequence  s            sn   witnesses that the
input instance of shift bribery is a yes instance because the total cost of the shifts is
at most b  as in the combinatorial instance  and they ensure that p is a winner  as in the
combinatorial instance  
since the reduction clearly runs in polynomial time  the proof is complete 
the construction from the above proof is somewhat involved  especially if one takes into
account that it simply shows that our combinatorial shift bribery problem indeed
generalizes the much simpler  non combinatorial  one  nonetheless  its somewhat contrived
use of threshold functions seems to be necessary  indeed  if in the combinatorial shift
bribery problem we restricted the shift actions to have positive entries for exactly one
voter each  and we used simple linear threshold functions  then we would obtain shift
bribery for the case of convex price functions  bredereck et al       a   this is a very
general variant of the shift bribery problem for which  for example  all the np hardness
results of elkind et al         hold  as shown in bredereck et al       a   but nonetheless
not the most general one 
    a general hardness result
it turns out that the combinatorial shift bribery problem  as defined in section    
above  is so general that it allows for the following  sweeping  hardness result  
theorem    for both the plurality rule and the borda rule  combinatorial shift
bribery is np hard even for five voters and two candidates and no budget constraints 
for the borda rule  combinatorial shift bribery is np hard also for three voters and
four candidates 
proof  we reduce from the following  weakly np hard  variant of the subset sum problem
 it is a simple exercise to show its np hardness through a reduction from the classic subset
sum problem  
subset sum  zero variant 
input  a set a     a            an   of integers 
p
question  is there a nonempty set a   a such that ai a  ai     
given an instance a    a            an   of subset sum  zero variant   we construct
an instance of plurality combinatorial shift bribery with two candidates  since the
plurality rule and the borda rule coincide for elections with two candidates  our hardness
result transfers to borda combinatorial shift bribery  and  in fact  to almost all
natural voting rules  
we construct the following election 
   note  however  that we prove weak np hardness  that is  our result may not hold if we assume that all
occurring numbers are encoded in unary  on the contrary  all other hardness proofs in this paper give
strong hardness results and are independent of such number encoding issues 

   

ficombinatorial shift bribery

election
v    p  d
v    p  d
v    d  p
v    d  p
v    d  p

shift actions



a 
an




a  
an 








           




   
   




 
 


f 

   

fn

that is  for each element ai  a  the set f of shift actions contains one shift action fi
with effect ai on v    effect ai on v    effect   on v    and no effect on the other two voters 
the voter threshold functions are as follows  candidate p is shifted to the last position
for v  and v  if the effect on these voters is negative  that is                     
candidate p is shifted to the top position for the third voter if the effect is positive  that
is              we set the cost of each shift action to be one and we set our budget to be
n  thus the budget allows us to pick any combination of the shift actions 
for the if direction  let a   a be a non empty subset whose element wise sum equals
zero  after applying f       fi   ai  a     p is a winner  since a  sums up to zero  there
is no effect on the first two voters  the effect on the third voter is positive  because a  is
non empty  thus p is preferred by three of the five voters and wins the election 
for the only if direction  let f    f be a subset of shift actions that makes p a winner 
then  f   must be non empty because p does not win the initial election  we claim that
the element wise
sum of a      ai   fi  f     is zero  for the sake of contradiction  assume
p
that ai a  ai       if the sum were negative  then there would be a negative effect on the
first voter  d would be preferred by three voters out of five  and d would win the election 
if the sum were positive  then we would have the same effect with the second voter taking
the role of the first one 
using a very similar idea  we can show how to reduce subset sum  zero variant 
to borda combinatorial shift bribery with three voters and four candidates  given
the input as before  we construct the following instance 
election
v    p  d   d   d 
v    p  d   d   d 
v    d   d   d   p

shift actions



 a 
 an




 a          an 




 
 


f 

   

fn

that is  for each element ai  a  f contains one shift action fi with effect  ai on v   
effect  ai on v    and effect   on v    each voter vi has the same threshold function
i  t    t  in effect  p is shifted to the last position of the first and of the second voter if the
effect on these voters is negative  and is shifted to the top position of the third vote if the
effect there is positive  each shift action has the same unit cost  and we set the budget to
n  i e   we can pick any combination of the shift actions  
   

fibredereck  faliszewski  niedermeier    talmon

observe that d  is the original winner of the election and obtains seven points whereas
p obtains only six points 
for the if direction  let a   a be a non empty subset whose element wise sum equals
zero  if we apply shift actions f       fi   ai  a    then p becomes a winner  since a  sums
up to zero  there is no effect on the first two voters  the effect on the third voter is positive
because a  is non empty  thus  p is the most preferred candidate for all the voters and
wins the election 
for the only if direction  let f    f be a subset of shift actions that makes p a winner 
then  f   must be non empty because p does not win the initial election  we show that
the element wise
sum of a      ai   fi  f     is zero  for the sake of contradiction assume
p
that ai a  ai       if the sum were negative  then there would be a negative effect on
the first voter and p would obtain six points  whereas d  would obtain seven  if the sum
were positive  we would have the same effect with the roles of the first and the second voter
switched 
effectively  theorem   shows that studying large scale effects of campaign actions
through the full fledged r combinatorial shift bribery problem leads to a hopelessly
intractable problem  we have hardness even for elections with both a fixed number of
candidates and a fixed number of voters 
    restricted variants of combinatorial shift bribery
given the hardness results from theorem    throughout the remainder of the paper we
focus on restricted variants of the combinatorial shift bribery problem  we assume
the individual threshold functions to be the identity functions  that is  for each voter i and
each integer t  it holds that i  t    t   we assume each shift action to have the same unit
cost  and we consider restricted types of shift actions  all these assumptions require some
additional discussion 
the restrictions on the threshold functions and on the costs of shift actions seem to
be very basic and  in fact  are even satisfied by the instances built in the proof of theorem    the reason for assuming them is that  on the one hand  it seems beyond point to
study instances more involved than those from theorem    and  on the other hand  they
interact with other restrictions  leading to tractable cases  but  they do have important
consequences 
first  using identity threshold functions means that we model societies that are prone to
propaganda  with identity threshold functions we cannot differentiate between voters that
are more or less responsive to our actions  second  assuming that every shift action has the
same unit cost models settings where the costs of particular campaign actions are similar
enough that small differences between them are irrelevant  the actual number of actions
we choose to perform is a sufficiently good approximation of the real cost  this is true 
for example  for the case of organizing meetings with voters  which often have comparable
prices  it is also likely to be the case when shift actions model actions such as airing tv
spots  each spot has a similar cost to produce broadcast  the greatest disadvantage of
assuming unit costs is that we no longer can model mixed campaigns that use actions of
several different types  meetings with voters  tv spots  web campaigns  etc   
   

ficombinatorial shift bribery

the restrictions on the types of allowed shift actions have even greater impact on the
nature of campaigns that we study  we study the following classes of shift actions 
unrestricted shift actions  here we put no restrictions on the allowed shift actions 
this models the most general  and  naturally  the least tractable  setting 
bounded effect shift actions  here we consider a parameter  and require that for
each shift action f    f               f  n    it holds that for each j     j  n   we have
 f  j       this is still a very general setting  where we assume that each campaigning
action has only a limited impact on each voter 
unit effect shift actions  this is a class of bounded effect shift actions for       for
each given voter  applying a given shift action can either leave the preferred candidate
p unaffected or it can shift p one position up or down 
interval shift actions  this is a subclass of unit effect shift actions that never affect
voters negatively  and where for each shift action there is an interval of voters that
are affected positively  the interval is with respect to the order of the voters in the
input collection v    this class of shift actions models campaigns associated with a
time window where certain voters can be reached  or campaigns that are local to given
neighborhoods   for example  that include putting up multiple posters  organizing
meetings  etc    we speak of  z  interval shift actions to mean interval shift actions
where each shift action affects at most z voters 
unit effect on two voters shift actions  this is a subclass of unit effect shift actions
that affect two voters at most  we focus on shift actions that affect both voters
positively  denoted as          shift actions  and that affect one voter positively and
one voter negatively  denoted as         shift actions  the reason for studying these
families is not because they model particularly natural types of election campaigns 
but rather to establish the limits of tractability for our problem  for example  we
consider         shift actions to understand how intractable are shift actions that
have negative effects          shift actions are the simplest shift actions of this type
that may be useful in the campaign  one would never deliberately use a shift action
that only affects the preferred candidate negatively  

figure   presents the difference between bounded effect shift actions  unit effect shift
actions  unit effect on two voters shift actions  and interval shift actions graphically  as
we discuss in the next section  the type of allowed shift actions has a huge impact on the
computational complexity of our problem 
   in the neighborhood scenario  we take the simplified view that a society of the voters lives on a line 
of course  it would be more natural to take two dimensional neighborhoods into account  we view this
as an interesting direction for future research  but for the time being we consider as simple settings as
possible  in the time window scenario  a natural ordering of the voters is the point of time when they
cast their votes or can be affected by the campaign 

   

fibredereck  faliszewski  niedermeier    talmon

 

 
 

 

 
 

 
 

 

 

 

 

 

          
 

 

 

 

unit effect
 

 

 
z
 
 

       

 
 

        

 

 z

figure    restrictions on the shift actions  we visualize  from left to right  top to bottom  
a shift action with maximum effect      of a single shift action and maximum number
     of voters affected by a single shift action  a unit effect shift action  a shift action with
effect of    on one voter and effect of   on another voter          a shift action with
effect of    on two voters           and a shift action with effect of    on an interval
of size z  z   the intended interpretation is that voters are listed vertically  from top to
bottom 

   overview of results
we now provide a high level overview of our results  it turns out that even with rather strong
restrictions in place  that is  the restrictions defined in section       combinatorial shift
bribery is computationally hard in most settings  what we present here is our quest for
understanding the border between tractability and intractability of combinatorial shift
bribery  to this end  we employ the following techniques and ideas 
   we seek both regular complexity results  np hardness results  and parameterized
complexity results  fpt algorithms  w    hardness and w    hardness results  and
xp algorithms  
   we consider structural restrictions on the sets of available shift actions 
   we seek approximation algorithms and inapproximability results  that is  approximation hardness results  
   

ficombinatorial shift bribery

for our parameterized complexity results  we consider the following parameters   a  the
number n of the voters   b  the number m of the candidates   c  the budget b   d  the
maximum effect  of a single shift action  and  e  the maximum number  of voters affected
by a single shift action 
all our discussions of  in approximability of combinatorial shift bribery regard
the task of minimizing the cost of ensuring the preferred candidates victory  this means
that  for example  a   approximation algorithm has to decide if it is possible to ensure the
preferred candidates victory at all  and  if so  it has to output a successful set of shift
actions with total cost at most twice as high as the optimal one 
we summarize our results in table    these results show that combinatorial shift
bribery is highly intractable  theorems       and    show that the problem is computationally hard  in terms of np hardness  w    hardness  and inapproximability even by fpt
algorithms  for both the plurality rule and the borda rule  even for various very restricted
forms of unit effect shift actions  even for two candidates  this means that  in essence  the
problem is hard for all natural voting rules  since for two candidates all natural voting rules
boil down to the plurality rule 
further  theorem   and theorem    show that our problems are w    hard even if we
take the number of candidates and the budget as a joint parameter  even for extremely
restricted shift actions  the problem remains hard  for the case of the borda rule  when
parameterized by the number of voters  theorem     on the contrary  for the case of
plurality and parameterization by the number of voters we obtain tractability 
we obtain several approximability results  in essence  these results are possible only for
the cases where shift actions do not have negative results  an intuitive reason for this fact
is that when shift actions have negative effects  then it is computationally hard to check
whether the preferred candidate can win even without any restrictions on the budget 
all our approximation algorithms are based on the results for the non combinatorial
variant of the problem  due to elkind et al         and elkind and faliszewski        
either we use the non combinatorial algorithms directly  as subroutines in our algorithms 
or we derive our results by plugging our combinatorial shift bribery specific blocks
into the framework developed by elkind et al         and elkind and faliszewski        

   connection to combinatorial control
the study of combinatorial variants of problems modeling ways of affecting election results
was initiated by bulteau et al          who considered combinatorial control by adding voters
 combinatorial ccav  for the plurality rule and for the condorcet rule  it turns out
that for the plurality rule we can reduce the problem of  combinatorial  ccav to that of
 combinatorial  shift bribery  for the non combinatorial variants of these problems
this does not give much since both problems are easily seen to be polynomial time solvable 
however  there are strong hardness results for plurality combinatorial ccav which we
can transfer to the case of plurality combinatorial shift bribery  formally  pluralitycombinatorial ccav is defined as follows  bulteau et al         
plurality combinatorial ccav
input  a set c of candidates with a preferred candidate p  c  a collection v
   

fibredereck  faliszewski  niedermeier    talmon

table    overview of our results  we show exact algorithms and approximation algorithms for plurality combinatorial shift bribery and for borda combinatorial
shift bribery  for different restrictions on the shift actions  see figure     results marked
by o follow from the work of elkind et al          by  follow from the work of bredereck
et al       a   by  follow from the work of elkind and faliszewski         and by  follow
from the work of bredereck et al          note that all of the variants are in xp when
parameterized by the budget b  observation    
shift actions

regular
shift bribery
 convex prices 

rule

exact complexity

approximability

plurality

poly  time solvable  o 



borda

np complete o  
in fpt for b    
w    hard for n   

unit effect

  approximable in
poly  time   o  
fpt approximation
scheme for n   

w    h for b even

inapproximable even in

if m      thm     

fpt time for b even

xp for n  prop     

if m      thm    

plurality

fpt for n  thm     



borda

w    hard for n  thm    

both

inapproximable even in
fpt time for n  cor     

       
np h even if m      thm     
both

w    h for b and
m combined  thm    

plurality
        

 z  intervals

both

inapproximable
even if m      thm    

fpt for n  thm    



w    h for b and

  approximable

m combined  thm    

in poly  time  thm     

plurality

fpt for n  thm     

borda



both

w    h for b  thm     

   

z approximable in
poly  time  thm     
 z approximable in
poly  time  thm     
  approximable in
mz time  thm     

ficombinatorial shift bribery

of registered voters  having preference orders over c   a collection w of unregistered voters  having preference orders over c   a bundling function    w   w
 for each w  w it holds that w   w    and a budget k 
question  is there a collection w    w
k voters such that p is a
s of at most
 
winner of the modified election  c  v  w  w    w    
intuitively  for each unregistered voter w  w   we have her bundle   w   given explicitly
in the input   such that when we add w to the election  for example  by somehow convincing
her to vote   all the voters in her bundle also join the election  for example  people choose
to vote under an influence of a friend  
theorem    plurality combinatorial ccav is polynomial time many one reducible to
plurality combinatorial shift bribery  for an instance of plurality combinatorialccav with m candidates  the reduction outputs an instance of plurality combinatorial
shift bribery with m     candidates 
proof  consider an input instance of plurality combinatorial ccav with candidate set
c  collection of registered voters v   collection of unregistered voters w   bundling function
  preferred candidate p  c  and limit k on the number of voters that we can add  we
form an instance of plurality combinatorial shift bribery  as follows 
we form a candidate set c     c   d   where d is some new candidate  we form the
set of voters v   in the following way 
   for each voter v  v   we include v in v     with the preference orders extended to rank
d last 
   for each voter w  w that ranks p first  we include in v   two voters  xw   with
preference order of the form d  p       and x w   with preference order of the form
p  d   
   for each voter w  w that ranks some candidate c  c    p  first  we include in
v   voter xw with preference order p  c       and voter x w with preference order
d  p   
   we include   w   c  voters in v   with preference orders such that we will achieve the
following effects   a  for each c  c with score s c  in election  c  v    c is ranked first
by   w     s c  voters in v     and  b  d is ranked first by exactly   w   voters in v     to
achieve these effects  for each c  c    p  we include   w   voters that rank c first  we
include   w   voters that rank p first  and we include  w   voters that rank d first 
for each voter w  w   we introduce a shift action fw with the following effects  for each
  w   if w  ranks p first then fw has effect   on xw   but not on x w    and if w  ranks
some candidate in c    p  first  then fw has effect   on xw  and effect    on x w   all other
entries are zeros   this finishes the construction  we provide the proof of correctness after
the following example of the reduction 

w 

example    consider the following input to plurality combinatorial ccav  where the
preferred candidate is p and the budget k is   
   

fibredereck  faliszewski  niedermeier    talmon

registered voters
v    p  a

unregistered voters
w    p  a

bundling function
 w       w    w   

v    a  p

w    a  p

 w       w   

v    a  p

w    p  a

 w       w    w   

we construct the following input to plurality combinatorial shift bribery  notice
that the number of entries in each shift action is    
election
v    p  a  d
v    a  p  d
v    a  p  d
xw    d  p  a
x w    p  d  a
xw    p  a  d
x w    d  p  a
xw    d  p  a
x w    p  d  a
   dummies   a    
  dummies   p    
  dummies   d    

shift actions
     
 
 
 
     
         
     
         
     
     
         
     
     
         
     
     
     
     
         
     
     
         
     
         
     
     
         
     
     
         
 
 
 
fw 

fw 

fw 

note that adding voter w  to the input election for plurality combinatorial ccav
results in p being a winner of the election  correspondingly  applying shift action fw  results
in p being a winner of the input election for plurality combinatorial shift bribery   
to see the correctness of our construction  note that applying a shift action corresponding to a bundle of a voter w  w has the same effect on the differences between the scores
of the candidates in c as adding the bundle  w  has in the original control instance 
more specifically  disregarding the score of d for now  we have the following  for each
w    w  which ranks p first  we have an increase of the score of p by one  while for each
w    w  which ranks some candidate c  c    p  first  we have an increase of the score of
c by one  further  the score of candidate d can never grow beyond   w   in our pluralitycombinatorial shift bribery instance and the score of p can never fall below   w   
therefore  d can never prevent p from being a winner 
thus  the reduction is correct  furthermore  the reduction can be computed in polynomial time and it outputs a plurality combinatorial shift bribery instance with one
candidate more than the input plurality combinatorial ccav instance  we also observe that the output instance uses unit effect shift actions that affect at most twice as
many voters as the largest bundle in the input instance 
   

ficombinatorial shift bribery

based on the proof of theorem   and results of bulteau et al          we obtain the
following result 
corollary    plurality combinatorial shift bribery is w     hard with respect to the
budget b even if m      it is w     hard with respect to b even for shift actions with unit
effect on up to   voters  and it is np hard even for shift actions with unit effects on up to
  voters 
proof  the result follows by applying the reduction from the proof of theorem   to the
plurality combinatorial ccav instances produced in the reductions from theorems      
and   of bulteau et al          respectively 

   hardness results
the results from the previous section show that we are bound to hit hard instances for
combinatorial shift bribery even in very restricted setting  in this section we explore
how restrictive these hard settings are  our results are organized by the type of shift actions
allowed 
    results for general unit effect shift actions
we start by considering unit effect shift actions  if the allowed effects are positive only 
then we obtain np hardness and w    hardness when parameterizing by the budget b  if
we allow also negative unit effects  then the problem gets even harder and we go beyond any
hope for an approximation algorithm  even if the approximation algorithm were allowed to
run in fpt time when parameterizing by the budget b  quite strikingly  these results hold
even if we only have two candidates 
theorem    for both the plurality rule and the borda rule  combinatorial shift
bribery is np hard and w    hard for the parameter budget b  even for two candidates
and even if each shift action has effects of either    or   on each voter 
proof  we provide a parameterized reduction from set cover  recall section       let
 s  x  h  be an instance of set cover  where s    s            sm   is a family of subsets over
the universe x    x            xn    and h is the number of sets that we can use to cover x 
we construct an instance of plurality combinatorial shift bribery with two candidates  note that  since the borda rule and the plurality rule coincide on elections with two
candidates  our hardness result transfers to borda combinatorial shift bribery 
the construction is as follows  we have p and d as the only candidates  for each
element xi  x create an element voter vi with preference order d  p  create another set
of n dummy voters all with preference order d  p  the set f of shift actions contains for
each set sj  s a function fj having an effect of    on the element voters corresponding
to the elements of the set  that is  fj  i      if xi  sj and fj  i      otherwise   finally 
set b    h  this finishes the construction  clearly  the reduction can be computed in
polynomial time  consider the following example of applying the reduction 
example    let the input to set cover be such that x    x    x    x    x    x    and s  
 s    s    s     with s               s            s            and h      we construct the
following input for plurality combinatorial shift bribery 
   

fibredereck  faliszewski  niedermeier    talmon

election
v    d  p
v    d  p
v    d  p
v    d  p
v    d  p
  dummies   d  p

shift actions
     
 
 
 
     
     
     
     
     
     
     
     
     
     
     
 

 

 

f 

f 

f 

note that  s    s    is a set cover  and  analogously  choosing f  and f  results in p being
a winner of the election 
 
it remains to show that there is a set cover of size h if and only if there is a successful
set of shift actions of size h 
for the if part  assume that there is a set cover s   of size at most h  then  applying
 
f    fj   sj  s     makes p win the election  since s   is a set cover  p will be the preferred
candidate of all n element voters and  hence  a winner of the election 
for the only if part  assume that there is a set of shift actions f    f of size at most h
whose application makes p win the election  then  p must be the preferred candidate of
all element voters in the bribed election because no shift action has effect on any dummy
voter  since there are n element voters and n dummy voters  s       sj   fj  f     is a set
cover  finally  since b   h  s   is of size at most h 
allowing also negative  but unit  effects on the voters  we can adapt our reduction from
theorem   to show a strong inapproximability result  the inapproximability result follows
since in the corresponding reduction  for yes instances  the only correct solutions use the
exact given budget 
theorem    unless w      fpt  combinatorial shift bribery is inapproximable  in
fpt time for the parameter b  for both the plurality rule and the borda rule  even for two
candidates and unit effect shift actions 
proof  we modify the reduction from theorem   to show our inapproximability result 
let  s  x  h  be a set cover instance where s    s            sm   and x    x            xn   
without loss of generality  we assume that  s    h  we construct an instance of pluralitycombinatorial shift bribery with two candidates as follows   since we have two
candidates only  the proof applies to the case of borda combinatorial shift bribery
as well  
 s 
for each element xi  x  create  s  element voters vi            vi   each with preference
order d  p  and for each set sj  s create a set voter vj  with preference order p  d 
create  s    x     s    h dummy voters  each with preference order d  p  the set f
of shift actions contains  for each set sj   a shift action fj having an effect of   on each
element voter corresponding to an element of the set and an effect of   on the set voter
corresponding to the set  finally  set b    h  this completes the construction  which is
clearly computable in polynomial time 
   

ficombinatorial shift bribery

next  we show that there is a successful set of shift actions of size h if and only if there
is a set cover of size h 
for the if part  assume that there is a set cover s   of size at most h  then  f    
 fj   sj  s     is a successful set of shift actions  since s   is a set cover  p will be the
preferred candidate of all  s    x  element voters and also the preferred candidate for at
least  s   h set voters  corresponding to the sets not from the set cover   moreover  d will
be the preferred candidate for all  s    x     s    h dummy voters and also the preferred
candidate for at most h set voters  corresponding to the sets from the set cover   hence 
either p wins or p and d tie as winners 
for the only if part  assume that there is a successful set of shift actions f    f
of size at most h  then  p must be the preferred candidate for all element voters in the
bribed election  if there were an element voter with d  p  then there would be at least
 s     further element voters with d  p  the element voters corresponding to the same
element   thus there would be in total at most  s   x      element voters and  s  set
voters that prefer p  but at least  s    x     s    h dummy voters and  s  element voters
that prefer d  since we assumed  s    h  this would mean that p is not a winner  thus 
it must be that s       sj   fj  f     is a set cover  and  due to the budget constraint  it
follows that  s      h 
finally  we show that plurality combinatorial shift bribery is inapproximable
even in fpt time when parameterized by the budget  assume  for the sake of a contradiction  that a successful set of shift actions f    f with  f       b exists  then  in the bribed
election  at least  s    x     s    h dummy voters and also  f      h     set voters prefer d 
but at most  s    x  element voters and at most  s    h      set voters prefer p  thus  d is
the unique winner  hence  any successful bribery action must be optimal with respect to
the budget and any fpt algorithm for plurality combinatorial shift bribery  parameterized by the budget  would solve the w    hard problem set cover  parameterized by
the solution size  in fpt time  a contradiction to the assumption that fpt    w    
    results for shift actions with unit effect on two voters
in the previous section we did not limit the number of voters affected by each shift action 
now we focus on the case where each unit effect shift action can affect at most two voters  first we show that combinatorial shift bribery remains np hard and hard to
approximate for         shift actions  then we provide parameterized hardness results
for both         and          shift actions  the proof is relatively similar to the one for
theorem   and so we defer it to appendix a 
theorem    unless p   np  combinatorial shift bribery is inapproximable  in
polynomial time  for both the plurality rule and the borda rule  even for two candidates and
        shift actions 
as opposed to theorem    the above result does not yield w    hardness for the parameter budget b  this is because our proof uses a reduction from set cover in which
the value of the budget is the size of the universe set x  if we insist on parameterized
hardness for unit effects on two voters  then we have to accept larger sets of candidates 
however  this increase is not too large  below we show w    hardness of combinatorial
shift bribery jointly parameterized by the budget and the number of candidates 
   

fibredereck  faliszewski  niedermeier    talmon

theorem    for both the plurality rule and the borda rule  combinatorial shift
bribery is w    hard for the combined parameter  m  b   even if we either only have
        shift actions or only have          shift actions 
proof  we have four cases to consider  we begin with the plurality rule and          shift
actions 
the plurality rule with          shift actions  we describe a parameterized reduction from the w    hard clique problem  parameterized by the solution size  to pluralitycombinatorial shift bribery with          shift actions  parameterized by  m  b  
let  g  h  be an instance of clique with v  g     u            un    and e g     e            em    
we create the following instance of plurality combinatorial shift bribery  the set
of candidates is  p   d  where d    d            dh     for each vertex ui  v  g   we cre

ate a vertex voter vi with preference order d  p  moreover  we create n    h dummy


voters with preference order p  d each  for each edge  ui   uj    e g   we create a
shift action f ui  uj   with effect   on the vertex voters vi and vj   and effect   on all other

voters  finally  we set the budget to b    h    this completes the construction  which is
computable in polynomial time  consider the following example 
example    we have the following graph  where we are looking for a clique of size h     
u 

u 

u 

u 

u 

u 

u 

we construct the following input for plurality combinatorial shift bribery 
election
v    d   d   p
v    d   d   p
v    d   d   p
v    d   d   p
v    d   d   p
v    d   d   p
v    d   d   p
  dummy   p  d   d 

shift actions
     
 
 
 
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

fu   u 

fu   u 

fu   u 

fu   u 

fu   u 

fu   u 

note that  v    v    v    form a clique of size   in the input graph for clique  and  accordingly  applying the set of shift actions  fu   u    fu   u    fu   u    results in p being the winner of
the election for plurality combinatorial shift bribery 
 
   

ficombinatorial shift bribery

without loss of generality  assume that d  is ranked first in the  arbitrary but fixed 


order d  observe that we have n  vertex voters and h dummy voters which rank d  first 
we also have n   h dummy voters which rank p first  hence  to make p win the election 
one needs h additional voters to rank p first  and  in effect  not rank d  first  
it remains to show that our constructed instance contains a successful set of shift actions f   of size h if and only if  g  h  contains a clique of size h 
for the if part  let h  v  g  be a set of h vertices forming a clique and let e    e g 
be the set of edges between the vertices from h  then  observe that f      f ui  uj    
 ui   uj    e     is a successful set of shift actions  for each vertex voter vi corresponding to
a clique vertex ui  h  candidate p is shifted h    positions forward  this means that  in
total  we have that h vertex voters rank p first and p ties as a winner of the election 
for the only if part  let f   be a successful set of shift actions  since dummy voters are
not affected by any shift action  it follows that in order to make p a winner of the election 
p must be shifted to the top position in at least h vertex voters  that is  in total  p must
be shifted h   h     positions forward  since f   is of size at most b   h    h   h      

and each shift action affects only two vertex voters  f   must be of size exactly h  affecting

exactly h vertex voters  by construction  this implies that there are h  edges in g incident
to exactly h different vertices which is only possible if these h vertices form a clique  this
finishes the proof for the plurality rule with          shift actions 
the remaining cases of the proof are quite similar  although  technically  more involved 
and we present them in appendix b 
it is quite natural to consider combinatorial shift bribery also from a different
perspective  instead of asking what happens for a small number of candidates  we might
ask about the complexity of combinatorial shift bribery for a small number of voters
 see  for example  brandt  harrenstein  kardel    seedig        chen et al         for
some motivation as to why looking at elections with few voters is interesting   in this case
we obtain hardness only for the borda rule  indeed  later we will show that pluralitycombinatorial shift bribery is in fpt for the parameter number of voters  the proof
of the next theorem is quite involved and is available in appendix c 
theorem    borda combinatorial shift bribery is w    hard with respect to the number n of voters  even for         shift actions and no budget constraints 
in the proof of theorem   we reduce from the strongly regular multicolored
clique problem  and  importantly  we do not impose any budget constraints  thus  it follows that any approximation algorithm for borda combinatorial shift bribery  running in fpt time when parameterized by the number of voters  would yield an fpt algorithm for strongly regular multicolored clique when parameterized by the
solution size  in effect  we have the following corollary 
corollary     unless w      fpt  borda combinatorial shift bribery is inapproximable even in fpt time for the parameter n  even for         shift actions 
the results from theorem   and corollary    compare very interestingly to those for the
non combinatorial variant of borda shift bribery  until very recently  the complexity of
borda shift bribery parameterized by the number of voters was unknown  eventually
   

fibredereck  faliszewski  niedermeier    talmon

 in a different paper  and after submitting this one for journal publication  we have shown
that the problem is w    hard  bredereck et al          through a far simpler proof than
the one used here  nonetheless  theorem   and corollary    still carry significant value 
earlier  bredereck et al       a  have shown that there is an fpt approximation scheme
for borda shift bribery parameterized by the number of voters  and corollary    shows
that this result does not generalize to the combinatorial setting 
    results for interval shift actions
we conclude the discussion of hardness results by considering combinatorial shift
bribery with interval shift actions  in the previous section we allowed shift actions to
have non zero effects on two voters each  but these two voters could have been chosen arbitrarily  now we show a hardness result for the case where we can positively affect multiple
voters  but these voters have to form a consecutive interval in the input election 
theorem     for both the plurality rule and the borda rule  combinatorial shift
bribery is np hard even for interval shift actions 
proof  we consider the plurality rule first and give a many one reduction from the following
variant of the strongly np hard numerical matching with target sums problem 
numerical matching with target sums
input  three sets of integers a    a            at    b    b            bt    and x  
 x            xt    where     the numbers are encoded in unary      all the  t numbers
are distinct  and     no two numbers that are both from a or both from b sum
up to any number in x 
question  can the elements of a and b be paired so that for each i   t  the
sum of the ith pair is exactly xi  
the standard variant of the problem  as presented in the classic text of garey and
johnson         does not have any restrictions on the integers in sets a  b  and x  we
can assume that the numbers are encoded in unary because the problem is strongly nphard  further  hulett  will  and woeginger        have shown that the problem remains
np hard for the case where all the  t integers are distinct  finally  to see that the third
restriction does not change the complexity of the problem it suffices to consider the following
transformation  given an instance  a  b  x  of numerical matching with target
sums  we add    max a  b  x      to each integer in b and x  this produces an
equivalent instance where no two numbers  both from a or both from b  sum up to any
number in x 
the plurality rule  let  a  b  x  be an instance of numerical matching with
target sums and let y denote the largest integer in a  b  x  we create an instance of
plurality combinatorial shift bribery as follows  the set of candidates is 
c     p  d  ca            cat   cb            cbt   cx            cxt   
we create the following voters 
   

ficombinatorial shift bribery

   for each pair of integers ai  a and x   x  we introduce 
 a  one voter with preference order

cai  p  c    p  cai   
 b  ai voters each with preference order

cx   p  c    p  cx    
 c   y   ai      voters each with preference order

d  p  c    p  d  
these voters are called the  ai   x    voters and there are exactly  y of them  for each
pair  ai   x     we construct a shift action faxi  with effect   on exactly the set of  ai   x   
voters 
   for each pair of integers bj  b and x   x  we introduce 
 a  one voter with preference order

cbj  p  c    p  cbj   
 b  bj voters each with preference order

cx   p  c    p  cx    
 c   y   bj      voters each with preference order

d  p  c    p  d  
these voters are called the  bj   x    voters and there are exactly  y of them  for each
pair  bj   x     we construct a shift action fbxj  with effect   on exactly the set of  bj   x   
voters 
   let q     ty  we create sufficiently many dummy voters to ensure that  altogether 
the candidates have the following scores 
 a  p has q points 
 b  for each i  cai and cbi have q    ty     points each  and
 c  for each     t   cx  has q    ty   x  points 
no shift action affects any of the dummy voters 
   

fibredereck  faliszewski  niedermeier    talmon

finally  we set the budget b     t  this completes the reduction  it is easy to see that it
is computable in polynomial time  because all the numbers are encoded in unary  and that
we can order the voters so that each shift action effects on a consecutive interval of z     y
voters 
it remains to show that our constructed instance of plurality combinatorial shift
bribery contains a successful set f   of shift actions of size at most  t if and only if  a  b  x 
is a yes instance of numerical matching with target sums 
for the if part  let s      ai    bj              ait   bjt    be a solution for numerical matching with target sums  that is  a set of integer pairs such that each integer from a  b
occurs exactly once in s and such that ai    bj    x  holds for each     t   observe that
f       faxi    fbxj     ai    bj     s  is a successful set of shift actions  since each integer from
 

 

a  b occurs exactly once in  some pair of  s  each candidate cai and each candidate cbj
loses one point  since ai    bj    x  for each     t   each candidate cx  loses x  points 
by construction  p gains  ty points by any set of shift actions of size  t  thus  p wins the
election 
for the only if part  let f   be a successful set of shift actions of size  t  if there were a
successful action of smaller size we could extend it to size  t because our shift actions do not
have negative effects   after applying shift actions from f     p gains  ty points  if this is to
make p a winner of the election  each candidate cai and each candidate cbj needs to lose one
point  and each candidate cx  needs to lose x  points  thus  for each ai  a there is exactly
x 
x 
one fai i  f   and for each bj  b there is exactly one fbj i  f     since all the integers in
a  b  x are distinct and no two integers both from a or both from b sum up to any
integer from x  for each x   x there is at least one shift action faxi  with effect on ai 
 
voters who prefer cxl   and one shift action fbxj  with effect on bj  voters who prefer cx    since
 
there are t candidates cx  and  f        t  it follows that there are exactly two shift actions
with effect on some voters preferring cx    since cx  has to lose at least x  points  it holds
that ai    bj   x    in fact  by the pigeonhole principle  it holds that ai    bj   x    hence 
if there is a successful set of  t shift actions  then there is a solution for our numerical
matching with target sums instance 
the borda rule  for the borda rule  almost the same reduction works  specifically 
there still exists some integer q for which the set of requirements which were required in
the proof for the plurality rule will now hold for the borda rule  with respect to a different
q   importantly  since p is in the second position in the preference profiles of all of the
voters  it holds that the score differences  when applying some shift actions  are similar for
the plurality rule and the borda rule  thus  the proof of correctness for the plurality rule
transfers to the borda rule 

throughout this section we have shown a number of hardness results under more and
more restrictive assumptions regarding the available shift actions  in the following sections
we seek positive algorithmic results 
   

ficombinatorial shift bribery

   exact algorithms
in spite of the pessimism looming from the previous section  in this section we show two
exact fpt and xp algorithms for r combinatorial shift bribery  then  in section   
we present several efficient approximation algorithms 
we begin by observing that r combinatorial shift bribery can be solved in polynomial time  provided that we assume the budget b to be a constant  the reason is that
we need to choose at most b shift actions out of all available ones  but the number of shift
actions available is upper bounded by the input size 
observation    both plurality combinatorial shift bribery and borda combinatorial shift bribery are in xp when parameterized by the budget b 
if we restrict the instances to contain only bounded effect shift actions  then we can
show that r combinatorial shift bribery can be solved in polynomial time  provided
that the number n of the voters is treated as a constant 
proposition     if the maximum effect of every shift action is upper bounded by some universal constant  then both plurality combinatorial shift bribery and borda combinatorial shift bribery are in xp when parameterized by the number n of the voters 
proof  let  be the value bounding  component wise  the effect of each shift action  first 
observe that there are at most        n types of different shift actions  second  observe
that once one knows the budget spent on each type of shift actions  one can easily check
whether a corresponding set of shift actions makes p a winner of the election  thus we use
the following algorithm  we try all possibilities of distributing the budget b among the at
most        n types of shift actions and check whether one of them makes p a winner  if
so  we accept  otherwise we reject 
proposition    holds even if each shift action comes at an individual cost and if each
voter has an individual threshold function  because we can  given some budget  always
select the cheapest set of shift actions of a given type  further  by expressing our problem
as an integer linear program  ilp  and by using a famous result of lenstra         for the
plurality rule we can strengthen the above xp membership to fpt membership 
theorem     for bounded effect shift actions  where we treat the bound as a universal
constant   plurality combinatorial shift bribery is in fpt when parameterized by the
number n of the voters 
proof  given an instance of plurality combinatorial shift bribery with n voters  our
algorithm proceeds as follows  first  we guess a subset of the voters for whom we will
guarantee that p is ranked first  there are  n guesses to try   for each guessed set of voters 
we test whether p would be a winner of the election if p were shifted to the top position
by the guessed voters and was not ranked first by the remaining voters  for each guessed
subset v   of voters for which this test is positive  we check whether it is possible to ensure
 by applying shift actions whose cost does not exceed the budget  that the voters from v  
rank p first  we do so as follows 
let  be the universal constant bounding  component wise  the effect of each shift action 
observe that there are at most      n types of different shift actions  for each shift action
   

fibredereck  faliszewski  niedermeier    talmon

type z  we introduce a variable xz denoting the number of times a shift action of type z is
present in the solution  for each voter vi   denote by svi  p  the position of p in the original
preference order of vi   for each voter vi  v     we add the following constraint 
 p

p

x
 svi  p  
z
   
 z fz has an effect of  on vi  
this ensures that p is indeed shifted to the top position in vi s preference list  we add the
budget constraint 
x
xz  b 
ensuring that the solution respects the budget  finally  for each shift action type z we add a
constraint ensuring that we use at most as many shift actions of type z as there are available
in the input  this finishes the description of the ilp  by a result of lenstra         we can
solve this ilp in fpt time  because we have at most        n integer variables 
roughly speaking  theorem    is the reason why theorem   does not apply to the
plurality rule  in this setting  plurality combinatorial shift bribery is tractable 
note that theorem    applies to the case where each shift action has the same unit cost 
i e   the case on which we focus in this paper  nonetheless  we believe that it is possible
to lift theorem    to the case where each shift action has its individual cost  by applying
ideas of bredereck  faliszewski  niedermeier  skowron  and talmon      a  

   approximation algorithms
we now explore the possibility of finding approximate solutions for combinatorial shift
bribery  we focus on approximating the cost of shift actions necessary to ensure ps
victory  for example  a   approximate algorithm finds a solution that ensures ps victory
whenever it is possible  and uses at most twice as many shift actions as necessary   by
theorems   and    we know that we cannot hope to find approximate algorithms for the
cases of combinatorial shift bribery where the shift actions can have negative effects 
thus  in this section  we focus on unit effect shift actions with only positive effects  this
also simplifies our situation in that we can always check if it is possible to ensure ps victory 
it suffices to apply all the available shift actions and check if p is a winner  indeed  not being
able to perform such a check is at the heart of our inapproximability results from section    
all our approximation algorithms proceed either by directly invoking the algorithms for
the non combinatorial variant of shift bribery of elkind et al         and elkind and
faliszewski         or by plugging our algorithms into their framework  we start with the
former approach and then describe the latter 
theorem     if each shift action has effects of either   or   on each voter  then pluralitycombinatorial shift bribery can be  approximated in polynomial time and bordacombinatorial shift bribery can be   approximated in polynomial time  where  denotes the maximum number of voters affected by a shift action 
proof  the general idea of these approximation algorithms is to split each shift action that
affects some     voters into   shift actions  each affecting a single voter only  in effect
   

ficombinatorial shift bribery

we construct a non combinatorial instance of shift bribery that we solve exactly  for the
case of plurality rule  or   approximately  for the case of the borda rule 
specifically  our construction goes as follows  let  i  denote the number of shift actions
affecting voter i  given an instance of combinatorial shift bribery  we form an
instance of shift bribery that is identical  except that instead of having shift actions 
we have price functions for the voters  we set the price function for each voter i so that
for j   i   shifting p by j positions costs j  and for j    i   shifting p by j positions
costs   b     j  where b is the total number of shift actions available  note that the
exponential function   b     j ensures that the price functions are convex and that we can
easily identify situations where one shifts p by more than  i  positions   
below we describe how to use this construction for the case of the plurality rule and for
the case of the borda rule 
the plurality rule  we first translate the input instance into the non combinatorial
plurality shift bribery instance as described above  then  we apply the known  exact 
polynomial time algorithm for the plurality shift bribery  elkind et al         on this
instance  let s be the cost of the solution found for the non combinatorial instance  if
s   b  then it is impossible to ensure ps victory in the combinatorial instance  because the
number of available shift actions is insufficient  
if s  b  then to obtain a solution f for the plurality combinatorial shift bribery
instance we do as follows  for each voter v that in the  non combinatorial  bribed election
ranks p first  we select shift actions in the combinatorial instance so that v ranks p first 
note that  f    s and that f is indeed a  combinatorial  solution 
for the sake of contradiction  assume that there is a successful set of shift actions f  
with size smaller than  f     however  it is easy to see that such a set of shift actions would
correspond to a bribery of cost smaller than s for the non combinatorial instance  since s is
the cost of the optimal solution for the non combinatorial instance  this is a contradiction 
the borda rule  the case of borda combinatorial shift bribery follows analogously  but instead of using the polynomial time exact algorithm for the non combinatorial
instance  we use the   approximation algorithm for borda shift bribery  elkind et al  
      elkind   faliszewski         let s be the cost of the solution found  if s    b  then
it is impossible to ensure ps victory 
otherwise  to obtain the solution f for the combinatorial instance  for each vote v where
the non combinatorial solution shifts p by some t positions  we include t shift actions that
affect this voter  we have that  f    s  and f is a correct solution for the combinatorial
instance 
if there existed a solution f   for the combinatorial instance that used less than  f      
shift functions  then there would be a solution for the non combinatorial instance with
cost smaller than  f      s    since we used a   approximate algorithm for the noncombinatorial instance  this is impossible 
we mention that it might be possible to improve the approximation ratio given in theorem     at least for the borda rule  the idea might be to cast the problem as a variant of
   strictly speaking  there is no need to ensure that the price functions are convex  but this is the variant
of shift bribery that we generalize in this paper  so we stick to it for consistency 

   

fibredereck  faliszewski  niedermeier    talmon

the set multicover problem  which is a generalization of the set cover problem where
each element has its own covering requirement  then  one could use an approximation algorithm for the set multicover problem  for example  the one suggested in rajagopalan
  vazirani        and plug it into the   approximation algorithm of elkind and faliszewski
       
we can achieve better approximation guarantees for the borda rule  when we further
restrict the allowed shift actions  to obtain these results we use the framework of elkind
and faliszewski         in essence  they have shown the following  if for a given variant
of shift bribery  either for the plurality rule or for the borda rule  one can provide
a function that computes how to obtain the highest number of points for the preferred
candidate given some budget b  then there is a   approximation algorithm for this variant
of shift bribery   note that such a get most points for p algorithm does not solve shift
bribery  while it maximizes the score of p  it does not ensure that no candidate receives
higher score  indeed  an optimal solution might increase the score of p to a smaller extent 
but at the expense of more dangerous opponents 
theorem     borda combinatorial shift bribery is   approximable in polynomial
time for          shift actions 
proof  by the discussion preceding the theorem statement  it suffices to provide a function
that given an instance of combinatorial shift bribery with budget b finds a set of
shift actions that obtain the highest possible number of points for the preferred candidate
p without exceeding the budget 
the general idea of achieving this is to compute a maximum b matching in an auxiliary
multigraph  multigraphs allow multiple edges between the vertices   a b matching of a
multigraph g with a function b   v  g   n  called a covering function  is an edge induced
subgraph of g such that each vertex u has degree at most b u   it is known that a b matching
can be computed in polynomial time  gabow        
we construct the auxiliary multigraph g as follows  for each voter vi we create a vertex
ui   for each shift action with effect   on voter ui and effect   on voter uj   we create an edge
 ui   uj    then  we define a covering function b such that b ui   is the number of positions
that p can be shifted forward in the preference order of voter vi  that is  the position of p
in the preference order of voter vi   
if g has a b matching of size at least b  then it corresponds to a set of shift actions that
increase the score of p by  b  which is the highest gain possible  if g has a b matching of
size k   b  then we take the shift actions corresponding to the edges of this b matching
 these shift actions maximize the number of points that p can gain from shift actions that
move p within two votes  and greedily select more shift actions that each pushes p forward
in one vote  to use up the budget  at this point  every shift action can affect p in a single
vote only   thus our function computes the highest point gain possible for p  for a given
budget 
next  we consider interval shift actions  that is  we fix some order of the voters and
restrict each shift action to have effect only on voters which comprise intervals   in fact  we
   in fact  their result applies to all scoring rules  but in this paper we focus on the plurality rule and on
the borda rule only 

   

ficombinatorial shift bribery

could also allow holes inside these intervals   unfortunately  the algorithm requires xp
time for the parameterization by the length of the longest interval 
theorem     for both the plurality rule and the borda rule  combinatorial shift
bribery can be   approximated in xp time for interval shift actions  provided that we take
  the upper bound on the number of voters affected by each shift action  as the parameter 
proof  as per discussion preceding theorem     it suffices to describe how to find a set
of shift actions which maximize the number of points that the preferred candidate p gains
under a given budget 
to this end  we use a dynamic programming algorithm  consider an input for
combinatorial shift bribery with election e    c  v    preferred candidate p  and
budget b to spend on increasing ps score  let m     c  and n     v    we have
v    v            vn    our algorithm uses the following table for partial results  for numbers x  y  s            s  the table entry 
t  x  y  s    s            s   
denotes the maximum number of additional points that candidate p can gain from voters v            vx under the condition that     exactly y shift actions are used  each of them
affects at most the voters from the set  v            vx    and     for each i                
candidate p is shifted to position si in the preference order of voter vxi   that is  we iterate
over the voters and store the effect that the applied shift actions had on the last  voters 
the size of the table is n  b  m    
our algorithm is almost the same for both the plurality rule and the borda rule  the
only difference is in computing the scores of the candidates  let z     z  m     denote
the position of p in the preference order of some voter  position   means that p is ranked
first   then  by score z  we mean the score that p gains from this voter  for the plurality
rule we have score z      for z     and score z      otherwise  for the borda rule we have
score zi     m  zi     for a set of voters and a vector z            zt  for t   n  and each zi in
            m      that denotes the positions of p in the preference orders of these voters  we
write score z            zt   to mean the score that p gains from these voters  that is 
score z            zt    

x

score zi   

i t 

given this preparation  we are ready to describe our algorithm  jointly for the plurality
rule and for the borda rule  
initialization  we initialize the entries t    y  s    s            s    of the table as follows 
we check whether there is a set of y shift actions that have effects only on voters from
 v            v   and such that applying this set of y shift actions moves candidate p to positions s            s  in the preference orders of the voters v            v   respectively  if it
exists  then we set t    y  s    s            s    to score s    s            s     otherwise  we set
t    y  s    s            s    to    we explain how to check if such a set of shift actions exists
at the end of the proof  
   

fibredereck  faliszewski  niedermeier    talmon

recursion step  to compute the table entries t  x  y  s    s            s    for x     one has
to compute subsets of i shift actions  for i   y   whose last affected voter is vx   that ensure
together with yi shift actions whose last affected voter is from the set  v            vx   that
for each j     j       p is shifted to position sj in the preference order of vxj  
more specifically  in the update phase we compute for each x     x  n  each y     y 
b  and each vector  s            s                 m     the table entry t  x  y  s    s            s   
as follows  we say that a vector  s    s            s                 m  is  x  i  realizable for
some i     i  y   if there is a set of i shift actions whose last affected voter is vx and
such that for each j     j       it shifts candidate p by sj positions in the preference
order of voter vxj   we write r x  i  to denote the set of vectors from             m    
that are  x  i  realizable  we describe how to compute r x  i  later   then  we compute
t  x  y  s    s            s    as follows 
t  x  y  s    s            s      max t  x     y  i  s   s   s            s   s    s  
  score s    s            s     score s   s            s   s     
   i  y     s  m      s    s            s     r x  i  
informally  for each realizable total effect of i shift actions whose last affected voter
is vx   the number of points that candidate p gains is the number of additional points that
candidate p gains by shift actions for which the last affected voter is from  v            vx   
plus the number of additional points that candidate p gains by shift actions for which the
last affected voter is vx  to avoid double counting  this is expressed as the difference in the
middle line of the above formula  
we next show how to compute r x  i   we try every vector  s            s                 m 

   and for each we check if it is  x  i  realizable  perhaps the easiest way to do this is
to formulate this problem as an integer linear program  ilp  with a constant number of
variables 
let  s            s    be a vector for which we want to check if it is  x  i  realizable  for
each subset q                    we say that a shift action is of type q if it affects exactly
the voters vxi with i  q  for each such subset q  we introduce an integer variable xq  
denoting the number of shift actions of type q used in the  x  i  realization of our vector 
we solve the following ilp 
x

xq   i

   

xq      i

   

q         

x
q         

x

j      j     

xq   sj

   

jq

 note that the middle constraint ensures that the last affected voter is vx    since the
number of variables in this ilp is     it follows from the famous result of lenstra       
that this ilp can be solved in xp time with respect to the parameter   indeed  even in
fpt time   using the same ilp but without the middle constraint  we can check which
vectors  s            s    we can use in the initialization step 
   

ficombinatorial shift bribery

coming back to our dynamic program  it is clear that finding how to obtain the maximum score for p while respecting our budget can be found by taking the maximum over
the table entries t  n  b     s    s            s     for all possible values of b        b    b  and
 s    s            s                 m      
while in this section we showed that it is indeed possible to achieve some approximation
algorithms for some special cases of the combinatorial shift bribery problem  the
settings for which our algorithms are efficient are quite restrictive  this means that in
practice one might want to seek good heuristics and use our algorithms as a guidance for
the initial search 

   conclusion
we have defined a combinatorial variant of the shift bribery problem  elkind et al        
elkind   faliszewski        bredereck et al       a  and we have studied its computational
complexity  the motivation for our research was the desire to understand the computational
difficulty imposed by correlated  large scale effects of campaign actions  in this respect  this
work is motivated by the combinatorial study of election control  as studied by bulteau et al 
       and chen et al          we have found that even for various very restricted special
cases and numerous parameterizations  the combinatorial shift bribery problem is
highly intractable in the worst case  nonetheless  we have found some initial positive results 
mainly in the form of approximation algorithms  interestingly  our approximation results
quite strongly rely on the results for non combinatorial shift bribery 
there is a number of research directions that are motivated by our work  for example  can plurality combinatorial shift bribery or borda combinatorial shift
bribery be solved in polynomial time for          shift actions or interval actions under
the assumption that the number of candidates is a constant 
more generally  our results suggest studying further restrictions of the problem  as an
example  since parameterizing by the number of available shift actions immediately gives
fixed parameter tractability results  a natural question is whether other natural parameterizations exist which could also lead to positive results 
naturally  one might consider other voting rules as well  most interesting are condorcetconsistent rules  such as the copeland rule  since these rules tend to behave rather differently
than scoring rules  we mention that some of our results do hold for other voting rules 
specifically  theorem    theorem    theorem    and theorem   hold for most voting rules
because these theorems hold for elections with only two candidates  and most voting rules
behave the same for elections with only two candidates  observation   and theorem    are
basically brute force algorithms and the results hold for most voting rules as well  and the
statements regarding the borda rule in theorem     theorem     and theorem    hold for
all scoring rules  since the underlying   approximation algorithm of elkind and faliszewski
       works for all scoring rules 
further  it might also be interesting to consider domain restrictions regarding voters
preferences  for example  single crossing seems particularly natural in the context of interval
shift actions  since it means that each shift action affects voters with somewhat similar
preferences   as it is well demonstrated that restricting the domain of the voters can lead
   

fibredereck  faliszewski  niedermeier    talmon

to tractability  see theorem    in bulteau et al         for an example in the combinatorial
control setting   however  pursuing this direction would require a careful discussion of what
shift actions can be applied  for example  should we allow a single crossing election to cease
being single crossing after the bribery 
acknowledgments
robert bredereck was supported by the dfg project paws  ni          nimrod talmon was supported by the dfg research training group methods for discrete structures  grk       and is currently at weizmann institute of science  piotr faliszewski
was supported by the dfg project paws  ni         and by agh university grant
               statutory research  
a preliminary short version of this work has been presented at the      international
conference on autonomous agents and multiagent systems  aamas      bredereck 
faliszewski  niedermeier    talmon      b  

appendix a  proof of theorem  
theorem    unless p   np  combinatorial shift bribery is inapproximable  in
polynomial time  for both the plurality rule and the borda rule  even for two candidates and
        shift actions 
proof  we give a many one reduction from set cover  let  s  x  h  be a set cover
instance  with s    s            sm   and x    x            xn    we assume that every element
belongs to at least one set   we construct an instance of plurality combinatorial shift
bribery  we set the budget b     x   the candidate set is  p  d   where p is the
preferred candidate  we have an element voter vi for each element xi   with preference
order d  p  we have a set voter vjs for each set sj   with preference order p  d  we also
have  x     s    h    dummy voters  each with preference order d  p  for each element
xi and each set sj   if xi  sj then we construct a shift action fji with effect of    on vi and
effect of   on vjs   this completes the construction  it is easy to see that it is computable
in polynomial time 
next  we show that there is a successful set of shift actions  note that the size of this
set is not important  that is  we allow infinite budget  if and only if there is a set cover of
size h 
for the if part  assume that there is a set cover s   of size at most h  we show how
to build a successful set of shift actions  we start with f      and for each element xi  
we choose an arbitrary set sj  s   which contains xi and add the corresponding function
fji to f     after applying f     observe that p becomes a winner  all  x  element voters and
 s   h set voters prefer p but only  x     s    h    dummy voters and h set voters prefer d 
for the only if part  assume that there is a successful set of shift actions f    f  
let h  be the number such that after applying the shift actions from f     p is preferred by
exactly  s   h  set voters  that is  shift actions in f   correspond to h  sets from s   for p to
be a winner  a majority of the voters  i e   at least  x     s   h voters  must prefer p  thus 
after applying f     at least x   h  h    element voters prefer p  this means that there is a
collection of h  sets from s that jointly cover at least  x    h  h    elements  since every
   

ficombinatorial shift bribery

element belongs to some set  we can extend this collection to a set cover by adding at most
h  h  sets  in the worst case  one set for each uncovered element   this proves that there
is a set cover for  s  x  h  and completes the only if part 
note that in the above argumentation we made no assumptions regarding the size of f    
hence  finding any solution for our plurality combinatorial shift bribery instance 
including approximate solutions for any approximation factor  implies finding a set cover of
size at most h  this means that unless p   np  plurality combinatorial shift bribery
is inapproximable in polynomial time 

appendix b  remaining cases of the proof of theorem  
theorem    unless p   np  combinatorial shift bribery is inapproximable  in
polynomial time  for both the plurality rule and the borda rule  even for two candidates and
        shift actions 
the borda rule with          shift actions  we can slightly modify the reduction used for the plurality rule with          shift actions  specifically  we describe a parameterized reduction from the w    hard clique problem  parameterized by the solution
size  to borda combinatorial shift bribery with          shift actions  parameterized
by  m  b  
let  g  h  be an instance of clique with v  g     u            un    and e g     e            em    
we create an instance of borda combinatorial shift bribery as follows  the set of
candidates is  p   d  where d    d            dh     we create the following voters 
   for each vertex ui  v  g   we create a corresponding vertex voter vi with preference
order 
d       dh   p 
   we create n    h dummy voters  each with preference order 
p  d       dh   d   
   we create h dummy voters  each with preference order 
dh   p  d       dh   d   
   we create n   h dummy voters  each with preference order 
p  d       dh   
   we create n   h dummy voters  each with preference order 
d   p  d       dh   
for each edge  ui   uj    e g   we create a shift action f ui  uj   with effect   on the vertex

voters vi and vj and effect   on all other voters  finally  we set the budget to b    h   
this completes the construction  which is computable in polynomial time 
   

fibredereck  faliszewski  niedermeier    talmon

the proof of correctness follows the same lines as the proof for the plurality rule with
         shift actions  but instead of counting the number of approvals  we need to compute
the borda scores of the candidates  indeed  this is the reason for our additional dummy
voters 
in particular  the construction ensures that d  is the original winner of the election and
that the difference between the borda score of p and the borda score of d  is exactly h   
furthermore  each shift action can increase the score of p by at most two  hence  to make
p a co winner one must increase the score of p by h h     and decrease the score of d  by h 
this is possible if and only if the shift actions correspond to edges of some clique of size h 
the plurality rule with         shift actions  we still reduce from the w   hard clique problem  parameterized by the solution size  but the reduction is a bit more
involved 
let  g  h  be a clique instance where the graph g has n      v  g   vertices and
 
m     e g   edges  we construct a plurality combinatorial shift bribery instance
as follows  let the set of candidates be  p  d   d  where d     d            dh     and create
the following voters 
   for each vertex vi   create
preference order 

h
 



 h 
vertex voters vi            vi   corresponding to vi   each with
d       dh   p 

   for each edge ej    vi    vi     create a corresponding edge voter wj with preference
order 
p  d       dh   


   create   h     n    h  h   m  dummy voters  each with preference order 
p  d       dh   
for each edge ej    vi    vi     construct  

h
 



shift actions  denoted by

  h 
 h 
fe j  vi           fej  vi  and fe j  vi           fej  vi   
 

 

h
 

    a  fezj  vi has effect of    on viz  and effect of   on wj   and  b 
 
 
fezj  vi has effect of    on viz  and effect of   on wj   finally  we set the budget b      h  h   
 
this completes the construction  it is easy to see that it is computable in polynomial time
and that it is a parameterized reduction 
observe that  initially  the edge voters and the dummy
voters prefer
p  while the vertex


h
h
 
voters prefer d    therefore  the initial score of p is        n   h      while the initial score

of d  is n  h    we can assume  without loss of generality  that this means that d  is the
winner of the election  instances not satisfying this assumption can be solved in constant
time  
it remains to show that our constructed instance contains a successful set of shift actions f   of size at most h if and only if  g  h  contains a clique of size at most b  the general
where for each z   



   

ficombinatorial shift bribery

idea is that if we choose the shift actions corresponding to the edges connecting the nodes
of an h size clique  then we will ensure that p becomes the preferred candidate for h h 

additional vertex voters  while making d  the preferred candidate for only h  additional
edge voters 
formally  for the if part  let h  v  g  be a set of h vertices forming a clique and let
e    e g  be the set of edges connecting vertices from h  we choose the following set of
shift actions 
 
h
 
 
z
z
   
f    fej  vi   fej  vi   ej    vi    vi     e   z   
 
 
 
we show that f   is a successful set
 of shift actions  to this end  observe that for each vertex
h
z
 
voter vi with vi  v and z         candidate p is shifted h    positions forward  therefore

p becomes the preferred candidate for these voters  this means that h h  additional vertex
voters prefer p  and  thus  do not prefer d  anymore   furthermore  p is shifted backwards
only for the voters in  wj   ej  e      that is  d  becomes the most preferred candidate for


h
h
 
  edge voters and p remains the most preferred candidate for m    edge voters  thus 
p and d tie as winners 
for the only if part  let f   be a successful set of shift actions 
p a winner of
 to make

the election  p must be shifted to the top position for at least h h   h  vertex voters  no
other type of voters can be affected positively   by the pigeonhole
principle  these vertex

h
voters correspond to at least h different vertices  there are   voters corresponding to each

vertex   in effect  at least h  edge voters must be effected negatively so that d  becomes
their most preferred candidate 
thus  to make p win the election p must be shifted
to
 top
 the


position for at least h h  vertex voters  this implies that  f       h  h h      h  h    b
and  hence   f       b  itfollows that p is shifted backwards making d  the most preferred
candidate for exactly h  edge voters and that p must be shifted to the top position for

exactly h h  vertex voters corresponding to exactly h different vertices  by construction 
this implies that these h vertices form a clique  and we are done 
the borda rule with         shift actions  for the borda rule  the reduction is 
once again  a bit more involved  but the main idea is the same as for the plurality rule 
let  g  h  be an instance of clique where graph g has n      v  g   vertices and
 
m     e g   edges  we construct a borda combinatorial shift bribery instance as
follows  the set of candidates is  p  d   d  where d     d            dh     and we create the
following voters 

 h 
   for each vertex vi   create h  vertex voters vi            vi   corresponding to vi   each with
preference order 


d  p 
   for each edge ej    vi    vi     create a corresponding edge voter wj with preference
order 
d       dh   p  dh   



h
h  
  h
 
 
     n     m   h          h    m
   let l   
  without loss of generality  we
h 
can assume that l is an integer  this requires simple modifications of the input clique
   

fibredereck  faliszewski  niedermeier    talmon

instance only   we create l dummy voters  each with preference order 
p  dh       d   
for each edge ej    vi    vi     construct  

h
 



shift actions  denoted by

 h 
  h 
fe j  vi           fej  vi  and fe j  vi           fej  vi   
 

 

h
 

    a  fezj  vi has effect of    on viz  and effect of   on wj   and  b 
 
 
fezj  vi has effect of    on viz  and effect of   on wj   finally  we set the budget b      h  h   
 
this completes the construction  it is easy to see that it is computable in polynomial time 
the proof of correctness follows the same lines as the proof of correctness for the plurality
rule and  thus  is omitted 
where for each z   



appendix c  proof of theorem  
theorem    borda combinatorial shift bribery is w    hard with respect to the number n of voters  even for         shift actions and no budget constraints 
proof  we reduce from the following w    hard problem  mathieson   szeider        lemma
     
strongly regular multicolored clique
input  two integers  d and h  and an undirected graph g    v  e   where each
vertex has one of h colors in  h   and where each vertex is adjacent to exactly
d vertices of each color different from its own 
question  does there exist a clique of size h containing one vertex from each
color class 
given an instance of strongly regular multicolored clique  we construct an
instance of combinatorial shift bribery  for the borda rule  the general idea of
the reduction is as follows  the set of important candidates consists of our preferred
candidate p and the candidates that correspond to the edges  for technical reasons  for
each edge e    v  v      we introduce two candidates  e  and e    one of them is associated
with touching vertex v and the other is associated with touching vertex v      in fact  we
will introduce more edge candidates and some vertex candidates  but we will use them only
to ensure correct structure of the election and appropriate bribery behavior   we build two
groups of voters  the vertex selecting voters and the edge electing voters  the first group
implements picking vertices for the clique  one vertex from each color   and the second
group implements picking edges  one edge for each pair of colors   we ensure that if a given
set of shift actions has any chance of being successful  then it must hold that h vertices and
h
  edges are picked  importantly  this holds even in the unbribed election 
we make sure that p wins the election if and only if the picked voters and edges correspond to a clique  with vertices of each color   to this end  we define the voters so that
there are two numbers   and   such that 
   

ficombinatorial shift bribery

   there are h vertices picked by the vertex selecting voters  each of a different color 
the vertex selecting voters give  points to each edge candidate that is associated with
touching one of the selected vertices  and      points to all other edge candidates 
this means that by picking a vertex we decrease the score of the edge candidates for
the edges that touch this vertex 

   there are h  edges picked by the edge selecting voters  one edge for each pair of colors 
the edge selecting voters give      points to each edge candidate that corresponds
to a picked edge  and  points to all the remaining edge candidates  this means that 
by picking an edge  we increase the score of the candidates corresponding to it 
   candidate p gets         points  irrespective what shift actions we apply 
note that in the unbribed election every candidate gets at most         points and p
always gets         points  thus the challenge is to ensure that every candidate gets
        points  by the above description  this is possible only if we pick the vertices and
the edges that correspond to a size h clique  of vertices with different colors   indeed  if we
selected an edge e that did not touch two selected vertices  then e  and e  would receive
     points from edge selecting candidates and at least one of them would receive     
points from vertex selecting voters  in effect  p would not be a winner 
without loss of generality  we assume that the edges and vertices selected in the unbribed
election do not form a clique  otherwise there would be a trivial solution for the input
problem and we could output a fixed yes instances of borda combinatorial shift
bribery  
construction  we now formally describe the reduction  then we give an example of
applying it to a simple instance  and finally we show correctness of the reduction  we
illustrate some aspects of the correctness proof using our example 
candidates  our set of candidates is somewhat involved  our important candidates are
the preferred candidate p and the sets of edge candidates  e  and e    defined below 
let e g     e            e   be the set of edges of graph g  we create two edge candidate
sets  e      e             e    and e      e             e     for each i   h   let ni be the number of
vertices in g with color i and let v i    v i           vni i   be the set of these vertices  for each
color i and each vertex vji  v i   we define the neighborhood of vji as follows 
 

n  vji       e     e     vji   vji      e  i   i   
 

  e     e     vji   vji      e  i   i    
 this  perhaps a bit strange way of using color numbers to pick edge candidates either from
e   or e     is implementing the fact that for each edge e  e g  we have two candidates  e 
and e    associated with touching different endpoints of e  
for technical reasons we need further candidates as follows  to adjust the scores of
all other candidates  we introduce a single dummy candidate d  we create two further
candidate sets e      e             e    and e      e             e    which will act as guards for the
edge selecting voters  for each v i we create two candidate sets u i     uij   vji  v i   and
   

fibredereck  faliszewski  niedermeier    talmon

s
s
u  i    u ij   vji  v i   with u     ih u i and u       ih u  i which will act as guards
for the vertex selecting voters 
our final set of candidates is c    u  u    e    e    e    e     p  d  
vertex selecting voters  we now describe the vertex selecting voters  for each color i
and each vertex vji   we define the following parts of preference orders  for j      we assume
that uij  and u ij  are uini and u ini respectively  

a vji     uij  n  vji    u ij  

b vji     uij   n  vji    u ij   
for each color i we create three pairs of voters  the voters in the first pair  wi and wi    have
the following preference orders 


wi   p  a v i    a v i    a v i        a vni i    ri  


wi    ri  b v i    b vni i    b vni i          b v i    p 
where ri is the set of the remaining candidates  that is  ri    c     p   u i  u  i  n  v i   
    n  vni i     the voters in the second pair  qi and qi    have preference orders that are the
reverse of wi and the reverse of wi    respectively  finally  the voters in the last pair  qi and
qi    have preference orders 


qi   c     d   n  v i     d  n  v i   
 
qi    n  v i    c     d   n  v i     d 
in effect  the first two pairs of voters jointly give    c      points to each of the candidates 
the last pair gives  c     points to the candidates in n  v i   and  c  points to all other
candidates  except d  who receives less than  c     points  
let     h    c     c     altogether  the vertex selecting voters give the following
scores to the candidates  the candidates in n  v    n  v      n  v h   receive  points and
all other candidates  except d  receive      points  d receives less than  points   thus  in
the unbribed election v             v h are the selected vertices 
for each color i  we introduce  ni        h      d      shift actions with effect  
on voter wi and effect    on voter wi    to understand where the number of these shift
actions comes from  we note that      for each vertex vji   we have  n  vji       h      d  each
vertex is connected with d vertices of each color different than its own       in a vji   and in
b vji   the candidates from n  vji   are surrounded by two vertex candidates  and     if t is
an integer     t  ni     then applying t  h      d      of these shift actions has the effect
that the candidates in n  v i   gain one point  i e   v i ceases to be selected   the candidates
i   lose one point  i e   v i
in n  vt  
t   becomes selected   and no other candidate changes his
score  later we will argue that applying other numbers of such shift actions than multiples
of   h      d      cannot ensure ps victory  
   

ficombinatorial shift bribery

edge selecting voters  for the edge selecting voters  we need the following additional
notation  let ex y denote the set of candidates representing edges between vertices of
color x and color y  that is 
q         

ex y     e 

  e     vjx   vjy     e  

we write nx y to denote the number of edges between vertices of color x and color y  by
idx y
z we refer to the index of the z th edge between vertices of color x and y  for example 
if e    e  and e   are the only three edges between vertices of colors   and    then n        
   
   
id   
       id       id       
for each pair  x  y  of distinct colors and each edge eidx y
  we introduce the following
j
x y
parts of preference orders  for j   nx y   we assume that idj     idx y
    
r eidx y
    e idx y  e idx y  e idx y  e idx y  
j
  
s eidx y
j

j

j

j

e idx y
j  

e idx y
j

e idx y
j





j



e idx y  
j  

for each pair  x  y  of distinct colors we introduce three pairs of voters  the voters in the
    have the following preference orders 
first pair  wx y and wx y

wx y   r eidx y
   p  r eidx y
   r eidx y
       r eidx y
   rx y  
nx y
 
 
 

 
   s eidx y
       s eidx y
   s eidx y
   p 
wx y
  rx y  s eidx y
nx y
n
 
 
 
x y

where rx y is the set of the remaining candidates  that is  rx y    c     p   ex y    the
    have preference orders that are the reverse of w
voters in the second pair  qx y and qx y
x y
 
    have
and the reverse of wx y   respectively  finally  the voters in the last pair  qx y and qx y
the following preference orders 

qx y   e idx y  e idx y  d  c     d  e idx y   e idx y    
 
 
 
 
  
 
 
 
qx y   c     d  eidx y   eidx y     eidx y  eidx y  d 
 

 

 

 

the first two pairs of voters jointly give    c      points to each of the candidates  the
last pair gives  c  points to both e idx y and e idx y   and  c     points to all other candidates
 
 
 except d  who receives
less
than
 c 

 
points  

let       h    c       altogether  for each pair of distinct colors  x  y   the edgeselecting voters give      points to candidates e idx y and e idx y   all other candidates receive
 
 
 points  except for d  who receives less than  points   thus in the unbribed election the
selected edges are exactly the first edges between each pair of colors  that is  edges of the
form eidx y
  for each pair of distinct colors  x  y   
 
for each pair  x  y  of distinct colors  we create   nx y     shift actions with effect  
    the intuition behind these shift actions is similar
on voter wx y and effect    on voter wx y
as in the case of vertex selecting voters  we make the following observations      for each
edge eidx y there are four candidates listed in r eidx y   and four candidates listed in s eidx y   
 
 
 
and     if t is an integer     t  nx y    and we apply  t such shift actions  then candidates
   

fibredereck  faliszewski  niedermeier    talmon

v  

v  

e 

e 

v  

e 

e 

v  

e 

e 
v  

v  

v      v     v      v      v     v      v      v     v      h      d    
figure    a   colored graph with six vertices where each vertex is adjacent to one vertex
from each of the color classes v     v   and v     other than its own 
ceases to be selected   candidates e idx y and e idx y
e idx y and e idx y lose one point  edge eidx y
 
 

t  

 

t  

gain one point  edge eidx y
becomes selected   and the scores of all other candidates remain
t  
unchanged  we will later argue that if we apply a number of shift actions that is not a
multiple of    then p certainly is not a winner of the resulting election  
to conclude the construction  we set the budget b      that is  we can use as many
shift actions as we like   it is easy to verify that the reduction is computable in polynomial
time and that we introduce a number of voters that is a function of h only  thus  it is a
parameterized reduction   before proving the correctness of this construction  we consider
the following example  we will refer to it during the correctness proof as well  
example    consider the strongly regular multicolored clique instance  d  h  g 
with d      h      and graph g from figure    our construction produces the following set
of candidates 
c    u  u    e    e    e    e     p  d  
with
              
u    u     u     u     u     u     u      u      u  
    u    u    u    u    u   

and
e i    ei    ei            ei        i    
furthermore  we have 
n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     
   

ficombinatorial shift bribery

for the vertex selecting group of voters  we create the following voters  for each color
i  we create two voters wi and wi   

 
 
 
 
  
w    p  u    e    e    u  
   u   e   e   u   r  


 
 
 
  
w     r   u    e    e    u  
   u   e   e   u   p 

 
 
 
 
  
w    p  u    e    e    u  
   u   e   e   u   r  


 
 
 
  
w     r   u    e    e    u  
   u   e   e   u   p 

 
 
 
 
  
w    p  u    e    e    u  
   u   e   e   u   r  


 
 
 
  
w     r   u    e    e    u  
   u   e   e   u   p 
with ri    c     p   u i  u  i  n  v i        n  vni i        i     for each of these voters
we add a voter with reversed preferences   this means that  so far  all candidates obtain
the same total score   we finish this group of voters by creating for each color i two voters 
qi and qi    with preference orders 


qi   c     d   n  v i     d  n  v i   
 
qi    n  v i    c     d   n  v i     d 
this ensures that for each color i  all the candidates in n  v i   get  points  and all other
candidates get      points  except d who gets few points   we create   shift actions with
effect   on voter wi and effect    on voter wi   
for the edge selecting second group of voters  recall that ex y denotes the set of candidates representing edges between vertices of color x and color y  specifically  we have 
e       e     e     e     e   e     e     e     e     
e       e     e     e     e   e     e     e     e      and
e       e     e     e     e   e     e     e     e     
    as follows 
for each pair  x  y  of distinct colors we create two voters  wx y and wx y


w      e    e    e    e    p  e    e    e    e    r     

 
w   
  r     e    e    e    e    e    e    e    e    p 

w      e    e    e    e    p  e    e    e    e    r     

 
w   
  r     e    e    e    e    e    e    e    e    p 

w      e    e    e    e    p  e    e    e    e    r     

 
w   
  r     e    e    e    e    e    e    e    e    p 
where rx y    c     p   e x  y    for each of these voters we add a voter with reversed
 
preferences  further  for each pair  x  y  of distinct colors  we add two voters qx y and qx y
   

fibredereck  faliszewski  niedermeier    talmon

as follows 

qx y   e idx y  e idx y  d  c     d  e idx y   e idx y    
 
 
 
 
  
 
 
 
qx y   c     d  eidx y   eidx y     eidx y  eidx y  d 
 

 

 

 

altogether  for each pair  x  y  of distinct colors  candidates e idx y and e idx y get     points
 
 
and all other candidates get  points  except d  which gets less points   for each pair  x  y 
of distinct colors  we create   shift actions with effect   on voter wx y and effect    on
   
voter wx y
 
properties of the construction  we now discuss several properties of our construction 
these properties will play a significant rule in showing the correctness of the reduction  to
illustrate our arguments  we come back to our example from time to time  we begin by
looking at the scores of the candidates 
lemma    the following claims hold 
   in the unbribed election  every candidate receives at most         points and every
candidate from  p   u  u    e    e   receives exactly         
   in every bribed election  the score of p is exactly         
   after applying a successful set of shift actions  the score of p is         and the
scores of all other candidates are at most         
proof  it is easy to see that the first claim holds based on the discussion that we give
throughout the construction  the second claim holds because  a  applying every shift
action decreases by one the score of p in one vote and increases it by one in another vote
 there are sufficiently few shift actions in the whole instance such that applying each shift
action always moves p within the two votes on which the shift action acts   the last claim
follows directly from the second one 
 lemma  
let us now consider the process of selecting vertices  in the description of vertexselecting voters we said that  initially  for each color i vertex v i is selected  and if for some
integer t     i  ni     we apply t  h      d      shift actions that affect voters wi and wi   
i
then v i ceases to be selected and vt  
becomes selected  we now argue that if we apply a
number of these shift actions that is not divisible by   h      d       then p is not a winner
of the resulting election 
to see that this is the case  recall that in the preference orders of voter wi and wi  there
are exactly  h      d candidates from e    e   between each pair of candidates  uij   u ij   
furthermore  if p passes some candidate uij in the preference order of voter wi  increasing
uij s score by one   then it must also pass candidate uij in the preference order of voter wi 
 decreasing uij s score by one   otherwise  uij would end up with score         and 
by    p would not be a winner  there are no possibilities to influence the score of uij other
than shifting p in the preference lists of wi and wi     hence  p also passes candidate u ij
and all candidates between uij and u ij in the preference lists of wi and wi    this  however 
means that if p is to be a winner of the election  then the number of applied shift actions
   

ficombinatorial shift bribery

unbribed voters w  and w    


 
 
 
 
  
w    p  u    e    e    u  
   u   e   e   u   r


 
 
 
  
w     r   u    e    e    u  
   u   e   e   u   p
applying two shift actions with effect    on w  and    on w    
     

 
 
 
 
  
w    u    e    p  e    u  
   u   e   e   u   r
 
  
  


   e   p  e   u  
w     r   u    e    e    u  

u
 
 
 
 
 
  
applying  h      d         shift actions with effect    on w  and    on w    
           

 
 
 
 
  
w    u    e    e    u  
   p  u   e   e   u   r
 
  
  
  
  

 
 
 
   e   e   u  
w    r  u   e    e    u  

p

u
 
 
 
 
 
  
figure    illustration of bribery actions affecting the first voter group of our running example
 example     note that  in the unbribed election  every candidate from u  u   obtains
        points in total  for each color i there is only one type of shift actions which
affects voter wi and wi    those shift actions with effect   on voter wi and effect    on
voter wi    no other shift action can affect some voter from the first group  applying a
multiple of   h      d      shift actions with effect   on voter wi and effect    on voter wi 
ensures that the candidates from u i  u  i receive at most         points in total  whereas
applying any other number of these shift actions implies that some candidate from u i
receives         points and  hence  p cannot win  we illustrate this with color   in our
running example 
with effects on voters wi and wi  is a multiple of   h      d       p passes candidate uij  
candidate u ij   and h  d candidates in between   figure   provides an illustration of the
above reasoning 
we next discuss selecting edges  as for the case of vertex selecting voters  in the description of our construction we have argued that  a  initially for each pair  x  y  of distinct
colors  edge eidx y
is selected and that  b  after applying  t     t  nx y     shift actions
 
    e x y ceases to be selected and e x y becomes selected  we
that affect voters wx y and wx y
id 
idt  
now argue that if we used a number of such shift actions that is not a multiple of four  then
p certainly would not be a winner of the election 
 
to see that this is the case  note that we designed the preference orders of wx y and wx y
so that the candidates e idx y and e idx y   for j              nx y    follow p in vote wx y in the
j

j

    in effect  if we apply a shift action that affects
same order in which they precede p in wx y

   

fibredereck  faliszewski  niedermeier    talmon

   
unbribed voters w    and w   


w      e    e    e    e    p  e    e    e    e    r   

   r     e   e   e   e   e   e   e   e   p
w   
 
 
 
 
 
 
 
 
   
applying two shift actions with effect    on w    and    on w   
     

w      e    e    e    e    e    e    p  e    e    r   
 
  
  



 
   
 
 
 
 
 
 
 
w     r  e   e   e   e   e   e   p  e   e  
  
   
applying four shift actions with effect    on w    and    on w   
           

w      e    e    e    e    e    e    e    e    p  r   
 
  
  
  
  

   r     e   e   e   e   p  e   e   e   e 
w   
 
 
 
 
 
 
 
 
  

figure    illustration of bribery actions affecting the second voter group of our running
example  note that in the unbribed election  every candidate from e    e   obtains   
     points in total  for each pair of colors x and y there is only one type of shift
    those shift actions with effect   on voter w
actions which affects voter wx y and wx y
x y
    no other shift action can affect some voter from the second
and effect    on voter wx y
group  applying a multiple of   shift actions with effect   on voter wx y and effect    on
 
ensures that the candidates from e    e   receive at most         points from
voter wx y
these voters  whereas applying any other number of these shift actions implies that some
candidate from e   receives         points and  hence  p cannot win  we illustrate this
with color pair   and   in our running example 
 
voters wx y and wx y
a number of times that is not a multiple of four  then one of these
candidates obtains         points  since there is no other way to affect the score of these
candidates  by lemma    in this case p cannot be a winner  we illustrate this effect in
figure   

solution for example    before we complete the correctness proof  let us illustrate the
solution for our example 
the unbribed election selects vertex v     v     and v   and the edges e    e  and e    hence 
for example  candidate e   receives      points and p  who receives only      points 
is not a winner 
by applying four shift actions with effect   on w  and effect    on w     we select v  
instead of v   to be the vertex of color   in our clique  as depicted in the bottom of figure    
   

ficombinatorial shift bribery

    we select e
by applying four shift actions with effect   on w    and effect    on w   
 
instead of e  to be the edge between color   and color   in our clique  as depicted in the
bottom of figure     now  each candidate from  e     e     e     e     e     e     receives      points
from the edge selecting voters  but only  points from the vertex selecting voters  every
other candidate receives at most      points from the vertex selecting voters and at most
 points from the edge selecting voters  hence  p  with         points  is a winner  this
solution corresponds to the left   colored triangle in figure   

correctness  it remains to show that there is a successful set of shift actions for the
constructed borda combinatorial shift bribery instance if and only if there is an
h colored clique in graph g 
for the if part  assume that there is an h colored clique h  v  g   without loss of
generality  let h    vz             vzhh   and let eh      v  v       v  v    h   furthermore  let zx y
denote the index of the edge in ex y representing the edge from eh between the vertex of
 eh   then it is
color x and the vertex of color y  that is  zx y   j if and only if eidx y
j
easy to verify that the following set of shift actions is successful 
   for each color i   h   include  zi      h      d      shift actions with effects on
voters wi and wi   
   for each pair  x  y  of distinct colors  include   zx y     shift actions with effects on
   
voters wx y and wx y
in other words  we select the vertices and the edges corresponding to the clique  in effect 
the scores of all the candidates is          except for d  who receives lower score   so p
is among the tied winners 
for the only if part  assume that there is a successful set of shift actions and consider
the election after applying these shift actions  by construction  we know that edge selecting
voters pick exactly one edge for each pair of distinct colors  hence the graph induced
by these edges contains vertices with h different colors  if this graph contains only h
vertices  then this graph must be an h colored clique  this graph cannot contain fewer than
h vertices   for the sake of contradiction  let us assume that this graph contains more than
h vertices  thus there are two selected edges  ej and ej     incident to two different vertices 
vi  ej and vi   ej     of the same color  by our construction  and the way vertex selecting
voters work   for at least one of the sets n  vi   and n  vi    all candidates in the set receive
     points from the vertex selecting voters  however  since both ej and ej   are selected
by the edge selecting voters  these voters give      points to each of the candidates e j   e j  
e j     and e j     hence  at least one of these candidates receives         points in total and 
by lemma    p is not a winner  this is a contradiction  and so the graph induced by the
selected edges must be an h colored clique 

references
bartholdi  iii  j  j   tovey  c  a     trick  m  a          how hard is it to control an
election  mathematical and computer modelling                
   

fibredereck  faliszewski  niedermeier    talmon

baumeister  d   faliszewski  p   lang  j     rothe  j          campaigns for lazy voters 
truncated ballots  in proceedings of the   th international conference on autonomous
agents and multiagent systems  aamas      pp          ifaamas 
betzler  n   bredereck  r   chen  j     niedermeier  r          studies in computational
aspects of votinga parameterized complexity perspective  in the multivariate algorithmic revolution and beyond  vol       of lncs  pp          springer 
binkele raible  d   erdelyi  g   fernau  h   goldsmith  j   mattei  n     rothe  j         
the complexity of probabilistic lobbying  discrete optimization          
boutilier  c   brafman  r  i   hoos  c  d  h  h     poole  d          cp nets  a tool
for representing and reasoning with conditional ceteris paribus preference statements 
journal of artificial intelligence research             
brandt  f   harrenstein  p   kardel  k     seedig  h  g          it only takes a few  on the
hardness of voting with a constant number of agents  in proceedings of the   th international conference on autonomous agents and multiagent systems  aamas     
pp          ifaamas 
bredereck  r   chen  j   faliszewski  p   nichterlein  a     niedermeier  r       a   prices
matter for the parameterized complexity of shift bribery  in proceedings of the   th
aaai conference on artificial intelligence  aaai      pp            aaai press 
bredereck  r   chen  j   hartung  s   kratsch  s   niedermeier  r   suchy  o     woeginger 
g       b   a multivariate complexity analysis of lobbying in multiple referenda 
journal of artificial intelligence research             
bredereck  r   faliszewski  p   niedermeier  r   skowron  p     talmon  n       a   elections with few candidates  prices  weights  and covering problems  in the fourth
international conference on algorithmic decision theory  adt        vol       of
lncs  pp          springer 
bredereck  r   faliszewski  p   niedermeier  r     talmon  n       b   large scale election campaigns  combinatorial shift bribery  in proceedings of the   th international
conference on autonomous agents and multiagent systems  aamas     pp       
bredereck  r   faliszewski  p   niedermeier  r     talmon  n          complexity of shift
bribery in committee elections  in proceedings of the twenty ninth aaai conference
on artificial intelligence  aaai     
bulteau  l   chen  j   faliszewski  p   niedermeier  r     talmon  n          combinatorial
voter control in elections  theoretical computer science             
cary  d          estimating the margin of victory for instant runoff voting  presented at the
     electronic voting technology workshop workshop on trustworthy elections 
chen  j   faliszewski  p   niedermeier  r     talmon  n          elections with few voters  candidate control can be easy  in proceedings of the   th aaai conference on
artificial intelligence  aaai      pp           
christian  r   fellows  m  r   rosamond  f  a     slinko  a          on complexity of
lobbying in multiple referenda  review of economic design                 
   

ficombinatorial shift bribery

conitzer  v   lang  j     xia  l          how hard is it to control sequential elections via
the agenda   in proceedings of the   st international joint conference on artificial
intelligence  ijcai      pp          aaai press 
dorn  b     schlotter  i          multivariate complexity analysis of swap bribery  algorithmica                 
downey  r  g     fellows  m  r          fundamentals of parameterized complexity 
springer 
elkind  e     faliszewski  p          approximation algorithms for campaign management 
in proceedings of the  th international workshop on internet and network economics
 wine      vol       of lncs  pp          springer 
elkind  e   faliszewski  p     slinko  a          swap bribery  in proceedings of the  nd
international symposium on algorithmic game theory  sagt      vol       of
lncs  pp          springer 
faliszewski  p   hemaspaandra  e     hemaspaandra  l          using complexity to protect
elections  communications of the acm                
faliszewski  p   hemaspaandra  e     hemaspaandra  l  a       a   how hard is bribery
in elections   journal of artificial intelligence research             
faliszewski  p   hemaspaandra  e   hemaspaandra  l  a     rothe  j       b   llull and
copeland voting computationally resist bribery and constructive control  journal of
artificial intelligence research             
faliszewski  p   reisch  y   rothe  j     schend  l          complexity of manipulation 
bribery  and campaign management in bucklin and fallback voting  in proceedings
of the   th international conference on autonomous agents and multiagent systems
 aamas      pp            ifaamas 
faliszewski  p     rothe  j          control and bribery in voting  in brandt  f   conitzer 
v   endriss  u   lang  j     procaccia  a  d   eds    handbook of computational
social choice  chap     cambridge university press 
flum  j     grohe  m          parameterized complexity theory  springer 
gabow  h  n          an efficient reduction technique for degree constrained subgraph and
bidirected network flow problems  in proceedings of the   th annual acm symposium
on theory of computing  stoc      pp          acm 
garey  m  r     johnson  d  s          computers and intractability  a guide to the theory
of np completeness  freeman 
hazon  n   lin  r     kraus  s          how to change a groups collective decision  
in proceedings of the   rd international joint conference on artificial intelligence
 ijcai      pp          aaai press 
hulett  h   will  t  g     woeginger  g  j          multigraph realizations of degree
sequences  maximization is easy  minimization is hard  operations research letters 
               
   

fibredereck  faliszewski  niedermeier    talmon

lang  j     xia  l          voting in combinatorial domains  in brandt  f   conitzer  v  
endriss  u   lang  j     procaccia  a  d   eds    handbook of computational social
choice  chap     cambridge university press 
lenstra  h  w          integer programming with a fixed number of variables  mathematics
of operations research                
magrino  t   rivest  r   shen  e     wagner  d          computing the margin of victory in irv elections  presented at the      electronic voting technology workshop workshop on trustworthy elections 
mathieson  l     szeider  s          editing graphs to satisfy degree constraints  a parameterized approach  journal of computer and system sciences                 
mattei  n   goldsmith  j     klapper  a       a   on the complexity of bribery and manipulation in tournaments with uncertain information  in proceedings of the   th international florida artificial intelligence research society conference  flairs     
pp          aaai press 
mattei  n   pini  m   rossi  f     venable  k       b   bribery in voting over combinatorial
domains is easy  in proceedings of the   th international conference on autonomous
agents and multiagent systems  aamas      pp            ifaamas 
niedermeier  r          invitation to fixed parameter algorithms  oxford university press 
obraztsova  s     elkind  e          on the complexity of voting manipulation under
randomized tie breaking  in proceedings of the   nd international joint conference
on artificial intelligence  ijcai      pp          aaai press 
obraztsova  s   elkind  e     hazon  n          ties matter  complexity of voting manipulation revisited  in proceedings of the   th international conference on autonomous
agents and multiagent systems  aamas      pp       
rajagopalan  s     vazirani  v  v          primal dual rnc approximation algorithms
for set cover and covering integer programs  siam journal on computing         
       
reisch  y   rothe  j     schend  l          the margin of victory in schulze  cup  and
copeland elections  complexity of the regular and exact variants  in proceedings of the
seventh european starting ai researcher symposium  stairs        pp         
ios press 
schlotter  i   faliszewski  p     elkind  e          campaign management under approvaldriven voting rules  in proceedings of the   th aaai conference on artificial intelligence  aaai      pp          aaai press 
xia  l          computing the margin of victory for various voting rules  in proceedings
of the   th acm conference on electronic commerce  ec      pp          acm
press 

   

fi