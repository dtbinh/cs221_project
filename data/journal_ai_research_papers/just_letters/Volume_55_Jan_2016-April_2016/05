journal artificial intelligence research                  

submitted        published      

large scale election campaigns 
combinatorial shift bribery
robert bredereck

robert bredereck tu berlin de

tu berlin 
berlin  germany

piotr faliszewski

faliszew agh edu pl

agh university science technology 
krakow  poland

rolf niedermeier
nimrod talmon

rolf niedermeier tu berlin de
nimrodtalmon   gmail com

tu berlin 
berlin  germany

abstract
study complexity combinatorial variant shift bribery problem
elections  standard shift bribery problem  given election
voter preference order set candidates outside agent 
briber  pay voter rank bribers favorite candidate given number
positions higher  goal ensure victory bribers preferred candidate 
combinatorial variant problem  introduced paper  models settings
possible affect position preferred candidate multiple votes  either positively
negatively  single bribery action  variant problem particularly
interesting context large scale campaign management problems  which 
technical side  modeled bribery problems   show that  general  combinatorial variant problem highly intractable  specifically  np hard  hard
parameterized sense  hard approximate  nevertheless  provide parameterized
algorithms approximation algorithms natural restricted cases 

   introduction
study computational complexity election campaign management case
campaign actions  such airing tv advertisement  launching web based campaign  organizing meetings voters  may large scale effects affect multiple
voters  further  interested settings actions positive effects  for example  voters may choose rank promoted candidate higher
find arguments presented given advertisement appealing  well negative ones
 for example  voters find advertisement aggressive   thus 
setting  two major issues faced campaign manager  a  choosing actions
c
    
ai access foundation  rights reserved 

fibredereck  faliszewski  niedermeier    talmon

positively affect many voters possible  b  balancing negative effects
campaigning actions  for example  concentrating negative effects voters
disregard promoted candidate anyway  
research falls within field computational social choice  subarea multiagent
systems  use standard election model  given set c candidates
collection v voters  represented preference order  that is  ranking
candidates preferred one least preferred one   assume
know preferences voters  perfect knowledge impossible
practice  assumption convenient simplification models fact may
 approximate  information preelection polls sources 
consider two voting rules  plurality rule  where pick candidate
ranked first voters  borda rule  where candidate c gets
voter v many points candidates v prefers c to  pick
candidate points   rules chosen plurality rule
widespread rule practice borda rule well studied
context campaign management 
within computational social choice  term campaign management  introduced
elkind  faliszewski    slinko        elkind   faliszewski        alternative name
bribery family problems  introduced faliszewski  hemaspaandra    hemaspaandra      a  cases one focuses modeling actions available election
campaigns  result money spent campaign manager  voters change
votes  paper study campaign management shift bribery
problem  elkind et al         elkind   faliszewski        bredereck  chen  faliszewski 
nichterlein    niedermeier      a  bredereck  faliszewski  niedermeier    talmon        
shift bribery candidate p want win  voter v
price v  i  voter willing shift p forward positions preference
order    ask lowest cost ensuring p winner  see section    
references campaign management problems  
shift bribery problem one major drawback model campaign management  incapable capturing large scale effects campaign actions  particular 
one puts forward tv spot promoting given candidate  voters react
positively rank candidate higher  oblivious it  react
negatively  ranking candidate lower  shift bribery cannot model correlated
effects  paper introduce study combinatorial shift bribery problem  allowing campaign actions effects  positive negative  whole groups
voters 
interested understanding realistic model campaign management
affects complexity problem  indeed  shift bribery is  computationally 
well behaved problem  example  plurality rule solvable polynomial time
borda rule np complete  elkind et al          polynomial time
  approximation algorithm  elkind et al         elkind   faliszewski       
fixed parameter  fpt  algorithms  either exact capable finding solutions arbitrarily
close optimal ones  bredereck et al       a   work  ask extent
   course  price necessarily reflect direct money transfer voter  rather cost
convincing voter change mind 

   

ficombinatorial shift bribery

retain good computational properties allow large scale effects 
results surprising positively negatively 
   combinatorial shift bribery becomes np complete w    hard even
plurality rule  even restrictive choice parameters  even correlated
effects particular campaign actions limited two voters  moreover 
hardness results imply good  general approximation algorithms exist
allow negative effects campaign actions 
   spite above  still possible derive relatively good  approximation 
algorithms  plurality rule borda rule  provided
restrict effects campaign actions positive either
involve voters each  involve groups consecutive voters  with respect
ordering voters might correspond  example  time  
results summarized table   section    generality problem
combinatorial nature natural obtain many hardness results  yet 
extent strength surprising  fact find nontrivial landscape
tractable cases 
    related work
work builds top two main research ideas  first  studying campaign management bribery problems  and  second  studying combinatorial variants election
problems 
study computational complexity bribery elections initiated
faliszewski et al       a   continued number researchers  faliszewski  hemaspaandra  hemaspaandra    rothe      b  hazon  lin    kraus        mattei  goldsmith 
  klapper      a  mattei  pini  rossi    venable      b   elkind et al         elkind
faliszewski        realized formalism election bribery problems useful
point view planning election campaigns  particular  defined
swap bribery problem restricted variant  shift bribery  former possible  given price  swap two adjacent candidates given vote  latter 
allowed shift preferred candidate forward  various problems  modeling
different flavors campaign management  studied  including  example 
possibility alter number approved ranked candidates  baumeister  faliszewski 
lang    rothe        faliszewski  reisch  rothe    schend        schlotter  faliszewski 
  elkind         different  positive  applications bribery problems include  example 
margin victory problem  goal briber prevent candidate winning  possible low cost  suggests election
could tampered  cary        magrino  rivest  shen    wagner        xia 
      reisch  rothe    schend        
point view  related works elkind et al          elkind
faliszewski         bredereck et al       a         dorn schlotter        
former ones study shift bribery  generalize  parameterized complexity
shift bribery studied bredereck et al       a  shift bribery multiwinner
   

fibredereck  faliszewski  niedermeier    talmon

elections studied bredereck et al          whereas work dorn schlotter
       pioneers use parameterized complexity analysis  swap  bribery problems 
work largely inspired bulteau  chen  faliszewski  niedermeier 
talmon        chen  faliszewski  niedermeier  talmon         introduced
studied combinatorial variants election control  election control well studied
topic computational social choice  initiated bartholdi  tovey  trick       
studied numerous researchers  we point readers faliszewski  hemaspaandra 
  hemaspaandra        faliszewski   rothe        detailed account   briefly put 
control problems model attempts changing election results changing structure  standard types control include adding  deleting  partitioning candidates
voters  control problems  especially related adding deleting voters  quite
relevant issues campaign management  and  indeed  section   show connection combinatorial shift bribery  combinatorial  control adding
voters  bulteau et al         
idea combinatorial shift bribery somewhat related problem lobbying
multiple referenda  introduced christian  fellows  rosamond  slinko       
 parameterized study provided bredereck  chen  hartung  kratsch  niedermeier 
suchy    woeginger      b  probabilistic variant studied  parameterized
sense  binkele raible  erdelyi  fernau  goldsmith  mattei    rothe         there 
number yes no elections goal ensure election
majority voters vote yes  single lobbying action convince one voter
vote yes elections  combinatorial shift bribery single election
single action affect multiple voters  whereas lobbying problem multiple
elections action affects one voter 
stress use term combinatorial variants election problems
different one used well established line work regarding combinatorial
candidate spaces  see lang   xia        works  example  boutilier  brafman 
hoos    poole        conitzer  lang    xia        mattei et al       b   work use
term combinatorial refer combinations voters affected bribery
action 
    organization paper
providing preliminaries section    give formal definition combinatorial shift bribery problem section    section   give overview
results  shed light connections combinatorial shift bribery
problem combinatorial control section    then  section    present
series strong hardness results covering classes shift actions restrictive sets parameters  for example  many results already apply case two
candidates   section    develop several exact algorithms special cases combinatorial shift bribery  section   describe approximation algorithms
combinatorial shift bribery  proofs available appendices
 either given proof relies ideas already presented proofs  oras
case theorem  when proof particularly involved   end conclusions
section   
   

ficombinatorial shift bribery

   preliminaries
section  briefly describe model elections  define two voting rules
study  review basic concepts parameterized complexity 
    elections
election e    c  v   consists set c    c            cm   candidates collection
v    v            vn   voters  voter represented preference order  is 
linear ranking candidates preferred one least preferred one 
use voters preference orders interchangeably  example  c    c    c    c    
voter v  may preference order v    c  c  c  indicate likes c  best 
c    c   for clarity  treat voters females candidates males  
assume arbitrary  but fixed  canonical order set candidates  for example  one could order candidates lexicographically names  


subset c candidates  writing within preference order means listing

didates canonical order  writing means listing reverse
order 
    voting rules
voting rule r function that  given election e    c  v    outputs set r e  c
 tied  election winners  candidate c r e  said r winner
election e  consider two election rules  plurality rule borda rule 
assign points candidates output highest score  plurality
rule  candidate receives one point voter ranks first  borda
rule  candidate receives points voter prefers candidate exactly
ones 
use nonunique winner model  is  candidates selected given
voting rule viewed equally successful winners  in practice  course  one use
sort tie breaking rule resolve situation  disregarding ties simplifies
analysis  however  interested reader consult papers effects tie breaking
complexity election problems  e g  obraztsova   elkind        obraztsova  elkind 
  hazon        
    parameterized complexity
assume familiarity standard notions regarding algorithms complexity theory 
briefly review notions regarding parameterized complexity theory  downey   fellows 
      flum   grohe        niedermeier        
parameterized complexity theory measure complexity given problem
respect input size particular parameter problem  typical
parameters election problems include number candidates  number voters 
solution size  for example  number campaign actions one perform  see
betzler  bredereck  chen    niedermeier        survey parameterized complexity
voting   say parameterized problem fixed parameter tractable  is fpt 
algorithm given input instance parameter k solves problem
   

fibredereck  faliszewski  niedermeier    talmon

g k  i o    time  g computable function  i  length encoding
i  hierarchy hardness classes parameterized problems 
two important levels formed classes w    w     convenient
way defining classes appropriate reduction notion complete
problems  specifically  say parameterized problem reduces parameterized
problem b two computable functions  h h    following properties 
given instance parameter k  h i  outputs fpt time  i e   time g k  i o   
computable function g  instance   b parameter k   h   k  
yes instance   yes instance b  words  h
many one reduction b allowed run fpt time  required
output instance whose parameter upper bounded function input instances
parameter 
class w    defined class problems parameterically reduce
clique problem  w    class problems parameterically reduce set
cover problem  problems parameterized solution size  that is 
value h definitions  
clique
input  undirected graph g    v  g   e g   integer h 
question  set h h vertices edge
pair vertices h 
set cover
input  universe set x  family subsets x  integer h 
question  subset   h subsets whose union gives x 
sometimes consider special variants problems describe detail
within relevant proofs 
parameterized problem contained class xp algorithm that  given
instance parameter k  solves time  i g k    g computable
function  holds fpt w    w    xp  point readers interested
details regarding parameterized complexity theory  and design parameterized
algorithms  textbooks downey fellows         flum grohe        
niedermeier        

   combinatorial shift bribery problem
section first define combinatorial shift bribery problem full
generality and  then  describe simplify remainder
study 
    definition
let r voting rule  definition r combinatorial shift bribery somewhat involved  therefore first define necessary components  given election
e    c  v   preferred candidate p c  goal ensure p r winner
election  end  number possible actions choose from 
   

ficombinatorial shift bribery

let     c  number candidates e let n     v   number
voters  shift action f n dimensional vector  possibly negative  integers 
f    f               f  n     r combinatorial shift bribery given family f  
 f            f   shift actions  particular shift action models possible campaigning
action  airing tv spot organizing meeting voters  components
given shift action measure effects action particular voters  given
subset f   f available shift actions  define effect f   voter vi    n 
p
 i 
e  i   f       fj f   fj   further  shift action fj    j   comes nonnegative
integer cost w fj   application 
voter vi    n  individual threshold function   z z describing
shift actions affect voter  require         nondecreasing 
let f   collection shift actions  applying shift actions f     voter vi
   n  shifts preferred candidate p     positions forward  a  e  i   f         
 b   t  e  i   f        t       shift     positions back  a  e  i   f         
 b   t  e  i   f        t    
finally  given nonnegative integer b  budget pwe ask existence
collection f   f available shift actions total cost fj f   w fj   b
applying p r winner given election  case 
say f   successful  consider following example 
example    consider election below  set candidates c    a  b  c  p  
collection voters v    v    v    v     p preferred candidate  three
available shift actions  unit cost  i e   w f      w f      w f         
election
v    c b p
v    b c p
v    p b c

shift actions

 
 
 

     

 
 
 
f 

f 

f 

threshold functions that 
                                                
                                             
                                             
use borda rule  candidates a  b  c  p have  respectively             points 
easy see applying single shift action ensure ps victory  however 
applying shift actions f      f    f    results p winner  total effect
two shift actions            according threshold functions  means p
shifted forward one position v  v    shifted back one position v   
shifts  modified election looks follows 
   

fibredereck  faliszewski  niedermeier    talmon

v  
v  
v  

election
 cpba
 bapc
 apbc

is  apply shift actions f      f    f     candidate c
  points  candidates   points each  thus  a  b  p tied winners
f   indeed successful set shift actions 
 
formally  given voting rule r  define r combinatorial shift bribery
problem follows 
r combinatorial shift bribery
input  election e    c  v    c    c            cm   set candidates
v    v            vn   collection voters  set f    f            f   shift
actions costs w f             w f    threshold functions             n   nonnegative integer budget b  one candidates designated preferred
candidate p 
question  subset f   f shift actions total cost b
apply shift actions f   candidate p r winner
resulting election 
definition quite complicated  captures important features campaigning  example  use threshold functions allows us model voters
unwilling change position preferred candidate beyond certain range  irrespective strength campaign  fact different shift actions different
costs models fact particular actions  for example  airing tv spots organizing
meetings  may come different costs 
    relation standard shift bribery
necessary comment relation combinatorial shift bribery
problem non combinatorial variant  shift bribery  elkind et al         elkind  
faliszewski        
non combinatorial variant shift bribery problem defined similarly
combinatorial one  voters threshold functions instead
collection shift actions costs  voter vi shift bribery price
function   cost shifting preferred candidate forward positions vi
preference order  t   only forward shifts allowed   require        
functions nondecreasing  formally  following definition  r
voting rule  
r shift bribery
input  election e    c  v    c    c            cm   set candidates v    v            vn   collection voters  collection              n  
shift bribery price functions  nonnegative integer budget b  one
   

ficombinatorial shift bribery

candidates designated preferred candidate p 
question 
vector  s            sn   natural numbers  a 
pn
i    si   b  b  voter vi shift p forward si positions 
p r winner resulting election 
intuitively seems r shift bribery simpler combinatorial
cousin  making observation formal requires care 
proposition    let r voting rule  holds r shift bribery many one reduces
r combinatorial shift bribery polynomial time 
proof  consider instance r shift bribery election e    c  v   
c    c            cm   v    v            vn    collection shift bribery price functions
 v            vn    budget b  without loss generality  take c  preferred
candidate denote p  form instance r combinatorial shift
bribery election  budget  preferred candidate 
shift actions  costs  voters threshold functions constructed

pt
mj
 
follows  voter vi   set threshold function  t    j    
number positions possible shift preferred candidate
forward vi preference order  create shift action fi t zero effect
voters vi   effect  mt   cost
p fi t w fi t      t   t    
sequence  s            sn   ni    si   b p r winner
election voter vi shift p forward si positions 
solution constructed instance combinatorial shift bribery  vi  
use shift actions fi             fi si   total bribery cost shift
bribery instance and  implementing shifts  vi preferred candidate
shifted exactly si positions 
assume constructed combinatorial shift bribery instance yesinstance  consider subset f   shift actions whose total cost b
ensure p r winner election  and recall shift action used
once   voter vi v   define si largest integer shift
actions fi             fi si belong f     let us fix voter vi   claim applying
shift actions f    in combinatorial shift bribery instance   preferred
candidate shifted forward exactly si positions  definition si   immediate
shifted forward least si positions  shifted forward
positions
following reason  shift actions fi             fi si total effect
p mj
vi equal sj  
 
  equal  si    definition  shift action fi si   
f     sum remaining shift actions effect vi smaller than 

x
j si   

mj

 

 

ms
 
x

 j    msi     

j  

however   si       si      msi     means even used shift actions
aside fi si      vi preference order still would shift p exactly si positions 
conclusion  means implementing shift actions f   ensures
voter vi shift p forward exactly si positions  further  vi
   

fibredereck  faliszewski  niedermeier    talmon

w fi         w fi si      si    therefore  sequence  s            sn   witnesses
input instance shift bribery yes instance total cost shifts
b  as combinatorial instance  ensure p winner  as
combinatorial instance  
since reduction clearly runs polynomial time  proof complete 
construction proof somewhat involved  especially one takes
account simply shows combinatorial shift bribery problem indeed
generalizes much simpler  non combinatorial  one  nonetheless  somewhat contrived
use threshold functions seems necessary  indeed  combinatorial shift
bribery problem restricted shift actions positive entries exactly one
voter each  used simple linear threshold functions  would obtain shift
bribery case convex price functions  bredereck et al       a  
general variant shift bribery problem which  example  np hardness
results elkind et al         hold  as shown bredereck et al       a   nonetheless
general one 
    general hardness result
turns combinatorial shift bribery problem  defined section    
above  general allows following  sweeping  hardness result  
theorem    plurality rule borda rule  combinatorial shift
bribery np hard even five voters two candidates budget constraints 
borda rule  combinatorial shift bribery np hard three voters
four candidates 
proof  reduce following  weakly np hard  variant subset sum problem
 it simple exercise show np hardness reduction classic subset
sum problem  
subset sum  zero variant 
input  set     a              integers 
p
question  nonempty set a  ai a  ai     
given instance    a              subset sum  zero variant   construct
instance plurality combinatorial shift bribery two candidates  since
plurality rule borda rule coincide elections two candidates  hardness
result transfers borda combinatorial shift bribery  and  fact  almost
natural voting rules  
construct following election 
   note  however  prove weak np hardness  is  result may hold assume
occurring numbers encoded unary  contrary  hardness proofs paper give
strong hardness results independent number encoding issues 

   

ficombinatorial shift bribery

election
v    p
v    p
v    p
v    p
v    p

shift actions



a 





a 









       




 
 




 
 


f 

   

fn

is  element ai a  set f shift actions contains one shift action
effect ai v    effect ai v    effect   v    effect two voters 
voter threshold functions follows  candidate p shifted last position
v  v  effect voters negative  that is                     
candidate p shifted top position third voter effect positive  that
is              set cost shift action one set budget
n  thus budget allows us pick combination shift actions 
direction  let a  non empty subset whose element wise sum equals
zero  applying f       fi   ai a     p winner  since a  sums zero 
effect first two voters  effect third voter positive  a 
non empty  thus p preferred three five voters wins election 
direction  let f   f subset shift actions makes p winner 
then  f   must non empty p win initial election  claim
element wise
sum a      ai   f     zero  sake contradiction  assume
p
ai a  ai       sum negative  would negative effect
first voter  would preferred three voters five  would win election 
sum positive  would effect second voter taking
role first one 
using similar idea  show reduce subset sum  zero variant 
borda combinatorial shift bribery three voters four candidates  given
input before  construct following instance 
election
v    p d  d  d 
v    p d  d  d 
v    d  d  d  p

shift actions



 a 
 an




 a         an




 
 


f 

   

fn

is  element ai a  f contains one shift action effect  ai v   
effect  ai v    effect   v    voter vi threshold function
 t    t  effect  p shifted last position first second voter
effect voters negative  shifted top position third vote
effect positive  shift action unit cost  set budget
n  i e   pick combination shift actions  
   

fibredereck  faliszewski  niedermeier    talmon

observe d  original winner election obtains seven points whereas
p obtains six points 
direction  let a  non empty subset whose element wise sum equals
zero  apply shift actions f       fi   ai a    p becomes winner  since a  sums
zero  effect first two voters  effect third voter positive
a  non empty  thus  p preferred candidate voters
wins election 
direction  let f   f subset shift actions makes p winner 
then  f   must non empty p win initial election  show
element wise
sum a      ai   f     zero  sake contradiction assume
p
ai a  ai       sum negative  would negative effect
first voter p would obtain six points  whereas d  would obtain seven  sum
positive  would effect roles first second voter
switched 
effectively  theorem   shows studying large scale effects campaign actions
full fledged r combinatorial shift bribery problem leads hopelessly
intractable problem  hardness even elections fixed number
candidates fixed number voters 
    restricted variants combinatorial shift bribery
given hardness results theorem    throughout remainder paper
focus restricted variants combinatorial shift bribery problem  assume
individual threshold functions identity functions  that is  voter
integer t  holds  t    t   assume shift action unit
cost  consider restricted types shift actions  assumptions require
additional discussion 
restrictions threshold functions costs shift actions seem
basic and  fact  even satisfied instances built proof theorem    reason assuming that  one hand  seems beyond point
study instances involved theorem    and  hand 
interact restrictions  leading tractable cases  but  important
consequences 
first  using identity threshold functions means model societies prone
propaganda  identity threshold functions cannot differentiate voters
less responsive actions  second  assuming every shift action
unit cost models settings costs particular campaign actions similar
enough small differences irrelevant  actual number actions
choose perform sufficiently good approximation real cost  true 
example  case organizing meetings voters  often comparable
prices  likely case shift actions model actions airing tv
spots  spot similar cost produce broadcast  greatest disadvantage
assuming unit costs longer model mixed campaigns use actions
several different types  meetings voters  tv spots  web campaigns  etc   
   

ficombinatorial shift bribery

restrictions types allowed shift actions even greater impact
nature campaigns study  study following classes shift actions 
unrestricted shift actions  put restrictions allowed shift actions 
models general  and  naturally  least tractable  setting 
bounded effect shift actions  consider parameter require
shift action f    f               f  n    holds j    j n  
 f  j      still general setting  assume campaigning
action limited impact voter 
unit effect shift actions  class bounded effect shift actions     
given voter  applying given shift action either leave preferred candidate
p unaffected shift p one position down 
interval shift actions  subclass unit effect shift actions never affect
voters negatively  shift action interval voters
affected positively  the interval respect order voters
input collection v    class shift actions models campaigns associated
time window certain voters reached  campaigns local given
neighborhoods   for example  include putting multiple posters  organizing
meetings  etc    speak  z  interval shift actions mean interval shift actions
shift action affects z voters 
unit effect two voters shift actions  subclass unit effect shift actions
affect two voters most  focus shift actions affect voters
positively  denoted          shift actions  affect one voter positively
one voter negatively  denoted         shift actions  reason studying
families model particularly natural types election campaigns 
rather establish limits tractability problem  example 
consider         shift actions understand intractable shift actions
negative effects          shift actions simplest shift actions type
may useful campaign  one would never deliberately use shift action
affects preferred candidate negatively  

figure   presents difference bounded effect shift actions  unit effect shift
actions  unit effect two voters shift actions  interval shift actions graphically 
discuss next section  type allowed shift actions huge impact
computational complexity problem 
   neighborhood scenario  take simplified view society voters lives line 
course  would natural take two dimensional neighborhoods account  view
interesting direction future research  time consider simple settings
possible  time window scenario  natural ordering voters point time
cast votes affected campaign 

   

fibredereck  faliszewski  niedermeier    talmon

 

 
 

 

 
 

 
 

 

 

 

 

 

        
 

 

 

 

unit effect
 

 

 
z
 
 

       

 
 

        

 

 z

figure    restrictions shift actions  visualize  from left right  top bottom  
shift action maximum effect     single shift action maximum number
    voters affected single shift action  unit effect shift action  shift action
effect    one voter effect   another voter          shift action
effect    two voters           shift action effect    interval
size z  z   intended interpretation voters listed vertically  top
bottom 

   overview results
provide high level overview results  turns even rather strong
restrictions place  that is  restrictions defined section       combinatorial shift
bribery computationally hard settings  present quest
understanding border tractability intractability combinatorial shift
bribery  end  employ following techniques ideas 
   seek regular complexity results  np hardness results  parameterized
complexity results  fpt algorithms  w    hardness w    hardness results 
xp algorithms  
   consider structural restrictions sets available shift actions 
   seek approximation algorithms inapproximability results  that is  approximation hardness results  
   

ficombinatorial shift bribery

parameterized complexity results  consider following parameters   a 
number n voters   b  number candidates   c  budget b   d 
maximum effect single shift action   e  maximum number voters affected
single shift action 
discussions  in approximability combinatorial shift bribery regard
task minimizing cost ensuring preferred candidates victory  means
that  example    approximation algorithm decide possible ensure
preferred candidates victory all  and  so  output successful set shift
actions total cost twice high optimal one 
summarize results table    results show combinatorial shift
bribery highly intractable  theorems          show problem computationally hard  in terms np hardness  w    hardness  inapproximability even fpt
algorithms  plurality rule borda rule  even various restricted
forms unit effect shift actions  even two candidates  means that  essence 
problem hard natural voting rules  since two candidates natural voting rules
boil plurality rule 
further  theorem   theorem    show problems w    hard even
take number candidates budget joint parameter  even extremely
restricted shift actions  problem remains hard  for case borda rule 
parameterized number voters  theorem     contrary  case
plurality parameterization number voters obtain tractability 
obtain several approximability results  essence  results possible
cases shift actions negative results  intuitive reason fact
shift actions negative effects  computationally hard check
whether preferred candidate win even without restrictions budget 
approximation algorithms based results non combinatorial
variant problem  due elkind et al         elkind faliszewski        
either use non combinatorial algorithms directly  subroutines algorithms 
derive results plugging combinatorial shift bribery specific blocks
framework developed elkind et al         elkind faliszewski        

   connection combinatorial control
study combinatorial variants problems modeling ways affecting election results
initiated bulteau et al          considered combinatorial control adding voters
 combinatorial ccav  plurality rule condorcet rule  turns
plurality rule reduce problem  combinatorial  ccav
 combinatorial  shift bribery  non combinatorial variants problems
give much since problems easily seen polynomial time solvable 
however  strong hardness results plurality combinatorial ccav
transfer case plurality combinatorial shift bribery  formally  pluralitycombinatorial ccav defined follows  bulteau et al         
plurality combinatorial ccav
input  set c candidates preferred candidate p c  collection v
   

fibredereck  faliszewski  niedermeier    talmon

table    overview results  show exact algorithms approximation algorithms plurality combinatorial shift bribery borda combinatorial
shift bribery  different restrictions shift actions  see figure     results marked
follow work elkind et al          follow work bredereck
et al       a   follow work elkind faliszewski         follow
work bredereck et al          note variants xp
parameterized budget b  observation    
shift actions

regular
shift bribery
 convex prices 

rule

exact complexity

approximability

plurality

poly  time solvable  o 



borda

np complete o  
fpt b    
w    hard n   

unit effect

  approximable
poly  time   o  
fpt approximation
scheme n   

w    h b even

inapproximable even

     thm     

fpt time b even

xp n  prop     

     thm    

plurality

fpt n  thm     



borda

w    hard n  thm    



inapproximable even
fpt time n  cor     

       
np h even      thm     


w    h b
combined  thm    

plurality
        

 z  intervals



inapproximable
even      thm    

fpt n  thm    



w    h b

  approximable

combined  thm    

poly  time  thm     

plurality

fpt n  thm     

borda





w    h b  thm     

   

z approximable
poly  time  thm     
 z approximable
poly  time  thm     
  approximable
mz time  thm     

ficombinatorial shift bribery

registered voters  having preference orders c   collection w unregistered voters  having preference orders c   bundling function   w  w
 for w w holds w  w    budget k 
question  collection w   w
k voters p

 
winner modified election  c  v w  w    w    
intuitively  unregistered voter w w   bundle   w   given explicitly
input   add w election  for example  somehow convincing
vote   voters bundle join election  for example  people choose
vote influence friend  
theorem    plurality combinatorial ccav polynomial time many one reducible
plurality combinatorial shift bribery  instance plurality combinatorialccav candidates  reduction outputs instance plurality combinatorial
shift bribery     candidates 
proof  consider input instance plurality combinatorial ccav candidate set
c  collection registered voters v   collection unregistered voters w   bundling function
  preferred candidate p c  limit k number voters add 
form instance plurality combinatorial shift bribery  follows 
form candidate set c     c  d   new candidate  form
set voters v   following way 
   voter v v   include v v     preference orders extended rank
last 
   voter w w ranks p first  include v   two voters  xw  
preference order form p   x w   preference order form
p  
   voter w w ranks candidate c c    p  first  include
v   voter xw preference order p c   voter x w preference order
p  
   include   w   c  voters v   preference orders achieve
following effects   a  c c score s c  election  c  v    c ranked first
  w     s c  voters v      b  ranked first exactly   w   voters v    
achieve effects  c c    p  include   w   voters rank c first 
include   w   voters rank p first  include  w   voters rank first 
voter w w   introduce shift action fw following effects 
 w   w  ranks p first fw effect   xw   but x w    w  ranks
candidate c    p  first  fw effect   xw  effect    x w   all
entries zeros   finishes construction  provide proof correctness
following example reduction 

w 

example    consider following input plurality combinatorial ccav 
preferred candidate p budget k   
   

fibredereck  faliszewski  niedermeier    talmon

registered voters
v    p

unregistered voters
w    p

bundling function
 w       w    w   

v    p

w    p

 w       w   

v    p

w    p

 w       w    w   

construct following input plurality combinatorial shift bribery  notice
number entries shift action    
election
v    p
v    p
v    p
xw    p
x w    p
xw    p
x w    p
xw    p
x w    p
   dummies  
  dummies   p
  dummies  

shift actions

 
 
 

     

     


     


     

     


     


     

     


     


     
 
 
 
fw 

fw 

fw 

note adding voter w  input election plurality combinatorial ccav
results p winner election  correspondingly  applying shift action fw  results
p winner input election plurality combinatorial shift bribery   
see correctness construction  note applying shift action corresponding bundle voter w w effect differences scores
candidates c adding bundle  w  original control instance 
specifically  disregarding score now  following 
w   w  ranks p first  increase score p one 
w   w  ranks candidate c c    p  first  increase score
c one  further  score candidate never grow beyond   w   pluralitycombinatorial shift bribery instance score p never fall   w   
therefore  never prevent p winner 
thus  reduction correct  furthermore  reduction computed polynomial time outputs plurality combinatorial shift bribery instance one
candidate input plurality combinatorial ccav instance  observe output instance uses unit effect shift actions affect twice
many voters largest bundle input instance 
   

ficombinatorial shift bribery

based proof theorem   results bulteau et al          obtain
following result 
corollary    plurality combinatorial shift bribery w     hard respect
budget b even      w     hard respect b even shift actions unit
effect   voters  np hard even shift actions unit effects
  voters 
proof  result follows applying reduction proof theorem  
plurality combinatorial ccav instances produced reductions theorems      
  bulteau et al          respectively 

   hardness results
results previous section show bound hit hard instances
combinatorial shift bribery even restricted setting  section explore
restrictive hard settings are  results organized type shift actions
allowed 
    results general unit effect shift actions
start considering unit effect shift actions  allowed effects positive only 
obtain np hardness w    hardness parameterizing budget b 
allow negative unit effects  problem gets even harder go beyond
hope approximation algorithm  even approximation algorithm allowed
run fpt time parameterizing budget b  quite strikingly  results hold
even two candidates 
theorem    plurality rule borda rule  combinatorial shift
bribery np hard w    hard parameter budget b  even two candidates
even shift action effects either      voter 
proof  provide parameterized reduction set cover  recall section       let
 s  x  h  instance set cover     s            sm   family subsets
universe x    x            xn    h number sets use cover x 
construct instance plurality combinatorial shift bribery two candidates  note that  since borda rule plurality rule coincide elections two
candidates  hardness result transfers borda combinatorial shift bribery 
construction follows  p candidates 
element xi x create element voter vi preference order p  create another set
n dummy voters preference order p  set f shift actions contains
set sj function fj effect    element voters corresponding
elements set  that is  fj  i      xi sj fj  i      otherwise   finally 
set b    h  finishes construction  clearly  reduction computed
polynomial time  consider following example applying reduction 
example    let input set cover x    x    x    x    x    x     
 s    s    s     s               s            s            h      construct
following input plurality combinatorial shift bribery 
   

fibredereck  faliszewski  niedermeier    talmon

election
v    p
v    p
v    p
v    p
v    p
  dummies   p

shift actions

 
 
 

     


     


     

     

 

 

 

f 

f 

f 

note  s    s    set cover  and  analogously  choosing f  f  results p
winner election 
 
remains show set cover size h successful
set shift actions size h 
part  assume set cover   size h  then  applying
 
f    fj   sj     makes p win election  since   set cover  p preferred
candidate n element voters and  hence  winner election 
part  assume set shift actions f   f size h
whose application makes p win election  then  p must preferred candidate
element voters bribed election shift action effect dummy
voter  since n element voters n dummy voters        sj   fj f     set
cover  finally  since b   h    size h 
allowing negative  but unit  effects voters  adapt reduction
theorem   show strong inapproximability result  inapproximability result follows
since corresponding reduction  yes instances  correct solutions use
exact given budget 
theorem    unless w      fpt  combinatorial shift bribery inapproximable  in
fpt time parameter b  plurality rule borda rule  even two
candidates unit effect shift actions 
proof  modify reduction theorem   show inapproximability result 
let  s  x  h  set cover instance    s            sm   x    x            xn   
without loss generality  assume  s    h  construct instance pluralitycombinatorial shift bribery two candidates follows   since two
candidates only  proof applies case borda combinatorial shift bribery
well  
 s 
element xi x  create  s  element voters vi            vi   preference
order p  set sj create set voter vj  preference order p d 
create  s   x     s   h dummy voters  preference order p  set f
shift actions contains  set sj   shift action fj effect  
element voter corresponding element set effect   set voter
corresponding set  finally  set b    h  completes construction 
clearly computable polynomial time 
   

ficombinatorial shift bribery

next  show successful set shift actions size h
set cover size h 
part  assume set cover   size h  then  f    
 fj   sj     successful set shift actions  since   set cover  p
preferred candidate  s   x  element voters preferred candidate
least  s  h set voters  corresponding sets set cover   moreover 
preferred candidate  s   x     s   h dummy voters preferred
candidate h set voters  corresponding sets set cover   hence 
either p wins p tie winners 
part  assume successful set shift actions f   f
size h  then  p must preferred candidate element voters
bribed election  element voter p  would least
 s    element voters p  the element voters corresponding
element   thus would total  s   x     element voters  s  set
voters prefer p  least  s   x     s   h dummy voters  s  element voters
prefer d  since assumed  s    h  would mean p winner  thus 
must       sj   fj f     set cover  and  due budget constraint 
follows  s     h 
finally  show plurality combinatorial shift bribery inapproximable
even fpt time parameterized budget  assume  sake contradiction  successful set shift actions f   f  f       b exists  then  bribed
election  least  s   x     s   h dummy voters  f     h     set voters prefer d 
 s   x  element voters  s   h      set voters prefer p  thus 
unique winner  hence  successful bribery action must optimal respect
budget fpt algorithm plurality combinatorial shift bribery  parameterized budget  would solve w    hard problem set cover  parameterized
solution size  fpt time  contradiction assumption fpt    w    
    results shift actions unit effect two voters
previous section limit number voters affected shift action 
focus case unit effect shift action affect two voters  first show combinatorial shift bribery remains np hard hard
approximate         shift actions  provide parameterized hardness results
                 shift actions  proof relatively similar one
theorem   defer appendix a 
theorem    unless p   np  combinatorial shift bribery inapproximable  in
polynomial time  plurality rule borda rule  even two candidates
        shift actions 
opposed theorem    result yield w    hardness parameter budget b  proof uses reduction set cover
value budget size universe set x  insist parameterized
hardness unit effects two voters  accept larger sets candidates 
however  increase large  show w    hardness combinatorial
shift bribery jointly parameterized budget number candidates 
   

fibredereck  faliszewski  niedermeier    talmon

theorem    plurality rule borda rule  combinatorial shift
bribery w    hard combined parameter  m  b   even either
        shift actions          shift actions 
proof  four cases consider  begin plurality rule          shift
actions 
plurality rule          shift actions  describe parameterized reduction w    hard clique problem  parameterized solution size  pluralitycombinatorial shift bribery          shift actions  parameterized  m  b  
let  g  h  instance clique v  g     u            un    e g     e            em    
create following instance plurality combinatorial shift bribery  set
candidates  p  d     d            dh     vertex ui v  g   cre

ate vertex voter vi preference order p  moreover  create n   h dummy


voters preference order p each  edge  ui   uj   e g   create
shift action f ui  uj   effect   vertex voters vi vj   effect  

voters  finally  set budget b    h    completes construction 
computable polynomial time  consider following example 
example    following graph  looking clique size h     
u 

u 

u 

u 

u 

u 

u 

construct following input plurality combinatorial shift bribery 
election
v    d  d  p
v    d  d  p
v    d  d  p
v    d  d  p
v    d  d  p
v    d  d  p
v    d  d  p
  dummy   p d  d 

shift actions

 
 
 

     


     

     


     


     

     

 
 
 


 

 


 

 


 


 

 

 


 

 


 

 


 


 

 

 


 

 


 

 


 


 

 

 

fu   u 

fu   u 

fu   u 

fu   u 

fu   u 

fu   u 

note  v    v    v    form clique size   input graph clique  and  accordingly  applying set shift actions  fu   u    fu   u    fu   u    results p winner
election plurality combinatorial shift bribery 
 
   

ficombinatorial shift bribery

without loss generality  assume d  ranked first  arbitrary fixed 


order d  observe n  vertex voters h dummy voters rank d  first 
n  h dummy voters rank p first  hence  make p win election 
one needs h additional voters rank p first  and  effect  rank d  first  
remains show constructed instance contains successful set shift actions f   size h  g  h  contains clique size h 
part  let h v  g  set h vertices forming clique let e   e g 
set edges vertices h  then  observe f      f ui  uj    
 ui   uj   e     successful set shift actions  vertex voter vi corresponding
clique vertex ui h  candidate p shifted h   positions forward  means that 
total  h vertex voters rank p first p ties winner election 
part  let f   successful set shift actions  since dummy voters
affected shift action  follows order make p winner election 
p must shifted top position least h vertex voters  is  total  p must
shifted h  h    positions forward  since f   size b   h    h  h     

shift action affects two vertex voters  f   must size exactly h  affecting

exactly h vertex voters  construction  implies h  edges g incident
exactly h different vertices possible h vertices form clique 
finishes proof plurality rule          shift actions 
remaining cases proof quite similar  although  technically  involved 
present appendix b 
quite natural consider combinatorial shift bribery different
perspective  instead asking happens small number candidates  might
ask complexity combinatorial shift bribery small number voters
 see  example  brandt  harrenstein  kardel    seedig        chen et al        
motivation looking elections voters interesting   case
obtain hardness borda rule  indeed  later show pluralitycombinatorial shift bribery fpt parameter number voters  proof
next theorem quite involved available appendix c 
theorem    borda combinatorial shift bribery w    hard respect number n voters  even         shift actions budget constraints 
proof theorem   reduce strongly regular multicolored
clique problem  and  importantly  impose budget constraints  thus  follows approximation algorithm borda combinatorial shift bribery  running fpt time parameterized number voters  would yield fpt algorithm strongly regular multicolored clique parameterized
solution size  effect  following corollary 
corollary     unless w      fpt  borda combinatorial shift bribery inapproximable even fpt time parameter n  even         shift actions 
results theorem   corollary    compare interestingly
non combinatorial variant borda shift bribery  recently  complexity
borda shift bribery parameterized number voters unknown  eventually
   

fibredereck  faliszewski  niedermeier    talmon

 in different paper  submitting one journal publication  shown
problem w    hard  bredereck et al          far simpler proof
one used here  nonetheless  theorem   corollary    still carry significant value 
earlier  bredereck et al       a  shown fpt approximation scheme
borda shift bribery parameterized number voters  corollary    shows
result generalize combinatorial setting 
    results interval shift actions
conclude discussion hardness results considering combinatorial shift
bribery interval shift actions  previous section allowed shift actions
non zero effects two voters each  two voters could chosen arbitrarily  show hardness result case positively affect multiple
voters  voters form consecutive interval input election 
theorem     plurality rule borda rule  combinatorial shift
bribery np hard even interval shift actions 
proof  consider plurality rule first give many one reduction following
variant strongly np hard numerical matching target sums problem 
numerical matching target sums
input  three sets integers    a               b    b            bt    x  
 x            xt        numbers encoded unary       t numbers
distinct      two numbers b sum
number x 
question  elements b paired  t 
sum ith pair exactly xi  
standard variant problem  presented classic text garey
johnson         restrictions integers sets a  b  x 
assume numbers encoded unary problem strongly nphard  further  hulett  will  woeginger        shown problem remains
np hard case  t integers distinct  finally  see third
restriction change complexity problem suffices consider following
transformation  given instance  a  b  x  numerical matching target
sums  add   max a b x      integer b x  produces
equivalent instance two numbers  b  sum
number x 
plurality rule  let  a  b  x  instance numerical matching
target sums let denote largest integer b x  create instance
plurality combinatorial shift bribery follows  set candidates is 
c     p  d  ca            cat   cb            cbt   cx            cxt   
create following voters 
   

ficombinatorial shift bribery

   pair integers ai x  x  introduce 
 a  one voter preference order

cai p c    p  cai   
 b  ai voters preference order

cx  p c    p  cx    
 c   y  ai      voters preference order

p c    p  d  
voters called  ai   x    voters exactly  y them 
pair  ai   x     construct shift action faxi  effect   exactly set  ai   x   
voters 
   pair integers bj b x  x  introduce 
 a  one voter preference order

cbj p c    p  cbj   
 b  bj voters preference order

cx  p c    p  cx    
 c   y  bj      voters preference order

p c    p  d  
voters called  bj   x    voters exactly  y them 
pair  bj   x     construct shift action fbxj  effect   exactly set  bj   x   
voters 
   let q     ty  create sufficiently many dummy voters ensure that  altogether 
candidates following scores 
 a  p q points 
 b  i  cai cbi q    ty     points each 
 c     t   cx  q    ty   x  points 
shift action affects dummy voters 
   

fibredereck  faliszewski  niedermeier    talmon

finally  set budget b     t  completes reduction  easy see
computable polynomial time  because numbers encoded unary 
order voters shift action effects consecutive interval z     y
voters 
remains show constructed instance plurality combinatorial shift
bribery contains successful set f   shift actions size  t  a  b  x 
yes instance numerical matching target sums 
part  let      ai    bj              ait   bjt    solution numerical matching target sums  is  set integer pairs integer b
occurs exactly ai    bj    x  holds    t   observe
f       faxi    fbxj     ai    bj    s  successful set shift actions  since integer
 

 

b occurs exactly  some pair of  s  candidate cai candidate cbj
loses one point  since ai    bj    x     t   candidate cx  loses x  points 
construction  p gains  ty points set shift actions size  t  thus  p wins
election 
part  let f   successful set shift actions size  t  if
successful action smaller size could extend size  t shift actions
negative effects   applying shift actions f     p gains  ty points 
make p winner election  candidate cai candidate cbj needs lose one
point  candidate cx  needs lose x  points  thus  ai exactly
x 
x 
one fai f   bj b exactly one fbj f     since integers
b x distinct two integers b sum
integer x  x  x least one shift action faxi  effect ai 
 
voters prefer cxl   one shift action fbxj  effect bj  voters prefer cx    since
 
candidates cx   f        t  follows exactly two shift actions
effect voters preferring cx    since cx  lose least x  points  holds
ai    bj  x    fact  pigeonhole principle  holds ai    bj  x    hence 
successful set  t shift actions  solution numerical
matching target sums instance 
borda rule  borda rule  almost reduction works  specifically 
still exists integer q set requirements required
proof plurality rule hold borda rule  with respect different
q   importantly  since p second position preference profiles
voters  holds score differences  applying shift actions  similar
plurality rule borda rule  thus  proof correctness plurality rule
transfers borda rule 

throughout section shown number hardness results
restrictive assumptions regarding available shift actions  following sections
seek positive algorithmic results 
   

ficombinatorial shift bribery

   exact algorithms
spite pessimism looming previous section  section show two
exact fpt xp algorithms r combinatorial shift bribery  then  section   
present several efficient approximation algorithms 
begin observing r combinatorial shift bribery solved polynomial time  provided assume budget b constant  reason
need choose b shift actions available ones  number shift
actions available upper bounded input size 
observation    plurality combinatorial shift bribery borda combinatorial shift bribery xp parameterized budget b 
restrict instances contain bounded effect shift actions 
show r combinatorial shift bribery solved polynomial time  provided
number n voters treated constant 
proposition     maximum effect every shift action upper bounded universal constant  plurality combinatorial shift bribery borda combinatorial shift bribery xp parameterized number n voters 
proof  let value bounding  component wise  effect shift action  first 
observe        n types different shift actions  second  observe
one knows budget spent type shift actions  one easily check
whether corresponding set shift actions makes p winner election  thus use
following algorithm  try possibilities distributing budget b among
       n types shift actions check whether one makes p winner 
so  accept  otherwise reject 
proposition    holds even shift action comes individual cost
voter individual threshold function  can  given budget  always
select cheapest set shift actions given type  further  expressing problem
integer linear program  ilp  using famous result lenstra        
plurality rule strengthen xp membership fpt membership 
theorem     bounded effect shift actions  where treat bound universal
constant   plurality combinatorial shift bribery fpt parameterized
number n voters 
proof  given instance plurality combinatorial shift bribery n voters 
algorithm proceeds follows  first  guess subset voters
guarantee p ranked first  there  n guesses try   guessed set voters 
test whether p would winner election p shifted top position
guessed voters ranked first remaining voters  guessed
subset v   voters test positive  check whether possible ensure
 by applying shift actions whose cost exceed budget  voters v  
rank p first  follows 
let universal constant bounding  component wise  effect shift action 
observe      n types different shift actions  shift action
   

fibredereck  faliszewski  niedermeier    talmon

type z  introduce variable xz denoting number times shift action type z
present solution  voter vi   denote svi  p  position p original
preference order vi   voter vi v     add following constraint 
p

p

x
svi  p  
z
   
 z fz effect vi  
ensures p indeed shifted top position vi preference list  add
budget constraint 
x
xz b 
ensuring solution respects budget  finally  shift action type z add
constraint ensuring use many shift actions type z available
input  finishes description ilp  result lenstra        
solve ilp fpt time         n integer variables 
roughly speaking  theorem    reason theorem   apply
plurality rule  setting  plurality combinatorial shift bribery tractable 
note theorem    applies case shift action unit cost 
i e   case focus paper  nonetheless  believe possible
lift theorem    case shift action individual cost  applying
ideas bredereck  faliszewski  niedermeier  skowron  talmon      a  

   approximation algorithms
explore possibility finding approximate solutions combinatorial shift
bribery  focus approximating cost shift actions necessary ensure ps
victory  for example    approximate algorithm finds solution ensures ps victory
whenever possible  uses twice many shift actions necessary  
theorems      know cannot hope find approximate algorithms
cases combinatorial shift bribery shift actions negative effects 
thus  section  focus unit effect shift actions positive effects 
simplifies situation always check possible ensure ps victory 
suffices apply available shift actions check p winner  indeed 
able perform check heart inapproximability results section    
approximation algorithms proceed either directly invoking algorithms
non combinatorial variant shift bribery elkind et al         elkind
faliszewski         plugging algorithms framework  start
former approach describe latter 
theorem     shift action effects either     voter  pluralitycombinatorial shift bribery  approximated polynomial time bordacombinatorial shift bribery   approximated polynomial time  denotes maximum number voters affected shift action 
proof  general idea approximation algorithms split shift action
affects   voters   shift actions  affecting single voter only  effect
   

ficombinatorial shift bribery

construct non combinatorial instance shift bribery solve exactly 
case plurality rule    approximately  case borda rule 
specifically  construction goes follows  let  i  denote number shift actions
affecting voter i  given instance combinatorial shift bribery  form
instance shift bribery identical  except instead shift actions 
price functions voters  set price function voter
j  i   shifting p j positions costs j  j    i   shifting p j positions
costs   b     j  where b total number shift actions available  note
exponential function   b     j ensures price functions convex
easily identify situations one shifts p  i  positions   
describe use construction case plurality rule
case borda rule 
plurality rule  first translate input instance non combinatorial
plurality shift bribery instance described above  then  apply known  exact 
polynomial time algorithm plurality shift bribery  elkind et al        
instance  let cost solution found non combinatorial instance 
  b  impossible ensure ps victory combinatorial instance  because
number available shift actions insufficient  
b  obtain solution f plurality combinatorial shift bribery
instance follows  voter v  non combinatorial  bribed election
ranks p first  select shift actions combinatorial instance v ranks p first 
note  f   f indeed  combinatorial  solution 
sake contradiction  assume successful set shift actions f  
size smaller  f     however  easy see set shift actions would
correspond bribery cost smaller non combinatorial instance  since
cost optimal solution non combinatorial instance  contradiction 
borda rule  case borda combinatorial shift bribery follows analogously  instead using polynomial time exact algorithm non combinatorial
instance  use   approximation algorithm borda shift bribery  elkind et al  
      elkind   faliszewski         let cost solution found     b 
impossible ensure ps victory 
otherwise  obtain solution f combinatorial instance  vote v
non combinatorial solution shifts p positions  include shift actions
affect voter   f   s  f correct solution combinatorial
instance 
existed solution f   combinatorial instance used less  f      
shift functions  would solution non combinatorial instance
cost smaller  f     s    since used   approximate algorithm noncombinatorial instance  impossible 
mention might possible improve approximation ratio given theorem     least borda rule  idea might cast problem variant
   strictly speaking  need ensure price functions convex  variant
shift bribery generalize paper  stick consistency 

   

fibredereck  faliszewski  niedermeier    talmon

set multicover problem  generalization set cover problem
element covering requirement  then  one could use approximation algorithm set multicover problem  for example  one suggested rajagopalan
  vazirani        plug   approximation algorithm elkind faliszewski
       
achieve better approximation guarantees borda rule 
restrict allowed shift actions  obtain results use framework elkind
faliszewski         essence  shown following  given variant
shift bribery  either plurality rule borda rule  one provide
function computes obtain highest number points preferred
candidate given budget b    approximation algorithm variant
shift bribery   note get most points for p algorithm solve shift
bribery  maximizes score p  ensure candidate receives
higher score  indeed  optimal solution might increase score p smaller extent 
expense dangerous opponents 
theorem     borda combinatorial shift bribery   approximable polynomial
time          shift actions 
proof  discussion preceding theorem statement  suffices provide function
given instance combinatorial shift bribery budget b finds set
shift actions obtain highest possible number points preferred candidate
p without exceeding budget 
general idea achieving compute maximum b matching auxiliary
multigraph  multigraphs allow multiple edges vertices   b matching
multigraph g function b   v  g  n  called covering function  edge induced
subgraph g vertex u degree b u   known b matching
computed polynomial time  gabow        
construct auxiliary multigraph g follows  voter vi create vertex
ui   shift action effect   voter ui effect   voter uj   create edge
 ui   uj    then  define covering function b b ui   number positions
p shifted forward preference order voter vi  that is  position p
preference order voter vi   
g b matching size least b  corresponds set shift actions
increase score p  b  highest gain possible  g b matching
size k   b  take shift actions corresponding edges b matching
 these shift actions maximize number points p gain shift actions
move p within two votes  greedily select shift actions pushes p forward
one vote  use budget  at point  every shift action affect p single
vote only   thus function computes highest point gain possible p  given
budget 
next  consider interval shift actions  is  fix order voters
restrict shift action effect voters comprise intervals   in fact 
   fact  result applies scoring rules  paper focus plurality rule
borda rule only 

   

ficombinatorial shift bribery

could allow holes inside intervals   unfortunately  algorithm requires xp
time parameterization length longest interval 
theorem     plurality rule borda rule  combinatorial shift
bribery   approximated xp time interval shift actions  provided take
  upper bound number voters affected shift action  parameter 
proof  per discussion preceding theorem     suffices describe find set
shift actions maximize number points preferred candidate p gains
given budget 
end  use dynamic programming algorithm  consider input
combinatorial shift bribery election e    c  v    preferred candidate p 
budget b spend increasing ps score  let     c  n     v   
v    v            vn    algorithm uses following table partial results  numbers x  y  s            s  table entry 
 x  y  s    s            s   
denotes maximum number additional points candidate p gain voters v            vx condition     exactly shift actions used 
affects voters set  v            vx                    
candidate p shifted position si preference order voter vxi   is  iterate
voters store effect applied shift actions last voters 
size table n b m    
algorithm almost plurality rule borda rule 
difference computing scores candidates  let z    z    denote
position p preference order voter  position   means p ranked
first   then  score z  mean score p gains voter  plurality
rule score z      z     score z      otherwise  borda rule
score zi     zi    set voters vector z            zt  for  n  zi
                denotes positions p preference orders voters 
write score z            zt   mean score p gains voters  is 
score z            zt    

x

score zi   

i t 

given preparation  ready describe algorithm  jointly plurality
rule borda rule  
initialization  initialize entries    y  s    s            s    table follows 
check whether set shift actions effects voters
 v            v   applying set shift actions moves candidate p positions s            s  preference orders voters v            v   respectively 
exists  set    y  s    s            s    score s    s            s     otherwise  set
   y  s    s            s       we explain check set shift actions exists
end proof  
   

fibredereck  faliszewski  niedermeier    talmon

recursion step  compute table entries  x  y  s    s            s    x     one
compute subsets shift actions  for  y   whose last affected voter vx   ensure
together yi shift actions whose last affected voter set  v            vx   that
j    j    p shifted position sj preference order vxj  
specifically  update phase compute x    x n  y   
b  vector  s            s                   table entry  x  y  s    s            s   
follows  say vector  s    s            s                m   x  i  realizable
   y   set shift actions whose last affected voter vx
j    j    shifts candidate p sj positions preference
order voter vxj   write r x  i  denote set vectors               
 x  i  realizable  we describe compute r x  i  later   then  compute
 x  y  s    s            s    follows 
 x  y  s    s            s      max t  x    i    s  s            s  s     
  score s    s            s    score s  s            s  s     
  y        s    s            s    r x  i  
informally  realizable total effect shift actions whose last affected voter
vx   number points candidate p gains number additional points
candidate p gains shift actions last affected voter  v            vx   
plus number additional points candidate p gains shift actions
last affected voter vx  to avoid double counting  expressed difference
middle line formula  
next show compute r x  i   try every vector  s            s               

   check  x  i  realizable  perhaps easiest way
formulate problem integer linear program  ilp  constant number
variables 
let  s            s    vector want check  x  i  realizable 
subset q                 say shift action type q affects exactly
voters vxi q  subset q  introduce integer variable xq  
denoting number shift actions type q used  x  i  realization vector 
solve following ilp 
x

xq  

   

xq     

   

q         

x
q         

x

j     j  

xq   sj

   

jq

 note middle constraint ensures last affected voter vx    since
number variables ilp     follows famous result lenstra       
ilp solved xp time respect parameter  indeed  even
fpt time   using ilp without middle constraint  check
vectors  s            s    use initialization step 
   

ficombinatorial shift bribery

coming back dynamic program  clear finding obtain maximum score p respecting budget found taking maximum
table entries  n  b     s    s            s     possible values b       b   b 
 s    s            s                    
section showed indeed possible achieve approximation
algorithms special cases combinatorial shift bribery problem 
settings algorithms efficient quite restrictive  means
practice one might want seek good heuristics use algorithms guidance
initial search 

   conclusion
defined combinatorial variant shift bribery problem  elkind et al        
elkind   faliszewski        bredereck et al       a  studied computational
complexity  motivation research desire understand computational
difficulty imposed correlated  large scale effects campaign actions  respect 
work motivated combinatorial study election control  studied bulteau et al 
       chen et al          found even various restricted special
cases numerous parameterizations  combinatorial shift bribery problem
highly intractable worst case  nonetheless  found initial positive results 
mainly form approximation algorithms  interestingly  approximation results
quite strongly rely results non combinatorial shift bribery 
number research directions motivated work  example  plurality combinatorial shift bribery borda combinatorial shift
bribery solved polynomial time          shift actions interval actions
assumption number candidates constant 
generally  results suggest studying restrictions problem 
example  since parameterizing number available shift actions immediately gives
fixed parameter tractability results  natural question whether natural parameterizations exist could lead positive results 
naturally  one might consider voting rules well  interesting condorcetconsistent rules  copeland rule  since rules tend behave rather differently
scoring rules  mention results hold voting rules 
specifically  theorem    theorem    theorem    theorem   hold voting rules
theorems hold elections two candidates  voting rules
behave elections two candidates  observation   theorem   
basically brute force algorithms results hold voting rules well 
statements regarding borda rule theorem     theorem     theorem    hold
scoring rules  since underlying   approximation algorithm elkind faliszewski
       works scoring rules 
further  might interesting consider domain restrictions regarding voters
preferences  for example  single crossing seems particularly natural context interval
shift actions  since means shift action affects voters somewhat similar
preferences   well demonstrated restricting domain voters lead
   

fibredereck  faliszewski  niedermeier    talmon

tractability  see theorem    bulteau et al         example combinatorial
control setting   however  pursuing direction would require careful discussion
shift actions applied  example  allow single crossing election cease
single crossing bribery 
acknowledgments
robert bredereck supported dfg project paws  ni          nimrod talmon supported dfg research training group methods discrete structures  grk       currently weizmann institute science  piotr faliszewski
supported dfg project paws  ni         agh university grant
               statutory research  
preliminary short version work presented      international
conference autonomous agents multiagent systems  aamas      bredereck 
faliszewski  niedermeier    talmon      b  

appendix a  proof theorem  
theorem    unless p   np  combinatorial shift bribery inapproximable  in
polynomial time  plurality rule borda rule  even two candidates
        shift actions 
proof  give many one reduction set cover  let  s  x  h  set cover
instance     s            sm   x    x            xn    we assume every element
belongs least one set   construct instance plurality combinatorial shift
bribery  set budget b     x   candidate set  p  d   p
preferred candidate  element voter vi element xi   preference
order p  set voter vjs set sj   preference order p d 
 x     s   h   dummy voters  preference order p  element
xi set sj   xi sj construct shift action fji effect    vi
effect   vjs   completes construction  easy see computable
polynomial time 
next  show successful set shift actions  note size
set important  is  allow infinite budget  set cover
size h 
part  assume set cover   size h  show
build successful set shift actions  start f     element xi  
choose arbitrary set sj   contains xi add corresponding function
fji f     applying f     observe p becomes winner   x  element voters
 s  h set voters prefer p  x     s   h   dummy voters h set voters prefer d 
part  assume successful set shift actions f   f  
let h  number applying shift actions f     p preferred
exactly  s  h  set voters  that is  shift actions f   correspond h  sets s   p
winner  majority voters  i e   least  x     s  h voters  must prefer p  thus 
applying f     least x  h h    element voters prefer p  means
collection h  sets jointly cover least  x   h h    elements  since every
   

ficombinatorial shift bribery

element belongs set  extend collection set cover adding
h h  sets  in worst case  one set uncovered element   proves
set cover  s  x  h  completes part 
note argumentation made assumptions regarding size f    
hence  finding solution plurality combinatorial shift bribery instance 
including approximate solutions approximation factor  implies finding set cover
size h  means unless p   np  plurality combinatorial shift bribery
inapproximable polynomial time 

appendix b  remaining cases proof theorem  
theorem    unless p   np  combinatorial shift bribery inapproximable  in
polynomial time  plurality rule borda rule  even two candidates
        shift actions 
borda rule          shift actions  slightly modify reduction used plurality rule          shift actions  specifically  describe parameterized reduction w    hard clique problem  parameterized solution
size  borda combinatorial shift bribery          shift actions  parameterized
 m  b  
let  g  h  instance clique v  g     u            un    e g     e            em    
create instance borda combinatorial shift bribery follows  set
candidates  p  d     d            dh     create following voters 
   vertex ui v  g   create corresponding vertex voter vi preference
order 
d  dh  p 
   create n   h dummy voters  preference order 
p d  dh  d   
   create h dummy voters  preference order 
dh  p d  dh  d   
   create n  h dummy voters  preference order 
p d  dh   
   create n  h dummy voters  preference order 
d  p d  dh   
edge  ui   uj   e g   create shift action f ui  uj   effect   vertex

voters vi vj effect   voters  finally  set budget b    h   
completes construction  computable polynomial time 
   

fibredereck  faliszewski  niedermeier    talmon

proof correctness follows lines proof plurality rule
         shift actions  instead counting number approvals  need compute
borda scores candidates  indeed  reason additional dummy
voters 
particular  construction ensures d  original winner election
difference borda score p borda score d  exactly h   
furthermore  shift action increase score p two  hence  make
p co winner one must increase score p h h    decrease score d  h 
possible shift actions correspond edges clique size h 
plurality rule         shift actions  still reduce w   hard clique problem  parameterized solution size  reduction bit
involved 
let  g  h  clique instance graph g n      v  g   vertices
 
    e g   edges  construct plurality combinatorial shift bribery instance
follows  let set candidates  p  d  d      d            dh     create
following voters 
   vertex vi   create
preference order 

h
 



 h 
vertex voters vi            vi   corresponding vi  
d  dh  p 

   edge ej    vi    vi     create corresponding edge voter wj preference
order 
p d  dh   


   create   h     n   h  h  m  dummy voters  preference order 
p d  dh   
edge ej    vi    vi     construct  

h
 



shift actions  denoted

  h 
 h 
fe j  vi           fej  vi  fe j  vi           fej  vi   
 

 

h
 

    a  fezj  vi effect    viz  effect   wj    b 
 

fezj  vi effect    viz  effect   wj   finally  set budget b      h  h   
 
completes construction  easy see computable polynomial time
parameterized reduction 
observe that  initially  edge voters dummy
voters prefer
p  vertex


h
h
 
voters prefer d    therefore  initial score p        n  h      initial score

d  n  h    assume  without loss generality  means d 
winner election  instances satisfying assumption solved constant
time  
remains show constructed instance contains successful set shift actions f   size h  g  h  contains clique size b  general
z  



   

ficombinatorial shift bribery

idea choose shift actions corresponding edges connecting nodes
h size clique  ensure p becomes preferred candidate h h 

additional vertex voters  making d  preferred candidate h  additional
edge voters 
formally  part  let h v  g  set h vertices forming clique let
e   e g  set edges connecting vertices h  choose following set
shift actions 

h
 
 
z
z
   
f    fej  vi   fej  vi   ej    vi    vi    e   z  
 
 
 
show f   successful set
shift actions  end  observe vertex
h
z
 
voter vi vi v z        candidate p shifted h   positions forward  therefore

p becomes preferred candidate voters  means h h  additional vertex
voters prefer p  and  thus  prefer d  anymore   furthermore  p shifted backwards
voters  wj   ej e      is  d  becomes preferred candidate


h
h
 
  edge voters p remains preferred candidate   edge voters  thus 
p tie winners 
part  let f   successful set shift actions 
p winner
make

election  p must shifted top position least h h  h  vertex voters  no
type voters affected positively   pigeonhole
principle  vertex

h
voters correspond least h different vertices  there   voters corresponding

vertex   effect  least h  edge voters must effected negatively d  becomes
preferred candidate 
thus  make p win election p must shifted

top



position least h h  vertex voters  implies  f      h  h h      h  h    b
and  hence   f       b  itfollows p shifted backwards making d  preferred
candidate exactly h  edge voters p must shifted top position

exactly h h  vertex voters corresponding exactly h different vertices  construction 
implies h vertices form clique  done 
borda rule         shift actions  borda rule  reduction is 
again  bit involved  main idea plurality rule 
let  g  h  instance clique graph g n      v  g   vertices
 
    e g   edges  construct borda combinatorial shift bribery instance
follows  set candidates  p  d  d      d            dh     create
following voters 

 h 
   vertex vi   create h  vertex voters vi            vi   corresponding vi  
preference order 


p 
   edge ej    vi    vi     create corresponding edge voter wj preference
order 
d  dh  p dh   



h
h  
  h
 
 
     n       h        h  
   let l   
  without loss generality 
h 
assume l integer  this requires simple modifications input clique
   

fibredereck  faliszewski  niedermeier    talmon

instance only   create l dummy voters  preference order 
p dh  d   
edge ej    vi    vi     construct  

h
 



shift actions  denoted

 h 
  h 
fe j  vi           fej  vi  fe j  vi           fej  vi   
 

 

h
 

    a  fezj  vi effect    viz  effect   wj    b 
 

fezj  vi effect    viz  effect   wj   finally  set budget b      h  h   
 
completes construction  easy see computable polynomial time 
proof correctness follows lines proof correctness plurality
rule and  thus  omitted 
z  



appendix c  proof theorem  
theorem    borda combinatorial shift bribery w    hard respect number n voters  even         shift actions budget constraints 
proof  reduce following w    hard problem  mathieson   szeider        lemma
     
strongly regular multicolored clique
input  two integers  h  undirected graph g    v  e  
vertex one h colors  h   vertex adjacent exactly
vertices color different own 
question  exist clique size h containing one vertex
color class 
given instance strongly regular multicolored clique  construct
instance combinatorial shift bribery  borda rule  general idea
reduction follows  set important candidates consists preferred
candidate p candidates correspond edges  technical reasons 
edge e    v  v      introduce two candidates  e  e    one associated
touching vertex v associated touching vertex v      in fact 
introduce edge candidates vertex candidates  use
ensure correct structure election appropriate bribery behavior   build two
groups voters  vertex selecting voters edge electing voters  first group
implements picking vertices clique  one vertex color   second
group implements picking edges  one edge pair colors   ensure given
set shift actions chance successful  must hold h vertices
h
  edges picked  importantly  holds even unbribed election 
make sure p wins election picked voters edges correspond clique  with vertices color   end  define voters
two numbers    that 
   

ficombinatorial shift bribery

   h vertices picked vertex selecting voters  different color 
vertex selecting voters give points edge candidate associated
touching one selected vertices      points edge candidates 
means picking vertex decrease score edge candidates
edges touch vertex 

   h  edges picked edge selecting voters  one edge pair colors 
edge selecting voters give     points edge candidate corresponds
picked edge  points remaining edge candidates  means that 
picking edge  increase score candidates corresponding it 
   candidate p gets       points  irrespective shift actions apply 
note unbribed election every candidate gets       points p
always gets       points  thus challenge ensure every candidate gets
      points  description  possible pick vertices
edges correspond size h clique  of vertices different colors   indeed 
selected edge e touch two selected vertices  e  e  would receive
    points edge selecting candidates least one would receive    
points vertex selecting voters  effect  p would winner 
without loss generality  assume edges vertices selected unbribed
election form clique  otherwise would trivial solution input
problem could output fixed yes instances borda combinatorial shift
bribery  
construction  formally describe reduction  give example
applying simple instance  finally show correctness reduction 
illustrate aspects correctness proof using example 
candidates  set candidates somewhat involved  important candidates
preferred candidate p sets edge candidates  e  e    defined below 
let e g     e            e   set edges graph g  create two edge candidate
sets  e      e             e    e      e             e      h   let ni number
vertices g color let v    v i           vni   set vertices 
color vertex vji v   define neighborhood vji follows 
 

n  vji       e     e     vji   vji     e   i   
 

 e     e     vji   vji     e   i    
 this  perhaps bit strange way using color numbers pick edge candidates either
e   e     implementing fact edge e e g  two candidates  e 
e    associated touching different endpoints e  
technical reasons need candidates follows  adjust scores
candidates  introduce single dummy candidate d  create two
candidate sets e      e             e    e      e             e    act guards
edge selecting voters  v create two candidate sets u     uij   vji v  
   

fibredereck  faliszewski  niedermeier    talmon



u  i    u ij   vji v   u     ih u u       ih u  i act guards
vertex selecting voters 
final set candidates c    u u   e   e   e   e    p  d  
vertex selecting voters  describe vertex selecting voters  color
vertex vji   define following parts preference orders  for j      assume
uij  u ij  uini u ini respectively  

a vji     uij n  vji   u ij  

b vji     uij  n  vji   u ij   
color create three pairs voters  voters first pair  wi wi   
following preference orders 


wi   p a v i   a v i   a v i   a vni   ri  


wi    ri b v i   b vni   b vni     b v i   p 
ri set remaining candidates  is  ri    c     p  u u  i n  v i  
n  vni     voters second pair  qi qi    preference orders
reverse wi reverse wi    respectively  finally  voters last pair  qi
qi    preference orders 


qi   c     d  n  v i    n  v i   

qi    n  v i   c     d  n  v i    d 
effect  first two pairs voters jointly give    c     points candidates 
last pair gives  c    points candidates n  v i    c  points
candidates  except d  receives less  c    points  
let    h    c     c     altogether  vertex selecting voters give following
scores candidates  candidates n  v    n  v     n  v h   receive points
candidates  except d  receive     points  d receives less points   thus 
unbribed election v             v h selected vertices 
color i  introduce  ni      h         shift actions effect  
voter wi effect    voter wi    understand number shift
actions comes from  note that      vertex vji    n  vji       h     each
vertex connected vertices color different own       a vji  
b vji   candidates n  vji   surrounded two vertex candidates     
integer    ni    applying t  h         shift actions effect
candidates n  v i   gain one point  i e   v i ceases selected   candidates
  lose one point  i e   v
n  vt  
t   becomes selected   candidate changes
score  later argue applying numbers shift actions multiples
  h         cannot ensure ps victory  
   

ficombinatorial shift bribery

edge selecting voters  edge selecting voters  need following additional
notation  let ex y denote set candidates representing edges vertices
color x color y  is 
q         

ex y     e 

  e     vjx   vjy    e  

write nx y denote number edges vertices color x color y 
idx y
z refer index z th edge vertices color x y  example 
e    e  e   three edges vertices colors      n        
   
   
id   
       id       id       
pair  x  y  distinct colors edge eidx y
  introduce following
j
x y
parts preference orders  for j   nx y   assume idj     idx y
    
r eidx y
    e idx y e idx y e idx y e idx y  
j
  
s eidx y
j

j

j

j

e idx y
j  

e idx y
j

e idx y
j





j



e idx y  
j  

pair  x  y  distinct colors introduce three pairs voters  voters
    following preference orders 
first pair  wx y wx y

wx y   r eidx y
  p r eidx y
  r eidx y
  r eidx y
  rx y  
nx y
 
 
 

 
  s eidx y
  s eidx y
  s eidx y
  p 
wx y
  rx y s eidx y
nx y
n
 
 
 
x y

rx y set remaining candidates  is  rx y    c     p  ex y   
    preference orders reverse w
voters second pair  qx y qx y
x y
 
   
reverse wx y   respectively  finally  voters last pair  qx y qx y
following preference orders 

qx y   e idx y e idx y c     d  e idx y   e idx y    
 
 
 
 
  
 
 
 
qx y   c     d  eidx y   eidx y    eidx y eidx y d 
 

 

 

 

first two pairs voters jointly give    c     points candidates 
last pair gives  c  points e idx y e idx y    c    points candidates
 
 
 except d  receives
less

 c 

 
points  

let      h    c      altogether  pair distinct colors  x  y   edgeselecting voters give     points candidates e idx y e idx y   candidates receive
 
 
points  except d  receives less points   thus unbribed election
selected edges exactly first edges pair colors  that is  edges
form eidx y
  pair distinct colors  x  y   
 
pair  x  y  distinct colors  create   nx y    shift actions effect  
    intuition behind shift actions similar
voter wx y effect    voter wx y
case vertex selecting voters  make following observations     
edge eidx y four candidates listed r eidx y   four candidates listed s eidx y   
 
 
 
    integer    nx y    apply  t shift actions  candidates
   

fibredereck  faliszewski  niedermeier    talmon

v  

v  

e 

e 

v  

e 

e 

v  

e 

e 
v  

v  

v      v     v      v      v     v      v      v     v      h         
figure      colored graph six vertices vertex adjacent one vertex
color classes v     v   v     own 
ceases selected   candidates e idx y e idx y
e idx y e idx y lose one point  edge eidx y
 
 

t  

 

t  

gain one point  edge eidx y
becomes selected   scores candidates remain
t  
unchanged  we later argue apply number shift actions
multiple    p certainly winner resulting election  
conclude construction  set budget b     that is  use many
shift actions like   easy verify reduction computable polynomial
time introduce number voters function h  thus 
parameterized reduction   proving correctness construction  consider
following example  we refer correctness proof well  
example    consider strongly regular multicolored clique instance  d  h  g 
     h      graph g figure    construction produces following set
candidates 
c    u u   e   e   e   e    p  d  

              
u    u     u     u     u     u     u      u      u  
    u    u    u    u    u   


e    ei    ei            ei         
furthermore  have 
n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     

n  v         e     e     
   

ficombinatorial shift bribery

vertex selecting group voters  create following voters  color
i  create two voters wi wi   

 
 
 
 
  
w    p u   e   e   u  
  u  e  e  u  r  


 
 
 
  
w     r  u   e   e   u  
  u  e  e  u  p 

 
 
 
 
  
w    p u   e   e   u  
  u  e  e  u  r  


 
 
 
  
w     r  u   e   e   u  
  u  e  e  u  p 

 
 
 
 
  
w    p u   e   e   u  
  u  e  e  u  r  


 
 
 
  
w     r  u   e   e   u  
  u  e  e  u  p 
ri    c     p  u u  i n  v i   n  vni          voters
add voter reversed preferences   this means that  far  candidates obtain
total score   finish group voters creating color two voters 
qi qi    preference orders 


qi   c     d  n  v i    n  v i   

qi    n  v i   c     d  n  v i    d 
ensures color i  candidates n  v i   get points 
candidates get     points  except gets points   create   shift actions
effect   voter wi effect    voter wi   
edge selecting second group voters  recall ex y denotes set candidates representing edges vertices color x color y  specifically  have 
e       e     e     e     e   e     e     e     e     
e       e     e     e     e   e     e     e     e     
e       e     e     e     e   e     e     e     e     
    follows 
pair  x  y  distinct colors create two voters  wx y wx y


w      e   e   e   e   p e   e   e   e   r     

 
w   
  r    e   e   e   e   e   e   e   e   p 

w      e   e   e   e   p e   e   e   e   r     

 
w   
  r    e   e   e   e   e   e   e   e   p 

w      e   e   e   e   p e   e   e   e   r     

 
w   
  r    e   e   e   e   e   e   e   e   p 
rx y    c     p  e x  y    voters add voter reversed
 
preferences  further  pair  x  y  distinct colors  add two voters qx y qx y
   

fibredereck  faliszewski  niedermeier    talmon

follows 

qx y   e idx y e idx y c     d  e idx y   e idx y    
 
 
 
 
  
 
 
 
qx y   c     d  eidx y   eidx y    eidx y eidx y d 
 

 

 

 

altogether  pair  x  y  distinct colors  candidates e idx y e idx y get    points
 
 
candidates get points  except d  gets less points   pair  x  y 
distinct colors  create   shift actions effect   voter wx y effect   
   
voter wx y
 
properties construction  discuss several properties construction 
properties play significant rule showing correctness reduction 
illustrate arguments  come back example time time  begin
looking scores candidates 
lemma    following claims hold 
   unbribed election  every candidate receives       points every
candidate  p  u u   e   e   receives exactly       
   every bribed election  score p exactly       
   applying successful set shift actions  score p      
scores candidates       
proof  easy see first claim holds based discussion give
throughout construction  second claim holds  a  applying every shift
action decreases one score p one vote increases one another vote
 there sufficiently shift actions whole instance applying shift
action always moves p within two votes shift action acts   last claim
follows directly second one 
 lemma 
let us consider process selecting vertices  description vertexselecting voters said that  initially  color vertex v i selected 
integer t    ni    apply t  h         shift actions affect voters wi wi   

v i ceases selected vt  
becomes selected  argue apply
number shift actions divisible   h          p winner
resulting election 
see case  recall preference orders voter wi wi 
exactly  h    candidates e   e   pair candidates  uij   u ij   
furthermore  p passes candidate uij preference order voter wi  increasing
uij score one   must pass candidate uij preference order voter wi 
 decreasing uij score one   otherwise  uij would end score       and 
   p would winner  there possibilities influence score uij
shifting p preference lists wi wi     hence  p passes candidate u ij
candidates uij u ij preference lists wi wi    this  however 
means p winner election  number applied shift actions
   

ficombinatorial shift bribery

unbribed voters w  w    


 
 
 
 
  
w    p u   e   e   u  
  u  e  e  u  r


 
 
 
  
w     r  u   e   e   u  
  u  e  e  u  p
applying two shift actions effect    w     w    
     

 
 
 
 
  
w    u   e   p e   u  
  u  e  e  u  r
 
  
  


  e  p e  u  
w     r  u   e   e   u  

u
 
 
 
 
 
  
applying  h            shift actions effect    w     w    
           

 
 
 
 
  
w    u   e   e   u  
  p u  e  e  u  r
 
  
  
  
  

 
 
 
  e  e  u  
w    r u  e   e   u  

p

u
 
 
 
 
 
  
figure    illustration bribery actions affecting first voter group running example
 example     note that  unbribed election  every candidate u u   obtains
      points total  color one type shift actions
affects voter wi wi    shift actions effect   voter wi effect   
voter wi    shift action affect voter first group  applying
multiple   h         shift actions effect   voter wi effect    voter wi 
ensures candidates u u  i receive       points total  whereas
applying number shift actions implies candidate u
receives       points and  hence  p cannot win  illustrate color  
running example 
effects voters wi wi  multiple   h          p passes candidate uij  
candidate u ij   h candidates between   figure   provides illustration
reasoning 
next discuss selecting edges  case vertex selecting voters  description construction argued  a  initially pair  x  y  distinct
colors  edge eidx y
selected  b  applying  t    nx y    shift actions
 
    e x y ceases selected e x y becomes selected 
affect voters wx y wx y
id 
idt  
argue used number shift actions multiple four 
p certainly would winner election 
 
see case  note designed preference orders wx y wx y
candidates e idx y e idx y   j             nx y    follow p vote wx y
j

j

    effect  apply shift action affects
order precede p wx y

   

fibredereck  faliszewski  niedermeier    talmon

   
unbribed voters w    w   


w      e   e   e   e   p e   e   e   e   r   

   r    e  e  e  e  e  e  e  e  p
w   
 
 
 
 
 
 
 
 
   
applying two shift actions effect    w       w   
     

w      e   e   e   e   e   e   p e   e   r   
 
  
  



 
   
 
 
 
 
 
 
 
w     r e  e  e  e  e  e  p e  e  
  
   
applying four shift actions effect    w       w   
           

w      e   e   e   e   e   e   e   e   p r   
 
  
  
  
  

   r    e  e  e  e  p e  e  e  e 
w   
 
 
 
 
 
 
 
 
  

figure    illustration bribery actions affecting second voter group running
example  note unbribed election  every candidate e   e   obtains  
    points total  pair colors x one type shift
    shift actions effect   voter w
actions affects voter wx y wx y
x y
    shift action affect voter second
effect    voter wx y
group  applying multiple   shift actions effect   voter wx y effect   
 
ensures candidates e   e   receive       points
voter wx y
voters  whereas applying number shift actions implies
candidate e   receives       points and  hence  p cannot win  illustrate
color pair     running example 
 
voters wx y wx y
number times multiple four  one
candidates obtains       points  since way affect score
candidates  lemma    case p cannot winner  illustrate effect
figure   

solution example    complete correctness proof  let us illustrate
solution example 
unbribed election selects vertex v     v     v   edges e    e  e    hence 
example  candidate e   receives      points p  who receives      points 
winner 
applying four shift actions effect   w  effect    w     select v  
instead v   vertex color   clique  as depicted bottom figure    
   

ficombinatorial shift bribery

    select e
applying four shift actions effect   w    effect    w   
 
instead e  edge color   color   clique  as depicted
bottom figure     now  candidate  e     e     e     e     e     e     receives     points
edge selecting voters  points vertex selecting voters  every
candidate receives     points vertex selecting voters
points edge selecting voters  hence  p  with       points  winner 
solution corresponds left   colored triangle figure   

correctness  remains show successful set shift actions
constructed borda combinatorial shift bribery instance
h colored clique graph g 
part  assume h colored clique h v  g   without loss
generality  let h    vz             vzhh   let eh      v  v       v  v   h   furthermore  let zx y
denote index edge ex y representing edge eh vertex
eh  
color x vertex color y  is  zx y   j eidx y
j
easy verify following set shift actions successful 
   color  h   include  zi     h         shift actions effects
voters wi wi   
   pair  x  y  distinct colors  include   zx y    shift actions effects
   
voters wx y wx y
words  select vertices edges corresponding clique  effect 
scores candidates        except d  receives lower score   p
among tied winners 
part  assume successful set shift actions consider
election applying shift actions  construction  know edge selecting
voters pick exactly one edge pair distinct colors  hence graph induced
edges contains vertices h different colors  graph contains h
vertices  graph must h colored clique  this graph cannot contain fewer
h vertices   sake contradiction  let us assume graph contains
h vertices  thus two selected edges  ej ej     incident two different vertices 
vi ej vi  ej     color  construction  and way vertex selecting
voters work   least one sets n  vi   n  vi    candidates set receive
    points vertex selecting voters  however  since ej ej   selected
edge selecting voters  voters give     points candidates e j   e j  
e j     e j     hence  least one candidates receives       points total and 
lemma    p winner  contradiction  graph induced
selected edges must h colored clique 

references
bartholdi  iii  j  j   tovey  c  a     trick  m  a          hard control
election  mathematical computer modelling                
   

fibredereck  faliszewski  niedermeier    talmon

baumeister  d   faliszewski  p   lang  j     rothe  j          campaigns lazy voters 
truncated ballots  proceedings   th international conference autonomous
agents multiagent systems  aamas      pp          ifaamas 
betzler  n   bredereck  r   chen  j     niedermeier  r          studies computational
aspects votinga parameterized complexity perspective  multivariate algorithmic revolution beyond  vol       lncs  pp          springer 
binkele raible  d   erdelyi  g   fernau  h   goldsmith  j   mattei  n     rothe  j         
complexity probabilistic lobbying  discrete optimization          
boutilier  c   brafman  r  i   hoos  c  d  h  h     poole  d          cp nets  tool
representing reasoning conditional ceteris paribus preference statements 
journal artificial intelligence research             
brandt  f   harrenstein  p   kardel  k     seedig  h  g          takes few 
hardness voting constant number agents  proceedings   th international conference autonomous agents multiagent systems  aamas     
pp          ifaamas 
bredereck  r   chen  j   faliszewski  p   nichterlein  a     niedermeier  r       a   prices
matter parameterized complexity shift bribery  proceedings   th
aaai conference artificial intelligence  aaai      pp            aaai press 
bredereck  r   chen  j   hartung  s   kratsch  s   niedermeier  r   suchy  o     woeginger 
g       b   multivariate complexity analysis lobbying multiple referenda 
journal artificial intelligence research             
bredereck  r   faliszewski  p   niedermeier  r   skowron  p     talmon  n       a   elections candidates  prices  weights  covering problems  fourth
international conference algorithmic decision theory  adt        vol      
lncs  pp          springer 
bredereck  r   faliszewski  p   niedermeier  r     talmon  n       b   large scale election campaigns  combinatorial shift bribery  proceedings   th international
conference autonomous agents multiagent systems  aamas     pp       
bredereck  r   faliszewski  p   niedermeier  r     talmon  n          complexity shift
bribery committee elections  proceedings twenty ninth aaai conference
artificial intelligence  aaai     
bulteau  l   chen  j   faliszewski  p   niedermeier  r     talmon  n          combinatorial
voter control elections  theoretical computer science             
cary  d          estimating margin victory instant runoff voting  presented
     electronic voting technology workshop workshop trustworthy elections 
chen  j   faliszewski  p   niedermeier  r     talmon  n          elections voters  candidate control easy  proceedings   th aaai conference
artificial intelligence  aaai      pp           
christian  r   fellows  m  r   rosamond  f  a     slinko  a          complexity
lobbying multiple referenda  review economic design                 
   

ficombinatorial shift bribery

conitzer  v   lang  j     xia  l          hard control sequential elections via
agenda   proceedings   st international joint conference artificial
intelligence  ijcai      pp          aaai press 
dorn  b     schlotter  i          multivariate complexity analysis swap bribery  algorithmica                 
downey  r  g     fellows  m  r          fundamentals parameterized complexity 
springer 
elkind  e     faliszewski  p          approximation algorithms campaign management 
proceedings  th international workshop internet network economics
 wine      vol       lncs  pp          springer 
elkind  e   faliszewski  p     slinko  a          swap bribery  proceedings  nd
international symposium algorithmic game theory  sagt      vol      
lncs  pp          springer 
faliszewski  p   hemaspaandra  e     hemaspaandra  l          using complexity protect
elections  communications acm                
faliszewski  p   hemaspaandra  e     hemaspaandra  l  a       a   hard bribery
elections   journal artificial intelligence research             
faliszewski  p   hemaspaandra  e   hemaspaandra  l  a     rothe  j       b   llull
copeland voting computationally resist bribery constructive control  journal
artificial intelligence research             
faliszewski  p   reisch  y   rothe  j     schend  l          complexity manipulation 
bribery  campaign management bucklin fallback voting  proceedings
  th international conference autonomous agents multiagent systems
 aamas      pp            ifaamas 
faliszewski  p     rothe  j          control bribery voting  brandt  f   conitzer 
v   endriss  u   lang  j     procaccia  a  d   eds    handbook computational
social choice  chap     cambridge university press 
flum  j     grohe  m          parameterized complexity theory  springer 
gabow  h  n          efficient reduction technique degree constrained subgraph
bidirected network flow problems  proceedings   th annual acm symposium
theory computing  stoc      pp          acm 
garey  m  r     johnson  d  s          computers intractability  guide theory
np completeness  freeman 
hazon  n   lin  r     kraus  s          change groups collective decision  
proceedings   rd international joint conference artificial intelligence
 ijcai      pp          aaai press 
hulett  h   will  t  g     woeginger  g  j          multigraph realizations degree
sequences  maximization easy  minimization hard  operations research letters 
               
   

fibredereck  faliszewski  niedermeier    talmon

lang  j     xia  l          voting combinatorial domains  brandt  f   conitzer  v  
endriss  u   lang  j     procaccia  a  d   eds    handbook computational social
choice  chap     cambridge university press 
lenstra  h  w          integer programming fixed number variables  mathematics
operations research                
magrino  t   rivest  r   shen  e     wagner  d          computing margin victory irv elections  presented      electronic voting technology workshop workshop trustworthy elections 
mathieson  l     szeider  s          editing graphs satisfy degree constraints  parameterized approach  journal computer system sciences                 
mattei  n   goldsmith  j     klapper  a       a   complexity bribery manipulation tournaments uncertain information  proceedings   th international florida artificial intelligence research society conference  flairs     
pp          aaai press 
mattei  n   pini  m   rossi  f     venable  k       b   bribery voting combinatorial
domains easy  proceedings   th international conference autonomous
agents multiagent systems  aamas      pp            ifaamas 
niedermeier  r          invitation fixed parameter algorithms  oxford university press 
obraztsova  s     elkind  e          complexity voting manipulation
randomized tie breaking  proceedings   nd international joint conference
artificial intelligence  ijcai      pp          aaai press 
obraztsova  s   elkind  e     hazon  n          ties matter  complexity voting manipulation revisited  proceedings   th international conference autonomous
agents multiagent systems  aamas      pp       
rajagopalan  s     vazirani  v  v          primal dual rnc approximation algorithms
set cover covering integer programs  siam journal computing         
       
reisch  y   rothe  j     schend  l          margin victory schulze  cup 
copeland elections  complexity regular exact variants  proceedings
seventh european starting ai researcher symposium  stairs        pp         
ios press 
schlotter  i   faliszewski  p     elkind  e          campaign management approvaldriven voting rules  proceedings   th aaai conference artificial intelligence  aaai      pp          aaai press 
xia  l          computing margin victory various voting rules  proceedings
  th acm conference electronic commerce  ec      pp          acm
press 

   


