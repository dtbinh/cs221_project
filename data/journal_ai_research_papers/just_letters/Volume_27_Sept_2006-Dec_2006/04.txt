journal of artificial intelligence research                  

submitted        published      

causes of ineradicable spurious predictions in qualitative simulation
zgr ylmaz
a  c  cem say
department of computer engineering
boazii university
bebek       stanbul  turkey

yilmozgu boun edu tr
say boun edu tr

abstract
it was recently proved that a sound and complete qualitative simulator does not exist  that is 
as long as the input output vocabulary of the state of the art qsim algorithm is used  there will
always be input models which cause any simulator with a coverage guarantee to make spurious
predictions in its output  in this paper  we examine whether a meaningfully expressive restriction
of this vocabulary is possible so that one can build a simulator with both the soundness and
completeness properties  we prove several negative results  all sound qualitative simulators 
employing subsets of the qsim representation which retain the operating region transition feature 
and support at least the addition and constancy constraints  are shown to be inherently incomplete 
even when the simulations are restricted to run in a single operating region  a constraint
vocabulary containing just the addition  constancy  derivative  and multiplication relations makes
the construction of sound and complete qualitative simulators impossible 

   introduction
it was recently proved  say   akn        that a sound and complete qualitative simulator does
not exist  that is  as long as the input output vocabulary of the state of the art qsim algorithm
 kuipers        is used  there will always be input models which cause any simulator with a
coverage guarantee to make spurious predictions in its output  in this paper  we examine whether
a meaningfully expressive restriction of this vocabulary is possible so that one can build a
simulator which will always output all and only the consistent solutions of its input model  we
prove several negative results  all sound qualitative simulators  employing subsets of the qsim
representation which retain the operating region transition feature  and support at least the
addition and constancy constraints  are shown to be inherently incomplete  the problem persists
when all variables are forced to change continuously during region transitions if a slightly larger
set of constraint types is allowed  even when the simulations are restricted to run in a single
operating region  a constraint vocabulary containing just the addition  constancy  derivative  and
multiplication relations makes the construction of sound and complete qualitative simulators
impossible  our findings may be helpful for researchers interested in constructing qualitative
simulators with improved theoretical coverage guarantees using weaker representations 

   background
we start with a brief overview of qualitative simulation  concentrating on the representations used
in the input output vocabularies of qualitative simulators  subsection     summarizes previous
work on the two theoretical properties of qualitative simulators that interest us  subsection     is
a short requirements specification for a hypothetical sound and complete qualitative simulator 

     ai access foundation  all rights reserved 

fiyilmaz   say

    qualitative simulation
in many domains  scientists and engineers have only an incomplete amount of information about
the model governing the dynamic system under consideration  which renders formulating an
exact ordinary differential equation  ode  impossible  incompletely specified differential
equations may also appear in contexts where the aim is to find collective proofs for behavioral
properties of an infinite set of systems sharing most  but not all  of the structure of the odes
describing them  to proceed with the reasoning task in such cases  mathematical tools embodying
methods making the most use of the available information to obtain a  hopefully small  set of
possible solutions matching the model are needed  qualitative reasoning  qr  researchers
develop ai programs which use weak representations  like intervals rather than point values for
quantities  and general shape descriptions rather than exact formulae for functional relationships 
in their vocabularies to perform various reasoning tasks about systems with incomplete
specifications  in the following  we use the notation and terminology of qsim  kuipers        
which is a state of the art qualitative simulation methodology  although it should be noted that the
incompleteness results that we will be proving are valid for all reasoners whose input output
vocabularies are rich enough to support the representational techniques that will be used in our
proofs 
a qualitative simulator takes as input a qualitative differential equation model of a system in
terms of constraints representing relations between the systems variables  in addition to this
model  the qualitative values of the variables at the time point from which the simulation should
start are also given  the algorithm produces a list of the possible future behaviors that may be
exhibited by systems whose ordinary differential equations match the input model 
the variables of a system modeled in qsim are continuously differentiable functions of time 
the limits of each variable and their first derivatives exist as they approach the endpoints of their
domains  each variable has a quantity space  a totally ordered collection of symbols  landmarks 
representing important values that it can take  zero is a standard landmark common to all
variables  quantity spaces are allowed to have the landmarks   and  at their ends  so functional
relationships with asymptotic shapes can be explicitly represented  when appropriate  a quantity
space can be declared to span only a proper subset of the extended reals  for instance  it makes
sense to bound the quantity space for a variable which is certainly nonnegative  like pressure 
with   at the left  if necessary  the user can specify one or both bounds of a quantity space to be
unreachable  for example   will be an unreachable value for all variables in all the models to be
discussed in this paper  the  reachable  points and intervals in its quantity space make up the set
of possible qualitative magnitudes of a variable  the qualitative direction of a variable is defined
to be the sign of its derivative  therefore its possible values are  inc      dec    and std      a
variables qualitative value is the pair consisting of its qualitative magnitude and qualitative
direction  the collection of the qualitative values of its variables makes up the state of a system 
the laws according to which the system operates are represented by constraints describing
time independent relations between the variables  at each step of the simulation  qsim uses a set
of transition rules to implicitly generate all possible next values of the variables  the
combinations of these values are filtered so that only those which constitute complete states  in
which every constraint is still satisfied by the new values of its variables  remain 
there are seven basic types of constraints in qsim   see table     each type of constraint
imposes a different kind of relation on its arguments  for example  if we have the constraint
a t    b t   any combination of variable values in which variables a and b have the same
 nonzero  sign in their magnitudes or directions will be filtered out  sometimes  additional
knowledge about the constraints allows further filtering  in the above example  if we know that a
and b had the landmark values a  and b  at the same moment at some time in the past  we can
   

ficauses of ineradicable spurious predictions in qualitative simulation

eliminate all value combinations in which a and b have magnitudes both less  or both greater 
than these landmarks  a  and b  are called corresponding values of that constraint  and the
equation a    b  is a correspondence  each constraint in a model  except those of the derivative
type  can have such correspondence equations  a sign algebra  kuipers        is employed to
implement the arithmetic relations using qualitative magnitudes  note that  since each m     m   
relationship corresponds to an infinite number of possible quantitative functions having the
monotonicity property  a single qsim model containing such constraints can correspond to
infinitely many odes 
constraint name
add

notation
x t    y t    z t 

constant

x t    a landmark

derivative

d dt x y 

m 

x t    f y t    f  m  

m

x t    f y t    f  m 

minus
mult

x t    y t 
x t   y t    z t 

explanation
d
x t     
dt
d
x t    y t 
dt
f such that x t    f y t    where f     
over f s domain
f such that x t    f y t    where f     
over f s domain

table    the qualitative constraint types
the qsim input vocabulary enables the user to describe more complicated models in terms of
several different constraint sets representing different operating regions of the system under
consideration  the user specifies the boundaries of the applicability ranges of the operating
regions in terms of conditions which indicate that the simulator should effect a transition to
another operating region when they are obtained 
for each operating region from which such a transition can occur  one has to specify the
following for each possible transition 
 boolean expressions composed of primitives of the form variablename qualitativevalue 
which will trigger this transition when they are satisfied 
 the name of the target operating region 
 the names of variables which will inherit their qualitative magnitudes and or directions in the
first state after the transition from the last state before the transition 
 value assignments for any variables which will have explicitly specified values in the first state
after the transition 
when provided with a qualitative system model  the name of the initial operating region  and a
description of the qualitative values of all variables in the initial state  qsim starts simulation 
and generates a tree of system states to represent the solutions of the qualitative differential
equation composed of the constraints in its input  the root of this tree is the input initial state with
the time point label t   representing the numerical value of the initial instant  every path from the
   

fiyilmaz   say

root to a leaf is a predicted behavior of the system  being in the qualitative format  each such
behavior usually corresponds to an infinite set of trajectories sharing the same qualitative
structure in phase space  time point and interval states appear alternately in behaviors as long as
the same operating region is valid  operating region transitions are reflected in behaviors as two
time point states following each other 
    related work on soundness and incompleteness
a very important property of qualitative simulators is their coverage guarantee  a qualitative
simulation algorithm is sound if it is guaranteed that  for any ode and initial state that matches
the simulators input  there will be a behavior in its output which matches the odes solution 
kuipers        proved that there exists a qualitative simulator  namely  qsim  that has the
soundness property  this guarantee makes qualitative simulation a valuable design and diagnosis
method  kuipers         in design  if the set of simulation predictions of our model does not
contain a catastrophic failure  this is a proof that our modeled system will not exhibit that failure
 shults   kuipers         in diagnosis  if none of the behaviors in the simulation output of a
model is being exhibited by a particular system  we can be      sure that the actual system is not
governed by that model 
another property that one would wish ones qualitative simulator to possess is completeness 
that is  a guarantee that every behavior in its output corresponds to the solution of at least one
ode matching its input  in the early days of qr research  it was conjectured  de kleer   brown 
      that qualitative simulators employing local constraint satisfaction methods  weld   de
kleer        were complete  however  in the same paper which contained the guaranteed
coverage theorem  kuipers        also showed that the version of qsim described there  and 
indeed  all qualitative simulators of the day  were incomplete  by demonstrating that the
simulation of a frictionless mass spring oscillator predicts unrealizable  spurious  behaviors 
where the amplitude decreases in some periods and increases in others  the lack of a guarantee
that all the predicted behaviors are real has a negative impact on potential applications  in design 
if the set of simulation predictions of our model does contain a catastrophic failure  this does not
necessarily point to an error in our mechanism  maybe the prediction in question was just a
spurious behavior  a similar problem occurs in diagnosis applications 
several other types of spurious qualitative simulation predictions were discovered in the
following years  struss        pointed out that  whenever a variable appeared more than once in
an arithmetic constraint  spurious states could pass the filter  for instance  the filters of the add
constraint are unable to delete states involving nonzero values for the variable z in the equation
a t    z t    a t  when a is nonzero  clearly  any sound and complete qualitative simulator
would have to possess the algebraic manipulation capabilities that enable us to conclude that z    
in this case  say and kuru        discovered a class of spurious predictions caused by a rigidity
in the internal representation of correspondences  and an unnecessarily weak implementation of
subtraction  say        showed that some other spurious behaviors are due to a lack of explicit
enforcement of lhpitals rule in the original algorithm  yet another family of inconsistent
predictions was found out to be caused by weaknesses in the methods used to distinguish finite
and infinite time intervals in the behaviors  say        also see missier         knik and say
       proved that some model and behavior descriptions could encode information about the
relative  finite  lengths of the intervals that they contain  and failure to check the overall
consistency of these pieces of information yields another class of spurious predictions  finally 
say        showed that a similar encoding could occur about the exact numerical values of some
landmarks  so that a sound and complete qualitative simulator would have to support a capability

   

ficauses of ineradicable spurious predictions in qualitative simulation

of comparing the magnitudes of any two elements of a very rich subset of the real numbers to
avoid a particular set of spurious predictions 
interestingly  all these discoveries were actually good news for the users of qualitative
simulators  in order to be able to say that a particular predicted behavior is spurious  and therefore
suitable for elimination from the simulator output without forsaking the soundness property  one
first proves that that behavior is mathematically inconsistent with the simulated model and
starting state  for instance  the aforementioned spurious oscillations of the frictionless massspring system can be shown to violate a conservation constraint that follows directly from the
structure of the input equations  but this proof can itself be seen as the specification of a new
filter routine which would eliminate exactly the set of behaviors that violate the law that it
establishes  the kinetic energy constraint  fouch   kuipers        is a filter which has been
developed in this fashion to eliminate the class of spurious predictions exemplified by the ones
about the mass spring system  kuipers        so all the spurious prediction classes mentioned in
the previous paragraph had  in fact  been discovered simultaneously with their cures 
the question of whether there exists a sound and complete qualitative simulator was finally
settled by say and akn         they proved that  for any sound qualitative simulator using the
input output representation and task specification of the qsim methodology  there exist input
models and initial states whose simulation output will contain spurious predictions   note that this
does not just say that the present qsim algorithm can not be augmented by more filters to make it
both sound and complete  it refutes the existence of any program whatsoever that can perform
this job  
the proof by say and akn        shows that a sound and complete qualitative simulator
employing the vocabulary mentioned above  if it existed  could be used to solve any given
instance of hilberts tenth problem  which is famously undecidable  matiyasevich         the
procedure involves building a qsim model representing the given problem  simulating it several
times starting from carefully constructed initial states representing candidate solutions  and
examining the output to read out the solution  the model is set up to contain an inconsistency if
and only if the answer to the considered problem is no  so the very existence of one or more
behaviors in the output means yes  since it is impossible to make this decision correctly in the
general case  it follows that there would be input models giving rise to behavior predictions
whose consistency status can not be determined by the simulator  whose best course of action
would be to include them in the output  to keep the soundness guarantee intact  in the cases where
the correct answer is no  this would result in the prediction of spurious behaviors  note that
these are ineradicable spurious predictions  unlike the ones discussed earlier 
it is important to note that this proof does not necessarily mean that all hope of constructing a
sound and complete qualitative simulator is lost  one may try to weaken the input output
representation so that it no longer possesses the problematic power which enables one to
unambiguously encode instances of hilberts tenth problem into a qsim model   of course  this
weakening must be kept at the minimum possible level for the resulting program to be a useful
reasoner  for instance  removing the programs ability to distinguish between negative and
nonnegative numbers would possibly yield a sound and complete simulator  but the output of that
program would just state that everything is possible and this is not what we want from these
methods   this is why one should examine the incompleteness proof  say   akn        to see
exactly which features of the qsim representation are used in the construction of the reduction 
any future qualitative simulator supporting the same vocabulary subset would be incorporating
the same problem from the start 
here is a listing of the qsim representational items used in that proof  only the m  
derivative  mult  and constant constraint types are utilized   note the absence of the add
constraint  which can be implemented using the others  in this list   qualitative interval
   

fiyilmaz   say

magnitudes like        with what one might call infinite uncertainty about the actual value of
the represented number  are used for initializing several variables  and form an essential part of
the argument  qsims ability to explicitly represent infinite limits is utilized for equating a
landmark to the number   by stating that it is twice the limit of the function arctan x as x nears
infinity  finally  the operating region transition feature is used heavily  since it is thanks to this
characteristic that the sine function between two dependent variables can be represented in the
qualitative vocabulary 
in section    we examine several different ways of weakening the qsim vocabulary to try to
understand which combinations of these features are responsible for the problem of ineradicable
spurious predictions 
    desiderata for a sound and complete qualitative simulator
it is important at this point to clarify exactly what one would expect from a hypothetical sound
and complete qualitative simulator  if the input model yields a finite behavior tree of genuine
solutions  it is obvious that the program is supposed to print the descriptions of the behaviors
forming the branches of this tree  and nothing else  in finite time  if the input model and initial
state are inconsistent  i e   the correct output is the empty tree  the program should report this
inconsistency in finite time 
finally  if the input yields a behavior tree with infinitely many branches  the program is
supposed to run forever  adding a new state to its output every once in a while  more formally  for
every positive i  there has to be an integer s such that the program will have printed out the first
i states of the behavior tree  according to some ordering where the root  i e  the initial state  is
state number    and no descendants of any particular state are printed before that state itself  at
the end of the sth step in its execution  note that these requirements mean that a sound and
complete simulator would have to be able to decide whether the initial system state description
given to it is consistent with the input model or not within finite time  this necessity is used in the
proofs of incompleteness in section   

   new incompleteness results for qualitative simulators
in this section  we examine two different ways of restricting the qualitative vocabulary in the
hope of obtaining a representation which allows the construction of sound and complete
simulators  subsection     considers the usage of several reduced sets of qualitative constraint
types  while retaining the operating region transition feature  we also examine a possible
restriction on the way variable values are handled during operating region transitions  subsection
    is an investigation of the capabilities of qualitative simulators which are restricted to input
models with a single operating region  both variants are shown to exhibit the problem of
ineradicable spurious predictions when the soundness guarantee is present 
    reduced constraint sets
the results in this subsection are based on the undecidability properties of abstract computational
devices called unlimited register machines  urms   we first present a brief introduction to
urms  and then proceed with our proofs 

   

ficauses of ineradicable spurious predictions in qualitative simulation

      unlimited register machines
the easiest way of thinking about a urm is to see it as a computer with infinite memory which
supports a particularly simple programming language  a urm  cutland        program p
consists of a finite sequence of instructions i   i        i p   the instructions refer to the machines
registers ri  each of which can store an arbitrarily big natural number  we use the notation r   r  
r       for the register contents 
for our purposes  it will be sufficient to consider three types of urm instructions 
succ n   increment the content of register n by one 
rn  rn    
zero n   set the content of register n to zero 
rn   
jump m  n  q   compare registers m and n  if they are equal  continue with instruction q 
if rm   rn then jump to iq
a urm program starts execution with the first instruction  if the current instruction is not a
jump whose equality condition is satisfied  it is followed by the next instruction in the list  the
program ends if it attempts to continue beyond the last instruction  or if a jump to a nonexistent
address is attempted  we assume without loss of generality that all such jumps are to address i p    
if p   i        i p  is a urm program  it computes a function p k    nk  n  p k  a        ak  is
computed as follows 
  initialization  store a        ak in registers r        rk  respectively  and set all other registers
referenced in the program to   
  iteration  starting with i   execute the instructions in the order described above 
  output  if the program ends  then the computed value of the function is the number r 
contained in register r   if the program never stops  then p k  a        ak  is undefined 
table   contains an example urm program which computes the function f x  y    x   y  note
that the function is from n  to n  where the input values x and y are stored in registers r  and r  
and the output of the function is expected to be stored in r  at the end of the program 
i  

zero   

i  

jump         

i  

succ   

i  

succ   

i  

jump         

table    urm program computing f x  y    x   y
the program first sets r  to zero  it then checks to see if r    r   in the case that y      
otherwise  it increments both r  and r   this continues until x has been incremented y times  and
the value in r  is returned 
the urm model of computation is equivalent to the numerous alternative models such as the
turing machine model  the gdel kleene partial recursive functions model and churchs lambda
   

fiyilmaz   say

calculus   cutland        shepherdson   sturgis        in the sense that the set of functions
computable by urms is identical to the set of the functions that can be computed by any of the
other models  this means that a device which can simulate any given urm is as powerful as a
turing machine  since it can simulate any given turing machine  in our proofs of the
incompleteness of the qsim vocabulary with reduced constraint sets  we will make use of the
fact that the halting problem for urms is undecidable  cutland        
      sound and complete qsim with reduced constraint sets solves the halting
problem
all the incompleteness results about new subsets of the qsim vocabulary that are presented in
this subsection are based on the following theorem  which shows that qsim can simulate any
urm  and thereby has turing equivalent computational power 
theorem    the execution of any urm program p with  p  instructions on any given input can
be represented by the simulation of a qsim model with  p    operating regions 
proof  the proof will be by construction  suppose we are given a urm program p with
instructions i        i p   let r        rn be the registers mentioned in the instructions of p 
for each of the ri  we define a qsim variable nri which will represent it  and  in case ri has a
nonzero initial value ai  a set of auxiliary qsim variables for representing ai  table   describes
the idea behind this representation  we have four more variables named u  w  z  and b  u
represents a clock which rises from   to   in every computational step  w is the derivative of u 
z is constant at zero in every operating region  b is an additional auxiliary variable 
constraints

initial values

conclusions

one t   one t    one t 
one t    one t    two t 
one t    two t    three t 

one t     one       

one is constant at  
two is constant at  
three is constant at  

table    qsim model fragment demonstrating the representability of exact integer values
our qsim model will have  p    operating regions  each instruction ii of p will have a
corresponding operating region named opregi  the two remaining regions are opreg  
corresponding to the initialization stage of p  and opreg p     corresponding to its end 
the specification of each operating region must contain the constraints that are valid in that
region  the boolean conditions  if any  composed of primitives of the form
variable    qualitative magnitude  qualitative direction  which would trigger transitions to
other operating regions when they are obtained  and lists that detail which variables inherit their
previous magnitudes and or directions after such a transition  and which of them are initialized to
new values during that switch  tables     describe how to prepare these items for the operating
regions in our target model  based on the program p  there are five different operating region
templates  or types  used in the construction  one for each urm instruction type  one for
opreg   and one for opreg p    
the model of opreg  is depicted in table    this is where our simulation of p will start  all
the nri variables are equated to their proper initial values specified by the user of p  the ones
initialized to zero are handled by constant at   constraints  the ones with positive initial values
   

ficauses of ineradicable spurious predictions in qualitative simulation

are specified to be constant at those values using add constraints to link them to the number
variables exemplified in table    for instance  if nr  is to be initialized to three  we have the
constraint three t    z t    nr  t   the add constraint between b  u  and one serves to express
the fact that the landmark named one in us quantity space is also equal to     note that all the
add constraints mentioned in this paragraph exist only in opreg   since they would disrupt the
intended behavior in the other operating regions  
as seen in tables      exactly which variables keep their values during a transition depends on
the type of the target operating region  regions corresponding to instructions of the type zero n 
should not inherit the value of rn from their predecessors  since they involve the replacement of
that value by zero anyway  all other types of regions  including the succ n  type  inherit all the
register contents from their predecessors   although the value of rn does change in a succ
instruction  the new value depends on the old one  unlike the case of zero n   the corresponding
qsim variable nrn increases continuously during the simulation of a region of type succ n   and
a new region transition occurs exactly at the moment when it has increased by one unit  
operating region  opreg 
 type  initialization 
constraint set  d dt u  w 
b t    u t    one t  with correspondence     one   one
all the required number representation constraints  see table   
add constraints linking the nri to the relevant number variables  see text 
all variables except u and b are constant 
possible transition 
trigger    u    one  inc   
new operating region  opreg 
variables inheriting magnitudes or directions  see table    indexed by the type of opreg 
variables with new asserted values  u      inc 

table    model of the operating region opreg   corresponding to the initialization of the urm

type of target
region
jump m  n  q 

variables inheriting
qualitative magnitudes
all variables except u and b

variables inheriting
qualitative directions
all variables except u  b  and all the nri

succ n 

all variables except u and b

all variables except u  b  and all the nri

zero n 

all variables except u and nrn

all variables except u  b  and all the nri

end

all variables except u

all variables except u and all the nri

table    variables which should inherit magnitudes and or directions according to the type of
the target operating region

   

fiyilmaz   say

the simulation of the given urm program proceeds as follows  as described in the previous
subsection  the urm starts with an initial configuration  where the registers r        rk store the
nonnegative integers a        ak  which form the input of the program  respectively  the other nk
registers are set to    correspondingly  each of the nri variables in our qsim model has the
quantity space        the nri variables with nonzero initial values start simulation with
qualitative values         std   whereas the other ones start with     std   the quantity space of
the variable u is     one   where the landmark one is equated to    as mentioned above  u starts
initially at qualitative value     inc   the derivative of u  w  has as quantity space     speed    
where speed is also equated to    it starts at qualitative value  speed  std  and is constant in the
whole simulation  the variable b has the quantity space          and starts at         dec  
when started in opreg   qsim will compute a single qualitative behavior segment  which ends
with a transition to opreg  when u reaches  one  inc  at time point t  
operating region  opregi
 type  zero n  
constraint set  d dt u  w 
nrn t     
all variables except u are constant 
possible transition 
trigger    u    one  inc   
new operating region  opregi  
variables inheriting magnitudes or directions  see table    indexed by the type of opregi  
variables with new asserted values  u      inc 

table    model template for operating regions corresponding to zero n  instructions

operating region  opregi
 type  succ n  
constraint set  d dt u  w 
b t    u t    nrn t 
all variables except u and nrn are constant 
possible transition 
trigger    u    one  inc   
new operating region  opregi  
variables inheriting magnitudes or directions  see table    indexed by the type of opregi  
variables with new asserted values  u      inc 

table    model template for operating regions corresponding to succ n  instructions

   

ficauses of ineradicable spurious predictions in qualitative simulation

note that there is zero uncertainty about the values of all variables  even the ones with initial
magnitude        at the start of the simulation 
our model is so constrained that a sound and complete qualitative simulator is guaranteed to
produce exactly one behavior prediction for any initial state corresponding to a valid urm input 
to see this  it is sufficient to observe that  at any step of the simulation  there is sufficient
information available to the simulator to compute the exact numerical value of every variable in
the model   this just corresponds to tracing the urm program and keeping note of the register
contents up to that step   if the modeled urm halts on the particular input given in the initial
state  the qsim behavior is supposed to be a finite one  ending when the variable u attempts to
exceed one in opreg p     if the urm computation does not halt  then the qsim behavior is
supposed to be a single infinite sequence of states  which never visits opreg p     
operating region  opregi
 type  jump m  n  q  
constraint set  d dt u  w 
nrm t    b t    nrn t 
all variables except u are constant 
possible transition 
trigger    u    one  inc    and   b      std   
new operating region  opregi  
variables inheriting magnitudes or directions  see table    indexed by the type of opregi  
variables with new asserted values  u      inc 
possible transition 
trigger    u    one  inc    and   b       std   
new operating region  opregq
variables inheriting magnitudes or directions  see table    indexed by the type of opregq
variables with new asserted values  u      inc 

table    model template for operating regions corresponding to jump m  n  q  instructions

operating region  opreg p   
 type  end 
constraint set  d dt u  w 
all variables except u are constant 

table    model of the operating region opreg p     corresponding to the end of the urm
program
we are now ready to state a new version of the incompleteness theorem 
   

fiyilmaz   say

theorem    even if the qualitative representation is narrowed so that only the derivative  add 
mult  and constant constraints can be used in qdes  and each variable is forced to start at a finite
value with zero uncertainty in the initial state  it is still impossible to build a sound and complete
qualitative simulator based on this input output vocabulary 
proof  assume that such a sound and complete simulator exists  we now show how to solve the
halting problem for urms using that algorithm as a subroutine 
construct the corresponding qsim model as described in theorem   for the urm program p
whose halting status on a particular input is supposed to be decided  now define a new variable s
with quantity space     one     where the landmark one is equated to the number    s starts at the
value  one  std  in the initial state  add constraints indicating that s is constant to all the
operating regions  and specify that the value of s is inherited in all possible transitions  insert the
new constraint s t      in opreg p     consider what the simulator is supposed to do when
checking the initial state for consistency  note that we would have an inconsistency if the
simulation ever enters opreg p     since the new constraint that we inserted to that region says that
s is zero  which would contradict with the inherited value of one  so a simulator which is
supposed not to make any spurious predictions is expected to reject the initial state at time t  as
inconsistent if the simulation is going to enter opreg p     in other words  if the urm program
under consideration is going to halt  if this sound and complete simulator does not reject the
initial state due to inconsistency  but goes on with the simulation  then we can conclude that the
program p will not halt  this forms a decision procedure for the halting problem  since the
halting problem is undecidable  we have obtained a contradiction  and conclude that a sound and
complete simulator using this representation can not exist  
it is in fact possible to remove the derivative constraint  which is only used in our proof to
ensure that the behavior tree has at most one branch  from the representation as well  and the
incompleteness result shown above would still stand 
theorem    even if the qualitative representation is narrowed so that only the add  mult  and
constant constraints can be used in qdes  and each variable is forced to start at a finite value
with zero uncertainty in the initial state  it is still impossible to build a sound and complete
qualitative simulator based on this input output vocabulary 
proof  we will make a minor modification to the proof of theorem    we observe that in the
construction of theorem    u always starts every operating region at     inc  and the fact that its
derivative is a positive constant forces it to reach the value  one  inc  in the next time point 
then the transition to next operating region occurs  and u again receives the value     inc   what
happens if we remove the variable w and all derivative constraints from the model  in this case 
since us derivative is not fixed  there are three possible states for u in the second time point
during the simulation of any operating region   one  inc    one  std   and      one   std   we fix
this problem by inserting another possible region transition specification to all of our regions 
except opreg p     this transition will be triggered when u has one of the values  one  std   and
     one   std   and its target will be opreg p     the variable s from the proof of theorem    as
well as all other variables  are inherited completely during this transition  so all the unwanted
behaviors which would be created due to the elimination of us derivative end up in opreg p    
and should therefore be eliminated as spurious in accordance with the argument of the previous
proof  hence  once again  the simulator is supposed to accept the initial state as consistent if and
only if p does not halt  meaning that a sound and complete simulation is impossible with this
representation as well  

   

ficauses of ineradicable spurious predictions in qualitative simulation

interestingly  one can even restrict the representation so that only nonnegative numbers are
supported  and the incompleteness result we proved above still stands 
theorem    even if the qualitative representation is narrowed so that only the add  mult  and
constant constraints can be used in qdes  each variable is forced to start at a finite value with
zero uncertainty in the initial state  and no variable is allowed to have a negative value at any time
during the simulation  it is still impossible to build a sound and complete qualitative simulator
based on this input output vocabulary 
proof  in our previous proof  only variable b ever has the possibility of having a negative value 
and that can occur only in a jump region  we replace the definition of the jump region template
with table     and introduce the new variables c and y  we insert constraints that say that these
variables are constant to all operating regions  c and y start at zero  and are inherited by all
transitions  except when the target region is of type jump  as can be seen in table     b gets the
value   if and only if the two compared register values are equal  if they are unequal  b has a
positive value different than    in this setup  bs quantity space is defined as     one     where
one is equated to    and no variable ever has a negative value during the simulation  b now starts
simulation with the value  one  dec  to satisfy the add constraint seen in table    the rest of the
argument is identical to that of theorem    
operating region  opregi
 type  jump m  n  q  
constraint set  nrm t    one t    c t 
nrn t    one t    y t 
b t   c t    y t 
all variables except u are constant 
possible transition 
trigger    u    one  inc    and   b   one  std   
new operating region  opregi  
variables inheriting magnitudes or directions  depends on the type of opregi    as before
variables with new asserted values  u      inc 
possible transition 
trigger    u    one  inc    and   b    one  std   
new operating region  opregq
variables inheriting magnitudes or directions  depends on the type of opregq  as before
variables with new asserted values  u      inc 

table     alternative model template for operating regions corresponding to jump m  n  q 
instructions which avoids negative numbers
alternatively  we can keep negative numbers and remove the mult constraint from the
representation  if we drop the requirement that each variable starts simulation at a value with zero
uncertainty 

   

fiyilmaz   say

theorem    even if the qualitative representation is narrowed so that only the add and constant
constraints can be used in qdes  it is still impossible to build a sound and complete qualitative
simulator based on this input output vocabulary 
proof  we used the mult constraint in the proofs of theorems     only for equating variable and
landmark values to unambiguous integers  assume that we delete the mult constraints from our
model of theorem    the number variables of table   are replaced with the setup shown in
table     if ri is supposed to be initialized to the positive integer ai in p  we equate nri to the
aiunit variable in opreg  using the method explained in the proof of theorem    note that we
only use constant and add constraints  and a lot of auxiliary variables  for this purpose 
constraints
oneunit t    unit
oneunit t    oneunit t    twounits t 
oneunit t    twounits t    threeunits t 

conclusions
twounits is constant at  unit
threeunits is constant at  unit

table     sample model fragment for equating variables to integer multiples of the positive
landmark unit
the landmarks previously named one in other variables quantity spaces are now equated to
unit  in this new model  execution of a succ n  instruction increments nrns value by one unit 
the jump instruction compares landmarks whose values equal uunit and vunit instead of
comparing two landmarks whose values equal the natural numbers u and v  the zero instruction
sets the target register to    as in the previous construction  so the modeled machine does just
what the original urm does  since the multiplication of all values by the coefficient unit does not
change the flow of the program  and  in particular  whether it halts on its input or not  the rest of
the argument is identical to that of the proof of theorem    
we observe that some of the variables change their qualitative magnitudes and directions
discontinuously during operating region transitions in the proofs of the previous theorems  the
next theorem proves that maintaining soundness and completeness simultaneously is impossible
even if we do not allow any qualitative variable to perform such a change  and force each
variables magnitude and direction to be inherited to the next operating region 
theorem    even if the qualitative representation is narrowed so that only the derivative  add and
constant constraints can be used in qdes  and no variables magnitude and direction are allowed
to perform discontinuous changes during operating region transitions  it is still impossible to build
a sound and complete qualitative simulator based on this input output vocabulary 
proof  once again  we make some changes to the qsim models used for simulating the given
urm in the previous theorems  as always  we have a qsim variable nri for each of the n
registers ri appearing in the urm program  in addition to that  we define the variables dij for all
i  j          n  such that i  j  each of these satisfies the equation dij   nri  nrj throughout the
simulation  that is  we keep track of the differences of all pairs of register values  this can clearly
be achieved by inserting several add constraints to all the operating regions in our model  these
difference variables will enable us to compare two register values in operating regions of type
jump 
   

ficauses of ineradicable spurious predictions in qualitative simulation

furthermore  we define auxiliary variables tri for all i           n   all the tri are initialized
to the same values as the corresponding nri  using the same technique as for the nri 
for each instruction type in the given urm program  we define two operating regions  our
clock variable u will increase in the first of these operating regions to the value  unit  std   and
decrease in the next one from  unit  std  to     std   performing no discontinuous jump in the
program  in order to obtain a variable with such behavior  we make use of the simple harmonic
oscillator model given in table     where the variable x  denoting the displacement from the
rest position of the oscillating object  oscillates between the values unit   and unit    and
the variable u is equated to x   unit    oscillating between   and unit  the model template given
in table    is added to every operating region   that table contains some variable names used in
the constructions of the previous proofs  all such variables are treated in the previously described
manner  unless this proof specifies otherwise   the following lemma establishes the correctness
of this construction 
constraints

correspondences

meaning

halfunit t    halfunit t    oneunit t 

c    c    unit

c    unit    

halfunit t    v t    e t 

c    v     

v    unit    

d dt x  v 

dx
 v
dt

d dt v  a 

d x
 a
dt

x t    a t    z t 

d x
  x   
dt

x t    halfunit t    u t 

u   x unit  

table     model template to obtain the desired behavior for the variable u as a clock
oscillating between qualitative values     std  and  unit  std   this template is to be inserted
to all constructed operating regions  
lemma    for any number r which can be represented by a qsim landmark  a qsim variable x
can be equated to the function r sin t  t   using only derivative  add and constant constraints 
proof of lemma   
as seen in table     the equation
d 
x  t     x  t      
dt

can be expressed using only derivative  add and constant constraints  this equation has a general
solution of the form
x  t     c  sin t   c  cos t  
   

   

fiyilmaz   say

and hence its time derivative v has the form
v  t     c  cos t  c  sin t  

assume that x and v are initialized as follows 
x  t       
v  t      r  

by substituting these values in the equations above  one obtains the equation system
    c  sin t    c  cos t 
r   c  cos t   c  sin t   

whose solution  ylmaz        yields c    r cos t  and c    r sin t   substituting c  and c  into
equation      we get x  t     r   cos t   sin t  sin t   cos t     r sin  t  t       thereby proving the
lemma  
proof of theorem    continued  
therefore  if we equate the landmark v  of v to unit   as shown in table     and initialize x and
v to   and v   respectively  we will ensure that
x  t     

unit
sin t  t     
 

i e   that the variable x oscillates between the values unit   and unit    as desired 
to be consistent with lemma    the oscillating variables of table    start simulation with the
qualitative values listed in table     all other variables  except b  which starts with the value
        inc   are initialized as previously described 
variable

quantity space

initial value

u

    unit 

     unit   dec 

e

        

    std 

x

        

    dec 

v

    v       

 v   std 

a

        

    inc 

table     the quantity spaces and initial values of the oscillating variables
we are going to denote the two operating regions corresponding to the ith instruction of the
urm program with opregi   and opregi    all variables qualitative values are inherited in all
possible transitions  such that no variable ever undergoes a discontinuous change  looking
carefully at tables        which correspond to the initialization  instruction types  and ending of
the urm  we see that the simulation flows in a unique branch with the exception of zero type
   

ficauses of ineradicable spurious predictions in qualitative simulation

operating regions  where there is the possibility that the simulation branches into more than one
behavior  and the behaviors which do not correspond to the expected trajectory of the actual
urm are directed to opreg p        note that transitions to infinite landmarks do not need to be
considered  since we assume that all infinite landmarks are specified as unreachable values for all
variables in our models   the registers stay constant when opreg p       which is a single operating
region corresponding to the end of the urm program  is reached  the rest of the proof is the
same as in theorem    our contradiction variable s ensures that only the behavior of a nonhalting urm leads to a consistent initial state  hence determining the consistency of the initial
state is equivalent to deciding the halting problem  leading to a contradiction  
operating region  opreg 
 type  initialization 
constraint set  all the required input value representation constraints  see table    
b t    u t    oneunit t  with correspondence     unit   unit
add constraints linking the nri and the tri to the relevant nunit variables
add constraints defining the dij variables
the clock constraints  table    
all variables except b  u  x  v  e  and a are constant 
possible transition 
trigger    u       std   
new operating region  opreg   
variables inheriting qualitative values  all variables

table     template for the single operating region corresponding to the initialization stage
    simulation within a single operating region
the incompleteness proofs in subsection      as well as that of say   akn        depend on the
capability of turning the constraints on or off when necessary  which is provided by the
operating region transition feature  would the problem persist if we forsook that feature  and
focused on the simulation of qualitative models with a single operating region  we now show
that the answer to this question is affirmative 
      hilberts tenth problem
as the name suggests  hilberts tenth problem is the tenth of    problems which were
announced in      by the famous mathematician david hilbert as a challenge to the
mathematicians of the   th century  it asks for an algorithm for deciding whether a given
multivariate polynomial with integer coefficients has integer solutions  it has been proven that no
such algorithm exists  matiyasevich         this fact was used by say and akn        in their
original proof of the existence of ineradicable spurious predictions in the outputs of all qualitative
simulators employing the operating region transition feature and a larger set of constraint types
than those we deal with in this paper 

   

fiyilmaz   say

in the proof to be presented shortly  we use the undecidability of a slightly modified variant of
the setup described by hilbert  we assume a guarantee that none of the variables in the given
polynomial are zero in the solution whose existence is in question  it is clear that this modified
problem is unsolvable as well  by the following argument  assume that we do have an algorithm
a which takes a multivariate polynomial with integer coefficients as input  and announces
whether a solution where all the variables have nonzero integer values exists or not in finite time 
we can use a as a subroutine in the construction of the algorithm sought in hilberts original
problem as follows  we systematically produce  n polynomials from the input polynomial with n
variables  such that each of these new polynomials corresponds to a different subset of the
variables of the original polynomial replaced with zero  we then run a on each of these new
polynomials  it is easy to see that a will find that one or more of these polynomials have nonzero
integer solutions if and only if the original polynomial has integer solutions 
operating region  opregi  
 type  zero n  
constraint set  add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  a  nrn  and dij with n   i j  are constant 
possible transition 
trigger    u    unit  std    and   nrn       std   
new operating region  opregi  
variables inheriting qualitative values  all variables
possible transition 
trigger     u    unit  std    and   nrn      std     or   nrn           std    or   nrn            std   
new operating region  opreg p      
variables inheriting qualitative values  all variables

table     template for the first operating region corresponding to zero n  instructions
      sound and complete qsim within a single operating region solves hilberts
tenth problem
theorem    even if the qualitative representation is narrowed so that only the derivative  add 
mult and constant constraints can be used in qdes  and the simulation proceeds only in a single
operating region  it is still impossible to build a sound and complete qualitative simulator based
on this input output vocabulary 
we are going to start our proof with some preliminary lemmata  the first of which is
reminiscent of lemma   from the previous subsection 
lemma    for any real constant equated to the qsim variable xi  a qsim variable yi can be
equated to the function sin   x i   t  t     using only derivative  add  mult  and constant constraints 
proof  the case for xi     is trivial  and can be handled with a single constant constraint  for the
remaining case  we will consider the following equation set 
   

ficauses of ineradicable spurious predictions in qualitative simulation

operating region  opregi  
 type  zero n  
constraint set  add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  a  and trn are constant 
possible transition 
trigger    u       std    and   trn       std   
new operating region  opregi    
variables inheriting qualitative values  all variables
possible transition 
trigger     u       std    and   trn      std      or   trn           std    or   trn            std   
new operating region  opreg p      
variables inheriting qualitative values  all variables

table     template for the second operating region corresponding to zero n  instructions

operating region  opregi  
 type  succ n  
constraint set  trn t   u t   nrn t 
add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  a  nrn  and dij with n   i j  are constant 
possible transition 
trigger    u    unit  std   
new operating region  opregi  
variables inheriting qualitative values  all variables

table     template for the first operating region corresponding to succ n  instructions
d 
yi  t     wi  yi  t      
dt

xi    
x i  
wi   x i    so that wi   
  x i   x i     

with the initial values
yi  t       

   

   

   

fiyilmaz   say

operating region  opregi  
 type  succ n  
constraint set  trn t   u t   nrn t 
add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  a  and trn are constant 
possible transition 
trigger    u       std   
new operating region  opregi    
variables inheriting qualitative values  all variables

table     template for the second operating region corresponding to succ n  instructions

operating region  opregi  
 type  jump m  n  q  
constraint set  add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  and a are constant 
possible transition 
trigger    u    unit  std   
new operating region  opregi  
variables inheriting qualitative values  all variables

table     template for the first operating region corresponding to jump m  n  q  instructions
vi  t      x i  

where vi t  is the time derivative of yi t  
the general solution of equation     is 

 

 

 

 

yi  t     c  sin wi  t   c  cos wi  t  

substituting the wi from equation     and the initial values in the equations for yi and vi  and
solving these equation systems results in the following  ylmaz        
for xi      c    cos xit   and c    sin xit   
for xi      c    cos xit   and c    sin xit   
when we substitute these in the formula for yi t   we obtain 
yi  t     cos  x i  t   sin   x i  t    sin   x i  t    cos  x i  t     sin   x i   t  t      
   

xi     

ficauses of ineradicable spurious predictions in qualitative simulation

operating region  opregi  
 type  jump m  n  q  
constraint set  add constraints defining the dij variables
the clock constraints  table    
all variables except u  x  v  e  and a are constant 
possible transition 
trigger    dmn       std    and   u       std   
new operating region  opregq  
variables inheriting qualitative values  all variables
possible transition 
trigger    dmn      std    and   u       std   
new operating region  opregi    
variables inheriting qualitative values  all variables

table     template for the second operating region corresponding to jump m  n  q  instructions

operating region  opreg p      
 type  end 
constraint set  s t     
all variables except u  x  v  e  and a are constant 

table     model of the operating region corresponding to the end of the urm program
yi  t      cos  x i  t   sin    x i    t    sin   x i  t    cos   x i    t     sin   x i   t  t      

xi     

hence  we have yi t    sin   x i   t  t     for all xi    
table    shows that equations     and     and the initial values given above are representable
using the derivative  add  mult  and constant constraints  note that xi has to be kept constant and
initialized to either       or        depending on the intended sign for that number  and both yi
and ci must start at zero  to be consistent with the construction above  
lemma     starting at t   the function y   sin tt   reaches the value   for the first time at time
point te   t      moreover the function yi   sin xi tt    reaches   at the same time point te if
and only if xi is an integer 
proof  the equation sin tt       implies tt    n  n    and since we are interested in the first
time point after t  where it becomes    we get te   t      for the only if part of the second
statement  assume that the function yi   sin xi tt    reaches   at te   t      then
sin   x i   t       t        sin   x i         implies that xi is an integer  for the if part  we use the
knowledge that xi is an integer to conclude that yi te    sin xi t      t      sin xi      
   

fiyilmaz   say

constraints

meaning

z  
xi t    ci t    vi t 

vi t     xi

d dt yi  vi 

dyi
  vi  t  
dt

d dt vi  ai 

d  yi
  ai  t  
dt

xi t   xi t    wi t 

wi   x i 

wi t   yi t    li t 

li  t     wi  yi  t  

ai t    li t    z t 

d  yi
  wi  yi  t      
dt

table     model fragment used to obtain the relationship yi   sin   x i   t  t    
proof of theorem    as already mentioned  the proof relies on a contradiction  namely that a
sound and complete simulator  if it existed  could be used to construct an algorithm for solving
hilberts tenth problem  as follows 
assume that we are given a polynomial p x   x   x        xn  with integer coefficients  we start
by constructing a qsim model fragment that says that p x   x   x        xn       we have already
seen in section     how to equate any desired integer to a qsim variable  represent all integers
appearing as coefficients in the polynomial in that manner  introduce a qsim variable xi for each
of the xi  declare all these xi to be constant  and use add and mult constraints to equate the sum of
products that is p x   x   x        xn  to a qsim variable p  which will be initialized to    note that
this is tantamount to saying that the present values of the xi form a solution for the polynomial 
all this can clearly be done in a single operating region  with constraints of the types mult  add
and constant 
we then extend this model with the necessary constraints and auxiliary variables to equate a
new variable y to the function sin tt     either lemma   or lemma   can be used for this
purpose   we specify ys quantity space as        so that the simulation is guaranteed to finish at
t   te   t      for each xi  we define associated auxiliary variables ci  li  wi  vi  ai and yi  and
add the template in table    to our model to express the relationship yi   sin xi tt     we also

equate a variable ys with the sum of the squares of the yi  i e  ys  

n

y

i

 

  note that if ys     

i   

then all the yi are   
finally  we need make sure that the only consistent behaviors are the ones in which the xi are
integers  that is  relying on lemma     the behaviors in which the variable ys becomes   at te  
to serve this aim  we add the constraint f t   y t    ys t  to our model 
we will simulate this model  n times  each run corresponding to a different way of initializing
the xi to magnitudes selected from the set                 a sound and complete simulator
   

ficauses of ineradicable spurious predictions in qualitative simulation

would accept all and only the initial states with those xi whose values do not cause any
inconsistency with our model  but those xi correspond exactly to the integer solutions of the
given polynomial  by the following reasoning about the variable f 
note that f is defined to be ys y by the f t   y t    ys t  constraint  we know that y  yi  and
hence ys are all initially    meaning that one has to use lhpitals rule to find out the initial
value of f  this is important  since if fs initial magnitude or derivative are infinite  qsim is not
even supposed to consider successors for the initial state   we declare the infinite landmarks as
unreachable values for all variables  as mentioned earlier  even if fs magnitude is finite and just
its derivative is infinite  simulation is not supposed to continue  because the continuity
requirement would be violated   fortunately 
n

 sin   x   t  t   
 

f  t    

 

i

i   

sin  t  t   

does have finite magnitude and derivative at t   at t   t   we use lhpitals rule to find
n

 
f  t       
 

  x

i

sin   x i   t   t     cos  x i   t   t    

i   

    

cos t   t   

as for fs qualitative direction 
df
 t    
dt

   x i sin   x i   t  t     cos  x i   t  t     sin     x i   t  t     cos t  t    

 



sin  t  t   
sin    t  t   
i    

n



and it turns out  after several applications of lhpitals rule  that
df
 t     
dt

n

x

 
i

 

i   

which is clearly a finite positive number  and fs initial qualitative value is therefore     inc  
obviously  f   ys y is guaranteed to be finite until te  when y reaches    if the variable ys is
nonzero  implying that at least one of the yi is nonzero  and by lemma    that the corresponding
xi is not an integer  at te  f te  has to equal   which is impossible since infinity was declared to
be unreachable  so such states would be eliminated as spurious  if  on the other hand  ys te      
then  we see by lhpitals rule  and the knowledge that all the xi are integers  that
n

 
f  t e      
 


i   

n

  x i sin   x i   t e  t    cos   x i   t e  t    
 

cos  t e  t   

  x
i   

i

sin   x i     cos  x i    
cos   

    

and behaviors ending with such states are supposed to be included in the simulation output  so if
our supposedly complete and sound simulator rejects the initial states of our model due to
inconsistency in all the  n runs  we reason that all the behavior predictions considered by the
simulator ended with f te      and this inconsistency propagated back to the initial state and led
to its rejection in all cases  we conclude that the polynomial has no integer solutions  on the
other hand  if even one of the simulations prints out the initial state and goes on with its
successors  we conclude that a solution exists  this forms the decision procedure required in
   

fiyilmaz   say

hilberts tenth problem  leading to a contradiction  therefore  sound and complete simulation is
impossible even if one restricts oneself to a single operating region and the limited constraint
vocabulary mentioned in the statement of the theorem  

   conclusion
in this paper  we considered several alternative subsets of the qualitative representation  and
showed that the ineradicable spurious prediction problem persists even when only the add and
constant constraints are allowed  if one allows the mult constraint as well  then any resulting
qualitative simulator is inherently incomplete even when the representation of negative numbers
is forbidden and every variable is forced to be specified with zero uncertainty  i e  as a single
unambiguous real number  in the initial state  our final proof shows that even the ability of
handling models with multiple operating regions can be removed from the representation  and the
incompleteness problem would still persist  provided the add  constant  derivative  and mult
constraints are allowed in the vocabulary  note that none of these vocabularies include the
monotonic function constraint  which is the only relation type native to the qualitative
representation 
although the results in this paper are demonstrated using the qsim representation for input
and output  they are valid for all qualitative simulators whose input and output vocabularies are as
expressive as the specified subsets of those of qsim   also note that our proofs apply
automatically to semi quantitative simulators  whose representations are an extension of that of
pure qsim   we believe that these results are important in the sense that they provide deeper
insight to the causes of spurious predictions  and they can be helpful for researchers aiming to
construct provably sound and complete simulators using weaker representations 
finally  we wish to stress that our findings here do not amount to as bad a piece of news about
the usefulness of qualitative simulators in the practical domains that they are usually utilized as it
may seem to the uninitiated eye  when ones model is specified at the level of precision that is
involved in the models in this paper  one does not employ a qualitative reasoner anyway  what
really annoys the users of qualitative simulators is the occasional prediction of eradicable
spurious behaviors  and the strengthening of the algorithms with additional filters of increasing
mathematical sophistication to get rid of more of these continues to be an important line of
research 

references
cutland  n  j          computability  an introduction to recursive function theory  cambridge 
uk  cambridge university press 
de kleer  j     brown  j  s          a qualitative physics based on confluences  artificial
intelligence           
fouch  p     kuipers  b  j          reasoning about energy in qualitative simulation  ieee
transactions on systems  man  and cybernetics            
knik  t     say  a  c  c          duration consistency filtering for qualitative simulation 
annals of mathematics and artificial intelligence              
kuipers  b  j           qualitative simulation  artificial intelligence              

   

ficauses of ineradicable spurious predictions in qualitative simulation

kuipers  b  j          qualitative reasoning  modeling and simulation with incomplete
knowledge  cambridge  ma  mit press 
matiyasevich  y          hilberts tenth problem  cambridge  ma  mit press 
missier  a          mathematical structures for qualitative calculus  a contribution to qualitative
simulation   in french  ph d  thesis  institut national des sciences appliques de toulouse 
say  a  c  c          lhpitals filter for qsim  ieee transactions on pattern analysis and
machine intelligence          
say  a  c  c          improved reasoning about infinity using qualitative simulation  computing
and informatics              
say  a  c  c          sound and complete qualitative simulation requires quantitative filtering 
annals of mathematics and artificial intelligence              
say  a  c  c     akn  h  l          sound and complete qualitative simulation is impossible 
artificial intelligence               
say  a  c  c     kuru  s          improved filtering for the qsim algorithm  ieee transactions
on pattern analysis and machine intelligence              
shepherdson  j  c     sturgis  h  e          computability of recursive functions  journal of the
acm              
shults  b     kuipers  b          proving properties of continuous systems  qualitative
simulation and temporal logic  artificial intelligence             
struss  p          problems of interval based qualitative reasoning  in weld  d  s     de kleer  j 
 eds   readings in qualitative reasoning about physical systems  san mateo  ca  morgan
kaufmann          
weld  d  s     de kleer  j   eds           readings in qualitative reasoning about physical
systems  san mateo  ca  morgan kaufmann 
ylmaz            computability theoretic limitations of qualitative simulation  m  s  thesis 
boazii university  stanbul  turkey 
 http   www cmpe boun edu tr graduate allthesis m   pdf 

   

fi