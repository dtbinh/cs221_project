journal artificial intelligence research                  

submitted        published      

set intersection consistency constraint networks
yuanlin zhang

yzhang cs ttu edu

department computer science  texas tech university
lubbock  tx       usa

roland h  c  yap

ryap comp nus edu sg

department computer science  national university singapore
  science drive    singapore       

abstract
paper  show close relation consistency constraint
network set intersection  proof schema provided generic way obtain consistency properties properties set intersection  approach simplifies
understanding unifies many existing consistency results  directs study
consistency set intersection properties many situations  demonstrated
results convexity tightness constraints paper  specifically 
identify new class tree convex constraints local consistency ensures global
consistency  generalizes row convex constraints  various consistency results
obtained constraint networks some  contrast existing work 
constraints tight 

   introduction
constraint network consists set variables finite domains system
constraints variables  important task find assignment
variables constraints network satisfied  assignment
exists  network satisfiable globally consistent  assignment called solution 
problem determining global consistency general constraint network npcomplete  usually search procedure employed find solution  practice  due
efficiency considerations  search usually equipped filtering algorithm
prunes values variable combinations values certain number variables
cannot part solution  filtering algorithm make constraint network
locally consistent sense consistent assignment variables always
extensible new variable  important interesting question local consistency is 
local consistency obtained sufficient determine global consistency
network without search  filtering algorithm polynomial
complexity  positive answer would mean network solved
polynomial time 
much work done explore relationship local global consistency particular properties local consistency general  one direction
make use topological structure constraint network  classical result
graph constraint network tree  arc consistency network sufficient
ensure global consistency  freuder        
c
    
ai access foundation  rights reserved 

fizhang   yap

second direction  makes use semantic properties constraints  monotone
constraints  path consistency implies global consistency  montanari         van beek
dechter        generalize monotone constraints larger class row convex constraints 
dechter        shows certain level consistency constraint network whose
domains limited size ensures global consistency  later  van beek dechter       
study consistency constraint networks tight loose constraints 
existing work along two approaches used specific different techniques
study local global consistency  particular  little commonality details
existing work  much existing work  techniques consequently
proofs given developed specifically results concerned 
paper  show much work connected together
new approach studying consistency constraint network  unite two seemingly
disparate areas  study set intersection special sets study k consistency
constraint networks  fact  k consistency expressed terms set intersection 
allows one obtain relationships local global consistency constraint
network properties set intersection special sets  main result
approach proof schema used lift results set intersection 
rather general  particular consistency results constraint networks  one benefit
proof schema lies provides modular way greatly simplify understanding
proofs consistency results  benefit considerable often proofs many
existing results complex hard wired  using new approach  show
precisely various properties set intersection key results 
furthermore  proofs become mechanical 
following sketch illustrates briefly use approach  one property set
intersection intersection every pair     tree convex sets  see section   
empty  intersection whole collection sets empty too 
property  see local information intersection every pair sets gives
rise global information intersection sets  intuitively  relationship
local global information corresponds obtaining global consistency
local consistency  proof schema used lift result tree convex sets
following consistency result  binary constraint network tree convex constraints 
      consistency  path consistency  implies global consistency network 
usefulness new set based approach twofold  firstly  gives clear picture
many existing results  example  many well known results second direction
based semantic properties constraints  including van beek   dechter              
well results first direction  shown easy proofs make use
set intersection properties  secondly  directing study consistency set
intersection properties  helps improve existing results derive new results
demonstrated sections    
paper organized follows  section    present necessary notations
concepts  section    focus properties intersection tree convex sets sets
   difference work concerned studying tractability constraint
languages  e g   schaefer        jeavons  cohen    gyssens         latter considers problems
whose constraints fixed set relations former studies constraint networks
special properties 

   

fiset intersection consistency constraint networks

cardinality restrictions  section    develop characterization k consistency
utilizing set intersection proof schema offers generic way obtain consistency
results set intersection properties  power new approach demonstrated
new consistency results convexity tightness constraints  tree convex
constraints studied section    constraint network tree convex constraints 
local consistency ensures global consistency  result intersection property tree
convex sets  tightness constraints studied section    thanks intersection
properties sets cardinality restriction  relation local global consistency
identified weakly tight constraint networks section      networks require
some  rather all  constraints m tight  improving tightness result van beek
dechter         help relational consistency  show global consistency
achieved local consistency weakly tight constraint networks section     
type result tightness known before  section      explore
constraint network weakly m tight present several results number
tight constraints sufficient necessary network weakly tight  make full use
tightness constraints network  propose dually adaptive consistency
section      dually adaptive consistency constraint network determined
topology tightest relevant constraint variable  completeness  include
section   results tightness tree convexity based relational consistency 
conclude section   

   preliminaries
constraint network r defined set variables n    x    x            xn    set finite
domains    d    d            dn   domain di      n  set values
variable xi take  set constraints c    cs    cs            cse   si      e 
subset  x    x            xn   constraint csi relation defined domains
variables si   without loss generality  assume that  two constraints
csi   csj c  i    j   si    sj   arity constraint csi number variables si  
variable x  dx denotes domain  rest paper  often use network
mean constraint network 
instantiation variables    x            xj   denoted    a            aj  
ai di    j  extension variable x 
    denoted  a  u 
u dx   instantiation set variables consistent satisfies constraints
r involve variables outside  
constraint network r k consistent consistent instantiation
distinct k   variables  new variable x  exists u dx
 a  u  consistent instantiation k variables  r strongly k consistent
j consistent j k  strongly n consistent network called globally consistent 
information constraint networks consistency  reader referred
work mackworth         freuder        dechter        

   

fizhang   yap

   properties set intersection
section  develop number set intersection results used later
derive results consistency  set intersection property concerned is 
given collection l finite sets  conditions intersection
l sets empty 
here  particularly interested intersection property sets two interesting useful restrictions  convexity cardinality 
    tree convex sets
given collection sets  structures associated elements sets
obtain interesting useful set intersection results  study
sets whose elements form tree  first introduce concept tree convex set 
definition   given discrete set u tree vertices u   set u tree
convex exists subtree whose vertices a 
subtree tree subgraph tree  next define say
collection sets tree convex 
definition   given collection discrete sets s  let union sets u  
sets tree convex tree u every set tree convex  
collection sets said tree convex exists tree sets
collection tree convex tree 
b



               
                        
     
      
      
      
 
 
 
 
 
      
      
      
     
      
 
 
 
 
 
      
   
 
 
 
 
  
 
  

  
                  
      
      
      
      
      
      
      
      
 
 
 
 
 
      
   
 
 
 
 
      
 
   
     
      

b

c

    
     
    
    
 
 
 
 
 
     
    
    



c        





 
                  
        
    
  
         
   
  
   
   
   
 
 
   
   
   
  
 
 
 
 
 
   
   
 
        
         
       
       
      
      

e

e

 a 

f

 b 

figure     a  tree nodes  a  b  c  d  e   b  partial order nodes  a  b  c  d  e  f  

example   consider set u    a  b  c  d  e  tree given figure    subset
 a  b  c  d  tree convex given tree  set  b  a  c  e  since elements
set subtree  however   b  c  e  tree convex elements form
subtree given tree 
example   consider                             construct tree             
  root         children  set covers nodes exactly one
branch tree  hence  sets tree convex 
   

fiset intersection consistency constraint networks

tree convex sets following intersection property 
lemma    tree convex sets intersection 
given finite collection
finite sets s 

assume sets tree convex 
e    iff e    e  s  e  e      
es
proof  let l number sets s  tree that  ei s  ei
vertices subtree ti   assuming rooted tree  every ti  i    l  rooted
tree whose root exactly node nearest root   let ri denote root ti
   l 
prove
ei      want show intersection trees  ti      l 
i   l

empty  following propositions subtrees necessary main proof 
proposition   let t    t  two subtrees tree     t  t    tree 
    trivial tree  let      since portion t    circuit
it  necessary prove connected  show  two nodes u  v  
path them  u  v t  u  v t  respectively imply exist
paths p    u          v t  p    u          v t  respectively  recall unique
path u v t  t  subtrees   therefore  p  p  cover
nodes edges  thus   intersection t  t    p 
path want 
proposition   let t    t  two subtrees tree     t  t    empty
least one roots t  t   
let r  r  roots t  t  respectively  r    proposition correct 
otherwise  show r    assume contrary r 
    clearly  r     r    let r
first common ancestor r  r  v root  t tree proposition    
paths p    r            v t    p    r            v t    p    r          r    p    r          r 
  since v descendant r  r    p  p  share vertex v  since r
first common ancestor r  r    p  p  share vertex r 
verified p  p  share r    p  p  share r    vertex shared
either p  p  p  p    hence  closed walk p  p  p   p     p   p  
reverse p  p  respectively  simple circuit  contradicts circuit
 
further  following observation 
proposition   let tree root r  t  t  two subtrees roots r 
r  respectively  let r  closer r r    intersection t  t   
r  root empty 
proposition true r    r    let r  farther r r    clearly r 
  t 
thus r 
 t
 

proposition
  
r


root


 
 

let  
ti   ready prove main result      select tree tmax
i   l

t    t            tl root rmax farthest away r among roots
   

fizhang   yap

concerned trees  accordance proposition    tmax intersect every
tree implies rmax node every ti  i    l   therefore  rmax    
remark  partial order represented acyclic directed graph  tempting generalize tree convexity partial convexity following way 
given set u partial order it  set u partially convex
set nodes connected subgraph partial order  given collection sets s 
let union sets u   sets partially convex partial
order u every set partially convex partial order 
however  generalization  get result similar lemma   
illustrated following example  consider three sets  c  b  d    d  f  a   a  e  c 
nodes diagram given figure   b   sets partially convex
intersect pairwise  however  intersection three sets empty 
    sets cardinality restrictions
another useful restriction place sets restrict cardinalities 
special case  consider set one element a  intersection every set
empty  able conclude every set contains a  thus intersection
sets empty  generally  set elements  following
result 
lemma   consider finite collection l sets s  e    e            el   number   l 
assume one set e  elements 
 
e   
es
iff intersection e  sets empty 
proof  necessary condition immediate 
prove sufficient condition  show intersection e 
k  m k l    sets empty induction k  k   m  lemma
true according assumption  assuming intersection e 
k     m  sets empty  show intersection e  k
sets empty  without loss generality  subscripts k sets numbered
  k        k      let ai intersection e  k sets except ei  
ai   e        ei  ei         ek    
first  show contradiction exist i  j    k         j
ai aj      assume ai aj   distinct j  according construction
ai s 
 
e 
ai  
i   k  

   

fiset intersection consistency constraint networks

 ai     induction assumption  hence 
x
 e   
 ai   k   m 
i   k  

contradicts  e    m 
since ai aj    i  j    k         j 
 
ei     
ai aj  
i   k  

 
lemma leads following corollary intersection every     sets
empty 
corollary    small set intersection  consider finite collection l sets
number   l  assume one set elements 
 
e   
es
iff intersection     sets empty 
specialized versions  zhang   yap        lemma  
existing works van beek dechter        david        based 
sets concern cardinality larger certain number  intersection
sets empty conditions  reader may refer large sets
intersection lemma  zhang   yap        details 

   set intersection consistency
section  first relate consistency constraint networks set intersection  using
result  present proof schema allows us study relationship local
global consistency properties set intersection 
underlying concept k consistency whether instantiation variables
extended new variable relevant constraints new variable
satisfied  relevant constraint variable xi respect constraint contains
xi variables   given instantiation   relevant constraint allows
set  possibly empty  values new variable  call set extension set 
satisfiability relevant constraints depends whether intersection extension
sets non empty  see lemma    
definition   given constraint csi   variable x si   instantiation si  x  
extension set x respect csi defined
ei x  a     b dx    a  b  satisf ies csi   
extension set trivial empty  otherwise non trivial 
   

fizhang   yap

recall dx refers domain variable x  throughout paper  often
case instantiation  x  already given   x  superset
si  x   let b instantiation obtained restricting variables
si  x   ease presentation  continue use ei x  a   rather ei x  b   denote
extension b x constraint csi   make presentation easy follow 
three parameters i  a  x may omitted expression hereafter whenever
clear context  example  given instantiation new variable
x  emphasize different extension sets respect different constraints csi   write
ei instead ei x  a  simply denote extension set 
example   consider network variables  x    x    x    x    x    
cs   
cs   
cs   
cs   
d    d 

  a  b  d    a  b  a    s     x    x    x    
  b  a  d    b  a  b    s     x    x    x    
  b  d    b  c   
s     x    x    
  b  a  d    b  a  a    s     x    x    x    
  d     a   d     b   d     a  b  c  d  

let    a  b  a  instantiation variables    x    x    x     relevant constraints
x  cs    cs    cs    cs  relevant since contains x  outside   extension
sets x  respect relevant constraints are 
e   a     d  a   e   a     d  b   e   a     d  c  
intersection extension sets empty  implying extended
satisfy relevant constraints cs    cs  cs   
let    b  c  instantiation  x    x     e  x   a    thus trivial 
words  trivial extension set  instantiation extended satisfy
constraint concern 
relationship k consistency set intersection characterized following lemma 
lemma    set intersection consistency  lifting  constraint network r kconsistent consistent instantiation  k    distinct variables
   x    x            xk     new variable xk  
 
eij   
j   l

eij extension set xk respect csij   csi            csil relevant
constraints 
proof  follows directly definition k consistency section  
definition extension set   
insight behind lemma examine consistency perspective set
intersection 
   

fiset intersection consistency constraint networks

example   consider example    would check whether network  consistent  consider instantiation again  trivial consistent instantiation
since network doesnt constraint among variables   extend x 
need check first three constraints cs  cs    extension feasible
intersection e    e    e  empty  show network   consistent 
exhausting consistent instantiations three variables  conversely  know
network   consistent  immediately say intersection three extension
sets x empty 
usefulness lemma allows consistency information obtained
intersection extension sets  vice versa  point view consistency
set intersection  results set intersection properties  including section   
lifted get various consistency results constraint network following
proof schema 
proof schema
    consistency set  certain level consistency constraint network 
derive information intersection extension sets lemma   
    set set  local intersection information sets  information may
obtained intersection sets 
    set consistency  new information intersection extension sets 
higher level consistency obtained lemma   
    formulate conclusion consistency constraint network    
proof schema  step    consistency set   step    set consistency   step  
straightforward many cases  so  lemma   called lifting lemma
set intersection result  step     easily consistency results network
 step     proof schema establishes direct relationship set intersection
consistency properties constraint network 
following sections  demonstrate set intersection properties
proof schema used obtain new results consistency constraint network 

   global consistency tree convex constraints
notion extension set plays role bridge restrictions set s 
properties special constraints  section  consider constraints arising
tree convex sets  lemma     constraint tree convex extension sets respect
constraint tree convex 
definition   constraint cs tree convex respect xi tree ti di
sets
   es xi   es xi non trivial extension instantiation  xi   
tree convex ti   constraint cs tree convex tree union
domains variables s  tree convex respect every x  
example   tree convex constraints occur relationship among
values variable  consider constraint accessibility set facilities
   

fizhang   yap

set persons  personnel include network engineer  web server engineer  application
engineer  team leader  relationship among staff team leader
manages rest  forms tree structure shown figure   b   different
accessibilities system includes basic access  access network routers  access
web server  access file server  order access routers servers 
one basic access right  implying tree structure  figure   c   access
rights  constraint team leader able access facilities
engineer access corresponding facility  e g   web server engineer access
web server   tree convex constraint shown figure   a  rows
named initials engineers columns initials access rights 
tree union personnel accessibilities obtained respective
trees  in figure   b   c   adding edge  say web server leader  note
constraint figure   a  row convex 

n
w

l

r
 

w

f

 
 

 

 a 

 
 

b
 
 
 
 

leader

network
engineer

web application
engineer engineer routers

 b 

basic access

web
server

file
server

 c 

figure    tree convex constraint accessibilities staffs
example   tree convex constraints used model scene labeling problems
naturally shown zhang freuder        
definition   constraint network tree convex exists tree union
variable domains constraints tree convex  
tree convex constraints generalize row convex constraints introduced van beek
dechter        
definition   constraint cs row convex respect x sets
   es x   es x non trivial extension instantiation  x  
tree convex tree node one child  tree called
total ordering  constraint cs row convex if  total ordering union
involved domains  row convex respect every x s 
example   constraint c example   row convex  b  basic access 
neighbor r  routers   w  web server   f  file server   however  total ordering 
value neighbor two values  hence  c row convex
tree convex 
property set intersection tree convex sets proof schema 
following consistency results tree convex constraints 
   

fiset intersection consistency constraint networks

theorem    tree convexity  let r network constraints arity r
strongly   r        consistent  r tree convex globally consistent 
proof  network strongly   r        consistent assumption  prove
network k consistent k   r          n  
consider instantiation k   variables new variable x  let
number relevant constraints l  relevant constraint  one extension set
x  so  l extension sets  intersection l sets empty 
value x extended instantiation satisfies relevant constraints 
 consistency set  consider two l extension sets  e  e    two
corresponding constraints involve   r     variables since arity constraint
r two constraints x variable  consistency lemma 
r    r         consistent implies intersection e  e  empty 
 set set  since relevant constraints tree convex given tree 
extension sets x tree convex  henceforth  fact every two extension
sets intersect shows intersection l extension sets empty  tree
convex sets intersection lemma 
 set consistency  consistency lemma  r k consistent   
since row convex constraint tree convex  result generalizes consistency result
row convex constraints reported van beek dechter         interesting
observe latter lifted set intersection results convex sets  zhang
  yap        
question raised theorem   efficient check whether constraint
network tree convex  yosiphon        proposed algorithm recognize tree
convex constraint network polynomial time 

   consistency tightness constraints
section  present various consistency results networks m tight
constraints 
    global consistency weakly tight networks
tightness constraints related consistency constraint network
van beek dechter         m tightness constraint characterized
cardinality extension sets following way 
definition    van beek   dechter        constraint csi m tight respect x si
iff instantiation si  x  
 ei x    ei x      dx   
constraint csi m tight iff m tight respect every x si  
given instantiation  extension set respect x domain
variable x  i e    ei x      dx    instantiation supported values x thus
easy satisfiable  hence  definition above  instantiations affect
m tightness constraint 
   

fizhang   yap



x




b

b

c

c

       
       
                    
                    
     
     
   
 
   
   
                                                                                                               
  
             
 
 
   
 
 
 
 
 
       
                   
   
   
                                       
   
   
 
 
 
 
 
    
 
   
   
                               
 
 
 
 
 
 
 
 
   
 
             
               
   
 
 
 
 
 
 
 
 
   
 
 
 
     
  
       
   
    
 
               
   
                
  
 
 
  
    
 
 
   
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
            
   
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
   
   
       
   
   
                         
   
  
   
   
                 
   
   
   
     
   
   
     
 
 
 
 
 
 
 
 
 
 
 
                  
                  

figure    constraint cxy   tight   tight
example   consider constraint cxy figure   dx   dy    a  b  c   edge
graph denotes ends allowed cxy   verified values
x  extension sets cardinality    values y  extension sets
cardinality      hence  cxy said   tight   tight   tight 
specially interested following tightness 
definition   constraint csi properly m tight respect x si iff instantiation si  x  
 ei x   m 
constraint csi properly m tight iff properly m tight respect every x si  
constraint m tight properly m tight  converse might true 
example  constraint x y  x                                          tight
properly   tight  properly    tight since  ex                 
next  define special constraint network allows us make accurate
connection tightness constraints consistency network 
definition   constraint network weakly m tight level k iff every set variables
 x    x            xl   k l   n  new variable x  exists properly m tight constraint
among relevant constraints x respect  x    x            xl   

x 

x 

y 

x 

x 

y 

y 

y 
 b 

 a 

figure    two constraint networks  thin edge represents properly m tight constraint
thick one represents non properly m tight constraint

   

fiset intersection consistency constraint networks

example   network figure   a  weakly tight level   three
variables fourth variable  one relevant constraints properly m tight 
network figure   b  weakly tight level   since  y    y    y    y    none
relevant constraints cy  y  cy  y  properly m tight 
small set intersection corollary  corollary     following consistency
result weakly m tight network 
theorem    weak tightness  constraint network r constraints arity
r strongly   m    r      consistent weakly m tight level   m    r      
globally consistent 
proof  let j    m    r      constraint network r shown k consistent
k  j   k n  
let    x            xk    set k   variables  instantiation
variables   consider additional variable xk   without loss generality  let
relevant constraints cs            csl   ei extension set xk respect
csi l 
 consistency set  consider     l extension sets  corresponding
    constraints contain  m      r        variables including xk   since r
  m    r      consistent  set intersection consistency lemma  intersection
    extension sets empty 
 set set  network weakly m tight level   m      r          so  must
properly m tight constraint among relevant constraints cs            csl   let csi  
know extension set  ei   m  since intersection every     extension
sets empty  l extension sets share common element small set intersection
corollary 
 set consistency  lifting lemma  r k consistent   
similar fashion  main tightness result van beek dechter        
constraints required m tight  lifted small sets intersection
corollary zhang yap         uniform treatment lifting set intersection results
consistency results absent existing works  e g   dechter        van beek  
dechter              david        
tightness result van beek dechter        requires every constraint
m tight  weak tightness theorem  hand  require constraints
properly m tight  following example illustrates difference 
example    weakly m tight network  interested topological structure 
thus omitted domains variables here  consider network five variables
labeled                  network  pair variables three variables 
constraint  assume network already strongly   consistent 
since network already strongly   consistent  simply ignore instantiations
less   variables  introduce level network weakly
m tight  interesting level    table   shows relevant constraints
possible extension four instantiated variables one  first row        
   

fizhang   yap

extension
       
       
       
       
       

     
     
     
     
     

     
     
     
     
     

     
     
     
     
     

relevant constraints
                   
                   
                   
                   
                   

    
    
    
    
    

    
    
    
    
    

  
   
  
  
  

table    relevant constraints extending instantiation four variables new variable

stands extending instantiation variables              variable    entries
second column denote constraint  example      denotes c      constraints
                     suffixed   table  properly m tight  network weakly
m tight level    alternatively  constraints                        suffixed   
properly m tight  network weakly m tight  tightness result van
beek dechter        requires binary ternary constraints m tight 
    making weakly tight networks globally consistent
consider weak tightness theorem previous section  generally  weakly m tight
network might level local consistency required theorem  tempting
enforce level consistency network make globally consistent  however 
procedure may result constraints higher arity 
example    consider network variables  x  x    x    x     let domains x    x    x 
           domain x               constraints variables
take different values  x    x    x    x    x    x    x     x    x     x    x     x    network
strongly path consistent  checking   consistency network  know
instantiation            x    x    x  consistent extended x    enforce   consistency  necessary introduce ternary constraint  x    x    x  make
          longer valid instantiation 
make new network globally consistent  newly introduced constraints
higher arity may turn require higher local consistency accordance theorem   
therefore  difficult predict exact level consistency  variable based  enforce
network make globally consistent 
section  relational consistency used make constraint network globally
consistent 
definition     van beek   dechter        constraint network relationally m consistent
iff given     distinct constraints cs            csm       x
i   si      

consistent instantiation variables  i   si  x    exists extension
x extension consistent relations  network strongly
relationally m consistent relationally j consistent every j m 
   

fiset intersection consistency constraint networks

variables longer concern relational consistency  instead  constraints
basic unit consideration  intuitively  relational m consistency concerns whether
constraints agree every one shared variables  makes sense different
constraints interact exactly shared variables 
relational       consistency called relational arc  path consistency 
respectively 
using relational consistency  able obtain global consistency enforcing local
consistency network 
proposition   weak m tightness level k constraint network preserved
process enforcing relational consistency network 
proof  let r constraint network relational consistency enforcing r 
network consistency enforcing  clearly  r r  set variables 
consider set variables  x    x            xl    k l   n  new variable x  since
r weakly m tight level k  exists properly m tight constraint c among
relevant constraints x respect  x    x            xl    enforcing relational consistency
constraint network tighten constraint  so  proper m tightness c
preserved  hence  r  weakly m tight level k   
main result subsection 
theorem   constraint network weakly m tight level  m      r         r
maximal arity constraints network  globally consistent made
strongly relationally  m      consistent 
proof  proposition    network still weakly m tight  m      r       
enforcing strong relational  m      consistency it  let r  maximal arity
constraints new network consistency enforcing  clearly  r  r  so  network
m tight  m      r         proposition    theorem follows immediately
theorem   section     
implication theorem long certain properly m tight constraints certain combinations variables  network made globally consistent
enforcing relational  m      consistency 
following observation weak m tightness network 
proposition   constraint network weakly m tight level constraint
every two variables network properly m tight 
proof  consider level k  set variables    x    x            xl   k l n  
new variable x
    since constraint two variables properly m tight 
constraint c x   x  x  x properly m tight  therefore  properly m tight
constraint c x   x  among relevant constraints instantiation    
observation shows proper m tightness constraints every two
variables sufficient determine level local consistency needed ensure global
consistency constraint network 
remark  proposition   assumes constraint every two variables 
constraint two variables  universal constraint introduced 
   

fizhang   yap

case  enforce path consistency constraint network make binary
constraints tighter lower level relational consistency needed make network
globally consistent 
    properties weakly tight constraint networks
since weakly m tight constraint network global consistency achieved
local consistency  interesting important investigate conditions network
weakly m tight  although proposition   shows sufficient condition  requires every
binary constraint tight  see example   a   required number
tight constraints constraint network weakly tight reduced 
subsection focused understanding relationship number tight
constraints weak tightness constraint network 
strong relationship among different levels weak tightness network 
proposition   constraint network weakly m tight level k m  weakly
m tight level j   k 
proof  j   k  prove network weakly tight level j  is 
set variables    x            xj   k j   n  new variable x  show
exists m tight relevant constraint x respect   since network weakly
tight k   j  exists m tight relevant constraint x respect subset
  constraint still relevant x respect   thus one look for   
following  present two results sufficient conditions constraint network
weakly m tight 
theorem   given constraint network  v  d  c  number m  every x v  
least n   properly m tight binary constraints it  network weakly
m tight level   
proof  two variables  x  y  third variable z  relevant constraints
z respect  x  y  cxz cyz   know number relevant binary
constraints z respect v n    n   properly m tight means
either cxz cyz must properly m tight   
fact  weak tightness higher level  need fewer constraints m tight
shown following result 
theorem   constraint network  v  d  c  weakly m tight level k every x v  
least n k properly m tight binary constraints it 
proof  set k variables new variable z  show
properly m tight relevant constraint z respect   otherwise  none k
binary constraints z properly m tight  since total number relevant binary
constraints z n    number properly m tight binary constraints z
 n  k  contradicts z involved nk properly m tight binary constraints 
 
   

fiset intersection consistency constraint networks

result reveals constraint network weakly tight level k  could
need n n k        properly m tight binary constraints  contrast result
theorem   binary constraints required properly m tight 
immediate question is  minimum number m tight constraints required
network weakly tight  answered following result weak
tightness level   
theorem   given number m  constraint network weakly m tight level   
needs least
n n       bn  c n         mod   
otherwise
 n     n     
m tight binary ternary constraints 
proof 
given network  weak m tightness level   depends tightness
binary ternary constraints  among weakly m tight  at level    constraint
networks n variables  let r  network minimal set properly m tight
binary ternary constraints 
following exposition  constraint denoted scope  example 
use  u  v  w   u  v  denote ternary constraint c u v w  binary constraint cuv
respectively  constraint non properly m tight properly m tight 
proof consists three steps 
step    preserving weak m tightness r  number properly mtight constraints r    modify  necessary  proper m tightness constraints
r  that  properly weak m tight constraint  u  v  w   none binary
constraints  u  v    v  w    u  w  properly m tight 
modify proper m tightness constraint c r  remove c network
introduce new constraint set variables c desirable proper
m tightness 
claim that  properly m tight constraint  u  v  w   one  u  v  
 v  w    u  w  properly m tight  otherwise  least two properly mtight  means  u  v  w  modified properly m tight  contradicting
minimality number properly m tight constraints r   
assume  u  v  properly m tight  since  u  v  w  properly m tight 
reason  u  v  properly m tight  reason exists another
variable z one  u  z   v  z  properly m tight   u  v  z 
properly m tight  too  see figure    without loss generality  let  u  z  properly mtight  implying constraint  v  z  properly m tight  constraint  z  v  w 
properly m tight  v  z   v  w  properly m tight 
modify constraints  u  v  w   z  v  w  properly m tight
modify constraints  z  v   v  w  properly m tight  modification preserves
number properly m tight constraints r  weak m tightness r   
step    preserving weak m tightness r  number properly m tight
constraints r    next modify  necessary  proper m tightness constraints
r  two properly m tight ternary constraints share variables 
   

fizhang   yap

                    
         
      
      
                                        
    
    
      
     
  
                                  
 
         
                          
        
    
                            
                     
 
    
 
      
                   
  
   
 
      
 
   
        
  
   
   
    
      
   
     
    
 
       
 
 
 
 
                       

z

u

w

v

figure    circle represents properly m tight ternary constraint  u  v  w   edge
two variables indicates binary constraint  tick besides edge means
properly m tight cross means not 

case    two properly m tight constraints  u  v  w   u  v  z  share two variables
 u  v   see figure   a   since  w  u   u  z  properly m tight  in terms step
     w  u  z  properly m tight  since  w  v   v  z  m tight   w  v  z 
m tight 
modify four ternary constraints properly m tight modify four
binary constraints  w  u    u  z    z  v   v  w  properly m tight  preserves
weak m tightness r  number properly m tight constraints r   

w
v

u

x

z

z

v
w

w

v

u

u

v

u

w

x





 b 

 a 

figure    dotted ellipse together three variables inside represents ternary
constraint   a  left  two ternary constraints share two variables  u  v   right 
ternary constraints properly m tight   b  left  two ternary
constraints share one variable w  right  ternary constraints
properly m tight 
case    two properly m tight constraints  u  v  w    w  x  y  share one variable
w  since  u  w   w  x  properly m tight   u  w  x  properly m tight 
since  v  w   w  y  properly m tight   v  w  y  properly m tight 
similarly   u  w  y   v  w  x  properly m tight  now  modify four
binary constraints  u  w    w  x    v  w    w  y  properly m tight six
ternary constraints non properly m tight  new network still weakly m tight
fewer m tight constraints  contradicts minimality number properly
m tight constraints r    hence  case   possible 
step    result first two steps  network r    scopes properly
m tight ternary constraints disjoint  binary constraint two variables
properly m tight ternary constraint properly m tight 
   

fiset intersection consistency constraint networks

let b  and respectively  set properly m tight binary  and ternary
respectively  constraints r   
assume  t     k  since difficult count b  count maximum number
non properly m tight binary constraints r     k non properly m tight binary
constraints due   non properly m tight binary constraints
variable variable outside   let v   variables outside  
 v       n  k  non properly m tight constraints fall variables
v     since r  weakly tight level    two non properly m tight constraints
variable v     hence   n  k    non properly m tight constraints
n  k even  otherwise  n  k      ones  number  denoted  
properly m tight constraints r  would sum cardinality b 
  k    n n       k b n  k   c    n n       k b n  k   c 
fact minimal implies k maximized  n multiple   
number properly m tight constraints n n       n    n   multiple
   number n n        n       otherwise number  n     n        
result shows concept k consistency still need significant
number constraints properly m tight predict global consistency network
terms constraint tightness 
    dually adaptive consistency
main purpose characterization weak m tightness network help identify
consistency condition solution network found without backtracking  i e   efficiently  studied constraint tightness concept k consistency
previous subsections  subsection  introduce dually adaptive consistency
achieve backtrack free search taking account tightness constraints
topological structure network 
idea adaptive consistency  dechter   pearl        enforce necessary
level consistency part network ensure global consistency  assumes
ordering variables  variable x  requires consistent instantiation
relevant variables x consistently extensible x  variables
play direct role x thus ignored dealing x 
first introduce notations used adaptive consistency 
width variable respect variable ordering number constraints
involving x variables x  see figure   example 
given network  variable ordering  variable x  directionally relevant constraints x involving x variables x  following  dr x 
used denote directionally relevant constraints x  used denote variables
occurring constraints dr x  
constraints dr x  consistent x if  consistent instantiation  x   exists u dx  a  u  satisfies constraints
dr x  
next define adaptive consistency network 

   

fizhang   yap

x

 
                 
     
    
   
     
   
   
 
 
 
   
  
   
   
             
 
   
         
 
        
   
  
        
 
       
       
 
       
    
    
   
                 
   
 
   
   
 
   
     
     
      

x
x
x

x 

figure    variables  x    x            x    ordered according subscripts  example  x  x    width x    

definition    given constraint network ordering variables  network
adaptively consistent variable x  directionally relevant constraints
consistent x 
adaptive consistency presented algorithm dechter        although 
purpose paper  prefer declarative characterization 
adaptively consistent network  solution found without backtracking 
proposition   given constraint network ordering variables  backtrack
free search ensured network adaptively consistent 
proof  assume found consistent instantiation first k variables  in terms
given ordering   consistently extended xk   directionally
relevant constraints xk   consistent xk      
network adaptively consistent  algorithm dechter        p      
used enforce adaptive consistency it 
adaptive consistency accurate estimating local consistency
ensures global consistency  makes intuitive algorithms enforce consistency
find solution 
knowledge constraint tightness presented previous subsections 
know network adaptively consistent  sufficient make sure
some  all  directionally relevant constraints variable consistent 
position define dually adaptive consistency constraint network 
definition    consider constraint network ordering variables 
variable x network  let cx one tightest directionally relevant constraints
x cx properly mx  tight  network dually adaptively consistent
   variable x whose width greater mx   directionally relevant
constraints consistent it 
   variable x whose width greater mx   cx consistent every
mx directionally relevant constraints x 
thanks set intersection result lemma    main result dually
adaptive consistency 
   

fiset intersection consistency constraint networks

theorem   given constraint network ordering variables  backtrack free
search ensured dually adaptively consistent 
proof  need prove network adaptively consistent 
variable x  directionally relevant constraints dr x  consistent x  let
variables involved dr x   consider consistent instantiation  x   show
exists u dx  a  u  satisfies constraints dr x   let l number
constraints dr x   let cx one tightest constraint dr x  proper
tightness mx   constraint ci dr x   let extension set x ci ei  
sufficient show
c dr x  ei     


know cx consistent every mx constraints  hence  ex   extension set
cx   intersects every mx extension sets a  lemma   implies
c dr x  ei     


 
theorem  need tightest directionally relevant constraint
variable  totally n   constraints  predict global consistency network 
could considered significant improvement results previous two
subsections 
compared result dechter pearl         theorem provides
lower level  the smaller tightness width  consistency ensuring global consistency 
constraint network dually adaptively consistent respect variable
ordering  made enforcing required consistency variable 
reverse order given variable ordering  make procedure efficient 
chose better variable ordering  depending topological structure
network tightness constraints 

   tightness convexity revisited
consistency results derived small set intersection tree convex set intersection
section   section     rephrased relational consistency setting 
example  new version weak tightness based relational consistency given follows 
theorem    weak tightness  constraint network r constraints arity
r strongly relationally  m      consistent weakly m tight level  m      r
        globally consistent 
proof  let j    m      r         constraint network r shown
k consistent k  j   k n  
let    x            xk    set k   variables  consistent instantiation
variables   consider new variable xk   without loss generality  let cs            csl
relevant constraints xk   ei extension set xk respect csi
l 

   

fizhang   yap

 consistency set  consider     l extension sets  since r relationally
 m      consistent  intersection     extension sets empty 
 set set  network weakly m tight  so  must properly m tight
constraint relevant constraints cs            csl   let csi   extension set  ei   m 
since every     extension sets non empty intersection  l extension sets
share common element small set intersection result  corollary    
 set consistency  lifting lemma  r k consistent   
compared weak tightness theorem section      exposition result
neater proof simpler 
completeness  include new version tree convex theorem using
relational consistency  proof omitted since simplified version one
section   hinted proof above 
theorem    tree convexity  let r tree convex constraint network  r globally
consistent strongly relationally path consistent 

   conclusion
lifting lemma proof schema  shown set intersection results
easily lifted consistency results constraint network  advantages
approach studying consistency 
firstly  although approach offer completely new way prove consistency results  provide uniform way understand many seemingly different results
impact convexity tightness global consistency  addition results
shown here  results obtained easily lifting lemma proof
schema  example  work david        obtained lifting corollary
lemma    zhang   yap         work sam haroud faltings        convex
constraint networks continuous domains lifted hellys theorem  eckhoff 
      intersection convex sets euclidean spaces 
secondly  establishment relationship set intersection consistency
constraint network makes easier communicate consistency results researchers outside constraint network community  made possible
contribute consistency results exploiting knowledge set intersection properties 
importantly  approach singles fact set intersection properties play
fundamental role determining consistency constraint network  perspective
helps us focus properties set intersection discover generalize intersection
properties tree convex sets sets cardinality restrictions  corresponding
consistency results extended understanding convexity tightness constraints since dechter van beeks work               identify new class tree
convex constraints global consistency ensured certain level local consistency  generalizes row convex constraints van beek dechter        
show weakly m tight constraint network made globally consistent enforcing
local consistency  type result tightness new  detailed study carried
constraint network weakly m tight  make full use tightness
constraints  propose dually adaptive consistency exploits topology
   

fiset intersection consistency constraint networks

semantics constraint network  results relation set
intersection consistency  dually adaptive consistency  topology network
tightest relevant constraint variable determine local consistency
ensures backtrack free search 

acknowledgments
indebted dr  peter van beek dr  fengming dong helpful discussions 
constructive comments anonymous referees various versions paper
improved quality  material based works partially supported grant
academic research fund national university singapore science
foundation ireland grant    pi   c     materials paper appeared
proceedings international joint conference artificial intelligence       zhang
  yap        proceedings principles practice constraint programming
      zhang        

references
david  p          functional bijective constraints make csp polynomial 
proceedings thirteenth international joint conference artificial intelligence 
vol     pp         chambery  france  ijcai  inc 
dechter  r          local global consistency  artificial intelligence            
dechter  r          constraint processing  morgan kaufmann  san francisco  ca 
dechter  r     pearl  j          network based heuristics constraint satisfaction problems  artificial intelligence          
eckhoff  j          helly  radon  caratheodory type theorems  gruber  p  m  
  wills  j  m   eds    handbook convex geometry  pp          north holland 
amsterdam 
freuder  e          synthesizing constraint expressions  communications acm          
       
freuder  e          sufficient condition backtrack free search  journal acm 
             
jeavons  p  g   cohen  d  a     gyssens  m          closure properties constraints 
journal acm                 
mackworth  a  k          consistency networks relations  artificial intelligence        
       
montanari  u          networks constraints  fundamental properties applications 
information science               
sam haroud  d     faltings  b  v          solving non binary convex csps continous
domains  proceedings international conference principles practice
constraint programming       pp         cambridge  massachusetts  springer 

   

fizhang   yap

schaefer  t  j          complexity satisfiability problems  proceedings   th
acm symposium theory computing  pp         
van beek  p     dechter  r          minimality global consistency row convex
constraint networks  journal acm                 
van beek  p     dechter  r          constraint tightness looseness versus local
global consistency  journal acm                 
yosiphon  g          efficient algorithm identifying tree convex constraints  manuscript 
zhang  y          tightness constraints  proceedings principles practice
constraint programming       pp         toronto  canada  springer 
zhang  y     freuder  e  c          tractable tree convex constraints  proceedings
national conference artificial intelligence       pp         san jose  ca  usa 
aaai press 
zhang  y     yap  r  h  c          consistency set intersection  proceedings
international joint conference artificial intelligence       pp         acapulco 
mexico  ijcai inc 

   


