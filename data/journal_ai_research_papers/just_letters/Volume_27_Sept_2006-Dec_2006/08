journal artificial intelligence research                  

submitted        published      

uncertainty soft temporal constraint problems  general
framework controllability algorithms fuzzy case
francesca rossi
kristen brent venable

frossi   math   unipd  
kvenable   math   unipd  

university padova  department pure applied mathematics 
via trieste           padova italy

neil yorke smith

nysmith   ai   sri   com

sri international 
    ravenswood ave  menlo park  ca       usa

abstract
real life temporal scenarios  uncertainty preferences often essential coexisting
aspects  present formalism quantitative temporal constraints preferences
uncertainty defined  show three classical notions controllability  that is  strong 
weak  dynamic   developed uncertain temporal problems  generalized handle preferences well  defining general framework  focus problems
preferences follow fuzzy approach  properties assure tractability 
problems  propose algorithms check presence controllability properties  particular  show setting dealing simultaneously preferences uncertainty
increase complexity controllability testing  develop dynamic execution algorithm 
polynomial complexity  produces temporal plans uncertainty optimal
respect fuzzy preferences 

   introduction
current research temporal constraint reasoning  exposed difficulties real life problems  found lacking expressiveness flexibility  rich application domains
often necessary simultaneously handle temporal constraints  preferences
uncertainty 
need seen many scheduling domains  motivation line research
described paper domain planning scheduling nasa space missions  nasa
tackled many scheduling problems temporal constraints used reasonable success  showing limitations lack capability deal uncertainty
preferences  example  remote agent  rajan  bernard  dorais  gamble  kanefsky  kurien 
millar  muscettola  nayak  rouquette  smith  taylor    tung        muscettola  morris  pell   
smith        experiments  consisted placing ai system on board plan execute
spacecraft activities  represents one interesting examples this  remote agent worked
high level goals specified  example  duration frequency time windows
within spacecraft take asteroid images used orbit determination
on board navigator  remote agent dealt flexible time intervals uncontrollable events 
however  deal preferences  temporal constraints hard  benefit
adding preferences framework would allow planner handle uncontrollable events
time maximizing mission managers preferences 
c
    
ai access foundation  rights reserved 

firossi   v enable    yorke  s mith

recent nasa application rovers domain  dearden  meuleau  ramakrishnan 
smith    washington        bresina  jonsson  morris    rajan         nasa interested
generation optimal plans rovers designed explore planetary surface  e g  spirit
opportunity mars   bresina et al          dearden et al         describe problem generating plans planetary rovers handle uncertainty time resources  approach
involves first constructing seed plan  incrementally adding contingent branches
plan order improve utility  again  preferences could used embed utilities directly
temporal model 
third space application  used several times paper running example 
concerns planning fleets earth observing satellites  eos   frank  jonsson  morris    smith 
       planning problem involves multiple satellites  hundreds requests  constraints
serve request  resources instruments  recording devices  transmitters
ground stations  response requests placed scientists  image data acquired eos 
data either downlinked real time recorded board playback later time 
ground stations satellites available receive downlinked images  different satellites
may able communicate subset resources  transmission rates differ
satellite satellite station station  further  may different financial costs
associated using different communication resources   frank et al         eos scheduling problem dealt using constraint based interval representation  candidate plans
represented variables constraints  reflect temporal relationship actions
constraints parameters states actions  also  temporal constraints necessary
model duration ordering constraints associated data collection  recording  downlinking tasks  solutions preferred based objectives  such maximizing number high
priority requests served  maximizing expected quality observations  minimizing
cost downlink operations   uncertainty present due weather  specifically due duration
persistence cloud cover  since image quality obviously affected amount clouds
target  addition  events need observed may happen unpredictable
times uncertain durations  e g  fires volcanic eruptions  
existing frameworks  simple temporal problems preferences  stpps   khatib 
morris  morris    rossi         address lack expressiveness hard temporal constraints
adding preferences temporal framework  take account uncertainty  models  simple temporal problems uncertainty  stpus   vidal   fargier         account
contingent events  notion preferences  paper introduce framework
allows us handle preferences uncertainty simple temporal problems 
proposed model  called simple temporal problems preferences uncertainty  stppus  
merges two pre existing models stpps stpus 
stppu instance represents quantitative temporal problem preferences uncertainty
via set variables  representing starting ending times events  which controllable
agent not   set soft temporal constraints variables  includes interval containing allowed durations event allowed times events 
preference function associating element interval value specifies much
value preferred  soft constraints defined controllable uncontrollable
events  order clarify modeled stppu  let us emphasize graduality
allowed terms preferences uncertainty  sense  uncertainty represented contingent stppu constraints contingent stpu constraints 
   

fiu ncertainty

soft temporal constraint problems

durations assumed equally possible  addition expressing uncertainty  stppus  contingent constraints soft different preference levels associated different durations
contingent events 
problems  consider notions controllability similar defined stpus 
used instead consistency presence uncertainty  adapt
handle preferences  notions  usually called strong  weak  dynamic controllability  refer
possibility controlling problem  is  executing agent assigning values
controllable variables  way optimal respect nature decided 
decide  uncontrollable variables  word optimal crucial  since stpus 
preferences  need care controllability  optimality  fact 
notions define paper directly correspond stpus called strong  weak 
dynamic optimal controllability 
defining controllability notions proving properties  consider
restrictions shown make temporal problems preferences tractable
 khatib et al         rossi  sperduti  venable  khatib  morris    morris         i e  semi convex
preference functions totally ordered preferences combined idempotent operator 
context  controllability notions  give algorithms check whether
hold  show adding preferences make complexity testing
properties worse case without preferences  moreover  dealing different levels
preferences  define testing algorithms refer possibility controlling problem
maintaining preference least certain level  called  controllability   finally 
context dynamic controllability  consider execution dynamic optimal plans 
parts content paper appeared  venable   yorke smith        rossi  venable    yorke smith        yorke smith  venable    rossi        rossi  venable    yorke smith 
       paper extends previous work least two directions  first  papers optimal controllability  strong dynamic  checked separately  check
optimal  strong dynamic  controllability and  hold  algorithm return
highest given problem  strong  dynamic controllable  moreover  results
presented uniform technical environment  providing thorough theoretical study properties algorithms computational aspects  makes use several unpublished
proofs 
paper structured follows  section   give background temporal constraints
preference uncertainty  section   define formalism simple temporal
problems preferences uncertainty and  section    describe new notions
controllability  algorithms test notions described respectively section   optimal
strong controllability  section   optimal weak controllability  section   optimal
dynamic controllability  section   give general strategy using notions  finally  section    discuss related work  section    summarize main results
point directions future developments  make paper readable  proofs
theorems contained appendix 

   background
section give main notions temporal constraints  dechter  meiri    pearl       
framework temporal constraint satisfaction problems preferences  tcspps   khatib

   

firossi   v enable    yorke  s mith

et al         rossi et al          extend quantitative temporal constraints  dechter et al        
semiring based preferences  bistarelli  montanari    rossi         describe simple
temporal problems uncertainty  stpus   vidal   fargier        morris  muscettola    vidal 
       extend tractable subclass temporal constraints model agent uncontrollable
contingent events  define corresponding notions controllability  introduced  vidal
  fargier        
    temporal constraint satisfaction problems
one requirements temporal reasoning system planning scheduling problems
ability deal metric information  words  handle quantitative information
duration events  such take ten twenty minutes get home   quantitative
temporal networks provide convenient formalism deal information  consider
instantaneous events variables problem  whose domains entire timeline 
variable may represent either beginning ending point event  neutral point
time  effective representation quantitative temporal networks  based constraints  within
framework temporal constraint satisfaction problems  tcsps   dechter et al         
paper interested particular subclass tcsps  known simple temporal
problems  stps   dechter et al          problem  constraint time points x
xj represented constraint graph edge x xj   labeled single interval  aij   bij  
represents constraint aij xj xi bij   solving stp means finding assignment
values variables temporal constraints satisfied 
whereas complexity general tcsp comes one interval
constraint  stps solved polynomial time  despite restriction single interval per
constraint  stps shown valuable many practical applications  stps
attracted attention literature 
stp associated directed weighted graph g    v  ed    called distance
graph  set nodes constraint graph twice number edges 
binary constraint variables x xj   distance graph edge xi xj
labeled weight bij   representing linear inequality x j xi bij   well edge xj xi
labeled weight aij   representing linear inequality x xj aij  
path xi xj distance graph gd   say variables xi    xi   xi    xi         
p
  xik   xj induces following path constraint  x j xi kh   bih  ih   intersection
induced path constraints yields inequality x j xi dij   dij length shortest
path xi xj   length defined  i e  negative cycles distance
graph  stp consistent distance graph negative cycles  shostak       
leiserson   saxe         means enforcing path consistency  algorithm
pc    sufficient solving stps  dechter et al          follows given stp effectively specified another complete directed graph  called d graph  edge xi xj
labeled shortest path length ij distance graph gd  
 dechter et al         shown consistent stp backtrack free  that is  decomposable  relative constraints d graph  moreover  set temporal constraints
form  dji   dij   minimal stp corresponding original stp possible find one
solutions using backtrack free search simply assigns variable value
satisfies minimal network constraints compatibly previous assignments  two specific solu 

   

fiu ncertainty

soft temporal constraint problems

tions  usually called latest earliest assignments  given l    d             d n  
se    d             dn     assign variable respectively latest earliest possible time
 dechter et al         
d graph  and thus minimal network  stp found applying floydwarshalls pairs shortest path algorithm  floyd        distance graph complexity
o n    n number variables  graph sparse  bellman ford single source
shortest path algorithm used instead  complexity equal o ne   e
number edges  refer  dechter et al         xu   choueiry        details
efficient stp solving 
    temporal csps preferences
although expressive  tcsps model hard temporal constraints  means constraints
satisfied  solutions constraint equally satisfying  however 
many real life situations solutions preferred others and  thus  global problem
find way satisfy constraints optimally  according preferences specified 
address need  tcsp framework generalized  khatib et al        
associate temporal constraint preference function specifies preference
distance allowed constraint  framework merges tcsps semiring based soft
constraints  bistarelli et al         
definition    soft temporal constraint  soft temporal constraint   tuple h x     i  a  f
consisting
set two variables  x    integers  called scope constraint 
set disjoint intervals     a    b              an   bn     ai   bi z  ai bi
             n 
set preferences a 
preference function f   a  mapping elements preference
values  taken set a 
given assignment variables x   x   v x   vy   say assignment
satisfies constraint h x     i  a  f iff exists  a   bi   ai vy vx bi  
case  preference associated assignment constraint f  v vx     p  
variables preference set stpp apparent  omit write
soft temporal constraint pair hi  f i 
following soft constraint approach  bistarelli et al          preference set carrier
algebraic structure known c semiring  informally c semiring   ha           i
set equipped two operators satisfying proscribed properties  for details  see bistarelli
et al           additive operator   used induce ordering preference set a  given
two elements a  b a  b iff   b   a  multiplicative operator used combine
preferences 

   

firossi   v enable    yorke  s mith

definition    tcspp  given semiring   ha           i  temporal constraint satisfaction
problems preferences  tcspp  pair hv  ci  v set variables c
set soft temporal constraint pairs variables v preferences a  
definition    solution  given tcspp hv  ci semiring s  solution complete assignment variables v   solution said satisfy constraint c c preference p
projection pair variables cs scope satisfies c preference p  write
pref  t  c    p  
solution global preference value  obtained combining  via operator 
preference levels solution satisfies constraints c 
definition    preference solution  given tcspp hv  ci semiring s  preference
solution   hv            vn i  denoted val t   computed cc pref  s  c   
optimal solutions tcspp solutions best global preference
value  best determined ordering values semiring 
definition    optimal solutions  given tcspp p   hv  ci semiring s  solution
p optimal every solution   p   t   s t  
choosing specific semiring means selecting class preferences  example  semiring
sf csp   h        max  min      i
allows one model so called fuzzy preferences  ruttkay        schiex         associate
element allowed constraint preference      with   worst
  best preferences   gives complete assignment minimal among preferences selected constraints  optimal solutions solutions maximal
preference  another example semiring csp   h f alse  true       f alse  truei 
allows one model classical tcsps  without preferences  general tcspp framework 
paper refer fuzzy temporal constraints  however  absence preferences
temporal constraints always modelled using two elements    
constraints  thus preferences always coexists hard constraints 
special case occurs constraint tcspp contains single interval  analogy
done case without preferences  problems called simple temporal problems
preferences  stpps   class temporal problems interesting because  noted above 
stps polynomially solvable general tcsps np hard  computational effect
adding preferences stps immediately obvious 
example   consider eos example given section    figure   show stpp
models scenario three events scheduled satellite  start time  ss 
ending time  se  slewing procedure starting time  is  image retrieval 
slewing activity example take      units time  ideally     units
time  shortest time possible otherwise  image taking start time  
   units time slewing initiated  third constraint  variables se 
models fact better image taking start soon slewing stopped  
   

fiu ncertainty

soft temporal constraint problems

    
   

   
   
   
   

         

      

ss

se

 

     
   

   
   

   

   

   

   

   
 

  


       

       

 

 

 

figure    stpp example   
following example  instead  consider stpp uses set based semiring 
sset   h a         ai  notice that  fuzzy semiring  multiplicative operator  i e  
intersection  idempotent  order induced additive operator  i e   union  partial 
example   consider scenario three friends  alice  bob  carol  want meet drink
dinner must decide time meet reserve dinner depending
long takes get restaurant  variables involved problem are  global
start time x    value   domain  start time drink  ds   time
leave dinner  de   time arrival restaurant  rs   meet  drink 
      pm leave dinner half hour  moreover  depending
restaurant choose  take       minutes get dinner  alice prefers
meet early dinner early  carol  bob prefers meet      go best
restaurant farthest  thus  following two soft temporal constraints  first
constraint defined variable pair  x    ds   interval             preference
function  fs   that  fs             alice  carol   fs             bob  fs             
second constraint binary constraint pair  de rs   interval          preference
function fse   that  fse         alice  carol  fse        fse         bob  
additional hard constraint variable pair  ds  de   modeled
interval          single preference equal  alice  carol  bob   optimal solution
 x       ds           de           rs            preference  alice  carol    
although tcspps stpps np hard   khatib et al         tractable subclass
stpps described  tractability assumptions are  semi convexity preference functions 
idempotence combination operator semiring  totally ordered preference set 
preference function f soft temporal constraint hi  f semi convex iff       set
 x i  f  x  y  forms interval  notice semi convex functions include linear  convex 
step functions  aggregation operator totally ordered set idempotent
min  dubois   prade         i e  combination operator f csp semiring 
tractability assumptions met  stpps solved polynomial time   rossi
et al         two polynomial solvers tractable subclass stpps proposed  one solver

   

firossi   v enable    yorke  s mith

based extension path consistency tcspps  second solver decomposes problem
solving set hard stps 
    simple temporal problems uncertainty
reasoning concerns activities agent performs interacting external world  uncertainty often unavoidable  tcsps assume activities durations control
agent  simple temporal problems uncertainty  stpus   vidal   fargier        extend
stps distinguishing contingent events  whose occurrence controlled exogenous factors
often referred nature 
stps  activity durations stpus modelled intervals  start times activities assumed controlled agent  this brings loss generality   end times 
however  fall two classes  requirement  free vidal   fargier        contingent 
former  stps  decided agent  agent control latter 
observe occurrence event  observation supposed known immediately
event  information known prior observation time point nature respect
interval duration  durations contingent links assumed independent 
stpu  variables thus divided two sets depending type time points
represent 
definition    variables  variables stpu divided into 
executable time points  points  b   whose time assigned executing agent 
contingent time points  points  e   whose time assigned external world  
distinction variables leads constraints divided two sets  requirement contingent  depending type variables constrain  note stps
constraints binary  formally 
definition   constraints stpu divided into 
requirement constraint  or link  r ij   generic time points ti tj     interval iij  
 lij   uij   lij  tj    ti   uij  ti   value assigned variable ti
contingent link ghk   executable point bh contingent point ek   interval ihk  
 lij   uij   contains possible durations contingent event represented b h
ek   
formal definition stpu following 
definition    stpu  simple temporal problem uncertainty  stpu    tuple n  
 xe   xc   rr   rc   that 
xe    b            bne    set executable time points 
xc    e            enc    set contingent time points 
   general ti tj either contingent executable time points 

   

fiu ncertainty

start
cooking

soft temporal constraint problems

       
end
cooking

      

requirement constr 

       

contingent constr 

start
dinner

contingent timepoint

end
dinner

executable timepoint

figure    stpu example   
rr    ci  j            cic jc    set c requirement constraints 
rc    gi  j            gig jg    set g contingent constraints  
example   example taken  vidal   fargier         describes scenario
modeled using stpu  consider two activities cooking dinner  assume
dont want eat dinner cold  also  assume control start cooking
dinner starts finish cooking dinner over 
stpu modeling example depicted figure    two executable time points  startcooking  start dinner  two contingent time points  end cooking  end dinner   moreover 
contingent constraint variables  start cooking  end cooking  models uncontrollable duration
fixing dinner take anywhere       minutes  contingent constraint
variables  start dinner  end dinner  models uncontrollable duration dinner last
      minutes  finally  requirement constraint variables  end cooking  startdinner  simply bounds    minutes time food ready
dinner starts  
assignments executable variables assignments contingent variables distinguished 
definition    control sequence  control sequence assignment executable time points 
said partial assigns values proper subset executables  otherwise complete  
definition     situation  situation set durations contingent constraints 
contingent constraints assigned duration said partial  otherwise complete  
definition     schedule  schedule complete assignment time points x e xc  
schedule identifies control sequence    consisting assignments executable
time points  situation    set durations identified assignments
contingent constraints  sol p   denotes set schedules stpu  
easy see situation corresponds stp  fact  durations
contingent constraints fixed  uncertainty problem  becomes
stp  called underlying stp  formalized notion projection 
definition     projection  projection p   corresponding situation   stp obtained
leaving requirement constraints unchanged replacing contingent constraint g hk

   

firossi   v enable    yorke  s mith

constraint h hk   hk  i  hk duration event represented g hk   p roj p  
set projections stpu p   
    controllability
clear order solve problem uncertainty possible situations must considered 
notion consistency defined stps apply since requires existence single
schedule  sufficient case since situations equally possible  
reason   vidal   fargier         notion controllability introduced  controllability
stpu is  sense  analogue consistency stp  controllable means agent
means execute time points control  subject constraints  notion
controllability expressed  terms ability agent find  given situation 
appropriate control sequence  ability identified strategy 
definition     strategy  strategy map   p roj p   sol p    every projection p   s p   schedule induces durations contingent constraints 
further  strategy viable if  every projection p   s p   solution p   
write  s p   x indicate value assigned executable time point x schedule
s p     s p    x history x s p    is  set durations contingent constraints occurred s p   execution x  i e  partial solution far 
 vidal   fargier         three notions controllability introduced stpus 
      trong c ontrollability
first notion is  name suggests  restrictive terms requirements
control sequence must satisfy 
definition     strong controllability  stpu p strongly controllable  sc  iff
execution strategy s t  p p roj p    s p   solution p    s p    x    s p    x  
p    p  projections every executable time point x  
words  stpu strongly controllable fixed execution strategy works
situations  means fixed control sequence consistent possible
scenario world  thus  notion strong controllability related conformant
planning  clearly strong requirement  vidal fargier        suggest  sc may
relevant applications situation observable complete
control sequence must known beforehand  for example cases activities depend
control sequence  production planning area  
 vidal   fargier        polynomial time algorithm checking stpu strongly
controllable proposed  main idea rewrite stpu given input equivalent stp
executable variables  important notice  contents paper 
algorithm stronglycontrollable takes input stpu p    x e   xc   rr   rc   returns
output stp defined variables xe   stpu input strongly controllable iff derived
stp consistent  moreover  every solution stp control sequence guarantees
   tsamardinos        augmented stpus include probability distributions possible situations 
paper implicitly assume uniform  independent distribution link 

   

fiu ncertainty

soft temporal constraint problems

strong controllability stpu  stp consistent  output stronglycontrollable
minimal form 
 vidal   fargier        shown complexity stronglycontrollable o n     
n number variables 
      w eak c ontrollability
hand  notion controllability fewest restrictions control sequences
weak controllability 
definition     weak controllability  stpu p said weakly controllable  wc  iff
p p roj p   strategy s t   p   solution p   
words  stpu weakly controllable viable global execution strategy 
exists least one schedule every situation  seen minimum requirement since 
property hold  situations way execute
controllable events consistent way  looks attractive since  stpu shown
wc  soon one knows situation  one pick apply control sequence
matches situation  unfortunately  vidal   fargier        shown property
useful classical planning  nonetheless  wc may relevant specific applications  as largescale warehouse scheduling  actual situation totally observable  possibly
before  execution starts  one wants know advance that  whatever situation 
always least one feasible control sequence 
 vidal   fargier        conjectured  morris   muscettola        proven
complexity checking weak controllability co np hard  algorithm proposed
testing wc  vidal   fargier        based classical enumerative process lookahead
technique 
strong controllability implies weak controllability  vidal   fargier         moreover 
stpu seen stp uncertainty ignored  enforcing path consistency removes
elements contingent intervals  elements belong solution  so 
possible conclude stpu weakly controllable 
definition     pseudo controllability  stpu pseudo controllable applying path consistency leaves intervals contingent constraints unchanged  
unfortunately  path consistency leaves contingent intervals untouched  cannot conclude stpu weakly controllable  is  wc implies pseudo controllability
converse false  fact  weak controllability requires given possible combination durations contingent constraints stp corresponding projection must consistent 
pseudo controllability  instead  guarantees possible duration contingent constraint least one projection contains duration consistent stp 
      dynamic c ontrollability
dynamic applications domains  planning  situation observed time  thus
decisions made even situation remains partially unknown  indeed distinction
strong dynamic controllability equivalent conformant conditional planning  final notion controllability defined  vidal   fargier        address
   

firossi   v enable    yorke  s mith

pseudocode dynamicallycontrollable
   input stpu w 
   w pseudo controllable write dc stop 
   select triangles abc  c uncontrollable  c 
upper bound bc interval  v  non negative 
   introduce tightenings required precede case
waits required unordered case 
   possible regressions waits 
converting unconditional waits lower bounds 
introduce lower bounds provided general reduction 
   steps     produce new  or tighter 
constraints  return true  otherwise go   
figure    algorithm dynamicallycontrollable proposed  morris et al         checking dc
stpu 
 x y 



c

requirement constr 
contingent constr 
contingent timepoint

 p q 

 u v 

executable timepoint

b

figure    triangular stpu 
case  give definition provided  morris et al         equivalent
compact 
definition     dynamic controllability  stpu p dynamically controllable  dc  iff
strategy p    p  p roj p   executable time point x 
    s p     x    s p     x  s p    x    s p    x  
   s p    solution p  s p    solution p    
words  stpu dynamically controllable exists viable strategy built 
step by step  depending observed events step  sc   dc dc  
wc  dynamic controllability  seen useful controllability notion practice 
one requires complicated algorithm  surprisingly  morris et al         morris
muscettola        proved dc polynomial size stpu representation  figure  
pseudocode algorithm dynamicallycontrollable shown 
paper extend notion dynamic controllability order deal preferences  algorithm propose test extended property require good  even
complete  understanding dynamicallycontrollable algorithm  thus  give
necessary details algorithm 
   

fiu ncertainty

soft temporal constraint problems

seen  algorithm based considerations triangles constraints 
triangle shown figure   triangular stpu one contingent constraint  ac  two executable
time points  b  contingent time point c  based sign u v  three different
cases occur 
follow case  v       b always follow c  stpu path consistent dc
since  given time c occurs a  definition path consistency  always
possible find consistent value b 
precede case  u     b always precede happen simultaneously c 
stpu dynamically controllable v x u  interval  p  q  ab
replaced interval  y v  x u   sub interval containing elements
 p  q  consistent element  x  y  
unordered case  u     v     b either follow precede c  ensure dynamic
controllability  b must wait either c occur first    v units time go
a  words  either c occurs b executed first value consistent
cs time  b safely executed units time execution  described
additional constraint expressed wait ab written   c    
  v  course x v raise lower bound ab  p  v
 unconditional unordered reduction   case raise x x   p  general
unordered reduction   
shown waits propagated  in morris et al         term regressedis used
  one constraint another  wait ab induces wait another constraint involving a 
e g  ad  depending type constraint db  particular  two possible ways
waits regressed 
regression    assume ab constraint wait hc  ti  then  db
constraint  including ab itself  upper bound  w  possible deduce wait hc 
wi ad  figure   a  shows type regression 
regression    assume ab constraint wait hc  ti     then 
contingent constraint db lower bound  z  b    c  possible
deduce wait hc  zi ad  figure   b  shows type regression 
assume simplicity without loss generality executed time    then  b
executed wait c executed first  wait expires  b safely
executed time left interval  figure   shows  possible consider follow
precede cases special cases unordered  follow case put dummy wait
end interval  meaning b must wait c executed case  figure  
 a    precede case  set wait expires first element interval meaning
b executed c element interval consistent c  figure  
 b    unordered case thus seen combination two previous states  part
interval wait seen follow case  in fact  b must wait c wait
expires   second part including following wait seen precede case  after
wait expired  b executed assignment b corresponds element
part interval ab consistent possible future value assigned c  
   

firossi   v enable    yorke  s mith

 x y 


 x y 
c

contingent

 c t 

 c tw 

c



 u v 

contingent

 c t 

 c tz 

 p q 



 u v 

 p q 

b

b



 z w 

 z w 

requirement constr 
contingent constr 
controllable timepoint

requirement constr 
contingent constr 
controllable timepoint

contingent timepoint

contingent timepoint

 a  regression  

 b  regression  

figure    regressions algorithm dynamicallycontrollable 

follow case

wait c executed
wait

execute regardless c

precede case

wait

unordered case

wait fo c executed

execute regardless c

wait

figure    resulting ab interval constraint three cases considered
dynamicallycontrollable algorithm 

dynamicallycontrollable algorithm applies rules triangles stpu
regresses possible waits  inconsistency found  requirement interval becomes
empty contingent interval squeezed  stpu dc algorithm returns stpu
constraints may waits satisfy  intervals contain elements appear
least one possible dynamic strategy  stpu given execution algorithm
dynamically assigns values executables according current situation 
pseudocode execution algorithm  dc execute  shown figure    execution
algorithm observes  time goes by  occurrence contingent events accordingly
executes controllables  controllable b  execution triggered     live 
   

fiu ncertainty

soft temporal constraint problems

pseudocode dc execute
   input stpu p  
   perform initial propagation start time point 
   repeat
   immediately execute executable time points
reached upper bounds 
   arbitrarily pick executable time point x
live enabled yet executed  whose waits 
any  satisfied 
   execute x 
   propagate effect execution 
   network execution complete return 
   else advance current time 
propagating effect contingent time points occur 
    false 
figure    algorithm executes dynamic strategy stpu 
is  current time within bounds      enabled  is  executables constrained
happen occurred      waits imposed contingent time points b
expired 
dc execute produces dynamically consistent schedule every stpu algorithm
dynamicallycontrollable reports success  morris et al          complexity algorithm
o n  r   n number variables r number elements interval  since
polynomial complexity relies assumption bounded maximum interval size  morris et al 
       conclude dynamicallycontrollable pseudo polynomial  dc algorithm strong
polynomial complexity presented  morris   muscettola         new algorithm differs
previous one mainly manipulates distance graph rather constraint
graph stpu  complexity o n      important notice purposes that 
distance graph produced output new algorithm  possible directly recover
intervals waits stpu produced output original algorithm described  morris
et al         

   simple temporal problems preferences uncertainty  stppus 
consider temporal problem would model naturally preferences addition hard
constraints  one features uncertainty  neither stpp stpu adequate model
problem  therefore propose call simple temporal problems preferences uncertainty  stppus short 
intuitively  stppu stpp time points partitioned two classes  requirement contingent  stpu  since time points controllable
agent  notion consistency stp p  replaced controllability 
stpu  every solution stppu global preference value  stpp  seek
solution maximizes value  satisfying controllability requirements 

   

firossi   v enable    yorke  s mith

precisely  extend definitions given stpps stpus fit stppus
following way 
definition    context preferences 
executable time point variable  x   whose time assigned agent 
contingent time point variable  e   whose time assigned external world 
soft requirement link rij   generic time points ti tj     pair hiij   fij i  iij  
 lij   uij   lij  tj    ti   uij  ti   value assigned variable ti  
fij   iij preference function mapping element interval element
preference set  a  semiring   ha           i 
soft contingent link ghk   executable point bh contingent point ek   pair hihk   fhk
interval ihk    lhk   uhk   contains possible durations contingent event
represented bh ek fhk   ihk preference function maps element
interval element preference set a  
types constraints  preference function represents preference agent
duration event distance two events  however  soft requirement
constraints agent control guided preferences choosing values
time points  soft contingent constraints preference represents merely desire agent
possible outcomes nature  control outcomes  noticed
stppus uncertainty modeled  stpus  assuming complete ignorance
events likely happen  thus  durations contingent events assumed equally
possible  or plausible  different levels plausibility allowed 
state formally definition stppus  combines preferences
definition stpp contingency definition stpu 
definition     stppu  simple temporal problem preferences uncertainty  stppu 
tuple p    ne   nc   lr   lc   s  where 
ne set executable time points 
nc set contingent time points 
  ha           i c semiring 
lr set soft requirement constraints s 
lc set soft contingent constraints s  
note that  stpps  stppus model hard constraints soft constraints
element interval mapped maximal element preference set  further  without
loss generality  following assumptions made stpus  morris et al          assume
two contingent constraints end time point 
   again  general ti tj either contingent executable time points 

   

fiu ncertainty

soft temporal constraint problems

complete assignment time points compute global preference 
stpps  done according semiring based soft constraint schema  first project
assignment soft constraint  obtaining element interval preference
associated element  combine preferences obtained constraints
multiplicative operator semiring  given two assignments preference  best
chosen using additive operator  assignment optimal assignment
preference better semirings ordering 
following summarize definitions given stpus  extending directly
stppus 
definition    given stppu p  
schedule complete assignment time points n e nc  
sched p  set schedules p   sol p  set schedules p
consistent constraints p  see definition    section      
given schedule p   situation  usually written   set durations contingent constraints s 
given schedule p   control sequence  usually written set assignments
executable time points s 
t  schedule  t   x     x     x ne   every contingent constraint 
ghk lc   defined executable bh contingent time point ek    t   ek   t   bh   hk  
hk duration ghk  
projection p corresponding situation stpp obtained p leaving
requirement constraints unchanged replacing contingent constraint g hk soft
constraint h hk   hk    f  hk  i  hk duration event represented g hk
  f  hk   preference associated duration 
given projection p indicate sol p   set solutions p define
optsol p      s sol p      s  sol p    pref  s      pref  s    set preferences totally ordered indicate opt p   preference optimal solution
p  
proj p  set projections stppu p 
strategy map   p roj p   sched p   every projection p   s p  
schedule includes  
strategy viable   s p   solution p   is  satisfies soft temporal
constraints  thus viable strategy mapping   p roj p   sol p    case
indicate pref  s p    global preference associated schedule s p   stpp
p   
   regarding notation  case hard constraints  given executable time point x  write  s p   x
indicate value assigned x s p     s p    x indicate durations contingent events
finish prior x s p   

   

firossi   v enable    yorke  s mith

 

   
   

x  

  y

ec

sc
 

 

   

p  

   

   

   

u  

  q

  v

sa
requirement constr 

 

contingent constr 

   

contingent timepoint

   

ea

executable timepoint

s  

  t

figure    example stppu earth observing satellites domain 
example   consider example following scenario earth observing satellites
domain  frank et al         described section    suppose request observing region
interest received accepted  collect data  instrument must aimed
target images taken  might be  however  certain period time
window allocated observation  region interest covered clouds  earlier
cloud coverage ends better  since maximise quality quantity retrieved
data  coverage controllable 
suppose time window reserved observation     units time
start counting time cloud occlusion region interest observable  also  suppose 
order observation succeed  aiming procedure must start   units
starting time  ideally   units  actually begin least   time unit
weather becomes observable  ideally aiming procedure start slightly cloud
coverage end  starts early  then  since instrument activated immediately
aimed  clouds might still occlude region image quality poor  hand 
waits long clouds disappeared precious time
occlusion wasted aiming instrument instead taking images  aiming procedure
controlled mission manager take anywhere     units time 
ideal duration     units  since short time   units would put instrument pressure 
long duration    units  would waste energy 
scenario  rather tedious describe words  compactly represented stppu
shown figure   following features 
set executable time points sc  start clouds   sa  start aiming   ea  end aiming  
contingent time point ec  end clouds  
set soft requirement constraints  sc sa  sa ec  sa ea  
soft contingent constraint  sc ec  

   

fiu ncertainty

soft temporal constraint problems

fuzzy semiring sfcsp   h        max  min      i 
solution stppu figure   schedule    sc      sa      ec      ea      
situation associated projection contingent constraint  sc ec 
i e       control sequence assignment executable time points  i e   
 sc      sa      ea       global preference obtained considering preferences
associated projections constraints  pref        sc sa  pref         
sa ec  pref          sa ea  pref          sc ec  preferences
must combined using multiplicative operator semiring  min 
global preference      another solution      sc      sa      ec      ea     
global preference      thus s  better solution according semiring ordering since
max                  

   controllability preferences
consider possible extend notion controllability accommodate preferences  general interested ability agent execute time points
control  subject constraints best possible way respect preferences 
transpires meaning best possible way depends types controllability
required  particular  concept optimality must reinterpreted due presence uncontrollable events  fact  distinction nature events induces difference
meaning preferences expressed them  mentioned previous section  scenario given certain level desirability  expressing much agent likes
situation  then  agent often several choices events controls consistent
scenario  choices might preferable respect others  expressed
preferences requirement constraints information guide agent
choosing best possible actions take  thus  concept optimality relative
specific scenario  final preference complete assignment overall value combines
much corresponding scenario desirable agent well agent reacted
scenario 
concepts controllability propose are  thus  based possibility
agent execute events control best possible way given actual situation  acting optimal way seen lowering preference given uncontrollable
events 
    strong controllability preferences
start considering strongest notion controllability  extend notion  taking
account preferences  two ways  obtaining optimal strong controllability  strong controllability  preference level  see  first notion corresponds stronger
requirement  since assumes existence fixed unique assignment executable timepoints optimal every projection  second notion requires fixed assignment
optimal projections maximum preference value greater  
yield preference    cases 

   

firossi   v enable    yorke  s mith

definition     optimal strong controllability  stppu p optimally strongly controllable
 osc  iff viable execution strategy s t 
    s p    x    s p    x   p    p  p roj p   every executable time point x 
   s p   optsol p    p p roj p     
words  stppu osc fixed control sequence works possible
situations optimal them  definition  optimal means
assignment agent choose executable time points could yield higher preference
situation  since powerful restriction  mentioned before  instead look
reaching certain quality threshold 
definition      strong controllability  stppu p  strongly controllable   sc  
preference  iff viable strategy s t 
    s p    x    s p    x   p    p  p roj p   every executable time point x 
   s p   optsol p   p p roj p     s  optsol p   pref  s       
   pref  s p       otherwise  
words  stppu  sc fixed control sequence works situations results optimal schedules situations optimal preference level
projection   schedule preference smaller cases 
    weak controllability preferences
secondly  extend similarly least restrictive notion controllability  weak controllability requires existence solution possible situation  possibly different one situation 
extend definition requiring existence optimal solution every situation 
definition     optimal weak controllability  stppu p optimally weakly controllable
 owc  iff p p roj p   strategy s t   p   optimal solution p   
words  stppu owc if  every situation  control sequence results
optimal schedule situation 
optimal weak controllability stppu equivalent weak controllability corresponding stpu obtained ignoring preferences  formally prove section   
reason projection p least one solution must optimal solution 
moreover  stppu underlying stpu either wc not  hence
make sense define notion  weak controllability 
    dynamic controllability preferences
dynamic controllability  dc  addresses ability agent execute schedule choosing
incrementally values assigned executable time points  looking past 
preferences available  desirable agent acts way guaranteed
consistent possible future outcome way ensures absence regrets
w r t  preferences 
   

fiu ncertainty

soft temporal constraint problems

definition     optimal dynamic controllability  stppu p optimally dynamically controllable  odc  iff viable strategy p     p  p roj p   executable
time point x 
    s p     x    s p     x  s p    x    s p    x  
   s p    optsol p    s p      optsol p     
words  stppu odc exists means extending current partial control
sequence complete control sequence future way resulting schedule
optimal  before  soften optimality requirement preference reaching
certain threshold 
definition      dynamic controllability  stppu p  dynamically controllable   dc 
iff viable strategy p     p  p roj p   every executable time point x 
    s p     x    s p     x  s p    x    s p    x  
   s p    optsol p    s p    optsol p      s  optsol p    pref  s     
  s  optsol p    pref  s       
   pref s p        pref s p        otherwise  
words  stppu  dc means extending current partial control
sequence complete sequence  optimality guaranteed situations preference
     projections resulting dynamic schedule preference smaller
 
    comparing controllability notions
consider relation among different notions controllability stppus 
recall stpus  sc   dc   w c  see section     start giving similar
result holds definitions optimal controllability preferences  intuitively 
single control sequence optimal situations  clearly executed
dynamically  assigning values control sequence current time reaches them 
moreover if  whatever final situation be  know consistently assign values
executables  looking past assignments  never backtrack preferences 
clear every situation least optimal solution 
theorem   stppu p osc  odc  odc  owc 
proofs theorems given appendix  opposite implications theorem  
hold general  fact sufficient recall hard constraints special case soft
constraints use known result stpus  morris et al         
examples consider following two  defined fuzzy semiring  figure   shows
stppu owc odc  is  fact  easy see assignment c 
projection stppu consistently extended assignment b  however 
show section   stppu depicted odc 
   

firossi   v enable    yorke  s mith

    
   

   
   
   
   

x    

   



 

 

     y

c

contingent

 
   

     
   

   

   
   

   

   

   

   

   

   

   
p      

    q

requirement constr 

u        

b

contingent constr 

   

 

 

contingent timepoint
executable timepoint

figure    stppu owc odc 

 

 



 

c

 

 

 

 

b

 

requirement constr 
contingent constr 
contingent timepoint
executable timepoint

figure     stppu odc osc 

   

 

 

  v

fiu ncertainty

soft temporal constraint problems

figure     instead  shows odc stppu osc  b two executable timepoints c contingent time point  two projections  say p   p    corresponding respectively point   point   ac interval  optimal preference level   
fact  ha      c      b    i solution p   preference   ha      c      b    i
solution p  preference    stppu odc  fact  dynamic strategy
assigns b value    c occurs    value    c occurs    assuming always assigned
    however single value b optimal scenarios 
similar results apply case  controllability  following formal treatment shows 
theorem   given preference level   stppu p  sc  dc 
again  converse hold general  example consider stppu shown
figure         assuming      stppu   dc but  shown above 
  sc 
another useful result controllability property holds given preference level  say  
holds     stated following theorem 
theorem   given stppu p preference level   p  sc  resp   dc    sc
 resp   dc      
let us consider case preference set totally ordered  eliminate
uncertainty stppu  regarding contingent time points executables  obtain
stpp  stpp solved obtaining optimal preference value opt  preference level 
opt  useful relate optimal controllability  controllability  stated following
theorem  stppu optimally strongly dynamically controllable satisfies
corresponding notion  controllability   opt 
theorem   given stppu p defined c semiring totally ordered preferences  let opt  
maxt sol p   pref  t    then  p osc  resp  odc  iff opt sc  resp  opt dc  
owc  formally prove section   stppu owc iff stpu obtained
ignoring preference functions wc  relation min  controllability
controllability without preferences  recall considering elements intervals mapped
preference min coincides definition considering underlying stpu obtained
ignoring preference functions stppu  thus  min  x holds iff x holds  x either
sc dc 
figure    summarize relationships holding among various controllability notions
preferences totally ordered  instead partially ordered  relationships
opt x min x  x controllability notion  make sense  fact 
partially ordered case  several optimal elements several minimal elements 
one 

   determining optimal strong controllability  strong controllability
next sections give methods determine levels controllability hold stppu 
strong controllability fits off line scheduling allowed  sense fixed optimal
control sequence computed execution begins  approach reasonable planning
   

firossi   v enable    yorke  s mith

osc


odc

  opt sc

  opt dc

   sc


   dc

  min  sc

  min  dc



owc

  sc


  dc


  wc

figure     comparison controllability notions total orders  min smallest preference
constraint  opt min  
algorithm knowledge possible outcomes  agents preferences 
situation requires us find fixed way execute controllable events consistent
possible outcome uncontrollables give best possible final preference 
    algorithm best sc
algorithm described section checks whether stppu osc  osc 
algorithm detect return highest preference level problem
 sc 
algorithms present paper rely following tractability assumptions 
inherited stpps      underlying semiring fuzzy semiring f csp defined section          preference functions semi convex      set preferences        discretized finite number elements according given granularity 
algorithm best sc based simple idea  preference level   finds
control sequences guarantee strong controllability projections optimal
preference   optimality optimal preference   then  keeps
control sequences preference levels    
pseudocode shown figure     algorithm takes input stppu p  line    
first step  lowest preference min computed  notice that  efficiently  analytical
structure preference functions  semi convexity  exploited 
line   stpu obtained p cutting preference level min considered 
stpu obtained applying function min  cut stppu g  g p     general  result
 cut p   stpu q  i e   temporal problem uncertainty preferences  defined
follows 
q variables domains p 
every soft temporal constraint  requirement contingent  p variables x   xj  
say c   hi  f i  is  q   simple temporal constraint variables defined
 x i f  x    
notice semi convexity preference functions guarantees set  x i f  x   
forms interval  intervals q contain durations requirement contingent events
local preference least  
   notice function  cut applied stpps stppus  first case output stp 
latter case stpu  notice that   cut known concept fuzzy literature 

   

fiu ncertainty

soft temporal constraint problems

pseudocode best sc
   input stppu p  
   compute min  
   stpu qmin min  cut p   
    stronglycontrollable  qmin   inconsistent  write min  sc stop 
   else  
   stp p min stronglycontrollable  qmin   
   preference min     
   bool oscfalse  bool  scfalse 
    
   
stpu q  cut p   
   
 pc q   inconsistent  osctrue 
   
else  
   
 stronglycontrollable pc q    inconsistent   sc true 
   
else  
n
   
stp p p  
stronglycontrollable pc q     

   
 p inconsistent     sc true   
   
else         
   
 
   
 
   
 while  osc false  sc false  
     osc true  write p osc 
      sc true  write p       sc 
    se  earliest solution p      sl  latest solution p     
    return p     se   sl  
      
figure     algorithm best sc  tests stppu osc finds highest
stppu p  sc 

   

firossi   v enable    yorke  s mith

stpu qmin obtained  algorithm checks strongly controllable  stp
obtained applying algorithm stronglycontrollable  vidal   fargier        stpu q min
consistent  then  according theorem    hope higher preference  algorithm stop  line     reporting stppu  sc   thus osc well 
if  instead  inconsistency found  best sc stores resulting stp  lines      proceeds
moving next preference level min        line    
remaining part algorithm  lines        three steps performed preference
level considered 
cut stppu p obtain stpu q  line     
apply path consistency q considering stp  pc q    line     
apply strong controllability stpu pc q    line     
let us consider last two steps detail 
applying path consistency stpu q means considering stp  is  treating contingent constraints requirement constraints  denote algorithm pc algorithm enforcing
path consistency temporal network  see section     dechter et al          returns
minimal network leaving intervals values contained least one solution 
allows us identify situations    correspond contingent durations locally
preference consistent least one control sequence elements q  
words  applying path consistency q leaves contingent intervals durations
belong situations corresponding projections optimal value least  
test gives inconsistency  means given stpu  seen stp  solution 
hence projections corresponding scenarios stppu p optimal preference  
 line     
third last step applies stronglycontrollable path consistent stpu pc q    reintroducing information uncertainty contingent constraints  recall algorithm
rewrites contingent constraints terms constraints executable time points 
stpu strongly controllable  stronglycontrollable leave requirement intervals
elements identify control sequences consistent possible situation  case 
applying stronglycontrollable pc q   find  any  control sequences pc q  
consistent possible situation pc q   
however  stpu pc q   strongly controllable  control sequences found might
optimal scenarios optimal preference lower   order keep
control sequences guarantee optimal strong controllability preference levels  
stp obtained stronglycontrollable pc q    intersected corresponding stp found
previous step  at preference level     p    line      recall given two
two stps  p  p    defined set variables  stp p    p  p 
variables p  p  temporal constraint  c ij   c ij c ij   intersection
corresponding intervals p  p    intersection becomes empty constraint
stp obtained inconsistent  conclude control sequence guarantee
strong controllability optimality preference level and  time  preferences
   writing min     mean next preference level higher min defined terms granularity
preferences       interval 

   

fiu ncertainty

soft temporal constraint problems

table    table row corresponds preference level represents intervals
stpu q obtained cutting stppu figure   level  
stpu

 sc ec 

 sc sa 

 sa ec 

q   
q   
q   
q   
q   
q 

      
      
      
      
      
      

      
      
      
      
      
      

      
      
      
      
      
      

table    table row corresponds preference level represents intervals
stpu pc q   obtained applying path consistency stpus table   
stpu
   

pc q  
pc q     
pc q     
pc q     
pc q     
pc q   

 sc ec 

 sc sa 

 sa ec 

      
      
      
      
      
      

      
      
      
      
      
      

      
      
      
      
      
      

   line      if  instead  stp obtained consistent  algorithm best sc considers next
preference level       performs three steps again 
output algorithm stp  p     obtained iteration previous one
causing execution stop  lines        two solutions  e sl   stp 
show shortly  contains control sequences guarantee  sc     
  highest preference level cutting gives consistent problem  stppu
osc  solutions provided algorithm respectively earliest  e   latest  sl  
solutions p     fact  proved  dechter et al         mentioned section      since
p   minimal  earliest  resp  latest  solution corresponds assigning variable
lower  resp  upper  bound interval constraint defined x  variable 
indicated algorithm procedures earliest solution latest solution  let us recall
every solution found p   without backtracking 
formally proving correctness algorithm best sc  give example 
example   consider stppu described example    depicted figure    simplicity
focus triangular sub problem variables sc  sa  ec  example  min       
table   shows stpus q obtained cutting problem preference level                  
table   shows result applying path consistency  line     stpus shown
table    seen  stpus consistent  finally  table   shows stps defined
executable variables  sc sa  obtained applying stronglycontrollable
stpus table   

   

firossi   v enable    yorke  s mith

table    table row corresponds preference level represents intervals
stp stronglycontrollable pc q   obtained applying strong controllability check
stpus table   
 sc sa 

stp
   

stronglycontrollable pc q   
stronglycontrollable pc q      
stronglycontrollable pc q      
stronglycontrollable pc q      
stronglycontrollable pc q      
stronglycontrollable pc q    

      
      
      
      
      
      

looking tables     easy deduce best sc stop preference level
   fact  looking carefully table    see stp p     consists interval       
constraint sc sa  stronglycontrollable pc q      consist interval       
constraint  obviously intersecting two gives inconsistency  causing condition
line    figure    satisfied 
conclusion executing best sc example depicted figure      sc
osc  let us see correct  without loss generality assume sc
assigned value    last line table   observe value assigned
sa optimal scenarios optimal preference    that ec assigned
        however  assigning   sa optimal ec happens    since scenario
optimal preference value      e g  sa assigned    case would global
preference      given constraint sa ec      
    properties best sc
prove algorithm best sc correctly identifies whether stppu p osc  and 
not  finds highest preference level p  sc  let us first consider events
best sc stops 
event    stronglycontrollable q min   inconsistent  line    
event    pc q   returns inconsistency  line     
event    pc q   consistent strongly controllable  line     
event    pc q   strongly controllable  however intersection stp obtained
stronglycontrollable pc q    stp obtained previous preference level 
p     inconsistent  line     
first notice algorithm terminates 
theorem   given stppu p finite number preference levels  execution algorithm best sc p terminates 
   recall fuzzy semiring context global preference assignment computed taking minimum
preference assigned projections 

   

fiu ncertainty

soft temporal constraint problems

intuitively  either one termination events occur preference levels exhausted 
next  let us show best dc sound complete algorithm checking stppu
osc finding highest preference level  sc 
said before  cutting stppu p preference level gives stpu q  
moreover  every situation                l   q seen situation p
fj  j     j  implies every projection p p roj q    stp  corresponds projection p p roj p   stpp  situations q   follows
write always p interpreted stp seen projection q
stpp seen projection p   following lemmas state properties
relate solutions projections two contexts  without preferences 
theorem   consider stppu p   hne   nc   lr   lc   sf csp preference level   consider stpu q   hne   nc   l r   l c obtained cutting p   stpu pc q   hne   nc  
l  r   l  c i  then 
   situation p   p p roj pc q    iff optp  p    
   every control sequence   solution   stronglycontrollable pc q    iff p
proj pc  q     t  sol p   pref  t     
first part theorem states that  applying path consistency stpu q   remove
situations cannot extended complete solutions q   thus correspond projections optimal preference strictly less   second part lemma considers
stp obtained applying stronglycontrollable path consistency  particular stated
solutions result  projections pc  q    solutions preference
least   notice implies result optimal solutions projections p
optimal preference exactly   might optimal  however  projections
optimal preference strictly greater  
theorem  get following corollary  clarifies relation
stpu obtained cutting stppu preference level    sc stppu 
corollary   consider stppu p preference level assume   situation p  
opt p     p corresponding projection  then  stpu pc q    obtained
cutting p   applying path consistency  sc p  sc 
consider preference levels min   compute corresponding
stps  say min             stp identify assignments executable variables guaranteeing strong controllability optimality level  intersecting stps keep
common solutions thus guarantee strong controllability optimality
situations p optimal preference smaller equal  
theorem   consider stppu p   preference levels min   assume
corresponding stps  min           obtained cutting p preference levels n
min            
enforcing strong controllability consistent  then  sol p    p   i min        
iff p p roj p    t  sol p    opt p     pref  t      opt p    otherwise
pref  t     
   

firossi   v enable    yorke  s mith

consider events best sc stop prove
strong controllability properties hold 
theorem   execution algorithm best sc stppu p stops due occurrence
event    line     p  sc   
case underlying stpu obtained stppu ignoring preference
functions strongly controllable  since cutting higher preferences give even smaller
intervals hope controllability level execution halt 
theorem   execution algorithm best sc stppu p stops due occurrence
event    line     preference level  
    opt   maxt sol p   pref  t   
p osc control sequence solution stp p opt  returned algorithm  iff
optimal scenario p  
event occurs algorithm cuts stppu given preference level stpu
obtained  seen stp  inconsistent  particular  means projection p roj p  
optimal preference equal greater preference level  however  level
reached  previous level  assignments guaranteeing sc optimality
found  moreover  previous level must highest preference solution
p   opt p    means opt p   sc established  theorem   equivalent
osc 
theorem    execution algorithm best sc stppu p stops due occurrence
event    line     event    line     preference level   p osc     sc solution stp p    returned algorithm  that  p p roj p   
t  sol p    opt p      pref  t      opt p    otherwise pref  t      
intuitively  algorithm reaches stops line     projections p
optimal preference corresponding set situations sc  notice exactly
situation considered corollary    instead stops line     set situations sc 
none assignments guaranteeing sc situations optimal
situations preference levels   cases problem  sc  however  assuming
first level execution stopped problem   sc 
conclude section considering complexity best sc 
theorem    determining osc highest preference level  sc stppu n
variables   preference levels achieved time o n      
notice cannot use binary search preference levels  in contrast algorithms
stpps   since correctness procedure based intersection result obtained
given preference level    obtained preference levels    
theorem allows us conclude cost adding preferences  thus considerable expressive power  low  fact  complexity still polynomial grown
factor equal number preference levels 
   

fiu ncertainty

soft temporal constraint problems

   determining optimal weak controllability
optimal weak controllability least useful property practice property
adding preferences smallest impact terms expressiveness  owc requires
existence optimal solution every possible scenario  equivalent requiring
existence solution every situation  stated following theorem 
theorem    stppu p owc iff stpu q  obtained simply ignoring preference functions constraints wc 
ignoring preference functions mean mapping soft constraint hi  f hard
constraint hii defined variables  theorem allows us conclude that  check
owc  enough apply algorithm weaklycontrollable proposed  vidal   ghallab       
described section    if  instead  given scenario   find optimal
solution projection  stpp p roj    using one solvers described  rossi et al  
      
let us consider example   again  section   showed stpu obtained cutting
stppu figure   preference level min strongly controllable  since sc implies wc 
conclude stpu weakly controllable and  thus  stppu figure   optimally
weakly controllable 

   determining optimal dynamic controllability  dynamic controllability
optimal dynamic controllability  odc  interesting useful property practice 
described section    many industrial applications solved dynamic fashion 
making decisions response occurrences events execution plan 
true space application domains  planning mission handled decomposing
problem set scheduling subproblems  depend occurrence semipredictable  contingent events  frank et al         
section describe algorithm tests whether stppu p odc and  odc 
finds highest p  dc  algorithm presented bears similarities
best sc  sense decomposes problem stpus corresponding different preference
levels performs bottom search dynamically controllable problems space 
notice algorithm attractive practice  since output minimal form
problem assignments belonging least one optimal solution left domains
executable time points  minimal form given input execution algorithm 
describe  assigns feasible values executable time points dynamically
observing current situation  i e   values contingent time points occurred  
    necessary sufficient condition testing odc
define necessary sufficient condition odc  defined intervals
stppu  propose algorithm tests condition  show
sound complete algorithm testing odc 
first claim that  given stppu  dynamic controllability stpus obtained
cutting stppu applying pc every preference level necessary sufficient
condition optimal dynamic controllability given stppu 
   

firossi   v enable    yorke  s mith

theorem    given stppu p   consider preference level stpu q   obtained
cutting p   consistent  stpu pc q   dc p odc  dc 
 
unfortunately condition sufficient  since stppu still odc even
every preference level stpu obtained pc dc  example shown figure  
described below 
example   another potential application stppus scheduling aircraft analysis airborne
particles  coggiola  shi    young         example consider aircraft equipped
instruments small ice detector nevzorov probe  used discriminate liquid ice given types clouds  analysis important prediction
evolution precipitatory systems occurrence severity aircraft icing  field 
hogan  brown  illingworth  choularton  kaye  hirst    greenaway         instruments need
uncertain amount time determine predominant state  liquid ice 
activated inside cloud 
example shown figure   consider sensing event represented variables
c start time maneuver aircraft represented variable b  due
instruments function  aircraft maneuver impact analysis  example constraint ac
represents duration sensing event preference function models fact
earlier predominant state determined better  constraint ab models instead fact
maneuver start soon possible  example  due time constraints imposed
aircrafts fuel availability  constraint bc models fact maneuver ideally start
sensing event ended 
let us call p stppu depicted figure    order determine highest preference level
schedule p can  example use algorithm chop solver  rossi et al         
highest preference level cutting functions gives consistent stp    interval       
ab         ac interval        bc consistent stp   optimal solutions p   regarded
stpp  global preference   
consider stpus obtained cutting every preference level highest    
lowest      minimum preference constraint p min       and  easy see 
stpus obtained cutting p applying pc preference levels      
dc  however  p odc  fact  dynamic assignment b belongs optimal
solution projections corresponding elements         x  y     executing b  
cause inconsistency c happens     since          doesnt belong  u  v   
elaborate example find sufficient condition odc  consider intervals
ab   p   q    waits   c    obtained applying dc checking algorithm preference
level   shown table   
look first last intervals  resp              way assign
value b time induces preference   constraints ab bc  c occurs     
   satisfies wait   c       ensuring consistency c occurs     depends
fact intersection  p     q      i e        sub interval  p       q       satisfies
  c       is          empty 
claim non emptiness intersection  together dc stpus
obtained cutting problem preference levels necessary sufficient condition
   

fiu ncertainty

soft temporal constraint problems

table    table row corresponds preference level represents corresponding
interval wait ab constraint stppu shown figure   


 p   q  

wait

 
   
   
   
   
   

      
      
      
      
      
      

  c     
  c     
  c     
  c     
  c     

odc  following section describe algorithm tests condition  then 
section      prove algorithm sound complete w r t  testing odc
finding highest level  dc 
    algorithm best dc
algorithm best dc echoes section  s algorithm checking optimal strong controllability 
done best sc  considers stpus obtained cutting stppu various preference
levels  preference level  first tests whether stpu obtained considering stp
path consistent  then  checks path consistent stpu obtained dynamically controllable 
using algorithm proposed  morris et al          thus  control sequences guarantee
dc scenarios different optimal preferences found  next step select
sequences satisfy dc requirement optimal preference levels 
pseudocode given figure     algorithm best dc takes input stppu p  line   
computes minimum preference  min   assigned constraint  line    
min known  stpu obtained cutting p min computed  line    
stpu seen stppu p variables intervals constraints p
preferences  stpu  denoted q min   given input algorithm
dynamicallycontrollable  qmin dynamically controllable  p odc dc  for min   hence    shown theorem     algorithm detects
inconsistency halts  line     if  instead  q min dynamically controllable  stpu
returned output dynamicallycontrollable saved denoted p min  line     notice
stpu minimal  sense intervals elements belonging
least one dynamic schedule  morris et al          addition  since preferences 
elements requirement intervals  well belonging least one dynamic schedule 
part optimal schedules scenarios projection optimal preference equal
min    
line   preference level updated next value ordering considered  according given preference granularity   line   two boolean flags  odc  dc
defined  setting flag odc true signal algorithm established problem odc  setting flag  dc true signal algorithm found highest
preference level stppu  dc 
   fact  preference least min definition 

   

firossi   v enable    yorke  s mith

pseudocode best dc
   input stppu p  
   compute min  
   stpu qmin min  cut p   
    dynamicallycontrollable q min   inconsistent  write min  dc stop 
   else  
   stp p min dynamicallycontrollable qmin   
   preference min     
   bool odc false  bool  dc false 
    
   
stpu q  cut p   
   
 pc q   inconsistent  odc true 
   
else  
   
 dynamicallycontrollable pc q    inconsistent   dc true 
   
else  
   
stpu dynamicallycontrollable pc q    
   
if merge p       fails     dc true  
   
else  
   
stpu p merge p       
   
    
   
  
   
  
   
  
     while  odc false  dc false  
     odc true  write p odc 
      dc true  write p       dc 
    return stppu f   resulting stppu p  p     
      
figure     algorithm tests stppu odc and  not  finds highest stppu
p  dc 

   

fiu ncertainty

soft temporal constraint problems

pseudocode merge
   input  stpu   stpu      
   stpu p     
   constraint ab  b executables  p   
define interval  p    q     wait t   
given   interval  p   q    wait  
  interval  p     q       wait t         follows  
    t   p t     p      precede   precede 
   p  max p   p      q   min q   q       t  max t   t     
    q     p    return failed 
    p     q p   t     q       unordered   unordered precede 
   t  max t   t      q   min q   q      
    q     t    return failed 
    output p     
figure     algorithm merge 
lines      contain main loop algorithm  short  time loop executed 
cuts p current preference level looks cutting produced path consistent stpu
 seen stp   so  checks path consistent version stpu dynamically
controllable and  test passed  new stpu created merging current
results previous levels 
describe step detail  line    cuts p current preference level   line   
consistency stpu q tested applying algorithm pc  pc returns inconsistency 
conclude p schedule preference  or greater  
next step check stpu pc q   dc  notice required preference
levels optimal level order p odc  order p  dc
 theorem      applying algorithm dynamicallycontrollable detects pc q   dynamically controllable  algorithm sets flag  dc true  if  instead  pc q   dynamically
controllable resulting minimal stpu saved denoted  line     
line     output procedure merge tested  procedure used combine
results preference   preference   applying stpu obtained
end previous iteration  p     stpu   pseudocode merge
shown figure     describe detail shortly  inconsistency found  new
stpu obtained merging procedure denoted p  line     new preference level
considered  line     
lines       take care output  lines       write output p odc or  not 
highest  dc  line    final stppu  f   given output  obtained
stpu p     is  stpu obtained last iteration cycle
completed success  i e   reached line      function resulting stppu restores
preferences intervals p   setting p   show
requirement constraints f contain elements corresponding dynamic schedules
always optimal  result p odc  optimal scenarios corresponding
projections optimal preference guarantee global preference level least
others  result p  dc 
   

firossi   v enable    yorke  s mith

pseudocode procedure merge given figure     input consists two stpus
defined set variables  describing merge works  assume given
input two stpus       obtained cutting two stppus preference levels    
applying  hypothesis success  pc dynamicallycontrollable  line   figure     
line    merge initializes stpu given output   formally proven theorem     due semi convexity preference functions
p roj t      p roj t    notice merge leaves contingent constraints unaltered  thus 
projection optimal preference     contained set projections p     
merge considers every requirement constraint defined two executables  say b 
respectively      since assuming algorithm dynamicallycontrollable
applied stpus  waits intervals  figure   illustrates three
cases interval ab be  wait expires upper bound interval
 figure    a    execution b must follow execution every contingent time point
 follow case   wait coincides lower bound interval  figure    b   
execution b must precede contingent time point  precede case   finally  shown
figure    c   wait within interval  b unordered case least
contingent time point  say c 
merge considers case corresponding intervals     line    
intervals respectively indicated  p   q    wait    p     q       wait t    
merge obtains new interval  p    q     new wait t    replace old wait     
interval  p  q     contain values projections ab constraint
optimal solution stpp corresponding situation      wait t  wait
respected dynamic execution order guarantee solution obtained
optimal  projection corresponding final scenario preference     
due semi convexity preference functions cannot case that 
ab follow precede case unordered case     
ab follow case precede case     
ab precede case follow case     
means cases considered are 
ab follow case     
ab precede case     
ab unordered case precede unordered case     
first two cases ab interval left t     formal motivation
contained proof theorem     however  informally  say ab interval
   already satisfies desired property 
lines     case ab precede case stpus examined  here  b
always occur contingent time point  values  p   q    resp   p     q      
assignments b consistent future occurrence c mapped preference  resp        clearly intersection taken order lower

   

fiu ncertainty

soft temporal constraint problems

preference c occurs preference      line   considers event intersection empty  means common assignment b  given a 
optimal scenarios optimal preference scenarios optimal preference     
lines     two scenarios considered  ab unordered case
precede case    ab unordered case stpus  figure   
shows second case  merge takes union parts intervals preceding wait
intersection parts following wait  intuition underlying execution
b identifying element either  p      p     t     preceded execution
contingent time points wait  means b executed 
contingent time point c  time c executed  say c  
associated preference  say fac  tc    constraint ac stppu p known  propagation
information allow us identify elements  p      resp   p     t     
preference fac  tc   thus optimal assignment b  means elements
interval  p     interval  p     t     eligible chosen  example  f ac  tc    
might values b preference equal optimal case would
c occurred time fac  tc       since case know
preference c occurred  propagation step prune non optimal choices b 
short  leaving elements allows flexibility propagation step  moreover 
proven theorem     p p    
instead consider elements interval  t   q    know identify assignments
b executed regardless c happen  however know happen
preference greater    means must take intersection part
corresponding one   t     q       order guarantee consistency optimality
c occurs time preference        easy way see interval  t   q  
may contain elements p mapped preference   elements optimal
scenarios c happens time associated preference   ac constraint 
however  cannot optimal scenarios c occurring time preference     
line   handles case two parts intervals  following waits 
empty intersection  case  optimality cannot guaranteed neither level     
particular contingent events occur waits expire 
    properties best dc
show best dc sound complete algorithm testing odc finding
highest preference level stppu given input  dc  recall  more 
results follow rely tractability assumptions requiring semi convex preference
functions fuzzy semiring h        max  min      i underlying structure 
let us consider stppu p stpus      defined previous section  then 
stpu p     merge  t        contingent constraints   requirement constraints defined merging procedure  start proving merge sound
complete algorithm testing existence viable dynamic strategy  common
stpus  optimal projections optimal preference equal either     
   recall projections coincide projections stppu p optimal preference  see
theorem     that  due semi convexity preference functions  p roj t      p roj t   

   

firossi   v enable    yorke  s mith

interval ab
stpu   

interval ab
stpu

 a 
  

  

  

p



q







p

q



merged interval ab




p



 b 

  

 c 

q

figure     merging two intervals unordered case 
theorem    consider stppu p stpus       obtained cutting p respectively
level     applying pc  without finding inconsistencies  dynamicallycontrollable
success  consider stpu p      merge t        
then  merge t        fail
p    dynamically controllable
viable dynamic strategy every projection p p roj p      
opt pi     opt pi         p   pref  s pi      opt pi   
otherwise pref  s pi        
following theorem extends result merging procedure two preference
levels  particular preference levels smaller equal given threshold  
theorem    consider stppu p every preference level    define stpu obtained
cutting p   applying pc dynamicallycontrollable  assume  
dc  consider stpu p  
p   merge merge       merge merge t min   min       min                 
min minimum preference constraint p  assume that  applied  merge
always returned consistent stpu  then  viable dynamic strategy s  p
p roj p    opt pi   s pi   optimal solution pi   otherwise pref  s pi        
theorem    allows us prove main result  informally  best dc applies merge
lowest preference highest threshold   returned problem becomes inconsistent  projection stppu optimal solution higher   then  using
theorem     conclude stppu odc  otherwise  dc 
let us start enumerating conditions best dc terminates 
   

fiu ncertainty

soft temporal constraint problems

event    best dc stops stpu obtained level min dc  line    
event    best dc exits reached preference level stpu  seen
stp  path consistent  line     
event    best dc stops reached preference level path consistent stpu dynamically controllable  line     
event    best dc stops procedure merge found inconsistency  line     
following theorem shows execution best dc always terminates 
theorem    given stppu p  execution algorithm best dc p terminates 
best dc considers preference level  starting lowest moving time
one level according granularity preference set  stops either inconsistency
found levels  assumed finite  precessed 
ready prove soundness completeness best dc  split proof
three theorems  considering different terminating condition  first theorem considers
case underlying stpu obtained p   ignoring preferences  dc 
case output stppu  dc level thus odc 
theorem    given stppu p input  best dc terminates line   iff     p
 dc 
next theorem considers case highest preference level reached success
merging procedure highest optimal preference projection p  
case  problem odc 
theorem    given stppu p input  best dc terminates line    iff p odc 
last result considers case least projection optimal preference strictly higher highest reached success merging procedure  case
problem odc best dc found highest level stppu  dc 
theorem    given stppu p input  best dc stops lines       preference level iff p
     dc odc 
mentioned section       morris   muscettola         proven checking dc
stpu done o n     n number variables  revised algorithm processes distance graph stpu  rather constraint graph  maintains additional
information  form additional labeled edges correspond waits  main feature
new algorithm  noted earlier  strongly polynomial algorithm determining
dynamic controllability stpu  important context stress fact
output two algorithms  presented  morris et al          morris   muscettola        
essentially same  fact easy obtain  polynomial time o n      constraint graph
waits produced dynamicallycontrollable starting distance graph produced
new algorithm  vice versa 

   

firossi   v enable    yorke  s mith

theorem    complexity determining odc highest preference level  dc
stppu n variables  bounded number preference levels   time o n      
complexity result given theorem    unexpectedly good  fact  shows cost
adding considerable expressive power preferences stpus factor equal
number different preference levels  implies solving optimization problem and 
time  controllability problem  remains p  number different preference levels
bounded 
    execution algorithm
execution algorithm propose similar stpus presented  morris et al  
       described section   shown figure    course execution algorithm
stppus take input stppu best dc successfully applied 
line   figure    algorithm performs initial propagation starting point  main
difference stppu execution algorithm stpu algorithm  morris et al        
definition propagation involves preferences 
definition     soft temporal propagation  consider stppu p variable p
value vy d y    propagating assignment   v p   means 
constraints  cxy involving x already assigned value v x d x  
replace interval cxy interval h vy vx   vy vx  i 
cut p preference level minx  fcxy  vy vx     
call odc execute algorithm dc execute propagation defined
definition     assume apply odc execute odc  dc stppu p best dc
applied  if  given time   preference partial schedule  
know p odc  dc   theorem    theorem     execution
algorithm assigning values      assume contingent event occurs
lowers preference    propagated stppu cut preference
level    on  execution algorithm assign values   and  theorem   
theorem     new waits imposed assignments executables
optimal situation optimal preference    situations
assignments guarantee preference least   

   using algorithms
section     described relations notions controllability  general strategy 
given stppu  first property consider osc  holds  solution obtained feasible
optimal possible scenarios  however  osc strong property holds infrequently 
stppu osc  still need control sequence execution begins 
best sc find best solution consistent possible future situations 
commonly  dynamic controllability useful  control sequence needs
known execution begins  odc ideal  notice that  results section     
stppu may osc still odc  if  however  stppu even odc 

   

fiu ncertainty

soft temporal constraint problems

best dc give dynamic solution highest preference  recall  shown
section      given preference level    sc implies  dc vice versa  thus 
may given stppu  sc  dc      sc means fixed
way assign values executables optimal situations optimal
preference give preference least cases  hand   dc
implies solution obtained dynamically  odc execute algorithm  optimal
situations best solution preference yield preference
cases  thus      using dynamic strategy guarantee optimality situations
higher preference others 
last possibility check owc  least allow executing agent know
advance situation solution  moreover  situation revealed
execution begins  using solvers stpps described  rossi et al        
allow us find optimal assignment scenario 

   related work
section survey work regard closely related ours  temporal uncertainty
studied before  defined different ways according different contexts
used 
start considering work proposed vila godo         propose fuzzy temporal constraint networks  stps interval constraint mapped
possibility distribution  fact  handle temporal uncertainty using possibility theory  zadeh 
       using term uncertainty describe vagueness temporal information available 
aim model statements called less hour ago  uncertainty
lack precise information temporal event  goal thus completely different
ours  fact  scenario agent must execute activities certain times 
activities constrained temporal relations uncertain events  goal find way
execute agents control way consistent whatever nature decides
future 
 vila   godo         instead  assume imprecise temporal information events
happened past  aim check information consistent  is 
contradictions implied study entailed set constraints  order model
imprecise knowledge  possibilities used  every element interval mapped
value indicates possible event certain is  thus  another major difference
approach consider preferences  possibilities  hand 
work presented allow express information possible probable value
contingent time point  one lines research want pursue future 
moreover   vila   godo         concerned classical notion consistency
 consistency level  rather controllability 
another work related way handle uncertainty badaloni giacomin        
introduce flexible temporal constraints soft constraints used express preferences
among feasible solutions prioritized constraints used express degree necessity
constraints satisfaction  particular  consider qualitative allen style temporal relations
associate relation preference  uncertainty deal time
occurrence event whether constraint belongs constraint problem 

   

firossi   v enable    yorke  s mith

model  information coming plausibility information coming preferences
mixed distinguishable solver  words  possible say whether
solution bad due poor preference relation due violating constraint
high priority  approach  instead  uncertainty preferences separated  compatibility
uncertain event change preference assignment executable 
robustness temporal uncertainty handled intrinsically different degrees controllability 
 dubois  hadjali    prade      b  authors consider fuzziness uncertainty temporal reasoning introducing fuzzy allen relations  precisely  present extension
allen relational calculus  based fuzzy comparators expressing linguistic tolerance  dubois
et al       b  want handle situations information dates relative positions
intervals complete but  reason  interest describing precise manner  example  one wants speak terms approximate equality  proximity
rather terms precise equality  secondly  want able deal available information pervaded imprecision  vagueness uncertainty  framework presented
restrict uncertainty event occur within range  hand  put
complete ignorance position  would equivalent  context  dubois
et al       b   setting   possibilities contingent events  moreover   dubois et al  
    b  allow preferences address controllability  instead  consider  similarly
 vila   godo         notions consistency entailment  first notion checked
computing transitive closure fuzzy temporal relations using inference rules appropriately
defined  second notion checked defining several patterns inference 
another work addresses temporal uncertainty presented  dubois  fargier   
prade         dubois  fargier    prade      a   work preferences activities
ill known durations classical job shop scheduling problem handled using fuzzy
framework  three types constraints  precedence constraints  capacity constraints
due dates  release time constraints  order model unpredictable events use possibility theory  authors mention  dubois et al          possibility distributions viewed
modeling uncertainty well preference  see dubois  fargier    prade         everything depends whether variable x possibility distribution defined controllable
not  thus dubois et al         distinguish controllable uncontrollable variables  however allow specify preferences uncontrollable events  preference functions
contingent constraints would interpreted possibility distributions framework 
sense  work complementary theirs  assume constraint possibility distribution
contingent events always equal   allow representation information
less possible values  hand  allow specify preferences uncontrollable events  they  contrary  allow put possibility distributions contingent events 
preferences 
finally  dubois et al         show scheduling problem uncertain durations
formally expressed kind constraints problem involving call flexible
durations  i e  durations fuzzy preferences   however interpretation quite different 
case flexible durations  fuzzy information comes specifications preferences
represents possible values assigned variable representing duration 
case imprecisely known durations  fuzzy information comes uncertainty real
value durations  formal correspondence two constraints close
authors distinguish among describing solving procedure  further  problem
   

fiu ncertainty

soft temporal constraint problems

solve find starting times activities activities take place within
global feasibility window whatever actual values unpredictable durations be  clearly
equivalent optimal strong controllability  address problem dynamic
weak controllability preferences 

    summary future work
defined formalism model problems quantitative temporal constraints
preferences uncertainty  generalized formalism three classical notions
controllability  that is  strong  weak dynamic   focused tractable class
problems  developed algorithms check presence properties 
work advances state art temporal reasoning uncertainty since provides
way handle preferences context  select best solution  rather feasible one 
presence uncontrollable events  moreover  shows computational properties
controllability checking algorithms change adding preferences  particular  dynamic
controllability still checked polynomial time considered class problems  producing dynamically temporal plans uncertainty optimal respect preferences 
among future directions want pursue within line research  first deeper
study methods algorithms adding preferences different fuzzy ones  notice
framework proposed able represent kind preference within
soft constraint framework  however  algorithms apply fuzzy preferences semiconvex functions  particular  would consider impact design complexity
algorithms uncontrollable events underlying preference structures
weighted probabilistic semiring  semirings characterized non idempotent
multiplicative operators  problem applying constraint propagation  bistarelli
et al          path consistency  constraints  thus search propagation techniques
adapted environment featuring uncertainty well  noticed
 peintner   pollack        algorithms finding optimal solutions stps preferences
weighted semiring proposed  another interesting class preferences utilitarian
ones  context preference represents utility goal maximize sum
utilities  preferences used temporal context without uncertainty example
 morris  morris  khatib  ramakrishnan    bachmann        
recently  another approach handling temporal uncertainty introduced  tsamardinos        tsamardinos  pollack    ramakrishnan      a   probabilistic simple temporal problems  pstps   similar ideas presented  lau  ou    sim         pstp framework 
rather bounding occurrence uncontrollable event within interval  stpus 
probability distribution describing event likely occur defined entire set
reals  stpus  way problem solved depends assumptions made regarding
knowledge uncontrollable variables  particular define static scheduling
optimization problem  equivalent finding execution satisfying sc stpus 
dynamic scheduling optimization problem  equivalent finding dynamic execution strategy
context stpus  framework  optimal means highest probability
satisfying constraints  preferences considered framework  believe
would interesting add preferences approach  first step could consists keeping 
strategy  separately global preference probability success  way

   

firossi   v enable    yorke  s mith

could use existing frameworks handling two aspects  then  order strategies
giving priority preferences  thus taking sense risky attitude  or  contrary 
giving priority probabilities  adopting cautious attitude  step direction
recently proposed  morris  morris  khatib    yorke smith         where  however  authors 
rather actually extending notions consistency pstps handle preferences  consider
inducing preferences probabilities  contrast  approach preliminary advanced  pini 
rossi    venable        
focused attention non disjunctive temporal problems  is 
one interval per constraint  would consider adding uncertainty disjunctive temporal problems  stergiou   koubarakis         consider scenarios
preferences uncertainty  problems polynomial even without preferences uncertainty shown cost adding preferences small  peintner   pollack 
       hope hold environments uncertainty well  surprisingly 
uncertainty disjoint temporal problems considered yet  although easy see
allowing multiple intervals constraint form uncontrollability  we  thus  plan
start defining dtpus  preliminary results venable yorke smith        merge
approach existing one dtpps 
extending conditional temporal problems  framework proposed  tsamardinos  vidal   
pollack      b   topic interest us  model boolean formula attached
temporal variable  formulae represent conditions must satisfied order
execution events enabled  framework uncertainty temporal
variables executed  believe would interesting extend approach order
allow conditional preferences  allowing preference functions constraints different
shapes according truth values formulas  occurrence event
time  would provide additional gain expressiveness  allowing one express dynamic
aspect preferences change time 

appendix
theorem   stppu p osc  odc  odc  owc 
proof  let us assume p osc  viable execution strategy that  p     p 
p roj p   every executable time point x   s p     x    s p    x s p    optsol p   
s p    optsol p     thus  particular   s p    x    s p    x every pair f projections
 s p     x    s p     x   allows us conclude p osc odc
strategy witness osc witness odc 
let us assume p odc  then  particular  viable dynamic strategy
p  p roj p    s p    optimal solution p    clearly means every projection
least optimal solution  thus p owc   
theorem   given preference level   stppu p  sc  dc 
proof  assume p  sc  viable strategy that   s p     x    s p    x  
p    p  p roj p   every executable time point x  s p   optimal solution
projection p   optimal solution p preference   pref  s p        
otherwise 
   

fiu ncertainty

soft temporal constraint problems

thus   s p    x    s p    x pairs projections  p   p   s p     x  
 s p     x   implies p  dc   
theorem   given stppu p preference level   p  sc  resp   dc    sc
 resp   dc      
proof  p  sc viable strategy that   s p     x    s p    x   p    p 
p roj p   every executable time point x  s p   optimal solution p
optimal solution p preference   pref  s p         otherwise  but  course 
  set projections optimal solution preference   included
projections optimal solution preference     moreover  projections 
pz   pref  s pz       implies pref  s pz       since     similarly  dc  
theorem   given stppu p   let opt   max sol p   pref  t    then  p osc  resp  odc  iff
opt sc  resp  opt dc  
proof  result comes directly fact p p roj p    opt pi   opt 
always least projection  pj   opt pj     opt  
theorem   given stppu p finite number preference levels  execution algorithm best sc p terminates 
proof  consider stppu p optimal preference value opt   max sol p   pref  t    is 
highest preference assigned solutions  definition  qopt   consistent 
means algorithm reaches level opt      that is  next preference level higher opt
granularity preferences  condition line    satisfied execution
halt  looking lines      see either one events cause execution
terminate occurs preference level incremented line     since finite number
preference levels  allows us conclude algorithm terminate finite number
steps   
theorem   consider stppu p   hne   nc   lr   lc   sf csp preference level   consider stpu q   hne   nc   l r   l c obtained cutting p   stpu pc q   hne   nc  
l  r   l  c i  then 
   situation p   p p roj pc q    iff optp  p    
   every control sequence   solution   stronglycontrollable pc q   iff  p
proj pc  q     t  sol p   pref  t     
proof  prove item theorem 
       consider situation p p roj pc q     since pc q   path consistent  consistent partial assignment  e g  defined   extended complete
consistent assignment  say t  pc q    moreover  t  sol p    pref  t     
since preference functions semi convex every interval pc q   subinterval
corresponding one q   thus  opt p   p       consider situation
opt p     implies t  sol p   pref  t      since
   

firossi   v enable    yorke  s mith

fuzzy semiring  happens iff min cij lr lc fij  t    cij     thus must
fij  t  cij     cij lr lc thus  t    cij c ij   c ij l r l c  
implies p p roj q    moreover  since t  consistent solution p q  
p p roj pc q    
   construction   sol t   iff  p p roj pc q     t  sol p  
sol pc q     notice fact t  sol pc q    implies pref  t       
corollary   consider stppu p preference level assume   situation p  
opt p     p corresponding projection  then  stpu pc q    obtained
cutting p   applying path consistency  sc p  sc 
proof  item   theorem   get p projection p opt p  
iff p p roj pc q     thus  complete assignments controllable contingent
variables p global preference iff pc q   consistent  i e   iff q path consistent  let
us assume pc q   sc  item   theorem    fixed assignment
controllable variables solution every projection p roj pc q    and  every
projection  gives global preference  
means either set projections common solution p every common
solution gives preference strictly lower   thus  p  sc since requires existence
fixed assignment controllable variables must optimal solution projections
preference  definition     item      give preference
projections  definition     item    
theorem   consider stppu p   preference levels min   assume
corresponding stps  min           obtained cutting p preference levels n
min            


enforcing strong controllability consistent  then  sol p    p   i min        
iff p p roj p    t  sol p    opt p     pref  t      opt p    otherwise
pref  t     
proof      let us first recall given two stps  p  p    defined set variables 
stp p    p  p  variables p  p  temporal constraint c ij  
c ij c ij   is  intervals p  intersection corresponding intervals p  
p    given this  fact set projections p set projections
stpu obtained cutting p min   immediately derive theorem  
solution p satisfies condition      let us consider control sequence p
  sol p    then  j  min           sol t j    theorem   conclude
p opt p     j t  optimal solution p    
theorem   execution algorithm best sc stppu p stops due occurrence
event    line     p  sc   
proof  every preference level min   q   cut p     min  cut p   qmin   occurrence event   implies qmin strongly controllable  must
q   min   thus p  sc min   theorem   allows us conclude
  min    

   

fiu ncertainty

soft temporal constraint problems

theorem   execution algorithm best sc stppu p stops due occurrence
event    line     preference level  
    opt   maxt sol p   pref  t   
p osc control sequence solution stp p opt  returned algorithm  iff
optimal scenario p  
proof  condition line    satisfied stpu q   means schedules
p preference   however  condition satisfied previous preference
level     means schedules preference    allows us conclude
  optimal preference stppu p seen stpp  is      opt  
maxt sol p   pref  t    since assuming line    executed best sc level opt     
conditions lines       must satisfied preference opt  means
level opt stp p opt  line     consistent  looking line     see stp p opt
satisfies hypothesis theorem   preference min preference opt  allows us
conclude solution p opt optimal scenario p vice versa  thus  p opt sc
and  theorem    osc   
theorem    execution algorithm best sc stppu p stops due occurrence
event    line     event    line     preference level p osc     sc solution stp p    returned algorithm  that  p p roj p   
t  sol p    opt p      pref  t      opt p    otherwise pref  t      
proof  event   event   occurs condition line    must satisfied preference level   means stpu pc q   consistent thus schedules p
preference   event   occurs  condition line    must satisfied  stpu obtained
cutting p preference level applying path consistency strongly controllable 
thus conclude  using corollary    p osc  however since algorithm executed
line    preference level     must reached line     looking line   
see stp p   satisfies hypothesis theorem   preference min preference level
   allows us conclude p   sc 
instead event   occurs p inconsistent  by theorem    means
common assignment executables optimal scenarios preference  
time preference equal   however since execution reached line
   preference level   assume successfully completed loop preference
  conclude p   sc  
theorem    determining optimal strong controllability highest preference level  sc
stppu n variables   preference levels achieved o n      
proof  notice first complexity procedure  cut  lines       intersecting two
stps  line     linear number constraints thus o n      assuming  
different preference levels  conclude complexity best sc bounded
applying   times stronglycontrollable  o n       see section     
theorem    stppu p owc iff stpu q  obtained simply ignoring preference functions constraints wc 
   

firossi   v enable    yorke  s mith

proof  p owc  every situation p exists control sequence
schedule t  consistent optimal projection p   every projection p p
corresponding projection q  say q   stp obtained p ignoring
preference functions  easy see definition   section     implies assignment
optimal solution p solution q   stpu q wc every projection
q exists control sequence schedule   solution q   definition   section     conclude corresponding stpp p least solution thus
must least optimal solution  solution solution higher
preference   
theorem    given stppu p   consider preference level stpu q   obtained
cutting p   consistent  stpu pc q   dc p odc  dc 
 
proof  assume preference level pc q   dc  means
viable execution strategy   p roj pc q    sol pc q    p    p 
p roj q   executable x   s p     x    s p     x  s p    x    s p    x  
let us recall that  due semi convexity preference functions  cutting stppu
given preference level return smaller intervals constraints  thus  every
projection p roj q    which stp  corresponds projection p roj p  
stpp obtained stp restoring preference functions p 
let us assume  contrary  p odc and  thus  exists viable strategy
 
  p roj p   sol p   p    p  p roj p     s    p     x    s    p     x
 s    p    x    s    p    x   pref  s    pi      opt pi            consider  restriction
  projections p roj pc q     since pref  s    p     opt p   every p   must
p p roj  pc q        p   sol  pc q     thus restriction   satisfies
requirements strategy definition dc  contradiction fact
pc q   dc  thus p cannot odc 
theorem    p p roj p    p p roj pc q    iff opt p     allows us
conclude p  dc  finally  theorem   allows conclude p  dc   
 
lemma    useful proof theorem     consider stpu q dynamicallyco
ntrollable reported success q  consider constraint ab  b executables
execution always precedes b  defined interval  p  q  wait max      then 
exists viable dynamic strategy q p roj q    s qi   b  s qi   a tmax  
proof  dynamic strategy produced algorithm dc execute shown figure    section    fact  line   stated executable b executed soon as  current
time  three following conditions satisfied      b live  i e  current time must lie lower upper bounds      b enabled  i e  variables must precede b
executed      waits b satisfied  let us denote current time  
assume b live enabled   thus    s q   a    p  q   third requirement satisfied
one two following scenarios  either last contingent time point b
wait occurred thus b executed immediately  waits contingent
    notice tmax longest wait b must satisfy imposed contingent time point c constraint ab 

   

fiu ncertainty

soft temporal constraint problems

time points  among b wait  yet occurred expired  
cases must tmax    s qi  a    thus    s qi   b      s qi   a tmax    
theorem    consider stppu p stpus       obtained cutting p respectively
level     applying pc  without finding inconsistencies  dynamicallycontrollable
success  consider stpu p      merge t        
then  merge t        fail
p    dynamically controllable
viable dynamic strategy every projection p p roj p      
opt pi     opt pi         p   pref  s pi      opt pi   
otherwise pref  s pi        
proof  following constructive proof which  assuming merge failed  strategy
s  satisfying requirements theorem  defined 
first notice p roj p        p roj t    fact  line   merge  p    initialized

  merge changes requirement intervals leaving contingent intervals unaltered 
furthermore  p roj t      p roj t    seen using first claim theorem  
section   
let      viable dynamic execution strategies obtained running dc execute respectively      now  since p roj t      p roj t    projections
mapped two  possibly different  schedules  one   one      every projection
pi p roj p      every executable b  notice     pi   b exists equal
   pi   b   thus define history b  which recall set durations contingent events finished prior b  new strategy s pi   b      pi   b every
projection pi p roj p        notice     pi   b defined history b pi contains
duration mapped preference exactly equal thus p cannot projection
    
consider define depending case ab constraint
    
constraint ab follow unordered follow      cases  merge
change interval ab  leaving  
let us first analyze scenario ab follow case stpus 
case  execution b always follow contingent time point c
problems  thus  every projection p p roj p       s p   b     since
problems dynamically controllable  p   q       p     q           furthermore 
since path consistency enforced problems  constraints minimal
form  see section     is  every value ab  p   q    resp   p     q      
situation  resp       t  sol p   ab   ab   finally  since
p roj t      p roj t    must  p     q       p   q   
next consider scenario ab unordered case      let us start
proving that  case  must  p      q       p      first  show
   

firossi   v enable    yorke  s mith

p   p   definition  p   situation p p roj t     
schedule t  sol p   ab   p     since p roj t     
p roj t    p    p   q    next let us prove must   q      notice
wait induces partition situations two sets  that  every
contingent point c  ac     contingent point c     ac    
first case  contingent events occurred expiration wait
b executed ta    where ta execution time a   second
case safe execute b ta     given p roj t      p roj t    b
constrained follow execution every contingent time point      must
projections    belong first set partition thus q      
cases is  hence  sufficient define new strategy follows  projections 
pi   pj p roj p       s pi    b    s pj    b  s pi   b    s pj   b  
 s     pi   b  s     pi   b exists  otherwise  s pi   b    s pj   b    s    pi   b   assignment
guarantees identify projections constraints mapped preferences     s     pi   b
exists thus pi p roj t       otherwise projections p roj t  
p roj t      
constraint ab precede case      b must precede contingent timepoint c  means assignment b corresponding value  p   q    resp 
 p     q       extended complete solution projection p roj t    resp 
p roj t        interval  p    q     is  fact  obtained merge  intersecting two intervals 
since assuming merge failed  intersection cannot empty  line  
figure      can  thus  example  define follows  pair projections
pi   pj p roj p       s pi    b    s pj    b  s pi   b     s pj   b     p   
constraint ab unordered unordered precede      first let us recall
result applying merge interval  p     q      p    p   q     min q   q     
wait t    max t   t      since  hypothesis  merge failed  must   q  
 line    figure    
notice that  due semi convexity preference functions  p p     fact  b
executed ta   p  where ta time executed 
contingent time points b wait occurred  let us indicate x mlb

     
 resp  x  
mlb   maximum lower bound ac constraint  resp 

  
b wait c  must p xmlb  resp  p   xmlb    however due
semi convexity preference functions x mlb x  
mlb  
case define strategy follows  pair projections pi   pj
p roj p        s pi    b   s pj    b  s pi   b    s pj   b   max  s     pi   b  
 s    pi   b   whenever  s     pi   b defined  otherwise  s pi   b   s pj   b    s    pi   b  
lemma   max  s     pi   b    s    pi   b   t    hence  s pi   b     s pj   b  
 p    q     
let us consider preferences induced constraints assignment  first
let us consider case max  s     pi   b    s    pi   b      s     pi   b   since   
dynamic strategy    assignment identify projections preference     
instead max  s     pi   b    s    pi   b      s    pi   b   must  s    pi   b    s     pi   b  
   

fiu ncertainty

soft temporal constraint problems

however know  lemma    s     pi   b t   t   s    pi   b t   
implies  s    pi   b  p     t    thus assignment preference  
   finally   s     pi   b defined  noted above  pi   p roj t      thus
opt pi      since theorem   section   p p roj t   opt pi  
   thus   s pi   b   s pj   b    s    pi   b   which  assignment   identifies
preferences   opt pi   
shown that  merge fail  dynamic strategy  with
required additional properties  certifies p   dynamically controllable 
assume  instead  merge fails constraint  two cases
happen  first one ab precede case     p   q    p     q     
    proven  morris et al          projection ab viable dynamic strategy
 p   q   projection ab viable dynamic strategy     p     q      
dynamic viable strategies give optimal solutions projections optimal preference
equal   dynamic viable strategies    give optimal solutions projections
optimal preference equal      since projections    subset  
 p   q    p     q        strategy either optimal projection
   vice versa 
second case occurs merge fails constraint ab either unordered
case    unordered case precede case     
cases failure due fact  t   q    t     q          must either q     
q   t     upper bound interval ab q    must least
contingent time point c executing b q    either inconsistent
assignment c gives preference lower      side  wait
constraint ab must least contingent time point c   executing b
either inconsistent optimal future occurrences c 
way define viable dynamic strategy simultaneously optimal projections optimal
value equal optimal value       
lemma    useful proof theorem     consider strategies        defined
theorem    
   projection p      pi   pref  s pi    pref  s    pi    every projection  pz  
     pref  s pz        
   constraint ab   s pi   b t   
proof 
   obvious  since cases either  s p   b    s    pi   b  s pi   b    s     pi    b
pref  s     pi    pref  s    pi    since every executable b  s     pi   b      moreover 
every projection pz      every executable b   s pz   b    s     pz   b  
   derives directly fact either  s p   b    s    pi   b  s pi   b    s     pi   b
lemma     

   

firossi   v enable    yorke  s mith

theorem    consider stppu p every preference level    define stpu obtained
cutting p   applying pc dynamicallycontrollable  assume  
dc  consider stpu p  
p   merge merge       merge merge t min   min       min                 
min minimum preference constraint p  assume that  applied  merge
always returned consistent stpu  then  viable dynamic strategy s  p
p roj p    opt pi   s pi   optimal solution pi   otherwise pref  s pi        
proof  prove theorem induction  first  notice that  construction p roj  t min    
p roj p    allows us conclude p roj p     p roj p    since  every time merge
applied  new stpu contingent constraints stpu given first argument 
now  since min dynamically controllable viable dynamic strategies  say min
min  pi   optimal opt pi     min and  otherwise  pref  s pi    min  
consider p min     merge  t min  t min       theorem     know
strategy  min      min     pi   optimal solution pi opt pi   min    
pref  s pi    min     otherwise 
let us assume stpu p min  k   defined hypothesis  satisfies thesis
p min  k     defined hypothesis  min   k       not  notice
implies strategy  min  k   min  k  pi   optimal solution pi
opt pi   min   k pref  s pi    min   k projections  since min  
k       then  hypothesis min  k   dc  moreover  construction 
p min  k    merge  p min  k  t min  k      since merge doesnt fail  thus  using theorem   
using strategy min  k p min  k construction theorem     lemma   
obtain dynamic strategy  min  k     every projection pi   pref  s min  k    pi   
pref  s min  k  pi    min  k    pj   optimal solution projections p j
opt pj     min   k     pref  s pj    min   k     projections 
allows us conclude min  k    ph   optimal solution projections p h
opt ph   min   k      contradiction assumption p min  k   doesnt satisfy
thesis theorem   
theorem    given stppu p  execution algorithm best dc p terminates 
proof  assume preference set discretized finite number different
preferences  best dc starts lowest preference cuts level p  if  given level 
stpu obtained consistent dynamically controllable merging procedure fails 
best dc stops level  assume  instead  that  moves preference ordering 
none events occur  however certain point cutting level higher
maximum preference function  or outside preference set  case
cutting problem give inconsistent stp  
theorem    given stppu p input  best dc terminates line   iff     p
 dc 
proof    assume best dc terminates line    then  stpu obtained cutting p
minimum preference  min   constraint dc  however cutting minimum
   

fiu ncertainty

soft temporal constraint problems

preference constraint preference level   gives stpu  theorem   
conclude p  dc   and  thus  odc 
  assume p  dc preferences    cutting p minimum preference
min cannot give dynamically controllable problem  otherwise  p would min  dc  hence 
best dc exit line     
theorem    given stppu p input  best dc terminates line    iff p odc 
proof    assume best dc terminates line    considering preference level   then 
stpu q obtained cutting stppu p level path consistent  immediately conclude projection p p roj pi   opt pi    
since best dc terminate before  must assume preference   
tests  path consistency  dynamic controllability  merge  successful 
consider stpu p   obtained end iteration corresponding preference
level    easy see p   satisfies hypothesis theorem     allows us
conclude viable dynamic strategy every projection p  
opt pi      s pi   optimal solution pi   however since know projections
p opt pi       allows us conclude p odc 
  p odc viable strategy every pair projections  p   pj
p roj p    executable b   s p    b    s pj    b  s pi   b    s pj   b
s pi   optimal solution pi s pj   optimal solution pj  
theorem    know best dc cannot stop line   
let us consider line    show best dc sets  dc true line p
cannot odc  fact condition setting  dc true line    stpu obtained
cutting p preference level path consistent dynamically controllable  means
projections  e g  pj   p opt pj       however  dynamic strategy
set projections  thus  p cannot odc 
let us consider line     show that  p odc best dc cannot set  dc true 
best dc sets  dc true merge failed  using theorem     conclude
dynamic viable strategy every projection p   p    remember p roj p      
p roj p    s pi   optimal solution opt pi     however  know projections
p optimal preference equal  since assuming best dc stopping line   
     thus  p cannot odc  
theorem    given stppu p input  best dc stops lines       preference level iff p
     dc odc 
proof    assume best dc sets  dc true line     considering preference level
  thus  stpu obtained cutting p level path consistent dc  however since
must first preference level happens  otherwise best dc would stopped
sooner  conclude iteration preference level   successful  considering
p   using theorem    conclude viable dynamic strategy that 
every projection p   pi   opt pi     s pi   optimal solution pi
pref  s pi      otherwise  definition   dynamic controllability 
best dc terminates line     theorem    theorem    conclude that 
viable dynamic strategy every projection p   p   opt pi    
   

firossi   v enable    yorke  s mith

s pi   optimal solution pi pref  s pi      otherwise  strategy
guaranteeing optimality projections optimal preference   again  p   dc 
  p  dc    theorem     best dc stop line    p
 dc  odc    theorem     best dc stop line    
theorem     best dc always terminates  must stop line        
theorem    complexity determining odc highest preference level  dc
stppu n variables  bounded number preference levels l o n      
proof  consider pseudocode algorithm best dc figure    
complexity min  cut p   line   o n     since every constraint must considered 
o n    constraints  constraint time finding interval
elements mapped preference min constant  complexity checking stpu obtained dc o n     thus  lines      always performed  overall complexity
o n     lines      clearly  take constant time 
let us consider fixed preference level compute cost complete iteration  
 line     complexity  cut p   o n     
 line     complexity applying pc testing path consistency o n      see section     
 dechter et al          
 line     complexity testing dc using dynamicallycontrollable o n       see section   morris muscettola        
 line     constant time 
 line        complexity merge o n      since o n    constraints must
considered constraint merging two intervals constant cost 
 line     constant time 
conclude complexity complete iteration given preference level o n     
worst case  cycle performed   times  can  thus  conclude total
complexity best dc o n     since complexity operations performed lines      
constant   

references
badaloni  s     giacomin  m          flexible temporal constraints   th conference information processing management uncertainty knowledge based system  ipmu       
pp           
bistarelli  s   montanari  u     rossi  f          semiring based constraint solving optimization  journal acm                
bresina  j   jonsson  a   morris  p     rajan  k          activity planning mars exploration
rovers    th international conference automated planning scheduling  icaps
       pp       
   

fiu ncertainty

soft temporal constraint problems

coggiola  m   shi  z     young  s          airborne deployment instrument real time
analysis single aerosol particles  aerosol science technology           
dearden  r   meuleau  n   ramakrishnan  s   smith  d     washington  r          contingency
planning planetary rovers   rd intl  workshop planning scheduling space 
dechter  r   meiri  i     pearl  j          temporal constraint networks  artificial intelligence 
              
dubois  d   fargier  h     prade  h          flexible constraint satisfaction problems application scheduling problems  tech  rep  report irit       r  i r i t   universite p 
sabatier 
dubois  d   fargier  h     prade  h          fuzzy constraints job shop scheduling  journal
intelligent manufacturing            
dubois  d   fargier  h     prade  h       a   fuzzy scheduling  modelling flexible constraints
vs  coping incomplete knowledge  european journal operational research      
       
dubois  d   hadjali  a     prade  h       b   fuzziness uncertainty temporal reasoning 
journal universal computer science             
dubois  d     prade  h          review fuzzy set aggregation connectives  journal information science                 
field  p   hogan  r   brown  p   illingworth  a   choularton  t   kaye  p   hirst  e     greenaway 
r          simultaneous radar aircraft observations mixed phase cloud    m
scale  quarterly journal royal meteorological society                
floyd  r  w          algorithm     shortest path  communication acm             
frank  j   jonsson  a   morris  r     smith  d          planning scheduling fleets earth
observing satellites   th intl  symposium ai  robotics  automation space  isairas    
khatib  l   morris  p   morris  r  a     rossi  f          temporal constraint reasoning
preferences  nebel  b   ed      th international joint conference artificial intelligence 
 ijcai        pp          morgan kaufmann 
lau  h  c   ou  t     sim  m          robust temporal constraint networks  proc    th ieee
conf  tools artificial intelligence  ictai     pp       hong kong 
leiserson  c  e     saxe  j  b          mixed integer linear programming problem
efficiently solvable  journal algorithms               
morris  p   morris  r   khatib  l   ramakrishnan  s     bachmann  a          strategies global
optimization temporal preferences  wallace  m   ed    proceeding   th international conference principles practice constraint programming  cp      vol      
lecture notes computer science  pp          springer 
   

firossi   v enable    yorke  s mith

morris  p  h   muscettola  n     vidal  t          dynamic control plans temporal uncertainty  nebel  b   ed      th international joint conference artificial intelligence
 ijcai        pp          morgan kaufmann 
morris  p  h     muscettola  n          managing temporal uncertainty waypoint controllability  dean  t   ed      th international joint conference artificial intelligence
 ijcai     pp            morgan kaufmann 
morris  p  h     muscettola  n          temporal dynamic controllability revisited    th national
conference artificial intelligence  aaai        pp            aaai press   mit
press 
morris  r  a   morris  p  h   khatib  l     yorke smith  n          temporal planning preferences probabilities  icaps   workshop constraint programming planning
scheduling 
muscettola  n   morris  p  h   pell  b     smith  b  d          issues temporal reasoning
autonomous control systems  agents  pp         
peintner  b     pollack  m  e          low cost addition preferences dtps tcsps 
mcguinness  d  l     ferguson  g   eds      th national conference artificial intelligence  pp          aaai press   mit press 
peintner  b     pollack  m  e          anytime  complete algorithm finding utilitarian optimal
solutions stpps    th national conference artificial intelligence  aaai        pp 
        aaai press   mit press 
pini  m  s   rossi  f     venable  k  b          possibility theory reasoning uncertain
soft constraints  godo  l   ed     th european conference symbolic quantitative
approaches reasoning uncertainty  ecsqaru        vol       lncs  pp     
     springer 
rajan  k   bernard  d  e   dorais  g   gamble  e  b   kanefsky  b   kurien  j   millar  w   muscettola  n   nayak  p  p   rouquette  n  f   smith  b  d   taylor  w     tung  y  w         
remote agent  autonomous control system new millennium  horn  w   ed   
  th european conference artificial intelligence  ecai       pp          ios press 
rossi  f   sperduti  a   venable  k   khatib  l   morris  p     morris  r          learning solving soft temporal constraints  experimental study  van hentenryck  p   ed    principles
practice constraint programming   th international conference  cp        vol      
lncs  pp          springer 
rossi  f   venable  k  b     yorke smith  n          controllability soft temporal constraint
problems    th international conference principles practice constraint programming  cp      vol       lncs  pp         
rossi  f   venable  k     yorke smith  n          preferences uncertainty simple temporal problems  proc  cp   workshop  online       international workshop online
constraints solving   handling change uncertainty  
   

fiu ncertainty

soft temporal constraint problems

ruttkay  z          fuzzy constraint satisfaction  proceedings  st ieee conference evolutionary computing  pp         orlando 
schiex  t          possibilistic constraint satisfaction problems handle soft constraints   dubois  d     wellman  m  p   eds     th annual conference uncertainty
artificial intelligence  uai     pp          morgan kaufmann 
shostak  r  e          deciding linear inequalities computing loop residues  journal
acm                
stergiou  k     koubarakis  m          backtracking algorithms disjunctions temporal constraints  artificial intelligence                
tsamardinos  i          probabilistic approach robust execution temporal plans uncertainty  vlahavas  i  p     spyropoulos  c  d   eds    methods applications artificial
intelligence  second hellenic conference ai  setn        vol       lncs  pp    
     springer 
tsamardinos  i   pollack  m  e     ramakrishnan  s       a   assessing probability legal execution plans temporal uncertainty  workshop planning uncertainty
incomplete information thirteenth international conference automated planning
scheduling  icaps       
tsamardinos  i   vidal  t     pollack  m  e       b   ctp  new constraint based formalism
conditional  temporal planning  constraints               
venable  k     yorke smith  n          simple temporal problems preferences uncertainty  doctoral consortium   th international conference automated planning
scheduling  icaps        aaai press 
venable  k     yorke smith  n          disjunctive temporal planning uncertainty    th
international joint conference artificial intelligence  ijcai        pp          morgan
kaufmann 
vidal  t     fargier  h          handling contingency temporal constraint networks  consistency controllabilities  journal experimental theoretical artificial intelligence 
            
vidal  t     ghallab  m          dealing uncertain durations temporal constraint networks
dedicated planning  wahlster  w   ed      th european conference artificial intelligence  ecai     pp        john wiley sons 
vila  l     godo  l          fuzzy temporal constraint networks  mathware soft computing 
          
xu  l     choueiry  b  y          new efficient algorithm solving simple temporal problem    th intl  symposium temporal representation reasoning fourth intl 
conf  temporal logic  time ictp     pp         

   

firossi   v enable    yorke  s mith

yorke smith  n   venable  k  b     rossi  f          temporal reasoning preferences uncertainty  gottlob  g     walsh  t   eds      th international joint conference artificial
intelligence  ijcai     pp            morgan kaufmann 
zadeh  l  a          calculus fuzzy restrictions  fuzzy sets applications cognitive
decision processes      

   


