journal of artificial intelligence research                  

submitted        published      

solving weighted constraint satisfaction problems with
memetic exact hybrid algorithms
jose e  gallardo
carlos cotta
antonio j  fernandez

pepeg lcc uma es
ccottap lcc uma es
afdez lcc uma es

dept  lenguajes y ciencias de la computacion
universidad de malaga  etsi informatica
campus de teatinos         malaga  spain

abstract
a weighted constraint satisfaction problem  wcsp  is a constraint satisfaction problem
in which preferences among solutions can be expressed  bucket elimination is a complete
technique commonly used to solve this kind of constraint satisfaction problem  when the
memory required to apply bucket elimination is too high  a heuristic method based on
it  denominated mini buckets  can be used to calculate bounds for the optimal solution 
nevertheless  the curse of dimensionality makes these techniques impractical on large scale
problems  in response to this situation  we present a memetic algorithm for wcsps in
which bucket elimination is used as a mechanism for recombining solutions  providing the
best possible child from the parental set  subsequently  a multi level model in which this
exact metaheuristic hybrid is further hybridized with branch and bound techniques and
mini buckets is studied  as a case study  we have applied these algorithms to the resolution
of the maximum density still life problem  a hard constraint optimization problem based
on conways game of life  the resulting algorithm consistently finds optimal patterns for
up to date solved instances in less time than current approaches  moreover  it is shown
that this proposal provides new best known solutions for very large instances 

   introduction
many real problems can be formulated as constraint satisfaction problems  csps  in which
solutions are assignments to a set of variables  each variable taking values from a certain
domain   and in which there exists a collection of constraints that restrict the assignment of
particular values or combination of values  solving a csp means finding a feasible assignment
of values to variables  i e   one where all the constraints are satisfied  however  a wide range
of problems cannot be posed this way  either because the problem is over constrained  and
thus there is no solution  or because the problem has multiple solutions and the objective is
to find the best one according to some optimality criterion  in both cases  the problem might
be handled from an optimization point of view by associating preferences to the constraints 
this kind of csp in which preferences among constraints solutions can be expressed are
called weighted constraint satisfaction problems  wcsps   schiex  fargier    verfaillie 
      bistarelli  montanari    rossi         solving a wcsp means optimally satisfying
a set of weighted constraints  this clearly enlarges the scope of csps  many practical
problems can be modeled as wcsps  such as for instance  radio frequency assignment 
scheduling and cellular manufacturing  among others  cabon  de givry  lobjois  schiex   
warners        khemmoudj   bennaceur        nonobe   ibaraki        
c
    
ai access foundation  all rights reserved 

figallardo  cotta    fernandez

complete methods  like branch and bound  lawler   wood        and bucket elimination  dechter         a technique which originated in the early work of bertele and
brioschi        on nonserial dynamic programming  are two of the most popular ways to
attack wcsps  however  although the picture of a csp is very general  it should be noted
that the inclusion of preferences in its constraints makes a particular wcsp very specific
and as a consequence wcsps have to be tackled using very specialized algorithms that
were specifically designed  freuder   wallace        verfaillie  lematre    schiex       
kask   detcher        lematre  verfaillie  bourreau    laburthe        larrosa   schiex 
      gelain  pini  rossi    venable        khemmoudj   bennaceur        marinescu
  dechter         moreover  general techniques require a very large computational effort
 in time  memory or both  to solve many wcsps  due to their size and complexity  and
therefore are impractical in many cases  this can be alleviated using heuristic methods 
e g   beam search  bs   barr   feigenbaum        and mini buckets  dechter         for
branch and bound and bucket elimination respectively  however  in large scale problems 
the high computational cost is still evident 
in this context the use of alternative techniques must be considered to overcome the
limitations of general techniques  for instance  evolutionary algorithms  back        back 
fogel    michalewicz        are powerful heuristics for optimization problems based on
the principles of natural evolution  which are flexible enough to be deployed in a wide
range of problems  however  this generality reduces their competitiveness  unless domain
knowledge is also incorporated  this need for exploiting domain knowledge in optimization
methods has been repeatedly shown  wolpert   macready        culberson         and
memetic algorithms  moscato   cotta              krasnogor   smith        represent
one of the most successful responses to this need  hart  krasnogor    smith         this
paper explores different ways of hybridizing branch and bound bucket elimination  and
their corresponding heuristic methods  and memetic algorithms  combining their search
capabilities in a synergetic way 
the hybrid techniques proposed here can be used as general problem solvers for wcsps 
note that they are essentially heuristic in nature and hence they cannot provide optimality
proofs for the solutions they obtain  notice however that they can probably provide optimal
or near optimal solutions to a wide range of wcsps  furthermore  these hybrid techniques
are less time consuming than the general methods involved in them  and can thus be applied
to larger problem instances  in order to experimentally evaluate the hybrid techniques  we
have tackled the maximum density still life problem  a very hard combinatorial optimization problem which is also a prime example of a weighted constraint optimization problem 
no polynomial time algorithm is known to solve this problem  although  to the best of our
knowledge  the problem has not yet been proven to be np hard  for these reasons  it is
not surprising that this problem has attracted the interest of the constraint programming
community  and has been central in the development and assessment of sophisticated techniques such as bucket elimination  indeed  it constitutes an excellent test bed for different
optimization techniques  and has been included in the csplib  repository  a web page 
keeps record of up to date results 
   http   www csplib org
   http   www ai sri com  nysmith life

   

fisolving wcsps with memetic exact hybrid algorithms

   preliminaries
in this section  we briefly introduce concepts and techniques that will be used in the rest
of the paper  to this end  we first define weighted constraint satisfaction problems  as well
as the techniques of bucket elimination and mini buckets  subsequently  we describe beam
search  a heuristic tree search algorithm derived from branch and bound  finally  memetic
algorithms are presented  for the sake of notational simplicity  where appropriate we stick
to the notation of larrosa et al               
    weighted constraint satisfaction problems
a weighted constraint satisfaction problem  wcsp   schiex et al         bistarelli et al  
      is a constraint satisfaction problem  csp  in which preferences among solutions can be
expressed  formally  a wcsp can be defined by a tuple  x   d  f   where d    d         dn  
is a set of finite domains  x    x         xn   is a set of variables taking values from their finite
domains  di is the domain of variable xi   and f is a set of cost functions  also called soft
constraints or weighted constraints  used to declare preferences among possible solutions 
variable correctly assigned receive finite costs that express their degree of preference  the
lower the value the better the preference  and variables not correctly assigned receive cost
  note that each f  f is defined over a subset of variables  var f    x   called
p its scope 
the objective function f is defined as the sum of all functions in f  i e   f   f f f  
the assignment of value vi  di to variable xi is noted xi   vi   a partial assignment
of m   n variables is a tuple t    xi    v    xi    v         xim   vm   where ij              n 
are all different  a complete assignment of all variables with values in their domains that
satisfies every soft constraint  i e   with a finite valuation for f   represents a solution to the
wcsp  the optimization goal is to find a solution that minimizes this objective function 
    bucket elimination
bucket elimination  be   dechter        is a generic technique suitable for many automated
reasoning and optimization problems and  in particular  for solving wcsp  the functioning
of be is based upon the following two operators over functions  larrosa et al         
 the sum of two functions f and g  denoted  f   g   is a new function with scope
var f  var g  which returns for each tuple the sum of costs of f and g  i e    f  g  t   
f  t    g t  
 the elimination of variable xi from f   denoted f  xi   is a new function with scope
var f     xi   which returns for each tuple t the minimum cost extension of t to xi  
 f  xi   t    minvdi  f  t   xi   v     where t   xi   v  means the extension of the
assignment t with the assignment of value v to variable xi   observe that when f is a
unary function  i e   it has arity one   a constant is obtained upon elimination of the
only variable in its scope 
without losing of generality  let us assume a lexicographic ordering for the variables in
x   i e   o    x    x         xn    figure   shows pseudo code of the be algorithm for solving
a wcsp instance  which returns the optimal cost in f and one optimal assignment in
   

figallardo  cotta    fernandez

bucket elimination for a wcsp  x   d  f  
  
  
  
  
  
  
  
  
  
    
    

function be x   d  f 
for i    n downto   do
bi     f
p  f   xi  var f   
gi      s
f bi f    xi
f     f  gi     bi
end for
t    
for i      to n do p
v    argminadi    f bi f   t   xi   a   
t    t   xi   v 
end for
return f  t 
end function

figure    the general template  adapted from larrosa and morancho         of bucket
elimination for a wcsp  x   d  f   

t  observe that  initially  be eliminates in decreasing order one variable xi  x in each
iteration of the loop comprising lines      this is done by computing firstly the bucket bi of
variable xi as the set of all cost functions in f having xi in their scope  then  a new function
gi is defined as the sum of all these functions in bi in which variable xi has been eliminated 
finally  f is updated by removing the functions involving xi  i e   those in bi   and adding
the new function that does not contain xi   the consequence is that xi does not exist in f
but the value of the optimal cost is preserved  the elimination of x  produces a function
with an empty scope  i e   a constant  which is the optimal cost of the problem  then  in
lines       be generates an optimal assignment of variables by considering these in the order
imposed by o  this is done by starting from an empty assignment t and assigning to xi the
best value of the extension of t  with respect to the sum of functions in bi  argmina  f  a  
represents the value of a producing the minimum f  a   
note that be has exponential space complexity because  in general  the result of summing functions or eliminating variables cannot be expressed intensionally by algebraic expressions and  as a consequence  intermediate results have to be collected extensionally in
tables  to be precise  the complexity of be depends on the problem structure  as captured
by its constraint graph g  and the ordering o  according to larrosa and morancho        


the complexity of be along ordering o is time  q  n  dw  o      and space  n  dw  o    
where d is the largest domain size  q is the cost of evaluating cost functions  usually assumed       and w  o  is the induced width of the graph along ordering o  which describes
the largest clique created in the graph by bucket elimination  and which corresponds to
the largest scope of a function recorded by the algorithm  although finding the optimal
ordering is np hard  arnborg         heuristics and approximation algorithms have been
developed for this task  check the work of dechter        for details 
   

fisolving wcsps with memetic exact hybrid algorithms

    mini buckets
the main drawback of be is that it requires exponential space to store functions extensionally  when this complexity is too high  the solution can be approximated using the
mini bucket  mb  approach presented by dechter        and detcher and rish         recall that  in order to eliminate variable xi   with
p its corresponding bucket bi    fi            fim   
be calculates a new cost function gi     f bi f    xi   whose time and space complexity increases with the cardinality of gi   i e   with the size of the set f bi var f     xi   
this complexity can be decreased by approximating the function gi with a set of smallerarity functions  the basic idea is to partition bucket bi into k so called mini buckets
bi            bik   such that the number of variables in the scope of each bij is bounded by
a parameter  afterwards 
a set of k cost functions with the reduced arity sought can be
p
defined as gij     f bi f    xi   j           k  and the required approximation to gi can be
j
p
p
p
computed as the sum gi      j k gij     j k    f bi f    xi   
j
note that the minimization computed in gi by the  operator has been migrated inside
the sum  since  in general  for any two non negative functions f   x  and f   x   minx  f   x  
f   x     minx f   x    minx f   x   it follows that gi  is a lower bound on gi   therefore  if
variable elimination is performed using approximated cost functions  it provides a lower
bound for the optimal cost requiring less computation than be  notice that the described
approach provides a family of under estimating heuristic functions whose complexity and
accuracy is parameterized by the maximum number of variables allowed in each mini bucket 
    beam search
branch and bound  bb   lawler   wood        is a general tree search method for solving
combinatorial optimization problems  tree search methods are constructive  in the sense
that they work on partial solutions  in this way  tree search methods start with an empty
solution that is incrementally extended by adding components to it  the way that partial
solutions can be extended depends on the constraints imposed by the problem being solved 
the solution construction mechanism maps the search space to a tree structure  in such a
way that a path from the root of the tree to a leaf node corresponds to the construction
of a solution  in order to efficiently explore this search tree  bb algorithms maintain an
upper bound and estimate lower bounds for partially constructed solutions  assuming a
minimization problem  the upper bound corresponds to the cost of the best solution found
so far  during the search process  a lower bound is computed for any partial solution
generated  estimating the cost of the best solution that can be constructed by extending
it  if this lower bound is greater than the current upper bound  solutions constructed by
extending it will not lead to an improvement  and thus all nodes descending from it can
be pruned from the search tree  clearly  the capability of the algorithm for pruning the
search tree depends on the existence of an accurate lower bound  which should also be
computationally inexpensive in order to be practical 
beam search  bs   barr   feigenbaum        algorithms are incomplete derivates of bb
algorithms  and are thus heuristic methods  essentially  bs works by extending every partial
solution from a set b  called the beam  in at most kext possible ways  each new partial
solution so generated is stored in a set b  when all solutions in b have been processed  the
algorithm constructs a new beam by selecting the best up to kbw  called the beam width 
   

figallardo  cotta    fernandez

solutions from b  clearly  a way of estimating the quality of partial solutions  such as a
lower bound  is needed for this 
an interesting peculiarity of bs is the way it extends in parallel a set of different partial
solutions in several possible ways  making it a particularly suitable tree search method to
be used in a hybrid collaborative framework  it can be used to provide periodically promising partial solutions to a population based search method such as a memetic algorithm  
gallardo  cotta  and fernandez        have shown that this kind of hybrid algorithms
can provide excellent results for some combinatorial optimization problems  we will subsequently present a hybrid tree search memetic algorithm for wcsps based on this idea 
    memetic algorithms
evolutionary algorithms  eas  are population based metaheuristic optimization methods
inspired by biological evolution  back et al          in order to explore the search space  the
ea maintains a set of solutions known as the population of individuals  these are usually
randomly initialized across the search space  although heuristics may also be used  after the
initialization  three different phases are iteratively performed until a termination condition
is reached  selection  reproduction  which encompasses recombination and mutation  and
replacement  in the context of eas  the objective function assigning values to each solution
is termed a fitness function  and is used to guide the search 
note that eas are black box optimization procedures in the sense that no knowledge
of the problem  apart from the fitness function  is used  the need to exploit problemknowledge has been repeatedly shown  wolpert   macready        culberson        however  different attempts have been made to answer this need  memetic algorithms  moscato
  cotta              krasnogor   smith         mas  are one of the most successful approaches to date  hart et al          like eas  mas are also population based metaheuristics  the main difference is that the components of the population  sometimes termed
agents in ma terminology  are not passive entities  rather  they are active entities that
cooperate and compete in order to find improved solutions 
there are many possible ways to implement mas  the most common implementation
consists of combining an ea with a procedure to perform a local search on some or all
solutions in the population during the main generation loop  cf  krasnogor   smith        
figure   shows the general outline of such a ma  px   pm and arity respectively refer to
the recombination probability  mutation probability and recombination arity  i e   number
of parents involved in recombination  it must be noted however that the ma paradigm
does not simply reduce itself to this particular scheme and there are different places  e g  
population initialization  genotype to phenotype mapping  evolutionary operators  etc  
where problem specific knowledge can be incorporated  in this work  in addition to using
tabu search  glover               ts  as a local search procedure within the ma  we have
designed an intelligent recombination operator that uses a relaxation of bucket elimination
in order to find the best solution that can be constructed from a set of parents without
introducing implicit mutation  i e   exogenous information  
   

fisolving wcsps with memetic exact hybrid algorithms

memetic algorithm
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    

function ma  px   pm   arity 
for i      to popsize do
pop i     random solution n 
pop i     local search pop i  
evaluate pop i  
end for
while no timeout do
for i      to offsize do
if recombination is performed  under px   then
for j      to arity do
parentj    select pop 
end for
offspring i      recombine parent    parent            parentarity  
else
offspring i      select pop 
end if
if mutation is performed  under pm   then
offspring i      mutate offspring i   
end if
offspring i      local search offspring i   
evaluate offspring i   
end for
pop    replace pop  offspring 
end while

figure    pseudo code of a memetic algorithm  ma   although different variants are possible with respect to this scheme  it broadly captures a typical algorithmic structure
of mas 

   a multi level memetic exact hybrid algorithm for wcsps
wcsps are very suitable for being tackled with evolutionary metaheuristics  obviously 
the quality of the results will greatly depend on how well knowledge of the problem is
incorporated into the search mechanism  our final goal is to present an algorithmic model
based on the hybridization of mas with exact techniques at two levels  within the ma  as
an embedded operator   and outside it  in a cooperative model   firstly  we will focus in the
next subsection on the first level of hybridization  which incorporates an exact technique
 namely be  within the ma as an embedded recombination operator  subsequently  we
will proceed to a second level of hybridization  in which the ma cooperates with a branchand bound based beam search algorithm that further uses the technique of mini buckets as
a lower bound  see figure    
   

figallardo  cotta    fernandez

ma

promising regions

bs
ga
ts
local
search

be

mb

crossover

lower
bound

upper bound

figure    schematic description of the proposed hybrid algorithm 
    optimal recombination with be
as previously mentioned  one of the phases that constitutes a typical ma is recombination
 i e   lines      in figure     in which some individuals in the population are combined with
the aim of obtaining improved individuals  for this purpose  different standard recombination operators have been proposed in the literature  see back et al          although those
blind operators are feasible from a computational point of view  they would perform poorly 
as no problem knowledge is being used  in the context of wcsps  we can resort to be in
order to achieve a sensible recombination of information 
even though the performance of be as an exact method for the resolution of wcsps
may be better than basic search based approaches  the corresponding time and space complexity can still be very high  making this technique unsuitable for large instances  in the
following  we explain how be can be used to implement an intelligent recombination operator for wcsps  such operator will implicitly explore the possible children of the solutions
being recombined  providing the best solution that can be constructed without introducing
implicit mutation  i e   exogenous information  cf  cotta   troya         note that this
use of bucket elimination is related to what is usually referred to as large neighborhood
search  ahuja  ergun  orlin    punnen        
for the sake of simplicity  let us assume that all variables in wcsp  x   d  f   have the
same domain  i e   d         dn    and let x    x    x         xn   and y    y    y         yn  
be two solutions to be recombined  and  zi   will be the value of variable zi   our operator will calculate the best solution that can be obtained by combining variables from
x and y without introducing information not present in any of the parents  this can
be achieved by restricting the domain of variables in be to values appearing in the configurations being recombined  the recombination operator becomes be x   d  f   where
d     x           xn     y           yn     applying this approach to a wcsp in which variables
may have different domains would require previously separating the set of variables x into
subsets of variables sharing the same domain 
    a beam search ma hybrid algorithm
in this subsection  we describe a hybrid tree search memetic algorithm for wcsps  this
algorithm combines  in a collaborative way  puchinger   raidl         a bs algorithm and a
ma  as noted previously  bs works by extending in parallel a set of different partial solutions
in several possible ways  and thus can be used to provide promising partial solutions to a
   

fisolving wcsps with memetic exact hybrid algorithms

hybrid algorithm for a wcsp
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    

function bs ma  x   d  kbw   km a  
sol    
b          
for i      to n do
b       
for s  b do
for a  di do
b      b     s   xi   a  
end for
end for
b    select best kbw nodes from b  
if  i   km a   then
initialize ma population with best popsize nodes from b  
run ma
sol    min  sol  ma solution 
end if
end for
return sol
end function
figure    hybrid algorithm for a wcsp 

population based search method such as a ma  the goal is to exploit the capability of bs
for identifying potentially good regions of the search space  and also to exploit the ma to
explore these regions  synergistically combining these two different approaches 
the proposed hybrid algorithm  that executes bs and the ma in an interleaved way  is
depicted in figure    in the pseudo code  a  possibly partial  solution for a wcsp instance
is represented by a vector of variables s    x    x            xi    i   n  where s   xi   a  stands
for the extension of partial solution s by assigning value a to its i th variable as noted
previously  the hybrid algorithm constructs a search tree  such that its leaves consist of
complete solutions and internal nodes at level i represent partially specified  up to the i th
variable  solutions  this tree is heuristically traversed in a breadth first way using a bs
algorithm with beam width kbw  i e   maintaining only the best kbw nodes at each level of
the tree   for the beam selection  line      a heuristic quality measure has to be defined for
partial solutions  whose value must be  if the partial solution is unfeasible  the algorithm
starts  line    with a totally unspecified solution  initially  only the bs part of the algorithm
is executed  during each iteration of bs  lines        a new variable is assigned for every
solution in the beam  line     the interleaved execution of the ma starts only when partial
solutions in the beam have at least km a variables  line      for each iteration of bs  the
best popsize solutions in the beam are selected  using the quality measure described above 
to initialize the population of the ma  line      since these are partial solutions  they must
be first converted into full solutions  e g   by completing remaining variables randomly 
   

figallardo  cotta    fernandez

after running the ma  its solution is used to update the incumbent solution  sol   and this
process is repeated until the search tree is exhausted 
    computing tight bounds with mini buckets
the performance of the bs component of the algorithm described in the previous section
will depend on the quality of the heuristic function used to estimate partial solutions  line
   of figure     in order to compute a tight  yet computationally inexpensive  lower bound
for the remanning part of the solution we can resort to mini buckets  mb   as described by
kask and detcher         the intermediate functions created by applying the mb scheme
can be used as a general mechanism to compute heuristic functions that estimate the best
cost of yet unassigned variables in partial solutions  to this end  mb must be run as a
preprocessing stage  using the reverse order in which the search will instantiate variables 
the set of augmented buckets computed during this process can be used as estimations of
the best cost extension to partial solutions  check the work of kask   detcher        for
details  

   tackling the maximum density still life problem
previously proposed algorithms are general enough to be used in many wcsps in which
be can be executed  in this section we present an application case study on the maximum
density still life problem  mdslp   this problem is defined in the context of the game of life
proposed by john h  conway in the   s and divulged by martin gardner  gardner        
so let us first describe this game  it is played on an infinite checkerboard in which the only
player places checkers on some of its squares  each square on the board is called a cell and
has eight neighbors  the eight cells that share one or two corners with it  a cell is alive if
there is a checker on it  and is dead otherwise  the contents of the board evolve iteratively 
in such a way that the state at time t determines the state at time t     according to some
simple rules      a live cell remains alive if it has two or three live neighbors  otherwise it
dies  and     a dead cell becomes alive it is has exactly three live neighbors 
the simple rules of the game of life can nevertheless generate an incredibly complex
dynamics  to better understand the mdslp  let us define a stable pattern  also called a
still life  as a board configuration that does not change over time  and let the density of a
region be its percentage of living cells  the mdslp in an nn grid consists of finding a still
life of maximum density  elkies        has shown that  for infinite boards  the maximum
density is      for finite size  no exact formula is known   in this paper  we are concerned
with the mdslp and finite patterns  that is  finding maximal n  n still lifes 
    related work
the mdslp has been tackled in the literature using different approaches  bosch and trick
       compared different formulations for the mdslp using integer programming  ip  and
constraint programming  cp   their best results were obtained with a hybrid algorithm
mixing the two approaches  they were able to solve the cases for n      and n     
in about   and   days of cpu time respectively  smith        used a pure constraint
programming approach to address the problem  however  only instances up to n     
   

fisolving wcsps with memetic exact hybrid algorithms

table    best experimental results reported by bosch and trick         cp ip   larrosa
and morancho         be  and larrosa et al          hyb be  for solving the
mdslp  time is indicated in seconds 

optimum
cp ip
be
hyb be

  
  
     
    
 

  
  
     
     
 

  
  
      
   
 

  
   
      

  
   

  
   

  
   

  
   

  
   

  

 

    

    

     

      

could be solved  the best results for this problem were reported by larrosa and morancho
       and larrosa et al          showing the usefulness of bucket elimination  be   an
exact technique based on variable elimination and commonly used for solving constraint
satisfaction problems described in detail in section      their basic approach could solve
the problem for n      in about     seconds  further improvements increased the boundary
to n      in about twice as much time  recently  cheng and yap              have tackled
the problem via the use of ad hoc global case constraints  but their results are comparable
to ip cp hybrids  and thus cannot be compared to the ones obtained previously by larrosa
et al 
table   summarizes experimental results for current approaches used to tackle the mdslp  reporting the computational times of the hybrid ip cp algorithm of bosch and trick
        the be approach of larrosa and morancho        and the be search hybrid of
larrosa et al          although different computational platforms may have been used for
these experiments  the trends are very clear and give a clear indication of the potential of
the different approaches  it should be noted that all these techniques applied to the mdslp
are exact approaches  they are inherently limited for increasing problem sizes and their
capabilities as anytime algorithms are unclear  to tackle this problem  we recently proposed
the use of hybrid methods combining exact and metaheuristic approaches  we considered
the hybridization of be with evolutionary algorithms  a stochastic population based search
method  endowed with tabu search  a local search method  gallardo  cotta    fernandez 
    a   the resulting algorithm was a memetic algorithm  ma  see section       it used
be as a mechanism for recombining solutions  providing the best possible child from the
parental set  experimental tests indicated that the algorithm provided optimal or nearoptimal results at an acceptable computational cost  subsequently  we studied extended
multi level models in which our previous hybrid algorithm was further hybridized with
a branch and bound derivative  namely beam search  bs  gallardo  cotta    fernandez 
    b   studies on the influence that variable clustering and multi parent recombination
have on the performance of the algorithm were also conducted  the results indicated that
variable clustering was detrimental for this problem but also that multi parent recombination improves the performance of the algorithm  to the best of our knowledge  these are
the only heuristic approaches applied to this problem to date 
in this section  our previous research on this problem is included and extended  as
new contributions  we have redone all the experiments using an improved implementation
   

figallardo  cotta    fernandez

of the bucket elimination crossover operator  described in section      additionally  we
present a more extensive experimental analysis of our bs ma hybrid described in  gallardo
et al       b   analyzing the sensitivity of its parameters  we also propose a new hybrid
algorithm that uses the technique of mini buckets to further improve the lower bounds of
the partial solutions considered in the bs part of the hybrid algorithm  this new algorithm
is obtained from the hybridization  at different levels  of complete solving techniques  be  
incomplete deterministic methods  bs and mb  and stochastic algorithms  mas   an
experimental analysis shows that this new proposal consistently finds optimal solutions for
mdslp instances up to n      in considerably less time than all the previous approaches
reported in the literature  finally  in order to test the scalability of our approach  this novel
hybrid algorithm has been run on very large instances of the mdslp for which an optimal
solution is currently unknown  the results were very successful  as the algorithm performed
at the state of the art level  providing solutions that are equal or better than the best
ones reported to date in the literature  for readability reasons  many particular technical
details of the different algorithms for the mdslp are omitted  but are fully described in an
accompanying report  gallardo  cotta    fernandez         at any rate  a model of the
mdslp as a wcsp is presented in appendix a 
    a memetic algorithm for the mdslp
first of all  we develop a ma for the mdslp  in this ma  an n  n board is represented as
a binary n  n matrix  based on the stratified gradient provided by a penalty based fitness
function that measures the number of violated constraints and their distance to feasibility
 prioritizing the former over the latter   an efficient local search strategy that explores the
set of solutions obtained by flipping exactly one cell in a configuration was devised  in order
to escape from local optima  a tabu search scheme is used  line    in figure    
the ma uses be as a crossover operation as described in section      line    in figure    
one interesting property of the operator described is that it is not limited to recombining
only two board configurations  but can instead be generalized to recombine any number of
them by considering domains consisting of all the values a variable has in any of the parents 
this multi parental capability has also been explored in the rest of this paper 
to evaluate the usefulness of the described hybrid recombination operator  a set of experiments for problem sizes from n      up to n      has been realized  recall that optimal
solutions to the mdslp are known up to n        the experiments have been performed
using a steady state evolutionary algorithm  popsize        pm     n    px        binary
tournament selection   with the aim of maintaining diversity  duplicated individuals are
not allowed in the population  algorithms were run until an optimal solution was found or
a time limit exceeded  this time limit was set to   minutes for problem instances of size   
and was gradually increased by    seconds for each size increment  for each algorithm and
each instance size     independent runs have been made  all experiments in this paper have
been performed on a pentium iv pc      mhz and    mb ram  under suse linux 
the base algorithm is a ma using a two dimensional version of spx  single point
crossover  for recombination  and endowed with tabu search for local improvement  this
algorithm is termed mats   and has been shown to be capable of finding feasible solutions systematically  solving to optimality instances with n       see mats in figure  a  
   

fisolving wcsps with memetic exact hybrid algorithms

  
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 

  
mabe
mabe f
mabe f
mats

arity  
arity  
arity  
arity   

    
  

  distance to optimum

  distance to optimum

although the performance of the algorithm degrades for larger instances  it provides distributions for the solutions whose average relative distance to the optimum is less than      
in all cases  this contrasts with the case of plain eas  which are incapable of finding even
a feasible solution in most runs  gallardo et al       a  

    
  
    
  
   
 
   

  

  

  

  

  

  

  

  

 

  

  

  

  

  

  

  

  

  

  

instance size

instance size

 a 

 b 

figure    relative distances to optimum for different  a  algorithms and  b  arities for sizes
ranging from    up to     in this and in all subsequent figures  each box summarizes    runs  boxes comprise the second and third quartiles of the distribution
 i e   the inner       a horizontal line marks the median  a plus sign indicates
the mean  and circles indicate results further from the median than     times the
interquartile distance 
mats is firstly compared with mas endowed with be for performing recombination 
since the use of be for recombination has a higher computational cost than a simple blind
recombination  and there is no guarantee that recombining two infeasible solutions will
result in a feasible solution  we have defined three variants of the mas 
 in the first one  called ma be  be is always used to perform recombination 
 in the second  termed ma be f   we require that at least one of the parents be feasible
in order to apply be  otherwise blind recombination is used 
 in the last variant  identified as ma be f   we require the two parents to be feasible 
thus being more restrictive in the application of be 
by evaluating these variants  we intend to explore the computational tradeoffs involved
in the application of be as an embedded component of the ma  for these algorithms 
mutation is performed prior to recombination in order to take advantage of good solutions
provided by be  figure  a shows the empirical performance of the different algorithms 
results show that ma be returns significantly better results than mats   ma be f can
find slightly better solutions than ma be on smaller instances  n                 but on
   

figallardo  cotta    fernandez

larger instances the winner is ma be  it seems that the effort saved by not recombining
unfeasible solutions does not further improve the performance of the algorithm  note also
that  for larger instances  ma be f is better than ma be f   this correlates well with the
fact that be is used more frequently in the former than in the latter 
as mentioned in section      the optimal recombination scheme we use can be readily extended to multi parent recombination  eiben  raue    ruttkay         an arbitrary number
of solutions can contribute their constituent rows for constructing a new solution  additional experiments were done to explore the effect of this capability of ma be  figure  b
shows the results obtained by ma be for a different number of parents being recombined
 arities         and      for arity      the algorithm was able to find the optimum solution
for all instances except for n      and n       the relative distance to the optimum for
the best solution found is less than       in these cases   runs with arity     cannot find
optimum solutions for the remaining instances  but note that the distribution improves in
some cases  clearly  the performance of the algorithm deteriorates when combining more
than   parents due to the higher computational cost of be  variable clustering could be
used to alleviate this higher computational cost  but this results in performance degradation
since the coarser granularity of the pieces of information hinders information mixing  cotta
  troya        gallardo et al       b  
    a bs ma hybrid algorithm for the mdslp
in this section we evaluate an instantiation of the bs and ma hybrid algorithm described in
section     for the mdslp  called bs ma be  for the beam selection  line    in figure    
a simple quality measure is defined for partial solutions  whose value is either  if the
partial configuration is unstable  or its number of dead cells otherwise  the methodology
is the same as in section         executions are performed for each algorithm and instance
size   but arities for the ma are in            the setting of the remaining parameters
is kbw         preliminary tests indicated that this value was reasonable   and km a 
      n       n        n   i e   the best      nodes were kept on each level of the bs algorithm 
and          or     of the levels of the bs tree were initially descended before the ma
was run  with respect to termination conditions  each execution of the ma within the
hybrid algorithm consists of      generations  and no time limits are imposed for the hybrid
algorithms  which are run for n iterations of the bs 
figure  a shows the results for different values of parameter km a   in order to better
compare the distributions  the number of optimal solutions obtained by each algorithm
 out of    executions  is shown above each box plot  for km a        n  the performance of
the resulting algorithm improves significantly over the original ma  note that bs ma be 
using an arity of   parents  is able to find the optimum for all cases except for n     
 this instance is solved with arity       all distributions for different instance sizes are
significantly improved  for n      and arity             the algorithm consistently finds
the optimum in all runs  for other instances  the solution provided by the algorithm is
always within       of the optimum  except for n       for which the relative distance to
the optimum for the worst solution is       the other two charts show that  in general 
the performance of the algorithm deteriorates with increasing values of the km a parameter 
this may be due to the low quality of the bounds used in the bs part 
   

fisolving wcsps with memetic exact hybrid algorithms

   
arity  
arity  
arity  

   

k

ma

        n

   

 
    
kma         n

    
arity  
arity  
arity  

 

 

 

kma         n

   

     
 

 

     
      

   

time to best solution s 

   

    

   

   

   

                                            

 

  distance to optimum

   

 

 

    
k

   

kma         n

   

ma

     

        n

    
 

 

     

    

       

   

    

                                            

 
   

    

 

   
kma         n

   

     
     

 

   

     
        

   

   
                                            

 

  

  

  

  

  

  

  

  

 

  

 a 

  

  

  

  

  

  

  

  

  

instance size

instance size

 b 

figure     a  relative distances to optimum and  b  time to best solution for different
arities for bs ma be and km a        n       n        n   for sizes ranging from
   up to     the numbers above each box indicate how many times the optimal
solution was found 

regarding execution times  figure  b shows time distributions  in seconds  to reach
the best solution needed by the algorithms  although bs ma be requires more time than
ma be  the time needed remains reasonable for these instances  and is always less than
     seconds  note also how the execution time increases with the arity  as more time is
needed by the ma to perform be in the crossover operator  on the other hand  execution
time decreases for larger values of km a as the number of executions of the ma decreases 
although  as we have already remarked  the quality of the solutions worsens 
    improving the lower bound using mb for the mdslp
the simple quality measure for beam selection used in the previous section depends solely on
the part of the solution that is already constructed  in this section  we will experimentally
study the use of the mb technique to compute a tight  yet computationally inexpensive 
   

figallardo  cotta    fernandez

lower bound for the remanning part of the configuration with the aim of improving the
performance of the bs part of the hybrid algorithm  basically  the idea is to cluster all cells
in the same row of the board in a metavariable  these metavariables can be partitioned
into m columns with  n m cells each  finally  we can resort to mb to estimate best cost
extensions to a partial board configuration by considering only each of the columns  by
summing estimations for all column extensions  a bound on the best board extension to a
partial solution is obtained  in this section  we have experimented with m      i e   three
columns for each row   although if the complexity is still too high  the same approach can
be used to reduce it further  by considering more columns 
   
   

  distance to optimum

 
kma         n

   

     

 

  

     

       

   
                                            

 

  

  

  

  

     

  

  

  

  

  

  

 
kma         n

   

  

 

  

        

       

   

  

                                            

instance size

     

     

 

 a 

 b 

   

   

arity  
arity  
arity  

   

time to b  sol s 

 

kma         n
  

 

        

        

       

arity  
arity  
arity  

   

k

ma

        n

   

   
                                            

  

 

  

 c 

  

  

  

  

  

  

  

  

  

instance size

 

 d 

figure     a   c  relative distances to the optimum using different arities for
bs ma be mb and km a        n       n        n   for sizes ranging from
   up to      d  time  in seconds  to best solution for different arities for
bs ma be mb and km a         n  for sizes ranging from    up to    
experiments were repeated for the hybrid algorithm equipped with the new lower bound 
bs ma be mb  figure  a  c shows the results of these experiments for values of km a 
      n       n        n   the algorithm finds the optimum for all instances and arities and
the relative distance to the optimum for the worst solution found is less than       in all
cases  the best results are obtained with arity      although this requires slightly more
execution time  note also how bs ma be mb is less sensitive to the setting of parameter
km a   which means that execution times can be reduced considerably using a large value for
this parameter  see figure  d   the particular combination of parameters km a         n
and arity     provides excellent results at a lower computational cost  as execution times
are always below     seconds for n       as a comparison  recall that the only approach in
the literature that can solve these instances  described by larrosa et al          requires
over    minutes for n          hours for n      and   days for n       and that other
approaches are unaffordable for n       note however that these times correspond to a
computational platform different to ours  in order to make a fairer comparison  we executed
   

fisolving wcsps with memetic exact hybrid algorithms

the algorithm of larrosa et al    in our platform  in this case  it required      seconds
 i e   more than    minutes  in order to solve the n      instance  and more than   day and
   hours to solve the n      instance  these values are very close to the times reported
by larrosa et al          and hence indicate that the computational platforms are fairly
comparable 
   

  distance

 

arity  
arity  
arity  

   
 
   
 

  

  

  

  

instance size

figure    relative distances to best known solutions using different arities for
bs ma be mb and km a        n  for very large instances  i e   sizes of    
        and      note the improvement of best known solutions for sizes    and
   

figure    new best known maximum density still lifes for n           

table    optimal solutions for the smdlp 
n
opt

     
     

  
  

  
   

  
   

  
   

  
   

  
   

  
   

  
   

     
       

  
   

    results on very large instances
as already mentioned  there is currently no approach available to tackle the mdslp for
n       larrosa et al         tried their algorithm for n      and n       but they could
   available at http   www lsi upc edu  larrosa publications life source code tar gz   time for
n      could not be obtained as the code provided by larrosa et al  can only be used with even sized
instances 

   

figallardo  cotta    fernandez

not solve any of those instances within a week of cpu  for these very large instances  only
solutions to some relaxations of the problem are known  one of these relaxations  known
as the symmetrical maximum density still life problem  smdslp   was proposed by bosch
and trick         and consists of considering only symmetric boards  either horizontally or
 
vertically  which reduces the search space from  n to  ndn  e  
be alone can find vertically symmetric still lifes  by considering as variable domains
sets that contain only symmetric rows  larrosa and morancho        and larrosa et al 
       used this algorithm to solve the smdslp for the instances considered so far in this
paper  i e   for n                as well as for very large instances  i e   n                    
the results are summarized in table    which shows for each instance size the optimal
symmetrical solution  as the number of dead cells   clearly  the cost of optimal symmetric
still lifes are upper bounds for the mdslp  which can additionally be observed to be very
tight for n       results for n      are currently the best known solutions for these
instances 
we also run our algorithm  bs ma be mb  for these very large instances  i e   n 
                   and compare our results to symmetrical solutions for these instances  results  displayed in figure    show that our algorithm is able to find two new best known
solutions for the mdslp  namely for n      and n       there are     and     dead
cells respectively in the new solutions  these solutions are pictured in figure    it is
also worth noting that our algorithm could also find a solution with     dead cells for the
n      instance  for the other instances  our algorithm could reach the best known solutions consistently  the computation of mini buckets for these very large instances is done
by considering four clustered cost functions for variables in each row of the board  as the
complexity when using three cost functions was still too high 

   conclusions
many problems can be modeled as wcsps  one exact technique that has been used to
tackle such problems is be  however  the high space complexity of be as an exact technique 
makes this approach impractical for large instances  in this case  one can resort to minibuckets to get an approximate solution  although the complexity can again be large  in
this work  we have presented several proposals for the hybridization of be and mb with
memetic algorithms and beam search in order to get effective heuristics and have shown
that they represent very promising models 
we have experimentally evaluated our model with the mdslp  an excellent example of
wcsp  its highly constrained nature is typical in many optimization scenarios  the difficulty of solving this problem illustrates the limitations of classical optimization approaches 
and highlights the capabilities of the proposed approaches  indeed  the experimental results have been very positive  solving large instances of the mdslp to optimality  among
the different models presented  we must distinguish a new algorithm resulting from the
hybridization  at different levels  of complete solving techniques  i e   bucket elimination  
incomplete deterministic methods  i e   beam search and mini buckets  and stochastic algorithms  i e   memetic algorithms   this algorithm empirically produces good quality results 
not only solving to optimality very large instances of the constrained problem in a relatively
short time  but also providing new best known solutions in some large instances 
   

fisolving wcsps with memetic exact hybrid algorithms

as future work  we plan to consider complete versions of the hybrid algorithm  this
involves the use of appropriate data structures to store not yet considered but promising
branch and bound nodes  while the memory requirements will of course grow enormously
with the size of the problem instance considered  it will be interesting to analyze the computational tradeoffs of the algorithm as an anytime technique 

acknowledgments
we would like to thank javier larrosa for his valuable comments  which helped us to improve
significantly a preliminary version of this paper  thanks are also due to the reviewers for
their constructive comments  this work has been partially supported by spanish mcinn
under grant tin            nemesis  

appendix a  the mdslp as a wcsp
as shown by larrosa and morancho        and larrosa et al          the mdslp can be
well formulated as a wcsps  to this end  an n  n board configuration can be represented
by an n dimensional vector  r    r            rn    each vector component encodes  as a binary
string  a row  so that the j th bit of row ri  noted rij   represents the state of the j th cell
of the i th row  a value of   represents a live cell and a value of   a dead cell  
two functions over rows will be useful to describe the constraints that must be satisfied
by a valid configuration  the first one 
x
zeroes a   
    ai   
   
   i n

returns the number of dead cells in a row  i e   the number of zeroes in binary string a  
the second one 
adjs a    adjs    a         

l 
 
adjs  a  i   l     adjs    a  i       l       

max l  adjs    a  i            

   
i n
ai    
ai     

computes the maximum number of adjacent living cells in row a  we also introduce a ternary
predicate  stable ri    r   ri      which takes three consecutive rows in a board configuration
and is satisfied if  and only if  all cells in the central row are stable  i e   all cells in row r
will remain unchanged in the next iteration of the game  
stable a  b  c   

v

  i n s a  b  c  i 

     a  b  c  i       bi    
s a  b  c  i   
 a  b  c  i       
bi    
p
 a  b  c  i    max   i   j min n i     aj   bj   cj    bi  

   

where  a  b  c  i  is the number of living neighbors of cell bi   assuming a and c are the rows
above and below row b 
   

figallardo  cotta    fernandez

the mdslp can now be formulated as a wcsp using n cost functions fi   i         n  
accordingly  fn is binary with scope the last two rows of the board  var fn      rn    rn   
and is defined as 

 
stable a  b       adjs b     
fn  a  b   
   
zeroes b   otherwise 
the first line checks that all cells in row rn are stable  whereas the second one checks that
no new cells are produced below the nn board  note that any pair of rows representing an
unstable configuration is assigned a cost of   whereas a stable one is assigned its number
of dead cells  to be minimized  
for i         n      corresponding fi cost functions are ternary with scope var fi    
 ri    ri   ri     and are defined as 

 
fi  a  b  c   
zeroes b  

stable a  b  c    a    b    c          an   bn   cn      
   
otherwise 

in this case  boundary conditions are checked to the left and right of the board  as regards
cost function f    it is binary with scope the first two rows of the board  var f       r    r    
and is specified similarly to fn  

 
stable     b  c   adjs b     
   
f   b  c   
zeroes b   otherwise 

references
ahuja  r  k   ergun  o   orlin  j  b     punnen  a  p          a survey of very large scale
neighborhood search techniques  discrete appl  math                    
arnborg  s          efficient algorithms for combinatorial problems on graphs with bounded
decomposability   a survey  bit         
back  t          evolutionary algorithms in theory and practice  oxford university press 
new york ny 
back  t   fogel  d     michalewicz  z          handbook of evolutionary computation 
oxford university press  new york ny 
barr  a     feigenbaum  e          handbook of artificial intelligence  morhan kaufmann 
new york ny 
bertele  u     brioschi  f          nonserial dynamic programming  academic press  new
york ny 
bistarelli  s   montanari  u     rossi  f          semiring based constraint satisfaction and
optimization  journal of the acm                 
bosch  r     trick  m          constraint programming and hybrid formulations for three
life designs  in international workshop on integration of ai and or techniques in
constraint programming for combinatorial optimization problems  cp ai or    pp 
     
   

fisolving wcsps with memetic exact hybrid algorithms

cabon  b   de givry  s   lobjois  l   schiex  t     warners  j  p          radio link
frequency assignment  constraints              
cheng  k  c  k     yap  r  h  c          ad hoc global constraints for life  in van beek 
p   ed    principles and practice of constraint programming  cp      vol       of
lecture notes in computer science  pp          berlin heidelberg  springer 
cheng  k  c  k     yap  r  h  c          applying ad hoc global constraints with the case
constraint to still life  constraints            
cotta  c     troya  j          on the influence of the representation granularity in heuristic
forma recombination  in carroll  j   damiani  e   haddad  h     oppenheim  d 
 eds    acm symposium on applied computing       pp          acm press 
cotta  c     troya  j          embedding branch and bound within evolutionary algorithms 
applied intelligence                
culberson  j          on the futility of blind search  an algorithmic view of no free lunch 
evolutionary computation                
dechter  r          mini buckets  a general scheme for generating approximations in automated reasoning  in   th international joint conference on artificial intelligence 
pp            nagoya  japan 
dechter  r          bucket elimination  a unifying framework for reasoning  artificial
intelligence                  
detcher  r     rish  i          mini buckets  a general scheme for bounded inference 
journal of the acm                 
eiben  a   raue  p  e     ruttkay  z          genetic algorithms with multi parent recombination  in davidor  y   schwefel  h  p     manner  r   eds    parallel problem
solving from nature iii  vol      of lecture notes in computer science  pp       
berlin heidelberg  springer 
elkies  n  d          the still life problem and its generalizations  in engel  p     syta  h 
 eds    voronois impact on modern science  book    pp          institute of math 
kyiv 
freuder  e  c     wallace  r  j          partial constraint satisfaction  artificial intelligence                 
gallardo  j  e   cotta  c     fernandez  a  j          finding still lifes with memetic exact
hybrid algorithms  corr  available at http   arxiv org abs           
gallardo  j   cotta  c     fernandez  a          on the hybridization of memetic algorithms with branch and bound techniques  ieee transactions on systems  man and
cybernetics  part b               
gallardo  j  e   cotta  c     fernandez  a  j       a   a memetic algorithm with bucket
elimination for the still life problem  in gottlieb  j     raidl  g   eds    evolutionary
computation in combinatorial optimization  vol       of lecture notes in computer
science  pp        berlin heidelberg  springer 
   

figallardo  cotta    fernandez

gallardo  j  e   cotta  c     fernandez  a  j       b   a multi level memetic exact hybrid
algorithm for the still life problem  in runarsson  t  p   et al   eds    parallel problem
solving from nature ix  vol       of lecture notes in computer science  pp         
berlin heidelberg  springer 
gardner  m          the fantastic combinations of john conways new solitaire game 
scientific american              
gelain  m   pini  m  s   rossi  f     venable  k  b          dealing with incomplete preferences in soft constraint problems  in bessiere  c   ed    principles and practice of
constraint programming  cp       vol       of lecture notes in computer science 
pp          berlin heidelberg  springer 
glover  f          tabu search  part i  orsa journal on computing                
glover  f          tabu search  part ii  orsa journal on computing             
hart  w   krasnogor  n     smith  j          recent advances in memetic algorithms  vol 
    of studies in fuzziness and soft computing  springer  berlin heidelberg 
kask  k     detcher  r          a general scheme for automatic generation of search
heuristics from specification dependencies  artificial intelligence             
khemmoudj  m  o  i     bennaceur  h          valid inequality based lower bounds for
wcsp  in bessiere  c   ed    principles and practice of constraint programming
 cp       vol       of lecture notes in computer science  pp          berlin
heidelberg  springer 
krasnogor  n     smith  j          a tutorial for competent memetic algorithms  model 
taxonomy  and design issues  ieee transactions on evolutionary computation        
       
larrosa  j     morancho  e          solving still life with soft constraints and bucket
elimination  in principles and practice of constraint programming  cp      vol 
     of lecture notes in computer science  pp          berlin heidelberg  springer 
larrosa  j   morancho  e     niso  d          on the practical use of variable elimination
in constraint optimization problems  still life as a case study  journal of artificial
intelligence research             
larrosa  j     schiex  t          solving weighted csp by maintaining arc consistency 
artificial intelligence                 
lawler  e     wood  d          branch and bounds methods  a survey  operations research 
              
lematre  m   verfaillie  g   bourreau  e     laburthe  f          integrating algorithms
for weighted csp in a constraint programming framework  in international workshop
on modelling and solving problems with soft constraints  paphos  cyprus 
marinescu  r     dechter  r          best first and or search for graphical models  in
twenty second aaai conference on artificial intelligence  pp            vancouver  canada  aaai press 
moscato  p     cotta  c          a gentle introduction to memetic algorithms  in handbook
of metaheuristics  pp          kluwer academic press  boston  massachusetts  usa 
   

fisolving wcsps with memetic exact hybrid algorithms

moscato  p     cotta  c          memetic algorithms  in gonzalez  t   ed    handbook
of approximation algorithms and metaheuristics  chap      chapman   hall crc
press 
nonobe  k     ibaraki  t          an improved tabu search method for the weighted
constraint satisfaction problem  infor                 
puchinger  j     raidl  g          combining metaheuristics and exact algorithms in
combinatorial optimization  a survey and classification  in mira  j     alvarez  j 
 eds    artificial intelligence and knowledge engineering applications  a bioinspired
approach  vol       of lecture notes in computer science  pp        berlin heidelberg  springer 
schiex  t   fargier  h     verfaillie  g          valued constraint satisfaction problems  hard
and easy problems  in   th international joint conference on artificial intelligence 
pp          montreal  canada 
smith  b  m          a dual graph translation of a problem in life  in hentenryck  p  v 
 ed    principles and practice of constraint programming   cp      vol       of
lecture notes in computer science  pp          berlin heidelberg  springer 
verfaillie  g   lematre  m     schiex  t          russian doll search for solving constraint
optimization problems  in thirteenth national conference on artificial intelligence
and eighth innovative applications of artificial intelligence conference  aaai   iaai
    pp          aaai press   the mit press 
wolpert  d     macready  w          no free lunch theorems for optimization  ieee
transactions on evolutionary computation              

   

fi