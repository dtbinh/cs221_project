journal artificial intelligence research                  

submitted        published      

strong equivalence qualitative optimization problems
wolfgang faber

faber mat unical it

department mathematics
university calabria
via p  bucci cubo   b        rende  italy

miroslaw truszczynski

mirek cs uky edu

department computer science
university kentucky
    rose street  lexington  ky              usa

stefan woltran

woltran dbai tuwien ac at

institute information systems
vienna university technology
favoritenstrae           vienna  austria

abstract
introduce framework qualitative optimization problems  or  simply  optimization problems  represent preference theories  formalism uses separate modules
describe space outcomes compared  the generator   preferences outcomes  the selector    consider two types optimization problems  differ
way generator  model propositional theory  interpreted  standard propositional logic semantics  equilibrium model  answer set  semantics 
latter interpretation generators  optimization problems directly generalize
answer set optimization programs proposed previously  study strong equivalence
optimization problems  guarantees interchangeability within larger context  characterize several versions strong equivalence obtained restricting
class optimization problems used extensions establish complexity
associated reasoning tasks  understanding strong equivalence essential modular
representation optimization problems rewriting techniques simplify without
changing inherent properties 

   introduction
introduce framework qualitative optimization problems which  following design answer set optimization  aso  programs  brewka  niemela    truszczynski        
use separate modules describe space outcomes compared  the generator  
preferences outcomes  the selector    optimization problems consider  selector module follows syntax semantics preference modules
aso programs  generator given propositional theory  propositional theory interpreted according standard propositional logic semantics  is 
outcomes compared classical models generator  speak classical optimization problems  co problems  short   generator theory interpreted
semantics equilibrium models  pearce         speak answer set optimization
problems  aso problems  short   use terminology  equilibrium models
c
    
ai access foundation  rights reserved 

fifaber  truszczynski    woltran

usually referred answer sets  ferraris        historical reasons  aso problems 
answer sets generator outcomes used determine optimal outcomes 
representing reasoning preferences qualitative settings important
research area knowledge representation qualitative decision theory  main objectives design expressive yet intuitive languages model preferences  develop automated methods reason formal representations preferences
languages  literature subject preferences vast  refer reader articles special issue artificial intelligence magazine  goldsmith   junker       
recent monograph kaci        thorough discussion area
additional references 
understanding optimization problems equivalent  particular  one
interchanged another within larger context  fundamental preference
formalism  speaking informally  optimization problems p q interchangeable
strongly equivalent every optimization problem r  context   p r qr define
optimal models  understanding one optimization problem equivalent
another sense essential preference analysis  modular preference representation 
rewriting techniques simplify optimization problems forms amenable
processing  without changing inherent properties  let us consider multi agent
setting  agents combine preferences set alternatives goal
identifying optimal ones  one agent ensemble replaced another
set optimal alternatives unaffected now  extension
ensemble future  strong equivalence agents optimization problems precisely
needed guarantee full interchangeability property 
notion strong equivalence general interest  means restricted preference formalisms  cases  notably classical logic  coincides equivalence 
property models  however  semantics monotone  is 
extending theory may introduce new models eliminate some  strong equivalence
becomes strictly stronger concept  one adopt theories analyzed
placed within larger context  nonmonotonicity semantics salient feature
nonmonotonic logics  marek   truszczynski        strong equivalence theories
nonmonotonic logics  especially logic programming answer set semantics  gelfond
  lifschitz         extensively studied setting  lifschitz  pearce    valverde 
      turner        eiter  fink    woltran      b   preference formalisms often
behave nonmonotonically adding new preference may cause non optimal outcome
 model  become optimal one  thus  preference formalisms  equivalence strong
equivalence typically different notions  accordingly  strong equivalence studied
logic programs rule preferences  faber   konczak         programs ordered disjunction  faber  tompits    woltran        programs weak constraints  eiter 
faber  fink    woltran      a  
extend study strong equivalence formalism qualitative optimization
problems  formalism motivated design answer set optimization  aso  programs brewka et al          borrows two key features aso programs make
attractive alternative preference modeling approaches based logic programming
mentioned above  first  following aso programs  optimization problems provide
clear separation hard constraints  specify space feasible outcomes 
   

fistrong equivalence qualitative optimization problems

preferences  soft constraints  impose preference ordering feasible outcomes  second  optimization problems adopt syntax semantics preference rules aso
programs correspond closely linguistic patterns simple conditional preferences
used humans 
separation preference modules hard constraints facilitates eliciting representing preferences  important characterizing strong equivalence 
clear separation present  logic programs ordered disjunctions  brewka 
niemela    syrjanen         strong equivalence characterizations cumbersome
account complex mostly implicit interactions hard constraints
preferences  optimization problems  impose separation  onedimensional forms strong equivalence  hard constraints preferences
added  one dimensional concepts easier study yet provide enough information construct characterizations general case 
main contributions 

main contribution summarized follows 

propose general framework qualitative optimization problems  extending
several ways formalism aso programs  focus two important instantiations framework  classes classical optimization  co  problems
answer set optimization  aso  problems  latter one directly generalizes aso
programs 
identify problem strong equivalence theories general preference formalisms  point strong equivalence equivalence coincide  in
general  preference formalisms concept strong equivalence
fundamental issues theory modularity  rewriting simplification  strong equivalence studied earlier context logic programs logic
programs extended preferences rules atoms heads rules  and
similarly motivated   however  best knowledge  first
paper studies strong equivalence typical preference formalism
represents preferences terms preferred properties  modeled formulas 
independently constraints defining outcomes compare  such 
relevance mainstream preference research previous studies 
characterize concept strong equivalence optimization problems relative
changing selector modules  characterization independent semantics
generators so  applies co asp problems  characterize
strong equivalence relative changing generators  with preferences fixed  
case  surprisingly  characterization depends semantics generators 
however  show dependence quite uniform  involves characterization strong equivalence generators relative underlying semantics 
considered propositional theories  finally  combine
characterizations one dimensional concepts strong equivalence characterization general combined notion 
develop results case preferences ranked  practice  preferences commonly ranked due hierarchical structure preference providers 
   

fifaber  truszczynski    woltran

general case study allows additions preferences ranks specified interval  i  j   covers case segment hierarchy
preference providers allowed add preferences  top decision makers  middle management  low level designers   well case distinction
importance preferences  the non ranked case  
establish complexity deciding whether two optimization problems strongly equivalent relative changing selectors  generators  both  results show
problems range co np  p   complete 
organization  following section  introduce concept optimization
problem necessary terminology  define equivalence problems interested
here  discuss relationship optimization problems formalisms
literature  particular aso programs  section   provide results
case selectors may vary new hard constraints allowed  section  
turn characterizes strong equivalence notion  preferences unaffected
generator parts subject change  section   finally show characterizations
obtained previous sections combined order capture general case
strong equivalence  complexity analysis presented section    followed
discussion results considerations future directions research 
present proof sketches simpler overly technical proofs
main text facilitate understanding results intuitive level  detailed proofs
found appendix 
article substantially extended version earlier published conference version
 faber  truszczynski    woltran        

   optimization problems
section provide basic definitions optimization problems section     
followed section     definitions strong equivalence notions optimization
problems studied remainder paper  finally  section     provide
discussion related formalisms 
    basic definitions
qualitative optimization problem  an optimization problem  on  ordered
pair p    t  s   called generator selector  role
generator specify family outcomes compared  role selector
define relation set outcomes and  consequently  define notion
optimal outcome  relation induces relations     define   j j
j   i  j j j i  optimization problem p   write p g p
refer generator selector  respectively 
generators  generators use propositional theories language determined
fixed countable universe  or alphabet  u propositional variables form atomic
propositions  boolean constant   boolean connectives    
define constant    connectives usual way          
   

fistrong equivalence qualitative optimization problems

             respectively   models generator  defined
semantics used  represent outcomes corresponding optimization problem 
consider two quite different semantics generators  classical propositional logic
semantics semantics equilibrium models  pearce         thus  outcomes
either models equilibrium models  depending semantics chosen  first semantics
interest due fundamental role widespread use classical propositional logic 
particular  means describe constraints  equilibrium models generalize answer sets
logic programs case arbitrary propositional theories  pearce        ferraris       
often referred answer sets  semantics equilibrium models important
due demonstrated effectiveness logic programming semantics answer
sets knowledge representation applications  use terms equilibrium models
answer sets interchangeably 
throughout paper  represent interpretations subsets u  contain
exactly atomic propositions interpreted true  write    state
interpretation u  classical propositional  model formula   furthermore 
denote set classical models formula theory mod  t   
equilibrium models arise context propositional logic here and there 
logic ht short  heyting         briefly recall definitions concepts 
well properties logic ht directly relevant work  refer
papers pearce        ferraris        details 
logic ht logic located intuitionistic classical logics  interpretations logic ht pairs hi  ji standard propositional interpretations
j  write hi  ji   ht denote formula holds interpretation
hi  ji logic ht  relation   ht defined recursively follows 
   hi  ji    ht
   atom a  hi  ji   ht precisely
   hi  ji   ht hi  ji   ht hi  ji   ht
   hi  ji   ht hi  ji   ht hi  ji   ht
   hi  ji   ht j     classical satisfiability   hi  ji    ht
hi  ji   ht  
equilibrium model answer set propositional theory standard interpretation hi  ii   ht every proper subset j i  hj  ii    ht   answer
sets propositional theory classical models   converse true
general  denote set answer sets theory  t    set
ht models modht  t    is  modht  t      hi  ji   j  hi  ji   ht   
semantics two natural concepts equivalence  two theories t 
t  equivalent models  classical equilibrium  respectively  
strongly equivalent every theory s  t  t  models
 again  classical equilibrium  respectively  
   choice primitive connectives common language classical propositional logic 
standard logic here and there underlies answer set semantics 

   

fifaber  truszczynski    woltran

classical semantics  strong equivalence equivalence coincide 
semantics equilibrium models  result lifschitz et al         states two
theories t  t  strongly equivalent equilibrium models t  t 
equivalent logic ht  is  modht  t      modht  t     illustrate
notions ht models equilibrium models  relate latter classical ones 
examples  consider classical ht models alphabet
consisting atoms explicitly mentioned theories discussed  sufficient
determine equilibrium models one hand  which happen consist atoms
mentioned  and  other  show differ classical ones 
example   let us consider theory ta    a a   classical models ta  under
restriction mentioned above   a   true false possible
outcomes  ht models  again  restriction  h  i  h   a i 
h a    a i  hence  one answer set  equilibrium model    possible
candidate   a   answer set  h a    a i   ht ta holds  h   a i   ht ta
does  thus  intuitively  theory contain cause hold 
next  let us consider theory tb    ab   classical models  a    b   a  b  
ht models h a    a i  h b    b i  h a    a  b i  h b    a  b i h a  b    a  b i 
answer sets therefore  a   b    a  b   intuition
theory contain cause b hold simultaneously 
finally  let us consider theory tc     a b   b a    classical models
tb   is  mod  tc       a    b    a  b    modht  tc    
 h a    a i  h b    b i  h a    a  b i  h b    a  b i  h a  b    a  b i  h   a  b i    modht  tb  
 h   a  b i   answer sets tb    tc       a    b   
observe tb tc equivalent classical equilibrium setting
 they classical equilibrium models   former implies
strongly equivalent classical setting  however  strongly equivalent
equilibrium setting modht  tb      modht  tc    cf  characterization strong
equivalence equilibrium semantics lifschitz et al           indeed 
   a b  b a   obtain  tb s      a  b     tc s     
recall optimization problems classical interpretation generators
referred classical optimization problems co problems  use
answer set semantics generators  speak answer set optimization problems
aso problems 
selectors  follow definitions preference modules aso programs  brewka
et al          adjusting terminology general setting  selector finite
set ranked preference rules
j
      k
   
k j positive integers      k  propositional formulas
u  rule r form      number j rank r  denoted rank  r  
hd  r                 k   head r body  the condition  r  bd  r   moreover 
write hd  r  refer formula  
rank  r      every preference rule r selector s  simple selector 
 
otherwise  ranked  often omit   notation simple selectors 
   

fistrong equivalence qualitative optimization problems

selector s  i  j                      define s i j     r   rank  r  j 
 where assume every integer k  k     write  i  j  rank interval
 k   k integer  k j   extend notation optimization problems 
p    t  s  rank interval  i  j   set p i j     t  s i j     rank intervals
use shorthands  example    i  i              i     similar 
interpretation i  satisfaction
degree preference rule r vi  r    min i     
w
hd  r       bd  r     hd  r   otherwise  rule irrelevant i  vi  r      
intuitively  lower satisfaction degree better outcome  thus  preference
rule       k informally read follows  irrelevant outcomes  those
satisfying   satisfying   outcomes satisfying   preferred 
followed outcomes satisfying     outcomes satisfying     etc  note
brewka et al         represented satisfaction degree irrelevant rule special
non numeric degree  treated equivalent    difference immaterial
two approaches equivalent 
selectors determine preference relation interpretations  given interpretations
j simple selector s  j holds precisely r s  vi  r  vj  r  
therefore   s j holds j exists r vi  r    vj  r  
j holds every r s  vi  r    vj  r  
given ranked selector s  define j every preference rule r s  vi  r   
vj  r   rule r  following three conditions hold 
   vi  r      vj  r   
   every r rank r    vi  r  vj  r 
   every r smaller rank r    vi  r    vj  r  
moreover   s j rule r  three conditions hold 
j every r s  vi  r    vj  r   given optimization problem
p    t  s   often write p  and similarly      furthermore  set
v  u relation  like         u   write v restriction
v   is  v     a  b    a  b v    relationship equalities     
two optimization problems follows 
lemma   optimization problems p q  every set v  u   pv   q
v
q
p
implies  pv    q
v v   v  
p
proof  suppose pv   q
v let i  j interpretations i v j  definiq
q
q
p
p
tion  iv j j v i  assumption iv j j v i  implying i v j  case ipv j
q
ipv j jpv i  assumption iq
v j jv hold well conclude
q
q
p
p
iq
v j  direction  i v j implies i v j  iv j implies iv j  analogous   

aspects aso selectors require additional discussion  first  preference rule
may irrelevant outcome  case outcome satisfy
condition rule or  does  satisfy formula head
rule  cases  define outcome desirable respect rule 
making choice  followed original definition  brewka et al          modulo
   

fifaber  truszczynski    woltran

minor simplification mentioned earlier   obviously  choices could considered  too 
instance  could define irrelevant outcomes least desirable respect
rule  could restrict attention selectors permit irrelevance
 a preference rule allow irrelevance body disjunction
options head tautology   would eliminate need address issue
altogether  however  price constraining definintion selector rules 
ultimately  question right design choice secondary importance
semantics preference rules adopted provides us flexibility represent
possible definitions  particular  note semantics rule
            n
rule
            n  
words  conditions  the rule bodies  modeling device making preference
rules better correspond conditional preferences expressed natural language 
compiled away  second type irrelevance  formalism selectors allows
user override default adopted  make adopted design choice explicit 
is  making outcomes satisfying options head explicitly
desirable  intuitively  sufficient rewrite rule  without body  since bodies
removed  shown earlier 
            n

           n             n  
or  equivalently 
           n             n
following rewriting makes least desirable 
            n          n    
or  equivalently 
            n          n     
another question concerns rules one option head  intuitively  given
semantics important  satisfaction degree always   
indeed  corollary    later paper provides formal result confirms statement 
optimal  preferred  outcomes  optimization problem p    p   denotes set
outcomes p   is  set models  under selected semantics 
generator p   thus   p   stands models p framework co problems
answer sets p   aso problems considered  model  p  
optimal preferred p model j  p   j  p i  denote
set preferred models p  p   
following lemma asserts preference relation two optimization problems
equal sets outcomes  preferred models coincide  result follows
   

fistrong equivalence qualitative optimization problems

immediately definitions useful sequel  statement brings
subtle notational issue  formally   strict  preorder pair  d      set  the
domain preorder    transitive acyclic binary relation  the preorder
relation   two preorders equal domain relation
domain  typically  whenever domain understood  refer preorders
pointing relation symbols  often  however  write  d preorder relation
symbol make domain explicit notation  statement
result below 
lemma   let p q optimization problems  p p      q
 q    then   p      q  
proof 
observed above  equality preorders implies equality domains  case  equality  p p      q
 q  implies  p      q   hence 
p
q
i  j  p      q     j iff   j  result follows directly definition
preferred outcomes   
observe eliminating rules large ranks make unpreferred outcomes preferred  never make preferred outcomes unpreferred  recall that 
given optimization problem p    t  s   p i   p   i      t  s   i     corresponding
optimization problem rules rank higher removed 
lemma   every optimization problem p every     p i    p   
proof  let us assume
   p i    case
   p i   
   p   
   p  
p
 i
follows  otherwise  interpretation j  p i   j  
i  thus 
  say rank j   i  v  r    v  r    ii  every r   p
rule r p i
j

 i
rank less j  v  r       v  r     
rank j  vj  r    vi  r      iii  every r  p i
j

note that  since  p i      p    j  p    moreover  j   sets rules
coincide  thus  j  p follows and 
ranks less equal j p p i
consequently 
   p     

    notions equivalence
define union optimization problems expected  is  p     t    s   
p     t    s     set p  p     t  t    s  s     two optimization problems p 
p  strongly equivalent respect class r optimization problems  referred
class contexts simply contexts  every optimization problem r r 
 p  r     p  r  
consider three general classes contexts  first foremost  interested
class lu optimization problems u  consider families lgu
lsu optimization problems form  t       s   respectively  first class
consists optimization problems which  added problem  affect
set feasible outcomes cannot affect preference relation  call optimization
problems generator problems  second class consists optimization problems which 
added problem  change set feasible outcomes change
   

fifaber  truszczynski    woltran

 in general  preference relation  call optimization problems selector problems 
one dimensional contexts provide essential insights general case 
two classes  speak strong gen equivalence  denoted g   strong sel equivalence 
denoted   respectively  general class lu optimization problems simply
speak strong equivalence  denoted sg  
recall notion strong equivalence is  definition  underlying replacement property  fact  optimization problem p    t  s  containing subproblem
q    t          i e      s  guarantee q replaced p
another subproblem r without changing optimal outcomes  q sg r  indeed 
q sg r holds  one faithfully replace q r optimization problem  otherwise
would  q p         r p     p   lu   
constraining ranks rules selectors gives rise additional classes contexts parameterized rank intervals  i  j  
s  i j 

   lu

 i j 

   lu

      s  lsu     s i j   

    t  s  lu     s i j   

first class contexts gives rise strong sel equivalence respect rules
rank  i  j   denoted s  i j    second class contexts yields concept strong
s  i j 
equivalence respect rules rank  i  j   denote g
  call problems
     
  
class lu   lu simple optimization problems 
    relation preference formalisms
optimization problems closely related aso programs  brewka et al         
formalism optimization problems extends aso programs several ways  first 
generators optimization problems arbitrary propositional theories 
semantics equilibrium models  generators properly extend logic programs
answer set semantics  used generators aso programs  second  selectors
optimization problems use arbitrary propositional formulas heads preference
rules  well conditions bodies  generalizes selectors
aso programs  finally  optimization problems explicitly allow alternative semantics
generators  possibility mentioned pursued brewka et al         
already noted introduction vast literature preference representation reasoning  the special issue artificial intelligence magazine  goldsmith  
junker        monograph kaci        two comprehensive sources relevant
references  survey preference approaches top nonmonotonic formalisms  see
delgrande  schaub  tompits    wang         discussing goes beyond scope
present paper  especially problem focus  strong equivalence 
considered much preference research before  essentially
relevant earlier results except already mentioned introduction  faber  
konczak        faber et al         eiter et al       a   nevertheless  since work uses
preference formalism aso problems  extension formalism aso programs
brewka et al         received much attention preference research
others  make comments choice 
   

fistrong equivalence qualitative optimization problems

first  aso problems explicit constraints must violated  the
generator part  preferences  is  weaker constraints make outcomes
desirable others  the selector part   aso problems match well practical settings  typically kinds constraints play  instance  product
configuration problem physical constraints limiting space available possibilities  not every type engine put small family sedan  moon roof available
basic engine option  etc    well user preferences describe user
would possible  preferential reasoning  optimization  presence  hard 
constraints received substantial attention  representative approach cp nets
 boutilier  brafman  domshlak  hoos    poole        combined constraints
described paper boutilier  brafman  domshlak  hoos  poole        
choice propositional logic represent constraints  the generator part formalism  standard  however  contrast approaches  addition classical
semantics consider appealing alternative  semantics answer sets 
important resulting formalism answer set programming  marek   truszczynski 
      niemela        steadily gaining acceptance constraint language
supported ever improving computational tools  calimeri  ianni  krennwallner    ricca 
      
hand  choice formalism selector part less obvious 
several reasons motivated us  first  one already mentioned
earlier  preference rules natural reading agreeing well linguistic
patterns humans use formulating qualitative conditional preferences  second 
demonstrated original work aso selectors introduced  brewka et al  
       used approximate preference relations defined cp nets
 boutilier et al          one broadly studied qualitative preference systems 
better computational properties  instance  dominance problem p
opposed np hard even pspace complete generalized classes
cp nets  goldsmith  lang  truszczynski    wilson        
third  individual preference rules closely related one standard approaches
representing preferences based possibilistic logic  approach  we give
basic details here  comprehensive discussion refer kaci        ch 
        preference theory consists formulas  distinct rank  the assumption
ranks distinct limiting formulas repeating ranks conjuncted
single formula rank   quality outcome given score defined
minimum rank formula outcome satisfy    formulas
satisfied   higher score  better outcome  let              n   preference
theory  index representing rank   clear preference
semantics theory described precisely captured preference rule
n   n                 
                         n  thus  aso problems subsume preference
formalism based possibilistic logic 
finally  selector part aso problems typically consists several preference rules
rules may different ranks  allows us model preferences coming
different sources different importance  cases  main issue
   

fifaber  truszczynski    woltran

integrating individual preferences single order  single broadly
accepted way so  approach used formalism boils pareto
principle  arguably common core integration principles  accordingly 
formalism allows conflicting rules selector  for instance    b b    
leaves conflicts unresolved resulting incomparability  ranks  lower
rank  important rule is  rules less importance used compare outcomes
rules importance distinguish them  way handling ranks
natural shows many preference formalisms 
one prominent example context prioritized  propositional  circumscription
 lifschitz         minimization  of certain atoms models formula  defined
respect classes atoms different priority  formally  let theory
atoms  p            pn   v  f   partition a  then  model mod  t   called
 p            pn   v  f   minimal n mod  t     i  n  p  pi     
 p  pi    n pi pi   si n   ii  n f   f  
intuition behind definition atoms p   pi minimized 
assignments v allowed vary  assignments f kept fixed  atoms p
minimized p  highest priority followed p    etc 
relation ranks quite obvious  one show  p            pn   v  f   minimal
models theory coincide preferred outcomes co problem x    t  s  
selector given
 

 

   f   f     f f    f   f     f f  


 p   p     p pi     n   
indeed preference rules first two sets ensure interpretations
fixed part comparable  preference rules last group precisely reflect prioritized process minimization atoms p        pn  
let us finally mention formalism optimization problems gives
handle classical prioritized circumscription  circumscription put
top logic programs  this meaningless  forms currently prevalent answer
set programming  answer sets necessarily minimal models  see instance simons 
niemela    soininen         end suffices apply embedding using aso
problems instead co problems 

   strong sel equivalence
start analyzing case strong sel equivalence turns core case
study  indeed  characterizations strong sel equivalence naturally imply characterizations general case thanks following simple observation 
proposition   let p q optimization problems  either classical answer set
s  i j 
semantics generators   i  j  rank interval  p g
q
every generator r lgu   p r s  i j  q r 
s  i j 

proof     let r lgu   since p g

s  i j 

q  p r g
   

q r so  p r s  i j  q r 

fistrong equivalence qualitative optimization problems

 i j 

   let r optimization problem lu   p r    p  rg        rs  
qr    q rg        rs    moreover  assumption p  rg     s  i j 
q  rg      thus 
  p  rg         rs        q  rg         rs    
s  i j 

follows  p r     q r  and  consequently  p g

q   

furthermore  set outcomes optimization problem p unaffected changes
selector module  follows choice semantics generators
matter characterizations strong sel equivalence  thus  whenever section
refer set outcomes optimization problem p   use notation  p   
specific one  mod  p g    p g    applies co aso problems 
respectively 
formally state subsequent results  need one auxiliary notation 
optimization problem p   define diff p  i  j  largest k p k j 
every k p k j  set diff p  i  j      clear diff p  i  j 
well defined  moreover  p   j  diff p  i  j     following lemma characterizes
relation  p q ranked optimization problems p q 
lemma   let p q optimization problems  i  j interpretations  then 
 p q j holds one following conditions holds 
   diff p  i  j    diff q  i  j   p j 
   diff p  i  j    diff q  i  j   q j 
   diff p  i  j    diff q  i  j    p j  q j 
proof  direction evident  prove only if direction  note
cases diff p  i  j    diff q  i  j  diff p  i  j    diff q  i  j  obvious  too  thus  let us
assume diff p  i  j    diff q  i  j    i  clearly     otherwise  p q j  contrary
assumption   follows every rule r p qs rank less i  vi  r    vj  r  
next  every r p qs rank i  vi  r  vj  r   finally  rules r p
r  qs   rank vi  r     vj  r  vi  r       vj  r     since diff p  i  j   
diff q  i  j    i   follows vi  r    vj  r  vi  r      vj  r     thus   p j
 q j  needed   
first main result concerns strong sel equivalence relative selectors consisting
preference rules ranks rank interval  i  j   special cases strong sel equivalence
follow corollaries 
considering strong sel equivalence means preference rules may added optimization problems  three main effects so  outcomes equally good
may become strictly comparable  strict comparability may turned incomparability 
order strict comparability may reversed  illustrate phenomena 
show may affect strong sel equivalence using forthcoming examples  importantly  lead us towards conditions necessary strong sel equivalence
motivate characterization property formally state theorem   
   

fifaber  truszczynski    woltran

example   let p     t    s     t  theory generating exactly two outcomes  a 
 b   for example  a b   s    empty  clearly   p        a    b   
 a   b  equally good respect p    possible make comparable

adding new preference rules  example  let r        a   b        now 
 a   p  r   b  thus  p  r        a    evident pair equally good
interpretations i  j one find context consisting preference rules make
strictly preferred j  each new rule least preferred j one
strictly prefer j   precise ranks context
importance 
example   let p     t    s     t  theory generating exactly two outcomes  a 

 b   s     a   b   rank    clearly   a   p   b  therefore
 p        a    possible make  a   b  incomparable adding appropriate

context  example r        b       obtain  a   
  p  r   b   b   
  p  r   a  
thus  p  r        a    b   
important note rank context preference rule must exactly equal
rank original preference rule order achieve effect  otherwise one
preference rule would override other  general  pair strictly comparable
interpretations i  j one find appropriate context makes j incomparable 
contrast example    context must make use rules particular ranks 
example   let p     t    s     t  theory admitting exactly two outcomes  a 

 b   s     a   b   rank    clearly   a   p   b  therefore
 p        a    possible reverse comparability  a   b  adding
 
appropriate context  example r        b       obtain  b   p  r   a   thus
 p  r        b   
important note that  order achieve effect  context must contain
preference rules lower ranks preference rules originally ordered j 
original ordering overridden  means technique
applicable preference rules rank    general  pair strictly comparable
interpretations i  j  comparison stems preference rules rank      adding
context consisting preference rules lower rank reverse comparability j
results reversed strict order  example    context must make use particular
ranks 
three effects may exploited order construct examples problems
strongly sel equivalent suggest necessary conditions strong sel equivalence 
first effect turn preferred outcomes non preferred  second third
turn non preferred outcomes preferred ones  second third effects imply
conditions specialized  context needs rules particular ranks  
 

 

example   consider p     t     a   b    q     t     a   b     t 
theory admitting exactly two outcomes  a   b    a   p   b    a   q   b  
 p       q        a    two problems therefore equivalent  however 
   

fistrong equivalence qualitative optimization problems

discrepancy respect ranks preference rules  take advantage
order show programs strongly sel equivalent 
 
let us consider context r        b       context exploits second effect
mentioned makes  a   b  incomparable respect q  extended
r    a    q  r   b   b    q  r   a   thus turning  b  preferred outcome
 q  r        a    b    hand  new preference rule effect p   
rank weaker preference rule p    hence  p  r        a   
therefore p   s    i  q    
analyzing example  observe context r  exploits difference
preferred outcomes considering preference rules rank lower   
indeed    p            a     q            a    b   
 

 

example   next  let us consider p    p     t     a   b    q     t     a   b    
t  theory admitting exactly two outcomes  a   b    a   p   b  
 a   q   b    p       q        a    here  observe   p         
  a     q            a    b    difference example   preference
rule q  rank   
possible construct context witnesses p  strongly sel 
 
equivalent q    using preference rules rank    r        a   b   b      
here  directly add conflicting preference rules override preference rule q 
overridden preference rule p    so  get  p  r        a  
 q  r        a    b    p   s    i  q    
examples     motivate condition     theorem    moreover  rather easy
see counterexample p s  i j  q involve outcomes  p i    
 q i    selector context rank interval  i  j  make outcomes preferred 
however  different point view  condition     theorem   fairly weak 
cover easy cases strong sel non equivalence  shown following
example 
 

 

example   let us define p    p     t     a   b    q     t     b       t 
theory admitting exactly two outcomes  a   b    a   p   b    b   q   a  
 p        a       q        b    p  q  even equivalent  hence
p   s  i j  q  rank interval  i  j   however    p            a    b     q         
  a    b    condition     theorem   satisfied rank intervals     j  
condition     theorem   covers cases one example    example
rather simple  even require context order create witness strong
sel non equivalence  general one create context order make certain
outcomes preferred  remains considered cases discrepancy
stemming preference rules inside context rank interval 
 

 

example   let p     t     a   b    q     t     a   b     t  theory
admitting exactly two outcomes  a   b   this pair problems p  q 
 
example     consider context r        b       unlike r  example   
   

fifaber  truszczynski    woltran

rule rank    context makes  a   b  incomparable respect extended
p    a    p  r   b   b    p  r   a    thus turning  b  preferred outcome 
keeping  a  such  therefore   p  r        a    b    hand  new
preference rule overrides one q    turning  b  preferred outcome making
 a  non preferred   q  r        b    therefore p   s    i  q    
unlike example      p            q            a    b    different reason allows counterexample  here  observe diff p    a    b         
diff q   a  b       allows adding appropriate preference rule rank   
important add rule one two differing ranks  indeed 
context comprising rules rank one serve counterexample strong
sel equivalence  indeed p  s       q   
finally motivates condition     theorem    two outcomes  as discussed
earlier  restrict outcomes  p i      q i   context rank interval
 i  j   differ ranks one ranks inside rank interval  use
constructions example   order obtain counterexample strong sel equivalence 
show three conditions theorem   indeed characterize strong selequivalence 
theorem   ranked optimization problems p q  every rank interval  i  j  
p s  i j  q following conditions hold 
    p i      q i  
    p p i      q
 q i  
   every i  j  p i     diff p  i  j    diff q  i  j   diff p  i  j   
diff q  i  j  diff p  i  j    j diff q  i  j    j 
proof result quite involved requires several auxiliary properties 
provide appendix  together proofs main results  
next  discuss special cases characterization theorem    first 
consider case      allows simplification theorem   
corollary   ranked optimization problems p q  every rank interval     j  
p s    j  q following conditions hold 
    p      q 
    p p      q
 q 
   every i  j  p    diff p  i  j    diff q  i  j  diff p  i  j    j diff q  i  j   
j 
proof  starting theorem    note selectors p   q   empty
hence  p        p    q        q   moreover  precondition   diff p  i  j 
  diff q  i  j  condition     theorem   satisfied     pair
i  j  p    one diff p  i  j      diff q  i  j      holds  together
   

fistrong equivalence qualitative optimization problems

diff p  i  j    diff q  i  j  consequent satisfied case well  allows
omitting precondition   
addition j     obtain case rank unrestricted selector contexts 
condition     simplified more  since diff p  i  j    j diff q  i  j    j never
hold j    
corollary   optimization problems p q  p q  equivalently  p s   q
p s      q  following conditions hold 
    p      q 
    p p      q
 q 
   every i  j  p    diff p  i  j    diff q  i  j  
next  note optimization problem p simple  all rules rank    
diff p  i  j      diff p  i  j      equivalent p j  observation leads following characterization strong sel equivalence simple optimization
problems 
corollary   simple optimization problems p q  following statements
equivalent 
 a  p q  equivalently  p s      q 
 b  p s    q  equivalently  p s       q 
 c   p      q  p p    q
 q   
proof  implication  a  b  evident definitions 
 b  c  corollary    j      obtain  p      q   condition p p    q
 q 
follows conditions         corollary  indeed  let us consider i  j  p  
p j distinguish two cases   i  diff p  i  j       p j
condition     corollary     q j  implying q j   ii  diff p  i  j     
condition     corollary    diff q  i  j       since p  q simple  q j 
consequently q j  symmetry  q j implies p j  thus 
p p    q
 q   
q
p
 c  a   c  follows lemma    p p     q
 q   p     q    thus 
conditions         corollary   follow  prove condition      let us first assume
diff p  i  j      i  j  p    follows diff p  i  j    thus p p   j  since
q
q
p
q
p p    q
 q    get  q  j thus diff  i  j      hence diff  i  j    diff  i  j  

diff q  i  j      reason analogously  last remaining case  diff p  i  j     
diff q  i  j       thus  directly obtain diff p  i  j    diff q  i  j   corollary    p q
follows   

   

fifaber  truszczynski    woltran

corollary   shows  particular  simple problems difference
relations s   s      property reflects role preference rules rank  
higher  allow us break ties among optimal outcomes  defined preference
rules rank    thus  eliminate outcomes family optimal
ones  cannot introduce new optimal outcomes  therefore  affect strong
sel equivalence simple problems  property following generalization ranked
optimization problems 
corollary    let p q ranked optimization problems let k maximum
rank preference rule p q  relations s k  equivalently  s  k    
s  k  equivalently  s  k k    coincide 
proof  clearly  p s k q implies p s  k q  thus  enough prove p s  k q
p s k q  using characterization theorem    observe conditions    
    p s  k q p s k q same  since p s  k q 
every i  j  p k   k   diff p  i  j  k   diff q  i  j   diff p  i  j    diff q  i  j 
diff p  i  j    k diff q  i  j    k  let us consider i  j  p k  
diff p  i  j    k  follows diff q  i  j    k  since k maximum rank preference rule p q  diff p  i  j    diff q  i  j      thus  diff p  i  j    diff q  i  j  
case diff q  i  j    k similar obtain every i  j  p k  
k   diff p  i  j  k   diff q  i  j   diff p  i  j    diff q  i  j   property implies condition     p s k q  thus  p s k q follows   
observation role preference rules ranks higher ranks rules
p q implies p q strongly sel equivalent relative selectors consisting
exclusively rules p q equivalent  have optimal
outcomes   optimal outcomes tie p tie q conversely  formally 
following result 
corollary    let p q ranked optimization problems let k maximum
rank preference rule p q  p s k   q  p      q 
p p    q
 q   
proof  clearly  p k     p q k     q so   p k        p    q k      
 q   thus  only if part follows theorem    condition     theorem reduces
 p      q  condition     implies p p    q
 q     prove part  note
condition     theorem   holds assumption  moreover  relations  p p  
 q
 q  empty so  coincide  thus  condition     theorem   holds  finally 
i  j  p    diff p  i  j    k      diff p  i  j    so  p j  assumption  q j  is  diff q  i  j      diff p  i  j   case diff q  i  j    k    
similar  thus  condition     theorem   holds  too  p s k   q follows   
lastly  give simple examples illustrating results used safely
modify simplify optimization problems  rewrite one another strongly selequivalent one 
   

fistrong equivalence qualitative optimization problems

example   let p    t  s      a b c   a b    a c    b c      a  
c   b   c    p      t            a b   c    regarding problems
co problems   p      p         a    b    c    moreover  evident
 
p p    p p       thus  corollary    p p   strongly sel equivalent  words 
faithfully replace rules   c   b   c selector optimization problem
generator single rule b   c  
example general principle  note removing preference rules
one formula head yields problem strongly sel equivalent 
corollary    let p q two co aso problems p g   qg qs
obtained p removing preference rules one formula head  i e  
rules r  hd  r         p q strongly sel equivalent 
proof  conditions         theorem   follow observation every interpretation every preference rule r  hd  r        vi  r        

   strong gen equivalence
focus case strong gen equivalence  semantics generators makes
difference difference concerns fact two semantics
consider  concepts strong equivalence different  aspects characterizations same  specifically  generators strongly equivalent relative
selected semantics  indeed  following example shows  generators
strongly equivalent  one extend uniformly extension one problem
single outcome  trivially optimal one  too  one
outcomes so  optimal ones 
example    consider co problem p     t    s     t     a b  s     a  
b    two outcomes here   a   b   is   p        a    b    let r
preference rule s    clearly  v a   r      v b   r       thus   a   p   b  so 
 p        a   
addition  let q     t     s    co problem  t      a b  s 
above  then   q        a   and  trivially   q        a    follows p  q 
equivalent  specify optimal outcomes  however  strongly
gen equivalent  and so  strongly equivalent   indeed  let r      a     
 p  r        b   so   p  r        b    hand   q  r      and 
therefore   q  r       
moreover  preference relation   defined selectors problems considered
must coincide 
example    let p     t    s    co problem  t     a b c   a b    a
c    b c   s     a   b     c     p        a    b    c   
 a   p   b    a   p   c    b   c  incomparable  thus   p        a    let
   

fifaber  truszczynski    woltran

q     t    s     co problem  s      a   b   c    clearly   q       p     
  a    b    c    moreover   a   q   b   q   c   thus   q        a   so  p  q 
equivalent  however  strongly  gen  equivalent  indeed  let r      a     
then   p  r        b    c    p  r        b   
main insight differences preference relation may hidden
preferred outcomes but  present  exposed eliminating
preferred outcomes obscure appropriately selected generator context 
considerations apply co aso problems  therefore
formulate single theorem handles types problems 
theorem    co  aso  respectively  problems p q  p g q
p g qg strongly equivalent  that is  mod  p g     mod  q g   co problems 
modht  p g     modht  qg   aso problems   pmod p g      q
mod q g    
view examples        result unexpected  two examples demonstrated conditions characterization cannot  general  weakened 
corollary   theorem     follows strong sel equivalence co problems
stronger property strong gen equivalence 
corollary    co problems p q  p q implies p g q 
general implication corollary    cannot reversed  shown following
example 
example    let us consider problems p      t     s     q      t        t    
 a b  s      a   b   b       p        q         a    b   
moreover   a   p    b   b   p    a   thus   p         a    b    since qs    
   trivially   a  q    b   thus   q         a    b    too 
problems p   q   equivalent  strongly sel equivalent  though  let
r         a   b     then  p   r     p   so   p   r         a    b   
hand   a   q   r    b   thus   q   r         a   
however  virtue theorem     strongly gen equivalent  indeed  trivially
g
g
g
g
mod  p  
    mod  q  
  and  writing mod  p  
    mod  q  
   relations  pm  
  
 q
empty therefore equal 
relation strong sel equivalence strong gen equivalence aso problem
complex  general  neither property implies even problems p
q assumed simple  p q as p g    
g
as qg   pas p g    q
as qg    corollary     p g q modht  p    
g
g
modht  qg    pmod p g     q
mod q g    theorem      now  as p     as q    regular
equivalence programs  imply modht  p g     modht  qg    strong equivalence 
q
p
 pmod p g     q
mod q g   imply as p g    as qg    
conclude section one corollary concerning strong gen equivalence
problems empty selectors 

   

fistrong equivalence qualitative optimization problems

corollary    co  aso  respectively  problems p q p   qs    
p g q p g qg strongly equivalent respective semantics
 that is  mod  p g     mod  q g   co problems  modht  p g     modht  qg   aso
problems  
result evident definitions  however  immediate consequence
theorem     indeed  optimization problems p q empty selectors  cong
g
dition  pmod p g      q
mod q g   equivalent mod  p     mod  q    consequence
strong equivalence p g qg   thus  problems empty selectors right
hand equivalence assertion theorem    reduces strong equivalence
generators 

   strong equivalence combined case
finally  consider relation sg   results considering contexts combine
generators selectors  since generators may vary here  previous section 
semantics generators matters  but  previous section  difference boils
different characterizations strong equivalence generators 
start result characterizing strong equivalence co aso problems
relative combined contexts  both generators selectors possibly non empty 
selectors consisting rules rank least j  respectively 
theorem    ranked co  aso  respectively  problems p q  every rank
s  i j 
interval  i  j   p g
q following conditions hold 
   p g qg strongly equivalent  that is  mod  p g     mod  q g   co problems 
modht  p g     modht  qg   aso problems 
    pmod p g      q
mod q g  
   every i  j mod  p g     diff p  i  j    diff q  i  j   diff p  i  j   
diff q  i  j  diff p  i  j    j diff q  i  j    j
p

q

 i
 i
    mod p
g      mod q g    

corresponding characterizations co aso problems differ respective conditions      reflect different conditions guaranteeing strong equivalence generators classical answer set semantics  moreover  four conditions theorem    obtained suitably combining extending conditions
theorem   theorem     first  combined strong equivalence implies strong genequivalence  condition     taken theorem     second  modify conditions    
    theorem   replacing  p i   mod  p g    and accordingly  q i  
mod  qg     classical model p g give rise optimal classical equilibrium
one upon addition context  aspect already visible theorem    
finally  add new condition stating relations  p i  q i coincide
sets models p g qg   generators allowed extended  one
make two models outcomes extension  two
   

fifaber  truszczynski    woltran

outcomes  say j  related differently corresponding strict relations induced
rules ranks less i  say  p i j  q i j  optimal j
optimal problem extending p matter preference rules ranks
interval  i  j  use  rules rank higher effect j ordered  
hand  j incomparable  q i   remain incomparable
q extended  j equally good respect rules rank   i 
rendered incomparable means preference rules rank i  case  j optimal
q extended  finally  j  q i i  j remains optimal matter preference
rules ranks higher add  follows two relations  p i  q i
s  i j 
different  cannot p g
q condition     necessary 
previous section  case selectors p q empty reduces
strong gen equivalence generators 
corollary    co  aso  respectively  problems p q p   qs  
s  i j 
  every rank interval  i  j   p g
q p g qg strongly
equivalent respective semantics  that is  mod  p g     mod  q g   co problems 
modht  p g     modht  qg   aso problems  
result simple consequence theorem     condition     theorem
implies mod  p g     mod  q g   so  since selectors p q empty 
remaining conditions become trivially true 
conclude section observations concerning relation sg co
aso problems  contexts relevant may contain preference rules arbitrary ranks 
start case co problems  results stronger 
derived general theorems above  present arguments relying results
previous sections  possible since co problems equivalence strong
equivalence generators coincide 
saw last section co problems strictly stronger relation
g   fact  co problems  coincides general relation sg  
theorem    co problems p q  p sg q p q 
proof  only if implication evident  prove converse implication 
use proposition    reduces checking strong equivalence checking strong
sel equivalence  let r lgu generator problem  since p q  corollary  
mod  p g     mod  qg    consequently  mod   p r g     mod   q r g    writing
mod  p g     mod   p r g       thus  corollary   
qr
 pmr
    m     finally  condition     corollary   p q implies condition    
corollary p r q r  as r preference rules      follows 
corollary    p r q r  thus  proposition    p sg q   
case simple co problems ranked interval         argument
repeated using instead corollary   equivalence  b   c  corollary
   way  one show simple co problems  relations s   
s   
g
coincide  thus  corollary    the equivalence  a   b   theorem     simple
co problems four relations sg   s   
  s      coincide obtain following
g
result 
   

fistrong equivalence qualitative optimization problems

corollary    simple co problems p q  properties p sg q  p s   
q 
g
p s    q p q equivalent 
simple aso problems still sg s   
coincide general
g
notions different s     cf  subtle difference condition  c  compared
corollary    
corollary    simple aso problems p q  following conditions equivalent
s     

 a  p sg q  equivalently  p g

q 

s      

 b  p s   
q  equivalently  p g
g

q 

 c  modht  p g   modht  qg   pmod p g     q
mod qg    
proof  implication  a  b  evident 
let us assume  b   theorem     modht  p g   modht  qg    identity
implies mod  p g     mod  qg    let us assume i  j mod  p g    pmod p g   j 
q
 pmod p g   j then  theorem      q
mod qg   j so  mod qg   j  otherwise 

p j so  diff p  i  j      theorem     diff q  i  j       since q simple 
diff q  i  j      thus  q j and  also  q
mod qg   j  converse implication follows
symmetry  thus   c  holds 
finally  assume  c  prove  a   end  show conditions       
theorem    hold  directly assumptions  condition     holds  condition     follows lemma    moreover  mod  p g     mod  qg    prove
condition      let us assume i  j mod  p g   diff p  i  j       since p simple 
p j  thus  q j and  consequently  diff p  i  j      diff q  i  j   finally  condition
p i
q i
g
g
     i e   mod p
g      mod q g     obviously holds case     mod  p     mod  q     

   complexity
section  study problems deciding various notions strong equivalence 
typically comparisons sets outcomes characterizations determine
respective complexity  start results concerning strong sel equivalence 
theorem    given optimization problems p q  deciding p q co np complete
case co problems p   complete case aso problems 
proof   sketch  detailed argument provided appendix b   membership  focus
complementary problem consider pairs interpretations i  j violate least
one conditions stated corollary    clearly  witness pair interpretations
exists  witness pair built atoms occur
problems p q  pair guessed  verified polynomial time  for
co problems  polynomial time using np oracle  for aso problems  indeed
   

fifaber  truszczynski    woltran

violates conjunction three conditions corollary    main observation
model checking polynomial classical semantics  co np complete
equilibrium semantics  see pearce  tompits    woltran        thm     
hardness follows considering equivalence problem optimizations problems
empty selectors  known co np hard  for classical semantics  p  hard  for equilibrium semantics  see pearce et al         thm        
ranked case  observe increase complexity  explained
characterization given theorem    instead outcome checking  characterization
involves optimal outcome checking  difficult  unless polynomial hierarchy
collapses  
theorem    given optimization problems p q rank interval  i  j   deciding
p s  i j  q p   complete case co problems p   complete case aso
problems 
proof   sketch  detailed argument provided appendix b   membership part essentially follows arguments proof theorem     problem
deciding  p i   co np co problems p  aso problems 
hardness part  reduce following problem sel equivalence co problems  given two propositional theories   decide whether possess
minimal models  problem known p   complete  e g   eiter et al       b 
thm         problem remains hard negation normal form  nnf 
given alphabet  adapt construction used brewka et al          
given negation normal form theory   construct co problem pt setting
ptg

   u u     u u    u u   

pts

   u    u   u u   

u denotes set atoms occurring    u u    stands theory
resulting replacing u u   we note ranks rules selector
   
elements  pt   one to one correspondence minimal models
  theories u follows minimal models
 ps      pt    since problems ps pt selectors 
latter condition equivalent ps s   pt  which shown directly exploiting
characterization s     
concerning hardness part aso problems  use following problem  given
two open quantified boolean formulas  qbfs   x      x     decide whether
possess minimal models  problem p   hard  see lemma    appendix
a    x     construct p follows 
pg    z z     z x  
  y     w  w y  w      
  z z     w  w w  
ps    x    x   x x  
   

fistrong equivalence qualitative optimization problems

 z z     stands formula obtained replacing z z    x     again 
stress ranks rules selector     elements  p  
one to one correspondence minimal models  x     reason
show x   formulas  x     x   
minimal models p s   p    
theorem    rank interval  i  j  given input  fixing interval 
hardness results still hold  provided      fact  critical condition corollary  
 p i      q i    rank intervals     j   selectors become empty condition
reduced  p      q   easier decide 
characterizations imply remaining problems co np  strong
gen equivalence  co np hardness follows directly theorem    co np completeness
deciding strong equivalence two propositional theories  for semantics  
theorem    given two co  aso  respectively  problems p q  deciding p g q
co np complete 
finally  combined case hardness result follows theorem    co npcompleteness deciding strong equivalence propositional theories 
theorem    given ranked co  aso  respectively  problems p q  rank interval
s  i j 
 i  j   deciding p g
q co np complete 
construction  hardness results hold already simple optimization problems 

   discussion
introduced formalism optimization problems  generalizing principles aso
programs  particular  separation hard soft constraints  brewka et al         
focused two important specializations optimization problems  co problems
aso problems  studied various forms strong equivalence classes optimization problems  depending contexts considered  specifically  considered
following cases  new preference information added  hard constraints remain unchanged  strong sel equivalence   hard constraints added preferences remain
unchanged  strong gen equivalence   hard constraints preferences added
 strong equivalence   best knowledge  natural classification equivalences preference formalisms studied yet  certain cases
notions coincide  theorem     longer true underlying semantics
changed ranks contexts restricted 
previous work  notion strong equivalence  both hard constraints preferences
added  studied logic programs weak constraints eiter et al  
     a  logic programs ordered disjunctions  lpods  faber et al          
former formalism  separation strong equivalence different notions
suggested aso problems would possible  it instructive compare
eiter et al       a  lemma     results  e g   corollary      similar separation
strong equivalence straightforward lpods  reason syntactic nature
lpod rules act hard constraints preference rules time  faber et
   

fifaber  truszczynski    woltran

al          considered strong equivalence respect contexts logic programs
 which similar strong gen equivalence  combined case strong equivalence
 called strong equivalence arbitrary contexts there   consider
counterpart notion strong sel equivalence  fact  even unclear whether
every lpod generating selecting modules cleanly separated 
paper  established characterizations three types strong equivalence 
exhibit striking similarities  characterizations strong sel equivalence co
aso problems theorem   precisely same  mirroring fact generators subject change  theorem    concerns strong gen equivalence co
aso problems  case  characterizations consist two requirements  strong
equivalence generators  equality strict preference relations restricted
class models generators  difference comes fact strong
equivalence classical equilibrium model semantics different characterizations  theorem    concerns combined case strong equivalence
differentiate co aso problems implicitly  as before  conditions
strong equivalence different two semantics   moreover  characterizations
provided theorem    arise rather systematic way given theorems  
    case different semantics used strongly suggests
abstract principles play here  currently pursuing direction 
conjecturing inherent feature preference formalisms separation
logical preferential constraints 
coming back lpods  comments suggest identifying split representation formalism might interest  could lead alternative characterizations  combined  strong equivalence derived characterizations two
one dimensional variants 
next  note results give rise problem rewriting methods transform
optimization problems strongly equivalent ones  provided two simple examples
illustrating application results example   corollary     similar examples
constructed results concerning strong gen equivalence  combined  strong
equivalence  systematic study optimization problem rewriting rules result
strongly equivalent problems subject future work 
finally  established complexity deciding whether optimization problems
strongly equivalent  notably  general case strong  combined  equivalence problem co np complete co aso problems  holds true strong
gen equivalence problem  strong sel equivalence problem  situation
complex  contexts form     j        considered  problem deciding
strong sel equivalence co np complete co problems p   complete aso problems  rank interval allowed part input rank interval fixed  i  j  
   problem gets computationally harder  case aso problems  p   hard 
case co problems p   hard  difference co problems aso problems
case strong sel equivalence respect contexts consisting preference rules
ranks intervals     j        comes fact corresponding concepts
strong sel equivalence depend  particular  whether two theories equivalent
respect models  co problems  respect equilibrium models  aso problems  
two types equivalence different complexities  jump complexity
   

fistrong equivalence qualitative optimization problems

strong sel equivalence arbitrary rank intervals  i  j  allowed fixed
  comes fact cases  concept depends properties
class outcomes optimal respect rules ranks less i 
cases depends properties class models  decision problems concerning optimal
outcomes  such as  two theories optimal models  harder
corresponding versions problems models  explaining jump  results
strong sel equivalence imply ranked optimization problems cannot efficiently
simulated simple optimization problems 

acknowledgments
thank reviewers useful constructive comments  first author
supported regione calabria eu por calabria fesr           within
pia project dlvsystem s r l   miur prin project loden 
second author supported nsf grant iis         

appendix a  useful lemmas
provide several lemmas use later proofs results discussed
main body paper 
first two lemmas given without proofs  easy consequences results
ferraris        ferraris lifschitz        
lemma    let p theory  classical model p   let  i     a  
u   i   a   i   then   p  i     mod  p  i       i  
lemma    let p theory  i  j two  classical  models    j  let
 i  j     a b   i  b j 
 a b   i  b u   j 
 a b   u   i  b j 
 a b   u   i  b u   j  
 p  i  j     mod  p  i   j        i  j  
lemma    let p optimization problem   p j    j    let
j

j

rj  i     a       i   a       u   i   

    p rj  i   
   every j j    pj j   p rj  i  j 
   

fifaber  truszczynski    woltran

proof  proving      simplify notation  write r rj  i   since  p j   
 p    clearly   p r     p   so   p r   show  p r  
let us consider arbitrary interpretation j  p r  assume j  p r i 
particular  j    so  diff r  i  j    j  diff p  i  j    j  diff p r  i  j    j 
consequently  j   p r  j i  since rules r rank j  follows j  p j i 
contradiction fact  p j    thus  diff p  i  j  j  since diff r  i  j    j 
diff p r  i  j    j  therefore  j  p r implies j  r i  contradiction
 since  definition rj  i    r  r j interpretation j   follows
every j  p r   j   p r i  is   p r  
assertion     evident  since definition rj  i    r   r j interpretation j    i   

lemma    let p optimization problem  i  j interpretations i  j  p j   
union following sets rules 
j    let rj   i  j  ls j
u
j

 a b       a  b j 
j

 a b       i  b u   j 
j

 a b       u   i  b j 
j

 a b       u   i  b u   j  
following hold 
   every r rj   i  j   vi  r    vj  r      
   every interpretation k
   i  j   rule r rj   i  j  vk  r      
    p j j
   p rj   i  j   
proof  simplify notation  write r  rj   i  j  
assertion     evident  prove assertion      note conjunction
formulas appear top options preference rules r  equivalent
 
 
 
 


 a   i   a   u   i 
 b   b j   b   b u   j   
formula two models  j  thus  every interpretation k 
least one formulas appears top options preference rules r 
satisfied k  corresponding preference rule r  vk  r      
finally  prove assertion      let us assume  p j  together     
 
implies  p r j  thus  j
   p r     prove converse implication  let us
 
assume   p j  together      implies   p r j  next  note
 
diff p  j  k    j  since j  p j    k   p r j  diff p  j  k  j  property    
 
proved implies k   p r j  since k arbitrary interpretation different
 
j  since   p r j  j  p r    follows   

   

fistrong equivalence qualitative optimization problems

next  note property allows us infer strong sel equivalence two problems treated co problems strong sel equivalence problems
treated aso problems  and conversely   property relies fact changing
selectors affect class outcomes  proof simple omit it 
lemma    let p q optimization problems mod  p g      p g  
mod  q g      qg     i  j  rank interval  then  p s  i j  q p q viewed
co problems  p s  i j  q p q viewed aso problems 
final results section useful complexity results 
lemma    deciding whether open qbfs  x     x    
negation normal form  minimal models p   hard 
proof  show result reduction p   hard problem deciding satisfiability qbfs form zxy   negation normal form  let
qbf form consider following formulas  z      z     z z   u
v fresh atoms 
 
 

 
 z z      
x u   v v 
zz

 

 
zz

xx
 

 z z    

 


x v   u u  

xx

clear negation normal form  difference
compared latter uses u former uses v vice versa 
point including conjuncts v v u u occurrences u v
  show  u     u    minimal models
 with open variables u   z z   x  u  v   true 
note considering models minimal models  u     u   
move quantifier appears directly front  
occurrences atoms outside  
clear contains neither u v  model  u   
model  u     consequently  holds
minimal model  u    minimal model  u    
only if direction  let us assume false  then  exists interpretation z
atoms z  every interpretation j atoms x  false  let us
consider mu    z   i   x  u   clearly  mu model yv  n model
n mu    z   i   n conjunct zz  z z      thus 
n z   i  follows false atoms z x interpreted n and 
consequently  x  u  n   thus  n   mu   implies mu minimal model
  essentially argument shows mv    z   i   x  v  minimal
model   since mu    mv   different minimal models 
if direction  let us assume zxy true  let minimal model  
clearly  v
   as    v  model    let us assume u   let us
assume addition x        assumptions imply interpretations
   

fifaber  truszczynski    woltran

  z atoms z j   x atoms x  true  follows   u 
model   contradiction  thus  x   let   z  since zxy
true  interpretation j x atoms x true  atoms
z interpreted atoms x interpreted j  follows  z   i   j
model   since  z   i   j   contradiction  follows
u
    consequently  comment above  minimal model   converse
holds symmetry argument  thus  two formulas minimal models   

lemma    given ranked preference rule r  interpretation i  calculating vi  r 
done polynomial time 
proof  initialize variable    check whether     bd  r  so  halt  then  check
whether    hd  r  so  halt  otherwise increment continue checking 
options head r exist  set      checks model checking task
propositional formula hence polynomial time  upon halting  equal vi  r    

lemma    given optimization problem p two interpretations i  j  calculating
diff p  i  j  done polynomial time 
proof  initialize variable x   scan rules p ranked preference
rule r p   determine whether vi  r     vj  r   in polynomial time due lemma      so 
set x rank  r  rank  r    x  processed rules  x equal diff p  i  j    

lemma    given optimization problem p   two interpretations i  j  deciding whether
 p j holds done polynomial time 
proof  first  sort rules p ranks  starting lowest rank upwards 
following rank i  check rules rank whether vi  r    vj  r 
vi  r  vj  r   vi  r    vj  r  holds least one rule vi  r  vj  r 
rules rank i  accept  rules r r  rank vi  r    vj  r 
vi  r      vj  r     reject  ranks processed  reject  lemma     steps
doable polynomial time   

lemma    given classical optimization problem p interpretation i  deciding
whether  p   co np 
proof  show witness j complementary problem  deciding whether

   p    verified polynomial time  j   i  verify polynomial time
satisfy propositional theory p g   well known feasible polynomial time  otherwise  verify polynomial time j satisfies p g j  p  both
polynomial time  latter lemma       

   

fistrong equivalence qualitative optimization problems

lemma    given answer set optimization problem p interpretation i  deciding
whether  p   p   
proof  show witness j complementary problem  deciding whether

   p    verified polynomial time using np oracle  j   i  verify
satisfy p g using np oracle  possible answer set checking
co np complete  pearce et al         thm      otherwise  verify using np oracle j
satisfies propositional theory p g j  p  in polynomial time lemma       

appendix b  proofs
theorem   ranked optimization problems p q  every rank interval  i  j  
p s  i j  q following conditions hold 
    p i      q i  
    p p i      q
 q i  
   every i  j  p i     diff p  i  j    diff q  i  j   diff p  i  j   
diff q  i  j  diff p  i  j    j diff q  i  j    j 
s  i j 

proof     let r lu
let  p r   lemma      p r  i    since
s  i j 
r lu   r i         thus   p i    assumption  follows  q i   
particular   q i   and   q i      q    q   since rg    
 q r   show  q r  show j  q r 
j  qr i  let us assume contrary j exists  lemma   
three possibilities 
first  assume diff q  i  j    diff r  i  j  j  q i  latter property
implies diff q  i  j   otherwise  would j  q i i  contrary  q i    
particular  q i j and  since  q i    follows j  q i   
     j  p i    thus       j  p i  diff q  i  j  j diff r  i  j    j and 
s  i j 
r lu   diff r  i  j      since j  p i  j  p r i  otherwise  diff q  i  j    j 
  diff q  i  j  then       diff p  i  j    diff q  i  j     diff q  i  j       
diff p  i  j  i  either case  diff p  i  j    diff r  i  j   since j  p i  j  p r i 
s  i j 
next  let us assume diff q  i  j    diff r  i  j  j  r i  since r lu  
follows diff r  i  j  so  diff q  i  j    i  recall  q i   
thus  j  q i   and  consequently  j  p i    diff q  i  j  j then      
diff p  i  j    diff q  i  j  so  diff p  i  j    diff r  i  j   j   diff q  i  j  then 
     j   diff p  i  j   since diff q  i  j    diff r  i  j   diff r  i  j    and  consequently 
diff r  i  j  j  thus  diff p  i  j    diff r  i  j  case  too  since j  r i  j  p r
follows 
finally  let us assume diff q  i  j    diff r  i  j   j  q j  r i  since
s  i j 
r lu   diff r  i  j  i  thus  diff q  i  j  and  since  q i    j  q i   
    j  p i   and       j  p i  consequently  j  p r i 
cases obtained j  p r i  contrary  p r   contradiction 
   

fifaber  truszczynski    woltran

   let us assume  p i       q i    without loss generality  assume
 p i      q i   define r      ri  i   lus  i   ri  i 
lemma     lemma   p r   hand  since
   q i  
s  i q  contrary
r ls  i
 


 
  q

r 
  

lemma
  


 
 q

r  
thus 
p

 
 i
u
assumption 
follows  p i      q i    is  condition     holds  prove condition
     let us consider interpretations i  j  p i    p j  let ri   i  j 
selector defined lemma     since  p j  lemma       implies j
   p ri   i  j   
consequently  j
   q ri   i  j    lemma       again  follows  q j 
q
symmetry    j implies  p j so  condition     holds 
prove condition      let us assume interpretations j satisfy
assumptions violate corresponding conclusion  follows  write p
diff p  i  j  q diff q  i  j   thus  p   q   i  p    q  p j
q j  without loss generality  assume p   q  follows p finite and 
consequently  diff p  i  j       j  moreover    q p j 
let us assume first p   i  take problem r      ri  j    ri  j 
specified lemma    define p     p r q    q r  since i  j  p i  
i  j  q i    assumptions  q   i  thus  j qi and  particular 
j qi i  recall    j  consequently  assertion     lemma   
 
    diff p    i  j   
j  q i  since rules r ranks i  i  j  p i
 
 
diff p  i  j    i  follows j   p  otherwise  diff p  i  j    would
 
j  p i i   let us define r       ri   i  j    ri   i  j  specified lemma     since
 
j   p i  assertion     lemma   p   r     p   r    p  r r    
thus   p  r r     and  p s  i j  q   q  r r        q  r    
 
assertion     lemma     j   q i  contradiction 
next  let p   i  clearly    p j j   p i  without loss generality  let us assume
j   p i  let r       ri  i  j    let us define p     p r  q    q r    since
     moreover  j   p
rules r  ranks i  i  j  p i   implies i  j  p i
 
follows lemma       j   p i  let r      ri  j    rules r rank
 
 
diff p  i  j    diff p  i  j    i  thus  follows j   p r i  moreover  every
 
 
     diff p    k  i  i 
k
   i  j   diff p  k  i    i  k   p r follows  p i
 
k   p r follows lemma        thus   p   r   hand 
 
recall diff q  i  j    q   i  thus  diff q  i  j    i   lemma         follows
 
 
j qi i  consequently  lemma        j  q r i  thus 
   q  r  
contradiction 
follows p   i  complete proof      recall p j  clearly    p j
j   p i  without loss generality  let us assume j   p i  let r       ri  i  j   
let us define p     p r  q    q r    let us assume interpretation k
 
 
p 
p
p
 i  j   k   i  lemma        follows diff  i  k    i  thus  diff  i  k    i 
 
contradiction  p i    thus  every interpretation k
   i  j   k   p
 
and  argument  k   p j  consequently  every interpretation k
   i  j  
 
 
p p
p p
k   
k   
j  addition  since i  j  p i    lemma       obtain
 
 
     addition  lemma       
neither  p p j j  p p i  thus  i  j  p p
 
 
diff p  i  j    diff p  i  j    p and  since j   p i  j   p i 
   

fistrong equivalence qualitative optimization problems

 

 

let r      rp  j     i  diff p  i  j    p   ii  j   p i   iii  rules r
 
 
rank p  follows j   p r i  moreover  every k
   i  j   diff p  k  i    i 
 
 
 
     diff p  k  i  i  k   p r follows
k   p r follows  p i
lemma        and definition p      thus   p   r   hand 
 
recall diff q  i  j    q   p  thus  diff q  i  j    p   lemma         follows
 
 
   q  r  
j qp i  consequently  lemma        j  q r i  thus 
s  i j 
 
 
 
contradiction  we recall p
q  p   p  r r    q   q  r r     and 
s  i j 
p j  r r  lu     
theorem    co  aso  respectively  problems p q  p g q
p g qg strongly equivalent  that is  mod  p g     mod  q g   co problems 
modht  p g     modht  qg   aso problems   pmod p g      q
mod q g    
proof     first assumption implies strong equivalence generators p g qg
relative corresponding semantics  we recall case classical semantics 
strong standard equivalence coincide   follows every problem r lgu  
 p r     q r   moreover  semantics   p r  mod  p g rg   mod  p g  
and  similarly   q r  mod  qg rg   mod  qg    since  pmod p g      q
mod q g    
qr
r
lemma   
r lgu change preferences   p p
g rg       qg rg    
 p r     q r  

   let us assume p g qg strongly equivalent  then  problem
r lgu  p r      q r   without loss generality  assume
interpretation i   p r     q r   let us define problem lgu setting
    i       i  defined lemma     lemma   p r      i 
 q r       former property implies necessarily preferred 
 p rt    latter one implies  qrt       contradiction
assumption p g q  thus  p g qg strongly equivalent  is  mod  p g    
mod  qg    case p q co problems  modht  p g     modht  qg   
case p q aso problems 
since modht  p g     modht  qg   implies mod  p g     mod  qg    latter identity holds
two cases  equality  write mod  p g  
mod  qg    remains show  pm   q
  towards contradiction  let us assume
i  j exactly one two relations  without loss generality
assume  p j   q j  former identity implies  particular 
   j  let     i  j       i  j  theory defined lemma     lemma 
 p      q      i  j   clearly  j
   p   j  q    contrary
assumption p g q   
theorem    ranked co  aso  respectively  problems p q  every rank
s  i j 
interval  i  j   p g
q following conditions hold 
   p g qg strongly equivalent  that is  mod  p g     mod  q g   co problems 
modht  p g     modht  qg   aso problems 
    pmod p g      q
mod q g  
   

fifaber  truszczynski    woltran

   every i  j mod  p g     diff p  i  j    diff q  i  j   diff p  i  j   
diff q  i  j  diff p  i  j    j diff q  i  j    j
p

q

 i
 i
    mod p
g      mod q g    

proof     proposition    suffices prove every r lgu   p r s  i j  qr 
      p r     q r   we recall  p   denotes set outcomes optimization problem p    p     mod  p g   case co problems 
 p      p g   case aso problems   moreover  type problems 
 p r  mod  p g r g   mod  p g   and  similarly   q r  mod  q g r g  
mod  q g    since rules r rank least i  condition     follows
 p r 
 qr 
  p r  i    qr  i   lemma      p r  i       q r  i   so  condition
    theorem   holds p r q r  since   p r  i    p r  mod  p g   
since corresponding inclusions hold q  too  conditions        theorem
p q imply conditions        theorem   p r q r  thus 
theorem    p r s  i j  q r 
s  i j 

   let us assume p g
q  then  p g q follows and  theorem     implies
appropriate version condition      since modht  p g     modht  qg   implies mod  p g    
mod  q g    two versions assertion mod  p g     mod  q g   
proof  write mod  p g   and  equality 
mod  q g   
next  interpretations i  j    j  define r     i  j     
 i  j  lemma     let us define p    p r q    qr  p  s  i j  q   
moreover  lemma      p       q       i  j  
prove condition      let us assume  p i j  follows  p  j  we recall
r contains preference rules   since  p       i  j   j
   p     p    
assumption  j
   q     since  q       i  j    q  j  particular 
 q     diff q  i  j    then  since r preference rules   q i j  thus  let us
assume diff q  i  j  let us define r       ri  j    ri  j  lemma
    since  i   p i j   ii  r preference rules   iii  preference rules r 
 
rank i  follows  p  r j  generator module r  empty  follows
 p  r       q  r       i  j   thus  j
   p  r    and  consequently  j
   q  r    
q
q 
since diff  i  j  i  diff  i  j  i  moreover   q    so    q    i   
thus  j   q    i    lemma     j  q  r     contradiction  argument shows
 p i j implies  q i j  converse implication follows symmetry so 
condition     holds 
prove condition      let us assume  p j  diff p  i  j    i   p i j
and        q i j  thus   q j  let us assume diff p  i  j  i  since
 p       i  j  since  p j implies  p  j  j
   p     thus  j
   q     since
 q       i  j    q  j so   q j 
prove condition      without loss generality assume   diff p  i  j   thus 
  diff p   i  j  i  j   p    i    latter follows properties  p       i  j  diff p   i  j    diff p  i  j    i  since p  s  i j  q   
condition     theorem   holds p    q    j  is  diff p   i  j    diff q   i  j 
diff p   i  j    j diff q   i  j    j  consequently  diff p  i  j    diff q  i  j 
   

fistrong equivalence qualitative optimization problems

diff p  i  j    j diff q  i  j    j  is  condition     holds   
theorem    given optimization problems p q  deciding p q co np complete
case co problems p   complete case aso problems 
proof  membership  consider complementary problem  corollary   
specified problem decide whether least one conditions          
holds 
    p       q   equivalently  i  exactly one identities  p  
 q  holds 
   i  j  p    diff p  i  j     diff q  i  j  
    p p       q
 q    equivalently  i  j  i  j  p    q  exactly
one properties  p j  q j holds 
show problem np co problems p  aso problems 
say pair interpretations i  j witness instance problem
yes instance demonstrates one conditions           hold  easy see
witness exists  witness i  j j consist atoms
occur p q  witness guessed  condition     verified
polynomial time co problems  this model checking problem interpretation
theory  and  aso problems  polynomial time assist two calls
np oracle  since model checking equilibrium model semantics co np complete
 theorem    pearce et al           since condition     verified polynomial time
lemma     condition     polynomial time co problems polynomial time
assist four calls np oracle aso problems  lemma    result
pearce et al          mentioned above   membership part assertion follows 
hardness  observe case problems empty selectors  coincides
equivalence propositional theories case co problems  equivalence
equilibrium theories case aso problems  former well known co np hard 
latter p   hard  theorem     pearce et al            
theorem    given optimization problems p q rank interval  i  j   deciding
p s  i j  q p   complete case co problems p   complete case aso
problems 
proof  prove membership part  consider complementary problem 
theorem    problem consists deciding whether case least one
following conditions holds 
    p i       q i    equivalently  interpretation i  exactly one properties  p i    q i   holds 
    p p i       q
 q i     equivalently  interpretations i  j  p i    q i  
exactly one properties  p j  q j holds 
   i  j  p i    q i     diff p  i  j    diff q  i  j  
diff p  i  j     diff q  i  j  holds diff p  i  j  j diff q  i  j  j 
   

fifaber  truszczynski    woltran

call pair interpretations i  j demonstrates one conditions
holds witness  easy see witness  one consists
atoms occur p q  show complementary problem p 
co problems p  aso problems showing witness guessed
verified polynomial time  using np oracle dealing co problem
p  oracle dealing aso problem 
consider witness i  j two interpretations  one test whether i  j verifies
condition      only matters here  polynomial time two calls np oracle co problems  lemma      two calls p  oracle aso problems
 lemma      verify condition      need four calls respective oracles test
i  j  p i    q i   polynomial time computation test exactly one
properties  p j  q j holds  lemma      similarly  condition      use
four calls respective oracles test i  j  p i    q i   polynomial time
computation test condition involving diff p  i  j  diff q  i  j   lemma     
hardness part  start case co problems  therefore  reduce
following problem strong sel equivalence  given two propositional theories   decide
whether possess minimal models  problem known p   complete
 for instance  equivalence positive disjunctive programs known p   complete  see
e g   eiter et al       b  thm        means testing whether two propositional formulas
particular class minimal models   problem remains hard
negation normal form alphabet  given negation normal form theory
construct co problem pt elements  pt   one to one
correspondence minimal models   adapt construction used  brewka
et al          specifically  set
ptg    u u     u u    u u   
u collection atoms occurring    u u    stands replacing u
u   
pts    u    u   u u   
first observation outcome pt must form  y     u   i 
u   interpretation u write      y     u   i   clear
   u      u    hence          u u    
hence one to one mapping models outcomes   pt  
let us assume    pt         n
n       indeed n      n      ptg rules r pts form u    u 
u   n   obtain vn    r            vm    r  rules r  pts
vn    r          vm    r     implies n    pt     contradicting    pt    thus 
minimal model  
conversely  let us assume minimal model      pt  
n    pt   n    pt   hold  implying    pt    indeed 
n    pt     vn    r    vm    r  least one r pts vn    r    vm    r   
r  pts   latter implies n former shows n      since n   
contradicts assumption minimal model   follows    pt   
thus    pt   minimal model   moreover 
u follows minimal models
   

fistrong equivalence qualitative optimization problems

ps s   pt   indeed  r lus   easy verify  ps      ps r 
 pt      pt r   observation follows fact distinct
i  j  ps   ps j distinct i  j  pt   pt j  thus 
rules r which  weaker rank  break ties  affect sets optimal
outcomes 
concerning hardness aso problems  use similar idea  however  shall
use following problem  given two open qbfs  x      x     decide whether
two qbfs possess minimal models  lemma     problem p   hard
and  moreover  assume negation normal form  reduction
combines idea reduction general asp consistency  eiter
  gottlob         precisely  z x introduce new variable z    
construct p given  x    follows 
pg    z z     z x  
  y     w  w y  w      
  z z     w  w w  
 z z     stands replacing z z     w globally new atom 
selector set
ps    x    x   x x  
equilibrium model pg must contain w  otherwise w w would unsatisfied  
must contain  y         otherwise w y  w   would
unsatisfied   write w  y         w  set contained equilibrium
model  moreover  equilibrium model must form v  z     z x   v   w  
indeed  one x x  must hold x x satisfy xx    both  otherwise
hm    x     ht pg well  contradicting fact equilibrium model pg  
interpretation x write      x    x x   i  w pg   one show
model  x      equilibrium model pg   indeed 
satisfies  x     hi         ht pg j   holds hj       ht pg  
hand  satisfy  x    exists j
j      x     follows hi       y  
  j   y     j   w        ht pg  the
key element argument  z z     contains occurrences negation 
negation normal form so        y  
  j   y     j   w        z z     
 
property allows one show hi    y  
  j  y     j  w        ht  z z     w  
 
thus  equilibrium model pg  
correspondence models  x    outcomes  equilibrium
models    p established  handle issue minimality case co
problems  let us assume first    p    then  demonstrated  satisfies
 x     moreover  n   n satisfy  x     indeed
n would satisfy  x     would  i  n    p     ii  rules r ps
form u    u  u   n   vn    r            vm    r    iii  rules
r  ps   vn    r          vm    r     three properties would imply n    p     contradicting    p    conversely  let us assume minimal model  x    
   p   n    p   show n    p   hold
   

fifaber  truszczynski    woltran

 implying    p     end  reason follows  n    p   would hold 
vn    r    vm    r  least one r ps   vn    r    vm    r     r  ps  
course implies n and  since n satisfies  x     we recall n  
equilibrium model pg so  n model  x      contradicts assumption
minimal model  x     thus    p  
minimal model  x     fact  reasoning case co problems 
obtain  x     x    minimal models
p s   p    
theorem    given two co  aso  respectively  problems p q  deciding p g q
co np complete 
proof  deciding strong equivalence propositional theories classical semantics
co np hard case  strong equivalence equivalence coincide  conp hard equilibrium model semantics  lin         thus  hardness part
assertion follows corollary    
prove membership  consider complementary problem  theorem    
consists deciding whether least one conditions         holds 
   p g qg strongly equivalent or  equivalently  mod  p g      mod  q g    co
problems  modht  p g      modht  qg    aso problems 
    pmod p g       q
mod q g   or  equivalently  interpretations i  j models
g
p qg   exactly one properties  p j  q j holds 
consequently  consider pair interpretations i  j witness instance
problem yes instance model  for co problems  hi  ji
ht model  for aso problems  exactly one two theories p g qg   i  j
models p g qg exactly one properties  p j  q j holds 
easy see witness exists  witness i  j
j consist atoms occur p q  witness guessed  verifying
 showing condition         holds  done polynomial time  well
known checking whether model  hi  ji ht model  propositional theory
done polynomial time  holds true deciding  p j  q j
 lemma      thus  complementary problem np   
theorem    given ranked co  aso  respectively  problems p q  rank interval
s  i j 
 i  j   deciding p g
q co np complete 
proof  membership  consider complementary problem  theorem    
consists deciding whether least one conditions           holds 
   p g qg strongly equivalent  that is  mod  p g      mod  q g   co problems 
modht  p g      modht  qg   aso problems  
   interpretations i  j models mod  p g   mod  q g    exactly
one properties  pmod p g   j  q
mod q g   j holds 
   

fistrong equivalence qualitative optimization problems

   i  j mod  p g     diff p  i  j    diff q  i  j   diff p  i  j    
diff q  i  j  holds diff p  i  j  j diff q  i  j  j 
p

q

 i
 i
    mod p
g       mod q g   or  equivalently  interpretations i  j models
mod  p g   mod  q g    exactly one properties  p i j  q i j holds 

prove complementary problem np  proofs  use
membership witness pair interpretations i  j explicitly demonstrates one
conditions           holds  before  witness exists  one consisting
atoms occurring programs p q only  condition  given pair i  j
 restricted atoms p q   one verify polynomial time whether condition
holds  for condition      repeat argument previous proof  conditions    
     use lemma     condition     lemma     
hardness follows directly co np completeness deciding strong equivalence two propositional theories either semantics consider corollary      

references
boutilier  c   brafman  r   domshlak  c   hoos  h     poole  d          cp nets  tool
representing reasoning conditional ceteris paribus preference statements 
journal artificial intelligence research             
boutilier  c   brafman  r   domshlak  c   hoos  h     poole  d          preference based
constrained optimization cp nets  computational intelligence             
brewka  g   niemela  i     syrjanen  t          logic programs ordered disjunctions 
computational intelligence                 
brewka  g   niemela  i     truszczynski  m          answer set optimization  gottlob 
g     walsh  t   eds    proceedings   th international joint conference
artificial intelligence  ijcai        pp          morgan kaufmann 
brewka  g   niemela  i     truszczynski  m          answer set optimization  unpublished
manuscript 
calimeri  f   ianni  g   krennwallner  t     ricca  f          answer set programming
competition  ai magazine                 
delgrande  j  p   schaub  t   tompits  h     wang  k          classification survey preference handling approaches nonmonotonic reasoning  computational
intelligence                 
eiter  t   faber  w   fink  m     woltran  s       a   complexity results answer set
programming bounded predicate arities implications  annals mathematics
artificial intelligence                  
eiter  t   fink  m     woltran  s       b   semantical characterizations complexity
equivalences answer set programming  acm transactions computational logic 
      
   

fifaber  truszczynski    woltran

eiter  t     gottlob  g          computational cost disjunctive logic programming 
propositional case  annals mathematics artificial intelligence               
    
faber  w   truszczynski  m     woltran  s          strong equivalence qualitative optimization problems  brewka  g   eiter  t     mcilraith  s  a   eds    proceedings
  th international conference principles knowledge representation
reasoning  kr        pp          aaai press 
faber  w     konczak  k          strong order equivalence  annals mathematics
artificial intelligence                
faber  w   tompits  h     woltran  s          notions strong equivalence logic
programs ordered disjunction  brewka  g     lang  j   eds    proceedings
  th international conference principles knowledge representation
reasoning  kr        pp          aaai press 
ferraris  p          answer sets propositional theories  baral  c   greco  g   leone 
n     terracina  g   eds    proceedings  th international conference logic
programming nonmonotonic reasoning  lpnmr        vol       lecture
notes computer science  pp          springer 
ferraris  p     lifschitz  v          mathematical foundations answer set programming 
show them  essays honour dov gabbay  pp          college
publications 
gelfond  m     lifschitz  v          classical negation logic programs disjunctive
databases  new generation computing            
goldsmith  j   lang  j   truszczynski  m     wilson  n          computational complexity dominance consistency cp nets  journal artificial intelligence
research             
goldsmith  j     junker  u   eds            special issue preferences  vol        ai
magazine 
heyting  a          die formalen regeln der intuitionistischen logik  sitzungsberichte der
preussischen akademie der wissenschaften          
kaci  s          working preferences  springer 
lifschitz  v          computing circumscription  joshi  a  k   ed    proceedings
 th international joint conference artificial intelligence  ijcai        pp 
        morgan kaufmann 
lifschitz  v   pearce  d     valverde  a          strongly equivalent logic programs  acm
transactions computational logic                
lin  f          reducing strong equivalence logic programs entailment classical
propositional logic  fensel  d   giunchiglia  f   mcguiness  d  l     williams  m a   eds    proceedings  th international conference principles knowledge
representation reasoning  kr        pp          morgan kaufmann 
marek  v  w     truszczynski  m          nonmonotonic logic  context dependent reasoning  springer  berlin 
   

fistrong equivalence qualitative optimization problems

marek  v     truszczynski  m          stable models alternative logic programming
paradigm  apt  k   marek  w   truszczynski  m     warren  d   eds    logic
programming paradigm     year perspective  pp          springer  berlin 
niemela  i          logic programming stable model semantics constraint programming paradigm  annals mathematics artificial intelligence                   
pearce  d          new logical characterisation stable models answer sets  dix 
j   pereira  l  m     przymusinski  t   eds    proceedings  th international
workshop non monotonic extensions logic programming  nmelp        vol 
     lecture notes computer science  pp        springer 
pearce  d   tompits  h     woltran  s          characterising equilibrium logic nested
logic programs  reductions complexity  theory practice logic programming                
simons  p   niemela  i     soininen  t          extending implementing stable
model semantics  artificial intelligence              
turner  h          strong equivalence made easy  nested expressions weight constraints 
theory practice logic programming                 

   


