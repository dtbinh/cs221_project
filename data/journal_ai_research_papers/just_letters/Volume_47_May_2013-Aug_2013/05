journal artificial intelligence research                  

submitted        published      

protecting privacy distributed computation
multi agent decision making
thomas leaute
boi faltings

thomas leaute a  epfl ch
boi faltings epfl ch

ecole polytechnique federale de lausanne  epfl 
artificial intelligence laboratory  lia 
station   
ch      lausanne  switzerland

abstract
large scale theft data corporate servers becoming increasingly common 
becomes interesting examine alternatives paradigm centralizing sensitive data
large databases  instead  one could use cryptography distributed computation
sensitive data supplied processed encrypted form  final
result made known  paper  examine paradigm used
implement constraint satisfaction  technique solve broad class ai problems
resource allocation  planning  scheduling  diagnosis  previous work
privacy constraint satisfaction attempted protect specific types information 
particular feasibility particular combinations decisions  formalize
extend restricted notions privacy introducing four types private information 
including feasibility decisions final decisions made  identities
participants topology problem  present distributed algorithms
allow computing solutions constraint satisfaction problems maintaining four
types privacy  formally prove privacy properties algorithms  show
experiments compare respective performance benchmark problems 

   introduction
protecting privacy information becoming crucial concern many users
increasingly ubiquitous information communication technologies  companies invest
lot effort keeping secret internal costs future development strategies
actors market  importantly competitors  individuals
need privacy personal information  instance  carelessly disclosing ones
activity schedule location might reveal burglars opportunities break ones home 
hand  accessing using private information often necessary solve
problems depend data  context supply chain management  companies
need exchange information contractors subcontractors quantities
goods must produced  price  scheduling meetings various
events friends co workers  individuals confronted challenge taking
coordinated scheduling decisions  protecting respective availability schedules 
artificial intelligence crucial tool help people make better decisions
privacy concerns  delegating part decision problem personal intelligent
agents executing carefully chosen algorithms far complex performed
     ai access foundation  rights reserved 

fileaute   faltings

human alone  particular  framework constraint satisfaction problems
 csps  core ai technology successfully applied many decision making
problems  configuration scheduling  solving strategic games  show
distributed ai algorithms used solve csps  providing strong guarantees
privacy problem knowledge  use techniques borrowed
cryptography  makes possible solve coordination problems depend secret
data  without reveal data parties  hand  distributed 
encrypted computation involving message exchange cost terms performance 
suitable tradeoff privacy scalability must found 
    motivating examples
paper  present set novel  privacy protecting algorithms distributed constraint satisfaction problems  discsps   wide class multi agent decision making problems applications many problems configuration  scheduling  planning  design
diagnosis  consider three examples illustrate privacy requirements might
arise  meeting scheduling  airport slot allocation  computing game equilibria 
meeting scheduling problem  maheswaran  tambe  bowring  pearce    varakantham         number meetings need scheduled  involving possibly overlapping sets
participants  taking account respective availability constraints  participants
given meeting must agree time meeting  one given participant
involved multiple meetings  creates constraints meetings  problem class  participants usually want protect privacy respective availability
schedules  well lists meetings involved in 
another problem class airport slot allocation  rassenti  smith    bulfin        
airlines express interests combinations takeoff landing time slots airports  corresponding possible travel routes aircraft  end goal airports
efficiently allocate slots airlines  point view airlines crucial
combinations slots interested remain private  indicate
routes intend fly  sensitive strategic information want hide
competitors 
finally  consider general class one shot strategic games  party game
 singh  soni    wellman         players invited party  must decide whether
attend  based respective intrinsic costs attendance  whether people
dislike choose attend  players would best play strategies form
nash equilibrium  single player better deviating chosen
strategy  problem computing equilibrium typical example multiagent decision making problem  privacy issue  players necessarily want
reveal attendance costs  whether dislike another invitee 
    four types private information
seen previous examples  information participants would
keep private differ nature  propose classify four privacy types 
briefly introduce illustrate here  formal definitions given section       
   

fiprotecting privacy thru distributed computation multi agent decision making

   agent privacy relates identities participants  consider instance
ceo wants schedule two meetings respectively journalist
another companys ceo  revealing journalist ceos involvement
decision making problem could leak companies plans merge 
case agent privacy considered critical 
   topology privacy covers information presence constraints 
type critical information airline companies want keep secret airport
slot allocation problem  presence constraint airline specific
airport reveals airlines strategic plans offer flights airport 
   constraint privacy nature constraints  covers instance
participants availability schedules meeting scheduling problem  and 
party game  whether player likes dislikes invitees 
   decision privacy solution eventually chosen problem 
depending problem class  type privacy may may relevant 
meeting scheduling problem  time chosen meeting necessarily
revealed participants meeting  however desirable hide
information non attendees 
previous work privacy discsp  assume participants honest 
curious  goldreich         honestly follow algorithm  interested
learning much possible agents private information based messages exchanged  note honesty assumption mean agents
assumed faithfully report true constraints algorithm  may tempted
strategize reporting slightly different constraints  hoping would lead algorithm select solution problem deem preferable them  issue
incentive compatibility addressed related work petcu  faltings 
parkes         orthogonal issue privacy addressed paper  furthermore  agent would take risk reporting constraints different true constraints 
reporting relaxed constraints could yield solution violates true constraints
would therefore viable  reporting tighter constraints could make overall
problem infeasible algorithm fail find solution all 
hand  algorithms depart previous work two respects  first 
previous work almost exclusively focused constraint privacy  often ignoring agent 
topology decision privacy  show address four types  algorithms
propose correspond various points tradeoff different levels privacy
efficiency  second  literature focuses quantitatively measuring
reducing amount privacy loss various discsp algorithms  developed
algorithms give strong guarantees certain pieces private information
leaked  contrast  previous privacy protecting algorithms  typically case
piece private information may leaked  small  probability 
rest paper organized follows  section   first formally defines discsp
framework four aforementioned types privacy  section   presents first
algorithm  called p dpop   section   describes p     dpop  algorithm 
   

fileaute   faltings

variant achieves higher level decision privacy  expense additional
computational overhead  another variant  called p   dpop   introduced section  
order improve constraint privacy  finally  section   compares performance
algorithms previous state art  several classes benchmarks 

   preliminaries
section first formally defines discsp framework  section       introduces
four types privacy  section      
    distributed constraint satisfaction
providing formal definition distributed constraint satisfaction  section        
recall existing algorithms discsp optimization variant  section        
      definition
distributed constraint satisfaction problem formally defined follows 
definition    discsp   discrete discsp tuple   a  x   a  d  c   
   a         ak   set agents 
x    x         xn   set variables 
  x mapping assigns control variable xi agent a xi   
   d         dn   set finite variable domains  variable xi takes values di  
c    c         cm   set constraints  ci s ci   ary function scope
 xi      xis ci      ci   di     dis ci    false  true   assigning false infeasible
tuples  true feasible ones 
v
solution complete assignment conjunction ci c ci   true 
case exactly assignment consistent constraints 
important assumptions discsp framework following  first 
assume details given constraint ci known agents involved 
agent wants keep constraints private  formulate way
involve variables controls  furthermore  assume two neighboring agents
 i e  agents share least one constraint  able communicate
securely  messages delivered fifo order finite time 
hand  assume two non neighboring agents initially ignore everything
other  even including involvement problem  particular  discsp algorithm
protects agent privacy require communicate directly 
even allow discover others presence  finally  assume agent honestly
follows protocol  focus preventing private information leaks agents 
figure   introduces simple graph coloring problem instance used illustrate algorithms throughout rest paper  assume five nodes
   

fiprotecting privacy thru distributed computation multi agent decision making

r    x 

  

  
x 

x     b
  

  

x 

  

x     b  r 

figure    discsp constraint graph simple graph coloring problem instance 

graph correspond five different agents  must choose color among red 
blue green  decisions modeled five variables x            x  domains
 r  b  g   agent may express secret  unary constraint variable  instance 
x  want assigned color red  binary  inequality constraints imposed
pair neighboring nodes  known two agents involved 
distributed constraint optimization  dcop  extension discsp formalism 
constraints specify variable assignments feasible infeasible 
assign costs  or utilities  assignments   optimal  solution
dcop one minimizes sum costs  or maximizes sum utilities  
algorithms paper easily generalized solve dcops  complexity
increase linear upper bound  assumed integer  cost
optimal solution  generalization left outside scope paper sake
conciseness  addressed leaute faltings        leaute        
      complete algorithms discsps
range distributed algorithms exist literature solve discsps dcops 
seen belonging two classes  depending order variables 
largest class consists algorithms order variables along linear order 
abt  yokoo  durfee  ishida    kuwabara         awc  yokoo         synchbb  hirayama   yokoo         aas  silaghi  sam haroud    faltings         afc  meisels  
zivan         disfc  brito   meseguer          comp apo  mailler   lesser        grinshpoun   meisels         concdb  zivan   meisels         afb  gershman  meisels   
zivan        concfb  netzer  meisels    grubshtein         linear order may
chosen fixed initially algorithm run  dynamically revised online 
second class  variables ordered along tree based partial order  includes
adopt  modi  shen  tambe    yokoo        variants bnb adopt  yeoh 
felner    koenig        bnb adopt   gutierrez   meseguer         dpop  petcu
  faltings        countless variants  ncbb  chechetka   sycara        
order variables following pseudo tree  definition     among aforementioned
pseudo tree based algorithms  dpop one using dynamic programming  dp  
others based search  algorithms proposed perform dp
different partial variable orders  action gdl uses junction trees  vinyals  rodrguezaguilar    cerquides         dcte cluster trees  brito   meseguer        
   

fileaute   faltings

      dpop algorithm
dpop algorithm originally designed solve optimization problems  dcops 
described terms utility maximization  one way apply pure satisfaction problems
 discsps  first reformulate discsp max discsp  constraints
longer boolean rather take values           stands feasibility
  infeasibility  cost minimizing variant dpop  described below 
applied find solution minimal cost  cost  hereafter called feasibility
value  corresponds number constraint violations  which want equal    
overview algorithm dpop instance general bucket elimination
scheme dechter         performed distributedly  algorithm     requires first arranging
constraint graph pseudo tree  formally defined follows 
definition    pseudo tree   pseudo tree generalization tree  node
allowed links  back edges  remote ancestors  pseudo parents  remote
descendants  pseudo children   never nodes branches tree 
pseudo tree arrangement constraint graph figure   illustrated figure   
pseudo tree naturally decomposes original problem two  loosely coupled subproblems  corresponding two branches  perform rest algorithm
parallel  figure   shows feas messages  originally called util messages
context utility maximization  exchanged propagation feasibility
values  following multi party dynamic programming computation  lines       
algorithm   overal dpop algorithm  variable x
require  pseudo tree ordering variables  px denotes xs parent
       util propagation  propagate feasibility values pseudo tree 
   m x  px     c c c   xscope c  scope c   childrenx pseudo childrenx     c x   
   join received messages 
yi childrenx
  
wait message  feas  mi  x     yi
  
sepyi scope mi  
  
m x  px     m x  px       mi  x   
  
  

   project x 
x root variable
   
x  px     arg minx  m x  px     
   
send message  feas  m x  px      px      px
    else x arg minx  m x      m x  px     actually depends x
  

  

   
   
   
   
   

    value propagation  propagate decisions top down along pseudo tree 
x root
wait message  decision  px     parent px
x x  px   px    
yi childrenx send message  decision  sepyi   yi
   

fiprotecting privacy thru distributed computation multi agent decision making

x 

x  x 
r b g
     
x  x 
x 
r
 
b
 
g
 

x  x 
x 
x  r b g
r
     
b
     
g
     

x 

x 

x 

x 

x 

x  x 
x 
x  r b g
r
     
b
     
g
     

figure    multiparty dynamic programming computation feasible value x    based
pseudo tree arrangement constraint graph figure    dashed
edge represents back edge pseudo parent pseudo tree 

part algorithm  messages travel bottom up along tree edges  consider instance
message sent agent a x    parent agent a x     message result
projection  lines        variable x  conjunction  line    x  two
constraints x     x  x     b  summarizes minimal number constraint violations a x    achieve  function ancestor variable x    generally 
message sent variable x summarizes minimal number constraint violations
achievable aggregate subproblem owned entire subtree rooted x 
function whose scope called separator x  line     dpop  separator x necessarily includes xs parent px   potentially ancestor variables  indicated
notation m px      instance  message x  x  summarizes minimal number
constraint violations achievable entire subtree rooted x    function x 
separator  px    x    x     notice separator variable x contain variables
neighbors x  example  x  x  separator descendent x 
constraint x    privacy aware algorithms presented later paper 
notion separator extended allow separators necessarily include
parent variable  may include multiple codenames referring variables 
might necessarily ancestors pseudo tree 
upon receiving messages x  x  x  x   line     agent a x    joins
 line    constraint x     x    variable x  projected resulting joint
table  produces message x  x   lines         end feasibility
propagation  line      root variable x  chooses value x  minimizes
number constraint violations entire problem  e g  x    r   decision
propagated downwards along tree edges via decision messages  originally called
value messages  variables assigned optimal values  lines        
   

fileaute   faltings

complexity given pseudo tree ordering n variables  dpops bottom up
top down phases exchange exactly  n    messages  one tree edge  
however  decision message contains  n    variable assignments 
feas message sent given variable x contain exponentially many feasibility values 
contains table representation function  sepx   variables  size
sepmax
largest feas message therefore o dmax
   dmax size largest
variable domain  sepmax   maxx  sepx     n   width pseudo tree 
best case  width equal treewidth constraint graph  however finding
pseudo tree achieves minimal width np hard  practice  pseudo tree
generated heuristic  distributed  depth first traversal constraint graph  online
appendix     producing so called dfs tree pseudo tree parentchild relationships neighbors constraint graph  since dpop exchanges
 n    feas messages  overall complexity terms runtime  measured number
sepmax
constraint checks   memory  information exchange o n dmax
  
privacy properties privacy aware algorithms section   based dpop 
two desirable properties allow higher levels privacy  first  dpop
requires message exchanges neighboring agents  provided pseudotree used dfs tree  necessary protect agent privacy  greenstadt  pearce 
tambe        made opposite claim pseudo trees detrimental privacy
compared linear orderings  however claim valid type privacy
considered constraint privacy  hold agent privacy topology privacy
guaranteed  i e  pseudo tree publicly known agents  second  dpinherited property dpops performance depend constraint tightness 
i e  easy hard satisfy constraint  other  search based algorithms 
inferences constraint tightness made observing runtime amount
information exchanged  silaghi   mitra         case meeting scheduling problems 
constraint tightness maps directly participants levels availability  private
information  application domains leak constraint tightness tolerable 
algorithms based search rather dp used  many privacy enhancing
techniques presented paper dpop applicable search based algorithms 
    privacy discsps
section       formally defines four types privacy considered paper  section      
recalls previous work attempted address various subsets privacy types 
      privacy definitions
definition   introduces concept semi private information  faltings  leaute    petcu 
       may inevitably leaked discsp algorithm 
definition    semi private information   semi private information refers information
problem and or solution agent might consider private 
inevitably leaked agents views chosen solution discsp 
words  semi private information covers everything given agent discover
agents making inferences simply based initial knowledge problem
   

fiprotecting privacy thru distributed computation multi agent decision making

values variables take solution  instance  graph coloring problem
involving two colors  node infer color neighbors
color assigned chosen solution  provided solution correct  excluding
semi private information  distinguish four types private information agents
may desire protect  faltings et al         
definition    agent privacy   agent able discover identity  even
existence non neighboring agents  particular consequence type privacy
two agents allowed communicate directly share constraint 
figure    means instance agent a x    able discover
existence identities agents a x    a x     even two non neighboring agents
communicate directly  agent privacy might still leaked contents messages 
paper propose method based codenames fully protect agent privacy 
definition    topology privacy   agent able discover existence
topological constructs constraint graph  nodes  i e  variables   edges  i e 
constraints   cycles  unless owns variable involved construct 
figure    topology privacy means instance agent a x    discover
many neighbors x  besides itself  however  a x    might discover existence
cycle involving x    x  x    tolerated x  involved cycle 
a x    discover length cycle  i e  x  x  share neighbor  
definition    constraint privacy   agent able discover nature
constraint involve variable owns 
figure    example breach constraint privacy would agent a x   
able discover agent a x    want assigned color blue 
type privacy discsp literature mostly focuses on 
definition    decision privacy   agent able discover value another
agents variable takes chosen solution  modulo semi private information  
distributed graph coloring problem  means agent discover color
neighbor  let alone non neighboring agent  solution chosen problem 
      previous work privacy discsp
discussing information may leaked given algorithm  prevent
it  important clarify information assumed initially known agent 
initial knowledge assumptions paper  use following three assumptions 
currently widely used discsp literature 
   agent knows agents variables neighbors variables 
know agents  not even existence  
   variable domain known owner agent agents owning
neighboring variables  agents ignore existence variable 
   

fileaute   faltings

   constraint fully known agents owning variables scope 
agent knows anything constraint  not even existence  
brito meseguer        introduced partially known constraints  pkcs   whose
scopes known agents involved  knowledge whose nature  which assignments allowed disallowed  distributed among agents  relaxation
assumption    however worth noting algorithms presented paper
still support pkcs without introducing privacy leaks enforcing assumption 
pkc decomposed number constraints copy variables
assumption   holds  instance  agents a        share knowledge unary pkc
variable x  constraint decomposed n unary constraints 
constraint ci known fully agent ai expressed copy
variable xi owned ai   equality constraints added problem enforce equality
copy variables  however  introduction copy variables detrimental
decision privacy  grubshtein  grinshpoun  meisels  zivan        later proposed
similar concept asymmetric constraints  reformulated symmetric
constraints copy variables purpose applying algorithms 
previous work adopted dual approach  assuming variables public
known agents  constraint known one agent  silaghi et al        
yokoo  suzuki    hirayama        silaghi      a   silaghi      b  even proposed framework constraints secret everyone  dual approach disadvantage necessarily violating topology privacy  since variables public 
measuring constraint privacy loss literature privacy discsps
focuses constraint privacy  metrics proposed evaluate constraint privacy
loss algorithms  particular distributed meeting scheduling  franzin  freuder  rossi 
  wallace        wallace   freuder         maheswaran  pearce  bowring  varakantham 
tambe        designed framework called valuation possible states  vps 
used measure constraint privacy loss optapo synchbb algorithms 
considered impact whether problem topology public partially
known agents  greenstadt et al         applied vps evaluate dpop
adopt meeting scheduling problems  assumption problem topology
public  doshi  matsui  silaghi  yokoo  zanker        proposed consider cost
privacy loss optimization problems  order elegantly balance privacy optimality 
preventing constraint privacy loss previous work proposed approaches
partially reduce constraint privacy loss  instance  brito meseguer        described
modification distributed forward checking  disfc  algorithm discsps
agents allowed lie finite time order achieve higher levels privacy  however  performance search based algorithms disfc leaks information
constraint tightness  explained end section        avoid subtle privacy
leak  one must either perform full exhaustive search  option chosen silaghi 
resort dynamic programming  option chosen paper 
cryptographic technique secret sharing  shamir        ben or  goldwasser   
wigderson        applied silaghi  faltings  petcu        greenstadt 
grosz  smith        lower constraint privacy dpop  assuming constraint
graph topology public knowledge  cryptography applied provide strong
   

fiprotecting privacy thru distributed computation multi agent decision making

guarantees constraint privacy preservation multi agent decision making  instance 
yokoo suzuki         yokoo et al         yokoo  suzuki  hirayama       
showed public key encryption scheme used solve discsps using multiple
servers  protecting constraint privacy decision privacy  bilogrevic  jadliwala 
hubaux  aad  niemi        solved single meeting scheduling problems using similar
techniques  one semi trusted server  paper however  consider algorithms
make use third parties  third parties might available  herlea 
claessens  preneel  neven  piessens  decker        showed use secure multiparty
computation  smc    securely schedule single meeting  without relying servers 
smc  agents collaboratively compute value given  publicly known function
private inputs  without revealing inputs  herlea et al          inputs
participants availability given time  function outputs whether
available 
mpc discsp  algorithm silaghi      a  applied smc solve general
discsps  private inputs agents constraint valuations  function
returns randomly chosen solution  algorithm proceeds follows  leaute        
agent ai first creates vector one entry per candidate solution discsp  equal
  candidate solution satisfies ai private constraints    otherwise  reduce
size   candidate solutions may filtered publicly known constraints 
exists any  using shamirs polynomial secret sharing technique  shamir        benor et al          agent ai sends one secret share fij vector
agent aj   receives corresponding secret shares fji respective vectors  agent ai
multiplies together secret shares received  multiplication shamir secret
shares non trivial operation  secret share value polynomial 
multiplying two polynomials increases degree output  must always remain
lower number  a  agents resolvable  therefore  multiplication
two secret shares  agent ai must perform complex sequence operations involving
exchange messages order reduce degree output 
performing   a     pairwise multiplications secret shares  agent ai vector contains secret shares   entries corresponding globally feasible solutions 
agent ai performs transformation one secret share  
remains  identifying one particular feasible solution  if exists one   selecting
first entry would posteriori reveal previous entries correspond infeasible
solutions discsp  prevent privacy leak  vector first collaboratively 
randomly permuted using mix net  agent ai performs sequence iterative operations  including communication intensive multiplications  set entries
secret shares    except one secret share   corresponding chosen solution
discsp  if any   vector un shuffled re traversing mix net
reverse  finally  agent ai compute secret shares domain index variables
chosen assignment  reveal secret shares owners variables 
algorithm numerous drawbacks  first  agent must know variables
domains construct initial vector   immediately violates agent privacy
topology privacy  table      page       second  shamirs secret sharing scheme
   silaghi uses different acronym mpc concept 

   

fileaute   faltings

majority threshold scheme  means least half agents collude 
discover everyones private information  even though  paper  assuming
agents honest collude  consequence threshold
scheme provide privacy guarantee problem involves two agents 
third  algorithm often practical small problems  performs
full exhaustive search  demonstrated experimental results section   

   p dpop    full agent privacy partial topology  constraint
decision privacy
section describes variant dpop algorithm guarantees full agent privacy 
partially protects topology  constraint  decision privacy  algorithm  
improvement p dpop algorithm originally proposed  faltings et al         
dpop  algorithm performs dynamic programming dfs tree ordering
variables  figure     algorithms first elect one variable  generate dfs tree
rooted variable given online appendices      algorithms
reveal pseudo tree entirety agent  instead  agent discovers
 pseudo  parents  pseudo  children variables  sake simplicity 
hereafter assume without loss generality constraint graph consists single
component  problem actually consisted two fully decoupled subproblems 
subproblem would solved parallel  independently others 
algorithm   overal p dpop  algorithm  variable x
require  dfs tree ordering variables
      choose exchange codenames x domain dx  
   wait message  codes  yix   dyxi   yxi   yi  parentx   pseudo parentsx
   yi childrenx pseudo childrenx
  
xyi large random number
  
dxyi list  dx   random  unique identifiers
  
xyi random permutation              dx   
  
send message  codes  xyi   dxyi   xyi   yi

   

   choose exchange obfuscation key x 
wait record message  key  keyyxi   yi pseudo parentsx  if any 
yi pseudo childrenx
keyxyi vector large random numbers b bits  indexed dx
send message  key  keyxyi   yi

   

propagate feasibility values pseudo tree  algorithm    section     

   

   propagate decisions top down along pseudo tree  section      
x root
wait message  decision  px     parent px
x x  px   px        x    computed algorithm    line   
yi childrenx
  yi   sepyi algorithm    line   
send message  decision  sep


  
  
   
   

   
   
   
   
   

   

fiprotecting privacy thru distributed computation multi agent decision making

    finding feasible value root variable
already illustrated dpop section        agents perform bottom up propagation feasibility values along pseudo tree  done algorithm   
extension dpops util propagation phase  the extensions indicated comments
bold   improves algorithm originally proposed  faltings et al        
patching important constraint privacy leak single variable feas messages
sent variables singleton separators  following sections describe obfuscation
techniques used protect private information could leaked feasibility
messages  using codenames  section        addition random numbers  section        
algorithm   algorithm find feasible value root dfs tree  variable x
require  dfs tree ordering variables  px denotes xs parent
      join local constraints 
   m x  px     c c c   xscope c  scope c   childrenx pseudo childrenx     c x   
  
  
  

   apply codenames 
yi  px   pseudo parentsx
m x  px     replace  yi   dyi   m x  px      yix   dyxi   algorithm    line   
apply permutation yxi dyxi

   obfuscate infeasible entries 
r large  positive 
random number b bits

m x  px    
m x  px        
   m x  px    
m x  px       r m x  px        
  
  

  
   
   
   
   
   
   

   join received messages 
yi childrenx
wait message  feas  mi  x     yi
sepyi scope mi  
z childrenx pseudo childrenx    resolve codenames
mi  x    identify  xz   dxz    x  dx   mi  x     if xz present 
m x  px     m x  px       mi  x   

   de obfuscate feasibility values respect x 
    yi pseudo childrenx
   
m x  px     m x  px     keyxyi  x     keyxyi algorithm    line   
   

   project x 
x root variable
   
x  px     arg minx  m x  px     
   
m px     minx  m x  px     
   

   

   
   
   
   
   

   obfuscate feasibility values 
yi pseudo parentsx
m px     m px       keyyxi  yix      keyyxi algorithm    line  
send message  feas  m px      px
else x arg minx  m x      m x  px     actually depends x
   

fileaute   faltings

      hiding variable names values using codenames
consider feasibility message x  x  sent agent a x    parent variable x 
figure    message recalled figure   a   reformulated terms minimizing
number constraint violations  message actually received cleartext  would
breach agent privacy topology privacy  agent a x    would able infer
dependency message variable x  existence agent a x     which violates
agent privacy  fact x  neighbor one unknown nodes x   
x  x 
x 
x  r b g
r
     
b
     
g
     
 a  cleartext

x 
r
b
g

x  x 
      

     
     
     

 b  partly obfuscated

x 
r
b
g

x  x 
      


             
             
             


      
      
      

 c  fully obfuscated

figure    message sent agent a x    parent variable x  figure   

order patch privacy leaks  variable x  domain d     r  b  g  replaced random codenames xx             d x            figure  b  preliminarily
generated a x    communicated directly leaf back edge  algorithm   
lines       leaf applies codenames output message  algorithm    line    
resolved propagation reaches root back edge  algorithm    line      knowing codenames  agents between  a x    
infer existence cycle constraint graph involving unknown ancestor descendent  tolerated definition topology privacy  definition   
since involved cycle  secret  random permutation  x  applied
d x    useful problem classes variable domains public  notice
x  constraint x    reasoning would still hold  x  would
sent different codename xx    x    would able resolve
unknown codename xx    x    case  x  separator would  x    xx      xx      
message sent x  would three dimensional instead two dimensional 
      obfuscating feasibility values
hiding variable names values using codenames addresses leaks agent topology
privacy  however  address fact feasibility values message
x  x  figure   b  violate constraint privacy  reveal x  subtree
always find feasible solution subproblem x    r  regardless value
obfuscated variable         patch privacy leak  feasibility values obfuscated
adding large  random numbers generated root back edge  x   
sent secure channel leaf back edge  algorithm    lines       
number bits b random numbers problem independent parameter
algorithm  obfuscation performed way different random number
   

fiprotecting privacy thru distributed computation multi agent decision making

added feasibility values associated value x    figure   c   using
obfuscation key                           random numbers added leaf
back edge outgoing message  algorithm    line      eventually
subtracted propagation reaches root back edge  algorithm    line     
notice obfuscation scheme achieves two objectives     hides x 
absolute feasibility values subtree     hides relative dependencies
values obfuscated variable         different random numbers used
value obfuscated domain         agent a x    still able infer relative
dependencies variable x    necessary perform projection
variable  unable tell  value  obfuscated  variable  whether
subtrees problem feasible  not  many constraints violated  notice
particular that  given value obfuscated variable  i e  column   agent a x   
know whether assignments x  feasible  therefore would
incorrect simply assume lowest obfuscated feasibility entries decrypts   
similarly  equal entries column correspond high probability entries
number constraint violations  number necessarily   
would incorrect infer correspond feasible entries 
notice obfuscation scheme applicable presence backedge  i e  message contains parent variable  consider
instance single variable message x  x    recalled figure   a   agent a x    knew
x  leaf pseudo tree  cleartext message would reveal agent a x   s private
local constraint x     b  r  agent a x     previous obfuscation scheme
apply absence back edges  notice threat constraint privacy
tempered fact p dpop  guarantees terms topology privacy prevent
agent a x    discovering x  indeed leaf  a x   s point view  larger
subproblem might hanging variable x  figure    message could actually
aggregation multiple agents subproblems 

x 
r
b
g

x  x 
  conflicts
 
 
 

 a  cleartext

x 

x  x 
  conflicts

r
b
g

 
 
      

 b  obfuscated

figure    message received agent a x    figure   

reduce privacy leak present original algorithm  faltings et al         
propose new additional obfuscation scheme consists adding large  b bit   positive 
random numbers positive entries single variable messages  order obfuscate
true numbers constraint violations  algorithm    line   figure   b   
random numbers never subtracted back  must added zero entries  otherwise algorithm would fail find solution violation  feasible entries still
revealed  numbers constraint violations infeasible entries remain obfuscated 
   

fileaute   faltings

    propagating final decisions
feasibility values propagated way root pseudotree  feasible assignment root variable found  if exists one  
assignment propagated pseudo tree  algorithm    lines        
variable uses assignments contained message parent  order look
corresponding assignment  line      sends child assignments
variables separator  line      using codenames
protect agent topology privacy  decision privacy partially guaranteed 
variable learns values chosen parent pseudo parents other 
non neighboring variables separator hidden unknown codenames 
    algorithm properties
section first formally proves algorithm complete  analyses complexity 
present algorithm variant lower complexity  finally  privacy guarantees
provided algorithms  summarized table      formally described 
privacy type 

agent

topology

constraint

decision

p dpop   

full
full
full
 

partial
partial
partial
partial

partial
partial
full
partial

partial
full
full
partial

   

 dpop   

p
p   dpop   
mpc discsp 

table    privacy guarantees various algorithms 

      completeness complexity
theorem    provided codename clashes  p dpop   algorithm    terminates returns feasible solution discsp  exists one 
proof  exchanging codenames obfuscation keys  guaranteed require
number messages quadratic number n variables  bottom up
propagation feasibility values  algorithm    terminates sending exactly  n   
messages  one tree edge   one prove induction  left reader 
multi party dynamic programming computation almost surely correctly reveals
variable x  obfuscated  feasibility subtrees subproblem  function x
possibly ancestor variables pseudo tree  process may fail case
collisions codenames  roots two overlapping back edges choose
codenames  codename clashes inherent privacy protecting algorithms 
made improbable desired augmenting size codename space 
finally  top down decision propagation phase  algorithm    lines        guaranteed yield feasible assignment variable  if exists one   exchange
exactly  n    messages  one tree edge  
   

fiprotecting privacy thru distributed computation multi agent decision making

comes complexity algorithm terms number messages
exchanged  bottleneck election root variable  online appendix    
requires o  n    messages  diameter constraint graph  degree 
n number variables  however   n    messages containing feasibility
values exponentially large  message sent variable x expressed  sepx  
 sep  
variable codenames  algorithm    line      therefore contains o dmaxx   feasibility
values  dmax size largest variable domain  overall complexity
terms information exchange  memory runtime  measured number constraint
sepmax
checks  therefore o n dmax
   sepmax   maxx  sepx    dpop 
except p dpop  variable may appear multiple times different codenames
separator  hereby increasing value sepmax   however  increase
multiplicative factor upper bounded degree constraint graph  since
number codenames given variable equal number neighbors 
empirically  experimental results section   suggest that  almost problem
classes considered  median value sepmax tends grow rather linearly n 
      p dpop  trading topology privacy performance
possible reduce sizes  sepxi   separators  enforcing agent a x 
send codename x x xs  pseudo  children  unlike algorithm    lines
      variant identified absence plus sign exponent  p dpop
version algorithm initially proposed faltings et al         
result change  variables previously may occurred multiple times
feasibility message different codenames appear
once  sepmax   n  worst case complexity p dpop
becomes dpop  petcu   faltings         sepmax equal
width pseudo tree  bounded treewidth constraint graph 
however  privacy considerations prevents use p dpop dpops efficient 
less privacy aware pseudo tree generation heuristics  resulting higher width pseudo trees 
complexity p dpop hereby decreased compared p dpop    sending
codename x variable x  pseudo  children drawbacks terms
topology privacy  analyzed below 
      full agent privacy
two ways identity agent could leaked non neighbor b 
   algorithm require b exchange messages other     agent
receive message whose content refers identifiably b  case   never happen
algorithms  ever involve exchanging messages neighboring
agents  case   addressed mainly use codenames 
theorem    p dpop    algorithms guarantee full agent privacy 
proof  p dpop    algorithms proceed following sequential phases  the preliminary phases root election pseudo tree generation addressed online appendices  
bottom up feasibility propagation  algorithm    feasibility message contains
function  line     set variables  whose names  transmitted clear
   

fileaute   faltings

text  could identify owner agent  prevent agent privacy leak  p dpop   
replaces variable names secret  random codenames  follows 
consider variable x pseudo tree  note feasibility message sent x
ancestor x function x  message sent x function
x  x projected message sent  line      variable x cannot
re appear feasibility message higher pseudo tree  agents local
problem involve variable lower pseudo tree  line    
similarly  consider feasibility message sent descendant x
pseudo tree  assume first leaf pseudo tree  since
children  feasibility message sends function variables
local problem  local problem involves x  replace x codename xy
 line    sends feasibility message  one prove inference
feasibility message sent variable x contain x either 
 and necessarily  contain one several codenames xyi  
since codenames xyi random numbers chosen x  algorithm    line    
communicated  through channels assumed secure  respective
neighbors yi x  algorithm    line     non neighbor x receiving message
involving xyi discover identity owner agent 
domain dx variable x could contain values might identify owner
agent  fix privacy risk  xs domain replaced obfuscated domains dxyi
random numbers  similarly way variable names obfuscated 
paper  make simplifying assumption variables domain
size  which naturally holds many problem classes   one variables domain
size give information owner agent  otherwise  variable domains
padded fake values order make size 
top down decision propagation  section      messages contain assignments
variables  algorithm    line      obfuscated using codenames 
concludes proof that  p dpop    algorithms  agent receive
message infer identity non neighboring agent 
      partial topology privacy
theorem    p dpop guarantees partial topology privacy  minor leaks topology
privacy lie fact variable might able discover lower bound neighbor
variables degree constraint graph  lower bound total number variables 
proof  root election pseudo tree generation left online appendices 
bottom up feasibility propagation  algorithm    variable x receives feas
message child  containing function whose scope might reveal topological
information  variable scope represented secret codename y 
however x may able decrypt codename y  neighbor x
 or x itself   sent codename neighbors 
results leak topology privacy  x discovers  neighboring ancestor y 
   

fiprotecting privacy thru distributed computation multi agent decision making

whether least one neighbor given child x  cannot
discover exactly many neighbors are 
furthermore  case x neighbors  x cannot decrypt y 
still infer exists another  non neighboring ancestor corresponding
codename  another breach topology privacy  sent
codename neighbors  x discover whether ancestor
least one neighbor xs children  moreover  since codenames
large random numbers almost surely unique  x may discover existence
several  distinct non neighboring ancestors 
top down decision propagation  section      variable receives message
parent  contain codenames variables variable values
already present feas message received previous phase 
concludes proof p dpop partially protects topology privacy  limited
topology information leaked variable concerns branch pseudo tree 
information leaked branch  even existence 
theorem    use different codenames  pseudo  child improves topology
privacy p dpop  compared p dpop  bounds still leaked 
proof  consider variable x receives feas message including secret codename
corresponding variable     x   sent different codename
neighbors  x longer able decrypt y  even neighbor x  consequence 
x longer able infer whether refers known neighbor x  unknown 
non neighboring variable  however  since codename corresponds unique backedge pseudo tree  pair      unknown codenames xs received feas
message  if pair exists   least one following statements must hold 
refer two different ancestors x  therefore x discovers least
two ancestors  which might known  pseudo parent   and or
sent two different descendants x  and possibly including 
sender child y  therefore x discovers least two descendants
 and including   which might known  pseudo child y  
therefore x might able refine lower bound total number variables 
      partial constraint privacy
theorem    p dpop    algorithms guarantee partial constraint privacy  local
feasibility subproblem partial variable assignment x may leaked  even x
cannot extended overall feasible solution  i e  semi private information  
proof  information constraints transmitted feasibility propagation  algorithm     based knowledge optimal variable assignments transmitted
last phase  section       feasibility information may decrypted 
   

fileaute   faltings

single variable feasibility messages variable px receives feasibility message
involving px   message obfuscated adding secret random
numbers infeasible entries  line     feasible entries remain equal    px
identify entries refer respectively feasible infeasible assignments px  
however  addition secret  positive  random number infeasible entry
ensures upper bound number constraint violations leaked 
made loose desired choosing random numbers large necessary 
multi variable feasibility messages feas message involves least one
variable yi   message entries obfuscated adding large random
numbers keyyxi  yix   b bits  line      furthermore  keyyxi  yix   known
sender x message pseudo parent yi   recipient px  
therefore cannot subtract de obfuscate entries 
assume  simplicity  message m px   yix   involves two variables
px yix   argument extends easily variables  recipient px might
able make inferences     fixing yix comparing obfuscated entries
corresponding different values px      fixing px varying yix instead 
   given value yix   entries obfuscated adding
random number keyyxi  yix    line      px compute relative differences
feasibility values various assignments px   however  cannot decrypt
absolute values without knowing keyyxi  yix    particular  lowest obfuscated
value necessarily equal keyyxi  yix    necessarily decrypt
   values px may infeasible particular value yix  
one exception  feasible solution found problem


yix   yix px   px   m px   yix   necessarily decrypts    therefore


px able infer keyyxi  yix    fixing yix   yix message

subtracting keyyxi  yix    reasoning made single variable
case  feasible infeasible entries identifiable  numbers
constraint violations infeasible entries remain obfuscated 
   given value px   feasibility value m px   yix   obfuscated
adding different  secret random number keyyxi  yix    choosing number
bits b sufficiently large makes sure useful information  relative 
absolute  obtained comparing obfuscated feasibility values 
concludes proof p dpop    guarantees partial constraint privacy 
      partial decision privacy
theorem    p dpop    algorithms guarantee partial decision privacy  leak lies
fact variable might discover values chosen neighbors 
proof  first notice algorithm cannot leak information chosen values
variables lower pseudo tree  since variables projected
feasibility messages received  however  decision propagation phase 
variable receives message parent contains chosen values parent
   

fiprotecting privacy thru distributed computation multi agent decision making

pseudo parents  message may contain codenames assignments other  nonneighboring variables  recipient able decode  furthermore  domains
shuffled using secret permutations  making impossible decode codename
value non neighboring variable index variables domain 

   p     dpop    adding full decision privacy
section presents another variant p dpop  algorithm achieves full decision
privacy  results novel algorithm  seen hybrid
p dpop  p   dpop  leaute   faltings        algorithms  called p     dpop  
    overview algorithm
algorithm   patches decision privacy leak p dpop  removing decision propagation phase  root variable assigned value  order variables
assigned values  variable made root turn  unless first feasibility propagation
revealed problem infeasible  case algorithm terminate early  
 
intuition behind p     dpop  algorithm therefore p dpop  bottom up
feasibility propagation phase repeated multiple times  time different variable x
root pseudo tree  lines         end iteration  constraint
x   x added problem enforce consistency across iterations  line     
algorithm   overall p     dpop  algorithm full decision privacy  variable x
require  first temporary dfs tree  unique id idx   tight strict lower bound
 
next unique id id 
x   upper bound n total number variables
idx

id 
x idx

z      z     
   vectorx                                              
 
 z
 
n 

  
  
  
  
  
  
  
  
   
   
   
   
   
   
   

   exchange public key shares 
privatex generate private elgamal key x
publicx generate set  id 
x idx      public key shares corresponding privatex
share publicx toprevious  share  share   algorithm  
          n 
wait record one message  share  share 
share   publicx toprevious  share  share   algorithm  
generate compound elgamal public key based public key shares
vectorx   
choose new root  algorithm    section     
construct new pseudo tree rooted new root  online appendix   
exchange codenames x domain dx  algorithm    lines     
choose exchange obfuscation key x  algorithm    lines      
propagate feasibility values pseudo tree  algorithm    except line    
x root add local constraint x   x   x algorithm    line   
   

fileaute   faltings

    choosing new root variable
iteratively reroot pseudo tree  propose use improved version rerooting
procedure initially introduced p   dpop algorithm  leaute   faltings        
procedure requires n variables assigned unique id  algorithm
achieve presented online appendix    algorithm reveals variable x
unique id idx   well tight strict lower bound next unique id id 
x  i e 
  total number variables 
 
   


upper
bound
n
next unique id equals id 
x
variable x creates boolean vector vectorx single zero entry index
corresponding unique id idx  algorithm    line     vector shuffled using
random permutation used hide sequence variables become roots 
keep permutation secret  vector first encrypted using elgamal encryption
 appendix a   based compound public key jointly produced agents  algorithm   
lines       asymmetric encryption scheme enables agent  re  encrypt
entries vectors using common public key  decryption
performed collaboratively agents  using respective private keys 
algorithm   algorithm choose new root  variable x
procedure  shufflevectors   variable x
   myid large random number
   px random permutation          n   
   propagate xs encrypted vector backwards along circular ordering
vectorx e vectorx      encrypts vector using compound public key
   toprevious  vect  myid  vectorx       algorithm   appendix b
  

  

   process received vectors
   true
  
wait message  vect  id  vector  round  next variable
  

  
   
   
   
   
   
   
   
   
   
   
   

round    
id    myid j    idx            id 
x vector j   
else round round        xs vector  move next round
round     x current root
round round        root starts round except first
round     vector px  vector     shuffle vector
round     id   myid    done processing vectorx
vectorx vector
continue
   pass vector backwards along circular ordering
vector e vector     re encrypts vector using compound public key
toprevious  vect  id  vector  round   algorithm   appendix b

procedure  reroot   variable x
    repeat entry decrypt pop vectorx    entry         algorithm  
    entry     x new root
   

fiprotecting privacy thru distributed computation multi agent decision making

agents proceed algorithm    variable x first starts procedure
shufflevectors    run performance improvement
previous work  leaute   faltings         performed iteration 
vectors passed variable variable round robin fashion  using circular message
routing algorithm presented appendix b  agent applies secret permutation
vector shuffle it  shufflevectors   proceeds four rounds  round  
 started line    algorithm     vector makes full round along circular ordering 
variable x overwrites entries    line     
positions vectorx  algorithm    line       entries account
ids  idx      id 
x   assigned variable  online appendix    
x received back vectorx   enters incomplete round    line    
vectorx passed reaches current root  line      root starts round  
 line      variable x shuffles vector using secret permutation px
 line      incomplete round   returns fully shuffled vector owner  line     
reroot variable ordering beginning iteration p     dpop   
variable x calls procedure reroot    removes decrypts first element
vectorx   entries decrypt   correspond unassigned ids skipped 
single entry decrypts   identifies new root  decryption process  algorithm   
collaborative effort involves variable using private elgamal key partially
decrypt cyphertext  travels around circular variable ordering way
vectors  gets back sender variable  finally fully decrypt it 
algorithm   collaborative decryption multiply encrypted cyphertext e
procedure  decrypt e  variable x
   codename large random number used secret codename x
   codenamesx codenamesx  codename 
   toprevious  decr  codename  e   algorithm  
   wait message  decr  codename  e   next variable ordering
   return decryption e using xs private key
procedure  collaborativedecryption   variable x
   loop
  
wait message  decr  c  e  next variable ordering
  
c   codenamesx
  
e partial decryption e using xs private key
   
toprevious  decr  c  e    algorithm  

    algorithm properties
 

first analyze completeness complexity properties p     dpop    algorithms  move privacy properties 
      completeness complexity
theorem    provided codename clashes  p     dpop  algorithm
terminates returns feasible solution discsp  exists one 
   

fileaute   faltings

proof  basis theorem    remains prove rerooting algorithm  
terminates correct  overall algorithm remains correct  latter easy
prove  iteration  feasible value found root variable  if exists
one   value necessarily consistent chosen assignments previous roots
since assignments enforced new  additional constraints  algorithm    line     
comes rerooting procedure  unique id assignment algorithm  online
appendix    ensures n variables gets unique id          n      therefore 
variable   entry unique position vector  algorithm    line     round  
algorithm   makes sure vectors   entries positions 
ensures exactly one variable become new root iteration  since vectors
applied sequence permutations  variable root twice 
 

terms complexity  p     dpop  proceeds similar way p dpop   section       except bottom up feasibility propagation phase repeated n times  each
time different root variable   overall complexity information exchange theresep
fore becomes o n  dmaxmax    sepmax maximum separator size variables 
iterations  therefore likely higher exponent pdpop    information exchanged rerooting protocol negligible comparison 
sep
runtime complexity  measured number constraint checks  o n  dmaxmax   
sep
memory complexity o n dmaxmax    removing decision propagation phase makes become unnecessary compute record x  px      algorithm   
line      experimental results graph coloring benchmarks  section      suggest
median value sepmax may greater median value sepmax pdpop  small multiplicative factor  terms number elgamal cryptographic
operations  rerooting procedure requires total n  n   n  o n    encryptions 
n variables  re  encrypts   n    vectors size n   each variables vector
performs   full rounds  except roots vector  performs   full rounds  
n  n   n  incrmin   incrmin constant input parameter algorithm 
procedure requires total n  n  o n    collaborative decryptions 
n variables  partially  decrypts n vectors size n   
      full agent privacy
theorem    p     dpop    algorithms guarantee full agent privacy 
proof  unique id assignment circular routing algorithms guarantee full agent privacy  demonstrated respectively online appendix   appendix b 
pseudo tree rerooting  algorithm    messages sent shufflevectors   contain variable id  vector elgamal cyphertexts  round number  id
used recipient detect whether vector vector  large
random number chosen owner agent  algorithm    line     therefore
cannot linked identity owner agent agent  elgamal
vector round number contain information could used
identify agent  note procedure used exchange elgamal public
key shares  algorithm    lines      leak information agents
   

fiprotecting privacy thru distributed computation multi agent decision making

identities  reroot   procedure makes use collaborative decryption
algorithm  whose properties terms agent privacy discussed below 
collaborative decryption  algorithm    procedure exchanges messages contain elgamal cyphertext  codename used variable id algorithm   
codename similarly set large random number chosen current agent 
cannot linked identity agent agent 
 

concludes proof p     dpop    algorithms guarantee agent privacy 
      partial topology privacy
 

topology privacy p     dpop    slightly worse p dpop     
theorem    p     dpop    algorithms guarantee partial topology privacy  variable unavoidably discovers total number variables problem  might
discover lower bound neighbor variables degree constraint graph  advan 
 
tages p     dpop  p     dpop p dpop  p dpop 
proof  since one feasibility propagation phase per variable problem  total
number variables inevitably becomes public  following analyzes topology privacy
properties phase p     dpop    already present p dpop      except
unique id assignment  online appendix    secure message routing  appendix b  
exchange elgamal key shares  algorithm    lines     messages containing elgamal key shares contain information could used make
inferences topology constraint graph 
pseudo tree rerooting  algorithm    message travels along circular variable
ordering using message routing algorithm appendix b  contains 
vector encrypted  and re encrypted operation  therefore cannot provide topological information 
id identifies owner vector  secret  large random number 
owner vector identify itself 
round number take following values 
round     indicates vector modified  variable
setting turn values   
round     indicates vector sent root
pseudo tree  happen vector  unknown  root 
round     indicates vector shuffled variable 
round     indicates vector way back owner 
happen vector belonging  unknown  root 
reroot   uses decryption algorithm whose properties described below 
   

fileaute   faltings

collaborative decryption  algorithm    decr messages passed along circular variable ordering  containing secret codename original sender variable 
variable capable deciphering codename  last part
message payload elgamal cyphertext  remains encrypted reaches
back original sender  therefore leak topological information 
 

concludes proof p     dpop    guarantees partial topology privacy 
      partial constraint privacy
 

constraint privacy properties p     dpop    algorithms differ pdpop      former protect decision privacy  which benefits constraint privacy  
reveal total number variables problem  which hurts constraint privacy  
theorem     p     dpop    algorithms guarantee partial constraint privacy 
leaks p dpop     section         happen less frequently 
proof  single variable feasibility messages leak amount constraint privacy
p dpop      notice however that  since p     dpop    algorithms reveal total
number variables  circumstances may possible variable discover
child leaf  feasibility message sends therefore contains information
local subproblem only  however  multi variable feasibility messages leak potentially much
less information p dpop      consider simpler non restrictive case
 
two variable message m px   yix   received px   p     dpop    protects

decision privacy  px longer discovers value yix chosen yix   therefore
longer able infer entries corresponding px   px decrypts   
one exception following three conditions simultaneously hold     p     dpop

used     codename yix refers variable yix neighbor px      yix

semi private information px   px still discover yix   able make
 
inferences p dpop      first condition satisfied  i e  p     dpop 
 
used instead p     dpop  px able link codename yix known
 
variable  case p     dpop used  second condition

hold  finally  first two conditions hold  px able discover yix
semi private information  i e  infer knowledge problem 
chosen value px  
      full decision privacy
theorem     p     dpop    algorithms guarantee full decision privacy 
proof  leak decision privacy p dpop    fixed removing decision propagation phase  instead  variable ordering rerooted  feasibility propagation
phase restarted  possible compare feasibility messages received one
iteration next infer decision made previous iteration 
messages comparable  since different codenames obfuscation keys used 
   

fiprotecting privacy thru distributed computation multi agent decision making

   p   dpop    adding full constraint privacy
describe previous  non fully secure obfuscation scheme replaced
elgamal homomorphic encryption  appendix a  achieve full constraint privacy 
corresponds original p   dpop algorithm  leaute   faltings         improved
use multiple codenames  important limitation elgamal scheme
fully homomorphic  possible compute two encrypted booleans 
possible compute encrypted boolean cleartext
boolean  consequence  bottom up feasibility propagation performed
variable ordering variable one child  i e  linear variable
ordering  figure     using message routing algorithm appendix b  otherwise 
pseudo tree variable ordering  variable two children would able join
two encrypted feasibility messages sent children  could addressed using
fully homomorphic encryption scheme gentry         however unclear whether
scheme would practically applicable would sufficient performance 
x 
x 

x 

x 

x 

figure     counter clock wise  circular variable ordering corresponding figure   

    propagating encrypted feasibility values along linear variable order
contrast figure    illustrates multi party dynamic programming pseudotree variable ordering  counting constraint violations   figure   shows  in cleartext 
carried linear ordering  in boolean domain   assumes
circular communication structure preliminarily set described appendix b 
algorithm   gives detailed pseudocode procedure  intended
replacement line    algorithm    differences pseudo tree based algorithm   following  first  algorithm   initially reformulated discsp
max discsp minimize number constraint violations  algorithm   works
directly original discsp problem  means conjunction operator
replaces sum operator  lines        disjunction operator replaces
operator min  line      notice that  case linear ordering  variables local
subproblem longer necessarily involves parent variable ordering  line    
x  shares constraint x  figures     
next difference variable x longer partially de obfuscates feasibility
matrix projecting  algorithm    line      reason elgamal
scheme homomorphic  therefore longer necessary first  partially  decrypt
   

fileaute   faltings

x 

x  x 
r
b
true false

g
true

x 

x 

x 
r
b
g

x  x 
x 
r
b
true false
true
true
false false

x  x 
x 
r
b
true false
true true
true true

x 
r
b
g
x 

g
true
true
false

x 

x 
r
b
g

g
true
true
true
x 
x  x 
x 
r
b
true true
true true
true false

g
true
false
true

figure    multiparty dynamic programming computation  in cleartext  feasible value
variable x    using linear variable ordering based figure   

algorithm   propagating feasibility values along linear ordering  variable x
      join local constraints 
v
   m x    c c c   xscope c   scope c   childrenx pseudo childrenx     c x   

   apply codenames 
   yi  parentx   pseudo parentsx
  
m x    replace  yi   dyi   m x     yix   dyxi   algorithm    line   
apply permutation yxi dyxi
  

  
  
  
  
   

   join received message 
wait message  feas      next variable ordering
z childrenx pseudo childrenx
   identify  xz   dxz    x  dx       if xz present 
m x    m x      

   project x 
x root
w variable
   
m   e   x m x        re encrypts using compound public key
   
toprevious  feas  m     algorithm  
    else x feasiblevalue m x     algorithm  
   

   

   

fiprotecting privacy thru distributed computation multi agent decision making

feasibility values project x using operator x   root variable requires
decryption  algorithm    line     find value x variable x whose encrypted
feasibility value decrypts true  if any   described following section 
    decrypting feasible value root variable
decryption feasibility values root collaborative process variable partially decrypts cyphertext using private key  algorithm     dichotomy
procedure algorithm   uses least log   dx   log   dx       decryptions
find feasible assignment root variable  detect infeasibility 
algorithm   finding feasible value encrypted feasibility matrix m x 
procedure  feasiblevalue m  x   xil       xir   
   il   ir hthen
ki half remaining subdomain 
j    cut
il  ir
  
il  
 

w
  
f easible decrypt ii  x   xi   algorithm  
  
f easible   true return feasiblevalue m
 x   xii   
  
else return feasiblevalue x   xi il  ir  i
else    one value remains x
  
f easible decrypt m  x   xil    algorithm  
  
f easible   true return xil else return null
  

    algorithm properties
first analyze completeness complexity properties p   dpop    algorithms 
move privacy properties 
      completeness complexity
theorem     provided codename clashes  p   dpop  algorithm
terminates returns feasible solution discsp  exists one 
proof  termination follows theorem    fact message routing
procedure appendix b guarantees feasibility messages eventually reach destinations  comes completeness  homomorphic property elgamal scheme
ensures projection variable x encrypted feasibility matrix correct 
feasibility message received variable linear ordering summarizes
 encrypted  feasibility lower agents aggregated subproblems  function higher
variables  particular  feasibility message received root allows find value
variable satisfies overall problem  exists one 
analysis complexity algorithm remains similar analysis secsep
tion      o n  dmaxmax   information exchange number constraint checks 
sep
o n dmaxmax   memory  sepmax maximum separator size along
successive linear variable orderings  instead along pseudo trees  requirement
   

fileaute   faltings

variable may one child tends make exponent increase significantly 
illustrated empirically section    terms number elgamal cryptographic operations  addition cost rerooting variable ordering  section       algorithm
sep
requires o n  dmaxmax   encryptions  o n log dmax   collaborative decryptions 
      full agent privacy
theorem     p   dpop    algorithms guarantee full agent privacy 
 

proof  changes introduced p   dpop    respect p     dpop   
feasibility propagation  finding feasible value root variable 
elgamal feasibility propagation  algorithm    point view agent privacy  procedure algorithm    using algorithm   message
routing  algorithms guarantee agent privacy 
root variable assignment  algorithm    consists iteratively calling procedure algorithm    already shown guarantee agent privacy 
concludes proof p   dpop    algorithms guarantee agent privacy 
      partial topology privacy
theorem     p   dpop    algorithms guarantee partial topology privacy  addition
limited leaks topology privacy p     dpop      agent might able
discover exists another branch constraint graph involved in 
 

proof  two relevant differences p     dpop      linear variable ordering  choice value root variable requires collaborative decryption 
elgamal feasibility propagation  algorithm    exchange feas messages along
linear variable ordering  algorithm makes use circular message routing
procedure  shown appendix b guarantee full topology privacy  however 
last variable linear ordering needs know last order initiate
feasibility propagation  therefore  contraposition  non last variables know
last  and  particular  non last leaves pseudo tree discover
existence another branch  minor leak topology privacy already present
unique variable id assignment algorithm  online appendix     besides this 
topology privacy properties feasibility propagation phases p   dpop
p   dpop  p dpop p dpop    respectively 
root variable assignment  algorithm    algorithm involves recursively calling
collaborative decryption procedure  shown guarantee full topology privacy 
concludes proof p   dpop    guarantees partial topology privacy 
   

fiprotecting privacy thru distributed computation multi agent decision making

      full constraint privacy
theorem     p   dpop    algorithms guarantee full constraint privacy 
proof  p   dpop    algorithms fix leaks constraint privacy p    dpop     
replacing cryptographically insecure obfuscation addition random numbers  cryptographically secure elgamal encryption  appendix a   makes
longer possible compare two encrypted feasibility values without decrypting them 
would require collaboration agents  or amount computation break
encryption made arbitrarily high worst case increasing elgamal
key size   particular  possible compute logical two cyphertexts
without decrypting them  result remains encrypted  cannot compared two
inputs decide one true  any 
      full decision privacy
theorem     p   dpop    algorithms guarantee full decision privacy 
proof  proof applies theorem    

   experimental results
report empirical performance algorithms state of the art mpcdiscsp  algorithm  four classes benchmarks  graph coloring  meeting scheduling 
resource allocation  game equilibrium  compare mpc discsp  
knowledge general discsp algorithm provides strong privacy
guarantees  problem class  choice discsp formulation crucial 
dictates four types privacy defined based discsp constraint graph
relate actual privacy original problem  particular  p  dpop    algorithms use standard discsp assumption constraint known agents
owning variable scope  section         therefore  agent wants hide
constraint neighboring agents  must express constraint copies neighbors variables  additional equality constraints must introduced make copy variables
equal respective original variables  contrast  mpc discsp  make use
discsp assumption  therefore need introduction copy variables 
first performance metric simulated time  sultanik  lass    regli        
used  agents simulated single machine  estimate time would
taken solve problem run parallel dedicated machines  ignoring
communication delays   two metrics number messages amount
information exchanged  metric  report median least     problem
instances      confidence intervals  obfuscation p    dpop      used
random numbers b       bits  p   dpop    used     bit elgamal encryption 
mpc discsp  used     bits paillier encryption  unique variable id
generation procedure p    dpop      parameter incrmin set     algorithms
implemented inside java based frodo platform discsp  leaute  ottens   
szymanek         coupled csp solver jacop  kuchcinski   szymanek        
experiments run     ghz  dual core computer  java     java
heap space   gb  timeout set    min  wall clock time  
   

fileaute   faltings

    graph coloring
first report performance algorithms distributed    color graph coloring
problems  graphs randomly generated varying numbers nodes 
edge density fixed      notice that  fixed number colors fixed edge
density  increasing number nodes increases degree graph  therefore
reduces number feasible solutions  explains trends following
graphs  discsp formulation involves one decision variable per node  assumes
variable controlled single variable agent  notice inter agent constraints
binary inequality constraints  therefore decision privacy relevant problem class 
knowing ones chosen color insufficient infer respective colors ones neighbors 
study tradeoff privacy performance mpc discsp   considered
variant denoted mpc discsp    assumes inter agent inequality constraints  i e 
node neighborhoods  public  final choice colors protected  agent

simulated time  in ms 

   

induced width

  
mpc

 

mpc

  

 

p   dpop 
p   dpop

   
 

  

 
p 

 dpop

 
p 

 dpop

 
 

 

p dpop 

   

p dpop

 

dpop

   

 
 

 

 
 
 
 
number nodes

 

  

 

number messages

   

 

 
 
 
 
number nodes

 

  

information exchanged  in bytes 

   

   

   

mpc
mpc

   



p    dpop 
 

   

p    dpop

  

p dpop 

   

   

p dpop

   
   

dpop

 

 

 
 
 
 
number nodes

 

   
   

  

 

 

 
 
 
 
number nodes

figure    performance graph coloring problems 

   

 

  

fiprotecting privacy thru distributed computation multi agent decision making

first enumerates feasible solutions overall problem  section         uses
cryptographic techniques securely randomly choose one feasible solutions 
exists none  algorithm therefore terminates without cryptographic operations
exchanging messages  explains phase transition mpc discsp 
following graphs  since probability infeasibility increases problem size 
figure   shows mpc discsp   denoted mpc subsequent figures 
scales poorly  timing problems   nodes  mpc discsp 
performs better  however  mentioned before  protects final choices colors 
small numbers nodes  total state space small  mpc discsp  performs
relatively well  numbers nodes    problem instances mostly infeasible 
mpc discsp  quickly detects infeasibility without exchange message 
efficient algorithms far p dpop      whose performance curves
least one order magnitude algorithms  particular  p dpops runtime
sensibly dpop  the communication overhead almost solely due root
simulated time  in ms 

   

induced width
  
  

   
p dpop 

  
p dpop
dpop

   

 
 

   

 
  

  

  
  
  
number nodes

  

  

number messages

   

  

  
  
  
number nodes

  

information exchanged  in bytes 

   
   

   
   
   
   
   
   

  

  

  
  
  
number nodes

   

  

  

  

  
  
  
number nodes

figure    performance larger graph coloring problems 

   

  

fileaute   faltings

election algorithm   cost improved topology privacy p dpop  vs  p dpop
starts show problem sizes    induced widths p dpop  pseudotrees start deviate p dpop dpop  full decision privacy comes much higher
costs  p     dpop    curve     orders magnitude p dpop    s 
even though induced widths remain sensibly same  suggests rerooting
pseudo tree  which involves expensive cryptographic operations  far complexity
bottleneck  even full constraint privacy additionally guaranteed p   dpop     
whose linear variable orderings nevertheless significantly higher induced widths
p    dpop    pseudo tree orderings  notice slope runtime curve decreases
problem size increases  due fact problems become
infeasible  p    dpop    algorithms able terminate first iteration
infeasible problems  similarly p dpop  vs  p dpop  cost improved topology
privacy visible   nodes  p   dpop  even timed problems size    
finally  figure   illustrates fact mpc discsp  tends send large numbers
small messages  p    dpop    algorithms send lower numbers larger messages 
figure   compares performance p dpop    dpop larger graph coloring problem instances  larger problems  improved topology privacy pdpop  comes complexity price high scale    nodes 
hand  p dpops curves one two orders magnitude dpop 
p dpops median runtime problem instances size       s 
    meeting scheduling
report experimental results random meeting scheduling benchmarks  varied
number meetings  keeping number participants per meeting   
meeting  participants randomly drawn common pool   agents  goal
assign time meeting among   available time slots  agent required
attend simultaneous meetings  pool agents deliberately chosen small increase
complexity problems  increasing probability agent take part
multiple meetings  note fixing pool size number participants per
meeting still generates unbounded number different problem instances increase
number meetings  since state space  the cartesian product domains
decision variables  keeps increasing number meetings decisions made 
discsp formulation problem class following  agent owns
one variable domain size   meeting participates in  alldifferent
constraint variables enforce meetings scheduled different
times  meeting  binary equality constraint expressed corresponding
variables owned two participants enforces participants agree time
meeting  notice inter agent constraints binary equality constraints 
 
therefore p     dpop    bring additional privacy compared p dpop     
since values neighboring variables semi private information  therefore 
report performance p     dpop      mpc discsp   simplified formulation
introducing one variable per meeting  owned initiator  way 
meeting  initiator made public  exact list participants remains secret
 it revealed posteriori participants meeting attend it  
   

fiprotecting privacy thru distributed computation multi agent decision making

simulated time  in ms 

   

 

   

p   dpop 
p   dpop

   

mpc

 
 

p dpop 

   

p dpop

 

dpop

   
   

induced width

 

 
 
 

 
 
 
 
number meetings

 

 

number messages

   

 
 
 
 
number meetings

 

information exchanged  in bytes 

   

   

   

   
   
 

  

   
   
   

   
   

 

 
 
 
 
number meetings

   

 

 

 
 
 
 
number meetings

 

figure    performance meeting scheduling problems 

seen figure    p   dpops performance comparable mpcdiscsp   but much stronger privacy guarantees   although former sends significantly information smallest problems  significantly fewer messages
largest problems could solve within timeout limit  hand 
majority threshold scheme  mpc discsp  actually could provide privacy
guarantees problems size    since involved   agents  algorithms could
scale problems size    timed larger problems  p   dpop  increased topology privacy comes price made time earlier p   dpop 
complexity increase due p   dpop  steeper induced width curve 
p dpop    algorithms remain efficient far  perform  
  orders magnitude better others  terms runtime information
exchanged  graph coloring  improved topology privacy p dpop  comes
price negligible small problems  grow one order magnitude
problems size    even induced width remains close p dpop  terms
   

fileaute   faltings

runtime information exchange  p dpop worse dpop small factor
 since median induced width   however sends approximately one order
magnitude messages  which mostly due pseudo tree root election mechanism  
    resource allocation
next  performed experiments distributed resource allocation benchmarks  problem
instances produced using combinatorial auction problem generator cats  leytonbrown  pearson    shoham         ignoring bid prices  used temporal matching
distribution modeling allocation airport takeoff landing slots  fixing total number
slots  i e  resources     varying numbers bids  bid request
bundle   resources  a takeoff slot corresponding landing slot   multiple requests
may placed airline company  airline exactly one fulfilled 

simulated time  in ms 

   

induced width

 

   

 
mpc

   

 

p   dpop   
p dpop   

   

 

dpop

   
   

 
 
 

 

 
 
 
 
number bids

 

 

 

 
 
 
 
number bids

 

 

information exchanged  in bytes 

number messages

   

 

   
   

   

   
   
   
   
   
   
   

   

 

 

 
 
 
 
number bids

 

   

 

 

 

 
 
 
 
number bids

figure     performance resource allocation problems 

   

 

 

fiprotecting privacy thru distributed computation multi agent decision making

problem modeled discsp follows  leaute   faltings         one
agent introduced bidder airline resource slot  assuming
resource controller different resource provider airport    resource x 
bidder b requests resource  one binary variable xb controlled
resource provider  models whether b allocated
p resource  xb     
 xb       resource provider expresses one constraint
  variables
enforce resource allocated one interested bidders 
variable xb   introduce one copy variable bx owned bidder b 
constraint xb   bx   bidder b expresses constraint variables 
enforcing allocated two resources correspond exactly one
requests  introduction copy variables motivated discsp assumption
agent knows constraints involving variables  serves two privacy related
purposes     full list agents placing requests given resource known
resource provider     full list resources requested given agent  and
bundles  known agent itself  meeting scheduling problem class 
inter agent constraints equality constraints  therefore report performance
p     dpop      whose privacy guarantees p dpop     
mpc discsp   discsp formulation simplified introducing copy
variables hold bidders  since necessary protect constraint privacy  bidders
request resources expressing constraints directly variables owned
resource providers  however  since mpc discsp  assumes variables public 
order increase topology privacy introduced  resource  many variables
bidders  regardless whether actually interested resource  reduce
size search space  assumed   constraints public 
figure    shows performance mpc discsp  decreases fast
number requests  algorithm able scale beyond problems
size    p   dpop    algorithms seem scale better  able solve problems
involving   requests  three metrics  algorithms largely outperformed
p dpop      whose runtime curve remarkably flat  almost overlaps runtime
curve dpop  consistent undistinguishable induced width curves 
overhead p dpop    compared dpop slightly larger terms information
exchanged  goes one order magnitude terms number messages  pdpop  p   dpop  performed respective non plus variants 
    strategic game equilibria
finally  report experimental results one last class problem benchmarks 
corresponds distributed computation pure nash equilibria strategic games 
used particular example party game introduced singh et al         
one shot  simultaneous move  graphical game  kearns  littman    singh       
players invited common party  players possible strategies whether
attend party not  players arranged undirected social graph 
defines invitees player knows  players reward attending
   cats assumes single auctioneer  specify slot airport 
assumed resource provided separate resource provider 

   

fileaute   faltings

party depends whether acquaintances decide attend  whether
likes not  reward   per attendee likes  minus   per attendee dislikes 
minus constant cost attendance         reward attending   
problem computing nash equilibrium game formulated
discsp follows  player agent  owns one binary variable
strategy  one copy variable strategy acquaintances  variable
constrained equal copy variables  using binary equality constraints
resource allocation problems  section       agent expresses one constraint
variables  allows particular strategy agent best response
neighbors joint strategies  notice resulting constraint graph
game graph  due presence copy variables  solution discsp therefore
yields joint strategy profile players pure nash equilibrium  since
player plays best response neighbors  notice that  since player holds copy

simulated time  in ms 

   

induced width

  
 

   

 

   

p   dpop   

 

mpc

 

p dpop

   

   

 
 

dpop

 

 

  

 
 

  

 
 

 

 
 
 
number players

 

 

number messages

   

 

 
 
 
number players

 

information exchanged  in bytes 

   
   

   

   
 

  

   
   

   

   

 

 

 
 
 
number players

   

 

 

 

 
 
 
number players

figure     performance party games 

   

 

fiprotecting privacy thru distributed computation multi agent decision making

variable neighbors strategy  strategies semi private information
cannot protected  report performance p     dpop     
mpc discsp   discsp formulation simplified introducing copy
variables  vickrey   koller         interesting consequence difference that 
contrary p   dpop      mpc discsp  able hide players chosen strategy
neighbors  context party game  useful players
decide attend party  since necessarily eventually discover whether
acquaintances decided attend not  hand  player declines
invitation directly discover anything list attendees  might still
able make indirect inferences decisions acquaintances  based
fact decision decline best response respective chosen strategies 
figure    reports performance algorithms random acyclic game graphs
degree    i e  trees node   children   varying numbers
players  p   dpop    algorithms able scale problems size  
due rapidly increasing induced width  outperformed mpc discsp 
least one order magnitude across three metrics  algorithms still performed
largely worse p dpop    algorithms  capable scaling much larger
problems  because  setting  induced width remains bounded  since
game graphs acyclic  dpops induced width constantly equal   
feas message sent agent ax parent agent ay expressed ay strategy
variable copy ax strategy variable held ay   p dpop    induced width
increased   agent ay   children pseudo tree  using
different codename ay strategy variable  result  performance overhead
p dpop    compared dpop minimal terms runtime  slightly larger
information exchanged  reaches one order magnitude number messages 

   conclusion
paper  addressed issue providing strong privacy guarantees distributed constraint satisfaction problems  discsps   defined four types information problem agents might want hide other  agent privacy
 hiding agents identity non neighbors   topology privacy  keeping topology
constraint graph private   constraint privacy  protecting knowledge constraints   decision privacy  the final value variable known
owner agent   departing previous work literature  addressed
subsets privacy types  often focused quantifying privacy loss various algorithms  proposed set algorithms strong guarantees
information provably leaked 
carried performance experiments four different classes benchmarks 
graph coloring  meeting scheduling  resource allocation  game equilibrium computation 
results show algorithms provide stronger privacy guarantees 
scale better previous state art  explored tradeoff
privacy performance  p dpop  variant shown scale much better
others  guarantee partial constraint decision privacy  may still
considered sufficient many problem classes  full decision privacy  p     dpop    full
   

fileaute   faltings

constraint privacy  p   dpop    come significantly higher prices computation time
information exchange  which  todays hardware  limits applicability smaller
problem instances  compared performance algorithms mpcdiscsp  algorithm  considered previous state art discsp
strong privacy guarantees  first three classes benchmarks  algorithms
almost systematically outperformed mpc discsp  terms runtime number
messages exchanged  however  mpc discsp  proved exchange less information
p    dpop    game equilibrium computation  mpc discsp  scaled much better
p   dpop  along three metrics  still largely outperformed p dpop   
terms practical applicability  shown algorithms scale mediumsize problems beyond reach previous state art general discsp
strong privacy guarantees  investigated application algorithms
real life meeting scheduling  collaboration nokia research center lausanne 
future work could extend techniques paper along several directions  first 
restricted pure satisfaction problems sake simplicity 
algorithms easily extended solve distributed constraint optimization problems  dcops   fact  p    dpop  algorithms already optimization algorithms 
p   dpop  requires changes applied dcops  changes involve
replacing elgamal encrypted boolean feasibility values elgamal encrypted  bit wise
vector representations integer cost values  described yokoo suzuki        
would incur increase complexity linear upper bound cost
optimal solution  optimization variant mpc discsp   called mpc diswcsp  
already proposed silaghi mitra         report performance comparisons
algorithms publications  leaute   faltings        leaute        
avenues future research could result relaxing assumption agents
honest  curious  number challenging issues arise attempting apply
techniques paper self interested agents manipulate protocol
order achieve solutions better suit selfish preferences  one issue
verifiability  involves making possible check whether protocols executed
designed  without need decrypt messages exchanged  another interesting issue
whether possible modify algorithms make incentive compatible 
agents best interest honestly follow protocol 

appendix a  cooperative elgamal homomorphic encryption
homomorphic encryption crucial building block privacy preserving algorithms
introduced paper  encryption process message appendix 
boolean turned cyphertext  way decrypting cyphertext
retrieve initial cleartext message impossible  or  case  computationally
hard worst case  without knowledge secret encryption key used
produce cyphertext  encryption scheme said homomorphic possible
perform operations cyphertexts translate operations initial cleartext
messages  without need know encryption key  elgamal encryption  elgamal 
      one encryption scheme possesses homomorphic property 
   

fiprotecting privacy thru distributed computation multi agent decision making

a   basic elgamal encryption booleans
elgamal encryption used encrypt booleans performing following
operations encrypted booleans possible without knowledge decryption key 
encrypted cleartext boolean 
two encrypted booleans 
elgamal encryption homomorphic  public key cryptography system based
intractability diffie hellman problem  tsiounis   yung         proceeds
follows  let p safe prime form  rt      r large random number 
large prime  numbers computations modulo p  let g generator
zp   i e  g powers cover     p     p g assumed public knowledge 
elgamal private key chosen random number x     p     associated public
key   gx   cleartext number encrypted follows 
e m            my r   gr  

   

r random number chosen encryptor  decryption proceeds follows 
r

 
 m 
x
 gr  x
useful feature elgamal encryption allows randomize encrypted value
generate new encryption bearing similarity original value  randomizing
e m  eq      yields 








e    m     y r   g r      my r r   gr r  
still decodes m  encrypt booleans  represent false    true
value z       allows us compute operations 
e m  true   e    m   

e m  false   e   

e m    e m                     e m  m     
a   cooperative elgamal encryption
previous elgamal encryption scheme  decryption performed single step 
using private key  secret agent originally encrypted message 
however  possible perform elgamal encryption way agents
need cooperate order perform decryption  possible use
compound elgamal key  x  y  generated cooperatively agents  pedersen        
distributed key generation elgamal key pairs  xi   yi   n agents combined following fashion obtain compound key pair  x  y  
x   ni   xi

  ni   yi  

distributed decryption agent publishes decryption share xi   message
decrypted follows 


  x  m 
ni   xi

   

fileaute   faltings

appendix b  routing messages along circular variable ordering
order implement round robin exchange vectors briefly presented section     
variables ordered along circular ordering mapped chosen pseudo tree 
illustrated figure    page        variable needs able send message
previous variable  i e  clock wise  ordering  challenge
neighboring variables communicate directly  furthermore  protect agent
topology privacy  agent know overall circular ordering  solve issue 
algorithm   algorithm used p   dpop  leaute   faltings        route messages 
algorithm   sending message clock wise circular variable ordering 
procedure  toprevious m   variable x
   x root pseudo tree send message  last    xs last child
   else send message  prev    xs parent
procedure  routemessages   variable x
   loop
  
wait incoming message  type    neighbor yi
  
type   last
  
x leaf deliver message x
  
else send message  last    xs last child
  
else type   prev
  
yi xs first child deliver message x
   
else send message  last    child yi xs list children
consider instance message agent a x    wants send previous
variable x    a x    know it  agent a x    wraps prev
message sends parent variable x   line     sender variable x 
x  first  and only  child  a x    infers deliver  line     consider
a x    wants forward previous variable x    a x   
know  before  a x    sends message  prev    parent variable x   
reacts sending message  last    last child preceding x  list children 
x   line      last messages indicate payload delivered
last leaf current subtree  line     therefore  a x    delivers  line    since
children  root wants send message previous variable  uses
last message forward last leaf overall pseudo tree  line    
theorem     algorithm   guarantees full agent privacy 
proof  goal algorithm precisely address agent privacy issues pseudotree rerooting procedure  involves variable sending message previous
variable circular ordering variables  guarantee exist
circular ordering two consecutive variables owned neighboring agents 
necessary protect agent privacy  therefore  algorithm   responsible routing
messages paths involve communication neighboring agents 
routing procedure involves encapsulating routed messages inside
prev last messages  contain payload  therefore  long
   

fiprotecting privacy thru distributed computation multi agent decision making

routed messages contain information used identify nonneighboring agent  routing procedure guarantees agent privacy 
theorem     algorithm   guarantees full topology privacy 
proof  purpose algorithm enable variables propagate messages along
circular variable ordering  without need know topological information
constraint graph  knowledge respective  pseudo  parents
 pseudo  children pseudo tree  toprevious   makes possible send message
previous variable circular ordering  without knowing variable is 
reception  prev    message indicates sender child wants
included message delivered previous variable  either
recipient prev message  unknown descendant thereof 
reception  last    message ones parent indicates unknown
variable  either unknown root pseudo tree  unknown child
unknown ancestor  another branch  wants delivered previous variable 
ones descendant pseudo tree 

references
ben or  m   goldwasser  s     wigderson  a          completeness theorems noncryptographic fault tolerant distributed computation  extended abstract   proceedings twentieth annual acm symposium theory computing  stoc    
pp      
bilogrevic  i   jadliwala  m   hubaux  j  p   aad  i     niemi  v          privacy preserving
activity scheduling mobile devices  proceedings first acm conference
data application security privacy  codaspy     pp         
brito  i     meseguer  p          distributed forward checking  proceedings
ninth international conference principles practice constraint programming
 cp     vol       lecture notes computer science  pp         
brito  i     meseguer  p          distributed forward checking may lie privacy 
proceedings ninth international workshop distributed constraint reasoning
 cp dcr    
brito  i     meseguer  p          cluster tree elimination distributed constraint optimization quality guarantees  fundamenta informaticae              
chechetka  a     sycara  k          no commitment branch bound search distributed constraint optimization  proceedings fifth international joint conference autonomous agents multiagent systems  aamas     pp      
     
dechter  r          constraint processing  morgan kaufmann 
   

fileaute   faltings

doshi  p   matsui  t   silaghi  m  c   yokoo  m     zanker  m          distributed private
constraint optimization  proceedings      ieee wic acm international
conference intelligent agent technology  iat     pp         
elgamal  t          public key cryptosystem signature scheme based discrete
logarithms  ieee transactions information theory                 
faltings  b   leaute  t     petcu  a          privacy guarantees distributed constraint satisfaction  proceedings      ieee wic acm international conference intelligent agent technology  iat     pp         
franzin  m  s   freuder  e  c   rossi  f     wallace  r  j          multi agent constraint
systems preferences  efficiency  solution quality  privacy loss  computational
intelligence                 
gentry  c          fully homomorphic encryption using ideal lattices  proceedings
forty first annual acm symposium theory computing  stoc     pp     
     acm special interest group algorithms computation theory  sigact  
gershman  a   meisels  a     zivan  r          asynchronous forward bounding distributed constraints optimization  proceedings seventeenth european conference artificial intelligence  ecai     pp         
goldreich  o          foundations cryptography  vol     basic applications  cambridge
university press 
greenstadt  r   grosz  b     smith  m  d          ssdpop  using secret sharing
improve privacy dcop  proceedings ninth international workshop
distributed constraint reasoning  cp dcr    
greenstadt  r   pearce  j  p     tambe  m          analysis privacy loss distributed
constraint optimization  proceedings twenty first national conference
artificial intelligence  aaai     pp         
grinshpoun  t     meisels  a          completeness performance apo algorithm 
journal artificial intelligence research  jair              
grubshtein  a   grinshpoun  t   meisels  a     zivan  r          asymmetric distributed
constraint optimization  proceedings ijcai   distributed constraint reasoning workshop  dcr     pp       
gutierrez  p     meseguer  p          bnb adopt  several soft arc consistency
levels  proceedings nineteenth european conference artificial intelligence
 ecai     no      frontiers artificial intelligence applications  pp       
herlea  t   claessens  j   preneel  b   neven  g   piessens  f     decker  b  d          securely scheduling meeting  proceedings sixteenth international conference
information security trusted information  new decade challenge  sec    
international federation information processing  ifip  series  pp         
hirayama  k     yokoo  m          distributed partial constraint satisfaction problem 
proceedings third international conference principles practice
constraint programming  cp     vol       lecture notes computer science 
pp         
   

fiprotecting privacy thru distributed computation multi agent decision making

kearns  m  j   littman  m  l     singh  s  p          graphical models game theory 
proceedings seventeenth conference uncertainty artificial intelligence
 uai     pp         
kuchcinski  k     szymanek  r          java library  jacop java constraint programming
solver  http   jacop osolpro com  
leaute  t          distributed constraint optimization  privacy guarantees stochastic
uncertainty  phd thesis  ecole polytechnique federale de lausanne  epfl  
leaute  t     faltings  b          privacy preserving multi agent constraint satisfaction 
proceedings      ieee international conference privacy  security  risk
trust  passat     pp       
leaute  t     faltings  b          coordinating logistics operations privacy guarantees  proceedings twenty second international joint conference artificial
intelligence  ijcai     pp           
leaute  t   ottens  b     szymanek  r          frodo      open source framework
distributed constraint optimization  proc  ijcai   distributed constraint
reasoning workshop  dcr     pp          http   frodo  sourceforge net 
leyton brown  k   pearson  m     shoham  y          towards universal test suite
combinatorial auction algorithms  proceedings second acm conference
electronic commerce  ec     pp        acm special interest group electronic
commerce  sigecom   http   www cs ubc ca  kevinlb cats 
maheswaran  r  t   pearce  j  p   bowring  e   varakantham  p     tambe  m         
privacy loss distributed constraint reasoning  quantitative framework analysis
applications  autonomous agents multi agent systems  jaamas          
     
maheswaran  r  t   tambe  m   bowring  e   pearce  j  p     varakantham  p         
taking dcop real world  efficient complete solutions distributed multievent scheduling  proceedings third international joint conference autonomous agents multiagent systems  aamas     vol     pp          acm
special interest group artificial intelligence  sigart  
mailler  r     lesser  v  r          mediation based protocol distributed constraint
satisfaction  proceedings fourth international workshop distributed constraint reasoning  dcr    
meisels  a     zivan  r          asynchronous forward checking discsps  proceedings
fourth international workshop distributed constraint reasoning  dcr    
modi  p  j   shen  w  m   tambe  m     yokoo  m          adopt  asynchronous distributed constraint optimization quality guarantees  artificial intelligence      
       
netzer  a   meisels  a     grubshtein  a          concurrent forward bounding dcops 
proceedings twelfth international workshop distributed constraint reasoning  dcr     pp       
   

fileaute   faltings

pedersen  t  p          threshold cryptosystem without trusted party  extended abstract   advances cryptology eurocrypt    workshop theory
application cryptographic techniques  proceedings  vol      lecture notes
computer science  pp         
petcu  a     faltings  b          dpop  scalable method multiagent constraint
optimization  proceedings nineteenth international joint conference
artificial intelligence  ijcai     pp         
petcu  a   faltings  b     parkes  d  c          m dpop  faithful distributed implementation efficient social choice problems  journal artificial intelligence research
 jair              
rassenti  s  j   smith  v  l     bulfin  r  l          combinatorial auction mechanism
airport time slot allocation  bell journal economics                 
shamir  a          share secret  communications acm                  
silaghi  m  c       a   hiding absence solution distributed constraint satisfaction
problem  poster   proceedings eighteenth international florida artificial
intelligence research society conference  flairs     pp         
silaghi  m  c       b   using secure discsp solvers generalized vickrey auctions
complete stochastic techniques  proceedings ijcai   distributed constraint reasoning workshop 
silaghi  m  c   faltings  b     petcu  a          secure combinatorial optimization simulating dfs tree based variable elimination  proceedings ninth international
symposium artificial intelligence mathematics 
silaghi  m  c     mitra  d          distributed constraint satisfaction optimization
privacy enforcement  proceedings      ieee wic acm international
conference intelligent agent technology  iat     pp         
silaghi  m  c   sam haroud  d     faltings  b          asynchronous search aggregations  proceedings seventeenth national conference artificial intelligence twelfth conference innovative applications artificial intelligence
 aaai iaai     pp         
singh  s   soni  v     wellman  m  p          computing approximate bayes nash equilibria
tree games incomplete information  proceedings fifth acm conference
electronic commerce  ec     pp       
sultanik  e  a   lass  r  n     regli  w  c          dcopolis  framework simulating
deploying distributed constraint optimization algorithms  proceedings
ninth international workshop distributed constraint reasoning  cp dcr    
tsiounis  y     yung  m          security elgamal based encryption  proceedings first international workshop practice theory public key
cryptography  pkc     vol       lecture notes computer science  pp         
vickrey  d     koller  d          multi agent algorithms solving graphical games  proceedings eighteenth national conference artificial intelligence  aaai    
pp         
   

fiprotecting privacy thru distributed computation multi agent decision making

vinyals  m   rodrguez aguilar  j  a     cerquides  j          constructing unifying
theory dynamic programming dcop algorithms via generalized distributive
law  autonomous agents multi agent systems  jaamas                  
wallace  r  j     freuder  e  c          constraint based reasoning privacy efficiency
tradeoffs multi agent problem solving  artificial intelligence                   
yeoh  w   felner  a     koenig  s          bnb adopt  asynchronous branch andbound dcop algorithm  journal artificial intelligence research  jair         
    
yokoo  m          asynchronous weak commitment search solving distributed constraint
satisfaction problems  proceedings first international conference principles practice constraint programming  cp     no      lecture notes
computer science  pp        
yokoo  m   durfee  e  h   ishida  t     kuwabara  k          distributed constraint satisfaction formalizing distributed problem solving  proceedings twelfth
international conference distributed computing systems  icdcs     pp     
    
yokoo  m     suzuki  k          secure multi agent dynamic programming based homomorphic encryption application combinatorial auctions  proceedings
first international joint conference autonomous agents multi agent
systems  aamas     pp         
yokoo  m   suzuki  k     hirayama  k          secure distributed constraint satisfaction 
reaching agreement without revealing private information  proc   th intl  conf 
principles practice constraint prog   cp     vol       lncs  pp         
yokoo  m   suzuki  k     hirayama  k          secure distributed constraint satisfaction 
reaching agreement without revealing private information  artificial intelligence 
         distributed constraint satisfaction          
zivan  r     meisels  a          concurrent dynamic backtracking distributed csps 
proceedings tenth international conference principles practice
constraint programming  cp     vol       lecture notes computer science 
pp         

   


