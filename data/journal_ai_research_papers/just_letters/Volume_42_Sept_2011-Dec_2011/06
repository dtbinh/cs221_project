journal artificial intelligence research                  

submitted        published      

interpolable formulas equilibrium logic
answer set programming
dov gabbay

dov gabbay kcl ac uk

bar ilan university israel  kings college london
university luxembourg 

david pearce

david pearce upm es

ai dept  universidad politecnica de madrid  spain 

agustn valverde

valverde ctima uma es

dept applied mathematics  universidad de malaga  spain 

abstract
interpolation important property classical many non classical logics
shown interesting applications computer science ai  study
interpolation property non monotonic system equilibrium logic  establishing weaker stronger forms interpolation depending precise interpretation
inference relation  results yield form interpolation ground logic
programs answer sets semantics  disjunctive logic programs study
property uniform interpolation closely related concept variable forgetting  first order version equilibrium logic analogous interpolation properties
whenever collection equilibrium models  first order  definable  since
case so called safe programs theories  applies usual situations arise
practical answer set programming 

   introduction
interpolation property important much discussed topic logical systems 
classical non classical  gabbay   maksimova         importance computer
science becoming recognised nowadays  interpolation property applied
various areas computer science  example software specification  diaconescu 
goguen    stefaneas        bicarregui  dimitrakos  gabbay    maibaum        
construction formal ontologies  kontchakov  wolter    zakharyaschev       
model checking related subareas  mcmillan         first two areas interpolation
important metatheoretical property  particular may provide basis modular composition decomposition theories  instance  kontchakov et al        
plays key role study modular decomposition ontologies 
cases  interpolants play role special formulas applied automated deduction  mcmillan        
date interpolation received much less attention systems non monotonic
reasoning logic programming  despite importance ai computer science 
note study interpolation property system nonmonotonic reasoning
known equilibrium logic  pearce         since turn regarded logical
foundation stable model reasoning answer set programming  asp   results
transfer immediately sphere asp  shall focus mainly interpolation
c
    
ai access foundation  rights reserved 

figabbay  pearce    valverde

metatheoretical property primary interest establishing property certain
cases interest  although section   consider case interpolant  actually
uniform interpolant  explicitly constructed  mainly concerned pure
existence theorems  discussion complexity issues well possible applications
interpolation property asp left future work  however  seems likely that 
case studies involving formal ontologies  konev  walther    wolter         interpolation
may useful property applications asp knowledge representation  previous
paper  pearce   valverde         interpolation beth properties underlying 
monotonic logic asp used characterise strong kinds intertheory relations 
capture weaker kinds intertheory relations may important able rely
interpolation holding extended  non monotonic logic  plan explore avenue
future 
introduce property interpolation  let us start notation terminology  let us assume syntax first order logic formulas denoted lower case
greek letters predicates lower case latin letters 
let monotonic inference relation suppose   interpolant
     formula
 

   

contains predicate constant symbols belong   logic l
inference relation l said interpolation property interpolant exists
every pair formulas      l   well known  classical logic well
many non classical logics possess interpolation 
suppose deal non monotonic logical system inference relation   
express idea formula interpolant generally suffice simply
replace        one problem that  since   non monotonic  general
transitive  instead  following idea gabbay maksimova         modify
condition     proceed two stage fashion  make use fact nonmonotonic consequence defined terms minimal models monotonic
logical system  say consequence relation   appropriately captured means
minimal models logic l consequence relation   l   suppose    
interpolant      look formula
      l

   

predicate constant symbols occur   since  
defined via subclass minimal l models  already assume   l    moreover
assume l well behaved sublogic sense l equivalent
formulas   consequences l consequences   consequences
  consequences  so e g      derive      non monotonic
reasoning last two properties known left right absorption  respectively 
given conditions  follows     formula language
l equivalent interpolant       likewise interpolant
       l   interpolant      
now  find interpolant      satisfying      prove one always exists 
proceed follows  look l formula say  precisely l defines
   

fiinterpolable formulas equilibrium logic answer set programming

minimal models   since   follows   l   now  l interpolation
property defined earlier  apply theorem obtain infer existence
l interpolant sense            hence     follows 
notice two stage procedure relies three key features   i  identify
suitable monotonic sublogic l     ii  formulas minimal models l definable 
 iii  l interpolation property  conditions prima facie independent  shall see  may  i   iii  lack  ii   situation respect
equilibrium logic follows  propositional case three conditions met 
establish interpolation property general case  situation quantified
equilibrium logic complicated  general case  lack condition  ii  
precisely  appropriate monotonic sublogic l logic interpolation
property  equilibrium models formula need first order definable l 
procedure outlined yield interpolants cases  however recent results generalised concept  first order  stable model imply interesting
classes interpolable formulas  shall consider detail one class  safe
formulas  particular  safe formula     exists interpolant
    holds  classes interpolable formulas so called tight formulas 
formulas possessing finite  complete set called loops 
safety  tightness loop formulas studied length answer set programming  asp   implications results asp summarised follows 
case  finite  ground programs interpolation property holds  first order
non ground case  interpolation holds finite  safe programs without function symbols 
hence practically finite programs currently admitted answer set solvers  moreover 
since safety defined arbitrary formulas function free language  class
safe formulas sense goes beyond class expressions normally admitted asp 
even auxiliary concepts weight constraints aggregates included 

   logical preliminaries
work standard propositional predicate languages  latter may
general case contain constant function symbols  propositional languages based
set v propositional variables  formulas built up usual way using
logical constants         standing respectively conjunction  disjunction  implication
negation  propositional formula  denote v    set propositional
variables appearing  
first order language l   hc  f  p consists set constants c  function symbols
f predicate symbols p   function symbol f f predicate symbol p p
assigned arity  moreover  assume fixed countably infinite set variables 
symbols             auxiliary parentheses       atoms  terms
formulas constructed usual  closed formulas  sentences 
variable bound quantifier   first order  formula  l   denotes
language associated   i e  set constants  function predicate symbols occuring
it 
make use following notation terminology  boldface x stands tuple
variables  x    x            xn     x     x            xn   formula whose free variables
   

figabbay  pearce    valverde

x           xn   x   x        xn   ti terms     t            tn   denotes vector
terms  theory set sentences  variable free terms  atoms  formulas  theories
called ground 
usual symbols     possibly subscripts  used denote logical
inference consequence relations  respectively  logic l said monotonic
inference relation l satisfies monotonicity property 
l   l
distinguish non monotonic monotonic inference relations  use   symbolise
former  cases non monotonic logic understood terms inference
relation extends suitable monotonic logic  extension well behaved
say monotonic logic forms deductive base    pearce        it 
made precise follows 
definition   let   nonmonotonic inference relation  say logic l
monotonic inference relation l deductive base   iff  i  l     ii    l  
       iii    l      
l denotes ordinary logical equivalence l  denotes non monotonic equivalence  i e      means     non monotonic consequences 
furthermore  say deductive base strong satisfies additional condition 
   l  

exists        

terms nonmonotonic consequence operations   ii   iii  correspond conditions
known left absorption right absorption respectively  makinson        
    interpolation
turn interpolation property 
definition   logic l inference relation l said interpolation property
whenever
l
exists sentence  the interpolant 
l   l
predicate  function constant symbols contained  
i e  l   l   l    case propositional logic  requirement v   
v    v    
explained introduction  non monotonic logics consider two forms
interpolation  one weaker one stronger  stronger form makes use underlying
monotonic logic 
   close concept fully absorbing inferential frame used dietrich        

   

fiinterpolable formulas equilibrium logic answer set programming

definition   suppose         l   interpolant      formula
    l

   

l deductive base   contains predicate  function constant
symbols belong   non monotonic logic inference relation  
said       interpolation property suitable deductive base logic l
    l   interpolant exists every pair formulas         
requirement l form deductive base ensures desirable properties
interpolation met 
proposition   let     l   interpolant      
 a  l       l   interpolant      
 b  l   l       l  
interpolant       
property deductive base guarantees     l   relation transitive
sense     holds           last property necessarily
hold second  weaker form interpolation call        interpolation 
definition   suppose            interpolant      formula
     

   

contains predicate  function constant symbols belong  
case propositional logic  requirement v    v    v    
analogous previous case  say non monotonic logic inference relation          interpolation property        interpolant exists every pair
formulas          notice       stronger form interpolation
logic       interpolation must        interpolation 
consequence deductive base requirement  first clause  
evidently properties expressed proposition   directly applicable
second form interpolation refer underlying base logic  nevertheless
important feature interpolation properties shall establish
formulate prove analogous properties even        interpolation 
consider restricted variants interpolation property holds
certain types formulas  words  interpolant      given
  whenever belong specific syntactic classes  cases refer
interpolable formulas  later shall consider kinds restrictions  belongs
specific class alternatively does 
    review logic here and there
equilibrium logic based nonclassical logic here and there  denote
ht propositional case  quantified first order case denote logic
qht  subscripts superscripts denote specific variants 
   

figabbay  pearce    valverde

propositional quantified cases logic based axioms rules
intuitionistic logic captured usual kripke semantics intuitionistic logic  van
dalen         however additional axioms ht qht mean use
simple kinds kripke structures  first order case regard structures
sets atoms built arbitrary non empty domains d  denote at d  f  p   set
atomic sentences hd  f  p  if   c  obtain set atomic sentence
language l   hc  f  p i    denote  d  f   set ground terms hd  f  p i 
l   hc  f  p l   hc   f   p i  write l l c c   f f p p  
l interpretation set mean subset at d  f  p    classical lstructure regarded tuple   h d  i   l interpretation
   c d  f   d  called assignment  verifies i d   
recursively defined      c  f     id  known herbrand structure 
hand  here and there l structure static domains  qhts  l  structure 
tuple   h d  i   h   h d  i   h h d  i   classical l structures
h  
thus think here and there structure similar first order classical
model  two parts  components  h correspond two different points
worlds  there  sense kripke semantics intuitionistic logic 
worlds ordered h t  world w  h  t  one verifies set atoms w
expanded language domain d  call model static  since  contrast
say intuitionistic logic  domain serves worlds  since h   t  whatever
verified h remains true t  satisfaction relation defined reflect
two different components  write i  w    denote true respect
w component  although need define satisfaction relation l   hc  p i 
recursive definition forces us consider formulas hc d  f  p i  particular 
p t            tn   at c d  f  p   i  w    p t            tn   iff p i t             i tn    w
every t            tn  c d  f       extended recursively follows   
i  w    iff i  w    i  w     
i  w    iff i  w    i  w     
i     iff i      i      
i  h    iff i     i  h     i  h     
i  w    iff i       
i     x x  iff i      d  d 
i  h    x x  iff i     x x  i  h     d  d 
i  w    x x  iff i  w     d  d 
   think objects additional constants  approach allow us use simplified
notation objects distinguished names 
   is  every c  i a  every f f arity n  mapping f   dn defined 
recursive definition given i f  t            tn      f  i t             i tn    
   following corresponds usual kripke semantics intuitionistic logic given assumptions
two worlds h single domain d 

   

fiinterpolable formulas equilibrium logic answer set programming

truth sentence model defined follows     iff i  w   
w  h  t   sentence valid true models  denoted      sentence
consequence set sentences   denoted      every model model  
resulting logic called quantified here and there logic static domains  lifschitz  pearce    valverde        denoted qhts   terms satisfiability validity
logic equivalent logic introduced pearce valverde        
complete axiomatisation qhts obtained follows  lifschitz et al         
take axioms rules first order intuitionistic logic add axiom hosoi
      

   

determines   element here and there models propositional case  together
axiom 
x  x  x x   
 
consider equality predicate     p   interpreted following condition
every w  h  t 
 
i  w    t    t  iff i t      i t    
obtain complete axiomatisation  need add axiom decidible equality
 
 
xy x   x  
  y  
denote resulting logic qhts   lifschitz et al         inference relation
  compactness strong form completeness established   
 
context logic programs  following assumptions often play role  case
classical qhts  models  say parameter names assumption  pna 
applies case i t  c f   surjective  i e  unnamed individuals d  unique
names assumption  una  applies case i t  c f   injective  case pna
una apply  standard names assumption  sna  applies  i e  i t  c f   bijection 
usual first order logic  satisfiability validity independent signature 
  h d  i   h   l  structure l l  denote i l restriction
sublanguage l 
i l   h d  i l    h  l    l
proposition   suppose l l  theory l l  model  
m l l model  
proposition   suppose l l l  valid  resp  satisfiable 
qhts   l  valid  resp  satisfiable  qhts   l   
proposition allows us omit reference signature logic
denoted simply qhts   
simplify notation symbolise qhts  structure   h d  i   h  
hu  h  i  u    d  i  universe  h  respectively sets atoms
h     case propositional ht logic  kripke structures regarded pairs
hh  set atoms obvious way   strongly  complete axiomatisation ht
obtained intuitionistic logic adding hosoi axiom     
   

figabbay  pearce    valverde

    interpolation logic here and there
important useful property ht fact strongest propositional
intermediate logic  i e  strengthening intuitionistic logic  properly contained
classical logic  moreover turn properly contains intermediate logics 
addition ht one precisely seven superintuitionistic propositional logics possessing
interpolation property  maksimova        gabbay   maksimova        
languages without function symbols ono showed interpolation holds
logic qhts quantified here and there constant domains  ono          addition 
maksimova              showed adding pure equality axioms  e g  decidible equality axiom  superintuitionistic logic preserves interpolation property  gabbay  
maksimova         conclude therefore
proposition   logic qhts  possesses interpolation property 
note strong completeness theorem qhts  work equivalently
   
make observation interpolation continues hold languages include function symbols  established using following property 
proposition   every formula   possible build formula    
atoms one following types 
 
x   c 
 
f  x          xn     f f  where every xi variables  
p t            tm    where every xi variables  
theorem   let l language containing function symbols  qhts   l 
interpolation property 
proof sketch  let us assume   previous proposition  assume 
without loss generality  function symbols atoms type
 
f  x          xn     y  now  consider language l obtained l replacing every
function symbol f fresh predicate symbol  pf   arity pf         arity f   
let formulas l build respectivelly  replacing every atom
 
f  x          xn     pf  x          xn   y   trivially  and  interpolation property
qhts   l    exists interpolant       replace
 
predicates pf  t            tn   tn     atoms f  t          tn     tn   obtain interpolant
initial pair formulas 
   onos axiomatisation qhts uses constant domains axiom x  x     x x     well
alternative axioms propositional here and there  viz  p  p  q q    p q   q p   p
q   however  axioms given equivalent onos 

   

fiinterpolable formulas equilibrium logic answer set programming

    equilibrium logic
equilibrium logic non monotonic logic based certain kinds minimal models
qhts  ht  give definition qhts    propositional version easily
obtained it 
definition   among quantified here and there structures define order e follows 
h d  i   h   e h d   j   j h   j



      j    j   h j h  

subset relation holds strictly  write  
definition    equilibrium model  let theory   h d  i   h   model
 
   said total h    
   said equilibrium model  or short  say  equilibrium 
minimal e among models   total 
words  equilibrium models total models smaller non total
model  evidently total qhts  model theory equivalently regarded
classical first order model   follows make tacit use equivalence 
propositional case  equilibrium models defined way 
ordering propositional ht models  usual way formula theory said
consistent qhts  model additionally say coherent
equilibrium model 
following definition give preliminary notion equilibrium entailment 
agrees standard versions equilibrium logic  pearce        
definition   relation    called equilibrium entailment  defined follows  let
set formulas 
   non empty coherent  has equilibrium models     every equilibrium model model qhts   respectively ht  
   either empty equilibrium models     
notice unless need distinguish propositional first order reasoning use
symbols       either version 
words may help explain concept equilibrium entailment  first 
define basic notion entailment truth every intended  equilibrium  model 
nonmonotonic reasoning common approach sometimes called skeptical
cautious notion entailment inference  counterpart brave reasoning defined
via truth intended model  since equilibrium logic intended provide logical
foundation answer set semantics logic programs  cautious variant entailment
natural one choose  standard consequence relation associated answer
sets given truth answer sets program  note however asp
programming paradigm answer set may correspond particular solution
problem modelled therefore interest right 
   

figabbay  pearce    valverde

secondly  useful nonmonotonic consequence entailment relation
non trivially defined consistent theories  shall see below  however 
theories possess equilibrium models  cases natural use monotonic consequence entailment relation  particular propositional case ht maximal
logic property logically equivalent theories equilibrium models 
evidently situation   handles correctly cases empty inconsistent 
despite qualifications  remains ambiguity concept equilibrium
entailment need settle  suppose l l  theory l
sentence l  i e  l   l     understand expression    
evidently  fix language advance  say language l   simply
consider equilibrium models l   represents knowledge base logic
program  instance  may take view l   appropriate signature
work with  case  query fully interpreted contains
terms theory language l   
language l theory whose language contained l  let eml   
collection equilibrium models qhts   l   consider following two
variants entailment 
definition    equilibrium entailment  assume theory l  non empty
equilibrium models  then 
 i  let us write  cw    eml     l   ll   
 ii  let us write  ow    eml    l    

general eml    l denotes collection expansions elements eml   
models l l   i e  vocabulary l   l interpreted arbitrarily 
 iii  either empty equilibrium models   cw iff  ow iff  
simple example illustrate difference  cw  ow   let
l sentence let q x  predicate l  let constant l let l
language l  q   first method  cw  q a  q a    fact
stronger entailment  cw q a   reason form equilibrium
models l   q a  false effect taking minimal models 
hand  expand equilibrium models qhts   l  qhts   l    new
predicate q receives arbitrary interpretation qhts   l    since logic   valued
obtain  ow q a  q a  
standard  monotonic logics  difference two forms entailment  definition   replace everywhere equilibrium model simply model  in
qhts     variants  i   ii  give result 
context logic programming deductive databases orthodox view
reasoning based closed world assumption  cwa   accordingly ground atomic
query q a    predicate q belong language program
database  would simply assigned value false  case first kind
equilibrium entailment use label  cw since variant appears closer
closed world form reasoning  hand  may legitimate cases
want apply cwa unknown values assigned atom
expressed theory language  second form entailment   ow  
   

fiinterpolable formulas equilibrium logic answer set programming

nearer open world reasoning  may appropriate  present purposes  however 
suffices cw ow thought merely mnemonic labels 
thorough analysis closed world versus open world reasoning context would
lead us consider assumptions una sna outside scope paper 
however  observed logic programming use cwa lead
certain apparent anomalies  notably occurs programs unsafe  see section
  below   following  formulated traditional notation logic programs  
q x  y    p x  y  
p x  x  
given restrictions sna herbrand models  query
  q a  z  
yields answer z cannot satisfied models single domain
element a  query
  q a  b  
satisfiable  given new constant b  logic programming  restrictions
usually assumed  different solutions problem proposed  gelder  ross 
  schlipf        kunen        maher         would point
equilibrium logic generally speaking kind program theory create
special difficulties  neither query
  q a  z  
understood zq a  z   query
  q a  b  
true equilibrium models  particular  equilibrium model whose domain
singleton element  even q a  b  need true  evidently general case una
instance apply  hand answer set programming  una often
assumed  typically assumed programs safe  safety condition
program excluded variables appearing head rule appear
positive body makes answer sets sensitive set constants appearing
language used grounding program  paper 
application interpolation asp concerned  restrict attention safe programs
theories complying generalised form safety  section   below  

   interpolation propositional equilibrium logic
section deal interpolation propositional equilibrium logic  clear
semantic construction propositional equilibrium logic ht deductive base 
base actually maximal 
proposition   ht strong maximal deductive base  propositional  equilibrium
entailment 
first property precisely strong equivalence theorem lifschitz  pearce
valverde         maximality follows fact logic strictly stronger
ht would contain classical logic easily seen deductive base 
e g  violating condition  ii  definition    have 
   grateful anonymous referee raising point example 

   

figabbay  pearce    valverde

lemma   let coherent ht formula em    set equilibrium models 
formula ht v   defines em    sense em   
    
proof  suppose coherent  let
m    ht    t  i  m    ht    t  i          mn   htn   tn
enumeration equilibrium models  show define em     suppose
ti   ki elements denote ai            aij           aiki   let ti complement
ti   list members aik             ail         ai v      set
 

 
j       ki

aij  

 

ail   

l ki         v   

 

 



i       n

claim      mi              n  i e  models
precisely m            mn   verify claim  note mi    mi     
conversely  suppose      semantics ht clear    iff
        particular    implies                 n  however 
defines complete theory whose models total  follows     
  mi   establishes claim 

although shall demonstrate interpolation        form relation  cw   actually establish stronger result  one consequence
concerned  ow entailment       form interpolation actually holds 
proposition         interpolation  let   formulas set v   v   v  
v   v     v   suppose b          bn enumeration v    cw  
formula v   v   v        b        bn      hence
particular  cw  
proof  let   v  v statement proposition  suppose  cw  
holds equilibrium models language v  case  i   suppose
coherent form set equilibrium models  emv    
equilibrium construction easy see model emv   
atom bi false       n  construct formulas formula exactly
proof lemma    consider formula  b        bn     clearly formula
defines set equilibrium models ht v   consequently   b       bn     
 b        bn     apply interpolation theorem ht
infer formula  b        bn    
v   v    v   hence v   v   v    since ht deductive base 
conclude
    b        bn  
now  since v   v   v    bi   v        n  follows ht v     bi
false every equilibrium model   model satisfies  b        bn    
since satisfies    cw  
   notice case adding sentence  b        bn   change set equilibrium
models 

   

fiinterpolable formulas equilibrium logic answer set programming

case  ii   equilibrium models hypothesis  
case simply choose interpolant      

corollary        interpolation  let   formulas  cw v  
v    formula v   v   v    cw  
proof  immediate proposition   fact v     v      



proposition        interpolation  let   formulas set v   v   v  
v   v     v     ow   formula v   v   v       
 
proof  let   v  v statement proposition suppose  ow  
holds expansions elements emv      language v  case  i   suppose
coherent consider emv      
construct formulas formula exactly proof lemma   
consider defines set emv       holds expansions models
v  hence    therefore apply interpolation
theorem ht infer formula  
v   v    v   hence v   v   v    since  ow ht deductive
base conclude
 ow    
case  ii   equilibrium models  choose interpolant      



   interpolation quantified equilibrium logic
turn first order logic  given inferences form     key element
proofs propositions     existence formula defines collection
emv      equilibrium models  propositional case seen existence
established  first order case  hand  need
exist  words  eml      need first order definable arbitrary  
fact hard show  ferraris et al         pointed out  general form
answer set programming first order formulas allowed  fortiori quantified
equilibrium logic  property transitive closure expressible  yet property
definable classical first order logic therefore cannot defined qhts   
usual way say collection k qhts   l  models  qhts    definable
l sentence    k      easy see whenever
class eml      first order definable qhts  obtain first order analogs
propositions      method proof essentially before 
completeness outline main steps case        interpolation 
proposition         interpolation  let   formulas collection equilibrium models qhts    definable  set l   l   l   l   l     l    let
 pi        n   finite  possibly empty  set predicates l suppose
   

figabbay  pearce    valverde

pi arity ki    cw   formula l   l   l       

 

xpi  x    
i   n

hence particular  cw  
proof  assume hypotheses  holds equilibrium models language
l  treat case coherent non empty collection equilibrium
models  eml       assumption collection definable qhts   l    sentence 
  say  consider equilibrium models expanded language l  i e 
collection eml     equilibrium construction claim eml       xpi  x  
     n  since working first order semantics  let us rehearse
briefly argument this  true would model hu  t  eml    
predicate symbol pi l tuple elements domain hu  t  i 
hu  t     pi  a   ie pi  a    however  since refer relation
pi   structure hu  h  h     pi  a  must valso model   contradicting
hu  t  equilibrium 
eml       i   n xpi  x  since defines
v
eml      clearly i   n xpi  x  defines eml    
v
proceed propositional case  i   n xpi  x   
 
xpi  x   

i   n

interpolation
theorem qhts  formula l   l   l   
v
i   n xpi  x    consequently
 
xpi  x 
   
i   n

token propositional case  infer  cw  

case       interpolation  ow analogous state main property
without proof 
proposition         interpolation  let   formulas collection
equilibrium models qhts    definable   ow   formula
l   l   l       

   illustration  interpolation safe formulas
restrictive definability assumption  often met practice  actually
mainstream answer set programming  whose language equilibrium logic captures extends  see next section   non definable classes answers sets play significant role 
reason query answering existing solvers rely grounders instantiate
parts program computing intended models solutions  grounding
process essentially eliminates variables reduces original program propositional
form  practical cases  then  collection stable equilibrium models
definable 
   

fiinterpolable formulas equilibrium logic answer set programming

computational approach work general  syntactic restrictions need
imposed admissible programs theories  common form restriction called
safety  standard types logic programs based rules one regards rule safe
every variable appearing rules head appears body  complex
formulas admitted equilibrium logic general approach answer sets  ferraris
et al         ferraris         new concepts safety need devised  proposals suitable
safety concepts made lee  lifschitz palla      b  general first order formulas
bria  faber leone        restricted syntactic class  recently
cabalar  pearce valverde        generalised approaches suggested
safety concept arbitrary function free formulas equilibrium logic  since new
concept safety defines quite broad class interpolable formulas  let us review
main features  following section mention kinds interpolable
formulas may arise answer set programming 
    general concept safety
remainder section assume languages function free  usual
sentence said prenex form following shape  n   
q   x        q n xn
qi quantifier free  sentence said universal
prenex form quantifiers universal  universal theory set universal
sentences  safety concept defined prenex formulas provide normal form
qhts   pearce   valverde        
first introduce concept called semi safety  main property semi safety formulas equilibrium models refer objects language  note
remainder section use fact negation treated
defined operator    consider additional semantic clauses
negation 
definition    semi safety  quantifier free formula semi safe nonsemi safe variable  is  nss       nss operator recursively defined
follows 
atom  nss   set variables  
nss         nss     nss     
nss         nss     nss     
nss         nss     r rv     
operator rv computes restricted variables follows 
atomic   equality two variables rv       otherwise 
rv   set variables occurring  
rv      
   

figabbay  pearce    valverde

rv         rv     rv     
rv         rv     rv     
rv          
definition semi safe formulas introduced cabalar  pearce valverde       
generalises former definition lee  lifschitz palla      b   short  variable x semi safe every occurrence inside subformula that 
either x rv   x semi safe  
examples semi safe formulas are  instance 
p x   q x  r x  
p x  q r x 

   

note      x restricted p x  q consequent r x  semi safe
thus formula itself  contrary  following formulas semi safe 
p x  q r x 
p x  r x  q x 
following results set previously referred property semi safe formulas 
equilibrium models include objects language 
proposition     cabalar et al        
function free  semi safe  h d  i   t       h d  i    c       
theorem    cabalar et al         function free  semi safe  h d  i   t 
equilibrium model    c    
equilibrium models semi safe formulas refer objects language 
however model could equilibrium depending considered domain 
guarantee independence domain  need additional property semisafety  specifically  need analyse whether unnamed elements could modify
interpretation formula  that  use assignments kleenes threevalued logic  three valued interpretation                extended evaluate
arbitrary formulas    follows 
      min        
      max        

      
      max          

every variable x  going use kleenes interpretations x   defined follows 
x        x occurs atom x          otherwise  intuitively  x    fixes
atoms containing variable x    falsity  leaving rest undefined
evaluates using kleenes three valued operators  nothing else exploiting
defined values    true     false  much possible 
occurrence variable x qx weakly restricted occurs subformula
that 
   

fiinterpolable formulas equilibrium logic answer set programming

q     positive  x       
q     negative x       
q     positive x       
q     negative x       
cases  say makes ocurrence weakly restricted   property
added semi safety condition complete definition safety 
definition    semi safe sentence said safe positive occurrences
universally quantified variables  negative occurrences existentially quantified
variables weakly restricted 
instance  formula   x q x   r p x    safe  occurrence x
p x  negative  whereas occurrence q x  inside positive subformula  itself 
x weakly restricted  since x                      another example safe
formula x  p x  q x   r  
proposition     cabalar et al         function free  safe  prenex formula 
then  h d  i   t  equilibrium model equilibrium model
grc     the grounding c  
    interpolation
basis proposition    could already establish interpolation theorems safe
formulas prenex form  essentially replacing formulas ground versions
working propositional logic  however  apply propositions      directly
noting property shown cabalar et al         safe prenex formulas definable
classes equilibrium models 
theorem    interpolation safe formulas 
safe formulas prenex form
qhts   definable classes equilibrium models  therefore formulas        interpolation  cw inference holds proposition         interpolation holds  ow
inference proposition    

   interpolation answer set semantics
answer set programming  asp  become established form declarative  logic based
programming basic ideas well known  textbook treatment reader
referred barals book         well known  origins asp lie
stable model answer set semantics logic programs introduced gelfond lifschitz                     semantics made use fixpoint condition involving certain
reduct operator  subsequent extensions concept cover general kinds rules
   recall subexpression formula said positive number implications
contain subexpression antecedent even  negative odd  consider
defined  

   

figabbay  pearce    valverde

relied reduct operator similar sort  original definitions  reader
referred various papers cited 
correspondence answer set semantics equilibrium logic wellestablished discussed many publications  beginning pearce        
first showed answer sets disjunctive programs regarded equilibrium
models  lifschitz et al               ferraris et al         pearce   valverde             
       purposes suffice recall two important syntactic classes
programs main features correspondence equilibrium logic 
one extreme ground  disjunctive logic programs  treat without
strong negation  answer sets simply collections atoms  programs consist
sets ground rules form
k        kk l          lm   notlm             notln

   

li kj atoms  translation syntax programs ht
propositional formulas trivial one  viz      corresponds ht sentence
l        lm lm         ln k        kk

   

translation correspondence answer sets equilibrium
models ground disjunctive programs direct one 
proposition    let disjunctive logic program  ht  equilibrium model
answer set  
first shown pearce        basic equivalence later shown hold
general classes programs pearce  p  de guzman valverde        
common treat non ground rules form     variables may appear 
variables thought universally quantified  corresponding translation logical formula would simply universal closure formula     
extreme  ferraris  lee lifschitz        provided new definition
stable model arbitrary first order formulas  case property stable
model defined syntactically via second order condition resembles parallel circumscription  however showed new notion stable model equivalent
equilibrium model defined first order languages  sequel paper 
lee  lifschitz palla      a  applied new definition made following refinements  stable models formula defined ferraris et al         were 
answer sets formula herbrand models formula stable
sense ferraris et al  using new terminology  follows general stable
models equilibrium models coincide  answer sets equivalent sna qht
models equilibrium models 
two extremes many syntactically different kinds programs
considered several variations concept answer set proposed 
however main varieties display similar correspondence equilibrium logic 
merely necessary cases restrict attention specific kinds equilibrium models  e g  herbrand models  una models sna models  important notice
correspondence extends many additional constructs introduced
   

fiinterpolable formulas equilibrium logic answer set programming

asp  cardinality weight constraints even general forms aggregates  lee
  meng         accommodated equilibrium logic translation
logical formulas 
asp main emphasis finding answer sets answer
set solvers compute  less attention placed implementing non monotonic inference
relation query answering mechanism  however standard  skeptical concept
inference entailment associated answer set semantics  notion entailment
consequence programs answer set semantics query q entailed
program q true answer sets  balduccini  gelfond    nogueira        
let us denote entailment consequence relation  as   evidently atoms true
answer set belong it  conjunctions disjunctions handled
obvious way  lifschitz  tang    turner        balduccini et al          sometimes 
queries form a  logical notation a  explicitly dealt  balduccini
et al          however seems keeping semantics regard formula
form true answer set true  another way
express would say answer set satisfies violate
constraint      understanding constraint violation lifschitz  tang turner         
way would say  as answer set contains a  similarly 
interpretation queries containing quantifiers answer set semantics conform
equilibrium logic  taking account specific restrictions  herbrand
models  might imposed 
therefore transfer interpolation properties equilibrium logic answer set
semantics asp  remains consider whether  as best identified closed
world version inference   cw   open world version   ow   again  since asp
solvers generally implement inference engines  difference largely theoretical one  traditional logic programming  however  query belong
language program usually answered false  seems quite natural asp
context that  given program query q  one consider stable models
language l   l q  even proper extension language    
general  cw seems natural choice answer set inference  hand 
contexts answer set semantics used open world setting  example
setting hybrid knowledge bases  rosati        non monotonic rules combined
ontologies formalised description logics  systems semantics terms
equilibrium logic provided de bruijn  pearce  polleres valverde        
entailment relation style  ow might sometimes appropriate 
general answer set semantics defined coherent programs theories 
these  identifying  as  cw   apply proposition   directly 
corollary   coherent formulas          interpolation form proposition  
holds entailment  as answer set semantics 
   logical terms constraint would written  
    notice proposition    program consists safe formulas  atomic query q a  automatically
false belong language program  even q does   simply grounding
program constants sufficient generate answer sets 

   

figabbay  pearce    valverde

   application interpolation
interpolation property applied various areas computer science  notably
software specification  bicarregui et al         construction formal ontologies  lutz   wolter         areas relevant modularity issues 
discuss simple application related concept described lutz wolter
adapt case nonmonotonic logic programs 
one way compare two theories via nonmonotonic consequence relations 
two theories produce answers given query language  call inseparable  term used mathematical logic study formal ontologies  lutz
  wolter        
let us say therefore     l inseparable v    l 
         
proposition    let     l inseparable theories v        v        v  
say  l l v l l      l  inseparable 
proof  assume     l inseparable l extension l
v l l  suppose       v      l   suppose l   v    b          bn   
proposition   interpolant           b       bn   since
    v    l  l inseparability       right absorption therefore
    b        bn   however clear b          bn false equilibrium
models           repeating argument     interchanged shows
theories l  inseparable 

proof similar argument given lutz wolter        theorem   paper  applied tboxes description logics  property described
called robustness signature extensions  notice however that  since  
general transitive cannot immediately infer            
highlights added strength using explicitly set  b          bn   property
ht forms deductive basis   
study modularity logical relations programs asp 
common compare sets answer sets rather consequence classes  however
turns notion inseparability close concept already
studied asp  two theories programs said projectively equivalent
projections answer sets onto common sublanguage agree  eiter  tompits 
  woltran         formally  let       theories l signature l
v      v           said projectively equivalent relative l
e    l   e    l   class models k  kl    ml   k  
proposition    let       theories l signature l v      v      
    projectively equivalent relative l l inseparable 
words two concepts agree whenever l common sublanguage        
main advantage l inseparability seems natural one use
want consider signatures extend language either program theory 
   

fiinterpolable formulas equilibrium logic answer set programming

   uniform interpolation forgetting
stronger form interpolation known uniform interpolation important certain
applications computer science  konev et al          usual  given    
interested interpolants
 

   

contains predicate constant symbols belong  
difference said uniform interpolant     holds
signature   logic said uniform interpolation property
uniform interpolants exist    
classical propositional logic  uniform interpolation holds  however fails first
order classical logic many non classical logics  may hold certain restrictions
placed theory language formulated query language
containing   example shown hold description logics  kontchakov
et al         syntactic restrictions apply  even asp turns form
uniform interpolation holds restricted query language  essentially one allows
instance retrieval  show using known results asp
concept forgetting  eiter   wang        quite closely related interpolation 
variable forgetting  studied eiter wang         concerned following
problem  given disjunctive logic program certain atom occurring   construct
new program  denoted forget   a   contain whose answer
sets respects close possible   precise notion
closeness reader referred paper eiter wang  however consequences
evident shortly  eiter wang define forget   a   as generic term   show
programs exist whenever coherent  provide different algorithms compute
programs 
given coherent   results forget   a   forgetting may
different always answer set equivalent  moreover purposes satisfy
following key property  coherent  a  b distinct atoms usual  
denotes nonmonotonic consequence 
  b



forget   a    b 

    

showing indeed answer sets forget   a  closely related 
establish version uniform interpolation case disjunctive programs
simple  atomic queries  need show always find   forget   a 
    examine first algorithm eiter wang computing
forget   a   simplest three algorithms presented  let coherent
program rules form     write formulas form     let atom
  method constructing   forget   a  follows 
   compute equilibrium models e   
   let e result removing e   
   remove e model non minimal form e     a               say  
   

figabbay  pearce    valverde

   construct program whose answer sets precisely  a              follows 
ai   set    ai   ai    ai   v      ai  
set            
verify desired property  let l simple query language composed
conjunctions literals 
proposition    equilibrium logic  or answer set programming  uniform interpolation
holds  coherent  disjunctive programs queries l v     
proof  prove claim shall show following  let coherent disjunctive
program let l   l v   v v     program
v       v l 
           
begin  let     let x    a                v      v  
choose result forgetting x   defined eiter wang       
follows 
forget   x     forget forget forget   a     a               
shown order atoms x matter  know
     atom v      n 
  forget   ai     a 

    

  forget   x    a 

    

therefore
let forget   x  determined algorithm   eiter wang        described
above  easy see      semantics        continues hold
replaced negated atom b therefore conjunction literals since
conjunction entailed element holds every equilibrium model    remains
show     again  suffice show entailment one member
sequence forget   ai   since order irrelevant wlog choose first element
forget   a    show   forget   a     compute programs            
algorithm  need check        n  i e 
e        ai   ai   
consider e     ht  i  distinguish two cases   i  ai  
   ai   follows    ai ai
    ai   ai    case  ii  ai     ai incomparable 
particular cannot ai minimality property ai obtained step   
hence ai      choose ai            hence     ai  
consequently       ai     ai   ai    follows
i    construction     establishes proposition 
    eiter wang        point out  atom b true answer set forget   a  
must true answer set   showing      holds literals 

   

fiinterpolable formulas equilibrium logic answer set programming

    extending query language
establish uniform interpolation asp using method forgetting  defined
eiter wang         seems clear cannot extend non trivial way
expressive power query language l  since method forgetting removes
non minimal sets e    once removed   atom b might true
equilibrium model equilibrium model forget   a   hence might
disjunction  say b  derivable forget   a   likewise 
consider programs variables first order setting  cannot general extend l
include existential queries 
hand  property uniform interpolation certainly holds l v  
even without condition v v     suppose   v      v        
say v      v       b            bk    b            bk false equilibrium models  
trivially  b v    regard result forgetting b  
repeat proof proposition     setting x    v      v    v   v     
relevant properties continue hold 
interesting open question whether extend theory language include
general kinds program rules allowing negation head  accommodating kinds formulas would constitute important generalisation since
amount normal form equilibrium logic  however  answer sets programs
satisfy minimality property holds answer sets disjunctive programs 
clear definition forgetting would need appropriately modified  
task attempt here 

   literature related work
interpolation theorem classical logic due craig         extended intutionistic logic schutte         maksimova        characterised super intuitionistic
propositional logics possessing interpolation  modern  comprehensive treatment interpolation modal intuitionistic logics found monograph gabbay
maksimova        
non monotonic logics  interpolation received little attention  notable exception
article  amir        establishing interpolation properties circumscription
default logic  well known relation answer sets disjunctive programs
extensions corresponding default theories  derives form interpolation
asp  regard answer set semantics  approach amir quite different
ours  since founded analysis default logic  uses classical logic underlying
base  amirs version interpolation form     l classical logic 
requirement l form well behaved sublogic    e g  deductive base  amir
remarks  one cannot deduce general property         however l classical
logic one cannot even deduce        generally  counterpart
proposition   case  another difference respect approach
amir discuss nature   relation asp detail  particular
understand   case contains atoms present program   fact 
interpret  as section   above  easy refute     l   interpolation l
classical logic  let program b q query b c  clearly
   

figabbay  pearce    valverde

 as q  formula vocabulary b would classically entail c 
interpretation answer set inference atoms program
regarded false      l   interpolation would refuted 

    conclusions
discussed two kinds interpolation properties non monotonic inference relations shown properties hold turn two different inference relations
associate propositional equilibrium logic  case use fact
collection equilibrium models definable logic ht here and there
logic possesses usual form interpolation  one forms inference studied
seems many cases appropriate concept associate answer set programming  although general asp systems tailored query answering deduction 
using results eiter wang        variable forgetting asp  could show
property uniform interpolation holds disjunctive programs restricted
query language 
discussed interpolation property first order equilibrium logic based
quantified version qht logic here and there  obtaining analogous results
propositional case whenever collection equilibrium models definable 
positive results transfer answer set programming assumption usually made
asp systems programs safe therefore definable collections answer sets 
saw  notion safety quite generally defined theories limited
normal disjunctive programs 

acknowledgments
david pearce partially supported mec projects tin           c      csd           agustn valverde partially supported mec project tin           c      
junta de andalucia projects p   fqm       tic      authors grateful
anonymous referees helpful comments 

references
amir  e          interpolation theorems nonmonotonic reasoning systems   proceedings nmr    pp       
balduccini  m   gelfond  m     nogueira  m          a prolog tool declarative
programming  proc  seke       
baral  c          knowledge representation  reasoning declarative problem solving 
cambridge university press 
bicarregui  j   dimitrakos  t   gabbay  d  m     maibaum  t  s  e          interpolation
practical formal development  logic journal igpl        
bria  a   faber  w     leone  n          normal form nested programs  holldobler  s  
lutz  c     wansing  h   eds    proc  jelia    vol       lncs  pp       
springer 
   

fiinterpolable formulas equilibrium logic answer set programming

cabalar  p   pearce  d     valverde  a          revised concept safety general answer
set programs  erdem  e   lin  f     schaub  t   eds    proc  lpnmr    vol 
     lncs  pp        springer 
craig  w          linear reasoning  new form herbrand gentzen theorem   j  symb 
logic             
de bruijn  j   pearce  d   polleres  a     valverde  a          quantified equilibrium logic
hybrid rules  marchiori  m   pan  j  z     de sainte marie  c   eds    proc 
rr    vol       lncs  pp        springer 
diaconescu  r   goguen  j     stefaneas  p          logical support modularisation 
logical environments  pp         cambridge university press 
dietrich  j          deductive bases nonmonononic inference operations  ntz report 
university leipzig 
eiter  t   tompits  h     woltran  s          solution correspondences answer set
programming   kaelbling  l  p     saffiotti  a   eds    proc  ijcai    pp 
       professional book center 
eiter  t     wang  k          semantic forgetting answer set programming  artificial
intelligence                     
ferraris  p          logic programs propositional connectives aggregates  corr 
abs           
ferraris  p   lee  j     lifschitz  v          new perspective stable models  veloso 
m  m   ed    proc  ijcai    pp         
gabbay  d  m     maksimova  l          interpolation definability  modal intuitionistic logic  oxford university press  usa 
gelder  a  v   ross  k  a     schlipf  j  s          well founded semantics general
logic programs  journal acm                 
gelfond  m     lifschitz  v          stable model semantics logic programming 
kowalski  r  a     bowen  k   eds    proc  iclp    pp            mit
press 
gelfond  m     lifschitz  v          logic programs classical negation  warren 
david h d   szerdei  p   ed    proc  iclp    pp          mit press 
gelfond  m     lifschitz  v          classical negation logic programs disjunctive
databases  new generation computing            
konev  b   walther  d     wolter  f          forgetting uniform interpolation largescale description logic terminologies  boutilier  c   ed    proc  ijcai    pp 
       
kontchakov  r   wolter  f     zakharyaschev  m          tell difference
dl lite ontologies   brewka  g     lang  j   eds    principles knowledge
representation reasoning  proc  kr    pp          aaai press 
kunen  k          negation logic programming  journal logic programming        
       
   

figabbay  pearce    valverde

lee  j   lifschitz  v     palla  r       a   reductive semantics counting choice
answer set programming  fox  d     gomes  c  p   eds    proc  aaai    pp 
        aaai press 
lee  j   lifschitz  v     palla  r       b   safe formulas general theory stable
models  preliminary report   de la banda  m  g     pontelli  e   eds    proc 
iclp    vol       lncs  pp          springer 
lee  j     meng  y          reductive semantics aggregates answer set programming  erdem  e   lin  f     schaub  t   eds    proc  lpnmr    vol      
lncs  pp          springer 
lifschitz  v   pearce  d     valverde  a          strongly equivalent logic programs  acm
transactions computational logic                
lifschitz  v   pearce  d     valverde  a          characterization strong equivalence
logic programs variables  baral  c   brewka  g     schlipf  j  s   eds   
proc  lpnmr    vol       lncs  pp          springer 
lifschitz  v   tang  l  r     turner  h          nested expressions logic programs  annals
mathematics artificial intelligence                  
lutz  c     wolter  f          deciding inseparability conservative extensions
description logic el  journal symbolic computation                 
maher  m  j          equivalences logic programs  foundations deductive databases
logic programming   pp          morgan kaufmann 
makinson  d          general patterns nonmonotonic reasoning  pp         oxford
university press  inc 
maksimova  l          interpolation superintuitionistic predicate logics equality 
algebra logic             
maksimova  l          interpolation superintuitionistic modal predicate logics
equality  m kracht  de rijke  m   wansing  h     zakharyaschev  m   eds    advances modal logic  vol  i  pp          csli publications 
maksimova  l          craigs interpolation theorem amalgamable varieties  doklady
akademii nauk sssr                    
mcmillan  k  l          applications craig interpolants model checking  halbwachs 
n     zuck  l  d   eds    proc  tacas    vol       lncs  pp       springer 
ono  h          model extension theorem craigs interpolation theorem intermediate
predicate logics  reports mathematical logic           
pearce  d          new logical characterization stable models answer sets  dix 
j   pereira  l  m     przymusinski  t  c   eds    proc  nmelp    vol      
lncs  pp        springer 
pearce  d          equilibrium logic  annals mathematics artificial intelligence 
              
pearce  d   de guzman  i  p     valverde  a          computing equilibrium models using
signed formulas  proc  cl      vol       lncs  pp          springer 
   

fiinterpolable formulas equilibrium logic answer set programming

pearce  d     valverde  a          first order nonmonotonic extension constructive
logic  studia logica                   
pearce  d     valverde  a          quantified equilibrium logic  technical report  universidad rey juan carlos   http   www matap uma es investigacion tr ma      
pdf  
pearce  d     valverde  a          quantified equilibrium logic foundations answer
set programs  de la banda  m  g     pontelli  e   eds    proc  iclp    vol 
     lncs  pp          springer 
pearce  d     valverde  a          synonymous theories knowledge representations
answer set programming  journal computer system sciences            
rosati  r          semantic computational advantages safe integration ontologies rules  fages  f     soliman  s   eds    proc  ppswr    vol      
lncs  pp        springer 
schutte  k          der interpolationsatz der intuitionistischen pradikatenlogik   math 
ann               
van dalen  d          logic structure   th edition   springer 

   


