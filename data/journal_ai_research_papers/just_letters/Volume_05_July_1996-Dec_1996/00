journal artificial intelligence research              

submitted        published     

spatial aggregation  theory applications
kenneth yip

mit artificial intelligence laboratory      technology square
cambridge        usa

yip martigny ai mit edu

feng zhao

fz cis ohio state edu

department computer information science  ohio state university
columbus  oh       usa

abstract

visual thinking plays important role scientific reasoning  based research
automating diverse reasoning tasks dynamical systems  nonlinear controllers  kinematic mechanisms  uid motion  identified style visual thinking  imagistic
reasoning  imagistic reasoning organizes computations around image like  analogue representations perceptual symbolic operations brought bear infer
structure behavior  programs incorporating imagistic reasoning shown
perform expert level domains defy current analytic numerical methods 
developed computational paradigm  spatial aggregation  unify description class imagistic problem solvers  program written paradigm
following properties  takes continuous field optional objective functions input 
produces high level descriptions structure  behavior  control actions  computes
multi layer intermediate representations  called spatial aggregates  forming equivalence classes adjacency relations  employs small set generic operators
aggregation  classification  localization perform bidirectional mapping
information rich field successively abstract spatial aggregates  uses data
structure  neighborhood graph  common interface modularize computations 
illustrate theory  describe computational structure three implemented
problem solvers   kam  maps  hipair   terms spatial aggregation generic
operators mixing matching library commonly used routines 

   introduction

commonly believed two styles scientific thinking  analytical  logical
chain symbolic reasoning premises conclusions  visual  holding imagistic  analogue representations problem one s mind perceptual symbolic
operations brought bear make inferences  neither style preferred
priori other  however  problems whose complexity precludes direct analytical
approach  certain amount qualitative visual imagination needed provide
necessary  feel   understanding  physical phenomena  picture clear 
analytical mathematics take lead eciently logical conclusions 
 feel physical understanding  often considered informal  imprecise 
apparently unteachable  necessary scientists engineers 
believe part ability visualize imagine must consist skills generate
images  discover structures relations images  transform structures  predict
structures respond internal dynamics external forcing 

c      ai access foundation morgan kaufmann publishers  rights reserved 

fiyip   zhao

ai work visual reasoning focused diagrams role
controlling search  recent years seen development class problem
solvers imagistic  i e   problem solvers derive power primarily
use visual apparatus secondarily search analytical methods 
problem solvers designed perform tasks many different domains  control
interpretation numerical experiments  yip        nishida   et al         zhao 
       kinematics analysis mechanisms  joskowicz   sacks         design controllers
 zhao        bradley         analysis seismic data  junker   braunschweug        
reasoning uid motion  yip         however  important commonalities
underlying them  paper  present framework provide unified description
class problem solvers  framework consists three ideas 

field ontology  input field  mapping one continuum another 

image like analogue representation  field assumed metric
meaningful talk closeness continuity  
structure discovery  central problem solved transformation
information rich input abstractions well suited concise structural behavioral
descriptions  transformation thought successive mappings
input space abstract spaces hide details group similar objects
equivalence classes 
multi layer spatial aggregates  propose     representation neighborhood
graph encode explicitly adjacency relations among objects one level abstraction 
    building blocks computational processes small set generic operators
construct  transform  classify  search neighborhood graph  operators
recursively used implement task specific applications  multi layer theory
two advantages      nonlocal property lower layer redescribed
local property higher layer      layer neighborhood graph
provides common interface support identical modular computations 
field mapping one continuum  say rm   another  say rn    concretely 
one visualize m dimensional space n vector attached point space 
fields commonplace science engineering applications  used describe
physical quantities vary space time  temperature room threedimensional scalar field  weather data described  d spacetime field  vector attached point  velocity  three components  air ow  temperature  scalar  
pressure  scalar   density  scalar   examples fields include brightness
intensity array vision  configuration space mechanism analysis  phase
space  vector field  dynamical systems 
actual computer representations  often approximate field grid  grid
may uniform non uniform  field reconstructed numerical simulation
   forbus et al         proposed general methodology qualitative spatial reasoning  metric diagram place vocabulary  md pv   generally agree methodology  paper inspired
us look refined framework unify class problem solvers integrate visual
symbolic reasoning 

 

fispatial aggregation  theory applications

measurements  field contain symbolic abstractions  completely
numerical  fields composable  one extend dimension underlying space
and or number components vector attached point space 
representation physical systems  field two distinguishing characteristics 
first  information rich sense shannon weaver measurement information 
instantaneous field       grid ow simulation may contain order     bits
information  second  pictorial sense structures relations
implicitly represented field 
consequence information richness pictorial quality  argue
reasoning fields central computational problem ecient transformation pointwise field description physical system economical symbolic abstractions well suited explaining structure behavior system   figure   illustrates
field ontology relates commonly used ontologies qualitative physics 
device  dekleer   brown         process  forbus         constraint  kuipers        
useful  symbolic descriptions must impose conceptual structure system
complexity system understood terms well defined parts
subparts interactions among them  relevant parts interactions often abstract global properties field  abstract property property whose support
large nonlocal  whereas support property defined subset field
property depends  hand  computational complexity reasons
prefer build recognition procedures basic routines local independent task level information much possible  considerations lead us
adopt architecture pointwise description final symbolic descriptions
mediated layers equivalence classes objects explicit adjacency relations 
call layer objects spatial aggregate 
spatial aggregates come from  real field  tend continuities
properties  such intensity temperature pressure  field divided
equivalence classes  i e   open regions particular property varies approximately
uniform way  continuities achieve economy description focusing
open regions boundaries instead pointwise field  higher order continuities 
i e   continuities properties defined open regions  similarly used build
abstract spatial aggregates 
formation equivalence classes presupposes existence continuity  brings
us methodological point  important clearly identify source continuities
field equivalently physical system field represents  discovery valid
general continuities physical system much scientific contribution
subsequent computational use form articulated conceptual model explain
structure behavior 
motivation paper comes desire understand computational
structures shared class automatic problem solvers integrate visual  symbolic 
numerical methods  would make computational structure explicit
comparisons generalizations made  goal develop way organizing
   inferring structural descriptions field ill posed problem  e g   recovering  d shapes
 d images   avoid diculties  assume structure recovery problem well posed
main concerns computational eciency appropriate abstractions 

 

fiyip   zhao

modeling

hard 
analytical methods

differential
equations
numerical
simulation

physical
system

measurement

modeling

field

interpret

equivalence
class clustering

structural
description

device

modeling

process

modeling

constraint

analytical
functions

qualitative
behavioral
description

envisionment
incremental analysis
process inference
qualitative simulation

figure    field ontological abstraction reasoning physical systems 
diagram depicts relationships among different ontologies used qualitative
physics  central computational problem field reasoning recovery
economical structural descriptions qualitative behavior description explanation  key step structural recovery formation equivalence
classes  identifying general valid continuities useful equivalence
class relations based important scientific contribution 
programs around image like analogue representations  appropriate language make
programs written style clear 
next section develops theory spatial aggregation detail  section   describes
language support programs organized around neighborhood graphs  section  
illustrates usefulness language describing succinctly computation structure
three implemented programs   kam  maps  hipair  choose programs
illustrations largely familiarity them  section   shows program
spatial aggregation language  using example image analysis  plan
investigate applicability framework several programs 
constructed kuipers levitt         forbus et al          gelsey         junker
braunschweug        

 

fispatial aggregation  theory applications

   spatial aggregation theory

given field  spectrum reasoning tasks defined  following list roughly
order increasing complexity 
infer structural descriptions  find objects  any  exist field 
shapes  sizes  locations  distributed 
created  evolve parameter  say time  varied 
classify  assign semantic labels objects configurations 
infer correlations  determine geometry distribution one type
objects correlate another type 
check consistency  given two objects configurations  test equivalent
pairwise consistent 
infer incremental behavior  given instantaneous configuration  predict
possible short term behaviors 
infer behavioral descriptions  explain summarize evolution objects
set domain specific interaction rules 

    requirements imagistic reasoning

partly motivated ullman s theory visual analysis  ullman         find desirable
following general requirements imagistic reasoning 

abstractness  problem solver able find objects defined abstract
global properties 

open endedness  problem solver architecture applicable variety

domains   uid motion  seismic data  weather data  phase space  configuration
space   requirement implies basic recognition routines must modular
composable  task specific knowledge affects choice ordering
routines 
eciency   building blocks  recognition machinery must local
non goal specific   non goal specific  means operations building blocks
depend interpretation objects manipulate  requirement
implies basic routines local supports principle run
parallel 
soundness  structural behavioral descriptions must consistent
known physical mathematical principles 
succinctness  structural behavioral descriptions contain qualitatively important distinctions relevant high level tasks hand 
 

fiyip   zhao

    theory

theory imagistic reasoning postulates existence multi layers spatial aggregates  figure   shows layers spatial aggregates computations organized around
them  primitive aggregate defined equivalence class subsets pointwise
field representation  aggregate composed equivalence classes primitive aggregates  field assumed task dependent metric  metric induces topology
space hence meaningful talk adjacency  data structure
spatial aggregate neighborhood graph whose nodes represent objects edges represent adjacency relations among objects  input field sampled form lowest
layer abstraction  field affected control actions higher level
abstraction layers 
stream construct scheme programming language provides common
interface organizing signal processing computations  neighborhood graph conceptual glue piecing together operations manipulate fields  visualize
nodes neighborhood graph open sets  in topology  appropriate space  two
nodes adjacent respective open sets contiguous  
topological notion adjacency amazingly useful reasoning physical systems  grouping objects equivalence classes  cluster tends give rise connected
component neighborhood graph  reasoning kinematics  neighborhood
graph provides essential connectivity information among free space regions  finding
 interesting  structures  pairwise consistency adjacent nodes localizes search regions  isolating bifurcation patterns  mismatch adjacent objects provides hint
analysis  constraint propagation path search  adjacency structure
imposes locality increase computational eciency  prevalence simplicity   two
aspects neighborhood graph make powerful data structure unifying many
spatial computations 
theory revolves around computation neighborhood graph nature
processes construct  filter  transform  compare neighborhood graphs 
isolate set generic operators aggregate  classify  re describe  search correspond
important conceptual pieces common class imagistic problem solvers
kam  yip         maps  zhao         hipair  joskowicz   sacks        
next section discusses operators detail  section   illustrates use
operators rational reconstruction three implemented computer programs 

   language spatial aggregation

present language describing computational processes organized around spatial
aggregates  language provides small set operators construct manipulate
neighborhood graphs  operators make conceptual structure several implemented
programs clear 
   let b two open sets  b contiguous either   b      b       
closure set a  particular  b overlap  contiguous 

 

fispatial aggregation  theory applications

model

classify
search

aggregate

structural
description

n graph
consistent 

primitive
objects
filter

map

incremental
analyze

re describe

behavioral
description

localize

classify
search

aggregate

structural
description

n graph
consistent 

primitive
objects
filter

map

incremental
analyze

behavioral
description

control

sample

field

figure    schematic representation computational structure analysis field
ontology  multi layers spatial abstraction  abstraction level defined neighborhood graph  data structure representing spatial aggregates
adjacency relations  input field fed lowest abstraction layer 
note identical computational structure layer  aggregate operator
computes adjacency relations based task specific metric  neighborhood
graph common interface map filter routines  remaining operations correspond generic analysis tasks  repertoire task independent
geometric manipulation routines  which shown  accessible
generic operators 
 

fiyip   zhao

    task level operators

task level generic operators consist aggregate  classify  re describe  localize 
search  incremental analyze  together predicates pairwise consistent 
consistent   neighborhood graph  conceptual glue   allows computation
hierarchical structural descriptions organized uniform manner  following
box summarizes language provides user needs supply order
write programs spatial aggregation 

language features
user interface functions 
aggregate  classify  re describe  localize  search 
incremental analyze  pairwise consistent   consistent 

user must specify neighborhood relation  field metric  equivalence
relation operators 

data types 
  n graph constructors  accessors  modifiers 

examples n graph include   adjacency arrays  minimal spanning tree 
voronoi diagram 
  fields 
bitmap  vector field  etc 
libraries 
  geometric utilities 
intrinsic geometry  contain   intersect       
  numerical image processing routines 
fft  convolution  integrator  linear system solver  vector matrix algebra 
  

  

aggregate objects combiner 

aggregate operator assembles collection objects spatial structure
using combiner procedure explicates spatial relations among objects
terms neighborhood graph   operator returns neighborhood graph
 n graph   n graph lazily built 
example  recognize trajectory phase space  aggregate operator might
given set discrete points combiner procedure  such minimal spanning
tree  establish adjacency relations  combiner procedure might use metric
topological properties underlying space 
classify n graph cluster proc class rules 

   recall nodes neighborhood graph objects edges adjacency relations 

 

fispatial aggregation  theory applications

classify operator forms equivalence classes according equivalence relation
 using cluster proc   assigns semantic label equivalence class  
subgraph input n graph   according classification rules  example 
orbit clustering procedure groups orbits ow pipes   classification rules
set production rules  operator returns labeled n graph 
catalog classification labels domain specific  classification labels
serve indices storage retrieval shared class properties methods
instantiating them 
  

re describe n graph desc type 

  

localize n graph select proc enumerate proc 

  

  

re describe operator changes representation primitive object 
lambda abstraction scheme  operator allows compound object  say subset
n graph  treated primitive 
given classified object  description type procedure instantiates additional properties specific class objects  example  point set classified
space curve  becomes sensible compute additional geometric properties
length  curvature  torsion 
localize operator systematically enumerates members equivalence class
 nodes n graph  selects according select procedure  operator
 opens up  abstraction allow individual members equivalence class
singled out 
search n graph initial states goal p combiner 

search operator returns paths starting initial states satisfying
goal p predicate  combiner procedure controls order graph
traversed 
incremental analyze n graph state desc delta 

given n graph description states constituent laws  incrementalanalyze operator computes infinitesimal change qualitative state due
small perturbation  perturbation delta might temporal  state 
parameter space 
predicates pairwise consistent  consistent  



pairwise consistent  obj  obj  consistency rules 



consistent  obj consistency rules 

pairwise consistent  predicate decides two objects consistent according
consistency rules  objects primitive objects nodes
n graph n graphs themselves 
consistent 

tests object well formed according consistency rules 

   ow pipe class orbits continuously deformed other  example
homotopy equivalence class 

 

fiyip   zhao

    generic data structure routines
neighborhood graph constructed



n graph constructor objects neighbor p 



map n graph proc 



filter n graph mask 

n graph constructor takes set primitive objects neighborhood predicate
arguments  returns neighborhood graph  example neighborhood graph voronoi diagram  predicate neighbor p tests two nodes
neighbors 
set task independent routines operate objects neighborhood graphs
support task level operations 
map routine transforms neighborhood graph using prespecified procedure 
filter selects subset neighborhood graph processing 

addition generic operators  language provides routines perform common
geometric manipulation  following routines especially useful 
  
  
  
  
  
  

computes intrinsic geometric properties
objects  e g   area  curvature  surface normal  
contain  obj  obj   checks obj  inside obj  
intersect obj  obj   computes intersection two objects 
  object  boundary operator returns boundary object 
dimension boundary co dimension   
 object  co boundary operator returns new object whose boundary
object  dimension new object one higher object 
convolve object mask  performs pointwise convolution given mask 

intrinsic geometry obj properties 

   examples spatial aggregation

section  describe architecture three implemented systems kam  yip        
maps  zhao         hipair  joskowicz   sacks        terms spatial aggregation
framework  although programs designed different tasks  computations
share strikingly similar pattern  programs construct spatial objects  interpret
via multi layers abstraction object aggregation  classification  re description 
composite objects lower level labeled manipulated primitive units
next higher level 
despite fact authors two programs  structural similarities among programs apparent us carefully reconstructed
  

fispatial aggregation  theory applications

programs defining appropriate neighborhood graphs generic operators  analyzing programs common framework help us understand
programs do  greatly enhance ability construct future programs
spatial aggregation operators 

    kam

task kam explore dynamics hamiltonian systems produce high level
summaries qualitative behaviors 
given state equations hamiltonian system  kam derives symbolic description
qualitative behavior   terms orbit types   orbit bundles  phase portraits 
bifurcation patterns   collection point sets representing orbits  or trajectories 
phase space  see figure     point sets obtained numerical simulation
measurements  provide useful interpretation point set  kam decide    
look interesting orbits      group orbits larger structures 
kam proceeds via sequence intermediate representations allow gradual recovery
orbit structures eventually global dynamical properties system  kam
able view object multiple levels abstraction  example  orbit
viewed points phase space curve part orbit bundle 
computations kam organized four layers  as shown figure         orbit 
    orbit bundle      phase portrait      bifurcation pattern  walk
first level sucient detail illustrate computation synthesized
spatial aggregation operators neighborhood graph  details remaining levels
described yip        
input point set  aggregate operator imposes adjacency relation
point set constructing minimal spanning tree  mst   two points adjacent
neighbors connected edge mst  although mst appropriate
orbit interpretation  applications might require different adjacency relations  such
voronoi diagrams k nearest neighbors   output aggregate operator
neighborhood graph encodes edges mst 
consistent  predicate checks inconsistent edges  i e   edges
significantly longer nearby edges  neighborhood graph  deleting
inconsistent edge partition graph subgraphs represents cluster
original point set 
next  classify operator assigns label  orbit type  neighborhood graph
according shape mst number clusters  assignment unsuccessful  kam assumes input point set contain enough points reveal
structure orbit  kam request points repeat aggregation step 
assignment successful  re describe operator takes labeled neighborhood
graph fills information relevant particular orbit type  example 
orbit periodic orbit  period orbit determined  filling
details  re describe operator packages orbit primitive object passes
   introduce useful terminology here  dynamical system smooth vector field  orbit
integral curve vector field  orbit bundle collection adjacent orbits
qualitative behavior  phase portrait collection orbits fill phase space  bifurcation
pattern characteristic change structure phase portrait system parameters vary 

  

fiyip   zhao

 a 

 b   

 b   

figure    top   a  phase portrait hamiltonian system  geometric structures
phase portrait vary drastically system parameter changes 
expert dynamicist  kam explores dynamics nonlinear hamiltonian
system finding interesting structures phase space  decides initial
conditions parameter values try  interprets finds uses
structures draws guide exploration 
bottom   b    minimal spanning tree representation point set   b   
magnifying boxed region   crosses    inconsistent edges  kam imposes
adjacency relations point set representing trajectory phase space 
structure minimal spanning tree reveals type trajectory 

  

fispatial aggregation  theory applications

bifurcation
consistency
rules
phase
portraits

consistent 

aggregate

n graph

portrait
consistency
rules

bifurcation properties

bifurcation classification rules

consistent 

aggregate

redescribe

n graph

phase
portrait

portrait properties
classify

wavefront
propagation
orbit bundle
consistency
rules
orbits

bifurcation
pattern

classify
nearest
neighbors

orbit
bundles

redescribe

portrait classification rules

consistent 

aggregate

redescribe

n graph

orbit
bundle
orbit bundle properties
classify

wavefront
propagation
tree
consistency
rules
point
set

orbit bundle classification rules

consistent 

aggregate

redescribe

n graph

mst
algorithm

orbit

orbit properties
classify
orbit classification rules

figure    computational structure kam viewed spatial aggregation operators acting neighborhood graphs  four layers abstraction  orbit  orbit bundle 
phase portrait  bifurcation pattern  computation organized around
neighborhood graphs  structural similarities among layers apparent 

  

fiyip   zhao

force control
switched

control u  


flow pipe
region r projected
onto initial phase plane 

control u  

g
r

figure    left  buckling beam due axial load 
right  phase spaces buckling beam  upper  locally controlled beam
 lower   stabilize buckling beam far unbuckled state  
unstable equilibrium g  maps     finds ow pipe  group qualitatively similar
trajectories  reaches g      deforms trajectory emanating initial
state via force control trajectory close g      switches
conventional linear controller achieve desired stabilization  let region r
lower phase plane linearly controllable region control u    starting
initial state initial control u    system evolves along trajectory
within ow pipe close projection region r  force
control u  turned deform trajectory system moves
region r linear controller drives system desired unbuckled
state g 
next level abstraction  orbit bundle level  process aggregation 
consistency checks  classification  re description repeated 

    maps

maps  task analyze qualitative phase space structures dissipative systems

use analysis results guide synthesis control laws 
kam  maps extracts high level dynamical information phase space structures  maps goes beyond kam two important aspects      maps deals threedimensional structures explicitly  whereas kam reasons cross sections three dimensional
structures       maps uses phase space structures synthesize nonlinear control
actions 
maps synthesizes global control path geometrically  see figure     given initial
state desired state system control  maps searches path phase
space connects initial desired state  goal directly reachable
initial state  maps pieces together multiple path segments varying control
actions  brute force search individual control paths continuum clearly infeasible 
maps partitions continuous phase space manageable discrete set objects  
  

fispatial aggregation  theory applications

ow pipes   defining appropriate equivalence relations  searches ow pipes
good control paths 
computations maps organized four layers  as shown figure         stability region      ow pipe      phase portrait      ow pipe graph  input
fixed points dynamical system    two fixed points adjacent connected
saddle trajectories  adjacency relation represented neighborhood
graph  trajectories passing saddles classified equivalence classes
assigned stability region boundary labels  re describe operator computes regions delimited stability region boundaries represents polyhedra 
stability regions fed next layer 
second layer  stability region triangulated delaunay method 
aggregate operator constructs neighborhood graph triangulation using adjacency relation defined voronoi diagram  dual delaunay triangulation 
triangulated sub regions classified equivalence classes according topological criterion states two adjacent sub regions equivalent trajectories
passing connected consistent manner  equivalence classes
sub regions classified ow pipes  recall ow pipe coarse representation
set trajectories qualitative properties  use ow pipes simplifies
considerably control path planning problem 
third layer aggregates ow pipes form phase portrait 
fourth layer control decisions made  flow pipes different phase
portraits aggregated form larger structure  ow pipe graph  fundamental data structure supporting path planning phase space  two ow pipes
adjacent phase space regions covered ow pipes overlap  intuitively  one
switch one ow pipe adjacent one setting appropriate control parameters
generate phase portraits question  given initial desired state  search
operator searches ow pipe graph solution paths 
information passed abstraction layer  connected sequence
ow paths found satisfy control objective  individual trajectory segments within
ow pipe found localize operator using shooting method 

    hipair

hipair performs kinematic analysis fixed axes mechanisms built rigid parts  given
description shapes motion types  such translation rotation  parts 
hipair derives realizable configurations mechanism 
hipair derives realizable configurations mechanism constructing manipulating configuration space mechanism  see figure     configuration space
space positions orientations parts make mechanism  hipair
partitions configuration space free space regions parts overlap 
blocked space regions overlap  configurations correspond free
space regions realizable  boundaries free space regions determined
   fixed points  equilibrium points  critical points phase space velocity vector
vanishes  fixed points classified three types according behavior nearby trajectories 
fixed point attractor nearby trajectories move towards it  repellor
move away it  saddle move towards move away it 

  

fiyip   zhao

flow pipe graph
consistency
rules
phase
portraits

aggregate

n graph

portrait
consistency
rules

search

consistent 

aggregate

n graph

classify
localize

shooting
method

redescribe

phase
portrait

portrait properties
classify

wavefront
propagation
sub region
consistency
rules
stability
regions

flow
pipe
graph

reachability rules

flow pipe region overlap

flow
pipes

redescribe

consistent 

portrait classification rules

consistent 

aggregate

redescribe

n graph

flow
pipes

flow pipe properties
classify

voronoi diagram
flow pipe classification rules
stability region
consistency
rules
fixed
points

consistent 

aggregate

redescribe

n graph

stability
regions

stability region properties
classify

saddle trajectories
stability region classification rules

figure    computational structure maps viewed spatial aggregation operators
acting neighborhood graphs  four layers abstraction  stability regions 
ow pipes  phase portrait  ow pipe graph  note structural similarities
kam maps  control synthesis implemented search
localize operators acting neighborhood graph representing ow pipe
graph 

  

fispatial aggregation  theory applications

x
 

cam


x
follower

 






figure    left    finger cam follower  right  configuration space camfollower  cam rotation  x follower displacement  shaded
regions blocked space  indicating parts overlap  free space
regions realizable configurations cam follower  boundaries
free space regions determined contact relations cam
fingers follower 
contact relations among parts touch other  region diagram graph whose
nodes free space regions edges specify region adjacencies  region diagram
mechanism composed regions diagrams pairwise interacting parts 
example  region diagram mechanism    parts constructed region
diagrams    possibly interacting pairs 
computations hipair organized three layers  as shown figure        
free space region      subassembly region diagram      mechanism region diagram 
input shapes parts motion types  hipair first considers pair interacting parts  looks equations contact curves  i e   curves configuration
space pair corresponding configurations two parts touch 
pre compiled table common contact curves  contact curve partitioned segments
intersection points curve either another contact curve boundaries
configuration space  two segments adjacent share endpoint  aggregate
operator assembles segments adjacency relations neighborhood graph 
search operator traverses neighborhood graph find closed chains segments 
closed chain segments sequence segments intersect itself  closed
chain segment encloses free space region  consistent  predicate discards closed
chains lie inside closed chains  classify operator assigns label
closed chain  re describe operator computes free space regions delimited
closed chains  free space region subdivided convex regions 
input second layer free space regions  aggregated neighborhood graph  two free space regions adjacent  or neighbors  touch  given
initial configuration s  interacting pair  search operator finds free space
regions reachable s  depth first search  neighborhood graph re described
subassembly region diagram 
  

fiyip   zhao

sub region
consistency
rules

consistent 

subassembly
aggregate
region
daigrams

region adjacency

sub region
consistency
rules
free
space
regions

aggregate

mechanism
region
diagram

n graph region diagram properties
classify
search

consistent 

mechanism classification rules

redescribe

n graph

subassembly
region
diagram

region diagram properties

classify
region adjacency

closed chain
consistency
rules
contact
curve
segments

redescribe

search

consistent 

aggregate

region diagram classification rules

free
space
regions
free space properties

redescribe

n graph

classify
shared endpoint

search
free space classification rules

figure    computational structure hipair viewed spatial aggregation operators
acting neighborhood graphs  three layers abstraction  free space
regions  subassembly region diagram  mechanism region diagram  note
structural similarities hipair  kam  maps  search operator
determines reachability conditions three layers 
third layer  hipair combines subassembly region diagrams mechanism region diagram  mechanism region diagram neighborhood graph whose nodes
realizable sets free space regions edges specify adjacency free space regions 
set free space regions realizable intersections non empty  example 
let m    fr    s    t  g set free space regions containing initial configuration
mechanism three parts p    p    p    r    s    t  free space
regions subassembly region diagrams pairs fp    p  g  fp    p  g  fp    p  g
respectively  suppose r  one neighbor r    s  one neighbor s    t  none 
three candidate neighbors m  given by 
m    fr    s    t  g
  

fispatial aggregation  theory applications

  fr    s    t  g
  fr    s    t  g

m 
m 

consistent  predicate checks candidate neighbors discards unrealizable ones 

   illustration

section  show program spatial aggregation language 
example boundary tracer line drawings   pick example image
analysis routines quite naturally written spatial aggregation style 
boundary tracing basic operation image analysis   operation might used
identify group boundary segments object  example  consider
line drawing overlapping  d objects  see figure     group boundary segments 
one might first decompose figure segments  junctions  tracing process
joins colinear segments 
input boundary tracing program bitmap 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

bitmap rendered figure    a   figure    illustrates output figure    b   c  computed input bitmap  using spatial aggregation operators 
first define neighborhood relation pixels   adjacency  namely 
neighbors pixel pixels immediate north  east  south  west  
often ecient way construct n graphs directly neighborhood relations 
define explicit n graph neighborhood constructor finds   adjacency neighbors
given pixel 
next aggregate operator assembles pixels n graph n graph
constructor  pixels n graph considered similar neighbors neither
junction  junction defined pixel whose value one
two one value neighbors  classify operator groups pixels equivalence
   details interpretor language  implemented scheme  discussed elsewhere  baileykellogg  zhao    yip        
   jim mahoney introduced us unified description high level operations images 

  

fiyip   zhao

figure    line drawing two overlapping objects 

 a 

 b 

 c 

figure     boundary tracing operation image analysis   a  pixels boundaries two
overlapping objects   b  pixels grouped boundary segments   b  boundary segments grouped distinct object contours 
classes using similarity threshold returns foreground equivalence classes  shown
figure    b  
foreground equivalence classes re described higher level objects  boundary segments  turn aggregated new n graph using different neighborhood relation  specifically two boundary segments neighbors minimum separation distance less specified separation  next  adjacent boundary segments
colinear grouped equivalence classes  called contours  contour represents
complete boundary object  figure    c  shows result grouping 
might want check impossible contours  contour legal closed
self intersecting  conditions expressed standard pattern language  pairwise
consistency rules likewise defined 
program written spatial aggregation language shown figure   
figure      
    actual implementation language described kellogg  zhao  yip         syntax
operators differs slightly section   

  

fispatial aggregation  theory applications

contour
consistency
rules
boundary
segments

consistent 
aggregate

redescribe
segment
n graph

nearness
neighborhood

object
contours

boundary segment classes
classify
colinearity 
threshold

redescribe
pixels

aggregate

pixel
n graph

  adjacency
neighborhood

boundary
segments

pixel classes
classify
pixel similarity 
threshold

figure     boundary tracing operation  data ow spatial aggregation implementation 

   related work

literature visual spatial reasoning enormous  e g   kosslyn        glasgow 
       section  discuss computationally oriented approaches 
first line work investigates diagram like representations aid heuristic search 
gelernter        used diagrams geometry theorem prover prune goals
obviously false  nevins  geometry theorem prover constrained forward deduction conclude facts objects explicitly depicted diagrams  nevins         stallman
sussman        exploited connectivity locality lumped parameter model
guide forward reasoning implement symbolic constraint propagation  similar
spirit  larkin simon        showed elementary mechanics problem diagrammatic representation reduce search diagram provides convenient indices
clustering objects relations 
second line work concerns analogue simulations naive physics  funt s whisper
program first ai program uses primarily perceptual primitives predict dynamical events simple blocks world  funt         arguing commonsense predictions
solid uid behavior cannot possibly depend solution complicated equations 
gardin meltzer        proposed  molecular  simulation strings uids 
body uid  example  decomposed macro molecules interacting
according small set local rules  chandrasekaran narayanan        proposed
direct analogue simulation motion sliding block inclined plane 
  

fiyip   zhao

     adjacency pixel neighborhood 
   neighbors pixels one unit away using nearness ngraph
 define image ngraph fac
 ngraph near instantiate image field fac    
   form neighborhood graph pixels
 define image ngraph
 aggregate pixels image ngraph fac  
   pixel classifier  two adjacent nodes equivalent
   value neither junction 
 define pixel classify
 classify standard instantiate
image ngraph fac
 lambda  n  n  
 if  and  not  is junction  n   
 not  is junction  n   
    pixel value n    pixel value n    
       
   form equivalence classes foreground pixels
 define pixel classes
 filter
 lambda  cl      pixel value  car cl      
 pixel classify image ngraph pixels  threshold     
    form boundary segments
 define segments
 redescribe pixel classes segment create  

figure     boundary tracing operation program  part     group pixels boundary segments 
objective develop cognitive architecture visual perception mental imagery 
direct representation scene propose consists hierarchical  multi resolution
symbol structure encoding spatial relations among objects  linked analogical
representation scene  image   major challenge analogue simulation
provide reliable simulation without incorporating extensive physics geometrical
modeling 
third line work consists spatial reasoning research qualitative physics 
kuipers levitt        described approach spatial reasoning robot navigation
mapping large scale spaces  proposed four level hierarchical representation
incorporating topological metric descriptions terms entities places  paths 
distances  angles  forbus et al         developed metric diagram place vocabulary
theory  metric diagram contains numerical symbolic descriptions scene 
  

fispatial aggregation  theory applications

   boundary segment neighborhood defined separation distance
 define segment ngraph fac
 ngraph near instantiate segment field fac separation  
   form neighborhood graph boundary segments
 define segment ngraph
 aggregate segments segment ngraph fac  
   boundary segments classifier  two adjacent segments
   equivalent colinear  two thresholds used
   determining colinearity  delta threshold separation
   distance two end points epsilon angle
   tangent vectors end points 
 define segment classify
 classify standard instantiate
segment ngraph fac
 lambda  s  s  
 if  and     length  segment points s      
    length  segment points s      
 segment colinear s  s  delta epsilon  
       
   form contours  i e   equivalence classes boundary segments
 define segment classes
 segment classify segment ngraph segments  threshold    
   contour consistency check  closed self intersecting
 define contour consistency rules
  if  and  closed   c 
 not  self intersecting   c   
 t  f  

figure     boundary tracing operation program  part     group boundary segments
distinct object contours 
place vocabulary quantization space according task specific criteria  see footnote     comparing spatial aggregation framework md pv
framework  note two major differences  first  whereas metric diagram mixed
symbolic quantitative representation  field purely numerical encode
structures explicitly  second  theory postulates multi layer spatial aggregates identical computational structure layer  focusing field ontology 
thought special class metric diagrams  able emphasize importance
structure recovery problem  commonalities underlying several implemented
programs 

  

fiyip   zhao

   conclusion

developed spatial aggregation paradigm realization imagistic reasoning 
paradigm systematizes important task interpreting time varying information rich
fields  paradigm consists three ideas      field ontology  image like analogue
representation  input      structural discovery   ecient transformation pointwise field representation economical symbolic descriptions   central computational
problem      multi layer neighborhood graph common interface small
set generic operators   aggregate  classify  redescribe  search   building blocks
computational processes derive symbolic abstractions analogue representation  paradigm relies important observations physical constraints
real field  such continuity conservation  provide useful equivalence relations
economical descriptions  nonlocal property lower layer often redescribed
local property higher layer 
spatial aggregation paradigm supports recovery abstract properties via
multi layer neighborhood graphs  produces concise descriptions manipulating equivalence classes objects primitives  constructs modular programs generic operators mixing matching library commonly used routines  expresses task specific
knowledge terms field metric  adjacency relations  consistency predicates  classification
rules  redescription properties 
illustrate theory  examine computational structure three implemented
programs   kam  maps  hipair   integrate symbolic  numerical  visual reasoning  show small set generic operators construct  transform  filter  classify 
search neighborhood graphs capture commonalities programs  develop
language  way organizing programs around neighborhood graphs  make programs
written style clear 
currently developing toolkit support problem solving using generic
operators spatial aggregation paradigm  many research questions still open 
operators interfaced computational geometry numerical analysis
build robust  ecient programs  scientific problems solved spatial
aggregation 
imagistic reasoning powerful strategy mapping analog signals generated
physical systems discrete  symbolic representations systems  spatial aggregation one many realizations  believe reasoning methods derive
power primarily perceptual operations analog representations secondarily search analytical methods might prove effective automating commonsense
reasoning well 

acknowledgements
thank chris bailey kellogg help implementing spatial aggregation language  following people helpful discussions comments earlier drafts
paper  harold abelson  andy berlin  b  chandrasekaran  gregor kiczales  john
lamping  shiou loh  jim mahoney  jeff may  neal mcdonald  pandurang nayak  toyoaki
nishida  elisha sacks  brian smith  jack smith  gerry sussman  brian williams 
  

fispatial aggregation  theory applications

ky supported nsf national young investigator award ecs         fz
supported nsf national young investigator award ccr          alfred p  sloan
foundation research fellowship  grant xerox palo alto research center  grant
at t foundation  nsf grant ccr         

references

bailey kellogg  c   zhao  f     yip  k          spatial aggregation  language applications  proceedings aaai  appear 
bradley  e          taming chaotic circuits  tech  rep  ai tr       mit artificial intelligence lab 
chandrasekaran  b     narayanan  n          towards theory commonsense visual
reasoning  nori  k     madhavan  c   eds    foundations software technology
theoretical computer science  springer 
dekleer  j     brown  j          qualitative physics based con uences  artificial
intelligence     
forbus  k          qualitative process theory  artificial intelligence     
forbus  k   nielsen  p     faltings  b          qualitative spatial reasoning  clock
project  artificial intelligence     
funt  b          problem solving diagrammatic representations  artificial intelligence 
   
gardin  f     meltzer  b          analogical representations naive physics  artificial
intelligence     
gelernter  h          realization geometry theorem proving machine  computers
thought  mcgraw hill 
gelsey  a          automated reasoning machines  artificial intelligence     
glasgow  j          imagery debate revisited  computational perspective  computational intelligence 
joskowicz  l     sacks  e          computational kinematics  artificial intelligence     
        
junker  u     braunschweug  b          history based interpretation finite element
simulations seismic wave fields  proceedings ijcai 
kosslyn  s  m          image brain  resolution imagery debate  mit press 
kuipers  b          qualitative simulation  artificial intelligence     
kuipers  b     levitt  t          navigation mapping large scale space  ai magazine 
     
  

fiyip   zhao

larkin  j     simon  h          diagram  sometimes  worth ten thousand words 
cognitive science     
nevins  a          plane geometry theorem proving using forward chaining  artificial
intelligence    
nishida  t     et al          automated phase portrait analysis integrating qualitative
quantitative analysis  proceedings aaai 
stallman  r     sussman  g  j          forward reasoning dependency directed backtracking system computer aided circuit analysis  artificial intelligence    
ullman  s          visual routines  cognition     
yip  k  m          kam  system intelligently guiding numerical experimentation
computer  mit press 
yip  k  m          reasoning uid motion  finding structures  proceedings
ijcai 
zhao  f          extracting representing qualitative behaviors complex systems
phase spaces  artificial intelligence                 
zhao  f          intelligent simulation designing complex dynamical control systems 
tzafestas    verbruggen  eds    artificial intelligence industrial decision making 
control  automation  kluwer academic publishers 

  


