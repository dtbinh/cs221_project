journal of artificial intelligence research              

submitted        published     

spatial aggregation  theory and applications
kenneth yip

mit artificial intelligence laboratory      technology square
cambridge  ma       usa

yip martigny ai mit edu

feng zhao

fz cis ohio state edu

department of computer and information science  the ohio state university
columbus  oh       usa

abstract

visual thinking plays an important role in scientific reasoning  based on the research in
automating diverse reasoning tasks about dynamical systems  nonlinear controllers  kinematic mechanisms  and uid motion  we have identified a style of visual thinking  imagistic
reasoning  imagistic reasoning organizes computations around image like  analogue representations so that perceptual and symbolic operations can be brought to bear to infer
structure and behavior  programs incorporating imagistic reasoning have been shown to
perform at an expert level in domains that defy current analytic or numerical methods 
we have developed a computational paradigm  spatial aggregation  to unify the description of a class of imagistic problem solvers  a program written in this paradigm has the
following properties  it takes a continuous field and optional objective functions as input 
and produces high level descriptions of structure  behavior  or control actions  it computes
a multi layer of intermediate representations  called spatial aggregates  by forming equivalence classes and adjacency relations  it employs a small set of generic operators such
as aggregation  classification  and localization to perform bidirectional mapping between
the information rich field and successively more abstract spatial aggregates  it uses a data
structure  the neighborhood graph  as a common interface to modularize computations 
to illustrate our theory  we describe the computational structure of three implemented
problem solvers   kam  maps  and hipair   in terms of the spatial aggregation generic
operators by mixing and matching a library of commonly used routines 

   introduction

it is commonly believed that there are two styles of scientific thinking  analytical  a logical
chain of symbolic reasoning from premises to conclusions  and visual  the holding of imagistic  analogue representations of a problem in one s mind so that perceptual and symbolic
operations can be brought to bear to make inferences  neither style is to be preferred a
priori over the other  however  for problems whose complexity precludes a direct analytical
approach  a certain amount of qualitative and visual imagination is needed to provide the
necessary  feel  or  understanding  of the physical phenomena  once the picture is clear 
the analytical mathematics can take over and lead more eciently to logical conclusions 
this  feel and physical understanding  is often considered to be informal  imprecise  and
apparently unteachable  but necessary for scientists and engineers 
we believe part of this ability to visualize and imagine must consist of skills to generate
images  discover structures and relations in the images  transform the structures  and predict
how the structures respond to internal dynamics or external forcing 

c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fiyip   zhao

while most ai work in visual reasoning has focused on diagrams and their role in
controlling search  in recent years we have seen the development of a class of problem
solvers that are imagistic  i e   the problem solvers derive their power primarily from the
use of visual apparatus and only secondarily from search and analytical methods  these
problem solvers have been designed to perform tasks in many different domains  control
and interpretation of numerical experiments  yip        nishida   et al         zhao 
       kinematics analysis of mechanisms  joskowicz   sacks         design of controllers
 zhao        bradley         analysis of seismic data  junker   braunschweug         and
reasoning about uid motion  yip         however  there are important commonalities
underlying them  in this paper  we present a framework to provide a unified description of
this class of problem solvers  our framework consists of three ideas 

 the field ontology  the input is a field  a mapping from one continuum to another 

it is an image like analogue representation  the field is assumed to have a metric so
that it is meaningful to talk about closeness and continuity  
 structure discovery  a central problem to be solved is the transformation of the
information rich input to abstractions well suited for concise structural and behavioral
descriptions  the transformation can be thought of as successive mappings of the
input space into more abstract spaces that hide details and group similar objects into
equivalence classes 
 multi layer spatial aggregates  we propose     as representation the neighborhood
graph to encode explicitly adjacency relations among objects at one level of abstraction 
and     as building blocks of computational processes a small set of generic operators
to construct  transform  classify  and search the neighborhood graph  the operators
are recursively used to implement task specific applications  the multi layer theory
has two advantages      a nonlocal property of a lower layer can be redescribed as
a local property of a higher layer  and     on each layer the neighborhood graph
provides a common interface to support identical modular computations 
a field is a mapping from one continuum  say rm   to another  say rn    more concretely 
one can visualize a m dimensional space with a n vector attached to each point in the space 
fields are commonplace in science and engineering applications  they are used to describe
how physical quantities vary over space and time  temperature in a room is a threedimensional scalar field  weather data can be described as a  d spacetime field with a  vector attached to each point  velocity  three components  of air ow  temperature  scalar  
pressure  scalar   and density  scalar   other examples of fields include the brightness
intensity array in vision  the configuration space in mechanism analysis  and the phase
space  vector field  of dynamical systems 
in actual computer representations  we often approximate a field with a grid  the grid
may be uniform or non uniform  the field can be reconstructed from numerical simulation
   forbus et al         proposed a general methodology for qualitative spatial reasoning  the metric diagram place vocabulary  md pv   we generally agree with their methodology  their paper inspired
us to look for a more refined framework to unify a class of problem solvers that integrate visual and
symbolic reasoning 

 

fispatial aggregation  theory and applications

or measurements  a field does not contain any symbolic abstractions  it is completely
numerical  fields are composable  one can extend the dimension of the underlying space
and or the number of components in the vector attached to each point of the space 
as a representation for physical systems  a field has two distinguishing characteristics 
first  it is information rich in the sense of the shannon weaver measurement of information 
an instantaneous field of a       grid ow simulation may contain on the order of     bits
of information  second  it is pictorial in the sense that structures and relations are only
implicitly represented in the field 
as a consequence of both the information richness and the pictorial quality  we argue
that in reasoning about fields the central computational problem is the ecient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system   figure   illustrates
how the field ontology relates to the other commonly used ontologies in qualitative physics 
device  dekleer   brown         process  forbus         and constraint  kuipers        
to be useful  the symbolic descriptions must impose a conceptual structure on the system
so that the complexity of the system can be understood in terms of well defined parts and
subparts and interactions among them  the relevant parts and interactions are often abstract global properties of the field  an abstract property is a property whose support is
large and nonlocal  whereas the support of a property is defined as the subset of a field
on which the property depends  on the other hand  for computational complexity reasons
we prefer to build the recognition procedures from basic routines that are local and independent of task level information as much as possible  these considerations lead us to
adopt an architecture where the pointwise description and the final symbolic descriptions
are mediated by layers of equivalence classes of objects with explicit adjacency relations 
we call such a layer of objects a spatial aggregate 
where do spatial aggregates come from  in a real field  there tend to be continuities of
properties  such as intensity or temperature or pressure  so that the field can be divided into
equivalence classes  i e   open regions where a particular property varies in an approximately
uniform way  with continuities we can achieve an economy of description by focusing on the
open regions and their boundaries instead of the pointwise field  higher order continuities 
i e   continuities of properties defined on the open regions  can similarly be used to build
more abstract spatial aggregates 
the formation of equivalence classes presupposes the existence of continuity  this brings
us to a methodological point  it is important to clearly identify the source of continuities in
the field or equivalently in the physical system the field represents  the discovery of valid
and general continuities in the physical system is as much a scientific contribution as the
subsequent computational use of them to form an articulated conceptual model to explain
structure and behavior 
our motivation for this paper comes from the desire to understand the computational
structures shared by a class of automatic problem solvers that integrate visual  symbolic 
and numerical methods  we would like to make this computational structure explicit so that
comparisons and generalizations can be made  our goal is to develop a way of organizing
   inferring structural descriptions from a field can be an ill posed problem  e g   recovering  d shapes from
 d images   to avoid these diculties  we will assume the structure recovery problem to be well posed
so that our main concerns are computational eciency and appropriate abstractions 

 

fiyip   zhao

modeling

hard 
analytical methods

differential
equations
numerical
simulation

physical
system

measurement

modeling

field

interpret

equivalence
class clustering

structural
description

device

modeling

process

modeling

constraint

analytical
functions

qualitative
behavioral
description

envisionment
incremental analysis
process inference
qualitative simulation

figure    field as an ontological abstraction for reasoning about physical systems  the
diagram depicts the relationships among different ontologies used in qualitative
physics  the central computational problem in field reasoning is the recovery
of economical structural descriptions for qualitative behavior description and explanation  a key step in the structural recovery is the formation of equivalence
classes  identifying general and valid continuities on which useful equivalence
class relations are based is an important scientific contribution 
programs around image like analogue representations  and an appropriate language to make
programs written in this style clear 
the next section develops the theory of spatial aggregation in detail  section   describes
a language to support programs that are organized around neighborhood graphs  section  
illustrates the usefulness of the language by describing succinctly the computation structure
of three implemented programs   kam  maps  and hipair  we choose these programs as
illustrations largely because of our familiarity with them  section   shows how to program
in the spatial aggregation language  using an example from image analysis  we plan to
investigate the applicability of our framework to several other programs  such as those
constructed by kuipers and levitt         forbus et al          gelsey         and junker
and braunschweug        

 

fispatial aggregation  theory and applications

   spatial aggregation theory

given a field  a spectrum of reasoning tasks can be defined  the following list is roughly in
the order of increasing complexity 
 infer structural descriptions  find out objects  if any  that exist in the field 
what are their shapes  sizes  and locations  how are they distributed  how are they
created  how do they evolve as some parameter  say time  is varied 
 classify  assign semantic labels to objects and configurations 
 infer correlations  determine how the geometry and distribution of one type of
objects correlate with those of another type 
 check consistency  given two objects or configurations  test if they are equivalent
or if they are pairwise consistent 
 infer incremental behavior  given an instantaneous configuration  predict its
possible short term behaviors 
 infer behavioral descriptions  explain and summarize the evolution of objects by
a set of domain specific interaction rules 

    requirements of imagistic reasoning

partly motivated by ullman s theory of visual analysis  ullman         we find desirable
the following general requirements on imagistic reasoning 

 abstractness  the problem solver should be able to find objects defined by abstract
global properties 

 open endedness  the problem solver architecture should be applicable to a variety

of domains  uid motion  seismic data  weather data  phase space  or configuration
space   this requirement implies that the basic recognition routines must be modular
and composable  task specific knowledge affects the choice and ordering of these
routines 
 eciency  the  building blocks  of the recognition machinery must be local and
non goal specific   non goal specific  means the operations of the building blocks do
not depend on the interpretation of the objects they manipulate  this requirement
implies that the basic routines should have local supports and in principle can run in
parallel 
 soundness  the structural and behavioral descriptions must be consistent with
known physical and mathematical principles 
 succinctness  the structural and behavioral descriptions should contain the qualitatively important distinctions relevant to the high level tasks at hand 
 

fiyip   zhao

    theory

our theory of imagistic reasoning postulates the existence of multi layers of spatial aggregates  figure   shows the layers of spatial aggregates and computations organized around
them  a primitive aggregate is defined as an equivalence class of subsets of the pointwise
field representation  an aggregate is composed of equivalence classes of primitive aggregates  the field is assumed to have a task dependent metric  the metric induces a topology
on the space and hence it is meaningful to talk about adjacency  the data structure for a
spatial aggregate is a neighborhood graph whose nodes represent objects and edges represent adjacency relations among the objects  the input field is sampled to form the lowest
layer of abstraction  the field can also be affected by control actions from the higher level
abstraction layers 
just as the stream construct in the scheme programming language provides a common
interface for organizing signal processing computations  the neighborhood graph is our conceptual glue for piecing together operations that manipulate fields  we like to visualize
nodes of neighborhood graph as open sets  in topology  in some appropriate space  two
nodes are adjacent if their respective open sets are contiguous  
the topological notion of adjacency is amazingly useful in reasoning about physical systems  in grouping objects into equivalence classes  a cluster tends to give rise to a connected
component of the neighborhood graph  in reasoning about kinematics  the neighborhood
graph provides the essential connectivity information among free space regions  in finding
 interesting  structures  the pairwise consistency of the adjacent nodes localizes search regions  in isolating bifurcation patterns  the mismatch of adjacent objects provides a hint
for further analysis  in constraint propagation and path search  the adjacency structure
imposes locality to increase computational eciency  prevalence and simplicity   these two
aspects of the neighborhood graph make it a powerful data structure for unifying many
spatial computations 
our theory revolves around the computation of the neighborhood graph and the nature
of the processes that construct  filter  transform  and compare neighborhood graphs  we
isolate a set of generic operators aggregate  classify  re describe  and search which correspond
to the important conceptual pieces common to a class of imagistic problem solvers such as
kam  yip         maps  zhao         and hipair  joskowicz   sacks        
the next section discusses these operators in detail  section   illustrates the use of these
operators in a rational reconstruction of three implemented computer programs 

   the language of spatial aggregation

we present a language for describing computational processes organized around spatial
aggregates  the language provides a small set of operators to construct and manipulate
neighborhood graphs  the operators make the conceptual structure of several implemented
programs clear 
   let a and b be two open sets  a and b are contiguous if either a   b      or b   a      where a is the
closure of the set a  in particular  if a and b overlap  then they are contiguous 

 

fispatial aggregation  theory and applications

model

classify
search

aggregate

structural
description

n graph
consistent 

primitive
objects
filter

map

incremental
analyze

re describe

behavioral
description

localize

classify
search

aggregate

structural
description

n graph
consistent 

primitive
objects
filter

map

incremental
analyze

behavioral
description

control

sample

field

figure    a schematic representation of the computational structure for analysis of a field
ontology  there are multi layers of spatial abstraction  an abstraction level is defined by the neighborhood graph  a data structure representing spatial aggregates
and adjacency relations  the input field is fed to the lowest abstraction layer 
note the identical computational structure on each layer  the aggregate operator
computes adjacency relations based on a task specific metric  the neighborhood
graph is the common interface for map and filter routines  the remaining operations correspond to the generic analysis tasks  a repertoire of task independent
geometric manipulation routines  which are not shown  are accessible by the
generic operators 
 

fiyip   zhao

    task level operators

the task level generic operators consist of aggregate  classify  re describe  localize 
search  incremental analyze  together with the predicates pairwise consistent  and
consistent   the neighborhood graph is the  conceptual glue   it allows the computation
of hierarchical structural descriptions to be organized in a uniform manner  the following
box summarizes what the language provides and what a user needs to supply in order to
write programs in spatial aggregation 

language features
 user interface functions 
aggregate  classify  re describe  localize  search 
incremental analyze  pairwise consistent   consistent 

a user must specify the neighborhood relation  field metric  and equivalence
relation for these operators 

 data types 
  n graph and its constructors  accessors  modifiers 

examples of n graph include   adjacency arrays  minimal spanning tree 
and voronoi diagram 
  fields 
bitmap  vector field  etc 
 libraries 
  geometric utilities 
intrinsic geometry  contain   intersect        
  numerical and image processing routines 
fft  convolution  integrator  linear system solver  vector matrix algebra 
  

  

aggregate objects combiner 

the aggregate operator assembles a collection of objects into a spatial structure
using the combiner procedure and explicates the spatial relations among the objects
in terms of the neighborhood graph   the operator returns a neighborhood graph
 n graph   the n graph can be lazily built 
for example  to recognize a trajectory in a phase space  the aggregate operator might
be given a set of discrete points and a combiner procedure  such as minimal spanning
tree  to establish adjacency relations  the combiner procedure might use a metric or
topological properties of the underlying space 
classify n graph cluster proc class rules 

   recall the nodes in a neighborhood graph are objects and edges are adjacency relations 

 

fispatial aggregation  theory and applications

the classify operator forms equivalence classes according to an equivalence relation
 using the cluster proc   and assigns a semantic label to each equivalence class   a
subgraph of the input n graph   according to the classification rules  for example 
the orbit clustering procedure groups orbits into ow pipes   the classification rules
are a set of production rules  the operator returns a labeled n graph 
the catalog of the classification labels is domain specific  these classification labels
serve as indices for storage and retrieval of shared class properties and methods for
instantiating them 
  

re describe n graph desc type 

  

localize n graph select proc enumerate proc 

  

  

the re describe operator changes the representation of a primitive object  like a
lambda abstraction in scheme  this operator allows a compound object  say a subset
of a n graph  to be treated as a primitive 
given a classified object  the description type procedure instantiates additional properties specific to that class of objects  for example  if a point set is classified as
a space curve  it becomes sensible to compute additional geometric properties like
length  curvature  and torsion 
the localize operator systematically enumerates members of an equivalence class
 nodes of n graph  and selects those according to the select procedure  this operator
 opens up  an abstraction to allow individual members of the equivalence class to be
singled out 
search n graph initial states goal p combiner 

the search operator returns paths starting from the initial states and satisfying the
goal p predicate  the combiner procedure controls the order in which the graph is
traversed 
incremental analyze n graph state desc delta 

given a n graph and a description of states and constituent laws  the incrementalanalyze operator computes the infinitesimal change to the qualitative state due to
a small perturbation  the perturbation delta might be in the temporal  state  or
parameter space 
there are predicates pairwise consistent  and consistent  



pairwise consistent  obj  obj  consistency rules 



consistent  obj consistency rules 

the pairwise consistent  predicate decides if two objects are consistent according
to the consistency rules  the objects can be primitive objects such as nodes of an
n graph or n graphs themselves 
consistent 

tests if an object is well formed according to the consistency rules 

   a ow pipe is a class of orbits that can be continuously deformed into each other  it is an example of
the homotopy equivalence class 

 

fiyip   zhao

    generic data structure and routines
the neighborhood graph is constructed by



n graph constructor objects neighbor p 



map n graph proc 



filter n graph mask 

the n graph constructor takes a set of primitive objects and a neighborhood predicate
as arguments  and returns a neighborhood graph  an example of such a neighborhood graph is the voronoi diagram  the predicate neighbor p tests if two nodes are
neighbors 
the set of task independent routines operate on the objects in the neighborhood graphs
and support the task level operations 
the map routine transforms a neighborhood graph using a prespecified procedure 
a filter selects a subset of the neighborhood graph for further processing 

in addition to the generic operators  the language provides routines to perform common
geometric manipulation  the following routines are especially useful 
  
  
  
  
  
  

computes intrinsic geometric properties of
objects  e g   area  curvature  surface normal  
contain  obj  obj   checks if obj  is inside obj  
intersect obj  obj   computes intersection of two objects 
  object  is the boundary operator that returns the boundary of an object  the
dimension of boundary is co dimension   
 object  is the co boundary operator that returns a new object whose boundary is
the object  the dimension of the new object is one higher than that of the object 
convolve object mask  performs pointwise convolution with the given mask 

intrinsic geometry obj properties 

   examples of spatial aggregation

in this section  we describe the architecture of three implemented systems kam  yip        
maps  zhao         and hipair  joskowicz   sacks        in terms of the spatial aggregation
framework  although these programs are designed for different tasks  their computations
share a strikingly similar pattern  these programs construct spatial objects  and interpret
them via multi layers of abstraction by object aggregation  classification  and re description 
composite objects at a lower level are labeled and manipulated as primitive units at the
next higher level 
despite the fact that we are the authors of two of these programs  the structural similarities among these programs are not apparent to us until we carefully reconstructed these
  

fispatial aggregation  theory and applications

programs by defining the appropriate neighborhood graphs and generic operators  analyzing these programs in a common framework will help us to understand not only what the
programs do  but also greatly enhance our ability to construct future programs by a few
spatial aggregation operators 

    kam

the task for kam is to explore the dynamics of hamiltonian systems and produce high level
summaries of their qualitative behaviors 
given the state equations of a hamiltonian system  kam derives a symbolic description
of its qualitative behavior   in terms of orbit types   orbit bundles  phase portraits  and
bifurcation patterns   from a collection of point sets representing orbits  or trajectories  in
the phase space  see figure     the point sets can be obtained from numerical simulation
or measurements  to provide a useful interpretation of the point set  kam has to decide    
where to look for interesting orbits  and     how to group these orbits into larger structures 
kam proceeds via a sequence of intermediate representations that allow the gradual recovery
of orbit structures and eventually the more global dynamical properties of the system  kam
is able to view an object at multiple levels of abstraction  for example  an orbit can be
viewed as points in the phase space or a curve or part of an orbit bundle 
the computations in kam are organized into four layers  as shown in figure         orbit 
    orbit bundle      phase portrait  and     bifurcation pattern  we will walk through the
first level in sucient detail to illustrate how the computation is synthesized from the
spatial aggregation operators and neighborhood graph  details of the remaining levels are
described by yip        
the input is a point set  the aggregate operator imposes an adjacency relation on
the point set by constructing a minimal spanning tree  mst   two points are adjacent or
neighbors if they are connected by an edge in the mst  although the mst is appropriate
for orbit interpretation  other applications might require different adjacency relations  such
as voronoi diagrams or k nearest neighbors   the output of the aggregate operator is a
neighborhood graph that encodes the edges of the mst 
the consistent  predicate checks if there are any inconsistent edges  i e   edges that
are significantly longer than their nearby edges  in the neighborhood graph  deleting the
inconsistent edge will partition the graph into subgraphs each of which represents a cluster
of the original point set 
next  the classify operator assigns a label  an orbit type  to the neighborhood graph
according to the shape of the mst and the number of clusters  if the assignment is unsuccessful  kam assumes the input point set does not contain enough points to reveal the
structure of the orbit  kam will request more points and repeat the aggregation step 
if the assignment is successful  the re describe operator takes the labeled neighborhood
graph and fills in information that is relevant to that particular orbit type  for example 
if the orbit is a periodic orbit  the period of the orbit is determined  after filling in the
details  the re describe operator packages the orbit as a primitive object and passes it to
   we introduce some useful terminology here  a dynamical system is a smooth vector field  an orbit is
an integral curve of the vector field  an orbit bundle is a collection of adjacent orbits having the same
qualitative behavior  a phase portrait is the collection of orbits that fill the phase space  a bifurcation
pattern is a characteristic change in the structure of a phase portrait as some system parameters vary 

  

fiyip   zhao

 a 

 b   

 b   

figure    top   a  the phase portrait of a hamiltonian system  the geometric structures
in the phase portrait can vary drastically as the system parameter a changes 
like an expert dynamicist  kam explores the dynamics of a nonlinear hamiltonian
system by finding interesting structures in the phase space  it decides what initial
conditions and parameter values to try  it interprets what it finds and uses the
structures it draws for itself to guide further exploration 
bottom   b    the minimal spanning tree representation of a point set   b   
magnifying the boxed region   crosses    are inconsistent edges  kam imposes
adjacency relations on a point set representing a trajectory in phase space  the
structure of the minimal spanning tree reveals the type of the trajectory 

  

fispatial aggregation  theory and applications

bifurcation
consistency
rules
phase
portraits

consistent 

aggregate

n graph

portrait
consistency
rules

bifurcation properties

bifurcation classification rules

consistent 

aggregate

redescribe

n graph

phase
portrait

portrait properties
classify

wavefront
propagation
orbit bundle
consistency
rules
orbits

bifurcation
pattern

classify
nearest
neighbors

orbit
bundles

redescribe

portrait classification rules

consistent 

aggregate

redescribe

n graph

orbit
bundle
orbit bundle properties
classify

wavefront
propagation
tree
consistency
rules
point
set

orbit bundle classification rules

consistent 

aggregate

redescribe

n graph

mst
algorithm

orbit

orbit properties
classify
orbit classification rules

figure    the computational structure of kam viewed as spatial aggregation operators acting on neighborhood graphs  it has four layers of abstraction  orbit  orbit bundle 
phase portrait  and bifurcation pattern  the computation is organized around
neighborhood graphs  the structural similarities among the layers are apparent 

  

fiyip   zhao

force control
is switched on

control u  
s

flow pipe
region r is projected
onto the initial phase plane 

control u  

g
r

figure    left  buckling of a beam due to an axial load 
right  phase spaces for the buckling beam  upper  and locally controlled beam
 lower   to stabilize the buckling beam far from the unbuckled state   the
unstable equilibrium g  maps     finds a ow pipe  a group of qualitatively similar
trajectories  that reaches g      deforms the trajectory emanating from the initial
state via a force control until the trajectory is close to g  and then     switches to
a conventional linear controller to achieve the desired stabilization  let region r
in the lower phase plane be a linearly controllable region with control u    starting
from an initial state s and initial control u    the system evolves along a trajectory
within the ow pipe until it is close to the projection of the region r  the force
control u  is turned on to deform the trajectory so that the system moves into
the region r where a linear controller drives the system to the desired unbuckled
state g 
the next level of abstraction  the orbit bundle level  where the same process of aggregation 
consistency checks  classification  and re description is repeated 

    maps

maps  task is to analyze the qualitative phase space structures of dissipative systems and

use the analysis results to guide the synthesis of control laws 
like kam  maps extracts high level dynamical information from the phase space structures  but maps goes beyond kam in two important aspects      maps deals with threedimensional structures explicitly  whereas kam reasons with cross sections of three dimensional
structures   and     maps uses the phase space structures to synthesize nonlinear control
actions 
maps synthesizes a global control path geometrically  see figure     given an initial
state and a desired state for the system under control  maps searches for a path in the phase
space that connects the initial and the desired state  if the goal is not directly reachable
from the initial state  maps pieces together multiple path segments by varying the control
actions  a brute force search for individual control paths in a continuum is clearly infeasible 
maps partitions the continuous phase space into a manageable discrete set of objects  
  

fispatial aggregation  theory and applications

ow pipes   by defining appropriate equivalence relations  and searches out the ow pipes
for good control paths 
the computations in maps are organized into four layers  as shown in figure         stability region      ow pipe      phase portrait  and     ow pipe graph  the input are the
fixed points of the dynamical system    two fixed points are adjacent if they are connected
to the same saddle by trajectories  the adjacency relation is represented by a neighborhood
graph  the trajectories passing through the saddles are classified into equivalence classes
and assigned stability region boundary labels  the re describe operator computes the regions delimited by the stability region boundaries and represents them by polyhedra  the
stability regions are fed to the next layer 
in the second layer  a stability region is triangulated by the delaunay method  the
aggregate operator constructs a neighborhood graph of the triangulation using the adjacency relation defined by the voronoi diagram  the dual of the delaunay triangulation 
the triangulated sub regions are classified into equivalence classes according to a topological criterion which states that two adjacent sub regions are equivalent if the trajectories
passing through them can be connected in a consistent manner  equivalence classes of
sub regions are classified as ow pipes  recall each ow pipe is a coarse representation of a
set of trajectories having the same qualitative properties  the use of ow pipes simplifies
considerably the control path planning problem 
the third layer aggregates the ow pipes to form a phase portrait 
the fourth layer is where control decisions are made  flow pipes from different phase
portraits are aggregated to form a larger structure  the ow pipe graph  which is the fundamental data structure supporting path planning in the phase space  two ow pipes
are adjacent if the phase space regions covered by the ow pipes overlap  intuitively  one
can switch from one ow pipe to an adjacent one by setting appropriate control parameters
that generate the phase portraits in question  given an initial and desired state  the search
operator searches the ow pipe graph for solution paths 
information can also be passed down the abstraction layer  once a connected sequence
of ow paths is found to satisfy a control objective  individual trajectory segments within
the ow pipe are found by the localize operator using a shooting method 

    hipair

hipair performs kinematic analysis of fixed axes mechanisms built of rigid parts  given a
description of the shapes and motion types  such as translation and rotation  of the parts 
hipair derives realizable configurations of the mechanism 
hipair derives realizable configurations of a mechanism by constructing and manipulating the configuration space of the mechanism  see figure     the configuration space is
the space of positions and orientations of the parts that make up the mechanism  hipair
partitions the configuration space into free space regions where parts do not overlap  and
blocked space regions where they overlap  only configurations that correspond to the free
space regions are realizable  the boundaries of the free space regions are determined by the
   fixed points  or equilibrium points  are critical points in the phase space where the velocity vector
vanishes  fixed points are classified into three types according to the behavior of the nearby trajectories 
a fixed point is an attractor if the nearby trajectories all move towards it  it is a repellor if they all
move away from it  it is a saddle if some move towards and some move away from it 

  

fiyip   zhao

flow pipe graph
consistency
rules
phase
portraits

aggregate

n graph

portrait
consistency
rules

search

consistent 

aggregate

n graph

classify
localize

shooting
method

redescribe

phase
portrait

portrait properties
classify

wavefront
propagation
sub region
consistency
rules
stability
regions

flow
pipe
graph

reachability rules

flow pipe region overlap

flow
pipes

redescribe

consistent 

portrait classification rules

consistent 

aggregate

redescribe

n graph

flow
pipes

flow pipe properties
classify

voronoi diagram
flow pipe classification rules
stability region
consistency
rules
fixed
points

consistent 

aggregate

redescribe

n graph

stability
regions

stability region properties
classify

saddle trajectories
stability region classification rules

figure    the computational structure of maps viewed as spatial aggregation operators
acting on neighborhood graphs  it has four layers of abstraction  stability regions 
ow pipes  phase portrait  and ow pipe graph  note the structural similarities
between kam and maps  control synthesis is implemented by the search and
localize operators acting on the neighborhood graph representing the ow pipe
graph 

  

fispatial aggregation  theory and applications

x
 

cam


x
follower

 






figure    left  the   finger cam follower  right  the configuration space for the camfollower   is the cam rotation  x is the follower displacement  the shaded
regions are the blocked space  indicating that the parts overlap  the free space
regions are the realizable configurations of the cam follower  the boundaries of
the free space regions are determined by the contact relations between the cam
fingers and the follower 
contact relations among the parts that touch each other  a region diagram is a graph whose
nodes are free space regions and edges specify region adjacencies  the region diagram of
the mechanism is composed of the regions diagrams of its pairwise interacting parts  for
example  the region diagram of a mechanism with    parts is constructed from the region
diagrams of    possibly interacting pairs 
the computations in hipair are organized into three layers  as shown in figure        
free space region      subassembly region diagram      mechanism region diagram  the
input are the shapes of parts and their motion types  hipair first considers a pair of interacting parts  it looks up the equations of the contact curves  i e   curves in the configuration
space for the pair corresponding to the configurations where the two parts touch  from a
pre compiled table of common contact curves  a contact curve is partitioned into segments
by intersection points of the curve with either another contact curve or the boundaries of the
configuration space  two segments are adjacent if they share an endpoint  the aggregate
operator assembles the segments and their adjacency relations into a neighborhood graph 
the search operator traverses the neighborhood graph to find all closed chains of segments 
where a closed chain of segments is a sequence of segments that intersect itself  each closed
chain of segment encloses a free space region  the consistent  predicate discards closed
chains that lie inside other closed chains  the classify operator assigns a label to each
closed chain  and the re describe operator computes the free space regions delimited by
the closed chains  each free space region is subdivided into convex regions 
the input to the second layer are free space regions  they are aggregated into a neighborhood graph  two free space regions are adjacent  or neighbors  if they touch  given
an initial configuration s  of an interacting pair  the search operator finds the free space
regions reachable from s  by a depth first search  the neighborhood graph is re described
as a subassembly region diagram 
  

fiyip   zhao

sub region
consistency
rules

consistent 

subassembly
aggregate
region
daigrams

region adjacency

sub region
consistency
rules
free
space
regions

aggregate

mechanism
region
diagram

n graph region diagram properties
classify
search

consistent 

mechanism classification rules

redescribe

n graph

subassembly
region
diagram

region diagram properties

classify
region adjacency

closed chain
consistency
rules
contact
curve
segments

redescribe

search

consistent 

aggregate

region diagram classification rules

free
space
regions
free space properties

redescribe

n graph

classify
shared endpoint

search
free space classification rules

figure    the computational structure of hipair viewed as spatial aggregation operators
acting on neighborhood graphs  it has three layers of abstraction  free space
regions  subassembly region diagram  and mechanism region diagram  note the
structural similarities between hipair  kam  and maps  the search operator
determines reachability conditions in all three layers 
on the third layer  hipair combines all the subassembly region diagrams into a mechanism region diagram  the mechanism region diagram is a neighborhood graph whose nodes
are realizable sets of free space regions and edges specify the adjacency of free space regions 
a set of free space regions is realizable if their intersections are non empty  for example 
let m    fr    s    t  g be a set of free space regions containing the initial configuration
of a mechanism with three parts p    p    and p    where r    s    and t  are the free space
regions in the subassembly region diagrams of the pairs fp    p  g  fp    p  g  and fp    p  g
respectively  suppose r  has one neighbor r    s  has one neighbor s    and t  has none 
then there are three candidate neighbors of m  given by 
m    fr    s    t  g
  

fispatial aggregation  theory and applications

  fr    s    t  g
  fr    s    t  g

m 
m 

the consistent  predicate checks each of the candidate neighbors and discards the unrealizable ones 

   an illustration

in this section  we show what it is like to program in the spatial aggregation language 
the example is a boundary tracer for line drawings   we pick this example because image
analysis routines can be quite naturally written in the spatial aggregation style 
boundary tracing is a basic operation in image analysis   the operation might be used
to identify and group boundary segments from the same object  for example  consider a
line drawing of overlapping  d objects  see figure     to group the boundary segments 
one might first decompose the figure into segments  and junctions  a tracing process then
joins colinear segments 
the input to the boundary tracing program is a bitmap 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 

the bitmap is rendered in figure    a   figure    illustrates how the output in figure    b  and  c  is computed from the input bitmap  using the spatial aggregation operators 
we first define a neighborhood relation between pixels by the   adjacency  namely  the
neighbors of a pixel are the pixels in its immediate north  east  south  and west   because
there is often no ecient way to construct n graphs directly from neighborhood relations  we
define an explicit n graph neighborhood constructor that finds all the   adjacency neighbors
of a given pixel 
next the aggregate operator assembles the pixels into an n graph by the n graph
constructor  pixels in the n graph are considered similar if they are neighbors and neither
is a junction  where a junction is defined as a pixel whose value is one and which has more
than two one value neighbors  the classify operator groups the pixels into equivalence
   the details of the interpretor for the language  implemented in scheme  are discussed elsewhere  baileykellogg  zhao    yip        
   jim mahoney introduced us to a unified description of high level operations on images 

  

fiyip   zhao

figure    a line drawing of two overlapping objects 

 a 

 b 

 c 

figure     boundary tracing operation in image analysis   a  pixels on boundaries of two
overlapping objects   b  pixels are grouped into boundary segments   b  boundary segments are grouped into distinct object contours 
classes using a similarity threshold and returns the foreground equivalence classes  shown
in figure    b  
the foreground equivalence classes are then re described as higher level objects  boundary segments  which are in turn aggregated into a new n graph using a different neighborhood relation  specifically two boundary segments are neighbors if their minimum separation distance is less than a specified separation  next  adjacent boundary segments which
are colinear are grouped into equivalence classes  called contours  a contour represents the
complete boundary of an object  figure    c  shows the result of grouping 
we might want to check for impossible contours  a contour is legal if it is closed and not
self intersecting  such conditions are expressed in a standard pattern language  pairwise
consistency rules can likewise be defined 
the program written in the spatial aggregation language is shown in figure    and
figure      
    in the actual implementation of the language described by kellogg  zhao  and yip         the syntax of
the operators differs slightly from those in section   

  

fispatial aggregation  theory and applications

contour
consistency
rules
boundary
segments

consistent 
aggregate

redescribe
segment
n graph

nearness
neighborhood

object
contours

boundary segment classes
classify
colinearity 
threshold

redescribe
pixels

aggregate

pixel
n graph

  adjacency
neighborhood

boundary
segments

pixel classes
classify
pixel similarity 
threshold

figure     boundary tracing operation  data ow in the spatial aggregation implementation 

   related work

the literature in visual and spatial reasoning is enormous  e g   kosslyn        glasgow 
       in this section  we discuss only the computationally oriented approaches 
the first line of work investigates how diagram like representations aid heuristic search 
gelernter        used diagrams in his geometry theorem prover to prune goals that are
obviously false  nevins  geometry theorem prover constrained forward deduction to conclude facts about objects explicitly depicted in the diagrams  nevins         stallman
and sussman        exploited the connectivity and locality of lumped parameter model
to guide forward reasoning and implement symbolic constraint propagation  in a similar
spirit  larkin and simon        showed that in elementary mechanics problem a diagrammatic representation can reduce search because the diagram provides convenient indices for
clustering objects and relations 
the second line of work concerns analogue simulations in naive physics  funt s whisper
program is the first ai program that uses primarily perceptual primitives to predict dynamical events in a simple blocks world  funt         arguing that the commonsense predictions
of solid or uid behavior cannot possibly depend on the solution of complicated equations 
gardin and meltzer        proposed a  molecular  simulation of strings and uids  a
body of uid  for example  is decomposed into macro molecules interacting with each other
according to a small set of local rules  chandrasekaran and narayanan        proposed
a direct analogue simulation of the motion of a sliding block on an inclined plane  their
  

fiyip   zhao

     adjacency pixel neighborhood 
   neighbors are pixels one unit away using nearness ngraph
 define image ngraph fac
 ngraph near instantiate image field fac    
   form a neighborhood graph for pixels
 define image ngraph
 aggregate pixels image ngraph fac  
   pixel classifier  two adjacent nodes are equivalent if they
   have the same value and neither is a junction 
 define pixel classify
 classify standard instantiate
image ngraph fac
 lambda  n  n  
 if  and  not  is junction  n   
 not  is junction  n   
    pixel value n    pixel value n    
       
   form equivalence classes of foreground pixels
 define pixel classes
 filter
 lambda  cl      pixel value  car cl      
 pixel classify image ngraph pixels  threshold     
    form boundary segments
 define segments
 redescribe pixel classes segment create  

figure     boundary tracing operation program  part     group pixels into boundary segments 
objective is to develop a cognitive architecture for visual perception and mental imagery 
the direct representation of a scene they propose consists of a hierarchical  multi resolution
symbol structure encoding spatial relations among objects  and is linked to an analogical
representation of the scene  image   the major challenge in analogue simulation is how
to provide a reliable simulation without incorporating extensive physics and geometrical
modeling 
the third line of work consists of spatial reasoning research in qualitative physics 
kuipers and levitt        described an approach to spatial reasoning in robot navigation
and mapping of large scale spaces  they proposed a four level hierarchical representation
incorporating topological and metric descriptions in terms of entities such as places  paths 
distances  and angles  forbus et al         developed the metric diagram place vocabulary
theory  the metric diagram contains both numerical and symbolic descriptions of a scene 
  

fispatial aggregation  theory and applications

   boundary segment neighborhood defined by separation distance
 define segment ngraph fac
 ngraph near instantiate segment field fac separation  
   form a neighborhood graph for boundary segments
 define segment ngraph
 aggregate segments segment ngraph fac  
   boundary segments classifier  two adjacent segments are
   equivalent if they are colinear  two thresholds are used in
   determining colinearity  delta is the threshold for separation
   distance between two end points and epsilon is for the angle
   between the tangent vectors at these end points 
 define segment classify
 classify standard instantiate
segment ngraph fac
 lambda  s  s  
 if  and     length  segment points s      
    length  segment points s      
 segment colinear s  s  delta epsilon  
       
   form contours  i e   equivalence classes of boundary segments
 define segment classes
 segment classify segment ngraph segments  threshold    
   contour consistency check  closed and not self intersecting
 define contour consistency rules
  if  and  closed   c 
 not  self intersecting   c   
 t  f  

figure     boundary tracing operation program  part     group boundary segments into
distinct object contours 
while the place vocabulary is a quantization of the space according to task specific criteria  see also footnote     comparing the spatial aggregation framework and the md pv
framework  we note two major differences  first  whereas a metric diagram is a mixed
symbolic quantitative representation  a field is purely numerical and does not encode any
structures explicitly  second  our theory postulates multi layer spatial aggregates with identical computational structure at each layer  by focusing on the field ontology  which can be
thought of as a special class of metric diagrams  we are able to emphasize the importance
of the structure recovery problem  and the commonalities underlying several implemented
programs 

  

fiyip   zhao

   conclusion

we have developed the spatial aggregation paradigm as a realization of imagistic reasoning 
the paradigm systematizes the important task of interpreting time varying information rich
fields  the paradigm consists of three ideas      a field ontology  an image like analogue
representation  as input      structural discovery   the ecient transformation from pointwise field representation to economical symbolic descriptions   as the central computational
problem  and     a multi layer neighborhood graph as the common interface and a small
set of generic operators   aggregate  classify  redescribe  and search   as building blocks for
computational processes that derive symbolic abstractions from the analogue representation  the paradigm relies on the important observations that the physical constraints on
a real field  such as continuity and conservation  provide useful equivalence relations and
economical descriptions  and a nonlocal property of a lower layer can often be redescribed
as a local property of a higher layer 
the spatial aggregation paradigm supports the recovery of abstract properties via the
multi layer neighborhood graphs  it produces concise descriptions by manipulating equivalence classes of objects as primitives  it constructs modular programs from generic operators by mixing and matching a library of commonly used routines  it expresses task specific
knowledge in terms of field metric  adjacency relations  consistency predicates  classification
rules  and redescription properties 
to illustrate our theory  we examine the computational structure of three implemented
programs   kam  maps  and hipair   that integrate symbolic  numerical  and visual reasoning  we show a small set of generic operators that construct  transform  filter  classify 
and search neighborhood graphs capture the commonalities of these programs  we develop
a language  a way of organizing programs around neighborhood graphs  to make programs
written in this style clear 
we are currently developing a toolkit to support problem solving using the generic
operators of the spatial aggregation paradigm  many research questions are still open 
can the operators be interfaced with computational geometry and with numerical analysis
to build robust  ecient programs  what scientific problems can be solved by spatial
aggregation 
imagistic reasoning is a powerful strategy for mapping between analog signals generated
by physical systems and discrete  symbolic representations of the systems  spatial aggregation is only one of its many realizations  we believe that reasoning methods that derive their
power primarily from perceptual operations on analog representations and only secondarily from search and analytical methods might prove effective in automating commonsense
reasoning as well 

acknowledgements
we thank chris bailey kellogg for the help in implementing the spatial aggregation language  and the following people for helpful discussions and comments on the earlier drafts
of this paper  harold abelson  andy berlin  b  chandrasekaran  gregor kiczales  john
lamping  shiou loh  jim mahoney  jeff may  neal mcdonald  pandurang nayak  toyoaki
nishida  elisha sacks  brian smith  jack smith  gerry sussman  and brian williams 
  

fispatial aggregation  theory and applications

ky is supported by an nsf national young investigator award ecs         fz is
supported by an nsf national young investigator award ccr          an alfred p  sloan
foundation research fellowship  a grant from xerox palo alto research center  a grant
from at t foundation  and an nsf grant ccr         

references

bailey kellogg  c   zhao  f     yip  k          spatial aggregation  language and applications  in proceedings of aaai  to appear 
bradley  e          taming chaotic circuits  tech  rep  ai tr       mit artificial intelligence lab 
chandrasekaran  b     narayanan  n          towards a theory of commonsense visual
reasoning  in nori  k     madhavan  c   eds    foundations of software technology
and theoretical computer science  springer 
dekleer  j     brown  j          a qualitative physics based on conuences  artificial
intelligence     
forbus  k          qualitative process theory  artificial intelligence     
forbus  k   nielsen  p     faltings  b          qualitative spatial reasoning  the clock
project  artificial intelligence     
funt  b          problem solving with diagrammatic representations  artificial intelligence 
   
gardin  f     meltzer  b          analogical representations of naive physics  artificial
intelligence     
gelernter  h          realization of a geometry theorem proving machine  in computers
and thought  mcgraw hill 
gelsey  a          automated reasoning about machines  artificial intelligence     
glasgow  j          the imagery debate revisited  a computational perspective  computational intelligence 
joskowicz  l     sacks  e          computational kinematics  artificial intelligence     
        
junker  u     braunschweug  b          history based interpretation of finite element
simulations of seismic wave fields  in proceedings of ijcai 
kosslyn  s  m          image and brain  the resolution of the imagery debate  mit press 
kuipers  b          qualitative simulation  artificial intelligence     
kuipers  b     levitt  t          navigation and mapping in large scale space  ai magazine 
     
  

fiyip   zhao

larkin  j     simon  h          why a diagram is  sometimes  worth ten thousand words 
cognitive science     
nevins  a          plane geometry theorem proving using forward chaining  artificial
intelligence    
nishida  t     et al          automated phase portrait analysis by integrating qualitative
and quantitative analysis  in proceedings of aaai 
stallman  r     sussman  g  j          forward reasoning and dependency directed backtracking in a system for computer aided circuit analysis  artificial intelligence    
ullman  s          visual routines  cognition     
yip  k  m          kam  a system for intelligently guiding numerical experimentation by
computer  mit press 
yip  k  m          reasoning about uid motion  finding structures  in proceedings of
ijcai 
zhao  f          extracting and representing qualitative behaviors of complex systems in
phase spaces  artificial intelligence                 
zhao  f          intelligent simulation in designing complex dynamical control systems  in
tzafestas    verbruggen  eds    artificial intelligence in industrial decision making 
control  and automation  kluwer academic publishers 

  

fi