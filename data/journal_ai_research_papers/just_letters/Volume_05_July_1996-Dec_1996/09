journal artificial intelligence research                

submitted       published      

quantitative results comparing three intelligent interfaces
information capture  case study adding name information
electronic personal organizer
jeffrey c  schlimmer
school electrical engineering   computer science
washington state university  pullman  wa             u s a 
patricia crane wells
allpen software  inc 
      lark avenue  suite      los gatos  ca        u s a 

schlimme eecs wsu edu

patricia allpen com

abstract
efficiently entering information computer key enjoying benefits
computing  paper describes three intelligent user interfaces  handwriting recognition 
adaptive menus  predictive fillin  context adding persons name address
electronic organizer  tests show handwriting recognition slower typing
on screen  soft keyboard  adaptive menus predictive fillin twice fast 
paper presents strategies applying three interfaces information
collection domains 

   introduction
meet someone new  often wish get name phone number  may
write small notebook personal organizer  takes minutes do 
put business card small slip paper organizer  promising copy
later time   later time comes  face tedious task finding nowseveral names go organizer recopying information 
comfortable computers  may use electronic organizer  a small computer
includes software managing names appointments   looking someones phone
number faster devices  adding tedious  owning costly 
concession reality  devices often include pockets holding queued slips
paper 
solutions could propose eliminate procrastination  adding persons
name  organizer fun  say choice inspirational message  gratuitous
violence  lottery ticket   might add names readily  avoiding whimsy 
could get desired effect making faster add persons name  reason
paper organizers use index tabs  electronic organizers use automatic filing  faster still 
organizer could read card handwritten note  via optical character handwriting

   friend places rubber band around organizer ensure paper slips dont escape
time 
   brevity  well refer persons name  address  phone numbers  e mail  etc  name  whether
aggregate information persons first last name intended clear context 

     ai access foundation morgan kaufmann publishers  rights reserved 

fis chlimmer   w ells

recognition   applying artificial intelligence ideas  could even imagine organizer
predicts need write you 
paper describes electronic organizer almost fast slip paper 
certainly much faster previous organizers  uses commercial hardware  newton 
described section     software three interface components designed speed
adding persons name  described section     handwriting recognition  adaptive menus
recent values  predictive fillin  primary contributions paper detailed
evaluations benefits three components  described section    
adding persons name organizer special case capturing organizing
information  ubiquitous task  big businesses institute careful procedures
custom forms databases  billions smaller  one or two person tasks
could done efficiently accurately getting information computer
easier  even small gains would repeated many times whenever someone needed
collect information make decision  monitor process  investigate something new 
secondary contributions paper consideration three components may
applied broadly  described section    
three interface components robust familiar  whether intelligent
arguable  advocate behavior based definition may apply here  i e  
question whether device intelligence answered examining
behavior rather internal processes representations  e g   agre   chapman       
horswill   brooks         even not  goal address question
much intelligence  agency  support one wants interface  lee        rissland        
assert  much speed users performance task  furthermore  much
research directed automatically learning hard code study  e g  
dent  boticario  mcdermott  mitchell    zabowski        hermens   schlimmer       
schlimmer   hermens        yoshida         even learning works perfectly  result
worthwhile  claim answer found empirical study usefulness
various user interface components 

   newton
newton operating system introduced apple computer  inc        designed
single user  highly portable computer  frames central data structure newton 
stored persistent object databases maintained ram  smith        
newton computer includes pressure sensitive  bitmapped display
user writes  draws  taps enter information  culbert         small enough hold
one hand weigh around one us pound  battery life one days worth
continuous use  thorough overview hardware software context current pen
computers  reader may wish consult  meyer        
lowest levels  newton supports recognition  handwriting recognition
highly publicized first introduced  recognizer allows free form input
printed cursive writing   uses on line recognition convert writing unicode  text 
recognizer uses contextual information limit types characters within specific
fields combinations characters within words  latter relies heavily
   throughout paper references handwriting refer handprinting  distinction required 
latter term used explicitly 
   character encoding similar ascii two bytes per character languages larger character
sets 

   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

dictionaryonly words appearing dictionary recognized  user types
new word using on screen soft keyboard   newton volunteers add dictionary
future recognition  optionally  user invoke secondary recognizer
use dictionary attempts recognize written letter letter  section  
describes accuracy option  application developers customize handwriting
recognition providing special purpose dictionaries regular expression describing
syntax words recognized 
newton computers include several applications rom serve
electronic organizer  relevant point paper  newton computers date
include application called names storing retrieving peoples names  addresses 
etc   figure   depicts application  section   describes experiments using standard
enhanced version names application add peoples names 

figure    names application included newton computers depicted one
quarter life size apple newton messagepad     used experiments 
user taps field  expands ease writing  picture  first name field
expanded  folder tab button top screen displaying names
one eleven user defined folders  left right  buttons bottom
application screen showing time battery state  labeled clock
face   changing display name  labeled show   adding new name
 labeled new   refiling name  labeled file folder picture   printing 
faxing infrared beaming mailing duplicating deleting name  labeled
envelope picture   closing application  labeled large x  
universal buttons visible applications  left right  provide access
names application  calendar application  storage place
applications  scrolling buttons  undo  find  natural language recognition 

   names  
newton computers built in names application includes one three components
suggested section   speed adding new persons name  recognizes handwriting 
   throughout paper references typing refer tapping on screen soft keyboard 

   

fis chlimmer   w ells

recognition dictionary expanded needed  names   extended version
names wrote include two components 
   

adaptive menus

names   extends names adding adaptive menu   names    fields    menus
consisting   recently entered values   menus   recently entered values prepended
fixed choices  word user needs menu  choose rather write
out  figure   depicts names   menu open city field  choices

figure    names   application  picture  user tapped word
city opened menu recently used city names  user chooses one
cities  copied city field name  compare
figure    note names   includes features names relevant adding new
name 
menu four recently entered values specific field   each field
separate menu   may convenient user series related names
add  perhaps people company city  course  user adds
four unusual values row  common choices inadvertently dropped menu 
sophisticated approach would list number recent values
number common  names   doesnt explore sake simplicity
speed  menus adaptive  users use linear search examine
choices cannot rely muscle level memory choice locations  menus include
choices  cost search likely dominate fitts law effect  
two names fields already menu  honorific field offered user ms  
mrs   mr   dr   country field offered menu thirteen countries 
completeness  names   prepends four recent values fields menus 
technically split menus   mitchell shneiderman        compared large
statically ordered menus  unsplit  prepended most recently used choices
   fitts law states time move given distance target width w proportional log d 
w 
   confused splitting menu choices across multiple menus  witten  cleary    greenberg        

   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

 split  exactly condition   static faster split menus one task 
difference another  sears shneiderman        later found evidence favor split
menus including       improvement selection time compared unsplit menus 
compared alternative organizations split part recommend limiting
number split choices four less  which names   does  sorting split choices
frequency  which names   approximates most recently used   context menu
hierarchies  snowberry  parkinson  sisson        found adding items containing
upcoming selections resulted greater accuracy faster search times  result
confirmed  kreigh  pesot  halcomb        may much effect
preventing users getting lost menu hierarchies assisting making
selections per se  test adaptive  split  menus names   understand relative
contribution compared interfaces data entry task 
four phone number fields menus  give user way categorize
phone number rather enter number itself  category menus  norman 
       phone menus include choices phone  home  work  fax  car 
beeper  mobile  other  phone fields identical menus  names  
modify them  menus provided first name  last name  birthday fields 
section   describes input fields menus 
understand computational space time demands adaptive menus  note
names   stores menus single object object database  size object
linear number fields menus  f  number choices menu
 c   fc  menu implemented circular queue  time update object
would constant menu  f  names   uses slightly slower array
implementation menus takes fc time  practice works slightly
one half second nine fields four choices 
   

predictive fillin

names   extends names automatically filling    empty fields new name
predicted values  treats previous names case base  kolodner        copies
information relevant case  specifically  user adds company new name
matches previous names company  names   copies address
previous name new one  values copied verbatim two address lines
city  state  zip code  country fields  user id electronic mail address
dropped e mail address copied new name   the remaining components
e mail address likely people company   last
word phone number values dropped  area code prefix copied
new name typical area code prefix extension phone number  user writes
chooses another value company  replacing value field  predictive fillin
recopies dependent values previous name  figure   illustrates sequence events
users perspective 
names   behaves similarly user adds city state matches previous
name  copies less information matching company found  value
copied predictive fillin incorrect  user write choose correct value
manually  table   summarizes fields menus predictive fillin  structure
predictive fillin fixed design names    work attempts learn comparable
structure examples  e g   dent et al         hermens   schlimmer        schlimmer  

   

fis chlimmer   w ells

figure    names   application user adds company new name 
left panel  application finds previous name matching company  displays
dialog  fills remaining fields predicted information copied
previous name  center panel shows much information filled  right
panel shows completed name  example user written four
additional words complete name 
hermens        yoshida         goal determine whether end result
learning worthwhile 
one previous name matches company  city  state new name 
names   fills fields values recent name  values second most
recent occurrence name added menus  gives user chance select
alternate addresses company alternate zip codes city 
terms computational requirements  names   needs additional storage
predictive fillin  object database previously added names reused case base 
matching new names company  city  state previous name implemented
newton primitive  informal study depicted figure   indicates newtons proprietary
algorithm appears run time linear number names match found
logarithmic matches found 
names   source code on line appendix a 

   experiments
hypothesize recognition  adaptive menus  predictive fillin speed adding new
name  find extent  conducted experiment
subjects added names using different combinations three interface components 
   

method

five computer science students ages       years age participated
subjects experiments  prior experiments used newton computer
least six months familiar newtons handwriting recognition qwerty
layout newtons on screen keyboard 
experiment used within subject design subject participated
six conditions summarized table    conditions designed assess contribution
   

fitime seconds

hree nterfaces normation c apture  c ase tudy dding n ame nformation

j

   

j
   

bj
bj
    b
jbj
   

  

e

j
bg

b

b
   
number names

   

figure    time find matching name using newton function number
names database match exists  circles upper line  several matches
exist  squares lower line   axes linear scale  upper line linear fit 
lower line logarithmic  comparison experiment  interpolated values
    names shown open symbols 
interface component separately collectively  control  typed condition 
subject types values without using components  null condition 
subject writes words using remedial recognition steps  to described  types words
recognizable  subject add words newtons dictionary
asked assistance either adaptive menus predictive fillin 
condition extends null requiring subject add words newtons dictionary
asked  condition extends null adding adaptive menus  pf condition extends
null adding predictive fillin  condition combines extensions d  am 
pf 
used pair apple newton messagepad     computers  running newton os
version      experiment three versions names   application  one version
interface components disabled used typed  null  conditions 
second version adaptive menus used am  third version adaptive menus
predictive fillin used pf all 
set     name records experiments donated development officer
washington state university  job involves contacting alumni others solicit
support university programs  almost records include first last name  full
mailing address  one three phone numbers  include honorific  country  email address  informal tests indicated messagepads could hold     names
names   installed  selected random set     records 

   

fis chlimmer   w ells

menu choices
field
honorific

predictive fillin

built in adaptive
 

company

city

state

notes
ms   mrs   mr   dr 

 

first name
last name
title

 

company

 

address    

 

address    

yes
label tap menu 

yes

city

 

yes

state

 

yes

yes

zip code

 

yes

yes

 

yes

yes

 

yes

country

  

e mail
phone  

 

phone  

 

phone  

 

phone  

 

area code
prefix

yes
user id removed 
category menu used select
type phone number rather
phone number itself  choices
include phone  home 
work  fax  car  beeper 
mobile  other 

area code

birthdate

table    name   fields adaptive menus predictive fillin 
condition

writing

add dictionary

adaptive menus

predictive fillin

typed
null

yes



yes



yes

pf

yes



yes

yes
yes
yes
yes

yes

yes

table    experimental conditions  one row per condition  columns indicate
user interface components used  blank cells represent no 
simulate worst case recognition  adaptive menus  predictive fillin  chose
  names  listed below  residual     names company
preload set     names   to preserve anonymity here  first last names swapped
phone numbers replaced artificial values  actual first last name pairs phone
numbers used experiment  
   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

robert anderson
account marketing rep
ibm
w     n river drive
spokane  wa      
            
            

eric brice
director engineering
raima corp
        th place se
bellevue  wa      
            
            
            

peter friedman
president
nova information systems
         th court ne
suite    
redmond  wa      
            

thomas leland
staffing manager
aldus corporation
    first ave south
seattle wa           
            
            

mike carlson
vp engineering   estimating
general construction
     n northgate way
suite    
seattle  wa      
            
            

score words names entered total time  used sheet
figure    fictitious data corresponding subjects entering second name
condition depicted 

figure    scoring sheet used time name added    center right
columns indicates first word field value entered using recognition
 cf  figure     adaptive menu  cf  figure     predictive fillin  cf  figure      
indicates second word  on  highest digit row corresponds
number words fields value 
facilitate setting condition  constructed backup images messagepads
correctly configured six conditions  images      names
appropriate version names   installed  images all  added
first  last  company names dictionary using built in feature newton 
initialize adaptive menus images all  used special purpose
application  prior use messagepads completely erased restored
backup image appropriate condition tested 

   

fis chlimmer   w ells

task subject enter five names twice six
conditions  first time name entered condition simulates worst case scenario 
second time  best 
   

procedure

subjects given listing one five names messagepad initialized one
six experimental conditions  subject entered name condition  name 
condition pairs randomly ordered subject counteract subject learning
effects  instructed enter names quickly  subjects made mistakes 
instructed correct finishing  times reported include time correct
mistakes 
subjects given precise script follow entering name  done
partially bias results hypotheses partially minimize individual variation 
specifically  subject instructed enter values field order  top
bottom  completing one going next  cf  figure     conditions involving
handwriting  word correctly recognized  subject check menu
alternate recognitions  depicted left panel figure     intended word

figure    remedial steps handwritten word correctly recognized 
example  subject wrote brice misrecognized brian 
subject double taps word  menu alternative recognitions appears  left
panel   none correct  subject requests recognition without
dictionary  or letter letter   another double tap word generates second
menu alternatives  middle panel   none correct  subject entered
word tapping buttons on screen keyboard  right panel  
list  select try letters attempts recognition without dictionary 
result correct  check second menu alternative
recognitions  depicted center panel figure     intended word
second menu  tap button keyboard picture  type word using
on screen keyboard  close keyboard  word already part
dictionary  newton asked would add  depicted right panel figure    
note recognition menus  original handwriting shown near
   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

bottom  first choice newtons best guess  second choice best guess
different capitalization  subject instructed ensure words correctly
capitalized 
typed  subject instructed enter data using newtons on screen soft
keyboard  null  subject enter data handwriting  all 
subject instructed add words newtons dictionary asked  all 
subject instructed check fields menu  if one  writing data 
special instructions required pf beyond default adding words
dictionary 
stopwatch started subject tapped new button stopped
last field value correctly entered  choosing manual timing method simplified
development experimental software  method word field
entered recorded scoring sheet indicated figure   
experiment took three five hours subject spread
two sessions approximately two hours within week  subjects took short
breaks adding name minimize fatigue 
subject completed experiment  asked rank favorite
methods entering names least 
   

results

table   summarizes median standard deviation subjects time enter name
six conditions  times include user input  predictive fillin computation  time
correct errors  if any   first row reports time add novel name  simulation
worst case  second row reports time repeat name  simulation best case 
anova reveals significant main effect condition f                    interaction
number times name entered condition significant f                   
comparing worst cases across conditions  post hoc multiple comparisons test using
tukeys hsd indicates typed significantly different  faster 
conditions   all p          comparing worst best cases within condition  d  am 
pf  significantly faster  comparing best cases across conditions  typed  am 
pf significantly faster null  significantly faster typed  pf  d 
null  pairwise comparisons significant 
typed

null





pf



worst

           

           

           

           

           

           

best

           

           

           

           

           

           

table    median time minutes add new name five names five subjects
    samples per cell  standard deviation parentheses   columns list six
experimental conditions 
difference within d  am  pf across worst best cases confirms
hypothesis interfaces speed entering names                  compared
null  respectively  surprised find predictive fillin fast
adaptive menus  though difference statistically significant   designing data
entry system one might tempted implement adaptive menus given algorithmic
simplicity  especially compared sophisticated methods machine learning
proposed predictive fillin  however  latter suffer recency effects imposed
   

fis chlimmer   w ells

limited size adaptive menus  entering new data related distant
past  predictive fillin would little difficulty providing assistance adaptive menus
could not  adaptive menus could refined use frequency frequency recency
combination  performance suggests implementing adaptive menus
predictive fillin  combined adding words dictionary  speed entering names
      practical terms  interfaces could make entering name electronic
organizer faster writing paper certainly fast enough capture
information phone conversation 
prior work confirms difference typed conditions  ward
blesser        state normal writing speed rarely greater    characters per minute
 cpm  single line text  using fact mean number characters per name
experiment       subjects achieved    cpm  mackenzie  nonnecke  riddersma 
mcqueen  meltz        compare four interfaces entering numeric text data
pen based computers  including hand printing using on screen keyboard   the
two interfaces experimental gesture based techniques entering single characters  
numeric entry conditions  found on screen keyboard    words per
minute  wpm       error whereas hand printing      wpm       error 
text entry conditions  keyboard    wpm      error whereas hand printing
   wpm      error  using fact mean number words per name
experiment       subjects achieved     wpm typing     wpm handwriting
mixed numeric text input  key point comparison studies
found using stylus tap on screen keyboard faster handwriting printing 
differences speed studies likely result differences
experimental procedures  theirs versus ours   single versus multiple field fillin  copying
information memory screen versus paper  block comb type  letter  versus
open  word  interface 
figure   presents box plot summaries time data  interest reduction
variance time adaptive menus predictive fillin best case  right plot  
differences individual performance reduced interface components 
left half table   lists recognition accuracy field conditions 
subjects  names  first row indicates     first names written
correctly recognized immediately  checking first menu alternate recognitions 
accuracy rises      similarly  second row indicates     second names
written correctly recognized immediately  rate rose     letter by letter
recognition invoked     checking second menu alternate
recognitions  phone numbers enjoyed second highest recognition rate first names 
reference  cesar shinghal        report     recognition rate hand
printed  canadian postal codes  letter  digit  letter  space  digit  letter  digit  
comparable observed rates first names  second address lines  phone
numbers 
right half table   lists percentage words entered using typing  adaptive
menus  predictive fillin field conditions  subjects  names  first row
indicates    first names typed  row state indicates     state
names typed      chosen adaptive menu      predictively
filled in   note numbers row total      left half
table lists percentages words written right half lists percentages
words  
   

fitime minutes

hree nterfaces normation c apture  c ase tudy dding n ame nformation

 
  

  
 
 
 
 
 

 

 

 

 

 
 

worst case



fillin

menu

dictionary

null

 

typed

 



fillin

menu

dictionary

typed

 

null

 

best case
experimental condition

figure    box plots time enter name condition worst best cases 
box summarizes    values  values outside inner fences plotted
asterisks  values outside outer fences plotted circles  wilkinson  hill 
vang        
combining left right halves table   reveal many difficult torecognize fields considerable assistance adaptive menus predictive fillin 
accentuates speed improvements providing help needed  figure  
depicts relationship fields  recognition accuracy 
adaptive menus predictive fillin  several fields near perfect recognition accuracy 
recognized without resorting typing  instance  numeric fields easier
recognize  phone number fields recognized nearly     even though area
code  prefix  suffix varied name name  first last name fields
high recognition accuracy  first names built in dictionary  two
last names were  others often recognized letter letter  recognition
poorer company address fields  words full capitals  e g   raima  words
combination numbers letters  e g      th  difficult recognize 
low recognition accuracy state field apparently due oversight newtons
dictionary  wa included many two letter abbreviations us states are 
compensate low accuracy  names   includes adaptive menu and or predictive fillin
difficult to recognize fields 
table   summarizes subjects preference condition enter name  lists frequency
ranking five subjects  subjects partitioned conditions non overlapping
groups  typed  null    d  am  pf    all    the authors know suitable statistic
asserting differences   results contradict mackenzie et al        
found subjects preferred typing handwriting  mildly text entry
   

fis chlimmer   w ells

   

xfirst name

gphone

gaddress    
xlast name
  

title

recognition    

city

company

address    

zip code
  

x

g

  
state

recognition
adaptive menus
predictive fillin


 
 

   

   

   
   
number words

    

    

figure    recognition rate function number total words entered
conditions subjects names  fields adaptive menus predictive fillin
 or both  marked  note every field less     accuracy either
adaptive menu predictive fillin  or both  
strongly numeric entry  restricted hand printing input block comb type
interface  unnaturalness may account dispreference toward handwriting 
writing stylus advantages  meyer        points out  keyboards
faster linear text entry  pen input device natural  handle text
graphic input  jump quickly point point  writing pen supports
heads writing  allowing user visually attend aspects task hand 
typing on screen keyboard requires heads entry 
one subject experimented names   outside experimental setting offered
number observations  first  adaptive menus short  sometimes menus
would useless matter long were  wished city company
fields menus longer  especially city   frustrating one common
city names large metropolitan region bumped short list  contrast  title
fields menu rarely useful  see point maintaining it  principles
outlined section   suggest similar revisions 
   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

field

cumulative recognition accuracy
letter
correct
 st menu
 nd menu
letter

percent words entered
adaptive predictive
typed
menu
fillin

first name

  

  

  

  

 

second
name

  

  

  

  

  

title

  

  

  

  

  

  

company

  

  

  

  

  

  

address

  

  

  

  

  

  

address  

  

  

  

  

  

city

  

  

  

  

  

  

  

state

  

  

  

  

  

  

  

zip

  

  

  

  

  

  

  

phone

  

  

  

  

  

  
  

  

table    left columns list cumulative recognition accuracy field words
written conditions  names subjects  right columns list
percentage words field entered typing  adaptive menus  predictive
fillin       values total  blank cells represent   
 th

 th

typed

 

 

null

 

 

condition

 st

 nd



 rd

 

 
 



 

 

pf

 

 



 th

 

table    subjects frequency ranking preference different conditions
means enter name     values total  blanks cells represent   
second  found predictive fillin helpful  sometimes filled didnt
expect to  noted predictive fillin copies many fields 
encourages user add complete name  may advantage harried
setting 

   design recommendations
given experimental results  configure handwriting recognition 
adaptive menus  predictive fillin another application  or redesigned names    
handwritten input  recognition use dictionaries specific type field  numbers
numeric fields  lists domain terms text fields 
   

adaptive menus

adaptive menus  add menu field might repeated values 
accidentally added adaptive menu field never value twice 
   

fis chlimmer   w ells

last name

john
jim
bob
jerry
paul
david
steve
ron
bill
tom
robert
jack
dennis
robin
rich
julie
james
edmund

dave

title

president
executive director
vice president   human resources
vice president
travel consultant
staffing specialist
sales representative
program officer
principal
manager
industrial research marketing manager
human resources manager
human resources
general manager
chair
account manager
consultant seattle govt  relations
western regional sales manager
vice president managing principal
vice president  finance   administra
  
   
   
   
    
percent values

brown
wood
smith
lee
baker
thomas
schroeder
ray
nelson
jones
johnson
hoffman
hand
frost
evans
erickson
dalpiaz
anderson
adams
zipp

boeing
hewlett packard company
tektronix  inc 
battelle
fluke corporation
microsoft corporation
mentor graphics corporation
eldec corporation
puget sound power   light
motorola inc 
arco products company
university washington
sundstrand
sandia national laboratories
honeywell
washington technology center
intel corporation
asymetrix corporation
oregon state university
digital equipment corporation
  
   
   
   

company

first name

mistake would harmless  user would surely notice choices useless
avoid checking menu  menu appropriate  user would save time
choosing common values it 
long menu be  long enough include common values
short enough checked quickly  make sure menu long enough  study often
fields values repeat  names    figures  a  b depict frequency histogram

    

figure  a  frequency values first name  last name  title  company
fields     names used section    plot histogram   
common values  dark lines indicate percent values could chosen
different sized menus  menu includes choices top vertical
position  would allow user choose percentage field values indicated
horizontal position 

   

fip o  box     
p o  box     
pacific northwest laboratories
p o  box    
p o  box    
one microsoft way
p o  box c    
p o  box    
     s w  boeckman road
       microsoft bvue
p o  box      
cherry point refinery
boeing commercial airplane company
post office box     
p o  box      
battelle boulevard
taf c   
p o  box     
p o  box     
fj   

city

address

hree nterfaces normation c apture  c ase tudy dding n ame nformation

wa

state

id
tx
il
ny

az
ut
oh
nm
mn
mi
ks
fl
british columbia
virginia
va
texas
  
   
   
   
percent values

     
          
          
     
     
     
     
          
     
          
     
     
          
          
     
     
          
     
     
     
  
   

zip code


ca

seattle
bellevue
richland
redmond
spokane
everett
beaverton
hillsboro
wilsonville
lynnwood
vancouver
pullman
kennewick
tacoma
san francisco
portland
blaine
san ramon
kirkland
corvallis

    

   

   

    

figure  b  frequency values address  city  state  zip code fields
    names used section   
   common values   fields drawn     name records used
experiments  overlaid plot line indicating percent field values could
chosen particular size menu  instance  first name field figure  a 
histogram almost flat  menu including john would allow user choose
value field less    time  menu included    first names
shown  user could choose value     time  field menu
long enough include common values would take long
check   also  newton computer used section   limits menus    choices
screen size   contrast  company field figure  a  menu including

   

fis chlimmer   w ells

boeing would allow user choose value     time  included
   values shown  user could choose value     time 
studying histograms aiming menus include     fields values 
might re engineer names   menus size    company field  size   
city field  size   state field  fields flat histograms would
need large menus include high percentage field values  recall section   reports
one subjects frustration title field  president seems repeated
field     names used 
   

predictive fillin

set predictive fillin field functionally dependent  ullman        another 
functional dependency related artificial intelligence idea determination
 russell         intuitively  one field r  range  functionally depends another field d 
domain  if  given value d  compute unique value r  predictive fillin
find previous entry value new entry  copies
previous entrys value r new entry  names    company field
domain address field range functional dependency 
predictive fillin functionally dependent fields probably strict
strategy  functional dependencies useful predictive fillin
domain values unique database  so  predictive fillin cannot find
previously matching entry cannot copy relevant information  instance  us
citizens address functionally dependent social security number  application
names   dont expect see social security number twice  predictive
fillin would never opportunity help user filling address  functional
dependencies repeated domain values database  dense functional
dependencies  used set predictive fillin 
conversely  non functional dependencies may close enough functional
useful predictive fillin  technically  dependency functional unless one value
range computed every value domain  values range
computed values domain  dependency might still useful  raju  
majumdar        russell        ziarko         instance  companies single
office address  may one  still quite useful fill address
fields names   finds previous name matching company field  user
interface strategies compensate possible range values arise 
instance  names   puts alternate addresses address fields adaptive menu 
therefore  dense dependencies functional nearly so  dense approximatelyfunctional dependencies  used set predictive fillin 
determine dense approximately functional dependencies hold new
application area  may necessary repeat type empirical domain analysis
described adaptive menus  names    used common sense knowledge
people  companies  addresses set predictive fillin  recall goal
discover end result automatic learning worthwhile  e g   dent et al        
hermens   schlimmer        schlimmer   hermens        yoshida         recommend
considering field number logical components dependencies may exist
parts rather whole fields  instance  person company may share
common telephone number area code prefix  likely different

   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

extensions  predictively filling last component phone number  names  
fills much without adding poor quality information 

   related work
though interested different tasks  researchers studied using intelligent user
interfaces speed information capture  instance  hermens schlimmer        built
electronic form filler tried provide default values every field form 
field form decision tree calculate default value  names   
calculations used previously entered information generate defaults predictively fill
fields  unlike names    calculations constructed run time using
machine learning method   names   alter predictive fillin run time  cf  table    
field tested system single electronic form filled several hundred times
eight month period  report     reduction keystrokes  loosely translating
speedup yields      speedup approximately   times      speedup
observed entering name 
studying text prediction without field boundaries  pomerleau        built typing
completion aid  without relying note taking properties  system predicts completion
current word typed  presumably editor   connectionist network
estimates probability number possible completions current word 
likely  threshold  offered user  pomerleau tested system pair
subjects two week period reports increase typing speed    english
text       computer program code  modest gain may due inefficiencies
learning method  lack redundancy task  limitations user
interface itself 
complement earlier research  paper reports individual collective
accuracy three user interface components  reports user task time showing
components significantly improve efficiency  paper clarifies issue confounded
earlier work  learning interface less effective expected  due inherent
limitation interface itself  learning method perform inadequately 
answer second question  work compares two learning methods 
paper  hand built predictive fillin structures  cf  table    able assess
quality predictive fillin interface directly 

   conclusion
paper makes two main contributions  first  presents study impact three
user interface components time enter information computer  handwriting
recognition  adaptive menus  predictive fillin  handwriting recognition slower
typing preferred users  advances handwriting recognition may make faster 
recognition would still much slower choosing value menu predictive
fillin  three components work well together preferred users 
second  paper discusses principles applying adaptive menus predictive fillin
new application areas  fields few  frequently repeated values candidates
adaptive menus  functional dependencies indicate candidates predictive fillin  whether
characteristics learned run time topic future research 

   

fis chlimmer   w ells

acknowledgments
kerry hersh raghavendra provided names used section    apple computer developed
supports newton newton toolkit programming environment  newton ai
group wsu provided many useful comments earlier draft paper  geoff allen 
karl hakimian  mike kibler  eecs staff provided consistent reliable
computing environment  anonymous reviewers earlier draft paper provided
many  many  valuable suggestions  work supported part nasa grant
number ncc       

references
agre  p  e     chapman  d          pengi  implementation theory activity 
proceedings sixth national conference artificial intelligence  pp          
seattle  wa  aaai press 
cesar  m     shinghal  r          algorithm segmenting handwriting postal codes 
int  j  man machine studies           
culbert  m          low power hardware high performance pda  proceedings
     ieee computer conference  san francisco  ca  ieee 
dent  l   boticario  j   mcdermott  j   mitchell  t     zabowski  d          personal
learning apprentice  proceedings tenth national conference artificial
intelligence  pp          san jose  ca  aaai press 
hermens  l  a     schlimmer  j  c          machine learning apprentice
completion repetitive forms  ieee expert             
horswill  i  d     brooks  r  a          situated vision dynamic world  chasing objects 
proceedings seventh national conference artificial intelligence  pp          
st  paul  mn  aaai press 
kolodner  j          case based reasoning  san francisco  ca  morgan kaufmann 
kreigh  r  j   pesot  j  f     halcomb  c  g          evaluation look ahead help fields
various types menu hierarchies  int  j  man machine studies             
lee  j          intelligent interfaces uims  d  a  duce  m  r  gomes  f  r  a 
hopgood    j  r  lee  eds    user interface management design  ny  springerverlag 
mackenzie  s  i   nonnecke  b   riddersma  s   mcqueen  c     meltz  m         
alphanumeric entry pen based computers  int  j  human computer studies     
       
meyer  a          pen computing  technology overview vision  sigchi bulletin     
        
mitchell  j     shneiderman  b          dynamic versus static menus  exploratory
comparison  sigchi bulletin               
   

fit hree nterfaces normation c apture  c ase tudy dding n ame nformation

norman  k  l          psychology menu selection  designing cognitive control
human computer interface  norwood  nj  ablex 
pomerleau  d  a          connectionist technique accelerated textual input  letting
network typing  advances neural information processing systems   
cambridge  ma  mit press 
rissland  e  l          ingredients intelligent user interfaces  int  j  man machine
studies             
raju  k  v  s  v  n     majumdar  a  k          fuzzy functional dependencies lossless
join decomposition fuzzy relational database systems  acm trans  database syst     
          
russell  s  j          use knowledge analogy induction  san francisco  ca 
morgan kaufmann 
schlimmer  j  c     hermens  l  a          software agents  completing patterns
constructing interfaces  journal artificial intelligence research          
sears  a    shneiderman  b          split menus  effectively using selection frequency
organize menus  acm trans  computer human interaction             
smith  w  r          newton application architecture  proceedings      ieee
computer conference  san francisco  ca  ieee 
snowberry  k   parkinson  s     sisson  n          effects help fields navigating
hierarchical menu structures  int  j  man machine studies             
ullman  j  d          principles database knowledge base systems  volume   
rockville  md  computer science press 
ward  j  r     blesser  b          interactive recognition handprinted characters
computer input  sigchi bulletin              
wilkinson  l   hill  m     vang  e          systat  graphics  version     edition 
evanston  il  systat  inc 
witten  i  h   cleary  j  g     greenberg  s          frequency based menu splitting
algorithms  int  j  man machine studies              
yoshida  k          user command prediction graph based induction  sixth ieee
international conference tools artificial intelligence  pp           new
orleans  la  ieee 
ziarko  w          discovery  analysis  representation data dependencies 
piatetsky shapiro  g     frawley  w   eds    knowledge discovery databases  palo
alto  ca  aaai press 

   


