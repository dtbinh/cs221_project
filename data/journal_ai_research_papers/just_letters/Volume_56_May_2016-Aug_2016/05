journal artificial intelligence research                  

submitted        published      

datalog ontology consolidation
cristhian ariel d  deagustini
mara vanina martnez
marcelo a  falappa
guillermo r  simari

cadd cs uns edu ar
mvm cs uns edu ar
mfalappa cs uns edu ar
grs cs uns edu ar

ai r d lab   institute computer science engineering  icic 
consejo nacional de investigaciones cientficas tecnicas  conicet 
universidad nacional del sur  uns   alem      
 b    cpb  baha blanca  argentina 

abstract
knowledge bases form ontologies receiving increasing attention
allow clearly represent available knowledge  includes knowledge constraints imposed domain users  particular  datalog
ontologies attractive property decidability possibility
dealing massive amounts data real world environments  however 
case many ontological languages  application collaborative environments
often lead inconsistency related issues  paper introduce notion incoherence regarding datalog ontologies  terms satisfiability sets constraints 
show specific conditions incoherence leads inconsistent datalog ontologies 
main contribution work novel approach restore consistency
coherence datalog ontologies  proposed approach based kernel contraction
restoration performed application incision functions select formulas
delete  nevertheless  instead working minimal incoherent inconsistent sets encountered ontologies  operators produce incisions non minimal structures called
clusters  present construction consolidation operators  along properties
expected satisfied them  finally  establish relation construction properties means representation theorem  although proposal
presented datalog ontologies consolidation  operators applied
types ontological languages  description logics  making apt used
collaborative environments semantic web 

   introduction
integration different systems  interaction resulting integration  led
host pervasive practical problems challenging research opportunities 
interesting ones occurs webs collaborative environments  e g   e commerce 
arrival semantic web  ontology engineering  however 
collaboration among systems brings along problem conflicting pieces information
likely appear knowledge repositories evolve  admittedly  management
conflicting information important challenging issue faced  gomez 
chesnevar    simari        haase  van harmelen  huang  stuckenschmidt    sure       
huang  van harmelen    ten teije        bell  qi    liu         specially integrating
c
    
ai access foundation  rights reserved 

fideagustini  martinez  falappa   simari

knowledge coming different sources  black  hunter    pan        baral  kraus   
minker        amgoud   kaci         knowledge expected exploited
reasoning process  context  knowledge bases form ontologies becoming useful device provide convenient way represent intensional
extensional knowledge application domain  moreover  expressive power ontologies allows perform important tasks data integration  lenzerini         plays
role great importance aforementioned semantic web  berners lee  hendler   
lassila         work adopt datalog ontologies  family rule based ontology
languages  cal  gottlob    lukasiewicz         datalog enables modular rule based
style knowledge representation  represent syntactical fragments first order
logic  fol  answering boolean conjunctive query  bcqs  q set
datalog rules input database equivalent classical entailment check
   q  tractable fragments datalog guarantee termination query answering
procedures polynomial time data complexity first order rewritability  moreover  ontologies described using existential rules generalize several well known description
logics  dls   particular  linear guarded datalog  two basic tractable fragments
family  strictly expressive whole dl lite family  calvanese  de giacomo  lembo  lenzerini    rosati         guarded datalog strictly expressive
el  brandt        baader  brandt    lutz         therefore  results presented
paper extend directly dls well  properties datalog together
expressive power  fact keeps syntax closer used relational
databases greater readability  make useful modeling real applications 
ontology querying  web data extraction  data exchange  ontology based data access 
data integration 
focus two particular problems arise integration and or evolution
information systems  inconsistency incoherence  inconsistency refers lack
models theory  hand  ontological settings  incoherence refers set
ontological rules cannot applied without leading violations constraints
imposed knowledge  making unsatisfiable  incoherence inconsistency 
arise automated procedures data integration ontology matching  may
serious issues real world applications  since standard ontology languages adhere
classical fol semantics  classical inference semantics fails presence kind
problems  thus  important focus formalization methods address
inconsistency incoherence ontologies able cope users expectations
terms effectiveness procedures query answering meaning
answers potential conflict exists 
paper addresses problem handling inconsistencies incoherences
may appear datalog ontologies  regard  propose general framework
aims consolidation datalog ontologies  i e   solving every conflict coherence
consistency them   is  consolidation operator takes input  possibly 
incoherent inconsistent datalog ontology returns another datalog ontology
conflicts amended  thus ensuring coherent consistent 
usual setting  assumption minimal change made  say 
expected consolidation process changes original ontology little possible 
approach presented based use incision functions  hansson                   
   

fidatalog ontology consolidation

      belief revision literature  instead operators account
information included conflicts knowledge base  work aim capture
consolidation operators consider information included kb solving
conflicts  main contributions work following 
introduce notion incoherence tailored datalog   achieve adapt
setting similar notions description logics  also  look relationship incoherence inconsistency impacts consolidation process 
provide set properties expected satisfied consolidation operators
datalog ontologies means postulates  postulates provide formal
characterization consolidation operator without focusing consolidation
process actually performed  thus providing formal comparison framework
consolidation operators  postulates consider intuitions classic belief
revision  nevertheless  adapted datalog ontological setting  and
could adapted suit ontological languages   meaning
two versions  one addressing incoherence another one inconsistency  
present complete construction consolidation operators take  possibly 
incoherent inconsistent datalog ontology gives result consistent
coherent one  noteworthy characteristic operators involves two
steps approach  first considering incoherence conflicts  solving inconsistency
conflicts latter step  helping improve final result terms information
needs deleted solve conflicts 
study relationship formal properties operator
construction propose  demonstrating equivalent  thus  shows
consolidation operator satisfying properties corresponds construction
introduced work 
paper organized follows  section   introduce necessary notions
datalog belief revision  next  though inconsistency incoherence related 
two distinct problems setting ontological knowledge bases
particular  clear separation intensional extensional knowledge 
therefore  section    discuss two notions datalog ontologies  relate
other  reasons need treated combination separately 
then  section   present properties ontology consolidation operator must
satisfy  section   introduce process used restore consistency coherence
datalog ontologies  relate presented process given properties means
representation theorem  next  present complete example depicting entire
consolidation process  finally  sections     discuss related work different
areas artificial intelligence database theory  provide conclusions future
lines research  respectively 

   preliminaries background
facilitate reading  begin introducing notions datalog belief
revision needed rest paper 
   

fideagustini  martinez  falappa   simari

    preliminaries datalog
first  recall basic notions datalog ontologies used paper
 see cal et al        details   datalog extends datalog allowing existential
quantification rule heads  together extensions enumerate below 
limiting interaction elements order achieve tractability 
assume domain discourse datalog ontology consists
countable set data constants   countable set nulls n  as place holders unknown
values   countable set variables v  assume different constants represent
different values  unique names assumption   distinguish constants variables 
adopt standard notation logic programming  variable names begin
uppercase letters  constants predicate symbols begin lowercase letters 
assume relational schema r finite set predicate symbols  or simply predicates   term constant  null  variable  atom form p t            tn   
p n ary predicate t            tn terms  atom ground iff terms
constants  let l first order language r l  lr denotes
sublanguage generated r  database  instance  r finite set atoms predicates r terms n   homomorphism constants  nulls variables
mapping h   n v n v  i  c implies h c    c   ii 
c n implies h c  n    iii  h naturally extended atoms  sets atoms 
conjunctions atoms 
given relational schema r  tuple generating dependency  tgd  first order
formula form xy x  y  z x  z   x  y   x  z  conjunctions atoms r called body  denoted body    head  denoted head    
respectively  consider database relational schema r  tgd r
form  x  y  z  x  z   then  applicable exists homomorphism
h maps atoms  x  y  atoms d  let applicable d  h 
homomorphism extends h follows  xi x  h   xi     h xi   
zj z  h   zj     zj   zj fresh null  i e   zj n   zj occur d  zj
lexicographically follows nulls already introduced  application adds
atom h    x  z   already d  application say
satisfied d  chase database set tgds   denoted chase d    
exhaustive application tgds  cal et al         breadth first  level saturating  fashion  leads  possibly infinite  chase   important
remark bcqs q evaluated chase   i e  
   q equivalent chase d       q  cal et al         
negative constraints  ncs  first order formulas form x x   
 x  conjunction atoms  without nulls  head truth constant false 
denoted   nc satisfied database set tgds iff
exist homomorphism h maps atoms  x  d  every
tgd satisfied  i e   atoms body cannot true together 
equality generating dependencies  egds  first order formulas form
x x  xi   xj    x  conjunction atoms  xi xj variables x  egd satisfied database r iff  whenever exists
homomorphism h h  x   d  holds h xi     h xj    work
   

fidatalog ontology consolidation

focus particular class egds  called separable  cal et al          intuitively 
separability egds w r t  set tgds states that  egd violated  atoms
contained reason violation  and application tgds   i e  
egd e violated apply tgds database d  egd
violated d  separability standard assumption datalog ontology  one
important features family languages focus decidable  cal 
lembo    rosati         actually tractable  fragments datalog  
ncs egds play important role matter conflicts datalog ontologies 
fact  approach present work ensure neither ncs egds
violated resulting ontology  also  important remark  note restriction
using separable egds makes certain cases conflicts considered
proposal  treatment cases  though interesting technical point view 
outside scope work since focus tractable fragments datalog  
usual case literature  general universal quantifiers tgds 
negative constraints egds omitted  sets dependencies constraints
assumed finite  presented different ways expressing
knowledge datalog   ready formally define datalog ontologies 
definition    datalog ontology  datalog ontology kb    d      
e nc   consists database instance finite set ground atoms  without
nulls   set tgds   set separable egds e set ncs nc  
otherwise explicitly said  paper clear context refer
component kb set constraints ontology  without distinguishing
dependencies constraints  given database r set constraints
  e nc   set models   denoted mods d     set
databases b b every formula satisfied  following
example shows simple datalog ontology  ontology describes knowledge
therapy psychology domain 
example    datalog ontology 

d   a    therapy charlie   a    dating kate  charlie  




a    therapist kate   a    belongs to g    charlie  






    therapy patrick    a    belongs to g    ed   





    belongs to g    kate  







nc        treating t   p   dating t   p    
kb  


e        treating t   p   treating t     p        








       therapy p   patient p   




    therapist t   belongs to g    leads t   g  




    leads t   g  belongs to g  p   treating t   p   



    treating t   p   therapist t   













































set tgds expresses dependencies as  tgd   states person p
therapy p patient    establishes therapist belongs group
   

fideagustini  martinez  falappa   simari

g leader group  nc   states patient cannot dating
therapist  egd   states every patient treatment one therapist 
following classical notion consistency  say consistent datalog ontology
non empty set models 
definition    consistency  datalog ontology kb    d    consistent iff
mods d         say kb inconsistent otherwise 
example   consider datalog ontology example above  ontology clearly

inconsistent  database instance clearly model since least tgd  
applicable d  superset satisfies tgds constraints time  instance tgds   applicable creating atom
leads kate  g    making   applicable resulting new atom treating kate  charlie  
together dating kate  charlie   that already d  violate nc    
therapist dating one patients 
rest paper  otherwise explicitly stated kb    d    denote datalog
ontology   e nc   database instance  set
tgds  e set separable egds nc set ncs  
    background belief revision
establishing origins scientific ideas difficult task sometimes controversial  nevertheless  could argued origins belief change theory go back
work isaac levi         discussed problems concerning field research 
william harpers proposal rational way interrelate belief change operators  harper         however  main advances belief change theory came
    s carlos alchourron david makinson studied changes legal codes  alchourron   makinson         peter gardenforss introduced rational postulates
change operators  gardenfors         that  three authors produced foundational paper containing became known agm model  alchourron  gardenfors 
  makinson         core contribution agm model presentation
new general formal framework study belief change  today  work
considered cornerstone belief change theory evolved 
since introduction agm model  different frameworks belief dynamics
respective epistemic models proposed  epistemic model corresponds
formalism beliefs represented  providing framework different
kinds operators defined  agm model conceived idealistic theory
rational change epistemic states represented belief sets  sets sentences
closed logical consequence  commonly denoted boldface   epistemic input
represented sentence  agm model  three basic change operators defined 
expansion  contraction  revision  rest section  whenever use term
consistent inconsistent  refer traditional notion inconsistency knowledge
base models  let k belief set  change operations follows 
   

fidatalog ontology consolidation

expansions  result expanding k sentence possibly larger set
infers   intuitively  belief   hopefully consistent given epistemic state 
directly added k 
contractions  result contracting k possibly smaller set
infer   unless tautology 
revisions  result revising k set neither extends part
set k  general  fallacy consistently inferred
revision k  
great importance agm comes providing axiomatic characterizations contraction revision terms rationality postulates  rationality postulates regard
operators black boxes  characterizing do  explaining
it  words  behavior constrained regard inputs basic cases 
without describing internal mechanisms used achieving behavior  crucial
say contraction revision operators obtained via constructive
approaches  agm contractions realized partial meet contractions 
based selection among  maximal  subsets k imply   via levis
identity  gardenfors         associated revision operations called partial meet revisions
obtained  another possible approach contraction based selection among
 minimal  subsets k contribute make k imply   safe contraction  alchourron   makinson         general variant approach  known
kernel contraction  introduced later  hansson         shown safe
contractions kernel contractions equivalent partial meet contractions  hence
agm approach contraction  hansson              
particularly interesting characteristic kernel contraction may concerned
changes symbolic level since suitable applied belief bases  set
sentences closed consequence relation  well belief sets  thus  matters
beliefs actually represented  happen agm approach 
studies changes knowledge level since uses belief sets  distinction
knowledge symbolic level proposed allen newell         according newell 
knowledge level lies symbolic level  latter used somehow represent
former  this  belief bases different symbolic content may represent
knowledge  importance that  although statically equivalent
 they represent beliefs   equivalent belief bases could dynamically different
choose use approach working directly them  kernel contraction 
besides three basic operations mentioned  years additional operations
developed belief revision achieve different behaviors  instance 
belief base inconsistent  removal enough sentences lead consistent
state  additional operation called consolidation  consolidation belief base
k denoted k    see hansson               focus last operation 
inherently different contraction revision  since ultimate goal obtain
consistent belief base possibly inconsistent one  without given epistemic
input   rather revising knowledge base specific formula removing
particular formula it  consolidation k obtained natural way belief
   

fideagustini  martinez  falappa   simari

bases contracting falsum  i e   k     k   represents contraction
operator  process restores consistency attending every conflict k  hansson        

   incoherence inconsistency problems related datalog
ontology consolidation
problem obtaining consistent knowledge inconsistent knowledge base
natural many computer science fields  knowledge evolves  contradictions likely
appear  inconsistencies handled way affect
quality information obtained database 
setting consistent query answering  cqa   repairing relational databases 
inconsistency tolerant query answering ontological languages  arenas  bertossi   
chomicki        lembo  lenzerini  rosati  ruzzi    savo        lukasiewicz  martinez   
simari         often assumption made set expresses semantics
data component d  internal conflict set constraints
constraints subject changes time  means first  set
always satisfiable  sense application inevitably yield consistency
problem  second  result assumption  must case conflicts come
data contained database instance  part ontology
must modified order restore consistency  although reasonable assumption
make  specially case single ontology  work focus
general setting  consider data constraints change time
become conflicting  general scenario  knowledge evolves  and ontology
represents it  data related issues appear  constraint related ones 
argue important identify separate sources conflicts
datalog ontologies  previous section defined inconsistency datalog
ontology based lack models  operational point view  conflicts appear
datalog ontology whenever nc egd violated  is  whenever body
one constraint mapped either atoms atoms obtained
application tgds   beside conflicts 
focus relationship set tgds set ncs egds 
could happen  a subset of  tgds cannot applied without leading
always violation ncs egds  note case clearly data
database instance problem  database tgds applicable
inevitable produce inconsistent ontology  issue related unsatisfiability
problem concept ontology  known description logics community
incoherence  flouris  huang  pan  plexousakis    wache        schlobach   cornet       
borgida        beneventano   bergamaschi        kalyanpur  parsia  sirin    hendler 
      schlobach  huang  cornet    van harmelen        qi   hunter         incoherence
particularly important combining multiple ontologies since constraints
imposed one data could  possibly  represent conflicting models
application hand  clearly  notions incoherence inconsistency highly
related  fact  flouris et al s        work establish relation incoherence
inconsistency  considering incoherence particular form inconsistency 
   

fidatalog ontology consolidation

later section present complete definition incoherence datalog   based
concept unsatisfiability sets tgds  nevertheless  sufficient
know proposed notion incoherence states given set unsatisfiable
constraints possible find set atoms kb    d    consistent
ontology time tgds applicable d  means
datalog ontology consistent even set constraints incoherent  long
database instance make dependencies applicable  hand 
datalog ontology inconsistent even set constraints satisfiable 
e g   kb     tall peter   small peter     tall x  small x       empty 
set dependencies trivially satisfiable thus ontology coherent  ontology is 
nevertheless  inconsistent 
formalizing notion incoherence use datalog setting
need identify set atoms relevant given set tgds  intuitively  say
set atoms relevant set tgds atoms set
application generates atoms needed apply tgds   i e  
triggers application every tgd  
definition    relevant set atoms set tgds  let r relational
schema  set tgds   possibly existentially closed  non empty set
atoms  r  say relevant iff form
xy x  y  z x  z  holds chase a       xy x  y  
clear context  singleton set    a  relevant
say atom relevant  
example    relevant set atoms  consider following constraints 

       supervises x     supervisor  x   
    supervisor  x   makes decisions x   leads department x   d  
    employee x   works in x   d  
consider set a     supervises walter   jesse   makes decisions walter    employee jesse   
set relevant set atoms set constraints                 since  
  directly applicable a    becomes applicable apply    i e  
chase entails atom supervisor  walter    together makes decisions walter  
triggers     
however  set a     supervises walter   jesse   makes decisions gus   relevant
  note even though   applicable a    tgds     never applied
chase a       since atoms bodies never generated chase a      
instance  consider tgd     chase create atom
supervisor walter   nevertheless still cannot trigger   since
cannot generate atom makes decisions walter    atom makes decisions gus 
already a  match constant value 
present notion coherence datalog   adapts efforts made
dls schlobach cornets        flouris et al s         conception
   

fideagustini  martinez  falappa   simari

 in coherence based notion satisfiability set tgds w r t  set
constraints  intuitively  set dependencies satisfiable relevant set
atoms triggers application dependencies set produce
violation constraint nc e   i e   tgds satisfied along ncs
egds kb  
definition    satisfiability set tgds w r t  set constraints  let r
relational schema  set tgds  n nc e   r  set
satisfiable w r t  n iff set  possibly existentially closed  atoms r
relevant mods a  n        say unsatisfiable w r t 
n iff satisfiable w r t  n   furthermore  satisfiable w r t  nc e iff
unsatisfiable w r t  n n nc e  
rest paper sometimes write set tgds  un satisfiable omitting
set constraints  context particular ontology
fixed set constraints nc e since set tgds satisfiable w r t  nc e
satisfiable w r t  subset and  hand  set tgds unsatisfiable
w r t  subset nc e unsatisfiable w r t  whole set constraints 
example    unsatisfiable sets dependencies  consider following constraints 

 nc       risky job p   unstable p    
 t        dangerous work  w   works in w  p   risky job p   
    therapy p   unstable p   
set  t satisfiable set tgds  even though simultaneous application
    may violate formula  nc  e   hold every relevant
set atoms  consider example relevant set d     dangerous work  police  
works in police  marty   therapy rust    d  relevant set  t   however 
mods d     t  nc  e       t satisfiable 
hand  example unsatisfiability consider following constraints 
 nc        sore throat x  sing x   
 t        rock singer  x  sing loud  x       sing loud  x  sore throat x  
    rock singer  x  sing x  
set  t unsatisfiable set dependencies  application tgds             
relevant set atoms cause violation     instance  consider
relevant atom rock singer  axl   application  t  rock singer  axl  
causes violation   considered together  t   therefore
mods  rock singer  axl     t  nc  e       note set relevant atoms
cause violation    
ready formally define coherence datalog ontology  intuitively 
ontology coherent subset tgds unsatisfiable w r t 
constraints ontology 
   

fidatalog ontology consolidation

definition    coherence  ontology kb coherent satisfiable
w r t  nc e   also  kb said incoherent iff coherent 
example    coherence  consider sets dependencies constraints defined ex 

ample   arbitrary database instance d  see datalog ontology
kb      d   t  nc  e   coherent  kb      d   t  nc  e   incoherent 
considering incoherence set tgds important consolidation process
datalog ontologies  since treated appropriately within consolidation process 
incoherent set tgds may lead trivial solution removing every single relevant
atom  in worst case  entire database instance   may adequate
particular domains  seem desirable outcome general case 
looking definitions     see close relationship
concepts incoherence inconsistency  fact  inferred definitions
incoherent kb induce inconsistent kb database instance contains
set atoms relevant unsatisfiable sets tgds  result captured
following proposition  proofs results presented appendix a  
proposition   kb incoherent exists relevant
unsatisfiable set u kb    d    inconsistent 
instance relationship  consider following representative example 
example    relating incoherence inconsistency  consider following ontology 

kb  


   a    sing simone   a    rock singer  axl    a    sing loud  ronnie  




a    fans ronnie   a    rock singer  ronnie   a    rock singer  roy  




a    manage band    richard   








nc        sore throat x  sing x   




    private life x  famous x   



e  








 
















     manage x    manage x  z    z 
  
 
 
 
 

  rock singer  x  sing loud  x  
  sing loud  x  sore throat x  
  fans x  famous x  
  rock singer  x  sing x  
  fans x  private life x  

















































hinted previously example    set    rock singer  axl  
unsatisfiable set tgds u        rock singer  x  sing loud  x      
sing loud  x  sore throat x       rock singer  x  sing x    since relevant
u conditions proposition   fulfilled  indeed ontology kb    d   
inconsistent since   violated 
set constraints one presented example   may appear consider scenarios components ontology evolve  perhaps collaboratively
   

fideagustini  martinez  falappa   simari

maintained pool users   long new constraints added  incoherence problems
may arise  particular scenario would seem sensible identify modify 
somehow  set incoherent constraints make satisfiable  instead deleting
information ontology  proceed solve remaining inconsistencies  any  is  could beneficial define consolidation processes
changes performed achieve coherence given higher priority changes needed
consistency possible  address present twofold proposal consolidation datalog ontologies  is  obtain new kb   begin addressing issues
component w r t  components e nc original ontology obtain
new coherent set constraints  giving tgds necessary  then  address
problems arising component d  obtaining new one d  consistent
 t e nc   next section characterize  means set postulates 
consolidation operator takes account considerations 

   characterizing consolidation  postulates datalog ontology
consolidation operators
belief revision one main areas deals defined principled methods solve
incoherences inconsistencies  explained section    common characterize
change operators means postulates  properties operators must satisfy  section introduce set postulates objective characterizing
consolidation operators datalog ontologies  start briefly defining scenario
underlying consolidation process introducing characteristics sets formulas focus  friedman   halpern        

    defining consolidation environment
depending type knowledge base  find two main streams work belief
revision  one hand  works based sets formulas closed
consequence relation  called belief sets  alchourron et al          known
belief revision literature coherence model  hand  option
choose belief bases  katsuno   mendelzon              fuhrmann        hansson       
            falappa  kern isberner    simari         i e   non closed sets formulas 
referred foundational model 
opposite traditional closed world assumption found established areas
relational databases  one important characteristic datalog open world
assumption  unknown data represented means null values  consequence 
generation new information language application rules susceptible
infinite  cal  gottlob    kifer               seems make foundational
model appealing choice working setting  therefore  consolidation
datalog ontologies chosen follow foundational model  model 
epistemic state  possibly incoherent inconsistent  datalog ontology 
   

fidatalog ontology consolidation

    expected properties consolidation operator  postulates
present set properties consolidation operator datalog ontologies
must satisfy  use following notation rest paper  let kb    d   
original datalog ontology consolidated    e nc   also 
kb   denotes datalog ontology kb      d      resulting consolidation kb  
d    consolidated components kb    respectively 
necessary differentiate kbs using subscripts  cases  given kb denote
consolidation kb      di       
ready introduce ontology consolidation postulates  ocp  expected
satisfied consolidation operators  let set datalog ontologies 
then  datalog ontology consolidation operator     function must
satisfy following properties 
ocp     inclusion    d  d 
consolidation process includes resulting ontology formulas belonging original ontology 
ocp     consistency  kb   consistent 
ontology obtained consolidation process must consistent  i e  
negative constraints equality generating dependencies
violated apply tgds   atoms d   therefore
mods  d           
ocp     coherence  kb   coherent 
ontology obtained consolidation process must coherent  i e  
  must satisfiable respect nc e   
ocp     minimality   kb   kb coherent consistent  holds
kb     kb    
coherent consistent ontology obtained original ontology strictly contains consolidated ontology 
postulates presented inspired properties proposed hansson        konieczny pino perez         nevertheless  adapted
suit particularities ontological setting datalog   particular  take
account distinction incoherence inconsistency  instance  inclusion
direct adaptation hanssons homonymous postulate  hansson         states
contraction knowledge base  not necessarily proper  subset
original one  consistency coherence  hand  result adapting
setting konieczny pino perezs postulate ic          intuitively ask
resulting merging must consistent  ask resulting consolidation
consistent coherent  minimality postulate added ensure
quality consolidation  w r t  loss information aspect   adapted
particular work  rather general notion belief revision  noted
   

fideagustini  martinez  falappa   simari

hansson        given many names conservatism  harman         conservativity  gardenfors         minimum mutilation  quine        minimal change  rott 
      
proposed postulates capture notion changes made respect
original ontology necessary  resulting ontology is  expected 
coherent consistent  is  given original ontology consolidation process
removes constraints  tgds  atoms somehow involved making
original ontology incoherent inconsistent  makes way unnecessary
removal made 

   datalog ontology consolidation operator
previous sections presented examples incoherences inconsistencies
arise datalog ontologies  additionally  stated properties consolidation
operator satisfy order make adequate changes original ontology regaining
coherence consistency  now  propose construction consolidation operator
addresses incoherence inconsistency problems datalog ontologies 
    possible construction consolidation operator
literature belief revision several constructions revision contraction operators studied  hansson        presents contraction operation belief
bases modeled means application incision functions  functions
contract belief base formula taking minimal sets entail  called  kernels 
producing incisions sets longer entail   resulting belief base
conformed union formulas removed function 
approach known kernel contraction  task restoring consistency known
belief revision literature contraction falsum  hansson         work 
define consolidation process application incision functions  nevertheless 
instead directly considering minimal inconsistent subsets formulas different
components ontology  which equivalent  kernels   work perform incisions structures called clusters  martinez  pugliese  simari  subrahmanian    prade 
      lukasiewicz et al         groups together related kernels  specifically 
solve incoherence begin establishing dependency kernels  analogous way 
define data kernels solve inconsistencies w r t    then  based them 
obtain dependency clusters data clusters exploiting overlapping relation 
      identifying relation among conflicts
first step towards conflict resolution framework calculate minimal coherence consistency conflicts  identify possible relations among conflicts  any 
dependency kernels sets tgds unsatisfiable w r t  set ncs egds
datalog ontology minimal set inclusion  sets known minimal unsatisfiability preserving sub tboxes  mups  minimal incoherence preserving
sub tboxes  mips   schlobach   cornet        dl community 

   

fidatalog ontology consolidation

definition
   dependency kernels  set dependency kernels kb   denoted
q
kb   set x x unsatisfiable set dependencies
w r t  nc e every proper subset x   x  x     x  satisfiable w r t  nc e  
example    dependency kernels  consider following sets constraints

datalog ontology kb  

nc        counselor  x   regent x    




    cannot rule x   heir  x    








e        advise x   k   advise x   k     k   k    







       advise x   k   counselor  x   
kb  
    propose law  x   k   regent x   




    prince p   heir  p   




    son p   k   king k   prince p   




    counselor  c   regent c   




    bastard son x     son x     



    bastard son x   k   king k   cannot rule x   









































kb exist two dependency kernels  i e  
q
kb

                           

easy show dependency kernels datalog ontology independent
particular component ontology  thus obtained looking
component   is  even replace component ontology
empty set atoms  dependency kernels ontology empty database
original one 


lemma   let kb
q      d
q        kb            two datalog ontologies
        then  kb     kb    

addition removal tgds make set unsatisfiable  thus making
ontology incoherent   solve inconsistencies may need remove atoms components order address data inconsistency well  analogously definition
dependency kernels  define data kernels minimal subset atoms
makes kb    d    inconsistent 

 
definition    data kernels  set data kernels kb   denoted kb   set
x mods x      every x     x holds mods x           
   

fideagustini  martinez  falappa   simari

example    data kernels  consider following coherent inconsistent kb   pro 

posed lukasiewicz et al         

kb  


   directs john  d     directs tom  d     directs tom  d    




supervises tom  john   works in john  d     works in tom  d    








nc    supervises x     manager  y    




supervises x     works in x   d  directs y   d   



e  








 








 directs x   d  directs x            
     works in x   d  employee x   
    directs x   d  employee x   
    directs x   d  works in x   d  manager  x   





































kb   set data kernels
 
kb



 supervises tom  john   directs john  d     works in john  d     
 supervises tom  john   directs john  d     works in tom  d     
 


 directs tom  d     directs tom  d    

know minimal conflicts ontology identify relations among them 
relation exists  this  group related kernels together new structure called
cluster  makes possible achieve optimal solution related kernels  clusters
obtained overlapping relation defined follows 
definition    overlapping  equivalence  let l first order language  r l
relational schema  lr sublanguage
generated r  given lr b lr  
say overlap  denoted b  iff b      furthermore  given multi set first
equivalence relation obtained
order formulas  lr denote
reflexive transitive closure  
exploiting overlapping among dependency kernels data kernels define
dependency clusters data clusters  respectively 
q
definition    dependency clusters  let kb
set dependency kernels
q

kb   let overlapping relation  k   kb  q
quotient set equivkb
q

alence relation obtainedq
qover kb   constraint cluster set c       
   k  denote kb set constraint clusters kb  
 
definition     data clusters   
let kb set data kernels kb   let

overlapping relation  k   kb   
quotient set equivalence relation
kb
 

obtained
kb   data cluster set c           k  denote
 
 
set data clusters kb  
kb
intuitively  dependency cluster groups dependency kernels tgd
common  transitive fashion  data clusters groups data kernels analogous way 
   

fidatalog ontology consolidation

example    dependency clusters data clusters  assume kb

q

 
                                 kb     a    a      a    a      a    a    a      then 
two dependency clusters based kernels  grouping first two kernels  due
    remaining kernel another cluster  i e  
kb

q
q
kb

                           

hand  case data clusters
 
 
kb

    a    a    a    a    a     

following proposition states that  since clusters based equivalence classes  every
kernel included one one cluster 
q
q
q
propositionq
  kb x some x kb   x  
q
 

x     analogously 
kb x
 
 
 
 x kb x   
 
 
x kb   x x kb x    x    
corollary proposition   formula kernel included
one cluster 
q
corollary    corollary

proposition
  
let








kb
 
q
q
 
 
forq
x x kb
  x  
 
 all
qsome kb   then 
 
 
 








x


x

x kb x    x   analogously 
kb
 
 

  x   x   kb x    x    
following lemma shall use paper shows example how 
ontological setting datalog   leibnizs indiscernibility identicals  von leibniz 
      holds w r t  clusters datalog ontologies  two kbs equivalent
set clusters 
ontologies kb   kb   then 
lemma
  let kb  q
kbq
  two datalog
 
 
 
 
 
 
q
q
 

 
 
kb  
kb  
kb  
kb  

      solving conflicts  incision functions
identified clusters  establish incoherences inconsistencies solved  incision function selects formulas deleted
data dependency clusters 
definition     general incision function  general incision function kb
function     lr    lr    lr following conditions holds 
sq
q
s 
 
    kb     kb     kb   
q
q
q
   x kb kb x holds  y  kb        
 
 
 
   x kb kb x holds  y  kb        
   

fideagustini  martinez  falappa   simari

q
q
   x kb holds    x  kb    exists r x
r satisfies conditions      r    
 
 
   x kb holds    x  kb    exists r x
r satisfies conditions      r    
definition    states general incision function selects dependency  data 
respectively  cluster tgds  atoms  respectively  deletion order restore coherence
 consistency   incision function complies definition    used base
consolidation operator  however  note operator may differentiate
restoring coherence consistency  problem classic literature
belief revision since notion incoherence  distinction
rules facts languages propositional logic  thus  consistency conflicts
appear  avoiding need treat incoherences  nevertheless  ontological setting
datalog opportunity exploiting fact two different although
related kinds conflicts address separately goal finding solution
better suits needs applications rely kind knowledge bases 
point paper trying make that  knowledge bases form
datalog ontologies important differentiate  adequately handle  incoherence
inconsistency quality consolidated ontology heavily depends
assuming strive minimal loss process  this  complex setting  needs
careful definition constitutes kernel  see could happen done
properly  consider following example 
example     influence incoherence consolidation  consider kb exam 

ple       t  e  nc  t unsatisfiable  explained example    singleton set  rock singer  axl   nc     sore throat x 
sing x  violated  making  rock singer  axl   inconsistent   then 
 rock singer  axl   data kernel  and data cluster  since cannot overlap
kernel  verifiable every singleton set relevant dependency cluster  thus 

 
 
kb


 rock singer  axl   



 rock singer  ronnie   
 
 rock singer  roy   



 has fans ronnie  









consider cluster  rock singer  axl    cluster
  rock singer  axl      rock singer  axl  
 
 
 
 
s 
 
situation holds every cluster kb   thus   kb       kb   
problem example data kernels  and hence data clusters 
computed w r t  original component  which  case  contain unsatisfiable sets
constraints  seen example     becomes utter importance
atoms relevant unsatisfiable sets  case  general incision function  and
inconsistency management technique based deletion treat incoherence
conflicts  necessarily delete atoms 
   

fidatalog ontology consolidation

proposition   let general incision function  relevant x
 kb   

q
kb

clearly  corollary proposition   every atom relevant
unsatisfiable set remove every atom restore consistency 
corollary    corollary proposition    letq general incision function 
holds relevant x kb  kb   
seen  incoherence great influence consolidation treated properly
 that is  previously consistency restoration   would seem better compute
data clusters based retained satisfiable part components  lemma  
show dependency kernels obtained independently component
original ontology  unsatisfiable sets violate negative
constraint equality generating
dependency relevant set atoms  therefore 
q
q
first obtain
 

use

incision function
kb
 
  dependency clusters select
tgds deleted q
qthen  calculate kb based result application
incision function kb   way paying attention constraints
prevail consolidation process 
next  define constraint incision functions data incision functions
used select candidates deletion  from original ontology  restore coherence
consistency  respectively  first  define incision function dependency clusters
helps solve incoherence constraints 
definition     constraints incision function  constraint incision function kb
function     lr    lr    lr following conditions hold 
sq
q
    kb     kb   
q
q
q
   x kb kb x holds  y  kb        
q
q
   x kb holds    x  kb    exists r x
r satisfies conditions      r    
intuitively  constraint incision function takes dependency clusters removes tgds
way resulting kb coherent  analogously
constraints
incision functions  define data incision functions solve inconsistencies
 
 
 
kb
definition     data incision function  data incision function function
      lr    lr    lr following conditions hold 
s 
 
  kb     kb   
 
 
 
x kb kb x holds  y   kb        
 
 
x kb holds    x   kb    exists r x
r satisfies conditions        r    
   

fideagustini  martinez  falappa   simari

finally  necessary make significant remark regarding usage incision
functions  that  let us first consider following excerpt quoted hanssons       
cf  p       regarding possible parameters passed selection functions  which
case incision functions  choice affects possible outcomes 
         proof uniformity makes essential use fact selection functions defined remainder sets form a  pairs
form ha  i  instead defined selection functions follows 
 a    non empty subset  a    non empty 
 a       a  empty 

 a    would operation similar partial meet contraction respects  would possible  a        a   
hold   a  standard definition allow         
thus  extending hanssons observation incision functions use consolidation 
take sets conflicts arguments incisions formulas
removed two different ontologies set conflicts operator
using incision function identical  reason operator could
tell difference ontologies since parameter conflicts 
exactly same  however  chosen restrict family operators
behaviors  instead  model operators whose behavior could select removal
formula equal conflicts  restricted choice  achieve
this  chosen take ontologies parameters  so  fits application domain
operators exploited  formulas conflict could affect
outcome consolidation 
approach presented here  incision function consider tgds
effect cluster  global effect whole knowledge base  reason
requirement unlike classic models belief revision  language used
greater expressivity fact tgd generates multiple inferences  instance 
framework tgd form xy x  y  z x  z  possible
infer multiple instances  x  z  
see reason behind choice clearly consider following example 
example    consider following ontologies 


   p a   q a  





nc    p x   r  x    
kb    





       q x   r  x   








kb    








   p a   q a  








nc    p x   r  x    












     q x   r  x   
    p x   s x   
    p x   t x   













 








kb   set data clusters equal 
   

fidatalog ontology consolidation

 
 
kb  

 

 
 
kb  

 



 p a   q a  



use standard approach take clusters arguments incisions  must
remove formula ontologies  explained incision
function therefore cannot choose differently argument 
nevertheless  suppose particular scenario want remove atoms based
information help infer  case  kb   remove
p a   kb   take q a   since kb   formula p a  triggers
tgds  thus inferring atoms  achieve type behavior  necessary pass
ontologies parameters  since provides adequate context 
      cluster contraction based consolidation operator
lastly  define consolidation operator datalog ontologies represents two
different parts consolidation  first  coherence restoration component
obtained based dependency clusters component original ontology 
second  restoration consistency component obtained based data
clusters w r t    component obtained applying constraint incision function
original   way achieve behavior stated earlier paper  sense 
give incoherence resolution higher priority  since retain atoms addressing
unsatisfiable sets tgds instead  choose follow path  cluster contractionbased consolidation operator formally defined follows 
definition     cluster contraction based consolidation operator 
let kb datalog ontology  constraint incision function   data incision
function  also  let kb      d     kb    datalog ontology resulting deleting
kb tgds selected   cluster contraction based consolidation operator
kb    defined follows 
kb      d     kb         kb   
result kbq
  datalog ontology obtained removing 
first  tgds
 
 
q
 selected
  atoms  selected  
  original
kb  
kb
ontology kb   important note that  one hand tgds removed
  dependency clusters contain egds ncs  hand  data
incision function uses kb   instead kb atoms conflicts
   kb   removed  data clusters calculated based constrains
obtained consolidation  
    relation postulates construction  representation theorem
section   introduced properties datalog consolidation operator
must satisfy  means following representation theorem establish
relationship set postulates datalog ontology consolidation operator
cluster contraction based consolidation operator proposed previous
section  follows denote   consolidation operator defined definition   
  correspond arbitrary constraint data incision functions  respectively 
   

fideagustini  martinez  falappa   simari

theorem    representation theorem  operator consolidation   cluster
contraction based datalog ontology consolidation operator datalog ontology kb
iff satisfies inclusion  coherence  consistency  minimality 

   complete example datalog ontologies consolidation
introduced operator allows us consolidate datalog ontologies
satisfies set expected properties expressed postulates section   
section  complete process consolidation datalog ontologies depicted
following example 
example     consolidation datalog ontologies  suppose  in 

coherent inconsistent  ontology kb shown figure    expresses information
collected certain company 

d 




























nc  













e  
kb  






 




































 a 
a 
a 
a 
a 
a 

  boss walter    a    supervises walter   jesse  
  makes decisions walter   a    makes decisions jesse  
  supervises skyler   walter    a    employee walter   
  charge  jesse  distribution  
  charge  walter   cooking  
  strike mike  

     follows orders x   makes decisions x    
    supervises y   x   supervisor  x    
    absent x   strike x    
     charge  x     charge  x            
     employee x   supervised  x   
    supervised  x   follows orders x   
    boss x   makes profit x   
    supervises y   x   supervisor  y   
    supervises y   x   employee x   
    supervised  x   makes decisions x   
    supervised  x   work  x   
    work  x   get paid  x   
    work  x   charge  x     
     strike x   absent x   





















































































figure    original ontology consolidated 
now  begin first part consolidation process  i e   solving incoherences making set satisfiable  obtain  first step towards obtaining
dependency clusters  dependency kernels kb  
q
kb

                    

based kernels  calculate set dependency clusters kb
q
q
                    
kb
   

fidatalog ontology consolidation

q
q
q
note that  overlap among dependency kernels  kb   kb   next 
use cluster incision function solve incoherency problems  sake example
assume guide contraction process means quantitative criterion  i e  
choosing among possible incisions ones removes fewer formulas  using
plausibility among formulas cardinality incisions same 
following show possible incisions  i e   satisfying conditions definition    
sets
cluster          could either remove       since two incisions remove
number atoms assume example   plausible    
thus prefer retain former 
cluster       remove     
then  particular incision example follows 
                 
               
now  move next part consolidation process  consistency recovery 
explained before  part operator considers tgds effectively
included consolidation  particular example                 
let kb      d      based kb   calculate data kernels 
q
    a    a      a    a      a    a      a    a    
kb  
then  obtain data clusters  are 
q
q
    a    a    a    a    a    
kb  
now  solve inconsistencies need consider sets intersection
kernels included clusters empty  using   instead
this  again  analyze possible incisions  the sets respecting conditions
definition     light number atoms deleted plausibility formulas
them  different possible incisions cluster are 
  remove  a    a    
  remove  a    a    a    
  remove  a    a    a    
  remove  a    a    a    
again  sets presented removal induce operator
satisfies postulates  thus captured framework  nonetheless  explained
example choose remove atoms possible  is 
choose remove  a    a     
    a    a    a    a    a         a    a    
then  using datalog ontology consolidation operator based contraction
clusters one introduced definition    obtain coherent consistent
ontology shown figure   
   

fideagustini  martinez  falappa   simari

kb    


d     boss walter    makes decisions jesse  




supervises skyler   walter    employee walter   




charge  jesse  distribution  




charge  walter   cooking  




strike mike  








nc      follows orders x   makes decisions x    




supervises y   x   supervisor  x    




absent x   strike x    



e    








   

































































 in charge  x     charge  x            







 employee x   supervised  x   




supervised  x   follows orders x   




boss x   makes profit x   




supervises y   x   supervisor  y   




supervises y   x   employee x   




supervised  x   work  x   




work  x   get paid  x   



work  x   charge  x     

figure    ontology resulting consolidation 

   related work
closely related work work croitoru rodriguez        
work authors present consolidation operators used basis definition
semantics inconsistency tolerant ontology query answering datalog   a
expressive language datalog   cal et al          case work 
work croitoru rodriguez        based use hanssons incision functions
 hansson        solve conflicts  nevertheless  remarkable differences
works well  among important ones operators presented
croitoru rodriguez deal inconsistent ontologies  acknowledgment
incoherence problem made  shown work 
significant impact quality consolidation analysed respect minimal
loss information  moreover  fact makes that  even though set postulates
works similar spirit  family operators characterized croitoru
rodriguez subset ones characterized here  due fact setting
consider  i e   inconsistent incoherent ontologies  general 
since instance operators remove facts tgds  croitoru
rodriguezs operators since focus inconsistency 
another closely related work one lukasiewicz et al          there  authors define general framework inconsistency tolerant query answering datalog
ontologies based notion incision functions  nevertheless  work focused
enforcing consistency query time obtaining  lazy  consistent answers inconsistent ontology instead consolidating one  clearly  process must carried
every query posed system  approach obtain new knowledge base
   

fidatalog ontology consolidation

offline manner  knowledge base queried without considering inconsistency issues  approaches prove useful  depending application domain 
additionally  one kb used rational assumption conflicts
constraints made  therefore notions unsatisfiability
incoherence  stated before  order gain generality chosen drop
assumption  treat incoherence problems well inconsistency ones  addition
works croitoru rodriguez lukasiewicz et al   several works
solve inconsistency incoherence means adapting approaches based belief
revision techniques knowledge representation formalism 
    propositional knowledge bases
numerous works revision merging propositional knowledge bases  see 
instance  konieczny   perez        katsuno   mendelzon        lin   mendelzon       
liberatore   schaerf        everaere  konieczny    marquis        konieczny   perez 
      delgrande  dubois    lang        booth  meyer  varzinczak    wassermann       
delgrande        delgrande   jin        falappa  kern isberner  reis    simari        
provided foundations work  fragments of  first order logics 
expected  works deep connections ours  remarkable
differences  shall see 
mentioned throughout paper  work sven ove hansson       
provides inspiration foundations work  follow approach akin kernel
contraction several intuitions it  adapted ontological language  datalog  
consequence  besides treating incoherence provide complete inconsistency
resolution process takes advantage ontological setting  exploiting relation
components ontology define coherence consistency
restored  also  classic incision functions introduced hansson produce incision
minimal conflicts  approach  however  work clusters  groupings
kernels  thus always minimal  then  propose particularization
hanssons incision functions  focusing incision functions successfully work
clusters 
konieczny pino perez        made one main contributions merging
conflicting information  work follow intuitions proposed them 
nevertheless  main difference approach  besides obvious one
aims works  merging vs  consolidation  state final merging
consistent presence consistent  or  terminology  coherent  set
integrity constraints  analyze alternative case 
respect work lin mendelzon         besides difference
focus  once merging vs  consolidation   main difference inconsistency
management strategy chosen work conflict solving strategy relies
votes majority establish formulas retained merging  instead 
chosen introduce particular strategy  nevertheless  possible adapt
framework use preference relations choose possible incisions  in
similar way shown example      relations indeed designed
comply majority intuition  providing votes 
   

fideagustini  martinez  falappa   simari

apply ontology consolidation environment since one ontology   thus
obtaining similar strategy 
work katsuno mendelzon        problem knowledge base revision
propositional case addressed  approach  language used
express facts world constraints imposed kb  
nevertheless  difference  in case  update kb
consolidation kb arises treatment integrity constraints  work
integrity constraints considered invariant updates restore consistency
restricted facts 
works delgrande         delgrande jin        authors present
approach revising propositional knowledge base set sentences  every
sentence set independently accepted inconsistencies
considering whole set  main idea follows agm theory  differs
that  necessary alter success postulate suits intuition every
sentence set final revision  since set inconsistent  
guided principle informational economy  characterize revision
plausible worlds among various maximally consistent subsets set sentences 
parallel datalog ontology environment  revising component
ontology solve inconsistencies  set sentences inconsistent  union
original kb inconsistent  nonetheless  important difference
works ours  works authors first solve inconsistencies
set sentences  decide subset characterize revision 
approach different  directly consider inconsistent kb   then  order solve
problem setting  necessary consider union kb
entire set sentences  apply consolidation operator 
    knowledge expressed description logics ontologies  logic programs
relational databases
focus knowledge representation formalisms closely related
datalog   mainly family description logics  baader  calvanese  mcguinness 
nardi    patel schneider        logic programming  lloyd        nilsson   maluszynski        gelfond         remarkable work using belief revision solve conflicts dls
one qi  liu  bell         based agm theory  alchourron
et al         gardenfors         makes work stand
introduce generalizations agm postulates case dls  define two
operators knowledge bases  based formulas weakening  satisfy postulates 
main difference approach take account consistency problems ontologies  incoherence treatment provided  pointed earlier 
incoherence lead extreme weakening information  may
take every individual name general concept inclusion 
previously mentioned  notion incoherence inspired schlobach
cornets work         among others  paper authors focus definition
processes capable detecting unsatisfiabilities incoherences dls ontologies  introducing complete algorithms along empirical analysis approach  nevertheless 
   

fidatalog ontology consolidation

main focus work  authors set aside issue recover
coherence conflict detected  consider inconsistencies 
work presented consolidation process treats incoherence inconsistency 
based use belief revision techniques  thus  approach presented schlobach
cornet could potentially useful regarding implementation operators presented work  providing effective way obtaining set kernels
set clusters based 
black et al         propose approach capable using information coming
several dl ontologies order answer queries  taking care process incoherence inconsistency  approach based agents argumentative capabilities 
one personal knowledge base form dl ontology  agents use
dialogue games interchange arguments reach agreement answer
certain query  thus  agents use  possible incoherent inconsistent  union
ontologies without merging them  still obtain answer influenced every
ontology play  moreover  approach advantage information lost 
formula deleted ontologies  result inferences obtained
approach superset obtained ontology resulting
consolidation union dl ontologies  even though authors argue one
advantage proposed approach need waste time effort
performing consolidation kb   one disadvantage computational complexity
associated argumentative reasoning  parsons  wooldridge    amgoud        dunne  
wooldridge        cecchi  fillottrani    simari        process conducted
query issued online manner  even though consolidation process
computationally expensive  necessary perform
done offline query answering system becomes available  choice one approach depends highly environment used  i e  
size ontologies used  often updates issued kb
critical time consumption system  among considerations  course
set inferences obtained every approach may differ
taken account  consolidation based approach could suitable
time dependant systems real time systems query intensive systems data
tractability associated  a consolidated  datalog ontology may proven handy 
another work worth mentioning kalyanpur  parsia  horridge  sirins
        work verses find justifications entailments description
logics ontology  justification simply precise set axioms ontology responsible
particular entailment  kalyanpur et al          words  minimal set
axioms sufficient produce entailment  related use kernels mean
obtain clusters part consolidation strategy used  moreover  horridge  parsia 
sattler        state justifications important repairing inconsistent ontologies 
thus  could important definition consolidation processes similar
cluster based consolidation  least one axioms justifications
entailment removed ontology  corresponding entailment longer
holds  kalyanpur et al         p        one main contributions work
definition practical black box  i e    reasoner independent  techniques allows us
find justifications entailments ontology efficient way  such  evident
   

fideagustini  martinez  falappa   simari

work verses different direction still benefit findings 
particular  may possible use developed algorithms part implementation
strategy consolidation operators  adapting used datalog
dual incoherence inconsistency setting 
regarding logic programming  several works address problem
merging knowledge bases expressed logic programs  solving inconsistency issues
process  instance  hue  papini  wurbel        introduce merging process
based stable model semantics  using logic here and there  turner         hue
et al  consider merging strategy based pre orders among deletion candidates called
potential removed sets establish particular way obtain preorders  instead  assume strategy p given pre order defines
p   case lin mendelzons work         although falls scope
present work certainly adapt framework use similar techniques
choosing incision prevails 
another notorious work logic programming field one delgrande  schaub 
tompits  woltran         work two different approaches proposed  first
one follows arbitration approach  selecting models program differs least
w r t  models programs  work case unsatisfiable programs
studied  similar way consider incoherence leaded unsatisfiable sets tgds 
nevertheless  consider unsatisfiability certain program  concept
union programs  furthermore  strategy solve unsatisfiability simply
leaving unsatisfiable program consideration merging  instead trying
solve conflict somehow  second approach based selection models
special program p    thought constraints guiding merging process 
least variations w r t  programs merging  approach
seen particular instance approach proposed konieczny perez        
area databases  one influential works one arenas et al 
       consistent query answering  authors propose model theoretic definition consistent answers query relational database potentially inconsistent
set integrity constraints  intuitively  consistent answers query set atoms
 classical  answers query every repair inconsistent database 
repair set atoms satisfy set constraints close possible
original database  different notions repairs studied literature  well
different notions means set atoms close possible original
database  proposals based repairing inserting and or deleting tuples
to from database  actually  possible actions depend form integrity
constraints expressiveness  notion closeness defined via set inclusion
cardinality  work arieli  denecker  bruynooghe         however  proposes
uniform framework representing implementing different approaches database
repairing based minimizing domain dependent distances  main idea work
show thinking terms  different  distances express preferences among repairs
leads different preferences applied different scenarios  authors show
set repairs obtained using proposed distance functions deviate
obtained using set inclusion  furthermore  besides insertion deletion entire tuples several domain independent approaches  e g   based cardinality
   

fidatalog ontology consolidation

complex objective functions  approach proposed wijsen        updates
considered primitive theoretical framework  bohannon et al         present
cost based framework allows finding good repairs databases exhibit inconsistencies form violations either functional inclusion dependencies  allowing
updates attribute values  work  two heuristics defining constructing repairs based equivalence classes attribute values  algorithms presented
based greedy selection least repair cost  number performance optimizations explored  quite different semantics repairing proposed caroprese 
greco  zumpano         caroprese truszczynski        active integrity
constraints  aics short   aic production rule body conjunction
literals  false database consistent  whereas head
disjunction update atoms performed body true  that constraint violated   repairs defined minimal sets  under set inclusion  update
actions  tuple deletions insertions  aics specify set update actions used
restore data consistency  hence  among set possible repairs  subset
founded repairs consisting update actions supported aics considered 
works area propose different semantics repairing either explicitly implicitly
considering preference relation among set repairs  cf  andritsos  fuxman    miller 
      staworko  chomicki    marcinkowski        greco   molinaro        
recently  area ontology based data access  obda   lembo et al        
study adaptation cqa dl lite ontologies  called ar  abox semantics  
work  intersection  iar  semantics presented sound approximation consistent answers  semantics consists computing intersection repairs answers
obtained there  though  possibly many  ar answers cannot obtained iar semantics  latter computationally easy obtain dl lite family 
i e   necessary compute whole set repairs order compute intersection  data combined complexity semantics studied  rosati 
      wider spectrum dls  also  rosati        presents intractability results
query answering el intersection semantics  non recursive segment
language proved computable polynomial time  recently  bienvenu
rosati        propose another family approximations cqa  dl lite
family  k support semantics allows  soundly  approximate set queries entailed
cqa semantics  based k subsets database consistently entail q 
hand  k defeater semantics approximates complete approximations seeking
sets contradict supporters q  semantics fo rewritable ontological language standard cq answering fo rewritable well  used
conjunction over  under approximate consistent answers 
much black et al          treatment inconsistencies proposed
semantics related particular queries instead inconsistency whole database 
thus  attempt obtain final consistent database queried without
considering restrictions  furthermore  address issues incoherence
inconsistency together  instead approaches either assume set integrity
constraint correctly defines semantics database instance  room
incoherence  treat constraints data alike moment removing ignoring
information  leads type problems discuss example    
   

fideagustini  martinez  falappa   simari

techniques may suitable case one single database  presence
incoherence set ics  case consider several databases together 
approach would lead meaningless empty answers  since subset database
could satisfy constraints would case approach lukasiewicz
et al         
related databases field work lin mendelzon         there 
database viewed first order theory without rules  ics used ensure
consistency final result work konieczny perez         presenting ways
solve known database merging problems synonyms homonyms  nonetheless 
konieczny pino perezs work  consider problems related set ics 
instead  set ics used merging process unique  choice set
expected performed merge designer  unlike lin mendelzon  made
assumption consolidation environment set ics conflict free 
cholvy        introduces another approach used reason contradictory information  framework represented set axioms inference
rules  additionally  paper several applications framework introduced 
e g   solving conflicts among beliefs represented first order databases  facts
ground literals rules integrity constraints deduction rules 
scenario  contradiction obtained application constraints considering several databases together  establishes certain parallel case
inconsistency datalog ontology  however  main difference work lies
strategy inconsistency management process defined  work 
preference order databases assumed  instead  chosen restrict
achieve consolidation  thus presenting general approach  nevertheless  stated
adapt incision functions suit intuition every formula equally
desirable  choosing instance preferences ontologies guideline  if using
approach tasks rather consolidation single ontology   obtaining
inconsistency management strategy akin one introduced cholvy 
finally  meyer  lee  booth        use two well known techniques knowledge
integration propositional case  adapted refined expressiveness dls 
proposed approach takes knowledge bases produces disjunctive knowledge
base  dkb  result integration  one disadvantage dkbs state
possible options take conflicting knowledge expected exploited
reasoning process rather choosing one them  thus  contrary approach
final consolidated ontology given  definitive final merging  moreover 
set aside research problems related incoherence integration process 

   conclusions future work
collaborative work information exchange becoming key aspects almost system  thus  uttermost importance automatic adequate ways solve
conflicts  knowledge evolves collaborative environment incoherence inconsistency prone arise  knowledge often represented ontologies
collaboratively built  often shared among entities use modify them  one particular way deal conflicts appear application environments
   

fidatalog ontology consolidation

try modify information contained ontology order regain coherence
consistency  paper shown achieve consolidation datalog
ontologies  introduced concept incoherence datalog ontologies terms
unsatisfiability sets tgds  showed relationship classical notion
inconsistency logical theory lacks models 
proposed construction consolidation operators  construction inspired kernel contraction  uses incision functions groupings minimal unsatisfiable inconsistent sets called clusters solve conflicts  finally  stated properties
datalog ontology consolidation operator expected satisfy  showed
operators satisfy respective properties  obtaining result consolidation
new datalog ontology always coherent consistent minimizing changes
made conflict resolution 
final remark  notice operators take care incoherences ontology  however  rare cases ontology designer introduce unsatisfiable
concepts ontology purpose  model particular feature application domain  case remove incoherence  rather
delete atoms triggering it  any  clearly  since defined setting
mind behavior cannot achieved operators presented here  nevertheless 
modify present approach suit setting almost straightforward  provide
identify whether unsatisfiable set tgds made purpose not 
future work  intend study new constructions datalog consolidation
operators  this  first plan change general approach  i e   operators based
formalisms kernel contraction  mainly agm theory  alchourron
  makinson        alchourron et al          then  proposed framework
cluster contraction based consolidation operators fully constructive  depending
application domain may certainly difficult asses effect incisions  i e  
may hard decide among family possible incisions one select 
design point view  may easier select perform consolidation
additional information formulas knowledge base 
preference relation can  example  elicited domain experts  general 
could easier expert provide guidelines information application
domain hand could modeled preference relation formulas
ontology rather trying single desired incisions  direction want
explore constructions based exploiting preference relations among formulas
ontologies define different strategies choose formulas delete  possibly tailored
particular scenarios  mainly  plan analyze two different aspects  relation
operators based preference relations respect ones presented
work  different strategies affect behavior 
also  work make point differentiating concept inconsistency
incoherence  therefore  need focus languages separate extensional
intensional knowledge  otherwise two notions indistinguishable  as
case propositional logic   sense  choice datalog due desirable
property generalizing several popular languages classical datalog  dl lite  elh 
f logic lite  etc  even though paper perform particular analysis
effects nulls proposed solutions consolidation  datalog family languages
   

fideagustini  martinez  falappa   simari

chosen offers wide variety languages high computational tractability
 some fo rewritable others ptime inference algorithms   results
work pave way continue research line next natural step  show
 or whether  different syntactic semantic properties yield tractability
query answering allow us obtain tractability results consolidation problem 
much way happened already area consistent query answering
 where repairs extensional part kb considered   is  example 
rewriting algorithms capability value invention plays important role 
value invention process controlled  in general syntactic restrictions  order
keep low complexity reasoning tasks  mind  future
look role processes value invention consolidation datalog
ontologies  impact conflicts solved computational
efficiency 
currently working implementation operators  plan study different techniques used order produce efficient implementation  possibly
tailored specific fragments datalog   explained before  algorithms introduced
schlobach cornet        proven useful regarding aspect since may
provide way calculate kernels datalog ontology  thus providing first step
towards incoherence resolution  another important work regarding implementation
consolidation operators one wassermann         author shows
minimal incision functions knowledge base obtained kernels kb
using algorithm finding minimal hitting sets  reiter         several works
area ontology debugging repairs   e g   halaschek wiener   katz        horridge
et al        way find justifications inconsistency  exploited reiters
algorithms order implement frameworks  among others  plan study
adequate techniques operators  almost direct relation
minimal incision functions reiters minimal hitting sets  way  may possible adapt reiter techniques attend incoherences inconsistencies  moreover 
already discussed  plan analyze relation cluster incision functions
preference relations  regarding implementation  hold conjecture relations
exploited refine implementation operators  reiters algorithm
based expansion directed acyclic graph  expansion made
breadth first fashion  end generates possible values minimal incision
functions  acknowledged wassermann  kind ordering among formulas
present  ordering used choose branch expand  words 
may possible implement construction operators proposed work
means exploiting reiters hitting sets algorithm  use preference
relation equivalent incision  if any  guide consolidation process  is 
may possible adapt algorithm chooses expand branch less
preferred set formulas  thus guiding graph expansion process 

appendix a  proofs
proof proposition  
   

fidatalog ontology consolidation

proof consider u u unsatisfiable set dependencies w r t 
nc e   set atoms relevant u  
follows definition satisfiability set dependencies w r t  set
constraints u unsatisfiable exist relevant set atoms a 
makes mods a    u e nc        otherwise u satisfiable 
then  mods a  u e nc       moreover  since u
chase a  u   chase d     thus nc egd violated chase a  u  
violated chase d     thus  mods d  e nc       i e   kb inconsistent 
proof lemma  
proof let kb      d             t  e  nc   kb     q
      

     t  e  nc twoqdatalog ontologies         kb  
dependency kernels kb     kb   dependency kernels kb     respectively 
q
consider x kb     then  definition   x  t unsatisfiable
set dependencies w r t   e  nc every x     x satisfiable w r t   e  nc  
since          t    t    e    e  nc    nc   thus holds
x  t unsatisfiable set dependencies w r t   e  nc every x     x
satisfiable w r t   e  nc  
q
then q
definition   q

q x kb     since holds arbitrary
kernel kb   kb     kb    
proof proposition  
proof focus case dependency clusters  omitting theqproof data
clusters  analogous other  consider arbitrary kb  
  begin showing kernel

q
q part
q
qis part cluster
 
 
cluster  i e   x x kb   x x kb
x    x    

obtained directly definition clusters  x q
    
   equivalence class equivalence relation obtained kb   then 
clearly x     therefore  since definition two
equivalence
classes either equal disjoint holds
             let

 
 
 
 
x            holds x    x   x   since holds
q
q
arbitrary equivalence
class      holds x x kb   x  
q
q
x   kb x    x    
  show
cluster  i e  
q
q exist any  kernel belong
q
q
 
  x x kb x    x x x kb   again q
arise
q
use equivalence classes definitions         x   x   kb
x    x     holds
                   so 
ssince equivalence classes form 
partition must holds     therefore  x        x
q
q
x   kb x    x   x 
proof corollary  
   

fideagustini  martinez  falappa   simari

q
proof consider
kb   q
proposition
  x
q
q
q
  x  
x kb onlyq


 
x


x    x     thus 
kb
q
q
q
x x kb
  x   x   kb x    x    
 
 
 
analogously 


show







x
kb
 
 
 
 
 
 
x kb
  x x kb x    x    
proof lemma  
q
proof consider x kb     then  x minimal unsatisfiable set tgds w r t 
 nc  e   since kb     kb     holds x kb      e    e    nc    nc
x unsatisfiable set tgds w r t   nc  e   also  exist x     x
x   unsatisfiable set
contradict
q tgds w r t   nc  e   since otherwise wouldq
hypothesis x kb      nc
e   then 
q    nc  e    q
qx kb    
since holds arbitrary x kb     kb     kb    
q
q
q
consider
arbitrary x  kb   xy   since
  kb    
kb
 
q
q
q
q
q


x  kb     thus  q
equivalent q
  kb     kb    
kb  
kb  
 
 
 
      since
    
 


x
likewise  consider

arbitrary
x
kb
kb
   
 
  kb    
 
 
 


 
 
 
 
  thus kb     kb    
equivalent
x   kb     therefore 
kb  

kb  

proof proposition  
q
proof consider x kb relevant x  definition  
x unsatisfiable w r t  n e nc   definition  
fact relevant x mods     x n          also  since   
singleton          clearly
mods   x n           then 
 
         
 and definition   follows    kb   also  definition  
   kb   since    cannot overlap kernel  singleton 
consider incision     definition    follows  kb          
then   kb          thus  kb   
proof corollary  
q
proof consider arbitrary d  since relevant x kb  
proposition   holds  kb    thus  since holds arbitrary
 kb   
proof theorem  
proof let kb      d        kb      d        two datalog ontologies
kb     kb    
  construction postulates
consider operator   defined definition     prove   satisfies every
postulate theorem    let kb        d          kb        d          two datalog
ontologies resulting consolidation kb   kb   means    respectively 
ontology
furthermore  let kb       d         kb      kb       d         kb      q
 
resulting removing tgds selected kb   kb     let kb   kb  
 

   

fidatalog ontology consolidation

q
 
set dependency data kernels kb   kb    respectively  kb   kb  
q
q
 
   
sets dependency data kernels kb   kb      finally  let kb   kb  
q
q
 
   
set dependency data clusters kb   kb    respectively  kb   kb  
 
sets dependency data clusters kb   kb     
inclusion        d    d   
definition kb     d      d      kb       thus d    d   
similar way  definition kb                kb      thus
       
coherence  kb     coherent 
prove kb     coherent show     satisfiable
e nc      sufficient show minimal conflicts
attended operator  i e   dependency kernel included     
q
exists
consider
q
q arbitrary x kb     proposition   q
q

x   definition holds
kbq
kb  
 
x kb   x holds   kb     x       then  exists
x   kb     x   thus
       therefore 
x       
q
i e   conflict solved  since holds arbitrary x kb   every
unsatisfiable set   included      thus     satisfiable
e nc      i e   kb     coherent 
consistency  proof analogous coherence 
minimality  kb   kb   coherent consistent  holds kb      
kb    
 
letq
kb   coherent consistent  let cf        
s 
 

qkb kb  
  kb   cf d    d      kb   set formulas belong
kernel   d    respectively 
 
suppose
reductio kb     skb
 
    definition kb      kb    

q
q
  kb       kb       kb    then  cf   kb     cf d  kb     
therefore  cf   kb   cf d  kb    
q
q
 
 
then  since kb     kb   must exist kb kb kb  

  kb      kb   coherent consistent same  is  exists
dependency cluster data cluster removal optimal  since could
included consolidation  rest proof simplicity reasons 
consider case belongs dependency cluster  made without
loss generality  since proof case included data cluster
analogous one presented here 
q
q
let us consider
kb     corollary  
kb
q
q
x x kb   let    x  kb    incision performed
cluster  let r    x  kb   kb      formulas removed xqwhen
obtaining kb     clearly  since kb   coherent x kb

   

fideagustini  martinez  falappa   simari

holds r      otherwise
kb     make kb   incoherent 
q
q
besides  since r r kb   thus r satisfies first two conditions
definition    
definition    exists set tgds
satisfies first two conditions definition time holds
    r 
since
  kb     x  kb    thus   however  know
x kb     thus
  r  therefore       r 
        r   r  absurd coming
original assumption kb     kb     holds kb   kb   coherent
consistent kb       kb    
  postulates construction
second part proof  consider operator   satisfies postulates
theorem    let     function based   defined follows 
q
q
     kb        x   x x x kb   x
     kb      
let kb       d             kb      ontology resulting removing kb  
tgds selected       then  let     d another function based   defined follows 
 
 
   d  kb      
    d  kb         x   x x x kb   x
 

based     d     define new operator follows 
kb         d        d  kb                kb     
show    datalog ontology consolidation operator based cluster
contraction  this  first prove     d well defined data incision function
    well defined constraint incision function  is  given    
prove that 
      well defined  i e   kb     kb          kb            kb     
q
q
definition          kb        x   x x x
kb  
x
    kb      
consider
arbitrary
x      kb      since kb     kbq
  lemma  
 q
q
q q
q
kbq
 
 
since
x


 kb
  

x

x

  thus holds
 
   
kb  
kb  

 
q
x x kb       
q
q
besides  since x x kb   x     thus  since x
    kb      x
  kb     
since kb     kb     fact   function kb       kb     
holds x
  kb      thus  x
    kb        
       q
qit follows x      kb     holds x  y  


    kb       definition          kb     
kb  
thus kb     kb          kb            kb     
   

fidatalog ontology consolidation

       kb    

sq
q
  kb     

follows directly q
definition       since every x      kb     holds
q
x x x kb   first condition definition 
  x

q
q

ey

q

   x   y      kb          
q
q
q
suppose reductio
exists x kb   kb       

x  y      kb         
q
q
then  holds
       kb
  
i e  


 
x

   kb      
 
kb  
q
hypothesis kb   x  thus x  therefore
must hold    kb       extension kb     
kb  

kb  

since holds arbitrary      definition  
holds minimal unsatisfiable set tgds w r t  e nc     then 
relevant set atoms holds mods a  e nc       then  since
    relevant set a  holds mods a        e nc      
tgds triggered a    then      unsatisfiable set tgds w r t 
e nc    
however  coherence kb     coherent  thus     satisfiable
w r t  e nc    
    satisfiable w r t  e nc       unsatisfiable
w r t  e q
nc     absurd
coming initial supposition
q
q
exists
x kb   kb



 
 
 


x

 y
     kb         
 
q
q
q
andtit holds x kb   kb   x    
 y      kb          
q
q
holds    x      kb      exists
  x
kb  
r x r satisfies two previous conditions r    
prove sufficient show that  clusters disjoint sets  election
cluster optimal  otherwise exists cluster incision
function choose optimal way
q
q minimality would satisfied 
so  suppose reductio exists x kb      x      kb     
exist r x r satisfies two previous conditions r    
q
q
let us consider kb          d    kb      x holds
     y      kb      r     y  kb   kb       those formulas removed
obtaining kb         r    since     r  r  q

q
two conditions

definition
  

satisfied 
besides 
let
cf
 

 

 
 
kb
 
 
cf d    d    kb set formulas belong kernel  
d    respectively  let kb   cf     cf d  d   
fact every formula conflict belongs kb   kb  
built way election cluster different x
kb        kb     makes kb      x  kb   kb        kb        x      kb      
is  difference kb   kb     difference arise
election formulas remove x 
   

fideagustini  martinez  falappa   simari

finally  supposition exists r x r satisfies two
previous conditions r     let kb   r   r    x  kb  kb     
set formulas removed x obtaining kb     then  kb  
coherent consistent  since every conflict clusters kb   solved  whether
removing r  for cluster x  sets r   for every cluster different x   besides 
since kb      x  kb   kb        kb        x s     kb      r    
q
kb       kb          kb     kb     kb        q
r  r 
 x 
kb  

 r     kb   kb      r    x  kb   kb      holds kb     kb       
is  formulas involved conflicts belong kb     kb    
cluster different x formulas removed  set formulas
removed x obtain kb   strict subset removed      kb    
obtain kb      kb     strict subset kb     i e   removed formulas
deleting deleting r 
hand  since kb   coherent consistent  minimality
kb       kb       
 
therefore          kb     kb   kb
q
q       kb   absurd
   x
coming initial supposition exists x
kb  
     kb      exists r x
r
satisfies

two
previous
conditions
q
q
r     x

holds


 
 x


     kb     
kb  
exists r x r satisfies two previous conditions
r   t 
omit proof     d well defined data incision function using consistency
minimality since analogous proof     well defined constraint
incision function using coherence minimality 
shown     d     well defined data incision functions
constraint incision functions  respectively  conclude second part proof
show    coincides    inclusion follows d    d 
           also  definition     d follows     d  kb        d    d    
definition     follows      kb                    then 
        d      d        d  kb                     kb      thus     
 d        d  kb                kb       therefore    coincides   

references
alchourron  c   gardenfors  p     makinson  d          logic theory change 
partial meet contraction revision functions  journal symbolic logic         
       
alchourron  c     makinson  d          hierarchies regulation logic  new
studies deontic logic         
alchourron  c     makinson  d          logic theory change  safe contraction 
studia logica             
amgoud  l     kaci  s          argumentation framework merging conflicting knowledge bases  prioritized case  proc   th european conferences symbolic
   

fidatalog ontology consolidation

quantitative approaches reasoning uncertainty  ecsquaru      pp 
       
andritsos  p   fuxman  a     miller  r  j          clean answers dirty databases 
probabilistic approach  proc    nd international conference data engineering  icde      p     
arenas  m   bertossi  l  e     chomicki  j          consistent query answers inconsistent databases  proc    th acm sigact sigmod sigart symposium
principles database systems  pods      pp       
arieli  o   denecker  m     bruynooghe  m          distance semantics database repair 
annals mathematics artificial intelligence                   
baader  f   brandt  s     lutz  c          pushing el envelope  proc    th
international joint conference artificial intelligence  ijcai      pp         
baader  f   calvanese  d   mcguinness  d  l   nardi  d     patel schneider  p  f   eds   
        description logic handbook  theory  implementation  applications 
cambridge university press 
baral  c   kraus  s     minker  j          combining multiple knowledge bases  transactions knowledge data engineering                
bell  d  a   qi  g     liu  w          approaches inconsistency handling descriptionlogic based ontologies  proc  move meaningful internet systems
 otm  workshops      pp           
beneventano  d     bergamaschi  s          incoherence subsumption recursive
views queries object oriented data models  data knowledge engineering 
               
berners lee  t   hendler  j     lassila  o          semantic web  scientific american 
            
bienvenu  m     rosati  r          tractable approximations consistent query answering
robust ontology based data access  proc    rd international joint conference
artificial intelligence  ijcai      pp         
black  e   hunter  a     pan  j  z          argument based approach using multiple ontologies  proc   rd international conference scalable uncertainty
management  sum      pp       
bohannon  p   flaster  m   fan  w     rastogi  r          cost based model effective heuristic repairing constraints value modification  proc    th acm
sigmod international conference management data   principles database
systems  pods      pp         
booth  r   meyer  t  a   varzinczak  i  j     wassermann  r          horn belief change 
contraction core  proc    th european conference artificial intelligence
 ecai      pp           
borgida  a          description logics data management  transactions knowledge
data engineering                
   

fideagustini  martinez  falappa   simari

brandt  s          polynomial time reasoning description logic existential restrictions  gci axioms    else   proc    th european conference
artificial intelligence  ecai      pp         
cal  a   gottlob  g     kifer  m          taming infinite chase  query answering
expressive relational constraints  brewka  g     lang  j   eds    proc    th
international conference principles knowledge representation reasoning
 kr      pp        aaai press 
cal  a   gottlob  g     kifer  m          taming infinite chase  query answering
expressive relational constraints  journal artificial intelligence research     
       
cal  a   gottlob  g     lukasiewicz  t          general datalog based framework
tractable query answering ontologies  journal web semantic           
cal  a   lembo  d     rosati  r          decidability complexity query answering inconsistent incomplete databases  proc    nd acm sigmod
symposium principles database systems  pods      pp          acm 
calvanese  d   de giacomo  g   lembo  d   lenzerini  m     rosati  r          dl lite 
tractable description logics ontologies  aaai  pp         
caroprese  l   greco  s     zumpano  e          active integrity constraints database
consistency maintenance  transactions knowledge data engineering         
         
caroprese  l     truszczynski  m          active integrity constraints revision programming  theory practice logic programming                 
cecchi  l   fillottrani  p     simari  g  r          complexity delp
game semantics  dix  j     hunter  a   eds    proc    th international workshop non monotonic reasoning  nmr      pp         
cholvy  l          reasoning merged information  belief change  vol     pp 
        springer netherlands 
croitoru  m     rodriguez  r  o          using kernel consolidation query answering
inconsistent obda  proc  joint ontology workshops      episode   
argentine winter ontology 
delgrande  j  p          revising inconsistent set formulas  proc    nd
international joint conference artificial intelligence  ijcai      pp         
delgrande  j  p   dubois  d     lang  j          iterated revision prioritized merging 
proc    th international conference principles knowledge representation
reasoning  kr      pp         
delgrande  j  p     jin  y          parallel belief revision  revising sets formulas 
artificial intelligence                    
delgrande  j  p   schaub  t   tompits  h     woltran  s          merging logic programs
answer set semantics  proc    th international conference logic programming  iclp      pp         
   

fidatalog ontology consolidation

dunne  p     wooldridge  m          argumentation artificial intelligence  chap  complexity abstract argumentation  pp         springer 
everaere  p   konieczny  s     marquis  p          conflict based merging operators 
proc    th international conference principles knowledge representation
reasoning  kr      pp         
falappa  m  a   kern isberner  g   reis  m  d  l     simari  g  r          prioritized
non prioritized multiple change belief bases  journal philosophical logic         
      
falappa  m  a   kern isberner  g     simari  g  r          belief revision  explanations
defeasible reasoning  artificial intelligence           
flouris  g   huang  z   pan  j  z   plexousakis  d     wache  h          inconsistencies 
negations changes ontologies  proc    st national conference artificial
intelligence  aaai      pp           
friedman  n     halpern  j  y          belief revision  critique  computer research
repository  corr   cs ai         
fuhrmann  a          theory contraction base contraction  journal philosophical logic             
gardenfors  p          rule rational changes belief  philosophical essay dediccated
lennart aqvist fiftieth birthday        
gardenfors  p          knowledge flux  modeling dynamics epistemic states  mit
press 
gelfond  m          answer sets  handbook knowledge representation  chap     pp 
        elsevier 
gomez  s  a   chesnevar  c  i     simari  g  r          reasoning inconsistent
ontologies argumentation  applied artificial intelligence                   
greco  s     molinaro  c          probabilistic query answering inconsistent databases 
annals mathematics artificial intelligence  amai                    
haase  p   van harmelen  f   huang  z   stuckenschmidt  h     sure  y          framework handling inconsistency changing ontologies  proc   th international
semantic web conference  iswc      pp         
halaschek wiener  c     katz  y          belief base revision expressive description
logics  proc  international workshop owl  experiences directions
 owled     
hansson  s  o          belief base dynamics  ph d  thesis  uppsala university  department
philosophy  uppsala  sweden 
hansson  s  o          theory contraction base contraction unified  journal symbolic
logic                 
hansson  s  o          kernel contraction  journal symbolic logic                 
hansson  s  o          semi revision  journal applied non classical logics          
       
   

fideagustini  martinez  falappa   simari

hansson  s  o          textbook belief dynamics  solutions exercises  kluwer
academic publishers  norwell  ma  usa 
harman  g          change view  principles reasoning  cambridge university press 
harper  w          rational belief change  popper functions counterfactuals  synthese             
horridge  m   parsia  b     sattler  u          explaining inconsistencies owl ontologies 
scalable uncertainty management  pp          springer 
huang  z   van harmelen  f     ten teije  a          reasoning inconsistent ontologies 
proc    th international joint conference artificial intelligence  ijcai     
pp         
hue  j   papini  o     wurbel  e          merging belief bases represented logic programs  proc    th european conference symbolic quantitative approaches reasoning uncertainty  ecsqaru      pp         
kalyanpur  a   parsia  b   horridge  m     sirin  e          finding justifications
owl dl entailments  springer 
kalyanpur  a   parsia  b   sirin  e     hendler  j  a          debugging unsatisfiable classes
owl ontologies  web semantics  science  services agents world wide
web                
katsuno  h     mendelzon  a  o          difference updating knowledge base revising it  proc   nd international conference principles
knowledge representation reasoning  kr     pp         
katsuno  h     mendelzon  a  o          propositional knowledge base revision minimal change  artificial intelligence                 
konieczny  s     perez  r  p          merging information constraints  logical
framework  journal logic computation                 
konieczny  s     perez  r  p          logic based merging  journal philosophical logic 
               
lembo  d   lenzerini  m   rosati  r   ruzzi  m     savo  d  f          inconsistencytolerant semantics description logics  proc   th international conference
web reasoning rule systems  rr      pp         
lenzerini  m          data integration  theoretical perspective  proc    st acm
sigmod symposium principles database systems  pods      pp         
levi  i          subjunctives  dispositions chances  synthese                 
liberatore  p     schaerf  m          arbitration  or merge knowledge bases  
knowledge data engineering               
lin  j     mendelzon  a  o          merging databases constraints  international
journal cooperative information systems              
lin  j     mendelzon  a  o          knowledge base merging majority  applied logic
series             
   

fidatalog ontology consolidation

lloyd  j  w          foundations logic programmming  springer verlag 
lukasiewicz  t   martinez  m  v     simari  g  i          inconsistency handling
datalog    ontologies  proc    th european conference artificial intelligence  ecai      pp         
martinez  m   pugliese  a   simari  g   subrahmanian  v     prade  h          dirty
relational database  axiomatic approach  mellouli  k   ed    proc 
 th european conference symbolic quantitative approaches reasoning
uncertainty  ecsqaru      vol       lecture notes computer science  pp 
        springer 
meyer  t   lee  k     booth  r          knowledge integration description logics 
veloso  m     kambhampati  s   eds    proceedings aaai    twentieth national
conference artificial intelligence  pp          aaai press 
newell  a          knowledge level  artificial intelligence            
nilsson  u     maluszynski  j          logic  programming prolog   ed   john wiley
  sons ltd 
parsons  s   wooldridge  m     amgoud  l          properties complexity
formal inter agent dialogues  journal logic computation                 
qi  g     hunter  a          measuring incoherence description logic based ontologies 
proc   th international semantic web conference  nd asian semantic
web conference  iswc aswc      pp         
qi  g   liu  w     bell  d  a          knowledge base revision description logics 
proc    th european conference logics artificial intelligence  jelia     
pp         
quine  w  v  o          philosophy logic  harvard university press 
reiter  r          theory diagnosis first principles  artificial intelligence        
     
rosati  r          complexity dealing inconsistency description logic
ontologies  proc  international joint conference artificial intelligence  ijcai
     pp           
rott  h          modellings belief change  prioritization entrenchment  theoria 
             
schlobach  s     cornet  r          non standard reasoning services debugging
description logic terminologies   proceedings eighteenth international joint
conference artificial intelligence  ijcai      pp         
schlobach  s   huang  z   cornet  r     van harmelen  f          debugging incoherent
terminologies  journal automated reasoning                 
staworko  s   chomicki  j     marcinkowski  j          prioritized repairing consistent query answering relational databases  annals mathematics artificial
intelligence                   
   

fideagustini  martinez  falappa   simari

turner  h          strong equivalence made easy  nested expressions weight constraints 
theory practice logic programming                  
von leibniz  g  w  f          philosophical papers letters  selection  vol     springer 
wassermann  r          algorithm belief revision  proc  international conference principles knowledge representation reasoning  kr      pp     
    
wijsen  j          database repairing using updates  acm transaction database systems                 

   


