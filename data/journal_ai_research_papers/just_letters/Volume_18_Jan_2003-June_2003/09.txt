journal of artificial intelligence research                  

submitted        published     

a new general method to generate random modal formulae for
testing decision procedures
peter f  patel schneider

pfps   research   bell   labs   com

bell labs research
    mountain ave  murray hill  nj        usa

roberto sebastiani

rseba   dit  unitn   it

dip  di informatica e telecomunicazioni
universita di trento
via sommarive     i        trento  italy

abstract
the recent emergence of heavily optimized modal decision procedures has highlighted the key
role of empirical testing in this domain  unfortunately  the introduction of extensive empirical tests
for modal logics is recent  and so far none of the proposed test generators is very satisfactory  to
cope with this fact  we present a new random generation method that provides benefits over previous methods for generating empirical tests  it fixes and much generalizes one of the best known
methods  the random cnf  test  allowing for generating a much wider variety of problems  covering in principle the whole input space  our new method produces much more suitable test sets for
the current generation of modal decision procedures  we analyze the features of the new method
by means of an extensive collection of empirical tests 

   motivation and goals
heavily optimized systems for determining satisfiability of formulae in propositional modal logics are now available  these systems  including dlp  patel schneider         fact  horrocks 
        sat  giunchiglia  giunchiglia    tacchella         mspass  hustadt  schmidt    weidenbach         and racer  haarslev   moller         have more optimizations and are much
faster than the previous generation of modal decision procedures  such as lean k  beckert   gore 

       l ogics w orkbench  heuerding  jager  schwendimann    seyfreid         ke  pitt  
cunningham        and k sat  giunchiglia   sebastiani          
as with most theorem proving problems  neither computational complexity nor asymptotic algorithmic complexity is very useful in determining the effectiveness of optimizations  so that their
effectiveness has to be determined by empirical testing  horrocks  patel schneider    sebastiani 
       empirical testing directly gives resource consumption in terms of compute time and memory
use  it factors in all the pieces of the system  not just the basic algorithm itself  empirical testing
can be used not only to compare different systems  but also to tune a system with parameters that
can be used to modify its performance  moreover  it can be used to show what sort of inputs the
system handles well  and what sort of inputs the system handles poorly 
unfortunately  the introduction of extensive empirical tests for modal logics is recent  and so
far none of the proposed test methodologies are very satisfactory  some methods contain many



   for a more complete list see renate schmidts web page listing theorem provers for modal logics at
http   www cs man ac uk schmidt tools  
c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fipatel  s chneider   s ebastiani

formulae that are too easy for current heavily optimized procedures  some contain high rates of
trivial or insignificant tests  some generate problems that are too artificial and or are not a significant
sample of the input space  finally  some methods generate formulae that are too big to be parsed
and or handled 
for the reasons described above  we presented  horrocks et al         an analytical survey of
the state of the art of empirical testing for modal decision procedures  here instead we present a
new random generation method that provides benefits over previous methods for generating empirical tests  built on some preliminary work  horrocks et al          our new method fixes and much
generalizes the  cnf  methodology for randomly generating clausal formulae in modal logics
 giunchiglia   sebastiani        hustadt   schmidt        giunchiglia  giunchiglia  sebastiani 
  tacchella        used in many previous empirical tests of modal decision procedures  it eliminates or drastically reduces the influence of a major flaw of the previous method    and allows for
generating a much wider variety of problems 
in section   we recall a list of desirable features for good test sets  in section   we briefly
survey the state of the art test methods  in sections   and   we present and discuss the basic and
the advanced versions of our new test method respectively  and evaluate their features by presenting
a large amount of empirical results  in section   we provide a theoretical result showing how
the advanced version of our method  in principle  can cover the whole input space  in section  
we discuss the features of our new method  and compare it wrt  the state of the art methods  in
section   we conclude and indicate possible future research directions 
a   page system description of our random generator has been presented at ijcar      patelschneider   sebastiani        

   desirable features for good test sets
the benefits of empirical testing depend on the characteristics of the inputs provided for the testing 
as empirical testing only provides data on these particular inputs  if the inputs are not typical or
suitable  then the results of the empirical testing will not be useful  this means that the inputs
for empirical testing must be carefully chosen  with horrocks  horrocks et al         we have
previously proposed and motivated the following key criteria for creating good test sets 
representativeness  the ideal test set should represent a significant sample of the whole input
space  a good empirical test set should at least cover a large area of inputs 
difficulty  a good empirical test set should provide a sufficient level of difficulty for the system s 
being tested   some problems should be too hard even for state of the art systems  so as to
be a good benchmark for forthcoming systems  
termination  to be of practical use  the tests should terminate and provide information within a
reasonable amount of time  if the inputs are too hard  then the system may not be able to
provide answers within the established time  this inability of the system is of interest  but
can make system comparison impossible or insignificant 
   that is  a significant amount of inadvertently trivial problems are generated unless the parameter p is set to    horrocks et al          see section     for a full discussion of this point 

   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

scalability  the difficulty of problems should scale up  as comparing absolute performances may
be less significant than comparing how performances scale up with problems of increasing
difficulty 
valid vs  not valid balance  in a good test set  valid and not valid problems should be more or
less equal both in number and in difficulty  moreover  the maximum uncertainty regarding the
solution of the problems is desirable 
reproducibility  a good test set should allow for easily reproducing the results 
the following criteria derive from or are significant sub cases of the main criteria above 
parameterization  parameterized inputs with sufficient parameters and degrees of freedom allow
the inputs to range over a large portion of the input space 
control  in particular  it is very useful to have parameters that control monotonically the key features of the input test set  like the average difficulty and the valid vs  non valid rate 
modal vs  propositional balance  reasoning in modal logics involves alternating between two orthogonal search efforts  pure modal reasoning and pure propositional reasoning  a good test
set should be challenging from both viewpoints 
data organization  the data should be summarizable so as to make a comparison possible with
a limited effort and plottable so as to enable the qualitative behavior of the system s  to
be highlighted 
finally  particular care must be taken to avoid the following problems 
redundancy  empirical test sets must be carefully chosen so as not to include inadvertent redundancy  they should also be chosen so as not to include small sub inputs that dictate the result
of the entire input 
triviality  a good test set should be flawless  that is  it should not contain significant subsets of
inadvertent trivial problems 
artificiality  a good empirical test set should correspond closely to inputs from applications 
over size  the single problems should not be too big w r t  their difficulty  so that the resources
required for parsing and data managing do not seriously influence total performance 
these criteria  which are described and motivated in detail by horrocks et al          have been
proposed after a five year debate on empirical testing in modal logics  giunchiglia   sebastiani 
      heuerding   schwendimann        hustadt   schmidt        giunchiglia et al        
horrocks   patel schneider          notice that some of these criteria are identical or similar to
those suggested by heuerding   schwendimann        
the above criteria are general  and in some cases they require some interpretation  first  some
of them have to be implicitly interpreted as unless the user deliberately wants the contrary for some
reason  for instance  it might be the case that one wants to deliberately generate easy problems 
e g   to be sure that the tested procedure does not take too much time to solve them  or redundant
   

fipatel  s chneider   s ebastiani

problems  e g   to test the effectiveness of some redundancy elimination technique  or satisfiable
problems only  e g   to test incomplete procedures  to this extent  the key issue here is having a
reasonable form of control over these features  so that one can address not only general purpose
criteria  but also specific desiderata 
second  in some cases  there may be a tradeoff between two distinct criteria  so that it may
be necessary to choose only one of them  or to make a compromise  one example is given by
redundancy and artificiality  in some real world problems large parts of the knowledge base are
irrelevant for the query  whose result is determined by a small subpart of the input  in this sense
eliminating such redundancies may make problems more artificial 
particular attention must be paid to the problem of triviality  as it has claimed victims in many
areas of ai  in fact  flaws  i e   inadvertent trivial problems  have been detected in random generators
for sat  mitchell  selman    levesque         csp  achlioptas  kirousis  kranakis  krizanc  molloy    stamatiou        gent  macintyre  prosser  smith    walsh         modal reasoning  hustadt   schmidt        and qbf  gent   walsh         thus  the notion of trivial  and thus
flawed  deserves more comment 
in the work by achlioptas et al         flawed problems are those solvable in linear time by
standard csp procedures  due to the undesired presence of implicit unary constraints causing some
variables value to be inadmissible  a similar notion holds for sat  mitchell et al         and qbf
 gent   walsh         in the literature of modal reasoning  instead  the typical flawed problems
are those whose  un satisfiability can be verified directly at propositional level  that is  without
investigating any modal successors  this kind of problems are typically solved in negligible time
w r t  other problems of similar size and depth  hustadt   schmidt        giunchiglia et al        
horrocks et al           thus  with a little abuse of notation and when not otherwise specified  in
this paper we will call trivially  un satisfiable the problems of this kind   

   an overview of the state of the art
previous empirical tests have mostly been generated by three methods  hand generated formulae
 heuerding   schwendimann         randomly generated clausal modal formulae  giunchiglia  
sebastiani        hustadt   schmidt        giunchiglia et al          and randomly generated
quantified boolean formulae that are then translated into modal formulae  massacci        
we have already presented a detailed analysis of these three methods  horrocks et al         
here we present only a quick overview of the latter two methods  as we will refer to them in following sections  
    the  cnf  random tests
in the  cnf  test methodology  giunchiglia   sebastiani        hustadt   schmidt       
giunchiglia et al          the performance of a system is evaluated on sets of randomly generated  cnf  formulae  a cnf  formula is a conjunction of cnf  clauses  where each clause
   of course here by modal we implicitly assume the modal depth be strictly greater than zero  that is  we do not
consider purely propositional formulas 
   notice that we do not use the more suitable expression propositionally  un satisfiable because the latter has been
used with a different meaning in the literature of modal reasoning  see  e g   giunchiglia   sebastiani              
   the first method  heuerding   schwendimann        is obsolete  as the formulae generated are too easy for current
state of the art deciders  horrocks et al         

   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

is a disjunction of either propositional or modal literals  a literal is either an atom or its negation 

modal atoms are formulae of the form    where  is a cnf  clause  a  cnf  formula is a
cnf  formula where all clauses have exactly   literals 
      t he r andom g enerator
a  cnf  formula is randomly generated according to five parameters  the  maximum  modal
depth    the number of clauses in the top level conjunction    the number of propositional variables

  the number of distinct box symbols    and the probability  of an atom occurring in a clause at
depth   being purely propositional 
the random  cnf  generator  in its final version  giunchiglia et al          works as follows 
a  cnf  formula of depth  is produced by randomly generating
depth    and forming their conjunction 



a  cnf  clause of depth  is produced by randomly generating three distinct  under commutativity of disjunction   cnf  atoms of depth    negating each of them with probability
     and forming their disjunction 











a propositional atom is produced by picking randomly an element of
uniform probability 

 cnf  clauses of

fffifi

with

a  cnf  atom of depth  is produced by generating with probability  a random
   
  
  where
is picked
propositional atom  and with probability   a  cnf  atom

  

randomly in ff 
 and
is a randomly generated  cnf  clause of depth     

recently horrocks and patel schneider        have proposed a variant of the  cnf  random
 
generator of giunchiglia et al          they added four extra parameters      and     representing
 
   respectively the probability that a propositional and modal atom is negated  and      and  
 
representing respectively the minimum and maximum number of modal literals in a clause  with
equal probability for each number in the range  for their experiments  they always set          
 
    and         
      to this extent   cnf  formulas can be generated as in the generator of
 
    
    giunchiglia et al         by setting        
      and  
   
     
      t est m ethod   data a nalysis
the  cnf  test method works as follows  a typical problem set is characterized by a fixed

      and     is varied in such a way as to empirically cover the      satisfiable    
unsatisfiable transition  then  for each tuple of the parameters values  data point from now on 
in a problem set  a certain number of  cnf  formulae are randomly generated  and the resulting
formulae are given in input to the procedure under test  with a maximum time bound  satisfiability
rates  median percentile values of the cpu times  and median percentile values of other parameters 
e g   number of steps  memory  etc   are plotted against the number of clauses  or the ratio of

clauses to propositional variables     
    the random qbf tests
in qbf based benchmarks  such as part of the tancs   benchmarks  massacci          system performances are evaluated on sets of random quantified boolean formulae  which are gener   

fipatel  s chneider   s ebastiani

ated according to the method described by cadoli  giovanardi  and schaerf        and gent and
walsh        and then converted into modal logic by using a variant of the conversion by halpern
and moses        
      t he r andom g enerator





random qbf formulae are generated with alternation depth
and at most
variables at each
alternation  the matrix is a random propositional cnf formula with  clauses of length   with
some constraints on the number of universally and existentially quantified variables within each
clause   this avoids the problem of generating flawed random qbf formulae highlighted by gent
  walsh         for instance  a random qbf formula with        
looks like 

 
 ff
fi  
ff

  
fi   ff
fi  ff
  
   
here  is a random cnf formula with parameters    and   we will denote with  and 
the total number of universally and existentially quantified variables respectively  clearly  both 
and  are        moreover    is the modal formula resulting from halpern and moses  
conversion  so both the depth and the number of propositional variables of   are also        
 

 



  

 

   











      t est m ethod   data a nalysis
the test method  as it was used in the tancs competition s   massacci         works as follows 
the tests are performed on single data points  for each data point  a certain number of qbf
formulae are randomly generated  converted into modal logics and the resulting formulae are given
as input to the procedure being tested  with a maximum time bound  the number of tests which
have been solved within the time limit and the geometrical mean time for successful solutions are
then reported  data are rescaled to abstract away machine and run dependent characteristics  this
results typically in a collection of tables presenting a data pair for each system under test  one data
point per row 

   a new cnf  generation method  basic version
from our previous analysis  horrocks et al         we have that none of the current methods are
completely satisfactory  to cope with this fact  we propose here what we believe is a much more satisfactory method for randomly generating modal formulae  the new method can be seen as an improved and much more general version of the random  cnf  generation method by giunchiglia
et al         
we present our new method by introducing incrementally its new features in two main steps  in
this section we introduce a basic version of the method  wherein






we provide a new interpretation for the parameter   section      that allows for varying 
without causing the flaws described in horrocks et al          and
we extend the interpretation for the parameter   section       providing a more fine grained
way for tuning the difficulty of the generated formulae 

in section    we present the full  advanced version of the method  wherein
   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae




we further extend the parameters  and    allowing for shaping explicitly the probability
distribution of the propositional modal rate and the clause length respectively  section      
and



we allow  and  vary with the nesting depth of the subformulae  section       allowing for
different distributions at different depths 

to investigate the properties of our cnf  generator we also present a series of experiments with
appropriate settings either to mimic previous generation methodologies or to produce improved or
new kinds of tests 
in all tests we have adopted the testing criteria of the  cnf  method  for each test set  we
fixed all parameters except    which was varied to span at least the satisfiability transition area 
 because of the valid vs  non valid balance feature of section    we consider the transition area


to be the interesting portion of the test set   for almost all test sets we varied  from to    



  or     resulting in integral values for   
ranging from  to          or     for each
  
value of  we generated     formulae  a sufficient number to produce reasonably reliable data  a
time limit of      seconds was imposed on each attempt to determine the satisfiability status of a
formula  as it is common practice  we set the number of boxes  to  throughout our testing  this
setting for  produces the hardest formulae  giunchiglia   sebastiani        hustadt   schmidt 
      giunchiglia et al          we performed several test sets with similar parameters  often  but

not always  varying only  
we tested our formulae against two systems  dlp version      patel schneider        and
 sat version      tacchella         two of the fastest modal decision procedures  they are available at http   www bell labs com usr pfps dlp and http   www mrg dist unige it tac respectively 
all the code used to generate the tests is available at http   www bell labs com usr pfps dlp 
we plotted the results of our test groups  test sets with similar parameters  on six or four plots 
two plots were devoted to the performance of dlp  one showing the median and one showing the

  th percentile time taken to solve the formulae at each value of    plotted against      for those
test groups were we ran  sat we also plotted the median and   th percentile for  sat 
we also plotted the fraction of the formulae that are determined to be satisfiable or unsatisfiable
by dlp within the time limit   to save space  satisfiability and unsatisfiability fractions are plotted
together on a single plot  satisfiability fractions are higher on the left side of the plot while unsatisfiability fractions are higher on the right  this multiple plotting does obscure some of the details 
but the only information that we are interested in here is the general behavior of the fractions  which
is not obscured  in fact  the multiple plotting serves to highlight the crossover regions  where the
satisfiability and unsatisfiability fractions are roughly equal 
finally  we plotted the fraction of the formulae where dlp finds a model or determines that
the formula is unsatisfiable without investigating any modal successors  we call these fractions
the trivial satisfiability and trivial unsatisfiability fractions  these last fractions are an estimate
of the number of formulae that are satisfiable in a kripke structure with no successors like  e g  
  fi  and that have no propositional valuations like  e g     fi  fi   respecfi 
tively  for various reasons  discussed below  they are better indicators of triviality than the more








 







fi 

   notice that the two curves are symmetric with respect to     if and only if no test exceeds the time limit  e g   if
at some point     of the tests are determined to be satisfiable by dlp      are determined to be unsatisfiable and
ff      
    are not solved within the time limit  then the two curves are not symmetric at that point  as   
fi

   

fipatel  s chneider   s ebastiani

formal measures used in previous papers  again  trivial satisfiability and unsatisfiability fractions
are plotted together on a single plot 
to reduce clutter on the plots  we used a line to show the results for each value of  we tested 
to distinguish between the various lines on a plot  we plotted every five or    data points with a
symbol  identified in the legend of the plot 
running the tests presented in this paper required some months of cpu time  because of this 
we ran our tests on a variety of machines  these machines range in speed from a    mhz sparc
ultra   to a    mhz sparc ultra   and had between    mb and    mb of main memory  no
machines were completely dedicated to our tests  but they were otherwise lightly loaded  each test
set was run on machines with the same speed and memory  direct comparison between different
groups of tests thus has to take into account the differences between the various test machines 
    reinterpreting the parameter 
one problem with the previous methods for generating cnf  formulae is that the generated formulae can contain pieces that make the entire formula easy to solve  this mostly results from the
presence of strictly propositional top level clauses  with the small number of propositional variables in most tests  required to produce reasonable difficulty levels for current systems   only a
few strictly propositional top level clauses are needed to cover all the combinations of the propositional literals and make the entire formula unsatisfiable  previous attempts to eliminate this trivial
unsatisfiability have concentrated on eliminating top level propositional literals by setting    
 hustadt   schmidt        giunchiglia et al           unfortunately this choice forces 
  
as for    such formulae are too hard for all state of the art systems   when each atom in a
clause is generated independently from the other atoms of the clause an approach that modifies the
probability of propositional atoms is necessary to eliminate these problematic clauses 



the first new idea of our approach  suggested previously  horrocks et al          works as
follows  instead of forbidding strictly propositional clauses except at the maximum modal depth    
by setting      we instead require that the ratio between propositional atoms in a clause and the
clause size be as close as possible to the propositional probability  for clauses not at the maximum
modal depth     





for clauses of size    if  is    for some integral   this results in all clauses not at modal
depth  having propositional atoms and  
modal atoms  for other values of    we allow
or   
propositional atoms in each clause not at modal depth    with probability
either   


and         respectively   for instance  if      and        then each clause
 
 
contains   propositional and   modal literal  and the third is propositional with probability      as


  this eliminates the possibility of strictly
 
   
   
 
      
    if 
   
propositional clauses  which are the main cause of trivial unsatisfiability  except at modal depth   

    

  

 
 fiff   fiff  fi



fi  

 

fiff

   other approaches to eliminating propositional unsatisfiability are possible  for example  it would be possible to
simply remove any strictly propositional clauses after generation  however  this technique would alter the meaning
of the parameter   that is  the actual probability for a literal to be propositional would become strictly smaller than
  and it will be out of the control of the user 


and
 
   remember that




                                            
   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  
l n

  

   

   

  

dlp median times

  

  
l n

  

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

   

   

  

 sat median times

  

  
l n

  

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

figure    results for

      m odal d epth



   

 

 

   

 

 

 

 

  

  

  and 

     

  
l n

  

   

   

 old method 



our first experiments were a direct comparison to previous tests  we generated cnf  formulae
with                    and          a setting that has been used in the past  and one that
exhibits some problematic behavior  we used both our new method and the old  cnf  generation
method by giunchiglia et al         briefly described in section      the old method from now
on   we also generated cnf  formulae with                    and       the standard
method for eliminating trivially unsatisfiable formulae   at     our new method is the same as
the old  cnf  generation method   the results of the tests are given in figures       and   
   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  
l n

  

   

   

  

dlp median times
    

  
l n

  

   

   

dlp   th percentile times
    

n  
n  
n  
n  
n  
n  
n  

   

  

n  
n  
n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

   

   

  

 sat median times
    

  
l n

  

   

   

 sat   th percentile times
    

n  
n  
n  
n  
n  
n  
n  

   

  

n  
n  
n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

figure    results for



   

   

 

   

 

  

 

 

  and 

     

  

  
l n

  

   

   

 our new method 

one aspect of this set of tests is that all three collections have many trivially unsatisfiable formulae out of the satisfiability transition area  even the collection with no top level propositional atoms 
the trivial unsatisfiability occurs in the collection with no top level propositional atoms because

 
    and both dlp and  sat detect
there are only a few top level modal atoms  e g   for
clashes between complementary modal literals without investigating any modal successors 
the presence of this large number of trivially unsatisfiable formulae is not actually a serious
problem with these tests  the trivial unsatisfiability only shows up after the formulae are almost

 
    which is trivial to
all unsatisfiable already and easy to solve  the only exception is for
solve anyway  however  our new generation method considerably reduces the number of trivially
unsatisfiable formulae and almost entirely removes them from the satisfiable unsatisfiable transition



   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  
l n

  

   

   

  

dlp median times

  

  
l n

  

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

   

   

  

 sat median times

  

  
l n

  

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  
l n

  

figure    results for



   

   

   

 

 

  

 

 

  and 

  

  

  
l n

  

   

   

 either method  

area  there are some trivially satisfiable formulae in this set of tests  but only a few  and only for
the smallest clause sizes  their presence does not affect the difficulty of the generated formulae 
the two methods with        are relatively close in maximum difficulty  with our new method
generating somewhat harder formulae  however  our method produces difficult formulae  for both

dlpand  sat  over a much broader range of   
than does the original method 
changing to     results in formulae that are orders of magnitude harder  this is not good 
previous arguments to the contrary notwithstanding  as we would like to have a significant number
of reasonable test sets to work with  and     allows only consideration of a very few values for

before the formulae are totally impossible to solve with current systems  resulting in very few
reasonable test sets 
   

fipatel  s chneider   s ebastiani

so  at a maximum modal depth of     our method results in formulae that are of similar
difficulty to the previously generated formulae and still have trivially unsatisfiable formulae  but
ones that do not seriously affect the difficulty of the test sets 
      m odal d epth



restricting attention to a maximum modal depth of     is not very useful  formulae with maximum modal depth of  are not representative of modal formulae in general  particularly as they
have no nested modal operators  sticking to a maximum modal depth of  seriously limits the
significance of the generated tests 
we would thus like to be able to perform interesting experiments with larger maximum modal
depths  so we performed a set of experiments with a maximum modal depth of   
  we started
with a set of tests that corresponds to previously performed experiments 
at depth   
  in the old method for        the time curves are dominated by a half dome
shape  whose steep side shows up where the number of trivially unsatisfiable formulae becomes
large before the formulae become otherwise easy to solve  as shown in figure    in fact  nearly all
the unsatisfiable formulae here are trivially unsatisfiable 
this is an extremely serious flaw  as the difficulty of the test set is being drastically affected
by these trivially unsatisfiable formulae  changing to     is not a viable solution because at
depth   
such formulae are much too difficult to solve  as shown in figure    where the median
percentile exceeds the timeout before any formulae can be determined to be unsatisfiable  even for
  propositional variables 
with our new method  as shown in figure    the formulae are much more difficult to solve than
the old method  because there is no abrupt drop off from propositional unsatisfiability  but they are
much easier to solve than those generated with       further  trivially unsatisfiable formulae do
not appear at all in the interesting portion of the test sets 
          is not entirely suitable  the formulae
nevertheless this choice of parameters    
are becoming too hard much too early  in particular  there are no unsatisfiable formulae that can

be solved for

    and thus the unsatisfiability plots cannot be distinguished from the x axis
 recall footnote     however  our new method does provide some advantages already  providing an
interesting new set of tests  albeit one of limited size 









    increasing 



fiff

we would like to be able to produce better test sets for depth   
and greater  one way of
doing this is to increase the propositional probability  from     to something like     increasing
the number of propositional atoms and thus decreasing the difficulty of the generated formulae 
this would be very problematic with previous generation methods as it would result in the trivially
unsatisfiable formulae determining the results for even smaller numbers of clauses    but with our
method here it is not much of a problem 
to investigate the increasing of the the propositional probability  we ran a collection of tests with
maximum modal depth   
and propositional probability      with both the old method and
our new method  the results of these tests are given in figures   and    as before  the asymmetries

between the satisfiability and unsatisfiability curves in figure   for      are due to the fact that
many tests are not solved by dlp within the time limit  c f   footnote    

fiff



   

ff

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

  

  

   
l n

   

   

   

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

figure    results for



   

 

 

   

 

   

 

  

 

   and
 

  



  

     

  

   
l n

   

   

   

 old method 

as expected  the old method produces large numbers of trivially unsatisfiable formulae  these
trivially unsatisfiable formulae show up much earlier than with          making the tests considerably easier  especially for  sat 
our new method produces hard formulae  but ones that are quite a bit easier than for         

 
in particular  dlp solved all instances within the time limit for
  trivially unsatisfiable
formulae do show up  but only well after the formulae are already unsatisfiable  and they do not
significantly affect the difficulty of the tests 
so our method allows the creation of more interesting tests at modal depths greater than   
simply by adjusting  to a value where the level of difficulty is appropriate  trivial unsatisfiability
is not a problem  whereas in the old method it was the most important feature of the test 
   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  

   

   

   

   

   

   

   

   

 

n  
n  
n  

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

  

  

   
l n

   

   

   

   

   

dlp   th percentile times

    

    

n  
n  
n  

   

   

  

  

 

 

   

   

    

n  
n  
n  

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times

    

    

n  
n  
n  

   

   

  

  

 

 

   

   

    

n  
n  
n  

    
  

  

  

  

   
l n

   

   

figure    results for



   

 

 

   

 

   

 

  

 

   and
 



  

  

  

  

   
l n

   

   

   

 either method 

    changing the size of clauses
a problem with increasing the propositional probability is that formulae become too propositional
that is  the source of difficulty becomes more and more the propositional component of the problem  and not the modal component  as we are interested in modal decision procedures  we do not
want the main  or only  source of difficulty to be propositional reasoning 
we decided  therefore  to investigate a different method for modifying the difficulty of the generated formulae  we instead allow the number of literals in a clause  to vary in a manner similar to
the number of propositional atoms  if  is an integer then each clause has that many literals  otherwise  we allow either  or  literals in each clause  with probability    and     

    

  

   

  

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

    

  

   
l n

   

   

   

   

   

dlp   th percentile times
    

n  
n  
n  
n  

   

  

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

    

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times
    

n  
n  
n  
n  

   

  

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

figure    results for

   



   

   

   

 

   

 

 

  

   and
 



  

  

     

  

   
l n

   

   

   

 our new method 

respectively  we then determine the number of propositional atoms in each clause based on the
number of literals in that clause 
we generated cnf  formulae with   
      
     
   and         the change from


    to
 
   produces fewer disjunctive choices and should result in easier formulae  the
results of these tests are given in figure   
these formulae are much easier than those generated with        although they are still quite
hard and form a reasonable source of testing data  trivially unsatisfiable formulae appear in large
numbers only well after the formulae are all unsatisfiable and relatively easy 
to further illustrate the reduction in difficulty with smaller values of  we generated formulae
     
         and          as shown in figure     these formulae are even easier
using   





 

   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

  

  

   
l n

   

   

   

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

figure    results for



   

 

 

   

 

   

 

  

 

   and
 

  



  

  

fiff

   

   
l n

   

   

   

 old method 



than for   
     trivially unsatisfiable formulae do appear  but again only after the formulae
become all unsatisfiable  and not until the formulae become easy  particularly for  sat 
   we now have a reasonable set of formulae for maximum modal depth   
at   
 
with a maximum modal depth of   the formulae are much more representative than formulae with
maximum modal depth of    the formulae are neither too easy nor too hard for current modal
decision procedures so the satisfiability transition can be investigated for significant numbers of
propositional variables 
further  with this new method we can provide a collection of test sets that vary in difficulty

by varying    most previous comparative test sets varied   which is problematic because most

interesting parameter sets become too hard for small values of   in the range of to   







ff

   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

    

  

   
l n

   

   

   

   

   

dlp   th percentile times
    

n  
n  
n  
n  

   

  

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

    

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times
    

n  
n  
n  

   

   

  

  

 

 

   

   

    

n  
n  
n  

    
  

  

  

  

   
l n

   

   



figure    results for

   

   

   

 

   

 

 

  

   and
 



  

  

fiff

   

  

   
l n

   

   

   

 our new method 



 
to illustrate the effects of varying  we generated formulae using
              and

from  to    as shown in figure     this produces an interesting set of tests 
         varying
the difficulty levels can be set appropriately  trivially unsatisfiable formulae do appear  but only
after the formulae become unsatisfiable anyway  trivially unsatisfiable formulae do not influence
the difficulty of the test 

   fi

   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

  

dlp median times

  

  

   
l n

   

   

   

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

figure    results for

      m odal d epth



   

 

   



  

   

 

   

 

  

 

   and
 



  

  

     

  

   
l n

   

   

   

 our new method 

 

our method can be used to generate interesting test sets with modal depth        this depth is not
at all interesting with previous methodseither the formulae are immensely difficult  such as for
      or the behavior is dominated by trivial unsatisfiability  such as for         
for interesting levels of difficulty  we do have to reduce  to values below      if  is much
larger  the formulae are too hard  however  with 
   we can produce interesting test sets  as
shown in figure      the relevant asymmetry between the satisfiable and unsatisfiable rates curves

for
  is due to the high amount of tests exceeding the time limit   here the problems are hard

   but doable  and there are no problems with trivially  un satisfiable formulas 
even for





   



fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

dlp median times

  

  

  

   
l n

   

   

   

   

   

dlp   th percentile times

    

    

n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times

    

    

n  
n  
n  
n  
n  

   

n  
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

figure     results for



   

 

   




 

   

 

   

 

  

 

   and
 



  

  

     

  

   
l n

   

   

   

 our new method 

our method now allows us fine control of the difficulty of tests  to make a test easier  we can
just reduce the size of clauses by reducing the value s  of    or increase the propositional probability

   this control was missing with the previous method  as
was restricted to integral value  and 
anyway  was always set to   and making  much different from    resulted in problems with trivial
unsatisfiability for maximum modal depths greater than   

   a new cnf  generation method  advanced version
actually  our generator is much more general than what we have described so far  we allow direct
specification of the probability distribution of the number of propositional atoms in a clause  and
   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

c    
c    
c    
c    

   

c    
c    
c    
c    

   

   

   

   

   

   

   

 

 
  

  

  

  
l n

   

   

   

  

dlp median times

  

  

  
l n

   

   

   

dlp   th percentile times

    

    

c    
c    
c    
c    

   

c    
c    
c    
c    

   

  

  

 

 

   

   

    

    
  

  

  

  
l n

   

figure     results for


 

   

   

 

 

  

 

   and
 



  

     

  

  
l n

   

   

   

 our new method 

allow the distribution to be different for each modal depth from the top level to      we also allow
direct specification of the probability distribution for the number of literals in a clause at each modal
depth  thus  the probability distribution for the number of propositional atoms depends on both the
modal depth and the number of literals in the clause 
    generalization  shaping the probability distributions 
the generator has two parameters to control the shape of formulae  the first parameter     is a
list of lists  e g              telling it how many disjuncts to put in each disjunction at each
modal level  each internal list represents a finite discrete probability distribution  for instance  the
        says     of the disjunctions have  disjunct      have disjuncts  and    have  
disjunctions  fixed length     because there is only one element of the list  this frequency is used at
each modal depth  until the last  other possibilities are  e g                maximum length  
with uniform distribution                   maximum length   with exponential distribution  
and so on 
the second parameter     is a list of lists of lists  e g                        that controls the propositional modal rate  the top level elements are for each modal depth  here all the
same   the second level elements are for disjunctions with           disjunctions  here only the third
matters as all disjunctions have three disjuncts   for instance  the           says    of the
disjunctions have  propositional atoms      have  propositional atom      have propositional
atoms  and    have   propositional atoms  that is  our new scheme discussed in the paper with



ff

ff

ff

   



ff

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n  
n  
n  
n  

   

n  
n  
n  
n  

   

   

   

   

   

   

   

 

 
  

  

  

  

   
l n

   

   

   

   

   

  

  

dlp median times
    

   
l n

   

   

   

   

   

dlp   th percentile times
n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

   

   

  

 sat median times
    

  

  

  

   
l n

   

   

   

   

   

   

   

 sat   th percentile times
    

n  
n  
n  
n  

   

n  
n  
n  
n  

   

  

  

 

 

   

   

    

    
  

  

  

  

   
l n

   

   

   

figure     results for



  

    

n  
n  
n  
n  

   

  



   

   

  

 
 



 

 
 



 

  

   

  

  

  and 

   
l n

   

   

   

     

 
      the old scheme with   
    is represented by                       notice that
the first element of the distributions in  represents the value    whilst the first element of the distributions in  represents the value    setting the last element of each distribution to zero        
eliminates all strictly propositional clauses  which are the main cause of trivial unsatisfiability  this


   
of section     
is the way we implement the constraint 



 

   

fipatel  s chneider   s ebastiani

 
 
 
 
 
 

function rnd cnf   d m l n p c 
for i      to  do
repeat

   rnd clause d m n p c  
until is new cl   
return     

   generate  distinct random clauses   

   discards




if it already occurs   



  function rnd clause d m n p c 
 
   rnd length d c  
   select randomly the clause length   
 
   select randomly the prop modal rate   
    rnd propnum d p k  
  
repeat
  
for j      to  do
   generate p distinct random prop  literals   

 
  
   rnd sign   rnd atom   m n p c  
   generate k p distinct random modal literals   
  
for j    p   to do
 
  
   rnd sign   rnd atom d m n p c  
fiff
  
  
      
   discards cl if contains repeated atoms   
  
until no repeated atoms in cl  
  
return    






  

   function rnd atom d m n p c 
  
if d  
  
then return rnd propositional atom n      select randomly a prop  atom   
  
else
  
  
   rand box m  
   select randomly an indexed box   

  
   rand clause d   m n p c  
  
  
return   
figure     schema of the new cnf  random generator 
for instance  the plots of figures      can be obtained with the following choices of c and p 
fig 
c
p
c  advanced version 
p  advanced version 
    
 
     old           
                  
    
 
     new           
                  
    
 
 
         
                  
 
 
     old           
                     
 
 
     new           
                  
 
   
     new           
                       
           
     new           
                       
  
               new                                              
        
                    
our generator works as described in figure     the function is new cl   checks if   
    rnd length d c  selects randomly the clause length according to the    th dis 

tribution in   e g  if  is  and  is                    it returns  with probability    



   

fia n ew g eneral m ethod





to

g enerate r andom m odal f ormulae

 







and with probability        rnd propnum d p k  selects randomly the number of propositional
 
 th distribution in   e g  if  is   
is and  is
atoms per clause  according to the 
                                         it returns  deterministically   rnd sign
selects randomly either the positive or negative sign with equal probability  no repeated atoms in cl 
checks if the clause  contains no repeated atom  sort cl  returns the clause  sorted according

to some criterium  rnd propositional atom n  selects with uniform probability one of the propo  
sitional atoms fi   rnd box m  selects with uniform probability one of the  indexed boxes
 
when eliminating duplicated atoms in a clause  we take care not to disturb these probabilities
by first determining the shape of a clause  rows     in figure      and only then instantiating that
with propositional variables  rows       in figure      if a clause has repeated atoms  either propositional or modal  the instantiation is rejected and another instantiation of the shape is performed 
if we did not take care in this way we would generate too few small atoms because there are
fewer small atoms than large atoms  resulting in a greater chance of rejecting small atoms because
of repetition 
the elimination of duplicated atoms in a clause is not only a matter of elimination of redundancies  but also of elimination of a source of flaws  in fact  one might generate top level clauses like


  fi
   
  fi    fi   
fi
      which would make the whole formula inconsistent 






 


 


  ff 
 

example     we try to guess a parameter set by which the new random generator can potentially
generate the following cnf  formula  




 fi     fi    fi     fi    fi




 fi 
 fi
  fi
  
 fi


   
 fi    fi     fi 














fi



 
 









fi







 


   fi 
 






 


   
 

 

 



   
   
  at top level we have   unary    binary and
after a quick look we set         
  ternary clauses  at depth   we have   unary and   binary clauses  at depth   we have only   unary
clauses  thus  we can set
c                       
   
at top level there are no unary clauses  we represent this fact by the empty list      the   binary clauses have   propositional literal  and the   ternary clauses have   propositional literal  at
depth    the   unary clauses have   propositional literals  while the   binary clauses have   propositional literal   there is no need to provide any information for depth    as all clauses are purely
propositional   thus  we can set
p                                            

   

the two expressions can then be normalized into 
c                      
p                                            

   

notice that any other setting of     obtained by changing the non zero values in     into other
non zero values  or turning zeros into non zeros  but not vice versa    will do the work  just with a
different probability  for instance  turning the first list in  into         allows for generating
also unary clauses at top level  anyway  with probability      the generator may still produce

formulae with only binary and ternary clauses at top level 

  

   

fipatel  s chneider   s ebastiani

satisfiability and unsatisfiability fractions
 

trivial satisfiability and unsatisfiability fractions
 

n d    
n d    
n d    
n d    

   

n d    
n d    
n d    
n d    

   

   

   

   

   

   

   

 

 
  

  

  

  
l n

   

   

   

  

dlp median times
    

  

  
l n

   

   

   

dlp   th percentile times
    

n d    
n d    
n d    
n d    

   

  

n d    
n d    
n d    
n d    

   

  

  

 

 

   

   

    

    
  

  

  

  
l n

   

   

   

  

  

  

  
l n

   

   

   



figure     results for dlpwith                             
                               

as an illustration of our general method  we present a set of tests with              

 
             and                                 this set of tests
introduces a small fraction of single literal clauses that contain a modal literal  except at the greatest
modal depth  where they contain  of course  a single propositional literal   the results of tests are
given in figure     again  trivial instances occur only out the interesting zone  here we can generate
interesting test sets even with modal depth  


    

    varying the probability distributions with the depth
our new method provides the ability to fine tune the distribution of both the size and the propositional modal rate of the clauses at every depth  this fine tuning results in a very large number
of parameters  and so far in this paper we have only investigated distributions that conform to the
scheme described above or ones that correspond to the  cnf  generation method previously used 
to give an example of how to vary the probability distributions with the nesting depth of the


clauses  we consider the case with   
     
 
  
        
                  

                                               the results of the tests are
given in figure    
the  parameter says that the probability distributions of the length of the clauses occurring at
nesting depth  and  are         and       respectively   when not explicitly specified  it is
   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

satisfiability and unsatisfiability fractions

trivial satisfiability and unsatisfiability fractions

 

 

   

   

n d    
n d    
n d    
n d    
n d    
n d    

   

n d    
n d    
n d    
n d    
n d    
n d    

   

   

   

   

   

 

 
 

  

  

  

  

   

   

   

 

  

  

  

l n

  

   

   

   

l n

dlp median times
    

dlp   th percentile times
    

n d    
n d    
n d    
n d    
n d    
n d    

   

n d    
n d    
n d    
n d    
n d    
n d    

   

  

  

 

 

   

   

    

    
 

  

  

  

  

   

   

   

 

  

l n

  

  

  

   

   

   

l n




figure     results for dlpwith  
     
 
  
 
       
                  
                                               



considered the last distribution by default  as in the case of depth     thus  the top level clauses
are on average    unary     binary    ternary  while the clauses occurring at depth  are
on average     unary and     binary 



the  parameter says that the lists of probability distributions of the propositional modal ratio
at nesting depth  and  are                           and                 respectively  thus  at every depth  unary clauses have no propositional literal and binary clauses have
 propositional and  modal literal  the top level ternary clauses have either  or
propositional
literals  with equal probability 



notice that at top level the distributions are identical to those of figure     whilst at depth 
there are no more ternary clauses and a higher fraction of unary clauses  these slight modifica
tions allow reasonable test sets with      and
 
    moreover  trivial instances have nearly
disappeared 

   generality of the method

 

we have already observed  horrocks et al         that for normal modal logics  from
upward 
there is no loss in the restriction to cnf  formulae  as there is an equivalence between arbitrary
   

fipatel  s chneider   s ebastiani

normal modal formulae and cnf  formulae    we may wonder how well our generation technique covers the whole space of cnf  formulae  and how well we can approximate a restricted
subclass of this space  example     represents an instance of a very general property of our random
generation technique  which we present and discuss below 
now we assume that the rnd cnf  of figure    is a purely random generator  i e   it performs all non deterministic choices independently and in a pure random way   of course pseudorandom generators only approximate this feature   moreover  with no loss of generality  we restrict
our discussion to cnf  formulae which have no repeated clauses at top level and no repeated
atoms inside any clause at any level  and in which atoms are sorted within each clause  according to the generic function sort   of figure     the former allows for considering only formulae
which are already simplified out  the latter allows for considering only one representative for each
class of formulae which are equivalent modulo order permutations  as discussed by giunchiglia


  fi  fi 
et al          the latter allows for further simplifying subformulae like  e g   fi  fi





or fi 
fi
 fi
fi   




 

 

 



    
 fi 



 

let be a sorted cnf  formula of depth  and with  top level clauses built on all the

  
propositional atoms fffi    fi and on all the modal boxes ff   
   which has no repeated
clause at top level and no repeated atoms inside any clause at any level  then we can construct 

and  so that  for each        





 a  the  th element of the   th sublist in  is non zero if and only if there is a clause of length
occurring at depth  in   and

 b  the    the element of the  th sub sublist of the   th sublist in  is non zero if and only if

there is a clause of length occurring at depth  which contains  propositional literals 

 

one possible operative technique to build  and  works as follows  initialize  as a list of
sublists  then  for every depth level  ff        set the   th sublist of  as follows 



 






 i  set the size of the sublist as the maximum size of clauses occurring in at depth   


 ii  for all  ff        count the number of clauses of length occurring in at depth    and
append the result to the sublist 



initialize  as a list of  sublists of sub sublists  then  for every depth level
the   th sublist of  as follows 
 i  look at
  
 ii  for all





  set the size



ff    







 

ff      

of the sublist as the maximum size of clauses occurring in



 

  set

at depth

  generate the  th sub sublist as follows 



look at    if the number of clauses of length occurring at depth  is non zero  then set

the length of the sub sublist to     else set to   

 

   this holds for all modal normal logics from
upward  as the conversion works recursively on the depth of the
formula  from the leaves to the root  each time applying to sub formulae the propositional cnf conversion and the
transformation




fffi



 fi

which preserves validity in such logics 

   




ff

 

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae



 

for all 
occurring in
ff   

    count the number of clauses of length
 which have  propositional literals  and append the result to the sub sublist 



at depth

example     represents an instance of application of the above technique for construction  and 
 above  but are such
from   notice that the  and  parameters not only verify points  and
that the probability distributions mimic the actual number of occurrences of the different kinds of
clauses 

 

  

 

 

theorem     let rnd cnf  be a purely random generator as in figure     let be a sorted
cnf  formula of depth  and with  top level clauses built on all the propositional atoms in

  
fffi    fi  and on all the modal boxes in ff
  
   which has no repeated clause at top level
and no repeated atoms inside any clause at any level  let  and  be built from so that to verify
 above  let  and   be obtained from  and  respectively by substituting some
points  and
zero values with some non zero values  then we have 

  

 

 

 

 i  rnd cnf   d m l n p c  returns with some non zero probability   
 ii  rnd cnf   d m l n p c  returns with some non zero probability 

 

 

 

 

proof the fully detailed proof is reported in appendix  here we sketch the main steps 
the following facts come straightforwardly by induction on the structure of  

 

   every propositional atom occurring in at some depth  is returned with the same non zero
probability   by both rnd atom   m n p c  and rnd atom   m n p c  
 
   every modal atom  occurring in at some depth  is returned with some non zero probability  by rnd atom d i m n p c   and is returned with some non zero probability   
by rnd atom d i m n p c  

 







 




   every clause  occurring in at some depth  is returned with some non zero probability
 by rnd clause d i m n p c   and is returned with some non zero probability    by
rnd clause d i m n p c  







thus  every top level clause 
  is returned by rnd clause d m n p c  and rnd clause d m n p c 
with some non zero probabilities    and  ff  respectively  being  ff  fi     from this fact  it comes
straightforwardly that is returned by rnd cnf   d m l n p c  and rnd cnf   d m l n p c 
with some non zero probabilities  and   respectively  being     
q e d 
q e d 
from a theoretical viewpoint  theorem      shows that our generation technique is very
general  because  for every cnf  formula   there exists a choice for the parameters s t  a purely
random generator returns with some non zero probability   
 is not unique as 
of course  the choice criterium for  and  suggested by points  and
for example  any other setting obtained from it by turning zeros into non zeros would match the
requirements  as an extreme case  we might think to do very general choices like

 

 

 

 

c                    

  

 

p                                    

   

which guarantee to have every possible cnf  formula within a given bound in clause size with
non zero probability  anyway  theorem       shows that  extending the number of non zeros
values  the probability of generating decreases 

 

  

   

fipatel  s chneider   s ebastiani

for instance  consider example      turning the first list in  of     into         would still
allow for generating the formula      but it would allow for generating also unary clauses at top level
with probability  
       which converges quickly to  with   

  

usually we are not interested in randomly generating one precise formula with some non zero
probability which would be rather small anyway but rather to randomly generate a class of formulae which are as similar as possible a given target class of formulae  adding redundant non zeros
would extend the range of shapes for formulae  extending the variance and lowering the resemblance
to the target class of formulae 

   discussion
    the basic and the advanced method
our new testing method can be used at two different levels  depending on the attitude and on the
skills and experience of the user 
in the basic usage the clause length  is represented by lists with either only one non zero
element  e g              meaning clause length   or only two adjacent non zero elements
 e g              meaning clause length or     with probability     and     respectively  
similarly  the propositional modal rate  is represented by lists with either only one non zero element
 e g                        meaning   propositional literal per clause  or only two nonzero adjacent elements  e g                        meaning either  or propositional
literals per clause  with probability       and     respectively   the distributions do not vary with
the depth 
in the basic way the random generator is used as a flawless    extension of the  cnf 
method of giunchiglia and sebastiani         which allows for setting the clause length to either
fixed integer values or to non integer average values  the number of parameters is kept relatively
small  so that to allow a coarse grained coverage of a significant subspace with an affordable number
of tests 











in the advanced usage  it is possible to apply any finite probability distributions to both  and   
moreover  it is possible to use different distributions at different depths  this opens a huge amount
of possibilities  but requires some skills and experience from the user  the representation of sophisticated multi level distributions may be rather complicated  and may thus require some practice 
moreover  the usage of complex distributions requires some care  as the presence non constant distributions in both clause length and propositional modal rate may significantly enlarge the variance
of the features of the generated formulae  making the effects of the tests more unpredictable and
instance dependent 
in order to guide the user  we provide some general suggestions for choosing the parameter sets
in a testing session  they come from both theoretical issues and our practical experience in using
the generator 



avoid generating purely propositional top level clauses  that is  set p                 
see sections     and      if possible  avoid generating unary top level clause  that is  set c
                  see also section     

    in the sense of free from the flaw highlighted in the work by hustadt and schmidt        and giunchiglia
et al         

   

fia n ew g eneral m ethod




to

g enerate r andom m odal f ormulae

in organizing a testing session  fix the parameter sets according to the following order and
directives 
 i  fix d  with d   the search is mostly dominated by its propositional component  with
d   it tends to be dominated by its modal component  d   is typically a good start 
 ii  fix m  m substantially partitions the problem into m independent problems  increasing m 
the samples tend to be more likely satisfiable  m   is typically a good start 
 iii  set c  increasing the top level values of c  the samples tend to be more likely satisfiable
and the propositional component of search increases  so that the transition area moves
to the right and the hardness peaks grow  average values in        for the top level
distributions of c are typically a good start 
 iv  set p  decreasing the top level values of p  the modal component of search increases 
for the the top level distributions of p  having on average half of top level atoms propositional  that is  the        of section    is typically a good start 
 v  for each choice of the above parameters  increase n  starting from  at least  the maximum length in c  until the desired level of hardness is reached 
 vi  make l vary within the satisfiability transition area 











when dealing with c and p  focus on top level clause distributions first  small variations
of c and p at top level may cause big variations in hardness and satisfiability probability 
variations at lower levels typically cause much smaller effects 




use convex distributions  e g           and         have the same mean value  but the
variance of the former is much smaller than that of the latter 




do keep l ranging in the satisfiability transition area  increasing l out of it  the fraction of
trivially unsatisfiable samples can become relevant  to determine the satisfiability transition
area  make a preliminary check with few samples per point  say      using dichotomic search 
unlike n  and m   the parameters d  c  p make the formulas vary their shape  thus  we
suggest to group together plots with the same d  c and p values and increasing ns 

on the whole  the large number of parameters makes it impossible to cover the parameter space
in a reasonable amount of testing  however  just about any cnf  formula shape can be generated
so that the method described in section   can be used to produce random formulae reasonably
similar to some formula e  of interest 
    comparison with the old  cnf  method
on the whole  the new method inherits all the features of the old  cnf  method 


scalability  increasing     and also the average clause length in    the difficulty of the generated
problems scales up at will  thus it is possible to compare how the performance of different
systems scale up with problems of increasing difficulty  for each source of difficulty  e g  
size  depth  etc   
valid vs  not valid balance  the parameter  allows for tuning the satisfiability rate of the formula
at will  moreover  it is always possible to choose  to generate testbeds with about a    satisfiable rate  which allows for the maximum uncertainty 
   

fipatel  s chneider   s ebastiani

termination  the new method allows for generating test sets of up to depth     which are run by
state of the art systems in a reasonable amount of time 
reproducibility  the results of each testbed are easy to reproduce because the generators code
and all the parameters values are made publicly available 
parameterization  the random generation of cnf  formulae is fully parametric 
data organization  the most natural way to use the new random generator is to generate tests and
plot data by increasing values of one or two parameters  this allows for easy  quantitative and
qualitative evaluations of the performances of the different procedures under test 
moreover  the new method improves the  cnf  method for the following features 
representativeness  as stated in section    cnf  formulae represent all formulae in the normal
upward  as there is an equivalence preserving way of converting all
modal logics from
modal formulae into cnf    from theorem      the new method allows for a very finegrained sampling of the class of cnf  formulae 

  







difficulty  the random cnf  formulae with 
and
provide challenging test sets for

and
can be well considered
state of the art procedures  cnf  formulae with 
as challenges for next generation systems   of course  it is not a problem to generate easy
problems too  


control  the parameters    and  allow for controlling monotonically the difficulty of the test

set   e g   if you increase   you are reasonably sure that your mean median cpu time plots
will increase   the parameter  allows for controlling the satisfiability rate  monotonicity
allows for controlling one feature by simply increasing or decreasing one value  and thus for
eliminating uninteresting areas of the input space 
modal vs  propositional balance  the size of the kripke models spanned by the decision procedures has increased exponentially with the higher modal depths reached by the new test sets 
moreover  the probability of repeated top level atoms has dramatically reduced     consequently  unlike the tests by hustadt and schmidt        and giunchiglia et al         the
search is no longer dominated by the pure propositional component of reasoning  and the
empirical results show that a large number of modal successors are explored 
finally  the new method completely removes or drastically reduces the effects of the following
problems 
redundancy  propositional and modal redundancy had already been eliminated in the last versions
of the  cnf  method  giunchiglia et al          moreover  the new method allows for
eliminating all strictly propositional clauses 
triviality  the main cause of trivial unsatisfiability has been removed  so that trivially unsatisfiable
formulae have been relegated out of the transition areas in our experiments 
    the number of possible distinct modal atoms increases hyper exponentially with

   



 horrocks et al         

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

artificiality  our method allows the user to shape the test formulae so that to maximize the resemblance to the expected typical inputs of his her system s   of course  this is done within
the limits imposed by randomness  the more irregular the typical input formulas  the higher
the variance of the randomly generated formulas  the lower their average resemblance to the
typical input formulas 
over size  the new method allows for generating extremely hard problems with reasonable size 
it comes from the analysis of the resulting data that hard problems require very big amounts
of both search branches and modal successors generated  so that the search is not dominated
by parsing and data managing 
the generator presented by horrocks and patel schneider         extends the  cnf  generator of giunchiglia et al         too  however  our new generator allows for shaping the probability
distributions of both c and p  and for using different distributions at every depth level  in principle 
the generator of horrocks and patel schneider        allows also for setting the probabilities    
 
and  
by which propositional and modal atoms are negated  however  this feature is not used
 
very muchin the experiments by horrocks and patel schneider            is always     and  
is different from     only in one experiment and adds nothing to the generality of the generator 
so that in our new generator we decided not to re introduce it 
    comparison with the qbf based method
before comparing our new cnf  generation method with the qbf based generation method  we
must notice that  so far  they have been used in different ways  corresponding to the two different
test techniques briefly summarized in section   






in the tancs competition s   massacci         the tests have been performed on single
data points  and the results are presented in the form of big tables  each entry consisting
of the number of successful solutions and in the rescaled geometrical mean cpu time for
such solutions  two or more systems are compared according to their number of successful
solutions  considering the geometrical mean cpu time value only when the result is even 
this is due to the fact that a comparison between geometrical means is possible only if they
are computed on the same number of successful values  or  for a more accurate comparison 
on the same successful values    this method was chosen to guarantee the fairness of the
comparison between the competitors  which is the key requirement in a competition 
in this paper instead  we have focused on highlighting both the qualitative and quantitative
behavior of the system s   thus we have preferred plots to tables  and we have preferred
representing percentiles cpu times rather than the number of successful solutions and their
geometrical mean times  in fact  the former does not require to distinguish between successful
and non successful solutions    thus  they are much more suitable for plotting  because
a comparison on geometrical means makes sense only for those data points with the same
number of successful solutions  which is very hard to follow in a plot 

    in case of tests exceeding the timeout  geometrical means are altered by the truncation introduced by the unsuccessful
solutions  thus the geometrical mean makes sense only if calculated only on successful results 
    if the percentage of successful solutions is greater or equal than   then the value  th percentile is not influenced
by the truncation of values introduced by timeouts  otherwise it is equal to the timeout value 

   

fipatel  s chneider   s ebastiani

of course  both generators can be used in both ways   see heguiabehere and de rijke       
for some plots with the random qbf based method   comparing the two approaches above in
organizing and presenting data is not one of the goals of this paper  so we restrict our analysis to the
generation methods  independently from how they have been used so far 
the qbf based generation method of massacci        shares with our new cnf  generation
method several features in particular scalability  valid vs  not valid balance  termination  reproducibility  parameterization  data organization  difficulty  modal vs  propositional balance  redundancy and triviality for which considerations which are identical or analogous to

those for our new method hold  once we consider parameters   and  instead of parameters  
 and    the following features instead deserve more discussion 





control  the parameters and allow for controlling monotonically the difficulty of the test set 
the parameter  allows for controlling the satisfiability rate  however  unlike the cnf 
case  the main parameters of the qbf generator  e g   and   do not have a direct meaning
wrt  the main characteristics of the resulting modal formulae like  e g   the modal depth and
the number of propositional variables 



representativeness  in general qbf formulae are good representatives for the whole class of
quantified boolean formulae  as there is a way to convert a generic quantified boolean formula
into qbf     the randomly generated qbf formulae used by massacci        restrict to
those having a fixed amount of variables per alternation   nevertheless  the class of modalencoded qbf formulae restrict to those having candidate kripke structures with the very
regular structure imposed by the qbf and or binary search trees 



artificiality  unlike the cnf  case  the main parameters of the qbf generator  e g   and  
do not have a direct meaning wrt  the main characteristics of the resulting modal formulae 
thus  it is hard to choose the parameters for the random qbf generator so that to resemble
expected typical inputs of the system s  
over size  one final problem with random modal encoded qbf formulae is size  initial versions
of the translation method produced test sets in the  gb range  which stressed too much the
data storage and retrieval portion of the provers   for example  running dlp on these formulae resulted in a     s timeout without any significant search   although the encoding has
been significantly improved in this sense  the current versions still produce very large modal
formulae  mostly to constrain the kripke structures 
similar considerations have been very recently presented by heguiabehere and de rijke        
on the whole  we believe that the qbf generation method is still appealing  and that the two
methods can co exist in any empirical test session 
    notice that by qbf here we denote the class of prenex cnf qbf formulae  given by an alternation of quantification
variables ending with an existential one followed by a cnf propositional formula  the conversion works by lifting
quantifiers outside the formula and then converting into k cnf  k dnf  the matrix if the innest quantifier is an  a  
negating the result and pushing down the negation recursively   the conversion is truth preserving  truth inverting  


   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

    complexity issues
from a purely theoretical viewpoint  it is remarked that modal encoded qbf formulae can capture
the problems in    while cnf  formulae are stuck at np  massacci             this statement
requires some clarification 
first  test sets are necessarily finite  therefore it makes no sense to attribute to them a complexity
class  thus  when speaking of complexity classes for test problems  we do not refer to test sets  but
rather to the infinite sets of formulae we could generate if we could have unbounded values for  at
least one of  the generation parameters  in particular  the statement above means that the infinite set
of qbf formulae with unbounded number of variables per alternation and bounded alternation
depth is complete for   garey   johnson         while the infinite set of cnf  formulae
with bounded depth and unbounded number of propositional variables is in np  halpern        
secondly  the alternation depth and the variable number per alternation are not the qbfanalogous of
s modal depth and variable number respectively  as both the latter values for
the resulting modal formulae grow as
     in fact  qbf formulae with bounded alternation
depth and unbounded number of variables per alternation give rise to modal formulae of both
unbounded depth and unbounded number of variables 
finally  the   vs  np issue of massacci        is not a matter of generators  but rather a
matter of how such generators are used  and of how results are organized and presented  in fact 
so far random cnf  testbeds have always been organized by fixing all the parameters except 
 modal depth  included   and making  vary  this choice  whose goal is to produce data plots
covering the satisfiability transition area  is what causes the testbed formulae to be stuck at np 
to avoid this fact  one may want to make  vary and to fix all the other parameters  as
satisfiability with unbounded depth and bounded number of propositional variables is pspacecomplete  halpern        



  



     



 

    asymptotic behavior
achlioptas et al         presented a study on the asymptotic behavior of random csp problems 
they showed that  for most well known random generation models  which did not reveal flaws in

empirical tests  the probability that problems are trivially unsatisfiable tends to   with
   

being the number of variables  gent et al         lately explained this discrepancy between
theoretical and empirical results by showing that the above phenomenon happens with significant

probability only for values of which are out of the reach of current csp solvers 
the problem is due to the possible presence of  implicit  unary constraints causing some variables value to be inadmissible  if this occurs with some non zero probability  then with non zero
probability some variable may have all its values inadmissible  this causes a local inconsistency


of the whole problem  which is very easily revealed by the solver  when
fffi   the probability
of not having such situation tends to zero  analogous problems have been revealed with random
sat problems generated with the constant probability generation model  as unary clauses are gen 



    more precisely  massacci        referred to the  cnf  formulae of giunchiglia et al          the statement holds
also for all the cnf  formulae 
    as we have already noticed  horrocks et al          a better qbf analogous of the modal depth is the total number
of universally quantified variables   
in our case   in fact  like modal
with bounded depth 
the class of qbf formulae with bounded is only complete in np  as it is possible to guess a tree like witness
nodes 
with



   

    


   

  

fipatel  s chneider   s ebastiani

erated with non zero probability  mitchell et al          and with random qbf problems  as implicit
unit clauses  i e   clauses containing only one existential variable are generated with non zero
probability  gent   walsh         for the random k sat model 
  such problem does not
occur  friedgut        achlioptas et al         





our generation model is far more complicated to analyze than the models above  first  cnf 
formulas have a much more complicated structure than random sat  csp and qbf formulas  involving a much wider number of parameters  second  unlike with the models discussed above  the
 constraints described by  cnf  clauses are not picked in a uniform way  as the probability of
  
 
generating a given cnf  atom
varies strongly with its depth and shape  and it is typically
much smaller than that of generating a propositional atom fi     thus  developing a formal probabilistic analysis for the asymptotic behavior of our model is out of the reach  and of the scope  of
this paper  however  we provide here some heuristic considerations 
the simplest case is when we do not allow the generation of unary clauses at top level  that is 
when c                  so that we do not have explicit unary constraints  we may still have
  
  

  

  
  
  
   
 fi  
or

 
implicit unary constraints like  e g   fi
anyway  a simple heuristic consideration suggests that  given the big numbers of distinct cnf 
modal atoms which may potentially be generated  such situations are more unlikely than that of
 fi    fi   fi   in the standard   sat model  which is
having implicit unit constraints like fi
free from the asymptotic local inconsistency problem 
a more critical case is when we allow for the generation of unary clauses at top level  that
is  when c     x                 in this case we can generate unary clauses  and thus
local inconsistencies  with non zero probability  thus  a simple way to avoid this problem is to
restrict the values of  so that not to allow unary top level clauses  that is  to always set c  
               notice  however  that this hardly becomes a problem in practice if we respect the condition described in sections     and     of avoiding purely propositional top level
clauses  that is  always set p                   in fact  given the big numbers of distinct
cnf  modal atoms which may potentially be generated  the probability of having two contradic  
  
tory modal unit clauses
 
within the same formula becomes quickly negligible even with
small depths 
notice that here we have intentionally not considered modal implicit unary constraints like 
  

 fi 
  
e g   fi
  and being mutually inconsistent modal literals  e g    
  

 


   in fact  detecting such inconsistencies requires investigating recursively the
modal successors  and therefore it is not trivial 



  







  
   
     

   

  

   

 

 



 

   conclusions and future work
as shown by the test sets above our new method  in its basic form  allows us to generate a wider
variety of problems covering more of the input space  we can better tune the difficulty of problems
for various parameter values  including the first reasonable test sets for maximum modal depths
of and     we can produce interesting scaling dimensions  varying more than just the number of

propositional variables   for example  we can now vary the propositional probability  or the
size of clauses  to vary the difficulty of interesting problems  as neither  nor  are restricted to
integral values  we have extremely fine control over the difficulty of test sets  thus we can create





    again  we recall that the number of possible distinct cnf 
depth  horrocks et al         



   

atoms increases hyper exponentially with the modal

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

more interesting test sets where the satisfiable unsatisfiable transition is explorable with current
decision procedures 
we have drastically reduced the influence of trivial unsatisfiability  which flawed the previous
cnf  methodologies when      we retain the desirable features of the previous cnf  methodologies  our test sets are easy to reproduce and are not too large 
in our full methodology we have introduced the possibility of shaping the distribution of both
the size and the propositional modal rate of the clauses  this can be done at each level of modal
depth  this allows for generating a much wider variety of problems  covering in principle the whole

input space  for instance  we have produced a full test set with      and      figure     
we have not moved closer to application data  as there are no significant direct applications
of modal decision procedures and thus no guidance for the sorts of inputs that would be close to
application inputs  in any case  we believe we have moved closer than ever to the possibility of
approximating given classes of input formulae 
there is still much work to be done using our generation methodology  we can produce more
test sets and try these test sets out on various modal decision procedures  we may also want to
uncover parameter settings where the full generality of our generation method is needed to produce
reasonable test sets 

acknowledgments
we would like to thank thomas eiter and the three anonymous reviewers for their valuable comments and helpful suggestions which greatly improved the quality of the paper  the second author
is supported by a miur cofin   project  code                 and by the c alculemus  
ihp rtn ec project  contract code hprn ct             and has thus benefited of the financial contribution of the commission through the ihp programme 

appendix a  fully detailed proof of theorem    

 

theorem     let rnd cnf  be a purely random generator as in figure     let be a sorted
cnf  formula of depth  and with  top level clauses built on all the propositional atoms in

  
fffi    fi  and on all the modal boxes in ff
  
   which has no repeated clause at top level
and no repeated atoms inside any clause at any level  let  and  be built from so that to verify
 of section    let   and   be obtained from  and  respectively by substituting
points  and
some zero values with some non zero values  then we have 

  

 

 

 

 i  rnd cnf   d m l n p c  returns with some non zero probability   
 ii  rnd cnf   d m l n p c  returns with some non zero probability 

 

 

 

 

proof the proof works by induction on the structure of   first  we prove that 

 

   every propositional atom occurring in at some depth  is returned with the same non zero
probability   by both rnd atom   m n p c  and rnd atom   m n p c  

 
   every modal atom  occurring in at some depth  is returned with some non zero probability  by rnd atom d i m n p c   and is returned with some non zero probability   
by rnd atom d i m n p c  




 




   




fipatel  s chneider   s ebastiani

 

   every clause  occurring in at some depth  is returned with some non zero probability
 by rnd clause d i m n p c   and is returned with some non zero probability    by
rnd clause d i m n p c  







from point    we have that every top level clause    is returned by rnd clause d m n p c  and
     as
rnd clause d m n p c  with some probabilities    and     respectively  being    
has no repeated clause  recalling a property of probabilities we have 

 




  
   
 
   
    
 
 
             
                



  


         








 

 





 



 



  



 

  



 

 



 





ff







    




 




   

 

 

 
   










   


notice that     is strictly monotonic in all its components  thus  
now we need to prove points      and   

 

 

 

 

   let fi   be a propositional atom in fffi    fi  occurring in at depth    for some 
  
then both rnd atom   m n p c  and rnd atom   m n p c  invoke rnd propositional atom n  

which returns fi   with probability       
  
   let
be a boxed clause occurring in at depth    for some    and     then the
  

occurs in at depth       notice that    instead of     
cannot occur
clause
in at depth    because  is the maximum depth of   

 

 



 

 

 i  by inductive hypothesis  it follows from point    that  is returned with some non zero
probability  by rnd clause d i   m n p c   as     rnd atom d i m n p c  invokes
  
with the non zero probrand box m  rand clause d i   m n p c   which returns
  
  
ability 
 ii  by inductive hypothesis  it follows from point    that  is returned with some nonzero probability  
 by rnd clause d i   m n p c   rnd atom d i m n p c 
in  
vokes rand box m  rand clause d i   m n p c   which returns
with the non    thus      
zero probability     


 



 
 



 

 

 propositional literals  which occurs in   at depth
   let  be a clause with length and  
   for some    as   is sorted   is represented as               
  denote modal literals 
where 
ff denote propositional literals and
 i  by inductive hypothesis  it follows from point    that each propositional literal    is
  fi   by rnd sign    rnd atom   m n p c  
returned with some non zero probability
and it follows from point    that each modal literals
is returned with the non zero
  
 fi  by rnd sign    rnd atom d i m n p c  
probability


    



 
 

   

   

   

   



 



  

 



  

 

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae





by construction of    the  th element of the   th sublist in  is non zero  thus  is
returned with some non zero probability    by rnd length d i c  

by construction of    the    the element of the  th sub sublist of the   th sublist in  is
 
non zero  thus   is returned with some non zero probability    by rnd propnum d p j    
similarly to      has no repeated atoms inside any clause  so that  is returned by
rnd clause d i m n p c  with the non zero probability

 





        
 

 



    
   

 

 fi  







 


   

 



 



 

fi

















 fi

 fi

  



    

as with      the expression on the right in      is strictly monotonic in all its terms     
        fi   s   fi  s within the domain of definition 
 ii  by inductive hypothesis  it follows from point    that each propositional literal  
   
 fi   by rnd sign  
is returned with some non zero probability       fi  

rnd atom   m n p c   and it follows from point    that each modal literals
is re


turned with some non zero probability     
fi       fi by rnd sign   rnd atom di m n p c  

by construction of  and     the  th element of the   th sublist in   is non zero  thus 
 is returned with some non zero probability     by rnd length d i c   by construction
of   from        fi    

by construction of  and     the    the element of the  th sub sublist of the   th
 
sublist in  is non zero  thus   is returned with some non zero probability     by

 

 
rnd propnum d p j   by construction of   from            
as has no repeated atoms inside any clause  it follows that  is returned by rnd clause di m n p c  with the non zero probability






 


 










 

 
 fi


 
             
     
      
 fi  


 
because of the strict monotonicity of      and       we have that     
 

          

 



 

  fi  

 


     fi



 



 

    

q e d 

references
achlioptas  d   kirousis  l  m   kranakis  e   krizanc  d   molloy  m  s  o     stamatiou  y  c 
        random constraint satisfaction  a more accurate picture  in smolka  g   ed    principles and practice of constraint programming  vol       of lecture notes in computer
science  pp          berlin  springer 
beckert  b     gore  r          free variable tableaux for propositional modal logics  in automated
reasoning with analytic tableaux and related methods  international conference tableaux    vol       of lecture notes in artificial intelligence  pp         berlin  springer 

ff



    notice that   is a conditioned probability  that is  the probability of having  propositional literal provided the
clause has  literals  this matches the fact that  is an input in rnd propnum d p j  

   

fipatel  s chneider   s ebastiani

cadoli  m   giovanardi  a     schaerf  m          an algorithm to evaluate quantified boolean
formulae  in proceedings of the   th national conference on artificial intelligence  aaai     pp          menlo park  ca  aaai press 
friedgut  e          sharp thresholds of graph properties  and the k sat problem  journal of the
american mathematical society                  
garey  m  r     johnson  d  s          computers and intractability  a guide to the theory of
np completeness  w  h  freeman  new york 
gent  i  p   macintyre  e   prosser  p   smith  b  m     walsh  t          random constraint satisfaction  flaws and structure  journal of constraints               
gent  i  p     walsh  t          beyond np  the qsat phase transition  in proceedings of the
sixteenth national conference on artificial intelligence and the eleventh innovative applications of artificial intelligence conference  aaai      pp          menlo park  ca  aaai
press 
giunchiglia  e   giunchiglia  f   sebastiani  r     tacchella  a          sat vs  translation based
decision procedures for modal logics  a comparative evaluation  journal of applied nonclassical logics                
giunchiglia  e   giunchiglia  f     tacchella  a          sat based decision procedures for classical
modal logics  journal of automated reasoning             
giunchiglia  f     sebastiani  r          building decision procedures for modal logics from propositional decision procedures   the case study of modal k  in proceedings of the thirteenth
conference on automated deduction  vol       of lecture notes in artificial intelligence 
pp          berlin  springer 
giunchiglia  f     sebastiani  r          building decision procedures for modal logics from propositional decision procedures   the case study of modal k m   information and computation 
                 
haarslev  v     moller  r          racer system description  in proceedings of the international joint conference on automated reasoning  ijcar      vol       of lecture notes
in computer science  pp          siena  italy  springer 
halpern  j  y          the effect of bounding the number of primitive propositions and the depth of
nesting on the complexity of modal logic  artificial intelligence                
halpern  j  y     moses  y          a guide to the completeness and complexity for modal logics
of knowledge and belief  artificial intelligence                
heguiabehere  j     de rijke  m          the random modal qbf test set  in ijcar     workshop
on issues in the design and experimental evaluation of system for modal and temporal
logics  pp       
heuerding  a   jager  g   schwendimann  s     seyfreid  m          propositional logics on the
computer  in baumgartner  p   hahnle  r     posegga  j   eds    automated reasoning with
analytic tableaux and related methods  international conference tableaux    vol      of
lecture notes in artificial intelligence  pp          berlin  springer 
heuerding  a     schwendimann  s          a benchmark method for the propositional modal
logics k  kt  s    tech  rep  iam         university of bern  switzerland 
   

fia n ew g eneral m ethod

to

g enerate r andom m odal f ormulae

horrocks  i          using an expressive description logic  fact or fiction   in cohn  a  g   schubert  l     shapiro  s  c   eds    principles of knowledge representation and reasoning 
proceedings of the sixth international conference  kr     pp          morgan kaufmann
publishers  san francisco  california 

  

horrocks  i     patel schneider  p  f          evaluating optimised decision procedures for propositional modal
satisfiability  journal of automated reasoning                
horrocks  i   patel schneider  p  f     sebastiani  r          an analysis of empirical testing for
modal decision procedures  logic journal of the igpl               
hustadt  u     schmidt  r  a          an empirical analysis of modal theorem provers  journal of
applied non classical logics               
hustadt  u   schmidt  r  a     weidenbach  c          mspass  subsumption testing with spass 
in lambrix  p   borgida  a   lenzerini  m   moller  r     patel schneider  p   eds    proceedings of the      international workshop on description logics  dl      pp         
massacci  f          design and results of tableaux    non classical  modal  system competition 
in automated reasoning with analytic tableaux and related methods  international conference tableaux    vol       of lecture notes in artificial intelligence  pp        berlin 
springer 
mitchell  d   selman  b     levesque  h          hard and easy distributions of sat problems 
in proceedings of the tenth national conference on artificial intelligence  pp          san
jose  california  american association for artificial intelligence 
patel schneider  p  f          dlp system description  in franconi  e   giacomo  g  d   macgregor  r  m   nutt  w   welty  c  a     sebastiani  f   eds    collected papers from the international description logics workshop  dl     pp        available as ceur ws vol   
from http   sunsite informatik rwth aachen de publications ceur ws 
patel schneider  p  f     sebastiani  r          a new system and methodology for generating random modal formulae  in proceedings of the international joint conference on automated
reasoning  ijcar      vol       of lecture notes in computer science  pp         
siena  italy  springer 
pitt  j     cunningham  j          distributed modal theorem proving with ke  in minglioli  p  
moscato  u   mindici  d     ornaghi  m   eds    automated reasoning with analytic tableaux and related methods  international conference tableaux    vol       of lecture
notes in artificial intelligence  pp          berlin  springer 
tacchella  a           sat system description  in lambrix  p   borgida  a   lenzerini  m   moller 
r     patel schneider  p   eds    proceedings of the      international workshop on description logics  dl      pp         

   

fi