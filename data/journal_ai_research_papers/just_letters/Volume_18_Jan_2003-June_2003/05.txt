journal of artificial intelligence research                  

submitted       published     

an evolutionary algorithm with advanced goal and priority
specification for multi objective optimization
kay chen tan
eik fun khor
tong heng lee
ramasubramanian sathikannan

eletankc nus edu sg
eikfun khor seagate com
eleleeth nus edu sg
k sathi gsk com

national university of singapore
  engineering drive    singapore       
republic of singapore

abstract
this paper presents an evolutionary algorithm with a new goal sequence domination scheme for
better decision support in multi objective optimization  the approach allows the inclusion of
advanced hard soft priority and constraint information on each objective component  and is capable
of incorporating multiple specifications with overlapping or non overlapping objective functions via
logical or and and connectives to drive the search towards multiple regions of trade off  in
addition  we propose a dynamic sharing scheme that is simple and adaptively estimated according to
the on line population distribution without needing any a priori parameter setting  each feature in the
proposed algorithm is examined to show its respective contribution  and the performance of the
algorithm is compared with other evolutionary optimization methods  it is shown that the proposed
algorithm has performed well in the diversity of evolutionary search and uniform distribution of
non dominated individuals along the final trade offs  without significant computational effort  the
algorithm is also applied to the design optimization of a practical servo control system for hard disk
drives with a single voice coil motor actuator  results of the evolutionary designed servo control
system show a superior closed loop performance compared to classical pid or rpt approaches 

   introduction
many real world design tasks involve optimizing a vector of objective functions on a feasible
decision variable space  these objective functions are often non commensurable and in
competition with each other  and cannot be simply aggregated into a scalar function for
optimization  this type of problem is known as multi objective  mo  optimization problem  for
which the solution is a family of points known as a pareto optimal set  goldberg         where
each objective component of any member in the set can only be improved by degrading at least one
of its other objective components  to obtain a good solution via conventional mo optimization
techniques such as the methods of inequalities  goal attainment or weighted sum approach  a
continuous cost function and or a set of precise settings of weights or goals are required  which are
usually not well manageable or understood  grace        osyczka        
emulating the darwinian wallace principle of survival of the fittest in natural selection and
genetics  evolutionary algorithms  eas   holland        have been found to be effective and
efficient in solving complex problems where conventional optimization tools fail to work well 
     ai access foundation and morgan kaufmann publishers  all rights reserved 

fitan  khor  lee    sathikannan

the eas evaluate performances of candidate solutions at multiple points simultaneously  and are
capable of approaching the global optimum in a noisy  poorly understood and or non differentiable
search space  goldberg        
since schaffers work         evolutionary algorithm based search techniques for mo
optimization have been gaining significant attention from researchers in various disciplines  this
is reflected by the high volume of publications in this topic in the last few years as well as the first
international conference on evolutionary multi criteria optimization  emo    held in march
     at zurich  switzerland  readers may refer to  coello coello              deb       
fonseca        van veldhuizen   lamont        zitzler   thiele        on detailed
implementation of various evolutionary techniques for mo optimization 
unlike most conventional methods that linearly combine multiple attributes to form a composite
scalar objective function  the concept of pareto s optimality or modified selection scheme is
incorporated in an evolutionary mo optimization to evolve a family of solutions at multiple points
along the trade off surface simultaneously  fonseca   fleming         among various selection
techniques for evolutionary mo optimization  the pareto dominance scheme  goldberg       
that assigns equal rank to all non dominated individuals is an effective approach for comparing the
strengths among different candidate solutions in a population  fonseca   fleming         starting
from this principle  fonseca and fleming        proposed a pareto based ranking scheme to
include goal and priority information for mo optimization  the underlying reason is that certain
user knowledge may be available for an optimization problem  such as preferences and or goals to
be achieved for certain objective components  this information could be useful and incorporated
by means of goal and priority vectors  which simplify the optimization process and allow the
evolution to be directed towards certain concentrated regions of the trade offs  although the
ranking scheme is a good approach  it only works for a single goal and priority vector setting 
which may be difficult to define accurately prior to an optimization process for real world
optimization problems  moreover  the scheme does not allow advanced specifications  such as
logical and and or operations among multiple goals and priorities 
based on the pareto based domination approach  this paper reformulates the domination scheme
to incorporate advanced specifications for better decision support in mo optimization  besides the
flexibility of incorporating goal and priority information on each objective component  the
proposed domination scheme allows the inclusion of hard soft priority and constraint
specifications  in addition  the approach is capable of incorporating multiple specifications with
overlapping or non overlapping objective functions via logical or and and connectives to
drive the search towards multiple regions of the trade off  the paper also proposes a dynamic
sharing scheme  which computes the sharing distance adaptively based upon the on line
population distribution in the objective domain without the need of any a priori parameter setting 
the dynamic sharing approach is essential since it eliminates the difficulty of manually finding an
appropriate sharing distance prior to an optimization process  the choice of such a distance would
be sensitive to the size and geometry of the discovered trade offs  coello coello        fonseca  
fleming        
this paper is organized as follows  the formulation of the proposed domination scheme for
better decision support is presented in section    a dynamic sharing scheme that estimates the
   

fian evolutionary algorithm for multi objective optimization

sharing distance adaptively based upon the on line population distribution is described in section   
section   examines the usefulness and contribution of each proposed feature in the algorithm  the
performance comparison of the proposed algorithm with other evolutionary mo optimization
methods is also shown in the section  practical application of the proposed algorithm to servo
control system design optimization is given in section    conclusions are drawn in section   

   advanced goal and priority specifications for mo optimization
a multi objective optimization problem seeks to optimize a vector of non commensurable and
often competing objectives  i e   it tends to find a parameter set p for min f   p     p  r n   where p
p

   p   p    pn  is a n dimensional vector having n decision variables or parameters  and  defines
a feasible set of p  f    f   f    fm  is an objective vector with m objectives to be minimized  for
a mo optimization problem with simple goal or priority specification on each objective function 
the pareto based ranking scheme is sufficient  fonseca   fleming         in practice  however  it
may be difficult to define an accurate goal and priority setting in a priori to an optimization process
for real world optimization problems  besides goal and priority information  there could also be
additional supporting specifications that are useful or need to be satisfied in the evolutionary search 
such as optimization constraints or feasibility of a solution  moreover  the pareto based ranking
scheme does not allow advanced specifications  such as logical and and or operations
among multiple goals and priorities for better decision support in complex mo optimization  in
this section  a new goal sequence pareto based domination scheme is proposed to address these
issues and to provide hard soft goal and priority specifications for better controls in the
evolutionary optimization process 
    pareto based domination with goal information

this section is about an effective two stage pareto based domination scheme for mo optimization 
which is then extended to incorporate advanced soft hard goal and priority specifications  consider
a minimization problem  an objective vector fa is said to dominate another objective vector fb
based on the idea of pareto dominance  denoted by fa  fb  iff f a  i  f b i  i            m  and
f a   j   f b  j for some j            m    adopting this basic principle of pareto dominance  the first

stage in the proposed domination approach ranks all individuals that satisfy the goal setting to
minimize the objective functions as much as possible  it assigns the same smallest cost for all
non dominated individuals  while the dominated individuals are ranked according to how many
individuals in the population dominate them  the second stage ranks the remaining individuals that
do not meet the goal setting based upon the following extended domination scheme  let fa
fb

 
a

 
a

and

denote the component of vector fa and fb respectively  in which fa does not meet the
   

fitan  khor  lee    sathikannan

goal g   then for both fa and fb that do not totally satisfy the goal g   the vector fa is said
to dominate vector fb  denoted by fa  fb   iff
g

 
a

 
a

  fa  fb   or  abs  fa  g   abs  fb  g  

   

for this  the rank begins from one increment of the maximum rank value obtained in the first
stage of the cost assignment  therefore individuals that do not meet the goal will be directed toward
the goal and the infinum in the objective domain  while those that have satisfied the goal will only
be directed further towards the infinum  note that the domination comparison operator is
non commutative   fa  fb  fb  fa    figure   shows an optimization problem with two
g

g

objectives f  and f  to be minimized  the arrows in figure   indicate the transformation according
to f    f  g of the objective function f to f  for individuals that do not satisfy the goal  with
the goal as the new reference point in the transformed objective domain  it is obvious that the
domination scheme is simple and efficient for comparing the strengths among partially or totally
unsatisfactory individuals in a population  for comparisons among totally satisfactory individuals 
the basic pareto dominance is sufficient 
to study the computational efficiency in the approach  the population is divided into two
separate groups classified by the goal satisfaction  and the domination comparison is performed
separately in each group of individuals  the total number of domination comparisons for the
two stage domination scheme is nc     ng    ng       ng    ng       where ng  is the number of
individuals that completely satisfy the goal g and ng  is the number of individuals partially satisfy
or completely not satisfy the goal g  note that ng    ng    n for a population size of n  hence  in
any generation  nc is always less than or equal to the total number of domination comparisons
among all individuals in a population  each individual in the population is compared with  n   
individuals   i e   nc  nnc   n   n       in the next section  the two stage pareto based
domination scheme will be extended to incorporate soft hard priority specifications for advanced
mo optimization 

   

fian evolutionary algorithm for multi objective optimization

f 

 
 

 

 

 

 

g
 
 

 
 
 

 

f 

figure    advanced pareto domination scheme with goal information
    goal sequence domination scheme with soft hard priority specifications

one of the advanced capabilities in evolutionary mo optimization is to incorporate cognitive
specification  such as priority information that indicates the relative importance of the multiple
tasks to provide useful guidance in the optimization  consider a problem with multiple
non commensurable tasks  where each task is assigned a qualitative form of priority indicating its
relative importance  in general  there exist two alternatives to accomplish these tasks  i e   to
consider one task at a time in a sequence according to the task priority or to accomplish all tasks at
once before considering any individual task according to the task priority  intuitively  the former
approach provides good optimization performance for tasks with higher priority and may result in
relatively poor performance for others  this is due to the fact that optimizing the higher priority
tasks may be at the performance expense of the lower priority tasks  this definition of priority is
denoted as hard priority in this paper  on the other hand  the latter approach provides a
distributed approach in which all tasks aim at a compromise solution before the importance or
priority of individual task is considered  this is defined as  soft  priority  similarly  priorities for
different objective components in mo optimization can be classified as  hard  or  soft  priority 
with hard priorities  goal settings  if applicable  for higher priority objective components must be
satisfied first before attaining goals with lower priority  in contrast  soft priorities will first optimize
the overall performance of all objective components  as much as possible  before attaining any goal
setting of an individual objective component in a sequence according to the priority vector 
to achieve greater flexibility in mo optimization  the two stage pareto based domination
scheme is further extended to incorporate both soft and hard priority specifications with or without
goal information by means of a new goal sequence domination  here  instead of having one priority
vector to indicate priorities among the multiple objective components  fonseca   fleming        
two kinds of priority vectors are used to accommodate the soft hard priority information  consider
an objective priority vector  pf   xm and a goal priority vector  pg   xm  where pf i  represents
the priority for the ith objective component f i  that is to be minimized  pg i  denotes the priority for
   

fitan  khor  lee    sathikannan

the ith goal component g i  that is to be attained  m is the number of objectives to be minimized and
 denotes the natural numbers  the elements of the vector pf and pg can take any value in the
natural numbers  with a lower number representing a higher priority and zero representing a dont
care priority assignment  note that repeated values among the elements in pf and pg can be used to
indicate equal priority provided that pf i   pg i   i           m   avoiding contradiction of the
priority assignment  with the combination of an objective priority vector pf and a goal priority
vector pg  soft and hard priorities can be defined provided that there is more than one preference
among the objective components as given by
   pf   pf  j         pg   pg  j        for some j           m 
   
based on this  a priority setting is regarded as soft iff
 i           m     pf   pf  i         pg   pg  i       
   
else  the priority is denoted as hard 
for example  the settings of pf                and pg                for a   objective optimization
problem indicate that the first and second objective components are given top priority to be
minimized  as much as possible  before considering minimization of the third and fourth objective
components  since all elements in pg are zeros  dont care   no goal components will be considered
in the minimization in this case  on the other hand  the setting of pf                and pg               
imply that the first and second objective components are given the first priority to meet their
respective goal components before considering the goal attainment for the third and fourth
objective components  the above two different priority settings are all categorized as hard
priorities since in both cases  objective components with higher priority are minimized before
considering objective components with lower priority  for soft priority as defined in eq     the
objective priority vector and goal priority vector can be set as pg                and pf                
respectively  this implies that the evolution is directed towards minimizing all of the objective
components to the goal region before any attempt to minimize the higher priority objective
components in a sequence defined by the priority vector 
to systematically rank all individuals in a population to incorporate the soft hard priority
specifications  a sequence of goals corresponding to the priority information can be generated and
represented by a goal sequence matrix g where the kth row in the matrix represents the goal vector
for the corresponding kth priority  the number of goal vectors to be generated depends on the last
level of priority z  where z is the maximum value of any one element of pg and pf as given by
z   max pg i   pf j  

 i  j            m 

   

for this  the goal vectors with kth priority in the goal sequence matrix gk i  for the priority index k
         z is defined as

g  i  

i          m  g k  i      min f j         n  i   
max f
j         n  i   


if pg  i     k
if p f  i     k

   

otherwise

where n denotes the population size  min f j         n  i    and max f j         n  i    represents the
minimum and maximum value of the ith objective function from the on line population distribution 
   

fian evolutionary algorithm for multi objective optimization

respectively  in eq     for any ith objective component of any k priority level  the reason for
assigning gk i  with g i  is to guide the individuals towards the goal regions  min f j         n  i    is
to minimize the corresponding objective component as much as possible  and max f j         n  i    is
to relax the requirements on the individuals to give other objective components more room for
improvement  according to eq     the goal sequence matrix gk i  is dynamic at each generation  as
the values of min f j         n  i    and max f j         n  i    are dynamically computed depending on the
on line population distribution  after computing the sequence of goals gk  k          z   the
individuals are first ranked according to the computed goal g  for the first priority  then each
group of individuals that has the same ranks will be further compared and ranked according to next
goal g  for the second priority to further evaluate the individuals  domination in a population  in
general  this ranking process continues until there is no individual with the same rank value or after
ranking the goal gz that has the lowest priority in the goal sequence matrix  note that individuals
with the same rank value will not be further evaluated for those components with dont care
assignments 
with the proposed goal sequence domination scheme as given in eq     both hard and soft
priority specifications can be incorporated in mo optimization  without loss of generality  consider
a two objective optimization problem  with f  having a higher priority than f   as well as a goal
setting of g    g   g    for soft priority optimization as defined in eq     the goal priority vector and
objective priority vector can be set as pg          and pf           respectively  let min f i   and
max f i   denote the minimum and maximum value of the i objective component of f in a
population  respectively  the relevant goals in the goal sequence matrix for each priority level as
defined in eq    are then given as g    g for the first priority and g     min f      max f     
for the second priority  the goal sequence domination scheme for the two objective minimization
problem is illustrated in figure    here  the rank value of each individual is denoted by r   r  
where r  and r  is the rank value after the goal sequence ranking of the first and second priority 
respectively  the preference setting indicates that both g  and g  are given the same priority to be
attained in the optimization before individuals are further ranked according to the higher priority of
f   this is illustrated in figure  a  which shows the location of the desired pareto front  represented
by the dark region  and the expected evolution direction  represented by the curved arrow  in the
objective domain for an example with an unfeasible goal setting g 
for hard priority optimization as defined in eqs    and    the goal priority vector and objective
priority vector can be set as pg          and pf           respectively  according to eq     this gives a
goal sequence of g     g   max f     and g     max f      g   for the first and second priority 
respectively  it implies that g  is given higher priority than g  to be attained in the optimization 
figure  b shows the location of the desired pareto front  represented by dark region  and the
expected evolution direction  represented by curved arrow  in the objective domain  as compared
to the solutions obtained in soft priority optimization  hard priority optimization attempts to attain
the first goal component and leads to the solution with better f   higher priority  but worse f   lower
priority   it should be mentioned that the setting of soft hard priority may be subjective or problem
   

fitan  khor  lee    sathikannan

dependent in practice  in general  the hard priority optimization may be appropriate for problems
with well defined goals in order to avoid stagnation with unfeasible goal settings  soft priority
optimization is more suitable for applications where moderate performance among various
objective components is desired  besides soft hard priority information  there may be additional
specifications such as optimization constraints that are required to be satisfied in the optimization 
these specifications could be easily incorporated in mo optimization by formulating the
constraints as additional objective components to be optimized  fonseca   fleming         this
will be discussed in the next section 
f 
g  

  
  
  

g  

g 

   
  

  
  
  

g 

f 

figure    goal sequence domination with goal g    g   g    priority pg          and pf         

f 

f 

g  

g   

max f    

tinon

o
evoluti

luo
eevvooluti

n

desired solution
desired solution

g 

g
g   

g 

unfeasible
region

g

g  

unfeasible
region

g 

g 

f 

max f    

f 

 a  soft priority f  higher than f 
 b  hard priority f  higher than f 
figure    illustration of soft and hard priority with unfeasible goal setting
    optimization with soft and hard constraints

constraints often exist in practical optimization problems  luus et al        michalewicz  
schoenauer         these constraints are often incorporated in the mo optimization function as
   

fian evolutionary algorithm for multi objective optimization

one of the objective components to be optimized  it could be in the form of  hard  constraint where
the optimization is directed towards attaining a threshold or goal  and further optimization is
meaningless or not desirable whenever the goal has been satisfied  in contrast  a  soft  constraint
requires that the value of objective component corresponding to the constraint is optimized as much
as possible  an easy approach to deal with both hard and soft constraints concurrently in
evolutionary mo optimization is given here  at each generation  an updated objective function fx 
concerning both hard and soft constraints for an individual x with its objective function fx can be
computed in a priori to the goal sequence domination scheme as given by
 g  i   if  g  i  is hard     f x  i    g  i   
 
f x  i    
otherwise
f x  i  

i           m 

   

in eq     any objective component i that corresponds to a hard constraint is assigned to the value
of g i  whenever the hard constraint has been satisfied  the underlying reason is that there is no
ranking preference for any particular objective component that has the same value in an
evolutionary optimization process  and thus the evolution will only be directed towards optimizing
soft constraints and any unattained hard constraints  as desired 
    logical connectives among goal and priority specifications

for mo optimization problems with a single goal or priority specification  the decision maker often
needs to guess an appropriate initial goal or priority vector and then manually observe the
optimization progress  if any of the goal components is too stringent or too generous  the goal
setting will have to be adjusted accordingly until a satisfactory solution can be obtained  this
approach obviously requires extensive human observation and intervention  which can be tedious
or inefficient in practice  marcu        proposed a method of adapting the goal values based upon
the on line population distribution at every generation  however  the adaptation of goal values is
formulated in such a way that the search is always uniformly directed towards the middle region of
the trade offs  this restriction may be undesirable for many applications  where the trade off
surface is unknown or the search needs to be directed in any direction other than the middle region
of the trade off surface  to reduce human interaction and to allow multiple sets of goal and priority
specifications that direct the evolutionary search towards a different portion of the trade off surface
in a single run  the goal sequence domination scheme is extended in this section to enable logical
statements such as or      and and      operations among multiple goal and priority
specifications 
these logical operations can be built on top of the goal sequence domination procedure for each
specification  by doing this  the unified rank value for each individual can be determined and taken
into effect immediately in the evolution towards the regions concerned  consider ranking an
objective vector fx by comparing it to the rest of the individuals in a population with reference to
two different specification settings of si and sj  where si and sj are the specifications concerning
any set of objective functions with or without goals and priorities  let these ranks be denoted by
rank fx  si  and rank fx  sj   respectively  the or and and operations for the two goal
settings are then defined as 
   

fitan  khor  lee    sathikannan

rank   fx   s i  s j     min rank   fx   s i    rank   fx   s j   

  a 

rank   fx   s i  s j     max rank   fx   s i    rank   fx   s j   

  b 

according to eq     the rank value of vector fx for an or operation between any two
specifications si and sj takes the minimum rank value with respect to the two specification settings 
this is in order to evolve the population towards one of the specifications in which the objective
vector is less strongly violated  in contrast  an and operation takes the maximum rank value in
order to direct the evolutionary search towards minimizing the amount of violation from both of the
specifications concurrently  clearly  the and and or operations in eq    can be easily
extended to include general logical specifications with more complex connectives  such as  si or
sj  and  sk or sl   if desired 

   dynamic sharing scheme and moea program flowchart
    dynamic sharing scheme

fitness sharing was proposed by goldberg and richardson        to evolve an equally distributed
population along the pareto optimal front or to distribute the population at multiple optima in the
search space  the method creates sub divisions in the objective domain by degrading an individual
fitness upon the existence of other individuals in its neighborhood defined by a sharing distance 
the niche count  mi    nj sh d i   j     is calculated by summing a sharing function over all members of
the population  where the distance di j represents the distance between individual i and j  the
sharing function is defined as

  d i j  

sh d i   j          share 

 


if d i   j    share

   

otherwise

with the parameter  being commonly set to   
the sharing function in eq    requires a good setting of sharing distance share to be estimated
upon the trade off surface  which is usually unknown in many optimization problems  coello
coello         moreover  the size of objective space usually cannot be predefined  as the exact
bounds of the objective space are often undetermined  fonseca and fleming        proposed the
method of kernel density estimation to determine an appropriate sharing distance for mo
optimization  however  the sharing process is performed in the sphere space which may not
reflect the actual objective space for which the population is expected to be uniformly distributed 
miller and shaw        proposed a dynamic sharing method for which the peaks in the parameter
domain are dynamically detected and recalculated at every generation with the sharing distance
remains predefined  however  the approach is made on the assumption that the number of niche
peaks can be estimated and the peaks are all at the minimum distance of  share from each other 
   

fian evolutionary algorithm for multi objective optimization

moreover  their formulation is defined in the parameter space to handle multi modal function
optimization  which may not be appropriate for distributing the population uniformly along the
pareto optimal front in the objective domain 
in contrast to existing approaches  we propose a dynamic sharing method that adaptively
computes the sharing distance share to uniformly distribute all individuals along the pareto optimal
front at each generation  this requires no prior knowledge of the trade off surface  intuitively  the
trade offs for an m objective optimization problem are in the form of an  m    dimensional
hyper volume  tan et al         which can be approximated by the hyper volume vpop n  of a
hyper sphere as given by 

v pop

 n 

 

 d  n  


  
 m  

   
   

   m       

m  

   

where d  n   is the diameter of the hyper sphere at generation n  note that computation of the
diameter d  n   depends on the curvature of the trade off curve formed by the non dominated
individuals in the objective space  for a two objective optimization problem  the diameter d  n   is
equal to the interpolated distance of the trade off curve covered by the non dominated individuals
as shown in figure    although computation of d  n   that accurately represents the interpolated
curvature of the non dominated individuals distribution is complex  it can be estimated by the
average distance between the shortest and the longest possible diameter given by dmin n  and dmax n 
respectively  tan et al         let fx and fy denote the objective function of the two furthest
individuals in a population  then dmin n  is equal to the minimum length between fx and fy  and
dmax n  can be estimated by d  n    d  n  as shown in figure   
the same procedure can also be extended to any multi dimensional objective space  to achieve
a uniformly distributed population along the trade off set  the sharing distance share n  could be
computed as half of the distance between each individual in the  m    dimensional hyper volume
vpop n  covered by the population size n at generation n 
n

   m       
 m  

 
   

 n 
 
   share

m  

 n 
  v pop

    

substituting eq    into eq     gives the sharing distance share n  at generation n in term of the
diameter d  n   and the population size n as given by
 n 
 share
  n       m   

d  n 
 

    

clearly  eq     provides a simple computation of share that is capable of distributing the
population evenly along the pareto front  without the need for any prior knowledge of the usually
   

fitan  khor  lee    sathikannan

unknown fitness landscape  moreover  adopting the computation of sharing distance that is
dynamically based upon the population distribution at each generation is also more appropriate and
effective than the method of off line estimation with pre assumed trade off surface as employed in
most existing sharing methods  since the trade off surface may be changed any time along the
evolution whenever the goal setting is altered 
f 

fx

dmin n 
d  n 

discovered
trade off curve

d   n 
fy

d   n 

f 

figure    the diameter d  n   of a trade off curve
    moea program flowchart

the overall program flowchart of this papers multi objective evolutionary algorithm  moea  is
illustrated in figure    at the beginning of the evolution  a population of candidate solutions is
initialized and evaluated according to a vector of objective functions  based upon the user defined
specifications  such as goals  constraints  priorities and logical operations  the evaluated individuals
are ranked according to the goal sequence domination scheme  described in section    in order to
evolve the search towards the global trade off surface  the resulted rank values are then further
refined by the dynamic sharing scheme  described in section      in order to distribute the
non dominated individuals uniformly along the discovered pareto optimal front  if the stopping
criterion is not met  the individuals will undergo a series of genetic operations which are detailed
within the genetic operations in figure    here  simple genetic operations consisting of
tournament selection  tan et al         simple crossover with mating restriction that selects
individuals within the sharing distance for mating  fonseca   fleming        as well as simple
mutation are performed to reproduce offspring for the next generation 
after the genetic operations  the newly evolved population is evaluated and combined with the
non dominated individuals preserved from the previous generation  the combined population is
then subjected to the domination comparison scheme and pruned to the desired population size
according to the switching preserved strategy  sps   tan et al         this maintains a set of
stable and well distributed non dominated individuals along the pareto optimal front  in sps  if the
number of non dominated individuals in the combined population is less than or equal to the
desired population size  extra individuals are removed according to their rank values in order to
promote stability in the evolutionary search towards the final trade offs  otherwise  the
   

fian evolutionary algorithm for multi objective optimization

non dominated individuals with high niched count value will be discarded in order to distribute the
individuals uniformly along the discovered pareto optimal front  after the process  the remaining
individuals are allowed to survive in the next generation and this evolutionary cycle is repeated
until the stopping criterion is met 

p opulation initialization
function evaluation
d om ination com parison

y es

is
stopping criterion
m et 

non dominated individuals

final
population

no
g enetic operations
function evaluation
evolved
population



new population

d ynam ic sharing

com bined
population

d om ination com parison

size nondom  
  popsize 

no

filtering   based on
p areto ranked cost

y es
d ynam ic sharing

filtering   based on
shared costs

figure    program architecture of the moea
genetic operations for moea 
let 
pop n    population in current generation n
step    perform tournament selection to select individuals from pop n   the selected population is
called selpop n  
step    perform simple crossover and mating restriction for selpop n  using the dynamic sharing
distance in step    the resulted population is called crosspop n  
step    perform simple mutation for crosspop n   the resulted population is called evolpop n  
figure    detailed procedure within the box of genetic operations in figure  

   

fitan  khor  lee    sathikannan

   validation results on benchmark problems
this section validates the proposed algorithm in two ways  the first kind of validation  presented in
section      illustrates how each of the proposed features  including goal sequence domination
scheme  hard soft goal and priority specifications  logical operations among multiple goals and
dynamic sharing  enhances the performance of moea in mo optimization  as shown in section
     the second type of validation compares performance of the proposed moea with various
evolutionary algorithms based upon a benchmark problem  various performance measures are used
in the comparison and the results are then discussed 
    validation of the proposed features in moea

in this section  various proposed features in moea are examined for their usefulness in mo
optimization  this study adopts the simple two objective minimization problem  fonseca  
fleming        that allows easy visual observation of the optimization performance  the function
has a large and non linear trade off curve  which challenges the algorithms ability to find and
maintain the entire pareto optimal front uniformly  the two objective functions  f  and f   to be
minimized are given as
  
  

f    x        x         exp    xi 
 i    
 



 






 
  
   

f     x        x         exp    xi  
 i    
   


    

where      xi      i               the trade off line is shown by the curve in figure    where the
shaded region represents the unfeasible area in the objective domain 

f

 

trade off
curve

unfeasible
region

f

 

figure    pareto optimal front in the objective domain
   

fian evolutionary algorithm for multi objective optimization

the simulations are run for    generations with a population size of      standard mutation with
a probability of      and standard two point crossover with a probability of     are used  to study
the merit of the dynamic sharing scheme in moea as proposed in section        different types of
simulations have been performed  the first type is without fitness sharing  the second and third
employ a fixed sharing distance of      and      respectively  the fourth uses the dynamic sharing
scheme which does not require any predefined sharing distance setting  figure   illustrates the
respective population distribution in the objective domain at the end of the evolution  it can be
observed that all of the four simulations are able to discover the final trade off  but with some
performance difference in terms of the closeness and uniformity of the population distribution
along the trade off curve 
for the moea without fitness sharing as shown in figure  a  the population tends to converge
to an arbitrary part of the trade off curve  this agrees with the findings of fonseca and fleming 
        for the moea with fitness sharing  as shown in figures  b and  c  the population can be
distributed along the trade off curve rather well  although the sharing distance of      provides a
more uniform distribution than that of      this indicates that although fitness sharing contributes
to population diversity and distribution along the trade off curve  the sharing distance has to be
chosen carefully in order to ensure the uniformity of the population distribution  this often
involves tedious trial and error procedures in order to guess an appropriate sharing distance 
since it is problem dependent and based upon the size of the discovered trade offs as well as the
number of non dominated individuals  these difficulties can be solved with the proposed dynamic
sharing scheme  which has the ability to automatically adapt the sharing distance along the
evolution without the need of any predefined parameter  as shown in figure  d 

 b  sharing distance       

 a  no sharing

   

fitan  khor  lee    sathikannan

 c  sharing distance      
 d  dynamic sharing
figure    performance validation of dynamic sharing scheme in moea

f 

f 

to validate the contribution of the switching preserved strategy  sps  in moea  the above
simulation was repeated with different scenarios and settings  figure  a depicts the simulation
result without the implementation of sps  in which the evolution faces difficulty converging to the
trade off curve  the solid dots represent the non dominated individuals while the empty circles
represent the dominated individuals  as can be seen  the final population is crowded and the
non dominated individuals are distributed with some distance away from the trade off curve 
figure  b shows the simulation result for the moea with sps and filtering solely based upon the
pareto domination  the final population has now managed to converge to the pareto optimal front 
however  the non dominated individuals are not equally distributed and the diversity of the
population is poor  they only concentrate on a portion of the entire trade off curve  c f  figures  d 
 b   these results clearly show that sps in moea is necessary in order to achieve good stability
and diversity of the population in converging towards the complete set of trade offs 

unfeasible
region

unfeasible
region

f 

f 

 b  with sps solely based on pareto ranked cost
 a  without sps
figure    performance validation of sps in moea

   

fian evolutionary algorithm for multi objective optimization

f 

f 

the proposed goal sequence domination scheme was also validated for problems with different
goal settings  including a feasible but extreme goal setting of             and an unfeasible goal
setting of            as shown in figures    and     respectively  as desired  the population is seen
to concentrate on the preferred region of the trade off curve at the end of the evolution  regardless
of the unattainable or extreme goal settings  as shown in figures    and     moea is capable of
uniformly distributing the non dominated individuals along any trade offs size resulting from
different goal settings  with the help of the dynamic sharing scheme that automatically computes a
suitable sharing distance for optimal population distribution at each generation 

f 

f 

figure     feasible but extreme goal setting

figure     unfeasible goal setting

figure    shows the trace of sharing distance during the evolution  the thin and thick lines
represent the average sharing distance without any goal setting  see figure  d for the corresponding
pareto front  and with the goal setting of             see figure    for the corresponding
pareto front   respectively  generally  mo optimization without a goal setting has an initially small
size of discovered pareto front  which subsequently grows along with the evolution to approach
and cover the entire trade off region at the end of evolution  this behavior is explained in figure   
where the sharing distance increases asymptotically along the evolution until a steady value of
       is reached  it should be noted that this value is close to the fixed sharing distance of      in
figure  b  which was carefully chosen after trial and error procedures  for the case of moea with
a goal setting of             the sharing distance increases initially and subsequently decreases to
       along the evolution  which is lower than the value of         without goal setting   the
reason is that the concentrated trade off region within the goal setting is smaller than the entire
trade off region  without goal setting   and hence results in a smaller distance for uniform sharing
of non dominated individuals  these experiments show that the proposed dynamic sharing scheme
can effectively auto adapt the sharing distance to arrive at an appropriate value for uniform
population distribution along the discovered trade off region at different sizes  without the need for
any a priori parameter setting 

   

fitan  khor  lee    sathikannan

figure     trace of the dynamic sharing distance along the evolution

non dominated
individual

f 

f 

figures    and    show the moea simulation results for the case of an infeasible goal setting
with soft and hard priorities  respectively  in the figures  diamonds represent goals  small circles
represent non dominated individuals and solid dots represent dominated individuals  for the soft
priority setting in figure     goals are treated as first priority followed by the objective component
of f  as second priority  i e   pg          and pf           as can be seen  it provides a distributive
optimization approach for all goals by pushing the population towards the objective component of
f  that has a higher priority  after taking the goal vector into consideration  c f  figures  a    b   in
contrast  figure    shows the minimization results with hard priority setting where priority of f  is
higher than f   i e   pg          and pf           unlike the soft priority optimization  hard priority
minimizes the objective of f  until the relevant goal component of g        is satisfied before
attaining the objective component of f  with the second goal component of g         as shown in
figure     c f  figures  b    b   as can be seen  objective values with hard priority settings are
better with higher priority but are worse with lower priority  as compared to the solutions obtained
in soft priority optimization  c f  figures   b    b  

non dominated
individual

ff 

f 

 a  at generation  
 b  at generation   
figure     moea optimization with unfeasible goal setting  f  has soft priority higher than f 
   

finon dominated
individual

f 

f 

an evolutionary algorithm for multi objective optimization

non dominated
individual

ff  

f 

 a  at generation  
 b  at generation   
figure     moea optimization with unfeasible goal setting  f  has hard priority higher than f 

ff  

figure    shows the moea minimization result with f  being a hard constraint  the population
continuously evolves towards minimizing f  only after the hard constraint of f  has been satisfied  in
general  objective components with hard constraints may be assigned as hard priorities in order to
meet the hard constraints before minimizing any other objective components 

non dominated
individuals

ff  

figure     moea minimization with hard constraint on f 
figures    and    show the mo optimization results that include multiple goal settings specified
by logical or      and and      connectives  respectively  for the or operation as shown
in figure     the population is automatically distributed and equally spread over the different
concentrated trade off regions to satisfy the goal settings separately  regardless of the overlapping
or feasibility of the goals  with the proposed dynamic sharing scheme  the sub population size for
each goal is in general based upon the relative size of the concentrated trade off surface of that goal 
   

fitan  khor  lee    sathikannan

and thus individuals are capable of equally distributing themselves along the different concentrated
trade off regions  for the and operation as illustrated in figure     the whole population
evolves towards minimizing all the goals g   g  and g  simultaneously  as a result  the individuals
are equally distributed over the common concentrated trade off surface formed by the three goals 
as desired 
pareto optimality observation

gg   

g
g  
f 

g 
g
 
gg   

f 

figure     moea minimization for  g   g   g   g  
pareto optimality observation

gg  

g  

f 

g
g  

f 

figure     moea minimization for  g   g   g  
    performance comparisons of moea

this section studies and compares the performance of the proposed moea with other
multi objective evolutionary optimization methods based upon a benchmark mo optimization
problem  for a comprehensive comparison  various performance measures are used and the
comparison results are discussed in the section 
      the test problem
   

fian evolutionary algorithm for multi objective optimization

the test problem used for the performance comparisons is a two objective minimization problem
 deb         the problem is chosen because it has a discontinuous pareto front which challenges
the evolutionary algorithms ability to find and maintain the pareto optimal solutions that are
discontinuously spread in the search space  the problem involves minimizing the objective
functions f  and f  as given below 

f    x      x 
g   x        x             
h  f     g          f   g  

    

   a 

  
i     xi
 
     

   f  g  sin    f   

f     x      g   x        x    h  f    g  

   b 
   c 

   d 

all variables are varied in        and the true pareto optimal solutions are constituted with xi    
 i           and the discontinuous values of x  in the range of         deb         figure   
depicts the discontinuous pareto optimal front  in bold   the shaded region represents the
unfeasible region in the search space 

figure     pareto optimal front in the objective domain
      current evolutionary mo optimization methods

besides moea  five well known multi objective evolutionary optimization methods are used in
the comparison  these approaches differ from each other in their working principles and
mechanisms and have been widely cited or applied to real world applications  the algorithms are
summarized below and readers may refer to their respective references for detailed information 
 i  fonseca and flemings genetic algorithm  ffga   for mo optimization  fonseca and
fleming        proposed a multi objective genetic algorithm  moga  with pareto based ranking
scheme  in which the rank of an individual is based on the number of other individuals in the current

   

fitan  khor  lee    sathikannan

population that dominate it  their algorithm was further incorporated with fitness sharing and
mating restriction to distribute the population uniformly along the pareto optimal front 
 ii  niched pareto genetic algorithm  npga   the method of npga  horn   nafpliotis       
works on a pareto dominance based tournament selection scheme to handle multiple objectives
simultaneously  to reduce the computational effort  a pre specified number of individuals are
picked as a comparison set to help determine the dominance  when both competitors end in a tie 
the winner is decided through fitness sharing  goldberg and richardson        
 iii  strength pareto evolutionary algorithm  spea   the main features of spea  zitzler  
thiele        are the usage of two populations  p and p  and clustering  in general  any
non dominated individual is archived in p and any dominated individual that is dominated by
other members in p is removed  when the number of individuals in p exceeds a maximum value 
clustering is adopted to remove the extra individuals in p  tournament selection is then applied to
reproduce individuals from p   p before the evolution proceeds to the next generation 
 iv  non generational genetic algorithm  ngga   in ngga  borges   barbosa         a cost
function of an individual is a non linear function of domination measure and density measure on
that individual  instead of evolving the whole population at each iteration  a pair of parents is
selected to reproduce two offsprings  an offspring will replace the worst individual in a population
if the offspring has lower cost function than the worst individual 
 v  murata and ishibuchis genetic algorithm  miga   unlike the above evolutionary
optimization methods  miga  murata   ishibuchi        applies the method of weighted sum to
construct the fitness of each individual in a population  to keep the diversity of the population
along the pareto optimal front  the weights are randomly specified when a pair of parent solutions
is selected from a current population for generating the offspring 
      performance measures

this section considers three different performance measures which are complementary to each
other  size of space covered  ssc   uniform distribution  ud  index of non dominated individuals
and number of function evaluation  neval  
 i  size of space covered  ssc   this measure was proposed by zitzler and thiele        as a
measure to quantify the overall size of phenotype space covered  ssc  by a population  in general 
the higher the value of ssc  the larger the space covered by the population and hence the better the
optimization result 
 ii  uniform distribution  ud  of non dominated population  besides the size of space covered
by a population  it is also essential to examine the ability of an evolutionary optimization to
distribute their non dominated individuals as uniformly as possible along the discovered
   

fian evolutionary algorithm for multi objective optimization

pareto optimal front  unless prohibited by the geometry of the pareto front  this is to achieve a
smooth transition from one pareto optimal solution to its neighbors  thus facilitating the
decision maker in choosing his her final solution  mathematically  ud x   for a given set of
non dominated individuals x  in a population x  where x   x  is defined as  tan et al      a  
ud x     

 
    s nc

    

where snc is the standard deviation of niche count of the overall set of non dominated individuals x  
it can be seen that larger value of ud x  indicates a more uniform distribution and vice versa 
 iii  number of function evaluation  neval   the computational effort required to solve an
optimization problem is often an important issue  especially when only limited computing
resources are available  in the case that a fixed period of cpu time is allocated and the cpu time
for each function evaluation is assumed to be equal  then more function evaluations being
performed by an optimization indirectly indicates less additional computational effort is required
by the algorithm 
      simulation settings and comparison results
the decimal coding scheme  tan et al        is applied to all the evolutionary methods studied in
this comparison  where each parameter is coded in   digit decimals and all parameters are
concatenated together to form a chromosome  in all cases  two point crossover with a probability of
     and standard mutation with a probability of      are used  a reproduction scheme is applied
according to the method used in the original literature of each algorithm under comparison  the
population size of     is used in ffga  npga  ngga and moea  which only require a single
population in the evolution  spea and miga are assigned a population size of    and    for their
external archive and evolving population size  respectively  which form an overall population size
of      all approaches under comparison were implemented with the same common sub functions
using the same programming language in matlab  the math works        on an intel pentium ii
    mhz computer  each simulation is terminated automatically when a fixed simulation period of
    seconds is reached  the simulation period is determined  after a few preliminary runs  in such a
way that different performance among the algorithms could be observed  to avoid random effects 
   independent simulation runs  with randomly initialized population  have been performed on
each algorithm and the performance distributions are visualized in the box plot format  chambers
et al        zitzler   thiele        
figure    displays the performance of ssc  size of space covered  for each algorithm  in general 
spea and moea produce a relatively high value of ssc indicating their ability to have a more
distributed discovered pareto optimal front and or to produce more non dominated solutions that
are nearer to the global trade offs  it can also be observed that  compared to the others  ffga 
spea and moea are more consistent in the performance of ssc  the performance of ud
 uniform distribution  for all algorithms is summarized in figure     in general  the ud
distributions are mostly overlapping with each other and thus there is too little evidence to draw any
   

fitan  khor  lee    sathikannan

strong conclusion  however  as the average performance is concerned  see bold horizontal line in
the box plots   spea  miga and moea outperform others slightly and are more consistent in
terms of the measure of ud  figure    shows the distribution of neval  number of function
evaluation  performed by each algorithm in a specified time  more function evaluations in a fixed
cpu time indirectly indicates that less cpu time is required by the algorithm  intuitively  this
means less computational efforts are required by the algorithm to find the trade offs  as shown in
figure     miga requires the least algorithm effort while the performances of ffga  npga and
moea are moderate in terms of neval  it can also be observed that spea and ngga are suitable
for problems with time consuming function evaluations  the effects in algorithm effort become less
significant in these problems  in summary  the results show that moea requires moderate
computational effort and exhibits a relatively good performance in terms of ssc and ud on the test
problem  as compared to other mo evolutionary optimization methods in this study 

figure     box plot of ssc

figure     box plot of ud

   

fian evolutionary algorithm for multi objective optimization

figure     box plot of neval
figure    shows the distribution of non dominated individuals in the objective domain  where
the range of each axis is identical to the range shown in figure     for each algorithm  the
distribution is the best selected  among the    independent runs  with respect to the measure of ssc 
it can be seen from figure    that moea benefits from evolving more non dominated individuals
than the other methods  moeas individuals are also better distributed within the trade off region 

ffga

npga

spea

ngga

miga

moea

figure     best selected distribution of non dominated individuals from each algorithm with
respect to the measure of ssc

   

fitan  khor  lee    sathikannan

   application to practical servo control system design
    the hard disk drive servo system
a typical plant model of hard disk drive  hdd  servo system includes a driver  power amplifier   a
vcm  voice coil motor  and a rotary actuator that is driven by the vcm  figure     goh et al 
      shows a basic schematic diagram of a head disk assembly  hda   where several rotating
disks are stacked on the spindle motor shaft 
voice coil motor
actuator

disk

arm

suspension and
recording head

data track

figure     a hdd with a single vcm actuator servo system
the dynamics of an ideal vcm actuator is often formulated as a second order state space model
 weerasooriya        

 y     k y  y     
      u
    
 v        v   k v 

    

where u is the actuator input  in volts   y and v are the position  in tracks  and the velocity of the
r w head  kv is the acceleration constant and ky the position measurement gain 
where k y   k t m with kt being the current force conversion coefficient and m being the mass of
the vcm actuator  the discrete time hdd plant model used for the evolutionary servo controller
design in this study is given as  tan et al        
         
      
 x k     


       u
  
 



x k        

    

    evolutionary hdd controller design and implementation

a two degree of freedom   dof  control structure is adopted for the read write head servo system
as shown in figure     for simplicity and easy implementation  a simple first order discrete time

   

fian evolutionary algorithm for multi objective optimization

controller with a sampling frequency of   khz is used for the feedforward and feedback controllers 
which is in the form of
 z   ff   

k p   k f 
 z   ff   

 z   fb  

k s   k b 
 z   fb  

    

respectively  the control objective during the tracking in hdd is to follow the destination track
with a minimum tracking error  note that only time domain performance specifications are
considered in this paper  and the design task is to search for a set of optimal controller parameters
 kf  kb  ff   ff   fb   fb   such that the hdd servo system meets all design requirements  these
requirements are that overshoots and undershoots of the step response should be kept less than   
since the head can only read or write within    of the target  the    settling time in the step
response should be less than   milliseconds and settle to the steady state as quickly as possible
 goh et al         besides these performance specifications  the system is also subject to the hard
constraint of actuator saturation  i e   the control input should not exceed   volts due to the
physical constraint on the vcm actuator 

r

kp

u

  

vcm

feedforward
controller

y

plant
ks
feedback controller

figure     the two degree of freedom servo control system
the multi objective evolutionary algorithm  moea  proposed in this paper has been embedded
into a powerful gui based moea toolbox  tan et al      b  for ease of use and for
straightforward application to practical problems  the toolbox is developed under the matlab  the
math works        programming environment  which allows users to make use of the versatile
matlab functions and other useful toolboxes such as simulink  the math works         it allows
any trade off scenario for mo design optimization to be examined effectively  aiding
decision making for a global solution that best meets all design specifications  in addition  the
toolbox is equipped with a powerful graphical user interface  gui  and is ready for immediate use
without much knowledge of evolutionary computing or programming in matlab  a file handling
capability for saving all simulation results and model files in a mat file format for matlab or
text file format for software packages like microsoft excel is also available in the toolbox  through
the gui window of moea toolbox  the time domain design specifications can be conveniently set
as depicted in figure     where tr  os  ts  sse  u and ue represents the rise time  overshoot 
settling time  steady state error  control input and change in control input  respectively 

   

fitan  khor  lee    sathikannan

figure     moea gui window for settings of design specifications
the simulation adopts a generation and population size of      and all the design specifications
listed in figure    have been successfully satisfied at the end of the evolution  the design trade off
graph is shown in figure     where each line representing a solution found  the x axis shows the
design specifications and the y axis shows the normalized cost for each objective  clearly 
trade offs between adjacent specifications result in the crossing of the lines between them  e g  
steady state error  sse  and control effort  u    whereas concurrent lines that do not cross each
other indicating the specifications do not compete with one another  e g   overshoots  os  and
settling time  ts   

figure     trade off graph of the hdd servo control system design

   

fian evolutionary algorithm for multi objective optimization

the closed loop step response of the overall system for an arbitrary selected set of moea
designed  dof controller parameters given as  kf  kb  ff   ff   fb   fb                         
                                     is shown in figure     with a sampling frequency of   khz 
the time domain closed loop performance of the evolutionary designed controller has been
compared with the manually designed discrete time pid controller as given in eq      goh et al 
      as well as the robust and perfect tracking  rpt  controller  goh et al        as given in eq 
   
     z         z      
u 
 r  y  
    
z         z       
x k             x k          r  k          y  k  

    

u  k                x k         r  k         y   k  

it can be seen in figure    that the evolutionary designed  dof controller has outperformed
both the pid and rpt controllers  with the fastest rise time  smallest overshoots and shortest
settling time in the closed loop response  its control performance is excellent and the destination
track crossover occurs at approximately     milliseconds 
   
    moea based  dof controller

   

 

    pid controller
    rpt controller

head position  tracks 

   
   
 

 

 

   
   
   
   
 

 

                                                     

    

time in seconds

figure     closed loop servo system responses with evolutionary  dof  rpt and pid
controllers
the performance of the evolutionary  dof servo control system was further verified and tested
on the physical     inch hdd with a tms    digital signal processor  dsp  and a sampling rate of
  khz  the r w head position was measured using a laser doppler vibrometer  ldv  and the
resolution used was   m volt  real time implementation result of the evolutionary hdd servo
control system is given in figure     which is consistent with the simulated step response in figure
    and shows an excellent closed loop performance 

   

fitan  khor  lee    sathikannan

output response
   

tracks   actuator output  

   

 

   

   

   

   

 

 

                                                     
time in seconds

    

figure     real time implementation response of the evolutionary  dof servo system

   conclusions
this paper has presented a multi objective evolutionary algorithm  moea  with a new
goal sequence domination scheme to allow advanced specifications such as hard soft priorities and
constraints to be incorporated for better decision support in multi objective optimization  in
addition  a dynamic fitness sharing scheme that is simple in computation and adaptively based upon
the on line population distribution at each generation has been proposed  such a dynamic sharing
approach avoids the need for a priori parameter settings or user knowledge of the usually unknown
trade off surface often required in existing methods  the effectiveness of the proposed features in
moea has been demonstrated by showing that each of the features contains its specific merits and
usage that benefit the performance of moea  in comparison with other existing evolutionary
approaches  simulation results show that moea has performed well in the diversity of
evolutionary search and uniform distribution of non dominated individuals along the final
trade offs  without significant computational effort  the moea has been applied to the practical
engineering design problem of a hdd servo control system  simulation and real time
implementation results show that the evolutionary designed servo system provides excellent
closed loop transient and tracking performance 

acknowledgements
the authors wish to thank andrew moore and the anonymous reviewers for their valuable
comments and helpful suggestions which greatly improved the paper quality 

   

fian evolutionary algorithm for multi objective optimization

references
borges  c  c  h     barbosa  h  j c          a non generational genetic algorithm for
multiobjective optimization  ieee congress on evolutionary computation             
chambers  j  m   cleveland  w  s   kleiner  b     turkey  p  a          graphical methods for
data analysis  wadsworth   brooks cole  pacific ca 
coello coello  c  a          an empirical study of evolutionary techniques for multiobjective
optimization in engineering design  ph d  thesis  dept  of computer science  tulane university 
new orleans  la 
coello coello  c  a          a comprehensive survey of evolutionary based multiobjective
optimization techniques  knowledge and information systems                
deb  k          evolutionary algorithms for multi criterion optimization in engineering design  in
miettinen  evolutionary algorithms in engineering and computer science  recent advances in
genetic algorithms  evolution strategies  evolutionary programming  genetic programming  and
industrial applications  wiley  new york          
deb  k          multi objective optimization using evolutionary algorithms  john wiley   sons 
london 
fonseca  c  m          multiobjective genetic algorithms with application to control engineering
problems  ph d  thesis  dept  of automatic control and systems engineering  university of
sheffield  uk 
fonseca  c  m     fleming  p  j          genetic algorithm for multiobjective optimization 
formulation  discussion and generalization  in  forrest                 
fonseca  c  m    fleming  p  j           multiobjective optimization and multiple constraint
handling with evolutionary algorithms  part i  a unified formulation  ieee trans  on system  man 
and cybernetics part a  system and humans               
goh  t  b   li  z  m   chen  b  m   lee  t  h     huang  t           design and implementation of
a hard disk drive servo system using robust and perfect tracking approach  ieee trans  on control
systems technology                
goldberg  d  e     richardson  j          genetic algorithms with sharing for multimodal function
optimization  proc   nd int  conf  on genetic algorithms        
goldberg  d  e          genetic algorithms in search  optimization and machine learning 
addison wesley  reading  massachusetts 
grace  a          optimisation toolbox users guide  the mathworks  inc 
holland  j  h          adaptation in natural and artificial systems  university of michigan  ann
harbor 

   

fitan  khor  lee    sathikannan

horn  j     nafpliotis  n          multiobjective optimization using the niche pareto genetic
algorithm  illigal report        university of illinois  urbana  illinois  usa 
luus  r   hartig  f    keil  f  j           optimal drug scheduling of cancer chemotherapy by
direct search optimization  hungarian journal of industrial chemistry            
marcu  t          a multiobjective evolutionary approach to pattern recognition for robust
diagnosis of process faults  proc  of ifac fault detection  supervision and safety for technical
process  uk            
michalewicz  z     schoenauer  m           evolutionary algorithms for constrained parameter
optimization problems  evolutionary computation             
miller  b  l     shaw  m  j          genetic algorithms with dynamic niche sharing for multimodal
function optimization  ieee conf  on evolutionary computation  japan          
murata  t     ishibuchi  h           multi objective genetic algorithm and its applications to
flowshop scheduling  int  journal of computers and engineering          
osyczka  a          multicriterion optimisation in engineering  ellis horwood  chichester 
schaffer  j  d          multiple objective optimization using genetic algorithm  proc  of first int 
conf  on genetic algorithms         
tan  k  c   lee  t  h     khor  e  f          evolutionary algorithms with goal and priority
information for multi objective optimization  ieee congress on evolutionary computation    
        
tan  k  c   sathikannan  r   tan  w  w   loh  a  p   lee  t  h     mamun  a  al        
evolutionary design and real time implementation of a hard disk drive servo control system 
int  conf  on control       university of cambridge  uk  section  c 
tan  k  c   lee  t  h     khor  e  f        a   evolutionary algorithms for multi objective
optimization  performance assessments and comparisons  ieee congress on evolutionary
computation             
tan  k  c   lee  t  h   khoo  d     khor  e  f        b   a multi objective evolutionary algorithm
toolbox for computer aided multi objective optimization  ieee trans  on systems  man and
cybernetics   part b  cybernetics                 
the math works  inc          using matlab  version   
the math works  inc          simulink  user s guild  version   
van veldhuizen  d  a     lamont  g  b          multiobjective evolutionary algorithm research 
a history and analysis  technical report tr        dept  of electrical and computer eng  
graduate school of eng   air force institute of technology  wright patterson afb  ohio 

   

fian evolutionary algorithm for multi objective optimization

weerasooriya  s          the basic servo problem  technical report  data storage institute 
national university of singapore  singapore 
zitzler  e     thiele  l           multiobjective evolutionary algorithms  a comparative case
study and the strength pareto approach  ieee trans  on evolutionary computation                

   

fi