journal artificial intelligence research                  

submitted        published      

query time entity resolution
indrajit bhattacharya

indrajbh in ibm com

ibm india research laboratory
vasant kunj  new delhi          india

lise getoor

getoor cs umd edu

department computer science
university maryland  college park  md       usa

abstract
entity resolution problem reconciling database references corresponding
real world entities  given abundance publicly available databases
unresolved entities  motivate problem query time entity resolution  quick
accurate resolution answering queries unclean databases query time 
since collective entity resolution approaches related references resolved jointly
shown accurate independent attribute based resolution
off line entity resolution  focus developing new algorithms collective resolution
answering entity resolution queries query time  purpose  first formally
show that  collective resolution  precision recall individual entities follow
geometric progression neighbors increasing distances considered  unfolding
progression leads naturally two stage expand resolve query processing strategy 
strategy  first extract related records query using two novel expansion
operators  resolve extracted records collectively  show
strategy adapted query time entity resolution identifying resolving
database references helpful processing query 
validate approach two large real world publication databases show
usefulness collective resolution time demonstrate need adaptive
strategies query processing  show queries answered
real time using adaptive approach preserving gains collective resolution 
addition experiments real datasets  use synthetically generated data empirically
demonstrate validity performance trends predicted analysis collective
entity resolution wide range structural characteristics data 

   introduction
growing abundance publicly available data digital form  intense research data integration  critical component data integration process
entity resolution problem  uncertain references data real world entities
people  places  organizations  events  etc   need resolved according
underlying real world entities  entity resolution needed order solve deduplication problem  goal identify consolidate pairs records references
within relational table duplicates other  comes
fuzzy match problem  tuples two heterogeneous databases different keys 
possibly different schemas  need matched consolidated  goes different
c
    
ai access foundation  rights reserved 

fibhattacharya   getoor

names even within data mining database communities  including record linkage 
object consolidation  reference reconciliation 
problem long history  recent years seen significant fruitful
research problem  however  spite widespread research interest
practical nature problem  many publicly accessible databases remain unresolved 
partially resolved  best  popular publication databases  citeseer pubmed 
representative examples  citeseer contains several records paper author 
author names pubmed resolved all  due variety reasons 
ranging rapid often uncontrolled growth databases computational
expenses involved maintaining resolved entities 
yet  millions users access query databases everyday  mostly seeking information that  implicitly explicitly  requires knowledge resolved entities  example 
may query citeseer database computer science publications looking books
russell  pasula  marthi  milch  russell    shpitser         query would easy
answer author names citeseer correctly mapped entities  but 
unfortunately  case  according citeseer records  stuart russell peter
norvig written     different books together  one main reasons behind databases containing unresolved entities entity resolution generally perceived
expensive process large databases  also  maintaining clean database requires
significant effort keep pace incoming records  alternatively  may searching
different online social network communities person named jon doe  case 
online community may individually records clean  even then  query
results return records sources aggregated together may multiple
representations jon doe entity  additionally  cases  sufficient
simply return records match query name  s  russell jon doe exactly 
order retrieve references correctly  may need retrieve records similar
names well  stuart russel john doe  and  importantly  results
useful  need partition records returned according real world
entities correspond  on the fly partitioning returned results
necessary accessing third party external databases provide full access
possibly due privacy concerns  accessed via specific query
interfaces 
paper  propose alternative solution answering entity resolution queries 
obviate need maintaining resolved entities database  instead 
investigate entity resolution query time  goal enable users query
unresolved partially resolved database resolve relevant entities fly  user
may access several databases everyday want resolve entities every
database queries  needs resolve entities relevant
particular query  instance  looking books stuart russell citeseer 
useful resolve authors citeseer  since resolution needs
performed query time  requirement resolution process needs quick 
even entirely accurate 
though entity resolution queries addressed literature 
significant progress general entity resolution problem  recent research focused use additional relational information database references improve
   

fiquery time entity resolution

resolution accuracy  bhattacharya   getoor        singla   domingos        dong  halevy 
  madhavan        ananthakrishna  chaudhuri    ganti        kalashnikov  mehrotra   
chen         improvement made possible resolving related references records
jointly  rather independently  intuitively  corresponds notion figuring
two records refer underlying entity may turn give us useful information resolving record pairs related  imagine trying decide
two authors stuart russell russell person  confident
decision already decided co authors peter norvig p 
norvig person 
others done  earlier work  bhattacharya   getoor              
demonstrated using extensive experiments multiple real synthetic datasets
collective resolution significantly improves entity resolution accuracy attribute based
naive relational baselines  however  application query time entity resolution
straight forward  precisely problem focus paper 
first difficulty collective resolution works database whole
specific query  secondly  accuracy improvement comes considerable computation
cost arising dependencies related resolutions  added computational
expense makes application query time resolution challenging 
paper  builds significantly extends work presented bhattacharya  licamele  getoor         investigate application collective resolution queries  first  formally analyze accuracies different decisions collective
resolution depend structural characteristics data  recursive nature dependency leads naturally recursive expand resolve strategy
processing queries  relevant records necessary answering query extracted
recursive expansion process collective resolution performed extracted records  using analysis  show recursive expansion process
terminated reasonably small depths accurately answering query  returns fall
exponentially neighbors away considered 
however  problem unconstrained expansion process return many
records even small depths  thus query may still impossible resolve
real time  address issue using adaptive strategy considers
informative related records answering query  significantly reduces
number records need investigated query time  but  importantly 
compromise resolution accuracy query 
specific contributions paper follows 
   first  motivate formulate problem query time entity resolution 
entity resolution approach based relational clustering algorithm  best
knowledge  clustering based queries presence relations received
little attention literature 
   collective resolution using relational clustering  present analysis
accuracy different resolution decisions depends structural
characteristics data  introduce notion precision recall individual entities  show follow geometric progression neighbors
increasing distances considered resolved  analysis shows collective
   

fibhattacharya   getoor

use relationships sometimes hurt entity resolution accuracy 
previously reported literature  analysis additionally demonstrates convergent nature resolution performance recursive query resolution strategy
propose 
   resolving queries collectively  propose two phase expand resolve algorithm  first extracts related records query using two novel expansion
operators  resolves query considering extracted records 
improve algorithm using adaptive approach selectively considers
informative ones among related records query  enables
collective resolution query time without compromising resolution accuracy
query 
   present experimental results two large real world datasets strategy
enables collective resolution seconds  compare multiple baselines
show accuracy achieved using collective query resolution significantly higher
achieved using traditional approaches 
   use synthetically generated data demonstrate gains collective query
resolution wide range attribute relational characteristics  additionally show empirical results agreement trends predicted
analysis collective resolution 
rest paper organized follows  section    formalize relational
entity resolution problem entity resolution queries  illustrate
example  section    briefly review relational clustering algorithm employ
collective entity resolution then  section    investigate resolution accuracy
related entities depend collective resolution using algorithm 
section    extend collective resolution queries  describe analyze unconstrained recursive strategy collectively resolving query  modify approach
section   present adaptive algorithm extracts informative
references resolving query  present experimental results real synthetic data
section    review related work section   finally conclude section   

   entity resolution queries  formulation
section  formally introduce entity resolution problem entity resolution
queries  illustrate using realistic example resolving authors
citation database citeseer pubmed 
simplest formulation entity resolution problem  collection
references  r    ri    attributes  r a            r ak    let e    ej   unobserved
domain entities  particular reference ri   denote entity maps
e ri    say two references ri rj co referent correspond
entity  e ri     e rj    note case unresolved database 
mapping e r  provided  further  domain entities e even number
entities known  however  many domains  may additional information
relationships references  model relationships generic way  use
   

fiquery time entity resolution

h 

h 

mouse immunity model

r 
w wang

r 
c chen

r 

r 

r 

ansari

w wang

ansari

h   measuring protienbound fluxetine
r 
r 
r 
l li

c chen

better mouse immunity model

h   autoimmunity biliary cirrhosis
r 
r   
w w wang

w wang

ansari

figure    example set papers represented references connected hyper edges 
references represented ovals shaded according entities  paper
represented hyper edge  shown rectangle  spanning multiple references 

set hyper edges h    hi    hyper edge connects multiple references  capture
this  associate set references hi  r hyper edge hi   note reference
may associated zero hyper edges 
let us look sample domain see represented framework 
consider database academic publications similar dblp  citeseer pubmed 
publication database set author names  every author name 
reference ri r  reference ri   ri  n ame records observed name author
publication  addition  attributes r email record
information author reference may available paper  come
relationships domain  author references publication connected
co author relationship  represented using hyper edge hi h
publication rj hi  r reference rj publication 
publications additional information title  keywords  etc  represented
attributes h 
illustrate  consider following four papers  use running example 
   w  wang  c  chen  a  ansari  mouse immunity model
   w  wang  a  ansari  better mouse immunity model
   l  li  c  chen  w  wang measuring protein bound fluxetine
   w  w  wang  a  ansari  autoimmunity biliary cirrhosis
represent notation     references  r            r     r  one
author name  r   n ame   w wang  etc    hyper edges  h            h   
h  one paper  first hyper edge h  connects three references r    r 
r  corresponding names w  wang   c  chen a  ansari  represented
pictorially figure   
given representation  entity resolution task defined partitioning
clustering references according underlying entity reference mapping e r  
two references ri rj assigned cluster
   

fibhattacharya   getoor

coreferent  i e   e ri     e rj    illustrate  assume six underlying entities
example  illustrated figure   using different shading entity 
example  wangs papers        names individual wang
paper   reference different person  also  chens papers    
different individuals  then  correct entity resolution example database   
references returns   entity clusters    r    r    r      r      r      r      r    r    r       r     
first two clusters correspond two different people named wang  next two two
different people named chen  fifth ansari last li 
query database references called entity resolution query answering
requires knowledge underlying entity mapping e r   consider two different
types entity resolution queries  commonly  queries specified using particular
value attribute r a references serves quasi identifier
underlying entities  answer query q r a   a  partition group
references r a   according underlying entities  references
people  name often serves weak noisy identifier  example bibliographic
domain  consider queries specified using r n ame  retrieve papers written
person named w  wang  issue query using r n ame w  wang  since
names ambiguous  treating identifiers leads undesirable results  case 
would incorrect return set  r    r    r    references name w wang
answer query  answer indicate r  person
two  additionally  answer include reference r  w w wang 
maps entity author first paper  therefore  correct answer
entity resolution query w wang partition   r    r    r      r     
entity resolution queries may alternatively specified using specific reference  imagine citeseer user looking paper contains author name  user may
interested looking papers written author  even though may
know author precisely  correct answer query reference
r group references coreferent r  or  words  correspond
underlying entity  example  consider query specified using reference r 
corresponding name w  wang first paper  correct answer
query set references  r    r    r     distinguish first type entity
resolution query  note include cluster  r    corresponding
entity name w  wang  second query type may answered first
reducing instance first type q r a   r   a   selecting entity
corresponding reference r    denote e r  e r     q r a   r   a    rest
paper  focus queries first type 

   collective entity resolution relational clustering
although entity resolution queries studied literature  general
entity resolution problem received lot attention  review related work detail
section    section  briefly review different categories proposed approaches
discussing may adapted query time entity resolution 
entity resolution applications  data labeled underlying entities hard
acquire  focus unsupervised approaches resolving entities  traditionally 
   

fiquery time entity resolution

attributes individual references  names  affiliation  etc   person references 
used comparing references  similarity measure generally employed attributes 
pairs references attribute similarity certain threshold
considered co referent  attribute based entity resolution approach  a 
often runs problems  example  hard infer attributes
references r  r  co referent although name  r  r 
co referent although names different 
relations references available  may taken account
computing similarities naive relational entity resolution approach  nr 
 ananthakrishna et al         bhattacharya   getoor         computing similarities
two references  approach additionally considers attributes related
references comparing attributes related references  example 
approach returns higher similarity r   w  wang  r   w  w  wang 
attribute based approach  since co authors r  r   similar  identical  case  names  although approach improve performance cases 
always work  instance  two w  wang references r  r 
co referent  though co authors identical names c  chen 
instead considering attribute similarities related references  collective
entity resolution approach  pasula et al         bhattacharya   getoor        singla
  domingos        mccallum   wellner        li  morie    roth        dong et al  
      kalashnikov et al         takes account resolution decisions them 
previous example  correct evidence use pair references r  r 
co author references map entity  although similar names 
therefore  order resolve w  wang references collective resolution approach 
necessary resolve c  chen references well  instead considering similarity
attributes  collective entity resolution approach recently shown
improve entity resolution accuracy previous approaches computationally
challenging  references cannot resolved independently  instead  resolution
decision affected resolutions hyper edges 
earlier work  bhattacharya   getoor                     developed relational
clustering algorithm  rc er  collective entity resolution using relationships  goal
approach cluster references according entities taking relationships
account  associate cluster label r c reference denote current
cluster membership  starting initial set clusters c    ci   references 
algorithm iteratively merges pair clusters similar  capture
collective nature cluster assignment  similarity measure pairs clusters
considers cluster labels related references  similarity two clusters ci
cj defined linear combination attribute similarity sima relational
similarity simr  
sim ci   cj          sima  ci   cj     simr  ci   cj  

   

      combination weight  interesting aspect collective
approach dynamic nature relational similarity  similarity two
references depends current cluster labels related references  therefore
changes related references change clusters  example  similarity two
   

fibhattacharya   getoor

clusters containing references w  wang w  w  wang increases co author
references named a  ansari assigned cluster  briefly review
two components similarity measure defined 
attribute similarity  reference attribute  use similarity measure
returns value     two attribute values indicating degree similarity
them  several sophisticated similarity measures developed names 
popular tf idf schemes may used textual attributes keywords 
measure works best attribute may chosen  finally  weighted linear
combination similarities different attributes yields combined attribute
similarity two reference clusters 
relational similarity  relational similarity two clusters considers similarity cluster neighborhoods  neighborhood cluster defined
hyper edges associated references cluster  recall reference r
associated one hyper edges h  therefore  hyper edge set c h
cluster c references defined
c h  

 

 h   h h r h r 

   

rrr c c

set defines hyper edges connect cluster c clusters 
ones relational similarity needs consider  illustrate  references
running example correctly clustered figure   b   hyper edge set
larger wang cluster  h    h    h     hyper edges associated
references r    r  r  cluster 
given hyper edge set cluster c  neighborhood n br c  cluster c
set clusters labels references spanned hyper edges 
n br c   

 

 cj   cj   r c 

   

hc h rh

example wang cluster  neighborhood consists ansari cluster one
chen clusters  connected edge set  then  relational similarity
measure two clusters  considers similarity cluster neighborhoods 
neighborhoods essentially sets  or multi sets  cluster labels many possible ways define similarity two neighborhoods  bhattacharya   getoor        
specific similarity measure use experiments paper jaccard
similarity   
simr  ci   cj     jaccard n br ci    n br cj   
   
clustering algorithm  given similarity measure pair clusters  greedy
relational clustering algorithm used collective entity resolution  figure   shows
high level pseudo code complete algorithm  algorithm first identifies candidate set potential duplicates using blocking approach  hernandez   stolfo       
monge   elkan        mccallum  nigam    ungar         next  initializes clusters
   jaccard similarity two sets b defined jaccard a  b   

   

 ab 
 ab 

fiquery time entity resolution

  
  

algorithm rc er  reference set r 
find similar references r using blocking
initialize clusters using bootstrapping

  
  

clusters ci   cj similar ci   cj  
insert hsim ci   cj    cj   cj priority queue

  
  
  
  
  
   
   
   
   
   

priority queue empty
extract hsim ci   cj    ci   cj queue
sim ci   cj   less threshold  stop
merge ci cj new cluster cij
remove entries ci cj queue
cluster ck similar cij   ck  
insert hsim cij   ck    cij   ck queue
cluster cn neighbor cij
ck similar ck   cn  
update sim ck   cn   queue
figure    high level description relational clustering algorithm

references  identifies similar clusters potential merge candidates
cluster  inserts merge candidates priority queue iterates
following steps  step  identifies current closest pair clusters candidate set merges create new cluster  identifies new candidate pairs
updates similarity measures related cluster pairs  key step
evidence flows one resolution decision related ones distinguishes relational clustering traditional clustering approaches  algorithm terminates
similarity closest pair falls threshold list potential candidates exhausted  algorithm efficiently implemented run o nk log n  time
n references block similar names connected k blocks
hyper edges 
    issues collective resolution queries
previous work   and others  shown collective resolution using relationships
improves entity resolution accuracy significantly offline cleaning databases  so  naturally  would use approach query time entity resolution well 
however  attribute based naive relational approaches discussed earlier
applied query time straight forward fashion  case collective
resolution  two issues come using collective resolution queries  first 
set references influence resolution decisions query need identified 
answering resolution query s  russell using attribute based approach 
sufficient consider papers s  russell  or  similar names  author name 
collective resolution  contrast  co authors author names  p 
   

fibhattacharya   getoor

norvig peter norvig  need clustered according entities 
turn requires clustering co authors on  first task analyze
dependencies collective resolution identify references database
relevant answering query  enough  set references influencing
query may extremely large  query still needs answered quickly even though
answer may completely accurate  second issue performing resolution
task query time  two problems address next sections 

   analysis collective resolution using relational clustering
collective entity resolution  seen resolution performance query
becomes dependent resolution accuracy related entities  analyze
references influence entity resolution query extent  need
analyze nature dependence collective resolution general  section 
identify structural properties data affect collective entity resolution
formally model interdependent nature resolution performance  analysis
helps us understand collective resolution using relational clustering helps 
and  equally importantly  adverse effect compared traditional
attribute based resolution 
goal entity resolution algorithm partition set r    ri   references
set clusters c    ci   according underlying entities e    ei    accuracy resolution depends closely separation references clusters
corresponds underlying entities  consider two different measures performance 
first measure recall entity  entity ei   recall counts many pairs
references corresponding ei correctly assigned computed cluster 
second measure precision computed cluster  cluster ci   precision counts
many pairs references assigned ci truly correspond underlying entity 
 alternatively  imprecision measures many pairs references assigned cluster
correspond entity   next two subsections  analyze
two performance metrics influenced  first  attribute values references 
then  observed relationships them 
    influence attributes
first  consider entity resolution algorithm follows traditional attribute based approach analysis performance  algorithm considers attributes
individual references  uses similarity measure defined domain attributes 
considers pair wise attribute similarity references resolving them  let us
define two references  similar attribute similarity least   then  given
resolution threshold   attribute based approach assigns pair references
cluster  similar  illustrate using example  using
similarity measure defined names appropriately determined similarity threshold
  attribute based approach would assign three w  wang references  r    r    r   
one cluster c  w  w  wang reference  r    different cluster c    resolution
wang references perfect terms precision recall  since references r    r 
r  map one entity e  r  maps second entity e    cluster c  precision less
   

fiquery time entity resolution

   since incorrectly includes references two different entities  recall less
  entity e    since references dispersed two different clusters 
order analyze performance attribute based resolution approach given
arbitrary dataset  characterize dataset terms attribute values
references  intuitively  attribute based approach works well references
corresponding entity similar terms attributes 
references corresponding different entities not  capture formally  define
two probabilities measure attribute similarity references map
entity  attribute similarity map different entities 
attribute identification probability ai  e     probability pair references chosen randomly corresponding entity e  similar
other 
attribute ambiguity probability aa  e    e       probability pair references chosen randomly one corresponds entity e  entity
e   similar other 
illustrate using four wang references  r    r  r  correspond
entity e  r  corresponds different entity e    also  assume similarity
measure names appropriate threshold   references r    r  r   similar
other  then    pairs references corresponding entity e    one  r 
r     similar  attribute identification probability ai  e      entity e       
hand  three pairs references one maps e 
e    two  r  r    r  r     similar  means attribute ambiguity
probability aa  e    e      e  e       
seen example  performance attribute based clustering algorithm represented terms two probabilities  specified
threshold   pairs references entity correctly recalled ones
 similar  exactly ai  e    captures  therefore  recall domain
entity e r e      ai  e     hand  consider cluster assignment
references correspond two entities e  e    pairs incorrectly clustered
together correspond two different entities  yet  similar 
aa  e    e      captures  therefore imprecision cluster assignment reference
pairs corresponding entities e  e  i e    e        aa  e    e       alternatively 
precision given p  e    e        i e    e          aa  e    e      
    influence relationships
now  consider collective entity resolution approach additionally makes use
relationships  analyze impact entity resolution accuracy  recall
set h    hj   observed co occurrence relationships references  cooccurrences references useful entity resolution result strong
ties relations underlying entities  specifically  assume references
entity ei co occur frequently references small set entities  e i           eki   
call entity neighbors  denoted n  ei    entity ei  
   

fibhattacharya   getoor

w w  wang
w  wang

h 

a  ansari
a  ansari

w  wang
w  wang

h 

h 
h 

c  chen
c  chen

figure    illustration  a  identifying relation  b  ambiguous relation running
example  dashed lines represent co occurrence relations 

assuming neighborhood relationship among underlying entities allows us
analyze performance relational clustering approach  reference pairs
 similar terms attributes  attribute evidence enough resolution 
now  unlike attribute based clustering  pair references  similar terms
attributes      considered candidates clustered together 
actually get assigned cluster  reference pairs ring
uncertainty   relationships play role determining similar
enough  consequently  clustered together  specifically  references ri
rj co occur hyper edge h references ri rj co occur hyper edge
h   relational similarity pair  ri   ri    rj   rj   belong
cluster  general  multiple relationships may needed tipping balance 
simplicity  assume single pair related references sufficient 
words  ri ri get assigned cluster rj rj cluster 
analyze impact approach entity resolution performance 
without loss generality  assume  rj   rj   pair get clustered together first
relational clustering algorithm  results pair  ri   ri   getting clustered
later iteration considering relational evidence  see accurate 
consider two situations  attribute evidence  first shown figure   a  
pairs truly correspond entity  collective resolution decision
correct say hyper edges h h identifying relationships entity 
formally 
irel h  h   e  ri   rj h r  ri   rj h  r 
e ri     e ri     e  e rj     e rj  

   

hand  may different scenario  pairs references correspond two different entities  second scenario depicted figure   b  
first decision resolve  rj   rj   co referent incorrect  relational evidence obtained
hyper edges h h consequently leads incorrect resolution  ri   ri   
situation  collective resolution hurts accuracy  say h h form ambiguous
relationships pairs entities  whose references may incorrectly clustered
result relationships  formally 
iamb h  h   e  e   ri   rj h r  ri   rj h  r 
   

fiquery time entity resolution

e ri     e  e ri     e   e    e  
e rj      e rj  

   

general  reference ri co occurrence relation h includes
one reference  may think multiple co occurrence pairs involving ri  
cluster labels references pairs influence resolution decisions ri  
resolving ri another reference ri participates co occurrence relation h  
fraction common cluster labels h h determines whether ri
ri clustered together  assigned cluster  h h labeled
identifying ambiguous relationships based whether ri ri actually co referent
not 
formally  define 
identifying relationship probability ri  e     probability randomly chosen pair  similar references corresponding entity e identifying relationships
h h entity 
ambiguous relationship probability ra  e    e       probability pair
 similar references  chosen randomly one corresponds entity e 
entity e    ambiguous relationships h h pair
entities 
illustrate probabilities using example  two wang entities  e 
references r    r  r    e  reference r    assume attribute
threshold six pairs considered potential matches  three pairs
references corresponding e    identifying relationships ansari
entity  so  ri  e           measure relational ambiguity two wang
entities  consider   possible pairs  r  r    r  r    r  r    
one  r  r    pair ambiguous relationships two different chen entities  so 
ra  e    e             
given two probabilities  analyze performance relational clustering algorithm combines attribute relational evidence collective entity resolution 
hard see recall entity depends recursively recall
neighbor entities  pair references entity e resolved correctly basis
attributes alone probability ai  e     the identifying attribute probability   furthermore  may still resolved correctly presence identifying relationships
neighbor entity  related reference pair neighbor resolved correctly  denoting
r e      recall entity e neighbors r n  e        have 
r e        ai  e         ai  e     ri  e    r n  e      

   

hand  consider pair entities e  e    cluster assignment
pair references corresponding e  e  imprecise basis attributes
alone probability aa  e    e       even otherwise  cluster assignment go wrong
considering relational evidence  happens presence ambiguous relationships
references corresponding another pair entities  references clustered
   

fibhattacharya   getoor

together incorrectly  imprecision i e    e        cluster assignment reference
pairs corresponding entities e  e  turns be 
i e    e          aa  e    e           aa  e    e       ra  e    e      i n  e     n  e            
general  entity e multiple neighbors ei neighborhood n  e   formalize performance dependence multiple neighbors  assume co occurrence
involving references corresponding e chosen random  probability selecting
co occurrence reference corresponding ei pei   recall given as 
 n  e  

r e    ai  e       ai  e   ri  e 

x

pei r ei  

   

i  

note dropped notational brevity  defining imprecision  observe
reference corresponding neighbor ei  e  may co occur reference
neighbor ej  e  probability pei   pej     imprecision given as 
 n  e      n  e    

i e    e      aa  e    e         aa  e    e     ra  e    e   

x

x

i  

j  

pei   pej   i ei    ej   

    

given similarity thresholds   relational clustering increases recall beyond
achievable using attributes alone  improvement larger probability identifying relationships higher  flip side  imprecision increases relational
clustering  typically  low attribute threshold corresponds high precision used 
recall increased using relational evidence  probability ambiguous
relations ra small  accompanying increase imprecision negligible  performance improved overall  however  higher ambiguous relationship probability
ra   less effective relational clustering  thus balance ambiguous
identifying relations determines overall benefit collective resolution using relational
clustering  ra high compared ri   imprecision increases faster recall 
overall performance adversely affected compared attribute based clustering  eq     
eq       quantify dependence resolution performance entity nature
relationships entities  next section  use equations
design analyze relational clustering algorithm answering entity resolution queries 

   collective resolution queries
analysis collective resolution using relational clustering showed resolution accuracy underlying entity depends resolution accuracy related neighboring entities  problem answering entity resolution queries  goal
resolve entities database  need resolve entities
references retrieved query  seen collective resolution leads
potential performance improvements attribute based resolution  investigate
collective resolution applied answering queries get similar improvements 
obvious hurdle illustrated expressions performance metrics eq     
eq        show order get performance benefits resolving query using
   

fiquery time entity resolution

relational clustering  need resolve neighboring entities well  furthermore 
resolve neighboring entities  need resolve neighboring entities  on 
entities need resolved large number  resolving
expensive terms query processing time  also  none actually going
retrieved part answer query  critical identify resolve
entities contribute improving resolution accuracy query 
propose two stage query processing strategy  consisting extraction phase 
identifying relevant references need resolved answering query 
resolution phase  relevant references extracted collectively
resolved using relational clustering  unfolding eq      eq       starting query
entities leads natural expansion process  section  describe extraction
process using two novel expansion operators and  parallel  analyze improvement
resolution accuracy obtained considering co occurrences 
recall entity resolution query q r a   a  specified using attribute
value it  answer query consists partitioning references
r r a   value  similar a  correct answer query 
general  involves references multiple entities  eq    measure resolution accuracy
query using two metrics before  query entities eq   measure recall
r eq   imprecision i eq   e   respect entity e   entity e may may
belong  eq   
going details algorithm collective resolution queries 
briefly recall accuracy attribute based strategy resolving query  approach
considers references r r a  similar a  resolves using attributes
only  recall results approach r eq       ai  eq      imprecision
given i eq   e       aa  eq   e     
propose two expansion operators constructing relevant set entity
resolution query  denote level   references references  similar
query attribute  references user interested in  goal
resolve correctly  first operator introduce attribute expansion
operator xa   a expansion short  given attribute value
attribute  xa  a    returns references r whose attributes r a exactly match similar a  query q r a   a   level   references retrieved expanding
q as 
rel   q    xa  a   
first step figure   shows a expansion query q r n ame   w w ang 
example  retrieves four references  r   r   r   r    name w  wang w  w 
wang 
consider co occurrence relations  construct level   references including
references co occur level   references  this  use second operator 
call hyper edge expansion xh   h expansion  reference r  xh  r 
returns references share hyper edge r  set r references xh  r 

returns rr xh  r   collective entity resolution requires consider co occurring
references reference  achieved performing h expansion references
   

fibhattacharya   getoor

q
r name w wang

 

r    a ansari

rel  q 

 

rel  q 

r   w w wang

r    a ansari

r   w wang

r   a ansari

r    a ansari

r   a ansari

r    c chen
   

r   w wang

r   c chen

r   w wang

r   c chen
r   l li

rel   q 

   

r    c chen
r    l li
   
r    l li

figure    relevant set query q r n ame   w w ang  using h expansion aexpansion alternately

level   retrieve level   references 
rel   q    xh  rel   q  
figure   illustrates operation example  xh  r    retrieves references c 
chen  r    a  ansari  r     on 
perform collective resolution query  additionally need resolve references level    one option level   references attribute based resolution using
conservative  similarity keep imprecision minimum  use analysis technique evaluate performance approach  expanding eq      
substituting ai  eiq     recall neighboring entity eiq eq   recall
query entity is 
r eq         ai  eq          ai  eq      ri  eq    

k
x

e

pi q ai  eiq    

i  

similarly  substituting aa  eiq   ej     eq       imprecision neighboring
entity eiq   get following expression imprecision 
i eq   e         aa  eq   e          aa  eq   e      ra  eq   e    

k x
l
x

e





pi q pej aa  eiq   e j    

i   j  

appreciate easily implications considering first order neighbors  may
assume attribute identification probability attribute ambiguity probability
entities involved  i e   ai  e      ai    aa  e  e       aa     then 
p
using ki   pei     entity e  expression recall simplifies
r eq         ai         ai     ri    ai   
  ai           ai    ri    
   

fiquery time entity resolution

similarly  expression imprecision simplifies
i eq   e         aa           aa    ra    
see attribute clustering first level neighbors potentially increases
recall query entity eq   imprecision goes well  however  balance ra ri favorable  increase imprecision insignificant much
smaller corresponding increase recall  overall performance
improvement 
better this  go step consider co occurrence
relations resolving level   references well  so  instead considering attributebased resolution references level   before  perform collective resolution them 
consider  similar references  call level   references  rel   q    using
a expansion 
rel   q    xa  rel   q  
note overloaded a expansion operator set r references  xa  r   
rr xa  r a   level   references second order neighbors co occur
level   references  retrieved using h expansion level   references 



rel   q    xh  rel   q  
finally  level   references earlier  resolve level   references using similarity attributes alone 
order evaluate impact resolution accuracy query  unfold
recursions eq      eq       two levels  substitute ai  eiq     recall
aa  ei   ej     imprecision second order neighbors  trend expressions
becomes clearly visible assume  before  ai aa identical entities  and 
additionally  ri ra same  i e   ri  e    e        ri    ra  e    e        ra    
then  work algebraic steps get following expressions recall
precision query entity eq  
r eq     ai         ai  ri      ai    ri   


i eq   e     aa         aa  ra     

 
aa    ra
 

    
    

continue unfold recursion grow relevant set query 
formally  expansion process alternates a expansion h expansion 
reli  q    xa  q 
xh  reli   q  
xa  reli   q  

   
odd
even

proceed recursively consider higher order co occurrences query  additional terms appear expressions precision recall  imply
need continue process arbitrary levels get optimum benefit  using
simplifying assumptions attribute relational probabilities  expressions recall imprecision nth order co occurrences turns geometric
   

fibhattacharya   getoor

progressions n     terms  common ratio two geometric progressions
   ai    ri       aa    ra    respectively  typically  ratios significantly smaller    therefore converge quickly increasing co occurrence
level  improvement resolution accuracy query q falls quickly
expansion depth  terminate expansion process cut off depth
without compromising accuracy 


rel q   


 

reli  q 

i  

course  assumptions attribute relational probabilities entityindependent hold practice  performance trends increasing levels
co occurrence cannot exactly captured geometric progressions common ratio
successive terms  converging trends still hold general 
rate convergence still determined four probabilities ai   aa   ri ra
entities encountered expansion process  intuitively  smaller values
ri ra indicate less sensitivity co occurrences  convergence quicker 
hand  higher values ai aa mean entities resolved based
attributes alone correctly incorrectly impact co occurrence relations
smaller  therefore convergence quicker higher values ai aa  
apart imposing cutoff expansion depth  size relevant set
significantly reduced restricting attribute expansion beyond level   exact
e  r   considers references exactly attribute
a expansion xa
r disregards  similar references  interestingly  show restricted
strategy alternates exact a expansion h expansion reduce recall
significantly 

   adaptive query expansion
limited depth query expansion strategy proposed previous section effective
approach able answer queries quickly accurately many domains  however 
domains  size relevant set generated extremely large even
small expansion depths  result  retrieved references cannot resolved
query time  section  propose adaptive strategies based estimating
ambiguity individual references makes algorithm even efficient
preserving accuracy 
main reason behind explosive growth relevant set increasing levels
query expansion strategy previous section unconstrained treats
co occurrences equally important resolving entity  blindly expands
references current relevant set  includes new references generated
expansion operation  given limited time process query  approach infeasible
domains dense relationships  solution identify references
likely helpful resolving query  focus references 
illustrate using example figure    observe chen li significantly
common ambiguous names ansari even different w  wang entities
likely collaborators named chen li  therefore  h expanding rel   rq  
   

fiquery time entity resolution

w  wang  ansari informative chen li  similarly  n expanding
rel   rq    choose expand name a  ansari further  since two a 
ansari references likely coreferent  need evidence
chens lis 
describe formally  ambiguity value attribute probability two references ri rj database ri  a   rj  a  
coreferent  amb a    p  e ri      e rj     ri  a   rj  a   a   goal adaptive expansion
add less ambiguous references relevant set expand ambiguous
references currently relevant set  first define adaptive versions two expansion operators treating ambiguity estimation process black box  look
ways estimate ambiguity references 
    adaptive expansion operators
goal adaptive expansion selectively choose references expand
current relevant set  new references included every expansion step 
adaptive hyper edge expansion  set upper bound hmax number new
references h expansion particular level generate  formally  want
 xh  reli  q    hmax  reli  q    value hmax may depend depth
small enough rule full h expansion current relevant set  then  given hmax  
strategy choose least ambiguous references xh  reli  q    since provide
informative evidence resolving references reli  q   achieve this 
sort h expanded references increasing order ambiguity select first k
them  k   hmax  reli  q   
i 

reladapt
 q  hmax     leastamb k  xh  reladapt
 q   

    

setting adaptive attribute expansion similar  positive number amax   exact a expansion reli  q  allowed include amax  reli  q   references  note selection preference needs flipped ambiguous names
e  reli  q   decreasing
need evidence  expanded first  sort xa
order ambiguity select first k sorted list  k   amax  reli  q   
could potentially retrieve references ambiguous name  totally ignoring
references name  avoid this  choose top k ambiguous references
reli  q  expansion  expand references chosen 

e

reladapt
 q  nmax     xa
 m ostamb k  reladapt
 q   

    

though cannot directly control number new references added  r k reasonable estimate  r average number references per name 
    ambiguity estimation
adaptive expansion scheme proposed section crucially dependent estimates name ambiguity  describe one possible scheme worked quite well 
recall want estimate probability two randomly picked references
value attribute correspond different entities  reference attribute a    denoted
   

fibhattacharya   getoor

  
  

algorithm query time resolve  r name name 
rset   relevantfrontier name 
rc er rset 

  
  
  
  
  
  
  
  
  
   
   
   

algorithm findrelevantrefs r name name 
initialize rset   
initialize depth  
initialize frontierrefs   
depth   d 
depth even  
r   xa  frontierrefs 
else
r   xh  frontierrefs 
frontierrefs   r
add frontierrefs rset
increment depth
return rset
figure    high level description query time entity resolution algorithm

r a    naive estimate ambiguity value n attribute is 
amb r a     

 r a   r a   r  
 
 r 

 r a   r a   r   denotes number references value r a  a    estimate clearly good since number references certain attribute value
always match number different entity labels attribute  much
better additional attribute a    given a    ambiguity value a 
estimated
  r a   r a   r a   r    
amb r a    r a     
 
 r 
  r a   r a   r a   r     number distinct values observed a  references r a    r a    example  estimate ambiguity last name
counting number different first names observed it  provides better estimate
ambiguity value attribute a    a  correlated a   
multiple uncorrelated attributes ai available references  approach
generalized obtain better ambiguity estimates 
putting everything together  high level pseudo code query time entity resolution
algorithm shown figure    algorithm works two stages first  identifies
relevant set references given entity name query  performs relational
clustering extracted relevant references  relevant references extracted using
recursive process already seen  relevant references depth
obtained expanding relevant references depth i   expansion dependent
   

fiquery time entity resolution

whether odd step even step  actual expansion operator used
may either unconstrained adaptive 

   empirical evaluation
experimental evaluation query time resolution strategies  used realworld synthetically generated datasets  first  describe real datasets
experiments performed move experiments synthetic data 
    experiments real data
real world data  used two citation datasets different characteristics 
first dataset  arxiv  contains papers high energy physics used kdd cup
               references       authors  contained        publications  number author references per publication ranges      average      
second dataset elsevier biobase database  publications biology used
recent ibm kdd challenge competition  includes publications immunology
infectious diseases years            dataset contains         publications         author references  number author references per publication
significantly higher arxiv ranges        average       names
database initials first middle names  if available   unlike arxiv 
initialed complete names  number distinct names biobase         
number references name ranging        average       unlike
arxiv  biobase includes keywords  topic classification  language  country correspondence
affiliation corresponding author attributes paper  use
attributes resolution addition author names  biobase diverse terms
attributes  covering    languages      countries        topic classifications      
keywords 
entity resolution queries arxiv  selected ambiguous names correspond
one author entity  gave us    queries  number true entities
selected names varying       average       biobase  selected
queries top     author names highest number references  average
number references     names      number entities
selected names ranges        average      thereby providing wide variety entity
resolution settings queries 
      relevant set size vs  resolution time
begin exploring growth rate relevant set query expansion depth
two datasets  figure   a  plots size relevant set sample query
name t  lee arxiv m  yamashita biobase  growth rate arxiv
query moderate  number references name t  lee    number
relevant references depth    size grows       depth    contrast 
biobase plots clearly demonstrate exponential growth relevant references
   http   www cs cornell edu projects kddcup index html
   http   help sciencedirect com robo projects sdhelp about biobase htm

   

fibhattacharya   getoor

   

   

biobase  similar
biobase  exact
arxive  exact

   

   
time  secs 

  references
 in thousands 

   
   
   
   

   
   
   
   

   

   

   

   

 

 
 

 a 

biobase
arxiv

   

 

 

 

 

expansion depth

 

 

 

 
 b 

  

  
  
  
  
 references  in thousands 

  

  

figure     a  size relevant set increasing expansion depth sample queries
arxiv biobase  b  execution time rc er increasing number
references

depth name expansion strategies     relevant references depth
   references expanded using name similarity expansion      relevant
references depth           depth           depth   
restricted similarity measure two names considered similar first
initials match  last names first character differ overall
  characters  liberal measure would result significantly faster growth 
observe exact expansion  growth slower still        references
depth            depth           depth    interesting note growth
slows beyond depth    references entire dataset
already covered depth  biobase         references total   growth
rates two examples arxiv biobase typical queries
two datasets 
next  figure   b   observe relational clustering algorithm rc er scales
increasing number references relevant set  execution times reported
dell precision     server    ghz intel xeon processor  gb memory 
plot shows algorithm scales well increasing references  gradient
different two datasets  mainly due difference average number
references per hyper edge  suggests arxiv  rc er capable handling
relevant sets generated using unconstrained expansion  biobase  would require
    secs        references      secs         clearly
possible use rc er unconstrained expansion query time resolution biobase
even depth   
      entity resolution accuracy queries
next experiment  evaluate several algorithms entity resolution queries 
compare entity resolution accuracy pair wise co reference decisions using f 
measure  which harmonic mean precision recall   fair comparison 
consider best f  algorithms possible thresholds determining
   

fiquery time entity resolution

table    average entity resolution accuracy  f   different algorithms    arxiv
queries     biobase queries


a 
nr
nr 
rc er depth  
rc er depth  

arxiv
     
     
     
     
     
     

biobase
     
     
     
     
     
     

duplicates  algorithms  compare attribute based entity resolution  a   naive
relational entity resolution  nr  uses attributes related references  relational
clustering algorithm collective entity resolution  rc er  using unconstrained expansion
depth    consider transitive closures pair wise decisions first
two approaches  a  nr    attribute similarity  use soft tf idf
jaro winkler similarity names  shown perform best namebased resolution  bilenko  mooney  cohen  ravikumar    fienberg         tf idf
similarity textual attributes 
average f  scores queries shown table   algorithm
two datasets  shows rc er improves accuracy significantly baselines 
example biobase  improvement     nr      a     
nr   demonstrates potential benefits collective resolution answering
queries  validates recent results context offline entity resolution  bhattacharya
  getoor              singla   domingos        dong et al         mccallum   wellner 
       earlier work  bhattacharya   getoor        demonstrated using
extensive experiments real synthetic datasets relational clustering algorithm
 rc er  improves entity resolution performance traditional baselines context
offline data cleaning  entire database cleaned whole  numbers
table   confirm similar improvements obtained localized resolution
well  predicted analysis  accuracy improvement comes
depth   relevant references         biobase queries  accuracy
improve beyond depth   relevant references  remaining    queries  average
improvement     however    ambiguous queries  accuracy improves
    biggest improvement high      from           f   
instances fewer arxiv  biggest improvement        from            
one hand  shows considering related records resolving collectively
leads significant improvement accuracy  hand  demonstrates
potential benefits considering higher order neighbors  fall quickly
beyond depth    serves validate analysis collective query resolution
section   
   

fibhattacharya   getoor

table    average query processing time unconstrained expansion


a 
nr
nr 
rc er depth  
rc er depth  

 

arxiv
    
    
    
     
    
    

biobase
    
    
     
     
     
      

 

depth  
depth  

depth  
depth  

   

   
recall

precision

   
   

   
   

   

   
   
   

   
 

   

   

   

   

 

 

   

similarity threshold

 a 

   
   
similarity threshold

   

 

 b 
 

 

   
   
recall

precision

   

   

   
   
   

   

   

depth  
depth  

   
 

   

depth  
depth  

   
   

   

   

 

 

similarity threshold

 c 

   

   
   
similarity threshold

   

 

 d 

figure    average precision recall different similarity thresholds  a b  biobase
 c d  arxiv

last two rows table   show converging nature entity resolution performance
increasing depth  verify explicitly precision recall figure   
top two plots show average precision recall biobase queries different similarity
thresholds rc er  bottom two plots show arxiv  see
precision curve depth   coincides stays marginally precision curve
depth   biobase arxiv  recall curves show opposite trend recall
   

fiquery time entity resolution

marginally improves depth    agreement derived expressions
precision recall increasing depth eq        difference recall depths
  
    quantified ai    ai    ri    difference precision aa    aa    ra
explanation small difference average precision recall two
plots factors  averaged queries  significantly smaller
  arxiv biobase  investigate converging nature performance
detail varying structural properties experiments synthetic data
section     
      reducing time adaptive expansion
first set experiments show effectiveness two phase query processing strategy
terms entity resolution performance  challenge  described earlier 
obtaining benefits real time  so  next  focus time required
process queries two datasets using unconstrained expansion depth   
results shown table    arxiv  average processing time depth   expansion
     secs      relevant references average  shows two phase strategy
unconstrained expansion practical processing strategy entity resolution queries
resolves query entities accurately  extremely quickly well  however 
biobase  average number references reached depth          
time taken resolve collectively    minutes  unacceptable
answering queries  next focus processing time improved using
proposed adaptive strategies  note time taken depth   expansion around   
secs  close attribute based baseline  a  less time
naive relational algorithm  nr  
since unconstrained expansion effective arxiv  focus biobase evaluating adaptive strategies  estimating ambiguity references  use last names
first initial secondary attribute  results good estimates ambiguity ambiguity estimate name strongly correlated  correlation coeff      
number entities name  first  evaluate adaptive h expansion  since
h expansion occurs first depth    query  construct relevant set cutoff
depth      use adaptive h expansion depth    expansion upper bound hmax
set    compare three different adaptive h expansion strategies   a  choosing
least ambiguous references   b  choosing ambiguous references  c  random
selection  then  query  evaluate entity resolution accuracy using rc er
relevant sets constructed using three adaptive strategies  average accuracies
three strategies     queries shown first column table    least
ambiguous selection  strategy propose  clearly shows biggest improvement ambiguous smallest  random selection between  notably 
even without many depth   references  improve accuracy nr 
virtue collective resolution 
perform similar set experiments evaluating adaptive attribute expansion 
recall depth   lowest depth adaptive attribute expansion performed 
query  construct relevant set     using adaptive a expansion
depth   unconstrained h expansion depths      expansion upper bound
   

fibhattacharya   getoor

table    avg  resolution accuracy f  different adaptive expansion strategies

least ambiguous
ambiguous
random

h expansion
     
     
     

a expansion
     
     
     

amax set      average     names expanded  again  compare three
strategies   a  expanding least ambiguous names   b  expanding ambiguous
names  c  random expansion  average accuracies three schemes
    queries listed second column table    experiment adaptive aexpansion bring difference three schemes clearly adaptive
h expansion  comparing a expansion depth   and  average 
much improvement obtained beyond depth   ceiling effect 
shows almost benefit depth   comes proposed strategy
expanding ambiguous names 
two experiments demonstrate effectiveness two adaptive expansion
schemes isolation  now  look results use together 
    queries  construct relevant set rel rq       using adaptive hexpansion adaptive exact a expansion  since improvement collective
resolution comes depth   references  consider two different experiments 
first experiment  ax     use adaptive expansion depths   beyond 
unconstrained h expansion depth    second experiment  ax     use adaptive
h expansion even depth    hmax      them  use adaptive expansion
higher depths     parameters hmax       amax         
table    comparison unconstrained adaptive expansion biobase

relevant set size
time  cpu secs 
accuracy  f  

unconstrained
        
      
     

ax  
        
     
     

ax  
        
     
     

table    compare two adaptive schemes unconstrained expansion
    queries  clearly  accuracy remains almost unaffected schemes 
first  note ax   matches accuracy unconstrained expansion  shows
almost improvement depth    accuracy achieved even though
uses adaptive expansion expands small fraction rel   q   thereby reduces
average size relevant set               significantly  ax   matches
improvement even without including many depth   references  reduction
size relevant set immense impact query processing time  average
processing time drops     secs unconstrained expansion    secs


   

fi   
 
   
   
   
   
   
   
   
   

 

pr    
pr    
pr    

   
   
precision

recall

query time entity resolution

   
   
   

pra    
pra    
pra    

   
   
   

   
   
sim  threshold

   

   

    

   
    
   
sim  threshold

    

figure    effect  a  identifying relations recall  b  ambiguous relations precision collective clustering  error bars show standard deviation 

ax       secs ax    thus making possible use collective entity
resolution query time resolution 
      adaptive depth selection
improvement  investigate processing time reduced setting
expansion depth adaptively  depending ambiguity query name  compared
fixed queries  simple setup  set   queries number
different first initials last name less     out      explore depth  
ambiguous queries  reduces expansion depth           
queries  result  average processing time queries reduced         
secs      secs reduction accuracy  three queries  original
processing time depth   greater    secs  preliminary experiments 
evaluated original set     queries inherently ambiguous  general
setting  bigger fraction queries lower ambiguity  impact expected
even significant 
    experiments using synthetic data
addition experiments real datasets  performed experiments synthetically
generated data  enables us reason beyond specific datasets  empirically
verify performance analysis relational clustering general  specifically
entity resolution queries  designed generator synthetic data  bhattacharya
  getoor        allows us control different properties underlying entities
relations them  observed co occurrence relationships
entity references  among properties  control number entities 
average number neighbor entities per entity  number average size
observed co occurrences  additionally  control ambiguity entity attributes 
number ambiguous relationships entities  present overview
synthetic data generation process appendix a 
   

fibhattacharya   getoor

 

   
    
precision

   
recall

    

t    
t    
t    

   
   
   
   

   
    
   

   

    

   

   

   

t    
t    
t    

    
 

 
 
expansion level

 

 

 
 
expansion level

 

figure    change  a  precision  b  recall increasing expansion levels used
collective clustering  error bars show standard deviation 

performed number different experiments synthetic data  first set
experiments  investigate influence identifying relationships collective resolution using relational clustering  generate     co occurrence relations
    entities     entity entity relationships  using varying probability co occurrences
pr                   data  probability ambiguous relationships held fixed 
higher pr translates higher probability identifying co occurrences data 
figure   a  shows recall different similarity thresholds three different co occurrence
probabilities  results confirm recall increases progressively identifying
relationships thresholds  curves pr       pr       flatten
recall achievable 
next  observe effect ambiguous relations precision collective resolution using relational clustering  add     binary relationships     entities
three stages increasing ambiguous relationship probability  pr
                 
perform collective resolution     co occurrence relations generated
three settings  figure   b  plot precision different similarity threshold three different values pr
  plots confirm progressive decrease precision thresholds
higher pr
 

experiments  results averaged     different runs 

next  evaluate collective resolution queries  recall last two rows table   clearly demonstrate converging nature performance increasing expansion
levels queries real datasets  ran experiments synthetic data verify
trend  run  generated       co occurrence relations     entities
average   neighbors per entity  performed localized collective clustering
case  using query ambiguous attribute value  that corresponds
highest number underlying entities   figure   c   d   show recall precision change increasing expansion level query  recall improves increasing
expansion level  precision decreases overall  predicted analysis  importantly  recall increases significantly faster rate decrease precision 
general  rate increase decrease depends structural properties data 
shown analysis  experiments  seen different rates
   

fiquery time entity resolution

change  overall trend remains same  analysis showed precision
recall converge quickly increasing expansion levels  confirmed
two plots curves flatten level   
    current limitations
finally  discuss two current limitations collective entity resolution approach 
recall similarity measure eqn    involves weighting parameter combining
attribute relational similarity  experiments  report best accuracy
values query  selecting optimal value query
unresolved issue  however  experiments reveal even fixed         
queries brings significant improvements baselines 
second issue determination termination threshold rc er  note
issue baselines well  report best accuracy
thresholds  area ongoing research  preliminary experiments shown
best threshold often query specific setting threshold depending
ambiguity query results significantly better accuracy fixed threshold
queries  empirical evaluation  cleaned entire arxiv dataset offline running
rc er references together  terminated threshold maximizes
resolution accuracy references  results overall accuracy  f        
however  average accuracy measured    queries test set      
comparison  best obtainable accuracy resolving queries individually
different threshold       suggests may potential benefits localized
cleaning global counterpart offline setting 

   related work
entity resolution problem studied many different areas different
names deduplication  record linkage  co reference resolution  reference reconciliation 
object consolidation  etc  much work focused traditional attribute based
entity resolution  extensive research done defining approximate string similarity
measures  monge   elkan        navarro        bilenko et al         chaudhuri  ganjam 
ganti    motwani        may used unsupervised entity resolution 
approach uses adaptive supervised algorithms learn similarity measures labeled
data  tejada  knoblock    minton        bilenko   mooney        
resolving entities optimally known computationally hard even attributes considered  cohen  kautz    mcallester         therefore  efficiency
received lot attention attribute based data cleaning  goal essentially avoid
irrelevant expensive attribute similarity computations using blocking approach without affecting accuracy significantly  hernandez   stolfo        monge   elkan        mccallum et al          merge purge problem posed hernandez stolfo       
efficient schemes retrieve potential duplicates without resorting quadratic complexity  use sorted neighborhood method appropriate key chosen
matching  records sorted grouped according key potential matches
identified using sliding window technique  however  keys may badly distorted
matches cannot spanned window cases retrieved 
   

fibhattacharya   getoor

solution propose multi pass method different keys merging
results using transitive closure  monge elkan        combine union find algorithm
priority queue look up find connected components undirected graph  mccallum et al         propose use canopies first partition data overlapping
clusters using cheap distance metric use accurate expensive distance
metric data pairs lie within canopy  chaudhuri et al         use
error tolerant index data warehousing applications probabilistically looking
small set candidate reference tuples matching incoming tuple 
considered probabilistically safe since closest tuples database retrieved
high probability  efficient since small number matches needs
performed  swoosh  benjelloun  garcia molina  su    widom        recently
proposed generic entity resolution framework considers resolving merging
duplicates database operator goal minimize number record level
feature level operations  alternative approach reduce complexity individual similarity computations  gravano  ipeirotis  koudas  srivastava        propose
sampling approach quickly compute cosine similarity tuples fast text joins
within sql framework  approaches enable efficient data cleaning
attributes references considered 
many recently proposed approaches take relations account data integration
 ananthakrishna et al         bhattacharya   getoor              kalashnikov et al        
dong et al          ananthakrishna et al         introduce relational deduplication data
warehouse applications dimensional hierarchy relations  kalashnikov et al         enhance attribute similarity ambiguous reference
many entity choices relationship analysis entities  affiliation
co authorship  earlier work  proposed different measures relational similarity relational clustering algorithm collective entity resolution using relationships
 bhattacharya   getoor               dong et al         collectively resolve entities multiple types propagating relational evidences dependency graph  demonstrate
benefits collective resolution real datasets  long  zhang  wu  yu        proposed model general multi type relational clustering  though applied
specifically entity resolution  perform collective factorization related matrices
using spectral methods identify cluster space minimizes distortion relationships individual features time  approaches make use
relationships either entity matching  where domain entities known  entity
resolution  where underlying entities need discovered  shown
increase performance significantly attribute based solutions problems 
however  price pay terms computational complexity increases due
couple different reasons  firstly  number potential matches increases
relationships considered individual similarity computations become expensive  secondly  collective resolution using relationships necessitates iterative solutions
make multiple passes data  approaches still
shown scalable practice  cannot employed query time cleaning
straight forward manner 
idea multi relational clustering comes inductive logic programming
 ilp  literature  emde wettschereck        used multi relational similarity
   

fiquery time entity resolution

instance based classification representations first order logic  define similarity
two objects  e g   two people  combination similarity attribute
values  age  weight  etc   similarity objects
related to  companies work for  similar naive relational
similarity discussed earlier  except similarity connected objects
defined recursively terms connected objects  kirsten wrobel       
used recursive relational similarity measure agglomerative clustering first
order representations  recursive comparison neighbors shown effective
terms accuracy results  computational challenge major drawback 
probabilistic approaches cast entity resolution classification problem
extensively studied  groundwork done fellegi sunter         others  winkler        ravikumar   cohen        recently built upon work  adaptive
machine learning approaches proposed data integration  sarawagi   bhamidipaty        tejada et al          active learning requires user label informative
examples  probabilistic models use relationships collective entity resolution
applied named entity recognition citation matching  pasula et al         mccallum   wellner        li et al         singla   domingos         probabilistic
approaches superior similarity based clustering algorithms associate
degree confidence every decision  learned models provide valuable insight
domain  however  probabilistic inference collective entity resolution known
scalable practice  particularly relationships considered  approaches mostly shown work small datasets  significantly slower
clustering counterparts 
little work done literature query centric cleaning relational approaches answering queries  execution time important accuracy resolution  approaches proposed localized evaluation bayesian networks  draper
  hanks         clustering problems  recently  chandel  nagesh  sarawagi
       addressed efficiency issues computing top k entity matches dictionary context entity extraction unstructured documents  process top k
searches batches speed up achieved sharing computation different
searches  fuxman  fazli  miller        motivate problem answering queries
databases violate integrity constraints address scalability issues resolving inconsistencies dynamically query time  however  relational aspect problem 
major scalability issue address  come settings  earlier work relational clustering bhattacharya   getoor         used
idea relevant references experimental evaluation biobase dataset 
discussed here  dataset entity labels     frequent
names  therefore  instead running collective resolution entire biobase dataset 
evaluated     names separately  using relevant references case 
relevant references ones directly connected references names
interest  concept focused cleaning  performance analysis relational clustering  expand resolve strategy and  importantly  idea adaptive expansion
query time resolution addressed paper 
one first papers make use relational features classification problem
chakrabarti  dom  indyk         showed problem classifying
   

fibhattacharya   getoor

hyper linked documents  naive use relationships hurt performance  specifically 
key terms neighboring documents thrown document whose topic
classified  classification accuracy degrades instead improving  parallel scenario
clustering using relationships naive relational model  nr  may perform worse
attribute model  a  presence highly ambiguous relationships  chakrabarti
et al         showed relationships however used improved classification
topic labels neighboring documents used evidence instead naively
considering terms contain  earlier work  bhattacharya   getoor       
       shown similar results collective clustering using relationships 
cluster labels neighboring labels lead improved clustering performance compared
naive relational attribute based clustering  interesting result shown
paper theory empirically even collective use relationships
hurt clustering accuracy compared attribute based clustering  happens
relationships references dense ambiguous  errors propagate
relationships exceed identifying evidence provide 

   conclusions
paper  motivated problem query time entity resolution accessing
unresolved third party databases  answering entity resolution queries  addressed challenges using collective approaches  recently shown significant
performance improvements traditional baselines offline setting  first hurdle
collective resolution arises interdependent nature resolution decisions 
first formally analyzed recursive nature dependency  showed precision recall individual entities grow geometric progression increasing levels
neighbors considered collectively resolved  proposed two stage expand
resolve strategy answering queries based analysis  using two novel expansion
operators  showed using analysis sufficient consider neighbors small
expansion depths  since resolution accuracy query converges quickly increasing
expansion level  second challenge answering queries computation
quick  achieve this  improved unconstrained expansion strategy propose
adaptive algorithm  dramatically reduces size relevant references
and  result  processing time identifying informative references
query  demonstrated using experiments two real datasets strategies
enable collective resolution query time  without compromising accuracy  additionally performed various experiments synthetically generated data wide range
settings verify trends predicted analysis  summary  addressed
motivated critical data integration retrieval problem  proposed algorithms
solving accurately efficiently  provided theoretical analysis validate approach
explain works  and  finally  shown experimental results multiple real world
synthetically generated datasets demonstrate works extremely well practice  presented results bibliographic data  techniques applicable
relational domains 
shown dramatic reduction query processing time comes
adaptive expansion  research necessary able answer entity resolution queries
   

fiquery time entity resolution

order milli seconds  may demanded many scenarios  interesting directions
future research include exploring stronger coupling extraction resolution
phases query processing  expansion happens on demand
resolution process finds residual ambiguity high requires additional evidence
taking decisions  would directly address problem determining
expansion depth  reported preliminary experiments paper 
work needs done adaptive depth determination depending ambiguity 
context  may imagine soft thresholds adaptive expansion  expansion
operator automatically determines number hyper edges names expanded
residual ambiguity falls specified level  interesting extensions
include caching intermediate resolutions  related resolutions performed
query stored retrieved required answering future queries 

acknowledgments
wish thank anonymous reviewers constructive suggestions greatly
improved paper  work supported national science foundation  nsf
         nsf           additional support itic kdd program 

appendix
synthetic data generator
designed synthetic data generator allows us control different structural
attribute based characteristics data bhattacharya   getoor        
present overview generation algorithm 
generation process two stages  first stage  create collaboration
graph among underlying entities entity attributes  second  generate
observed co occurrence relations collaboration graph  high level description
generative process shown figure     next  describe two stages
generation process greater detail 
graph creation stage  turn  two sub stages  first  create domain
entities attributes add relationships them  creating entities 
control number entities ambiguity attributes  create n entities
attributes one another  simplicity without losing generality 
entity e single floating point attribute e x  instead character string  parameter
pa controls ambiguity entity attributes  probability pa attribute new
entity chosen values already use existing entities  binary
relationships added created entities  attributes 
parameter controlling ambiguity relationships  defined section   
binary relationship  ei   ej    first ei chosen randomly ej sampled  ei   ej  
ambiguous relationship probability pr
a 
describing process generating co occurrence relationships graph 
let us consider little detail issue attribute ambiguity  finally needs
controlled ambiguity reference attributes  depend
entity attributes  completely determined entities  taking example
   

fibhattacharya   getoor

  
  
  
  
  
  
  

creation stage
repeat n times
create random attribute x ambiguity pa
create entity e attribute x
repeat times
choose entity ei randomly
choose entity ej prob pr
ambiguous relationship  ei   ej  
set ei   n br ej   ej   n br ei  

  
  
   
   
   
   
   
   
   

generation stage
repeat r times
randomly choose entity e
generate reference r using n  e x    
initialize hyper edge h   hri
repeat probability pc
randomly choose ej n br e  without replacement
generate reference rj using n  ej  x    
add rj hyper edge h
output hyper edge h

figure     high level description synthetic data generation algorithm

names  two people names john michael smyth james daniel smith
still ambiguous terms observed names data depending
generation process observed names  words  attribute ambiguity references
depends separation entity attributes dispersion created
generation process  make assumption entity e attribute e x 
references generated gaussian distribution mean x variance      so 
high probability  reference attribute generated e x range
 e x    e x       range attribute domain considered occupied
entity e  entity ambiguous attribute occupied range intersects
another entity 
come generation co occurrence relationships entity collaboration graph  stage  r co occurrence relationships hyper edges generated 
references  hyper edge hri   ri            rik i  two aspects need controlled many references references included hyper edge 
done follows  first  sample entity ei serves initiator entity
hyper edge  entities eij hyper edge repeatedly sampled  without replacement  neighbors initiator entity ei   size hyper edge
determined using parameter pc   sampling step hyper edge terminated
probability pc selection eij   process terminated neighbors
initiator entity exhausted  finally  references rij need generated
selected entities eij   done entity e sampling gaussian
distribution n  e x     
   

fiquery time entity resolution

references
ananthakrishna  r   chaudhuri  s     ganti  v          eliminating fuzzy duplicates
data warehouses  international conference large databases  vldb  
hong kong  china 
benjelloun  o   garcia molina  h   su  q     widom  j          swoosh  generic approach
entity resolution  tech  rep   stanford university 
bhattacharya  i     getoor  l          iterative record linkage cleaning integration  sigmod workshop research issues data mining knowledge
discovery  dmkd   paris  france 
bhattacharya  i     getoor  l          relational clustering multi type entity resolution  acm sigkdd workshop multi relational data mining  mrdm  
chicago  il  usa 
bhattacharya  i     getoor  l          mining graph data  l  holder d  cook  eds   
chap  entity resolution graphs  wiley 
bhattacharya  i     getoor  l          collective entity resolution relational data  acm
transactions knowledge discovery data  tkdd         
bhattacharya  i   licamele  l     getoor  l          query time entity resolution 
acm international conference knowledge discovery data mining  sigkdd  
philadelphia  pa  usa 
bilenko  m     mooney  r          adaptive duplicate detection using learnable string
similarity measures  acm international conference knowledge discovery
data mining  sigkdd   washington dc  usa 
bilenko  m   mooney  r   cohen  w   ravikumar  p     fienberg  s          adaptive name
matching information integration   ieee intelligent systems               
chakrabarti  s   dom  b     indyk  p          enhanced hypertext categorization using
hyperlinks  proceedings acm international conference management
data  sigmod  
chandel  a   nagesh  p  c     sarawagi  s          efficient batch top k search
dictionary based entity recognition  ieee international conference data
engineering  icde   washington  dc  usa 
chaudhuri  s   ganjam  k   ganti  v     motwani  r          robust efficient fuzzy
match online data cleaning  acm international conference management
data  sigmod   san diego  ca  usa 
cohen  w   kautz  h     mcallester  d          hardening soft information sources 
acm international conference knowledge discovery data mining  sigkdd  
boston  ma  usa 
dong  x   halevy  a     madhavan  j          reference reconciliation complex information spaces  acm international conference management data
 sigmod   baltimore  md  usa 
   

fibhattacharya   getoor

draper  d     hanks  s          localized partial evaluation belief networks 
annual conference uncertainty artificial intelligence  uai   seattle  wa  usa 
emde  w     wettschereck  d          relational instance based learning  proceedings
international conference machine learning  icml  
fellegi  i     sunter  a          theory record linkage  journal american
statistical association               
fuxman  a   fazli  e     miller  r          conquer  efficient management inconsistent
databases  acm international conference management data  sigmod   baltimore  md  usa 
gravano  l   ipeirotis  p   koudas  n     srivastava  d          text joins data cleansing integration rdbms  ieee international conference data
engineering  icde   bangalore  india 
hernandez  m     stolfo  s          merge purge problem large databases 
acm international conference management data  sigmod   san jose  ca 
usa 
kalashnikov  d   mehrotra  s     chen  z          exploiting relationships domainindependent data cleaning  siam international conference data mining  siam
sdm   newport beach  ca  usa 
kirsten  m     wrobel  s          relational distance based clustering  proceedings
international workshop inductive logic programming  ilp  
li  x   morie  p     roth  d          semantic integration text  ambiguous names
identifiable entities  ai magazine  special issue semantic integration         
long  b   zhang  z  m   wu  x     yu  p  s          spectral clustering multi type relational data  proceedings   rd international conference machine learning
 icml  
mccallum  a   nigam  k     ungar  l          efficient clustering high dimensional data
sets application reference matching  acm international conference
knowledge discovery data mining  sigkdd   boston  ma  usa 
mccallum  a     wellner  b          conditional models identity uncertainty application noun coreference  advances neural information processing systems
 nips   vancouver  bc  canada 
monge  a     elkan  c          field matching problem  algorithms applications 
acm international conference knowledge discovery data mining
 sigkdd   portland  or  usa 
monge  a     elkan  c          efficient domain independent algorithm detecting
approximately duplicate database records  sigmod workshop research
issues data mining knowledge discovery  dmkd   tuscon  az  usa 
navarro  g          guided tour approximate string matching  acm computing
surveys               
   

fiquery time entity resolution

pasula  h   marthi  b   milch  b   russell  s     shpitser  i          identity uncertainty
citation matching  advances neural information processing systems  nips  
vancouver  bc  canada 
ravikumar  p     cohen  w          hierarchical graphical model record linkage 
conference uncertainty artificial intelligence  uai   banff  alberta 
canada 
sarawagi  s     bhamidipaty  a          interactive deduplication using active learning 
proceedings eighth acm international conference knowledge discovery
data mining  sigkdd   edmonton  alberta  canada 
singla  p     domingos  p          multi relational record linkage  sigkdd workshop multi relational data mining  mrdm   seattle  wa  usa 
tejada  s   knoblock  c     minton  s          learning object identification rules
information integration  information systems journal                 
winkler  w          methods record linkage bayesian networks  tech  rep   statistical research division  u s  census bureau  washington  dc 

   


