journal artificial intelligence research                  

submitted        published      

semantics logic programs preferences
sergio greco

greco deis unical it

deis  universita della calabria
via p  bucci        rende   italy

irina trubitsyna

irina deis unical it

deis  universita della calabria
via p  bucci        rende   italy

ester zumpano

zumpano deis unical it

deis  universita della calabria
via p  bucci        rende   italy

abstract
work contribution prioritized reasoning logic programming presence
preference relations involving atoms  technique  providing new interpretation
prioritized logic programs  inspired semantics prioritized logic programming
enriched use structural information preference answer set optimization programming  specifically  analysis logic program carried together
analysis preferences order determine choice order sets
comparable models  new semantics compared approaches known
literature complexity analysis performed  showing that  respect
similar approaches previously proposed  complexity computing preferred stable models increase 

   introduction
increased interest preferences witnessed extensive number proposals
systems preference handling  grell  konczak    schaub        van nieuwenborgh  
vermeir        wakaki  inoue  sakama    nitta               literature distinguishes
static dynamic preferences  static preferences fixed time theory specified  i e  external logic program  whereas dynamic preferences appear
within logic program determined fly  common form
preference consists specifying preference conditions among rules  brewka        brewka
  eiter              delgrande  schaub    tompits      a      b        gelfond   son 
      schauba   wang        van nieuwenborgh   vermeir              wang  zhou   
lin        zhang   foo         whereas  recent proposals admit expression
preference relations among atoms  brewka  niemela    truszczynski        brewka       
sakama   inoue        wakaki et al          sophisticated forms preferences
allow specification priorities conjunctions  disjunctions  literals  brewka
et al         delgrande et al       a  sakama   inoue        numerical penalties
suboptimal options  brewka        
work contribution prioritized reasoning logic programming presence
preference conditions involving atoms  particular  priorities applied following
natural ordering defined dependencies  proposed answer set optimizac
    
ai access foundation  rights reserved 

figreco  trubitsyna    zumpano

tion  aso  semantics  brewka et al          comparison strategy  proposed
preferred stable model  psm  semantics  sakama   inoue         reviewed introducing concept comparable models  next example describes intuition
basis proposed approach 
example   following prioritized program hp       i  inspired program presented
brewka et al          describes different menus preferences among drinks
desserts 
p   

fish beef
red white
pie ice cream
fish  white
beef  pie
fish  ice cream

   

     white   red fish
     red   white beef
     pie   ice cream red

symbol denotes exclusive disjunction  i e  body rule true exactly
one atom head true  whereas rule empty head defines constraint  i e 
rule satisfied body false  first three rules p   select main
dish  drink dessert  last three rules constraints state feasible
solution cannot contain i  fish white ii  beef pie iii  fish ice cream 
prioritized rules   introduce preferences among drinks            desserts       
program p   three stable models  m     fish  red  pie   m     beef  white 
ice cream  m     beef  red  ice cream   psm returns m  unique preferred model  whereas aso technique  following natural ordering preference rules
       precede       derives m  unique solution  thus  two approaches
provide different results 
 
structure preference rules example suggests i  fish beef
alternative options main dish ii  choice drink depends selected main
dish precedes choice dessert  second conclusion based observation
      provide opposite valuations choice drink define two different
classes models  menus   considered separately  words  model
m   associated menu containing fish  compared models
m  m   associated menus containing beef   consequently  m  m 
preferred 
observe example psm semantics derives m  preferred
model m  preferable m   due presence rule       m  preferable m 
 due presence rule      and  transitively  m  preferable m   
worth noting use transitive closure makes comparison models much
complex two models cannot compared directly  hand aso
semantics sensitive syntactic changes programs  fact illustrated means
following example 
example   consider prioritized program hp      i  extension prioritized program defined example   
   

fion semantics logic programs preferences

p   

fish beef
red white beer
pie ice cream
fish  white
beef  pie
fish  ice cream
beer

   

 b    beer   white   red fish
 b    beer   red   white beef
 b    pie   ice cream red

program equivalent one reported example   as  even contains additional choice  beer   option feasible  presence constraint beer 
set stable models associated program p    coincides reported
program p   example    consists of  m     fish  red  pie   m     beef 
white  ice cream  m     beef  red  ice cream   considering set preference
rules  note preferences regarding choice drink beer best option 
stable model containing it  intuitively  two problems hp       example   hp      equivalent must preferred models  aso
semantics sensitive program change gives m  m  solution  whereas 
equivalent program example    returned preferred model m  only 
change occurs set preferred models psm semantics 
 
thus  paper present new semantics  inspired psm aso semantics  seems better capture intuitive meaning programs avoids
mentioned problems 
    contribution
paper provides new semantics prioritized logic programs enriching one proposed sakama inoue        additional information gained structure
preference rules proposed brewka et al          particular  new semantics
uses different preference relations among stable models introduces natural ordering
among preferences fixes order choices  basis stratification
preference program  decision determined set choices belonging
corresponding level provides subset models given input solution 
decision made  output subset becomes input set following decision
on  proposed semantics drives decision making process taking account catching
additional information regarding non comparable sets models partitioning set
models program looking alternative decisions  end concept
incomparability  taken account previous approaches  introduced 
paper presents detailed comparison approaches dealing preference
relations among atoms  particular attention devoted psm aso semantics 
analysis complexity computing preferred answer sets performed  showing
that  w r t  previous proposals  psm aso semantics  complexity
computing preferred stable models increase 
   

figreco  trubitsyna    zumpano

    plan paper
rest paper organized follows  section   preliminaries disjunctive
abductive logic programs  prioritized logic programs answer set optimization
semantics given  section   new interpretation prioritized logic programs
presented  section   complexity results provided  section   comparison
presented semantics psm aso semantics performed  approaches 
known literature  briefly described  finally  section   outlines conclusions 

   preliminaries
assume familiarity relational database theory  disjunctive logic programs  disjunctive deductive databases   disjunctive  stable model semantics computational complexity  eiter  gottlob    mannila      b  gelfond   lifschitz              papadimitriou 
      
    background
 disjunctive  logic program finite set rules r form a  ak b         bm  
c         cn k     n      a         ak   b         bm   c         cn atoms 
disjunction a  ak   denoted head r   called head r  conjunction
b         bm   c         cn   denoted body r   called body r 
herbrand universe program p set constants appearing p    
herbrand base bp set ground atoms constructed predicates
appearing p constants   term  resp  atom  rule program 
ground variables occur it  rule r  ground instance rule r  r  obtained
r replacing every variable r constant   ground p  denotes
set ground instances rules p 
intuitive meaning previous disjunctive rule body r  true  i e 
b         bm true c         cn false  head r  must true  i e least one
a         ak true  otherwise r satisfied   rules empty head  called denials
constraints  used define constraints satisfied body false 
paper exclusive disjunction  denoted   used head  statement head r   
a      ak true  exactly one a         ak true  i e  disjunctive rule form
a  ak body shorthand rule a  ak body  k  k      
constraints form ai   aj   body     j k  solution logic program p
given terms stable model  answer set  semantics  gelfond   lifschitz              
interpretation p model p satisfies rules ground p  
minimal model semantics  defined positive p  assigns p set minimal models
mm p   model p minimal  proper subset model p
 minker         general disjunctive stable model semantics applies programs  unstratified  negation  gelfond   lifschitz         disjunctive stable model
semantics generalizes stable model semantics  previously defined normal programs  gelfond   lifschitz         interpretation   denote p ground positive
program derived ground p  i  removing rules contain negated atom
   considering function free programs 

   

fion semantics logic programs preferences

body   ii  removing negated atoms remaining rules 
interpretation  disjunctive  stable model p mm p   
general p  stable model semantics assigns p set sm p  stable models  well known stable models minimal models  i e  sm p  mm p  
negation free programs  minimal stable model semantics coincide  i e 
sm p    mm p   
    extended abductive programs
given atom p t   literal either p t  strong negation p t   extended
program program atoms replaced literals  semantics extended
disjunctive programs given terms stable models considering p p
different predicate symbols considering implicit constraint p x   p x   gelfond
  lifschitz        
abductive logic programming extension logic programming perform abductive
reasoning  kakas  kowalski    toni        inoue   sakama         abductive program
 alp  pair hp  ai  p extended program set literals called
abducibles  hp  ai represented means extended program   p  g t 
g    t    g t  a   g    t  g t    g t  a  
let alp g ground atom denoting observation  then  set
explanation g iff stable model   g   stable
model a minimal stable model n n a  moreover 
minimal explanation  i e  explanation   s  g iff   g 
consistent a minimal stable model    inoue   sakama        
shown given alp p ground atom g denoting observation 
deciding whether exists a minimal explanation g p   complete  eiter 
gottlob    leone      a  
rest section briefly review two main approaches prioritizing reasoning refer to  i e  prioritized logic programs answer set optimization  proposed 
respectively  sakama inoue        brewka et al         
    prioritized logic programs
 partial  preference relation among atoms defined follows  given two atoms e 
e    statement e  e   called priority  means e  higher priority e   
moreover  e  e  e  e    e  e    priority statement e  e  states
a  instance e  a  instance e  preference relation a  a  holds 
prioritized logic program  plp  pair hp  p disjunctive program
set priorities  denotes set priorities reflexively transitively
derived  
statement e  e  stands e  e  e    e    clearly  e  e    sets
ground instantiations e  e  empty intersection 
definition   given prioritized logic program hp  i  relation w defined
stable models p follows  stable models m    m  m  p 
   

figreco  trubitsyna    zumpano

   m  w m   
   m  w m  e  m  m    e  m  m   e  e      e 
m  m   e  e     
   m  w m  m  w m    m  w m   
m  w m  m  preferable m    moreover  m  w m  m   w m 
m    m   
 
interpretation preferred stable model hp  stable model p
n w implies w n stable model n  equivalently  interpretation n
stable model p n      set preferred stable models hp 
denoted psm hp  i   note relation     two plps hp   
hp    imply psm hp    i  psm hp    i  
plp priority relations used express priorities atoms  whereas priorities
general forms knowledge  conjunctive  disjunctive knowledge  rules  preconditions 
expressed simple rewriting preference program  instance  preference
rule precondition form  e  e    b expressed plp e   e    
e   e    b e   e    b 
semantics prioritized programs proposed sakama inoue       
denoted psm semantics  sound complete procedure allows preferred answer
sets plp program computed using generate test algorithm
proposed wakaki et al          algorithm translates plp program hp 
answer set program p single logic program  p    s  
answer sets answer sets p preferable s  details found works
presenting semantics implementation  sakama   inoue        wakaki et al  
      
complexity answering queries plp programs least one level
complexity answering queries standard programs  without preferences  
particular  let hp  prioritized logic program  i  deciding existence
preferred stable model p   hard  ii  deciding whether atom true  resp  all 
preferable stable model hp  p   hard  resp  p   hard   worth noting
original work  sakama   inoue        claimed complexity exactly one
level complexity standard programs  proof take account
transitivity property preference relation 
    answer set optimization
answer set optimization program  denoted aso program  pair hp  i  p
disjunctive program  called generating program  preference program consisting
finite set rules form  a      ak b         bm   c         cn bi cj
literals ai boolean combinations  literals  literal either atom l
 strong  negation l  determines preference ordering answer sets described
generating program p 
   boolean combination formula built atoms means disjunctions  conjunctions  default
negation 

   

fion semantics logic programs preferences

definition   let hp  aso program               n   answer
set p  induces satisfaction vector vs    vs             vs   n    where 
vs   j     i   j irrelevant s  i e  i  body  j satisfied ii 
body  j satisfied  none atoms head  j satisfied s 
vs   j     min i      ai  j   a      ak b        bm   c        cn    otherwise   
comparison models assumed equal    i e   vs   j    
equivalent vs   j        
definition   let s  s  two answer sets  i  vs  vs  vs    i   vs    i  
every     n   ii  vs    vs  vs  vs      n  vs    i     vs    i   
cases s  w s  s    s      respectively 
set literals optimal model aso program hp  answer set
p answer set   p     s 
 
complexity aso programs depends class generating programs 
disjunctive programs complexity answering queries aso programs exactly
one level complexity answering queries standard programs  without preferences   i e  i  deciding existence preferred stable model p   complete  ii  deciding
whether literal true  resp  all  preferable stable model hp  p   complete
 resp  p   complete  
strategy extended introducing meta preferences among preference
rules  ranked aso program sequence hp           n consisting generating program
p sequence pairwise disjoint preference programs   rank rule  
  n   denoted rank     unique integer     given two answer
sets s  s    s  wrank s  every preference rule    vs        vs       
hold  rule     rank         rank      vs           vs         
moreover  procedure deriving natural ordering preference rules introduced 
firstly  given preference program   dependency graph g   defined  atoms
appearing form vertex set g    directed edge vertex b
vertex g   rule   appears head r b appears
body r  graph g   acyclic  natural ranking atoms
defined recursively follows  rank a      every atom predecessors
g    otherwise rank a  maximum ranks predecessors g  
incremented    rank preference rule   defined maximum rank
atoms head 
standard semantics aso programs  priorities examined together 
denoted aso semantics  alternative semantics  priorities divided
strata following natural order  denoted raso  ranked aso  semantics 
   original work  brewka et al         symbols   used instead w   

   

figreco  trubitsyna    zumpano

   preferred answer sets
paper syntax similar one proposed brewka et al         used  given
two atoms a  a    statement a    a  means a  higher priority a   
 partial  preference relation   among atoms defined follows 
definition   prioritized program pair hp  p disjunctive program
set preference rules form 
a    a      ak b         bm   c         cn
k     a         ak   b         bm   c         cn atoms 

   
 

following head body preference rule   denoted head   
body     respectively  ground prioritized program  denoted ground hp  i   
hground p   ground  i prioritized program  rule r  p   variables
replaced set ground instances  i e set rules obtained replacing
variables constants 
intuitively  preference rule   form     describes choice among a         ak
 choice options  condition specified body    head   introduces
preference order among atoms  ai preferred aj     j k   
applied body    true  body   specifies decisions precede
choice  instance    c b states b true  preferred c 
preference rule exactly two atoms head called binary preference rule 
whereas preference rules empty bodies called preference facts  prioritized
program said binary form preference rules binary 
following example  presenting classical program proposed brewka et al         
used running example 
example   consider prioritized program hp       whose stable models define
menus restaurant 
p   

fish beef
red white beer
pie ice cream
beef  pie
fish  ice cream

   

  
  
  
  

 
 
 
 

white   red   beer fish
red   white beef
beer   white beef
pie   ice cream beer

first three rules p   select main dish  drink dessert  constraints
state feasible solution cannot contain beef pie fish ice cream 
rules   introduce preferences among drinks desserts 
program p   six stable models 
m     fish  white  pie 
m     fish  red  pie 
m     fish  beer  pie 

m     beef  white  ice cream 
m     beef  red  ice cream 
m     beef  beer  ice cream 

techniques proposed sakama inoue        brewka et al         select
stable models m  m  preferred ones  motivation different  indeed 
psm semantics states m  w m  w m  w m  w m  m  w m    whereas
   

fion semantics logic programs preferences

 r aso semantics states mi w m  w m    mi w m  mi w m          i e 
 r aso semantics models m  m  compared directly  whereas psm
semantics models m  m  compared transitively 
 
presenting formal semantics programs  preliminary definitions
needed  preference rule form a    a      ak body shorthand k  
binary rules form ai   ai   body      k    set preferences
established given transitive closure defined follows 
definition   given prioritized program hp  i   ground  transitive closure
     a   c body    body      b body  b   c body     c  
  set binary preference rules derived ground   
 
thus  defined set rules explicitly representing preference relations
among choice options  section   show ground prioritized program
  hp  rewritten equivalent program   hp  contains
number rules polynomial size  
structure prioritized programs examined order establish precedence relation among choices made  instance  presence preference rule
  c b suggests selection b precedes choice c thus
establishes precedence relation  b   a  c   idea used brewka
et al         determining natural ordering among preference rules  detail 
relational order among atoms appearing captured means corresponding dependency graph g    stratification preference rules established
considering head atoms 
unfortunately  natural ordering among preference rules established
corresponding dependency graph acyclic  thus  presence two rules coffee  
tea pie pie   ice cream coffee admit stratification  
introduce two mutually dependent choices 
stratification algorithm proposed paper overcomes problem introducing concept collapsed graph  maps node options mutually
dependent choices 
given  ground  prioritized program   hp  i  g    v  e  denotes dependency
graph whose set nodes consists atoms p whereas arc b
labeled  resp  p  rule  resp  p  containing head b
body  resp  b either head body   body  preference  facts empty 
assume bodies contain built in atom true  every fact
c
considered rule true  g denotes  acyclic  collapsed dependency graph derived
g replacing maximal sets mutual dependent nodes  i e  nodes belonging
c
cycle  unique node  clearly  node g associated set nodes
g  
c

node g possible assign level follows 
c

node g input degree zero  level a      
   

figreco  trubitsyna    zumpano

c

node g input degree greater zero 
c
c
level a    max max level b     b  z    g    max level b   b  z  p  g    
observe function level assigns node maximum distance
node input degree zero  following definition introduces concept stratification
preference rules 
definition   stratification  given  ground  prioritized program   hp  i 
partitioned h                 n i subprograms  called strata 
c

atom   level a    level a   node g associated a 
rule     level      max  level a    body      
 i            level        consists ground preference rules associated
level i 
 
partition h                 n i called stratification 
definition stratification preference rules establishes order
preferences applied considering p   moreover  assignment level
rule differs one proposed brewka et al         two main aspects 
level atoms defined analyzing collapsed dependency graph level
rules established considering body atoms instead head atoms  detailed
comparison two approaches presented section   
example   consider prioritized program hp       example    transitive closure
  consists binary preference rules        white   red fish         red   beer
fish        white   beer fish  derived      rules               
stratified two strata                                                       
 
structural analysis performed approach goes beyond stratification process
tries understand comparability models  end concepts conflicting
preferences comparable models introduced 
two ground  binary  preferences form   b body  b   body 
said conflicting  instance  preferences      white   red fish
     red   white beef example   conflicting  whereas preferences   
      red   water beef not  set preferences said conflicting
contains two conflicting preference rules 
intuition basis approach clarified example  suppose
two conflicting preferences        b c      b   d  two conflicting
preferences       specify preference b two different sets models 
b  characterized presence c d  respectively  thus  c d   and
atoms c depend  define alternative decisions  decision
made  associated solutions  models  longer comparable 
preference rule   said relevant stable model     used
compare stable models     body   head
   

fion semantics logic programs preferences

atoms belongs   given prioritized program hp   ground  preference rule
      b body   set stable models    relevant  sm p      
 m   sm p     body  a b   
definition   comparable models  let hp  prioritized program  m  m  two
stable models p h            n i stratification  
   m  m  comparable     
   m  m  comparable  i          n  
 a  comparable  i  
 b  exist two conflicting preference rules          i 
m  sm p      sm p      m  sm p      sm p      
 
observe that  second condition previous definition comparable models
states presence two conflicting preference rules given level identifies two
sets models  one two conflicting rules relevant  two models 
appearing different sets considered separately next levels 
words  two stable models m  m    relevant preferences conflicting rules
       b body       b   body  given level i  comparable levels
greater i  m  sm p      sm p      m  sm p      sm p      
m     body   a b  body  m     body   a b  body   
example   consider stable models m     fish  beer  pie   m     beef  beer 
ice cream   set preference rules   example    stable models m 
m  comparable       definition  comparable       
     relevant m   as m     fish  white beer  beef     
relevant m   as m     beef  white beer  fish   conflicting
preferences belong       
 
fact   let hp  prioritized program without conflicting preferences h     
           n i stratification   then  two models m  m  comparable
 i       n  
 
proof  proof fact follows directly definition   

 

basis definition   declarative semantics prioritized logic programs
provided  new semantics  denoted pas  preferred answer sets   given
preferred stable models follows 
definition   preference answer sets  given prioritized program hp  i 
relation w defined stable models p follows  pair stable models
m  m  p  h                 n i stratification   m  w m 
         e    e    body   i  e  m  m    e  m  m   
m  m  comparable  i      relevant m  m   
   

figreco  trubitsyna    zumpano

           e    e    body   j   j   i  e  m  m    e  m  m 
   relevant m  m   
moreover  m  strictly preferable m   m    m    m  w m  m   w m   

 

note relation   could defined directly replacing condition j  
j item   definition 
definition   preferred answer sets  interpretation preferred stable model
prioritized program hp  stable model p exist stable
model n n     set preferred stable models hp  denoted
pas hp  i  
 
note definition   introduces preferences pairs models considering
additional information gained structure preference rules 
example   consider prioritized program hp      example   stratification
h            i presented example   
models comparable     definition
owing                      m    m    m   
owing           m    m  m    m   
        conflicting  models m  m         relevant  cannot
compared     models m  m       relevant 
therefore  discussed example    m  m  comparable       and 
consequently  preferred models are  m    m  m   
 
previous example stable model m  considered good m 
beef main dish  best choice drink  red wine beer  respectively 
dessert  ice cream   observe aso psm semantics discard m   
already stated  aso semantics deduces m  m  preferable m  owing
     psm semantics states m  preferable m  m  preferable
m    owing          
b  i
example   let hp       program example    consider program hp    
b   derived   replacing   


      pie   ice cream
b                                            
new ground preference program unique level
 
 
                 derived      shown example    due       following relations hold  mi   mj           j            therefore  m 
unique preferred model  result obtained psm aso semantics   
   

fion semantics logic programs preferences

   complexity
section provides results concerning computational complexity computing
preferred stable models answering queries pas semantics  consider data
complexity input domain consists herbrand universe  we assume
constants occurring occur p   clearly  size herbrand base bp
well sizes ground p  ground   polynomial size  
following results demonstrate allowing preferences among atoms semantics proposed increases complexity expressivity language one level
polynomial hierarchy  thus use additional information increase
computational complexity proposed approach respect mentioned
techniques  brewka et al         sakama   inoue        
proposition   let   hp  prioritized program  exists program  
hp  equivalent hground p   i  stratification computed
polynomial time  ii  hp  derived hground p   polynomial time 
proof  start considering program     hground p     i    binary
c
ground version   size graphs g  g  polynomial size  
c
computed polynomial time  assignment levels nodes g 
done polynomial time  assignment levels atoms rules  
done polynomial time 
let h               n i stratification     generate new ground prioritized
program hp  equivalent hground p   size polynomial size    
initially  assign ground atom ai appearing head preference rule  
unique index i  let a         ap  indexed  atoms appearing head rules    
p denotes program ground p  p
p    b i  j  l  bodyi j   ai   aj bodyi j    l   
 b i  j  l  b i  k  l    b k  j  l    l   max l   l     i  j  k     p   l    l      n  
b new predicate symbol  then  denotes new set ground preference rules
defined follows 
   ai   aj b i  j  l    i  j     p  l     n   
stratification obtained associating stratum l preference rules
whose body atom value level attribute equal l   l     ai   aj
b i  j  l    ai   aj b i  j  l    
order show equivalence hground p   hp  i  observe
set stable models ground p  p equivalent  i e  sm p 
stable model n sm ground p   n    b i  j  l    b i  j  l   
n sm ground p   stable model sm p  n  
 b i  j  l    b i  j  l     rules ground p  contain atoms form
b i  j  l  bodies 
   

figreco  trubitsyna    zumpano

moreover  let n stable model ground p  corresponding stable
model p  n    ground preference rule ai   aj bodyi j  l  whose
body true n   ground rule ai   aj b i  j  l   l  whose body true
vice versa  therefore two sets  l   l  equivalent  l     n  
clearly  program hp  derived hground p   polynomial time 
 
following  sake simplicity presentation  continue refer
program hp  stratification  
proposition   let hp  prioritized program  m  m  two stable models p 
h                 n i stratification   problem checking whether 
given k n  m  m  comparable            k  solved polynomial time 
proof  obviously m  m  comparable      assuming m  m 
comparable given level j   k  m  m  comparable level j    
two conflicting preference rules       b body      b   body   j 
m     body   a b  body  m     body   a b  body    check
done polynomial time number rules  j  polynomial size
  moreover  maximum value k bounded size  which bounded
set atoms bp    global complexity polynomial 
 
corollary   let hp  prioritized program  m  m  two interpretations p 
problem checking whether m    m  solved polynomial time 
proof  straightforward definition   proposition   

 

lemma   let hp  prioritized program interpretation p  problem
deciding whether preferred stable model hp  p   
proof  consider complementary problem deciding whether preferred
stable model hp  i  case sufficient first check stable model 
stable model sufficient guess interpretation n check i  n
stable model p ii  n     check part i   as well check
stable model  done means n p oracle problem deciding
whether interpretation stable model disjunctive program con p complete 
whereas check part ii  done polynomial time  see corollary     therefore 
complexity complementary problem n p n p and  consequently  complexity
original problem con p n p  
 
theorem   let hp  prioritized program 
   deciding whether ground atom g true preferred stable models hp 
p   complete 
   deciding whether ground atom g true preferred stable models hp 
p   complete 
   

fion semantics logic programs preferences

proof  membership  first demonstrate deciding whether g true
preferred stable model hp  p    result suffices prove complementary problem  consisting deciding whether true preferred stable models 
p   complete 
show membership sufficient guess interpretation containing g
check whether preferred stable model  lemma   problem deciding
whether preferred stable model p  solved means p 
oracle 
therefore  deciding whether exists preferred stable model containing g
p 
n p   p   
hardness  given abductive logic program consisting disjunctive program p
set abducibles  positive  atoms a  ground abductive logic program derived prom p

  ground p    g    t  g t    g t  ground a   
  g    t  g t    g t  ground a   
let
    g    t    g t    g t  ground a   
h  denotes prioritized program derived p a 
two stable models m  n sm    w n respect means
preference p   u    p u  p   u  p u  n exists
preference q    v    q v  q    v  n q v  exists  implies
ground a  n ground a  and  consequently  preferred stable models
a minimal 
therefore  problem deciding whether h  a minimal explanation
goal g equivalent deciding whether h  preferred stable model containing g 
consequently  problem deciding whether a minimal explanation g exists
p   complete  problem deciding whether preferred stable model h 
containing g exits p   hard  whereas problem deciding whether preferred
 
stable models hp  contain g p   hard 
corollary   let hp  disjunction free  prioritized program  deciding
whether ground atom true  all  preferred stable models hp  p   complete
 p   complete  
proof  complexity one level lower problem deciding whether interpretation stable model disjunction free program polynomial 
 

   analysis comparison
section compares semantics introduced psm  r aso semantics
briefly discusses recently proposed semantics 
psm semantics elegant compares pairs models basis
common preferences basis degree satisfaction  consider natural ordering preference rules and  cases  example  
   compares  and consequently discards  models pas approach
   

figreco  trubitsyna    zumpano

comparable  interesting feature psm technique application transitive
property order derive additional preference relations among problem solutions
new  immediately visible  preference relations captured  however  test
transitive property cannot performed direct comparison two models  lies
complex implementation 
 r aso technique powerful tool determines preferred models
evaluating degree satisfaction preference rules  thus  compares two
models even absence common preferences  preference relation
two models established directly  detail  raso technique considers
structure preference rules associating degree satisfaction choice options
introduces natural ordering among preferences  case psm semantics 
 r aso semantics compares and  consequently  discards models
comparable using pas technique  instance  program hp      i  presented
introduction  raso discards m    second best option drink  even
unique possible choice presence fish 
specifically  preference relation w used psm approach preorder
relation reflexive transitive  determines equivalent answer set classes
establishes partial preference order among mentioned classes  consequently
preferred answer sets appearing preferred classes  noted
psm semantics requires use transitive property order derive 
basis relations obtained direct comparison pairs models  new preference
relations  contrary   r aso semantics uses strict preference relation
asymmetric require application transitive property
compare solutions 
pas semantics  proposed here  compares two solutions basis common preferences introducing concept comparable models considering
refinement natural order among preference choices  thus  seen extension psm semantics uses additional information derived structure
preference rules  instead comparing models transitively  compares models
considering transitive closure  ground  preference rules 
novelty pas semantics consideration structural information preference rules  introduces concept comparable models order avoid comparing
models  in opinion  compared associated alternative decisions  moreover  proposes refinement natural order among preferences
order define order choices  raso semantics establishes relational order among
atoms appearing means corresponding dependency graph g   cannot
treat case mutually dependent choices  stratification algorithm  proposed
c
paper  overcomes problem considering collapsed graph g   acyclic
construction sensitive syntactic changes  moreover  raso semantics
stratification preference rules established considering head atoms  whereas
pas semantics levels assigned rules basis body atoms  following
intuition describe contexts choices  thus  stratification proposed
always assigns preference facts first level level rule fixed looking
level body atoms 
advantages adopted approach clarified following example 
   

fion semantics logic programs preferences

example   problem defined means prioritized program hp      consists
selecting colors trousers shirt  black blue trousers  r   
white  yellow red shirts  r    available  fashion consultant suggests blue
trousers better black ones        white shirt better yellow shirt       
case black trousers white shirt preferred red one        moreover 
blue trousers go white shirt  c    red shirt go blue
trousers  c    
p   

r 
r 
c 
c 

 
 
 
 

black blue
white yellow red
blue  white
red  blue

   

     blue   black
     white   yellow
     white   red black

program p  four stable models  m     black  white   m     black  yellow  
m     blue  yellow  m     black  red   order define stratification
preference rules  raso pas semantics firstly assign level atoms  first level
blue  black yellow second level white red  second step
raso approach  considering maximum level head atoms  assigns    first
level       second level  whereas pas defines level preferences
basis body atoms assigns       first level    second level  note
case order    relevant determining preferred models  fact 
raso gives m    pas returns m  m  preferred models 
 
formal comparison three semantics carried class
programs specific definition stratification significant  moreover 
psm semantics defined prioritized programs hp  consists
binary facts  preference rules rewritten preference facts   following
comparison carried considering programs whose preference rules consist
facts  class programs closure used psm pas semantics
coincide 
given prioritized program hp  denote gsem    v  esem   preference
graph stable models p  v   sm p  denotes set stable models
p esem denotes preference relation   defined semantics sem
 psm  aso  pas   particular  esem consists arcs  mi   mj   mi   mj
holds sem semantics  therefore  comparison different semantics
performed analyzing corresponding preference graphs  stable model mi preferred
sem semantics arc  mj   mi   gsem  
following example shows relation psm pas semantics 
example   consider prioritized program hp      
p     fish beef pork chicken
white fish
red beef
beer pork
water chicken
   

    fish   beef
chicken   pork
red   white
red   water
beer   water

figreco  trubitsyna    zumpano

program four stable models  m     fish  white   m     beef  red   m   
 pork  beer  m     chicken  water   whereas direct preference relations 
psm semantics  follows  m  w m    m  w m    m  w m    m  w m  m  w m   
consequently  graph gpsm consists four nodes  m    m    m 
m    four arcs  m    m    m    m    m    m  m    m    therefore  preferred
models m  m   
regarding pas semantics  relation m    m  holds and  thus 
three preferred stable models  namely m  m  m   
 
theorem   prioritized program hp  consists preference facts 
psm hp  i  pas hp  i  
proof  consider graphs gpsm    v  epsm   gpas    v  epas    graphs
acyclic epas epsm   two graphs acyclic  adding edges
create cycles  number nodes without incoming edges decreases  therefore  set
nodes without incoming edges gpas contains nodes without incoming edges gpsm
and  consequently  psm hp  i  pas hp  i  
 
analyze relation aso pas semantics  first note that 
observed introduction  aso semantics sensitive syntax changes 
instance  prioritized program
abc

      b   c
    b  

two preferred stable models  m     a  m     b   however  program
       b
      b   c
    b  

abc

derived rewriting rule     m     c  preferred model 
thus  consider special class constraints sensitive syntactic
changes  since every  ground  prioritized program   hp  i  partitioned n strata  n      rewritten program   hp  i 
equivalent pas semantics  as shown proof proposition
    may equivalent raso semantics  as rules belong
unique stratum     continue consider programs   hp  consists
single stratum and  particular  facts 
given prioritized program hp  consists facts  denote
     a        ai   ai       n    n maximum  
set preference rules obtained merging ground preference facts 
lemma   let hp  prioritized program consists preference facts
ground         then  aso hp  i  pas hp  i  
   

fion semantics logic programs preferences

proof  consider two graphs gaso    v  easo   gpas    v  epas     m    m   
epas means m    m    i e 
i  ground rule      e    e  e  m m    e  m m   
ii  ground rule      e    e    e  m  m  e  m  m   
implies ground      
i  must ground rule       e      e     
e  m  m    e  m  m   
ii  must ground rule       e      e       
e  m  m  e  m  m   
therefore  m    m  respect aso semantics  graph gaso contains arc  m    m     consequently  epas easo   aso hp    i  pas hp    i    
find tight relation two semantics  consider restriction
  obtained deleting atoms appear model ground
preference rules 
 

b    a        ai   ai       n    n maximum

sm p  s t  ai   ai    

theorem   let hp  prioritized program consists preference
b     then  aso hp  i    pas hp  i  
facts ground    
b   derived  
proof  aso hp  i  pas hp  i  derives lemma   
deleting nodes appear model influence relation  
aso semantics 
show aso hp  i  pas hp  i  consider relation aso semantics 
m    m  means
b   e  m  m   
   ground rule       e      e   
e  m  m   

   ground rule       e      e   
e  m  m  e  m  m   

   

b 
implies ground    

   must ground rule      e    e  e  m  m    e 
m  m   
   ground rule      e    e    e  m  m  e  m  m   
   

figreco  trubitsyna    zumpano

therefore  m    m  holds respect pas semantics  consequently 
easo rpas   aso hp    i  pas hp    i  
 
extension aso semantics proposed brewka        brewka 
niemela  truszczynski         detail  brewka        provided preference
description language  allowing express complex preferences combining qualitative
quantitative penalty based preferences  whereas brewka et al         proposed framework specify problem solutions  outcomes  preferences among them  latter
proposal combines ideas answer set programming  answer set optimization cpnets  boutilier  brafman  domshlak  hoos    poole         semantics
proposed paper different proposed brewka        brewka
et al          cases returns different results  see examples      

   approaches
besides approaches managing preferences among atoms  works proposed
literature specify preferences among rules 
early proposals expressing preferences rules focus default logic  brewka   eiter 
      delgrande et al       b  rintanen         whereas recently emphasis
given logic programs  regard  different proposals developed
representing reasoning user preferences ordered logic programs  delgrande et al       a  van nieuwenborgh   vermeir              preferred answer sets
extended logic programs  brewka   eiter         approaches propose
extension gelfond lifschitzs extended logic programming adding preference information  delgrande et al         wang et al         zhang   foo         proposals
attempt extend well founded semantics logic programs preferences  brewka 
      schauba   wang         extension van gelders alternating fixpoint theory
logic programs priorities proposed wang et al         
gelfond son        proposed methodology reasoning prioritized
default language logic programming answer set semantics  approach
enables specification preferences among rules allows definition set
default rules must satisfied well second set default rules could
ignored 
ordered logic programs introduced delgrande et al       a  extended
logic programs whose rules subject strict partial order static dynamic
preferences  approach fully prescriptive enforces ordering information
construction answer set  original program transformed second
extended logic program preferences taken account sense
answer sets obtained evaluating transformed theory correspond preferred
answer sets original theory 
another methodology logic programs containing preferences set rules
translated logic programs stable model semantics proposed
delgrande et al         
   

fion semantics logic programs preferences

   conclusions
paper case preferences involving atoms logic programming studied 
particular  behavior technique proposed sakama inoue       
brewka et al         analyzed semantics  interpreting preference rule
tool representing choice alternative options  proposed  specifically 
proposed approach extends psm semantics considering refinement natural
order among preferences introduces concept comparable models  preferences
logic programs examined together order determine choice order sets
models compared 
new semantics compared psm aso semantics  complexity analysis performed showing use additional information 
regarding preference order sets non comparable models  increase
complexity computing preferred stable models  although semantics presented
complexity approaches proposed literature  advantage lies
fact seems better capture intuitive meaning prioritized programs
considering structural information preference rules 
prioritized reasoning logic programming pas semantics easily
implemented top deductive systems based stable model semantics
deres  dlv  smodels  cholewinski  marek    truszczynski        leone  pfeifer  faber 
calimeri    dellarmi        syrjanen   niemela         architecture system
prototype implementing prioritized reasoning  with different semantics  top
dlv system presented caroprese  trubitsyna  zumpano        

acknowledgments
preliminary version papers presented greco  trubitsyna  zumpano
        authors would thank anonymous referees useful suggestions
filippo furfaro comments 

references
boutilier  c   brafman  r   domshlak  c   hoos  h   poole  d          cp nets  tool
representing reasoning conditional ceteris paribus preference statements 
journal artificial intelligence research              
brewka  g          well founded semantics extended logic programs dynamic
preferences  journal artificial intelligence research           
brewka  g   eiter  t          preferred answer sets extended logic programs  artificial
intelligence                    
brewka  g   eiter  t          prioritizing default logic  intellectics computational
logic  kluwer        
brewka  g          logic programming ordered disjunction  proceedings   th national
conference artificial intelligence  aaai iaai           
   

figreco  trubitsyna    zumpano

brewka  g   niemela  i   truszczynski  m          answer set optimization  proceedings
  th international joint conference artificial intelligence  ijcai           
brewka  g          complex preferences answer set optimization  proceedings  th
international conference principles knowledge representation reasoning
 kr           
brewka  g   niemela  i   truszczynski  m          prioritized component systems  proceedings   th national conference artificial intelligence  aaai           
caroprese  l   trubitsyna  i   zumpano  e          implementing prioritized reasoning
logic programming  proceedings international conference enterprice information
systems  iceis          
cholewinski  p   marek  v  w   truszczynski  m          default reasoning system deres 
proceedings  th international conference principles knowledge representation
reasoning  kr           
delgrande  j   p   schaub  t   tompits  h          logic programs compiled preferences  proceedings   th european conference artificial intelligence  ecai           
delgrande  j   p   schaub  t   tompits  h          compilation brewka eiters
approach prioritization  proceedings european workshop logics artificial
intelligence  jelia           
delgrande  j   p   schaub  t   tompits  h          framework compiling preferences
logic programs  theory practice logic programming                
eiter  t   gottlob  g   leone  n          abduction logic programs  semantics
complexity  theoretical computer science                  
eiter  t   gottlob  g   mannila  h          disjunctive datalog  acm transaction
database systems                      
gelfond  m   lifschitz  v          stable model semantics logic programming 
proceedings international conference logic programming  iclp            
gelfond  m   lifschitz  v          classical negation logic programs disjunctive
databases  new generation computing            
gelfond  m   son  t c          reasoning prioritized defaults  proc   rd international
workshop logic programming knowledge representation  lpkr           
greco  s   trubitsyna  i   zumpano  e          semantics logic programs
preferences  proceedings   th european conference logics artificial intelligence
 jelia           
grell  s   konczak  k   schaub  t          nomore   system computing preferred
answer sets  proceedings  th international  conference logic programming
nonmonotonic reasoning  lpnmr           
janhunen  t   niemela  i   simons  p   you  j  h          unfolding partiality disjunctions stable model semantics  proceedings  th international conference principles knowledge representation reasoning  kr           
   

fion semantics logic programs preferences

inoue  k   sakama  s          negation failure head  journal logic programming               
kakas  a  c   kowalski  r  a   toni  f          abductive logic programming  journal
logic anc computation                
leone  n   pfeifer  g   faber  w   calimeri  f   dellarmi  t   eiter  t   gottlob  g   ianni 
g   ielpa  g   koch  k   perri  s   polleres  a          dlv system  proceedings
 th european conference logics artificial intelligence  jelia                 
minker  j          indefinite data bases closed world assumption  proc    th
conf  automated deduction                
papadimitriou  c  h          computational complexity  addison wesley 
rintanen j          complexity prioritized default logics  journal artificial intelligence research             
sakama  c   inoue  k          priorized logic programming application commonsense reasoning  artificial intelligence               
schaub  t   wang   k          comparative study logic programs preference 
proceedings   th international joint conference artificial intelligence  ijcai  
        
syrjanen  t   niemela  i          smodels system  proceedings international conference logic programming nonmonotonic reasoning  lpnmr           
van nieuwenborgh  d   vermeir  d          preferred answer sets ordered logic
programs  proceedings   th european conference logics artificial intelligence
 jelia           
van nieuwenborgh  d   vermeir  d          ordered diagnosis  proceedings   th international conference logic programming  artificial intelligence  reasoning
 lpar           
van nieuwenborgh  d   heymans  s   vermeir  d          programs linearly ordered multiple preferences  proceedings international conference logic programming  iclp           
wakaki  t   inoue  k   sakama  c   nitta  k          computing preferred answer sets
answer set programming  proceedings   th international conference logic
programming  artificial intelligence  reasoning  lpar           
wakaki  t   inoue  k   sakama  c   nitta  k          plp system  proceedings  th
european conference logics artificial intelligence  jelia           
wang  k   zhou  l   lin  f          alternating fixpoint theory logic programs
priority  proceedings first international conference computational logic          
zhang  y   foo  n          answer sets prioritized logic programs  proceedings international logic programming symposium  ilps         

   


