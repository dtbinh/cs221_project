journal artificial intelligence research               

submitted        published     

learning semantic definitions online information sources
mark james carman
craig a  knoblock

mark bradipo net
knoblock isi edu

university southern california
information sciences institute
     admiralty way
marina del rey  ca      

abstract
internet contains large number information sources providing many types
data weather forecasts travel deals financial information  sources
accessed via web forms  web services  rss feeds on  order make automated
use sources  need model semantically  writing semantic descriptions
web services tedious error prone  paper investigate problem
automatically generating models  introduce framework learning datalog
definitions web sources  order learn definitions  system actively invokes
sources compares data produce known sources information 
performs inductive logic search space plausible source definitions
order learn best possible semantic model new source  paper
perform empirical evaluation system using real world web sources  evaluation
demonstrates effectiveness approach  showing automatically learn
complex models real sources reasonable time  compare system
complex schema matching system  showing approach handle kinds
problems tackled latter 

   introduction
recent years seen explosion quantity variety information available
online  one find shopping data  prices availability goods   geospatial data
 weather forecasts  housing information   travel data  flight pricing status   financial
data  exchange rates stock quotes   scratches surface
available  aim work make use vast store information 
amount information increased  reuse across web portals
applications  developers realised importance managing content separately
presentation  leading development xml self describing data format 
content xml far easier manipulate html  simplifying integration across
different sources  standards emerged providing programmatic access data
 like soap rest  developers easily build programs  called mash ups 
combine content different sites real time  many portals provide access
data even provide syntactic definitions  in wsdl  input output
data sources expect  missing  however  semantic descriptions source
does  required order support automated data integration 
c
    
ai access foundation  rights reserved 

ficarman   knoblock

    structured querying
given structured sources available  would combine data dynamically
answer specific user requests  as opposed statically case mash ups   dynamic
data requests expressed queries shown below  queries may
require access multiple  publicly available  data sources combine information ways
envisaged producers 
   tourism  get prices availability three star hotels within     kilometers
trento  italy lie within   kilometer ski resort   meter snow 
   transportation  determine time need leave work order catch bus
airport pick brother arriving qantas flight     
   disaster prevention  find phone numbers people living within   mile
coast     feet elevation 
clear even small set examples powerful ability combine
data disparate sources be  order give queries automated system 
must first express formally query language sql datalog  ullman 
       datalog first query might look follows 
q hotel  price   accommodation hotel      address   available hotel  today  price  
distance address  htrento italyi  dist    dist       km 
skiresort resort  loc    distance address  loc   dist   
dist     km  snowcondiditions resort  today  height   height    m 
expression states hotel price pairs generated looking three star hotels
relational table called accommodation  checking price tomorrow night
table called available  address hotel used calculate distance trento 
must less     kilometers  query checks skiresort
within   kilometer hotel  snowconditions today show  
meter snow 
    mediators
system capable generating plan answer query called information
mediator  wiederhold         order generate plan  mediators look sources
relevant query  case  relevant sources might be 
   italian tourism website  find hotels near trento  italy 
   ski search engine  find ski resorts near hotel 
   weather provider  find much snow fallen ski resort 
mediator know sources relevant  needs know information
source provides  xml defines syntax  formatting  used source  semantics
 intended meaning  information source provides must defined separately 
done using local as view  lav  source definitions datalog  levy        
essentially  source definitions describe queries given mediator  return
data source provides  example definitions shown below  first states
 

filearning semantic definitions information sources internet

source hotelsearch takes four values input  inputs prefixed   symbol  
returns list hotels lie within given distance input location 
hotel returns address well price room given date 
 note source provides information hotels italy  
hotelsearch  location   distance   rating   date  hotel  address  price   country location  italy   accommodation hotel  rating  address  
available hotel  date  price   distance address  location  dist   
dist    distance 
findskiresorts  address   distance  resort  location   skiresort resort  location   distance address  location  dist   
dist    distance 
getskiconditions  resort   date  height   snowcondiditions resort  date  height  
order generate plan answering query  mediator performs process called
query reformulation  levy         whereby transforms query new query
 in terms of  relevant information sources    a source relevant refers
relations query   resulting plan case shown below 
q hotel  price   hotelsearch htrento italyi     km      today  hotel  address  price  
findskiresorts address   km  resort  location  
getskiconditions resort  today  height   height    m 
work  questions interest are  definitions information
sources come precisely  happens want add new sources
system  possible generate source definitions automatically 
    discovering new sources
example above  mediator knows set relevant sources use successfully
answer query  instead  one sources missing doesnt desired
scope  e g  getskiconditions doesnt provide data trento   mediator first needs
discover source providing information  number variety information
sources increase  undoubtedly rely automated methods discovering
annotating semantic descriptions  order discover relevant sources  system
might inspect service registry   such defined uddi   perform keywordbased search web index  such google del icio us   research community
looked problem discovering relevant services  developing techniques classifying
services different domains  such weather flights  using service metadata  he  
kushmerick        clustering similar services together improve keyword based search
 dong  halevy  madhavan  nemes    zhang         techniques  although useful 
sufficient automating service integration 
   complexity query reformulation known exponential  although efficient algorithms
performing exist  pottinger   halevy        
   note technically  service different source  service interface providing access
multiple operations  may provide information  operation affect state
world  e g  charging somebodys credit card   call information source 
paper  however  use term service refer information sources 

 

ficarman   knoblock

    labeling service inputs outputs
relevant service discovered  problem shifts modeling semantically  modeling sources hand laborious  automating process makes sense  since different
services often provide similar overlapping data  possible use knowledge
previously modeled services learn descriptions new ones 
first step modeling source determine type data requires
input produces output  done assigning semantic types  like zipcode 
telephone number  temperature  on  attributes service  semantic types
restrict possible values attribute subset corresponding primitive type 
research community investigated automating assignment process viewing
classification problem  he   kushmerick         system  kushmerick
trained support vector machine  svm  metadata describing different sources 
system  given source following 
getweather  zip  temp 
uses labels getweather  zip temp  and available metadata  assign
types input output attributes  e g   zip zipcode  temp temperature  note
additional metadata often useful distinguishing possible assignments   if 
example  name operation listemployees  temp may referred
temporary employee rather temperature  
subsequent work  researchers developed comprehensive system used
metadata output data classify service attributes  lerman  plangprasopchok   
knoblock         system  logistic regression based classifier first assigns semantic types input parameters  examples input types used invoke
service  output given pattern language based classifier  assigns types
output parameters  authors argue classification based data
metadata far accurate based metadata alone  using example 
easy see why  consider following tuples produced getweather source 
h          ci  h          ci  h          ci     
given data  classifier certain temp really refers temperature 
indeed even assign specific type  temperaturec  in celsius  
problem determining semantic types services attributes
interesting  room improvement current techniques  assume
purposes work already solved 
    generating definition
know parameter types  invoke service  still unable
make use data returns  that  need know output attributes
relate input  i e  definition source   example  getweather service
need know whether temperature returned current temperature 
predicted high temperature tomorrow average temperature time year 
relationships described following definitions 
getweather  zip  temp     currenttemp zip  temp  
getweather  zip  temp     forecast zip  tomorrow  temp  
getweather  zip  temp     averagetemp zip  today  temp  
 

filearning semantic definitions information sources internet

relations used definitions would defined domain ontology  or schema  
paper describe system capable learning definitions
correct  system leverages knows domain  i e  domain
ontology set known information sources  learn know  namely
relationship attributes newly discovered source 
    outline
paper presents comprehensive treatment methods learning semantic descriptions web information sources  extends previous work subject  carman  
knoblock        presenting detailed descriptions methods enumerating
search space evaluating individual candidate definitions  provide additional
details regarding evaluation methodology results generated 
paper structured follows  start example motivate source
induction problem formulate problem concisely  discuss approach
learning definitions sources terms known sources information  section
    give details search procedure generating candidate definitions  section   
evaluation procedure scoring candidates search  section    
describe extensions basic algorithm  section    discussing evaluation setup
experiments  section     demonstrate capabilities system  finally 
contrast approach prior work 

   problem
describe detail problem learning definitions newly discovered services 
start concrete example meant learning source definition 
example four types data  semantic types   namely  zipcodes  distances  latitudes
longitudes  three known sources information  sources
definition datalog shown below  first service  aptly named source   takes
zipcode returns latitude longitude coordinates centroid  second
service calculates great circle distance  the shortest distance earths surface 
two pairs coordinates  third converts distance kilometres
miles multiplying input constant       
source   zip  lat  long     centroid zip  lat  long  
source   lat    long    lat    long   dist   greatcircledist lat   long   lat   long   dist  
source   dist   dist      multiply dist          dist   
goal example learn definition newly discovered service  called source  
service takes two zipcodes input returns distance value output 
source   zip    zip   dist 
system describe uses type signature  input output type information 
search appropriate definition source  definition discovered case
might following conjunction calls individual sources 
source   zip    zip   dist  source   zip   lat   long    source   zip   lat   long   
source   lat    long    lat    long   dist    source   dist   dist  
 

ficarman   knoblock

definition states sources output distance calculated input zipcodes 
giving zipcodes source   taking resulting coordinates calculating
distance using source   converting distance miles using
source   test whether definition correct  system must invoke new
source definition see values generated agree other  following
table shows test 
 zip 
     
     
     

 zip 
     
     
     

dist  actual 
      
      
      

dist  predicted 
      
      
      

table  input zipcodes selected randomly set examples 
output source definition shown side side  since output
values quite similar  system seen sufficient number examples 
confident found correct semantic definition source 
definition given terms source relations  could
written terms domain relations  the relations used define sources      
convert definition form  one simply needs replace source relation
definition follows 
source   zip    zip   dist  centroid zip   lat   long    centroid zip   lat   long   
greatcircledist lat   long   lat   long   dist    multiply dist          dist   
written way  new semantic definition makes sense intuitive level  source
simply calculating distance miles centroids two zipcodes 
    problem formulation
given example source definition induction problem  describe
problem formally  so  introduce concepts notation   we
note focus paper learning definitions information providing 
opposed world altering services  
domain semantic data type t  denoted d t    possibly infinite  set
constant values  c    c          constitute set values variables
type  example d zipcode                       
attribute pair hlabel  semantic data typei  e g  hzip   zipcodei  type
attribute denoted type a  corresponding domain d type a   abbreviated
d a  
scheme ordered  finite  set attributes ha         unique labels 
n referred arity scheme  example scheme might hzip   
zipcode  zip    zipcode  dist   distancei  domain scheme a  denoted
d a   cartesian product domains attributes scheme  d a   
    d an     ai a 
tuple scheme element set d a   tuple represented
set name value pairs   zip           zip           dist        
 

filearning semantic definitions information sources internet

relation named scheme  airdistance zip   zip   dist   multiple relations may share scheme 
extension relation r  denoted e r   subset tuples d r   example  e airdistance  might table containing distance zipcodes
california   note extension relation may contain distinct tuples  
database instance set relations r  denoted i r   set extensions
 e r          e rn     one relation r r 
query language l formal language constructing queries set relations 
denote set queries written using language l set
relations r returning tuples conforming scheme lr a  
result set produced execution query q lr a database instance
i r  denoted ei  q  
source relation s  binding pattern s  distinguishes input
attributes output attributes   the output attributes source denoted
complement binding pattern    sc s s   
view definition source query vs written query language lr s  
source definition induction problem defined tuple 
ht  r  l  s  v 
set semantic data types  r set relations  l query language 
set known sources  v set view definitions  one known source  
new source  also referred target  
semantic type must provided set examples values et d t  
 we require entire set d t   domain many types may partially
unknown large enumerated   addition  predicate eqt  t  t  available
checking equality values semantic type handle case multiple
serialisations variable represent value 
relation r r referred global relation domain predicate
extension virtual  meaning extension generated inspecting every
relevant data source  set relations r may include interpreted predicates 
  whose extension defined virtual 
language l used constructing queries could query language including
sql xquery  the xml query language   paper use form datalog 
source extension e s  complete set tuples
produced source  at given moment time   require corresponding view
definition vs v  written lr s   consistent source  that  e s  ei  vs   
 where i r  current virtual database instance global relations   note
require equivalence  sources may provide incomplete data 
view definition source modeled unknown  solution
source definition induction problem view definition v lr s source
e s   ei  v    view definition v   lr s better describes
 provides tighter definition for  source   i e  
v   lr s s t  e s   ei  v      ei  v         ei  v   
     symbol denotes set difference 

 

ficarman   knoblock

given limited available computation bandwidth  note may possible
guarantee optimality condition holds particular solution  thus paper
simply strive find best solution possible 
    implicit assumptions
number assumptions implicit problem formulation  first
exists system capable discovering new sources importantly classifying  to
good accuracy  semantic types input output  systems capable
discussed section     
second assumption representation source relational
view definition  sources internet provide tree structured xml data  may
always obvious best flatten data set relational tuples 
preserving intended meaning data  consider travel booking site returns
set flight options ticket number  price list flight segments
constitute itinerary  one possibility converting data set tuples would
break ticket individual flight segment tuples  thereby obscuring
relationship price number flight segments   another would create
one long tuple ticket room number flight segments  thereby
creating tuples many null values   case  obvious which  either 
options preferred  online data sources can  however  modeled quite
naturally relational sources  first tackling relational problem  develop
techniques later applied difficult semi structured case 
third assumption set domain relations suffices describing source
modeled  instance  consider case domain model contains relations
describing financial data  new source provides weather forecasts  obviously 
system would unable find adequate description behavior source
would learn model it  practical perspective  limitation big
problem  since user request data  write queries mediator  using relations
domain model anyway   thus source cannot described using
relations would needed answer user requests   words  onus
domain modeler model sufficient relations able describe types
queries user able pose system consequently  types sources
available  said  interesting avenue future research would
investigate problem automating  at least part  process expanding scope
domain model  by adding attributes relations  inventing new ones   based
types sources discovered 
    problem discussion
number questions arise problem formulation  first domain
model comes from  principle  set semantic types relations could come
many places  could taken standard data models different domains 
might simplest model possible aptly describes set known sources 
domain model may evolve time sources discovered appropriate
model found  somewhat related question specific semantic types
 

filearning semantic definitions information sources internet

ought be  example  sufficient one semantic type distance
one distinguish distance meters distance feet  generally speaking 
semantic type created attribute syntactically dissimilar
attributes  example  phone number zipcode different syntax 
thus operations accept one types input unlikely accept other 
practice  one might create new semantic type whenever trained classifier recognise
type based syntax alone  general  semantic types are 
harder job system classifying attributes  easier job system
tasked learning definition source 
another question considered definitions known sources come
from  initially definitions would need written hand  system learns
definitions new sources  would added set known sources  making
possible learn ever complicated definitions 
order system learn definition new source  must able invoke
source thus needs examples input types  representative set
examples available  efficient accurate learning process be  initial
set examples need provided domain modeler  then  system learns
time  generate large number examples different semantic types  as output
various sources   retained future use 
information integration research reached point mediator technology 
becoming mature practical  need involve human writing source
definitions is  however  achilles heel systems  gains flexibility come
ability dynamically reformulate user queries often partially offset
time skill required write definitions incorporating new sources  thus system
capable learning definitions automatically could greatly enhance viability mediator
technology  motivation alone seems sufficient pursuing problem 

   approach
approach take learning semantic models information sources web
twofold  firstly  choose model sources using powerful language conjunctive
queries  secondly  leverage set known sources order learn definition
new one  section discuss aspects detail 
    modeling language
source definition language l hypothesis language new definitions
need learnt  often case machine learning  faced trade off
respect expressiveness language  hypothesis language simple 
may able model real services using it  hand  language
overly complex  space possible hypotheses large learning
feasible  language choose conjunctive queries datalog 
   influential information integration systems include tsimmis  garcia molina  hammer  ireland  papakonstantinou  ullman    widom         sims  arens  knoblock    shen         infomaster  duschka 
       ariadne  knoblock  minton  ambite  ashish  muslea  philpot    tejada        

 

ficarman   knoblock

highly expressive relational query language  section argue less expressive
language sufficient purposes 
researchers interested problem assigning semantics web services  he  
kushmerick        investigated problem using machine learning techniques
classify services  based metadata characteristics  different semantic domains 
weather flights  operations provide different classes operation 
weatherforecast flightstatus  relational perspective  consider
different classes operations relations  instance  consider definition below 
source  zip  temp     weatherforecast zip  tomorrow  temp  
source provides weather data selecting tuples relation called weatherforecast 
desired zipcode date equal tomorrow  query referred
select project query evaluation performed using relational operators
selection projection  far good  able use simple classifier learn
simple definition source  limitation imposed restricted  select project 
modeling language becomes obvious  however  consider slightly complicated
sources  consider source provides temperature fahrenheit well celsius 
order model source using select project query  would require
weatherforecast relation extended new attribute follows 
source  zip  tempc  tempf    weatherforecast zip  tomorrow  tempc  tempf  
attributes could conceivably returned weather forecast operation
 such dewpoint  humidity  temperature kelvin  latitude  etc    longer relation
need cover all  better  case  would introduce second
relation convertctof makes explicit relationship temperature values 
if  addition  source limits output zipcodes california  reasonable definition
source might be 
source  zip  tempc  tempf  weatherforecast zip  tomorrow  tempc   convertctof tempc  tempf  
state zip  california  
definition longer expressed language select project queries 
involves multiple relations joins across them  thus simple example  see
modeling services using simple select project queries sufficient purposes 
need select project join queries  referred conjunctive queries   reader
already introduced examples conjunctive queries throughout previous
sections  conjunctive queries form subset logical query language datalog
described formally follows 
conjunctive query set relations r expression form 
q x       r   x     r   x          rl  xl   
ri r relation xi ordered set variable names size
arity ri     conjunct ri  xi   referred literal  set variables

query  denoted vars q    li   xi   consists distinguished variables
x   from head query   existential variables vars q  x     which
   evaluating select project join query requires additional relational operators  natural join rename 
   note conjunctive query expressed first order logicsas follows 
l
x  s t  r   x    r   x        rl  xl   q x    x    i   xi

  

filearning semantic definitions information sources internet

appear body   conjunctive query said safe

distinguished variables appear body  i e  x  li   xi  
    expressive languages
modeling sources using conjunctive queries implies aggregate operators min
order cannot used source definitions  functionality sources
described without operators  sources described poorly  however 
consider hotel search service returns    closest hotels given location 
hotelsearch  loc  hotel  dist   accommodation hotel  loc    distance loc  loc   dist  
according definition  source return hotels regardless distance  one
cannot express fact closest hotels returned  reason
including aggregate operators hypothesis language search space associated
learning definitions prohibitively large   thus leave aggregate operators future
work discussed section      
similarly  source definitions cannot contain disjunction  rules union recursive queries  again  simplifying assumption holds information sources
greatly reduces search space  means however  weather service providing
forecasts cities us canada would modeled as 
s  city  temp     forecast city  country  tomorrow  temp  
since definition restrict domain country attribute  confronted
request forecast australia  mediator would proceed call service 
oblivious restriction attribute 
allow negation queries source definitions rarely
require it  including would needlessly complicate search  rare cases
negation particular predicate useful describing certain types sources 
negated predicate included  as distinct predicate  search  instance 
might use describe source  even though strictly speaking negation   
    leveraging known sources
approach problem discovering semantic definitions new services
leverage set known sources learning new definition  broadly speaking 
invoking known sources  in methodical manner  see combination
information provide matches information provided new source 
practical perspective  means order model newly discovered source semantically 
require overlap data produced new source set known
sources  one way understand consider new source producing weather data 
none known sources produce weather information  way
system learn whether new source producing historical weather data  weather
forecasts   even describing weather all   in principle  one could try guess
service based type signature alone  would guarantee
definition correct  making little use mediator   given overlapping
data requirement  one might claim little benefit incorporating new sources 
detail reasons case below 
  

ficarman   knoblock

obvious benefit learning definitions new sources redundancy 
system able learn one source provides exactly information currently
available source  latter suddenly becomes unavailable  former used
place  example  mediator knows one weather source providing current
conditions learns second source provides similar data 
first goes whatever reason  perhaps access quota reached  
weather data still accessed second 
second perhaps interesting reason wanting learn definition
new source new source may provide data lies outside scope  or
simply present in  data provided sources  example  consider
weather service provides temperature values zipcodes united states 
consider second source provides weather forecasts cities worldwide  system
use first source learn definition second  amount information
available querying increases greatly 
binding constraints service make accessing certain types information difficult
inefficient  case  discovering new source providing similar data
different binding pattern may improve performance  example  consider hotel
search service accepts zipcode returns set hotels along star rating 
hotelsearch  zip  hotel  rating  street  city  state  accommodation hotel  rating  street  city  state  zip  
consider simple query names addresses five star hotels california 
q hotel  street  city  zip    accommodation hotel      street  city  california  zip  
answering query would require thousands calls known source  one every
zipcode california  mediator could answer query another
source providing zipcodes  contrast  system learnt definition new
source provides exactly data different binding pattern  such
one below   answering query would require one call source 
hotelsbystate  state   rating  hotel  street  city  zip  accommodation hotel  rating  street  city  state  zip  
often functionality complex source described terms composition
functionality provided simpler services  instance  consider motivating
example section    functionality provided new source calculate distance miles two zipcodes  functionality could achieved
performing four different calls available sources  case  definition learnt
system meant query regarding distance zipcodes could handled efficiently  general  learning definitions complicated sources
terms simpler ones  system benefit computation  optimisation caching
abilities services providing complex functionality 
finally  newly discovered service may faster access known sources
providing similar data  instance  consider geocoding service takes address
returns latitude longitude coordinates location  variety
algorithms used calculate coordinates  unreasonable geocoding
services take long time  upwards one second  return result  system
able discover new source providing geocoding functionality  using
  

filearning semantic definitions information sources internet

faster algorithm  could locate display many addresses map
amount time 

   inducing definitions
section describe algorithm generating candidate definitions newly
discovered source  algorithm forms first phase generate test methodology
learning source definitions  defer discussion testing phase later paper 
start briefly discussing work relational rule learning describe
algorithm builds upon ideas 
    inductive logic programming
language conjunctive queries restricted form first order logic  machine
learning community  systems capable learning models using first order representations
referred inductive logic programming  ilp  systems relational rule learners 
expressiveness modeling language  complexity learning much
higher propositional rule learners  also called attribute value learners   form
bulk machine learning algorithms  given relational modeling services  many
techniques developed ilp apply problem 
first order inductive learner  foil  well known ilp search algorithm  cameronjones   quinlan         capable learning first order rules describe target predicate  represented set positive examples  tuples target relation 
denoted e     optionally set negative examples  e    search viable
definition foil starts empty clause  progressively adds literals body
 antecedent  rule  thereby making rule specific  process continues
definition  denoted h  covers positive examples negative examples 
e   ei  h    

e ei  h   

usually set rules learnt manner removing positive examples covered
first rule repeating process   the set rules interpreted union
query   search foil performed greedy best first manner  guided information
gain based heuristic  many extensions basic algorithm exist  notably
combine declarative background knowledge search process focl  pazzani  
kibler         systems categorised performing top search
start empty clause  the general rule possible  progressively specialize
clause  bottom approaches  hand  golem  muggleton   feng 
       perform specific general search starting positive examples target 
    search
describe actual search procedure use generate candidate definitions
new source  procedure based top down search strategy used foil 
algorithm takes input type signature new source uses seed search
   use terms clause query interchangeably refer conjunctive query datalog  empty
clause query without literals body  right side  clause 

  

ficarman   knoblock

input   predicate signature
output  best scoring view definition vbest
invoke target set random inputs 
vbest empty clause  
  add vbest empty queue 
  queue    time     timeout i     limit
 
v  best definition queue 
 
forall v  expand v   
 
insert v  queue 
 
eval v       
 
forall v  constrain v   
  
insert v  queue 
  
eval v    eval v    v  v   
  
end
  
end
  
eval v    eval vbest   vbest v   
  
end
   end
   return vbest  
algorithm    best first search space candidate source definitions 
 

 

candidate definitions   we refer new source relation target predicate
set known source relations source predicates   space candidate definitions
enumerated best first manner  candidate tested see data returns
similar target  pseudo code describing procedure given algorithm    
first step algorithm invoke new source representative set
input tuples generate examples output tuples characterise functionality
source  set invocations must include positive examples  invocations output
tuples produced  possible  negative tuples  inputs output
returned   algorithms ability induce correct definition source depends
greatly number positive examples available  thus minimum number positive
invocations source imposed  meaning algorithm may invoke
source repeatedly using different inputs sufficient positive invocations recorded 
selecting appropriate input values successfully invoke service easier said
done  defer discussion issues difficulties involved successfully invoking
new source section      assume moment induction system able
generate table values represent functionality 
next step algorithm initialise search adding empty clause
queue definitions expand  rest algorithm simply best first search
procedure  iteration highest scoring yet expanded definition  denoted
v    removed queue expanded adding new predicate end
   implementation algorithm used experiments section     available at 
http   www isi edu publications licensed sw eidos index html

  

filearning semantic definitions information sources internet

clause  see next section example   candidate generated  denoted v   
added queue  algorithm progressively constrains candidate binding
variables newly added predicate   see section       eval function  see section
     evaluates quality candidate produced  procedure stops constraining
candidate change evaluation function  eval  drops zero 
compares v  previous best candidate vbest updates latter accordingly 
principle algorithm terminate perfect candidate definition
discovered   one produces exactly data target  practice never
occurs sources incomplete  dont perfectly overlap other 
noisy  instead algorithm terminates either queue becomes empty  time limit
reached maximum number iterations performed 
    example
run example process generating candidate definitions  consider
newly discovered source  takes zipcode distance  returns
zipcodes lie within given radius  along respective distances   target
predicate representing source is 
source   zip    dist   zip   dist  
assume two known sources  first source definition
learnt example section    namely 
source   zip    zip   dist  centroid zip   lat   long    centroid zip   lat   long   
greatcircledist lat   long   lat   long   dist    multiply dist          dist   
second source isnt actually source interpreted predicate 
 dist   dist   
search definition new source might proceed follows  first
definition generated empty clause 
source              
null character     represents fact none inputs outputs
restrictions placed values  prior adding first literal  source predicate  
system check whether output attributes echo input values  case  given
semantic types  two possibilities need checked 
source   zip       zip     
source       dist     dist   
assuming neither possibilities true  i e  improves score   literals
added one time refine definition  literal source predicate
assignment variable names attributes  new definition must created every
possible literal includes least one variable already present clause   for
moment ignore issue binding constraints sources added   thus many
candidate definitions would generated  including following 
source   zip    dist          source   zip       dist   
source   zip       zip    
   source   zip    zip     
source       dist     dist       dist   dist   
  

ficarman   knoblock

note semantic types type signature target predicate limit greatly
number candidate definitions produced  system evaluates
candidates turn  selecting best one expansion  assuming first
three best score  would expanded adding another literal  forming
complicated candidates following 
source   zip    dist     dist      source   zip       dist     dist   dist   
process continues system discovers definition perfectly describes
source  forced backtrack literal improves score 
    iterative expansion
sources used previous example relatively low arity  internet
rarely case  many sources producing large number attributes type 
problem causes exponential number definitions possible
expansion step  consider instance stock price service  provides current 
high  low  market opening market closing prices given ticker symbol  type
signature service would be 
stockprice  ticker  price  price  price  price  price 
definition predicate added already contains k distinct price
variables  number ways price attributes new relation
p
assigned variable names  i    i k   prohibitively large even moderate k  
limit search space case high arity predicates  first generate candidates
minimal number bound variables new literal progressively constrain
best performing definitions within expansion   high arity predicates
handled similar fashion foil  quinlan cameron jones         example 
consider using source learn definition new source signature 
source   ticker  price  price 
start adding literals empty definition before  time though  instead
generating literal every possible assignment variable names attributes
relation  generate simplest assignments binding constraints
met   this expand procedure referred algorithm     example 
ticker symbol input stockprice source would need bound  generating single
definition 
source   tic         stockprice  tic            
definition would evaluated  constrained definitions generated
equating variable literal variables clause   this
constrain procedure algorithm     two definitions shown below 
source   tic  pri        stockprice  tic  pri           
source   tic  pri        stockprice  tic    pri         
best definitions would selected constrained further  generating
definitions as 

   intuitively  one assign variable
names attributes using k labels k different ways  one
choose   attributes  i ways  one                see weber  tausend 
stahl        detailed discussion size hypothesis space ilp 

  

filearning semantic definitions information sources internet

source   tic  pri   pri      stockprice  tic    pri   pri       
source   tic  pri   pri      stockprice  tic    pri     pri     
way  best scoring literal found without need iterate
possible assignments variables attributes 
    domain predicates vs  source predicates
examples sections          decision perform search source
predicates rather domain predicates made arbitrary fashion   
section justify decision  one perform search domain predicates
rather source predicates  testing definition would require additional
query reformulation step  example  consider following candidate definition
source  containing domain predicate centroid 
source   zip              centroid zip       
order evaluate candidate  system would need first treat definition
query reformulate set rewritings  that together form union query 
various sources follows 
source   zip              source   zip         
source   zip              source       zip     
union query executed available sources  in case
source   see tuples candidate definition returns  practice however 
definitions known sources contain multiple literals  as normally do 
domain relations high arity  as often are   search space
conjunctions domain predicates often much larger corresponding search
space conjunctions source predicates  multiple conjunctions
domain predicates  candidate definitions  end reformulating conjunction
source predicates  union queries   example  consider following candidate definitions
written terms domain predicates 
source   zip              centroid zip   lat     greatcircledist lat          
source   zip              centroid zip     lon   greatcircledist    lon        
source   zip              centroid zip   lat  lon   greatcircledist lat  lon        
three candidates would reformulate query sources  shown below  
thus indistinguishable given sources available 
source   zip              source   zip         
general  number candidate definitions map reformulation
exponential number hidden variables present definitions known sources 
reason  simplify problem search space conjunctions source
predicates  sense  performing search source predicates seen
introducing similarity heuristic focuses search toward definitions similar
structure definitions available sources  note definitions produced
 and will  later converted queries global predicates unfolding
    note difference domain  source interpreted predicates  domain predicates
invented domain expert use modeling particular information domain  define common
schema used describing information different sources  source predicates represent
sources available system  interpreted predicates   such    special type domain
predicate  treated source predicates  since meaning interpreted  understood  

  

ficarman   knoblock

possibly tightening remove redundancies  discuss process tightening
unfoldings section     
    limiting search
search space generated top down search algorithm may large even
small number sources  use semantic types limits greatly ways
variables within definition equated  aka join paths  thus goes long
way reduce size search space  despite reduction  number sources
available increases  search space becomes large techniques limiting must
used  employ standard  and standard  ilp techniques limiting
space  limitations often referred inductive search bias language bias
 nedellec  rouveirol  ade  bergadano    tausend        
obvious way limit search restrict number source predicates
occur definition  whenever definition reaches maximum length  backtracking
performed  allowing search escape local minima may result
greedy enumeration  assumption shorter definitions probable
longer ones  makes sense since service providers likely provide data
simplest form possible  moreover  simpler definition learnt  useful
mediator  decide trade completeness  the ability express longer
definitions  improved accuracy shorter definitions 
second restriction placed candidate definitions limit number times
source predicate appears given candidate  makes sense
definitions real services tend contain many repeated predicates  intuitively 
services provide raw data without performing many calculations upon it 
repeated use predicate definition useful describing form
calculation raw data itself   exceptions rule exist  example predicates
representing unit conversion functionality fahrenheit celsius  may necessarily
occur multiple times definition source  
third restriction limits complexity definitions generated reducing
number literals contain variables head clause  specifically 
limits level existential quantification  sometimes referred depth 
muggleton feng        variable clause  level defined zero
distinguished variables  those appearing head clause   existential
variables defined recursively one plus lowest level variable appearing
literal  example  candidate definition shown maximum existential
quantification level three shortest path last literal head literal
 via join variables  passes two literals 
source   zip              source   zip       d    source   d   d    source   d     
effect bias concentrate search around simpler highly connected
definitions  literal closely linked input output source 
fourth restriction placed source definitions executable 
specifically  possible execute left right  meaning inputs
source appear either target predicate  head clause  one
literals left literal  example  two candidate definitions shown below 
  

filearning semantic definitions information sources internet

first executable  second definition not  zip  used input
source  first literal  without first bound value head clause 
source   zip       zip        source   zip    zip     
source   zip              source   zip    zip   dist    source   zip    zip   dist   
restriction serves two purposes  firstly  biases  limits size
search space  secondly  makes easier evaluate definitions produced  theory 
one could still evaluate second definition generating lots input values
zip   would require lot invocations minimal gain 
last restriction reduces search space limiting number times
variable appear given literal body clause  definitions
variable appears multiple times given literal  following example
returns distance zipcode itself  common practice 
source   zip         dist      source   zip    zip   dist   
explicitly preventing definitions generated makes sense sources
requiring rare  better reduce search space exponentially
ignoring them  explicitly check time 

   scoring definitions
proceed problem evaluating candidate definitions generated
search  basic idea compare output produced source output
produced definition input  similar set tuples produced 
higher score candidate  score averaged set different
input tuples see well candidate definition describes new source 
motivating example section    source definition learnt
 the definition repeated below  produced one output tuple hdisti every input
tuple hzip   zip i 
source   zip    zip   dist  centroid zip   lat   long    centroid zip   lat   long   
greatcircledist lat   long   lat   long   dist   
multiply dist           dist   
fact made simple compare output service output induced
definition  general however  source modeled  and candidate definitions
modeling it  may produce multiple output tuples input tuple  take example
source  section      produces set output tuples hzip   dist i containing
zipcodes lie within given radius input zipcode hzip   dist i 
cases  system needs compare set output tuples set produced
definition see tuples same  since new source
existing sources may complete  two sets may simply overlap  even candidate
definition correctly describes new source  assuming count number
tuples same  need measure tells us well candidate hypothesis
describes data returned source  one measure following 
score s  v  i   

  x  os  i  ov  i  
 i  ii  os  i  ov  i  
  

ficarman   knoblock

new source  v candidate source definition  d s   set
input tuples used test source  s set input attributes source s   os  i 
denotes set tuples returned new source invoked input tuple i  ov  i 
corresponding set returned candidate definition  using relational projection
   selection    operators notation introduced section      sets
written follows   note sc represents output attributes s  
os  i  sc  s  i  e s   



ov  i  sc  s  i  ei  v   

view hypothesis testing information retrieval task  consider recall
number common tuples  divided number tuples produced
source  precision number common tuples divided number tuples
produced definition  measure takes precision recall account
calculating average jaccard similarity sets  table gives
example score calculated input tuple 
input tuple
ii
ha  bi
hc  di
he  f
hg  hi
hi  ji

actual output
tuples os  i 
 hx  yi  hx  zi 
 hx  wi  hx  zi 
 hx  wi  hx  yi 



predicted output
tuples ov  i 
 hx  yi 
 hx  wi  hx  yi 
 hx  wi  hx  yi 
 hx  yi 


jaccard similarity
tuple
   
   
 
 
 undef 

first two rows table show inputs predicted actual output
tuples overlap  third row  definition produces exactly set tuples
source modeled thus gets maximum score  fourth row 
definition produced tuple  source didnt  definition penalised 
last row  definition correctly predicted tuples would output source 
score function undefined point  certain perspective definition
score well correctly predicted tuples returned
input  giving high score definition produces tuples dangerous 
may cause overly constrained definitions generate output tuples
score well  time  less constrained definitions better predicting
output tuples average may score poorly  example  consider source returns
weather forecasts zipcodes los angeles 
source  zip  temp     forecast zip  tomorrow  temp   uscity zip  los angeles  
consider two candidate definitions source  first returns temperature
zipcode  second returns temperature   c 
v    zip  temp     forecast zip  tomorrow  temp  
v    zip  temp     forecast zip  tomorrow  temp   temp     c  
assume source candidates invoked using    different randomly selected
zipcodes  zipcodes  source return output  zipcode
lie outside los angeles  first candidate likely return output zipcodes 
second candidate would  source  rarely produce output 
temperature zipcodes greater zero  nothing
  

filearning semantic definitions information sources internet

whether zipcode los angeles  score definitions highly
correctly produce output  system would erroneously prefer second candidate
first  because latter often produces output   prevent happening 
simply ignore inputs definition correctly predicts zero tuples 
setting score average values 
returning attention table  ignoring last row  overall score
definition would calculated      
    partial definitions
search proceeds toward correct definition service  many semi complete
 unsafe  definitions generated  definitions produce values
attributes target tuple subset them  example  candidate 
source   zip    dist   zip        source   zip    zip   dist   
produces one two output attributes produced source  presents
problem  score defined sets tuples containing output
attributes new source  one solution might wait definitions become
sufficiently long produce outputs  comparing see one best
describes new source  are  however  two reasons would make sense 
space safe definitions large enumerate  thus need compare
partial definitions guide search toward correct definition 
best definition system generate may well partial one  set
known sources may sufficient completely model source 
simplest way compute score partial definition compute function
before  instead using raw source tuples  projecting subset
attributes produced definition  revised score shown below   note
projection v s   denotes subset output attributes
produced view definition v  note projection distinct  i e 
multiple instances tuple may produced  
score   s  v  i   

  x  v s  os  i   ov  i  
 i  ii  v s  os  i   ov  i  

revised score useful however  gives unfair advantage definitions
produce output attributes source  far easier
correctly produce subset output attributes produce them  consider
example two source definitions shown below  two definitions identical except
second returns output distance value dist   first not 
source   zip    dist   zip    
   source   zip    zip   dist     dist   dist   
source   zip    dist   zip   dist     source   zip    zip   dist     dist   dist   
since two identical  projection subset case return
number tuples  means definitions would get score although
second definition clearly better first since produces required outputs 
need able penalise partial definitions way attributes
dont produce  one way first calculate size domain  d a  
  

ficarman   knoblock

missing attributes  example above  missing attribute distance value 
since distance continuous value  calculating size domain obvious 
approximate size domain by 
 d distance  

max min
accuracy

accuracy error bound distance values   we discuss error bounds
section       note cardinality calculation may specific semantic type 
armed domain size  penalise score definition dividing
product size domains output attributes generated
definition  essence  saying possible values extra attributes
allowed definition  technique similar techniques used learning
without explicit negative examples  zelle  thompson  califf    mooney        
set missing output attributes given expression sc  v  thus penalty
missing attributes size domain tuples scheme  i e  
penalty    d sc  v  
using penalty value calculate new score  takes account missing
attributes  simply dividing projected score penalty would adhere
intended meaning compensating missing attribute values  thus may skew
results  instead  derive new score introducing concept typed dom predicates
follows 
dom predicate semantic data type t  denoted domt   single arity
relation whose extension set domain datatype  i e  e domt    
d t   similarly  dom predicate scheme a  denoted doma   relation
whose extension e doma     d a  
dom predicates introduced duschka handle problem query reformulation
presence sources binding constraints  duschka          in work
predicates typed  although typing would resulted efficient algorithm   use convert partial definition v safe  complete  definition
v     simply adding dom predicate end view definition
generates values missing attributes  example above  v   would be 
source   zip    dist   zip   x   source   zip    zip   dist     dist   dist    domdistance  x  
x new variable type distance  new view definition v   safe 
variables head clause appear body  general 
turn unsafe view definition v safe definition v   appending dom predicate
domsc  v  x         xn    xi distinguished variable  from head clause 
corresponding output attribute v   wasnt bound v  use
complete definition calculate score before 
score   s  v  i    score s  v     i   

  

  x  os  i  ov   i  
 i  ii  os  i  ov   i  

filearning semantic definitions information sources internet

rewritten  by expanding denominator  follows 
score   s  v  i   

 os  i  ov   i  
  x
 i  ii  os  i      ov   i    os  i  ov   i  

remove references v   equation considering 
ov   i    ov  i  e domsc  v     ov  i  d sc  v 
thus size set given  ov   i      ov  i   d sc  v   size intersection
calculated taking projection output attributes produced v 
 os  i  ov   i      v s  os  i  ov  i  d sc  v       v s  os  i   ov  i  
substituting cardinalities score function given above  arrive following
equation penalised score 
score   s  v  i   

 v s  os  i   ov  i  
  x
 i  ii  os  i      ov  i   d sc  v    v s  os  i   ov  i  

    binding constraints
candidate definitions generated search may different binding
constraints target predicate  instance partial definition shown below 
variable zip  output target source  input source   
source   zip    dist   zip        source   zip    zip   dist   
logical perspective  order test definition correctly  need invoke
source  every possible value domain zipcodes  practical
two reasons  firstly  system may complete list zipcodes disposal 
secondly far importantly  invoking source  thousands different zipcodes
would take long time would probably result system blocked
use service  instead invoking source thousands times 
approximate score definition sampling domain zipcodes
invoking source using sampled values  compensate sampling
scaling  certain components of  score ratio sampled zipcodes
entire domain  considering example above  randomly choose sample  denoted
 zipcode   say    values domain zipcodes  set tuples returned
definition need scaled factor  d zipcode      
general equation computing scaling factor  denoted sf   shown below 
note sampling may need performed set attributes   here v  s
denotes input attributes v outputs s  
sf  

 d v  s   
  v  s   

calculate effect scaling factor overall score follows  denote
set tuples returned definition given sampled input ov  i   value
  

ficarman   knoblock

scaled approximate set tuples would returned
definition invoked possible values additional input attributes 
 ov  i    ov  i   sf
assuming sampling performed randomly domain possible values 
intersection tuples produced source definition scale
way  thus factor affected scaling score defined previously
 os  i    divide throughout scaling factor new scoring function 
score   s  v  i   

 v s  os  i   ov  i  
  x
 i  ii  os  i   sf    ov  i   d sc  v    v s  os  i   ov  i  

problem approach often sampled set values small
result intersect set values returned source  even though larger
sample would intersected way  thus sampling introduces unfair distortions
score certain definitions  causing perform poorly  example  consider
source  assume scalability purposes  service places limit
maximum value input radius dist    this makes sense  otherwise user could
set input radius cover entire us  tuple every possible zipcode would
need returned   consider sampling performed above  randomly choose
   zipcodes set possible zipcodes  chance sample containing
zipcode lies within     mile radius particular zipcode  in middle
desert  low  moreover  even one pair zipcodes  out     results successful
invocation  sufficient learning good definition service 
get around problem bias sample that  whenever possible  half
values taken positive examples target  those tuples returned new
source  half taken negative examples  those tuples returned source  
sampling positive negative tuples  guarantee approximation
generated accurate possible given limited sample size  denote set
positive negative samples    v  s    v  s    use values define
positive total scaling factors shown below   the numerator positive values
different before  values taken output new source  
sf    

 v  s  v s  os  i    
     v  s   

total scaling factor value before  calculated slightly differently 
sf  

 d v  s   
     v  s         v  s   

score approximated accordingly taking account new scaling
factors  intersection needs scaled using positive scaling factor 
 v s  os  i   ov  i    v s  os  i   ov  i   sf  
new scaling results new function evaluating quality view definition 
score   s  v  i   

 v s  os  i   ov  i   sf  
  x
 i  ii  os  i      ov  i   d sc  v   sf  v s  os  i   ov  i   sf  
  

filearning semantic definitions information sources internet

    favouring shorter definitions
derived score comparing data source candidate
produce  define evaluation function eval used algorithm    mentioned
section      shorter definitions target source preferred longer
possibly less accurate ones  accordance principle  scale score
length definition  favour shorter definitions follows 
eval v    length v  score   s  v  i 
length v  length clause     weighting factor  setting
weighting factor little less    such       helps remove logically redundant
definitions  sometimes hard detect  often return almost exactly
score shorter equivalent  discuss problem generating non redundant
clauses section     
    approximating equality
now  ignored problem deciding whether two tuples produced
target source definition same  since different sources may serialize data
different ways different levels accuracy  must allow flexibility
values tuples contain  instance  example section    distance
values returned source definition match exactly  sufficiently
similar accepted value 
numeric types temperature distance makes sense use error bound  like
    c  percentage error  such     decide two values considered
same  sensing equipment  in case temperature  algorithm  in
case distance  error bound associated values produces 
require error bound numeric type provided problem specification 
 ideally  bounds would learnt automatically examples  
certain nominal types company names  values hibm corporationi
hinternational business machines corp i represent value  simplistic equality
checking using exact substring matches sufficient deciding whether two values
correspond entity  case  string edit distances jarowinkler
score better distinguishing strings representing entity representing
different ones  bilenko  mooney  cohen  ravikumar    fienberg         machine learning
classifier could trained set examples learn available string
edit distances best distinguishes values type threshold set accepting
pair match  require pair similarity metric threshold  or
combinations metrics  provided problem specification 
cases  enumerated types months year might associated
simple equality checking procedure  values hjanuaryi  hjani h i
found equal  actual equality procedure used depend semantic type
assume work procedure given problem definition  note
procedure need      accurate  provide sufficient level accuracy
guide system toward correct source description  indeed  equality rules could
generated offline training classifier 
  

ficarman   knoblock

complex types date present bigger problem one considers range
possible serializations  including values h        i hthu    may     i h          i 
cases specialized functions required check equality values
break complex types constituent parts  in case day  month
year    latter would form part domain model 
cases  deciding whether two values type considered equal
depends type  relations used in  consider
two relations shown below  first provides latitude longitude coordinates
centroid zipcode  second returns coordinates particular address 
centroid zipcode  latitude  longitude 
geocode number  street  zipcode  latitude  longitude 
given different ways calculating centroid zipcode  including using center
mass center population density  error bound     meters might make sense
equating latitude longitude coordinates  geocoding service  hand 
error bound    meters may reasonable  general  error bounds
associated set global relations  instead semantic types  could
learnt accordingly  relations contain multiple attributes  problem
deciding whether two tuples refer entity called record linkage  winkler 
       entire field research devoted tackling problem  due complexity
problem variety techniques developed handle it 
investigate here 

   extensions
section discuss extensions basic algorithm needed handling real data
sources  well ways reduce size hypothesis space improve quality
definitions produced 
    generating inputs
first step source induction algorithm generate set tuples
represent target relation induction process  words  system must
try invoke new source gather example data  without biasing
induction process easier said done  simplest approach generating input values
select constants random set examples given problem specification 
problem approach cases new source produce
output selected inputs  instead system may need select values according
distribution domain values order source invoke correctly 
example  consider source providing posts used cars sale certain area  source
takes make car input  returns car details 
usedcars  make  model  year  price  phone 
although hundred different car manufacturers world 
produce bulk cars  thus invoking source values ferrari 
lotus aston martin less likely return tuples  compared
common brands ford toyota  unless source providing data sports
cars course   distribution possible values available  system first try
  

filearning semantic definitions information sources internet

common values  generally  choose values set according
distribution  particular example  might difficult query source
complete set car manufacturers one invocations returns data 
general  set examples may large  such         zipcodes us 
number interesting values set  the ones likely return results  may
small  case taking advantage prior knowledge distribution
possible values makes sense  noted execution system
receive lot output data different sources accesses  data recorded
generate distributions possible values different types 
problem generating viable input data new source becomes yet difficult
input required single value tuple values  case system
first try invoke source random combinations attribute values
examples type  invoking sources  such source    easy
explicit restriction combination input values 
source   zip   distance  zip  distance 
cases  geocoding service combination possible input values highly
restricted 
usgeocoder  number   street   zipcode  latitude  longitude 
randomly selecting input values independently one another unlikely result
successful invocations   in order invocation succeed  randomly generated
tuple must correspond address actually exists   cases  failing
invoke source number times  system try invoke sources  such
hotel lookup service below   produce tuples containing required attribute types 
hotelsearch  city  hotel  number  street  zipcode 
general  process invoking sources generate input sources chained
set viable inputs generated 
note problem synthesizing viable input data difficult
interesting research problem  combined approach utilizing value distributions
invoking alternative services performs well experiments  see section       area
future work develop general solution 
    dealing sources
order minimise source accesses  expensive terms time
bandwidth  requests individual sources cached local relational database 
implementation means implicit assumption work
output produced services constant duration induction process 
could problematic service modeled provides  near  real time data
update frequency less time takes induce definition  weather
prediction service  updated hourly  may present much problem  since
difference predicted temperatures may vary slightly one update
next  real time flight status service providing coordinates given aircraft
every five minutes  caching may problematic location plane vary
greatly takes  example  one hour induce definition  theory one could test
variation systematically periodically invoking source previously
  

ficarman   knoblock

successful input tuple see output changed  update caching policy
accordingly 
    logical optimisations
evaluating definitions expensive terms time  waiting sources return data  computation  calculating joins large tables   thus makes sense
check candidate redundancy evaluating it  decide definitions
redundant  use concept query containment 
query q  lr a said contained another query q  lr a
database instance i  set tuples returned first query subset
returned second  i e  ei  q    ei  q     denote containment
q  v q    two queries considered logically equivalent q  v q  q  v q   
conjunctive queries learnt paper  testing query containment reduces
problem finding containment mapping  chandra   merlin           use
test discover logically equivalent definitions following   which contain
reordering literals  
source  zip  temp    getcentroid  zip  lat  lon   getconditions  lat   lon  temp  
source  zip  temp    getconditions  lat   lon  temp   getcentroid  zip  lat  lon  
equivalence checking performed efficiently canonical ordering predicate
variable names chosen priori  whenever logically equivalent definitions discovered  search backtrack  thereby avoiding entire sub trees equivalent clauses 
similarly  test skip logically redundant clauses following  which
equivalent shorter definition without second literal  
source  zip      getcentroid  zip  lat  long   getcentroid  zip  lat    
again  redundancy checking performed efficiently  levy  mendelzon  sagiv   
srivastava        resulting little computational overhead search 
    functional sources
information may known functionality certain sources expressed
source definitions  example  sources multiply concatenate 
implemented locally  known complete   a source considered complete 
returns tuples implied definition  i e  e s    ei  v    whenever
information available  induction system take advantage improve search
efficiency  explain how  define class sources call functional sources 
complete input tuple return exactly one output tuple  slightly
restrictive standard ilp concept determinate literals  cameron jones  
quinlan         every input tuple return one output tuple  multiply
concatenate examples functional sources  system takes advantage fact
functional sources place restrictions input  whenever functional source
added candidate definition  score definition doesnt change providing
sources inputs none outputs bound   the set tuples returned new
    queries contain interpreted predicates  containment testing little involved  afrati 
li    mitra        

  

filearning semantic definitions information sources internet

definition before  new attributes corresponding outputs
source   thus new definition need evaluated  added
queue  of definitions expand  is  becomes particularly advantageous
sources input arity high 
    constants
constants often used source descriptions define scope service  consider
weather service provides reports zipcodes california 
calweather  zip   date  temp     forecast zip  date  temp   usstate zip  california  
mediator receives query asking forecast chicago  know
source relevant query since chicago california  although constants
source descriptions useful  simply introducing hypothesis
language could cause search space grow prohibitively   for states  branching
factor would     zipcodes would excess          obviously generate
test methodology make sense domain semantic type large 
alternatively  one explicitly check repeated values tuples returned
new source  i e  constants head clause  join source
definition relations  i e  constants body clause   example 
definition join source relation hzip  date  tempi definition relation
hzip  date  temp  statei would produce tuples state equal california 
constant could added definition 
source  zip   date  temp     forecast zip  date  temp   usstate zip  state  
complicated detection procedures would required discovering constants interpreted predicates  i e  range restrictions numeric attributes  
    post processing
definition learnt new source  may possible tighten
definition removing logical redundancies unfolding  consider following
definition involving calls two hotel sources  one check availability
check rating 
source  hotel  address  rating  hotelavailability  hotel  address  price   hotelrating  hotel  rating  address  
unfolding definition  in terms definitions hotel sources  contains
two references accommodation relation 
source  hotel  address  rating  accommodation hotel    address   available hotel  today  price  
accommodation hotel  rating  address  
first literal redundant removed unfolding  general 
rules used discover redundancy candidate definitions used remove redundant
literals unfolding  moreover  since post processing step needs performed
once  time spent searching complicated forms redundancy 
  

ficarman   knoblock

   evaluation
section describe evaluation source induction algorithm  first
describe experimental setup used experiments performed  finally 
compare induction algorithm particular complex schema matching system 
    experimental setup
source induction algorithm defined paper implemented system called
eidos  stands efficiently inducing definitions online sources  eidos implements techniques optimisations discussed sections       certain
extensions section   partially implemented  implementation currently
checks constants head clause perform tightening
definitions   code written java mysql database used caching
results source invocations 
eidos tested    different problems involving real services several domains
including hotels  financial data  weather cars  domain model used
problem included    different semantic types  ranging common
ones zipcode specific types stock ticker symbols  data model
contained    relations  excluding interpreted predicates   used model   
different services  modeled services publicly available information sources 
note decision use set known sources problem
 regardless domain  important order make sure tests realistic 
decision made problem difficult standard schema matching mapping
scenario source schema chosen  provides data known
priori relevant output schema 
order give better sense problem setting complexity known
sources available  list ten  ordered arity   due space limitations dont
show complete list definitions  input output types source 
note sources share semantic types latitude longitude  means
search space associated sources alone large 
 

weatherconditions  city state country latitude longitude time time timeoffset 
datetime temperaturef sky pressurein direction speedmph humidity temperaturef 
  weatherforecast  city state country latitude longitude timeoffset day date 
temperaturef temperaturef time time sky direction speedmph humidity 
  getdistance  latitude  longitude  latitude  longitude distancekm 
  usgeocoder  street  zipcode city state latitude longitude 
  convertdms  latitudedms  longitudedms latitude longitude 
  usgsearthquakes decimal timestamp latitude longitude 
  getairportcoords  iata airport latitude longitude 
  countrycode  latitude  longitude countryabbr 
  getcentroid  zipcode latitude longitude 
   altitude  latitude  longitude distancem 

order induce definitions problem  source  and candidate definition  invoked least    times using random inputs  whenever possible  system
attempted generate    positive examples source  invocations source
returned tuples     negative examples  inputs produced output  
  

filearning semantic definitions information sources internet

ensure search terminated  number iterations algorithm including backtracking steps limited     search time limit    minutes imposed 
inductive search bias used experiments shown below  weighting factor
 defined section          used direct search toward shorter definitions 
search bias
maximum clause length    
maximum predicate repetition    
maximum variable level    
executable candidates
variable repetition within literal
experiments  different procedures used decide equality values
type discussed section      equality procedures used different
types listed below  accuracy bounds thresholds used chosen maximize
overall performance learning algorithm   in practice  meta learning algorithm
could used determine best accuracy bounds different attribute types  
semantic types listed below  substring matching  checking one string contained
other  used test equality values 
types
latitudes  longitudes
distances  speeds  temperatures  prices
humidity  pressure  degrees
decimals
companies  hotels  airports
dates

equality procedure
accuracy bound      
accuracy bound   
accuracy bound    
accuracy bound    
jarowinkler score     
specialised equality procedure

experiments run dual core     ghz pentium     gb ram  although
memory limiting factor tests   system running windows
     server  java runtime environment     mysql     
    evaluation criteria
order evaluate induction system  one would compare problem
definition generated system ideal definition source  denoted vbest
v respectively   words  would evaluation function  rates
quality definition produced respect hand written definition
source  i e  quality   vbest v          problem twofold  firstly 
obvious define similarity function conjunctive queries many
different possibilities exist  see markov marinchev        particular example  
secondly  working best definition hand  taking account limitations
domain model fact available sources noisy  incomplete  possibly
less accurate  even serialise data different ways  may extremely difficult  even
possible  order evaluate discovered definitions  instead count
number correctly generated attributes definition  attribute said
correctly generated  if 
  

ficarman   knoblock

input  definition correctly restricts domain possible values
attribute 
output  definition correctly predicts value given input tuples 
consider following definition takes two input values returns difference
square root  providing difference positive  
source  a   b  c  d     sum b  c  a   product d  d  c   b 
imagine induction system managed learn source returns
difference input output  i e  
source  a   b  c       sum b  c  a  
say first input attribute correctly generated input
constrained respect input attribute b  the inequality missing   input b
deemed correctly generated present sum relation  only one input penalised
missing inequality   output c deemed correctly generated respect
inputs  missing attribute isnt generated all   note ordering
variables sum relation different  say sum a  b  c   c would
generated  correctly generated  
given definition correctly generated attributes  one define expressions
precision recall attributes contained source definition  define precision
ratio correctly generated attributes total number attributes generated
definition  i e  
precision  

  correctly generated attributes
total   generated attributes

define recall ratio generated attributes total number attributes
would generated ideal definition  given sources available   in
cases sources available generate values attribute case 
attribute included count  
recall  

  correctly generated attributes
total   attributes generated

note defined precision recall schema level terms attributes
involved source definition  could defined data level terms
tuples returned source definition  indeed  jaccard similarity
used score candidate definitions combination data level precision recall values 
reason choosing schema level metrics evaluation better reflect
semantic correctness learnt definition  far independent
completeness  amount overlap  known target sources 
returning example above  precision simple definition learnt would
    recall would      note that  product relation available
domain model  in case attribute could never generated   recall
would higher     
  

filearning semantic definitions information sources internet

    experiments
definitions learnt system described below  overall system performed
well able learn intended definition  ignoring missing join variables
superfluous literals        problems 
      geospatial sources
first set problems involved nine geospatial data sources providing variety location
based information  definitions learnt system listed below  reported
terms source predicates rather domain relations  i e  unfoldings 
corresponding definitions much shorter  makes easier understand
well search algorithm performing 
 
 
 

 
 
 

 
 
 

getinfobyzip  zip  cit  sta    tim    gettimezone  sta  tim        getcitystate  zip  cit  sta   
getinfobystate  sta  cit  zip    tim    gettimezone  sta  tim        getcitystate  zip  cit  sta   
getdistancebetweenzipcodes  zip   zip  dis    getcentroid  zip  lat  lon    getcentroid  zip  lat  lon   
getdistance  lat   lon   lat   lon  dis     convertkm mi  dis   dis   
getzipcodeswithin     dis    dis      dis  dis   
yahoogeocoder  str   zip  cit  sta    lat  lon    usgeocoder  str   zip  cit  sta  lat  lon   
getcenter  zip  lat  lon  cit  sta    weatherconditions  cit  sta    lat  lon                         
getzipcode  cit   sta  zip   
earthquakes             lat  lon    dec      usgsearthquakes dec    lat  lon   
usgselevation  lat   lon  dis    convertft m  dis  dis    altitude  lat   lon  dis   
countryinfo  cou  cou  cit      cur            getcountryname  cou  cou    gocurrency cur  cou     
weatherconditions  cit    cou                             

first two sources provide information zipcodes  name city 
state timezone  differ binding constraints  first taking
zipcode input  second taking state  second source returns many output
tuples per input value  making harder learn definition  even though two sources
provide logically information  induced definitions best possible given
known sources available   none provided missing output attribute  telephone area code   third source calculates distance miles two zipcodes 
 it source  section     correct definition learnt source 
next source  returned zipcodes within given radius  reasonable definition could learnt within time limit    ignoring binding constraints  intended
    recall problem     input attribute dis  determined correctly
generated attribute  it constrained respect output attribute dis     four attributes
generated  the output attribute dis  generated   predicate   precision
    dis  generated attribute  correctly generated 

  

ficarman   knoblock

definition third  restriction output distance less
input distance  thus would far easier eidos learn definition
fourth source terms third  indeed  new definition third
source added set known sources  system able learn following 
  getzipcodeswithin  zip   dis  zip  dis    getdistancebetweenzipcodes  zip   zip  dis      dis  dis   

ability system improve learning ability time set known
sources increases key benefit approach 
source five geocoding service provided yahoo   geocoding services map addresses latitude longitude coordinates   eidos learnt functionality
provided service called usgeocoder  source six simple service providing
latitude longitude coordinates city state given zipcode  interestingly 
system learnt sources coordinates better predicted weather conditions service  discussed section         getcentroid source third
definition  note new source definition unfolded contain extraneous predicates related weather information    additional predicates interfere
usefulness definition  however  query reformulation algorithm still
use source answer queries regardless   thus precision recall scores
affected   post processing step remove extraneous predicates possible 
would require additional information domain model    seventh source provided
earthquake data within bounding box took input  case  system
discovered source indeed providing earthquake data   lat  lon  coordinates earthquake dec  magnitude   didnt manage  however  work
input coordinates related output  next source provided elevation
data feet  found sufficiently similar known altitude data metres 
finally  system learnt definition source providing information countries
currency used  name capital city  since known sources
available provide information  system ended learning weather reports
available capital country 
problem
 
 
 
 
 
 
 
 
 

  candidates
  
  
   
 
  
  
  
  
   

  invocations
    
    
     
     
     
     
     
   
     

time  s 
  
   
   
  
   
   
  
  
   

log    score 
     
     
     
    
     
     
     
     
     

precision
   
   
   
   
   
   
   
   
   

recall
   
   
   
   
   
   
   
   
   

    unfolding shown below  conditions predicate could removed without affecting meaning 
getcenter  zip   lat   lon   cit   sta     municipality cit   sta   zip   tim    country    cou     
northamerica cou    centroid zip   lat   lon    conditions lat   lon                         
timezone tim        municipality cit   sta   zip     
    particular  universally quantified knowledge would needed domain model  e g  
lat  lon x         x   s t  conditions lat  long  x         x    

  

filearning semantic definitions information sources internet

table shows details regarding search performed learn definitions listed above  problem  shows number candidates generated prior
winning definition  along time number source invocations required
learn definition   the last two values interpreted caution
highly dependent delay accessing sources  caching data
system   scores shown fifth column normalised version scoring
function used compare definitions search   normalisation involved removing
penalty applied missing outputs   scores small  logarithm
values shown  hence negative values     scores interpreted
confidence system definitions produced  closer value zero 
better definitions ability produce tuples source  see
system far confident definitions one five  latter
ones    last two columns give precision recall value problem 
average precision problems        note high precision value
expected  given induction algorithm relies finding matching tuples
source definition   average recall geospatial problems high
    
      financial sources
two sources tested provided financial data  definitions generated eidos
sources shown below 
   getquote  tic  pri  dat  tim  pri  pri  pri  pri  cou    pri       pri     com    yahoofinance  tic  pri  dat  tim  pri  pri  pri  pri  cou   
getcompanyname  tic  com        add  pri   pri   pri    add  pri   pri   pri   
   yahooexchangerate     cur  pri  dat    pri  pri    getcurrenttime     dat      gocurrency cur  cou  pri   
gocurrency   cou  pri    add  pri   pri  pri     add  pri   pri  pri    

first financial service provided stock quote information  system learnt
source returned exactly information stock market service provided yahoo 
able work previous days close plus todays change equal
current price  second source provided rate exchange currencies
given input  case  system fare well  unable learn intended
result  involved calculating exchange rate taking ratio values
first second currency 
problem
  
  

  candidates
    
   

  invocations
     
     

time  s 
   
   

log    score 
     
     

precision
     
   

recall
     
   

details regarding search spaces two problems shown above  average
precision recall problems much lower         respectively 
system unable learn intended definition second problem 
    positive value problem   results approximation error 
    low scores perfect precision recall  problems         indicate little overlap
target known sources  fact system learns correct definition cases
testimony robustness approach 

  

ficarman   knoblock

      weather sources
internet  two types weather information services  provide
forecasts coming days  provide details current weather conditions 
experiments  pair services provided weather com used learn definitions number weather sources  first set definitions  correspond
sources provide current weather conditions  listed below 
   noaaweather  ica  air      sky  tem  hum  dir  spe    pre   tem         getairportinfo  ica    air  cit       
weatherforecast  cit                        sky  dir       
weatherconditions  cit                  tem  sky  pre     spe  hum  tem    
convertin mb  pre   pre    
   wunderground  sta   cit  tem      pre  pre  sky  dir  spe  spe     weatherconditions  cit  sta              dat  tem  sky  pre  dir  spe     tem   
weatherforecast  cit  sta              tem             spe      
convertin mb  pre  pre     tem  tem    converttime  dat             spe  spe    
   weatherbuglive    cit  sta  zip  tem      dir        weatherconditions  cit  sta                tem      dir         
getzipcode  cit   sta  zip   
   weatherfeed  cit     tem    sky  tem      pre  lat        weatherconditions  cit      lat              sky  pre  dir       tem   
weatherforecast  cit                  tem        dir        
   weatherbyicao  ica  air  cou  lat  lon    dis    sky            altitude  lat   lon  dis    getairportinfo  ica    air  cit    cou   
weatherforecast  cit    cou                    sky         
getcountryname  cou  cou   
   weatherbylatlon             lat  lon    dis                altitude  lat   lon  dis   

first problem  system learnt source    provided current conditions airports 
checking weather report cities airport located 
particular problem demonstrates advantages learning definitions new
sources described section      definition learnt  mediator receives
request current conditions airport  generate answer query
executing single call newly modeled source   without needing find nearby
city   system performed well next three sources         learning definitions
cover attributes each  last two problems  system
perform well  case source     system spent time learning
attributes airport returned  such country  coordinates  elevation 
etc    last case  system able learn source returning
coordinates along elevation  note different sources may provide
data different levels accuracy  thus fact system unable learn
definition particular source could simply mean data returned
source wasnt sufficiently accurate system label match 
addition current weather feeds  system run two problems involving
weather forecast feeds  well first problem  matching bar one
attributes  the country  finding order high low temperatures
  

filearning semantic definitions information sources internet

inverted  well second problem  learning definition source
produced output attributes 
   yahooweather  zip  cit  sta    lat  lon  day  dat  tem  tem  sky     weatherforecast  cit  sta    lat  lon    day  dat  tem  tem      sky          
getcitystate  zip  cit  sta   
   weatherbugforecast    cit  sta    day  sky  tem      weatherforecast  cit  sta        tim  day    tem    tim     sky         
weatherconditions  cit          tim     tim                   

details regarding number candidates generated order learn definitions
different weather sources shown below  average precision definitions produced
     average recall     
problem
  
  
  
  
  
  
  
  

  candidates
   
    
  
   
   
  
   
   

  invocations
   
   
    
   
   
    
     
     

time  s 
   
   
   
   
   
    
   
    

log    score 
     
     
      
     
      
      
     
      

precision
   
   
   
   
   
   
     
   

recall
    
    
   
    
   
    
     
   

      hotel sources
definitions learnt sources providing hotel information yahoo  google
us fire administration  definitions shown below 
   usfirehotelsbycity  cit      sta  zip  cou      hotelsbyzip  zip      cit  sta  cou   
   usfirehotelsbyzip  zip      cit  sta  cou      hotelsbyzip  zip      cit  sta  cou   
   yahoohotel  zip     hot  str  cit  sta              hotelsbyzip  zip  hot  str  cit  sta     
   googlebasehotels  zip    cit  sta      lat  lon      weatherconditions  cit  sta    lat  lon                         
getzipcode  cit   sta  zip   

system performed well three four problems  unable time
allocated discover definition hotel attributes  name  street  latitude longitude  returned google web service  average precision problems
    average recall     
problem
  
  
  
  

  candidates
  
  
  
  

  invocations
   
    
    
    

time  s 
  
 
   
    
  

log    score 
     
     
     
     

precision
   
   
   
   

recall
   
   
   
   

ficarman   knoblock

      cars traffic sources
last problems system tested pair traffic related web services 
first service  provided yahoo  reported live traffic data  such accidents
construction work  within given radius input zipcode  known sources
available provided information  surprisingly  system unable
learn definition traffic related attributes source   instead  system
discovered relationship input zipcode output longitude wasnt
correct  precision problem zero  
   yahootraffic  zip       lat  lon          getcentroid  zip    lon    countrycode  lat   lon     
   yahooautos  zip   mak  dat  yea  mod      pri      googlebasecars  zip   mak    mod  pri      yea   
converttime  dat    dat         getcurrenttime     dat      

second problem involved classified used car listing yahoo took zipcode
car manufacturer input  eidos able learn good definition source 
taking advantage fact cars  defined make  model  year
price  listed sale googles classified car listing 
problem
  
  

  candidates
  
  

  invocations
     
   

time  s 
    
   

log    score 
      
     

precision
   
   

recall
   
   

since system failed first problem  it found incorrect non general relationships different attributes   succeeded second problem find best
possible definition  average precision recall problems     
      overall results
across    problems  eidos managed generate definitions high accuracy  average
precision      large number attributes  average recall       results
promising  especially considering problems involved real data sources
cases small overlap data produced target provided
known sources  as evidenced low logarithmic scores   addition minimal
overlap  many sources provided incomplete tuples  i e  tuples containing multiple null
n a values  well erroneous inaccurate data  making problem
difficult  high average precision recall lead us believe jaccard measure
good job distinguishing correct incorrect definitions presence
data sources noisy  inconsistent  incomplete  missing tuples values  
comparing different domains  one see system performed better
problems fewer input output attributes  such geospatial problems  
expected given resulting search space much smaller 
  

filearning semantic definitions information sources internet

    empirical comparison
demonstrated effectiveness eidos learning definitions real information
services  show system capable handling problems
well known complex schema matching system 
imap system  dhamanka  lee  doan  halevy    domingos         discussed
section      schema matcher learn complex  many to one  mappings
concepts source target schema  uses set special purpose searchers
learn different types mappings  eidos system  hand  uses generic
search algorithm solve comparable problem  since two systems made
perform similar task  show eidos capable running one problem
domains used evaluation imap  chose particular domain online cricket
databases one used evaluation involved aligning data
two independent data sources   all problems involved generating synthetic data
splitting single database source target schema  would
interesting eidos  
player statistics two online cricket databases  cricketbase com cricinfo com 
used experiments  since neither sources provided programmatic access
data  statistics data extracted html pages inserted
relational database  extraction process involved flattening data relational
model small amount data cleaning   the resulting tables similar
necessarily exactly used imap experiments   data
two websites used create three data sources representing website  three
sources representing cricinfo com used learn definitions three sources
representing cricketbase com  known sources available system  including
functionality splitting apart comma separated lists  adding multiplying numbers 
on  definitions learnt describe cricketbase services shown below 
  cricbaseplayers  cou  nam    dat    unk  unk    cricinfoplayer  nam  dat        lis  nam  unk  unk    contains  lis  cou   
cricinfotest  nam                                             
  cricbasetest    nam  cou        cou  cou  dec  cou        cou   cou   dec     
dec   cou         cricinfotest  nam      cou  cou  cou   cou    dec  dec     cou        cou   
cou           dec    
  cricbaseodi    nam  cou        cou  cou  dec  cou  cou     cou   cou     dec   
dec   dec   cou   cou       cricinfoodi  nam      cou  cou    cou     dec    cou  cou   cou   cou      
cou   cou   dec     dec   dec    

first source provided player profiles country  second third sources provided
detailed player statistics two different types cricket  test one day international
respectively   system easily found best definition first source  definition
involved looking players country list teams played for  eidos
perform quite well second third problems  two reasons
this  firstly  arity sources much higher many instances
semantic type  count decimal    making space possible alignments much larger 
  

ficarman   knoblock

 because large search space  longer timeout    minutes used   secondly 
high frequency null values  the constant n a  data fields
confused algorithm  made harder discover overlapping tuples
desired attributes 
problem
 
 
 

  candidates
   
    
    

  invocations
    
    
    

time  s 
   
    
    

log    score 
     
     
     

precision
   
    
    

recall
   
    
    

details search performed learn definitions shown above  average
precision problems     average recall lower     
values comparable quality matchings reported imap    results
good  considering eidos searches space many to many correspondences 
 trying define set target attributes contemporaneously   imap searches
spaces one to one many to one correspondences  moreover  eidos first invokes
target source generate representative data  a task performed imap 
performs generic search reasonable definitions without relying specialised search
algorithms different types attributes  as done imap  

   related work
section describe work paper relates research performed
machine learning  database semantic web communities  that 
describe early work performed artificial intelligence community 
discuss algorithm differs standard ilp techniques  particular
direct application techniques possible problem 
    early approach
first work concerned learning models describing operations available
internet performed  in pre xml era  problem called category translation
 perkowitz   etzioni        perkowitz  doorenbos  etzioni    weld         problem
consisted incomplete internal world model external information source
goal characterize information source terms world model 
world model consisted set objects o  object belonged certain
category  e g  people  associated set attributes ha   o         o i  made
strings objects  simple relational interpretation world model would
consider category relation  object tuple  information
source  meanwhile  operation took single value input returned
single tuple output  category translation problem viewed simplification
source definition induction problem  whereby 
    actual values precision recall cricket domain quoted  accuracy range
       simple matches  one to one correspondences source target fields        
complex matches  many to one correspondences  across synthetic real problems given 

  

filearning semantic definitions information sources internet

extensions global relations explicit   there one source per global
relation  doesnt binding constraints  i e  r   s  
information provided sources change time 
new source takes single value input returns single tuple output 
order find solutions instances category translation problem  authors employed variant relational path finding  richards   mooney         extension
foil algorithm  learn models external source  technique described
paper solving instances source induction problem similar
based foil like inductive search algorithm 
    direct application ilp techniques
researchers became interested field inductive logic programming early
nineties  resulting number different ilp systems developed including foil
 cameron jones   quinlan         progol  muggleton        aleph     ideally  one
would apply off the shelf ilp systems source definition induction
problem  number issues  however  limit direct applicability systems 
issues summarised follows 





extensions global relations virtual 
sources may incomplete respect definitions 
explicit negative examples target available 
sources may serialise constants different ways 

first issue fact ilp systems assume extensional
definition target predicate extensional  or cases intentional  definitions
 source  predicates used definition target  words 
assume tables already exist relational database represent
new source known sources  case  need generate tables first
invoking services relevant inputs  one could envisage invoking sources
every possible input using resulting tables perform induction  direct
approach would feasible two reasons  firstly  complete set possible input
values may known system  secondly  even possible generate
complete set viable inputs service  may practical query source
large set tuples  consider source  section    calculates distance
miles two zipcodes  given        zipcodes us  generating
extensional representation source would require performing billion
invocations  performing large number invocations make sense
small number example invocations would suffice characterising functionality
source  paper developed efficient algorithm queries
sources needed order evaluate individual candidate definitions 
second issue regarding incompleteness sources causes problem
candidate evaluated  since set tuples returned known source may
    see aleph manual ashwin srinivasan  available at 
http   web comlab ox ac uk oucl research areas machlearn aleph aleph html

  

ficarman   knoblock

subset implied definition  set tuples returned
candidate hypothesis executed sources  means
system tries evaluate hypothesis comparing tuples output
new source  cannot sure tuple produced new source
hypothesis fact logically implied it  fact taken account
evaluation function scoring candidate definitions  discussed section   
third issue regarding lack explicit negative examples target predicate
affects evaluation candidate hypotheses  classic approach dealing
problem assume closed world  tuples  over head relation 
explicitly declared positive must negative  since new source may
fact incomplete respect best possible definition it  assumption
necessarily hold  words  particular tuple produced
candidate definition executed tuple returned new source
necessarily mean candidate definition incorrect 
fourth issue fact data provided different sources may
need reconciled  sense different serialisations  strings representing 
value  such monday mon instance  must recognized  since ilp
systems designed operate single database containing multiple tables 
issue heterogeneity data handled current systems  section    
discussed heterogeneity resolved system 
    machine learning approaches
since advent services internet  researchers investigating ways
model automatically  primarily  interest centered using machine learning
techniques classify input output types service  facilitate service
discovery    kushmerick proposed using support vector machine classify
input output attributes different semantic types based metadata interface
descriptions  he   kushmerick               notion semantic types  such
zipcode  opposed syntactic types  like integer   went way toward defining
functionality source provides  recently  researchers  lerman et al        
proposed use logistic regression assigning semantic types input parameters
based metadata  pattern language assigning semantic types output
parameters based data source produces  work classifying input
output attributes service semantic types forms prerequisite work
article  purposes paper  assumed problem solved 
addition classifying input output attributes services    kushmerick
investigated idea classifying services different service types 
precisely  used classification techniques assign service interfaces different semantic domains  such weather flights  operations interface
provides different classes operation  such weatherforecast flightstatus  
resulting source description  hypothesis  language limited select project queries 
sufficiently expressive describe many sources available internet 
according approach  since every operation must characterized particular operation class  operations provide overlapping  non identical  functionality would
  

filearning semantic definitions information sources internet

need assigned different classes would operations provide composed functionality  such as  example  operation provides weather flight data  
need exhaustive set operation classes  and accompanying training data  major
limitation approach  shared work described paper  relies
expressive language describing service operations 
one way eliminate need predefined set operation types use unsupervised clustering techniques generate  operation  classes automatically examples
 wsdl documents   idea implemented system called woogle  dong et al  
       system clustered service interfaces together using similarity score based
co occurrence metadata labels  took advantage clusters produced improve keyword based search web services  advantage unsupervised approach
labeled training data required  time consuming generate 
clustering approaches  however  useful service discovery  suffer limitations
previous approach comes expressiveness 
    database approaches
database community long interested problem integrating data
disparate sources  specifically  areas data warehousing  widom        information integration  wiederhold         researchers interested resolving semantic
heterogeneity exists different databases data combined
accessed via single interface  schema mapping problem problem determining
mapping relations contained source schema particular relation
target schema  mapping defines transformation used populate
target relation data source schema  mappings may arbitrarily complex
procedures  general declarative queries sql datalog  complexity queries makes schema mapping problem far difficult highly
investigated schema matching problem  rahm   bernstein         involves finding
  to   correspondences fields source target schema 
source definition induction problem viewed type schema mapping
problem  known sources define source schema unknown source
specifies target relation  order solve schema mapping problem  one typically
takes advantage available auxiliary information  including source target data
instances  labels respective schemas  on   problems generally
simpler  however  data  the extensions relations  source target
schema usually explicitly available  source induction  data hidden behind
service interface  binding constraints  data extremely large
even  in case sources providing mathematical functions  infinite  thus making
problem considerably difficult 
schema integration system clio  yan  miller  haas    fagin        helps users
build sql queries map data source target schema  clio  foreign keys
instance data used generate integration rules semi automatically  since clio
relies heavily user involvement  make sense compare directly
automated system developed paper 
  

ficarman   knoblock

another closely related problem complex schema matching  goal
discover complex  many to one  mappings two relational tables xml schemas 
problem far complicated basic  one to one  schema matching because 
space possible correspondences relations longer cartesian
product source target relations  powerset source relation times
target relation 
many to one mappings require mapping function  simple concatenate x y z   arbitrarily complex formula z   x    y 
imap system  dhamanka et al         tries learn many to one mappings concepts set source relations target relation  uses set special
purpose searchers learn different types mappings  such mathematical expressions 
unit conversions time date manipulations   uses meta heuristic control
search performed different special purpose searchers  one views
source schema functions available use mappings  such concatenate x y z   add x y z   etc   set known sources source definition induction
problem  complex schema matching source induction problems somewhat
similar  main differences problems are 
data associated source schema explicit  and static  complex schema
matching  hidden  and dynamic  source induction 
general  set known sources source induction problem much larger
 and data provide may less consistent   set mapping functions
source relations complex schema matching problem 
paper develop general framework handling source induction problem 
since imap provides functionality similar system  perform
simple empirical comparison section     
    semantic web approach
stated goal semantic web  berners lee  hendler    lassila        enable
machine understanding web resources  done annotating resources
semantically meaningful metadata  thus work described paper much
line semantic web  far attempting discover semantically
meaningful definitions online information sources  de facto standards annotating
services semantic markup around number years  standards
provide service owners metadata language adding declarative statements service
interface descriptions attempt describe semantics service terms
functionality  e g  book purchase operation  data  e g  weather forecast 
provides  work languages related article two perspectives 
viewed alternative approach gaining knowledge semantics
newly discovered source  providing semantic metadata associated it  
semantic web service annotation languages seen target language
semantic descriptions learnt paper 
  

filearning semantic definitions information sources internet

web service already semantically annotated  heterogeneity may still exist
ontology used service provider used consumer  case
learning capabilities described paper may required reconcile differences 
importantly  interested vast number sources semantic
markup currently unavailable  work article complements semantic
web community providing way automatically annotating sources semantic
information  thereby relieving service providers burden manually annotating
services  learnt  datalog source definitions converted description logicbased representations used owl s  martin  paolucci  mcilraith  burstein 
mcdermott  mcguinness  parsia  payne  sabou  solanki  srinivasan    sycara       
wsmo  roman  keller  lausen  de bruijn  lara  stollberg  polleres  feier  bussler   
fensel         reason use datalog paper  rather description logics 
mediator based integration systems rely representation language 

   discussion
paper presented completely automatic approach learning definitions
online services  approach exploits definition sources either given
system learned previously  resulting framework significant advance
prior approaches focused learning inputs outputs class
service  demonstrated empirically viability approach 
key contribution article procedure learning semantic definitions
online information services is 
fully automated   definitions learnt completely automated manner without
need user intervention 
expressive  query language defining sources conjunctive
queries  far expressive previous attribute value approaches 
sufficiently robust  procedure able learn definitions presence noisy
incomplete data  thus sufficiently robust handle real data sources 
data access efficient  procedure samples data live sources  invoking
sparingly required  making highly efficient terms source accesses 
evolving  procedures ability learn definitions improves time new
definition learnt added set known sources 
    application scenarios
number different application scenarios system capable learning
definitions online sources  generally involve providing semantic definitions data
integration systems  exploit integrate available sources 
obvious application work would system  depicted left side
figure    crawls web  searching information sources  upon finding source 
system would use classifier assign semantic types it  followed inductive
learner generate definition it  definition could used annotate
source semantic web  mediator answering queries  importantly 
entire process could run minimal user involvement 
  

ficarman   knoblock

figure    architecture diagrams three different application scenarios 

challenging application scenario  shown center figure    would involve
real time service discovery  consider case mediator unable answer
particular query desired information lies scope sources available 
search performed based missing conjuncts  relation names constants 
query using specialised web service search engine  woogle  dong et al  
       services returned would annotated semantic types and  possible 
semantic definitions  definitions provided mediator  would complete
query processing return answer user  scenario may seem little farfetched one considers specific example  imagine user interacting geospatial
browser  an online atlas   user turns particular information layer  ski
resorts  source available current field view  of  instance  italy  
results would displayed  background search could performed new
source discovered  provides ski resorts europe  relevant data could
displayed  user unaware search performed 
perhaps likely application scenario  to right figure    source
induction system would mixed initiative one  case human would annotate
different operations service interface semantic definitions  time 
system would attempt induce definitions remaining operations  prompt
user suggestions them  scenario classifier may needed 
since attributes name different operations would likely
semantic type  moreover  since definitions learnt system may cases
contain erroneous superfluous predicates  user could involved process
checking improving definitions discovered 
  

filearning semantic definitions information sources internet

    opportunities research
number future directions work allow techniques applied
broadly  discuss two directions  improving search algorithm extending
query language 
number known sources grows  search space  necessary develop additional heuristics better direct search toward best definition 
many heuristic techniques developed ilp community may
applicable source induction problem  pressing perhaps need develop
robust termination condition halting search sufficiently good definition
discovered  number available sources increases  simple timeout used
experiments ineffective certain  more complicated  definitions necessarily
take longer learn others 
another way increase applicability work extend query language
better describes sources available  often online sources return complete
set results rather cut list maximum cardinality  example
yahoohotel source described section       returns maximum    hotels near given
location  orders according distance  case  recognising specific
ordering tuples produced would useful mediator  second useful
extension query language would ability describe sources using procedural
construct if then else  construct needed describe behaviour sources
certain inputs  example  consider yahoogeocoder section        takes
input tuple containing street name  number  zipcode  geocoder unable
locate corresponding address database  because doesnt exist   instead
returning tuples  returns centroid zipcode  describing behavior
possible using procedural constructs 

acknowledgments
research based upon work supported part defense advanced research
projects agency  darpa   department interior  nbc  acquisition services division  contract no  nbchd        u s  government authorized
reproduce distribute reports governmental purposes notwithstanding copyright annotation thereon  views conclusions contained herein
authors interpreted necessarily representing official policies
endorsements  either expressed implied  organizations person
connected them 

references
afrati  f  n   li  c     mitra  p          containment conjunctive queries using arithmetic comparisions   th international conference extending database technology  edbt       heraklion crete  greece 
  

ficarman   knoblock

arens  y   knoblock  c  a     shen  w  m          query reformulation dynamic
information integration  journal intelligent information systems   special issue
intelligent information integration                 
berners lee  t   hendler  j     lassila  o          semantic web  scientific american 
              
bilenko  m   mooney  r  j   cohen  w  w   ravikumar  p     fienberg  s  e         
adaptive name matching information integration   ieee intelligent systems         
     
cameron jones  r  m     quinlan  j  r          efficient top down induction logic
programs  sigart bulletin              
carman  m  j     knoblock  c  a          learning semantic descriptions web information sources  proceedings twentieth international joint conference
artificial intelligence  ijcai     hyderabad  india 
chandra  a  k     merlin  p  m          optimal implementation conjunctive queries
relational data bases  proceedings  th acm symposium theory
computing  stoc   pp       boulder  colorado 
dhamanka  r   lee  y   doan  a   halevy  a     domingos  p          imap  discovering
complex semantic matches database schemas  sigmod     proceedings
     acm sigmod international conference management data 
dong  x   halevy  a  y   madhavan  j   nemes  e     zhang  j          simlarity search
web services  proceedings vldb 
duschka  o  m          query planning optimization information integration  ph d 
thesis  department computer science  stanford university 
garcia molina  h   hammer  j   ireland  k   papakonstantinou  y   ullman  j     widom 
j          integrating accessing heterogeneous information sources tsimmis 
proceedings aaai symposium information gathering  pp        
he  a     kushmerick  n          learning attach semantic metadata web services 
 nd international semantic web conference  iswc  
he  a     kushmerick  n          iterative ensemble classification relational data 
case study semantic web services    th european conference machine
learning  ecml      pisa  italy  springer 
knoblock  c  a   minton  s   ambite  j  l   ashish  n   muslea  i   philpot  a     tejada 
s          ariadne approach web based information integration  international
journal cooperative information systems                   
lerman  k   plangprasopchok  a     knoblock  c  a          automatically labeling data
used web services  proceedings   st national conference artificial
intelligence  aaai  
  

filearning semantic definitions information sources internet

levy  a  y          logic based techniques data integration  minker  j   ed    logicbased artificial intelligence  kluwer publishers 
levy  a  y   mendelzon  a  o   sagiv  y     srivastava  d          answering queries using
views  proceedings   th acm sigact sigmod sigart symposium
principles database systems  pp        san jose  calif 
markov  z     marinchev  i          metric based inductive learning using semantic height
functions  proceedings   th european conference machine learning
 ecml        springer 
martin  d   paolucci  m   mcilraith  s   burstein  m   mcdermott  d   mcguinness  d  
parsia  b   payne  t   sabou  m   solanki  m   srinivasan  n     sycara  k         
bringing semantics web services  owl s approach  proceedings first
international workshop semantic web services web process composition
 swswpc       
muggleton  s     feng  c          efficient induction logic programs  proceedings
 st conference algorithmic learning theory 
muggleton  s          inverse entailment progol  new generation computing  special
issue inductive logic programming                   
nedellec  c   rouveirol  c   ade  h   bergadano  f     tausend  b          declarative
bias ilp  de raedt  l   ed    advances inductive logic programming  pp 
       ios press 
pazzani  m  j     kibler  d  f          utility knowledge inductive learning 
machine learning          
perkowitz  m     etzioni  o          category translation  learning understand information internet  proceedings fourteenth international joint conference
artificial intelligence  ijcai     
perkowitz  m   doorenbos  r  b   etzioni  o     weld  d  s          learning understand information internet  example based approach  journal intelligent
information systems                
pottinger  r     halevy  a  y          minicon  scalable algorithm answering queries
using views  vldb journal           
quinlan  j  r     cameron jones  r  m          foil  midterm report  machine
learning  ecml     european conference machine learning  proceedings  vol 
     pp       springer verlag 
rahm  e     bernstein  p          survey approaches automatic schema matching 
vldb journal         
richards  b  l     mooney  r  j          learning relations pathfinding  national
conference artificial intelligence  pp       
  

ficarman   knoblock

roman  d   keller  u   lausen  h   de bruijn  j   lara  r   stollberg  m   polleres  a  
feier  c   bussler  c     fensel  d          web service modeling ontology  applied
ontology               
ullman  j  d          principles database knowledge base systems  vol     computer science press  rockville  maryland 
weber  i   tausend  b     stahl  i          language series revisited  complexity
hypothesis spaces ilp  proceedings  th european conference machine
learning  vol       pp          springer verlag 
widom  j          research problems data warehousing  cikm     proceedings
fourth international conference information knowledge management  pp 
      acm press 
wiederhold  g          mediators architecture future information systems  computer               
wiederhold  g   ed            intelligent integration information  kluwer academic
publishers  boston ma 
winkler  w          state record linkage current research problems  tech  rep  
statistical research division  u s  bureau census  washington  dc 
yan  l  l   miller  r  j   haas  l  m     fagin  r          data driven understanding
refinement schema mappings  sigmod     proceedings      acm
sigmod international conference management data 
zelle  j  m   thompson  c  a   califf  m  e     mooney  r  j          inducing logic
programs without explicit negative examples  proceedings fifth international
workshop inductive logic programming 

  


