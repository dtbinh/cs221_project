journal of artificial intelligence research                  

submitted        published      

on the semantics of logic programs with preferences
sergio greco

greco deis unical it

deis  universita della calabria
via p  bucci        rende   italy

irina trubitsyna

irina deis unical it

deis  universita della calabria
via p  bucci        rende   italy

ester zumpano

zumpano deis unical it

deis  universita della calabria
via p  bucci        rende   italy

abstract
this work is a contribution to prioritized reasoning in logic programming in the presence
of preference relations involving atoms  the technique  providing a new interpretation for
prioritized logic programs  is inspired by the semantics of prioritized logic programming
and enriched with the use of structural information of preference of answer set optimization programming  specifically  the analysis of the logic program is carried out together
with the analysis of preferences in order to determine the choice order and the sets of
comparable models  the new semantics is compared with other approaches known in the
literature and complexity analysis is also performed  showing that  with respect to other
similar approaches previously proposed  the complexity of computing preferred stable models does not increase 

   introduction
the increased interest in preferences is witnessed by an extensive number of proposals and
systems for preference handling  grell  konczak    schaub        van nieuwenborgh  
vermeir        wakaki  inoue  sakama    nitta               the literature distinguishes
static from dynamic preferences  static preferences are fixed at the time a theory is specified  i e  they are external to the logic program  whereas dynamic preferences appear
within the logic program and are determined on the fly  the most common form of
preference consists in specifying preference conditions among rules  brewka        brewka
  eiter              delgrande  schaub    tompits      a      b        gelfond   son 
      schauba   wang        van nieuwenborgh   vermeir              wang  zhou   
lin        zhang   foo         whereas  some recent proposals admit the expression of
preference relations among atoms  brewka  niemela    truszczynski        brewka       
sakama   inoue        wakaki et al          more sophisticated forms of preferences also
allow the specification of priorities between conjunctions  disjunctions  of literals  brewka
et al         delgrande et al       a  sakama   inoue        and numerical penalties for
suboptimal options  brewka        
this work is a contribution to prioritized reasoning in logic programming in the presence
of preference conditions involving atoms  in particular  priorities are applied by following
the natural ordering defined by dependencies  as proposed in the answer set optimizac
    
ai access foundation  all rights reserved 

figreco  trubitsyna    zumpano

tion  aso  semantics  brewka et al          and the comparison strategy  proposed in the
preferred stable model  psm  semantics  sakama   inoue         is reviewed by also introducing the concept of comparable models  the next example describes the intuition at
the basis of the proposed approach 
example   the following prioritized program hp       i  inspired by a program presented
by brewka et al          describes different menus and the preferences among drinks and
desserts 
p   

fish  beef 
red  white 
pie  ice cream 
 fish  white
 beef  pie
 fish  ice cream

   

     white   red  fish
     red   white  beef
     pie   ice cream  red

the symbol  denotes exclusive disjunction  i e  if the body of the rule is true exactly
one atom in the head is true  whereas a rule with empty head defines a constraint  i e  a
rule which is satisfied only if the body is false  the first three rules of p   select the main
dish  the drink and the dessert  the last three rules are constraints and state that a feasible
solution cannot contain i  fish and white or ii  beef and pie or iii  fish and ice cream 
prioritized rules in   introduce preferences among drinks            and desserts       
the program p   has three stable models  m     fish  red  pie   m     beef  white 
ice cream  and m     beef  red  ice cream   the psm returns m  as the unique preferred model  whereas the aso technique  following the natural ordering of preference rules
    and    precede       derives that m  is the unique solution  thus  the two approaches
provide different results 
 
the structure of preference rules in the above example suggests that i  fish and beef are
alternative options for the main dish and ii  the choice of drink depends on the selected main
dish and precedes the choice of dessert  the second conclusion is based on the observation
that    and    provide opposite valuations of the choice of drink and they define two different
classes of models  menus   which should be considered separately  in other words  the model
m   associated with the menu containing fish  should not be compared with the models
m  and m   associated with the menus containing beef   consequently  both m  and m 
should be preferred 
observe that in the above example the psm semantics derives that m  is the preferred
model as m  is preferable to m   due to the presence of rule       m  is preferable to m 
 due to the presence of rule      and  transitively  that m  is also preferable to m    it is
worth noting that the use of the transitive closure makes the comparison of models much
more complex as two models cannot be compared directly  on the other hand the aso
semantics is sensitive to syntactic changes of programs  this fact is illustrated by means of
the following example 
example   consider the prioritized program hp      i  an extension of the prioritized program defined in example   
   

fion the semantics of logic programs with preferences

p   

fish  beef 
red  white  beer 
pie  ice cream 
 fish  white
 beef  pie
 fish  ice cream
 beer

   

 b    beer   white   red  fish
 b    beer   red   white  beef
 b    pie   ice cream  red

this program is equivalent to the one reported in example   as  even if it contains an additional choice  beer   this option is not feasible  for the presence of the constraint  beer 
the set of stable models associated with the program p    coincides with those reported
for the program p   in example    and consists of  m     fish  red  pie   m     beef 
white  ice cream  and m     beef  red  ice cream   considering the set of preference
rules  note that both preferences regarding the choice of drink have beer as the best option 
but there is no stable model containing it  intuitively  as the two problems hp       i in example   and hp      i are equivalent they must have the same preferred models  the aso
semantics is sensitive to the program change and gives m  and m  as a solution  whereas 
for the equivalent program in example    the returned preferred model is m  only  no
change occurs in the set of preferred models for the psm semantics 
 
thus  in this paper we present a new semantics  inspired by the psm and aso semantics  which seems to better capture the intuitive meaning of programs and avoids the above
mentioned problems 
    contribution
the paper provides a new semantics for prioritized logic programs enriching the one proposed by sakama and inoue        with additional information gained from the structure
of preference rules as proposed by brewka et al          in particular  the new semantics
uses different preference relations among stable models and introduces a natural ordering
among preferences that fixes the order of choices  on the basis of the stratification of the
preference program  each decision is determined by the set of choices belonging to the
corresponding level and provides the subset of models given in input as solution  once a
decision is made  this output subset becomes the input set of the following decision and so
on  the proposed semantics drives the decision making process taking into account catching
additional information regarding non comparable sets of models so partitioning the set of
models of the program by looking at their alternative decisions  to this end the concept of
incomparability  not taken into account by previous approaches  is introduced 
the paper presents a detailed comparison of the approaches dealing with preference
relations among atoms  particular attention is devoted to the psm and the aso semantics 
the analysis of the complexity of computing preferred answer sets is also performed  showing
that  w r t  previous proposals  such as the psm and the aso semantics  the complexity
of computing preferred stable models does not increase 
   

figreco  trubitsyna    zumpano

    plan of the paper
the rest of the paper is organized as follows  in section   preliminaries on disjunctive
and abductive logic programs  prioritized logic programs and answer set optimization
semantics are given  in section   a new interpretation for prioritized logic programs is
presented  in section   complexity results are provided  in section   a comparison of the
presented semantics with the psm and aso semantics is performed  and other approaches 
known in the literature  are briefly described  finally  section   outlines our conclusions 

   preliminaries
we assume familiarity with relational database theory  disjunctive logic programs  disjunctive deductive databases   disjunctive  stable model semantics and computational complexity  eiter  gottlob    mannila      b  gelfond   lifschitz              papadimitriou 
      
    background
a  disjunctive  logic program is a finite set of rules r of the form a       ak  b         bm  
not c         not cn with k   m   n      where a         ak   b         bm   c         cn are atoms  the
disjunction a       ak   denoted by head r   is called head of r  while the conjunction
b         bm   not c         not cn   denoted by body r   is called body of r 
the herbrand universe up of a program p is the set of all constants appearing in p    
and its herbrand base bp is the set of all ground atoms constructed from the predicates
appearing in p and the constants from up   a term  resp  an atom  a rule or a program  is
ground if no variables occur in it  a rule r  is a ground instance of a rule r  if r  is obtained
from r by replacing every variable in r with some constant in up   ground p  denotes the
set of all ground instances of the rules in p 
the intuitive meaning of the previous disjunctive rule is that if body r  is true  i e 
b         bm are true and c         cn are false  then head r  must be true  i e at least one of
a         ak has to be true  otherwise r is not satisfied   rules with empty head  called denials
or constraints  will be used to define constraints and are satisfied only if the body is false  in
this paper exclusive disjunction  denoted by   is used in the head  the statement head r   
a        ak is true  if exactly one of a         ak is true  i e  a disjunctive rule of the form
a       ak  body is a shorthand for the rule a       ak  body and  k   k       
constraints of the form  ai   aj   body with    i   j  k  the solution of a logic program p
is given in terms of stable model  answer set  semantics  gelfond   lifschitz              
an interpretation m for p is a model of p if m satisfies all rules in ground p   the
minimal model semantics  defined for positive p  assigns to p the set of its minimal models
mm p   where a model m for p is minimal  if no proper subset of m is a model for p
 minker         the more general disjunctive stable model semantics also applies to programs with  unstratified  negation  gelfond   lifschitz         disjunctive stable model
semantics generalizes stable model semantics  previously defined for normal programs  gelfond   lifschitz         for any interpretation m   denote with p m the ground positive
program derived from ground p  by i  removing all rules that contain a negated atom
   we are considering function free programs 

   

fion the semantics of logic programs with preferences

not a in the body and a  m   and ii  removing all negated atoms from the remaining rules 
an interpretation m is a  disjunctive  stable model of p if and only if m  mm p m   
for general p  the stable model semantics assigns to p the set sm p  of its stable models  it is well known that stable models are minimal models  i e  sm p   mm p  
and that for negation free programs  minimal and stable model semantics coincide  i e 
sm p    mm p   
    extended and abductive programs
given an atom p t   a literal is either p t  or its strong negation p t   an extended
program is a program where atoms are replaced by literals  the semantics of extended
disjunctive programs can also be given in terms of stable models by considering p and p as
different predicate symbols and considering the implicit constraint  p x   p x   gelfond
  lifschitz        
abductive logic programming is an extension of logic programming to perform abductive
reasoning  kakas  kowalski    toni        inoue   sakama         an abductive program
 alp  is a pair hp  ai  where p is an extended program and a is a set of literals called
abducibles  hp  ai can be represented by means of an extended program    p   g t  
g    t     g t   a    g    t   not g t    g t   a  
let  be an alp and g a ground atom denoting an observation  then  a set s  a is an
explanation of g iff there is a stable model m of  such that s   m a and g  m   a stable
model m is a minimal if there is no stable model n such that n  a  m  a  moreover 
s is a minimal explanation  i e  there is no explanation s    s  of g iff     not g  has
a consistent a minimal stable model m such that s   m  a  inoue   sakama        
it has been shown that given an alp p and a ground atom g denoting an observation 
deciding whether there exists a a minimal explanation s for g is p   complete  eiter 
gottlob    leone      a  
the rest of this section will briefly review the two main approaches for prioritizing reasoning we refer to  i e  prioritized logic programs and answer set optimization  proposed 
respectively  by sakama and inoue        and brewka et al         
    prioritized logic programs
a  partial  preference relation  among atoms is defined as follows  given two atoms e 
and e    the statement e   e   called priority  means that e  has higher priority than e   
moreover  if e   e  and e   e    then e   e    a priority statement e   e  states that for
each a  instance of e  and for each a  instance of e  the preference relation a   a  holds 
a prioritized logic program  plp  is a pair hp  i where p is a disjunctive program and 
is a set of priorities   denotes the set of priorities which can be reflexively or transitively
derived from  
the statement e   e  stands for e   e  and e    e    clearly  if e   e    the sets of
ground instantiations of e  and e  have an empty intersection 
definition   given a prioritized logic program hp  i  the relation w is defined over the
stable models of p as follows  for any stable models m    m  and m  of p 
   

figreco  trubitsyna    zumpano

   m  w m   
   m  w m  if e   m   m    e   m   m  such that  e   e      and   e  
m   m  such that  e   e       
   if m  w m  and m  w m    then m  w m   
if m  w m  then m  is preferable to m    moreover  if m  w m  and m   w m  then
m    m   
 
an interpretation m is a preferred stable model of hp  i if m is a stable model of p and
n w m implies m w n for any stable model n  equivalently  if there is no interpretation n
which is a stable model of p and n   m    the set of preferred stable models of hp  i will
be denoted by psm hp  i   note that the relation      between two plps hp    i
and hp    i does not imply psm hp    i   psm hp    i  
in plp priority relations are used to express priorities over atoms  whereas priorities over
more general forms of knowledge  conjunctive  disjunctive knowledge  rules  preconditions 
can be expressed by a simple rewriting of the preference program  for instance  a preference
rule with precondition of the form  e   e     b is expressed in plp as e    e     where
e    e    b and e    e    b 
the semantics of prioritized programs proposed by sakama and inoue        will be
denoted by psm semantics  a sound and complete procedure that allows preferred answer
sets for a plp program to be computed using a generate and test algorithm has been
proposed by wakaki et al          this algorithm translates a plp program hp  i and
any answer set s of the program p into a single logic program t  p    s   such that its
answer sets are answer sets of p preferable to s  more details can be found in works
presenting the semantics and the implementation  sakama   inoue        wakaki et al  
      
the complexity of answering queries over plp programs is at least one level above
the complexity of answering queries over standard programs  without preferences   in
particular  let hp  i be a prioritized logic program  then i  deciding the existence of a
preferred stable model is p   hard  ii  deciding whether an atom is true in some  resp  all 
preferable stable model of hp  i is p   hard  resp  p   hard   it is worth noting that in the
original work  sakama   inoue        it has been claimed that the complexity is exactly one
level above the complexity of standard programs  but the proof does not take into account
the transitivity property of the preference relation 
    answer set optimization
an answer set optimization program  denoted as aso program  is a pair hp  i  where p is
a disjunctive program  called generating program  and  is a preference program consisting
of a finite set of rules of the form  a         ak  b         bm   not c         not cn where bi s and cj s
are literals and ai s are boolean combinations  of literals  here a literal is either an atom l or
its  strong  negation l   determines a preference ordering on the answer sets described
by the generating program p 
   a boolean combination is a formula built of atoms by means of disjunctions  conjunctions  and default
negation 

   

fion the semantics of logic programs with preferences

definition   let hp  i be an aso program where                n   and s be an answer
set of p  then s induces a satisfaction vector vs    vs             vs   n    where 
 vs   j     i  if  j is irrelevant to s  i e  i  the body of  j is not satisfied in s or ii  the
body of  j is satisfied  but none of the atoms in the head of  j is satisfied in s 
 vs   j     min i   s    ai  j   a         ak  b        bm   not c        not cn    otherwise   
in the comparison of models it is assumed that i is equal to    i e   vs   j     i is
equivalent to vs   j        
definition   let s  and s  be two answer sets  then i  vs   vs  if vs    i    vs    i   for
every i      n   ii  vs    vs  if vs   vs  and for some i      n  vs    i     vs    i    in these
cases s  w s  and s    s      respectively 
a set of literals s is an optimal model of an aso program hp  i if s is an answer set
of p and there is no answer set s   of p such that s     s 
 
the complexity of aso programs depends on the class of generating programs  for
disjunctive programs the complexity of answering queries over aso programs is exactly
one level above the complexity of answering queries over standard programs  without preferences   i e  i  deciding the existence of a preferred stable model is p   complete  ii  deciding
whether a literal is true in some  resp  all  preferable stable model of hp  i is p   complete
 resp  p   complete  
the strategy is further extended by introducing meta preferences among preference
rules  a ranked aso program is a sequence hp           n i consisting of a generating program
p and a sequence of pairwise disjoint preference programs i   the rank of a rule   
       n   denoted rank     is the unique integer i for which    i   given two answer
sets s  and s    s  wrank s  if for every preference rule    such that vs         vs        does
not hold  there is a rule     such that rank         rank      and vs           vs         
moreover  a procedure deriving the natural ordering of the preference rules is introduced 
firstly  given a preference program   its dependency graph g   is defined  the atoms
appearing in  form the vertex set of g    there is a directed edge from a vertex b to a
vertex a in g   if there is a rule   in  such that a appears in the head of r and b appears
in the body of r  if the graph g   is acyclic  there is a natural ranking of its atoms which
can be defined recursively as follows  rank a      for every atom a that has no predecessors
in g    otherwise rank a  is the maximum of the ranks of all predecessors of a in g  
incremented by    the rank of a preference rule   is then defined as the maximum rank of
atoms in its head 
the standard semantics of aso programs  where priorities are examined all together 
will be denoted as aso semantics  the alternative semantics  where priorities are divided
into strata following the natural order  will be denoted by raso  ranked aso  semantics 
   in the original work  brewka et al         the symbols  and   are used instead of w and   

   

figreco  trubitsyna    zumpano

   preferred answer sets
in this paper a syntax similar to the one proposed by brewka et al         is used  given
two atoms a  and a    the statement a    a  means that a  has higher priority than a    a
 partial  preference relation   among atoms is defined as follows 
definition   a prioritized program  is a pair hp  i where p is a disjunctive program
and  is set of preference rules of the form 
a    a         ak  b         bm   not c         not cn
where k     and a         ak   b         bm   c         cn are atoms 

   
 

in the following the head and body of a preference rule   will be denoted by head   
and body     respectively  a ground prioritized program  denoted by ground hp  i   
hground p   ground  i is a prioritized program  where each rule r   p    with variables
is replaced with the set of its ground instances  i e the set of rules obtained by replacing
variables with constants 
intuitively  a preference rule   of the form     describes the choice among a         ak
 choice options  under the condition specified by the body of    the head of   introduces
the preference order among atoms  ai is preferred to aj for    i   j  k  as   can be
applied only if body    is true  the body of   specifies the decisions which have to precede
this choice  for instance  a   c  b states that if b is true  then a is preferred to c  a
preference rule with exactly two atoms in the head will be called binary preference rule 
whereas preference rules with empty bodies will be called preference facts  a prioritized
program is said to be in binary form if all its preference rules are binary 
the following example  presenting a classical program proposed by brewka et al         
will be used as running example 
example   consider the prioritized program hp       i whose stable models define the
menus of a restaurant 
p   

fish  beef 
red  white  beer 
pie  ice cream 
 beef  pie
 fish  ice cream

   

  
  
  
  

 
 
 
 

white   red   beer  fish
red   white  beef
beer   white  beef
pie   ice cream  beer

the first three rules of p   select the main dish  the drink and the dessert  the constraints
state that a feasible solution cannot contain both beef and pie or both fish and ice cream 
while the rules in   introduce preferences among drinks and desserts 
the program p   has six stable models 
m     fish  white  pie 
m     fish  red  pie 
m     fish  beer  pie 

m     beef  white  ice cream 
m     beef  red  ice cream 
m     beef  beer  ice cream 

both techniques proposed by sakama and inoue        and brewka et al         select
the stable models m  and m  as preferred ones  but the motivation is different  indeed 
the psm semantics states that m  w m  w m  w m  w m  and m  w m    whereas the
   

fion the semantics of logic programs with preferences

 r aso semantics states that mi w m  w m    mi w m  and mi w m  for i          i e  in
the  r aso semantics the models m  and m  are compared directly  whereas in the psm
semantics the models m  and m  are compared transitively 
 
before presenting the formal semantics of programs  some preliminary definitions are
needed  a preference rule of the form a    a         ak  body is shorthand for the k   
binary rules of the form ai   ai    body  with i      k     and the set of preferences
established by  is given by its transitive closure  defined as follows 
definition   given a prioritized program hp  i  the  ground  transitive closure of  is
       a   c  body    body    a   b  body     b   c  body     a    c  
where   is the set of binary preference rules derived from ground   
 
thus   is defined as the set of rules explicitly representing the preference relations
among choice options  in section   we will show that any ground prioritized program
   hp  i can be rewritten into an equivalent program    hp  i such that  contains
a number of rules which is polynomial in the size of  
the structure of prioritized programs can be examined in order to establish the precedence relation among choices made  for instance  the presence of the preference rule
a   c  b suggests that the selection of b precedes the choice between a and c and thus
establishes the precedence relation between  b  and  a  c   this idea was used by brewka
et al         for determining the natural ordering among preference rules  in more detail 
the relational order among atoms appearing in  was captured by means of the corresponding dependency graph g    and the stratification of preference rules was established by
considering their head atoms 
unfortunately  the natural ordering among the preference rules can be established only if
the corresponding dependency graph is acyclic  thus  the presence of two rules coffee  
tea  pie and pie   ice cream  coffee in  does not admit the stratification of  
as they introduce two mutually dependent choices 
the stratification algorithm proposed in this paper overcomes this problem by introducing the concept of collapsed graph  which maps to the same node the options of mutually
dependent choices 
given a  ground  prioritized program    hp  i  g    v  e  denotes the dependency
graph whose set of nodes consists of all atoms in p   whereas there is an arc from b to a
labeled   resp  p  if there is a rule in   resp  p  containing a in the head and b in the
body  resp  b in either the head or the body   as the body of  preference  facts is empty 
we assume that their bodies contain the built in atom true  so that every fact a  can be
c
considered as a rule a  true  g denotes the  acyclic  collapsed dependency graph derived
from g by replacing maximal sets of mutual dependent nodes  i e  nodes belonging to the
c
same cycle  with a unique node  clearly  each node in g is associated with a set of nodes
in g  
c

to each node in g it is possible to assign a level as follows 
c

 for each node a in g with input degree zero  level a      
   

figreco  trubitsyna    zumpano

c

 for each node a in g with input degree greater than zero 
c
c
level a    max max level b     b  z    in g    max level b   b  z  p  in g    
observe that the function level assigns to each node the maximum distance from some
node with input degree zero  the following definition introduces the concept of stratification
for preference rules 
definition   stratification  given a  ground  prioritized program    hp  i   can be
partitioned into h                   n i subprograms  called strata  such that
c

 for each atom a in   level a    level a   where a is the node of g associated with a 
 for each rule   in    level      max  level a    a  body      
   i               level      i   consists of all ground preference rules associated
with the level i 
 
the partition of  into h                   n i is called stratification 
the above definition of stratification of preference rules establishes the order in which
preferences are applied by considering both p and   moreover  the assignment of the level
to each rule differs from the one proposed by brewka et al         in two main aspects 
the level of atoms is defined by analyzing the collapsed dependency graph and the level
of rules is established by considering body atoms instead of head atoms  a more detailed
comparison of the two approaches will be presented in section   
example   consider the prioritized program hp       i of example    the transitive closure
  consists of the binary preference rules        white   red  fish         red   beer 
fish and        white   beer  fish  derived from      and the rules         and        can
be stratified into the two strata                                         and               
 
the structural analysis performed in our approach goes beyond the stratification process
and tries to understand the comparability of models  to this end the concepts of conflicting
preferences and comparable models are introduced 
two ground  binary  preferences of the form a   b  body  and b   a  body 
are said to be conflicting  for instance  the preferences      white   red  fish and
     red   white  beef of example   are conflicting  whereas the preferences    and
      red   water  beef are not  a set of preferences  is said to be conflicting if 
contains two conflicting preference rules 
the intuition on the basis of our approach is clarified in this example  suppose there
are two conflicting preferences      a   b  c and      b   a  d  the two conflicting
preferences    and    specify the preference between a and b in two different sets of models 
having a or b  characterized by the presence of c and d  respectively  thus  c and d   and
atoms on which c and d depend  define the alternative decisions  once a decision has been
made  the associated solutions  models  are no longer comparable 
a preference rule   is said to be relevant for a stable model m   if   can be used
to compare m with other stable models  that is if m    body   and some of its head
   

fion the semantics of logic programs with preferences

atoms belongs to m   given a prioritized program hp  i and a  ground  preference rule
    a   b  body     the set of stable models  for which   is relevant  is sm p      
 m   m  sm p   m    body   a  b   
definition   comparable models  let hp  i be a prioritized program  m  and m  two
stable models for p and h             n i be a stratification of    then
   m  and m  are comparable on      
   m  and m  are comparable on   i      for i      n   if
 a  they are comparable on   i   and
 b  there do not exist two conflicting preference rules            i  such that
m   sm p       sm p      and m   sm p       sm p      
 
observe that  the second condition in the previous definition of comparable models
states that the presence of two conflicting preference rules in a given level i identifies two
sets of models  for which only one of the two conflicting rules is relevant  two models 
appearing in the different sets have to be considered separately in the next levels  in other
words  two stable models m  and m    having as relevant preferences the conflicting rules
     a   b  body  and      b   a  body  in a given level i  are not comparable at levels
greater than i  if m   sm p       sm p      and m   sm p       sm p       that is
m     body    a  b   not body  and m     body    a  b   not body   
example   consider the stable models m     fish  beer  pie   m     beef  beer 
ice cream   and the set of preference rules   of example    the stable models m 
and m  are comparable on       by definition  while they are not comparable on       
because      is relevant only for m   as m     fish   white  beer   not beef      is
relevant only for m   as m     beef   white  beer   not fish   and these conflicting
preferences belong to       
 
fact   let hp  i be a prioritized program without conflicting preferences and h     
             n i be the stratification of    then  any two models m  and m  are comparable
on   i   i      n  
 
proof  the proof of the above fact follows directly from definition   

 

on the basis of definition   the declarative semantics of prioritized logic programs can
now be provided  this new semantics  denoted with pas  preferred answer sets   is given
by preferred stable models as follows 
definition   preference between answer sets  given a prioritized program hp  i  the
relation w is defined over the stable models of p as follows  for any pair of stable models
m  and m  of p  being h                   n i be the stratification of    m  w m  if
         e    e     body     i  such that e   m   m    e   m   m    such that
m  and m  are comparable on   i   and    is relevant for m  and m    and
   

figreco  trubitsyna    zumpano

           e    e     body     j   such that j   i  e   m   m    e   m   m  and
   is relevant for m  and m   
moreover  m  is strictly preferable to m   m    m    if m  w m  and m   w m   

 

note also that the relation   could be defined directly by replacing the condition j   i
with j  i in item   of the above definition 
definition   preferred answer sets  an interpretation m is a preferred stable model for
a prioritized program hp  i if m is a stable model of p and there does not exist a stable
model n such that n   m   the set of preferred stable models for hp  i will be denoted
by pas hp  i  
 
note that definition   introduces preferences between pairs of models by also considering
additional information gained from the structure of preference rules 
example   consider the prioritized program hp      i of example   and the stratification
h            i presented in example    we have that
 all models are comparable on      by definition and
 owing to                      m    m    m   
 owing to           m    m  and m    m   
 as      and    are conflicting  models m  and m    for which      is relevant  cannot
be compared in      with models m  and m    for which    is relevant 
therefore  as discussed in example    m  and m  are not comparable on       and 
consequently  the preferred models are  m    m  and m   
 
in the previous example the stable model m  is considered as good as m  because both
have beef as main dish  the best choice of drink  red wine and beer  respectively  and the
same dessert  ice cream   observe that both aso and psm semantics discard m    as
already stated  the aso semantics deduces that m  and m  are preferable to m  owing to
     while the psm semantics states that m  is preferable to m  and m  is preferable to
m    owing to          
b  i
example   let hp       i be the program of example    consider the program hp     
b   is derived from   by replacing    with
where 

      pie   ice cream 
b                                             
the new ground preference program has the unique level 
 
 
where             and      are derived from      as shown in example    due to       the following relations also hold  mi   mj for i            and j             therefore  m  is the
unique preferred model  the same result is obtained by both psm and aso semantics   
   

fion the semantics of logic programs with preferences

   complexity
this section provides some results concerning the computational complexity of computing
preferred stable models and answering queries under pas semantics  we consider here data
complexity where the input domain up consists of the herbrand universe  we assume that
all constants occurring in  also occur in p   clearly  the size of the herbrand base bp as
well as the sizes of ground p  and ground   are polynomial in the size of up  
the following results demonstrate that allowing preferences among atoms in the semantics proposed here increases the complexity and expressivity of the language by one level
in the polynomial hierarchy  thus the use of additional information does not increase the
computational complexity of the proposed approach with respect to the above mentioned
techniques  brewka et al         sakama   inoue        
proposition   let    hp  i be a prioritized program  then there exists a program   
hp  i equivalent to hground p    i such that i  the stratification of  can be computed in
polynomial time  and ii  hp  i can be derived from hground p    i in polynomial time 
proof  we start by considering the program     hground p     i  where   is the binary
c
ground version of   the size of the graphs g  and g  is polynomial in the size of  
c
and can be computed in polynomial time  as the assignment of levels to nodes in g  can
be done in polynomial time  the assignment of levels to atoms and rules in   can also be
done in polynomial time 
let h               n i be the stratification of     we generate a new ground prioritized
program hp  i which is equivalent to hground p    i and such that the size of  is polynomial in the size of    
initially  assign to each ground atom ai appearing in the head of a preference rule in  
a unique index i  let a         ap be the  indexed  atoms appearing in the head of rules in    
p denotes the program ground p   p  where
p     b i  j  l   bodyi j   ai   aj  bodyi j     l    
 b i  j  l   b i  k  l    b k  j  l    l   max l   l     i  j  k      p   l    l       n  
and b is a new predicate symbol  then   denotes the new set of ground preference rules
defined as follows 
    ai   aj  b i  j  l    i  j      p   l      n   
the stratification of  is obtained by associating to each stratum l the preference rules
whose body atom has the value of the level attribute equal to l  that is  l     ai   aj 
b i  j  l    ai   aj  b i  j  l     
in order to show the equivalence between hground p    i and hp  i  observe that the
set of stable models of ground p  and p are equivalent  i e  for each m  sm p  there
is a stable model n  sm ground p   such that n   m   b i  j  l    b i  j  l   m  
and for each n  sm ground p   there is a stable model m  sm p  such that n  
m   b i  j  l    b i  j  l   m    as the rules in ground p  do not contain atoms of the form
b i  j  l  in their bodies 
   

figreco  trubitsyna    zumpano

moreover  let n be a stable model of ground p  and m be the corresponding stable
model of p  n  m    for each ground preference rule ai   aj  bodyi j in   l  whose
body is true in n   there is a ground rule ai   aj  b i  j  l  in  l  whose body is also true
in m and vice versa  therefore the two sets  l  and   l  are equivalent  for all l      n  
clearly  the program hp  i is derived from hground p    i in polynomial time 
 
in the following  for the sake of simplicity of presentation  we continue to refer to the
program hp  i and to the stratification of   
proposition   let hp  i be a prioritized program  m  and m  two stable models for p 
and h                   n i a stratification of    the problem of checking whether  for a
given k  n  m  and m  are comparable on              k  can be solved in polynomial time 
proof  obviously m  and m  are comparable in       assuming that m  and m  are
comparable for a given level j   k  m  and m  are comparable for the level j     if there
are no two conflicting preference rules     a   b  body  and     b   a  body  in   j 
such that m     body    a  b   not body  and m     body    a  b   not body    this check
can be done in polynomial time as the number of rules in   j  is polynomial in the size of
up   moreover  as the maximum value of k is bounded by the size of   which is bounded
by the set of atoms in bp    the global complexity is also polynomial 
 
corollary   let hp  i be a prioritized program  m  and m  two interpretations for p 
the problem of checking whether m    m  can be solved in polynomial time 
proof  straightforward from definition   and proposition   

 

lemma   let hp  i be a prioritized program and m an interpretation for p  the problem
of deciding whether m is a preferred stable model for hp  i is in p   
proof  consider the complementary problem of deciding whether m is not a preferred
stable model for hp  i  in such a case it is sufficient to first check if m is a stable model 
if m is a stable model it is sufficient to guess an interpretation n and to check that i  n
is a stable model for p and ii  n   m   the check on part i   as well as the check that
m is a stable model  can be done by means of a n p oracle as the problem of deciding
whether an interpretation is a stable model for a disjunctive program is con p complete 
whereas the check on part ii  can be done in polynomial time  see corollary     therefore 
the complexity of the complementary problem is n p n p and  consequently  the complexity
of the original problem is con p n p  
 
theorem   let hp  i be a prioritized program  then
   deciding whether a ground atom g is true in some preferred stable models of hp  i
is p   complete 
   deciding whether a ground atom g is true in all preferred stable models of hp  i is
p   complete 
   

fion the semantics of logic programs with preferences

proof  membership  we first demonstrate that deciding whether g is true in some
preferred stable model of hp  i is in p    this result suffices to prove that the complementary problem  consisting in deciding whether a is true in all preferred stable models  is
p   complete 
to show the membership it is sufficient to guess an interpretation m containing g and
to check whether m is a preferred stable model  from lemma   the problem of deciding
whether m is a preferred stable model is in p  and can be solved by means of a p 
oracle 
therefore  deciding whether there exists a preferred stable model containing g is in
p 
n p   p   
hardness  given an abductive logic program consisting of a disjunctive program p and a
set of abducibles  positive  atoms a  the ground abductive logic program derived prom p
and a is
   ground p     g    t   not g t    g t   ground a   
   g    t   g t     g t   ground a   
let
     g    t    g t     g t   ground a   
h  i denotes the prioritized program derived from p and a 
for any two stable models m  n  sm    m w n with respect to  means that
a preference p   u    p u     such that p   u   m and p u   n exists and no
preference q    v    q v     such that q    v   n and q v   m exists  this implies
that m  ground a   n  ground a  and  consequently  that preferred stable models are
a minimal 
therefore  the problem of deciding whether h  i has an a minimal explanation for a
goal g is equivalent to deciding whether h  i has a preferred stable model containing g 
consequently  as the problem of deciding whether a a minimal explanation s for g exists
is p   complete  the problem of deciding whether a preferred stable model m for h  i
containing g exits is also p   hard  whereas the problem of deciding whether all preferred
 
stable models of hp  i contain g is p   hard 
corollary   let hp  i be a disjunction free  prioritized program  then deciding
whether a ground atom is true in some  all  preferred stable models of hp  i is p   complete
 p   complete  
proof  the complexity is one level lower as the problem of deciding whether an interpretation m is a stable model for a disjunction free program is polynomial 
 

   analysis and comparison
this section compares the semantics introduced here with the psm and  r aso semantics
and briefly discusses other recently proposed semantics 
the psm semantics is very elegant and compares pairs of models on the basis of their
common preferences and not on the basis of their degree of satisfaction  it does not consider the natural ordering between preference rules and  in some cases  as in example  
and    compares  and consequently discards  models which in the pas approach are not
   

figreco  trubitsyna    zumpano

comparable  an interesting feature of the psm technique is the application of transitive
property in order to derive additional preference relations among problem solutions so that
new  not immediately visible  preference relations are captured  however  as the test of the
transitive property cannot be performed by a direct comparison of two models  this lies in
a more complex implementation 
the  r aso technique is a very powerful tool as it determines the preferred models
by evaluating the degree of satisfaction of all preference rules  thus  it compares two
models even in the absence of common preferences  and the preference relation between
the two models can be established directly  in more detail  the raso technique considers
the structure of preference rules by associating a degree of satisfaction to choice options
and introduces a natural ordering among preferences  as in the case of psm semantics 
the  r aso semantics also compares and  consequently  discards models which are not
comparable using the pas technique  for instance  for the program hp      i  presented in
the introduction  raso discards m    having the second best option of drink  even if this is
the unique possible choice in the presence of fish 
more specifically  the preference relation w used in the psm approach is a preorder
relation as it is reflexive and transitive  it determines equivalent answer set classes and
establishes the partial preference order among the above mentioned classes  consequently
the preferred answer sets are those appearing in the preferred classes  it should be noted
that psm semantics requires the use of the transitive property in order to derive  on the
basis of relations obtained by the direct comparison of pairs of models  new preference
relations  on the contrary  the  r aso semantics uses a strict preference relation which
is just asymmetric and it does not require the application of the transitive property to
compare solutions 
the pas semantics  proposed here  compares two solutions on the basis of their common preferences by introducing the concept of comparable models and by considering a
refinement of the natural order among preference choices  thus  it can be seen as an extension of psm semantics that also uses additional information derived from the structure of
preference rules  but which instead of comparing models transitively  compares models by
considering the transitive closure of the  ground  preference rules 
a novelty of pas semantics is the consideration of the structural information of preference rules  it introduces the concept of comparable models in order to avoid comparing
models which  in our opinion  should not be compared as they are associated with alternative decisions  moreover  it proposes a refinement of the natural order among preferences in
order to define the order of choices  raso semantics establishes the relational order among
atoms appearing in  by means of the corresponding dependency graph g   and cannot
treat the case of mutually dependent choices  the stratification algorithm  proposed in
c
this paper  overcomes this problem by considering the collapsed graph g   which is acyclic
by construction and is not sensitive to syntactic changes  moreover  in raso semantics
the stratification of preference rules is established by considering their head atoms  whereas
in pas semantics levels are assigned to rules on the basis of the body atoms  following the
intuition that they describe the contexts of choices  thus  the stratification proposed here
always assigns preference facts to the first level because the level of a rule is fixed by looking
at the level of body atoms 
some of the advantages of the adopted approach are clarified by the following example 
   

fion the semantics of logic programs with preferences

example   the problem defined by means of the prioritized program hp      i consists in
selecting the colors of the trousers and the shirt  having only black or blue trousers  r   
and white  yellow or red shirts  r    available  the fashion consultant suggests that blue
trousers are better than black ones        a white shirt is better than a yellow shirt       
and in the case of black trousers a white shirt is preferred to a red one        moreover 
blue trousers do not go with a white shirt  c    and a red shirt does not go with blue
trousers  c    
p   

r 
r 
c 
c 

 
 
 
 

black  blue 
white  yellow  red 
 blue  white
 red  blue

   

     blue   black 
     white   yellow 
     white   red  black

the program p  has four stable models  m     black  white   m     black  yellow  
m     blue  yellow  and m     black  red   in order to define the stratification of
preference rules  both raso and pas semantics firstly assign the level to atoms  first level
to blue  black and yellow and second level to white and red  in the second step the
raso approach  by considering the maximum level of head atoms  assigns    to the first
level and    and    to the second level  whereas pas defines the level of preferences on the
basis of body atoms and assigns    and    to the first level and    to the second level  note
that in this case the order of    is relevant for determining the preferred models  in fact 
raso gives only m    while pas returns m  and m  as preferred models 
 
a formal comparison of the three semantics can be carried out only for the class of
programs where the specific definition of stratification is not significant  moreover  as
the psm semantics is defined only for prioritized programs hp  i where  consists only
of binary facts  preference rules are rewritten into preference facts   in the following the
comparison is carried out by considering programs whose preference rules consist of only
facts  for such a class of programs the closure  used in the psm and pas semantics
coincide 
given a prioritized program hp  i we denote with gsem    v  esem   a preference
graph on the stable models of p  where v   sm p  denotes the set of stable models
of p and esem denotes the preference relation   defined by the semantics sem 
 psm  aso  pas   in particular  esem consists of the arcs  mi   mj   such that mi   mj
holds in the sem semantics  therefore  the comparison of the different semantics can be
performed by analyzing the corresponding preference graphs  a stable model mi is preferred
under the sem semantics if there is no arc  mj   mi   in gsem  
the following example shows the relation between the psm and pas semantics 
example   consider the prioritized program hp       i below
p     fish  beef  pork  chicken 
white  fish
red  beef
beer  pork
water  chicken
   

    fish   beef 
chicken   pork 
red   white 
red   water 
beer   water 

figreco  trubitsyna    zumpano

the program has four stable models  m     fish  white   m     beef  red   m   
 pork  beer  and m     chicken  water   whereas the direct preference relations  for the
psm semantics  are as follows  m  w m    m  w m    m  w m    m  w m  and m  w m   
consequently  we have that the graph gpsm consists of four nodes  m    m    m  and
m    and four arcs  m    m    m    m    m    m  and m    m    therefore  the preferred
models are m  and m   
regarding the pas semantics  we have that only the relation m    m  holds and  thus 
there are three preferred stable models  namely m  and m  and m   
 
theorem   for any prioritized program hp  i such that  consists in preference facts 
psm hp  i   pas hp  i  
proof  consider the graphs gpsm    v  epsm   and gpas    v  epas    both graphs are
acyclic and epas  epsm   as the two graphs are acyclic  by adding edges which do not
create cycles  the number of nodes without incoming edges decreases  therefore  the set of
nodes without incoming edges in gpas contains all nodes without incoming edges in gpsm
and  consequently  psm hp  i   pas hp  i  
 
we now analyze the relation between aso and pas semantics  first of all note that 
as observed in the introduction  the aso semantics is sensitive to syntax changes  for
instance  the prioritized program
abc

    a   b   c 
    b   a 

has two preferred stable models  m     a  and m     b   however  for the program below
     a   b 
      b   c 
    b   a 

abc

derived from the rewriting of the rule     m     c  is also a preferred model 
thus  we consider a special class of constraints which is not sensitive to syntactic
changes  since every  ground  prioritized program    hp  i  such that  can be partitioned into n strata  with n      can be rewritten into a program    hp  i  such that
 and  are equivalent under the pas semantics  as shown in the proof of proposition
    and may not be equivalent under the raso semantics  as all rules in  belong to the
unique stratum     we continue to consider programs    hp  i where  consists of a
single stratum and  in particular  of facts 
given a prioritized program hp  i such that  consists only of facts  we denote with
     a         an    ai   ai      for i      n     n is maximum  
the set of preference rules which can be obtained from the merging of ground preference facts 
lemma   let hp  i be a prioritized program such that  consists only of preference facts
and ground         then  aso hp  i   pas hp  i  
   

fion the semantics of logic programs with preferences

proof  consider the two graphs gaso    v  easo   and gpas    v  epas     m    m    
epas means that m    m    i e  that
i  there is a ground rule      e    e     such that e   m m    e   m m    and
ii  there is no ground rule      e    e       such that e   m  m  and e   m  m   
this implies that if ground      
i  there must be a ground rule          e         e           such that
e   m   m    e   m   m    and
ii  there must not be ground rule          e         e             such that
e   m   m  and e   m   m   
therefore  m    m  also with respect to the aso semantics  and the graph gaso contains an arc  m    m     consequently  as epas  easo   aso hp    i   pas hp    i    
to find a tight relation between the two semantics  we consider a further restriction of
  which is obtained by deleting atoms which do not appear in any model from the ground
preference rules 
 

b    a         an    ai   ai      for i      n     n is maximum 

m  sm p  s t  ai   ai    m  

theorem   let hp  i be a prioritized program such that  consists only of preference
b     then  aso hp  i    pas hp  i  
facts and ground     
b   is derived from   by
proof  aso hp  i   pas hp  i  derives from lemma    as 
deleting nodes which do not appear in any model and do not influence the relation   in the
aso semantics 
to show that aso hp  i   pas hp  i  consider the relation in the aso semantics 
m    m  means that
b   such that e   m   m   
   there is a ground rule          e         e         
e   m   m    and

   there is no ground rule          e         e      
e   m   m  and e   m   m   

      such that

b 
this implies that if ground     

   there must be a ground rule      e    e     such that e   m   m    e  
m   m    and
   there is no ground rule      e    e       such that e   m  m  and e   m  m   
   

figreco  trubitsyna    zumpano

therefore  m    m  also holds with respect to the pas semantics  consequently 
as easo  rpas   aso hp    i   pas hp    i  
 
an extension of the aso semantics has been proposed by brewka        and brewka 
niemela  and truszczynski         in more detail  brewka        provided a preference
description language  allowing to express complex preferences by combining qualitative and
quantitative penalty based preferences  whereas brewka et al         proposed a framework to specify problem solutions  outcomes  and preferences among them  the latter
proposal combines ideas from answer set programming  answer set optimization and cpnets  boutilier  brafman  domshlak  hoos    poole         the semantics that we have
proposed in this paper is different from both those proposed by brewka        and brewka
et al          as in some cases it returns different results  see examples   and    

   other approaches
besides the approaches managing preferences among atoms  some other works proposed in
the literature specify preferences among rules 
early proposals expressing preferences on rules focus on default logic  brewka   eiter 
      delgrande et al       b  rintanen         whereas more recently the emphasis has
been given to logic programs  in this regard  different proposals have been developed for
representing and reasoning about user preferences such as ordered logic programs  delgrande et al       a  van nieuwenborgh   vermeir              and preferred answer sets
of extended logic programs  brewka   eiter         most of the approaches propose an
extension of gelfond and lifschitzs extended logic programming by adding preference information  delgrande et al         wang et al         zhang   foo         other proposals
attempt to extend the well founded semantics to logic programs with preferences  brewka 
      schauba   wang         and an extension of van gelders alternating fixpoint theory
for logic programs with priorities has been proposed by wang et al         
gelfond and son        have proposed a methodology of reasoning with prioritized
default in the language of logic programming under answer set semantics  this approach
enables the specification of preferences among rules and allows the definition of a set of
default rules which must be satisfied as well as a second set of default rules which could be
ignored 
ordered logic programs have been introduced by delgrande et al       a  as extended
logic programs whose rules are subject to a strict partial order with both static and dynamic
preferences  this approach is fully prescriptive as it enforces the ordering information during
the construction of the answer set  the original program is transformed into a second
extended logic program in which preferences are taken into account in the sense that the
answer sets obtained by evaluating the transformed theory correspond to the preferred
answer sets of the original theory 
another methodology in which logic programs containing preferences on the set of rules
can be translated into logic programs under stable model semantics has been proposed by
delgrande et al         
   

fion the semantics of logic programs with preferences

   conclusions
in this paper the case of preferences involving atoms in logic programming has been studied 
in particular  the behavior of the technique proposed by sakama and inoue        and
brewka et al         has been analyzed and a semantics  interpreting each preference rule as
a tool for representing a choice over alternative options  has been proposed  specifically  the
proposed approach extends the psm semantics by considering a refinement of the natural
order among preferences and introduces the concept of comparable models  preferences and
logic programs are examined together in order to determine the choice order and the sets
of models which can be compared 
the new semantics has been compared with the psm and the aso semantics  complexity analysis has also been performed showing that the use of additional information 
regarding the preference order and the sets of non comparable models  does not increase the
complexity of computing preferred stable models  although the semantics presented here
has the same complexity as other approaches proposed in the literature  the advantage lies
in the fact that it seems to better capture the intuitive meaning of prioritized programs by
also considering the structural information of preference rules 
prioritized reasoning in logic programming under the pas semantics can be easily
implemented on the top of deductive systems based on stable model semantics such as
deres  dlv  smodels  cholewinski  marek    truszczynski        leone  pfeifer  faber 
calimeri    dellarmi        syrjanen   niemela         an architecture and a system
prototype implementing prioritized reasoning  with different semantics  on the top of the
dlv system has been presented by caroprese  trubitsyna  and zumpano        

acknowledgments
a preliminary version of the papers has been presented by greco  trubitsyna  and zumpano
        the authors would like to thank the anonymous referees for their useful suggestions
and filippo furfaro for his comments 

references
boutilier  c   brafman  r   domshlak  c   hoos  h   poole  d          cp nets  a tool
for representing and reasoning with conditional ceteris paribus preference statements 
journal of artificial intelligence research              
brewka  g          well founded semantics for extended logic programs with dynamic
preferences  journal of artificial intelligence research           
brewka  g   eiter  t          preferred answer sets for extended logic programs  artificial
intelligence                    
brewka  g   eiter  t          prioritizing default logic  intellectics and computational
logic  kluwer        
brewka  g          logic programming with ordered disjunction  proceedings   th national
conference on artificial intelligence  aaai iaai           
   

figreco  trubitsyna    zumpano

brewka  g   niemela  i   truszczynski  m          answer set optimization  proceedings
  th international joint conference on artificial intelligence  ijcai           
brewka  g          complex preferences for answer set optimization  proceedings  th
international conference on principles of knowledge representation and reasoning
 kr           
brewka  g   niemela  i   truszczynski  m          prioritized component systems  proceedings   th national conference on artificial intelligence  aaai           
caroprese  l   trubitsyna  i   zumpano  e          implementing prioritized reasoning in
logic programming  proceedings international conference on enterprice information
systems  iceis          
cholewinski  p   marek  v  w   truszczynski  m          default reasoning system deres 
proceedings  th international conference on principles of knowledge representation
and reasoning  kr           
delgrande  j   p   schaub  t   tompits  h          logic programs with compiled preferences  proceedings   th european conference on artificial intelligence  ecai           
delgrande  j   p   schaub  t   tompits  h          a compilation of brewka and eiters
approach to prioritization  proceedings european workshop on logics in artificial
intelligence  jelia           
delgrande  j   p   schaub  t   tompits  h          a framework for compiling preferences
in logic programs  theory and practice of logic programming                
eiter  t   gottlob  g   leone  n          abduction from logic programs  semantics and
complexity  theoretical computer science                  
eiter  t   gottlob  g   mannila  h          disjunctive datalog  acm transaction on
database systems                      
gelfond  m   lifschitz  v          the stable model semantics for logic programming 
proceedings international conference on logic programming  iclp            
gelfond  m   lifschitz  v          classical negation in logic programs and disjunctive
databases  new generation computing            
gelfond  m   son  t c          reasoning with prioritized defaults  proc   rd international
workshop on logic programming and knowledge representation  lpkr           
greco  s   trubitsyna  i   zumpano  e          on the semantics of logic programs with
preferences  proceedings   th european conference on logics in artificial intelligence
 jelia           
grell  s   konczak  k   schaub  t          nomore   a system for computing preferred
answer sets  proceedings  th international  conference on logic programming and
nonmonotonic reasoning  lpnmr           
janhunen  t   niemela  i   simons  p   you  j  h          unfolding partiality and disjunctions in stable model semantics  proceedings  th international conference on principles of knowledge representation and reasoning  kr           
   

fion the semantics of logic programs with preferences

inoue  k   sakama  s          negation as failure in the head  journal of logic programming               
kakas  a  c   kowalski  r  a   toni  f          abductive logic programming  journal of
logic anc computation                
leone  n   pfeifer  g   faber  w   calimeri  f   dellarmi  t   eiter  t   gottlob  g   ianni 
g   ielpa  g   koch  k   perri  s   polleres  a          the dlv system  proceedings
 th european conference on logics in artificial intelligence  jelia                 
minker  j          on indefinite data bases and the closed world assumption  proc    th
conf  on automated deduction                
papadimitriou  c  h          computational complexity  addison wesley 
rintanen j          complexity of prioritized default logics  journal of artificial intelligence research             
sakama  c   inoue  k          priorized logic programming and its application to commonsense reasoning  artificial intelligence               
schaub  t   wang   k          a comparative study of logic programs with preference 
proceedings   th international joint conference on artificial intelligence  ijcai  
        
syrjanen  t   and niemela  i          the smodels system  proceedings international conference on logic programming and nonmonotonic reasoning  lpnmr           
van nieuwenborgh  d   vermeir  d          preferred answer sets for ordered logic
programs  proceedings   th european conference on logics in artificial intelligence
 jelia           
van nieuwenborgh  d   vermeir  d          ordered diagnosis  proceedings   th international conference on logic for programming  artificial intelligence  and reasoning
 lpar           
van nieuwenborgh  d   heymans  s   vermeir  d          on programs with linearly ordered multiple preferences  proceedings international conference on logic programming  iclp           
wakaki  t   inoue  k   sakama  c   nitta  k          computing preferred answer sets
in answer set programming  proceedings   th international conference on logic for
programming  artificial intelligence  and reasoning  lpar           
wakaki  t   inoue  k   sakama  c   nitta  k          the plp system  proceedings  th
european conference on logics in artificial intelligence  jelia           
wang  k   zhou  l   lin  f          alternating fixpoint theory for logic programs with
priority  proceedings first international conference on computational logic          
zhang  y   foo  n          answer sets for prioritized logic programs  proceedings international logic programming symposium  ilps         

   

fi