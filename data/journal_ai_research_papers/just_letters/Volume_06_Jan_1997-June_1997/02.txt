journal of artificial intelligence research                

submitted       published     

a uniform framework for concept definitions in
description logics
giuseppe de giacomo

degiacomo dis uniroma  it

universita di roma  la sapienza 
via salaria            roma  italy

maurizio lenzerini

lenzerini dis uniroma  it

universita di roma  la sapienza 
via salaria            roma  italy

abstract

most modern formalisms used in databases and artificial intelligence for describing an
application domain are based on the notions of class  or concept  and relationship among
classes  one interesting feature of such formalisms is the possibility of defining a class 
i e   providing a set of properties that precisely characterize the instances of the class 
many recent articles point out that there are several ways of assigning a meaning to a
class definition containing some sort of recursion  in this paper  we argue that  instead of
choosing a single style of semantics  we achieve better results by adopting a formalism that
allows for different semantics to coexist  we demonstrate the feasibility of our argument  by
presenting a knowledge representation formalism  the description logic alcq  with the
above characteristics  in addition to the constructs for conjunction  disjunction  negation 
quantifiers  and qualified number restrictions  alcq includes special fixpoint constructs
to express  suitably interpreted  recursive definitions  these constructs enable the usual
frame based descriptions to be combined with definitions of recursive data structures such
as directed acyclic graphs  lists  streams  etc  we establish several properties of alcq 
including the decidability and the computational complexity of reasoning  by formulating
a correspondence with a particular modal logic of programs called the modal mu calculus 

   introduction
most modern formalisms used in databases and artificial intelligence for representing an
application domain are based on the notions of class  or concept  and relationship among
classes  for example  the object oriented and semantics data models developed in databases
describe data in terms of classes  sometimes called entity types  and incorporate several
features for establishing various forms of relationships between classes  on the other hand 
the notion of class  often called concept or frame  and that of link among classes are provided
in all structured formalisms for knowledge representation  frame based languages  semantic
networks  description logics  etc    finally  this notion is also present in several type systems
of programming languages  specially those based on the object oriented paradigm 
there are basically two ways of using and describing classes  concepts   in the first one 
which we can call the prescriptive approach  the description formalism allows for expressing
a number of properties of a class  thus prescribing constraints that the instances of the class
must satisfy  in the second one  which we can call the definitional approach  the formalism
allows for providing the definition of a class  i e   a set of properties that precisely characterc      ai access foundation and morgan kaufmann publishers  all rights reserved 

fide giacomo   lenzerini

ize the instances of the class  while the prescriptive approach is quite well understood and
established  the definitional approach is still the subject of an interesting debate  regarding
both its nature and its semantic foundation  in particular  it is well known that there are
various ways to assign a meaning to a class definition when it contains some sort of recursion
 baader              nebel        beneventano   bergamaschi        beeri        
in this paper  we are concerned with the semantic problems related to the definitional
approach  arguing that  instead of choosing a single style of semantics for the knowledge
representation formalism  we achieve better results by allowing different semantics to coexist 
we discuss this issue in the context of description logics    which are logics originally
developed in knowledge representation to provide a formal reconstruction of frame based
languages  description logics describe the domain of interest in terms of concepts  which
represent classes of individuals  and roles  which are binary relations used to specify properties or attributes of individuals as well as links with other individuals  nebel         starting
from atomic concepts  denoted simply by a name  more complex concepts are built by using a suitable set of constructs  for example  the expression parent u male u  child male
denotes the concept of father  male parent  whose children are all male  the symbol u
denotes the construct for concept conjunction  while   denotes universal role quantification 
typically  concepts are structured into hierarchies determined by the properties associated
with them  the hierarchical structure is defined in such a way that more specific concepts
inherit the properties of the more general ones 
we introduce a description logic  called alcq  which extends the well known description logic alc  schmidt schau   smolka        by including the so called qualified
number restrictions  which are a very general form of cardinality constraints on roles  and
special fixpoint constructs  which enable us to capture the various semantics for recursive
definitions within a single formalism  notably  the availability of these constructs makes
it possible to combine the usual frame based descriptions with definitions of recursive data
structures such as directed acyclic graphs  lists  streams  etc 
we establish several properties of alcq  including the decidability and the computational complexity of reasoning  by formulating a correspondence with a particular modal
logic of programs called the modal mu calculus 
recent articles   e g   bergamaschi   sartori        borgida         advocate the use
of description logics as a unifying framework for several types of database and knowledge
representation formalisms  indeed  it is possible to show that  depending on both the constructs and the semantics used  one can capture several database models and programming
language type systems by using description logics  therefore  the study presented in this paper is not merely confined to description logics  but is also applicable to other representation
formalisms 
the paper is organized as follows  in section    we present the basic notions regarding
both description logics and fixpoints  in section    we motivate our approach through
a detailed discussion about the different semantics of concept definitions that have been
considered in the literature  and we argue for a formalism in which the various semantics
coexist  in section    we present one such formalism  namely the logic alcq  and we
   also called concept languages or terminological languages 

  

ficoncept definitions in description logics

discuss several of its properties  in section   we study reasoning techniques for alcq
and expose the correspondence with modal mu calculus  finally  in section    we draw the
conclusions and discuss some open problems 

   preliminaries
in this section  we briey present the basic notions regarding both description logics  and
fixpoints  the interested reader is referred to  nebel        and  de bakker        for a
more complete introduction to the subjects 

    description logics

description logics allow one to represent a domain of interest in terms of concepts and
roles  concepts model classes of individuals  while roles model relationships between classes 
starting with atomic concepts  denoted by a  and atomic roles  denoted by r   which are
concepts and roles described simply by a name  complex concepts and roles can be built by
means of suitable constructs 
in this section  we concentrate on the description logic alcq  obtained from the wellknown description logic alc  schmidt schau   smolka        by including qualified number restrictions  these are cardinality constraints on the role fillers of a very general form 
where role fillers to which a constraint applies are selected by means of a generic concept
expression  the qualifier 
alcq concepts  denoted by c or d  possibly with a subscript  are composed inductively
according to the following abstract syntax  n denotes a natural number  

c     a j   j   j  c j c  u c  j c  t c  j  r c j  r c j   n r c   j   n r c   
these constructs are not all independent  the following equalities hold      a t  a 

         r c     r  c   and   n r c        n     r c   

from a semantic point of view  concepts are interpreted as subsets of an abstract domain 
while roles are interpreted as binary relations over such a domain  more precisely  an
interpretation i    i   i   consists of a domain of interpretation i   and an interpretation
function i mapping every atomic concept a to a subset of i and every atomic role r to
a subset of i  i  
the interpretation function i is extended to complex concepts of alcq  note that in
alcq roles are always atomic  as follows 

 i
 i
  c  i
 c  u c   i
 c  t c   i
  r c  i
  r c  i
  n r c  i
  n r c  i

 
 
 
 
 
 
 
 
 

i

 

i   c i

c i   c i
c i   c i
fs   i j  s    s  s      ri and s    c i g
fs   i j  s    s  s      ri implies s    c i g
fs   i j  fs  j  s  s     ri and s    c i g  ng
fs   i j  fs  j  s  s     ri and s    c i g  ng
  

fide giacomo   lenzerini

where  s denotes the cardinality of the set s  
a concept c is satisfiable iff there exists an interpretation i such that c i       otherwise
c is unsatisfiable  a concept c  is subsumed by a concept c   written as c  v c   iff for
every interpretation i   c i  c i  
our knowledge expressed in terms of concepts and roles is assembled into a special
knowledge base  traditionally called tbox  which consists of a finite  possibly empty  set
of assertions  in order to be as general as possible  we assume that every assertion has the
form of an inclusion assertion  or simply inclusion  

c  v c 

without any restriction on the form of the concepts c  and c    a pair of inclusions of the
form fc  v c    c  v c  g is often written as c   c  and is called equivalence assertion 
an interpretation i satisfies an inclusion c  v c  iff c i  c i   an interpretation i is
a model of a tbox k iff i satisfies all inclusions in k 
let k be a tbox  we say that a concept c is satisfiable in k  iff there exists a model
i of k such that c i       unsatisfiable otherwise  we say that a concept c  is subsumed by
a concept c  in k  written k j  c  v c    iff for every model i of k  c i  c i  

    fixpoints

we briey recall few notions on fixpoints  consider the equation 
x   f  x  
where f is an operator from  s to  s   s denotes the set of all subsets of a set s    every
solution e of this equation is called a fixpoint of the operator f  while every set e such that
f  e    e is called pre fixpoint  and every set e such that e  f  e   is called post fixpoint  
in general  an equation as the one above may have either no solution  a finite number of
solutions  or an infinite number of them  among the various solutions  the smallest and the
greatest solutions  with respect to set inclusion  have a prominent position  if they exist  a
fundamental result due to tarski  tarski        guarantees the existence and the uniqueness
of both such solutions in case f is monotonic wrt set inclusion     where f is monotonic
wrt  whenever e   e  implies f  e     f  e    
theorem    tarski  let s be a set  and f an operator from  s to  s that is monotonic
wrt   then 
 there exists a unique least fixpoint of f   which is given by tfe  s j f  e    eg 
 there exists a unique greatest fixpoint of f   which is given by sfe  s j e  f  e  g 

   concept definitions as equations

we now analyze the notion of concept definition in detail  let us ignore for the moment
knowledge bases as they have been introduced in the previous section  and let us consider a
different kind of assertion  the definition statement  let the form of a definition statement
 or simply definition  be 
a  def c
  

ficoncept definitions in description logics

where a is an atomic concept which cannot appear in the left hand side of other definition
statements  and c is a concept expression in alcq  in principle  a  def c is intended to
provide an exact account for the concept to a in terms of c   i e   to define a as the set of
the individuals satisfying c  
in specifying the semantics of definitions  we need to distinguish between two different
types of atomic concepts  namely  primitive concepts and defined concepts  given a set of
definition statements  the primitive concepts are the atomic concepts that do not appear in
the left hand side of any definition statement  whereas the defined concepts are those that
appear in the left hand side of a definition statement 
given an interpretation i    i   i    the interpretation function i directly assigns
a subset of i to primitive concepts  but not to defined concepts  the meaning of a
defined concept a is assigned through its definition statement a  def c   extending the
interpretation function so as the following requirement is satisfied 
ai   c i  
   
consider  for example  the definition statement 
parent  def  child   
note that the defined concept parent does not appear in the body of its definition statement 
by      the definition statement provides the definition for the concept parent  in the
following sense  in any interpretation i    i   i    parenti denotes a single subset of i  
exactly the one denoted by   child   i   i e   fs j  t  s  t    childi g  in general  if a concept
a is defined in terms of primitive and already defined concepts  then for every interpretation
i there exists a unique way to extend the interpretation function to defined concepts  and
hence there is no doubt that the definition statement provides a definition of a 
now  consider the following definition statement 
a  def  child a 
given an interpretation i    i   i    by     the statement is interpreted as the equation 
ai   fs   i j  t  s  t    childi and t   ai g 
however such equation does not specify univocally how to extend the interpretation function
i to the defined concept a  since   satisfies the equation as well as any set of individuals
where each member has an infinite chain of descendants that are also members 
in general  we call recursive definition statements   or simply recursive definitions  
definition statements of the form 
a  def f  a 
where f  a  stands for a concept that has a as a subconcept    according to      the recursive
definition a  def f  a  is interpreted simply as a sort of equation specifying that  given an
   terminological cycles in  baader              nebel         in the present discussion  for sake of simplicity  we do not consider mutual recursive definitions  as a  def f  b    b  def f  a   we shall come
back to this point later on 
   a subconcept of a concept c is any substring of c  including c itself  that is a concept  according to
the syntax rules 
 

  

fide giacomo   lenzerini

interpretation i   the subset of i that can be tied to the defined concept a must satisfy
the equation ai   f  a i   i e   must be one of its solutions  observe that  in general  either
none  one  or several subsets of i may exist which are solutions of the above equation 
another convenient way to consider a definition statement is to associate to it  for every
interpretation i   an operator from subsets of i to subsets of i instead of an equation  so
that the fixpoints of the operator correspond to the solutions of the equation  for example 
to the definition a  def  child a we associate the operator 

s fs   i j  t  s  t    childi and t   s g
for any interpretation i   in general as either none  one or multiple solutions exist for the
equation associated with a recursive definition  we have that either none  one or multiple
fixpoints exist for the corresponding operator 
in this situation the word  definition  itself seems misleading  the body of the definition
does not give a complete account of the defined concept  an additional criterion is needed
for selecting solutions of the associated equation  or equivalently  fixpoints of the associated
operator  in other words in addition to      a criterion is needed to extend univocally the
interpretations i to the defined concepts  this observation has led to various semantics 
each of which interprets recursive definitions differently  by choosing  a priori and once and
for all  which solutions  or equivalently which fixpoints  are to be assigned to the defining
concept of a recursive definition  

    different semantics for recursive definitions

in the literature on description logics  three semantics for recursive definitions have been
proposed  see nebel        

 descriptive semantics
 least fixpoint semantics
 greatest fixpoint semantics
and which of these semantics is the  right  one is a long standing matter of debate  below
we describe how each of the three semantics interprets recursive definitions  and present
some examples showing that the choice of the semantics depends in fact upon the concept
to be defined  but first  it should be stressed that only the descriptive semantics is able to
assign meaning to general inclusion assertions c  v c  introduced in the previous section 
according to the descriptive semantics  a recursive definition a  def f  a  is a constraint stating that  for any i   ai has to be a solution of the equation ai   f  a i   under
the descriptive semantics  a  def  child a simply states that the individuals in the class
a have a child in the class a  and the individuals that have a child in the class a are
themselves in the class a  where a is no better specified  in general the descriptive semantics is not appropriate to properly define recursive concepts  in the sense that  given an
   we remark that a non recursive definition is interpreted by the various semantics in the same way  since 
for every i   the equation associated to it has a single solution 

  

ficoncept definitions in description logics

interpretation i   it is unable to assign a unique subset of i to the defined concept of the
recursive definition 
in fact under descriptive semantics definition statements are indistinguishable from the
equivalence assertions introduced in the previous section  in other words  the meaning
assigned to a  def f  a  is the same as that assigned to the equivalence assertion a  f  a  
although such equivalence assertions can be used to specify if and only if constraints  they
do not provide proper definitions when recursion is involved  for example  we can express
the fact that humans are mammals having parents that are humans  and on the converse 
that mammals having parents that are humans are humans themselves  in terms of the
equivalence assertion 

human  mammal u  parent   u  parent human 
similarly we may require horses to satisfy an analogous property 

horse  mammal u  parent   u  parent horse 
however the two equivalence assertions above do not define human and horse as shown 

e g   by the fact that  correctly  they do not imply that all humans are horses and vice versa
 in contrast to what happen when a fixpoint semantics is used  see below  
the least fixpoint semantics interprets a recursive definition statement a  def f  a 
by assigning to a the smallest possible extension in each interpretation i   among those that
satisfy ai  def f  a i   i e   the least fixpoint of the corresponding operator  in fact it is
always assumed that the operator associated with the definition statement is monotonic 
so that theorem   applies and a least fixpoint exists and is unique  i e   the corresponding
equation has a unique smallest solution  hence under the least fixpoint semantics the
recursive definition statement a  def f  a  defines the concept a  it is easy to verify that
in the example a  def  child a  the least fixpoint semantics leads us to identify a with   
indeed the empty set is a solution of the equation associated with the statement  and it is
obviously the smallest solution  similarly if we interpret the definition statement 
human  def mammal u  parent   u  parent human
with the least fixpoint semantics  we have that humani     for any interpretation i  
observe that if  as above  we adopt a similar definition for horse  we get again horsei     
so we can trivially infer that horse  human 
the least fixpoint semantics is particularly suitable for providing inductive definitions
of concepts  for example  consider the class of a list  list  defined as follows 
 an empty list is a list 
 a node that has exactly one successor that is a list is a list 
 nothing else is a list 
the first two conditions can be captured by the following recursive definition statement   
list  def emptylist t  node u     succ    u  succ list 
   additionally we specify that the two concepts emptylist and node are disjoint 

  

fide giacomo   lenzerini

where     succ    forces succ to be a function  to enforce the third condition we must
assign the smallest possible extension to list  thus  the class of lists can be naturally
defined by means of the above definition statement  interpreted according to the least
fixpoint semantics 
the greatest fixpoint semantics interprets a recursive definition statement a  def f  a 
by assigning to a the largest possible extension in each interpretation i   among those that
satisfy ai  def f  a i   i e   the greatest fixpoint of the corresponding operator  again  it
is assumed that such operator is monotonic in order to guaranty the existence an the unicity
of the greatest fixpoint  theorem     as for the least fixpoint semantics  under the greatest
fixpoint semantics a recursive definition statement a  def f  a  defines the concept a  for
example  considering again the definition statement a  def  child a  the greatest fixpoint
semantics leads us to interpret a as the class of all the individuals having a child that in
turn is a member of a 
while the least fixpoint semantics naturally captures classes defined by induction  the
greatest fixpoint semantics naturally captures classes of individuals whose structure is nonwell founded or co inductive  an example is the class of streams  modeling the wellknown linear data structure having a node as first element  and such that the rest of the
structure is a stream itself  note that streams are similar to lists except that while lists
can be considered as finite sequences of nodes  streams are infinite sequences of nodes  such
a class can be captured by the following recursive definition statement 

stream  def node u     succ    u  succ stream
with the proviso that the greatest possible extension is assigned to stream 
finally  consider under the greatest fixpoint semantics the recursive definition statements 
human  def mammal u  parent   u  parent human
horse  def mammal u  parent   u  parent horse 
although they do not assign the empty extension to both human and horse as the least
fixpoint semantics does  we do have again the rather counter intuitive consequence that
human  horse  since humani   horsei for any interpretation i   in general under both
types of fixpoint semantics the particular name used to denote a defined concept does not
have any impact on the interpretation of it  since the meaning of the defined concept is
completely specified by its definition statement 

    least and greatest fixpoints as concept constructs

the above considerations show that arguing about which is the  right  semantics for recursive definitions is not really an issue  each of them captures an essential use of recursive
equations  the descriptive semantics is appropriate to specify constraints on concepts and
is the only one that extends to the general inclusion assertions introduced in section    the
least fixpoint semantics is appropriate to define a structure inductively  the greatest fixpoint
semantics is the appropriate to define non well founded structures  generally  we may need
the three of them in the same knowledge base  in order to model the various properties of
the different concepts 
  

ficoncept definitions in description logics

our proposal in this paper is exactly in the direction of reconciling the various semantics
in the same knowledge base  this is pursued by means of a logic that incorporates two
constructs  x f  x   and x f  x    the symbols x  y        stand for concept variables  
denoting  respectively  the least fixpoint and the greatest fixpoint of the operator associated
with the definition x  def f  x    that is  for every i   the smallest solution and the greatest
solution of the equation x i   f  x  i  
in our approach  definition statements will never appear in a tbox  instead  a knowledge
base will be simply a set of inclusion assertions  interpreted according to the descriptive semantics  that can involve fixpoint constructs  for example  in order to specify the properties
of the concepts of list  stream  human and horse we can use the following assertions   
list
 x emptylist t  node u     succ    u  succ x  
stream  x node u     succ    u  succ x

human  mammal u  parent   u  parent human
horse  mammal u  parent   u  parent horse 

note that  if we then add to the above knowledge base the equivalence assertion 

mgm  x   mammal u  parent   u  parent x
defining the concept mgm  mammal generated by mammal   then it correctly turns out
that both human and horse are subsumed by mgm 

the availability of least and greatest fixpoint constructs  by allowing different semantics
to be used in the same tbox  makes it possible to model not only abstract classes  but also
inductively and co inductively defined data structures  such as lists and streams  this is
particularly important if our objective is to integrate class based representation formalisms
and programming systems  declarative or procedural   in order to make these formalisms
more useful in practice  furthermore  we have the possibility of nesting fixpoints  thus
going beyond the simple equational format by which we motivated their introduction  as
an example  consider the following one 
among the inhabitants of the planet  plonk   a disease called  foo  is quite
common  such a disease manifests itself in two forms  a  visible  one and a
 latent  one  and it has a rather intricate hereditary pattern  individuals that
have the visible form transmit the visible form to at least one  say the first  direct
descendant  obviously  if there is any direct descendant   these ill descendants
in turn do the same  and so on  until someone transmits the latent form of the
disease  more precisely  along any chain of descendants  the visible form of the
disease sooner or later is interrupted  because either an individual has no direct
descendant or an individual transmits to some descendant the latent form  all
direct descendants  if any  of an individual that has the latent form inherit the
visible form  the pattern goes on like this  generation after generation  forever 
the hereditary pattern  foo hp  of the above disease can be defined as follows 
foo hp  x y   visible u   child y t  child    t
 latent u  child  visible u x    
   we also include the assertion emptylist v  node  specifying that the concepts emptylist and node are
disjoint 

  

fide giacomo   lenzerini

where visible and latent denote the visible and the latent form respectively of the disease 
and are assumed to be disjoint  latent v  visible  

   the description logic alcq
we provide a formal account of the meaning of the fixpoint constructs by introducing a
description logic  called alcq  which is obtained by adding these constructs to alcq 
we make use of the notions of scope  bound and free occurrences of variables  closed
formulae  etc  the definitions of these notions are the same as the analogues in first order
logic  treating  and  as quantifiers  in addition  we use the symbol  as an abstraction
for either  or   
the primitive symbols in alcq are atomic concepts   concept  variables  denoted by
x  y          and atomic roles which are the only roles admitted in the logic 
concepts in alcq are formed inductively according to the following abstract syntax 

c     a j   j   j  c j c  u c  j c  t c  j  r c j  r c j   n r c   j   n r c   j
x c j x c j x
where a denotes an atomic concept  r an atomic role  n a natural number  and x a variable 
and with the restriction that only a variable x occurring positively in c can be bounded by
a fixpoint  in x c   we say that a variable x occurs positively in a concept c   if every
free occurrence of x is in the scope of an even number of negations  considering concepts
c   in   n r c     in the scope of one negation 
the two fixpoint constructs are mutually definable  x c    x  c  x  x    where
c  x  x   is the concept obtained substituting all free occurrences of x by the concept
 x   
as before  an interpretation i    i   i   consists of a domain of interpretation i   and
a interpretation function i   which maps every atomic concept to a subset of i   and every
atomic role to a subset of i  i   but the presence of free variables does not allow us to
extend the interpretation function i directly to every concept of the logic  for this reason
we introduce valuations  a valuation  on an interpretation i is a mapping from variables
to subsets of i  
given a valuation   we denote by  x e   the valuation identical to  except for
 x e   x     e   in other words  for every variable y  

 

x
 x e   y     e y   ifif yy  
   x
let i be an interpretation and  a valuation on i   we assign meaning to concepts of
the logic by associating to i and  an extension function i   mapping concepts to subsets
of i   as follows 
  

ficoncept definitions in description logics

xi
ai

 i
 i
  c  i
 c  u c   i
 c  t c   i
  r c  i
  r c  i
  n r c  i
  n r c  i

 x c  i
 x c  i

 
 
 
 
 
 
 
 
 
 
 
 
 

 x    i
ai  i
i

 

i   ci
 c   i    c   i
 c   i    c   i
fs   i j  s    s  s      ri and s    ci g
fs   i j  s    s  s      ri implies s    ci g
fs   i j  fs  j  s  s     ri and s    ci g  ng
fs   i j  fs  j  s  s     ri and s    ci g  ng
t
 i j ci x e    e g
sfe
fe  i j e  ci x e   g

in the last two cases ci x e   is interpreted as an operator from subsets e of i to subsets
of i   by the syntactic restriction enforced on variables  such an operator is guaranteed
to be monotonic wrt   notice that free variables appearing in a concept are interpreted
similarly to atomic concepts 
a concept c is satisfiable  if there exists an interpretation i and a valuation  on i
such that ci       otherwise c is unsatisfiable  a concept c  is subsumed by a concept c   
written as c  v c    if for every interpretation i and every valuation  on i    c   i   c   i  
a alcq tbox is a finite  possibly empty  set of inclusion assertions c  v c  where
c  and c  are closed concepts of alcq  as before  we use equivalence assertions of the
form c   c  as an abbreviation for fc  v c    c  v c  g 
an interpretation i satisfies an inclusion assertion c  v c    if  c   i   c   i   where 
is any valuation on i  being c  and c  closed  and hence independent from valuations  
i is a model of a tbox k  if i satisfies all inclusion assertions in k  we say that a tbox
k is satisfiable  if it has a model  observe that inclusion assertions in k are interpreted
according to the descriptive semantics 
we say that a tbox k logically implies an inclusion assertion c  v c    written k j 
c  v c   if for every model i of k and every valuation  on i    c   i   c   i  

    properties of the fixpoint constructs

in the following  we use the notation c  x   to indicate that the variable x occurs free in
the concept c  other variables could occur free in c as well   and the notation c  d   where
d is a concept  as a shorthand for c  x   x d   i e   the concept obtained substituting all
free occurrences of x in c  x   by the concept d  
let us comment briey on some simple properties of the logic  first  the concept
x c  x   is equivalent to the concept y c  y    as long as y is free for x in c  x    second 
the extension function i assign to a closed concept a value which is independent of the actual
valuation   hence x c   where x does not occur in c   is equivalent to c   third  since
x c  x   is a fixpoint we have that c  x c  x    is equivalent to x c  x    furthermore 
we have that the concept x c  x   is always subsumed by the concept x c  x   
  

fide giacomo   lenzerini

the next property is more substantial  consider the class of a single source finite
directed acyclic graphs  dags  defined inductively as follows  
 the empty dag is a dag  base step  

 a node that has connections and all connections are dags  is a dag  inductive
step  

 nothing else is a dag 
consider now a alcq tbox k containing the two equivalence assertions 
dag of student  x   emptydag t  student u  arc   u  arc x  
dag of person  x   emptydag t  person u  arc   u  arc x  

which define the concepts dag of student and dag of person as the classes of dags whose
nodes are students and persons respectively  assuming that students are persons  we want
to be able to infer that dags of students are dags of persons as well  that is  we want 

k j  student v person implies k j  dag of student v dag of person 
it turns out that for alcq such a property holds  to prove this  we introduce the

following two theorems 

theorem   let k be a alcq tbox  and c and d two alcq concepts in which a
variable x occurs free positively  then 
k j  c v d implies k j  x c v x d 
proof we proceed by contradiction    assume that ci  di holds for all models i of k
and all valuations  on i   and suppose that there exists a model i of k and a valuation 
on i such that  x c  i    x d i  

first we prove the result for      let s be an individual in  x c  i but not in
 x d i   now  we have 

s    x c  i iff  e  i    ci x e    e implies s   e  

   

s     x d i iff  e    i    di x e    e   and s    e     

   

 

for the set e   in      the following expression holds 

ci x e    di x e    e  
 

 

   we assume that a leaf of a dag is a node with all arcs leading to a special dag called empty dag 
as an alternative  one can assume that a leaf of a dag is a node having no connection at all  in the
latter case  the definition of dag would simplify to dag  def node u  arc dag  in which the general form
of inductive definitions   i e   base case and inductive case   is less apparent  
   for uniformity  we do not distinguish if x occurs free or not  obviously if x does not occur free  the
result is trivial 

  

ficoncept definitions in description logics

hence by     we have s   e   and by     we have s    e     which is impossible 
the proof for     is similar  let s be an individual in  x c  i but not in  x d i  
now  we have 

s    x c  i iff  e     i    e     ci x e   and s   e    

   

s     x d i iff  e  i    e  di x e   implies s    e   

   

  

for the set e    in      the following expression holds 

e     ci x e    di x e
  

  

 

hence by     we have s   e    and by     we have s    e      which is impossible   
above we have defined what it means for a variable x to occur positively in a concept c  
similarly we say that a variable x occurs negatively in a concept c   if every free occurrence
of x is in the scope of an odd number of negations  considering concepts c   in   n r c    
in the scope of one negation 

theorem   let k be a alcq tbox  and d x   a alcq concept with the variable x
as a free variable  then  for any alcq concepts c  and c   
k j  c  v c  implies

 

k j  d c   v d c   if x occurs positively in d x  
k j  d c   v d c   if x occurs negatively in d x  

proof we prove the result by induction on the formation of d x   

base case  if d x     x   the result holds trivially 
inductive cases  if d x   has the form  d   x   j   n r c       then x occurs positively
 negatively  in d   x   and negatively  positively  in d x    by induction hypothesis k j 
d   ci   v d  cj    where i  j   f    g and i    j   and hence by the semantics of the constructs
k j  d cj   v d ci  
if d x   has the form d    x   u d    x   j d    x   t d    x   j  r d  x   j   n r d   x    
then x occurs positively  negatively  both in d   x   and in d x    by induction hypothesis
k j  d  ci  v d  cj   and hence by the semantics of the constructs k j  d ci  v d cj   
it remains to prove the result for d x     y d   x    y    x    in this case  by the
syntactic restriction enforced  y occurs positively in d   x   and hence by theorem   we have
k j  d  ci  v d  cj   implies k j  y d  ci   v y d   cj    thus by induction hypothesis
we are done   
going back to our example  we can  in fact  infer that dags of students are also dags of
persons  indeed  by applying theorem   and then theorem    we have that k j  student v
person implies k j  x emptydag t  studentu arc  u arc x   v x emptydag t  person u
 arc   u  arc x   
  

fide giacomo   lenzerini

    internalizing assertions

we now show that logical implication in alcq tboxes  thus also satisfiability of alcq
tboxes  is reducible to unsatisfiability of a single alcq concept  to prove this result  we
introduce the notions of generated sub interpretation and sub valuation  
let i    i   i   be an interpretation 
 a valuation on i   and s   i an individual 
s is
s
i
we define the interpretation i           and the valuation s on i s  as follows 
 i s   fs    i j  s  s      r i           rmi  g 
 for each atomic role ri  we have rii s   rii    i s  i s   
 for each atomic concept a  we have ai s   ai   i s  
 for each variable x   we have s x      x     i s  
we call i s the sub interpretation of i generated by s  and s the sub valuation of  generated
by s 
for generated sub interpretations and sub valuations we can state the following lemma 

lemma   let c be a alcq concept  then for any interpretation i   any valuation  on
i   and any individual s   i   we have 
 t   i s   t   ci iff t   ciss  
proof without loss of generality  we consider concepts formed according to the following
simplified abstract syntax  c     a j   j  c j c  u c  j  r c j   n r c   j x c j x 

we prove the result by induction on the number of nested fixpoint constructs  base
case  if in c there are no fixpoint constructs  the thesis can be proven by induction on the
formation of c  
inductive case  we assume that the thesis holds for concepts c with k nested fixpoint
constructs  and we prove it for concepts x c with k      we recall that  by the tarskiknaster theorem on fixpoints  tarski         t    x c  i iff there exists an ordinal ff such
that t    ff x c  i   where  ff x c  i is defined by transfinite induction as 
    x c  i    

  ff   x c  i   ci x  ff x c    
   x c  i   sff   ffx c  i   if  is a limit ordinal 
i

hence we proceed by transfinite induction on ordinals ff 
base case of the transfinite induction    x c is defined as    thus trivially we have
t      x c  i iff t      x c  iss  
successor case of the transfinite induction  we want to show that t    ff   x c  i iff t  
 ff   x c  iss   which reduces to 

t   ci x  ff x c     iff t   ciss x  ff x c  ss   
i

i

   together these notions play the same role as that of generated sub model in modal logics 

   

   

ficoncept definitions in description logics

to prove this  we start by showing that 

t   ciss x  ff x c  ss   iff t   c is x  ff x c     s  
i

i

   

notice that the two valuations above may differ only on the value of x   if it holds that 

t   xiss x  ff x c  ss   iff t   x is x  ff x c     s  
i

i

   

then by straightforward induction on the formation of c we have that     holds as well 
let us prove      we can write it as 

t   s x  ff x c  iss   x   iff t     x  ff x c  i   s  x   
and since t   i s   this reduces to

t    ff x c  iss iff t    ff x c  i  
which holds by transfinite inductive hypothesis 
now  since c contains k fixpoint constructs  by inductive hypothesis on k  we have 

t   ci x  ff x c     iff t   c is x  ff x c     s  
i

i

hence  considering     and      it follows that indeed t    ff   x c  i iff t    ff   x c  iss  
limit case of the transfinite induction  let  be a limit ordinal  then t     x c  i iff
there exists an ordinal ff    such that t    ff x c  i   by transfinite induction hypothesis 
it holds that  t    ff x c  i iff t    ff x c  iss   and thus 

t     x c  i iff t     x c  iss  
this completes the transfinite induction  so for all ordinals ff it holds that 

t    ff x c  i iff t    ff x c  iss  
the induction on the nesting of fixpoint constructs is completed as well  hence we have
proven the lemma   
now we are ready to state the result mentioned above 

theorem   let k   fc  v d            cq v dq g be a alcq tbox  and c and d two
alcq concepts  then k j  c v d if and only if the alcq concept 
x   r   x u       u  rm  x u ck  u c u  d
   
is unsatisfiable  where r            rm are all the atomic roles appearing in k  and ck     c  t
d    u       u   cq t dq   
   

fide giacomo   lenzerini

proof if part  by contradiction  assume that     is not satisfiable  and suppose that
k  j  c v d  i e   there exists an interpretation i   and a valuation  on i   such that i
is a model of k and ci   di   it follows that  there exists an individual s   i such
that s   ci and s     d i   on the other hand  the fact that i is a model of k implies
that  ck  i   i   and thus that  x   r   x u       u  rm  x u ck   i   i   so we have
s    x   r   x u       u  rm x u ck   u c u  d i   i e       is satisfiable  contradicting the

hypotheses 
only if part  again we proceed by contradiction  assume k j  c v d  and suppose
that     is satisfiable  i e   there exists an interpretation i   a valuation  on i   and an
individual s   i   such that s    x   r   x u       u  rm  x u ck   u c u  d i  
now consider the sub interpretation i s    i s   iss   and the sub valuation s on i s
generated by s  on the one hand  we clearly have that  ck  iss   i s   hence i s is a model
of k  on the other hand by lemma   s    x   r   x u       u rm  x u ck   u c u d iss   so it
follows that i s and s do not satisfy the subsumption c v d  contradicting the hypotheses 

 

this result states that satisfiability of alcq concepts and logical implication in
alcq tboxes  and thus of satisfiability of alcq tboxes  are not distinct reasoning
tasks  hence in the following we will limit our attention to concept satisfiability without
loss of generality 

   reasoning with fixpoints

in this section we concentrate on developing reasoning methods to check for satisfiability
concepts involving fixpoints  in particular  we exhibit a correspondence between alcq
and a well known logic of programs  called modal mu calculus  kozen        kozen  
parikh        streett   emerson               that has been recently investigated for
expressing temporal properties of reactive and parallel processes  stirling        larsen 
      cleaveland        winsket        dam        
to get a better insight on the correspondence between the two logics  we first study
the sublanguage alc obtained from alcq leaving out qualified number restrictions    
then  we study the full logic alcq 

    reasoning in alc

let us introduce modal mu calculus formally  formulae            of modal mu calculus
are formed inductively from atomic formulae a        and variables x        according to the
following abstract syntax 
        a j   j   j   j      j      j hai j  a  j x  j x  j x
where a is the generic element of a set of labels l  and every bounded occurrence of every
variable x must be in the scope of an even number of negation signs 
    observe that  in theorem   qualified number restrictions play no role  hence exactly the same reduction
from logical implication to unsatisfiability holds for alc as well  this allows us to restrict our attention
to satisfiability only 

   

ficoncept definitions in description logics

the semantics of modal mu calculus is based on the notions of  kripke  structure and
valuation  a kripke structure m is a triple  s   fri j i   lg  v    where s is a set of states 
each ri is a binary relation on s   and v is a mapping from atomic formulae to subsets of
s   a valuation  on m is a mapping from variables to subsets of s   to a kripke structure
m and a valuation  on m  it is associated an extension function m
 defined inductively
as follows 
xm
   x    s
am
  v  a   s

m
 
  s
 m
   

   m
  s   m


m
m
      m
       
m
m
             m

 hai m
  fs   s j  s     s  s      ra and s    m

 g
     s  s      ra implies s    m g
  a  m
 
f
s
 
s
j
 
s


t
m
 x  m
   sfe  s j  x e    e g
 x  m
  fe  s j e  m

 x e   g
a formula  is satisfiable if there exists a kripke structure m and a valuation  on m such
that m
      
the following theorem is the basis for the correspondence between alc and the modal
mu calculus 

theorem   there exists a one to one linear time function q mapping concepts of alc
to formulae of modal mu calculus such that  for any alc concept c   c is satisfiable if
and only if q c   is satisfiable 

proof we can define q in the following way  q a    a  atomic concepts are mapped
to atomic formulae   q x     x   q         q         q  c      q c    q  r c    
hriq c    atomic roles are mapped to labels   q  r c      r q c    q x c     x q c   
and q x c     x q c   
an interpretation i    i   i   is equivalent to a kripke structure m    s   fri j i  
lg  v   such that  s   i   l is equal to the set of names of the atomic roles interpreted
in i   rr   ri for each atomic role r  and v  a    ai for each atomic concept a  in
addition  a valuation  on i is equivalent to a valuation   on m  now both the extension
function associated with i and  and the extension function associated with m and  
map  respectively  any concept c and the corresponding formula q c   to the same subset
of i   s   hence the thesis follows   
it follows that we may transfer both decidability and complexity results for the modal
mu calculus  kozen   parikh        emerson   jutla        safra        to alc   thus 
we can immediately state what is the complexity of reasoning with alc concepts and
alc tboxes 

theorem   satisfiability of alc concepts  satisfiability of alc tboxes  and logical
implication in alc tboxes are exptime complete problems 
   

fide giacomo   lenzerini

proof the satisfiability problem for modal mu calculus is exptime complete  emerson
  jutla         hence by theorem   and by theorem   the thesis follows   

    reasoning in alcq
next we exhibit a mapping from alcq concepts to formulae of variant of modal mucalculus  called deterministic modal mu calculus  which has the same syntax as the modal
mu calculus  but is interpreted over deterministic kripke structures  that is kripke structures m    s   fri j i   lg  v   in which the relations ri are partial functions  streett  
emerson        
let us ignore for a moment the qualified number restriction constructs  formulae of
alcq without qualified number restrictions are  in fact  formulae of the modal mucalculus  as shown in the previous section  by using a well known technique developed
for propositional dynamic logic  parikh          nondeterministic  modal mu calculus formulae can be reduced to deterministic modal mu calculus formulae  streett   emerson 
       as shown below 
we use the following notations for usual operations on binary relations   for chaining 
 for reexive transitive closure    for transitive closure  and   for converse  we also use
the following abbreviations 
 r  
 r   

for
for
hr i for
hr i for

x      r x  
 r  r  
x     hrix  
hrihr i 

the reduction is as follows  in a formula   we recursively replace each subformulae of
the form  r  by  r   rnew     and each subformulae of the form hri by hrih rnew   i 
where rnew is a new symbol and both r and rnew in the resulting formula are interpreted
as partial functions  let us call the resulting formula     we have that  is satisfiable if and
only if   is satisfiable 
we briey sketch the reasoning behind the proof of this statement  the if direction
is easy  it suces to observe that if m d    s d   frdi j i   ld g  v d   is a model of    
then can transform it into a model m    s   fri j i   lg  v   of  by defining s   s d  
l   ld   new  rr   rdr   rdnew     and v   v d   the only if direction is as follows  we
recall that both nondeterministic and deterministic modal mu calculus have the tree model
property  streett   emerson               if a formula has a model it has a tree model 
i e   a model having the form of a tree     so without loss of generality we can restrict our
attention to tree models only  now there is a one to one transformation from tree models
m t    s t   frti j i   lt g  v t   of  to  tree  models m b    s b   frbi j i   lb g  v b   of
    indeed  we put s b   s t   v b   v t   lb   lt   and given a state x   s t having as
    given a model of  we get a tree model simply by  unfolding  the original one 

   

ficoncept definitions in description logics

rtr  successors z           zl     we put  x  z      rbr   and  zi   zi       rbrnew   for i              l     
in this way we have  x  zi     rtr if and only if  x  zi     rbr   rbrnew      

we remark that m t is required to be a tree because once we get m b we need to recover
the  original  rtr  predecessor x of a state zi   namely we need  rbr   rbrnew      to be
a partial function  otherwise  given a state zi   we would not know which of the various
 rbr   rbrnew       successors is its original rtr  predecessor x  and therefore we would not
be able to reconstruct m t from m b  
by interpreting r and rnew as partial functions  it easy to express qualified number
   successors of a state  for example 
restrictions as constraints on the chain of  r  rnew
    r   can be expressed by
 r   rnew           rnew            rnew            rnew         
and can be read as  everywhere along the chain r   rnew   there are at most three states
where  holds   which corresponds exactly to the intended meaning  similarly     r  
can be expressed by

hrih rnew   i    h rnew   i    h rnew    i  
and can be read as  somewhere along the chain r   rnew   there are at least three states
where  holds   which again corresponds exactly to the intended meaning 
the above discussion allows us to state the following result 

theorem   there exists a polynomial function t mapping concepts of alcq to formulae
of deterministic modal mu calculus such that  for any alcq concept c   c is satisfiable

if and only if u c   is satisfiable 

proof the function t is defined inductively as follows 
u a 
u x  
u c  u c   
u c  t c   
u  c  
u x c  
u x c  
u  r c  
u  r c  

a
x
u c      u c   
u c      u c   
 u c  
x u c  
x u c  
hrih rnew  iu c  
 r   rnew    u c  
where rnew is a new role  finally    n r c   and   n r c   are mapped to the following
 
 
 
 
 
 
 
 
 

formulae 

    we implicitly assume that m t is a finite branching tree model  this can be done without loss of
generality since modal mu calculus has the finite model property  and hence unfolding a finite model we
get a finite branching tree model  note however that it would suce to assume m t to be a countable
branching tree model 
    note that this construction is similar to the one often used in programming to reduce n ary trees to
binary trees by coding children of a node as the combination of one child and its siblings 

   

fide giacomo   lenzerini

u   n r c      r   rnew      u c       rnew      u c   
  rnew              u c       rnew      u c            
where the number of nested formulae of the form  u c       rnew      is n  and

u   n r c     hrih rnew   i u c     h rnew   i u c   
h rnew   i        u c     h rnew   iu c            
where the number of nested formulae of the form u c     h rnew    i is n     
u c   is clearly polynomial in the size of c  under the usual assumption that numbers in
c coded in unary   moreover  following the technique in  parikh        streett   emerson 
      that as been exposed above  it is easy to verify  by induction on the formation of the
concept c   that the mapping t preserves satisfiability   
it follows that we may transfer both decidability and complexity results for the deterministic modal mu calculus  streett   emerson        emerson   jutla        safra 
      to alcq  thus  we can immediately state what is the complexity of reasoning with
alcq concepts and alcq tboxes 

theorem   satisfiability of alcq concepts  satisfiability of alcq tboxes  and logical
implication in alcq tboxes are exptime complete problems 
proof satisfiability in deterministic modal mu calculus is an exptime complete problem

 streett   emerson        emerson   jutla        safra         hence by theorem   and
theorem   the thesis follows   

   discussion and conclusion

the work presented in this paper stems out from  de giacomo         where the basic ideas
of introducing explicit fixpoint was first presented  and  de giacomo   lenzerini      b  
where such idea was further elaborated and alcq was first introduced 
one of the main contributions of this work has been to devise a tight correspondence
between description logics with fixpoints and modal mu calculus  in this respect we remark
that  while alc corresponds directly to modal mu calculus  the full alcq corresponds
to a variant of modal mu calculus whose decidability and complexity had not been studied 
more precisely  a notion essentially equivalent to that of qualified number restrictions has
independently emerged in modal logics  namely that of graded modalities  van der hoek
  de rijke        van der hoek        fattorosi barnaba   de caro        fine        
however the combination of fixpoints and graded modalities had not been investigated
before in the setting of modal logics  given the tight correspondence between alc and
modal mu calculus  alcq can be considered as modal mu calculus augmented with graded
modalities  hence the results in this paper apply to such a logic as well 
the research reported in this paper bears several similarities with the one on the correspondence between description logics and propositional dynamic logics  baader       
   

ficoncept definitions in description logics

schild        de giacomo   lenzerini      a        de giacomo         in fact what characterize description logics based on propositional dynamic logics are the role constructs for
chaining  choice  test  and above all reexive transitive closure of roles  which is a limited
form of fixpoint  such role constructs can be easily expressed by using the explicit fixpoints
introduced here  it suce to resort to the following equivalences 
 r   r   c    r   r  c
 r  t r  c    r  c t  r  c
 r c   x  c t  r x  
 id d  c   c u d 
note that  r  c   x  c u  r x    in  calvanese  de giacomo    lenzerini       
a further implicit form of fixpoint has been advocated  the so called well founded role
construct wf  r   by explicit fixpoints  wf  r  is expressed simply as x   r x   
our proposal of allowing for fixpoint constructs explicitly in the formalism is shared
by the study independently carried out by schild in  schild            the main goal of
that work is to study both the expressive power and the computational complexity of
subsumption and satisfiability for tboxes expressed in alc  no fixpoint constructs   that
allow for mutually recursive definitions  to this end  a description logic is defined that
corresponds to a variant of the modal mu calculus in which mutual fixpoints are allowed
but some restrictions on nested fixpoints are enforced  vardi   wolper         it is well
known that mutual fixpoints can be re expressed by means of nested ones  see  for example 
park        de bakker         as a consequence of this observation it follows that the logic
introduced in this paper  is more expressive than the one analyzed in  schild        since 
on the one hand  it allows nesting of fixpoints without any restriction  on the other hand
it makes it possible to state sophisticated forms of cardinality constraints on role fillers by
means of qualified number restrictions 
the present work can be extended along several directions  we conclude by outlining
two of them 
we already noticed that fixpoint constructs allow for representing not only abstract
classes  but also several data structures extensively used in software development  we
believe that this characteristic is an important step towards a satisfactory integration of
description logics with both traditional and declarative programming systems  indeed the
description logic proposed in this paper provides powerful mechanisms for data structure
modeling  in particular  the properties stated in section     can be the base to formulate a
notion of parametric concept     for instance  the expression  named dag of  z   
x   emptydag t  z u  arc   u  arc x  
where z is a formal parameter  denotes the class of dags whose nodes are left unspecified 
this class can be used in several ways in the tbox  for example  it can be instantiated
by binding the formal parameter to actual parameters  thus getting  say  dag of  student  
dag of  person   etc   which are concepts inheriting the properties of dag of  z   
    in  schild        number restrictions are not considered 
    note that parametric concepts can be introduced also in simpler logics which do not include fixpoint
constructs 

   

fide giacomo   lenzerini

although alcq is a powerful logic  it lacks the construct for inverse roles which is
needed for example to correctly capture the notions of  finite  tree  binary tree  etc 
indeed  to define the concept of tree  an empty tree is a tree  a node that has
at most one parent  some children  and all children are trees  is a tree  nothing else is a
tree  we can write tree  x   empty tree t  node u     child      u child  u child x
where child  denotes the inverse of child  notice that the introduction of inverse roles
does not pose any diculty from the semantical point of view  however  its impact on
the reasoning method needs to be investigated  more generally  a wide variety of concept
constructs can be studied in conjunction with fixpoints  the research on description logics
related to propositional dynamic logics in  de giacomo   lenzerini      a        calvanese
et al         de giacomo        may give us hints on how to proceed along this direction 

references

baader  f          terminological cycles in kl one based knowledge representation languages  in proc  of the  th nat  conf  on artificial intelligence  aaai      pp 
        boston  ma 
baader  f          augmenting concept languages by transitive closure of roles  an alternative to terminological cycles  in proc  of the   th int  joint conf  on artificial
intelligence  ijcai     sydney  australia 
beeri  c          a formal approach to object oriented databases  data and knowledge
engineering             
beneventano  d     bergamaschi  s          subsumption for complex object data models 
in proc  of the  th int  conf  on database theory  icdt      no      in lecture
notes in computer science  pp           springer verlag 
bergamaschi  s     sartori  c          on taxonomic reasoning in conceptual design  acm
transaction on database systems                  
borgida  a          from type systems to knowledge representation  natural semantics
specifications for description logics  journal of intelligent and cooperative information
systems                
calvanese  d   de giacomo  g     lenzerini  m          structured objects  modeling and
reasoning  in proc  of the  th int  conf  on deductive and object oriented databases
 dood      lecture notes in computer science  springer verlag 
cleaveland  r          tableaux based model checking in the propositional mu calculus 
acta informatica              
dam  m          ctl  and ectl  as fragments of the modal mu calculus  in proceeding of
the col  on trees and algebra in programming  no      in lecture notes in computer
science  pp           springer verlag 
de bakker  j          mathematical theory of program correctness  prentice hall 
   

ficoncept definitions in description logics

de giacomo  g          reconciling different semantics for concept definition  extended
abstract   in proc  of the  st compulog net meeting on knowledge representation
and reasoning systems  cnkrr     
de giacomo  g          decidability of class based knowledge representation formalisms 
ph d  thesis  dipartimento di informatica e sistemistica  universita di roma  la
sapienza  
de giacomo  g     lenzerini  m       a   boosting the correspondence between description
logics and propositional dynamic logics  in proc  of the   th nat  conf  on artificial
intelligence  aaai      pp           aaai press the mit press 
de giacomo  g     lenzerini  m       b   concept language with number restrictions and
fixpoints  and its relationship with mu calculus  in proc  of the   th eur  conf  on
artificial intelligence  ecai      pp           john wiley and sons 
de giacomo  g     lenzerini  m          what s in an aggregate  foundation for description
logics with tuples and set  in proc  of the   th int  conf  on artificial intelligence
 ijcai     
emerson  e  a     jutla  c  s          the complexity of tree automata and logics of
programs  in proc  of the   th an  symp  on the foundations of computer science
 focs      pp          
fattorosi barnaba  m     de caro  f          graded modalities i  studia logica     
        
fine  k          in so many possible worlds  notre dame journal of formal logic         
        
kozen  d          results on the propositional mu calculus  theoretical computer science 
            
kozen  d     parikh  r          a decision procedure for the propositional mu calculus  in
proc  of the  nd work  on logic of programs  no      in lecture notes in computer
science  pp           springer verlag 
larsen  k  j          proof systems for satisfiability in hennessy milner logic with recursion 
theoretical computer science              
nebel  b          reasoning and revision in hybrid representation systems  no      in
lecture notes in artificial intelligence  springer verlag 
nebel  b          terminological cycles  semantics and computational properties  in sowa 
j  f   ed    principles of semantic networks  pp           morgan kaufmann  los
altos 
parikh  r          propositional dynamic logic of programs  a survey  in proc  of the
 st work  on logic of programs  no      in lecture notes in computer science  pp 
         springer verlag 
   

fide giacomo   lenzerini

park  d          finiteness is mu ineffable  theoretical computer science             
safra  s          on the complexity of   automata  in proc  of the   th an  symp  on the
foundations of computer science  focs      pp          
schild  k          a correspondence theory for terminological logics  preliminary report  in
proc  of the   th int  joint conf  on artificial intelligence  ijcai      pp         
sydney  australia 
schild  k          terminological cycles and the propositional  calculus  in doyle  j  
sandewall  e     torasso  p   eds    proc  of the  th int  conf  on the principles
of knowledge representation and reasoning  kr      pp          bonn  morgan
kaufmann  los altos 
schmidt schau  m     smolka  g          attributive concept descriptions with complements  artificial intelligence               
stirling  c          modal and temporal logic  in abramsky  s   gabbay  d  m     maibaum 
t  s  e   eds    handbook of logic in computer science  pp           clarendon press 
oxford 
streett  r  s     emerson  e  a          the propositional mu calculus is elementary  in
proc  of the  th int  col  on automata  languages and programming  no      in
lecture notes in computer science  pp           springer verlag 
streett  r  s     emerson  e  a          an automata theoretic decision procedure for the
propositional mu calculus  information and control              
tarski  a          a lattice theoretical fixpoint theorem and its applications  pacific journal
of mathematics             
van der hoek  w          on the semantics of graded modalities  journal of applied
non classical logics                
van der hoek  w     de rijke  m          counting objects  journal of logic and computation                 
vardi  m  y     wolper  p          automata theoretic techniques for modal logics of
programs  in proc  of the   th an  symp  on the foundations of computer science
 focs      pp          
winsket  g          a note on model checking the modal   calculus  in proc  of the   th
int  col  on automata  languages and programming  no      in lecture notes in
computer science  pp           springer verlag 

   

fi