journal of artificial intelligence research                 

submitted       published     

lifeworld analysis
philip agre

pagre ucsd edu

ian horswill

ian ils nwu edu

department of communication     
university of california  san diego
la jolla  ca        usa
northwestern university computer science department
     maple avenue
evanston  il        usa

abstract

we argue that the analysis of agent environment interactions should be extended to
include the conventions and invariants maintained by agents throughout their activity  we
refer to this thicker notion of environment as a lifeworld and present a partial set of formal
tools for describing structures of lifeworlds and the ways in which they computationally
simplify activity  as one specific example  we apply the tools to the analysis of the toast
system and show how versions of the system with very different control structures in fact
implement a common control structure together with different conventions for encoding
task state in the positions or states of objects in the environment 

   introduction
biologists have long sought concepts to describe the ways in which organisms are adapted to
their environments  social scientists have likewise sought concepts to describe the ways in
which people become acculturated participants in the social worlds around them  yet it has
been dicult to approach these phenomena with the methods of computational modeling 
we can see at least two reasons for this diculty  the first is that the tradition of modeling
in artificial intelligence developed around a concern with cognition  that is  mental processes
understood to intervene between stimuli and responses in human beings  although minority
traditions such as ecological psychology reacted against this approach to studying human
life  they have not been able to translate their concepts into computational mechanisms that
match the expressive power of symbolic programming  the second reason is more subtle 
if one conceives both organisms and their environments as spatially extended mechanisms
that can be explained according to the same principles then the boundary between them
 the surface of the body  is not particularly different from  or more interesting than  the
rest of the total organism environment system  the challenge for computational modeling 
then  is to conceptualize agents  adaptations to their environments in ways that neither
treat agents as isolated black boxes or dissolve them into one big machine 
for these purposes  we find it useful to distinguish between two aspects of an agent s
involvement in its familiar environment  its embodiment and its embedding   embodiment 
pertains to an agent s life as a body  the finiteness of its resources  its limited perspective
on the world  the indexicality of its perceptions  its physical locality  its motility  and so
on   embedding  pertains to the agent s structural relationship to its world  its habitual
c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fiagre   horswill
paths  its customary practices and how they fit in with the shapes and workings of things 
its connections to other agents  its position in a set of roles or a hierarchy  and so forth 
the concept of embedding  then  extends from more concrete kinds of locatedness in the
world  places  things  actions  to more abstract kinds of location  within social systems 
ecosystems  cultures  and so on   embodiment and embedding are obviously interrelated 
and they each have powerful consequences both for agents  direct dealings with other agents
and for their solitary activities in the physical world  our principal focus in this article is on
embedding  and particularly on the ways in which agents maintain relationships to objects
that are functionally significant for their tasks 
in this paper we develop some thoughts about embodiment and embedding as follows 

 section   reviews the concept of the environment as it developed with the early work
of newell and simon 

 section   introduces our own adaptation of the traditional idea  which we call life








worlds  and we sketch what is involved in lifeworld analysis 
section   introduces informally the concept of factorization of lifeworlds  this refers
roughly to the structures of the lifeworld that permit agents  decisions to be made
independently of one another 
section   defines the basics of our formal theory of lifeworld analysis  namely the
concepts of environments  actions  policies  factorization  and the reduction of one
environment to another  the purpose of this formalism is to characterize the kinds of
interactions that can arise between agents and their familiar lifeworlds 
section   briey introduces the computer program we wrote to illustrate some of the
phenomena of lifeworlds 
section   then applies our formalism to modeling the world in which our program
operates  it proceeds by modeling successively more complicated versions of this world 
section   explains how our program keeps track of the objects in the world that
figure in its activities  and discusses the issues that arise when trying to model this
keeping track in formal terms 
section   sums up our formal work by explaining the precise relationship between the
program and the formal model of its world 
section    then expands our theory of lifeworlds more informally by introducing the
concept of cognitive autopoiesis  which is the collection of means by which agents manipulate their surroundings to provide the conditions of their own cognitive processes 
we provide a taxonomy of these phenomena 
section    concludes by suggesting some directions for future work 

   the concept of the environment

intuitively  the notion of  the environment  in ai and robotics refers to the relatively enduring and stable set of circumstances that surround some given individual  my environment is
probably not the same as yours  though they may be similar  on the other hand  although
my environment starts where i leave off  at my skin  perhaps   it has no clear ending point 
nor is it necessarily defined in terms of metric space  if physically distant circumstances
have consequences for my life  via the telephone  say  then they are properly regarded as
   

filifeworld analysis
part of my environment as well  the environment is where agents live  and it determines the
effects of their actions  the environment is thus a matter of importance in computational
modeling  only if we know what an agent s environment is like can we determine if a given
pattern of behavior is adaptive  in particular we need a positive theory of the environment 
that is  some kind of principled characterization of those structures or dynamics or other
attributes of the environment in virtue of which adaptive behavior is adaptive 
herbert simon discussed the issue in his pre ai work  his book administrative behavior         for example  presents the inuential theory that later became known as limited
rationality  in contrast to the assumption of rational choice in classical economics  simon
describes a range of cognitive limitations that make fully rational decision making in organizations impracticable  yet organizations thrive anyway  he argues  because they provide
each individual with a structured environment that ensures that their decisions are good
enough  the division of labor  for example  compensates for the individual s limited ability
to master a range of tasks  structured ows of information  likewise  compensate for the
individual s limited ability to seek this information out and judge its relevance  hierarchy
compensates for the individual s limited capacity to choose goals  and fixed procedures
compensate for individuals  limited capacity to construct procedures for themselves 
in comparison to simon s early theory in administrative behavior  ai has downplayed
the distinction between agent and environment  in newell and simon s early work on
problem solving         the environment is reduced to the discrete series of choices that it
presents in the course of solving a given problem  the phrase  task environment  came to
refer to the formal structure of the search space of choices and outcomes  this is clearly a
good way of modeling tasks such as logical theorem proving and chess  in which the objects
being manipulated are purely formal  for tasks that involve activities in the physical world 
however  the picture is more complex  in such cases  the problem solving model analyzes the
world in a distinctive way  their theory does not treat the world and the agent as separate
constructs  instead  the world shows up  so to speak  phenomenologically  in terms of the
differences that make a difference for this agent  given its particular representations  actions 
and goals  agents with different perceptual capabilities and action repertoires  for example 
will inhabit different task environments  even though their physical surroundings and goals
might be identical 
newell and simon s theory of the task environment  then  tends to blur the difference
between agent and environment  as a framework for analysis  we find the phenomenological
approach valuable  and we wish to adapt it to our own purposes  unfortunately  newell and
simon carry this blurring into their theory of cognitive architecture  they are often unclear
whether problem solving is an activity that takes place wholly within the mind  or whether
it unfolds through the agent s potentially complicated interactions with the physical world 
this distinction does not arise in cases such as theorem proving and chess  or in any other
domain whose workings are easily simulated through mental reasoning  but it is crucial
in any domain whose actions have uncertain outcomes  even though we wish to retain
newell and simon s phenomenological approach to task analysis  therefore  we do not wish
to presuppose that our agents reason by conducting searches in problem spaces  instead 
we wish to develop an analytical framework that can guide the design of a wide range of
agent architectures  in particular  we want an analytical framework that will help us design
the simplest possible architecture for any given task 
   

fiagre   horswill

   lifeworlds
we will use the term lifeworld to mean an environment described in terms of the customary
ways of structuring the activities that take place within it   the conventional uses of
tools and materials  the  loop invariants  that are maintained within it by conventional
activities  and so on  the term originally comes from phenomenological sociology  schutz
  luckmann         where it refers to the familiar world of everyday life  and specifically
to that world as described in the terms that make a difference for a given way of life  cats
and people  for example  can be understood as inhabiting the same physical environment
but different lifeworlds  kitchen cupboards  window sills  and the spaces underneath chairs
have different significances for cats and people  as do balls of yarn  upholstery  television
sets  and other cats  similarly  a kitchen affords a different kind of lifeworld to a chef
than to a mechanic  though clearly these two lifeworlds may overlap in some ways as well 
a lifeworld  then  is not just a physical environment  but the patterned ways in which a
physical environment is functionally meaningful within some activity 
this idea is similar to gibson s theory of perception         but the two theories also
differ in important ways  whereas gibson believes that the perception of worldly affordances
is direct  we believe that the perceptual process can be explained in causal terms  also 
whereas gibson treated the categories of perception as essentially biological and innate  we
regard them as cultural and emergent 
in analyzing a lifeworld  one attempts to draw out the individual structures within it
that facilitate its customary activities  for example  lifeworlds typically contain artifacts
such as tools that have been specifically evolved to support those activities  these tools
are also arranged in the world in ways that simplify life and reduce the cognitive burden
on individuals  cups are typically found in cupboards  food in refrigerators and grocery
stores  no one needs to remember where butter is found in a specific grocery store because
butter in all grocery stores is found in a well defined dairy section  usually along a wall 
which can be recognized from a distance  once the dairy section is in view  the butter will
be visible in a definite area  artifacts are also designed to make their functional properties
perceptually obvious  handles are perceptibly suited for picking up  knobs are perceptibly
suited for turning  forks are perceptibly suited for impaling things  and so on  brady 
agre  braunegg    connell        winston  binford  katz    lowry         contrarily 
it can generally be assumed that artifacts that provide no readily perceptible grounds for
drawing functional distinctions are in fact interchangeable  usually  when some functionally
significant property of an object is not obvious  the lifeworld provides some alternate way
of marking it  if you see a record player in my house  for example  then you will assume
that it is mine unless you have some specific reason not to  these aspects of lifeworlds
tend to make it easy to perform particular kinds of activities within them without having
to remember too many facts or reinvent the screwdriver from first principles 
lifeworlds contain networks of interacting conventions and practices that simplify specific aspects of specific activities  the practices relieve agents of the burden of solving certain
problems on the spot and diffuse their solutions throughout the activity of the agent or of
many agents  for example  a hospital might try to get along without maintaining sterile
conditions  people always have germs  so technically they are always infected  the problem
is making sure that those infections never get out of control  the most direct solution would
   

filifeworld analysis
be constantly to monitor patients  assess their degree of infection and treat them when it
becomes severe  since this is undesirable for any number of reasons  a hospital instead tries
to prevent infections in patients by maintaining sterile conditions  they might do this  for
example  by looking for contaminated objects and surfaces and disinfecting them  unfortunately  sterility is not a visible surface characteristic  instead  hospitals solve the problem
by structuring space and activity  different locations are kept more or less sterile depending
on their conventional uses  operating rooms are more sterile than hallway oors  objects
that can generate germs  people  are washed  masked  and gloved  critical instruments
that come in contact with them are specially sterilized after use  tongue depressors are
assumed to be dirty when they are in the trash can  or biohazard bag  and clean when
they are wrapped in paper  all objects and surfaces are periodically disinfected regardless
of their level of contamination  these practices are maintained regardless of the immediate
need for them  if a hospital were  for some reason  to temporarily find itself without any
patients  its workers would not stop washing their hands or disinfecting the bathrooms 

   factorization of lifeworlds

simon  in sciences of the artificial         argued that complex systems had to be  nearly
decomposable   his model for this was the rooms in a building  whose walls tend to minimize
the effects that activity in one room has upon activity in another  sussman         in
his analysis of block stacking tasks  classified several types of  subgoal interactions  that
result from attempts to break tasks down into subtasks  one hopes that these tasks will be
decomposable  but bugs arise when they are not decomposable enough  one assumes that a
task is decomposable unless one has reason to believe otherwise  sussman s research  and the
rich tradition of planning research that it helped inaugurate  concerned the dicult problem
of constructing plans in the presence of subgoal interactions  our goal  complementary to
theirs  is to analyze the many ways in which tasks really are decomposable  and to derive the
broadest range of conditions under which moment to moment activity can proceed without
extensive analysis of potential interactions 
a non pathological lifeworld will be structured in ways that limit or prevent interactions
among subtasks  some of these structures might be taxonomized as follows 

 activity partition  most lifeworlds separate activities under discrete headings  sewing

is a distinct activity from bathing  gathering food is a separate activity from giving
birth  and so on  these distinctions provide the basis for reckoning  different activities  for the purposes of most of the rest of the partitions  the boundaries among
the various activities are often marked through some type of ritual 

 spatial partition  different things are often done in different places  tasks may be

confined to the places where their associated tools or materials are stored  or where
suitable conditions or lighting or safety obtain  these places may even be close together  as when different recipes are prepared in different sections of countertop space
or different kinds of food are kept in different parts of one s plate  with boundary
regions perhaps employed to assemble forkfuls of neighboring foods  in general  activities are arranged in space  and decisions made in one place tend to have minimal
interaction with decisions made in other places  of course spatial distance brings no
   

fiagre   horswill
absolute guarantees about functional independence  using up all the resources at one
location will prevent them from being carted to another location for another use later
on   so these are just general tendencies 

 material partition  different activities often involve different materials  so that decisions that affect the materials in one activity do not interact with decisions that affect
the materials of the other activity 

 temporal partition  different activities often take place at different times  thus lim 

iting the channels through which they might constrain one another  these times
might be standardized points during the cycle of the day or week  or their ordering
might be constrained by some kind of precondition that the first activity produces
and successive ones depend upon 

 role partition  simon pointed out that division of labor eases cognitive burdens  it
does this in part by supplying individuals with separate spheres in which to conduct
their respective activities 

 background maintenance  many activities have background conditions that are main 

tained without reference to specific goals  for example  one maintains stocks of supplies in the pantry  puts things back where they belong  and so forth  hammond 
converse  and grass        call some of these  stabilization    see section     what
these practices stabilize are the relationships between an agent and the materials used
in its customary activities  they tend to ensure  for example  that one will encounter
one s hammer or the currently opened box of corn akes in definite sorts of recurring
situations  they thus reduce the complexity of life  and the variety of different hassles
that arise  by encouraging the rise of routine patterns and cycles of activity rather
than a constant stream of unique puzzles 

 attributes of tools  numerous properties of tools limit the interactions among separate

decisions  virtually all tools are resettable  meaning that regardless of what one has
been doing with them  they can be restored to some normal state within which their
full range of functionalities is accessible   this of course assumes that one has only
been using the tools in the customary ways and has not been breaking them   thus
the properties of the tool do not place any ordering constraints on the activities that
use it  likewise  most tools are not committed to tasks over long periods  once you
have turned a screw with a screwdriver  for example  the screwdriver does not stay
 stuck  to that screw for any long period  thus it is not necessary to schedule the
use of a screwdriver unless several people wish to use it at once  exceptions to this
general rule include bowls  whose ingredients must often sit waiting for future actions
or conditions  and which cannot contain anything else in the meantime   stove burners
 which sometimes must remain committed to heating particular dishes until they have
reached certain states and not before   and clamps  which must remain fastened until
the glue has dried or the sawing operations have been completed  

 supplies of tools  these latter tools raise the spectre of generalized scheduling problems and the potential for deadlock among multiple activities  and such problems do
   

filifeworld analysis
in fact sometimes arise when cooking for more people than the number to which a
given kitchen is adapted  most of the time  though  one solves such problems not
through scheduling but simply through having enough of the tools that must remain
committed to particular purposes over a period of time  lansky and fogelsong       
modeled the effects on search spaces of limited interactions between different cooks
using overlapping sets of tools 

 warning signs  when things go wrong  unpleasant subgoal interactions can ensue 

to avoid such diculties  an individual  community  or species keeps track of warning
signs and cultivates the capacity to notice them  these warning signs include supplies
running low and funny smells  this is often done on a primitive associative level  as
when rats stay away from smells that were associated with stuff that made them sick
or people develop phobias about things that were present when they suffered traumas 
communities often arrange for certain warning signs to become obtrusive  as when
kettles whistle or natural gas is mixed with another gas that has a distinctive smell 

 simple impossibility  sometimes things are just impossible  and obviously so  so that
it is not necessary to invest great effort in deciding not to do them 

 monotonicity  many actions or changes of state are irreversible  irreversible changes
cause decisions to interact when certain things must be done before the change takes
place  but it also provides a structure for the decision process  the lifeworld needs to
make it evident what must be done before a given irreversible change occurs 

 flow paths  often a lifeworld will be arranged so that particular materials  parts on an

assembly line  paperwork in an organization  food on its way from refrigerator to stove
to table  follow definite paths  these paths then provide a great deal of structure for
decision making  by inspecting various points along a path  for example  one can see
what needs to be done next  or by determining where an object is  one can determine
what must be done to it and where it must be taken afterward  some of these paths
are consciously mapped out and others are emergent properties of a set of customs 

 cycles  likewise  many lifeworlds involve stable cycles of activities  perhaps with

some of the cycles nested inside of others  the resulting rhythms are often expressed
in recurring combinations of materials  decisions  spatial arrangements  warning signs 
and so on 

 externalized state  to computer people   state   used as a mass noun  means dis 

cernible differences in things that can be modified voluntarily  and that can be interpreted as functionally significant in some way  early ai did not treat internal state
 memory  and external state  functionally significant mutable states of the world  as
importantly different  and it is often analytically convenient to treat them in a uniform
fashion  it is often advantageous to record state in the world  whether in the relative
locations of things and the persistent states  in the count noun sense  that they are
left in  beach         for example  one need not remember whether the eggs have
been broken if that fact is readily perceptible  if one s attention will be drawn to it on
a suitable occasion  and if one understands its significance for the task  likewise  one
   

fiagre   horswill
can save a great deal of memory by retrieving all of the ingredients for an evening s
recipes from the cupboards and placing them in a customary place on the shelf 
lifeworlds  then  have a great deal of structure that permits decisions to be made independently of one another  the point is not that real lifeworlds permit anyone to live in a
      reactive  mode  without performing any significant computation  or even that this
would be desirable  the point  rather  is that the nontrivial cognition that people do perform takes place against a very considerable background of familiar and generally reliable
dynamic structure 
the factorability of lifeworlds helps particularly in understanding the activities of an
agent with a body  a great deal of focusing is inherent in embodiment  if you can only look
in one place at a time  or handle only one tool at a time  your activities will necessarily
be serial  your attention will have a certain degree of hysteresis  having gotten to work
on one countertop or using one particular tool  for example  the most natural step is to
carry on with that same task  it is crucial  therefore  that different tasks be relatively
separate in their consequences  that the lifeworld provide clues when a change of task is
necessary  and that other functionally significant conditions can generally be detected using
general purpose forms of vigilance such as occasionally looking around  of course  certain
kinds of activities are more complex than this  and they require special purpose strategies
that go beyond simple heuristic policies such as  find something that needs doing and do
it   the point is that these more complex activities with many interacting components are
rare  that they are generally conducted in specially designed or adapted lifeworlds  and that
most lifeworlds are structured to minimize the diculty of tasks rather than to increase it 
these various phenomena together formed the motivation for the concept of indexicalfunctional or deictic representation  agre   chapman        agre         embodied agents
are focused on one activity and one set of objects at a time  many of these objects are specifically adapted for that activity  their relevant states are generally readily perceptible  objects
which are not perceptibly different are generally interchangeable  and stabilization practices
help ensure that these objects are encountered in standardized ways  it thus makes sense 
for most purposes  to represent objects in generic ways through one s relationships to them 
the ashlight i keep in the car is the ashlight i keep in the car and not flashlight    
i maintain a stable relationship to this ashlight by keeping it in a standard place  putting
it back there when i am done with it  using it only for its intended purposes  keeping its
batteries fresh  and so on  its presence in the environment ensures that i have ready access
to light when my car breaks down at night  and therefore that i need not separately plan
for that contingency each time i drive  the conventional structures of my own activity
maintain the ashlight s presence as a  loop invariant   both the presence of the ashlight
and the activities that ensure it are structures of my lifeworld 

   environments  policies  and reducibility

in this section  we will introduce our formalism  the purpose of the formalism is not directly
to specify the workings of the agent s cognitive machinery  instead  its purpose is to construct  principled characterizations of interactions between agents and their environments
to guide explanation and design   agre         the formalism  in other words  describes
an agent s embodied activities in a particular environment  having characterized the dy   

filifeworld analysis
namics of those activities  it becomes possible to design suitable machinery  as a matter
of principle  we want to design the simplest possible machinery that is consistent with a
given pattern of interaction  horswill         we therefore make no a priori commitments
about machinery  we do not favor any particular architecture until a particular activity has
been analyzed  nor do we make any a priori commitments about matters such as analog
versus digital   planning  versus  reaction   and so on  our experience has been that real
lifeworlds and real activities incorporate a great deal of useful dynamic structure  and that
any effort we invest in studying that structure will be repaid in parsimonious theories about
machinery  but we intend our methods to be equally useful for investigating all types of
activity and designing all types of machinery that might be able to participate in them 
the concept of a lifeworld will not appear as a specific mathematical entity in our
formalism  the intuition  however  is this  while there is an objective material environment 
the agent does not directly deal with all of this environment s complexity  instead it deals
with a functional environment that is projected from the material environment  that
projection is possible because of various conventions and invariants that are stably present
in the environment or actively maintained by the agent  the lifeworld should be understood
as this functional world together with the projection and the conventions that create it 
this section summarizes the formal model of environmental specialization given by horswill
        for proofs of the theorems  see the original paper  subsequent sections will apply
and extend the model 
we will model environments as state machines and the behavior of agents as policies
mapping states to actions 
 an environment e is a pair  s  a  where s is its state space and a its set of possible
actions 
 an action a  s   s is a mapping from states to states 
 a policy p  s   a is a mapping from states to actions to be taken  in this paper  the
states will only include facts about the physical environment  but it is a straightforward matter to include an agent s internal states as well  horswill        
the combination of a policy with an environment creates a dynamic system  the environment s state is mapped by the policy to an action that maps the environment to a new state
and the whole process is repeated 
 a discrete control problem  dcp  is a pair  e  g  of an environment e and a goal g 
which is some subset of e  s state space 
 a policy solves the problem if the dynamic system it generates with the environment
eventually reaches a goal state 
 it solves the problem and halts if it remains within g once entering it 
for example  consider a robot moving along a corridor with n equally spaced oces
labeled          and so on  we can formalize this as the environment zn    f           n  
 g  fincn   dec  ig   where i is the identity function  and where incn and dec map an integer
i to i     and i      respectively  with the proviso that dec        and incn n        n    
   

fiagre   horswill

 dec i 
 i inc 

dec

dec

inc 
 

dec

inc 

 

 i dec 

inc 
 

     
 i inc 

 

 dec i 

 i dec 

inc 

inc 
 

 i inc 

     

dec

 inc i 
 i inc 

 inc i 

       dec i       

dec

 dec i 
 i dec 

 inc i 

 inc i 
 i dec 

figure    the environment z   left  and and the serial product of z  with itself  expressed
as graphs  function products have been written as pairs  i e  inci is written as
 inc  i   identity actions  i and ii  have been left undrawn to reduce clutter 
 see figure     note that the effect of performing the identity action is to stay in the same
state 
we emphasize that a policy is a model of an agent s behavior  not of the causal computational processes by which that behavior is exhibited  it specifies what an agent does in each
state  not how it does it  it is thus a theoretical construct  not a data structure or algorithm
in the agent s head  we will examine the implementation issues that surround policies in
section   

    product environments

the majority of the formal sections of this paper will explore the phenomenon of factoring 
in particular  we will explore how policies for factorable environments can be composed
from policies for the factors  in state machine models of environments  factorization is
the factorization of the state space  the environment s state space is a cartesian product
of other state spaces  the environment  as a whole  is  factorable  into its component
sub environments  for example  the position of the king on a chess board has row and
column components  it can be thought of as the  product  of those components  each if
which is isomorphic to z   since there are eight rows and eight columns   if we consider
an environment in which a car drives through an    grid of city blocks  we see that it too
is a kind of product of z  with itself  both environments have    grids as state spaces 
but the car environment only allows one component to change at a time  whereas the king
environment allows both to change 
we must therefore distinguish different kinds of factorization  we will call the chessboard
case the parallel product of z  with itself  while the car case is its serial product  we will
focus on another kind of factorization later  let the cartesian product of two functions f
and g be fg   a  b      f  a   g b    and let i be the identity function  for two environments
e     s   a    and e     s    a     we will define the parallel product to be

e  k e     s s   fa a    a    a   a    a  g 
   

filifeworld analysis
and the serial product to be
e   
  e     s s   fa i   a    a  g   fia    a    a  g 
the products of dcps are defined in the obvious way 
 e    g    k  e    g       e  k e    g g  
 e    g     
   e    g      e   
  e    g g  
the state diagram for z   
  z  is shown in figure   
we will say that an environment or dcp is parallel  or serial  separable if it is isomorphic
to a product of environments or dcps 
      solvability of separable dcps

the important property of separable dcps is that their solutions can be constructed from
solutions to their components 
lemma   let p  be a policy which solves d  and halts from all states in some set of initial
states i    and let p  be a policy which solves d  and halts from all states in i    then the
policy
p x  y    p  x p  y 
solves d  k d  and halts from all states in i i     note that here we are using the convention
of treating p  a function over pairs  as a function over two scalars  
lemma   let p  be a policy which solves d  from all states in some set of initial states
i   and let p  be a policy which solves d  from all states in i    then any policy for which
p x  y    p   x i or ip  y 
and
y   g   x    g    p x  y    p  x i
x   g   y    g    p x  y    ip  y 
will solve d   
  d  and halt from all states in i i  
note that the parallel and serial cases are different  one would expect the parallel case
to be easier to solve because the policy can perform actions on both state components
simultaneously  in fact it is more dicult because one is required to perform actions on both
simultaneously and this leaves the agent no way of preserving one solved subproblem while
solving another  consider a  ip op  environment f    f    g  fflipg  where flip x   
    x  f has the property that every state is accessible from every other state  f  
 f
also has this property  f k f   however  does not  f k f has only one action  which ips
both state components at once  thus only two states are accessible from any given state
in f k f   the state itself and its ip  as with the king  the problem is fixed if we add the
identity action to f   then it is possible to leave one component of the product intact  while
changing the other  the identity action  while sucient  is not necessary  a weaker  but
still unnecessary  condition is that f have some action that always maps goal states to goal
states 
   

fiagre   horswill

s 



s    s   

a 
a   s   
unreduced environment

a


a s     a   s    
reduced environment

figure    a simple reduction from an environment e   to e   here s and s  are corresponding
states from the reduced and unreduced environments respectively and a and a 
are corresponding actions  a projection  is a simple reduction if it  commutes 
with actions  so that  a   s       a  s      or alternatively    a    a    thus
regardless of whether we take the projection before or after the action  we will
achieve the same result 

    reduction

another important kind of structure is when one environment can be considered an abstraction of another  newell  shaw    simon        sacerdoti        knoblock         the
abstract environment retains the fundamental structure of the concrete environment but
removes unimportant distinctions among states  an abstract state corresponds to a set
of concrete states and abstract actions correspond to complicated sequences of concrete
actions 
we will say that a projection  from an environment e   to another environment e is a
mapping from the state space of e   to that of e   we will say that  is a simple reduction
of e   to e if for every action a of e   there is a corresponding action a  of e   such that for
any state s 
 a   s      a  s    
or equivalently  that
  a    a  
where  is the function composition operator  we will say that a  is a  implementation of
a and we will use a to denote the function mapping e  actions to their implementations
in e    
it is possible to define a much more powerful notion of reduction in which implementations are allowed to be arbitrary policies  it requires a fair amount of additional machinery 
however  including the addition of state to the agent  since simple reduction will suce for
our purposes  we will simply assert the following lemma  which is a direct consequence of
the more general reduction lemma  horswill        
lemma   let  be a simple reduction from e   to some environment e and let  e     g   be
a dcp  if a policy p solves  e   g      then
p   a  p  
   

filifeworld analysis
solves  e     g    

    related work

most formal models of environments use state space descriptions of the environment  usually finite state machines  rosenschein and kaelbling used finite state machines to represent
both agent and environment                     their formalization allowed specialized
mechanisms to be directly synthesized from descriptions of desired behavior and a formalization of the behavior of the environment  the formalization was powerful enough to form
the basis of a programming language used to program a real robot  later  rosenschein developed a method for synthesizing automata whose internal states had provable correlations
to the state of the environment given a set of temporal logic assertions about the dynamics
of the environment  donald and jennings        use a geometric  but similar  approach
for constructing virtual sensors  lyons and arbib        model both organisms and robots
using process algebras  and beer        employs the formalisms of dynamic systems theory 
wilson        has specifically proposed the classification of simulated environments
based on the types of mechanisms which can operate successfully within them  wilson
also used a finite state formalization of the environment  he divided environments into
three classes based on properties such as determinacy  todd and wilson        and todd
et al         taxonomized grid worlds in terms of the behaviors that were successful in
them  littman        used fsm models to classify environments for reinforcement learning
algorithms  littman parameterized the complexity of rl agents in terms of the amount
of local storage they use and how far into the future the rl algorithm looks  he then
empirically classified environments by the the minimal parameters that still allowed an
optimal control policy to be learned 
there is also an extensive literature on discrete event dynamic systems  kosecka        
which also model the environment as a finite state machine  but which assume that transition
information  rather than state information  is visible to the agents 
an alternative to the state machine formalism can be found in the work of dixon        
dixon derives his semantics from first order logic  in which the world comes individuated into
objects and relations  rather than on the state space methods used here  dixon s  open 
approach also avoids the need to define the environment as a single mathematical structure 
like this work  dixon s work attempts to formally model the assumptions a system makes
about its environment  dixon s interest  however  is on what an individual program means
rather than on comparing competing programs 

   toast

toast  agre   horswill        is a program that simulates a short order cook in a reasonably detailed simulation of a kitchen  see figure     in toast  the world consists of a

set of objects such as ovens  pans  cutting boards  globs of pancake batter  individual eggs 
and customers of the restaurant  each object has a type  e g   egg  and all objects of a
given type have a common set of possible states and a common set of possible operations
that can be performed on them  an action involves a set of objects of given types  the
action can require that the objects be in specified states and it may change the states of
those objects  but no others  for example  the mix operation would involve objects of type
   

fiagre   horswill
time
 
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
   
   

event
 break egg egg    bowl     making omelette 
 add egg egg    omelette batter   
 add egg egg   omelette batter   
 beat omelette batter   whisk 
 move pan   burner   
 move butter pat    pan   
 melt burner   pan   butter pat    
 move slice    toaster   waiting for butter so making toast 
 start toaster slice    
 move knife   plate     waiting for toast so setting table 
    done with goal  knife clean plate       
 move plate   kitchen table 
 move fork   plate   
    done with goal  fork clean plate       
 move spoon   plate   
toaster pops 
 move butter pat    knife     back to toast 
 butter slice    knife   butter pat    
 pour omelette batter omelette batter         butter melted so back to omelette 
 move slice    plate     setting table 
    done with goal  slice buttered plate       
    done with goal  spoon clean plate       
 pour flour flour bowl     making pancake 
 add sugar sugar pancake batter   
 add baking powder baking powder pancake batter   
 fold omelette   spatula     tending omelette 
 add milk milk dispenser pancake batter     back to pancakes 
 add egg egg   pancake batter   
 mix pancake batter   spoon   
 move pan   burner   
 flip omelette   spatula     tending omelette 
 move butter pat    pan     pancake 
 melt burner   pan   butter pat    
 move omelette   plate     finishing omelette 
    done with goal  omelette cooked plate       
 spoon batter pancake batter   pan   butter pat      pancake 
 flip pancake   spatula   
 move pancake   plate   
    done with goal  pancake cooked plate       
 move plate   kitchen table 
 move pan   burner     pancake   
 move butter pat    pan   
 melt burner   pan   butter pat    
 spoon batter pancake batter   pan   butter pat    
 flip pancake   spatula   
 move pancake   plate   
    done with goal  pancake cooked plate       
 move plate   kitchen table 
 clean pan     cleanup 
 clean pan   
 clean spoon   
 clean spatula   
 clean bowl   
 clean knife   
 clean pan   
 clean whisk 
 clean bowl   
 turn off burner   
 turn off burner   
 turn off burner   

figure    sample run of the breakfast program  the agent was given the goals of making
an omelette  two pancakes  a slice of toast  and setting the table  then cleaning
up  our comments appear in square brackets 
mixing bowl  batter 

and spoon  it would require that the spoon be in the clean state
and its effects would be to put the batter in the mixed state and the spoon in the dirty
state  objects can perform actions  so the toast agent  the oven  and the customers are
each modeled as objects that perform the actions of cooking  transferring heat  and making
orders  respectively 
toast divides most of the objects in its world into two important classes  see figure
    informally  tools are objects that     are not end products of cooking and     are easily
   

filifeworld analysis
material  eggs  fresh   broken   beaten   cooked 
material  butter pat  fresh   melted 
material  milk supply  non empty   empty 
material  pancake batter  has our   has sugar   has dry   has milk   has all   mixed 
material  pancake  cooking   cooked   side   ipped   cooked   burnt 
material  bread slice  fresh   toasted   buttered 
tools  forks  spoons  knives  spatulas  whisks  clean   dirty  dirty   clean 
containers  bowls  plates  pans  stove burners  countertop  toaster  bread bag 
active objects  agent  stove burners  toaster 

figure    some object types in the current system 
reset to their initial states  for example  knives and spoons are used and dirtied in the
process of cooking  but they are not end products of cooking and they are easily reset to
their clean state by washing  materials are objects that are end products of cooking but
have state graphs that form linear chains  in other words  for any state of the material 
there is exactly one other state that it can be brought to and there is exactly one action that
can bring it there  for example  an egg being scrambled always goes through the series of
states unbroken  broken  beaten  cooked  in the unbroken state  the only action available
on an egg is break  after which the only action available will be beat 
toast is given a stock of each type of object  as it runs  the customers give it goals
 orders  to prepare specific dishes  the goal specifies a type of material  e g    egg    it
is satisfied by putting some object of that type into its finished state  which egg object is
cooked does not matter  toast manages a dynamic set of these goals and opportunistically
overlaps their preparation as processes finish and scarce resources  such as stove burners 
become free  toast uses a surprisingly simple algorithm 
on each clock cycle of the simulator 
choose a material already being cooked
look up the action needed to advance it to the next state
if the action requires additional tools 
then choose objects of the proper types
if those objects are in their reset states
then perform the action
else choose one of the unreset tool objects
look up and perform its reset action

this algorithm is intentionally sketchy because we have implemented many versions of
it which we find intuitively similar  but which have very different control structures and
require very different correctness proofs  the task of the next section will be to draw out
their similarities and produce a coherent theory of them 
the toast algorithm has two interesting features 

 most of the algorithm proceeds by table lookup 
 the algorithm is stateless  no internal plans or models are stored in the agent  all
information used to choose actions is stored in the world 
   

fiagre   horswill
table lookup implies that the algorithm is fast and simple  statelessness makes the algorithm simple as well  and relatively robust in the face of unexpected perturbations 

   modeling the toast world

why does toast work  more specifically  what properties of its environment does it rely
upon to work  in general  our strategy is to identify a series of structures in the environment
that permit toast s tasks to be factored  and then to define a series of reductions that
permit more complex versions of toast s problem to be defined in terms of simpler ones 
we do not claim any vast generality for the toast architecture  we simply observe that the
environmental regularities that toast relies upon are common to many other environments 
and we suggest that our method in arguing for toast s architecture seems likely to extend
to other types of structure in the environment  although different versions of toast rely
on different structures  we will show below that all the versions rely on 
   the factorability of the environment into individual objects  factoring allows us
to construct solutions to problems from solutions to subproblems for the individual
factors 
   the special properties of the tool and material object classes 
   the maintenance of invariants in the agent s own activity that introduce new structure
into the environment 
the formalization of the properties of tools and materials is simple  the precise formalization of factorability into objects  however  is surprisingly dicult because the environment is not directly factorable using the methods we have developed so far  we will solve
the problem by defining a new factoring technique called uniform reduction  in which the
environment is viewed as a collection of overlapping instances of schematic environments 
each containing the minimal set of objects necessary to perform the task  the agent solves
the task by choosing one of these instances and reducing the goal in the true environment
to the solution of that schematic instance  to do this  the agent must keep track of which
instance it is operating on as it goes along  this could be accomplished with internal memory  of course  but then the agent would need more and more memory as it performs more
and more tasks concurrently  we will show that by structuring its activity  the agent can
make this information manifest in the environment  thus  storing  the information in the
world 

    single material worlds

we will start by defining the schematic environment for toast  the environment has
exactly one material to be cooked and one of each tool needed to cook it  to simplify
further  we will start by ignoring even the tools  then we will
   solve the no tools case 
   reduce the self resetting tools case to the no tools case 
   reduce the general case to the self resetting tools case 
   

filifeworld analysis
      single material worlds with no tools

since materials have linear chains as their state spaces  action in them is restricted  to say
the least  in the case of an egg  we might have the chain 
fresh break
  broken beat
  beaten heat
  cooked heat
  burnt
 we will assume that the identity  or  nop   action is always available in every state  this
is not a trivial assumption   in any given state  only one non trivial action can be executed 
so action selection for an agent is trivial  when solving a dcp involving a single material
world one of the following must always hold 
 the current state is a goal state  so we need only execute the identity action 
 the current state is a pregoal state  some goal state is later in the chain than the
current state  so we can reach it by executing the unique action that brings us to the
next state in the chain 
 the current state is a postgoal state  all goal states are earlier in the chain  so the
problem is unsolvable 
all that really matters in single material worlds  therefore  is how many states there are
and in which direction the goal lies relative to the current state  in a sense  there is only
really one single material world  or rather one class of them  namely the chains cn of given
length 
cn    f        ng  fincn   ig 
 note this is just the same as the environment zn   but without the actions that move
backward along the chain  
proposition   all single material worlds of n states are reducible to cn
proof  let e    s  a  be the single material environment  define   s   f        ng by
letting  s  be s s position in e  s state chain  i e  the first state maps to    the second to
   etc  let action s  denote the unique action that can be performed in state s  then
pincn  s     action s   s 
is a  implementation of incn and so e is reduced   
just as there is only one real class of single material worlds  there is only one real class
of policies for single material dcps 
 
s g
pcn  g s    i inc   ifotherwise
n
which clearly solves the dcp  cn   g  for any n and valid g 
corollary   if a goal g is solvable in a single material environment e with no tools  then
it is solved by the policy
 
s g
pe g s    i  action s   s   ifotherwise
   

fiagre   horswill
      single material worlds with single state tools

now suppose the world contains a material and a set of tools  but those tools always clean
or otherwise reset themselves after use  self resetting tools have only one state  and so they
are a trivial kind of environment  we define the  singleton  environment as the environment
with exactly one state 
s    freadyg  fig 
all single state environments are isomorphic to s   so we model an environment consisting
of a material m    s  a  and a self resetting tool as m k s   its state space is simply
s  freadyg and its actions are just the set

fa     sm   ready      a sm    ready ja   ag
each such action performs some action from m on the m  component of the product s state
and leaves the s component unchanged  by induction  we have that 

proposition   any environment m is isomorphic to m ks n  
and so single state tool worlds are trivially reducible to tool free worlds 
      single material worlds with general tools

the general tool environment is identical to the single state tool environment  except that
actions can change the states of tools in addition to the states of materials  we can solve the
general tool case using a solution to the single state tool case by resetting tools whenever
they are dirtied 
the proof is simple  but requires that we formalize the notion of being a tool  let e be
an environment with a state space of the form s   s        sn  let a be an action of e
and si be a component of its state space  we will say

 a is independent of si if a never changes si and it has the same result regardless of
the value of si  

 a is focused on a component si if it is independent of all other components 
 si is a tool if it has some privileged value readyi   si such that 
  from any state  s        si        sn   of e   we can reach the state  s        readyi        sn  

using only actions focused on si  
  for any action a  a is either independent of the si  focused on si  or else only
defined on states whose si component is readyi  

now we can prove the general tool case is reducible to the single state tool case 

lemma   any environment with tool components can be reduced to one in which the tools
have been replaced by singletons  specifically  let d     s  a   g  be a dcp and let readyt  
t   and a    fa     s  readyt       a s   t ja   a  s   s  and t   t g  then d      s  t  a   
at    g  freadyt g  is reducible to d when t is a tool in d  
   

filifeworld analysis
proof  let pd be a solution  policy  for d  by the definition of a tool  there must be a
policy pt that will bring d  from any state  s  t  to  s  readyt   without changing the s
component  let  be the projection from d  to d given by

 

t   readyt
 s  t    s    ifotherwise
for each a   a  we define the  implementation of a  pa by
   
t   readyt
pa  s  t    ap     ifotherwise
t
and so d  is reducible to d  the general case of multiple tools follows from induction   

    multiple material worlds with single material goals

to reprise  we want to factor the environment into its individual objects and then describe
toast as a composite of techniques for operating on the individual factors  we cannot
properly define environments as cartesian products of individual objects defined in isolation
because we have no way of expressing actions involving multiple objects  we can  however 
define a set of objects in the context of a minimal  schematic environment containing one
copy of each object  having done so  we now want to recapture the notion of an environment
being some kind of product of objects of different types  we will do this by showing that an
environment with two eggs can be thought of as two overlapping copies of an environment
with one egg  the copies differ only in the choice of the egg 
we will treat environments as having state spaces formed as products of the state spaces
of their objects  a state of the environment is a tuple of the states of its objects  a binding
of the schematic environment to the real environment is a particular kind of projection from
the complex environment to the schematic  one which is also a reduction  if all reasonable
projections are valid bindings  then we will say the environment is uniformly reducible to
the schematic environment 
      bindings and uniform reducibility
let e   and e be environments with state spaces built as cartesian products of a family of

disjoint sets fsi g  the si might represent the state spaces of object types like egg and fork 
e   and e would then each have state spaces make of up some number of copies of egg and
fork 
we will say that a projection  from e   to e is simple if every component of its result
is a component of its argument  that is

 s   s    s        sn      si    si         sim  
for some i         im in     n   thus  takes a e    state  s    probably throws away some of its
components  and possibly rearranges the rest to form a new tuple  for example   might

single out a particular egg s state and or a particular fork s state and throw the other state
components away  when a projection is simple  we can define a kind of inverse for it 
   

fiagre   horswill

schematic world

multiple object world

the egg

egg 

the fork

egg 

the spatula

egg 

the pan

egg 
egg 
fork 
fork 
fork 
spatula 
spatula 
pan 
pan 

figure    a binding  solid vectors  and an alternate binding  dashed  
which we will call its back projection  we will define the back projection     s  s     of  to
be the function whose result is s  with those components that  keeps replaced by their
corresponding components from s  for example  if  is defined by
 s     s    s        s     s   
then its back projection would be given by 
    sa  sb     s     s    s         s    sb   sa 
we will say that a simple projection is a binding of e to e   if it is also a simple reduction
of e   to e  see figure    
lemma   let  be a binding of e to e     then a is given by
a  a    a   where a  s       a  s      s   
that is  the implementation of an e  action is simply  s back projection composed with that
action and  
the proof follows from the definitions of simple projection and back projection  we will
say that e   is uniformly reducible to e if every simple projection from e   to e is a binding 
      existential goals
toast is given the goal of putting some instance of a given material in its finished state 

we will call this an existential goal because it is satisfied by exactly those environment
states in which there exists an object of a specified type in a specified state  let  e  g  be
a dcp and let e   be uniformly reducible to e   we define the existential goal  e e g of g
in e   to be the set of states in e   that project under some binding to a goal state in  e  g  
 
   g 
 e e g  
 

 

 a binding of e to e

   

 

filifeworld analysis
where     g    fs     s      gg is the set of states that map to goal states under   given
a solution to a schematic goal in a schematic environment  we can easily construct any
number of solutions to the existential goal 

lemma   if policy p is a solution for the problem  e  g  from initial states i   and  is a
binding from e   to e   then
p   a  p  
is a solution for  e      e e g  from initial states     i    where a is the function mapping
actions in e to their corresponding actions under  in e    
 

the toast algorithm implements a policy which is a composition of a schematic solution
and a binding that maps it onto the real world  consider the problem of cooking an egg 
the schematic solution might be 

break the egg into the pan
beat the egg in the pan using the whisk
heat the egg in the pan
here the boldface verbs break  beat  and heat name actions  the italicized expressions the 

egg and the pan name the objects  state components  that they affect in the simplified world 
the binding then determines objects in the real world to which those state components
correspond  given a binding  the main control structure need only remember the sequence
break  beat  heat  each of these may have preconditions on the states of the tools  i e  the
whisk needs to be clean   but they can be handled by reduction given policies for resetting
the tools 
      binding maps

given the basic policy for cooking a single egg with a single pan and whisk  we can construct
a policy to achieve the goal by composing the basic policy with a binding  this policy will
solve the goal from any state in which the bound material is in a non postgoal state  for a
policy to solve the goal from any solvable state  it must be able to change bindings at run
time  we will call a function from states to bindings a binding map 
one simple policy for choosing bindings is to impose some a priori ordering on the
objects and always use the first acceptable object in the ordering  the ordering might be
random  or it might correspond to order imposed by a visual search mechanism  from a
formal standpoint  the ordering does not matter  so we can  without loss of generality  use
the left to right order of state components in the environment s state tuple  let m  be
some binding map that always chooses the leftmost pregoal material and uses some fixed
mapping for the tools  we do not care what   this mapping allows us to construct a true
solution  and one that requires no internal state in the agent 

proposition   the policy
pm   s     am  s   p   m   s    s 
is a solution from any state for which m  is defined 
   

fiagre   horswill
proof  by assumption  m  is defined in the initial state  the environment must then map
to a solvable state under m  in the initial state  since p is  by assumption  a solution for
the problem in e   pm  must solve the problem in e   unless m  changes value before the
pm  can solve the problem  suppose it does  then the environment must go from a state
s    in which some state component of e   is the leftmost pregoal material  to a state s    in
which some other component is the leftmost pregoal material  this can only happen if  a 
the leftmost pregoal material in s   is changed to be in a goal state in s   or  b  some other
component that was not pregoal in s   becomes pregoal in s     case  b  is impossible and
case  a  implies that s   is itself a goal state  thus pm  must be a solution   

    multiple goals  metabolism

thus far  we have not considered what happens once a policy achieves its goal  since agents
rarely set out to achieve a goal and die  we now want to consider how to account for extended
activity involving many goals 
one important class of extended activities is when an agent transforms a whole class of
identical objects  we will call this metabolizing the class  metabolism can be useful or it
can make extra work  cooking     eggs is useful  at least if you are feeding a lot of people 
dirtying     forks  however  probably means you have to wash them all 
whether a policy metabolizes an object class depends in large part on the binding map
it uses  the policy pm  metabolizes its materials because the material being worked on
ceases to be the leftmost pregoal material as soon as it arrives in a goal state  when this
happens  m  changes bindings and the agent starts to work on a different object  policy p
never actually sees a material in a goal state  of course  the property of being  leftmost 
is an artifact of our formalism  what matters to the property of metabolism is simply
that the binding map implement some ordering on the instances of the material and always
choose the minimum under that ordering of the objects that are in pre goal states  such
an ordering might be implemented by the agent visually scanning its work surface for an
uncooked egg  but always scanning left to right and top to bottom  we will return to these
issues in section   
other binding maps lead to other kinds of behavior  some of which are pathological  if
the binding map always chooses the same binding  then metabolism ceases  if the binding
map always chooses uncooked eggs but doesn t impose any ordering on them  it might start
cooking an infinite number of eggs without ever actually finishing any one of them 
metabolism is also an issue for tool use  to metabolize its materials  pm  must repeatedly
reset its tools  an alternate policy is to metabolize the tools too  let us define m  to be
the binding map that uses not only the leftmost pregoal material but also the leftmost reset
tools  then clearly 
pm   s     am  s   p   m   s    s 
is a solution from any state for which m  is defined  this policy treats tools as disposable 
so long as there is an infinite supply of fresh tools  p will see a succession of states in which
tools are in their reset states  it will never need to execute a resetting action and so the
environment is effectively a single state tool environment  thus the reduction of section
      is unnecessary 
   

filifeworld analysis

    multiple goals  interleaved execution

metabolism involves performing the same transformation uniformly to instances of the
same type of object  cooking all the eggs  or cleaning dirtying all the forks  often times 
however  an agent will work toward different kinds of goals at once  this can often be
done by interleaving the actions from solutions to the individual goals  we will say that
an interleaving i is a function that returns one or the other of its first two arguments 
depending on a third state argument 

i  s  p    p      fp    p g  for all s
when the last two arguments of i are policies  the result is itself a policy  so we will define
the notation 
ip  p   s     i  s  p    p     s 
if we wanted to simultaneously make toast and cook an egg  then a good interleaving of
a toast making policy and an egg cooking policy would be one that chose the egg making
policy whenever the egg had finished its current cooking step  and so was ready to be
ipped or removed from the pan  and chose the toast making policy when the egg was busy
cooking  a bad interleaving would be one that always chose the toast making policy 
an interleaving i is fair for p  and p  if starting from any state  ip   p  will after some
finite number of steps have executed both p  and p  at least once  finally  we will say
that two bindings are independent if they map disjoint sets of components to their images 
binding independence is a special case of subgoal independence  two policies can t possibly
interfere if they alter distinct state components  fairness and binding independence are
sucient conditions for an interleaving to solve a conjunctive goal 

lemma   let p    a   p      and p    a   p      be policies that solve the goals g 

and g   respectively  and halt  if   and   are independent and i is a fair interleaving for
p  and p  then ip  p  solves g    g  and halts 
proof  since i is a fair interleaving  each of the two policies will be executed in finite time 
regardless of starting state  by induction  for any n  there is a number of steps after which
i is guaranteed to have executed at least n steps of each policy 
the policy p  is the composition of a policy p   for a state space s  with a binding  if
p  solves g  and halts  then it must do so by having p   solve  g    and halt in some finite
number of steps n  during execution  the environment goes through a series of states

s   s        sn
which project under   to a series of states

s    s         s n
we claim that any execution of the interleaving ip   p  must bring the environment through
a sequence of states that project under   to
 s         s              s n         
   

fiagre   horswill
that is  a string of states in which s   appears at least once  then s     appears at least once 
and so on  the only state transitions that appear are from some s i to itself or to s i    
suppose it were otherwise  then there must be a point at which this series is broken 
 s         s              s i      s
where s is neither s i nor s i     we have two cases  case    p  executed the transition 
then we have that p    s i     s    s i     a contradiction  case    p  executed the transition 
then p  has changed one of the state components mapped by   and so   and   are not
independent  a contradiction  thus the interleaving solves g    by the same reasoning  it
must halt in g    since p  halts in g    also by the same reasoning  it must solve g  and
halt  and hence  must solve the intersection and halt   
a useful corollary to this is that when the same policy is applied under two independent
bindings  the bindings can be safely interleaved  that is  interleaving commutes with binding 

corollary   if p    a   p    and p    a   p    be policies that solve the goals g  and
g   respectively  and halt  and i is a fair interleaving for p  and p   then ai     p  i   
solves g    g  and halts 

   implementing policies and bindings

we have modeled toast s behavior as a composition of various bindings and interleavings
with a basic policy for a schematic environment  in the case of toast  the basic policy
is simple enough to be implemented by table lookup  the hard part is implementing the
bindings and interleavings given realistic limitations on short term memory and perceptual
bandwidth 
one approach would be to assume a relatively complete representation of the world 
each egg would be represented by a logical constant and its state would be represented
by a set of propositions involving that constant  a binding would be implemented as a
frame structure or a set of variables that point at the logical constants  the problem is
that this approach presupposes the underlying perceptual and motor systems maintain a
correspondence between logical constants and eggs in the world  when one of the eggs
changes  the visual system has to know to be looking at it and to update the assertions
about the egg in the model 
this is not an assumption to be taken lightly  the capacity of the human perceptual
system to keep track of objects in the world is extremely limited  ballard et al        found
that their experimental subjects adopt strategies that minimized the amount of world state
they needed to track internally  preferring to rescan the environment when information is
needed rather than memorize it in advance  the environment could even be modified during
saccadic eye movements without the subjects noticing 
an alternative is to treat the limitations of the body  its locality in space  and its limited
attentional and motor resources as a resource for implementing bindings directly  a person
can visually focus on one object  stand in one place  and grasp at most a few objects at
any one time  the orientation of the body s parts relative to the environment can be used
to encode the selection of objects being operated on at the moment  in other words  it can
   

filifeworld analysis
implement a binding  actions of the body  gaze shifts  and movements to new places can
be used to shift that binding 
another alternative is to use the states and relationships of objects in the world to keep
track of bindings  an egg is being cooked if it is in the frying pan  a fork is available for
use if it is in the drawer  but not if it is in the sink waiting to be washed 
in this section  we will model the use of the body and conventions to implement bindings and interleavings  to simplify the presentation and to be concrete  we will focus on
materials  particularly eggs 

    binding  deixis  and gaze

to a first approximation  people can only visually recognize objects at which they are
directly looking  people achieve the illusion of direct access to arbitrary objects by rapidly
changing their gaze direction  thus in addition to the normal state of the environment 
our lived world contains an additional state component  our gaze direction  since we can
normally change our gaze direction without changing the world  and vice versa  our lived
world e   can be separated into a parallel product of the objective environment and our gaze
direction 
e    e k d
our access to this world is through our gaze  which allows us to focus in on one particular
object at a time  our gaze implements a binding  or more precisely  a binding map  since it
depends on the direction of gaze  if we model gaze direction as a number indicating which
object is presently foveated  we have that 
gaze s    s        sn   d    sd
a person could implement a single object binding just by fixating the object they wish to
bind  first they would set the d component to some egg  and then use d as their binding 
since d is really a binding map  however  rather than a true binding  the agent must
pervasively structure its activity so as to ensure that its gaze need never be redirected 

    binding and convention

in general  agents must maintain bindings through some sort of convention  whether it is the
structuring of their internal memory  as in the case of a problem solver  or the structuring
of their activity  in the case of gaze above  the agent maintains the binding through a
convention about the spatial relation between its eye and the object it is binding  all
versions of toast to date have maintained bindings using conventions about  simulated 
spatial arrangement or the states of objects 
one reason toast cannot rely solely on gaze binding is that the technique breaks down
when binding multiple objects  the agent must continually move its gaze among the objects
of interest and so some additional convention must be introduced to ensure that when its
gaze leaves the egg and later returns  it always returns to the same egg   this assumes  of
course  that toast must return to the same egg  in some tasks it may suce for toast
to return to some functionally equivalent egg  if it is preparing three fried eggs and its
attention is distracted while preparing to break the second one  it is alright if its attention
returns to the third egg  so long as it gets back to the second egg eventually  
   

fiagre   horswill
state conventions

the original version of toast used the convention eggs were bound to a cooking task
iff they were not in their starting  unbroken  state  eggs were therefore bound using the
binding map

toast  s    the state of the unique egg in s that is in an unbroken state
which the agent can implement by first visually searching for an unbroken egg  and then
using gaze   by corollary    the interleaving of the cooking of multiple eggs can be accomplished by interleaving the bindings of the eggs  for example  we might assume that the
visual system searched non deterministically or in a round robin fashion for eggs  any fair
interleaving will suce 
spatial conventions

later on in our development of toast  we found it useful to adopt the convention that
eggs were bound to a cooking task iff they were located in a designated workspace  cooking
eggs are on the counter or in the frying pan  while idle eggs are in the refrigerator  this
convention lets the agent use space as an external memory for binding information  to bind
the egg  the agent faces the workspace and performs visual search for an egg  any egg it
finds will be an egg being cooked  since idle eggs will be out of view 
this still leaves open the issue of fairness  an extreme but elegant solution to the fairness
problem is to use multiple workspaces and employ the convention that each workspace
defines a unique binding  to cook two eggs  the agent just works on cooking whatever egg
is in front of it  but it spins in place so that it alternates between workspaces 
formally  the environment then consists of two copies of the workspace and the objects
therein plus an extra state component that determines which workspace the agent faces 
the agent s perceptual system implements a binding map in which one or the other of
the two workspaces is bound depending on the agent s orientation  given a policy for
cooking one egg in one workspace  we can construct a policy for cooking two eggs in two by
interleaving the policy with a  ipping  operation that switches the workspaces 

proposition   let e    s  a  be an environment  p be a policy that solves some goal g

in e and halts  and let d be an environment with two states    and    and two actions  i
 the identity  and flip which moves the environment into the opposite state from its present
state  consider the product environment 

e    e  
 e  
 d
and the binding map from e   to e  

md  s    s   d    sd
any fair interleaving of the policies 

pmd   amd  p  md
   

filifeworld analysis

the real world
idealization

functionally equivalent objects
least reset
binding map

binding maps
and interleavings

general tools
resetting policies

self cleaning tools
isomorphism

single object
isomorphism

canonical chain

figure    various alternative reductions used in toast 
and

pflip s   s    d    i  flip

is a solution to the problem  e      g  g  f    g   
proof  consider the bindings      s    s    d    s  and      s    s    d    s    and let p   
a   p    and p    a   p     since the binding map md alternates between the
bindings   and     any fair interleaving of pmd with pflip is equivalent to some interleaving
of p    p  and pflip   we would like to show that this interleaving is also fair  that is  that
each of p  and p  will get run in finite time  we can see this from the fact that with
each execution of pflip switches md from one binding to another  an objection is that this
leaves open the possibility that that pflip will always get run twice in a row  thus returning
the environment to its original state and so preventing md from switching bindings  this
cannot occur  however  since it would introduce a loop  causing the interleaving to run pflip
forever  never running pmd   and so violating the assumption of fairness of the interleaving
of pmd and pflip  thus the interleaving of p    p  and pflip must be fair  now note that
p  solves the goal g  s  f    g and halts  p  solves the goal s  g  f    g and halts 
and pflip solves the goal g  g f    g and halts  thus by lemma    the interleaving solves
the intersection of these goals  which is g  g  f    g   
   

fiagre   horswill

   reductions and the structure of toast
we have shown how the cooking problem can be solved by a series of reductions and
conventions  binding allows the reduction of the problem to a schematic world in which
action is greatly restricted and so action selection is greatly simplified  this world can be
further reduced  given algorithms for resetting tools  to a world in which tools are always
reset  this world  in turn  is equivalent to a world in which there is only one object  the
material being cooked  and only one action can be taken at any given time  such actions
can be found by table lookup 
multiple materials can be cooked by interleaving the execution of processes for cooking
the individual materials  interleaving the processes is equivalent  however  to interleaving
the bindings  so the schematic world algorithm need not even be aware that it is pursuing
multiple goals  if tool bindings are continuously changed as tools are dirtied then tools are
effectively disposable  tools effectively have only a single state  and the separate reduction
from general tools to single state tools is unnecessary  material bindings can be maintained
by any number of conventions involving the states and or positions of objects 
in short  we can describe a toast algorithm as a path through a network of possible
simplifications of the problem  see figure    in which every path from the actual world
to the idealized single object world defines a possible  and correct  version of the toast
algorithm 

    cognitive autopoiesis
in formalizing our ideas about binding and gaze  we have been moving toward a theory of
intentionality that depends on the agent s embedding in its world  rather than solely upon
its internal models of that world  an agent can keep track of particular objects in terms
of their functional significance   the roles that they play in the ongoing activity  and it
can keep track of the tools and materials associated with different tasks by keeping them
in different locations  for example different regions of a countertop  so far  however  our
ideas on the subject have been limited to very simple cases  for example an agent switching
its visual focus back and forth between two objects  to model the more complex patterns
that are found in everyday life  we need a much better theory of the world in which we
are embedded  this theory is partially a matter of biology and physics  of course  but it
is also a matter of cultural practices for organizing activities in space  in this section  we
would like to sketch a more general theory of these matters using the concept of  cognitive
autopoiesis  
for maturana and varela         autopoiesis refers to the processes by which organisms
act on their environments in order to provide the conditions for their own continued functioning  cognitive autopoiesis refers to the active means by which agents structure their
environments in order to provide the conditions for the own cognitive activities  these
include most basically the means by which agents provide for the factorability of environments  engaging in customary activities  using the customary tools and materials for them 
partitioning the activities in the customary ways  and so on  but it also includes a range
of more subtle phenomena  kirsh         for example  has drawn the useful distinction
between actions that aim at achieving functional goals  beating eggs  sweeping oors  and
   

filifeworld analysis
actions that aim at facilitating cognition  setting out the right number of eggs at the beginning  opening the curtains so that dust will be more visible   actions can  of course 
serve both purposes  for example when one chooses to boil water in a kettle rather than a
saucepan  each strategy achieves the result  but the latter will also provide a sign that it
is possible to take the next action  for example preparing tea  stabilization actions  hammond et al         also provide the cognitive conditions for other actions  one might  for
example  develop the habit of leaving items by the door the moment one realizes that they
need to be taken in to work 
these phenomena help in understanding what is inadequate about the concept of  the
environment   if one conceptualizes  the environment  as a monolithic whole  perhaps the
way it looks when viewed from an airplane  or else the way it looks when understood through
the peephole of a momentary vector of sense perceptions  it begins to seem arbitrary  chaotic 
or hostile  in a certain sense it seems static  as if it has an anatomy but no physiology 
but in fact the phenomena of cognitive autopoiesis reveal that the lifeworld has a great
deal of living structure  and that this structure is actively maintained by agents while also
providing crucial preconditions for their own cognition  indeed it is hard to draw a clear line
around an agent s cognition  if we trace the sequence of causal events that led a given agent
to pour a pitcher of milk on a particular moment  this sequence will lead back and forth
between the agent and its customary surroundings  it is almost as if these surroundings
were an extension of one s mind 
cognitive autopoiesis is a complex and multifaceted phenomenon and no single theory
will suce to explain it  one useful way to think about cognitive autopoiesis is spatially 
in terms of a series of buffer zones between the embodied agent and the putative dangers
and complexities of  the environment   for people whose lives are similar to our own  these
buffer zones can be conveniently sorted under six headings 

 the body itself  its posture  its markings  things that might be attached to it or hung

from it  prostheses  artificial markings  the things one is holding in one s hands  and
so on  all of these things can serve as forms of memory  for example as a way to
remember what activity one was in the middle of before some momentary distraction 
the body s motility also makes possible a wide range of voluntary reconfigurations
of one s physical relationship to things  for example to get a better view or better
leverage 

 clothing  including pockets  purses  money belts  hats  and so on  everyone carries
around various objects in ways that draw on customary practices and artifacts  cash
in wallets  keys in pockets  watch on wrist  etc  while configuring these things in an
evolving personal way  keys in left pocket and money in right  tissues in the hip pocket
of one s coat  spare change in the outer ap of the backpack  and so on  

 temporary workspaces that one occupies to perform a particular activity over a bound 

ed period  in repairing a bicycle  for example  one might spread tools and bicycle
parts about on the oor in patterns that have a cognitive significance in relationship
to one s own body and cognitive and other states  chapman   agre         one is
not claiming this space as a permanent colony  it might be located on a patio in a
   

fiagre   horswill
public park  for example   but one does lay claim to the space long enough to perform
a customarily bounded task 

 one s own private spaces  home  desk  oce  car  trunks of stuff kept in someone else s

attic  and so forth  these spaces serve numerous functions  of course  but among these
are the cognitive functions of providing stable locations over long periods of time for
tools and materials  storage places for stuff that needs to be kept in adequate supply 
practices for regulating other people s access to the stuff  and so on  these stable
conditions are actively maintained and provide the background for a wide variety of
more transient activities 

 spaces that are shared with other people within stable  time extended relationships 
these spaces include living rooms  kitchens  shared oce spaces  and so forth  the
line between the private and shared spaces clearly depends on the particular culture
and set of relationships  and the distinction might not be clear  the point is that
the cognitive functions of the spaces are maintained through shared practices such as
letting someone know when you borrow their stuff 

 public spaces and the whole range of customary artifacts and practices that regu 

late activities in them  public spaces offer fewer guarantees than private and shared
spaces  but they do include a wide variety of supports to cognition  including signs
and architectural conventions  it is also possible to use one s body and clothing to
carry artifacts that provide cognitive support for dealing with public spaces 

these buffer zones do not always offer perfect protection from harm or complete support
for the pursuit of goals  shared and public spaces can be sites of conict  for example 
and these conicts can include involuntary disruption or destruction of one s body and the
other buffer zones that are customarily under one s own private control  a serious theory
of activity must include an account of these phenomena as well  which are usually just as
orderly in their own way as anything else 
in any event  the nested buffer zones of ordinary life participate in a large metabolism
that continually interweaves cognitive and functional purposes  among these purposes is
learning  just as the adaptation of body parts and tools to customary activities helps channel action in customary directions  so does the existing background of objects  spaces  and
practices help channel the actions of children and other newcomers in customary directions
on a larger scale  caretakers regularly construct customized types of buffer zones around
the young  for example  so that it is dicult or impossible for them to get into anything
that could cause harm  the lifeworld of a child  for example  differs from that of an adult
who can reach up to the cookie jar and into the locked cupboard where the roach spray is
kept  a growing literature has investigated the processes of cognitive apprenticeship  rogoff         situated learning  lave   wenger         distributed cognition  hutchins       
salomon         and shared construction of activities  grin   cole        that go on in
these systematically restrictive and supportive lifeworlds 
   

filifeworld analysis

    conclusion

in this paper we have explored some of the ways in which the structure of the lifeworld
supports agents  cognition  and we have suggested how this analysis might be expanded to
cover a wider range of phenomena  much work obviously remains to be done  perhaps the
most significant part of this work concerns a fundamental assumption of lifeworld analysis 
that people use objects in customary ways  this is a plausible enough first approximation 
but it is not always true  faced with a diculty that goes beyond the capacities of the
usual practices and the artifacts that are readily available  people frequently improvise 
the handle of a spoon might be used to pry open a lid  a pen might be used to fish acorns
out of an exhaust duct  a book might be used to provide backing for a sheet of paper one is
writing on  or a protruding section of a car s bumper might be bent straight by deliberately
driving the car into a concrete wall  in these cases the underlying physical affordances of
an object  show through  beyond their ready to hand appropriation in routine patterns
of interaction  these underlying affordances can also show through in situations of breakdown  for example when a tool breaks or proves inadequate to a job  in such cases  people
confer improvised meanings upon artifacts  such phenomena are particularly important
in conversation  in which each utterance is interpreted in the context created by previous
utterances  while simultaneously helping to create the context for interpretation of successive utterances as well  edwards   mercer        atkinson   heritage         the point
is not that the lifeworld does not exist  but rather that it is something actively created as
well as something adapted to through socialization  one challenge for future research is to
learn how computational methods might help in modeling such phenomena and how such
phenomena might help us to rethink basic ideas about computation 

acknowledgements

we appreciate the detailed comments of the referees  this work was funded in part by
the national science foundation under grant number iri          the institute for the
learning sciences was established in      with the support of anderson consulting  part
of the arthur anderson worldwide organization 

glossary of terms

binding  a simple projection  mapping between state space components of two environ 

ments  that acts as a reduction from one environment to another  see section        
binding map  a mapping from environment states to bindings  see section        
cartesian product  for sets  a  b is the set of all pairs  a  b  for a   a  b   b  
for environments  an environment is the cartesian product of two other environments iff
its state space is the cartesian product of their state spaces  since the set of actions is
left open in this definition  there are many possible ways of forming products  e g  serial
product  parallel product  uniform extension  etc  see section      
discrete control problem  dcp   an environment and a set of goal states within it
 see section    
environment  a state machine  i e    a set of possible states and a set of possible actions
mapping states to states  the sets of states and actions need not be finite  see section    
   

fiagre   horswill

focus  an action is focused on a state component if it only alters that component  see

section        
material  an object  environment  whose state space is a chain  see section      
policy  a mapping from states to actions  the formalization of an agent s control structure
 see section    
projection  a mapping from the state space of one environment to the state space of
another  see section      
simple projection  a mapping between state spaces that maps state space components
of one environment to state space components of another  see section      
state component   for environments whose state spaces are cartesian products  an
element of an environment s state tuple  see section      
solution  a policy solves a dcp from an initial state if  when run from that state  it
eventually reaches a goal state  see section    
tool   roughly  a state component that can be brought to ready state without altering
any other state components  see section        
uniform reducibility   roughly  e   is uniformly reducible to e if it consists of multiple
copies of e  s objects  see section        

glossary of notation

  function composition operator  f  g x    f  g x   

  a projection  p       
    the inverse of   i e  the set of states that map to a given state under   p       
    for a simple projection   s     s    a generalized inverse  since  only maps certain
components of s   to s      s  s    is s  with those components replaced by their corresponding
components in s  p       
a   for a simple reduction  from an environment e   to e   the function mapping an action
a from e to the action that implements it in e    p       
cn  the chain environment of n states  p       
e   an environment 
 e e g  g a goal of e and e   uniformly reducible to e   the existential goal of g in e    
the set of all e    states that map to a goal state under some binding  p       
e   
  e   the serial product  the cartesian product of e  and e  in which actions from
 

the two environments must be taken separately  p       
e  k e    the parallel product  the cartesian product of e  and e  in which actions from
the two environments must be taken simultaneously  p       
le e    e   an environment uniformly reducible to e   the leftmost ready binding map from
e   to e  p       
p  a policy 
pe g  the standard policy for single material environment e and goal g  p       
s   the singleton environment  the environment with exactly one state   used to represent
a self resetting tool  p       
 

   

filifeworld analysis

references

agre  p     horswill  i          cultural support for improvisation  in tenth national conference on artificial intelligence cambridge  ma  american association for artificial
intelligence  mit press 
agre  p  e          computational research on interaction and agency  artificial intelligence 
               
agre  p  e          computation and human experience  cambridge university press 
cambridge  uk 
agre  p  e     chapman  d          pengi  an implementation of a theory of activity  in
proceedings of the sixth national conference on artificial intelligence  pp          
atkinson  j  m     heritage  j          structures of social action  cambridge university
press  cambridge  uk 
ballard  d  h   hayhoe  m  m   pook  p  k     rao  r  p  n          deictic codes for
the embodiment of cognition  technical report       university of rochester national
resource laboratory for the study of brain and behavior  rochester  ny  revised
july      
beach  k  d          the role of external mnemonic symbols in acquiring an occupation  in
gruneberg  m  m   morris  p  e     sykes  r  n   eds    practical aspects of memory 
current research and issues  volume    memory in everyday life  wiley  chichester 
uk 
beer  r  d          a dynamical systems perspective on agent environment interaction 
artificial intelligence                    
brady  j  m   agre  p  e   braunegg  d  j     connell  j  h          the mechanic s mate 
in proceedings of the      european conference on artificial intelligence pisa  italy 
chapman  d     agre  p  e          abstract reasoning as emergent from concrete activity 
in georgeff  m  p     lansky  a  l   eds    reasoning about actions and plans  proceedings of the      workshop  timberline  oregon  morgan kaufmann publishers 
los altos  ca 
dixon  m          embedded computation and the semantics of programs  tr ssl      
xerox palo alto research center  palo alto  ca 
donald  b  r     jennings  j          constructive recognizability for task directed robot
programming  robotics and autonomous systems           
edwards  d     mercer  n          common knowledge  the development of understanding in the classroom  methuen  london 
gibson  j  j          the ecological approach to visual perception  erlbaum  hilldale  nj 
originally published in      
   

fiagre   horswill
grin  d  n  p     cole  m          the construction zone  working for cognitive change
in school  cambridge university press  cambridge 
hammond  k  j   converse  t  m     grass  j  w          the stabilization of environments 
artificial intelligence                    
horswill  i          analysis of adaptation and environment  artificial intelligence           
     
hutchins  e          cognition in the wild  mit press  cambridge  ma 
kirsh  d          the intelligent use of space  artificial intelligence                  
knoblock  c  a          a theory of abstraction for hierarchical planning  in benjamin 
d  p   ed    change of representation and inductive bias  kluwer  boston 
kosecka  j          control of discrete event systems  grasp lab report      university
of pennsylvania computer and information science department  philadelphia  pa 
lansky  a  l     fogelsong  d  s          localized representations and planning methods
for parallel domains  in proceedings of the sixth national conference on artificial
intelligence  pp          menlo park  ca  aaai press 
lave  j     wenger  e          situated learning  legitimate peripheral participation 
cambridge university press  cambridge  uk 
littman  m  l          an optimization based categorization of reinforcement learning
environments  in meyer    wilson  meyer   wilson         pp          
lyons  d  m     arbib  m  a          a formal model of computation for sensory based
robotics  ieee transactions on robotics and automation                 
maturana  h  r     varela  f  j          the tree of knowledge  the biological roots of
human understanding  shambhala  boston 
meyer  j  a     wilson  s  w   eds            from animals to animats  the second
international conference on simulation of adaptive behavior  mit press  cambridge 
ma 
newell  a   shaw  j  c     simon  h  a          report on a general problem solving
program  in proceedings of the international conference on information processing 
pp          paris 
newell  a     simon  h  a          gps  a program that simulates human thought  in
feigenbaum  e  a     feldman  j   eds    computers and thought  pp          
mcgraw hill 
rogoff  b          apprenticeship in thinking  cognitive development in social context 
oxford university press  new york 
   

filifeworld analysis
rosenschein  s  j          formal theories of knowledge in ai and robotics  report csli       center for the study of language and information  stanford  ca 
rosenschein  s  j          synthesizing information tracking automata from environment
descriptions  in brachman  r  j   levesque  h  j     reiter  r   eds    proceedings
of the first international conference on principles of knowledge representation and
reasoning  pp          
rosenschein  s  j     kaelbling  l  p          the synthesis of machines with provable
epistemic properties  in halpern  j   ed    proc  conf  on theoretical aspects of
reasoning about knowledge  pp         morgan kaufmann 
sacerdoti  e  d          planning in a hierarchy of abstraction spaces  artificial intelligence 
      
salomon  g   ed            distributed cognitions  psychological and educational considerations  cambridge university press 
schutz  a     luckmann  t          the structures of the life world  northwestern
university press  evanston  il 
simon  h  a          administrative behavior  a study of decision making processes in
administrative organization  macmillan  new york 
simon  h  a          the sciences of the artificial  mit press  cambridge  ma 
sussman  g  j          a computer model of skill acquisition  elsevier  new york 
todd  p  m   wilson  s  w   somayaji  a  b     yanco  h  a          the blind breeding
the blind  adaptive behavior without looking  in cliff  d   husbands  p   meyer 
j  a     wilson  s  w   eds    from animals to animats  the third international
conference on simulation of adaptive behavior  pp           mit press 
todd  p  m     wilson  s  w          environment structure and adaptive behavior from
the ground up  in meyer    wilson  meyer   wilson         pp        
wilson  s  w          the animat path to ai  in meyer  j  a     wilson  s  w   eds    from
animals to animats  proceedings of the first international conference on simulation
of adaptive behavior  pp         mit press  cambridge  ma 
winston  p  h   binford  t  o   katz  b     lowry  m          learning physical descriptions
from functional definitions  examples  and precedents  in proceedings of the national
conference on artificial intelligence  pp          austin  tx 

   

fi