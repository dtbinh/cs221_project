journal artificial intelligence research                 

submitted       published     

lifeworld analysis
philip agre

pagre ucsd edu

ian horswill

ian ils nwu edu

department communication     
university california  san diego
la jolla  ca        usa
northwestern university computer science department
     maple avenue
evanston  il        usa

abstract

argue analysis agent environment interactions extended
include conventions invariants maintained agents throughout activity 
refer thicker notion environment lifeworld present partial set formal
tools describing structures lifeworlds ways computationally
simplify activity  one specific example  apply tools analysis toast
system show versions system different control structures fact
implement common control structure together different conventions encoding
task state positions states objects environment 

   introduction
biologists long sought concepts describe ways organisms adapted
environments  social scientists likewise sought concepts describe ways
people become acculturated participants social worlds around them  yet
dicult approach phenomena methods computational modeling 
see least two reasons diculty  first tradition modeling
artificial intelligence developed around concern cognition  is  mental processes
understood intervene stimuli responses human beings  although minority
traditions ecological psychology reacted approach studying human
life  able translate concepts computational mechanisms
match expressive power symbolic programming  second reason subtle 
one conceives organisms environments spatially extended mechanisms
explained according principles boundary
 the surface body  particularly different from  interesting than 
rest total organism environment system  challenge computational modeling 
then  conceptualize agents  adaptations environments ways neither
treat agents isolated black boxes dissolve one big machine 
purposes  find useful distinguish two aspects agent s
involvement familiar environment  embodiment embedding   embodiment 
pertains agent s life body  finiteness resources  limited perspective
world  indexicality perceptions  physical locality  motility 
on   embedding  pertains agent s structural relationship world  habitual
c      ai access foundation morgan kaufmann publishers  rights reserved 

fiagre   horswill
paths  customary practices fit shapes workings things 
connections agents  position set roles hierarchy  forth 
concept embedding  then  extends concrete kinds locatedness
world  places  things  actions  abstract kinds location  within social systems 
ecosystems  cultures  on   embodiment embedding obviously interrelated 
powerful consequences agents  direct dealings agents
solitary activities physical world  principal focus article
embedding  particularly ways agents maintain relationships objects
functionally significant tasks 
paper develop thoughts embodiment embedding follows 

section   reviews concept environment developed early work
newell simon 

section   introduces adaptation traditional idea  call life








worlds  sketch involved lifeworld analysis 
section   introduces informally concept factorization lifeworlds  refers
roughly structures lifeworld permit agents  decisions made
independently one another 
section   defines basics formal theory lifeworld analysis  namely
concepts environments  actions  policies  factorization  reduction one
environment another  purpose formalism characterize kinds
interactions arise agents familiar lifeworlds 
section   brie introduces computer program wrote illustrate
phenomena lifeworlds 
section   applies formalism modeling world program
operates  proceeds modeling successively complicated versions world 
section   explains program keeps track objects world
figure activities  discusses issues arise trying model
keeping track formal terms 
section   sums formal work explaining precise relationship
program formal model world 
section    expands theory lifeworlds informally introducing
concept cognitive autopoiesis  collection means agents manipulate surroundings provide conditions cognitive processes 
provide taxonomy phenomena 
section    concludes suggesting directions future work 

   concept environment

intuitively  notion  the environment  ai robotics refers relatively enduring stable set circumstances surround given individual  environment
probably yours  though may similar  hand  although
environment starts leave  at skin  perhaps   clear ending point 
necessarily defined terms metric space  physically distant circumstances
consequences life  via telephone  say  properly regarded
   

filifeworld analysis
part environment well  environment agents live  determines
effects actions  environment thus matter importance computational
modeling  know agent s environment determine given
pattern behavior adaptive  particular need positive theory environment 
is  kind principled characterization structures dynamics
attributes environment virtue adaptive behavior adaptive 
herbert simon discussed issue pre ai work  book administrative behavior         example  presents uential theory later became known limited
rationality  contrast assumption rational choice classical economics  simon
describes range cognitive limitations make fully rational decision making organizations impracticable  yet organizations thrive anyway  argues  provide
individual structured environment ensures decisions good
enough  division labor  example  compensates individual s limited ability
master range tasks  structured ows information  likewise  compensate
individual s limited ability seek information judge relevance  hierarchy
compensates individual s limited capacity choose goals  fixed procedures
compensate individuals  limited capacity construct procedures themselves 
comparison simon s early theory administrative behavior  ai downplayed
distinction agent environment  newell simon s early work
problem solving         environment reduced discrete series choices
presents course solving given problem  phrase  task environment  came
refer formal structure search space choices outcomes  clearly
good way modeling tasks logical theorem proving chess  objects
manipulated purely formal  tasks involve activities physical world 
however  picture complex  cases  problem solving model analyzes
world distinctive way  theory treat world agent separate
constructs  instead  world shows up  speak  phenomenologically  terms
differences make difference agent  given particular representations  actions 
goals  agents different perceptual capabilities action repertoires  example 
inhabit different task environments  even though physical surroundings goals
might identical 
newell simon s theory task environment  then  tends blur difference
agent environment  framework analysis  find phenomenological
approach valuable  wish adapt purposes  unfortunately  newell
simon carry blurring theory cognitive architecture  often unclear
whether problem solving activity takes place wholly within mind  whether
unfolds agent s potentially complicated interactions physical world 
distinction arise cases theorem proving chess 
domain whose workings easily simulated mental reasoning  crucial
domain whose actions uncertain outcomes  even though wish retain
newell simon s phenomenological approach task analysis  therefore  wish
presuppose agents reason conducting searches problem spaces  instead 
wish develop analytical framework guide design wide range
agent architectures  particular  want analytical framework help us design
simplest possible architecture given task 
   

fiagre   horswill

   lifeworlds
use term lifeworld mean environment described terms customary
ways structuring activities take place within   conventional uses
tools materials   loop invariants  maintained within conventional
activities  on  term originally comes phenomenological sociology  schutz
  luckmann         refers familiar world everyday life  specifically
world described terms make difference given way life  cats
people  example  understood inhabiting physical environment
different lifeworlds  kitchen cupboards  window sills  spaces underneath chairs
different significances cats people  balls yarn  upholstery  television
sets  cats  similarly  kitchen affords different kind lifeworld chef
mechanic  though clearly two lifeworlds may overlap ways well 
lifeworld  then  physical environment  patterned ways
physical environment functionally meaningful within activity 
idea similar gibson s theory perception         two theories
differ important ways  whereas gibson believes perception worldly affordances
direct  believe perceptual process explained causal terms  also 
whereas gibson treated categories perception essentially biological innate 
regard cultural emergent 
analyzing lifeworld  one attempts draw individual structures within
facilitate customary activities  example  lifeworlds typically contain artifacts
tools specifically evolved support activities  tools
arranged world ways simplify life reduce cognitive burden
individuals  cups typically found cupboards  food refrigerators grocery
stores  one needs remember butter found specific grocery store
butter grocery stores found well defined dairy section  usually along wall 
recognized distance  dairy section view  butter
visible definite area  artifacts designed make functional properties
perceptually obvious  handles perceptibly suited picking up  knobs perceptibly
suited turning  forks perceptibly suited impaling things   brady 
agre  braunegg    connell        winston  binford  katz    lowry         contrarily 
generally assumed artifacts provide readily perceptible grounds
drawing functional distinctions fact interchangeable  usually  functionally
significant property object obvious  lifeworld provides alternate way
marking it  see record player house  example  assume
mine unless specific reason to  aspects lifeworlds
tend make easy perform particular kinds activities within without
remember many facts reinvent screwdriver first principles 
lifeworlds contain networks interacting conventions practices simplify specific aspects specific activities  practices relieve agents burden solving certain
problems spot diffuse solutions throughout activity agent
many agents  example  hospital might try get along without maintaining sterile
conditions  people always germs  technically always infected  problem
making sure infections never get control  direct solution would
   

filifeworld analysis
constantly monitor patients  assess degree infection treat
becomes severe  since undesirable number reasons  hospital instead tries
prevent infections patients maintaining sterile conditions  might this 
example  looking contaminated objects surfaces disinfecting them  unfortunately  sterility visible surface characteristic  instead  hospitals solve problem
structuring space activity  different locations kept less sterile depending
conventional uses  operating rooms sterile hallway oors  objects
generate germs  people  washed  masked  gloved  critical instruments
come contact specially sterilized use  tongue depressors
assumed dirty trash  or biohazard bag  clean
wrapped paper  objects surfaces periodically disinfected regardless
level contamination  practices maintained regardless immediate
need them  hospital  for reason  temporarily find without
patients  workers would stop washing hands disinfecting bathrooms 

   factorization lifeworlds

simon  sciences artificial         argued complex systems  nearly
decomposable   model rooms building  whose walls tend minimize
effects activity one room upon activity another  sussman        
analysis block stacking tasks  classified several types  subgoal interactions 
result attempts break tasks subtasks  one hopes tasks
decomposable  bugs arise decomposable enough  one assumes
task decomposable unless one reason believe otherwise  sussman s research 
rich tradition planning research helped inaugurate  concerned dicult problem
constructing plans presence subgoal interactions  goal  complementary
theirs  analyze many ways tasks really decomposable  derive
broadest range conditions moment to moment activity proceed without
extensive analysis potential interactions 
non pathological lifeworld structured ways limit prevent interactions
among subtasks  structures might taxonomized follows 

activity partition  lifeworlds separate activities discrete headings  sewing

distinct activity bathing  gathering food separate activity giving
birth  on  distinctions provide basis reckoning  different activities  purposes rest partitions  boundaries among
various activities often marked type ritual 

spatial partition  different things often done different places  tasks may

confined places associated tools materials stored 
suitable conditions lighting safety obtain  places may even close together  different recipes prepared different sections countertop space
different kinds food kept different parts one s plate  boundary
regions perhaps employed assemble forkfuls neighboring foods  general  activities arranged space  decisions made one place tend minimal
interaction decisions made places  course spatial distance brings
   

fiagre   horswill
absolute guarantees functional independence  using resources one
location prevent carted another location another use later
on   general tendencies 

material partition  different activities often involve different materials  decisions affect materials one activity interact decisions affect
materials activity 

temporal partition  different activities often take place different times  thus lim 

iting channels might constrain one another  times
might standardized points cycle day week  ordering
might constrained kind precondition first activity produces
successive ones depend upon 

role partition  simon pointed division labor eases cognitive burdens 
part supplying individuals separate spheres conduct
respective activities 

background maintenance  many activities background conditions main 

tained without reference specific goals  example  one maintains stocks supplies pantry  puts things back belong  forth  hammond 
converse  grass        call  stabilization    see section    
practices stabilize relationships agent materials used
customary activities  tend ensure  example  one encounter
one s hammer currently opened box corn akes definite sorts recurring
situations  thus reduce complexity life  variety different hassles
arise  encouraging rise routine patterns cycles activity rather
constant stream unique puzzles 

attributes tools  numerous properties tools limit interactions among separate

decisions  virtually tools resettable  meaning regardless one
them  restored normal state within
full range functionalities accessible   this course assumes one
using tools customary ways breaking them   thus
properties tool place ordering constraints activities
use it  likewise  tools committed tasks long periods 
turned screw screwdriver  example  screwdriver stay
 stuck  screw long period  thus necessary schedule
use screwdriver unless several people wish use once  exceptions
general rule include bowls  whose ingredients must often sit waiting future actions
conditions  cannot contain anything else meantime   stove burners
 which sometimes must remain committed heating particular dishes
reached certain states before   clamps  which must remain fastened
glue dried sawing operations completed  

supplies tools  latter tools raise spectre generalized scheduling problems potential deadlock among multiple activities  problems
   

filifeworld analysis
fact sometimes arise cooking people number
given kitchen adapted  time  though  one solves problems
scheduling simply enough tools must remain
committed particular purposes period time  lansky fogelsong       
modeled effects search spaces limited interactions different cooks
using overlapping sets tools 

warning signs  things go wrong  unpleasant subgoal interactions ensue 

avoid diculties  individual  community  species keeps track warning
signs cultivates capacity notice them  warning signs include supplies
running low funny smells  often done primitive associative level 
rats stay away smells associated stuff made sick
people develop phobias things present suffered traumas 
communities often arrange certain warning signs become obtrusive 
kettles whistle natural gas mixed another gas distinctive smell 

simple impossibility  sometimes things impossible  obviously so 
necessary invest great effort deciding them 

monotonicity  many actions changes state irreversible  irreversible changes
cause decisions interact certain things must done change takes
place  provides structure decision process  lifeworld needs
make evident must done given irreversible change occurs 

flow paths  often lifeworld arranged particular materials  parts

assembly line  paperwork organization  food way refrigerator stove
table  follow definite paths  paths provide great deal structure
decision making  inspecting various points along path  example  one see
needs done next  determining object is  one determine
must done must taken afterward  paths
consciously mapped others emergent properties set customs 

cycles  likewise  many lifeworlds involve stable cycles activities  perhaps

cycles nested inside others  resulting rhythms often expressed
recurring combinations materials  decisions  spatial arrangements  warning signs 
on 

externalized state  computer people   state   used mass noun  means dis 

cernible differences things modified voluntarily  interpreted functionally significant way  early ai treat internal state
 memory  external state  functionally significant mutable states world 
importantly different  often analytically convenient treat uniform
fashion  often advantageous record state world  whether relative
locations things persistent states  in count noun sense 
left  beach         example  one need remember whether eggs
broken fact readily perceptible  one s attention drawn
suitable occasion  one understands significance task  likewise  one
   

fiagre   horswill
save great deal memory retrieving ingredients evening s
recipes cupboards placing customary place shelf 
lifeworlds  then  great deal structure permits decisions made independently one another  point real lifeworlds permit anyone live
      reactive  mode  without performing significant computation  even
would desirable  point  rather  nontrivial cognition people perform takes place considerable background familiar generally reliable
dynamic structure 
factorability lifeworlds helps particularly understanding activities
agent body  great deal focusing inherent embodiment  look
one place time  handle one tool time  activities necessarily
serial  attention certain degree hysteresis  gotten work
one countertop using one particular tool  example  natural step
carry task  crucial  therefore  different tasks relatively
separate consequences  lifeworld provide clues change task
necessary  functionally significant conditions generally detected using
general purpose forms vigilance occasionally looking around  course  certain
kinds activities complex this  require special purpose strategies
go beyond simple heuristic policies  find something needs
it   point complex activities many interacting components
rare  generally conducted specially designed adapted lifeworlds 
lifeworlds structured minimize diculty tasks rather increase it 
various phenomena together formed motivation concept indexicalfunctional deictic representation  agre   chapman        agre         embodied agents
focused one activity one set objects time  many objects specifically adapted activity  relevant states generally readily perceptible  objects
perceptibly different generally interchangeable  stabilization practices
help ensure objects encountered standardized ways  thus makes sense 
purposes  represent objects generic ways one s relationships them 
ashlight keep car the  ashlight i keep in the car flashlight    
maintain stable relationship ashlight keeping standard place  putting
back done it  using intended purposes  keeping
batteries fresh  on  presence environment ensures ready access
light car breaks night  therefore need separately plan
contingency time drive  conventional structures activity
maintain ashlight s presence  loop invariant   presence ashlight
activities ensure structures lifeworld 

   environments  policies  reducibility

section  introduce formalism  purpose formalism directly
specify workings agent s cognitive machinery  instead  purpose construct  principled characterizations interactions agents environments
guide explanation design   agre         formalism  words  describes
agent s embodied activities particular environment  characterized dy   

filifeworld analysis
namics activities  becomes possible design suitable machinery  matter
principle  want design simplest possible machinery consistent
given pattern interaction  horswill         therefore make priori commitments
machinery  favor particular architecture particular activity
analyzed  make priori commitments matters analog
versus digital   planning  versus  reaction   on  experience real
lifeworlds real activities incorporate great deal useful dynamic structure 
effort invest studying structure repaid parsimonious theories
machinery  intend methods equally useful investigating types
activity designing types machinery might able participate them 
concept lifeworld appear specific mathematical entity
formalism  intuition  however  this  objective material environment 
agent directly deal environment s complexity  instead deals
functional environment projected material environment 
projection possible various conventions invariants stably present
environment actively maintained agent  lifeworld understood
functional world together projection conventions create it 
section summarizes formal model environmental specialization given horswill
        proofs theorems  see original paper  subsequent sections apply
extend model 
model environments state machines behavior agents policies
mapping states actions 
environment e pair  s  a  state space set possible
actions 
action a    mapping states states 
policy p    mapping states actions taken  paper 
states include facts physical environment  straightforward matter include agent s internal states well  horswill        
combination policy environment creates dynamic system  environment s state mapped policy action maps environment new state
whole process repeated 
discrete control problem  dcp  pair  e  g  environment e goal g 
subset e  s state space 
policy solves problem dynamic system generates environment
eventually reaches goal state 
solves problem halts remains within g entering it 
example  consider robot moving along corridor n equally spaced oces
labeled          on  formalize environment zn    f           n  
 g  fincn   dec  ig   identity function  incn dec map integer
         respectively  proviso dec        incn n        n    
   

fiagre   horswill

 dec i 
 i inc 

dec

dec

inc 
 

dec

inc 

 

 i dec 

inc 
 

     
 i inc 

 

 dec i 

 i dec 

inc 

inc 
 

 i inc 

     

dec

 inc i 
 i inc 

 inc i 

       dec i       

dec

 dec i 
 i dec 

 inc i 

 inc i 
 i dec 

figure    environment z   left  serial product z  itself  expressed
graphs  function products written pairs  i e  inci written
 inc  i   identity actions  i ii  left undrawn reduce clutter 
 see figure     note effect performing identity action stay
state 
emphasize policy model agent s behavior  causal computational processes behavior exhibited  specifies agent
state  it  thus theoretical construct  data structure algorithm
agent s head  examine implementation issues surround policies
section   

    product environments

majority formal sections paper explore phenomenon factoring 
particular  explore policies factorable environments composed
policies factors  state machine models environments  factorization
factorization state space  environment s state space cartesian product
state spaces  environment  whole   factorable  component
sub environments  example  position king chess board row
column components  thought  product  components 
isomorphic z   since eight rows eight columns   consider
environment car drives    grid city blocks  see
kind product z  itself  environments    grids state spaces 
car environment allows one component change time  whereas king
environment allows change 
must therefore distinguish different kinds factorization  call chessboard
case parallel product z  itself  car case serial product 
focus another kind factorization later  let cartesian product two functions f
g fg   a  b      f  a   g b    let identity function  two environments
e     s   a    e     s    a     define parallel product

e  k e     s s   fa a    a    a   a    a  g 
   

filifeworld analysis
serial product
e   
  e     s s   fa i   a    a  g   fia    a    a  g 
products dcps defined obvious way 
 e    g    k  e    g       e  k e    g g  
 e    g     
   e    g      e   
  e    g g  
state diagram z   
  z  shown figure   
say environment dcp parallel  or serial  separable isomorphic
product environments dcps 
      solvability separable dcps

important property separable dcps solutions constructed
solutions components 
lemma   let p  policy solves d  halts states set initial
states i    let p  policy solves d  halts states i   
policy
p x  y    p  x p  y 
solves d  k d  halts states i i     note using convention
treating p  function pairs  function two scalars  
lemma   let p  policy solves d  states set initial states
i   let p  policy solves d  states i    policy
p x  y    p   x i ip  y 

  g   x    g    p x  y    p  x i
x   g      g    p x  y    ip  y 
solve d   
  d  halt states i i  
note parallel serial cases different  one would expect parallel case
easier solve policy perform actions state components
simultaneously  fact dicult one required perform actions
simultaneously leaves agent way preserving one solved subproblem
solving another  consider   ip  op  environment f    f    g  fflipg  flip x   
    x  f property every state accessible every state  f  
 f
property  f k f   however  not  f k f one action  ips
state components once  thus two states accessible given state
f k f   state ip  king  problem fixed add
identity action f   possible leave one component product intact 
changing other  identity action  sucient  necessary  weaker 
still unnecessary  condition f action always maps goal states goal
states 
   

fiagre   horswill

s 



   s   

a 
a   s   
unreduced environment




a s     a   s    
reduced environment

figure    simple reduction environment e   e   s  corresponding
states reduced unreduced environments respectively a 
corresponding actions  projection simple reduction  commutes 
actions   a   s       a  s      alternatively  a      thus
regardless whether take projection action 
achieve result 

    reduction

another important kind structure one environment considered abstraction another  newell  shaw    simon        sacerdoti        knoblock        
abstract environment retains fundamental structure concrete environment
removes unimportant distinctions among states  abstract state corresponds set
concrete states abstract actions correspond complicated sequences concrete
actions 
say projection environment e   another environment e
mapping state space e   e   say simple reduction
e   e every action e   corresponding action a  e  
state s 
 a   s      a  s    
equivalently 
a   
function composition operator  say a   implementation
use denote function mapping e  actions implementations
e    
possible define much powerful notion reduction implementations allowed arbitrary policies  requires fair amount additional machinery 
however  including addition state agent  since simple reduction suce
purposes  simply assert following lemma  direct consequence
general reduction lemma  horswill        
lemma   let simple reduction e   environment e let  e     g  
dcp  policy p solves  e   g     
p   p
   

filifeworld analysis
solves  e     g    

    related work

formal models environments use state space descriptions environment  usually finite state machines  rosenschein kaelbling used finite state machines represent
agent environment                     formalization allowed specialized
mechanisms directly synthesized descriptions desired behavior formalization behavior environment  formalization powerful enough form
basis programming language used program real robot  later  rosenschein developed method synthesizing automata whose internal states provable correlations
state environment given set temporal logic assertions dynamics
environment  donald jennings        use geometric  similar  approach
constructing virtual sensors  lyons arbib        model organisms robots
using process algebras  beer        employs formalisms dynamic systems theory 
wilson        specifically proposed classification simulated environments
based types mechanisms operate successfully within them  wilson
used finite state formalization environment  divided environments
three classes based properties determinacy  todd wilson        todd
et al         taxonomized grid worlds terms behaviors successful
them  littman        used fsm models classify environments reinforcement learning
algorithms  littman parameterized complexity rl agents terms amount
local storage use far future rl algorithm looks 
empirically classified environments minimal parameters still allowed
optimal control policy learned 
extensive literature discrete event dynamic systems  kosecka        
model environment finite state machine  assume transition
information  rather state information  visible agents 
alternative state machine formalism found work dixon        
dixon derives semantics first order logic  world comes individuated
objects relations  rather state space methods used here  dixon s  open 
approach avoids need define environment single mathematical structure 
work  dixon s work attempts formally model assumptions system makes
environment  dixon s interest  however  individual program means
rather comparing competing programs 

   toast

toast  agre   horswill        program simulates short order cook reasonably detailed simulation kitchen  see figure     toast  world consists

set objects ovens  pans  cutting boards  globs pancake batter  individual eggs 
customers restaurant  object type  e g   egg  objects
given type common set possible states common set possible operations
performed them  action involves set objects given types 
action require objects specified states may change states
objects  others  example  mix operation would involve objects type
   

fiagre   horswill
time
 
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
   
   

event
 break egg egg    bowl     making omelette 
 add egg egg    omelette batter   
 add egg egg   omelette batter   
 beat omelette batter   whisk 
 move pan   burner   
 move butter pat    pan   
 melt burner   pan   butter pat    
 move slice    toaster   waiting butter making toast 
 start toaster slice    
 move knife   plate     waiting toast setting table 
    done goal  knife clean plate       
 move plate   kitchen table 
 move fork   plate   
    done goal  fork clean plate       
 move spoon   plate   
toaster pops 
 move butter pat    knife     back toast 
 butter slice    knife   butter pat    
 pour omelette batter omelette batter         butter melted back omelette 
 move slice    plate     setting table 
    done goal  slice buttered plate       
    done goal  spoon clean plate       
 pour flour flour bowl     making pancake 
 add sugar sugar pancake batter   
 add baking powder baking powder pancake batter   
 fold omelette   spatula     tending omelette 
 add milk milk dispenser pancake batter     back pancakes 
 add egg egg   pancake batter   
 mix pancake batter   spoon   
 move pan   burner   
 flip omelette   spatula     tending omelette 
 move butter pat    pan     pancake 
 melt burner   pan   butter pat    
 move omelette   plate     finishing omelette 
    done goal  omelette cooked plate       
 spoon batter pancake batter   pan   butter pat      pancake 
 flip pancake   spatula   
 move pancake   plate   
    done goal  pancake cooked plate       
 move plate   kitchen table 
 move pan   burner     pancake   
 move butter pat    pan   
 melt burner   pan   butter pat    
 spoon batter pancake batter   pan   butter pat    
 flip pancake   spatula   
 move pancake   plate   
    done goal  pancake cooked plate       
 move plate   kitchen table 
 clean pan     cleanup 
 clean pan   
 clean spoon   
 clean spatula   
 clean bowl   
 clean knife   
 clean pan   
 clean whisk 
 clean bowl   
 turn off burner   
 turn off burner   
 turn off burner   

figure    sample run breakfast program  agent given goals making
omelette  two pancakes  slice toast  setting table  cleaning
up  comments appear square brackets 
mixing bowl  batter 

spoon  would require spoon clean state
effects would put batter mixed state spoon dirty
state  objects perform actions  toast agent  oven  customers
modeled objects perform actions cooking  transferring heat  making
orders  respectively 
toast divides objects world two important classes  see figure
    informally  tools objects     end products cooking     easily
   

filifeworld analysis
material  eggs  fresh   broken   beaten   cooked 
material  butter pat  fresh   melted 
material  milk supply  non empty   empty 
material  pancake batter  has    has sugar   has dry   has milk   has all   mixed 
material  pancake  cooking   cooked   side   ipped   cooked   burnt 
material  bread slice  fresh   toasted   buttered 
tools  forks  spoons  knives  spatulas  whisks  clean   dirty  dirty   clean 
containers  bowls  plates  pans  stove burners  countertop  toaster  bread bag 
active objects  agent  stove burners  toaster 

figure    object types current system 
reset initial states  example  knives spoons used dirtied
process cooking  end products cooking easily reset
clean state washing  materials objects end products cooking
state graphs form linear chains  words  state material 
exactly one state brought exactly one action
bring there  example  egg scrambled always goes series
states unbroken  broken  beaten  cooked  unbroken state  action available
egg break  action available beat 
toast given stock type object  runs  customers give goals
 orders  prepare specific dishes  goal specifies type material  e g    egg   
satisfied putting object type finished state  egg object
cooked matter  toast manages dynamic set goals opportunistically
overlaps preparation processes finish scarce resources  stove burners 
become free  toast uses surprisingly simple algorithm 
clock cycle simulator 
choose material already cooked
look action needed advance next state
action requires additional tools 
choose objects proper types
objects reset states
perform action
else choose one unreset tool objects
look perform reset action

algorithm intentionally sketchy implemented many versions
find intuitively similar  different control structures
require different correctness proofs  task next section draw
similarities produce coherent theory them 
toast algorithm two interesting features 

algorithm proceeds table lookup 
algorithm stateless  internal plans models stored agent 
information used choose actions stored world 
   

fiagre   horswill
table lookup implies algorithm fast simple  statelessness makes algorithm simple well  relatively robust face unexpected perturbations 

   modeling toast world

toast work  specifically  properties environment rely
upon work  general  strategy identify series structures environment
permit toast s tasks factored  define series reductions
permit complex versions toast s problem defined terms simpler ones 
claim vast generality toast architecture  simply observe
environmental regularities toast relies upon common many environments 
suggest method arguing toast s architecture seems likely extend
types structure environment  although different versions toast rely
different structures  show versions rely on 
   factorability environment individual objects  factoring allows us
construct solutions problems solutions subproblems individual
factors 
   special properties tool material object classes 
   maintenance invariants agent s activity introduce new structure
environment 
formalization properties tools materials simple  precise formalization factorability objects  however  surprisingly dicult environment directly factorable using methods developed far  solve
problem defining new factoring technique called uniform reduction 
environment viewed collection overlapping instances schematic environments 
containing minimal set objects necessary perform task  agent solves
task choosing one instances reducing goal true environment
solution schematic instance  this  agent must keep track
instance operating goes along  could accomplished internal memory  course  agent would need memory performs
tasks concurrently  show structuring activity  agent
make information manifest environment  thus  storing  information
world 

    single material worlds

start defining schematic environment toast  environment
exactly one material cooked one tool needed cook it  simplify
further  start ignoring even tools 
   solve no tools case 
   reduce self resetting tools case no tools case 
   reduce general case self resetting tools case 
   

filifeworld analysis
      single material worlds tools

since materials linear chains state spaces  action restricted  say
least  case egg  might chain 
fresh break
  broken beat
  beaten heat
  cooked heat
  burnt
 we assume identity   nop   action always available every state 
trivial assumption   given state  one non trivial action executed 
action selection agent trivial  solving dcp involving single material
world one following must always hold 
current state goal state  need execute identity action 
current state pregoal state  goal state later chain
current state  reach executing unique action brings us
next state chain 
current state postgoal state  goal states earlier chain 
problem unsolvable 
really matters single material worlds  therefore  many states
direction goal lies relative current state  sense 
really one single material world  rather one class them  namely chains cn given
length 
cn    f        ng  fincn   ig 
 note environment zn   without actions move
backward along chain  
proposition   single material worlds n states reducible cn
proof  let e    s  a  single material environment  define     f        ng
letting  s  s s position e  s state chain  i e  first state maps    second
   etc  let action s  denote unique action performed state s 
pincn  s     action s   s 
 implementation incn e reduced   
one real class single material worlds  one real class
policies single material dcps 
 
s g
pcn  g s    i inc   ifotherwise
n
clearly solves dcp  cn   g  n valid g 
corollary   goal g solvable single material environment e tools 
solved policy
 
s g
pe g s    i  action s   s   ifotherwise
   

fiagre   horswill
      single material worlds single state tools

suppose world contains material set tools  tools always clean
otherwise reset use  self resetting tools one state 
trivial kind environment  define  singleton  environment environment
exactly one state 
   freadyg  fig 
single state environments isomorphic   model environment consisting
material    s  a  self resetting tool k   state space simply
freadyg actions set

fa     sm   ready      a sm    ready ja   ag
action performs action  component product s state
leaves component unchanged  induction  that 

proposition   environment isomorphic ks n  
single state tool worlds trivially reducible tool free worlds 
      single material worlds general tools

general tool environment identical single state tool environment  except
actions change states tools addition states materials  solve
general tool case using solution single state tool case resetting tools whenever
dirtied 
proof simple  requires formalize notion tool  let e
environment state space form s  s      sn  let action e
si component state space  say

independent si never changes si result regardless
value si  

focused component si independent components 
si tool privileged value readyi   si that 
  state  s        si        sn   e   reach state  s        readyi        sn  

using actions focused si  
  action a  either independent si  focused si  else
defined states whose si component readyi  

prove general tool case reducible single state tool case 

lemma   environment tool components reduced one tools
replaced singletons  specifically  let     s  a   g  dcp let readyt  
  a    fa     s  readyt       a s   t ja   a    s    g  d      s t  a   
   g freadyt g  reducible tool d  
   

filifeworld analysis
proof  let pd solution  policy  d  definition tool  must
policy pt bring d  state  s  t   s  readyt   without changing
component  let projection d  given

 

  readyt
 s  t    s    ifotherwise
  a  define  implementation a  pa
   
  readyt
pa  s  t    ap     ifotherwise

d  reducible d  general case multiple tools follows induction   

    multiple material worlds single material goals

reprise  want factor environment individual objects describe
toast composite techniques operating individual factors  cannot
properly define environments cartesian products individual objects defined isolation
way expressing actions involving multiple objects  can  however 
define set objects context minimal  schematic environment containing one
copy object  done so  want recapture notion environment
kind product objects different types  showing
environment two eggs thought two overlapping copies environment
one egg  copies differ choice egg 
treat environments state spaces formed products state spaces
objects  state environment tuple states objects  binding
schematic environment real environment particular kind projection
complex environment schematic  one reduction  reasonable
projections valid bindings  say environment uniformly reducible
schematic environment 
      bindings uniform reducibility
let e   e environments state spaces built cartesian products family

disjoint sets fsi g  si might represent state spaces object types egg fork 
e   e would state spaces make number copies egg
fork 
say projection e   e simple every component result
component argument 

 s   s    s        sn      si    si         sim  
i         im     n   thus takes e    state  s    probably throws away
components  possibly rearranges rest form new tuple  example  might

single particular egg s state and or particular fork s state throw state
components away  projection simple  define kind inverse it 
   

fiagre   horswill

schematic world

multiple object world

the egg

egg 

the fork

egg 

the spatula

egg 

the pan

egg 
egg 
fork 
fork 
fork 
spatula 
spatula 
pan 
pan 

figure    binding  solid vectors  alternate binding  dashed  
call back projection  define back projection     s  s    
function whose result s  components keeps replaced
corresponding components s  example  defined
 s     s    s        s     s   
back projection would given by 
    sa  sb     s     s    s         s    sb   sa 
say simple projection binding e e   simple reduction
e   e  see figure    
lemma   let binding e e     given
 a       s       a  s      s   
is  implementation e  action simply  s back projection composed
action  
proof follows definitions simple projection back projection 
say e   uniformly reducible e every simple projection e   e binding 
      existential goals
toast given goal putting instance given material finished state 

call existential goal satisfied exactly environment
states exists object specified type specified state  let  e  g 
dcp let e   uniformly reducible e   define existential goal  e e g g
e   set states e   project binding goal state  e  g  
 
   g 
 e e g  
 

 

binding e e

   

 

filifeworld analysis
    g    fs     s      gg set states map goal states   given
solution schematic goal schematic environment  easily construct
number solutions existential goal 

lemma   policy p solution problem  e  g  initial states  
binding e   e  
p   p
solution  e      e e g  initial states     i    function mapping
actions e corresponding actions e    
 

toast algorithm implements policy composition schematic solution
binding maps onto real world  consider problem cooking egg 
schematic solution might be 

break the egg the pan
beat the egg the pan using the whisk
heat the egg the pan
boldface verbs break  beat  heat name actions  italicized expressions the 

egg the pan name objects  state components  affect simplified world 
binding determines objects real world state components
correspond  given binding  main control structure need remember sequence
break  beat  heat  may preconditions states tools  i e 
whisk needs clean   handled reduction given policies resetting
tools 
      binding maps

given basic policy cooking single egg single pan whisk  construct
policy achieve goal composing basic policy binding  policy
solve goal state bound material non postgoal state 
policy solve goal solvable state  must able change bindings run
time  call function states bindings binding map 
one simple policy choosing bindings impose priori ordering
objects always use first acceptable object ordering  ordering might
random  might correspond order imposed visual search mechanism 
formal standpoint  ordering matter  can  without loss generality  use
left to right order state components environment s state tuple  let m 
binding map always chooses leftmost pregoal material uses fixed
mapping tools  we care what   mapping allows us construct true
solution  one requires internal state agent 

proposition   policy
pm   s     am  s  p  m   s    s 
solution state m  defined 
   

fiagre   horswill
proof  assumption  m  defined initial state  environment must map
solvable state m  initial state  since p is  assumption  solution
problem e   pm  must solve problem e   unless m  changes value
pm  solve problem  suppose does  environment must go state
s    state component e   leftmost pregoal material  state s   
component leftmost pregoal material  happen  a 
leftmost pregoal material s   changed goal state s    b 
component pregoal s   becomes pregoal s     case  b  impossible
case  a  implies s   goal state  thus pm  must solution   

    multiple goals  metabolism

thus far  considered happens policy achieves goal  since agents
rarely set achieve goal die  want consider account extended
activity involving many goals 
one important class extended activities agent transforms whole class
identical objects  call metabolizing class  metabolism useful
make extra work  cooking     eggs useful  least feeding lot people 
dirtying     forks  however  probably means wash all 
whether policy metabolizes object class depends large part binding map
uses  policy pm  metabolizes materials material worked
ceases leftmost pregoal material soon arrives goal state 
happens  m  changes bindings agent starts work different object  policy p
never actually sees material goal state  course  property  leftmost 
artifact formalism  matters property metabolism simply
binding map implement ordering instances material always
choose minimum ordering objects pre goal states 
ordering might implemented agent visually scanning work surface
uncooked egg  always scanning left to right top to bottom  return
issues section   
binding maps lead kinds behavior  pathological 
binding map always chooses binding  metabolism ceases  binding
map always chooses uncooked eggs doesn t impose ordering them  might start
cooking infinite number eggs without ever actually finishing one them 
metabolism issue tool use  metabolize materials  pm  must repeatedly
reset tools  alternate policy metabolize tools too  let us define m 
binding map uses leftmost pregoal material leftmost reset
tools  clearly 
pm   s     am  s  p  m   s    s 
solution state m  defined  policy treats tools disposable 
long infinite supply fresh tools  p see succession states
tools reset states  never need execute resetting action
environment effectively single state tool environment  thus reduction section
      unnecessary 
   

filifeworld analysis

    multiple goals  interleaved execution

metabolism involves performing transformation uniformly instances
type object  cooking eggs  cleaning dirtying forks  often times 
however  agent work toward different kinds goals once  often
done interleaving actions solutions individual goals  say
interleaving function returns one first two arguments 
depending third state argument 

 s  p    p      fp    p g 
last two arguments policies  result policy  define
notation 
ip  p   s     i  s  p    p     s 
wanted simultaneously make toast cook egg  good interleaving
toast making policy egg cooking policy would one chose egg making
policy whenever egg finished current cooking step  and ready
ipped removed pan  chose toast making policy egg busy
cooking  bad interleaving would one always chose toast making policy 
interleaving fair p  p  starting state  ip   p 
finite number steps executed p  p  least once  finally  say
two bindings independent map disjoint sets components images 
binding independence special case subgoal independence  two policies can t possibly
interfere alter distinct state components  fairness binding independence
sucient conditions interleaving solve conjunctive goal 

lemma   let p    a  p     p    a  p     policies solve goals g 

g   respectively  halt      independent fair interleaving
p  p  ip  p  solves g    g  halts 
proof  since fair interleaving  two policies executed finite time 
regardless starting state  induction  n  number steps
guaranteed executed least n steps policy 
policy p  composition policy p   state space s  binding 
p  solves g  halts  must p   solve  g    halt finite
number steps n  execution  environment goes series states

s   s        sn
project   series states

s    s         s n
claim execution interleaving ip   p  must bring environment
sequence states project  
 s         s              s n         
   

fiagre   horswill
is  string states s   appears least once  s     appears least once 
on  state transitions appear s i s i    
suppose otherwise  must point series broken 
 s         s              s i     
neither s i s i     two cases  case    p  executed transition 
p    s i        s i     contradiction  case    p  executed transition 
p  changed one state components mapped      
independent  contradiction  thus interleaving solves g    reasoning 
must halt g    since p  halts g    reasoning  must solve g 
halt  hence  must solve intersection halt   
useful corollary policy applied two independent
bindings  bindings safely interleaved  is  interleaving commutes binding 

corollary   p    a  p   p    a  p   policies solve goals g 
g   respectively  halt  fair interleaving p  p   ai    p i   
solves g    g  halts 

   implementing policies bindings

modeled toast s behavior composition various bindings interleavings
basic policy schematic environment  case toast  basic policy
simple enough implemented table lookup  hard part implementing
bindings interleavings given realistic limitations short term memory perceptual
bandwidth 
one approach would assume relatively complete representation world 
egg would represented logical constant state would represented
set propositions involving constant  binding would implemented
frame structure set variables point logical constants  problem
approach presupposes underlying perceptual motor systems maintain
correspondence logical constants eggs world  one eggs
changes  visual system know looking update assertions
egg model 
assumption taken lightly  capacity human perceptual
system keep track objects world extremely limited  ballard et al        found
experimental subjects adopt strategies minimized amount world state
needed track internally  preferring rescan environment information
needed rather memorize advance  environment could even modified
saccadic eye movements without subjects noticing 
alternative treat limitations body  locality space  limited
attentional motor resources resource implementing bindings directly  person
visually focus one object  stand one place  grasp objects
one time  orientation body s parts relative environment used
encode selection objects operated moment  words 
   

filifeworld analysis
implement binding  actions body  gaze shifts  movements new places
used shift binding 
another alternative use states relationships objects world keep
track bindings  egg cooked frying pan  fork available
use drawer  sink waiting washed 
section  model use body conventions implement bindings interleavings  simplify presentation concrete  focus
materials  particularly eggs 

    binding  deixis  gaze

first approximation  people visually recognize objects
directly looking  people achieve illusion direct access arbitrary objects rapidly
changing gaze direction  thus addition normal state environment 
lived world contains additional state component  gaze direction  since
normally change gaze direction without changing world  vice versa  lived
world e   separated parallel product objective environment gaze
direction 
e    e k
access world gaze  allows us focus one particular
object time  gaze implements binding  precisely  binding map  since
depends direction gaze  model gaze direction number indicating
object presently foveated  that 
gaze s    s        sn   d    sd
person could implement single object binding fixating object wish
bind  first would set component egg  use binding 
since really binding map  however  rather true binding  agent must
pervasively structure activity ensure gaze need never redirected 

    binding convention

general  agents must maintain bindings sort convention  whether
structuring internal memory  case problem solver  structuring
activity  case gaze above  agent maintains binding
convention spatial relation eye object binding 
versions toast date maintained bindings using conventions  simulated 
spatial arrangement states objects 
one reason toast cannot rely solely gaze binding technique breaks
binding multiple objects  agent must continually move gaze among objects
interest additional convention must introduced ensure
gaze leaves egg later returns  always returns egg   this assumes 
course  toast must return egg  tasks may suce toast
return functionally equivalent egg  preparing three fried eggs
attention distracted preparing break second one  alright attention
returns third egg  long gets back second egg eventually  
   

fiagre   horswill
state conventions

original version toast used convention eggs bound cooking task
iff starting  unbroken  state  eggs therefore bound using
binding map

toast  s    state unique egg unbroken state
agent implement first visually searching unbroken egg 
using gaze   corollary    interleaving cooking multiple eggs accomplished interleaving bindings eggs  example  might assume
visual system searched non deterministically round robin fashion eggs  fair
interleaving suce 
spatial conventions

later development toast  found useful adopt convention
eggs bound cooking task iff located designated workspace  cooking
eggs counter frying pan  idle eggs refrigerator 
convention lets agent use space external memory binding information  bind
egg  agent faces workspace performs visual search egg  egg
finds egg cooked  since idle eggs view 
still leaves open issue fairness  extreme elegant solution fairness
problem use multiple workspaces employ convention workspace
defines unique binding  cook two eggs  agent works cooking whatever egg
front it  spins place alternates workspaces 
formally  environment consists two copies workspace objects
therein plus extra state component determines workspace agent faces 
agent s perceptual system implements binding map one
two workspaces bound depending agent s orientation  given policy
cooking one egg one workspace  construct policy cooking two eggs two
interleaving policy   ipping  operation switches workspaces 

proposition   let e    s  a  environment  p policy solves goal g

e halts  let environment two states       two actions 
 the identity  flip moves environment opposite state present
state  consider product environment 

e    e  
 e  
 d
binding map e   e  

md  s    s   d    sd
fair interleaving policies 

pmd   amd p md
   

filifeworld analysis

real world
idealization

functionally equivalent objects
least reset
binding map

binding maps
interleavings

general tools
resetting policies

self cleaning tools
isomorphism

single object
isomorphism

canonical chain

figure    various alternative reductions used toast 


pflip s   s    d    flip

solution problem  e      g g f    g   
proof  consider bindings      s    s    d    s       s    s    d    s    let p   
a  p   p    a  p    since binding map md alternates
bindings       fair interleaving pmd pflip equivalent interleaving
p    p  pflip   would show interleaving fair  is 
p  p  get run finite time  see fact
execution pflip switches md one binding another  objection
leaves open possibility pflip always get run twice row  thus returning
environment original state preventing md switching bindings 
cannot occur  however  since would introduce loop  causing interleaving run pflip
forever  never running pmd   violating assumption fairness interleaving
pmd pflip  thus interleaving p    p  pflip must fair  note
p  solves goal g f    g halts  p  solves goal g f    g halts 
pflip solves goal g g f    g halts  thus lemma    interleaving solves
intersection goals  g g f    g   
   

fiagre   horswill

   reductions structure toast
shown cooking problem solved series reductions
conventions  binding allows reduction problem schematic world
action greatly restricted action selection greatly simplified  world
reduced  given algorithms resetting tools  world tools always
reset  world  turn  equivalent world one object 
material cooked  one action taken given time  actions
found table lookup 
multiple materials cooked interleaving execution processes cooking
individual materials  interleaving processes equivalent  however  interleaving
bindings  schematic world algorithm need even aware pursuing
multiple goals  tool bindings continuously changed tools dirtied tools
effectively disposable  tools effectively single state  separate reduction
general tools single state tools unnecessary  material bindings maintained
number conventions involving states and or positions objects 
short  describe toast algorithm path network possible
simplifications problem  see figure    every path actual world
idealized single object world defines possible  and correct  version toast
algorithm 

    cognitive autopoiesis
formalizing ideas binding gaze  moving toward theory
intentionality depends agent s embedding world  rather solely upon
internal models world  agent keep track particular objects terms
functional significance   roles play ongoing activity 
keep track tools materials associated different tasks keeping
different locations  example different regions countertop  far  however 
ideas subject limited simple cases  example agent switching
visual focus back forth two objects  model complex patterns
found everyday life  need much better theory world
embedded  theory partially matter biology physics  course 
matter cultural practices organizing activities space  section 
would sketch general theory matters using concept  cognitive
autopoiesis  
maturana varela         autopoiesis refers processes organisms
act environments order provide conditions continued functioning  cognitive autopoiesis refers active means agents structure
environments order provide conditions cognitive activities 
include basically means agents provide factorability environments  engaging customary activities  using customary tools materials them 
partitioning activities customary ways  on  includes range
subtle phenomena  kirsh         example  drawn useful distinction
actions aim achieving functional goals  beating eggs  sweeping oors 
   

filifeworld analysis
actions aim facilitating cognition  setting right number eggs beginning  opening curtains dust visible   actions can  course 
serve purposes  example one chooses boil water kettle rather
saucepan  strategy achieves result  latter provide sign
possible take next action  example preparing tea  stabilization actions  hammond et al         provide cognitive conditions actions  one might 
example  develop habit leaving items door moment one realizes
need taken work 
phenomena help understanding inadequate concept  the
environment   one conceptualizes  the environment  monolithic whole  perhaps
way looks viewed airplane  else way looks understood
peephole momentary vector sense perceptions  begins seem arbitrary  chaotic 
hostile  certain sense seems static  anatomy physiology 
fact phenomena cognitive autopoiesis reveal lifeworld great
deal living structure  structure actively maintained agents
providing crucial preconditions cognition  indeed hard draw clear line
around agent s cognition  trace sequence causal events led given agent
pour pitcher milk particular moment  sequence lead back forth
agent customary surroundings  almost surroundings
extension one s mind 
cognitive autopoiesis complex multifaceted phenomenon single theory
suce explain it  one useful way think cognitive autopoiesis spatially 
terms series buffer zones embodied agent putative dangers
complexities  the environment   people whose lives similar own 
buffer zones conveniently sorted six headings 

body itself  posture  markings  things might attached hung

it  prostheses  artificial markings  things one holding one s hands 
on  things serve forms memory  example way
remember activity one middle momentary distraction 
body s motility makes possible wide range voluntary reconfigurations
one s physical relationship things  example get better view better
leverage 

clothing  including pockets  purses  money belts  hats  on  everyone carries
around various objects ways draw customary practices artifacts  cash
wallets  keys pockets  watch wrist  etc  configuring things
evolving personal way  keys left pocket money right  tissues hip pocket
one s coat  spare change outer ap backpack  on  

temporary workspaces one occupies perform particular activity bound 

ed period  repairing bicycle  example  one might spread tools bicycle
parts oor patterns cognitive significance relationship
one s body cognitive states  chapman   agre         one
claiming space permanent colony  it might located patio
   

fiagre   horswill
public park  example   one lay claim space long enough perform
customarily bounded task 

one s private spaces  home  desk  oce  car  trunks stuff kept someone else s

attic  forth  spaces serve numerous functions  course  among
cognitive functions providing stable locations long periods time
tools materials  storage places stuff needs kept adequate supply 
practices regulating people s access stuff  on  stable
conditions actively maintained provide background wide variety
transient activities 

spaces shared people within stable  time extended relationships 
spaces include living rooms  kitchens  shared oce spaces  forth 
line private shared spaces clearly depends particular culture
set relationships  distinction might clear  point
cognitive functions spaces maintained shared practices
letting someone know borrow stuff 

public spaces whole range customary artifacts practices regu 

late activities them  public spaces offer fewer guarantees private shared
spaces  include wide variety supports cognition  including signs
architectural conventions  possible use one s body clothing
carry artifacts provide cognitive support dealing public spaces 

buffer zones always offer perfect protection harm complete support
pursuit goals  shared public spaces sites con ict  example 
con icts include involuntary disruption destruction one s body
buffer zones customarily one s private control  serious theory
activity must include account phenomena well  usually
orderly way anything else 
event  nested buffer zones ordinary life participate large metabolism
continually interweaves cognitive functional purposes  among purposes
learning  adaptation body parts tools customary activities helps channel action customary directions  existing background objects  spaces 
practices help channel actions children newcomers customary directions
larger scale  caretakers regularly construct customized types buffer zones around
young  example  dicult impossible get anything
could cause harm  lifeworld child  example  differs adult
reach cookie jar locked cupboard roach spray
kept  growing literature investigated processes cognitive apprenticeship  rogoff         situated learning  lave   wenger         distributed cognition  hutchins       
salomon         shared construction activities  grin   cole        go
systematically restrictive supportive lifeworlds 
   

filifeworld analysis

    conclusion

paper explored ways structure lifeworld
supports agents  cognition  suggested analysis might expanded
cover wider range phenomena  much work obviously remains done  perhaps
significant part work concerns fundamental assumption lifeworld analysis 
people use objects customary ways  plausible enough first approximation 
always true  faced diculty goes beyond capacities
usual practices artifacts readily available  people frequently improvise 
handle spoon might used pry open lid  pen might used fish acorns
exhaust duct  book might used provide backing sheet paper one
writing on  protruding section car s bumper might bent straight deliberately
driving car concrete wall  cases underlying physical affordances
object  show through  beyond ready to hand appropriation routine patterns
interaction  underlying affordances show situations breakdown  example tool breaks proves inadequate job  cases  people
confer improvised meanings upon artifacts  phenomena particularly important
conversation  utterance interpreted context created previous
utterances  simultaneously helping create context interpretation successive utterances well  edwards   mercer        atkinson   heritage         point
lifeworld exist  rather something actively created
well something adapted socialization  one challenge future research
learn computational methods might help modeling phenomena and
phenomena might help us rethink basic ideas computation 

acknowledgements

appreciate detailed comments referees  work funded part
national science foundation grant number iri          institute
learning sciences established      support anderson consulting  part
arthur anderson worldwide organization 

glossary terms

binding  simple projection  mapping state space components two environ 

ments  acts reduction one environment another  see section        
binding map  mapping environment states bindings  see section        
cartesian product  sets  b set pairs  a  b    a  b   b  
environments  environment cartesian product two environments iff
state space cartesian product state spaces  since set actions
left open definition  many possible ways forming products  e g  serial
product  parallel product  uniform extension  etc  see section      
discrete control problem  dcp   environment set goal states within
 see section    
environment  state machine  i e    set possible states set possible actions
mapping states states  sets states actions need finite  see section    
   

fiagre   horswill

focus  action focused state component alters component  see

section        
material  object  environment  whose state space chain  see section      
policy  mapping states actions  formalization agent s control structure
 see section    
projection  mapping state space one environment state space
another  see section      
simple projection  mapping state spaces maps state space components
one environment state space components another  see section      
state component   for environments whose state spaces cartesian products 
element environment s state tuple  see section      
solution  policy solves dcp initial state if  run state 
eventually reaches goal state  see section    
tool   roughly  state component brought ready state without altering
state components  see section        
uniform reducibility   roughly  e   uniformly reducible e consists multiple
copies e  s objects  see section        

glossary notation

  function composition operator  f g x    f  g x   

  projection  p       
    inverse   i e  set states map given state  p       
    for simple projection          generalized inverse  since maps certain
components        s  s    s  components replaced corresponding
components  p       
  simple reduction environment e   e   function mapping action
e action implements e    p       
cn  chain environment n states  p       
e   environment 
 e e g  g goal e e   uniformly reducible e   existential goal g e    
set e    states map goal state binding  p       
e   
  e   serial product  cartesian product e  e  actions
 

two environments must taken separately  p       
e  k e    parallel product  cartesian product e  e  actions
two environments must taken simultaneously  p       
le e    e   environment uniformly reducible e   leftmost ready binding map
e   e  p       
p  policy 
pe g  standard policy single material environment e goal g  p       
  singleton environment  the environment exactly one state   used represent
self resetting tool  p       
 

   

filifeworld analysis

references

agre  p     horswill  i          cultural support improvisation  tenth national conference artificial intelligence cambridge  ma  american association artificial
intelligence  mit press 
agre  p  e          computational research interaction agency  artificial intelligence 
               
agre  p  e          computation human experience  cambridge university press 
cambridge  uk 
agre  p  e     chapman  d          pengi  implementation theory activity 
proceedings sixth national conference artificial intelligence  pp          
atkinson  j  m     heritage  j          structures social action  cambridge university
press  cambridge  uk 
ballard  d  h   hayhoe  m  m   pook  p  k     rao  r  p  n          deictic codes
embodiment cognition  technical report       university rochester national
resource laboratory study brain behavior  rochester  ny  revised
july      
beach  k  d          role external mnemonic symbols acquiring occupation 
gruneberg  m  m   morris  p  e     sykes  r  n   eds    practical aspects memory 
current research issues  volume    memory everyday life  wiley  chichester 
uk 
beer  r  d          dynamical systems perspective agent environment interaction 
artificial intelligence                    
brady  j  m   agre  p  e   braunegg  d  j     connell  j  h          mechanic s mate 
proceedings      european conference artificial intelligence pisa  italy 
chapman  d     agre  p  e          abstract reasoning emergent concrete activity 
georgeff  m  p     lansky  a  l   eds    reasoning actions plans  proceedings      workshop  timberline  oregon  morgan kaufmann publishers 
los altos  ca 
dixon  m          embedded computation semantics programs  tr ssl      
xerox palo alto research center  palo alto  ca 
donald  b  r     jennings  j          constructive recognizability task directed robot
programming  robotics autonomous systems           
edwards  d     mercer  n          common knowledge  development understanding classroom  methuen  london 
gibson  j  j          ecological approach visual perception  erlbaum  hilldale  nj 
originally published      
   

fiagre   horswill
grin  d  n  p     cole  m          construction zone  working cognitive change
school  cambridge university press  cambridge 
hammond  k  j   converse  t  m     grass  j  w          stabilization environments 
artificial intelligence                    
horswill  i          analysis adaptation environment  artificial intelligence           
     
hutchins  e          cognition wild  mit press  cambridge  ma 
kirsh  d          intelligent use space  artificial intelligence                  
knoblock  c  a          theory abstraction hierarchical planning  benjamin 
d  p   ed    change representation inductive bias  kluwer  boston 
kosecka  j          control discrete event systems  grasp lab report      university
pennsylvania computer information science department  philadelphia  pa 
lansky  a  l     fogelsong  d  s          localized representations planning methods
parallel domains  proceedings sixth national conference artificial
intelligence  pp          menlo park  ca  aaai press 
lave  j     wenger  e          situated learning  legitimate peripheral participation 
cambridge university press  cambridge  uk 
littman  m  l          optimization based categorization reinforcement learning
environments  meyer    wilson  meyer   wilson         pp          
lyons  d  m     arbib  m  a          formal model computation sensory based
robotics  ieee transactions robotics automation                 
maturana  h  r     varela  f  j          tree knowledge  biological roots
human understanding  shambhala  boston 
meyer  j  a     wilson  s  w   eds            animals animats  second
international conference simulation adaptive behavior  mit press  cambridge 
ma 
newell  a   shaw  j  c     simon  h  a          report general problem solving
program  proceedings international conference information processing 
pp          paris 
newell  a     simon  h  a          gps  program simulates human thought 
feigenbaum  e  a     feldman  j   eds    computers thought  pp          
mcgraw hill 
rogoff  b          apprenticeship thinking  cognitive development social context 
oxford university press  new york 
   

filifeworld analysis
rosenschein  s  j          formal theories knowledge ai robotics  report csli       center study language information  stanford  ca 
rosenschein  s  j          synthesizing information tracking automata environment
descriptions  brachman  r  j   levesque  h  j     reiter  r   eds    proceedings
first international conference principles knowledge representation
reasoning  pp          
rosenschein  s  j     kaelbling  l  p          synthesis machines provable
epistemic properties  halpern  j   ed    proc  conf  theoretical aspects
reasoning knowledge  pp         morgan kaufmann 
sacerdoti  e  d          planning hierarchy abstraction spaces  artificial intelligence 
      
salomon  g   ed            distributed cognitions  psychological educational considerations  cambridge university press 
schutz  a     luckmann  t          structures life world  northwestern
university press  evanston  il 
simon  h  a          administrative behavior  study decision making processes
administrative organization  macmillan  new york 
simon  h  a          sciences artificial  mit press  cambridge  ma 
sussman  g  j          computer model skill acquisition  elsevier  new york 
todd  p  m   wilson  s  w   somayaji  a  b     yanco  h  a          blind breeding
blind  adaptive behavior without looking  cliff  d   husbands  p   meyer 
j  a     wilson  s  w   eds    animals animats  third international
conference simulation adaptive behavior  pp           mit press 
todd  p  m     wilson  s  w          environment structure adaptive behavior
ground up  meyer    wilson  meyer   wilson         pp        
wilson  s  w          animat path ai  meyer  j  a     wilson  s  w   eds   
animals animats  proceedings first international conference simulation
adaptive behavior  pp         mit press  cambridge  ma 
winston  p  h   binford  t  o   katz  b     lowry  m          learning physical descriptions
functional definitions  examples  precedents  proceedings national
conference artificial intelligence  pp          austin  tx 

   


