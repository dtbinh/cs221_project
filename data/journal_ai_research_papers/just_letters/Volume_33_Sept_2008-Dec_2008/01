journal artificial intelligence research               

submitted        published      

ice  expressive iterative combinatorial exchange
benjamin lubin
adam i  juda
ruggiero cavallo
sebastien lahaie
jeffrey shneidman
david c  parkes

blubin eecs harvard edu
adamjuda post harvard edu
cavallo eecs harvard edu
slahaie eecs harvard edu
jeffsh eecs harvard edu
parkes eecs harvard edu

school engineering applied sciences
harvard university
cambridge       

abstract
present design analysis first fully expressive  iterative combinatorial
exchange  ice   exchange incorporates tree based bidding language  tbbl 
concise expressive ces  bidders specify lower upper bounds tbbl
value different trades refine bounds across rounds  bounds allow price
discovery useful preference elicitation early rounds  allow termination
efficient trade despite partial information bidder valuations  computation
exchange carefully optimized exploit structure bid trees avoid enumerating trades  proxied interpretation revealed preference activity rule  coupled
simple linear prices  ensures progress across rounds  exchange fully implemented  give results demonstrating several aspects scalability economic
properties simulated bidding strategies 

   introduction
combinatorial exchanges combine generalize two different mechanisms  double auctions
combinatorial auctions  double auction  da   multiple buyers sellers trade
units identical good  mcafee         combinatorial auction  ca   single seller
multiple heterogeneous items sale  de vries   vohra        cramton  shoham 
  steinberg         buyer ca may complementarities  i want b 
substitutabilities  i want b  goods  provided expressive
bidding language describe preferences  common goal design das
cas implement efficient allocation  allocation maximizes
total social welfare 
combinatorial exchange  ce   parkes  kalagnanam    eso        combinatorial
double auction brings together multiple buyers sellers trade multiple heterogeneous goods  ces potential use wireless spectrum allocation  cramton  kwerel   
williams        kwerel   williams         airport takeoff landing slot allocation  ball 
donohue    hoffman        vossen   ball         financial markets  saatcioglu 
stallaert    whinston         domains incumbents property
rights  necessary facilitate complex multi way reallocation resources  another potential application domain ces allocate resources shared distributed
c
    
ai access foundation  rights reserved 

filubin  juda  cavallo  lahaie  shneidman   parkes

systems  planetlab  fu  chase  chun  schwab    vahdat         ces find
use task allocation robot teams  making potentially powerful tool multiagent systems community  gerkey   mataric        bererton  gordon    thrun       
dias  zlot  kalra    stentz         finally  ces promise mechanisms expressive
sourcing multiple bid takers  perhaps representing different profit centers within organization  see associated work expressive sourcing using one sided cas  sandholm 
      
paper presents design first fully expressive  iterative combinatorial exchange  ice   designing iterative exchange  share motivation earlier work
iterative cas  wish mitigate elicitation costs focusing bidders  case
price discovery activity rules  values relevant trades  important
determining value even single potential trade challenging problem complex domains  sandholm   boutilier        compte   jehiel         moreover 
bidders often wish reveal little information possible avoid leaking information
competitors  describing central design principles support ice mechanism 
highlight following aspects 
bidder interacts ice first defining structured representation valuation different trades  defined tree based bidding language  tbbl  
concisely defines set trades interest bidder  bidder must annotate
tree initial lower upper bounds value different trades 
lower upper bounds valuations allows exchange identify
provisional trade provisional payments round  generate provisional clearing price item market  round ice  bidder
required tighten bounds tbbl bid make precise trade
preferred given current prices 
ice hybrid demand revealing process direct revelation mechanism  simple  linear  prices guiding preference elicitation bids submitted
direct claims valuation functions tbbl language 
expressive bids finally used clear exchange 
ice terminates  payment rule used determine payments made 
received  participant  suggesting payments defined way
seeks mitigate opportunities manipulation exchange  ice agnostic
particular payment rule adopted  given rule  prices quoted
round defined part approximate payments  aggregated across
provisional trade suggested bidder  concreteness  adopt threshold
rule  parkes et al         defining final payments  minimizes ex post regret
truthful bidding across budget balanced payment rules  holding bids
participants fixed  see work milgrom           say
   aware existence mechanism design solutions approximately efficient  truthful
 i e   truthful bidding dominant strategy equilibrium  budget balanced  sealed bid  i e  
non iterative  ces  nevertheless  true payment rules developed leveraged
directly within ice would allow ice inherit truthful bidding  i e   revising tbbl bounds
remain consistent bidders true valuation  ex post nash equilibrium  achieved
iterative generalized vickrey auctions  mishra   parkes        

  

fiice  iterative combinatorial exchange

incentive issues related payment rules important design successful ces 
rather  orthogonal design ice main focus work 
propose novel activity rules  designed mitigate opportunities
strategic behavior 
highlight following technical contributions made work 
tree based bidding language  tbbl  extends earlier ca bidding languages support bidders wish simultaneously buy sell  specification valuation
bounds  use generalized choose operators provide concise representations or  lgb  boutilier   hoos        nisan         tbbl
directly encoded within mixed integer programming  mip  formulation
winner determination problem 
despite quoting prices items bundles items  ice able converge
efficient trade straightforward  i e   non strategic  bidders  efficiency
established duality theory prices sufficiently accurate  otherwise 
direct proof based reasoning upper lower valuation bounds always
available  even combinatorics instance preclude duality based proof 
preference elicitation performed combination two novel activity rules 
first modified revealed preference activity rule  mrpar   requires
bidder make precise trade preferred round  second
delta improvement activity rule  diar   requires bidder refine bid
improve price accuracy prove improvement possible  coupled
together rules ensure useful progress towards determining efficient trade
made round 
summarize  three main reasons prefer explicit value representations
repeated demand reports context iterative ce   a  provisional allocation
computed round    since upper lower bounds value available   b 
combinatorics domain directly handled clearing exchange efficiency
limited adopting simple  linear  prices   c  proofs  approximate  efficiency
available reasoning directly bounds valuations despite adopting simple
 linear  prices 
exchange fully implemented java  with c based mip solver   present
scalability results showing performance across wide number bidders  goods valuation complexity well benchmarks provide qualitative understanding
characteristics mechanism  experimental results  with straightforward bidders 
show exchange quickly converges efficient trade  taking average
  rounds example domain     goods    different types   bidders
valuation functions containing average     tbbl nodes  domain 
find bidders leave upwards     maximum attainable value undefined
efficient trade known      final payments determined  indicating
bidders able leave large amounts value space unrefined  exchange
terminates problems average     minutes    ghz dual processor dualcore workstation  gb memory  includes time winner determination 
pricing  activity rules  well time simulate agent bidding strategies 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

    related work
many ascending price one sided cas known literature  parkes   ungar      a 
wurman   wellman        ausubel   milgrom        de vries  schummer    vohra 
      mishra   parkes         direct elicitation approaches  bidders respond
explicit queries valuations  proposed one sided cas  conen  
sandholm        hudson   sandholm        lahaie   parkes        lahaie  constantin   
parkes         particular relevance ascending cas designed work
simple prices items  dunford  hoffman  menon  sultana    wilson        kwasnica 
ledyard  porter    demartini         computing  approximately competitive  linear
prices  generalize extend methods  building work rassenti  smith 
bulfin         earlier papers consider bids bundles individually  find prices
exact winning bids minimize pricing error losing bids  generalizing
tbbl expressive language  propose instead compute prices minimize
worst case pricing error bidders  rather bids individual trades   considering
preferred trade consistent tbbl bid bidder  work
dunford et al         kwasnica et al         incorporate additional tie breaking
stages  case lexicographically minimize error find prices closely
approximate provisional payments  latter step appears novel 
linear prices important practical applications  prices adopted
fcc wireless spectrum auctions  cramton         within clock auctions
procurement electricity generation  cramton         essential part
proposed design airport landing slot auction laguardia airport  ball et al        
linear competitive equilibrium prices exist two sided markets indivisibilities
assignment problem agent buy sell single item  but may
interested multiple different items   shapley   shubik         general linear 
competitive equilibrium prices exist combinatorial markets nonconvexities 
see work kelso crawford         bikhchandani mamer         bikhchandani
ostroy         oneill  sotkiewicz  hobbs  rothkopf  stewart        related
discussions 
ice proxied architecture sense bidders submit refine bounds
tbbl bids directly exchange  information used drive price dynamics
ultimately clear exchange  earlier work considered proxied approaches 
application one sided ascending price cas  parkes   ungar      b  ausubel  
milgrom         given focus simple  linear prices  ice considered provide
two sided generalization clock proxy design ausubel  cramton  milgrom 
initial stage linear price discovery followed best and final sealedbid stage  ausubel et al          activity rules shown important
practice  instance  milgrom wilson activity rule requires bidder
active minimum percentage quantity spectrum eligible
bid critical component auction rules used fcc wireless spectrum
auctions  milgrom         ice adopts variation clock proxy auctions revealedpreference activity rule 
well known exact efficiency together budget balance possible
myerson satterthwaite impossibility result  myerson   satterthwaite         given
  

fiice  iterative combinatorial exchange

this  parkes et al  study sealed bid combinatorial exchanges introduced threshold
payment rule  parkes et al          see work milgrom        day raghavan        recent discussion  double auctions truthful bidding dominant strategy equilibrium known unit demand settings  mcafee       
slightly expressive domains  babaioff   walsh        chu   shen         however 
truthful  budget balanced mechanisms useful efficiency properties known
general ce problem 
voucher based schemes proposed alternative method extend onesided cas exchanges  kwerel   williams         mechanisms collect goods
sellers run one sided auction sellers buy back
goods vouchers used provide seller share revenue collected
goods  although voucher based schemes facilitate design exchanges
one sided auction technology  ice design offers nice advantage providing equal
symmetric expressiveness participants  aware previous studies
fully expressive iterative ces  smith  sandholm  simmons previously studied iterative ces  handle limited expressiveness adopt direct query based approach
enumerative internal data structure scale  smith et al         
novel feature earlier design  not supported here  item discovery  items
available trade need known advance  earlier work considered sealed bid
combinatorial exchanges purpose contingent trades financial markets  including
aspects expressiveness winner determination  saatcioglu et al         
several bidding languages cas previously proposed  arguably
compelling allow bidders explicitly represent logical structure valuation goods via standard logical operators  refer logical bidding
languages  nisan         closest generality tbbl lgb language  boutilier  
hoos         allows arbitrarily nested levels  combining goods trades
standard propositional logic operators  provides k of operator  used represent
willingness pay k trades quantifies over  see work rothkopf  pekec 
harstad        restricted tree based bidding language  key insight  boutilier
specifies mip formulation winner determination  wd  using lgb   provides positive empirical performance results using commercial solver  suggesting computational
feasibility moving expressive logical language  boutilier         tbbl shares
structural elements lgb language important differences semantics  lgb   semantics propositional logic  items
allocation able satisfy tree multiple places  although make lgb especially
concise settings  semantics propose provide representational locality 
value one component tree understood independently rest
tree 
    outline
section   introduces preliminary concepts  defining efficient trade competitive equilibrium prices  section   defines sealed bid ce  introducing tbbl providing mip
used solve winner determination  section   extends tbbl allow valuation
bounds defines mrpar diar activity rules  main theoretical results
  

filubin  juda  cavallo  lahaie  shneidman   parkes

described well method determine price feedback round  section  
gives number illustrative examples operation ice  section   presents main
experimental results  conclude section    appendix provides algorithm
two activity rules together details bidding logic used simulated
bidding agents 

   preliminaries
basic environment considers set bidders  n               n   interested
trading multiple units distinct  indivisible goods  set different types goods
denoted g               m   bidder initial endowment goods valuation
different trades  let x     x             x n   denote initial endowment goods 
x i    x i            x im   x ij z  indicate number units good type j g
initially held bidder n   trade                n   denotes change allocation 
   i            imp
 
ij z denoting change number units item j
p
bidder i  let   jg x ij denote total supply exchange  write
denote bidder active trade  i e   buys sells least one item 
    efficient trade
bidder value vi  i   r component trade   value positive
negative  represents change value final allocation x i  
initial allocation x i   valuation initial allocation information private
bidder  assume externalities  bidders value depends

individual trade  assume free disposal 
p vi  i   vi  i   trade


  i e   ij ij j  let v     vi  i   
utility modeled quasi linear  ui  i   p    vi  i   p trade payment
p r  implies bidders modeled risk neutral assumes
budget constraints  payment  p  negative  indicating bidder
may receive payment trade  use term payoff interchangeably utility 
quasi linearity  pareto optimal  i e   efficient  trade maximize social
welfare  equivalent total increase value bidders due trade 
given instance ce problem  defined tuple  v  x     i e   valuation profile
v    v            vn   initial allocation x     x             x n    efficient trade   defined
follows 
definition   given ce instance  v  x     efficient trade solves
x
max
vi  i  
        n  

s t 

   



ij   x ij   
x
ij     

i  j

   

j

   



ij z
constraints     ensure bidder sells items initial allocation 
free disposal  impose strict balance supply demand goods
  

fiice  iterative combinatorial exchange

solution constraints      i e   allocate unwanted items bidder  adopt
f x    denote set feasible trades  given constraints given initial
allocation x     x    set feasible trades bidder i  note valuation
function vi cannot explicitly represented value possible trade bidder i 
number trades scales o sm    maximal number units
item market different items  tbbl language  introduced
section    leads concise formulation efficient trade problem mixed integer
program 
initial allocation x i may private agent i  assume throughout bidders
truthful revealing information  motivate supposing participants
cannot sell items actually  or pay suitably high penalty do  
    competitive equilibrium prices
linear prices                    define
pa price j good price bidder
trade defined p  i     j ij j     prices play important role
ice  particular interest set competitive equilibrium prices 
definition   linear prices competitive equilibrium  eq  prices ce problem
 v  x    feasible trade f x    that 
vi  i   p  i   vi  i   p  i   

 x    

   

every bidder i  say trade    supported prices  
theorem    bikhchandani   ostroy        trade supported competitive equilibrium prices efficient trade 
practice  exact eq prices unlikely exist  instead  useful define
concept approximate eq prices approximately efficient trade 
definition   linear prices  approximate competitive equilibrium  eq  prices
ce problem  v  x    r    feasible trade f x    that 
vi  i   p  i     vi  i   p  i   

 x    

   

every bidder i 
 approximate eq prices  trade every bidder within  
maximizing utility  furthermore  say trade z approximate total value
trade within z total value efficient trade 
theorem   trade supported  approximate eq prices   min m  n   approximate efficient trade 
proof  fix instance  v  x    consider       trade   
x
x
 vi  i   p  i    
 vi  i   p  i      




  

   

filubin  juda  cavallo  lahaie  shneidman   parkes

 eq prices
values p
prices zero bidders p
notp
participate
p

 
         since
     
p
p
p


trade 






 


p
pi
p
p p
      then 
ij      ij     j  f xp
  j j p
pi j ij jp




 i     vi  i    fix      efficient trade   then  vi  i    
vip
vi  i   
 

x

n
min  a  x     n  min   min m  n   n      min m   
 


   



a  x    maximal number bidders trade feasible trade given x   
second inequality follows bidders trade number
goods trade bidders market thus a  x    min m  n  


   step one  tbbl based sealed bid combinatorial exchange
first flesh details non iterative  tbbl based ce bidder
submits sealed bid tbbl language 
bidding language  tree based bidding language  tbbl  designed expressive
concise  entirely symmetric respect buyers sellers  easily provide
bidders buying selling goods  i e   ranging simple swaps highly
complex trades  bids expressed annotated bid trees  define bidders change
value possible trades  main feature tbbl general intervalchoose logical operator internal nodes coupled rich semantics propagating
values within tree  leaves tree annotated traded items nodes
annotated changes values  either positive negative   tbbl designed
changes value expressed trades rather total value allocations 
examples provided figures     
consider bid tree ti bidder i  let ti denote node tree  let
vi    r denote value specified node  perhaps negative   let leaf  ti   ti
subset nodes representing leaves ti let child    ti denote children
node   nodes except leaves labeled interval choose operator icyx    
leaf labeled buy sell  units qi    j  z good j associated
leaf   qi    j       otherwise  good j may simultaneously occur multiple
leaves tree  given semantics tree described below 
ic operator defines range number children be  must
be  satisfied node satisfied  icyx    node  where x non negative
integers  indicates bidder willing pay satisfaction least x
children  suitable values x operator include many
logical connectors  instance  icnn    node n children equivalent
operator  icn     equivalent operator  ic      equivalent xor
operator  
say satisfaction icyx    node defined following two rules 
   equivalence implies tbbl directly express xor  xor or languages  nisan 
      

  

fiice  iterative combinatorial exchange

r  node icyx    may satisfied least x children
satisfied 
r  node satisfied  none children may satisfied 
one consider r  first pass defines set candidates satisfaction 
candidate set refined r   besides defining value propagated  virtue
r  logical operators act constraints trades acceptable provide
necessary sufficient conditions  
given tree ti    change in  value trade defined sum values
satisfied nodes  set satisfied nodes chosen provide maximal total
value  let sat           denote whether node tree ti bidder satisfied 
sat    sat     ti    solution sat valid tree ti trade   written
sat valid  ti      rules r  r  must hold internal nodes  ti leaf  ti   
icyx    
x sat   

x

sat     sat   

   

child  

equation     enforces interval choose constraints  ensuring
less appropriate number children satisfied node satisfied 
constraint ensures time node root satisfied  parent
satisfied  require  sat valid  ti      total increase quantity
item across satisfied leaves greater total number units awarded
trade 
x

qi    j sat    ij  

j g

   

leaf  ti  

free disposal  allow trade assign additional units item overand above required order activate leaves bid tree  works sellers
well buyers  sellers trade negative requires total number
items indicated sold tree least total number items traded away
bidder trade 
given constraints  total value trade   given bid tree ti bidder i 
defined solution optimization problem 
vi  ti       max
sat

x

vi   sat   

    

ti

s t          
example   consider airline operating slot controlled airport already owns
several morning landing slots  none evening  order expand business
airline wishes acquire least two possibly three evening slots  however 
needs offset cost purchase selling one morning slots  figure   shows
tbbl valuation tree expressing kind swap 
  

filubin  juda  cavallo  lahaie  shneidman   parkes



ic 
 

buy  pm   

buy  pm   

xor

buy  pm   

sell  am    

sell  am    

sell  am    

figure    simple tbbl tree airline interested trading landing slots 
working numerous examples frequently found cumbersome
capture even simple trades languages specified values allocations  case
existing languages  indeed  earlier work  demonstrate natural instances
tbbl exponentially concise or  lgb  cavallo et al        
fact  tbbls conciseness incomparable or  lgb extended simple
ways strictly dominate earlier languages 
winner determination  problem determining efficient trade given bids
called winner determination  wd  problem  wd problem cas  and thus
ces  np hard  rothkopf et al          approach adopt formulate problem mixed integer program  mip   solve branch and cut algorithms  nemhauser   wolsey         similar approach proved successful solving
wd problem cas  de vries   vohra        boutilier        sandholm        
given tree ti   useful adopt notation denote node ti
satisfied trade   formulate wd problem bid trees    t            tn  
initial allocation x   
wd t  x      max
 sat

xx


vi   sat   

ti

s t          
sat valid  ti     



sat            ij z 
sat    sat             sat n    tree structure made explicit mip formulation 
decision variables represent satisfaction nodes capture logic
tbbl language linear constraints  related approach approach
considered application lgb  boutilier         this  o nb   mn 
variables constraints  b maximal number nodes bid tree 
formulation determines trade simultaneously determining value bidders
activating nodes bid trees 
payments  given reported valuation functions v    v            vn   bidder 
vickrey clarke groves  vcg   e g  krishna        mechanism collects following pay   r  naturally generalizes approach taken lgb   internal node satisfied according
operator subset children satisfied  semantics lgb   however  treat logical
operators way specifying added value  positive negative  results attaining
combinations goods  use r  imposes constraints acceptable trades 

  

fiice  iterative combinatorial exchange

ments bidder 
pvcg i   vi  i    v  v  vi  v   

    

efficient trade  v  v  reported value trade vi  v 
reported value efficient trade economy without bidder i  vi  
 v            vi    vi             vn    let us refer vcg i   v  v  vi  v  vcg discount 
problem vcg mechanism context ce may run budget deficit total payments negative  alternative payment method provided
threshold rule  parkes et al         
pthresh i   vi  i   thresh i  

    

discounts thresh i p
picked minimize maxi  vcg i thresh i   subject
thresh i vcg i thresh i v  v   threshold payments exactly budget
balanced minimize maximal deviation vcg outcome across balanced
rules 
bidder  
bidder  



ic 
 
xor

buy c   
buy    

sell    

buy b   

sell c    

sell b    

figure    two bidders three items  a  b  c   efficient trade bidder   sell
buy c 

example   consider two bidders figure    bidder   potentially sell one
items  a b  get bidder  s item  c  right price  bidder   interested
buying one bidder  s items selling item  consider
possible trades  bidder   trades c gets    value bidder   gets    
bidder   trades b c gets     value bidder   gets     trade occurs
bidders get    value  therefore efficient trade swap c 
efficient trade creates surplus    removing either bidder results
null trade  bidders vickrey discount     thus use vcg payments 
bidder   pays           bidder   pays           exchange runs deficit 
threshold payment rule chooses payments minimally deviate vcg
maintaining budget balance  minimization reduces discounts        thus
bidder   pays                 bidder   pays                

   step two  making exchange iterative
defined sealed bid  tbbl based exchange modify design make
iterative  rather provide exact valuation interesting trades  bidder
  

filubin  juda  cavallo  lahaie  shneidman   parkes

figure    ice system overview
annotates single tbbl tree upper lower bounds valuation  ice
mechanism proceeds rounds  illustrated figure   
ice proxied design bidder proxy facilitate valuation
refinement  round  bidder responds prices interacting proxy agent
order tighten bounds tbbl tree meet activity rules  exchange
chooses provisional valuation profile  denoted v    v            vn   figure  
valuation vi bidder picked fall within bidders current valuation bounds
 and tend towards lower valuation bound progress made towards determining
final trade   then  exchange computes provisional trade checks whether
conditions moving last and final round satisfied  approximate equilibrium
prices computed based valuation profile v trade new round
begins  last and final round  final payments trade computed terms
lower valuations  semantics lower bounds guarantee bidder
willing pay least amount  or receive payment amount  order
complete trade 
let v v denote lower upper valuation functions reported bidder
particular round ice  adopt wd v  denote wd problem valuation
profile v    v            vn    ice parameterized target approximation error        
requires total value optimal trade given current lower bound
valuation profile  i e   solves wd v   close total value efficient trade  
p
v  

vi  i  
p
eff    
    v   
v
 


    

however  true valuation v thus trade uncertain within ice thus
later introduce techniques estblish bound 
round  ice goes following steps 
   last and final round  implement trade solves wd v 
collect threshold payments defined valuations v  stop 
else 
  

fiice  iterative combinatorial exchange

   solve wd v  obtain   use valuation bounds prices determine lowerbound  eff   allocative efficiency eff     eff next
round designated last and final round 
   set         tending   eff tends    provisional valuation profile
v    v            vn    vi  i     v  i      v  i    expressed tbbl tree
value node ti vi      v          v    
   solve wd v   find provisional trade   determine threshold payments
provisional valuation profile  v  

   compute linear prices  rm
    approximate ce prices given valuations v
trade   breaking ties best approximate provisional threshold payments
finally minimize difference price items 

   report  i     bidder n   whether next round last andfinal 
transitioning next round  proxy agents responsible guiding bidders
make refinements lower  upper bound valuations order meet activity
rules ensure progress towards efficient trade across rounds  follows   a 
extend tbbl capture lower upper valuation bounds   b  describe two activity
rules   c  explain compute price feedback   d  provide main theoretical results 
developing theoretical experimental results ice assume straightforward
bidders  bidders refine upper lower bounds valuations keep true
valuation consistent bounds 
extending tbbl  first extend tbbl allow bidder report lower upper
bound  v     v     value node ti   turn induces valuation
functions v  ti     v  ti      using exact semantics       bounds
trade interpreted bounding payment bidder considers acceptable 
bidder commits complete trade payment less equal lowerbound refuse complete trade payment greater upper bound 
exact value  thus true willingness to pay  remains unknown except v      v   
nodes  say bid tree ti bidder well formed v    v   
nodes ti   case v  ti     v  ti     trades   refer
difference v    v    value uncertainty node   efficient trade
often determined partial information bidder valuations  consider
following simple variant example   
example   structure bidders trees figure   example  
nodes annotated bounds  let x        denote bidder  s true value buy
c        denote bidder  s true value sell c  three feasible trades
are      trade c      trade b c      trade  first trade already provably
efficient  fixing x y  minimal value     xy least     xy 
value second trade  moreover  worst case value                value
null trade 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

bidder  
bidder  



ic 
 
xor

buy c   
  
buy    
  

sell    
   

sell b

buy b   
  

sell c    
   

   
    

figure    two bidders  partial value information defined bid tree  one
already prove efficient trade bidder   sell buy c 
    activity rules
activity rules used guide preference elicitation process round ice 
without activity rule  rational bidder would likely wait last moment
revise valuation information  free riding price discovery enabled bids
participants  every bidder behave way exchange would reduce
sealed bid mechanism lose desirable properties   thus  activity rules critical
mitigating opportunities strategic behavior  
ice employs two activity rules  presenting activity rules  specify
explicit consequences failing meet activity rule  one simple possibility
default action automatically set upper valuation bound every node bid
tree maximum provisional price node  lower bound value
node  entirely analogous bidder ascending clock auction stops
bidding price  permitted bid higher price future rounds 
modified revealed preference activity rule  mrpar   first rule  mrpar 
based simple idea  require bidders refine valuation bounds round 
trade optimal  i e   maximizes surplus  bidder given
current prices possible valuations consistent bounds  mrpar loosely
based around revealed preference based activity rule  advocated clock proxy
auction one sided ca  ausubel et al         
let vi ti tbbl tree ti denote valuation vi consistent value bounds
tree  bounds tight everywhere  vi exactly valuation function
defined tree ti   simple variant  rpar   requires enough information
valuation bounds establish one trade weakly preferred trades
prices  i e 
 x    s t  vi  i   p  i   vi  i   p  i   

vi ti    x   

 rpar 

note bidder always meet rule defining exact valuation vi tight
value bounds every node bid tree  case  trade arg maxi  x     vi  i  
   problem evocatively described snake grass problem  see kwerels forward
milgroms book        
   conflict assumption straightforward bidding  design strategic
case despite assuming straightforward bidding provide tractable theoretical experimental
analysis  moreover  presence activity rules helps motivate straightforward bidding 
   provisional price node defined minimal total price across feasible trades
subtree rooted node satisfied 

  

fiice  iterative combinatorial exchange

p  i    satisfies rpar  say prices strict eq prices  v     when 
vi  i   p  i     vi  i   p  i   

 x       i    

    

every bidder n  
theorem   prices strict eq prices provisional valuation profile v trade
  every bidder retains vi bid tree meeting rpar  trade
efficient bidders straightforward 
proof  fix bidder i  let denote trade satisfies rpar  vi consistent
revised bid tree bidder i  have 
vi  i   p  i   vi  i   p  i   

 x    

    

moreover  must     vi  i   p  i     vi  i   p  i  
strictness prices  instantiating rpar trade  true valuations vi ti
 since bidders straightforward   have 
vi  i   p  i   vi  i   p  i   

 x    

    

prices p eq prices respect true valuations  efficiency claim
follows welfare theorem  theorem   

particular  provisional trade efficient given strict eq prices every bidder
meets rule without modifying bounds way  strict eq prices required
prevent problems involving ties 
buyer

seller

xor

buy   



  
buy b   
  

   
sell    
    

   
sell b    
    

figure    example illustrate failure simple rpar rule without strict eq
prices  true values shown bold efficient outcome
trade 
example   tbbl trees shown figure   trade occur truthful
valuation  which indicated bold value bounds   however  suppose    
provisional valuations efficient traded  prices          eq
 but strict eq  prices given v   buyer indifferent buying
buying b seller indifferent selling a  selling b  making sale 
buyer passes rpar without changing bounds bounds already establish
 weakly  prefers b  prefers trade  possible valuations 
similarly  seller passes rpar without changing bounds bounds establish
weakly prefers trade selling combination b given current
prices  thus  activity even though current provisional trade inefficient 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

order better handle sorts ties  slightly strengthen rpar modified
rpar  mrpar   requires exists  x   
 i     vi     
either  





 i     vi  

    

vi ti    x   
vi

ti  

    
    

 i     vi     vi  i   p  i    vi  i   p  i    denotes profit bidder
trade given vi prices        rpar additional requirements enforce
satisfying trade either strictly preferred   need show
strict preference prevents deadlock shown example    seller shown
weak preference trading selling a  mrpar  seller must
show strictly prefers   case reducing upper bounds
b  thus ensuring progress 
actual rule adopted ice  mrpar  parameterized accuracy parameter
   providing relaxation mrpar useful even exact
eq prices defined respect     v   round 
definition   given provisional trade   linear prices   accuracy parameter   
 mrpar requires every bidder refines value bounds tbbl tree ti
satisfies 
 i     vi    

vi ti  

    

or   x   
 i     vi     

vi ti    x   

    

 i     vi  

vi

    

   

ti

simple matter check  mrpar reduces mrpar      phrasing
description allow rule interpreted without relaxation 
 mrapr requires bidder must adjust valuation bounds establish
provisional trade  within   maximizing profit possible valuations      
trade satisfies rpar      strictly preferred  by least   provisional
trade       rpar  one show bidder always meet  mrpar  for
  defining exact valuation  
lemma   every bidder meets  mrpar without precluding vi updated bid
tree  prices  approximate eq prices respect provisional valuation profile
v trade   bidders straightforward  provisional trade
  min m  n    approximate efficient trade 
   let vi denote valuation   mrpar satisfied via      arg maxi  x     vi  i  
p     satisfy  mrpar  satisfies      construction  now  let denote trade









vi  i   p  i     vi  
  p  i       vi  i   p  i   vi  i   p  i     vi  i   p  i      
     

  

fiice  iterative combinatorial exchange

proof  fix bidder i   eq   i     vi    x     consider
     vi remains bid tree  must  i     vi  
 mrpar cannot satisfied via            therefore   mrpar satisfied every
bidder via      provisional trade satisfying trade  therefore prove
prices     approximate eq prices valuations  including true valuation
since bidders straightforward within bounds  efficiency trade
follows theorem   

turn provides simple proof efficiency ice approximate ce
prices exist upon termination  suppose ice defined terminate soon prices
 accurate v retained bid tree bidders meeting activity rule 
quiescence reached bidder refines bounds meeting rule 
variation  provisional trade trade finally implemented 
theorem   ice  mrpar   min m  n    efficient prices  accurate
respect  v     upon termination bidders straightforward 
proof  ice terminates either  a  prices  accurate v retained
bid tree bidders appeal directly lemma     b  bidder refines
bounds meeting  mrpar  case vi remains space valuations consistent
bid tree bidder 

following simple corollary  considers property ice
domain approximately accurate eq prices exist 
corollary   ice  mrpar   min m  n    efficient  accurate competitive
equilibrium prices exist valuations valuation domain bidders
straightforward 
specializing domains exact eq prices exist  e g   unit demand preferences
assignment model shapley shubik        see work bikhchandani
mamer        ice mrpar efficient straightforward bidders 
xor

buy   
  

buy b   
  

xor

buy    v
   x

 a  passes  mrpar

buy b    y
   w

 b  fails  mrpar

figure     mrpar provisional trade buy a       b        
example   illustrate  mrpar rule consider single bidder valuation tree
figure   a   suppose provisional trade allocates bidder  prices
     b          bidder satisfied  mrpar guaranteed
          payoff within possible          payoff b  consider
figure   b   relaxed upper bound buy b     bidder fails  mrpar
guaranteed     payoff within possible payoff b
          let  x  v   w  y  denote lower upper bounds  buy buy
b respectively  revised meeting rule  pass rule  bidder two choices 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

demonstrate best response  bidder need adjust x
make x       x    e g   values x            solve this 
figure   a   many possibilities 
demonstrate another trade  e g   buy b     better  
i e   w     v       w v      buy b weakly better null trade 
i e   w      instance  bidders true values va       vb     
x   v w   rule cannot satisfied first case  but 
buyer establish buy b best response  e g   setting v       w      
v       w      
remark  computation bidder feedback  definition mrpar naively
suggests checking compliance requires explicitly considering valuations vi ti
trades  x     fortunately  necessary  present appendix
method check mrpar given prices   provisional trade bid tree ti solving three
mips  moreover  explain solution mips provides nice feedback
bidders  ice automatically identify set nodes bidder needs increase
lower bound set nodes bidder needs decrease upper bound
meeting mrpar 
delta improvement activity rule  diar    mrpar  quite possible
ice get stuck  bidders satisfying activity rule without changing
bounds  prices less accurate  with respect     v     therefore 
need activity rule continue drive reduction value uncertainty  i e  
gap upper bound values lower bound values  even face inaccurate
prices  ideally way remains price directed sense using prices
determine trades  and turn nodes tbbl trees  bidder
focused on 
introduce purpose second  and novel  activity rule  diar   fills
role requiring bidders reveal information improve price accuracy and 
limit  full information nodes matter  defined way  diar rule
nicely complements  mrpar rule  establish efficiency
provisional trade directly via valuation bounds  see section     
actually need fully accurate prices order close exchange  thus  diar
rule imply bidders reveal full information  rather  presence diar
ensures good performance practice well good theoretical properties 
experiments enable diar rounds ice  fires parallel  mrpar 
practice  see progress refining valuation information occurs due
 mrpar  progress early rounds occurs due  mrpar  experimental
support provided section    
providing specifics diar  identify node ti bid tree
bidder interesting fixed instance  v  x     node satisfied
feasible trade  following simple lemma 
   variation way ice defined  diar could used rounds price error
provisional valuation trade greater error associated  mrpar 
 mrpar sufficient approximate efficiency prices accurate enough 

  

fiice  iterative combinatorial exchange

lemma   value uncertainty interesting nodes bid trees
biders  bidders straightforward  efficient 
proof  value uncertainty thus exact information value interesting
nodes implies difference value exactly known pairs feasible
trades uninteresting nodes  either node never satisfied trade
 and thus value matter  node satisfied every trade thus actual
value matter defining difference value pairs trades 
difference value pairs trades important determining efficient trade 

diar focuses bidder particular interesting nodes correspond trades
pricing error large  error could still reduced refining
valuation bounds node  given prices provisional trade   main focus
k
diar following upper bound   amount prices might misprice
trade ki  x    respect bidder true valuation 
k

  max
 vi  ki   p  ki    vi  i   p  i    

vi ti

    

call diar error trade ki   note depends current
prices well current bid tree provisional trade  true valuation
unknown center  diar error provides upper bound additional payoff
bidder could achieve trade ki trade   order trades   i    i         
 
 i maximal diar error      maxi  x     vi  i   p  i  
 vi  i   p  i     pricing error respect provisional trade provisional
valuation profile  error pricing algorithm designed minimize
round  error used theorem   reference  accurate prices 
thus  see maximal diar error bounds amount prices
 
approximate eq prices    bidders current prices
exact eq prices respect     v   
satisfy diar bidder must reduce diar error trade largest error
error reduced  some error may intrinsic given current prices
uncertainty bidders valuation   establish providing exact
value information throughout tree none diar error trades due
value uncertainty  figure   illustrates difference mrpar diar 
bidder satisfy mrpar making clear lower bound payoff
trade greater upper bound trades  still leave large uncertainty
value  diar requires bidder refine upper bound node
corresponds trade diar error  and thus potentially actual
approximation prices  large  rule illustrated figure   
diar parameterized    refer formal rule  diar 
definition   satisfy  diar given provisional trade prices   bidder must
modify valuation bounds to 
 a  reduce diar error trade  ji  x     least
k

 b  prove error cannot improved trades ki  x      k   j 
k

 c  establish cannot improved trade ki  x    
  

filubin  juda  cavallo  lahaie  shneidman   parkes

figure    stylized effect mrpar
diar bounds
trades

figure    trades bidder i  ordered
diar error reducing left
right  bidder must reduce 
least   diar error
trade greatest
error possible
prove  via valuation bounds 
impossible improve
trades larger error 

particular  even bidder case  c  above  still forced narrow
bounds progress made towards bounding efficiency  practice  define
parameter large start smaller later rounds 
xor

  
buy   
  

  
buy b   
  

xor

   
buy c    
  

  
buy   
  

 a  fails diar

  
buy b   
  

buy c

   
   
     

 b  passes diar

figure    respecting diar provisional trade buy a       b      c    
   
example   consider tree figure   a  provisional trade buy a  prices
               diar parameter      diar error trade  defined via
      listed decreasing order  are 
 

c                     
 

b                    
 

                   
 

                    
           worst case profit provisional trade  now  see
 
cannot made smaller lowering upper bound leaf buy c bound
  

fiice  iterative combinatorial exchange

already tight truthful value      instead bidder must demonstrate
decrease     impossible raising lower bound buy c       however
 
decreased      reducing upper bound buy b      giving
us tree figure   b  
lemma   ice incorporates diar  straightforward bidder must eventually reveal
complete value information interesting nodes bid tree   
proof  fix provisional trade consider trade   i  x         maximal
diar error  continue assume straightforward bidders  recall vi    denotes
bidders true value node tbbl tree  case analysis nodes ti   meeting
diar rule trade   requires 
 i  nodes  i     decrease upper bound vi     true value  reduce
error  increase lower bound vi    prove progress possible 
 ii  nodes    i   increase lower bound vi     true value  reduce
error  decrease upper bound vi    prove progress
possible 
 iii  nodes  i   change required 
 iv  nodes
   i   change required 
continue fix   consider impact diar  
rule met successive trades  moving  i  i onwards  eventually  value
bounds nodes
  least one feasible trade driven truth
 i   value bounds nodes least one feasible trade
driven truth  ii   noting null trade always feasible  bidder
ultimately reveal complete value information except nodes satisfied
feasible trade 

putting together following simple theorem  considers convergence property ice diar activity rule 
theorem   ice  diar rule terminate efficient trade
bidders straightforward   
proof  immediate lemma   lemma   

practice  use  mrpar diar role diar ensure convergence instances exist good  supporting eq prices  use
diar lead  case  full revelation bidder valuations
prove efficiency directly terms valuation bounds different trades  see section      
remark  computation bidder feedback  present appendix method
check  diar given prices   provisional trade   bidders bid tree past
round proposed new bid tree solving two mips  moreover  solution
mips provides nice feedback bidders  ice automatically identify trade 
turn corresponding nodes bid tree  bidder must provide
information 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

    generating linear prices
given provisional trade   provisional valuations v   given provisional payments determined  according payment rule  threshold 
adopted exchange   approximate clearing prices computed round according following rules 
i  accuracy  acc   first  compute prices minimize maximal error
best response constraints across bidders 
ii  fairness  fair   second  break ties prefer prices minimize maximal
deviation provisional payments across bidders 
iii  balance  bal   third  break ties prefer prices minimize maximal
difference price across items 
taken together  steps designed promote informativeness prices
driving progress across rounds  balance well motivated domains items
likely similar value dissimilar  preferring prices similar across items
rejecting extremal prices  note prices may ascend descend round
round general tend towards increasing accuracy  shall see
experimentally section   
buyer

seller



buy   



buy b   

sell    

sell b    

figure     simple example illustrate pricing  acc prices ab         
fair narrows     bal requires       b     
example   consider example figure    one buyer interested buying ab
one seller interested selling ab  buyers sellers values item
     respectively  efficient outcome given values trade complete 
acc requires     b     thus allows range prices  threshold payment
splits difference  buyer pays    seller fair adds constraint
  b       finally  bal requires   b     
three stages occur turn  interest space  present
basic formulation accuracy stage  define maximally accurate eq prices first
considering following lp 

s t 


acc
  min acc
 acc
x
x
j ij vi  i  
j ij   acc  
vi  i  
j

j

acc   
j   

j g
  

i   x   

    

fiice  iterative combinatorial exchange

prices minimize maximal loss payoff across bidders trade compared trade bidder would prefer given provisional valuation v   i e  
minimize maximal value  i     vi      arg maxi  x     vi  i   p  i    
prices solve lp refined lexicographically  fixing worst case pricing error  acc  working try additionally minimize next largest pricing
error on  given maximally accurate prices  triggers series lexicographical refinements best approximate payments  fair  without reducing pricing
accuracy  eventually series lexicographical refinements try maximally balance prices across distinct items  bal   addition improving quality
prices  process ensures uniqueness prices 
accuracy  fairness balance problems exponential number
constraints price accuracy constraints       which carried forward
subsequent stages  defined trades  x    bidders i 
therefore infeasible even write problems down  rather solve explicitly 
use constraint generation  e g  bertsimas   tsitsiklis        dynamically generate
sufficient subset constraints  constraint generation  cg  considers relaxed program
contains manageable subset constraints  solves optimality 
given solution relaxed program  subproblem used either prove
solution optimal full program  find violated constraint full problem
introduced  now strengthened  relaxed program resolved  case
subproblem variation winner determination ip section   
concisely formulated solved via branch and cut  
    establishing bounds efficiency
consider round ice  round starts announcement prices  denote
  provisional trade  round ends every bidder met
 mrpar  diar activity rules  question address is  established
efficiency trade defined lower bound valuations end round 
perhaps unsurprising mrpar sufficient provide efficiency claims
prices suitably accurate  interesting coupling mrpar
diar ensures ice converges provably efficient trade cases 
efficiency often established independently prices reasoning directly lower
upper valuation bounds  theoretical analysis convergence efficiency  assume
straightforward bidders  mean bidder always retains true valuation
within valuation bounds   all results could equivalently phrased terms efficiency
claims respect reported valuations  
closing round  ice makes determination whether move
last and final round  bidders notified occurs  last and final round
   pricing step computationally intensive steps ice therefore heavily optimized 
practice  found useful employ heuristics seed set constraints used cg 
developed algorithmic techniques speed search appropriate set constraints
context lexicographic refinement  provisional locking multiple lexicographic values
cg check  lazy constraint checks subset conditions cg routinely
checked  even though complete set eventually enforced  please see technical report www 
eecs harvard edu  blubin ice complete details pricing method 

  

filubin  juda  cavallo  lahaie  shneidman   parkes

provides final opportunity bidders update lower valuation bound information
 without exceeding upper bounds   exchange finally terminates efficient
trade payments determined respect lower valuation bounds 
lower bounds considered bep
ultimate bid submitted bidder
ice terminates  let arg maxf  x    v  i   denote trade optimal given
lower bound valuations  explained section    ice parameterized target
approximation error    providing lower bound relative efficiency
efficient trade true valuations  challenge obtain useful bounds
relative efficiency eff   trade   provide two methods  one price based
uses duality theory second directly reasons bounds bidder
valuations  consider turn 
price based proof efficiency  already seen section     bound
efficiency provisional trade sometimes established via prices  provides
simple method establish bound efficiency trade   fix    v
denoting provisional valuation profile start round t  corresponding
provisional trade  know
 a  bidders meet  mrpar leaving v within bounds 
 b  prices  approximate eq prices v  
 c  equal   i e   efficient trade given refined lower bound valuations 
trade
  min m  n    approximation
efficient trade theorem   
p
p
vi  i       min m  n    vi  i    then 
p
  min m  n   
  min m  n   
vi  i  
p
p
 

 



 

eff     p


maxf  x    v   
vi    
vi  i  

    

define price   conditioned  ac  met  bound available 
satisfy price small enough parameter  bound available
set price      
direct proof efficiency  provide complementary  direct  method
establish relative efficiency working refined valuation bounds
end round t  first  given bid tree ti   useful define perturbed valuation
respect trade   assigning following values node  

v      sat  i  
vi     
    
v      otherwise 
sat  i   node satisfied given tree ti lower bound valuations
v nodes  given trade   valuation function vi associated tbbl tree ti
defined minimize value nodes satisfied trade maximize value
nodes  concept  given valuation bounds  establish
following bound 




v  
v  
v   
v  
 
    

min
  min
 
eff    




v    v t  f  x    v    
f  x    v   
v  
  

fiice  iterative combinatorial exchange

figure     determining efficiency bound based lower upper valuations 

define direct   notation v    v            vn    trade maximizes
p
vi  i   across feasible trades  first inequality holds domain
minimization includes v trade     first equality holds
     worst case efficiency occurs value v selected minimize
value nodes     maximize value nodes     minimize value
shared nodes    whatever choice   valuation provided perturbed
valuation v  final equality  v     v   definition  optimal trade
maximizes value denominator  i e   trade   figure    schematically
illustrates various trades values used bound  particular provides
graphical intuition v   v   v    v     maxv  v     v    
v    v   
combining together  given methods establish lower bound eff  
max  price   direct   relative efficiency trade   ice defined move
last and final round either following hold 
 a  error bound eff
 b  trade even optimistic  i e   upper bound  valuations 
combining theorem    immediately get main result 
theorem   ice incorporates  mrpar  diar bidders
straightforward  exchange terminates trade within target approximation error       
use  diar sufficient establish result  however  use
prices mrpar drives elicitation practice  particularly fix
 mrpar tiny constant actual use  empirical support this  along
quality price based bound direct efficiency bounds  provided section   
parameter  diar  find simple rule 
  

  x x v    v   
 
 n
 ti  


    

ti

works well  tends towards zero value information revealed participants 
one last element design ice precise method provisional
valuation profile v   v       v constructed  important
  

filubin  juda  cavallo  lahaie  shneidman   parkes

used determine provisional trade price feedback  simple approach works
well define    max      eff    find lower bound     useful heuristic
early rounds eff likely small  making ice adopt provisional valuation
middle valuation bounds much known  effect push
towards   thus v towards v efficiency bound eff improves   

   illustrative examples
section illustrate behavior exchange two simple examples 
examples provided give qualitative feel behavior  construct examples
populate ice simple  automated bidding agents  agents use mipguided heuristics minimize amount information revealed course passing
activity rules  maintaining true value within lower  upper bounds
 i e   act straightforward way   reluctance reveal information models
basic tenet design  costly participants refine reveal
information values different trades  detailed explanation operation
bidding agents provided appendix 
section  presenting main experimental results  move
last and final round  rather  bidding agents programmed continue improve
bids past round efficiency already proved  and last and final
round would ordinarily declared   payments within desired accuracy
tolerance  avoid need program agents strategy bid
last and final round 
prices
   

   

 


b
efficient allocation

   
 
 
   

   

pessimistic
alpha
optimistic

 

price

average allocation value

allocation value
 

 
   

   

 
 
   
provable
efficiency

   
 
 

   

   
   
  complete

provable
efficiency

 
   

   
 

 

 a  allocative value

   

   
   
  complete

   

 

 b  prices

figure     agenta      agentb  b     agentab  b     
    domains  may important require payments  rather efficiency
trade   accurate enough moving last and final round  bound payments
computed analogous way efficiency  whether required practice likely
domain specific depend  instance  whether payments tend accurate anyway
time trade approximately accurate  impact strategic behavior 

  

fiice  iterative combinatorial exchange

example   consider market no reserve seller two items b  three
buyers  agenta demands value     agentb demands b value    
agentab demands b value      figure    a  shows quickly
exchange discovers correct trade  price       accurate
situation  see prices figure    b  quickly meet condition 
fairness drives prices towards     eventual threshold payments
agenta agentb  balance ensures prices remain two items 

prices

allocation value

  

   

  

   
   

  

pessimistic
alpha
optimistic

   

price

average allocation value

   


b
efficient allocation

  

   

 
   
 
 

provable
efficiency

provable
efficiency
   

   
   
  complete

   

 
 

 

 a  allocative value

   

   
   
  complete

   

 

 b  prices

figure     seller       swapper  swap b     buyer b   
example   consider example seller offering reserve      swapper
willing pay    swap b a  buyer willing pay    b 
complex example  takes   rounds  illustrated figure    a   trade
found pessimistic trade  revelation drives progress towards completed trade 
see figure    b   reflected falling prices goods  thus
see price feedback providing accurate information participants 
price eventually becomes low enough buying bidders actually want trade
occur exchanges provisional trade switches  worth
noting greater valuations seller swapper place good result net
higher price good b 

   experimental analysis
section report results set experiments designed provide
proof of concept ice  results illustrate scalability ice realistic problem
sizes provide evidence effectiveness elicitation process techniques
bound efficiency provisional trade 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

implementation  first  brief aside experimental implementation  ice approximately        lines extremely tight java code  broken functional packages
described table      prototype modular researchers may easily replace
components experimentation    ices complexity  essential
code constructed rigid hierarchy avoids obscuring high level logic behind
details generating  running integrating results mips  end 
system written series progressively abstractmini languages
defines clean  understandable api next higher level logic  hierarchy provides
way hide extremely delicate steps needed handle numerical issues come
trying repeatedly solve coupled optimization problems  constraints
one problem may defined terms slightly inaccurate results earlier problem 
constraints presented paper must carefully relaxed monitored
order handle numerical precision issues  bottom hierarchy
mip specification fed generalized back end optimization solver interface    we
currently support cplex lgpl licensed lpsolve   handles machine loadbalancing parallel mip lp solving  concurrent solving capability essential 
need handle tens thousands comparatively simple mips lps 
component
agent
model
bidding language
exchange driver   communication
activity closing rule engines
wd engine
pricing engine
mip builders
framework   instrumentation
jopt
instance generator

purpose
strategic behavior information revelation decisions
xml support load goods true valuations
implements tbbl
controls exchange  coordinates agent behavior
mrpar  diar closing rules
logic wd
logic three pricing stages
translates engines optimization apis
wire components together   gather data
optimization api wrapping cplex
random problem generator

lines
    
    
    
    
    
   
    
    
    
    
   

table    exchange components code breakdown

experimental set up  experiments   parameter mrpar set near
zero mrpar diar activity rule fire every round  rule used
define  parameter diar exactly described section      adopt
straightforward bidding agents employed section    see appendix
details   simulation  adopt threshold payment rule terminate ice
per agent error payment relative correct payment within    average
per agent value efficient trade  typical instances  incurs additional  
rounds beyond would required last and final round  timing
wall clock time  separately count large number parallel threads
execution system  experiments run dual processor dual core pentium
    code size measured physical source line code  sloc  
    please contact authors access source code 
    http   www eecs harvard edu econcs jopt

  

fiice  iterative combinatorial exchange

iv    ghz  gb memory cplex       results averaged    trials 
problem instances available http   www eecs harvard edu  blubin ice 
instance generator begins generating set g good types  next  j g
creates   copies good type  forming total potential supply market s g 
goods  exactly many units supply depends precise structure bid trees  
unit assigned one bidders uniformly random  generator creates
bid tree ti bidder recursively growing it  starting root adopting
two phases  tree depthlow  node receives number children drawn
uniform outdegreelow outdegreehigh  a percentage designated
leaves   resulting exponential growth number nodes phase 
width depth refer number nodes depth  point 
carefully control expected number children node order make
expected width conform triangle distribution depth depthlow depthmid
depthhigh  linearly increase expected width depth depthlow
depthmid fixed multiple    width depthlow  linearly decrease
expected width back zero depthhigh    provides complex deep trees without
inherently introducing exponential number nodes 
internal node must assigned parameters interval choose operator 
typically choose high triangle distribution   number children
x low triangle distribution   y  bias towards introduction
ic operators permit wide choice number children  internal node
assigned bonus drawn according uniform distribution  leaf node assigned
buy node probability         specific good type node
chosen among good types sale market  node assigned
quantity drawing low triangle distribution   total number
existence    unit value node drawn specific buy distribution 
typically uniform  multiplied quantity assigned nodes bonus 
leaf nodes assigned sell nodes goods bonuses determined similarly 
time goods selected among previously assigned bidder   
    experimental results  scalability
first set results present focuses computational properties ice 
figure    shows runtime performance system increase number
bidders holding parameters constant  example      goods    types
traded bidders average     node trees  graph shows total
wall clock time parts system  see super linear growth solve time
    note setting depthlow  depthmid  depthhigh one still grow full tree given depth
eliminating phase   
    total number goods given type existence may actually available purchase
price given structure seller trees  thus bias towards small quantities buy nodes large
quantities sell nodes produces interesting problem instances 
    experiments  vary    g                 n         outdegreelow   
  outdegreehigh      depthlow      depthmid      depthhigh    set balanced buy
probability        set width multiplier second phase      examples 
buy node bonuses drawn uniformly            sell nodes bonuses drawn uniformly
          internal nodes bonuses uniformly          

  

filubin  juda  cavallo  lahaie  shneidman   parkes

 

  

    

good scalability  mean    runs 

agent scalability  mean    runs 

concurrent cpu time  s 

concurrent cpu time  s 

    

    

    

    

 

  

   

 

 
 

 

  

  

  

    
  

  

 

 

  

  

agents

 

  

good types

figure     effect number bidders
run time ice

figure     effect number good
types run time ice

number bidders  constants growth markets large
numbers bidders efficiently solved  solving    bidders around    minutes  
error bars plots standard error statistic 
figure    see effect varying number types goods  retaining
  units good supply  computation time  example adopt
   bidders  tree generation parameters  likely explanation eventual
concavity run time performance suggested decrease average  item 
price upon termination ice number types goods increased  see figure     
average price provides good proxy competitiveness market  adding
   
mean linear price  mean    runs 

mean linear price

   

  

  

  

  

   
  

 

 

  

  

 

  

goods

figure     effect number goods average item price upon termination
ice 
  

fiice  iterative combinatorial exchange

 

 

  

  

 

 

  
concurrent cpu time  s 

concurrent cpu time  s 

  

 

  

 

  

 

  

 

  

node degree scalability  mean    runs 
 

    
  

power law fit
 

       x

tree depth scalability  mean    runs 

    
 

 

  
  
number nodes tree

    
  

 

  

figure     effect bid tree size runtime ice  varying nodeout degree 

power law fit
 

       x
 

  
  
number nodes tree

    
 

  

figure     effect bid tree size runtime ice  varying tree
depth 

goods problem initially make winner determination problem difficult 
large over supply  point outcome easier determine 
figures       illustrate change run time size bid trees 
use first phase tree generator avoid confounding effects size
structural complexity  experiments      goods    types traded   
bidders  figure    vary number children given node figure   
vary depth tree  increasing branching factor and or tree depth results
exponential growth tree size  necessarily corresponds exponential growth
runtime  however  account instead plotting number nodes
trees  see graphs indicate near polynomial increase runtime
tree size  fit polynomial function data form   axb   indicating
growth approximately degree     range tree sizes considered
experiments 
    empirical results  economic properties
second set results present focus economic properties ice 
efficiency trade across rounds  effectiveness preference elicitation  accuracy
stability prices  set experiments average    problem instances 
  bidders  potential supply     goods    types  bid trees
average     nodes 
figure    plots true efficiency trades computed pessimistic  lower bounds
v   provisional   valuation v   optimistic  upper bounds v  valuations across rounds 
graph follow  x axis indicates number rounds completed
percentage total number rounds termination enables results
aggregated across multiple instances  different number total
  

filubin  juda  cavallo  lahaie  shneidman   parkes

   

     

  

    

  

    

  
mean
provable    
efficiency
se

  
  
  

    
    
    
mean
provable    
efficiency
se

    
    

pessimistic
alpha
optimistic

  
  
 

mrpar
diar

    

mean slack revealed

  efficient

  

   

   
   
  complete

   

    
 
 

 

figure     efficiency optimistic  provisional  pessimistic trades
across rounds 

   

   
   
  complete

   

 

figure     average reduction value uncertainty due rule 

rounds    vertical  dashed  line indicates average percentage complete
trade provably     efficient  exchange remains open past point payments
converge  and simulate outcome last and final round continuing
progress straightforward bidding agents   two lines either side represent
one standard error statistic 
figure     see exchange quickly converges highly efficient trades  taking
average     rounds achieve efficiency  general  optimistic trade  i e   computed
upper bounds v  higher  true  efficiency pessimistic one  i e   computed
lower bounds v   efficiency provisional trade typically better
both  justifies design decision adopt provisional valuations provisional
trade driving exchange dynamics  suggests exchanges traditional
paradigm improving bids  i e   increasing lower bound claims valuations  would allow
little useful feedback early rounds  efficiency pessimistic tradeall would
available without information upper bounds bidder valuationsis initially
poor 
figure    shows average amount revelation caused mrpar diar
round ice  revelation measured terms absolute tightening upper
lower bounds  summed across bid trees  mrpar activity rule main driving
force behind revelation information vast majority revelation  in absolute
terms  occurs within first     rounds  diar plays role making progress towards
identifying efficient trade mrpar substantially reduced value
uncertainty despite firing every round  one think mrpar rockets
main engine  diar thruster mid course correction  ice determines efficient
    data point represents average across    instances  determined averaging
underlying points neighborhood  error bars indicate standard error  se  mean  thus 
figures essentially histogram rendered line graph 

  

fiice  iterative combinatorial exchange

  

  
price volatility  mean    runs 

  regret price  mean    runs 

  

  regret price

  difference final price

  
  
  
  
  

mean
provable    
efficiency
se

  

  

  

mean
provable    
efficiency
se

  

 

  
 
 

   

   
   
  complete

   

 
 

 

figure     price trajectory  closeness
prices round final
prices

   

   
   
  complete

   

 

figure     regret best response bidders due price inaccuracy relative final prices 

trade average node tbbl tree still retains gap upper lower
bounds value node equal around     maximum  true  value node
could contribute bidders value  roughly maximum marginal value contributed
node feasible trades  see ice successful directing preference elicitation
information relevant determining efficient trade 
provide two different views effectiveness prices  figure    shows
mean percentage absolute difference prices computed round
prices computed final round  prices quickly converge  experiments
driven exchange beyond efficient solution order converge threshold
payments  see price information already available point
efficiency  figure    provides information quality price feedback  plot
regret  averaged across bidders runs  best response trade determined
intermediate prices comparison best response final prices  regret
defined terms lost payoff final prices  define regret bidder
best response   arg maxi  x     vi  i   p  i     prices   given final prices
  as 


  p    
v
 


     
regreti  i        
    
max vi  i   p  i  
 x   

payoff trade   evaluated prices   approaches bestresponse trade prices   regreti  i     approaches     figure    plots average
regret across bidders function number rounds completed ice  regret
low        averaged across rounds efficient trade determined
     averaged across rounds  regret falls across rounds shows prices
become informative rounds proceed 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

   
  
  

  efficient

  
  
  
  
  
  
  
 
 

closing rule prediction
truth
   

   
   
  complete

   

 

figure     comparison actual efficiency pessimistic trade direct
bound 
finally  present experimental results relate two methods ice employs
bound final efficiency pessimistic trade  total pricing error across
bidders round determined within pricing terms     v    normalized
total true value efficient trade  already small  at       initial rounds
falls around    final rounds ice  suggests price based bound
quite informative  although note defined terms error given     v  
immediately map price based accuracy claim true valuations
current trade defined lower bound valuations  figure    compares actual efficiency
pessimistic trade round estimated direct bound efficiency
available exchange  confirms direct bound reasonably tight 
effective bounding true efficiency regardless accuracy prices 

   conclusions
work designed implemented scalable highly expressive iterative combinatorial exchange  design includes many interesting features  including  new treebased language combinatorial exchange environments  new method construct approximate linear prices expressive languages  proxied architecture optimistic
pessimistic valuations coupled price based activity rules drive preference elicitation  direct method estimate final efficiency trade terms valuation
bounds  adopting proxy agents receive direct  expressive claims upper
lower valuations bounds able form claims efficiency despite using
linear prices  bounds allow good progress early rounds  even
efficient trade lower bound  pessimistic  values  experimental results
automated  simple bidding agents indicate good behavior terms scalability
economic properties 
  

fiice  iterative combinatorial exchange

many intriguing opportunities future work  especially interesting
instantiate special cases ice design domains exist strategyproof 
static  two sided  combinatorial market designs  would bring straightforward bidding
strategies ex post nash equilibrium  example  possible integrate
methods trade reduction  mcafee        generalizations  babaioff   walsh 
      chu   shen        domains restricted expressiveness  consider
ice combinatorial auction rather exchange  direct appeal vcg payments would provide incentive compatibility  two major directions future work
to   a  modify design allow bidders refine structure  valuation
bounds tbbl tree  across rounds   b  extend ice work dynamic environment changing bidder population  instance maintaining linear price feedback
periodically clearing  recent progress on line mechanism design includes truthful 
dynamic double auctions simple expressiveness  blum  sandholm    zinkevich 
      bredin  parkes    duong         extend kind expressiveness
price sophistication present ice  see work parkes        recent survey 
lastly  incentive properties ice much dependent payment rule used
argues analysis threshold rule alternatives 

acknowledgments
work supported part nsf grant iis          earlier version paper
appeared proc   th acm conference electronic commerce        tbbl language described workshop paper  cavallo et al          primary authors
paper benjamin lubin  adam juda david parkes  thanks anonymous
reviewers associate editor jair extremely helpful comments  nick elprin  loizos
michael hassan sultan contributed earlier versions work  thanks
students al roths class  econ       participated trial system
cynthia barnhart airline domain expertise  would thank evan kwerel
george donohue early motivation encouragement  computation
used preparation manuscript performed crimson grid harvard school engineering applied sciences  finally  papers genesis cs
   r topics interface computer science economics taught harvard
spring       thanks students many early  innovative ideas 

appendix a  computation mrpar
section show mrpar computed solving sequence   mips 
begin considering special case      general case follows almost immediately 
define candidate passing trade  l
  as 
l
arg

max v  i   p  i  

 x   

breaking ties
 i  maximize v  i   v  i  
 ii  favor
  

    

filubin  juda  cavallo  lahaie  shneidman   parkes

computed solving one mip maximize v  i   p  i    followed
second mip objective incorporated constraint v  i   v  i  
becomes objective  given perturbed valuation vi   defined respect trade l
 as
section     define witness trade  u
 
as 

u
arg

max vi  i   p  i   

    

 x   

found solving third mip  given prices   provisional trade
bid tree ti   computational mrpar rule  c mrpar  case    
defined as 
l
u
u
    v  l
  p  i   vi  i   p  i    and

l
l


    l
    v  i   p  i     vi  i   p  i  

establish c mrpar equivalent mrpar  defined          
lemma   given trades   prices   tree ti    i     vi      vi ti
v  i   p  i   vi  i   p  i    vi defined respect trade  
proof  direction    immediate since vi ti   consider direction    suppose 


contradiction  v  i   p  i   vi  i  
pp  i   exists vi ti






vi  i   p  i     vi  i   p  i    subtract  vi    v     sides 

indicates node satisfied trade   get
x
x
x
x
v    p  i    
vi     
vi   
vi     
x



x



vi   



v     

 i

x

vi     

 i

x







 i

x

v  i   p  i    

x

v    p  i    

v     

 i

vi  i  

p



x

v    p  i  

    








vi     

x

v    p  i       



 i   

    

contradiction 



lemma   given trade   prices   tree ti  i     vi      vi ti  
u
 x     v  i   p  i   vi  u
  p  i    vi defined respect
u
trade witness trade 
 
proof  direction    immediate since vi ti u
 x    consider direction

u
   suppose  contradiction  v  i   p  i   vi  i   p  u
  exists

 




 x   vi ti  i     vi        lemma    means
v  i   p  i     vi  i   p  i    but  contradiction
u
v  i   p  i   vi  u
  p  i  

 

max

 

 x  

vi  i  

p

    


 i  



vi  i  

p



 i  

    


  

fiice  iterative combinatorial exchange

theorem   c mrpar equivalent  mrpar     
proof  comparing           c mrpar  given lemmas     
left show sufficient check l
  candidate pass mrpar 
is  need show  x    satisfies mrpar l
satisfies
mrpar  argue follows 
   trade must solve maxi  x     v  i   p  i     otherwise 
v  i   p  i     v  i   p  i    contradiction      
   trade must break ties favor maximizing v  i   v  i    otherwise 
profit v   v  i   v  i     v  i   v  i   
implies v  i   v  i     v  i   v  i     i     v      i     v    but  since
profit v  i     v        i     v       
contradiction      
   proceed case analysis  either     case done
explicitly selected candidate passing trade l
  case  let
l
denote

feasible
solutions

    

consider

difficult
case  l

      
l

argue satisfies mrpar  trade l
 
     mrpar   i     vi      vi ti   particular 
vi  i  p  i   vi  i  p  i    vi defined respect   equivalently 
v  i   p  i   vi  i   p  i   

    

v  i   p  i     v  i   p  i   

    

hand 


since l
  taking      together       must satisfies
uncertain value nodes ti satisfied   moreover  since v  i  
v  i     v  i   v  i    trades must satisfy exactly uncertain value
nodes  finally       profit fixed value nodes ti must
trades  conclude profit vi ti
current prices mrpar satisfied either trade 


understand importance tie breaking rule  i  selecting candidate
passing trade  l
  c mrpar  consider following example mrpar     
example    bidder xor  a   b  value   leaf  a value range
       leaf  b  suppose prices currently   b    b 
mrpar rule satisfied market knows however remaining value
uncertainty  b resolved bidder always  weakly  prefer  b  a  b
  notice  a  b pessimistic utility   b satisfy
mrpar   b maximal value uncertainty  therefore selected  a
c mrpar 
  

filubin  juda  cavallo  lahaie  shneidman   parkes

understand importance selecting  evaluating  u
respect vi rather
v   consider following example  again       illustrates role shared
uncertainty tree  occurs multiple trades share node uncertain
value value  although uncertain  resolved way trades 
example    bidder xor  a   b  value bounds         root node
value   leaf  a  suppose prices currently   b    b 
mrpar rule satisfied bidder strictly prefers  a  b  whichever way
uncertain value root node ultimately resolved  c mrpar selects l
buy
 l                  valuation v   witness trade buy b
 

p
a  payoff v  l



would selected payoff          seem violate mrpar  but  whichever
way uncertain value root resolved affect  a  b way 
addressed setting vi      v        root node  value adopted
determining payoff l
  evaluated vi   witness buy    
c mrpar trivially satisfied     satisfied since             
 mrpar      adopt slight variation   c mrpar procedure
defined as 
    check  i     vi   vi ti    x    directly  application
lemma   valuation vi defined respect trade   test
u
v  i   p  i   vi  u
  p  i  

    

    satisfied fall back c mrpar verify           

candidate passing trade l
modified      drop tie breaking favor
l

l
second step c mrpar modified require v  i   p  i     vi  i  
p  i       vi defined respect l
 
argument adopted proof theorem   remains valid establishing

sufficient consider l
  defined  c mrpar  case pass
activity rule 

appendix b  computation diar
 diar rule verified solving two mips  first optimization problem
identifies trade maximal diar error current bounds refinement
improved error least  
pi  

max  vi   i   p  i    v  i  i   p  i    

 x   

    

s t   vi   i   p  i    v  i  i   p  i    
  c  

max

 x   

 vi   i   p  i    v  i  i   p  i    

    

vi   i  

    



p  i  

s t  vi   i   v  i  i   vi   i     v  i  i    
  

    

fiice  iterative combinatorial exchange

vi  vi  defined respect   v   v   represent valuations defined
bidders refinement respectively  c   v  i  i   p  i    note
problem could infeasible  case define pi     
second optimization identifies trade maximal diar error v   still
allows possibility valuation bounds provide error reduction v    
 

max  vi   i   p  i    v  i  i   p  i    

 x   

    

s t   vi   i   p  i    v  i  i   p  i    
 v  i  i   p  i    vi   i   p  i    
  c  

max vi   i   p  i  

 x   

s t  vi   i   v  i  i   v  i  i     vi   i    

    
    
    

vi defined respect   vi similarly defined respect  
second term      recognizes remains possible decrease value
new lower bound v  i  i    increasing value new upper bound v  i  i  
except nodes shared   giving vi   i    see      equivalent
to 
x
x
 v  i    v  i      
 v  i    v  i      
 



 i

calculates amount refinement still possible service reducing
diar error  note problem could infeasible  case define     
ultimately compare two solutions  bidder passes diar pi  

appendix c  automated bidding agents bidder feedback
bidding agents used simulation experiments designed minimize
amount information revealed order pass activity rules remaining
straightforward true valuation consistent lower upper valuations 
summarizing behavior bidding agents  three things explain   a 
method adopt place last and final round   b  feedback provided
ice bidders meeting mrpar diar   c  logic followed
bidding agents  rather define method bidding agents adjust bounds
last and final round  keep ice open simulation past point would
ordinarily go last and final  past point  bidding agents continue refine
bounds ice terminates payments within desired accuracy 
bidding agent phase reduces uncertainty multiplicative factor
nodes active current provisional trade provisional trades
economies bidder removed  adopted simulation purposes only 
bidding agents operate loop  heuristically modifying valuation bounds
trying meet mrpar diar querying proxy advice  proxy provides
guidance help bidding agent refine valuation meet activity
rule  mrpar diar  optimization problems solved checking
whether bidder satisfied activity rule provide information guide
  

filubin  juda  cavallo  lahaie  shneidman   parkes

u
bidder  first consider mrpar recall l
candidate passing trade
witness trade  following lemma easy  stated without proof 

lemma   mrpar satisfied current valuation bounds  bidder must
u
increase lower bound least one node  l
     decrease upper bound
u
l
least one node  i      order meet activity rule 
simple bidder makes changes subset nodes  bidder
inquire passed activity rule  proxy respond yes
revise set nodes bidding agent refine valuation bounds 
similar functionality provided diar  time trade solves second mip
 with diar error   provided feedback  together information much
bidder must either reduce error  constrain possibilities
trade  satisfy diar  bidding agent determine information nodes
must modify  much total  free decide much modify
node satisfy rule  key agent design following lemma 
lemma   trade straightforward bidder passes mrpar  for      must
trade weakly preferred bidder trades true valuation 
proof  contradiction  suppose true valuation vi ti trade meets mrpar
weakly preferred trade true valuation prices   then  exists
trade  x     i     vi        but  contradiction mrpar
since  i     vi     vi ti  x     including vi   vi    
use observation define procedure updatemrpar bidder
intelligently refine valuation bounds meet mrpar  let trade
hope pass mrpar  define ui  i       vi  i   p  i    ui  i       v  i  
p  i    ui  i       vi  i   p  i    vi defined respect candidate passing
trade   high level approach follows 
function updatemrpar
arg maxi  x    ui  i    
ui  i        
reduce slack ui  i    
end
u
arg maxi  x    ui  i    
ui  i       ui  u
   
u
heuristically reduce upper bounds u
  ui  i     ui  i    
remaining slack heuristically reduce lower bounds   u

u
arg maxi  x    ui  i    
end
  
ui  i     ui  i    
heuristically reduce upper bounds   ui  i     ui  i    
remaining slack heuristically reduce lower bounds  
  

fiice  iterative combinatorial exchange

end
end
return
end function
bidding agent makes use couple optimization modalities exposed
proxy bidder  procedure first chooses preferred trade truth
trade pass mrpar   bidding agent requests proxy finds
trade solving mip  trade negative profit  bidding agent attempts
demonstrate positive profit trade  next  bidding agent enters loop  wherein
repeatedly requests proxy run mip calculates witness trade u
respect
  long witness profit preferred
trade  bidding agent adjust bounds reverse mis ordering  lastly 
bidding agent must pass mrpar  merely rpar  bidding agent attempts
show strict preference identical 
meeting diar  bidding agent responds f     parameter
provided proxy follows  let f trade chosen maximization
calculates f   high level approach follows 
function updatediar
proxy says still passed diar
f modified reduce diar error last round
heuristically reduce upper bound slack f  
heuristically reduce lower bound slack   f
else
heuristically reduce upper bound slack   f
heuristically reduce lower bound slack f  
end
end
end function
bidding agent attempts make current failing trade pass diar possible
reducing error respect trade  otherwise  reduces bounds prove
diar could made pass trade loops next trade 

references
ausubel  l   cramton  p     milgrom  p          clock proxy auction  practical
combinatorial auction design  cramton et al   cramton et al          chap    
ausubel  l  m     milgrom  p          ascending auctions package bidding  frontiers
theoretical economics         
babaioff  m     walsh  w  e          incentive compatible  budget balanced  yet highly
efficient auctions supply chain formation  decision support systems             
ball  m   donohue  g     hoffman  k          auctions safe  efficient  equitable
allocation airspace system resources  cramton et al   cramton et al         
  

filubin  juda  cavallo  lahaie  shneidman   parkes

chap     
ball  m  o   ausubel  l  m   berardino  f   cramton  p   donohue  g   hansen  m    
hoffman  k          market based alternatives managing congestion new yorks
laguardia airport  proceedings airneth annual conference 
bererton  c   gordon  g     thrun  s          auction mechanism design multi robot
coordination  proc    th annual conf  neural information processing systems
 nips    
bertsimas  d     tsitsiklis  j          introduction linear optimization  athena scientific 
bikhchandani  s     mamer  j  w          competitive equilibrium exchange economy
indivisibilities  journal economic theory             
bikhchandani  s     ostroy  j  m          package assignment model  journal
economic theory                  
blum  a   sandholm  t     zinkevich  m          online algorithms market clearing 
journal acm             
boutilier  c          solving concisely expressed combinatorial auction problems 
proceedings   th national conference artificial intelligence  pp         
boutilier  c     hoos  h          bidding languages combinatorial auctions  proc 
  th international joint conference artificial intelligence  pp           
bredin  j   parkes  d  c     duong  q          chain  dynamic double auction framework
matching patient agents  journal artificial intelligence research             
cavallo  r   parkes  d  c   juda  a  i   kirsch  a   kulesza  a   lahaie  s   lubin  b  
michael  l     shneidman  j          tbbl  tree based bidding language
iterative combinatorial exchanges  multidisciplinary workshop advances
preference handling  ijcai  
chu  l  y     shen  z  m          truthful double auction mechanisms e marketplace 
operations research  appear 
compte  o     jehiel  p          auctions information acquisition  sealed bid dynamic formats   rand journal economics                 
conen  w     sandholm  t          preference elicitation combinatorial auctions  
wellman    shoham  wellman   shoham         pp         
cramton  p          electricity market design  good  bad  ugly 
proceedings hawaii international conference system sciences 
cramton  p          simultaneous ascending auctions  cramton et al   cramton et al  
       chap    
cramton  p   kwerel  e     williams  j          efficient relocation spectrum incumbents 
journal law economics             
cramton  p   shoham  y     steinberg  r   eds            combinatorial auctions  mit
press 
  

fiice  iterative combinatorial exchange

day  r     raghavan  s          fair payments efficient allocations public sector
combinatorial auctions  management science               
de vries  s   schummer  j     vohra  r  v          ascending vickrey auctions
heterogeneous objects  journal economic theory             
de vries  s     vohra  r  v          combinatorial auctions  survey  informs journal
computing                 
dias  m   zlot  r   kalra  n     stentz  a          market based multirobot coordination 
survey analysis  proceedings ieee               
dunford  m   hoffman  k   menon  d   sultana  r     wilson  t          testing linear
pricing algorithms use ascending combinatorial auctions  tech  rep   seor 
george mason university  submitted informs j computing 
fu  y   chase  j   chun  b   schwab  s     vahdat  a          sharp  architecture
secure resource peering  proceedings   th acm symposium operating
systems principles  pp          acm press 
gerkey  b  p     mataric  m  j          sold   auction methods multi robot coordination 
ieee transactions robotics automation  special issue multi robot systems 
           
hudson  b     sandholm  t          effectiveness query types policies preference
elicitation combinatorial auctions  proc   rd int  joint  conf  autonomous
agents multi agent systems  pp         
kelso  a  s     crawford  v  p          job matching  coalition formation  gross
substitutes  econometrica               
krishna  v          auction theory  academic press 
kwasnica  a  m   ledyard  j  o   porter  d     demartini  c          new improved
design multi object iterative auctions  management science             
kwerel  e     williams  j          proposal rapid transition market allocation
spectrum  tech  rep   fcc office plans policy 
lahaie  s   constantin  f     parkes  d  c          power demand queries
combinatorial auctions  learning atomic languages handling incentives  proc 
  th int  joint conf  artificial intell   ijcai    
lahaie  s     parkes  d  c          applying learning algorithms preference elicitation 
proc   th acm conf  electronic commerce  ec      pp         
mcafee  r  p          dominant strategy double auction  j  economic theory     
       
milgrom  p          putting auction theory work  cambridge university press 
milgrom  p          package auctions package exchanges       fisher schultz lecture  
econometrica             
mishra  d     parkes  d  c          ascending price vickrey auctions general valuations 
journal economic theory              
  

filubin  juda  cavallo  lahaie  shneidman   parkes

myerson  r  b     satterthwaite  m  a          efficient mechanisms bilateral trading 
journal economic theory             
nemhauser  g     wolsey  l          integer combinatorial optimization  wileyinterscience 
nisan  n          bidding languages combinatorial auctions  cramton et al   cramton
et al          chap    
nisan  n   roughgarden  t   tardos  e     vazirani  v   eds            algorithmic game
theory  cambridge university press 
oneill  r  p   sotkiewicz  p  m   hobbs  b  f   rothkopf  m  h     stewart  jr   w  r 
        efficient market clearing prices markets nonconvexities  european
journal operations research              
parkes  d  c          on line mechanisms  nisan et al   nisan  roughgarden  tardos 
  vazirani         chap      appear 
parkes  d  c   kalagnanam  j  r     eso  m          achieving budget balance
vickrey based payment schemes exchanges  proc   th international joint conference artificial intelligence  pp           
parkes  d  c     ungar  l  h       a   iterative combinatorial auctions  theory practice  proc    th national conference artificial intelligence  aaai      pp 
     
parkes  d  c     ungar  l  h       b   preventing strategic manipulation iterative
auctions  proxy agents price adjustment  proc    th national conference
artificial intelligence  aaai      pp       
rassenti  s  j   smith  v  l     bulfin  r  l          combinatorial mechanism airport
time slot allocation  bell journal economics             
rothkopf  m  h   pekec  a     harstad  r  m          computationally manageable combinatorial auctions  management science                   
saatcioglu  k   stallaert  j     whinston  a  b          design financial portal  communications acm           
sandholm  t          optimal winner determination algorithms  cramton et al   cramton et al          chap     
sandholm  t          expressive commerce application sourcing 
conducted     billion generalized combinatorial auctions  ai magazine         
   
sandholm  t     boutilier  c          preference elicitation combinatorial auctions 
cramton et al   cramton et al          chap     
shapley  l  s     shubik  m          assignment game i  core  int  jounral
game theory            
smith  t   sandholm  t     simmons  r          constructing clearing combinatorial
exchanges using preference elicitation  aaai    workshop preferences ai
cp  symbolic approaches 
  

fiice  iterative combinatorial exchange

vossen  t  w  m     ball  m  o          slot trading opportunities collaborative ground
delay programs  transportation science           
wellman  m  p     shoham  y   eds            proc   rd acm conf  electronic commerce  ec      new york  ny  acm 
wurman  p  r     wellman  m  p          akba  progressive  anonymous price combinatorial auction  proc   nd acm conf  electronic commerce  ec      pp 
     

  


