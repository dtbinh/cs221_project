journal of artificial intelligence research                 

submitted       published     

planning for contingencies  a decision based approach
louise pryor

louisep aisb ed ac uk

gregg collins

collins ils nwu edu

department of artificial intelligence  university of edinburgh
   south bridge
edinburgh eh   hn  scotland
the institute for the learning sciences  northwestern university
     maple avenue
evanston  il        usa

abstract

a fundamental assumption made by classical ai planners is that there is no uncertainty
in the world  the planner has full knowledge of the conditions under which the plan will
be executed and the outcome of every action is fully predictable  these planners cannot
therefore construct contingency plans  i e   plans in which different actions are performed in
different circumstances  in this paper we discuss some issues that arise in the representation
and construction of contingency plans and describe cassandra  a partial order contingency
planner  cassandra uses explicit decision steps that enable the agent executing the plan to
decide which plan branch to follow  the decision steps in a plan result in subgoals to acquire
knowledge  which are planned for in the same way as any other subgoals  cassandra thus
distinguishes the process of gathering information from the process of making decisions 
the explicit representation of decisions in cassandra allows a coherent approach to the
problems of contingent planning  and provides a solid base for extensions such as the use
of different decision making procedures 

   introduction
many plans that we use in our everyday lives specify ways of coping with various problems
that might arise during their execution  in other words  they incorporate contingency plans  
the contingencies involved in a plan are often made explicit when the plan is communicated
to another agent  e g    try taking western avenue  but if it s blocked use ashland   or
 crank the lawnmower once or twice  and if it still doesn t start jiggle the spark plug   socalled classical planners   cannot construct plans of this sort  due primarily to their reliance
on three perfect knowledge assumptions 
   the planner has full knowledge of the initial conditions in which the plan will be
executed  e g   whether western avenue will be blocked 
   all actions have fully predictable outcomes  e g   cranking the lawnmower will definitely either work or not work 
   this category includes systems such as strips  fikes   nilsson         hacker  sussman         noah
 sacerdoti        and molgen  stefik      a      b   recent classical planners include tweak  chapman         snlp  mcallester   rosenblitt        and ucpop  penberthy   weld         the term is
due to wilkins        

c      ai access foundation and morgan kaufmann publishers  all rights reserved 

fipryor   collins
   all change in the world occurs through actions performed by the planner  e g   nobody
else will use the car and empty its gas tank 
under these assumptions the world is totally predictable   there is no need for contingency
plans 
the perfect knowledge assumptions are an idealization of the planning context that is intended to simplify the planning process  they allow the development of planning algorithms
that have provable properties such as completeness and correctness  unfortunately  there
are few domains in which they are realistic  mostly  the world is to some extent unpredictable  relying on the perfect knowledge assumptions in an unpredictable world may prove
cost effective if the planner s uncertainty about the domain is small  or if the cost of recovering from a failure is low  in general  however  they may lead the planner to forgo options
that would have been available had potential problems been anticipated in advance  for
example  on the assumption that the weather will be sunny  as forecast  you may neglect to
take along an umbrella  if the forecast later turns out to be erroneous  it is then impossible
to use the umbrella to stay dry  when the cost of recovering from failure is high  failing to
prepare for possible problems in advance can be an expensive mistake  in order to avoid
mistakes of this sort  an autonomous agent in a complex domain must be able to make and
execute contingency plans 
recently  we and a number of other researchers have begun investigating the possibility
of relaxing the perfect knowledge assumptions while staying close to the framework of
classical planning  etzioni  hanks  weld  draper  lesh    williamson        peot   smith 
      pryor   collins        draper  hanks    weld      a  goldman   boddy      a  
our work is embodied in cassandra   a contingency planner whose plans have the following
features 
 they include specific decision steps to determine which of the possible courses of
action to pursue 
 information gathering steps are distinct from decision steps 
 the circumstances in which it is possible to perform an action are distinguished from
those in which it is necessary to perform it 

    issues for a contingency planner

a contingency planner must be able to construct plans that can be expected to succeed
despite unknown initial conditions and uncertain outcomes of nondeterministic actions  an
effective contingency planner must possess the following capabilities 
 it must be able to anticipate outcomes of nondeterministic actions 
 it must be able to recognize when an uncertain outcome threatens the achievement
of a goal 
 it must be able to make contingency plans for all possible outcomes of the various
sources of uncertainty that affect a given plan 
   cassandra was a trojan prophet who was fated not to be believed when she accurately predicted future
disasters  an earlier version of cassandra was described in  pryor   collins        

   

fiplanning for contingencies  a decision based approach


it must be able to schedule sensing actions that detect the occurrence of a particular
contingency 



it must produce plans that can be executed correctly regardless of which contingency
arises 

the design of cassandra addresses these issues  however  there are several issues that
have not been addressed 


we have not considered the problem of determining whether it is worth planning for
a particular outcome 



cassandra is not a probabilistic planner  it cannot make use of any information about
the likelihood or otherwise of any events 



we have ignored the possibility of interleaving planning and execution  but see section      



cassandra does not handle exogenous events 



the version of cassandra described here cannot solve moore s bomb in the toilet
problem  mcdermott         it can only find plans that involve deciding between
courses of action that will succeed in different contingencies  but see section        

cassandra assumes that all sources of uncertainty and all their possible outcomes are known 
and plans for all those that affect the achievement of its goals  it is firmly in the classical
planning mold  its job is to construct plans that are guaranteed to achieve its goals  it does
not decide when to plan  or what to plan for  moreover  although we believe that cassandra
is sound and complete  it is not systematic  in addition  the current implementation is too
slow to be of practical use 

    a note on terminology

the word conditional is used in a variety of senses in the literature  we avoid its use
altogether  except when describing the work of other authors who use it in specialized
senses  for example  the conditional actions and conditioning of peot and smith        
we use the term contingency plan to refer to a plan that contains actions that may or may
not actually be executed  depending on the circumstances that hold at the time  we use
the term context dependent to refer to action effects that depend on the context in which
the action is performed 

    outline

in this paper we present cassandra  describe its algorithm in some detail  discuss the
approach it takes to some important issues in contingency planning  and show how it handles
a variety of example problems 
we start by describing the structure of cassandra s plans  section   describes how
cassandra represents actions  including those with uncertain outcomes  explains the system
   

fipryor   collins
of labels that allows the determination of which of the alternative courses of action in a
contingency plan should be pursued  and introduces the notion of explicit decision steps 
section   briey describes the basic planning algorithm in the absence of uncertainty 
section   explains how the algorithm is extended to handle uncertain outcomes of actions 
in particular  the structure of cassandra s decisions is considered  as are the problems of
ensuring the soundness of the plan that is constructed  the resulting algorithm is described
in detail and its properties are discussed in section   
in section   we consider some issues that arise in contingency planning  section  
describes related work on planning under uncertainty  finally  section   summarizes the
contributions of this work and discusses its limitations 

   cassandra s plan representation

cassandra s representation of contingency plans has three major components 
 an action representation that supports uncertain outcomes 
 a plan schema 
 a system of labels for keeping track of which elements of the plan are relevant in
which contingencies 
these components are described in the remainder of this section 

    action representation

cassandra s action representation is a modified form of the strips operator  fikes   nilsson         it consists of the preconditions for executing an action and the effects that may
become true as a result of executing it  as in the standard strips operator  the syntax is
the same as that used in ucpop  penberthy   weld         as in ucpop  action effects
are more complex than standard strips effects  they may have an associated set of secondary preconditions   which govern the occurrence of that effect  pednault              
secondary preconditions allow the representation of context dependent effects of actions 
i e   effects that depend upon the context in which the action is executed  the use of secondary preconditions is critical to cassandra s ability to represent uncertain effects  and
hence nondeterministic actions  as we discuss in section       
figure   shows a simplified operator schema for the action of making a selection from a
soft drink machine  the effects describing how the  make another selection  indicator light
is turned off are omitted   the operator describes two possible effects of carrying out the
action  the effect of acquiring a soda  which depends on the secondary precondition that a
soda of the selected type is available  and the effect of having the  make another selection 
indicator light come on  which depends on the secondary precondition that a soda of the
selected type is not available  both effects depend upon the preconditions that money has
been entered into the machine and that the machine is plugged in 
      representing uncertain effects

an uncertain effect in cassandra is a context dependent effect with an unknown precondition   i e   a precondition the planner can neither knowingly perceive nor deliberately affect 
   

fiplanning for contingencies  a decision based approach

action 

 make selection  machine  selection 

preconditions 
effects 

  and  money entered  machine 
 plugged in  machine  
  when
 available  machine  selection 
 effect   and  dispensed  selection 
  not  money entered  machine    
  when
  not  available  machine  selection  
 effect  another selection indicator on  machine  

secondary precondition
secondary precondition

figure    simplified representation of operating a vending machine
for example  a malfunctioning soft drink machine may operate intermittently  if the planner is aware of the intermittent functioning  but unaware of the conditions that govern
this behavior  then the correct functioning of the device depends upon an unknown precondition  from the point of view of the planner  the uncertain effect is nondeterministic 
the planner cannot tell in advance whether it will occur  clearly  this definition is fundamentally subjective  another planner with better information might be able to specify
precisely the conditions under which the device functions properly  for example if it knew
how the internal mechanism of the machine worked  as another example  consider what
happens when a coin is tossed  in principle  given perfect knowledge of all the forces and
distances involved  it would be possible to predict the outcome  in practice  such knowledge
is unavailable and the effect of the action is uncertain  in principle  it would be possible
to specify the conditions that would lead to the coin landing tails up  in practice  these
conditions are unknown 
it is interesting to note here that in some circumstances it might be possible for a planner
to learn to predict outcomes that it had hitherto regarded as uncertain  for example  if it
learned how the soda machine worked   unknown  refers only to the current situation 
our representation would facilitate such learning  which would simply involve learning new
secondary preconditions rather than a whole new action representation 
unknown preconditions play the same syntactic role as normal preconditions within the
operator schema  they are represented by expressions formed using the pseudo predicate
 unknown  an effect that has a secondary precondition of this type will occur only in
certain contexts which cannot be distinguished by the planner from the contexts in which
it will not occur 
figure   depicts a simplified example of an operator with an uncertain effect it represents the action of operating a soft drink machine that intermittently fails to dispense a
soda despite being operated correctly  this operator has two uncertain effects  one in which
the soda is dispensed  the other in which the soda is not dispensed 
clearly  the uncertainty with respect to both these effects stems from a single underlying source  namely uncertainty about whether or not the machine will malfunction  in
effect  the two unknown preconditions in the operator represent alternative results of this
underlying source of uncertainty  this relationship is reected in the two arguments to
   

fipryor   collins

action 
preconditions 
effects 

 enter selection  machine 
  and  money entered  machine 
 plugged in  machine  
  when   and  available  machine  selection 
  unknown  ok t  
 effect  dispensed  selection  
  when   and  available  machine  selection 
  unknown  ok f  
 effect   not  dispensed  selection   
  when  available  machine  selection 
 effect   not  money entered  machine   
  when   not  available  machine  selection  
 effect  another selection indicator on  machine  

uncertain effect
uncertain effect

figure    operating a faulty soft drink machine
the  unknown pseudo predicate  the first of which designates the source of uncertainty with
which it is associated  and the second of which designates the particular outcome of the
uncertainty that it represents  the possible contexts are effectively partitioned into a set
of equivalence classes  with each context in the same class producing the same outcome
of the uncertainty  the outcome is then used to label the equivalence class  a condition
of the form   unknown  class outcome  will be true if the actual context is in the class
designated by outcome 
notice that each instantiation of the operator will introduce a new source of uncertainty 
which means that the first argument to the unknown precondition must be represented as
a variable in the operator schema  cassandra binds this variable to a unique identifier  i e  
a skolem constant  when the operator is instantiated 
in cassandra s representation it is assumed that different sources of uncertainty are
independent of each other  no source of uncertainty can be linked to uncertain outcomes
in more than one operator  but a single operator may introduce any number of sources of
uncertainty  each of which may have any number of outcomes  each source of uncertainty
has an exhaustive set of mutually exclusive outcomes  each with a unique name 
      representing other sources of uncertainty

a key element of cassandra s design is the use of a single format to represent all sources
of uncertainty that affect planning  in particular  all uncertainty is assumed to be manifest
in uncertain effects of planning operators  as outlined above  uncertainty about initial
conditions can be handled within this format by treating initial conditions as though they
were the effects of a phantom  start step  action  this treatment of initial conditions 
which was initially developed for reasons unrelated to the problem of representing uncertain
outcomes  is common to the snlp family of planners to which cassandra belongs 
cassandra s formulation ignores uncertainty that might stem from outside interference
during the execution of the agent s plans  except inasmuch as it can be represented as
   

fiplanning for contingencies  a decision based approach
incomplete knowledge of initial conditions  this is  of course  a limitation of classical
planners in general  all change in the world is assumed to be caused directly by the actions
of the agent 

    basic plan representation

cassandra s plan representation is an extension of that used in ucpop  penberthy   weld 
      and snlp  mcallester   rosenblitt        barrett  soderland    weld         which is
in turn derived from the representation used in nonlin  tate         a plan is represented
as a schema with the following components 
 a set of steps  
 a set of anticipated effects of those steps 
 a set of links relating effects to the steps that produce and consume them  a step
consumes an effect when it requires that effect to achieve one of its preconditions  
note that links in effect denote protection intervals   i e   intervals over which particular
conditions must remain true in order for the plan to work properly 
 a set of variable bindings instantiating the operator schema 
 a partial ordering on the steps 
 a set of open conditions   i e   unestablished goals 
 a set of unsafe links   i e   links the conditions of which could be falsified by other
effects in the plan 
a plan is complete when it contains no open conditions and no unsafe links 

    representing contingencies

a contingency plan is intended to achieve its goal regardless of which of the foreseeable
contingencies associated with it actually arise during execution  to construct a valid contingency plan  the planner must be able to enumerate these contingencies  the set of
foreseeable contingencies can be computed from the sources of uncertainty that are associated with the plan  in effect  a contingency is one possible set of outcomes for all relevant
sources of uncertainty 
      contingency labels

keeping track of whether a plan achieves its goal in every contingency is a somewhat
complex process  cassandra  like cnlp  uses a system of labels to accomplish the necessary
bookkeeping  peot   smith         each goal  step  and effect in cassandra s plan is labeled
to indicate the contingencies in which that element participates 
 goals are labeled to indicate the contingencies in which they must be achieved 
 effects are labeled to indicate the contingencies in which they are expected to occur 
i e   the contingencies in which the goals they satisfy arise 
   

fipryor   collins


steps are labeled to indicate the contingencies in which they must be performed  i e  
the union of the contingencies in which any of their effects are expected to occur 

the preconditions of each effect become new goals  the labels of which correspond to the
labels on the effect that give rise to them 
in general  it is assumed that a particular step could be executed in any contingency 
albeit possibly to no purpose  however  it is sometimes necessary to rule a particular step
out of a particular contingency as a means of preventing its interference with the plan for
that contingency  for example  consider a plan to achieve the goal of having a coin heads
up  the first action of which is to toss the coin  see section       for a detailed discussion of
this plan   in one contingency the coin lands heads up  and no further actions are required 
in another contingency  the coin lands tails up and must be turned over in order for the goal
to be achieved  it is clear  however  that the turning over action must not be performed
in the first contingency  doing so would mean that the goal of having the coin heads up is
not achieved  in cassandra  ruling steps out is accomplished by associating negative labels
with plan steps to indicate those contingencies in which the steps are not to be executed 
peot and smith        call this process conditioning  
in addition  every step that depends  directly or indirectly  on a particular outcome of
a given source of uncertainty is ruled out of every contingency that involves an alternative
outcome of that source of uncertainty  we discuss the reason for this restriction in more
detail below 
cassandra s labeling system thus provides very clear guidance to the agent executing
the plan  which simply performs those steps whose positive labels reect the actual circumstances that hold at execution  steps with neither positive nor negative labels involving the
current contingency will not affect the goals  but are not guaranteed to be executable  in
contrast  the agent executing a plan produced by cnlp is guided by the reason labels attached to steps  in cnlp s plans  an action need only be executed if at least one of the goals
represented in its reason labels is feasible  the agent must therefore have some method of
deciding which of the top level goals are feasible  we assume this can be done by comparing
the context labels of each top level goal  which are labeled because they are represented
as dummy actions  with the circumstances that actually hold  cassandra s method is thus
simpler  the agent simply uses the positive labels of the plan steps instead of using the
labels attached to a step to indicate those goals whose context labels must be analyzed 
the general principles of label propagation in cassandra are 


positive labels  which denote that the plan element concerned contributes to goal
achievement in that contingency  propagate along causal links from subgoals to the
plan elements that establish them 



negative labels  which denote that the plan element concerned would prevent goal
achievement in that contingency  propagate along causal links from effects to the plan
elements that they establish 

the details are given in section       
   

fiplanning for contingencies  a decision based approach

key
link

on western
drive to
western at
belmont

on western check
traffic on
western

take western
to evanston
know
traffic
status

condition

alternative
control flow

decide
take belmont
to ashland

on belmont

on ashland

take ashland
to evanston

figure    a plan that includes a decision step
      representing decisions

planning can be seen as the process of deciding what to do in advance of when it is done
 collins         the need for contingency plans arises when the necessary decisions cannot
be made in advance because of missing information  see section       if the decisions cannot
be made in advance  they must be made when the plan is executed  the agent executing
a contingency plan must at some point decide which of the possible courses of action to
pursue  in other words which branch to take 
previous work has in effect assumed that the agent will execute those steps that are
consistent with the contingency that actually holds  warren        peot   smith        
however  the determination of which steps are consistent cannot  by definition  be made in
advance  in order to know which contingency holds during execution  the agent executing
the plan must in general gather information on which the decision can be based  to ensure
a viable plan  the planner must be able to guarantee that the steps required to gather
information do not conict with those required to carry out the rest of the plan  therefore 
the planner must in general be able to include information gathering steps  as well as any
other steps that support decision making  in the plan it is constructing  cassandra achieves
this by representing decisions explicitly as plan steps  the preconditions of these decisionsteps include goals to be in possession of information relevant to making the decision  the
scheduling of actions to obtain information is thus handled by the normal planning process 
for instance  consider the contingency plan alluded to above   try taking western avenue  but if it s blocked use ashland    during the execution of such a plan  the agent must
at some point decide which branch of the plan to execute  the decision step in this case
would have the precondition of knowing whether western avenue is blocked or not  which
would cause the planner to schedule an information gathering action to check the trac
status on western  this operation might in turn have the precondition of being on western  which can be achieved by traveling to the junction of western and belmont  after
the decision is taken  the agent can either take western up to evanston or continue along
belmont to ashland 
assuming the goal of the plan is to be in evanston  the final plan might be as depicted in
figure    note that control ow after a decision is represented by heavy lines  solid lines in
the diagram represent links  with the action at the tail of the link achieving a precondition
   

fipryor   collins
of the action at the head of the link  in this plan  the agent will take western to evanston
in one contingency  and will take belmont to ashland and then ashland to evanston in the
other  
notice that in order to determine the appropriate precondition for a given decision step 
the planner must have some way of determining exactly what it will need to know in order
to make the decision at execution time  this somewhat complex determination depends in
part on how the decision making process is to be carried out  in cassandra  decisions are
modeled as the evaluation of a set of condition action rules of the form 
if condition   then contingency  
if condition   then contingency  
   
if condition n then contingency n
each possible outcome of a given uncertainty gives rise to a decision rule  the condition
of this decision rule specifies a set of effects that the agent should test in order to determine
whether to execute the contingency plan for that outcome  for example  the decision rules
for the driving plan example would look like this 
if western avenue is blocked
then execute contingency using ashland
if western avenue is not blocked then execute contingency using western
cassandra s derivation of inference rules in decisions is explained in detail in section   
the preconditions for a decision step are goals to know the truth values of the conditions
in the decision rules  they are thus knowledge goals  mccarthy   hayes        pryor       
 see section       these goals are treated in the same way as are the preconditions of any
other step  cassandra thus requires no other special provisions to allow the construction of
information gathering plans 
the explicit representation of decision steps provides a basis for supporting alternative
decision procedures  while cassandra s basic model of the decision procedure is quite
simple  more complex decision procedures can be supported within the same framework  one
such procedure is described in section         for example  the model could be changed to a
differential diagnosis procedure  the representation of decision procedures as templates in
the same way that actions are represented as templates would allow the planner to choose
between alternative methods of making a decision in the same way as it can choose between
alternative methods of achieving a subgoal  an even better approach might be to formulate
an explicit goal to make a correct decision  and allow the system to construct a plan to
achieve that goal using inferential operators  however  this would in effect require that
the goals for these operators be stated in a meta language describing the preconditions and
results of operators  we have not yet addressed this possibility in any detail 
cassandra s separation of the gathering of information from the making of decisions
allows one information gathering step to serve several decisions  this allows the exible use
of information gathering actions  there is no effective difference between such actions and
any other action that may appear in a plan 
   appendix a shows the plans that cassandra constructs for all the examples described in this paper 
this plan is in section a   

   

fiplanning for contingencies  a decision based approach
new step add to the plan a new step that has an effect that will establish the open condition  add the
step preconditions and the secondary preconditions of the effect as open conditions  the open condition
becomes a completed link 
reuse step make the open condition into a complete link from an effect of an existing plan step  add the
secondary preconditions of the effect as open conditions 

figure    resolving open conditions

   planning without contingencies
in this section we briey review the basic planning algorithm on which cassandra is based 
it follows closely that used in ucpop  penberthy   weld         which is in turn based on
snlp  mcallester   rosenblitt         the principal difference between ucpop and snlp
is the use of secondary preconditions  see collins   pryor        
cassandra does not attempt to construct a contingency plan until it encounters an
uncertainty  up until this point  it constructs a plan in much the same manner as other
planners in the snlp family  in fact  if no uncertainty is ever introduced into the plan 
cassandra will effectively function just as ucpop would under the same circumstances 
planning proceeds through the alternation of two processes  resolving open conditions and
protecting unsafe links   each of these processes involves a choice of methods  and may
therefore give rise to several alternative ways to extend the current plan  all possible
extensions are constructed  and a best first search algorithm guides the planner s exploration
of the space of partial plans 
the initial plan consists of two steps  the start step  with no preconditions and with
the initial conditions as effects  and the goal step  with the goal conditions as preconditions
and with no effects  the planner attempts to modify its initial plan until it is complete  
i e   until there are no open conditions and no unsafe links 

    resolving open conditions
the planning process is driven by the need to satisfy open conditions  which are initially
simply the input goals  in the course of planning to satisfy an open condition  new subgoals
may be generated  these are then added to the set of open conditions  the planner can
establish an open condition in one of two ways  by introducing a new step into the plan  or
by reusing an existing step by making use of one of its effects  see figure     the secondary
preconditions of the effect that establishes the condition become open conditions  if a new
step is added  the preconditions of the step become open conditions as well  finally  each
time an open condition is established  a link is added to the plan to protect the newly
established condition 
one way of establishing a condition is simply to notice that the condition is true in the
initial state  because the initial conditions are treated as the results of the start operator 
which is always a part of the plan  this method can be treated as establishment by reusing
an existing step  indeed  this simplification is the motivation for representing the initial
conditions in this way 
   

fipryor   collins
a link establishing the condition cond is unsafe if there is an effect eff in the plan  other than the effect
sourceeff that establishes cond and the  possible  effect goaleff that is either established or disabled by the
link  with the following properties 
unification one of the postconditions in eff can possibly unify with either cond or its negation 
ordering the step that produces eff can  according to the partial order  occur both before the step that
produces goaleff and after the step that produces sourceeff 
an unsafe link may be resolved in one of three ways 
ordering modify the ordering of the steps in the plan to ensure that the step producing eff occurs either
before the step that produces sourceeff or after the step that produces goaleff 
separation modify the variable bindings of the plan to ensure that the threatening effect eff cannot in fact
unify with the threatened condition cond 
preservation introduce a new open condition in the plan to disable eff  this new open condition is the
negation of one of eff s secondary preconditions 

figure    unsafe links

    protecting unsafe links
whenever an open condition is established  links in the plan may be jeopardized either
because a new step threatens an existing link  or because a new link is threatened by an
existing step  the situations in which a link is unsafe are shown in figure    in general  a
link is considered unsafe if there is an effect in the plan that could possibly interfere with
the condition established by that link 
there are three general methods of protecting a threatened link  see figure     first 
ordering can be used to constrain the threatening action to occur either before the beginning
or after the end of the threatened link  second  the threatening effect and the threatened
link can be separated by imposing constraints on the variables involved so that the effect
cannot be unified with the established condition  third  the link can be preserved by
generating a new subgoal to disable the effect that threatens the link 

   contingency planning
cassandra proceeds as described in the previous section until either the plan is completed
or an uncertainty is introduced  this section describes how uncertainties are introduced
and how they are handled 
as an example of a plan involving an uncertainty  let us consider a version of moore s
classic  bomb in the toilet  problem  mcdermott         in which the goal is bomb is
disarmed   and the initial conditions are bomb in package  or bomb in package    the
uncertainty in this case lies in the initial conditions  depending on the outcome of the
uncertainty  the start operator can either have the effect that the bomb is in package  or
the effect that the bomb is in package   

    contingencies
uncertainty is introduced into a plan when an open condition in the plan is achieved by
an uncertain effect  i e   an effect with an unknown precondition  in the bomb in the toilet
   

fiplanning for contingencies  a decision based approach

key
move
package 
pa
at cka
toi ge
let

start

link

condition

link with
uncertain
effect

condition

dunk
package 

bomb in
package 

bomb
disarmed

end

figure    the introduction of uncertainty into a plan
example  for instance  cassandra may achieve the condition bomb is disarmed by selecting
the dunk operator  which has the preconditions the package is at the toilet   and the bomb is
in the package   the condition the bomb is in the package can be established by identifying
it with the bomb is in package    which is an effect of the start operator  however  this
condition is uncertain  as can be determined by noting that it has an unknown precondition 
cassandra will attempt to deal with this uncertainty by introducing a new contingency  or
new contingencies  into the plan  the state of the plan just after the introduction of the
uncertainty is illustrated in figure   
      introducing contingencies

cassandra notices an uncertainty when its current plan becomes dependent upon a particular outcome of that uncertainty through the use of an uncertain effect  i e   an effect
with an unknown precondition that specifies an outcome of that uncertainty  the plan
that cassandra has built up to that point is in effect a plan branch for that outcome 
since branches must also be constructed for all other possible outcomes of the uncertainty 
cassandra makes a copy of its overall goal for each possible outcome of the uncertainty 
each copy carrying a label indicating the outcome of the uncertainty in which it must be
achieved  it thus effectively splits the plan into a set of branches  one for each possible
outcome of the uncertainty  
in planning for these otherwise identical goals  cassandra must make certain that no
element of the branch for the goal for one outcome relies on a different outcome of the same
uncertainty  in other words  no goal  nor any of its subgoals  may be achieved by any effect
that depends  directly or indirectly  on any outcome of the uncertainty other than the one in
the goal s label  as described above  cassandra achieves this by using a system of negative
labels indicating contingencies from which particular plan elements must be excluded 
   an alternative method would be to split the plan into two branches  regardless of the number of outcomes 
in this case  one branch would be associated with a given outcome of the uncertainty  while the other
would be associated with all other possible outcomes of that uncertainty  this is effectively how sensp
operates  etzioni et al         

   

fipryor   collins

move
package 

i
bomb in  
package

start

key

pa
at ckag
toil e 
et

bomb
packagin
e 
 
age
ack ilet
p
move
t to
package  a

ii
dunk
package 

bomb
disarm
e

link

condition

link with
uncertain
effect

condition

d

end
dunk
package 

bomb ed
disarm

iii
iv

element label classes
i

in package  contingency

ii

in package  contingency
out of package  contingency

iii

in package  contingency
out of package  contingency

iv

in package  contingency

figure    a contingency plan to disarm a bomb
in the bomb in the toilet example  when the plan is made dependent upon the uncertain
outcome bomb in package    a new copy of the top level goal bomb is disarmed is added to
the set of open conditions  the new copy is given a label indicating that it belongs to
contingency in which the bomb is in package     the existing top level goal and all its
subgoals are labeled to indicate that they belong to the contingency in which the bomb
is in package    the effect bomb in package    the action dunk package    and all effects of
the action dunk package  are be labeled to indicate that they cannot play a role in the
contingency in which the bomb is in package   
notice that the action move package    although it plays a role in the plan in the contingency in which the bomb is in package    does not in fact depend upon the bomb being
in package    it could in principle be made part of the plan for disarming the bomb in the
contingency in which the bomb is in package    were it to prove useful for anything  this is
indicated by the fact that it has no negative label for for the package  contingency 
when cassandra attempts to achieve the new open condition bomb is disarmed   it may
choose the dunk operator once again  notice that it is prohibited from using any effects of
the existing dunk operator   this new instance of the dunk operator in turn gives rise to a
subgoal to have the bomb be in the package that is dunked  this can only be achieved by
identification with the effect bomb in package    the plan thus constructed is depicted in
figure    the decision step has been omitted for clarity  and is listed in section a   
      uncertainties with multiple outcomes

although the algorithm we have described can deal with uncertainties having any number
of possible outcomes  we have so far discussed only examples with two possible outcomes 
in fact  two outcome uncertainties suce to describe the majority of problems that we have
   note that we are describing the contingency in this way for clarity of exposition  the actual label is
constructed as described in section       

   

fiplanning for contingencies  a decision based approach

package at location 
pickup
package

drive  car
to location 
start

t
ot a
rob tion 
loca

key

a

link
link with
uncertain
effect

decide

condition

condition

alternative
control flow

b

incomplete
portion of
plan

figure    a partial plan to pick up a package
considered  indeed  technically  any situation could be described in terms of some number
of two outcome uncertainties  however  it is not hard to think of situations that might
naturally be represented in terms of a source of uncertainty with more than two outcomes 
for example  suppose the planner were interested in getting hold of a particular object in
a situation in which the object were known to be in one of three places  in such a case 
the start pseudo operator would naturally be represented as having three uncertain effects
 one for each possible location of the object  all associated with alternative outcomes of a
single source of uncertainty  cassandra s plan for acquiring the object would then involve
three contingencies  one for each possible location 
      multiple sources of uncertainty

a plan may involve two or more sources of uncertainty  in which case the plan will have
more than one set of branches  for example  suppose cassandra is given the goal of picking
up a package that is at one of two locations  and that one of two cars will be available
for it to use  if the uncertainty regarding the location of the package is encountered first
during the construction of the plan  cassandra will respond by building a plan involving
two contingencies  one for each location  call these contingencies a and b  see figure  
and section a    
at some point during the construction of the plan for contingency a  cassandra will
encounter the uncertainty concerning which car will be available and will make the current
plan dependent upon one particular outcome of that uncertainty  since this new source of
uncertainty arises in the context of planning for contingency a  contingency a is in effect
bifurcated into two contingencies  a    in which the package is at location   and car   is
   

fipryor   collins

package at location 
car  available

drive car 
to location 

robot at
location 

package at location 

start

car  available

drive car 
to location 

 
decide

at
robot n 
io
t
loca

 

link with
uncertain
effect

decide

pickup
package

key
link

a

pickup
package

condition

condition

alternative
control flow

b

incomplete
portion of
plan

figure    a plan with two sources of uncertainty
available  and a    in which the package is at location   and car   is available   cassandra
must replace all existing contingency a labels with contingency a  labels  it must then
introduce a new copy of the top level goal labeled with contingency a   
note that cassandra must plan from scratch to achieve the top level goal in contingency
a    in spite of the fact that it already has a viable plan for the goal in contingency a   
this is necessary because situations may be encountered in which the only successful plans
involve using different methods to achieve the goal in the two contingencies  for example 
extreme differences between the two cars might necessitate different plans for driving them
 e g   in a more detailed representation of the situation than we have presented here  such
differences might affect the routes on which the cars could be driven or the places in which
they could be parked   cassandra must therefore consider all possible ways to achieve the
goal in contingency a  in the search for a completion of the plan  if the particular car used
does not in fact affect the driving plan  then one path through the search space will result
in isomorphic contingency plans for a  and a   see figure   and section a    
the same reasoning applies to the extension of the plan to deal with contingency b  
it cannot be assumed a priori that the plan for contingency b will in any way resemble
the plan constructed for contingency a  an interesting consequence of this is that the
   

fiplanning for contingencies  a decision based approach
uncertainty concerning the availability of the cars does not necessarily arise in a given plan
for contingency b   for example  if the location of the package in contingency b were close
enough that the agent could get there without using a car  the final plan might have only
three contingencies  a   location   with car     a   location   with car     and b  location
   on foot  
cassandra may  of course  produce an extension of the plan in which a car is to be used
in contingency b as well  in which case it will again encounter the uncertainty associated
with the location of the car  and will proceed to bifurcate contingency b just as was done
previously for contingency a  in the limit  the plan will involve one contingency for every
member of the cross product of the possible outcomes of the relevant uncertainties  however 
it is important to note that not every member of the cross product set must appear as a
contingency  since  as we have shown  some uncertainties may arise only given particular
outcomes of other uncertainties 

    decision steps

when cassandra encounters a new source of uncertainty it adds a decision step to the plan
to represent the act of determining which path through the plan should be followed during
execution  the following ordering constraints are added to the plan at the same time 


the decision step must occur after the step with which the uncertainty is associated 



the decision step must occur before any step with a precondition whose achievement
depends on a particular outcome of the uncertainty 

      formulating decision rules

for a decision step to be operational  there must be an effective procedure by which the
agent executing the plan can determine which decision to make  in cassandra  the action
of deciding which contingency to execute is modeled as the evaluation of a set of conditionaction rules of the form 
if condition   then contingency  
if condition   then contingency  
if condition   then contingency  
   
cassandra annotates each decision step in a plan with the set of rules that will be used
to make that decision  the executing agent can then make the decision by evaluating these
rules when it comes to the decision step in the course of executing the plan  in order to
evaluate a decision rule  the executing agent must be able to determine whether the rule s
antecedent holds  the preconditions for the decision step must thus include goals to know
the current status of each condition that appears as an antecedent of a rule in this condition 
the preconditions of a decision step become open conditions in the plan in the same way
as do the preconditions of any other step 
as the intended effect of evaluating the decision rules is to choose the appropriate contingency given the outcome of a particular uncertainty  the conditions should be diagnostic
of particular outcomes of the uncertainty  the executing agent cannot  of course  directly
   

fipryor   collins
determine the outcome of an uncertainty  so it must infer it from the presence or absence
of effects that depend upon that outcome 
the most straightforward approach to constructing the antecedent conditions of a
decision rule would be to analyze the plan operators to identify all the effects that could
be expected to result from a given outcome of the uncertainty  and make the condition be
the conjunction of these effects  however  this turns out to be overkill  in fact  it is only
necessary to check for those effects of a given outcome of an uncertainty that are actually
used to establish preconditions in the contingency associated with that outcome   in other
words  it is necessary only to verify that the contingency plan can  in fact  succeed  this has
the interesting consequence that the executing agent might  in principle  end up selecting a
contingency plan even though the outcome of the uncertainty were not the one with which
that plan was associated  notice that this would not cause a problem in the execution of
the plan  since it would only occur if all the conditions for the plan s success were met  in
fact  as we shall see  cassandra depends on this effect in certain circumstances 
the antecedent condition of the decision rule is thus a conjunction of all the direct effects
of a particular outcome that are used to establish preconditions in the contingency plan
for that outcome  decision rules are constructed incrementally as the plan is elaborated 
we discuss cassandra s construction of these rules in more detail in section       below 
the approach we have used in formulating cassandra s decision rules is consistent with
morgenstern s observation that an agent can execute a plan if it can  make sure  that all
the events in the plan are executable  morgenstern        
      adding a decision rule in our example

in the bomb in the toilet example  cassandra will introduce a decision step to determine
whether or not the bomb is in package    as the uncertainty is in the initial conditions 
the decision will be constrained to occur after the start step  it must also occur before
either of the dunk actions  since these depend upon particular outcomes of the uncertainty 
the decide step will have a precondition to know whether the bomb is in package    if
there are actions available that would allow it to determine this x raying the box  for
example cassandra will achieve this precondition with one of those actions  and decide on
that basis which branch of the plan to execute 
      how cassandra constructs decision rules

at the point in the planning process at which cassandra constructs a decision rule  only
one precondition in the plan is known to depend upon a particular outcome of the uncertainty that gave rise to the decision  namely  the one that led to cassandra discovering
the uncertainty in the first place  the decision rule set that cassandra initially builds thus
looks like this 
if effect   then contingency  
if t
then contingency  
if t
then contingency  
   
during the construction of the plan  cassandra must modify this initial rule set each time an
effect depending directly on the source of uncertainty is used to establish an open condition
   

fiplanning for contingencies  a decision based approach

action 

 toss coin  coin 

preconditions 

 holding  agent  coin 

effects 

  when   unknown  u h 
 effect   and  flat  coin 
 heads  coin   
  when   unknown  u t 
 effect   and  flat  coin 
 tails  coin   
  when   unknown  u e 
 effect  on edge  coin   

uncertain effect
uncertain effect
uncertain effect

figure     representing the action of tossing a coin
in the plan  in particular  cassandra must determine the contingency in which that open
condition resides  and conjoin the effect with the existing antecedent of the decision rule for
that contingency 
consider  for example  what happens when a coin is tossed  we might say that in theory
there are three possible outcomes of this action  the coin can land at with heads up  at
with tails up  or on its edge  figure      suppose cassandra is given a goal to have the
coin be at  this can be established by using the at heads effect of tossing it  since this is
an uncertain effect  cassandra introduces two new contingencies into the plan  one for the
outcome in which the coin lands tails up  and another for the outcome in which it lands on
its edge 
the introduction of these contingencies mandates the introduction of a decision step
whose initial rule set looks like this  
if  flat coin  then  u   h  rule for heads up
if t
then  u   t  rule for tails up
if t
then  u   e  rule for edge
at the same time  a new open condition  know if  flat coin   is introduced as a precondition of the decision step  and new goal conditions are introduced that must be achieved in
contingencies  u   t  and  u   e   cassandra next establishes the goal condition in contingency  u   t  using the at tails effect of the toss step  the decision rules associated
with the tails up contingency are thus modified as follows 
if  flat coin  then  u   h  rule for heads up
if  flat coin  then  u   t  rule for tails up
if t
then  u   e  rule for edge
finally  the goal condition is established in contingency  u  e  by introducing a new
step  tip  into the plan  a precondition of the tip step is that the coin be on its edge  which
is established by the on edge effect of the toss action  since this effect depends directly
   assuming that  u  the variable representing the source of uncertainty  is instantiated to u  

   

fipryor   collins
upon the uncertainty u   the decision rule for the edge contingency is modified to include
this condition 
if  flat coin 
then  u   h  rule for heads up
if  flat coin 
then  u   t  rule for tails up
if  on edge coin  then  u   e  rule for edge
since the plan is complete  this is the final set of decision rules  see section a     notice
that these rules do not discriminate the heads up outcome from the tails up outcome  in
fact  either outcome will do  so there is no reason to make this discrimination  which plan
is executed in either of these conditions depends solely upon the order in which the agent
that is executing the plan chooses to evaluate the decision rules  
a somewhat more complex problem arises if we give cassandra the goal of having the
coin be flat and heads up  in this case both effects can be established using the toss
action  this will again lead to the introduction of two new contingencies into the plan  one
for when the coin lands tails up  and one for when it lands on edge  although cassandra
could establish  flat coin  in the tails up case  it would fail to complete the plan 
because the coin would not be heads up  however  the turn over action can be used 
leaving the coin flat and heads up given that it was flat and tails up to begin with 
at this point the decision rules are as follows 
if  and  flat coin   heads up coin   then  u   h  rule for heads up
if  and  flat coin   tails up coin   then  u   t  rule for tails up
if t
then  u   e  rule for edge
cassandra must then plan for the goal in the outcome in which the coin lands on its
edge  both these effects can be established as a result of the tip action  however  the
result heads up is an uncertain effect of the tip action  since the coin might just as easily
land tails up  cassandra must therefore add another new contingency for when the coin
lands tails up after being tipped  in this instance  the goal can be established by using
the turn over action  and the tails up precondition of this action can be established by
the uncertain result of the tip action  the final decision rule set for the first decision is as
follows 
if  and  flat coin   heads up coin   then  u   h  rule for heads up
if  and  flat coin   tails up coin   then  u   t  rule for tails up
if  on edge coin 
then  u   e  rule for edge
if the on edge contingency is pursued  another decision  stemming from the uncertain
result of tip  must be added to the plan  if we name the second source of uncertainty u  
the rules for this decision are 
if  heads up coin  then  u   h 
if  tails up coin  then  u   t 
the plan is depicted in figure    and shown in section a   
   an obvious extension to cassandra would be the construction of a post processor that spots decision rules
that do not discriminate between particular sets of outcomes  and prunes the plan to remove superuous
contingencies  note that it cannot be determined until the plan is complete whether such a condition
pertains 

   

fiplanning for contingencies  a decision based approach

flat
heads
flat
tails

heads

decide

flat

s

tip
coin

decide

key

tails

condition

link with uncertain effect

ad

edge

link

end

heads

he

toss
coin

turn coin
over

turn coin
over

condition

flat

alternative control flow
incomplete portion of plan

figure     a plan with two decisions
kick door

lock broken

open
door

do

or

op

link

decide

condition

end

start

lock

key

en

inta

ct

or

pick
lock

n
pe

alternative
control flow

o

do

door
unlocked

open
door

figure     opening a door
      decision rules and unsafe links

the fact that cassandra allows decision rules that do not fully differentiate between outcomes of an uncertainty raises a somewhat subtle issue  consider the partial plan for
opening a locked door shown in figure     the action of kicking a door has  let us say 
two possible outcomes  one in which the lock is broken and one in which the agent s foot is
broken  a plan for the contingency in which the lock is broken is simply to open the door 
a plan for the alternative contingency is to pick the lock and then open the door 
since the second plan does not depend causally on any outcome of the uncertainty  the
agent s foot does not have to be broken in order for it to pick the lock and open the door  
the decision rules based on the above discussion would be 
   

fipryor   collins
if
if

 lock broken 
t

then
then

 o  l 
 o  f 

rule for lock broken
rule for foot broken

notice that in this case the pick action depends on the lock being intact  while the
action may have the effect that the lock is no longer intact  in other words  the kick
action potentially clobbers the precondition of pick  however  the planner can arguably
ignore this clobbering  because the two actions belong to different contingencies  this is
valid  though  only if the structure of the decision rules guarantees that the agent will not
choose to execute the contingency involving pick when the outcome of kick is that the
lock is broken  the decision rules above clearly do not enforce this  the solution in such a
case is to augment the decision rule for the contingency in which the lock is not broken to
test whether the lock is in fact intact  this results in the following decision rules  the plan
is shown in section a    
kick

if
if

 lock broken 
 not  lock broken  

then
then

 o  l 
 o  f 

rule for lock broken
rule for foot broken

cassandra augments decision rules in this way whenever a direct effect of an uncertainty
could clobber a link in a different contingency 

   a contingency planning algorithm
in this section we give the details of cassandra s algorithm  its properties are considered
in section   

    plan elements

a plan consists of steps  effects  links  some of which may be unsafe   open conditions 
variable bindings  a partial ordering  and contingency labels  a plan is complete when
there are no open conditions and no unsafe links 
      steps and effects

a plan step step represents an action  it may have enabling preconditions  it has at least
one effect eff  it is the instantiation of an operator 
a plan step may be a decision step decide  a decision step has enabling preconditions
of the form  know if cond  for a condition cond  decide also has a set of decision rules 
an effect eff represents some results of an action  it is attached to a step step  representing that action  it may have secondary preconditions  it has at least one postcondition
cond  a condition that becomes true as the result of executing step when the secondary
preconditions hold 
      links and open conditions

a link represents a causal dependency in the plan  specifying how a condition cond is established by an effect eff  which has cond as a postcondition  eff has secondary preconditions
secpre and is a result of step step  the link supports the step supstep or effect supeff
through the condition cond which is one of 
   

fiplanning for contingencies  a decision based approach
an enabling precondition of supstep 
 a secondary precondition of an effect supeff that is a result of supstep 
 the negation of a secondary precondition of an effect that is a result of supstep  thus
preserving a link 
a link is unsafe in a contingency conting in which it is required if there is an effect
clobbereff with postcondition clobbercond  the clobbering condition  resulting from step
clobberstep such that 
 either clobbercond can unify with cond 
or cond is of the form  know if knowcond  and clobbercond can unify with knowcond 
 step clobberstep can occur between steps step and supstep 
 effect clobbereff can occur in contingency conting 
an open condition  an unachieved subgoal  is represented in cassandra as an incomplete
link  i e   a link missing the information about the effect that establishes it 


      bindings and orderings

plan bindings  codesignation constraints  specify the relationships between variables and
constants  the following relationships are possible 
 two variables may codesignate 
 a variable may designate a constant 
 a variable may be constrained not to designate a constant 
 two variables may constrained not to codesignate 
an ordering constrains the order of two steps with respect to each other  so that step
s  must precede step s   s    s   
      contingency labels

every step  effect and open condition in a partial plan has two sets of contingency labels
attached to it  in the interests of brevity  we also refer to the labels of a link  in this case 
we mean the labels of the step or effect that the link establishes 
each contingency label has two parts  a symbol representing the source of uncertainty 
and a symbol representing a possible outcome of that source of uncertainty  positive contingency labels denote the circumstances in which a plan element must or will necessarily
occur  negative contingency labels denote the circumstances in which a plan element cannot
or must not occur 
contingency labels must be propagated through the plan  in general  positive contingency labels are propagated from goals to the effects that establish them  while negative
contingency labels are propagated from steps to the effects that result from them  the
details are as follows 
   

fipryor   collins
plan  partlist 

   choose a partial plan plan from partlist 
   if plan is complete  then finish 
   if there is an unsafe link unsafe 
do resolve  plan  unsafe  and add the resulting plans to partlist 
return to step   
   if there is an open condition open 
do establish  plan  open  and add the resulting plans to partlist 
return to step   

figure     top level planning algorithm


a step inherits the positive labels of the effects that result from it 



a step inherits the negative labels of the effects that establish its enabling preconditions 



an effect inherits the positive labels of the steps whose enabling preconditions it
establishes 



an effect inherits the positive labels of the effects whose secondary preconditions it
establishes 



an effect inherits the negative labels of the step from which it results 



an effect inherits the negative labels of the effects that establish its secondary preconditions 



an open condition inherits the positive labels of the step or effect that it is required
to establish 

cassandra s system of label propagation is based on that of cnlp but is more complex 
indeed  it is rather more complex than we would like  this complexity is mandated by the
need to deal with operators that involve multiple context dependent effects  which has the
result that a step and its effects do not necessarily share the same labels 

    algorithm

the planning process starts by constructing a partial plan consisting of two steps 


an initial step with no preconditions and with the initial conditions as its effects 



a goal step with no effects and with the goal conditions as its enabling preconditions 

this plan is added to the  initially empty  list of partial plans partlist  planning then
proceeds as shown in figure    
it now remains to describe how threats to unsafe links are resolved and how open
conditions are established 
   

fiplanning for contingencies  a decision based approach
resolve  plan  unsafe 

   initialize a list newplans 
   if the unification of the clobbering condition clobbercond with the condition cond established by the link
unsafe involves adding codesignation constraints to the bindings of plan 
make each possible modification to the bindings of plan that ensures that clobbercond cannot
unify with cond 
add each resulting partial plan to newplans 
   if the clobbering step clobberstep can precede the step step that establishes unsafe 
add an ordering to ensure that clobberstep precedes step 
add the resulting partial plan to newplans 
   if the step supstep supported by unsafe can precede clobberstep 
add an ordering to ensure that supstep precedes clobberstep 
add the resulting partial plan to newplans 
   prevent the clobbering effect clobbereff from occurring in each contingency conting in which the link
unsafe is unsafe 
do one of 
 a  add the negation of the secondary preconditions of clobbereff as an open condition with
positive contingency label conting 
 b  add conting to the negative contingency labels of clobberstep 
 c  add conting to the negative contingency labels of the effect supeff or step supstep that
unsafe supports 
if appropriate modify the relevant decision rule as discussed in section       
add orderings to ensure that step clobberstep occurs between steps step and supstep 
propagate labels as appropriate 
add each resulting partial plan to newplans 
   return newplans 

figure     resolving threats
      resolving threats to unsafe links

figure    shows how threats are resolved  the methods shown in steps       and   are
standard methods found in snlp and ucpop  they are often termed separation  demotion 
and promotion respectively  we say that the methods in step   disable the threat  the
methods in steps  a and  b ensure that the threatening effect does not occur in a given
contingency  the method in step  a is a modification of a standard method found in ucpop
and other planners that use secondary preconditions  essentially  the idea is to prevent
an effect from occurring by ensuring that the context in which it occurs cannot hold  the
method in  b prevents an effect from occurring in a contingency by forbidding the execution
of the step that produces it  the method in step  c notes that the established step or effect
cannot occur in a given contingency  if any of these techniques result in inconsistent labeling
of any plan element  so that  for example  it cannot occur in every contingency in which
it is required  the resulting partial plan is abandoned  as it represents a dead end in the
search space 
   

fipryor   collins
      establishing open conditions

figure    shows the procedure used  procedure establishpre shows the methods of adding
a new step and reusing an existing step  they are essentially the methods used in ucpop
extended to reect the need to check and propagate contingency labels 
procedure establishunk shows methods of adding a new decision and reusing an existing
decision that are specific to cassandra  the issues involved were discussed in section     

   issues in contingency planning

cassandra is a partial order planner directly descended from ucpop  which is sound  complete  and systematic all plans produced by ucpop are guaranteed to achieve their goals 
if there is a plan then ucpop will find it  and ucpop never revisits a partial plan  in this
section we discuss these properties and related issues in the context of contingency planning 

    soundness

ucpop s soundness depends on the perfect knowledge assumptions discussed in section   
in particular  ucpop s plans are sound if the initial conditions are fully specified  and if

all possible effects of actions are specified in the operators that represent them  if no
uncertainties are involved in the plan  cassandra is equivalent to ucpop and therefore
constructs sound plans 
if uncertainties are involved in the plan  it can no longer be assumed that the initial
conditions and effects of actions are fully specified  indeed  the uncertainties arise because
these assumptions are violated  however  the assumptions can be adapted to account for
the presence of uncertainty  it would be possible  for example  to insist that all possible
initial conditions and action effects are specified  in cassandra s representation  this means
that every source of uncertainty must be specified through the use of unknown secondary
preconditions  and every possible outcome of each source of uncertainty must be specified 
we conjecture that cassandra is sound under these conditions  the proof would follow
because the procedure for adding in new goals whenever a new source of uncertainty is
encountered ensures that every goal is achieved in every possible outcome of the uncertainty 

    completeness

we conjecture that cassandra is complete in the limited sense that  if there is a sound plan
of the form that it can construct  then cassandra will find it  we believe that this is a simple
extension of ucpop s completeness  if there are no uncertainties involved  cassandra will
always find a plan in the same way as ucpop  the introduction of a source of uncertainty
into a plan leads to the addition of new contingent goals  cassandra will find a plan for
each of these new goals in the appropriate contingency  thus  if the goal can indeed be
achieved in every contingency  cassandra will find a plan that achieves it  as long as there
is a way of determining which contingency holds 
for example  the plan to disarm a bomb that we described in section     relies on there
being a method of determining which package the bomb is in  in mcdermott s presentation
of this example  the two packages are indistinguishable  and the point of the example is to
illustrate that there is nonetheless a plan that will succeed in disarming the bomb  namely 
   

fiplanning for contingencies  a decision based approach
establish  plan  open 

   if the open condition is not of type  unknown do establishpre  plan  open  and return the resulting list
of plans 
   if the open condition is of type  unknown with source of uncertainty uncertainty and outcome outcome
do establishunk  plan  open  uncertainty  outcome  and return the resulting list of plans 

establishpre  plan  open 

   initialize list newplans 
   for each effect eff resulting from a step step in plan
if eff can occur in every contingency in which open must be established
and if eff can precede the step supstep that open is required to support
and if there is a postcondition effcond of eff that can unify with condition cond that open is required
to establish 
complete the link open by using eff as the establishing effect 
add the resulting partial plan to newplans 
   for each operator with an effect eff with a postcondition effcond that can unify with cond 
instantiate a new step step 
complete the link open by using eff as the establishing effect 
add the enabling preconditions of step as open conditions 
add the resulting partial plan to newplans 
   for each plan in newplans 
add an ordering to ensure that step precedes supstep 
add the bindings necessary to ensure that effcond unifies with cond 
add the secondary preconditions secpre of eff as open conditions 
propagate labels as appropriate 
   return newplans 

establishunk  plan  open  uncertainty 

outcome 
   initialize list newcplans 
   if uncertainty is a new source of uncertainty in the plan 
add a new decision step decstep for uncertainty uncertainty 
add new top level goals as open conditions with the appropriate labels 
add the resulting partial plan to newcplans 
   if uncertainty is an existing source of uncertainty in the plan 
find an existing decision step decstep for uncertainty uncertainty 
add the resulting partial plan to newcplans 
   for each plan in newcplans 
modify the decision rule in decstep for outcome to include cond as an antecedent 
add  know if cond  as an open condition required to establish decstep 
add orderings to ensure that decstep precedes supstep 
propagate labels as appropriate 
   return newcplans 

figure     establishing open conditions
   

fipryor   collins
dunking both packages  mcdermott         the algorithm described in the previous section
cannot find a plan in this situation because it is impossible to achieve the preconditions of
the decision step that determines which package to dunk  in section       we discuss this
example in more detail and describe a simple extension to cassandra that allows the correct
plan  to dunk both packages  to be found 
ucpop s completeness  like its soundness  depends on the perfect knowledge assumptions we discussed in section    cassandra s completeness depends on three extensions to
these assumptions 


all sources of uncertainty are specified 



the specified outcomes are exhaustive 



there are actions available that allow the determination of the outcome of any uncertainty  even if only indirectly 

unfortunately  these conditions are necessary but not sucient  cassandra can only
find plans if the actions that it uses to determine the contingency do not interfere with
the achievement of the goal  for instance  there might be a dropping action available that
would detonate any bomb inside the package that was dropped  this is certainly an action
that allows the determination of the outcome of the uncertainty  but there is no sound plan
that makes use of it 
in order to have a useful notion of cassandra s completeness  we must therefore specify the form of the plans that it can construct  this problem is common to proving the
completeness of any planner  for example  we do not claim that snlp  say  is incomplete
because it cannot find a plan for the bomb in the toilet problem  we say instead that there
is no valid plan of the form that it can construct  it is fairly simple to specify the form
of the plans that snlp can construct  they consist of partially ordered sequences of steps 
all of which are to be executed  the introduction of contingencies makes the description
of cassandra s plans rather more complex  we have yet to formalize a description  but are
actively working in that direction  informally  cassandra can only construct plans that for
every source of uncertainty include a step to decide on one of the relevant plan branches 
the extension of cassandra that solves the bomb in the toilet problem can do so because
it can construct plans that do not meet this criterion 

    systematicity

ucpop is systematic  it will never visit the same partial plan twice while searching  cas 

sandra  as described in this paper  is not systematic  it may visit some partial plans in the
search space more than once  consider again the plan to disarm a bomb that we discussed
in section      in this plan  there are two different ways of establishing the goal to disarm
the bomb  by dunking package    and by dunking package    cassandra can initially choose
either way of establishing the goal  leading in each case to the introduction of a contingency
and the necessity of replanning to achieve the goal in the other contingency  both search
paths arrive at the same final plan  so the search is not systematic 
cassandra could be made systematic by insisting on handling the contingencies only
in a certain order  the search path that uses the other order being treated as a dead end 
   

fiplanning for contingencies  a decision based approach
however  this extension has not been added as there is currently some debate as to the
desirability of systematicity  for example  langley        argues that a non systematic
search method  iterative sampling  is often better than a systematic method  depth first
search  for problems which have multiple solutions and deep solution paths  peot and
smith        observe that the performance of a non systematic version of snlp was better
than that of the original systematic version  they ascribed this behavior to the fact that
exploring duplicate plans consumed less overhead than did ensuring systematicity 

    knowledge goals
an agent executing contingency plans must be able to acquire information about the actual
state of the world so that it can determine which of the possible courses of action to pursue 
a system that constructs contingency plans must be able to plan for this information
acquisition  in general  the acquisition process may be arbitrarily complex  pryor   collins 
      
an early and inuential discussion of goals to possess knowledge about the world was
that by mccarthy and hayes         since then  various theories have been developed to
account for them  e g   moore        haas        morgenstern        steel         the
common thread in all this work is that knowledge goals arise from the need to specify the
actions that are to be performed  in other words  from the need to make actions operational   work in this area has on the whole concentrated on being able to describe and
represent knowledge goals  and has largely ignored the issues involved in building planners
that construct plans containing them 
the structure of cassandra is based on the notion that knowledge goals arise out of
the need to make decisions as to the actions to be performed  pryor         in our view 
planning is the process of deciding what to do in advance of when it is done  collins 
       in a world conforming to the perfect knowledge assumptions of classical planning
this is always possible because the world is totally predictable  and plans therefore need
contain no knowledge goals  however  when those assumptions are relaxed it may not be
possible to make all decisions in advance if the information necessary to make them is not
available to the planner  the information may be unavailable either because of the planner s
limited knowledge of the world or because the events that will nondeterministically cause
the conditions that affect the decisions have not yet occurred  in both cases it may be
possible for the planner to determine that a decision must be made even though it cannot
at that time actually make it  in this case the planner can defer the decision  plan to make
it in the future  when the necessary information will be available  part of the plan is then
to acquire the information  the plan thus contains knowledge goals 
cassandra s use of  unknown  preconditions to indicate nondeterminism is thus a crucial
part of its mechanism  in cassandra  knowledge goals arise as the result of deferring decisions  these deferred decisions are represented explicitly in its plans  and themselves arise
directly from the incompleteness of cassandra s knowledge of the world  whether through
the effects of nondeterministic actions or through incompletely specified initial conditions 
both these forms of uncertainty are handled in the same way  once cassandra has recognized the need to defer a decision  the reason for its deferral is not important except
inasmuch as it results from incomplete knowledge of the world 
   

fipryor   collins
the view of knowledge goals as arising from deferred decisions is basically consistent
with the view that they are needed in order to make actions operational  but differs from the
traditional view in that knowledge goals are not directly preconditions of physical actions 
but are instead preconditions of actions that make decisions  for example  mccarthy and
hayes consider the problem of a combination safe  it is commonly held that the action of
opening the safe has a precondition to know the combination  in cassandra  however  the
goal of knowing the combination would arise as a subgoal of deciding which plan branch to
follow  where there would be a branch for each possible combination   the branches would
arise because of cassandra s incomplete knowledge of the world  the initial conditions in
which the plan will be executed are not fully specified 
cassandra uses a variant of the syntactic approach proposed by haas        to represent
knowledge goals  limiting knowledge goals to the form know if fact   this turns out to be
adequate if  as we assume  all possible outcomes of any given uncertainty are known  in
general  the representation used by cassandra  based on the strips representation of add
and delete lists  is less powerful than the logics proposed by either morgenstern or haas 

    miscellaneous issues in contingency planning
cassandra s approach raises a number of questions concerning the desired behavior of a
contingency planner  many of which do not have obvious answers  in this section we briey
consider a few of the issues raised 
      dependence on outcomes and superfluous contingencies

the fact that a contingency plan assumes a particular outcome of an uncertainty means only
that it cannot depend upon a different outcome of that uncertainty  cassandra does not
enforce any constraint that the plan must causally depend upon the outcome that it assumes 
for instance  in the example described in section        the plan to take ashland does not
actually depend on western being blocked  it could be executed successfully regardless of
the level of trac on western 
this observation raises an interesting question  if a plan for a contingency turns out
not to depend on any outcome of the uncertainty that gave rise to it  would this not
obviate the need for plans for alternative contingencies  for instance  in our example  it
might seem sensible to execute the plan to use ashland regardless of whether western is
blocked  it might thus seem that the planner should edit the plan in some way so as to
eliminate apparently superuous contingencies  however  it can easily be shown that a
version of the plan that does not involve dependence on any outcome of the uncertainty
will be generated elsewhere in the search space  in the example  this would mean that the
planner would in fact consider a plan that simply involved taking ashland  if the search
heuristics penalize plans involving contingencies appropriately this other plan should be
preferred to the contingency plan  all other things being equal 
   this raises the obvious question as to whether planning in advance for every possibility is a sensible
thing to do  see section     for a discussion of this issue 

   

fiplanning for contingencies  a decision based approach
      one sided contingencies

the preceding discussion notwithstanding  a plan involving no contingencies is not always
superior to a plan involving a contingency  this is why a planner might in fact construct a
plan like the western ashland one  to take a more clear cut example  suppose pat needs
    to bet on a horse  she might try to borrow the     from chris  but the outcome of this
action is uncertain chris might refuse  alternatively  she could rob a convenience store 
while the robbery plan would  we shall stipulate  involve no uncertainties  it is a bad plan
for other reasons  it would be better to first try to borrow     from chris  and then  if that
fails  rob the convenience store  cassandra could generate this plan  in order to make it
prefer the plan to the contingency free alternative  however  its search metric would have to
take into account the estimated costs of various actions  and to perform something akin to
an expected value computation   see  for example  feldman   sproull        haddawy  
hanks        for discussions of decision theoretic measures applied to planning   in order to
execute the plan properly  it would also be necessary for it to have some way of knowing that
the borrowing plan should be preferred to the robbery plan if it were possible to execute
either of them 
      identical branches

it is possible that a single plan could work just as well for several different outcomes of
an uncertainty  for instance  suppose the action of asking chris for     has three possible
outcomes  either pat gets the money and chris is happy  at having had the opportunity
to do a favor   or pat gets the money and chris is unhappy  at having been obliged to do
a favor   or pat does not get the money at all  if pat constructs a plan in which she tries
to borrow     from chris to bet on a horse  then  assuming that this plan does not depend
upon chris s happiness  which it might  for example  if pat needed to get a ride to the track
from chris   the plan will work for either the  get money   chris happy  outcome or the
 get money   chris unhappy  outcome 
cassandra could find such a plan  but would in effect have to find it twice once for
each outcome of the uncertainty and it would still require a decision step to discriminate
between those outcomes  this is inecient in two ways  the extra search time required
to find what is essentially the same plan twice is wasted  and effort is put into making an
unnecessary decision  we are looking into ways to avoid the former problem  the latter
could be solved by a post processor that would  merge  identical contingency plans  but
we have not implemented this technique 
      branch merging

it is possible to construct a plan in which branches split and then reunite  for instance 
consider the western ashland plan once again  the context in which the goal to get to
evanston arises might be an obligation to deliver a toast at a dinner to be held in an
evanston restaurant  the contingency due to uncertainty about trac on western avenue
would in this case seem to affect only the portion of the plan concerned with getting to
evanston  it probably has little bearing on the wording of the toast  the choice of wine  and
so on  the most natural way to frame this plan might thus be to assume that regardless of
   

fipryor   collins
which contingency is carried out  the planner will eventually arrive at a certain location in
evanston  and from that point a single plan will be developed to achieve the final goal 
constructing the plan in this way would result in a more compact plan description  and
might thus reduce the effort needed to construct the plan by avoiding  for example  the
construction of multiple copies of the same subplan  we are considering methods by which
branch re merging might be achieved  but all the methods we have considered so far seem
to complicate the planning process considerably 
      fail safe planning

as we discussed in section      cassandra s operation relies on being able to determine 
even if only indirectly  the outcome of any uncertainty  however  this may not always be
possible  and it is not a necessary precondition for the existence of a viable plan  in the
bomb in the toilet problem  for example  there is a valid plan that cassandra cannot find 
to dunk both packages 
this suggests a method for constructing plans in the face of uncertainty when the
outcome of the uncertainty cannot be determined what one might call fail safe plans 
whenever uncertainty arises it is in principle possible that there might be a non contingent
plan that would achieve the goal whatever the outcome of the uncertainty  to find such
a plan  the planner must construct a version of the contingency plan in which all actions
in the contingency branches arising from the uncertainty will be executed unconditionally 
cassandra has been extended in just such a way  by adding a new type of decision  one
to execute all branches in parallel  collins   pryor         a plan containing such a
decision is only sound if none of the actions that must be performed to achieve the goal
in one contingency interfere with any of the actions that must be performed in any other
contingency  and the ability to perform the actions is independent of the outcome of the
uncertainty  these conditions clearly hold for the bomb in the toilet problem 
cassandra can reason about this possibility because its labeling scheme distinguishes
those actions that must not be performed in a given contingency from those that need not
be performed  it is possible to execute all branches only if the actions in each branch may
be performed  but need not  in all the other branches 
when a parallel decision is added to the plan in the extended version of cassandra  new
goals are added in the usual way but the labeling is handled differently  the branches are
not separated  so that cassandra can no longer reason that the causal links in one branch
will not be affected by actions in another branch 
      contingent failure

cassandra can produce a plan only if it is possible to achieve the goal of the plan in all
possible contingencies  often  however  the goal cannot in fact be achieved in some outcome
of the underlying uncertainty  consider  for instance  peot and smith s example of trying to
get to a ski resort by car  when the only road leading to the resort is either clear or blocked
by snowdrifts  peot   smith         if the road is clear  then the goal can be achieved  but
if it is blocked  all plans are doomed to failure 
no planner can be expected to recognize the impossibility of achieving a goal in the
general case  chapman         however  a possible approach is suggested by peot and
   

fiplanning for contingencies  a decision based approach
smith  we could introduce an alternative method of resolving open goal conditions  simply
assume that the goal in question fails 
this is an undesirable method of resolving open goal conditions if the subgoal is in fact
achievable  so in theory plans involving contingent failure should be considered only after
the planner has failed to find a plan in which all goals are achieved  this is sometimes
possible  but in general the problem of determining whether there is a successful plan is
undecidable  there may always be partial plans that do not involve goal failure but that
cannot be completed  for example  as a partial plan is modified it may become more
and more complex  the resolution of each open condition involving the introduction of more
unachieved subgoals  in this case  plans involving contingent failure will never be considered
unless they are ranked above some plans that do not involve contingent failure  in order to
be generally useful  the approach must be weakened  instead of considering goal failure only
after all other avenues of attack have failed  apply a high fixed penalty to plans involving
failed goals  the aim would be to fix the penalty high enough that contingent failure would
only apply in genuine cases of goals being unachievable  however  this would of necessity
be a heuristic approach and completeness would be lost 

   related work
cassandra is constructed using ucpop  penberthy   weld        as a platform  ucpop
is a partial order planner that handles actions with context dependent effects and universally quantified preconditions and effects  ucpop is an extension of snlp  barrett et al  
      mcallester   rosenblitt        that uses a subset of pednault s adl representation
 pednault        
an early contingency planner was warren s warplan c         contingency planning
was more or less abandoned between the mid seventies and the early nineties   until sensp
 etzioni et al         and cnlp  peot   smith         both sensp and cnlp are members
of the snlp family  sensp is  like cassandra  based on ucpop  and cnlp is based directly
on snlp  c buridan  draper et al       a  draper  hanks    weld      b   a probabilistic
contingency planner  is based on the probabilistic planner buridan  kushmerick  hanks 
  weld         which is itself based on snlp  and on cnlp  plinth  goldman   boddy 
    a      b  is a total order planner based on mcdermott s pedestal         and is
strongly inuenced by cnlp in its treatment of contingency plans 
warplan c  unlike the other planners considered here  did not use a strips based
action representation  but was based on predicate calculus  it could handle actions that
had just two possible outcomes  and did not merge the resulting plan branches 
sensp also differs from the other planners considered here  it represents uncertainty
through the use of run time variables  distinguished from ordinary variables by being treated
as constants whose values are not yet known  in sensp plan branches arise from the
introduction of information gathering steps that bind the run time variables  sensp handles
plan branching by constructing separate plans that each achieve the goal in a particular
contingency  it then combines the separate plans at a later stage  keeping the branches
totally separate  sensp thus considers contingency branches separately  rather than in
   neither noah  sacerdoti        nor interplan  tate        explicitly addressed issues of uncertainty 
although both tackled problems involving it  collins   pryor        

   

fipryor   collins
parallel  actions that achieve knowledge goals may not have preconditions in sensp  this
restriction is required in order to maintain completeness 
not surprisingly  cassandra  cnlp  and c buridan  and to a lesser extent plinth  are
in many respects very similar  all except plinth use the basic snlp algorithm  and all use
extended strips representations  cassandra differs from cnlp and plinth principally in
the way that uncertainty is represented  section       this difference has important implications for the handling of knowledge goals  section       the principal difference between
cassandra and c buridan lies in the latter s use of probabilities  section      
contingency planning is only one approach to the problem of planning under uncertainty  the aim of contingency planning is to construct a single plan that will succeed
in all circumstances  it is essentially an extension of classical planning  there are other
approaches to planning under uncertainty that do not share this aim  probabilistic planners
aim to construct plans that have a high probability of succeeding  section       systems that
interleave planning and execution do not attempt to plan fully in advance  section      
in both these approaches it is possible to address the problem of determining which contingencies should be planned for  which is not currently possible in cassandra  a third
approach is that of reactive planning  in which behavior is controlled by a set of reaction
rules  section      

    the representation of uncertainty
in cnlp and plinth  uncertainty is represented through a combination of uncertain outcomes of nondeterministic actions and the effects of observing those outcomes  a threevalued logic is used  a postcondition of an action may be true   false   or unknown   for
example  the action of tossing a coin might have the postcondition unk side up  x   special conditional actions   each of which has an unknown precondition and several mutually
exclusive sets of postconditions  are then used to observe the results of the nondeterministic actions  in the example  the operator to observe the results of tossing a coin might
have the precondition unk side up  x  with three possible outcomes   side up heads  
 side up tails   and  side up edge  
cnlp thus spreads the representation of uncertainty over both the action whose execution produces the uncertainty and the action that observes the result  a consequence of
this is that cnlp cannot use the same observation action to observe the results of different
actions  for example  it would require different actions to observe the results of tossing a
coin  which has three possible outcomes  and tipping a coin that had landed on its edge
 which has two possible outcomes  
in plinth  the notion of a conditional action is extended to cover any action  not only
observation actions  that has nondeterministic effects on the planner s world model   for
example  in an image processing domain an operator to remove noise from an image may
or may not succeed  however  its outcome is evident as soon as it has been applied  and no
special observation action is required 
in cnlp and plinth  information gathering actions are included in a plan whenever an
action with uncertain effects occurs  this is necessary because the uncertainty is actually
represented in the information gathering action rather than in the action that actually
   

fiplanning for contingencies  a decision based approach
produces the uncertainty  knowledge goals are thus not represented explicitly in these two
systems 
the representation used in cnlp and plinth arises out of the desire to use a  single
model of the world  representing the planner s state of knowledge  rather than a more
complex formalization including both epistemic and ground formulas   goldman   boddy 
    b   an operator therefore represents only the effects that the execution of the underlying action has on the planner s knowledge of the world  and not the effects that it has on
the actual state of the world  it is  of course  important to represent how actions affect the
planner s world model  but we believe that it is also important to represent how they affect
the world  after all  the purpose of reasoning about actions is to achieve goals in the world 
not just in the planner s world model  in particular  after the execution of a nondeterministic action its actual effects  although they may indeed be unknown to the planner  have
occurred and cannot now be altered  cassandra s representation reects this  indeed  cassandra can reason about the possible effects without scheduling observation actions  this
means that an extension of cassandra can  for example  solve the original bomb in thetoilet problem  in which there are no possible actions that will resolve the uncertainty as
to which package contains the bomb  the bomb s state is not represented in the planner s
world model at any stage between the beginning  when it is known to be armed  and the
end  when both packages have been dunked and it is known to be safe 
a further implication of this method of representing uncertainty is the diculty of
representing actions whose uncertain effects cannot be determined through the execution
of a single action  consider  for example  a malfunctioning soda machine that has one
indicator that lights when it cannot make change  and another that lights when it has run
out of the product requested  suppoe that  when it is functioning correctly  these two
indicators will not light simultaneously  if it malfunctions  it must be kicked to make it
work  observing either light on its own is not enough to determine which uncertain effect
 working properly or malfunctioning  has occurred 

    knowledge goals
the method of representing uncertainty in cnlp and plinth has important implications
for how knowledge goals are handled in their plans 
the acquisition of information is a planning task like any other  pryor   collins       
      pryor         in general  the sequence of actions required to achieve a given knowledge
goal may be arbitrarily complex  for example  an action to observe a tossed coin might
require that the observer is in the appropriate location  in other cases  there might be
several different possible methods of information gathering  some involving perception  some
involving reasoning  and some a combination  a contingency planner  some of whose plans
will necessarily involve the achievement of knowledge goals  must therefore be able to plan
fully generally for information gathering 
the confusion between the source of uncertainty and the observation of uncertain results
limits the ways in which knowledge goals can be achieved in cnlp and plinth  they must
be achieved through the special observation actions that specify the uncertain outcomes 
this is a result of their representation in terms of the planner s world model  which means
that they do not represent the effects of actions  except to ag them as unknown  until
   

fipryor   collins
the planner has observed them  or otherwise incorporated them into its world model   in
their discussion of this issue goldman and boddy      b  explicitly exclude knowledge
goals from consideration  as they point out  planning under uncertainty requires that a
distinction be made between the actual state of the world and the planner s knowledge
of it  in order to plan effectively for knowledge goals  both must be represented  this is
done in cassandra by separating the representation of uncertainty from the representation
of information gathering  if an effect results deterministically from an action  cassandra
reasons that there is no need to observe it  and it forms part of the world model  an
uncertain effect  on the other hand  is not incorporated unconditionally into cassandra s
world model  it is noted as being possibly true  and  if necessary  cassandra sets up a
subgoal to determine whether it is indeed true 
sensp  which uses the uwl representation for goals and actions  has three different
kinds of precondition that can be used to represent information goals either alone or in
combination  etzioni et al          as well as satisfy preconditions  which may be achieved
through actions or through observation  uwl has hands off preconditions indicating that
the value of propositions must not be changed in order to achieve the subgoal  and find out
preconditions  the latter are in some ways similar to preconditions for know if propositions
in cassandra  a precondition such as  find out  p   v   tells the planner to ascertain
whether or not p has truth value v  under certain circumstances this type of precondition
may be achieved by an action that changes the value of p  knowledge goals may thus be
represented by find out preconditions or satisfy preconditions  often used in conjunction
with hands off preconditions   etzioni et al  argue that knowledge goals should only be
achieved through actions that change the value of the proposition in question when that
change is required for another purpose in the plan  we believe that this is an unnecessary
limitation  and that in some circumstances enforcement actions may be the best way of
achieving knowledge goals 

    probabilistic and decision theoretic planning
when constructing plans  cassandra recognizes the presence of uncertainty but not its
extent  other planners specifically address issues of probability  for example  buridan
constructs plans whose probability of achieving the goal is above a given threshold  kushmerick et al          and drips uses the utility of the different possible outcome of various
plans to choose the one with the highest expected utility  haddawy   suwandi        
neither buridan nor drips constructs contingency plans  i e   plans that involve alternative courses of action to be performed in different circumstances  c buridan  which is based
on buridan  constructs contingency plans that are likely to succeed  draper et al       b 
    a   it represents an extension of cnlp in the direction of decision theoretic planning 
probabilistic planners use information about the probabilities of the possible uncertain
outcomes to construct plans that are likely to succeed  cassandra  on the other hand  cannot
use such information and constructs plans that are guaranteed to succeed  probabilistic
planning  because it relies on explicit probabilities  is both more and less powerful than
the deterministic contingency planning performed by cassandra  cassandra cannot use
information about probabilities but it can construct plans in circumstances in which no
such information is available  for example  in order to solve the bomb in the toilet problem 
   

fiplanning for contingencies  a decision based approach
c buridan would have to have some information  or at least make an assumption  about

the probabilities of the bomb being in each package  whatever assumptions are made might
turn out to be wrong  thus invalidating the basis of the plan 
we believe that it would be possible to build a probabilistic planner using ideas from both
c buridan and cassandra  because of the explicit representation of decisions in cassandra 
such a planner would provide an excellent opportunity for investigating the use of different
decision procedures  c buridan relies on having full knowledge of all the probabilities at
the time that it constructs its plans  this knowledge  like any other  may not be available
until the plan is executed  it would be relatively simple to add decision procedures to
cassandra s decision representation that depend on information about probabilities  e g  
to follow a particular course of action if the probability of a given outcome exceeds a
certain value  the introduction of such decision procedures might  of course  result in the
introduction of knowledge goals to determine probabilities  possibly leading eventually to a
system that would construct plans to perform empirical studies to determine probabilities 
a problem associated with contingency planning is that of branch merging  i e   the
determination of whether two steps in separate branches can be treated as the same step 
c buridan performs full merging  this is an effect of the probabilistic algorithm on which
it is based  adding this capability to cassandra is an area of future work  a major
problem encountered when considering branch merging is how to identify the variables in the
different branches with each other  c buridan s representations do not include variables 
so the problem does not arise  this may cause diculties in the adaptation of c buridan s
merging mechanism for cassandra s use 
an advantage of combining probabilistic planning and contingency planning is the resulting ability to judge whether it is worth planning for a given contingency  one of the
limitations of cassandra in its present form is the requirement that every possible contingency be planned for  in complex situations this makes the resulting plans cumbersome 
moreover  cassandra s performance deteriorates with the number of distinct branches in
the plan  the cost of determining that the presence of a particular branch would not significantly change the probability of the plan s success might well be much less than the cost
of constructing that branch  this is an interesting issue to be considered in the future 

    interleaving planning and execution

although cassandra s plans may include sensing actions  with the course of action that
will actually be executed depending on the results of those actions  cassandra does not
interleave planning with execution  plans are fully specified before they are executed  in
some circumstances this is clearly very inecient  consider  for example  how cassandra
constructs a plan to open a combination safe  see section       it requires prior knowledge
of all possible combinations  and then constructs a plan with a branch for each combination 
an obvious alternative would be to construct a plan that was fully specified up to
the information gathering step  execute the plan to that stage and  once the information
has been gathered  construct the rest of the plan    this could be done in cassandra by
introducing another type of decision procedure  that of planning to achieve the goal  and
assuming that it would always be possible to find a plan to achieve the goal  this is a strong
    see section     for further discussion of this issue and an alternative approach 

   

fipryor   collins
assumption  but would certainly be valid in cases such as the problem of opening a safe 
this is an area of future work  interleaving planning and execution in this way would have
the advantage that it would not be necessary to plan for contingencies that do not actually
arise  it would however lose some of the advantages of planning in advance  for example 
possible interference between actions performed before and after the information gathering
might be missed  leading the planner to find suboptimal plans  indeed  as sensing actions
may in general change the world  executing them before full construction of a viable plan
might have the unfortunate result of making the achievement of the goal impossible 
planners that interleave planning and execution include ipem  ambros ingerson   steel 
       xii  golden  etzioni    weld        and sage  knoblock         all three use the
same basic interleaving technique  only when no further planning is possible are steps
executed  they thus do not set out to decide in advance exactly when further planning will
be necessary  and their plans do not include explicit provision for further planning  the
effects of different interleaving strategies were investigated in the design of bump  olawsky
  gini         in the continue elsewhere strategy as much preplanning as possible was
performed  in the stop and execute strategy  goals defined in terms of sensor readings
were executed as soon as they were encountered  it was found that neither strategy had a
clear advantage over the other  in that both strategies sometimes produced plans that were
suboptimal or that might fail 

    reactive planning

a different approach to the problem of planning under uncertainty is taken in the reactive
planning paradigm  in this approach  no specific sequence of actions is planned in advance 
just as for contingency planning  the planner is given a set of initial conditions and a goal 
however  instead of producing a plan with branches  it produces a set of condition action
rules  for example  universal plans  schoppers        or situated control rules  scrs 
 drummond        
in theory  a reactive planning system can handle exogenous events as well as uncertain
effects and unknown initial conditions  it is possible to provide a reaction rule for every
possible situation that may be encountered  whether or not the circumstances that would
lead to it can be envisaged  in contrast  a contingency planner such as cassandra cannot
handle exogenous events as it cannot predict them  cassandra and other contingency planners focus their planning effort on circumstances that are predicted to be possible  or likely 
in the case of a probabilistic contingency planner such as c buridan  
it would be possible to represent cassandra s contingency plans as sets of conditionaction rules  by using the causal links and preconditions to specify the conditions in which
each action should be performed  however  more reasoning is required at execution time
to use reaction rules than is required to execute a contingency plan  instead of simply
executing the next step in the plan  reasoning only at branch points  the use of reaction
rules requires the evaluation of conditions on every cycle in order to select the relevant rule 

   discussion

we have described cassandra  a partial order contingency planner that can represent uncertain outcomes and construct contingency plans for those outcomes  the design of cassandra
   

fiplanning for contingencies  a decision based approach
is based on a coherent view of the issues arising in planning under uncertainty  it recognizes
that  in an uncertain world  a distinction must be drawn between the actual state of the
world and the planner s model of it  it instantiates an intuitively natural account of why
knowledge goals exist and how they arise  and it bases its treatment of plan branching on
the requirements of the agent that will execute the plan  as a result  cassandra explicitly
plans to gather information and allows information gathering actions to be fully general 
the coherence of its design provides a solid base for more advanced capabilities such as the
use of varying decision making procedures 

    contributions
the principal contribution of this work lies in the explicit representation of decision steps
and the implications this has for the handling of knowledge goals  cassandra is  we believe 
the first planner in which decisions are represented as explicit actions in the plans that it
constructs  cassandra s knowledge goals arise specifically from the need to decide between
alternative courses of action  as preconditions of the decision actions  cassandra is thus
consistent with the view that planning is the process of making decisions in advance  in
this view  contingency plans are plans that defer some decisions until the information on
which they are based will be available  pryor         different plan branches correspond to
different decision outcomes 
through its use of explicit decision steps  cassandra distinguishes between sensing or
information gathering actions on the one hand  and decision making on the other  one
important reason for making this distinction is that a decision may depend on more than
one piece of information  each available through performing different actions  in addition 
separating information gathering from decision making provides a basis for introducing alternative methods for making decisions  for example  the extension to cassandra described
in section       introduces a type of decision that directs the executing agent to perform
all branches resulting from a given source of uncertainty  which allows the construction of
plans that can succeed in situations in which there is no way of telling what the actual outcome is  e g   the bomb in the toilet problem   we believe that the explicit representation
of different methods for making decisions is an important direction for future research 
because knowledge goals arise as preconditions of decisions in cassandra  the need to
know whether a particular plan branch will work is distinguished from the need to know the
actual outcome of an uncertainty  cassandra does not plan to determine outcomes unless
they are relevant to the achievement or otherwise of its goals  moreover  cassandra does not
treat knowledge goals as special cases  plans to achieve them may be as complex as plans
to achieve any other goals  as well as planning to achieve knowledge goals that arise as
preconditions of decisions  cassandra can also produce plans for top level knowledge goals 
two other features of cassandra are worth noting  the exibility afforded by its labeling
scheme  and the potential for learning and adaptation afforded by its representation of
uncertainty 
cassandra s labeling scheme  although complex  allows the agent executing the plan
to distinguish between three classes of action  those that must be executed in a given
contingency  those that must not  and those whose execution will not affect the achievement
   

fipryor   collins
of the goal in that contingency    this feature paves the way for the extension described
above that allows cassandra to build plans requiring the execution of all branches resulting
from a source of uncertainty 
cassandra s representation makes no assumptions as to the intrinsic nature of uncertainty  an unknown precondition simply denotes that the information as to what context
will produce a particular effect from an action is not available to the planner  it may be
that this information is in principle unknowable  in domains involving quantum effects  for
example   it is much more likely that the uncertainty results from the limitations of the
planner or of the information available to it  in general  an agent operating in a real world
domain will be much more effective if it can learn to improve its performance and adapt to
changing conditions  the use of unknown preconditions to represent uncertainty means that
in some circumstances it would be relatively simple to incorporate the results of such learning and adaptation into the planner s domain knowledge  for example  the planner might
discover how to predict certain outcomes  it could then change the unknown preconditions
into ones reecting the new knowledge  if  on the other hand  it discovered that predicted
effects were consistently failing to occur  it could change the relevant preconditions into
unknown ones 

    limitations

cassandra is one of an increasing number of planners that aim to extend the techniques of
classical planning to more realistic domains  cassandra is designed to operate in domains
in which two of the three principal constraints observed by classical planners are relaxed 
namely  we allow non deterministic actions and incomplete knowledge of the initial conditions  cassandra is  however  subject to the third constraint  that changes do not take place
except as a result of actions specified in the plan  this clearly limits its effectiveness in
many real world domains  moreover  there are limits on the extent of the nondeterminism
and incompleteness of knowledge that are handled  cassandra s plans will not necessarily
achieve their goals if sources of uncertainty are ignored  or if all possible outcomes are not
specified 
cassandra cannot make use of information about how likely particular outcomes are 
unlike probabilistic or decision theoretic planners  it cannot plan to interleave planning and
execution  and it does not provide reaction rules for all possible circumstances  it can only
solve problems for which there are valid plans involving ways of discriminating between
possible outcomes  the algorithm given here cannot solve the original version of the bombin the toilet problem  although the extension described in section       can do so  collins
  pryor        
the algorithm described in this paper has two major practical limitations  first  the
plans it produces are often more complex than necessary  and second  the time taken to
produce plans precludes its use on all except simple problems 
the complexity of cassandra s plans results from the necessity of planning for every
contingency and from the lack of branch merging  for example  suppose you had to open a
combination safe so that you could obtain the money to pay for an evening out  cassandra s
    not all agents can make use of this information  as there is no guarantee that the third type of step will
actually be executable 

   

fiplanning for contingencies  a decision based approach
plan for the goal of enjoying an evening out would have one branch for each possible safe
combination  each branch would start off with the actions to open the safe  which are
different for each combination  and would continue with the actions of going to a restaurant
and then to the movies  say  which would be identical in each branch  a simpler plan would
merge the separate branches after the safe had been opened  the consideration of methods
for branch merging is an area of future work  see sections       and      
in some circumstances  such as in this example  plan complexity could be reduced
through the use of run time variables  which were introduced in ipem  ambros ingerson
  steel        and used in sensp  etzioni et al          see section     when the only
uncertainty is in the value that an action parameter takes  which is the case when opening
a combination safe  it would be possible to use a run time variable to represent that parameter  obviating the need for separate plan branches  implementing this strategy would
require effective methods for determining when the effects of uncertainty are limited to
parameter values  in general  this notion indicates a possible approach to the problem of
branch merging  that of taking a least commitment approach to variable binding  in the
same way that a least commitment approach is taken to step ordering in a partial order
planner  this would then allow the concept of  conditional  variable binding  a variable
binding could be labeled as being required or forbidden in a given contingency 
we have not analyzed the complexity of cassandra s algorithm  but we believe it to
be exponential  this is because of the effect of multiple plan branches  whose presence
not only increases the number of steps in a plan but also increases the number of potential
interactions and the number of ways of resolving them  certainly  our subjective impression
is that cassandra runs even more slowly than other planners in the snlp family  effective
domain independent search control heuristics are dicult to find  and in many of the  toy 
domains in which we have used cassandra even problem specific heuristics are hard to come
by 

    conclusion
cassandra is a planning system based firmly in the classical planning paradigm  many of
its strengths and weaknesses are those of other classical planning systems  for example  we
believe that under certain circumstances its plans will be valid and that it is guaranteed
to find a valid plan if one exists  however  the techniques it uses are valid only in limited
circumstances  and its computational complexity is such as to make direct scaling up unlikely
to be feasible 
in our view  the principal strengths of cassandra arise from the explicit representation of
decisions in its plans  we have shown how this use of decisions provides a natural account
of how knowledge goals arise during the planning process  we have also sketched how
decisions can be used as the basis of extensions that provide added functionality  a new
type of decision allows fail safe plans  which can provide a method of solving problems such
as the bomb in the toilet problem  section         and another type of decision may provide
an effective method of interleaving planning and execution  section      
we believe that the use of explicit decision procedures will enable the extension of the
range of applicability of techniques of classical planning  in general  the idea of constructing
a single plan that will succeed in all circumstances is  we feel  unlikely to be productive 
   

fipryor   collins
the real world is complex and uncertain enough that trying to predict its behavior in detail
is simply impossible  however  the use of decision procedures that  for example  involve
probabilistic techniques or interleave planning and execution  appears likely to provide a
exible framework that  although inevitably sacrificing completeness and correctness  will
provide a basis for effective  practical planning in the real world 

appendix a  cassandra s plans
this appendix shows the plans constructed by cassandra for the examples in the body of the
paper  each plan consists of initial conditions  plan steps and goals  the initial conditions
are shown at the top of the plan  those that are unknown are shown as depending on
a particular contingency  the plan steps are shown next  each is shown with a number
denoting its order in the plan  the numbers in parentheses show the order in which the
steps were added to the plan  to the right of each step are its contingency labels  for
brevity  the individual effects of each step are always omitted and the links that establish
the step s enabling and secondary preconditions are often omitted 
finally  at the bottom of the plan come the goal conditions  the goal is stated first 
then each contingency goal is shown with the links that establish it  as usual  contingency
labels are to the right 

a   a plan to get to evanston
this is the plan shown in figure   and discussed in section        note the decision step
with a single active decision rule  this is the situation discussed in the comments on onesided contingencies in section      the route using western is quicker when it is clear  while
the ashland route is slower but always possible 
initial 

when  traffic s  good   not  traffic bad  
when  traffic s  bad   traffic bad 
 and  at start   road western   road belmont   road ashland  

step

        go to western at belmont 
yes   traffic s  good bad 
 and  not  at start    on western   on belmont  
      at start 

step

        check traffic on western 
 know if  traffic bad  
      on western 

step

        decide traffic s 
 and  not  traffic bad  
t
      traffic s  good 
 and t
      traffic s  bad 
      know if  traffic bad  

step

        take belmont 

yes   traffic s  bad 
no    traffic s  good 
 and  not  on western    on ashland  
      on belmont 

   

fiplanning for contingencies  a decision based approach
step

        take ashland 

yes   traffic s  bad 
no    traffic s  good 

 at evanston 
      on ashland 
step

no    traffic s  good 

        take western 

yes   traffic s  good 
no    traffic s  bad 

 at evanston 
      on western 
      not  traffic bad  
goal 

no    traffic s  bad 
no    traffic s  bad 

 at evanston 
goal
      at evanston 

yes   traffic s  bad 
no    traffic s  good 

      at evanston 

yes   traffic s  good 
no    traffic s  bad 

goal

complete 

a   disarming a bomb

this is the plan shown in figures   and   and discussed in section        note that both
moving steps and both dunking steps are always possible  but each is only necessary in one
outcome of the uncertainty  a fail safe plan  see section      is therefore possible 
initial 

when  unk s  o    contains package   bomb 
when  unk s  o    contains package   bomb 
 and  at package   rug   at package   rug  

step

        x ray package   
 know if  contains package   bomb  

step

        x ray package   
 know if  contains package   bomb  

step

        decide unk s 
 and  contains package   bomb 
t
      unk s  o  
 and  contains package   bomb 
t
      unk s  o  
      know if  contains package   bomb  
      know if  contains package   bomb  

step

        move rug toilet package   
yes   unk s  o  
 and  not  at package   rug    at package   toilet  
      at package   rug 

step

        move rug toilet package   
yes   unk s  o  
 and  not  at package   rug    at package   toilet  
      at package   rug 

step

        dunk package   
 wet package   

yes   unk s  o  

   

fipryor   collins
      at package   toilet 
 disarmed bomb 
      contains package   bomb 
step

        dunk package   
 wet package   
      at package   toilet 
 disarmed bomb 
      contains package   bomb 

goal 

no    unk s  o  
yes   unk s  o  

no    unk s  o  

 disarmed bomb 
goal
      disarmed bomb 

yes   unk s  o  
no    unk s  o  

      disarmed bomb 

yes   unk s  o  
no    unk s  o  

goal

complete 

a   fetching a package

the plan in figure    discussed in section        involves just one source of uncertainty and
hence contains just one decision step  there are two possible ways of achieving the goal 
one for each outcome of the uncertainty 
initial 

 available car   
when  loc s  b   package at location   
when  loc s  a   package at location   
 and  is car car     is car car     location location   
 location location    

step

        ask about package 
 know if  package at location    
      location location   
 know if  package at location    
      location location   

step

        decide loc s 
 and  package at
t
 and  package at
t
      know if
      know if

location   
      loc s  b 
location   
      loc s  a 
 package at location    
 package at location    

step

        drive car   location   
 at location   
      available car   

yes   loc s  a 

step

        drive car   location   
 at location   
      available car   

yes   loc s  b 

goal 

 and  at  loc   package at  loc  

   

fiplanning for contingencies  a decision based approach

goal

yes   loc s  b 
      at location   
      package at location   

goal

no    loc s  a 
yes   loc s  a 

      at location   
      package at location   

no    loc s  b 

complete 

a   fetching another package

the plan in figure    discussed in section        has two sources of uncertainty and two
decision steps  there are four possible ways of achieving the goal  one for each combination
of the outcomes of the two sources of uncertainty 
initial 

step

when
when
when
when
 and

 car s  c    available
 car s  c    available
 loc s  b   package at
 loc s  a   package at
 is car car     is car
 location location    

car   
car   
location   
location   
car     location location   

        ask about car 

yes   loc s  a b 

 know if  available car    
      is car car   
 know if  available car    
      is car car   
step

        decide car s 
yes   loc s  a b 
 and  available car   
t
      car s  c  
 and  available car   
t
      car s  c  
      know if  available car    
      know if  available car    

step

        ask about package 

yes   car s  c  c  

 know if  package at location    
      location location   
 know if  package at location    
      location location   
step

        decide loc s 
 and  package at
t
 and  package at
t
      know if
      know if

yes   car s  c  c  
location   
      loc s  b 
location   
      loc s  a 
 package at location    
 package at location    

step

        drive car   location   

yes   loc s  a  car s  c  

   

fipryor   collins
no    car s  c  
 at location   
      available car   
step

no    car s  c  

        drive car   location   

yes   loc s  b  car s  c  
no    car s  c  

 at location   
      available car   
step

no    car s  c  

        drive car   location   

yes   loc s  a  car s  c  
no    car s  c  

 at location   
      available car   
step

no    car s  c  

        drive car   location   

yes   loc s  b  car s  c  
no    car s  c  

 at location   
      available car   
goal 

no    car s  c  

 and  at  loc   package at  loc  
goal
      at location   
      package at location   

yes   loc s  a  car s  c  
no    car s  c  
no    loc s  b 

      at location   
      package at location   

yes   loc s  b  car s  c  
no    car s  c  
no    loc s  a 

      at location   
      package at location   

yes   loc s  b  car s  c  
no    car s  c  
no    loc s  a 

      at location   
      package at location   

yes   loc s  a  car s  c  
no    car s  c  
no    loc s  b 

goal

goal

goal

complete 

a   tossing a coin

in section       we described a plan for ending up with a at coin  the decision in this plan
does not distinguish between the coin landing heads up and tails up the decision rules are
ambiguous 
initial 

 holding coin 

step

        toss coin 
 and  not  holding coin    on table  
      holding coin 

step

        inspect coin 
 and  know if  flat coin    know if  heads up  
 know if  tails up    know if  on edge   

   

fiplanning for contingencies  a decision based approach
step

        decide unk s 
 and  flat coin 
t
      unk s  h 
 and  flat coin 
t
      unk s  t 
 and  on edge 
t
      unk s  e 
      know if  flat coin  
      know if  on edge  

step

        tip coin 

yes   unk s  e 
no    unk s  h t 

 flat coin 
      on edge 
goal 

no    unk s  h t 

 flat coin 
goal
      flat coin 

yes   unk s  t 
no    unk s  h e 

      flat coin 

yes   unk s  h 
no    unk s  t e 

      flat coin 

yes   unk s  e 
no    unk s  h t 

goal

goal

complete 

a   tossing another coin
the plan in figure    has two decisions with unambiguous decision rules  there are four
ways of achieving the goal in this plan  because there are two sources of uncertainty 
initial 

 holding coin 

step

        toss coin 
 and  not  holding coin    on table   know if  flat coin  
 know if  heads up    know if  tails up    know if  on edge   
      holding coin 

step

        decide toss s 
 and  flat coin 
 heads up 
t
 and  on edge 
t
 and  flat coin 
 tails up 
t
      know if
      know if
      know if
      know if

step

      toss s  h 
      toss s  e 

      toss s  t 
 on edge  
 flat coin  
 tails up  
 heads up  

        tip coin 

yes   toss s  e 

   

fipryor   collins
no    toss s  t h 
 and  flat coin   know if  heads up    know if  tails up   
      on edge 
no    toss s  h t 
step

        decide tip s 

yes   toss s  e 
no    toss s  t h 

 and  tails up 
t
      tip s 
 and  heads up 
t
      tip s 
      know if  tails up  
      know if  heads up  
step

        turn over 

 heads up 
      tails up 

no    toss s  h e 

        turn over 

yes   toss s  e  tip s  t 
no    toss s  t h  tip s  h 
no    toss s  t h 

      flat coin 
 heads up 
      tails up 
goal 

h 
no    toss s  t h 
no    toss s  t h 
yes   toss s  t 
no    toss s  e h 
no    toss s  h e 

      flat coin 

step

t 

no    toss s  t h  tip s  h 

 and  flat coin   heads up  
goal
      flat coin 
      heads up 

yes   toss s  e  tip s  t 
no    toss s  t h 
no    toss s  t h  tip s  h 

      flat coin 
      heads up 

yes   toss s  e  tip s  h 
no    toss s  t h 
no    toss s  h t  tip s  t 

      flat coin 
      heads up 

yes   toss s  t 
no    toss s  h e 
no    toss s  e h 

      flat coin 
      heads up 

yes   toss s  h 
no    toss s  t e 
no    toss s  t e 

goal

goal

goal

complete 

a   opening a door
in section       we described a plan for opening a locked door without a key  it is depicted
in figure     the plan that cassandra produces for this situation is shown here  even
though no preconditions of the pick step depend on any effect of the kick step  the former
cannot be performed if the lock is broken as a result of kicking the door  the decision rules
reect this dependence 
   

fiplanning for contingencies  a decision based approach
initial 

 lock intact 

step

        kick 

step

        look 
 and  know if  locked    know if  lock intact  
 know if  foot broken   

step

        decide kick s 
 and   lock intact  
t
      kick s  f 
 and  not  locked  
t
      kick s  l 
      know if  locked  

step

        pick 

yes   kick s  f 
no    kick s  l 

 not  locked  
      lock intact 
step

no    kick s  l 

        open door 

yes   kick s  f 
no    kick s  l 

 open 
      not  locked  
step

no    kick s  l 

        open door 

yes   kick s  l 
no    kick s  f 

 open 
      not  locked  
goal 

no    kick s  f 

 open 
goal
      open 

yes   kick s  f 
no    kick s  l 

      open 

yes   kick s  l 
no    kick s  f 

goal

complete 

acknowledgements
thanks to dan weld and tony barrett for supplying the ucpop code  mark peot and robert
goldman for their comments on earlier drafts  will fitzgerald for many useful discussions 
and the anonymous reviewers for their constructive and helpful criticism  much of this
work was performed while the first author was a student at the institute for the learning
sciences  northwestern university  this work was supported in part by the afosr under
grant number afosr         def  the institute for the learning sciences was established
in      with the support of andersen consulting  part of the arthur andersen worldwide
organization  the institute receives additional support from ameritech and north west
water  institute partners  and from ibm 
   

fipryor   collins

references

allen  j   hendler  j     tate  a   eds            readings in planning  morgan kaufmann 
san mateo  ca 
ambros ingerson  j     steel  s          integrating planning  execution  and monitoring 
in proceedings of the seventh national conference on artificial intelligence  pp       
st paul  mn  aaai  also in  allen  hendler    tate        
barrett  a   soderland  s     weld  d  s          effect of step order representations on
planning  technical report           department of computer science and engineering  university of washington  seattle 
chapman  d          planning for conjunctive goals  artificial intelligence              
also in  allen et al         
collins  g  c          plan creation  using strategies as blueprints  technical report
yaleu csd rr      department of computer science  yale university 
collins  g     pryor  l          achieving the functionality of filter conditions in a partial
order planner  in proceedings of the tenth national conference on artificial intelligence  pp          san jose  ca  aaai 
collins  g     pryor  l          planning under uncertainty  some key issues  in proceedings
of the fourteenth international joint conference on artificial intelligence  pp       
     montreal  canada  ijcai 
draper  d   hanks  s     weld  d       a   a probabilistic model of action for leastcommitment planning with information gathering  in proceedings of the tenth conference on uncertainty in artificial intelligence  pp          seattle  wa  morgan
kaufmann 
draper  d   hanks  s     weld  d       b   probabilistic planning with information gathering and contingent execution  in proceedings of the second international conference
on artificial intelligence planning systems  pp        chicago  il  aaai press 
drummond  m          situated control rules  in proceedings of the first international
conference on principles of knowledge representation and reasoning  pp         
toronto  morgan kaufmann 
etzioni  o   hanks  s   weld  d   draper  d   lesh  n     williamson  m          an approach to planning with incomplete information  in proceedings of the third international conference on knowledge representation and reasoning  pp          boston 
ma  morgan kaufmann 
feldman  j  a     sproull  r  f          decision theory and artificial intelligence ii  the
hungry monkey  cognitive science              also in  allen et al         
fikes  r  e     nilsson  n  j          strips  a new approach to the application of
theorem proving to problem solving  artificial intelligence              also in  allen
et al         
   

fiplanning for contingencies  a decision based approach
golden  k   etzioni  o     weld  d          omnipotence without omniscience  ecient
sensor management for planning  in proceedings of the twelfth national conference
on artificial intelligence  pp             aaai press 
goldman  r  p     boddy  m  s       a   conditional linear planning  in proceedings of
the second international conference on artificial intelligence planning systems  pp 
      chicago  il  aaai press 
goldman  r  p     boddy  m  s       b   representing uncertainty in simple planners  in
proceedings of the fourth international conference on the principles of knowledge
representation and reasoning  pp          bonn  morgan kaufmann 
haas  a  r          a syntactic theory of belief and action  artificial intelligence     
        
haddawy  p     hanks  s          representations for decision theoretic planning  utility
functions for deadline goals  in proceedings of the third international conference
of principles of knowledge representation and reasoning  pp        boston  ma 
morgan kaufmann 
haddawy  p     suwandi  m          decision theoretic refinement planning using inheritance abstraction  in proceedings of the second internatinal conference on artificial
planning systems  pp          chicago  aaai press 
knoblock  c          planning  executing  sensing  and replanning for information gathering  in proceedings of the fourteenth international joint conference on artificial
intelligence  pp            montreal  ijcai 
kushmerick  n   hanks  s     weld  d          an algorithm for probabilistic planning 
artificial intelligence              
langley  p          systematic and nonsystematic search strategies  in proceedings of the
first international conference on artificial intelligence planning systems  pp      
    college park  maryland  morgan kaufmann 
mcallester  d     rosenblitt  d          systematic nonlinear planning  in proceedings of
the ninth national conference on artificial intelligence  pp          anaheim  ca 
aaai 
mccarthy  j     hayes  p  j          some philosophical problems from the standpoint of
artificial intelligence  in meltzer  b     michie  d   eds    machine intelligence    pp 
         edinburgh university press  also in  allen et al         
mcdermott  d          a critique of pure reason  computational intelligence             
mcdermott  d          regression planning  international journal of intelligent systems 
                also available as yale tr yaleu csd rr     
moore  r  c          a formal theory of knowledge and action  in hobbs  j  r     moore 
r  c   eds    formal theories of the commonsense world  ablex  norwood  nj  also
in  allen et al         
   

fipryor   collins
morgenstern  l          knowledge preconditions for actions and plans  in proceedings
of the tenth international joint conference on artificial intelligence  pp         
milan  ijcai 
olawsky  d     gini  m          deferred planning and sensor use  in proceedings of a
workshop on innovative approaches to planning  scheduling and control  pp      
    san diego  ca  darpa 
pednault  e  p  d          extending conventional planning techniques to handle actions
with context dependent effects  in proceedings of the seventh national conference on
artificial intelligence  pp        st paul  mn  aaai 
pednault  e  p  d          adl  exploring the middle ground between strips and the
situation calculus  in proceedings of the first international conference on principles
of knowledge representation and reasoning  pp           morgan kaufmann 
pednault  e  p  d          generalizing nonlinear planning to handle complex goals and
actions with context dependent effects  in proceedings of the twelfth international
joint conference on artificial intelligence  pp          sydney  australia  ijcai 
penberthy  j  s     weld  d  s          ucpop  a sound  complete  partial order planner for adl  in proceedings of the third international conference on knowledge
representation and reasoning  pp          boston  ma  morgan kaufmann 
peot  m  a     smith  d  e          conditional nonlinear planning  in proceedings of
the first international conference on artificial intelligence planning systems  pp 
        college park  maryland  morgan kaufmann 
pryor  l          opportunities and planning in an unpredictable world  technical report    
institute for the learning sciences  northwestern university 
pryor  l          decisions  decisions  knowledge goals in planning  in hallam  j   ed   
hybrid problems  hybrid solutions  proceedings of aisb      frontiers in artificial
intelligence and applications  pp           ios press  amsterdam 
pryor  l     collins  g          information gathering as a planning task  a position paper 
in notes of the aaai workshop on knowledge based construction of probabilistic and
decision models  pp          anaheim  ca  aaai 
pryor  l     collins  g          planning to perceive  a utilitarian approach  in working
notes of the aaai spring symposium  control of selective perception  pp         
stanford  ca  aaai 
pryor  l     collins  g          cassandra  planning with contingencies  technical report     institute for the learning sciences  northwestern university 
sacerdoti  e          a structure for plans and behavior  american elsevier  new york 
schoppers  m  j          universal plans for reactive robots in unpredictable environments 
in proceedings of the tenth international joint conference on artificial intelligence 
pp            milan  ijcai 
   

fiplanning for contingencies  a decision based approach
steel  s          knowing how  a semantic approach  in hallam  j   ed    hybrid problems 
hybrid solutions  proceedings of aisb      frontiers in artificial intelligence and
applications  pp           ios press  amsterdam 
stefik  m       a   planning with constraints  molgen  part     artificial intelligence 
             also in  allen et al         
stefik  m       b   planning with constraints  molgen  part     artificial intelligence 
            
sussman  g  j          a computer model of skill acquisition  american elsevier  new
york 
tate  a          using goal structure to direct search in a problem solver  ph d  thesis 
university of edinburgh 
tate  a          generating project networks  in proceedings of the fifth international
joint conference on artificial intelligence  pp          cambridge  ma  ijcai  also
in  allen et al         
warren  d          generating conditional plans and programs  in proceedings of the
summer conference on artificial intelligence and the simulation of behaviour  pp 
        edinburgh  aisb 
wilkins  d  e          practical planning  extending the classical ai planning paradigm 
morgan kaufmann  san mateo  ca 

   

fi