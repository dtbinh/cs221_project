journal artificial intelligence research               

submitted        published      

engineering note
engineering conformant probabilistic planner
nilufer onder
garrett c  whelan
li li

nilufer mtu edu
gcwhelan mtu edu
lili mtu edu

department computer science
michigan technological university
     townsend drive
houghton  mi      

abstract
present partial order  conformant  probabilistic planner  probapop competed blind track probabilistic planning competition ipc    explain
adapt distance based heuristics use probabilistic domains  probapop
incorporates heuristics based probability success  explain successes
difficulties encountered design implementation probapop 

   introduction
probapop conformant probabilistic planner took part probabilistic track
 th international planning competition  ipc     conformant planner
competed  conformant probabilistic planning paradigm  hyafil   bacchus       
actions state initialization probabilistic  i e   several possible
outcomes annotated probability occurrence  addition  planning problem
conformant  i e   planner construct best plan possible without assuming
results actions performed observed  example conformant
probabilistic planning problem  consider student applying graduate studies  suppose
application needs include several forms prepared student single
letter recommendation written professor  one letter sufficient one
letter acceptable   assume typical professor students department
    probability sending letter time  problem student asks
one professor letter  probability complete application     
student observes professor sent letter due date  way
complete application would late ask another professor  thus 
observation actions useless way student increase chances
getting letter ask one professor send letter    professors
asked  probability getting letter          close    obviously 
asking many people costly  therefore student weigh benefits increased
probability costs asking several people 
conformant probabilistic planners task find best sequence actions
possible results actions predefined probabilities cannot observed 
regard  conformant probabilistic planners classified non observable markov
c
    
ai access foundation  rights reserved 

fionder  whelan   li

decision processes  nomdps   boutilier  dean    hanks         fully observable mdps
 fomdp  extreme mdps agent complete cost free
sensors indicate current state  planners adopt fomdp framework
generate policies functions states actions  nomdp based planners
generate unconditional sequences actions based predictive model 
environment cannot observed  boutilier et al          middle ground partially
observable mdps  pomdps  contingency plans domain observable execution actions may depend results observations  kaelbling 
littman    cassandra        majercik   littman        onder   pollack        hansen
  feng        karlsson        hoffmann   brafman         conformant
planners model imperfect actions may multiple possible results
model probability information  ferraris   giunchiglia        bertoli  cimatti    roveri 
      brafman   hoffmann        
work probapop motivated incentive partial order planning
viable option conformant probabilistic planning  main reasons threefold 
first  partial order planners worked well parametric lifted actions 
useful coding large domains  second  due least commitment strategy step
ordering  partial order planning  pop  produces plans highly parallelizable  third 
many planners handle rich temporal constraints based pop
paradigm  smith  frank    jonsson         given advantages  intuition
design probapop bring together two paradigms model states explicitly 
pop planners represent states search space plans  blind
planners cannot observe state observation actions available 
basic approach form base plans using deterministic partial order planning
techniques  estimate best way improve plans  recently  repop
 nguyen   kambhampati        vhpop  younes   simmons        planners
demonstrated heuristics speed non partial order planners used
scale partial order planning  show distance based heuristics  mcdermott 
      bonet   geffner        implemented using relaxed plan graphs partial order
planners repop vhpop employed probabilistic domains 
heuristics coupled selective plan improvement heuristics incremental planning
techniques result significant advantages  result  probapop makes partial order
planning feasible probabilistic domains  work probapop invaluable
understanding identifying key solutions issues probabilistic conformant
planning 

   probapop partial order planning
partial order probabilistic planning  implemented buridan  kushmerick  hanks 
  weld        probabilistic planning algorithm top vhpop  younes   simmons 
       recent partial order planner  partially ordered plan   tuple   steps 
bind  ord  links  open  unsafe   representing sets actions  binding constraints  ordering constraints  causal links  open conditions  unsafe links  respectively  binding
constraint constraint action parameters action parameters ground
literals  ordering constraint si sj represents fact step si precedes sj  
 

fiengineering conformant probabilistic planner

causal link triple   si   p  sj    si producer step  sj consumer step
p represents condition supported si sj   open condition pair   p    
p condition needed step s  causal link   si   p  sj   unsafe plan
contains threatening step sk sk p among effects  sk may intervene
si sj   open conditions unsafe links collectively referred flaws 
planning problem quadruple   d  i  g     where  domain theory consisting
 probabilistic  operators  initial state probability distribution states  g
set literals must true end execution  termination criterion
probability threshold time limit  objective planner find
maximal probability plan takes agent g  several plans
probability success  one least number steps cost preferred 
probapop algorithm shown figure   based classical pop algorithm
 russell   norvig        younes   simmons         first constructs initial plan
converting initial goal dummy initial goal steps  using first
last steps plan empty body  refines plans search queue
meets termination criterion  termination criterion implemented
include time limit  e g   stop   minutes   memory limit  e g   stop    mb  
probability threshold  e g   stop finding plan     higher probability  
lack significant progress  e g   stop probability success cannot increased
   possible specify multiple termination criterion use earliest one
becomes true  termination criterion met plan highest probability
returned 
plan refinement operations involve repairing flaws  open condition closed
adding new step domain theory  reusing step already plan  unsafe
link handled promotion  demotion  separation  when lifted actions used 
operations  confrontation  penberthy   weld         techniques part
vhpop implementation  consider step sk threatening causal link   si   p  sj   
promotion involves adding extra ordering constraint sk comes sj  sj sk
added ord   demotion involves adding extra ordering constraint k
comes si  sk si added ord   separation involves adding extra inequality
constraint bind sk threatening effect longer unify p  finally 
actions multiple effects  confrontation used making commitment
non threatening effects sk   i e   effects sk contain proposition
unifies p  note deterministic domains  action multiple
effects due multiple secondary preconditions  when conditions   probabilistic domains 
probabilistic actions always multiple effects 
search conducted using a  algorithm guided ranking function
provides f value  usual plan   f      g     h    g   cost
plan  h   estimated cost completing it  ranking function used
merge step algorithm order plans search queue  competition
probapop used distance based heuristic  add  explained next section 
flaw selection strategy select flaw method  used vhpops static  gives
priority static open conditions  i e   condition whose value altered action
domain theory  flaws plan contain static open conditions
threats handled next  lowest priority given remaining open conditions 
 

fionder  whelan   li

function probapop  d  initial  goal  t 
returns solution plan  failure
   plans make minimal plan initial  goal 
   bestplan null
   loop
     termination criterion met return bestplan
     plans empty return failure
     plan remove front plans 
     solution  plan  return plan
     plans merge plans  refine plan plan  
   end
function refine plan  plan 
returns set plans  possibly null 
   flaws plan  empty
     probsuccess  plan    probsuccess  bestplan 
        bestplan plan
     plan reopen conditions plan 
   flaw select flaw plan 
   flaw open condition choose 
       return reuse step plan  flaw 
       return add new step plan  flaw 
   flaw threat choose 
       return demotion plan  flaw 
       return promotion plan  flaw 
       return separation plan  flaw 
       return confrontation plan  flaw 

figure    probabilistic pop algorithm 

comment heuristics flaw selection techniques following discussion
competition results 
deterministic pop algorithm  plan considered complete
flaws  i e   open   unsafe     probabilistic domains  possibility complete
plans insufficient probability success  e g       improved 
probapop improves plans conducting search reopening conditions
fail explained next section  probapop viewed first searching
plan complete deterministic sense  searching way improve
plan  current implementation  discard search queue finding
first plan subsequent improvements made first complete plan found 
future  plan implement multiple search queues order able jump
different plans improvements  figure  a  show initial plan
corresponds student application domain mentioned first section  open
conditions sending forms  forms sent  getting letter reference  letter sent  
probapop uses vhpop guided ranking flaw selection heuristics produce
complete plan     probability success shown figure  b  straight line shows
causal link two actions zigzag line refers causal link plan
 

fiengineering conformant probabilistic planner

fragment omitted clarity exposition  probapop reopens condition
letter sent  figure  a  resumes search using heuristics come
improved plan involves asking two professors shown figure  b  assuming
ask profx action probabilistic effects  probability success
    first complete plan               second complete plan  several
iterations reopen search leads probapop find plan probability
          plan cannot improved single precision arithmetic 
initial

initial

ask prof 

formssent

lettersent

formssent

lettersent

goal

goal

 a 

 b 

figure    starting empty plan finding first plan 

initial

initial

ask prof 

formssent

lettersent

ask prof 

lettersent

formssent

goal

lettersent

ask prof 

lettersent

goal

 a 

 b 

figure    starting complete plan finding improved plan 

   distance based ranking probapop
vhpop deterministic partial order planner described younes simmons       
supports distance based heuristics provide estimate total number new actions
needed close open condition  starting search  planner builds planning
graph  blum   furst         literals initial state first level 
continues expand graph reaches level goal literals present 
planning graph different graphplans planning graph sense
 

fionder  whelan   li

relaxed  i e   delete lists ignored thus mutex relationships computed  bonet
  geffner        
order able generate relaxed planning graph multiple probabilistic
effects present  one would need split many plan graphs leaves
probabilistic action  avoid potential blow up  split action domain
theory many deterministic actions number nonempty effect lists  split
action represents different way original action would work  figure    show
action a   two probabilistic effects b p q true  one effect c
p true q false  effect otherwise  split action corresponds one
set non empty effects  probapop  plan graph uses split actions  plans
constructed always contain full original action planner correctly assess
probability success  using split actions  compute good estimate
number actions needed complete plan use distance based heuristics 
a 
p
q

prec  p  q

prec  p  q

a  

 p

a  
b



 q

prec  p   q
   

   



b

c

a  
c

figure    probabilistic action a  split deterministic actions a     a     a    
important distinction deterministic partial order planning probabilistic
partial order planning multiple support plan literals  deterministic case 
open condition permanently removed list flaws resolved 
probabilistic case  reopened planner search additional steps
increase probability literal  buridan system implements technique
reopening previously closed conditions complete plan resuming search
find another complete plan  implementation employs selective reopening  sr 
conditions guaranteed achieved reopened  words 
literals supported probability   reopened  note checking
probability literals costly probabilistic plans  save cost performing
check mandatory assessment complete plans  obviously  avoiding redundant
searches advantage planner  current implementation reopen
supported literals probability less    leave selection among
new set preconditions flaw selection heuristic  implementation
contain probability based heuristics 
important note neither split actions selective reopening technique
change base soundness completeness properties buridan algorithm  split
actions used relaxed plan graph  reopening technique block
alternatives sought would already covered plan search
queue 
 

fiengineering conformant probabilistic planner

   probapop ipc  
probapop among   domain independent planners competed probabilistic
track ipc    domain independent mean planner uses ppddl description domain solve planning problem employ previously coded
control information  table   show brief description planners  edelkamp 
hoffman  littman    younes        younes  littman  weissman    asmuth        bonet
  geffner        fern  yoon    givan        thiebaux  gretton  slaney  price    kabanza 
       competition conducted follows  planner given set   
problems written probabilistic pddl  ppddl  allotted   minutes solve
problem  this  server simulated possible way executing plan sending
sequence states starting initial state planners responded state
action based solution found     simulations conducted
problem  goal based problems success measured whether goal reached
end simulation  reward based problems total reward calculated 
set    problems included types 
competition included various domains listed below 
blocksworld  includes pick put actions action fail 
  problems                     blocks given  goal build one
towers blocks 
colored blocksworld  actions blocksworld domain 
block one three colors  goal towers specified using existential
quantifiers  e g   green block table  red block green
block 
exploding blocksworld  similar blocksworld domain first put down
action permanently destroy bottom object  block table   replanning
repetition based approaches fail easily due irreversible nature explosion 
boxworld  box transportation problem load  unload  drive fly actions 
drive action fail taking truck wrong city 
fileworld  objective includes actions put papers files matching
type  type paper found using observation action
probabilistics outcomes 
tireworld  actions include moving several cities tire go flat
trip 
towers hanoise  variation towers hanoi problem discs
moved singles doubles discs may slip move 
zeno travel  travel domain includes actions related flying  actions
boarding flying fail 
noted competition domains designed full observability
needed changed incorporate blind planner  instance  pickup action
 

fionder  whelan   li

planner  code 
umass  c 
nmrdpp  g  
classy  j  
ff replan  j  
mgpt  p 
probapop  q 
cert  r 

description
symbolic heuristic search based symbolic ao  loops  lao  
symbolic real time dynamic programming  rtdp 
solving decision problems non markovian  and hence markovian 
rewards
approximate policy iteration inductive machine learning using
random walk problems
deterministic replanner using fast forward
labeled real time dynamic programming  lrtdp  lower bounds
extracted deterministic relaxations mdp
pop style plan space a  search distance based heuristics failure
analysis
heuristic state space search structured policy iteration algorithm 
factored mdps  reachability analysis

table    domain independent planners listed order competition code 

blocksworld domain precondition requires block picked
held arm  action two probabilistic effects  one resulting
block held  held  planner assumes
observability  plan involving pickup action cannot improved action
cannot executed unless preconditions hold  thus  probapop planner cannot
insert second pickup action cover case first one fails  help
competition organizers  implemented workaround actions
executed conditions hold effect rather causing error 
probapop  competition name q  attempted      problems  two planners
attempted problems classy  j   ff replan  j   
planners attempted      problems listed table    probapop attempted
small number problems due three reasons  first  started building probapop 
vhpops version      performance vhpop significantly improved better
memory handling techniques version     time competition
convert implementation newer version  second  competition blocksworld
domains included universally quantified preconditions supported vhpop 
implementation preconditions including forall keyword efficient 
third  implementation disables feature vhpop allows use multiple
search queues different heuristics  prohibited us constructing several search
queues different heuristic using one finishes earliest 
therefore pick single heuristic run competition problems  result 
picked add ranking metric static flaw selection technique ran
problems combination 
competition results announced  observed three domain
independent planners  namely classy  j    ff replan  j    mgpt  p  
able solve largest blocksworld problems whereas probapop able solve
  blocks problem  the competition included domains                     
 

fiengineering conformant probabilistic planner

planner
umass  c 
nmrdpp  g  
classy  j  
ff replan  j  
mgpt  p 
probapop  q 
cert  r 

 
problems
 
 
  
  
  
 
 

bw nc r  
  
  
  
  
  
  
  

tire nr
  
 

 
  
 
 

tire r
  
  

  
  
 
 

zeno
  
  

 
  
 
  

table    number successes    trials obtained planners use
domain knowledge  problems attempted probapop  q  listed 
dash means planner attempt problem  bw nc r  
blocksworld problem   blocks  tire nr tire r goal reward
based problems tireworld domain  zeno problem using zeno
travel domain problem 

blocks   therefore  looked ways improving performance probapop
problems  first reimplemented probapop vhpops newer version      second 
brought language competition blocksworld domain closer strips 
particular  removed forall preconditions conditions  example 
replaced ppddl pick up action shown figure   two actions shown
figure    however  version upgrade language simplification sufficient
enable probapop solve   blocks problem  explained before  probapops strategy
first find base plan improve plan possible failure points  therefore
finding base plan crucial  next looked heuristics flaw selection
strategies make blocksworld problems solvable  begin discussing
explaining vhpops add heuristic detail 
  action pick up block from
   parameters   top   block  bottom 
   effect  when  and  not     top  bottom    on top of  top  bottom 
                    forall   b   block   not  holding  b   
                    forall   b   block   not  on top of  b  top    
              and  decrease  reward    
              probabilistic       and  holding  top   not  on top of  top  bottom   
                               when  not     bottom table  
                               and  not  on top of  top  bottom    on top of  top table       

figure    ppddls pick up action
add heuristic achieves good performance computing sum step costs
open conditions relaxed planning graph  i e   heuristic cost plan
computed h     hadd  op en      cost achieving literal q level
first action achieves q  hadd  q    minaga q  hadd  a  ga q       ga q 
 

fionder  whelan   li

  action pick up
   parameters   x 
   precondition  and  clear  x   ontable  x   handempty  
   effect
      probabilistic     
        and  not  ontable  x    not  clear  x    not  handempty    holding  x    
  action unstack
   parameters   x  y 
   precondition  and  on top of  x  y   clear  x   handempty  
   effect
      probabilistic     
        and  holding  x   clear  y   not  clear  x    not  handempty    not  on top of  x  y     

figure    simplified form ppddls pick up action 
action effect q  note hadd  q    q holds initially 
q never holds  level action first level preconditions become true 
hadd  a        hadd  p rec a    addr heuristic modification add heuristic
takes action reuse account  thus addition conditions described above 
heuristic cost literal q   plan already contains action achieve q 
observed addr effective add blocksworld domain
tested variety flaw selection strategies implemented vhpop together addr 
show flaw selection strategies tried table    adopt notation given
pollack et al         revised younes simmons         notation 
strategy ordered list selection criteria lr refers least refinements
first  mcadd refers cost computed using add  mwadd refers work
using add  open conditions divided three categories use heuristics 
static open condition open condition whose literal provided
initial state  i e   action literal effect  local open condition refers
open conditions recently added action used maintain focus
achievement single goal  unsafe open condition refers open condition whose
causal link would threatened 
five main strategies prioritize flaws differently  ucpop strategy
gives priority threats  static strategy gives priority static open conditions  lcfr
strategy handles flaws order least expected cost  mc strategy orders open conditions
respect cost extracted relaxed planning graph  mw strategy orders
open conditions respect expected work extracted relaxed planning graph 
strategy loc annotation gives priority local open conditions among open
conditions  strategy conf annotation gives priority unsafe open conditions
among open conditions  refer reader paper younes simmons
       thorough description heuristics well experimental results
domains 
depict results experiments blocksworld problems first
third lines table    the second fourth lines tables     explained later  
  

fiengineering conformant probabilistic planner

strategy
ucpop
static
lcfr
lcfr loc
lcfr conf
lcfr loc conf
mc
mc dsep
mc loc
mc dsep
mw
mw dsep
mw loc
mw loc dsep

description
 n s  lifo    o  lifo
 t  lifo    n s  lifo    o  lifo
 n s o  lr
 n s l  lr
 n s u  lr    o  lr
 n s u  lr    l  lr
 n s  lr    o  mcadd
 n  lr    o  mcadd    s  lr
 n s  lr    l  mcadd
 n  lr    l  mcadd    s  lr
 n s  lr    o  mwadd
 n  lr    o  mwadd    s  lr
 n s  lr    l  mwadd
 n  lr    l  mwadd    s  lr

table    description variety flaw selection strategies vhpop  n nonseparable threat  separable threat  open condition  static
open condition  l local open condition  u unsafe open condition 

seen lcfr mc strategies work problem   blocks 
larger problems solvable  actions lifted  tried make search
space smaller delaying separable threats  peot smith        explain delaying
separable threats may result decreased branching factor may many
ways add inequality constraints separation  delay might help
threat disappear variables bound  modified best working strategies 
namely variants mc mw  implemented delay separable threats  in table  
shown dsep suffix   show planning times experiments
without dsep table    we repeat columns table   comparison  
results show time improvement seen   blocks problem  problems
  blocks show increase time threat must checked see
separable  delaying threats made   blocks problem solvable using mc loc  mw 
mw loc strategies  however  larger problems solvable strategy 
results experiments various heuristics strategies show
search time increases dramatically going     blocks larger problems
solvable  able find heuristic combination solve larger problems 
noticed competition blocksworld problems list goal towers top bottom
planner spends lot time dead end plans original goal order
preserved  tower built top bottom  initial goals almost always
undone achieve later goals  concluded interaction cannot
detected heuristics used designed consider subgoals
isolation  koehler hoffmann        describe polynomial time algorithm
order goals minimize type undoing  algorithm operates ground
  

fionder  whelan   li

 
 o
 
 o

ucpop

static

lcfr

  
 



  
 



 
  
  k


lcfrloc
  
  



lcfrconf
   
  



lcfrloc conf
  
   



mc
  
 
  k
  k

mcloc
  
  



mw
 
 

  k

mwloc
  
  



mwloc conf
   
   



table    time  msec  required find base plan blocksworld problems  
  blocks 

 
 o
 
 o

mc
  
 
  k
  k

mc dsep
 
 
  k
   k

mc loc
  
  



mc loc dsep
  
  
  k


mw
 
 

  k

mw dsep
 
 
  k
   k

mw loc
  
  



mw loc dsep
  
  
  k


table    time  msec  required find base plan delaying separable threats
blocksworld problems     blocks 

action descriptions generated action schemas implemented
planning system  hoffman   nebel         used algorithm order
top level goals repeated experiments ordering essentially builds
towers bottom top  results ordered goals shown lines  
  tables      ordering goals mixed results  example    blocks
problem  made lcfr heuristic usable mw heuristic usable  however 
lowest time increased   k   k milliseconds larger problems still
solvable 
final strategy combine planning approach used planner
pop style search  particular  ordered top level goals using ffs ordering algorithm ran vhpop n times problems n top level goals  first problem
first goal vhpop returned plan  steps simulated find
resulting state  second problem resulting state initial state goals  
  goal   would preserved redone goal   would achieved 
used strategy default heuristics vhpop solve problem    blocks 
total time    milliseconds phases taking   milliseconds  koehler
hoffmann        explain approach works well invertible planning problems 
i e   problems blocksworld actions reversible  case  tradeoff
possibility less optimal plans plan ith goal set working
   st goal  second tradeoff getting several partially ordered plans
breakpoints problems rather single maximally parallel plan  believe
worthwhile work algorithm combines individual plans preserve
least commitment ordering  possible strategies causally link action preconditions
  

fiengineering conformant probabilistic planner

latest producers use approach edelkamp        parallelize sequential plans
using critical path analysis 

   conclusion future work
presented design implementation probapop  partial order  probabilistic 
conformant planner  described distance based condition probability based
heuristics used  discussed advantages disadvantages using incremental algorithm goals first ordered submitted one one  short
term plans involve implementing multiple search queues different base plans reincorporating adl constructs ppddl  future work involves three threads  one 
looking improving performance probapop adding probability information planning graph probability open conditions optimistically
estimated  considering addition domain specific information  kuter  
nau        probabilistic domains  second thread  exploring middle
ground observability full observability considering pomdp like problems partial order setting  finally  would incorporate hill climbing techniques
probabilistic framework  current probapop     software available
www cs mtu edu nilufer 

acknowledgments
work supported research excellence fund grant nilufer onder
michigan technological university  thank jair ipc   special track editor david e 
smith  anonymous reviewers helpful comments 

references
bertoli  p   cimatti  a     roveri  m          heuristic search   symbolic model checking
  efficient conformant planning  proceedings eighteenth international joint
conference artificial intelligence  ijcai      pp         
blum  a  l     furst  m  l          fast planning planning graph analysis  artificial
intelligence             
bonet  b     geffner  h          planning heuristic search  artificial intelligence                
bonet  b     geffner  h          mgpt  probabilistic planner based heuristic search 
journal artificial intelligence research             
boutilier  c   dean  t     hanks  s          decision theoretic planning  structural assumptions computational leverage  journal artificial intelligence research 
        
brafman  r  i     hoffmann  j          conformant planning via heuristic forward search 
new approach  proceedings fourteenth international conference automated
planning   scheduling  icaps      pp         
  

fionder  whelan   li

edelkamp  s          extended critical paths temporal planning  workshop integrating planning scheduling international conference automated planning
scheduling  icaps      pp       
edelkamp  s   hoffman  j   littman  m     younes  h          international planning competition  proceedings fourteenth international conference automated planning
  scheduling  icaps     
fern  a   yoon  s     givan  r          approximate policy iteration policy language
bias  solving relational markov decision processes  journal artificial intelligence
research     
ferraris  p     giunchiglia  e          planning satisfiability nondeterministic domains  proceedings seventeenth national conference artificial intelligence
 aaai      pp         
hansen  e  a     feng  z          dynamic programming pomdps using factored
state representation  proceedings fifth international conference artificial
intelligence planning   scheduling  aips      pp         
hoffman  j     nebel  b          planning system  fast plan generation
heuristic search  journal artificial intelligence research             
hoffmann  j     brafman  r  i          contingent planning via heuristic forward search
implicit belief states  proceedings fifteenth international conference
automated planning   scheduling  icaps      pp       
hyafil  n     bacchus  f          conformant probabilistic planning via csps  proceedings thirteenth international conference automated planning   scheduling
 icaps      pp         
kaelbling  l  p   littman  m  l     cassandra  a  r          planning acting
partially observable stochastic domains  artificial intelligence             
karlsson  l          conditional progressive planning uncertainty  proceedings
eighteenth international joint conference artificial intelligence  ijcai      pp 
       
koehler  j     hoffmann  j          reasonable forced goal orderings use
agenda driven planning algorithm  journal artificial intelligence research 
           
kushmerick  n   hanks  s     weld  d  s          algorithm probabilistic planning 
artificial intelligence             
kuter  u     nau  d          using domain configurable search control probabilistic planners  proceedings twentieth national conference artificial intelligence
 aaai     
majercik  s  m     littman  m  l          contingent planning uncertainty via
stochastic satisfiability  proceedings sixteenth national conference artificial intelligence  aaai      pp         
mcdermott  d          using regression match graphs control search planning  artificial intelligence                    
  

fiengineering conformant probabilistic planner

nguyen  x     kambhampati  s          reviving partial order planning  proceedings
eighteenth international joint conference artificial intelligence  ijcai      pp 
       
onder  n     pollack  m  e          conditional  probabilistic planning  unifying algorithm effective search control mechanisms  proceedings sixteenth
national conference artificial intelligence  aaai      pp         
penberthy  j  s     weld  d  s          ucpop  sound  complete  partial order planner
adl  proceedings third international conference principles knowledge
representation   reasoning  kr      pp         
peot  m  a     smith  d  e          threat removal strategies partial order planning 
proceedings eleventh national conference artificial intelligence  aaai     
pp         
pollack  m  e   joslin  d     paolucci  m          flaw selection strategies partial order
planning  journal artificial intelligence research            
russell  s  j     norvig  p          artificial intelligence  modern approach  second
edition  pearson education  upper saddle river  nj 
smith  d  e   frank  j     jonsson  a  k          bridging gap planning
scheduling  knowledge engineering review               
thiebaux  s   gretton  c   slaney  j   price  d     kabanza  f          decision theoretic
planning non markovian rewards  journal artificial intelligence research     
younes  h  l   littman  m  l   weissman  d     asmuth  j          first probabilistic
track international planning competition  journal artificial intelligence
research             
younes  h     simmons  r          vhpop  versatile heuristic partial order planner 
journal artificial intelligence research             

  


