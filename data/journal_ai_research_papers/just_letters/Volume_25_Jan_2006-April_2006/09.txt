journal of artificial intelligence research                  

submitted        published      

representing conversations for scalable overhearing
gery gutnik
gal a  kaminka

gutnikg cs biu ac il
galk cs biu ac il

computer science department
bar ilan university
ramat gan        israel

abstract
open distributed multi agent systems are gaining interest in the academic community
and in industry  in such open settings  agents are often coordinated using standardized
agent conversation protocols  the representation of such protocols  for analysis  validation  monitoring  etc  is an important aspect of multi agent applications  recently  petri
nets have been shown to be an interesting approach to such representation  and radically
different approaches using petri nets have been proposed  however  their relative strengths
and weaknesses have not been examined  moreover  their scalability and suitability for
different tasks have not been addressed  this paper addresses both these challenges  first 
we analyze existing petri net representations in terms of their scalability and appropriateness for overhearing  an important task in monitoring open multi agent systems  then 
building on the insights gained  we introduce a novel representation using colored petri
nets that explicitly represent legal joint conversation states and messages  this representation approach offers significant improvements in scalability and is particularly suitable
for overhearing  furthermore  we show that this new representation offers a comprehensive coverage of all conversation features of fipa conversation standards  we also present
a procedure for transforming auml conversation protocol diagrams  a standard humanreadable representation   to our colored petri net representation 

   introduction
open distributed multi agent systems  mas  are composed of multiple  independently built
agents that carry out mutually dependent tasks  in order to allow inter operability of agents
of different designs and implementation  the agents often coordinate using standardized interaction protocols  or conversations  indeed  the multi agent community has been investing
a significant effort in developing standardized agent communication languages  acl  to facilitate sophisticated multi agent systems  finin  labrou    mayfield        kone  shimazu 
  nakajima        chaibdraa        fipa site         such standards define communicative acts  and on top of them  interaction protocols  ranging from simple queries as to the
state of another agent  to complex negotiations by auctions or bidding on contracts  for
instance  the fipa contract net interaction protocol  fipa specifications      b  defines
a concrete set of message sequences that allows the interacting agents to use the contract
net protocol for negotiations 
various formalisms have been proposed to describe such standards  e g   smith   cohen 
      parunak        odell  parunak    bauer            b  auml site         in particular  aumlagent unified modelling languageis currently used in the fipa acl standards
c
    
ai access foundation  all rights reserved 

figutnik   kaminka

 fipa specifications      a      b      c      d  odell  parunak    bauer      a      uml
     auml site         a new emerging standard influenced by auml  has the potential to
become the fipa acl standard  and a forthcoming ieee standard  in the future  however  for the moment  a large set of fipa specifications remains formalized using auml 
while auml is intended for human readability and visualization  interaction protocols
should ideally be represented in a way that is amenable to automated analysis  validation
and verification  online monitoring  etc 
lately  there is increasing interest in using petri nets  petri nets site        in modelling
multi agent interaction protocols  cost        cost  chen  finin  labrou    peng       
      lin  norrie  shen    kremer        nowostawski  purvis    cranefield        purvis 
hwang  purvis  cranefield    schievink        cranefield  purvis  nowostawski    hwang 
      ramos  frausto    camargo        mazouzi  fallah seghrouchni    haddad       
poutakidis  padgham    winikoff         there is broad literature on using petri nets to
analyze the various aspects of distributed systems  e g  in deadlock detection as shown by
khomenco   koutny         and there has been recent work on specific uses of petri nets in
multi agent systems  e g   in validation and testing  desel  oberweis    zimmer         in
automated debugging and monitoring  poutakidis et al          in dynamic interpretation of
interaction protocols  cranefield et al         de silva  winikoff    liu         in modelling
agents behavior induced by their participation in a conversation  ling   loke        and
in interaction protocols refinement allowing modular construction of complex conversations
 hameurlain        
however  key questions remain open on the use of petri nets for conversation representation  first  while radically different approaches to representation using petri nets have
been proposed  their relative strengths and weaknesses have not been investigated  second 
many investigations have only addressed restricted subsets of the features needed in representing complex conversations such as those standardized by fipa  see detailed discussion
of previous work in section     finally  no procedures have been proposed for translating
human readable auml protocol descriptions into the corresponding machine readable petri
nets 
this paper addresses these open challenges in the context of scalable overhearing  here 
an overhearing agent passively tracks many concurrent conversations involving multiple participants  based solely on their exchanged messages  while not being a participant in any of
the overheard conversations itself  novick   ward        busetta  serafini  singh    zini 
      kaminka  pynadath    tambe        poutakidis et al         busetta  dona    nori 
      legras        gutnik   kaminka      a  rossi   busetta         overhearing is useful in visualization and progress monitoring  kaminka et al          in detecting failures in
interactions  poutakidis et al          in maintaining organizational and situational awareness  novick   ward        legras        rossi   busetta        and in non obtrusively
identifying opportunities for offering assistance  busetta et al                for instance  an
overhearing agent may monitor the conversation of a contractor agent engaged in multiple
contract net protocols with different bidders and bid callers  in order to detect failures 
we begin with an analysis of petri net representations  with respect to scalability and
overhearing  we classify representation choices along two dimensions affecting scalability 
    fipa specifications      c  is currently deprecated  however  we use this specification since it describes
many important features needed in modelling multi agent interactions 

   

firepresenting conversations for scalable overhearing

 i  the technique used to represent multiple concurrent conversations  and  ii  the choice
of representing either individual or joint interaction states  we show that while the runtime complexity of monitoring conversations using different approaches is the same  choices
along these two dimensions have significantly different space requirements  and thus some
choices are more scalable  in the number of conversations  than others  we also argue that
representations suitable for overhearing require the use of explicit message places  though
only a subset of previously explored techniques utilized those 
building on the insights gained  the paper presents a novel representation that uses
colored petri nets  cp nets  in which places explicitly denote messages  and valid joint
conversation states  this representation is particularly suited for overhearing as the number
of conversations is scaled up  we show how this representation can be used to represent
essentially all features of fipa auml conversation standards  including simple and complex interaction building blocks  communicative act attributes such as message guards and
cardinalities  nesting  and temporal aspects such as deadlines and duration 
to realize the advantages of machine readable representations  such as for debugging
 poutakidis et al          existing human readable protocol descriptions must be converted
to their corresponding petri net representations  as a final contribution in this paper  we
provide a skeleton semi automated procedure for converting fipa conversation protocols
in auml to petri nets  and demonstrate its use on a complex fipa protocol  while this
procedure is not fully automated  it takes a first step towards addressing this open challenge 
this paper is organized as follows  section   presents the motivation for our work 
sections   through   then present the proposed representation addressing all fipa conversation features including basic interaction building blocks  section     message attributes
 section     nested   interleaved interactions  section     and temporal aspects  section    
section   ties these features together  it presents a skeleton algorithm for transforming an
auml protocol diagram to its petri net representation  and demonstrates its use on a challenging fipa conversation protocol  section   concludes  the paper rounds up with three
appendixes  the first provides a quick review of petri nets  then  to complete coverage of
fipa interactions  appendix b provides additional interaction building blocks  appendix c
presents a petri net of a complex conversation protocol  which integrates many of the features
of the developed representation technique 

   representations for scalable overhearing
overhearing involves monitoring conversations as they progress  by tracking messages that
are exchanged between participants  gutnik   kaminka      a   we are interested in representations that can facilitate scalable overhearing  tracking many concurrent conversations 
between many agents  we focus on open settings  where the complex internal state and control logic of agents is not known in advance  and therefore exclude discussions of petri net
representations which explicitly model agent internals  e g   moldt   wienberg        xu
  shatz         instead  we treat agents as black boxes  and consider representations that
commit only to the agents conversation state  i e   its role and progress in the conversation  
the suitability of a representation for scalable overhearing is affected by several facets 
first  since overhearing is based on tracking messages  the representation must be able to
explicitly represent the passing of a message  communicative act  from one agent to another
   

figutnik   kaminka

 section       second  the representation must facilitate tracking of multiple concurrent
conversations  while the tracking runtime is bounded from below by the number of messages
 since in any case  all messages are overheard and processed   space requirements may differ
significantly  see sections         
    message monitoring versus state monitoring
we distinguish two settings for tracking the progress of conversations  depending on the
information available to the tracking agent  in the first type of setting  which we refer to
as state monitoring  the tracking agent has access to the internal state of the conversation
in one or more of the participants  but not necessarily to the messages being exchanged 
the other settings involves message monitoring  where the tracking agent has access only to
the messages being exchanged  which are externally observable   but cannot directly observe
the internal state of the conversation in each participant  overhearing is a form of message
monitoring 
representations that support state monitoring use places to denote the conversation
states of the participants  tokens placed in these places  the net marking  denote the
current state  the sending or receiving of a message by a participant is not explicitly
represented  and is instead implied by moving tokens  through transition firings  to the new
state places  thus  such a representation essentially assumes that the internal conversation
state of participants is directly observable by the monitoring agent  previous work utilizing
state monitoring includes work by cost         cost et al                lin et al         
mazouzi et al          ramos et al         
the representation we present in this paper is intended for overhearing tasks  and cannot
assume that the conversation states of overheard agents are observable  instead  it must
support message monitoring  where in addition to using tokens in state places  to denote
current conversation state   the representation uses message places  where tokens are placed
when a corresponding message is overheard  a conversation state place and a message
place are connected via a transition to a state place denoting the new conversation state 
tokens placed in these originating placesindicating a message was received at an appropriate
conversation statewill cause the transition to fire  and for the tokens to be placed in the
new conversation state place  thus the new conversation state is inferred from  observing 
a message  previous investigations  that have used explicit message places  include work
by cost         cost et al                nowostawski et al          purvis et al         
cranefield et al          poutakidis et al            these are discussed in depth below 
    representing a single conversation
two representation variants are popular within those that utilize conversation places  in
addition to message places   individual state representations use separate places and tokens
for the state of each participant  each role   thus  the overall state of the conversation is
represented by different tokens marking multiple places  joint state representations use a
single place for each joint conversation state of all participants  the placement of a token
   cost         cost et al               present examples of both state  and message  monitoring representations 

   

firepresenting conversations for scalable overhearing

within such a place represents the overhearing agents belief that the participants are in the
appropriate joint state 
most previous representations use individual states  in these  different markings distinguish a conversation state where one agent has sent a message  from a state where the other
agent received it  the net for each conversation role is essentially built separately  and is
merged with the other nets  or connected to them via fusion places or similar means 
cost         cost et al               have used cp nets with individual state places for
representing kqml and fipa interaction protocols  transitions represent message events 
and cp net features  such as token colors and arc expressions  are used to represent auml
message attributes and sequence expressions  the authors also point out that deadlines  a
temporal aspect of interaction  can be modelled  but no implementation details are provided 
cost        also proposed using hierarchical cp nets to represent hierarchical multi agent
conversations 
purvis et al          cranefield et al         represented conversation roles as separate
cp nets  where places denote both interaction messages and states  while transitions represent operations performed on the corresponding communicative acts such as send  receive 
and process  special in out places are used to pass net tokens between the different cp nets 
through special get put transitions  simulating the actual transmission of the corresponding
communicative acts 
in principle  individual state representations require two places in each role  for every
message  for a given message  there would be two individual places for the sender  before
sending and after sending   and similarly two more for each receiver  before receiving and
after receiving   all possible conversation statesvalid or notcan be represented  for a
single message and two roles  there are two places for each role  four places total   and four
possible conversation states  message sent and received  sent and not received  not sent but
incorrectly believed to have been received  not sent and not received  these states can be
represented by different markings  for instance  a conversation state where the message has
been sent but not received is denoted by a token in the after sending place of the sender
and another token in the before receiving place of the receiver  this is summarized in the
following proposition 
proposition   given a conversation with r roles and a total of m possible messages  an
individual state representation has space complexity of o m r  
while the representations above all represent each roles conversation state separately 
many applications of overhearing only require representation of valid conversation states
 message not sent and not received  or sent and received   indeed  specifications for interaction protocols often assume the use of underlying synchronization protocols to guarantee
delivery of messages  paurobally   cunningham        paurobally  cunningham    jennings         under such an assumption  for every message  there are only two joint states
regardless of the number of roles  for example  for a single message and three rolesa
sender and two receivers  there are two places and two possible markings  a token in a
before sending receiving place represents a conversation state where the message has not
yet been sent by the sender  and the two receivers are waiting for it   while a token in a
after sending receiving place denotes that the message has been sent and received by both
receivers 
   

figutnik   kaminka

nowostawski et al         utilize cp nets where places denote joint conversation states 
they also utilize places representing communicative acts  poutakidis et al         proposed
a representation based on place transition nets  pt nets a more restricted representation
of petri nets that has no color  they presented several interaction building blocks  which
could then fit together to model additional conversation protocols  in general  the following
proposition holds with respect to such representations 
proposition   given a conversation with r roles and a total of m possible messages  a
joint state representation that represents only legal states has space complexity of o m   
the condition of representing only valid states is critical to the complexity analysis  if all
joint conversation statesvalid and invalidare to be represented  the space complexity would
be o m r    in such a case  an individual state representation would have an advantage  this
would be the case  for instance  if we do not assume the use of synchronization protocols 
e g   where the overhearing agent may wish to track the exact system state even while a
message is underway  i e   sent and not yet received  
    representing multiple concurrent conversations
propositions   and   above address the space complexity of representing a single conversation  however  in large scale systems an overhearing agent may be required to monitor
multiple conversations in parallel  for instance  an overhearing agent may be monitoring a
middle agent that is carrying multiple parallel instances of a single interaction protocol with
multiple partners  e g   brokering  fipa specifications      a  
some previous investigations propose to duplicate the appropriate petri net representation for each monitored conversation  nowostawski et al         poutakidis et al          in
this approach  every conversation is tracked by a separate petri net  and thus the number
of petri nets  and their associated tokens  grows with the number of conversations  proposition     for instance  nowostawski et al         shows an example where a contract net
protocol is carried out with three different contractors  using three duplicate cp nets  this
is captured in the following proposition 
proposition   a representation that creates multiple instances of a conversation petri net
to represent c conversations  requires o c  net structures  and o c  bits for all tokens 
other investigations take a different approach  in which a single cp net structure is used
to monitor all conversations of the same protocol  the tokens associated with conversations
are differentiated by their token color  cost        cost et al               lin et al        
mazouzi et al         cranefield et al         purvis et al         ramos et al          for
example  by assigning each token a color of the tuple type hsender  receiveri  an agent can
differentiate multiple tokens in the same place and thus track conversations of different pairs
of agents    color tokens use multiple bits per token  up to log c bits are required to differentiate c conversations  therefore  the number of bits required to track c conversations
using c tokens is c log c  this leads to the following proposition 
   see section   to distinguish between different conversations by the same agents 

   

firepresenting conversations for scalable overhearing

proposition   a representation that uses color tokens to represent c multiple instances of
a conversation  requires o    net structures  and o c log c  bits for all tokens 

due to the constants involved  the space requirements of proposition   are in practice
much more expensive than those of proposition    proposition   refers to the creation of
o c  petri networks  each with duplicated place and transition data structures  in contrast 
proposition   refers to bits required for representing c color tokens on a single cp net 
moreover  in most practical settings  a sufficiently large constant bound on the number of
conversations may be found  which will essentially reduce the o log c  factor to o    
based on propositions     it is possible to make concrete predictions as to the scalability
of different approaches with respect to the number of conversations  roles  table   shows
the space complexity of different approaches when modelling c conversations of the same
protocol  each with a maximum of r roles  and m messages  under the assumption of
underlying synchronization protocols  the table also cites relevant previous work 

individual
states
 proposition   
joint
states
 proposition   

representing multiple conversations  of same protocol 
multiple cp  or pt nets
using color tokens  single cp net
 proposition   
 proposition   
space  o m r   c log c 
cost         cost et al               
space  o m rc 
lin et al          cranefield et al         
purvis et al          ramos et al         
mazouzi et al        
space  o m c 
space  o m   c log c 
nowostawski et al         
this paper
poutakidis et al        
table    scalability of different representations

building on the insights gained from table    we propose a representation using cp nets
where places explicitly represent joint conversation states  corresponding to the lower right
cell in table     and tokens color is used to distinguish concurrent conversations  as in the
upper right cell in table     as such  it is related to the works that have these features  but
as the table demonstrates  is a novel synthesis 
our representation uses similar structures to those found in the works of nowostawski
et al         and poutakidis et al          however  in contrast to these previous investigations  we rely on token color in cp nets to model concurrent conversations  with space
complexity o m   c log c   we also show  sections     how it can be used to cover a
variety of conversation features not covered by these investigations  these features include
representation of a full set of fipa interaction building blocks  communicative act attributes
 such as message guards  sequence expressions  etc    compact modelling of concurrent conversations  nested and interleaved interactions  and temporal aspects 
   

figutnik   kaminka

   representing simple   complex interaction building blocks
this section introduces the fundamentals of our representation  and demonstrates how various simple and complex auml interaction messages  used in fipa conversation standards
 fipa specifications      c   can be implemented using the proposed cp net representation  we begin with a simple conversation  shown in figure   a using an auml protocol
diagram  here  agent  sends an asynchronous message msg to agent   




 


ff



 fi

fffi

 
ff
fi  




 
ff
fi  

 a  auml representation



    
 fi        
         

    
          

       
 
 
    

 b  cp net representation

figure    asynchronous message interaction 
to represent agent conversation protocols  we define two types of places  corresponding
to messages and conversation states  the first type of net places  called message places  is
used to describe conversation communicative acts  tokens placed in message places indicate
that the associated communicative act has been overheard  the second type of net places 
agent places  is associated with the valid joint conversation states of the interacting agents 
tokens placed in agent places indicate the current joint state of the conversation within the
interaction protocol 
transitions represent the transmission and receipt of communicative acts between agents 
assuming underlying synchronization protocols  a transition always originates within a jointstate place and a message place  and targets a joint conversation state  more than one is
possiblesee below   normally  the current conversation state is known  marked with a
token   and must wait the overhearing of the matching message  denoted with a token at
the connected message place   when this token is marked  the transition fires  automatically
marking the new conversation state 
figure   b presents cp net representation of the earlier example of figure   a  the cpnet in figure   b has three places and one transition connecting them  the a  b  and the
a  b  places are agent places  while the msg place is a message place  the a and b capital
letters are used to denote the agent  and the agent  individual interaction states respectively
 we have indicated the individual and the joint interaction states over the auml diagram
in figure   a  but omit these annotations in later figures   thus  the a  b  place indicates a
joint interaction state where agent  is ready to send the msg communicative act to agent 
 a    and agent  is waiting to receive the corresponding message  b     the msg message
place corresponds to the msg communicative act sent between the two agents  thus  the
transmission of the msg communicative act causes the agents to transition to the a  b 
   

firepresenting conversations for scalable overhearing

place  this place corresponds to the joint interaction state in which agent  has already sent
the msg communicative act to agent   a    and agent  has received it  b    
the cp net implementation in figure   b also introduces the use of token colors to
represent additional information about interaction states and communicative acts  the
token color sets are defined in the net declaration  i e  the dashed box in figure   b 
the syntax follows the standard cpn ml notation  wikstrom        milner  harper   
tofte        jensen      a   the agen t color identifies the agents participating in the
interaction  and is used to construct the two compound color sets 
the inter state color set is associated with agent places  and represents agents in
the appropriate joint interaction states  it is a record ha    a  i  where a  and a  are agen t
color elements distinguishing the interacting agents  we apply the inter state color
set to model multiple concurrent conversations using the same cp net  the second color
set is m sg  describing interaction communicative acts and associated with message places 
the m sg color token is a record has   ar i  where as and ar correspond to the sender and
the receiver agents of the associated communicative act  in both cases  additional elements 
such as conversation identification  may be used  see section   for additional details 
in figure   b  the a  b  and the a  b  places are associated with the inter state
color set  while the msg place is associated with the m sg color set  the place color set
is written in italic capital letters next to the corresponding place  furthermore  we use
the s and r agen t color type variables to denote the net arc expressions  thus  given
that the output arc expression of both the a  b  and the msg places is hs  ri  the s and r
elements of the agent place token must correspond to the s and r elements of the message
place token  consequently  the net transition occurs if and only if the agents of the message
correspond to the interacting agents  the a  b  place input arc expression is hr  si following
the underlying intuition that agent  is going to send the next interaction communicative
act 
figure   a shows an auml representation of another interaction building block  synchronous message passing  denoted by the filled solid arrowhead  here  the msg communicative act is sent synchronously from agent  to agent    meaning that an acknowledgement
on msg communicative act must always be received by agent  before the interaction may
proceed 
the corresponding cp net representation is shown in figure   b  the interaction starts
in the a  b  place and terminates in the a  b  place  the a  b  place represents a joint
interaction state where agent  is ready to send the msg communicative act to agent   a   
and agent  is waiting to receive the corresponding message  b     the a  b  place denotes
a joint interaction state  in which agent  has already sent the msg communicative act to
agent   a    and agent  has received it  b     however  since the cp net diagram represents
synchronous message passing  the msg communicative act transmission cannot cause the
agents to transition directly from the a  b  place to the a  b  place  we therefore define an
intermediate a   b   agent place  this place represents a joint interaction state where agent 
has received the msg communicative act and is ready to send an acknowledgement on it
 b     while agent  is waiting for that acknowledgement  a      taken together  the msg
communicative act causes the agents to transition from the a  b  place to the a   b   place 
while the acknowledgement on the msg message causes the agents to transition from the
a   b   place to the a  b  place 
   

figutnik   kaminka

 
ff
fi  










 fi
   
 
ff

fi  

 

 

 
ff
fi  


 fi




     
          
        
                   
      

 a  auml representation

 b  cp net representation

figure    synchronous message interaction 
transitions in a typical multi agent interaction protocols are composed of interaction
building blocks  two of which have been presented above  additional interaction buildingblocks  which are fairly straightforward  or have appeared in previous work  e g   poutakidis
et al         are presented in appendix b  in the remainder of this section  we present two
complex interactions building blocks that are generally common in multi agent interactions 
xor decision and or parallel 
we begin with the xor decision interaction  the auml representation to this building
block is shown in figure   a  the sender agent agent  can either send message msg  to
agent  or message msg  to agent    but it can not send both msg  and msg    the non filled
diamond with an x inside is the auml notation for this constraint 
 



 







 


  

ff fi
 

        
  
      
       





 



 
      
    
 

       
    
 
 
        

ff

ff  
 





 a  auml representation

 b  cp net representation

figure    xor decision messages interaction 
figure   b shows the corresponding cp net  again  the a  b and c capital letters
are used to denote the interaction states of agent    agent  and agent    respectively  the
   

firepresenting conversations for scalable overhearing

interaction starts from the a  b  c  place and terminates either in the a  b  place or in the
a  c  place  the a  b  c  place represents a joint interaction state where agent  is ready to
send either the msg  communicative act to agent  or the msg  communicative act to agent 
 a     and agent  and agent  are waiting to receive the corresponding msg   msg  message
 b   c     to represent the a  b  c  place color set  we extend the inter state color
set to denote a joint interaction state of three interacting agents  i e  using the interstate   color set  the msg  communicative act causes the agents to transition to a  b 
place  the a  b  place represents a joint interaction state where agent  has sent the msg 
message  a     and agent  has received it  b     similarly  the msg  communicative act causes
agents agent  and agent  to transition to a  c  place  exclusiveness is achieved since the
single agent token in a  b  c  place can be used either for activating the a  b  c   a  b 
transition or for activating the a  b  c   a  c  transition  but not both 
a similar complex interaction is the or parallel messages interaction  its auml representation is presented in figure   a  the sender agent  agent    can send message msg  to
agent  or message msg  to agent    or both  the non filled diamond is the auml notation
for this constraint 

 
fffi
  
fi

 



 









  
 
   
   
fffi
  
   

  
fffi
 
  

 

 
fffi
   


 a  auml representation

    
        
       
          
      
     
       
    
          

 
fffi
  
 

 b  cp net representation

figure    or parallel messages interaction 
figure   b shows the cp net representation of the or parallel interaction  the interaction starts from the a  b  c  place but it can be terminated in the a  b  place  or in the
a  c  place  or in both  to represent this inclusiveness of the interaction protocol  we define
two intermediate places  the a   b  place and the a    c  place  the a   b  place represents a
joint interaction state where agent  is ready to send the msg  communicative act to agent 
 a     and agent  is waiting to receive the message  b     the a    c  place has similar meaning  but with respect to agent    as normally done in petri nets  the transition connecting
the a  b  c  place to the intermediate places duplicates any single token in a  b  c  place
into two tokens going into the a   b  and the a    c  places  consequently  the two parts of
the or parallel interaction can be independently executed 

   representing interaction attributes
we now extend our representation to allow additional interaction aspects  useful in describing multi agent conversation protocols  first  we show how to represent interaction
   

figutnik   kaminka

message attributes  such as guards  sequence expressions  cardinalities and content  fipa
specifications      c   we then explore in depth the representation of multiple concurrent
conversations  on the same cp net  
figure   a shows a simple agent interaction using an auml protocol diagram  this
interaction is similar to the one presented in figure   a in the previous section  however 
figure   a uses an auml message guard conditionmarked as  condition that has the
following semantics  the communicative act is sent from agent  to agent  if and only if the
condition is true 



 


 
ff
fi  



 
fffi  fffi

 
ff
fi  

 a  auml representation

        
         

            
fi               
  
                
          
            
  
              
                  

           
 b  cp net representation

figure    message guard condition
the guard condition implementation in our petri net representation uses transition
guards  figure   b   a native feature for cp nets  the auml guard condition is mapped
directly to the cp net transition guard  the cp net transition guard is indicated on the
net inscription next to the corresponding transition using square brackets  the transition
guard guarantees that the transition is enabled if and only if the transition guard is true 
in figure   b  we also extend the color of tokens to include information about the
communicative act being used and its content  we extend the m sg color set definition
to a record hs  r  t  ci  where the s and r elements has the same interpretation as in previous
section  sender and receiver   and the t and c elements define the message type and content 
respectively  the t element is of a new color t y p e  which determines communicative act
types  the c element is of a new color con t en t   which represents communicative act
content and argument list  e g  reply to  reply by and etc  
the addition of new elements also allows for additional potential uses  for instance 
to facilitate representation of multiple concurrent conversations between the same agents
 s and r   it is possible to add a conversation identification field to both the m sg and
inter state colors  for simplicity  we refrain from doing so in the examples in this
paper 
two additional auml communicative act attributes that can be modelled in the cp
representation are message sequence expression and message cardinality  the sequenceexpressions denote a constraint on the message sent from sender agent  there are a number of
sequence expressions defined by fipa conversation standards  fipa specifications      c  
m denotes that the message is sent exactly m times  n  m denotes that the message is sent
anywhere from n up to m times   denotes that the message is sent an arbitrary number of
   

firepresenting conversations for scalable overhearing

times  an additional important sequence expression is broadcast  i e  message is sent to all
other agents 
we now explain the representation of sequence expressions in cp nets  using broadcast
as an example  figure   b   other sequence expressions are easily derived from this example 
we define an inter state card color set  this color set is a tuple  ha    a  i  i  consisting
of two elements  the first tuple element is an inter state color element  which denotes
the interacting agents as previously defined  the second tuple element is an integer that
counts the number of messages already sent by an agent  i e  the message cardinality 
this element is initially assigned to    the inter state card color set is applied to
the s  r  place  where the s and r capital letters are used to denote the sender and the
receiver individual interaction states respectively and the s  r  indicates the initial joint
interaction state of the interacting agents  the two additional colors  used in figure   b  are
the broadcast list and the t arget colors  the broadcast list color defines
the sender broadcast list of the designated receivers  assuming that the sender must have
such a list to carry out its role  the t arget color defines indexes into this broadcast list 

  

 

  

fffi
  

 
 
  
 
ff
fi

fi  ff
 



                                                            
         
             
                            
     
           
ff
fi
                         
fi  
                

                        a   
b                        c            
 
ff
   a  ddd     b         b          b       fi  

 a  auml representation

 b  cp net representation

figure    broadcast sequence expression 
according to the broadcast sequence expression semantics  the sender agent sends the
same msg  communicative act to all the receivers on the broadcast list  the cp net introduced in figure   b models this behavior   the interaction starts from the s  r  place 
representing the joint interaction state where sender is ready to send the msg  communicative act to receiver  s    and receiver is waiting to receive the corresponding msg 
message  r     the s  r  place initial marking is a single token  set by the initialization expression  underlined  next to the corresponding place   the initialization expression   hs  t arget    i    given in standard cpn ml notationdetermines that the s  r 
places initial marking is a multi set containing a single token  hs  t arget    i      thus 
the first designated receiver is assigned to be the agent with index   on the broadcast list 
and the message cardinality counter is initiated to   
   we implement broadcast as an iterative procedure sending the corresponding communicative act separately to all designated recipients 

   

figutnik   kaminka

the msg  message place initially contains multiple tokens  each of these tokens represents the msg  communicative act addressed to a different designated receiver on the
broadcast list  in figure   b  the initialization expression  corresponding to the msg  message place  has been omitted  the s  r  place token and the appropriate msg  place token
together enable the corresponding transition  consequently  the transition may fire and thus
the msg  communicative act transmission is simulated 
the msg  communicative act is sent incrementally to every designated receiver on the
broadcast list  the incoming arc expression  hs  ri  i  is incremented by the transition to
the outgoing  hs  t arget  i     i  i      arc expression  causing the receiver agent with
index i     on the broadcast list to be selected  the transition guard constraint i   size 
i e  i    broadcast list   ensures that the msg  message is sent no more than  broadcast list 
times  the msg  communicative act causes the agents to transition to the s  r  place 
this place represents a joint interaction state in which sender has already sent the msg 
communicative act to receiver and is now waiting to receive the msg  message  s    and
receiver has received the msg  message and is ready to send the msg  communicative act
to sender  r     finally  the msg  message causes the agents to transition to the s  r 
place  the s  r  place denotes a joint interaction state where sender has received the msg 
communicative act from receiver and terminated  s     while receiver has already sent the
msg  message to sender and terminated as well  r    
we use figure   b to demonstrate the use of token color to represent multiple concurrent
conversations using the same cp net  for instance  let us assume that the sender agent is
called agent  and its broadcast list contains the following agents  agent    agent    agent   
agent  and agent    we will also assume that the agent  has already sent the msg  communicative act to all agents on the broadcast list  however  it has only received the msg 
reply message from agent  and agent    thus  the cp net current marking for the complete
interaction protocol is described as follows  the s  r  place is marked by hagent    agent  i 
hagent    agent  i  hagent    agent  i  while the s  r  place contains the tokens hagent    agent  i
and hagent    agent  i 
an example  we now construct a cp net representation of the fipa query interaction
protocol  fipa specifications      d   shown in auml form in figure    to demonstrate
how the building blocks presented in sections   and   can be put together  in this interaction
protocol  the initiator requests the p articipant to perform an inform action using one of two
query communicative acts  query if or query ref  the p articipant processes the query and
makes a decision whether to accept or ref use the query request  the initiator may request
the p articipant to respond with either an accept or ref use message  and for simplicity 
we will assume that this is always the case  in case the query request has been accepted 
the p articipant informs the initiator on the query results  if the p articipant fails  then
it communicates a f ailure  in a successful response  the p articipant replies with one of
two versions of inform  inform t f or inform result  depending on the type of initial query
request 
the cp net representation of the fipa query interaction protocol is presented in figure    the interaction starts in the i  p  place  we use the i and the p capital letters
to denote the initiator and the p articipant roles   the i  p  place represents a joint
interaction state where  i  the initiator agent is ready to send either the query if communicative act  or the query ref message  to p articipant  i     and  ii  p articipant is wait   

firepresenting conversations for scalable overhearing

  fffi     

  

     


 fffi  


 fffi  fi 
fi ff fi
fi ff fi

 fifi
 fifi    
fifi  
 ff fi



 ff fi  

 fifi

 fi ff  

 fffi  fi

figure    fipa query interaction protocol   auml representation 

ing to receive the corresponding message  p     the initiator can send either a query if
or a query ref communicative act  we assume that these acts belong to the same class 
the query communicative act class  thus  we implement both messages using a single
query message place  and check the message type using the following transition guard 
  t msg   query if or  t msg   query ref   the query communicative act causes the
interacting agents to transition to the i  p  place  this place represents a joint interaction
state in which initiator has sent the query communicative act and is waiting to receive
a response message  i     and p articipant has received the query communicative act and
deciding whether to send an agree or a ref use response message to initiator  p     the
ref use communicative act causes the agents to transition to i  p  place  while the agree
message causes the agents to transition to i  p  place 
the p articipant decision on whether to send an agree or a ref use communicative
act is represented using the xor decision building block introduced earlier  figure   b  
the i  p  place represents a joint interaction state where initiator has received a ref use
communicative act and terminated  i    and p articipant has sent a ref use message and
terminated as well  p     the i  p  place represents a joint interaction state in which initiator
has received an agree communicative act and is now waiting for further response from
   

figutnik   kaminka

 

 


 

  
fffi



 
 
ff

               



  b

 

 

  

      


  aff

       

                 

   
    

  
ff fi
 
 
ff




 

 

 

 
 
ff




 
 

   
  
fffi

                    


      



                        



 

 
 
ff

                            

           
 
                                     

 

              

  
fffi




                            

  

 


 

             

            

    

    
 



 





    

 



c       d             e
   

 
 
ff

   
  
fffi

  
fffi
 



 

    

 
 
ff


   

  c                  
     e 

    

figure    fipa query interaction protocol   cp net representation 

p articipant  i    and p articipant has sent an agree message and is now deciding which
response to send to initiator  p     at this point  the p articipant agent may send one
of the following communicative acts  inform t f  inform result and f ailure  the choice is
represented using another xor decision building block  where the inform t f and informresult communicative acts are represented using a single inf orm message place  the f ailure
communicative act causes a transition to the i  p  place  while the inf orm message causes
a transition to the i  p  place  the i  p  place represents a joint interaction state where
p articipant has sent a f ailure message and terminated  p     while initiator has received
a f ailure and terminated  i     the i  p  place represents a joint interaction state in which
p articipant has sent an inf orm message and terminated  p     while initiator has received
an inf orm and terminated  i    
the implementation of the  query if   and the  query ref   message guard conditions requires a detailed discussion  these are not implemented in a usual manner in view of the fact
that they depend on the original request communicative act  thus  we create a special intermediate place that contains the original message type marked  original m essage t ype 
in the figure  in case an inf orm communicative act is sent  the transition guard verifies
that the inf orm message is appropriate to the original query type  thus  an inform t f
communicative act can be sent only if the original query type has been query if and an
inform result message can be sent only if the original query type has been query ref 
   

firepresenting conversations for scalable overhearing

   representing nested   interleaved interactions
in this section  we extend the cp net representation of previous sections to model nested
and interleaved interaction protocols  we focus here on nested interaction protocols  nevertheless  the discussion can also be addressed to interleaved interaction protocols in a similar
fashion 
fipa conversation standards  fipa specifications      c  emphasize the importance of
nested and interleaved protocols in modelling complex interactions  first  this allows reuse of interaction protocols in different nested interactions  second  nesting increases the
readability of interaction protocols 
the auml notation annotates nested and interleaved protocols as round corner rectangles  odell et al       a  fipa specifications      c   figure   a shows an example of
a nested protocol    while figure   b illustrates an interleaved protocol  nested protocols
have one or more compartments  the first compartment is the name compartment  the
name compartment holds the  optional  name of the nested protocol  the nested protocol
name is written in the upper left hand corner of the rectangle  i e  commitment in figure  a  the second compartment  the guard compartment  holds the  optional  nested protocol
guard  the guard compartment is written in the lower left hand corner of the rectangle  e g 
 commit  in figure   a  nested protocols without guards are equivalent to nested protocols
with the  true  guard 
 

 

 

  

    


fffi

 



 
fffifi 

ff 

 
  

fi fi



 a  nested protocol

 b  interleave protocol

figure    auml nested and interleaved protocols examples 
figure    describes the implementation of the nested interaction protocol presented in
figure   a by extending the cp net representation to using hierarchies  relying on standard cp net methods  see appendix a   the hierarchical cp net representation contains
three elements  a superpage  a subpage and a page hierarchy graph  the cp net superpage
represents the main interaction protocol containing a nested interaction  while the cp net
subpage models the corresponding nested interaction protocol  i e  the commitment inter   figure   a appears in fipa conversation standards  fipa specifications      c   nonetheless  note that
the request good and the request pay communicative acts are not part of the fipa acl standards 

   

figutnik   kaminka

action protocol  the page hierarchy graph describes how the superpage is decomposed into
subpages 

     ff ff ffff


ff

 

fffffi
ff    ff  ff ffff

ff     
 
 
fffffi    
fffffi
      
 

    ff 
ffffff



ff  

ff    ff ffff ff

ff  
 ff  ffff ff

 


fffffi 


 

 

 

  

figure     nested protocol implementation using hierarchical cp nets 
let us consider in detail the process of modelling the nested interaction protocol in
figure   a using a hierarchical cp net  resulting in the net described in figure     first  we
identify the starting and ending points of the nested interaction protocol  the starting point
of the nested interaction protocol is where buyer  sends a request good communicative act
to seller    the ending point is where buyer  receives a request pay communicative act
from seller    we model these nested protocol end points as cp net socket nodes on the
superpage  i e  m ain interaction p rotocol  b   s   and request good are input socket
nodes and b   s   is an output socket node 
the nested interaction protocol  the commitment interaction p rotocol  is represented
using a separate cp net  following the principles outlined in sections   and    this net
is a subpage of the main interaction protocol superpage  the nested interaction protocol
starting and ending points on the subpage correspond to the net port nodes  the b  s  and
request good places are the subpage input port nodes  while the b  s  place is an output
port node  these nodes are tagged with the in out port type tags correspondingly 
then  a substitution transition  which is denoted using hs  hierarchy and substitution   connects the corresponding socket places on the superpage  the substitution transition conceals the nested interaction protocol implementation from the net superpage  i e 
the m ain interaction p rotocol  the nested protocol name and guard compartments are
mapped directly to the substitution transition name and guard respectively  consequently 
in figure    we define the substitution transition name as commitment and the substitution
guard is determined to be  commit  
the superpage and subpage interface is provided using the hierarchy inscription  the
hierarchy inscription is indicated using the dashed box next to the substitution transition  the first line in the hierarchy inscription determines the subpage identity  i e  the
   

firepresenting conversations for scalable overhearing

commitment interaction p rotocol in our example  moreover  it indicates that the substitution transition replaces the corresponding subpage detailed implementation on the superpage  the remaining hierarchy inscription lines introduce the superpage and subpage port
assignment  the port assignment relates a socket node on the superpage with a port node
on the subpage  the substitution transition input socket nodes are related to the in tagged
port nodes  analogously  the substitution transition output socket nodes correspond to the
out tagged port nodes  therefore  the port assignment in figure    assigns the net socket
and port nodes in the following fashion  b   s   to b  s    request good to request good
and b   s   to b  s   
finally  the page hierarchy graph describes the decomposition hierarchy  nesting  of
the different protocols  pages   the cp net pages  the m ain interaction p rotocol and
the commitment interaction p rotocol  correspond to the page hierarchy graph nodes
 figure      the arc inscription indicates the substitution transition  i e  commitment 

   representing temporal aspects of interactions
two temporal interaction aspects are specified by fipa  fipa specifications      c   in
this section  we show how timed cp nets  see also appendix a  can be applied for modelling
agent interactions that involve temporal aspects  such as interaction duration  deadlines for
message exchange  etc 
a first aspect  duration  is the interaction activity time period  two periods can be
distinguished  transmission time and response time  the transmission time indicates the
time interval during which a communicative act  is sent by one agent and received by the
designated receiver agent  the response time period denotes the time interval in which
the corresponding receiver agent is performing some task as a response to the incoming
communicative act 
the second temporal aspect is deadlines  deadlines denote the time limit by which
a communicative act must be sent  otherwise  the corresponding communicative act is
considered to be invalid  these issues have not been addressed in previous investigations
related to agent interactions modelling using petri nets  
we propose to utilize timed cp nets techniques to represent these temporal aspects of
agent interactions  in doing so  we assume a global clock   we begin with deadlines  figure    a introduces the auml representation of message deadlines  the deadline keyword
is a variation of the communicative act sequence expressions described in section    it
sets a time constraint on the start of the transmission of the associated communicative act 
in figure    a  agent  must send the msg communicative act to agent  before the defined
deadline  once the deadline expires  the msg communicative act is considered to be invalid 
figure    b shows a timed cp net implementation of the deadline sequence expression 
the timed cp net in figure    b defines an additional msg time color set associated with
the net message places  the msg time color set extends the m sg color set  described in
section    by adding a time stamp attribute to the message token  thus  the communicative
   cost et al               mention deadlines without presenting any implementation details 
   implementing it  we can use the private clock of an overhearing agent as the global clock for our petri
net representation  thus  the time stamp of the message is the overhearers time when the corresponding
message was overheard 

   

figutnik   kaminka



 


 
ff fi


            
            
               
                


 
ff
               
fiff
fi  
              
               
   
              
                       
   
                   
 
ff
            

fi  
         

 a  auml representation

 b  cp net representation

figure     deadline sequence expression 
act token is a record hs  r  t  ci  t ts   the       expression denotes the corresponding token
time stamp  whereas the token time value is indicated starting with a capital t  accordingly  the described message token has a ts time stamp  the communicative act time limit
is defined using the val deadline parameter  therefore  the deadline sequence expression
semantics is simulated using the following transition guard   t ts   t deadline   this transition guard  comparing the msg time stamp against the deadline parameter  guarantees
that an expired msg communicative act can not be received 
we now turn to representing interaction duration  the auml representation is shown in
figure    a  the auml time intensive message notation is used to denote the communicative act transmission time  as a rule communicative act arrows are illustrated horizontally 
this indicates that the message transmission time can be neglected  however  in case the
message transmission time is significant  the communicative act is drawn slanted downwards 
the vertical distance  between the arrowhead and the arrow tail  denotes the message transmission time  thus  the communicative act msg    sent from agent  to agent    has a t 
transmission time 
 
ff 
 
fiff
fi
 ff
   

 
 
 
    
      
          

         
              
        

 
ff

 


 ff

fi  ff
           
fiff
 
          
           
 

        

         
                  
 
ff
  
          
fi  ff
  
    
  
 
 a  auml representation

 b  cp net representation

figure     interaction duration 
   

firepresenting conversations for scalable overhearing

the response time in figure    a is indicated through the interaction thread length 
the incoming msg  communicative act causes agent  to perform some task before sending
a response msg  message  the corresponding interaction thread duration is denoted through
the t  time period  thus  this time period specifies the agent  response time to the incoming
msg  communicative act 
the cp net implementation to the interaction duration time periods is shown in figure    b  the communicative act transmission time is illustrated using the timed cp nets
   operator  the net transitions simulate the communicative act transmission between
agents  therefore  representing a transmission time of t    the cp net transition adds a t 
time period to the incoming message token time stamp  accordingly  the transition     t t 
output arc expression denotes a t  delay to the time stamp of the outgoing token  thus 
the corresponding transition takes t  time units and consequently so does the msg  communicative act transmission time 
in contrast to communicative act transmission time  the agent interaction response time
is represented implicitly  previously  we have defined a msg time color set that indicates
message token time stamps  analogously  in figure    b we introduce an additional interstate time color set  this color set is associated with the net agent places and it presents
the possibility to attach time stamps to agent tokens as well  now  let us assume that a  b 
and msg  places contain a single token each  the circled   next to the corresponding place 
together with the multi set inscription  indicates the place current marking  thus  the agent
and the message place tokens have a ts  and a ts  time stamps respectively  the ts  time
stamp denotes the time by which agent  has received the msg  communicative act sent
by agent    the ts  time stamp indicates the time by which agent  is ready to send msg 
response message to agent    thus  the agent  response time t   figure    a  is ts   ts   

   algorithm and a concluding example
our final contribution in this paper is a skeleton procedure for transforming an auml
conversation protocol diagram of two interacting agents to its cp net representation  the
procedure is semi automatedit relies on the human to fill in some detailsbut also has
automated aspects  we apply this procedure on a complex multi agent conversation protocol
that involves many of the interaction building blocks already discussed 
the procedure is shown in algorithm    the algorithm input is an auml protocol
diagram and the algorithm creates  as an output  a corresponding cp net representation 
the cp net is constructed in iterations using a queue  the algorithm essentially creates the
conversation net by exploring the interaction protocol breadth first while avoiding cycles 
lines     create and initiate the algorithm queue  and the output cp net  respectively 
the queue  denoted by s  holds the initiating agent places of the current iteration  these
places correspond to interaction states that initiate further conversation between the interacting agents  in lines      an initial agent place a  b  is created and inserted into the
queue  the a  b  place represents a joint initial interaction state for the two agents  lines
     contain the main loop 
we enter the main loop in line   and set the curr variable to the first initiating agent
place in s queue  lines       create the cp net components corresponding to the current
iteration as follows  first  in line     message places  associated with curr agent place  are
   

figutnik   kaminka

algorithm   create conversation net input au m l output cp n  
   s  new queue
   cp n  new cp  net
  
  
  

a  b   new agent place with color information
s enqueue a  b   

  
  
  

while s not empty do
curr  s dequeue  

  
   
   
   
   

m p  createm essagep laces au m l  curr 
rp  createresultingagentp laces au m l  curr  m p  
 t r  ar   createt ransitionsandarcs au m l  curr  m p  rp  
f ixcolor au m l  cp n  m p  rp  t r  ar 

   
   
   
   
   
   
   
   
   
   

for each place p in rp do
if p was not created in current iteration then
continue
if p is not terminating place then
s enqueue p 
s
s
cp n places   cp n places m p srp
cp transitions   cp n transitions
tr
s
cp n arcs   cp n arcs ar

   
   

return cp n

created using the createm essagep laces procedure  which we do not detail here   this
procedure extracts the communicative acts that are associated with a given interaction
state  from the auml diagram  these places correspond to communicative acts  which
take agents from the joint interaction state curr to its successor s   then in line     the
createresultingagentp laces procedure creates agent places that correspond to interaction
state changes as a result of the communicative acts associated with curr agent place  again
based on the auml diagram   then  in createt ransitionsandarcs procedure  line     
these places are connected using the principles described in sections     thus  the cp net
structure  net places  transitions and arcs  is created  finally  in line     the f ixcolor procedure adds token color elements to the cp net structure  to support deadlines  cardinality 
and other communicative act attributes 
lines       determine which resulting agent places are inserted into the s queue for
further iteration  only non terminating agent places  i e  places that do not correspond to
interaction states that terminate the interaction  are inserted into the queue in lines       
however  there is one exception  lines         a resulting agent place  which has already been
handled by the algorithm  is not inserted back into the s queue since inserting it can cause
an infinite loop  thereafter  completing the current iteration  the output cp net  denoted
   

firepresenting conversations for scalable overhearing

by cp n variable  is updated according to the current iteration cp net components in lines
       this main loop iterates as long as the s queue is not empty  the resulting cp net is
returnedline    

 fi fi  

   fifi 

ff

fi 

  fi



ff 



  

    


     





 

ff  fi
 
fiff   fiff 
fiff    
 fiff  

figure     fipa contract net interaction protocol using auml 
to demonstrate this algorithm  we will now use it on the fipa contract net interaction
protocol  fipa specifications      b   figure      this protocol allows interacting agents to
negotiate  the initiator agent issues m calls for proposals using a cf p communicative act 
each of the m p articipants may refuse or counter propose by a given deadline sending either
a ref use or a propose message respectively  a ref use message terminates the interaction 
in contrast  a propose message continues the corresponding interaction 
once the deadline expires  the initiator does not accept any further p articipant response messages  it evaluates the received p articipant proposals and selects one  several 
or no agents to perform the requested task  accepted proposal result in the sending of
accept proposal messages  while the remaining proposals are rejected using reject proposal
message  reject proposal terminates the interaction with the corresponding p articipant 
on the other hand  the accept proposal message commits a p articipant to perform the requested task  on successful completion  p articipant informs initiator sending either an
inform done or an inform result communicative act  however  in case a p articipant has
failed to accomplish the task  it communicates a f ailure message 
   

figutnik   kaminka

we now use the algorithm introduced above to create a cp net  which represents the
fipa contract net interaction protocol  the corresponding cp net model is constructed in
four iterations of the algorithm  figure    shows the cp net representation after the second
iteration of the algorithm  while figure    shows the cp net representation after the fourth
and final iteration 
the contract net interaction protocol starts from i  p  place  which represents a joint interaction state where initiator is ready to send a cf p communicative act  i    and p articipant
is waiting for the corresponding cf p message  p     the i  p  place is created and inserted
into the queue before the iterations through the main loop begin 
first iteration  the curr variable is set to the i  p  place  the algorithm creates
net places  which are associated with the i  p  place  i e  a cf p message place  and an
i  p  resulting agent place  the i  p  place denotes an interaction state in which initiator
has already sent a cf p communicative act to p articipant and is now waiting for its response  i    and p articipant has received the cf p message and is now deciding on an
appropriate response  p     these are created using the createm essagep laces and the
createresultingagentp laces procedures  respectively 
then  the createt ransitionsandarcs procedure in line     connects the three places
using a simple asynchronous message building block as shown in figure   b  section    
in line     as the color sets of the places are determined  the algorithm also handles the
cardinality of the cf p communicative act  by putting an appropriate sequence expression on
the transition  using the principles presented in figure   b  section     accordingly  the
color set  associated with i  p  place  is changed to the inter state card color set 
since the i  p  place is not a terminating place  it is inserted into the s queue 
second iteration  curr is set to the i  p  place  the p articipant agent can send  as a
response  either a ref use or a propose communicative act  ref use and p ropose message
places are created by createm essagep laces  line      and resulting places i  p  and i  p   
corresponding to the results of the ref use and propose communicative acts  respectively 
are created by createresultingagentp laces  line      the i  p  place represents a joint
interaction state where p articipant has sent the ref use message and terminated  p     while
initiator has received it  and terminated  i     the i  p  place represents the joint state in
which p articipant has sent the propose message  p     while initiator has received the
message and is considering its response  i    
in line     the i  p    ref use  i  p    p ropose and i  p  places are connected using the
xor decision building block presented in figure   b  section     then  the f ixcolor
procedure  line      adds the appropriate token color attributes  to allow a deadline sequence
expression  on both the ref use and the propose messages  to be implemented as shown in
figure    b  section     the i  p  place denotes a terminating state  whereas the i  p 
place continues the interaction  thus  in lines        only the i  p  place is inserted into the
queue  for the next iteration of the algorithm  the state of the net at the end of the second
iteration of the algorithm is presented in figure    
third iteration  curr is set to i  p    here  the initiator response to a p articipant
proposal can either be an accept proposal or a reject proposal  createm essagep laces procedure in line    thus creates the corresponding accept proposal and reject proposal message
places  the accept proposal and reject proposal messages cause the interacting agents to
transition to i  p  and i  p  places  respectively  these agent places are created using the
   

firepresenting conversations for scalable overhearing

           
    

 


        
   

      

 

  

  
ff fi   ff
 

 

 
 

 




fi   

    

 

  

        





fi ff
 





 



fi   

 

    

 

         
 

  

 

      

  
ff
   

          

 

   

  

  
ff

    
 

     
 

 



  
ff
fi   

 

  

    

                

 

 






      
   

 

fi 

      

fi ff

    

    

               

   

    

     
  

 
 

    
 

       

     a                                
 
 
 
              
 
 

       b  
        
c   d   
    

    
e   
    

     

    f

     


c   d      
e               e   
 
e         
 
e               



 b  

    

 a   
 

figure     fipa contract net interaction protocol using cp net after the  nd iteration 
createresultingagentp laces procedure  line      the i  p  place denotes an interaction
state in which initiator has sent a reject proposal message and terminated the interaction  i     while the p articipant has received the message and terminated as well  p     in
contrast  the i  p  place represents an interaction state where initiator has sent an acceptproposal message and is waiting for a response  i     while p articipant has received the
accept proposal communicative act and is now performing the requested task before sending
a response  p     the initiator agent sends exclusively either an accept proposal or a rejectproposal message  thus  the i  p    reject proposal  i  p    accept proposal and i  p  places
are connected using a xor decision block  in the createt ransitionsandarcs procedure 
line     
the f ixcolor procedure in line    operates now as follows  according to the interaction
protocol semantics  the initiator agent evaluates all the received p articipant proposals once
the deadline passes  only thereafter  the appropriate reject proposal and accept proposal
communicative acts are sent  thus  f ixcolor assigns a msg time color set to the rejectproposal and the accept proposal message places  and creates a  t ts    t deadline  transition guard on the associated transitions  this transition guard guarantees that initiator
cannot send any response until the deadline expires  and all valid p articipant responses
have been received  the resulting i  p  agent place denotes a terminating interaction state 
whereas the i  p  agent place continues the interaction  thus  only i  p  agent place is
inserted into the s queue 
fourth iteration  curr is set to i  p    this place is associated with three communicative acts  inform done  inform result and f ailure  the inform done and the informresult messages are instances of the inf orm communicative act class  thus  createmessageplaces  line     creates only two message places  inf orm and f ailure  in line    
createresultingagentp laces creates the i  p  and i  p  agent places  the f ailure communicative act causes interacting agents to transition to i  p  agent place  while both inf orm
messages cause the agents to transition to i  p  agent place  the i  p  place represents a
joint interaction state where p articipant has sent the f ailure message and terminated  p    
   

figutnik   kaminka

while initiator has received a f ailure communicative act and terminated  i     on the other
hand  the i  p  place denotes an interaction state in which p articipant has sent the inf orm
message  either inform done or inform result  and terminated  p     while initiator has
received an inf orm communicative act and terminated  i     the inf orm and f ailure communicative acts are sent exclusively  thus createt ransitionsandarcs  line     connects
the i  p    f ailure  i  p    inf orm and i  p  places using a xor decision building block 
then  f ixcolor assigns a   t msg   inform done or  t msg   inform result  transition
guard on the transition associated with inf orm message place  since both the i  p  and
the i  p  agent places represent terminating interaction states  they are not inserted into the
queue  which remains empty at the end of the current iteration  this signifies the end of the
conversion  the complete conversation cp net resulting after this iteration of the algorithm
is shown in figure    
   

      

     
 

  
fffi   ff

  

 






       



 

 


 
 

fi   

 



 



 

 



 

fi   

           

 


 



   

fi   
 

 

 
     



fi 

fi   

 

     
l   

      

   d

fi ff

 

     g  

 i d

     
 

 f   g 

fe      

   f  ec 

        

  

f
 

j   k   

      

    m

     

j  k   bbb     

 

l  



 i d

eh d   

l    e   g 

  

l               

   

       
  
ff
fi   


   
fi 

 



   

   d

    

l     e     

 
 



      

     

     



 
  
ff

 

 e




f

  e     
 

      h d          e     

  



  
ff

           e       

 

 

   

       

    
 

  

  



     

        

 
  
ff



  

   d

 




 

         g       

fi ff

 

  
 ff

 

  

  

      

fiff

 


fi   

 





     

    

        a   abbb 

      c  

   
ff

fi ff

     



        

   

            

fi





 







  
     
 

        
 

   
      

  
ff
 

fi   

figure     fipa contract net interaction protocol using cp net after the  th  and final 
iteration 
the procedure we outline can guide the conversion of many   agent conversation protocols in auml to their cp net equivalents  however  it is not sufficiently developed to
address the general n agent case  appendix c presents a complex example of a   agent conversation protocol  which was successfully converted manually  without the guidance of the
algorithm  this example incorporates many advanced features of our cp net representation
technique and would have been beyond the scope of many previous investigations 
   

firepresenting conversations for scalable overhearing

   summary and conclusions
over recent years  open distributed mas applications have gained broad acceptance both
in the multi agent academic community and in real world industry  as a result  increasing attention has been directed to multi agent conversation representation techniques  in
particular  petri nets have recently been shown to provide a viable representation approach
 cost et al               nowostawski et al         mazouzi et al         
however  radically different approaches have been proposed to using petri nets for modelling multi agent conversations  yet  the relative strengths and weaknesses of the proposed
techniques have not been examined  our work introduces a novel classification of previous investigations and then compares these investigations addressing their scalability and
appropriateness for overhearing tasks 
based on the insights gained from the analysis  we have developed a novel representation 
that uses cp nets in which places explicitly represent joint interaction states and messages 
this representation technique offers significant improvements  compared to previous approaches  in terms of scalability  and is particularly suitable for monitoring via overhearing 
we systematically show how this representation covers essentially all the features required
to model complex multi agent conversations  as defined by the fipa conversation standards  fipa specifications      c   these include simple   complex interaction building
blocks  section     appendix b   communicative act attributes and multiple concurrent
conversations using the same cp net  section     nested   interleaved interactions using
hierarchical cp nets  section    and temporal interaction attributes using timed cp nets
 section     the developed techniques have been demonstrated  throughout the paper  on
complex interaction protocols defined in the fipa conversation standards  see in particular
the example presented in appendix c   previous approaches could handle some of these
examples  though with reduced scalability   but only a few were shown to cover all the
required features 
finally  the paper presented a skeleton procedure for semi automatically converting an
auml protocol diagrams  the chosen fipa representation standard  to an equivalent cpnet representation  we have demonstrated its use on a challenging fipa conversation protocol  which was difficult to represent using previous approaches 
we believe that this work can assist and motivate continuing research on multi agent
conversations including such issues as performance analysis  validation and verification  desel et al          agent conversation visualization  automated monitoring  kaminka et al  
      busetta et al                deadlock detection  khomenco   koutny         debugging  poutakidis et al         and dynamic interpretation of interaction protocols  cranefield
et al         de silva et al          naturally  some issues remain open for future work  for
example  the presented procedure addresses only auml protocol diagrams representing two
agent roles  we plan to investigate an n agent version in the future 

acknowledgments
the authors would like to thank the anonymous jair reviewers for many useful and informative comments  minor subsets of this work were also published as lnai book chapter
 gutnik   kaminka      b   k  ushi deserves many thanks 
   

figutnik   kaminka

appendix a  a brief introduction to petri nets
petri nets  petri nets site        are a widespread  established methodology for representing
and reasoning about distributed systems  combining a graphical representation with a comprehensive mathematical theory  one version of petri nets is called place transition nets
 pt nets   reisig         a pt net is a bipartite directed graph where each node is either
a place or a transition  figure      the net places and transitions are indicated through
circles and rectangles respectively  the pt net arcs support only place  transition and
transition  place connections  but never connections between two places or between two
transitions  the arc direction determines the input output characteristics of the place and
the transition connected  thus  given an arc  p  t   connecting place p and transition t  
we will say that place p is an input place of transition t and vice versa transition t is an
output transition of place p   the p  t arc is considered to be an output arc of place p
and an input arc of transition t  
















 a  before firing




 b  after firing

figure     a pt net example 
a pt net place may be marked by small black dots called tokens  the arc expression is
an integer  which determines the number of tokens associated with the corresponding arc 
by convention  an arc expression equal to   is omitted  a specific transition is enabled if
and only if its input places marking satisfies the appropriate arc expressions  for example 
consider arc p  t to be the only arc to connect place p and transition t   thus  given
that this arc has an arc expression    we will say that transition t is enabled if and only
if place p is marked with two tokens  in case the transition is enabled  it may fire occur 
the transition occurrence removes tokens from the transition input places and puts tokens
to the transition output places as specified by the arc expressions of the corresponding
input output arcs  thus  in figures    a and    b  we demonstrate pt net marking before
and after transition firing respectively 
although computationally equivalent  a different version of petri nets  called colored
petri nets  cp nets   jensen      a      b      c   offers greater flexibility in compactly
representing complex systems  similarly to the pt net model  cp nets consist of net places 
net transitions and arcs connecting them  however  in cp nets  tokens are not just single
bits  but can be complex  structured  information carriers  the type of additional information carried by the token  is called token color  and it may be simple  e g   an integer or a
string   or complex  e g  a record or a tuple   each place is declared by a place color set to
   

firepresenting conversations for scalable overhearing

only match tokens of particular colors  a cp net place marking is a token multi set  i e   a
set in which a member may appear more than once  corresponding to the appropriate place
color set  cp net arcs pass token multi sets between the places and transitions  cp net arc
expressions can evaluate token multi sets and may involve complex calculation procedures
over token variables declared to be associated with the corresponding arcs 
the cp net model introduces additional extensions to pt nets  transition guards are
boolean expressions  which constrain transition firings  a transition guard associated with
a transition tests tokens that pass through a transition  and will only enable the transition
firings if the guard is successfully matched  i e   the test evaluates to true   the cp net
transition guards  together with places color sets and arc expressions  appear as a part of
net inscriptions in the cp net 
in order to visualize and manage the complexity of large cp nets  hierarchical cp nets
 huber  jensen    shapiro        jensen      a  allow hierarchical representations of cpnets  in which sub cp nets can be re used in higher level cp nets  or abstracted away from
them  hierarchical cp nets are built from pages  which are themselves cp nets  superpages
present a higher level of hierarchy  and are cp nets that refer to subpages  in addition to
transitions and places  a subpage may also function as a superpage to other subpages  this
way  multiple hierarchy levels can be used in a hierarchical cp net structure 
the relationship between a superpage and a subpage is defined by a substitution transition  which substitutes a corresponding subpage instance on the cp net superpage structure
as a transition in the superpage  the substitution transition hierarchy inscription supplies
the exact mapping of the superpage places connected to the substitution transition  called
socket nodes   to the subpage places  called port nodes   the port types determine the
characteristics of the socket node to port node mappings  a complete cp net hierarchical
structure is presented using a page hierarchy graph  a directed graph where vertices correspond to pages  and directed edges correspond to direct superpage subpage relationships 
timed cp nets  jensen      b  extend cp nets to support the representation of temporal aspects using a global clock  timed cp net tokens have an additional color attribute
called time stamp  which refers to the earliest time at which the token may be used  time
stamps can be used by arc expression and transition guards  to enable a timed transition if
and only if it satisfies two conditions   i  the transition is color enabled  i e  it satisfies the
constraints defined by arc expression and transition guards  and  ii  the tokens are ready 
i e  the time of the global clock is equal to or greater than the tokens time stamps  only
then can the transition fire 

appendix b  additional examples of conversation representation
building blocks
this appendix presents some additional interaction building blocks to those already described in section    the first is the and parallel messages interaction  auml representation shown in figure    a   here  the sender agent  sends both the msg  message to
agent  and the msg  message to agent    however  the order of the two communicative acts
is unconstrained 
the representation of and parallel in our cp net representation is shown in figure    b 
the a  b  c    a  b    a  c    msg  and msg  places are defined similarly to figures   b and
   

figutnik   kaminka


 

ff fi  




      

 










  





  
  
 
 

ff fi

ff fi  
 



 



 






 
 
 

ff  

ff   
 
 
   
                 
                     
           
        

 a  auml representation

 b  cp net representation

figure     and parallel messages interaction 
  b in section    however  we also define two additional intermediate agent places  a   b  c 
and a    b  c    the a   b  c  place represents a joint interaction state where agent  has sent
the msg  message to agent  and is ready to send the msg  communicative act to agent 
 a     agent  has received the msg  message  b    and agent  is waiting to receive the msg 
communicative act  c     the a    b  c  place represents a joint interaction state in which
agent  is ready to send the msg  message to agent  and has already sent the msg  communicative act to agent   a       agent  is waiting to receive the msg  message  b    and agent 
has received the msg  communicative act  c     these places enable agent  to send both
communicative acts concurrently  four transitions connect the appropriate places respectively  the behavior of the transitions connecting a   b  c   a  b  and a    b  c   a  c 
is similar to described above  the transitions a  b  c   a   b  c  and a  b  c   a    b  c 
are triggered by receiving messages msg  and msg    respectively  however  these transitions should not consume the message token since it is used further for triggering transitions
a   b  c   a  b  and a    b  c   a  c    this is achieved by adding an appropriate message
place as an output place of the corresponding transition 
the second auml interaction building block  shown in figure    a  is the message
sequence interaction  which is similar to and parallel  however  the message sequence
interaction defines explicitly the order between the transmitted messages  using the   msg 
and   msg  notation  figure    a specifies that the msg  message should be sent before
sending msg   
figure    b shows the corresponding cp net representation  the a  b  c    a  b    a  c   
msg  and msg  places are defined as before  however  the cp net implementation presents
an additional intermediate agent placea   b  c which is identical to the corresponding
   

firepresenting conversations for scalable overhearing


  
fffi

 
ff


  

   




 
fffi

 
ff





 
  





 
fffi

 
ff
 




 



 
fffi

 
ff



  



     
                      
                             
                  
        



 a  auml representation

 b  cp net representation

figure     sequence messages interaction 
intermediate agent place in figure    b  a   b  c  is defined as an output place of the
a  b  c   a  b  transition  it thus guarantees that the msg  communicative act can be
sent  represented by the a   b  c   a  c  transition  only upon completion of the msg 
transmission  the a  b  c   a  b  transition  
the last interaction we present is the synchronized messages interaction  shown in figure    a  here  agent  simultaneously receives msg  from agent  and msg  from agent   
in auml  this constraint is annotated by merging the two communicative act arrows into
a horizontal bar with a single output arrow 

  
fffi
   


 
fffi
   

 

 








 
fffi
   
fi 

 

 
fffi
   







 
 
fffi
   

 

 



 
 
  

 
 
 

   
                  
                         
                
        

 

 a  auml representation

 b  cp net representation

figure     synchronized messages interaction 
   

figutnik   kaminka

figure    b illustrates the cp net implementation of synchronized messages interaction 
as in previous examples  we define the a  c    b  c    msg    msg  and a  b  c  places  we
additionally define two intermediate agent places  a  c   and b  c      the a  c   place represents a joint interaction state where agent  has sent msg  to agent   a     and agent  has
received it  however agent  is also waiting to receive msg   c      the b  c    place represents
a joint interaction state in which agent  has sent msg  to agent   b     and agent  has
received it  however agent  is also waiting to receive msg   c       these places guarantee
that the interaction does not transition to the a  b  c  state until both msg  and msg  have
been received by agent   

appendix c  an example of a complex interaction protocol
we present an example of a complex   agent conversation protocol  which was manually converted to a cp net representation using the building blocks in this paper  the conversation
protocol addressed here is the fipa brokering interaction protocol  fipa specifications 
    a   this interaction protocol incorporates many advanced conversation features of our
representation such as nesting  communicative act sequence expression  message guards and
etc  its auml representation is shown in figure    
the initiator agent begins the interaction by sending a proxy message to the broker
agent  the proxy communicative act contains the requested proxied communicative act as
part of its argument list  the broker agent processes the request and responds with either an
agree or a ref use message  communication of a ref use message terminates the interaction 
if the broker agent has agreed to function as a proxy  it then locates the agents matching
the initiator request  if no such agent can be found  the broker agent communicates
a failure no match message and the interaction terminates  otherwise  the broker agent
begins m interactions with the matching agents  for each such agent  the broker informs the
initiator  sending either an inform done proxy or a failure proxy communicative act  the
failure proxy communicative act terminates the sub protocol interaction with the matching
agent in question  the inform done proxy message continues the interaction  as the subprotocol progresses  the broker forwards the received responses to the initiator agent using
the reply message sub protocol communicative acts  however  there can be other failures
that are not explicitly returned from the sub protocol interaction  e g   if the agent executing
the sub protocol has failed   in case the broker agent detects such a failure  it communicates
a failure brokering message  which terminates the sub protocol interaction 
a cp net representation of the fipa brokering interaction protocol is shown in figure     the brokering interaction protocol starts from i  b  place  the i  b  place represents a joint interaction state where initiator is ready to send a proxy communicative
act  i    and broker is waiting to receive it  b     the proxy communicative act causes the
interacting agents to transition to i  b    this place denotes an interaction state in which
initiator has already sent a proxy message to broker  i    and broker has received it  b    
the broker agent can send  as a response  either a ref use or an agree communicative act 
this cp net component is implemented using the xor decision building block presented
in section    the ref use message causes the agents to transition to i  b  place and thus
terminate the interaction  this place corresponds to broker sending a ref use message
and terminating  b     while initiator receiving the message and terminating  i     on the
   

firepresenting conversations for scalable overhearing


 fffi   ff 

 

 

        
            
  

  

   

  

   

         
       

       
       

       

     

    

      
 


   

     
      

              

        
 
       


    

     

   

        
       
       

figure     fipa brokering interaction protocol   auml representation 
other hand  the agree communicative act causes the agents to transition to i  b  place 
which represents a joint interaction state in which the broker has sent an agree message
to initiator  and is now trying to locate the receivers of the proxied message   while the
initiator received the agree message 
the broker agents search for suitable receivers may result in two alternatives  first 
in case no matching agents are found  the interaction terminates in the i  b  agent place 
this joint interaction place corresponds to an interaction state where broker has sent the
failure no match communicative act  b     and initiator has received the message and terminated  i     the second alternative is that suitable agents have been found  then  broker
starts sending proxied communicative act messages to these agents on the established list
of designated receivers  i e  target list  the first such proxied communicative act message causes the interacting agents to transition to i  b  p  place  the i  b  p  place denotes
a joint interaction state of three agents  initiator  broker and p articipant  the receiver  
   

figutnik   kaminka



 

  
fffi

    



 
 
ff

                


b                     

 

 

   kb



              

  
fffi





 

 



                

   

                      

                   
                     


 

 


 
 
ff


   

 

  
fffi

 
 
ff

                  



 

   
  
fffi

                       

  

 
 
ff

           

                 




   



                   
               

  



     
 

 

  
    


ij ff

   


   

h     


      

 l

                     

 

 

                

    

 

             

                

g

 
 
ff

 

k        k  l   l
  
fffi

   
  
fffi





          
                      


k       l

e fif


 


 
 
ffd

g

                                   

                      
            

 

 
m

                 

a          b   c

k         k n  l   n  l

             
          

   
h     

 

 
 p

 

 
 
ffd


 

   

    
                

 

  
fffi


 

        





   

  
fffi

 
m





 
 
ff


 

 

 

 

r    s     

q 
    

r                   

  
fffi
 
 
ffd
 

 
m o

 x  xx  
w
                     


  

 
p t 

 u  



xy z 

    

h     

 
v 

  
fffi

  
ff fi

 
 
ffd

 
 
ff

   

xy z 

 
w

  
 
  
w


  


 

  r  

xy z  z z  

r     s 

 


    
     

   

 s 
    

    

  
fffi

  
fffi

 
 
ff d

 
 
ffd
o





t

    

 
 

figure     fipa brokering interaction protocol   cp net representation 
the initiator individual state remains unchanged  i    since the proxied communicative act
message starts an interaction between broker and p articipant  the broker individual
state  b    denotes that designated agents have been found and the proxied communicative   

firepresenting conversations for scalable overhearing

act messages are ready to be sent  while p articipant is waiting to receive the interaction
initiating communicative act  p     the proxied communicative act message place is also
connected as an output place of the transition  this message place is used as part of a
cp net xor decision structure  which enables the broker agent to send either a failure nomatch or a proxied communicative act  respectively  thus  the token denoting the proxiedcommunicative act message  must not be consumed by the transition 
thus  multiple proxied communicative act messages are sent to all p articipants  this
is implemented similarly to the broadcast sequence expression implementation  section    
furthermore  the proxied communicative act type is verified against the type of the requested
proxied communicative act  which is obtained from the original proxy message content 
we use the proxied communicative act type message type place to implement this cpnet component similarly to figure    each proxied communicative act message causes the
interacting agents to transition to both the i  b  p  and the b  p  places 
the b  p  place corresponds to interaction between the broker and the p articipant
agents  it represents a joint interaction state in which broker is ready to send a proxiedcommunicative act message to p articipant  b     and p articipant is waiting for the message
 p     in fact  the b  p  place initiates the nested interaction protocol that results in b   p 
place  the b   p  place represents a joint interaction state where p articipant has sent
the reply message communicative act and terminated  p     and broker has received the
message  b      in our example  we have chosen the fipa query interaction protocol  fipa
specifications      d   figures     as the interaction sub protocol  the cp net component 
implementing the nested interaction sub protocol  is modeled using the principles described
in section    consequently  the interaction sub protocol is concealed using the query subprotocol substitution transition  the b  p    proxied communicative act and b   p  places
determine substitution transition socket nodes  these socket nodes are assigned to the cpnet port nodes in figure   as follows  the b  p  and proxied communicative act places are
assigned to the i  p  and query input port nodes  while the b   p  place is assigned to the
i  p    i  p  and i  p  output port nodes 
we now turn to the i  b  p  place  in contrast to the b  p  place  this place corresponds to
the main interaction protocol  the i  b  p  place represents a joint interaction state in which
initiator is waiting for broker to respond  i     broker is ready to send an appropriate response communicative act  b     and to the best of the initiators knowledge the interaction
with p articipant has not yet begun  p     the broker agent can send one of two messages 
either a failure proxy or an inform done proxy  depending on whether it has succeeded to
send the proxied communicative act message to p articipant  the failure proxy message
causes the agents to terminate the interaction with corresponding p articipant agent and to
transition to i  b  p  place  this place denotes a joint interaction state in which initiator
has received a failure proxy communicative act and terminated  i     broker has sent the
failure proxy message and terminated as well  b    and the interaction with the p articipant
agent has never started  p     on the other hand  the inform done proxy causes the agents to
transition to i  b  p  place  the i  b  p  place represents an interaction state where broker
has sent the inform done proxy message  b     initiator has received it  i     and p articipant
has begun the interaction with the broker agent  p     again  this is represented using the
xor decision building block 
   

figutnik   kaminka

finally  the broker agent can either send a reply message sub protocol or a failurebrokering communicative act  the failure brokering message causes the interacting agents
to transition to i  b   p  place  this place indicates that broker has sent a failure brokering
message and terminated  b      initiator has received the message and terminated  i     and
p articipant has terminated during the interaction with the broker agent  p     the replymessage sub protocol communicative act causes the agents to transition to i  b   p  place 
the i  b   p  place indicates that broker has sent a reply message sub protocol message and
terminated  b      initiator has received the message and terminated  i     and p articipant
has successfully completed the nested sub protocol with the broker agent and terminated as
well  p     thus  the b   p  place  denoting a successful completion of the nested sub protocol 
is also the corresponding transition input place 

references
auml site         agent unified modeling language  at www auml org  
busetta  p   dona  a     nori  m          channelled multicast for group communications 
in proceedings of aamas    
busetta  p   serafini  l   singh  d     zini  f          extending multi agent cooperation
by overhearing  in proceedings of coopis    
chaibdraa  b          trends in agent communication languages  computational intelligence                
cost  r  s          a framework for developing conversational agents  ph d  thesis  department of computer science  university of maryland 
cost  r  s   chen  y   finin  t   labrou  y     peng  y          modeling agent conversations
with coloured petri nets  in proceedings of the workshop on specifying and implementing conversation policies  the third international conference on autonomous agents
 agents      seattle  washington 
cost  r  s   chen  y   finin  t   labrou  y     peng  y          using coloured petri nets
for a conversation modeling  in dignum  f     greaves  m   eds    issues in agent
communications  lecture notes in computer science  pp          springer verlag 
cranefield  s   purvis  m   nowostawski  m     hwang  p          ontologies for interaction protocols  in proceedings of the workshop on ontologies in agent systems  the
first international joint conference on autonomous agents   multi agent systems
 aamas      bologna  italy 
de silva  l  p   winikoff  m     liu  w          extending agents by transmitting protocols
in open systems  in proceedings of the workshop on challenges in open agent systems  the second international joint conference on autonomous agents   multi agent
systems  aamas      melbourne  australia 
desel  j   oberweis  a     zimmer  t          validation of information system models  petri
nets and test case generation  in proceedings of the      ieee international conference on systems  man and cybernetics  computational cybernetics and simulation 
pp            orlando  florida 
   

firepresenting conversations for scalable overhearing

finin  t   labrou  y     mayfield  j          kqml as an agent communication language 
in bradshaw  j   ed    software agents  mit press 
fipa site         fipa   the foundation for intelligent physical agents  at www fipa org  
fipa specifications      a   fipa brokering interaction protocol specification  version h 
at www fipa org specs fipa          
fipa specifications      b   fipa contract net interaction protocol specification  version
h  at www fipa org specs fipa          
fipa specifications      c   fipa interaction protocol library specification  version e  at
www fipa org specs fipa          
fipa specifications      d   fipa query interaction protocol specification  version h  at
www fipa org specs fipa          
gutnik  g     kaminka  g       a   towards a formal approach to overhearing  algorithms
for conversation identification  in proceedings of aamas    
gutnik  g     kaminka  k  a       b   a scalable petri net representation of interaction
protocols for overhearing   in van eijk  r  m   huget  m     dignum  f   eds    agent
communication lnai       international workshop on agent communication  ac
      new york  ny  usa  pp        springer verlag 
hameurlain  n          mip nets  refinement of open protocols for modeling and analysis
of complex interactions in multi agent systems  in proceedings of the  rd international
central and eastern european conference on multi agent systems  ceemas      pp 
        prague  czech republic 
huber  p   jensen  k     shapiro  r  m          hierarchies in coloured petri nets  in
jensen  k     rozenberg  g   eds    high level petri nets  theory and application 
pp          springer verlag 
jensen  k       a   coloured petri nets  basic concepts  analysis methods and practical
use  vol     springer verlag 
jensen  k       b   coloured petri nets  basic concepts  analysis methods and practical
use  vol     springer verlag 
jensen  k       c   coloured petri nets  basic concepts  analysis methods and practical
use  vol     springer verlag 
kaminka  g   pynadath  d     tambe  m          monitoring teams by overhearing  a
multi agent plan recognition approach  jair            
khomenco  v     koutny  m          lp deadlock checking using partial order dependencies  in proceedings of the   th international conference on concurrency theory
 concur      pp          pennsylvania state university  pennsylvania 
kone  m  t   shimazu  a     nakajima  t          the state of the art in agent communication languages  knowledge and information systems            
legras  f          using overhearing for local group formation  in proceedings of aamas   
   

figutnik   kaminka

lin  f   norrie  d  h   shen  w     kremer  r          a schema based approach to specifying conversation policies  in dignum  f     greaves  m   eds    issues in agent
communications  lecture notes in computer science  pp          springer verlag 
ling  s     loke  s  w          mip nets  a compositional model of multi agent interaction 
in proceedings of the  rd international central and eastern european conference on
multi agent systems  ceemas      pp        prague  czech republic 
mazouzi  h   fallah seghrouchni  a  e     haddad  s          open protocol design for
complex interactions in multi agent systems  in proceedings of the first international
joint conference on autonomous agents   multi agent systems  aamas      pp 
        bologna  italy 
milner  r   harper  r     tofte  m          the definition of standard ml  mit press 
moldt  d     wienberg  f          multi agent systems based on coloured petri nets  in
proceedings of the   th international conference on application and theory of petri
nets  icatpn      pp         toulouse  france 
novick  d     ward  k          mutual beliefs of multiple conversants  a computational
model of collaboration in air traffic control  in proceedings of aaai     pp         
nowostawski  m   purvis  m     cranefield  s          a layered approach for modeling
agent conversations  in proceedings of the second international workshop on infrastructure for agents  mas and scalable mas  the fifth international conference on
autonomous agents  pp          montreal  canada 
odell  j   parunak  h  v  d     bauer  b          extending uml in the design of multiagent systems  in proceedings of the aaai      workshop on agent oriented information systems  aois     
odell  j   parunak  h  v  d     bauer  b       a   agent uml  a formalism for specifying
multi agent interactions  in ciancarini  p     wooldridge  m   eds    agent oriented
software engineering  pp         springer verlag  berlin 
odell  j   parunak  h  v  d     bauer  b       b   representing agent interaction protocols in uml  in ciancarini  p     wooldridge  m   eds    agent oriented software
engineering  pp          springer verlag  berlin 
parunak  h  v  d          visualizing agent conversations  using enhances dooley graphs
for agent design and analysis  in proceedings of the second international conference
on multi agent systems  icmas     
paurobally  s     cunningham  j          achieving common interaction protocols in open
agent environments  in proceedings of the workshop on challenges in open agent
systems  the second international joint conference on autonomous agents   multiagent systems  aamas      melbourne  australia 
paurobally  s   cunningham  j     jennings  n  r          ensuring consistency in the
joint beliefs of interacting agents  in proceedings of the second international joint
conference on autonomous agents   multi agent systems  aamas      melbourne 
australia 
   

firepresenting conversations for scalable overhearing

petri nets site         petri nets world  online services for the international petri nets
community  at www daimi au dk petrinets  
poutakidis  d   padgham  l     winikoff  m          debugging multi agent systems using
design artifacts  the case of interaction protocols  in proceedings of the first international joint conference on autonomous agents   multi agent systems  aamas     
pp          bologna  italy 
purvis  m  k   hwang  p   purvis  m  a   cranefield  s  j     schievink  m          interaction protocols for a network of environmental problem solvers  in proceedings
of the      iemss international meeting integrated assessment and decision support
 iemss        pp          lugano  switzerland 
ramos  f   frausto  j     camargo  f          a methodology for modeling interactions in
cooperative information systems using coloured petri nets  international journal of
software engineering and knowledge engineering                 
reisig  w          petri nets  an introduction  springer verlag 
rossi  s     busetta  p          towards monitoring of group interactions and social roles
via overhearing  in proceedings of cia     pp        erfurt  germany 
smith  i  a     cohen  p  r          toward a semantics for an agent communications
language based on speech acts  in proceedings of aaai    
wikstrom  a          functional programming using standard ml  international series in
computer science  prentice hall 
xu  h     shatz  s  m          an agent based petri net model with application to
seller buyer design in electronic commerce  in proceedings of the  th international
symposium on autonomous decentralized systems  isad      pp        dallas 
texas  usa 

   

fi