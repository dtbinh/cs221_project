journal of artificial intelligence research                 

submitted        published      

belief tracking for planning with sensing  width 
complexity and approximations
blai bonet

bonet ldc usb ve

departamento de computacion
universidad simon bolvar
caracas  venezuela

hector geffner

hector geffner upf edu

icrea   universitat pompeu fabra
roc boronat    
      barcelona  spain

abstract
we consider the problem of belief tracking in a planning setting where states are valuations over a set of variables that are partially observable  and beliefs stand for the sets
of states that are possible  while the problem is intractable in the worst case  it has been
recently shown that in deterministic conformant and contingent problems  belief tracking is exponential in a width parameter that is often bounded and small  in this work 
we extend these results in two ways  first  we introduce a width notion that applies to
non deterministic problems as well  develop a factored belief tracking algorithm that is exponential in the problem width  and show how it applies to existing benchmarks  second 
we introduce a meaningful  powerful  and sound approximation scheme  beam tracking  that
is exponential in a smaller parameter  the problem causal width  and has much broader applicability  we illustrate the value of this algorithm over large instances of problems such
as battleship  minesweeper  and wumpus  where it yields state of the art performance in
real time 

   introduction
planning with incomplete information can be formulated as a search problem in belief space
where two issues need to be addressed  keeping track of beliefs  and searching for a goal
belief  bonet   geffner         while the two tasks are intractable in the worst case
over compact representations  this is the approach adopted in most recent conformant and
contingent planners where beliefs are handled using sat  regression techniques  or logical
normal forms such as cnf  dnf  and obdds  and the search for goal beliefs is guided
by domain independent heuristics  bertoli  cimatti  roveri    traverso        hoffmann  
brafman        bryce  kambhampati    smith        to  pontelli    son        shani  
brafman        brafman   shani        
recently  the complexity of belief tracking in deterministic conformant and contingent
planning has been shown to be exponential in a problem width parameter that is often
bounded and small  palacios   geffner        albore  palacios    geffner         the
bound follows from a family of translations developed for compiling planning problems over
beliefs into planning problems over states  the translations are exponential in the problem
c
    
ai access foundation  all rights reserved 

fibonet   geffner

width  and for deterministic conformant problems result in problems that can be solved by
classical planners 
the difficulty in extending the results of palacios  albore  and geffner to the nondeterministic setting is a consequence of the special role played by the initial situation in
deterministic problems  in such a case  all uncertainty  and in particular  the uncertainty
about observations  action preconditions  and goals  which is the one that matters in a
complete planner  is the result of the uncertainty about the initial situation  in the nondeterministic setting  on the other hand  uncertainty is produced dynamically as a result of
the application of non deterministic actions  moreover  while an uncertain initial situation
can always be modeled by a fully known initial situation and a dummy non deterministic
action  the opposite transformation is not as simple  indeed  non deterministic effects can
be compiled into deterministic effects that are conditional on the value of hidden variables 
but the number of hidden variables required must grow then with the planning horizon
 weld  anderson    smith        albore  ramirez    geffner        
the aim of this work is the study of the computational complexity of belief tracking
in terms of novel width parameters that apply to both deterministic and non deterministic
planning problems  and the formulation of practical approximate belief tracking algorithms
that can be efficient and effective even for problems with large width  we will achieve this
by considering two decomposition schemes for belief tracking  and three algorithms based
on these decompositions  more precisely  we introduce 
   a width notion for planning that is in close correspondence with the notion introduced
by palacios  albore  and geffner but which applies to non deterministic problems as
well 
   a first belief tracking algorithm  factored belief tracking  that is sound and complete
for both deterministic and non deterministic problems p   and runs in time and space
exponential in the problem width w p    the algorithm is based on a decomposition
of the problem p into projected subproblems px   one for every goal and precondition
variable x  each one including the variables that are relevant to x 
   a second belief tracking algorithm  causal belief tracking  that is based on an alternative
decomposition scheme  where subproblems px are defined for every goal  precondition 
and observable variable x  each one including the variables that are causally relevant to
x  the algorithm is sound and complete for a large and meaningful class of problems 
and while it is still time exponential in the problem width  it is space exponential in the
causal width of the problem that is often much smaller 
   a final belief tracking algorithm  beam tracking that is a sound but incomplete approximation of causal belief tracking  and is often practical enough  even in problems with
large widths  as it runs in time and space that are exponential in the problem causal
width 
the power of the last algorithm  beam tracking  will be shown empirically over large
instances of problems such as minesweeper  battleship  and wumpus  where state of the   

fibelief tracking for planning with sensing

art performance is obtained in real time by combining the belief tracking algorithm with
simple heuristics for action selection  
the organization of the paper follows this structure  preceded by an overview of the
relevant notation and background  and followed by a description of the experiments  a
discussion of related work  and a summary  the paper integrates results from two conference
papers  bonet   geffner      b         providing proofs and additional details  the work
is related to other proposals for tractable forms of belief tracking in logical and probabilistic
frameworks  doucet  freitas  murphy    russell        amir   russell         yet there are
two key differences  one is that we start with an exact account that is used to determine with
certainty whether the goal has been achieved or an action is applicable  the second is that
belief tracking accounts in planning do not have to be complete over all formulas  in order to
have a sound and complete planner  only the beliefs over observations  action preconditions 
and goals are required  this is important because observations  action preconditions  and
goals are given  and the structure of the actions  sensors  and goals can be exploited to
track those beliefs more efficiently  this observation is implicit in lazy belief tracking
schemes for planning with incomplete information that appeal to sat solvers  hoffmann  
brafman        or regression  shani   brafman         well say more about related work
in section    

   model
the model for planning with sensing is a simple extension of the model for conformant
planning where a goal is to be achieved with certainty in spite of uncertainty in the initial
situation or action effects  goldman   boddy        smith   weld         the model for
conformant planning is characterized by a tuple s   hs  s    sg   a  f i where
 s is a finite state space 
 s  is a non empty set of possible initial states  s   s 
 sg is a non empty set of goal states  sg  s 
 a is a set of actions with a s  denoting the sets of actions applicable in s  s  and
 f is a non deterministic state transition function such that f  a  s  denotes the nonempty set of possible successor states that follow action a in s  for a  a s  
a solution to a conformant model is an action sequence that maps each possible initial state
into a goal state  more precisely     ha            an  i is a conformant plan if for each possible
sequence of states s    s            sn such that s   s  and si    f  ai   si    i              n    
action ai is applicable in si and sn is a goal state 
conformant planning can be cast as a path finding problem over beliefs  defined as the
sets of states that are deemed possible at any time point  bonet   geffner         the
initial belief b  is s    and the belief ba that results from an action a in a belief state b is 
ba    s    there is a s  b such that s   f  a  s    

   

   a real time animation of the algorithm for several instances of minesweeper can be seen in https 
  www youtube com watch v u  ow n  ra  while all the source code and graphical interfaces can be
obtained at http   code google com p belief tracking 

   

fibonet   geffner

where the action a is applicable in b if it is applicable in each state s in b  in this formulation 
a conformant plan is an action sequence that maps the initial belief b  into a goal belief bg  
i e   a set of goal states 
contingent planning or planning with sensing is planning with both uncertainty and
feedback  the model for contingent planning is the model for conformant planning extended
with a sensor model  a sensor model is a function o s  a  mapping state action pairs
into observations tokens o  the expression o  o s  a  means that token o is a possible
observation when s is the true state of the system and a is the last action done  the
observed token o provides partial information about the true but possibly hidden system
state as the same token may be possible in different states  if two different tokens o 
and o  belong to o s  a   it means that either one can be observed in s when a is the
last action  sensing is deterministic or noiseless when o s  a  contains one token  else it
is non deterministic or noisy  the contingent model is similar to pomdps  kaelbling 
littman    cassandra        but with uncertainty encoded through sets of states rather
than probability distributions 
executions in the contingent setting are sequences ha    o    a    o         i of pairs of actions
ai and observations oi   if b   bi is the belief state when the action ai is applied and oi is
the token that is observed  then the belief ba after the action a   ai is given by      and
the belief bi     boa that follows from observing the token o is 
boa    s   s  ba and o  o s  a    

   

an execution ha    o    a    o         i is possible if starting from the initial belief b    each action
ai is applicable in the belief bi  i e   ai  a s  for all s  bi    for i     and each belief bi is
not empty 
in off line contingent planning  an action selection strategy is sought that ensures that
all possible executions end up in a goal belief  in on line contingent planning  an action
selection strategy is sought that ensures that the single execution that results from the
interaction with the real system or simulator  ends up in a goal belief  in both cases  the
action selection strategy can be expressed as a partial function  over beliefs  called a policy 
such that  b  is the action to do in belief b  the function is partial because it has to be
defined only over the initial belief b  and some non goal beliefs b  namely  those that can be
reached with  from b  in off line planning  and those that have been reached with  from
b  in on line planning 

   language
syntactically  conformant problems can be expressed in compact form through a set of
state variables  which for convenience we assume to be multi valued   more precisely  a
conformant planning problem is a tuple p   hv  i  a  gi where v stands for the problem
variables x  each one with a finite and discrete domain dx   i is a set of clauses over the
v  literals defining the initial situation  a is a set of actions  and g is a set of v  literals
defining the goal  every action a has a precondition p re a  given by a set of v  literals  and
   multi valued variables can be compiled into boolean variables but the compilation affects the syntactic
structure of the problem  in principle  such a structure could be recovered from boolean encodings but
this would result in a more complex formulation 

   

fibelief tracking for planning with sensing

a set of conditional effects c  e           en where c and each ei are sets  conjunctions  of
v  literals  the conditional effect is non deterministic if n      else n     and the effect is
deterministic 
a problem p   hv  i  a  gi defines a conformant model s p     hs  s    sg   a  f i  where
s is the set of possible valuations over the variables in v   s  and sg are the sets of valuations
that satisfy i and g respectively  a s  is the set of operators whose preconditions are true
in s  and f  a  s  is the non deterministic transition function that results from collecting
the successor states that may follow from a by selecting one head ei from each conditional
effect c  e           en whose body c is true in s  
contingent problems can be described by extending the syntactic description of conformant problems with a compact encoding of the sensor model  for this  we assume a set
v   of observable multi valued variables y   not necessarily disjoint with the state variables
v  i e   some state variables may be observable   and formulas wa  y   y  over the state
variables  for each action a and each possible value y of each observable variable y   the
formula wa  y   y  implicitly encodes the states over which the observation literal y   y
is possible when a is the last action executed  the formulas wa  y   y  for the different y
values in dy must be logically exhaustive  as every state action pair must give rise to some
observation y   y  if in addition  the formulas wa  y   y  for the different y values are
logically exclusive  then every state action pair gives rise to a single observation y   y and
the sensing over y is deterministic  if a state variable x is observable  then wa  x   x  is
just the formula x   x 
a contingent problem p is a tuple p   hv  i  a  g  v     w i that defines a contingent
model which is made of the conformant model hs  s    sg   a  f i determined by the first four
components in p   and the sensor model o a  s  determined by the last two components 
where o  o a  s  iff o is a valuation over the observable variables y  v   such that y   y
is true in o only if the formula wa  y   y  in w is true in s for y  dy  
this is a standard language for representing contingent problems in compact form featuring both incomplete information  and non deterministic actions and sensors  its two
distinctive features in relation to similar languages are the use of multi valued variables 
and the distinction between state and observable variables 
as an illustration  if x encodes the position of an agent  and y encodes the position of
an object that can be seen by the agent when x   y   we can have an observable variable
z   y es  n o  encoding whether
the object can be seen by the agent or
w
w not  defined by the
formulas wa  z   y es    ld  x   ly   l   and wa  z   n o     ld  x   ly   l  
where d is the set of possible locations and a is any action  this will be a deterministic
sensor  a non deterministic sensor could be used if  for example  the agent cannot detect
 
the presence
w of the object at certain locations l  d   for this  it suffices to push the
disjunct ld   x   l  into the formulas characterizing wa  z   y es  and wa  z   n o   so
that the two observations z   y es and z   n o would be possible when the agent is in a
position l  d   
since a conformant problem hv  i  a  gi can be expressed as a contingent problem
hv  i  a  g  v     w i with just one  dummy  observable variable z  with z 
  v and domain
   these conditional effects must be consistent in the sense that is explained below 

   

fibonet   geffner

dz        and observation model wa  z        true for every action a  we will focus
from now on on the more general contingent problem 
likewise  for convenience  if a variable y is boolean  we often represent the literals
y   true and y   f alse as y and y   similarly  if variable y is observable  unless stated
otherwise  we assume that the observation model for y is deterministic so that the formula
wa  y   f alse  becomes the complement of the formula wa  y   true  

   belief tracking problem and flat belief tracking algorithm
an execution over the problem p   hv  i  a  g  v     w i is a sequence ha    o    a    o         i of
actions ai and observations oi such that each ai is in a and each observation oi is a full
valuation over observation variables in v     an execution ha    o            an   on i is possible over
a problem p with a non empty belief state b    if it generates a sequence of beliefs b            bn
such that the preconditions of the action ai are true in the belief bi   and the belief states
bi are not empty  the problem of belief tracking in contingent planning is the problem of
determining if an execution is possible and if the final belief state achieves the goal 
definition    belief tracking in planning  btp  is the problem of determining whether an
execution ha    o    a    o         i over a planning problem p   hv  i  a  g  v     w i is possible  and
if so  whether the resulting belief state makes the goal g true 
a complete planner needs to solve this problem for determining which actions are applicable after a given execution  what observations may result  and whether the goal has
been achieved  the machinery that we will develop is aimed at the slightly more general
belief tracking problem over generalized executions  these are executions ha    o    a    o         i
where the observations oi are partial rather than full valuations over the observable variables  moreover  it suffices to consider generalized executions where the observations are
valuations over a single observable variable  such observations oi can be represented by
observation literals  i  
definition    generalized belief tracking in planning  gbtp  is the problem of determining whether a generalized execution ha         a              i over a planning problem p  
hv  i  a  g  v     w i is possible  and if so  whether it achieves a given goal  precondition  or
observation literal 
given a procedure for deciding gbtp  it is simple to decide btp over an execution 
by calling the procedure for deciding gbtp over the generalized execution    that replaces
each observation oi by a sequence of the observation literals that are true in oi separated
by no op actions  actions with no effects  
proposition    btp is polynomial time reducible to gbtp 
while our interest is in belief tracking for planning  we will find it convenient to focus on
the generalized problem  as none of the belief update equations or algorithms is sensitive to
this distinction  for simplicity  however  we will just talk about belief tracking  and make
explicit the distinctions between btp and gbtp  and between normal and generalized
executions  when needed 
   

fibelief tracking for planning with sensing

the plain solution to the belief tracking problem is given by the updates expressed in
eqs    and    where belief states are explicitly represented as sets of states  states are full
valuations over the state variables  and the actions  transition function  and observations
are obtained from the syntactic representation of the problem 
definition    the flat belief tracking algorithm over an execution ha    o    a    o         i and
problem p   starts with the belief b  that contains the states that satisfy the initial situation 
setting the next belief state bi   to boa using     and     with b   bi   a   ai   and o   oi  
the complexity of flat belief tracking is exponential in the number of state variables  yet 
often some state variables do not add up to the complexity of tracking beliefs  syntactically 
this happens when a state variable x is initially known  all variables y that are causally
relevant to x  see below  are initially known as well  and neither x nor any variable y
causally relevant to x appears in the head of a non deterministic effect  we say that these
variables are determined as their value in every reachable belief is known  and can be fully
predicted from the preceding actions and their preceding values  for example  the variable
that encodes the position of the agent in the wumpus game is determined  as its initial
value is known and the effect of the actions on the variable is deterministic and depends
only on its previous value 
formally  we define the set of variables that are determined in a problem to be the
largest set of state variables x in the problem that are initially known such that every
state variable x   that is causally relevant to x belongs to the set  this set of variables
is easily identifiable in low polynomial time  the complexity of flat belief tracking can be
then expressed as follows 
theorem    flat belief tracking is exponential in  vu    where vu   v   vk and vk is the
set of state variables that are determined in the problem 
given this result  the first question that arises is how bad is the naive approach of flat belief
tracking  interestingly  the following result for the decision problem shows that flat belief
tracking is not bad in the worst case 
theorem    btp and gbtp are turing complete for the class pnp  
that is  btp and gbtp can be decided in polynomial time using an oracle for np  sat 
for example   and every decision problem that can be decided in polynomial time with
such an oracle  can be decided in polynomial time with an oracle for btp or gbtp  the
complexity class pnp includes the classes np and conp  and it is contained in pspace
 sipser        

   structure and width
it is possible to improve on the complexity of flat belief tracking over a specific problem
by exploiting the structure of the problem  before introducing the graph that captures
this structure  it will be convenient to make explicit some assumptions that do not restrict
the generality of the approach but make the definitions simpler  first  we assume that the
formula i encoding the initial situation contains just positive or negative literals  i e   unit
clauses only  this is not a restrictive assumption since any set of clauses can be encoded
   

fibonet   geffner

with the help of dummy observations  second  we assume that non deterministic effects
involve just one variable in their heads  again  this can always be achieved by adding extra
variables and effects  for example  the non deterministic effect x  y  z   y  z of an
action can be replaced by the deterministic effects x w  y z and x w  y z 
along with the non deterministic effect true  w   w   where w is a new random boolean
variable that is initially unknown and changes randomly  third  we assume that the problem
is consistent  meaning that the initial situation i is logically consistent so that the initial
belief state b  is not empty  and that the effects of any action a are consistent so that the
heads of the deterministic conditional effects that are applicable in a reachable state s  along
with any choice of heads of the non deterministic conditional effects that are applicable in
s  are jointly consistent   last  we assume that every observable variable is relevant to a
variable appearing in some precondition or goal  with the notion of relevance to be spelled
below  observable variables that dont comply with this condition can be eliminated from
the problem with no relevant information loss 
    relevance and width
for a variable x  whether a state variable  an observable variable  or both  the immediate
causes of x are defined as follows 
definition    a variable x is an immediate cause of a variable y in a problem p   written
x  ca y    iff x    y   and either x occurs in the body c of a conditional effect c 
e        en and y occurs in a head ei      i  n  or y is an observable variable and x
occurs in a formula wa  y   y  for some y  dy and some action a 
basically  x is an immediate cause of y when uncertainty about x may affect the
uncertainty about y directly  not through other variables  x is not necessarily an immediate
cause of y when x appears as the precondition of an action that affects y   as preconditions
must be known with certainty  and hence  do not propagate uncertainty  the notion of
causal relevance is given by the transitive closure of the immediate cause relation 
definition    x is causally relevant to y in p if x   y   x  ca y    or x is causally
relevant to a variable z that is causally relevant to y  
in order to test whether a given literal z   z is known after a certain execution
ha    a            ai i of actions in the conformant setting  it is possible to show that one can
just progress the state over the variables x that are causally relevant to z 
proposition    belief tracking in the deterministic or non deterministic conformant setting is exponential in the maximum number of non determined variables that are all causally
relevant to a variable appearing in an action precondition or goal 
this bound is closely related to the bound obtained by palacios and geffner in the
deterministic setting  indeed  if we refer to the number of non determined state variables
   from a semantic point of view  this means that a state s  is a possible successor of state s after an
action a applicable in s  i e  s   f  a  s   iff for every literal x   x true in s    x   x is in the head of a
deterministic or non deterministic conditional effect of the action a whose body is true in s  or if x   x
is true in s  and there is no effect of the action a with x   x  in the head  with x     x  whose body is
true in s 

   

fibelief tracking for planning with sensing

that are causally relevant to x  as the conformant width of x  and set the width of p as
the maximum conformant width over the variables x that appear in action preconditions
or goals  proposition   simply says that belief tracking for a non deterministic conformant
problem is exponential in the problem width  this width notion  however  is not exactly
equivalent to the notion of palacios and geffner when used in the deterministic setting as
it is defined over variables rather than literals  we will say more about this distinction
below  in general  however  the two accounts yield similar widths over most deterministic
benchmarks 
in the contingent setting  there are variables whose uncertainty may affect a variable
z but which are not causally relevant to z  the situation is similar to the one arising in
bayesian networks  pearl         where relevance flows both causally  in the direction of
the arrows  and evidentially  from the observations against the direction of the arrows 
definition     x is evidentially relevant to y in p if x is an observable variable and y
is causally relevant to x 
the notion of relevance captures the transitive closure of the  directional  causal and evidential relations 
definition     x is relevant to y if x is causally or evidentially relevant to y   or x is
relevant to a variable z that is relevant to y  
thus  a variable x   w  is relevant to a variable y   wn iff there is a chain of variables
wi      i  n     such each variable wi is causally or evidentially relevant to the next
variable wi   in the chain  for example  if x is causally relevant to y and z  and y is an
observable variable  then y will be relevant to z as y is evidentially relevant to x and x
is causally relevant to z 
like in bayesian networks  the relevance relations can be understood graph theoretically 
thus  if the directed edge z  y stands for z being an immediate cause of y   then x is
causally relevant to x   when there is a directed path from x to x     and x is evidentially
relevant to x   when x is an observable variable  and there is a directed path from x  
to x  in terms of bayesian networks  the relevance relation takes the transitive closure
of the causal and evidential relationships  and encodes potential dependency given what
may be observed  using the information that certain variables will not be observed  are
not observable   unlike bayesian networks  this means however that the relevance relation
is not symmetric  namely  a cause x of y is relevant to y   but y is not automatically
relevant to x if it is not causally relevant to an observable variable z  which may be y
itself  the context of a variable is the set of variables in the problem that are relevant to
x 
definition     the context of variable x  ctx x   denotes the set of state variables in
the problem that are relevant to x 
the width of a variable is defined as the number of state variables in its context that are
not determined 
definition     the width of a variable x  w x   is  ctx x   vu    where vu   v   vk
and vk is the set of state variables that are determined 
   

fibonet   geffner

the width of a problem is then 
definition     the width w p   of a conformant or contingent problem p   whether deterministic or not  is maxx w x  where x ranges over the variables that appear in a goal or
action precondition in p  
the relation between width and complexity can be expressed as 
theorem     belief tracking in p is exponential in w p   
the proof for this theorem follows from the results below where an algorithm that
achieves this complexity bound is presented  the significance of the theorem is that belief
tracking over planning domains with width bounded by a constant becomes polynomial in the
number of problem variables  we will see examples of this below  this complexity bound is
similar to the ones obtained for deterministic conformant and contingent problems  palacios
  geffner        albore et al          the main difference is that the new account applies
to non deterministic problems as well  the new account is simpler and more general  but
as we will see  it is also slightly less tight on some deterministic domains 

   examples
we illustrate the definitions above with some benchmark domains  starting with det ring
 cimatti  roveri    bertoli         in this domain  there is a ring of n rooms and an
agent that can move forward or backward along the ring  each room has a window which
can be opened  closed  or locked when closed  initially  the status of the windows is not
known and the agent does not know his initial location  in this domain the agent has no
means for obtaining information about the status of the windows or its position  and its
goal is to have all windows locked  a plan for this deterministic conformant problem is to
repeat n times the actions  close  lock  f wd   skipping the last f wd action  alternatively 
the action f wd can be replaced by the action bwd throughout the plan  the state variables
for the problem encode the agent location loc              n   and the status of each window 
w  i    open  closed  locked   i              n  the location variable loc is  causally  relevant
to each window variable w  i   but no window variable w  i  is relevant to loc or w  k 
for k    i  as w  i  is not causally relevant to an observable variable  none of the variables
is determined and the largest contexts are for the window variables w  i  that include two
variables  w  i  itself and loc  as a result the width of the domain is    which is independent
of the number of state variables w  i  that grows with the number of rooms n  the causal
graph of the problem  where a directed edge x  y means that x is an immediate cause
of y is shown in figure  a 
non det ring is a variation of the domain where the actions f wd and bwd of the
agent have a non deterministic effect on the status of all windows that are not locked 
capturing the possibility of external events that can open or close unlocked windows  this
non determinism has no effect on the causal graph over the variables  as a result  the
change has no effect on the contexts or domain width that remains bounded and equal to
  for any number of rooms n 
the last version of the domain considered by cimatti et al  is non det ring key 
where a key is required to lock the windows  the initial position of the key is not known 
   

fibelief tracking for planning with sensing

loc

loc

w    

w    



w  n 

w    

 a  det ring

w    

kloc



w  n 

h

 b  cont non det ring key

figure    causal graphs for the problems det ring  left  and cont non det ring key
 right   in the latter  the variable h is observable and tells us whether the key is being held
or not  an arc x  y denotes that x is an immediate cause of y   in these graphs  variables
in preconditions or goals are underlined and yellow colored  while observable variables are
enclosed in a blue circle 
yet if the agent tries to collect the key from a room and the key is there  the agent will
have the key  a conformant plan for this problem is to repeat the actions pick and f wd  n
times  skipping the last f wd action  following then the plan for det ring  in non detring key  there is an additional state variable  kloc              n  hand   that represents the
key location  the agent location loc is relevant to kloc which is relevant to each window
variable w  i   as a result  both the size of the contexts ctx w  i   and the problem width
increase by    the width however remains bounded with a value of   independently of the
number of rooms n  
in the presence of partial observability  the analysis is similar but it is necessary to
consider the relevance relationships that arise due to the presence of observable variables 
for example  one can express that the agent can always observe whether it is holding the
key or not  by having a boolean observable variable h with  deterministic  observation
model wa  h   true  given by kloc   hand  for all actions a  the only new relevance
relation among state variables that arises from adding this observable variable is between
loc and kloc  as both are causally relevant to h  before  loc was relevant to kloc but
not the other way around  yet this does not affect the domain width that remains   for
any n  the causal graph of the resulting domain is shown in figure  b 

   factored belief tracking
belief tracking over a problem p is exponential in the width w p   of p   the algorithm
that achieves this bound exploits the relevance relations encoded in the variable contexts
for decomposing beliefs  in particular  if no variable is relevant to any other variable 
the problem width is    and beliefs over each variable can be maintained separately  the
belief decomposition is obtained from projecting the problem p into smaller problems ps
where s is a set of state variables in p   semantically  the projected problems ps capture the
dynamics of the problem p when expressed over a subset s of state variables  syntactically 
the projected problems ps are defined by means of the logical notion of projection  the
   the problem can also be encoded by making holding key a precondition rather than a condition for
locking the windows  in such an encoding  the variable kloc is no longer relevant to the window
variables w  i  according to the definitions  as then kloc   hand must be known with certainty  and
hence uncertainty about the windows variables w  i  is not affected by uncertainty about kloc  the
result is that in such an encoding  the domain width reduces to   

   

fibonet   geffner

logical projection of a formula f over a subset s of its variables refers to the formula f  
defined over the variables in s  such that the valuations that satisfy f   are exactly those that
can be extended into valuations that satisfy f  darwiche   marquis         likewise  the
projection of a conditional effect c  e         e n is the conditional effect cs  es        esn
where the body c and the effects e i are replaced by their logical projections cs and esi
respectively 
definition     the projection of problem p   hv  i  a  g  v     w i over a set of variables
s  v is the problem ps   hvs   is   as   gs   vs    ws i where vs is s  is and gs are the
initial and goal formulas i and g logically projected on the variables in s  as is a but with
the preconditions and conditional effects projected over s  vs  is v     and ws is the set of
formulas wa  y   y  in w logically projected on the variables in s 
the notion of a projected planning problem has been used before in the setting of
classical planning for introducing a class of admissible heuristics known as pattern databases
 edelkamp         here we use it in the richer contingent setting for decomposing the belief
tracking problem over p into the belief tracking problem over smaller problems ps obtained
from p by projecting away some of the state variables in p  
before defining the target subproblems ps of the decomposition  notice that variables
y that are both state and observable variables in p but are not in s  will belong to vs  but
not to vs   meaning that they will be just observable variables in the projected problem ps  
moreover  the formulas for such variables y in ws will become wa  y   y    true for all
y  dy   meaning that in the problem ps   the observations y   y will be possible for any
y  regardless of the state and last action done  such observations will thus be completely
irrelevant in ps and will have no effect  in any case  p and ps share the same set of actions
and the same set of observations even if some of the actions and observations in ps may be
defined over a smaller set of state variables 
the target subproblems ps are defined in terms of the set of state variables that are
relevant to precondition and goal variables  recall that we assume that each observable
variable in the problem is relevant to some action precondition or goal  as else the variable
could be safely removed 
definition     the projection of a problem p over a variable x  denoted as px   is the
projection ps of p over the set of variables s   ctx x   where ctx x  is the context for
x in p   i e   the set of state variables in p that are relevant to x 
two basic properties of the projected problems px are 
proposition     if variable x appears in a goal or precondition  then the number of state
variables in px that are not determined is bounded by w p   
proposition     if an execution ha    o    a    o         i is possible in p   then it is also possible
in px for any state variable x in p  
if b is the belief that results after an execution in p   we will call bx the belief that
results after the same execution in the projected problem px   the completeness of the
decomposition of the global belief b over p is expressed in terms of the local beliefs bx
over the subproblems px   we treat the beliefs b and bx as relations in a database where
   

fibelief tracking for planning with sensing

the state variables in these beliefs are the columns and the possible combination of values
 states and local states  are the rows  the projection y b  for a set of variables y thus
represents the combination of values of the variables in y that are possible in b  while the
join bx o
nby represents the combination of values x and y over the sets of variables in the
two beliefs bx and by such that x and y coincide over the variables that are in both x and
y   for example  if b contains the valuations  states  x      y     and x      y      the
projection  x  b will contain the valuations x     and x      likewise  if b  contains
y      z     and y      z      the join b o
n b  will contain x      y      z     and
x      y      z     
theorem     for a state variable x  let b and bx be the beliefs that result from an execution
that is possible over both p and px   then 
x bx   x b  

   

equation   states that a literal x   x is possible in the true global belief b iff it is
possible in the belief bx that results from the same execution in the projected problem
px   this is exactly the type of completeness that is needed in planning for any variable
x involved in an action precondition or goal  the stronger form of completeness over all
formulas  that can be expressed as

o
nx bx   b  

   

where o
n stands for the join operation and x ranges over all precondition and goal variables
in the problem  is not needed  and it is actually not necessarily true  even when all state
variables appear in some context ctx x   for example  if the value of the boolean variable
z is initially unknown  and variables x and y are initially false  an action a with conditional
effects z  x  y and z  z results in a belief b with two states  corresponding to the
terms z  x  y and z  x  y   if x and y are precondition or goal variables such that
they are not relevant to each other  the projected problem px will contain the variables
x and z  and the projected problem py will contain the variables y and z  the belief
bx resulting from the execution of the action a in px will include then the local states
corresponding to the terms z  x and z  x  while the belief by over py will include the
local states corresponding to the terms z  y and z  y   clearly  the projection of b and
bx  by   over the variable x  y   coincide as dictated by      but the join of the two local
beliefs bx and by does not yield the global belief b as would correspond to      indeed  a
formula like x  y is false in the latter but not in the former  from      we can prove
inductively on the size of any execution that 
theorem        an execution is possible in p iff it is possible over each of the subproblems
px for x being a precondition or goal variable in p      for an execution  and precondition
or goal variable x  x   x  resp  x    x  is true in b iff x   x  resp  x    x  is true in
bx   where b and bx are the beliefs that result of executing  in p and px respectively 
since plain belief tracking over each projected problem px is exponential in the size of
px   which is bounded by w p   once the determined variables are excluded  it follows that 
   

fibonet   geffner

theorem     flat belief tracking over each of the projected problems px for x being a
precondition or goal variable in p   provides a sound and complete factored algorithm for
belief tracking over p that is time and space exponential in the width of p  
we call this algorithm  factored belief tracking  in order to check whether a precondition
or goal literal x   x is true after an execution  factored belief tracking checks whether
x   x is true in the belief bx that results from the execution over the subproblem px   an
execution is not possible if an action precondition x   x is not true in bx or if it results in
an empty belief over some subproblem  theorem    thus says that factored belief tracking is
a sound and complete algorithm for btp with time and space complexity exponential in the
problem width  indeed  since every observable variable y is relevant to some precondition
or goal variable x by assumption  then every direct cause z of y is relevant to x because
y is evidentially relevant to x  thus  any formula wa  y   y  can be evaluated in bx to
determine whether the observation y   y is necessary  possible or impossible after applying
the action a  thus  factored belief tracking also solves the generalized btp problem 
as an illustration of theorem     let us go back to the det ring problems p whose
structure was analyzed before  the theorem implies that in order to check whether a given
possible execution achieves the goal in p   it is sufficient to check whether each goal literal
w  i    locked  for    i  n  is achieved by the execution over the subproblem pw  i    thus 
factored belief tracking over p can be done in o n    time since there are n subproblems
pw  i    each one involving   variables  w  i  with a constant size domain and loc with a
domain of size n 
the exact same situation arises in the non deterministic conformant problem non det
ring whose causal graph is the same as the one for det ring  on the other hand  for nondet ring key  all the subproblems must keep track of the kloc variable encoding the key
location  and thus a belief update operation requires o n    time  which is still much better
than flat belief tracking over p which requires time exponential in n  the same complexity
results applies when the problem is no longer conformant and the agent can observe whether
it is holding the key or not 
some experimental figures for these domains are shown in table    where factored belief
tracking was used in combination with simple heuristics  the experiments were run on a
xeon woodcrest      cpu running at      ghz and with   gb of ram  the planner
kacmbp by cimatti et al  uses an obdd based belief representation and cardinality
heuristics  and can solve problems with up to n      rooms  producing plans with    
steps in slightly more than       seconds in non det ring key  conformant planners
such as t   palacios   geffner        cannot be used as the problem is non deterministic 
tables  a and  b show the scalability of the factored belief tracking algorithm in the context
of a greedy best first search with a p
heuristic h b   similar to the one used by albore  ramirez 
and geffner         where h b    ni   h bi    with bi being the belief factor in the projected
problem for the goal variable w  i  representing the status of the ith window  and h bi  
representing the fraction of states in bi where the goal w  i    locked is false  as displayed
in the tables  the resulting planner scales up polynomially  and for non det ring key
with     rooms  produces a plan with        actions in       seconds  for the contingent
version of the problem in which the agent detects when the key is in the room  cont detring key  a policy greedy in the cardinality heuristic h b    maxni    bi   is used instead  with
   

fibelief tracking for planning with sensing

n

steps

exp 

time

n

steps

exp 

time

n

avg  steps

avg  time

  
  
  
  
  
  
  
  
  
   

  
   
   
   
   
   
   
   
   
   

   
   
     
     
     
     
     
     
     
     

     
   
   
   
   
    
    
    
     
     

  
  
  
  
  
  
  
  
  
   

   
   
   
   
   
   
   
   
   
     

   
     
     
     
     
     
     
     
     
     

     
   
   
    
    
    
     
     
     
     

  
  
  
  
  
  
  
  
  
   

          
              
              
              
              
               
               
                
                
                

   
   
   
   
   
   
    
    
    
    

 a  det ring key

 b  non det ring key

 c  cont det ring key

table    results for conformant and contingent ring problems obtained by combining factored belief tracking with simple heuristics  each data point in panel  c  for the contingent
problem is the average  and sample standard deviation  over       random instances  times
are in seconds  the column exp  contains number of expansions 

ties broken randomly  where bi is the belief factor for the goal variable w  i   as it can be
seen in table  c  the resulting planner runs in polynomial time and can solve problems with
up to     rooms  thus  while the heuristic and policy are weak  and long executions result 
belief tracking in this problem is efficient and scales up well 

   causal belief tracking
factored belief tracking is exponential in the problem width  in many problems  however 
the width may be too high for the method to be usable in practice  as an illustration 
consider a problem p with state variables x            xn     and observable variables o            on
such that oi is true iff xi   xi     the sensors are thus wa  oi   true     xi   xi    
and wa  oi   f alse     xi    xi     for all actions a and    i  n  let us also assume
that the actions in the problem may affect each of the xi variables but do not introduce
causal relations among them  and that all the state variables appear in preconditions or
goals  the causal graph of the problem is shown in figure    its width is n     as all the
state variables interact  indeed  each variable xi is relevant to each variable xk   with the
relevance flowing from xi to xi     and vice versa  as both variables are causally relevant
to the observable variable oi which is evidentially relevant to both  the result is that the
problem p and the projected problems pxi all coincide and denote the same problem  as
the contexts for each of the state variables include all state variables 
we now focus on a different decomposition for belief tracking that maps a problem p
into smaller subproblems pxc whose size is bounded by the number of state variables that are
all causally relevant to a given precondition  goal  or observation variable  this new width
measure will be called the causal width of the problem  the problem shown in figure   has
width n     but causal width    we will then explore belief tracking algorithms that are
exponential in the problem causal width and analyze the conditions under which they are
   

fibonet   geffner

x 

x 

x 



xn

o 

o 

o 



on

xn  

figure    causal graph for the   layer network example with state variables x            xn  
and observable variables o            on     the immediate causes of each observable oi are
the variables xi and xi     precondition or goal variables appear as underlined and in a
yellow box  while observable variables appear within a blue circle  since all xi variables
are relevant to each other  the width of the problem is n      on the other hand  since at
most two variables are causally relevant to a precondition  goal  or observable variable  the
causal width of the problem is   
complete  for this  we first generalize and make explicit the decomposition underlying the
factored belief tracking algorithm 
definition     a decomposition of a problem p is a pair d   ht  bi  where t is a set of
variables x appearing in p   called the target variables of the decomposition  and b is the
collection of beams b x  associated with each such target variable which are made up of
state variables from p  
a decomposition d   ht  bi maps p into a set of subproblems pxd   one for each variable
x in t   that corresponds to the projections of p over the state variables in the beam b x  
the decomposition that underlies factored belief tracking is 
definition     the factored decomposition f   htf   bf i of p is the decomposition with
target variables tf given by the state variables x appearing in action preconditions or goals 
and beams bf  x  given by the state variables y that are relevant to x 
factored belief tracking is flat belief tracking applied to the subproblems determined by
the factored decomposition  the algorithms that we introduce next are based on a different
decomposition 
definition     the causal decomposition c   htc   bc i of p is the decomposition with
target variables tc given by the observable variables and the state variables appearing in
action precondition or goals  with beams bc  x  given by the state variables y that are
causally relevant to x 
the causal decomposition determines a larger number of subproblems  as subproblems
are also generated for the observable variables  but these subproblems have smaller beams
bc  x   as they only contain the state variables that are causally relevant to x as opposed
to the variables that are relevant to x  the causal width of a problem is given by the size of
the largest beam in the causal decomposition  discounting the variables that are determined
in the problem 
definition     the causal width of a variable x in a problem p   wc  x   is the number of
state variables that are causally relevant to x and are not determined  the causal width
   

fibelief tracking for planning with sensing

of p is maxx wc  x   where x ranges over the target variables in the causal decomposition
of p  
the first and simplest belief tracking algorithm defined over the causal decomposition
is what we call decoupled causal belief tracking  which runs in time and space that are
exponential in the problem causal width 
definition     decoupled causal belief tracking  decoupled cbt  is flat belief tracking
applied independently to each of the problems pxc determined by the causal decomposition
c   htc   bc i of p   the subproblem pxc is the problem p projected on the variables in
bc  x  for x  tc   i e   pxc   pbc  x   
since causal width is never greater than width and is often much smaller  decoupled
cbt runs much faster than factored belief tracking in general  this  however  comes at a
price that we express using the expression s b for denoting the projection of  the states in
the  belief b over the variables in s 
theorem     decoupled cbt runs in time and space that are exponential in wc  p    and
it is sound but not complete  that is  for any target variable x in the causal decomposition 
if b and bx are the beliefs resulting from an execution on p and pxc respectively  then
bx  bc  x  b is necessarily true  but bx  bc  x  b is not 
one reason for the incompleteness is that the beliefs bx associated with different target
variables x are assumed to be independent in decoupled cbt while this may not be
true  indeed  the causal decomposition of a problem may give rise to a beam bc  y  
involving variable x  and a second beam bc  z  involving the same variable x and another
variable x     if variable y is then observed  x   x may become false  which from a further
observation on z may lead to x     x  becoming false as well  yet  in decoupled cbt  this
inference cannot be captured as there is no information flow across beams  in the factored
decomposition a situation like this cannot happen as variable x   will be relevant to variable
x and hence beams that contain x will necessarily contain x    x   is relevant to x because
its causally relevant to z which is evidentially relevant to x  
in the causal decomposition  beams are kept small by not closing them with the relevance
relation  but as a result  the beliefs over such beams are no longer independent  however 
regarding the beliefs as tables or relations  a consistency relation among the local beliefs
in the causal decomposition can be enforced by means of the join operation  the resulting
algorithm is coupled causal belief tracking  abbreviated simply as causal belief tracking 
definition     causal belief tracking  cbt  is the belief tracking algorithm that operates
on the causal decomposition c   htc   bc i by setting the beliefs b x at time   for each beam
bc  x  to the projection on bc  x  of the initial belief  x  tc   and the successive beliefs
bi  
x as 
bi  
n  biy  oa   y  tc and y is relevant to x 
   
x   bc  x  o
where a   ai and o   oi are the action and observation at time i in the execution  and
 biy  oa is boa from eqs      with b   biy  
in cbt  the beliefs are not tracked independently over each of the subproblems pxc of
the causal decomposition  rather  the beliefs are first progressed and filtered independently 
   

fibonet   geffner

but are then merged and projected back onto the beams  making them consistent with each
other  the progression and filtering of the local beliefs in the causal decomposition is performed in time and space exponential in the problem causal width  but the full consistency
operation captured by the join project operation in     requires time that in the worst case
is exponential in the problem width 
theorem     cbt is space exponential in the causal width of the problem  and time
exponential in its width 
cbt is sound but incomplete  however  the range of problem for which cbt is complete 
unlike decoupled cbt  is large and meaningful enough  and it includes for example three
of the domains to be considered in the experiments below  battleship  minesweeper and
wumpus  we express the completeness conditions for cbt by introducing the notion of
memory variables 
definition     a state variable x is a memory variable in problem p when the value x k of
the variable x at time point k in an execution is determined uniquely from an observation
of the value x i of x at any time point i  i  k  the actions in the execution  and the initial
belief state of the problem 
for example  static variables are memory variables as they do not change and thus
knowing their value at any time point determines their value at any other point  determined
variables  section    are also memory variables since the value x k of such variables is
determined by the initial belief and the actions done up to time k  likewise  variables in
permutation domains where actions permute the values of the variables  amir   russell 
       are also memory variables  these are three sufficient conditions for a state variable
to be a memory variable that are all easy to check  a problem is said then to be causally
decomposable when the following condition holds 
definition     a problem p is causally decomposable when for every pair of beams bc  x 
and bc  x     in the causal decomposition of p with a non empty intersection  where x   is
an observation variable  either    the variables in the intersection are all memory variables 
or    there is a variable w in the causal decomposition that is relevant to x or x   and
whose causal beam bc  w   contains both bc  x  and bc  x     
if the problem is causally decomposable  the filtering implemented by the updates in
cbt using equation   suffices for completeness 
theorem     causal belief tracking is always sound and it is complete for causally decomposable problems 
the importance of this result is that there are many meaningful domains whose problem
instances are causally decomposable  in particular  domains where all variables that appear
in two different beams are static  this include minesweeper   domains where all variables
that appear in two different beams are either static or determined  this includes wumpus 
where the non static variable for the agent location is determined   domains where the
hidden non static state variables only appear in one beam  this includes battleship where
the hidden non static variables do not appear in intersection of beams   and other cases
as well  in sect        we present a variation of wumpus in which the monster moves
non deterministically in the grid and that it is also an instance of a causally decomposable
problem 
   

fibelief tracking for planning with sensing

   approximation  beam tracking
the causal belief tracking algorithm shows that it is possible to track beliefs for planning in a
sound and complete manner for a large and meaningful class of problems  while considering
the beliefs over subproblems that are smaller than those in the factored decomposition 
the algorithm  however  while space exponential in the causal width of the problem  it is
time exponential in the problem width  this is because of the global consistency operation
enforced by      beam tracking is the final belief tracking algorithm that we consider 
it replaces this global consistency operation by a local consistency operation that can be
performed in polynomial time  beam tracking is thus an approximation of causal belief
tracking which is aimed at being efficient and effective rather than complete 
definition     beam tracking is the belief tracking algorithm that operates on the causal
decomposition c   htc   bc i  setting the beliefs b x at time   to the projection of the initial
belief over the beam for x  tc   and setting the successive beliefs bi  
x in two steps  first 
i
o
they are set to the progressed and filtered belief ba for b   bx   a   ai and o   oi   where
ai and oi are the action and observation at time i in the execution  then  a local form
of consistency is enforced upon these beliefs by means of the following updates until a fixed
point is reached 
i  
   
bi  
nbi  
y  
x   bc  x   bx o
where y refers to any other target variable in the causal decomposition such that bc  y   
bc  x  is non empty 
the filtering represented by the iterative update in eq    defines a form of relational
arc consistency  dechter   beek        where equality constraints among beams sharing
common variables is enforced in polynomial time and space in the size of the beams  beam
tracking remains sound but is not complete  in causally decomposable problems  however 
the incompleteness is the sole result of replacing global by local consistency 

    extensions  modeling  and width
before testing the beam tracking algorithm empirically  we present two simple extensions
to the language of contingent planning that are useful for modeling  and briefly discuss
modeling choices that affect the causal width of a problem  the first extension allows the
use of defined variables in preconditions and goals  the second extension allows the use of
state constraints for restricting the possible value combination of subsets of variables 
     defined variables
a variable z with domain dz can be defined as a function of a subset of state variables in the
problem  or as a function of the belief over such variables  for example  a boolean variable
z can be defined as true when two variables x and y are equal  or when a third variable w
is known to be true  defined variables z that are a function of a set sz of state variables
or a function of the belief over such variables  can then be handled in action preconditions
and goals by introducing a beam in the decomposition that includes the variables in sz
along with the variables that are relevant or causally relevant to them  according to whether
the decomposition is factored or causal  the width and causal width of the problem follow
   

fibonet   geffner

then  as before  as the size of the largest beam in the factored and causal decompositions
with the determined variables excluded 
     state constraints
state constraints are used to restrict the value combinations of given subsets of state variables  the game of battleship  for example  can be modeled with state variables associated
with each of the cells in a grid for representing whether the cell is part of a ship  the size of
the ship to which the cell belongs  if any   the relative position of the cell within the ship
to which the cell belongs  if any   and whether such a ship is placed vertically or horizontally  these state variables  however  are not independent  and indeed  if a ship of size   
is horizontally placed at cell         the cells     i   for i                    must belong to  the
same  ship 
formally  a state constraint represented by a formula c over the state variables can
be encoded by means of a dummy observable variable y that is always observed to be
true  and that can be observed to be true only in states where c holds  i e   with model
wa  y   true    c for every action a  for the implementation  however  it pays off to treat
such constraints c as relations  the set of valuations that satisfy c   and to include them
in all the joins over the beliefs that include the variables in c  in causal belief tracking
this has no effect on the completeness or complexity of the algorithm  but in beam tracking 
changing the update in     to
i  
n c  o
n  o
n cn  
n bi  
bi  
y o
x   bc  x   bx o

   

where c            cn are the state constraints whose variables are included in bc  x   bc  y   
makes local consistency stronger with no effect on the complexity of the algorithm  moreover  when there is one such pair of beams for each state constraint  the state constraints
can increase the causal width of the problem by a constant factor of   at most  yet the
effective causal width of the problem does not change  as the beams associated with the
dummy observables introduced for such constraints are redundant and can then be ignored 
in this later case  when using beam tracking  the constraints ci do not need to be stored
in extensional form as relations but can be handled intentionally as boolean functions that
test whether an assignment in the join of two beams satisfies the constraint 
     modeling and width
the complexity of the belief tracking algorithms is a function of the width or causal width
of the problem  which in turns depends on the way the problem is encoded  often small
changes in the encoding can have a drastic effect on the resulting widths  for example  in
the wumpus problem  russell   norvig         it is natural to define the conditions under
which the stench signal can be received by setting its observation model to 

w
w
wa  stench   true    c  pos   c   c  wumpc 
where pos encodes the agent position  c ranges over the possible cells  c  ranges over the cells
that are adjacent to c  and wumpc  denotes the presence of a wumpus at c    this encoding 
however  results in a beam for the observable variable stench that includes all the wumpc
   

fibelief tracking for planning with sensing

szx y

hitx y

waterx y

nhitsx y

ancx y

hzx y

figure    causal graph fragment for battleship  circled variables are observable while the
others are state variables  the problem has one type of variable for each cell  x  y  on the
grid  causal width for the problem is   
variables  and hence whose size grows with the grid size  a better alternative that results
in beams of bounded causal width is to exploit the fact that the position of the agent pos
is determined  taking advantage of this  the observable variable stench can be replaced by
observable variables stenchc   one for each cell in the grid  with sensors characterized by the
model 
wa  stenchc   true     pos   c  

w

c 

wumpc   

the beams for the stenchc variables contain at most four wumpc  variables  one for each cell
c  adjacent to c  in this way  the causal width of the wumpus problem becomes bounded
and independent of the grid size  and of the number of wumpus and pits  see below  
the idea
w can be generalized and automated  any observation model of the form wa  z  
z    x  x    x   where  x  is a formula constructed from determined variables 
can be replaced by observation models wa  zx   z     x    x  by expanding the
number of observable variables  likewise  multiple observation models wai  z   z    i
for one observable variable z and different actions  ai  ir can be conveniently replaced by
observation models wai  zi   z    i   i  r for different observable variables zi   when the
different i formulas involve different variables  these alternatives in the domain encoding
can be the difference between bounded and unbounded causal width  and hence  on whether
the complexity of beam tracking will grow polynomially or exponentially 

    experiments
we have tested beam tracking over large instances of battleship  minesweeper  and wumpus  in combination with simple heuristics for action selection that make use of the computed beliefs  the width of these problems is not bounded  and hence  neither factored
or causal belief tracking can be used except over small instances  on the other hand  all
these domains have small and bounded causal widths in the encodings provided  and hence
beam tracking runs efficiently in both time and space  exact belief tracking in some of
these domains is difficult  kaye        scott  stege    rooij         and the sizes of the
instances considered are much larger than those used in contingent planning  moreover 
some of these domains do not have full contingent solutions  we thus compare our on line
planner that relies on handcrafted heuristics with two reported solvers that rely on belief
tracking algorithms tailored to the domains  we also consider a non deterministic version
of the wumpus domain  the results have been obtained on a xeon woodcrest      cpu
running at      ghz with  gb of ram 
   

fibonet   geffner

     battleship
battleship is a popular two player guessing game  the standard version consists of four
ships of length         and   units that are secretly placed on a    by    grid  with no ship
adjacent or diagonally adjacent to another  the task is to sink the ships by firing torpedos
at specific cells  for each fired torpedo  we are told whether the torpedo hits water or ship 
a ship is sunk when all its cells are hit  the problem is encoded with   state variables
per cell  x  y    hitx y tells if a torpedo has been fired at the cell  szx y tells the size of the
ship occupying the cell    if no such a ship   hzx y tells if the ship is placed horizontally or
vertically  true if no such ship   nhitsx y tells the number of hits on the ship    if no such
ship   and ancx y tells the relative position of the ship on the cell    if no such ship   there
is a single observable boolean variable water with a deterministic sensor model given by
wf ire x y   waterx y   true     szx y       the action model is more complex because firing
a torpedo at  x  y  may cause a change in the variables associated to other cells  x    y     
indeed  if d denotes the maximum size of a ship    in the standard game   then f ire x  y 
includes conditional effects for variables referring to cells  x    y     that are at a vertical or
horizontal distance of at most d units  the goal of the problem is to achieve the equality
nhitsx y   szx y over the cells that may contain a ship  state constraints are used for
constraining sets of state variables as described above  in this encoding  the causal beams
never contain more than   variables  even though the problem width is not bounded and
grows with the grid size  figure   shows a fragment of the causal graph for battleship 
table   shows results for two policies  a random policy that fires at a non fired cell at
random  and a greedy policy that fires at the non fired cell most likely to contain a ship 
approximations of these probabilities are obtained from the beliefs maintained by beam
tracking   the difference in performance between the two policies shows that the beliefs
are very informative  moreover  for the        game  the agent fires           torpedos
in average  matching quite closely the average results of silver and veness        that are
obtained with a combination of uct  kocsis   szepesvari        for action selection  and
a particle filter  doucet et al         hand tuned to the domain for belief tracking  their
approach  however  involves        simulation per action that result in the order of   seconds
per game over        instances  while our greedy approach takes        seconds per game 
     minesweeper
the objective in minesweeper is to clear a rectangular minefield without detonating a mine 
each play either opens or flags a cell  in the first case  if the cell contains a mine  the game
is terminated  otherwise an integer counting the number of mines surrounding the cell is
revealed  an initial configuration for minesweeper consists of a m  n minefield with k
randomly placed mines  there are three standard difficulty levels for the game that are
made up of              and        boards with        and    mines respectively 
   this is a rich encoding that allows to accommodate the observation that a ship has been fully sunk  in
the experiments  however  this observation is not used in order to compare with the results reported by
silver and veness        
   probabilities for events defined by the variables in a beam are obtained by the ratio of number of states
in the beam that satisfy the event to the total number of states in the beam 

   

fibelief tracking for planning with sensing

avg  time per
dim

policy

 ships

 torpedos

decision

game

      
      
      
      

greedy
greedy
greedy
greedy

 
 
  
  

         
           
           
            

   e  
   e  
   e  
   e  

   e  
   e  
   e  
   

      
      
      
      

random
random
random
random

 
 
  
  

         
           
           
             

   e  
   e  
   e  
   e  

   e  
   e  
   e  
   e  

table    results for battleship  the table contains results for the greedy and random
policies described in the text  for the        board  there are   ships of sizes         and   
as the size of the board is increased with n  the number of ships of each size gets multiplied
by n  average and sample standard deviation for the number of torpedos required to sunk
all ships  calculated over        random instances for each board  are shown  average times
are in seconds 

the problem is encoded with  mn boolean state variables minex y   openedx y and
f laggedx y that denote the presence absence of a mine at cell  x  y  and whether the cell has
been opened or flagged  and mn observable variables obsx y with domain d                  
there are two type of actions open x  y  and f lag x  y  where the first has no precondition and effect f laggedx y  openedx y   while the second has precondition minex y and
effect f laggedx y   the sensor model is given by formulas that specify the integer that the
agent receives when opening a cell in terms of the status of the minex   y  variables over the
surrounding cells  these formulas are 
wopen x y   obsx y        minex y  
wopen x y   obsx y   k    minex y 

w

tn  x y k  t  

for    k      

wopen x y   obsx   y    k    true  

for  x    y         x  y  and    k     

wf lag x y   obsx   y    k    true  

for each  x    y     and    k     

where n  x  y  k  are the terms over the   cell variables minex   y  surrounding the cell  x  y 
that make exactly k literals true  in the initial situation  the variables openedx y and
f laggedx y are false and minex y is unknown  the goal of the problem is to get the disjunction f laggedx y  openedx y for each cell  x  y  without triggering an explosion 
the beams that result from the factored decomposition contain all the  mn state variables  making all beams identical and resulting in an unbounded width of  mn  the causal
width  on the other hand  is   as the causal beams for openedx y and f laggedx y are identical
and contain just   variables  while the beams for obsx y contain the   minex   y  variables
for the cells  x    y     that surround the cell  x  y  along with the variable minex y   figure  
contains a fragment of the causal graph for minesweeper 
   

fibonet   geffner

minex   y 

minex y

f laggedx y

openedx y

obsx y
figure    sketch of the causal graph for minesweeper  there are observable variables obsx y
and state variables minex y   f laggedx y and openedx y for each cell  x  y   the cell  x    y    
represents one of the adjacent cells to  x  y   since there are   such cells  the causal width
of the problem is   
avg  time per
dim

 mines

density

 win

 guess

decision

game

  
      
      
      

  
  
  
   

     
     
     
     

    
    
    
    

   
   
     
   

   e  
   e  
   e  
   e  

    
    
    
    

table    results for minesweeper  the table contains results for the three standard levels
of the game plus a larger instance  average results over       runs are shown  average
times are in seconds 

table   shows results for the three standard levels of the game and for a much larger
instance  as in battleship  the greedy policy used for action selection makes use of the beliefs
computed by beam tracking  flagging or opening a cell when certain about its content  else
selecting the cell with the lowest probability of containing a mine and opening it  with the
probabilities approximated from the beliefs over the beams as indicated before  despite
the complexity of the game  np complete for checking consistency  kaye        and conpcomplete for inference  scott et al          beam tracking scales well and solves difficult
games quickly  moreover  the results shown in the table are competitive with those recently
reported by lin  buffet  lee  and teytaud         which are obtained with a combination of
uct for action selection  and a domain specific csp solver for tracking beliefs  the success
ratios that they report are              for the      instances with    mines            
for the        instances with    mines  and            for the        instances with   
mines  the authors do not report times 
     wumpus
the wumpus game  russell   norvig        consists of a maze in which there is an agent
that moves around looking for the gold while avoiding hidden pits and wumpus monsters 
initially  the agent does not know the positions of the gold  pits or wumpuses  but it senses
glitter when at the same cell as the gold  and senses a stench or a breeze when at an adjacent
cell to a wumpus or a pit respectively  an m  n instance is described with known state
variables for the position and orientation of the agent  and hidden boolean variables for
each cell that tell whether there is a pit  a wumpus  or nothing at the cell  one more
   

fibelief tracking for planning with sensing

heading
gold pos

pos

pitx   y 

wumpx   y 

glitter

deadx   y 

breezex y

stenchx y

figure    fragment of the causal graph for wumpus  there are observable variables
breezex y   stenchx y and deadx y   and state variables heading  pos  pitx y and wumpx y  
for  x  y  ranging over the grid cells  cells  x    y     stand for cells adjacent to  x  y   the
causal width of the problem is   as there are   such cells  while the state variables heading
and pos are determined 
hidden state variable stores the position of the gold  the observable variables are boolean 
glitter  breezex y   stenchx y and deadx y   with  x  y  ranging over the different cells  the
actions are move forward  rotate right or left  and grab the gold  the causal width for the
encoding is   while the problem width grows with m and n  figure   shows a fragment
of the causal graph for wumpus  the size of the causal beams for the breeze and stench
variables is bounded by   because each cell has at most   neighbors and the heading and
position variables for the agent are determined 
table   shows results for different grid sizes and number of pits and wumpus  for an
agent that selects actions with a greedy policy based on a heuristic that returns the length
of a minimum length safe path to the nearest cell that may contain the gold  the beliefs
computed by beam tracking are used to determine which cells are safe  known to contain
no wumpus or pit  and may contain the gold  we are not aware of any other tested and
scalable solver for wumpus for making a comparison  with the exception of our own recent
lw  planner that has built on this work  bonet   geffner         the figures in the table
show clearly that beam tracking computes beliefs effectively and efficiently in this domain 
for instance  the        instances with    pits and    wumpus are solved successfully    
of the time  in less than     seconds on average  moreover  all the unsolved instances were
actually shown to be unsolvable in the sense that the agent could not reach an unvisited
cell in a safe manner  this was proved for each unsolved instance by calling a sat solver
on a propositional theory that encodes the game and the literals learned by the agent after
the execution 
     non deterministic moving wumpus
in order to evaluate beam tracking in a more complex non deterministic domain  the nondet ring key domain in section   has small width   we designed a non deterministic
variant of the wumpus domain  in moving wumpus there is just one wumpus in the grid
but this wumpus moves around non deterministically everytime that the agent moves  the
grid still contains the hidden pits and the hidden gold  but in order to make the game safer
for the agent  the wumpus sensor is enhanced to detect the position of the wumpus when at
a  euclidean  distance less than   from the agent  else there is no safe strategy for escaping
death in general  
   

fibonet   geffner

avg  time per
dim

 pits  wumpus

 density

 decisions

 win

decision

game

  
      
      
      
      
      
      
      
      
      

   
   
   
   
       
       
       
         
         
         

   
   
   
   
   
   
    
    
    
    

      
      
       
       
       
       
         
         
         
         

    
    
    
    
    
    
    
   
   
   

   e  
   e  
   e  
   e  
   e  
   e  
   e  
   e  
   e  
   e  

   e  
   e  
   e  
   e  
   
   
   
    
    
     

table    results for wumpus  for each size  we performed       runs  the table shows
the total number and density of pits and wumpus in the grid  the total number of decisions
across all the runs  the percentage of runs in which the agent found the gold  and the average
time in seconds per decision and game 

moving wumpus is causally decomposable and thus the incompleteness of beam tracking
in this domain is only due to the replacement of the full consistency among beams done
by cbt by the weaker but efficient  relational  arc consistency done by beam tracking  to
see this  observe that the only variable that is not a memory variable is the position of
the wumpus wloc  however  there are only two beams in the causal decomposition that
contain this variable  the beam for wloc and the beam for the observable variable that
tells the position of the wumpus  and the former beam is contained in the latter beam  
experimental results for beam tracking over this domain are presented in table   for a
policy obtained using the aot lookahead algorithm based on ao   bonet   geffner      a 
that builds a lookahead tree of depth    using    expansions  and a heuristic function that
measures the distance between the agent position and the closest unvisited cell 
the algorithm was evaluated on different instances with grids nn for n                       
each with a number of pits equal to  n        for each grid size  we performed      
evaluations for different initial configurations where the wumpus  pits and gold are randomly
placed  an instance of this game may turn unsolvable because the gold is isolated from the
agent by pits  because the agent finds itself in a position where there is no safe movement 
or because the agent exceeded the maximum number of actions  set to   times the number
of cells in the grid  

   indeed  a more general version of this problem involves m wumpuses that move non deterministically
in the grid  this version is also causally decomposable as the beams for the positions of the wumpuses
 one for each wumpus  are all contained in the beam for the observable variable  in such general case 
the problem would have causal width equal to m 

   

fibelief tracking for planning with sensing

avg  time per
dim

 pits

 density

 decisions

 win

decision

game

  
  
  
      
      
      
      
      
      

 
 
 
 
 
 
 
 
 

   
   
   
   
   
   
   
   
   

      
      
      
      
       
       
       
       
       

    
    
    
    
    
    
    
    
    

   e  
   e  
   e  
   e  
   
   
   
   
   

   e  
   
    
    
     
     
     
       
       

table    results for the non deterministic moving wumpus domain  for each grid size 
averages over       runs shown  the table shows the total number and density of pits in
the grid  the total number of decisions across all the runs  the percentage of runs in which
the agent found the gold  and the average time in seconds per decision and game 

    related work
the formulation in the paper is closely related to recent translation based approaches to
conformant and contingent planning that compile beliefs away  palacios   geffner       
albore et al          these translations  however  assume that the problems are deterministic 
our account yields similar widths on most deterministic benchmarks  but is
simpler  because it is defined over multi valued variables  and is more general  because it
handles non deterministic actions  yet our account is also less tight on some deterministic problems  as an illustration  if i    x       xn   and the actions are ai   each with
conditional effect xi  g  i              n  the conformant problem with goal g has width
  in palacios and geffners account  but width n in ours  the relevance account based
on literals is indeed finer than the one based on variables but it is also more difficult to
generalize to non deterministic settings  this difference does not seem to have practical
effects over most benchmarks where disjunctions in the initial situation are exclusive and
implicitly encode the possible values of a set of multi valued variables  another important
difference with these approaches is that complete translations are always exponential in the
problem width  while our complexity bound is worst case  i e   if the variables in contexts
are highly correlated  the actual complexity of factored belief tracking can be much lower 
the notion of width appears also in bayesian networks where inference is exponential
in the width of the network  pearl         three differences that can be pointed out in
relation to our notion of width are that    we exploit the knowledge that certain variables
are not observable     we can determine and use the knowledge that certain variables are
determined  and    we make use of the distinction between action conditions and preconditions in planning  as an example  a problem where an agent has to go through n doors
whose status  open or closed  can only be observed when the agent is near the door  will
have width no smaller than n when modeled as a dynamic bayesian network  as all the door
variables affect the agent location variable  in our setting  however  the problem has width
   

fibonet   geffner

  because the status of a door need to be known to the agent before it can open  close or
walk through the door 
the causal decomposition and the resulting causal belief tracking algorithms are similarly related to the ideas of variable splitting or renaming in graphical models  where a
variable x appearing in different factors fi is replaced by different variables xi   one per
factor fi  choi   darwiche        ramirez   geffner         so that the problem width
can be reduced  then  equality constraints relating the xi variables must be enforced 
approximate belief tracking algorithms for dynamic bayesian networks and pomdps have
also appealed to the idea of decomposing global beliefs over all the variables into local beliefs over subsets of variables  boyen   koller        shani  poupart  brafman    shimony 
       a key difference with the causal belief tracking algorithm is that we provide the
conditions under which this type of decomposition remains sound and complete  on the
other hand  we only deal with uncertainty represented by sets of states  not probability
distributions 
a number of logical schemes for representing and tracking beliefs have been used and
developed in contingent planning  appealing to obdds  cnf  and dnf representations
 bertoli et al         bryce et al         to et al          relevance considerations  tran 
nguyen  son    pontelli         and lazy sat and regression techniques  hoffmann   brafman        rintanen        shani   brafman         none of these approaches  however 
has been tried on the domains considered in this paper or over instances of similar size 
indeed  while the causal width of these domains bounds the complexity of beam tracking  no similar bound is known for these schemes that unlike beam tracking are complete 
moreover  while in principle some of these schemes handle non determinism naturally  other
methods like those based on sat do not  the k replanner  bonet   geffner        is also
based on a very efficient and effective belief tracking method that is polynomial but not
fully general and cannot deal with non deterministic actions  the follow up lw  planner
 bonet   geffner        shares the features of the k replanner and is complete for width  
problems 
from an experimental perspective  several comments and questions are in order on the
relation between beam tracking and the algorithms used for belief tracking in contingent
planners over the existing benchmarks  first of all  practically all of the benchmarks used
so far in contingent planning are easy from a belief tracking point of view  indeed  the
quadratic and linear time representation of beliefs in clg and lw  respectively  have been
shown to be adequate for all such problems  including the wumpus problems above  the
exception to this is minesweeper  where belief tracking is provably np hard and where
the linear approximation in lw  turns out to be much weaker than beam tracking  failing
to solve without guessing most of the instances that beam tracking can solve in this
way  bonet   geffner         this means that  whether the width of these problems
is low or high  their effective width is    and in such cases  beam tracking cannot help
computationally  and actually  may degrade performance  except in minesweeper   as beam
tracking is exponential in the problem causal width  which while lower than width in general
is usually higher than    the effective width of a problem p is the minimum non negative
integer value i such that the contingent translation xi  p    palacios   geffner        albore
et al         has a solution  the effective width of a problem is never greater than its width
but can be much smaller than both its width and than its causal width  for example  a
   

fibelief tracking for planning with sensing

avg  time per
dim

 mines

 density

 succ

 failure

 aborted

decision

game

  
      
      

  
  
  

    
    
    

    
    
    

   
   
   

   
   
    

   
   
    

    
       
       

table    comparison with the sdr on line planner over minesweeper instances  sdr is fed
with random hidden states and solutions  action sequences  computed by beam tracking
with no guessing  the planner task is then to check the applicability of actions in the given
solution and whether the goal holds  for each instance size  sdr is tested over     different
random problems  the column failure indicates the number of times that sdr was not able
to verify a correct solution  while the column aborted indicates the number of times that
sdr terminated early due to a bug  times are in seconds  beam tracking takes a few
seconds for solving these instances  see table    

problem with actions ai with conditional effects that map valuations vi of a set of variables
x            xn into the goal literal y   y  will have a width and a causal width not smaller
than n as all the variables xi are causally relevant to y   yet the effective width of such
a problem may be   if the values of each the xi variables can be observed directly or
inferred from the observations  or also  if the goal can be achieved without using any of
these actions at all  in this sense  while the notion of effective width provides a lower bound
on the number of state variables whose uncertainty must be tracked jointly in order to make
the problem solvable  the notions of width  characterized syntactically  provides an upper
bound on the number of state variables whose uncertainty must be tracked jointly so that
no solution would be missed  the gap between these two bounds can be large indeed  and
obtaining syntactic characterizations of the former is an open problem 
a related question is how the various belief tracking algorithms used in contingent planning such as regression  obdds  cnf  and dnf  scale up over these domains  while a
general comparison of these complete but exponential algorithms with incomplete and polynomial algorithms like beam tracking  over domains with bounded causal width  would not
be fair  it would still be interesting to find out in which of the easy cases these algorithms scale up polynomially and in which exponentially  performing these tests  however 
is not simple  as it requires getting into the code of the planners so that they would all
follow a fixed common policy in each instance  thus leaving the planning component aside 
moreover  even fixing a policy for each instance  is not enough  as some of the planners are
off line and hence track beliefs over many possible executions and not just one  as in the
case of on line planners 
just for the purpose of an illustration we performed this test in one of the difficult
domains  minesweeper  by supplying the on line planner sdr  shani   brafman       
the execution computed from beam tracking along with the hidden initial state for such an
execution  in this setting  the on line planner sdr is not doing planning  but rather it is
tracking the beliefs over the problem to verify goal achievement and the preconditions of
the given applicable action at each time point  these are all minesweeper instances solved
   

fibonet   geffner

by beam tracking without guessing  i e   by pure inference after a first fixed choice  table  
shows the results for sdr that tracks beliefs using a form of regression  rintanen       
shani   brafman         two observations can be made by comparing the results in this
table with those in table   for beam tracking  first  while sdr takes               and
        seconds on average for verifying solutions for              and        instances
respectively  beam tracking takes            and      seconds for finding these solutions by
following a greedy policy  since finding solutions is more expensive than verifying them
 one must at least identify all applicable actions at each time point  the difference in
performance turns out to be of several orders of magnitude  growing with the grid size  in
addition  the regression mechanism in sdr fails to verify correct solutions in several cases
and aborts with failure in a large number of cases for the large instances  in any case 
the performance gap is not surprising  belief tracking in minesweeper is np hard  thus
complete algorithms like regression will run in exponential time in the worst case  while
beam tracking remains polynomial as the causal width of the domain is bounded  in other
challenging problems  the gap in performance between beam tracking and complete belief
tracking algorithms will be similar  beam tracking will be useful then if the causal width
of the problem is bounded and not too large  trading off in a principled way completeness
by tractability 

    summary
effective belief tracking is crucial for planning with incomplete information and sensing 
while the problem is intractable in general  it has been shown elsewhere that belief tracking over deterministic problems is exponential in a width parameter that is often bounded
and small  in this work  we have introduced a related formulation that applies to nondeterministic problems as well  the factored belief tracking algorithm results from a set of
projected problems whose size is bounded by the problem width  the beliefs over goals
and preconditions are then obtained directly from the beliefs over these projected problems
that can be maintained independently  we have then developed a different decomposition
scheme and belief tracking algorithm that maintains beliefs over smaller projections  and
have provided the conditions under which the algorithm is complete  causal belief tracking
is space exponential in the problem causal width but remains time exponential in the problem width  as the global consistency of the beliefs over the smaller projections need to be
enforced  finally  beam tracking is a sound but incomplete approximation of causal belief
tracking where global consistency is replaced by a local but powerful form of consistency 
beam tracking runs in time and space that are exponential in the problem causal width that
is often much smaller than the problem width  we have tested beam tracking over large
instances of battleship  minesweeper  and wumpus  in combination with simple heuristics
for action selection  where performance compares well with state of the art solvers while
using orders of magnitude less time  in the future  we would like to explore extensions of
the proposed framework for belief tracking in pomdps  where belief states are not sets
of states but probability distributions  and particle based algorithms provide a common
approximation  doucet et al         
   

fibelief tracking for planning with sensing

acknowledgments
we thank gabriel detoni for his java tewnta framework  http   code google com p 
tewnta  for implementing client server games with a graphical interface on which we developed graphical interfaces for battleship  minesweeper and wumpus  thanks also to
james biagioni for his wumpuslite java simulator  http   www cs uic edu  jbiagion 
wumpuslite html  that we adapted to run the experiments for wumpus  and to guy shani
for help running sdr  hector geffner is partially supported by eu fp  grant        
 spacebook  and micinn csd            simulpast  

appendix a  proofs
formal results that are needed but which are not stated as propositions or theorems in the
main text of the article appear here in the form of lemmas 
a   complexity of flat belief tracking
let us first formally define the decision problems btp and gbtp  btp is the language
btp    hp   i   p is a contingent problem   is a possible execution  and b    g 
where p   hv  i  a  g  v     w i     ha    o            an   on i is an execution  and b is the belief
that results of the execution of  on the initial belief state  gbtp is like btp except that it
consists of triplets hp     i such that p is a contingent problem   is a possible generalized
execution    is a goal  precondition or observation literal  and b      
observe that btp and gbtp respectively include the tuples hp   i and hp     i such
that the problem has an empty initial belief state  due to two complementary literals appearing as unit clauses in i  since in such case every execution is trivially possible and b
trivially entails any literal   
proposition    btp is polynomial time reducible to gbtp 
proof  the idea is to map a normal execution  into a generalized execution m that results
of replacing each pair ha  oi in  by the sequence ha       noopa                noopa     v     i where
               v     are the observation literals made true by o  one for each observable variable
in v     and noopa is the action that requires nothing and does nothing and whose sensor
model is wnoopa       wa     for each observation literal   
formally  given an instance hp   i for btp  the reduction must generate in polynomial
time an instance hp           i for gbtp such that hp   i  btp iff hp           i  gbtp 
the problem p   is the problem p extended with the actions noopa   a new boolean
variable xgoal that denotes the achievement of the goal g in p   a new action agoal with
precondition g and effect xgoal   and a new dummy observable variable y with domain
    and models wa  y        true for all actions a  on the other hand  the generalized
execution    is hm   agoal   y    i and     xgoal   clearly  the reduction works in polynomial
time and hp   i  btp iff hp           i  gbtp 
theorem    flat belief tracking is exponential in  vu    where vu   v   vk and vk is the
set of state variables in v that are determined 
   

fibonet   geffner

proof  as described in definition    flat belief tracking consists of an explicit representation
of beliefs as set of states  but some savings in space and time can be obtained by noting
that the variables in vk are determined 
with an explicit representation of beliefs  the belief tracking problem gets trivially solved
because checking whether an execution    ha    o            an   on i is possible and a literal   is
true after  reduces to computing the belief bn   that results from  and checking whether
bn   is empty and whether every state in it satisfies    the time complexity of this algorithm
is the time needed to compute the initial belief b  plus  n      multiplied by the time needed
to compute bi   from bi plus the time needed to check the validity of    among these times 
the last is the easiest to calculate as it is linear in the size of bn     we thus need to bound
the first two times  we begin the proof by showing that flat belief tracking can be done in
time exponential in  v   and then reduce the exponential dependency from  v   to  vu   
for computing b  it is enough to generate all possible states  valuations of variables 
and filter out those that do not satisfy the clauses in i  the total time thus spent is
 v     i    o  v    since there are  o  v    valuations   i  clauses  and each clause has at most
 v   literals  
the time to compute bi   from bi consists of the time to check that the preconditions
of a hold at b  and the times to compute ba from b and boa from ba when b   bi   a   ai and
o   oi   the preconditions are easily verified by iterating over all states in b  the time for
this is bounded by  v     o  v    since a contains at most  v   preconditions and b contains
at most  o  v    states  if some precondition is not satisfied at some state in b  the execution
is not possible 
the belief ba can be computed from b by iterating over each state s in b  and each
possible state s  for ba   and then and checking whether s   f  a  s   the two nested
iterations require time  o  v      o  v       o  v      the test s   f  a  s  can be performed
in time that is exponential in  v   as follows  let ci  e i       eni i   for    i  m  be the
collection of conditional effects for the action a that trigger at the state s  if s   f  a  s  
then s  is the result of applying one head from each such conditional effect on s  since the
problem has  v   variables  then among the m heads there are at most  v   heads that map
s into s  while the rest  if any  are subsumed by the first  all subsets of heads of size at
most  v   can be enumerated in  o  v    time  for each such subset checking whether s gets
mapped into s  requires o  v    time  therefore  checking s   f  a  s  requires  o  v    time
as well as computing ba from b 
once ba is obtained  boa is calculated by removing  filtering  from ba all states that do
not comply with the observation o  for each state s in ba and each observation literal
  compatible with o  the state s belongs to boa iff s    wa      this latter test can be
performed in time linear in  wa       the size of the formula wa      hence  since there are
 v     observation literals compatible with o  boa can be computed from ba in time o  ba   
 v       wa    where  wa     max   wa      and the max ranges over all observation literals   
if boa is empty and ba is non empty  the execution is not possible 
   in this calculation  we implicitly assume that the variable domains are of constant size  otherwise  if the
domains have size n that is linear in the input size  the number of valuations is bounded by  o  v   log n 
instead of  o  v      in either case  the number of valuations is still exponential in the number of variables
as well as the resulting complexity of flat belief tracking 

   

fibelief tracking for planning with sensing

once all times are weighed in  we see that flat belief tracking can be done in time that
is exponential in  v   
we now reduce the exponent from  v   to  vu    this is direct since any determined
variable has the same valuation across all states in a reachable belief  hence  such variables
do not contribute to increase the number of states in reachable beliefs  likewise  only
subsets of heads of size  vu   need to be considered when computing the belief ba from b 
hence  all computations can be done in time and space that is exponential only in  vu   
theorem    btp and gbtp are turing complete for the class pnp  
proof  by proposition    btp is polynomial time reducible to gbtp  and thus it is enough
to show the hardness for btp and the inclusion for gbtp 
the class pnp is the set of all decisions problems that can be decided in  deterministic 
polynomial time using an oracle for sat  to show that btp is hard for this class  it is
enough to show that unsat can be reduced in polynomial time to btp since then every
call to the np oracle can be replaced by a call to the btp oracle  on the other hand  to
show that gbtp belongs to pnp   it is enough to show that there is an algorithm for the
complement of gbtp  since pnp is closed under complementation  that runs in polynomial
time and that makes calls to an oracle for sat 
hardness  let     c            cm   be a cnf theory over boolean variables x            xn  
we need to construct in polynomial time a contingent problem p   hv  i  a  g  v     w i
and an execution  such that hp   i  btp iff  is unsatisfiable  the variables in the
problem p are all boolean given by v    x            xn   q  and v      z            zm    i is
the empty set of clauses and g    q   true   the actions are a            am   all with empty
preconditions and no conditional effects  but with sensor model wai  zi   true    ci  q
and wai  zj   true    f alse for j    i  finally  the execution is    ha    o            am   om i
where oi is the v    valuation that makes zi true and zj false for j    i 
note that the initial belief contains all the  n   v  valuations  half of them satisfying
q and the other half q  after the first observation o  is received  only the valuations
that satisfy the clause c  or q are preserved  thus  inductively  after observation oi is
received  only the valuations that satisfy the clauses in  c    c            ci   or q are preserved 
therefore  b is the set of valuations that satisfy  or q and hence it is non empty  i e    is
a possible execution   thus  b    g iff all valuations for q are gone iff  is unsatisfiable 
inclusion  the complement of gbtp consists of all tuples hp     i such that b  is non empty
and either  is non executable or b        since i consists only of unit clauses  b      iff
i contains no pair of complementary literals  assume that    ha         a                 an    n i 
where the literals  i are observation literals  and let bi be the belief before the action ai
is applied  i e   bi   boa for b   bi    a   ai  and o    i    then   is possible iff each
bi is non empty and each action ai is applicable at bi   assume that we have established
that the prefix i   ha                 ai     i  i is possible  then checking whether i   is possible
involves two operations     checking that each precondition literal of ai holds at bi  and
   checking whether there is at least one state in bai that complies with  i   for b   bi   
the first check can be done by calling the sat oracle over the cnf theory i    over
time indexed propositions for state variable literals and actions  that encodes all possible
state trajectories for a fixed valuation of the actions  the time horizon for the theory is
   

fibonet   geffner

t              i     and the theory is built in such way that it is satisfiable iff there is a state s
at time i  i  i e   s in bi    that does not satisfy at least one precondition of ai   this theory
is of polynomial size and can be built in polynomial time  likewise  the second check can
be performed by calling the sat oracle over the cnf theory i  with the property that
it is satisfiable iff there is a state in bi  that complies with the observation  i  
hence  the algorithm a that decides the complement of gbtp works by building theories
t and t for t              n  at each stage t  a accepts the input if t is satisfiable or t is
unsatisfiable  if  at the end  the algorithm has not accepted yet  then it builds another theory
n     that is like i but instead of checking whether a precondition of action ai doesnt
hold  checks whether the input literal   doesnt hold  if n   is satisfiable  a accepts
since the belief b does not satisfy    else a rejects because hp     i  gbtp 
a   factored belief tracking
in the following  for a state s  valuation of variables  and a subset s of variables  we write
s s to denote the valuation s restricted to the variables in s  also called the projection of
s on s  in general  we use the symbols s  t and their primed versions to denote states 
and the symbols u  v and their primed versions to denote projected states  restrictions or
partial valuations  
proposition    belief tracking in the deterministic or non deterministic conformant setting is exponential in the maximum number of non determined variables that are all causally
relevant to a variable appearing in an action precondition or goal 
proof  this proposition is a special case of theorem     and also of theorem     
theorem     belief tracking in p is exponential in w p   
proof  in the conformant setting  there are no observable variables and hence the evidential
relevance relation is empty and the relevant relation equals the causally relevant relation 
therefore  the context of a variable x equals the set of variables that are causally relevant
to x  and this theorem establish proposition   in the conformant setting 
in the general setting  the theorem is shown by constructing an algorithm for belief
tracking whose time complexity is only exponential in w p    the definition and analysis of
the algorithm is done through a series of claims that terminate at theorem    below 
proposition     if variable x appears in a goal or precondition  then the number of state
variables in px that are not determined is bounded by w p   
proof  the number of state variables in px is  ctx x   and the number of state variables
that are not determined in px is  ctx x   vu    by definition of width  this quantity is
less than or equal to w p   when x is a goal or precondition variable 
we now establish two fundamental lemmas about the progression of actions and projection of observable models  in the following  we say that a subset s of variable is causally
closed if for any variable x  s and any variable y that is causally relevant to x  y  s 
likewise  the causal closure of a variable z is the minimum  with respect to set inclusion 
subset s of variables that is causally closed and includes z 
   

fibelief tracking for planning with sensing

lemma    factored progression   consider a consistent problem p   let s be a state  and
a be an action that is applicable at s  then  for any causally closed subset s of variables 
   for every u    if u   fs  a  s s   then there is s   f  a  s  such that u    s   s   and
   for every s    if s   f  a  s  then s   s  fs  a  s s  
where fs is the transition function on the projected problem ps   therefore  s f  a  s   
fs  a  s s   for every state s on which a is applicable  and s f  a  u     fs  a  s u   for every
set u of valuations on which a is applicable 
proof  part    let u  be an element in fs  a  s s   and let hs    esi  m
i   be the collection
of heads of the conditional effects csi  esi for a that trigger at s s and result in u    for
fixed i              m   we know that s s    csi   if esi     then  by definition of the causally
relevant relation  v ars c i    s and thus csi   c i   therefore  s    c i and this effect also
triggers when a is applied at s  we now show that no other effect that affects a variable
in s triggers when a is applied at s  indeed  if a conditional effect c  f that affects a
variable in s triggers  then s    c and thus s s    cs and fs  hs   finally  the effects
that trigger and affect the variables in s are the same in both problems p and ps   since p
is consistent  the set of effects  e i  m
i   is contained in a set h of heads for the effects that
trigger when a is applied at s  therefore  u  is the projection over s of the state s  that
results of applying the effects in h at s  i e   u    s   s  
part    let s  be an element in f  a  s  and let h    e i  m
i   be the collection of heads of the
conditional effects c i  e i for a that trigger at s and result in s    for fixed i              m  
we know that s    c i and thus s s    c i  s   therefore  the effects csi  esi also trigger
when a is applied at s s in ps   we now show that no other effect that affects a variable in s
triggers when a is applied at s s in ps   indeed  let us suppose that a projected conditional
effect cs  fs that affects a variable in s triggers at s s   then  v ars f    s and thus
v ars c   s  since s is causally closed  and cs   c  therefore  s    c and this effect
also triggers when a is applied at s  finally  since the effects that trigger and affect the
variables in s are the same in both problems p and ps   then s   s is the result of applying
 
the projected effects  esi  m
i   at s s   i e   s  s  fs  a  s s   
lemma    observational closure   for every variable x  action a  and observation literal
    z   z  wa    s is either wa     or true  where s   ctx x  
proof  let  x            xn   be the variables in wa      by the definition of the relevant relation 
z is relevant to each xi and vice versa  hence  if z or some xi belongs to s  then z and
all xi belongs to s as well  therefore  wa    s is either wa     or true 
the following results are obtained by induction on the length of the executions  as
noted before  there is no loss of generality if we consider generalized executions instead of
executions  however  it is easier to consider even more general executions that correspond
to finite sequences over the alphabet a   ha   i   a  a     lits v      where a is the
set of actions and lits v     is the set of observation literals  this type of executions are
more general because they do not require the interleaving of actions and observations  i e  
such an execution may contain multiple actions or observations in sequence  for example 
   

fibonet   geffner

an execution like ha    a    ha       i  ha       i       i indicates that the initial belief needs to be
progressed with the actions a  and a    then filtered with the formula wa         filtered again
with the formula wa         and so on  as in the case of normal and generalized executions 
there is a direct mapping between generalized executions and this new type of executions 
if  is one such execution  then b denotes the belief that results of applying  at the initial
belief  while if b   b   then ba and ba   denote the beliefs that result from the executions
     h  ai and      h  ha   ii respectively  therefore  when making induction on the
length of executions to prove a claim  we need to show the claim for the initial belief that
corresponds to the empty execution  and then for beliefs of the form ba and ba   for b   b  
the next definition and lemma make precise the notion of decomposable belief that
plays a fundamental role in our results  intuitively  a belief b is decomposable when for
every pair of states s  t  b  there is a state w  b that agrees with s on the variables in
a subset s and agrees with t on the variables in a subset t  where s and t are certain
subsets of variables   in symbols  there is w  b such that w s   s s and w t   t t  
definition and lemma    decomposability   a belief state b is decomposable iff for
every variable x  observation literal     z   z  action a  and subset t  v ars wa     
such that t is causally closed and t  ctx x      it holds 


s  t s  t  b   w w  b  w ctx x    s ctx x   w t   t t  
it turns out that every reachable belief is decomposable 
proof  let b be a reachable belief  then  there is an execution  such that b   b   the
proof is by induction on the length of    if  is empty  the claim holds since i contains only
unit clauses and t  ctx x     
assume now that all beliefs reachable through executions of length less than or equal
to n are decomposable  and consider an execution    of length n     that augments an
execution  of length n  in the following  b denotes the belief b   and res a  s  denotes the
state that results of applying a deterministic action a on state s 
case       h  a  i  let x     a and t be as in the statement of the lemma  s   ctx x  
and let s    t  be two states in ba    therefore  there are two determinizations a  and a  of
a  such that s    res a    s  and t    res a    t  for some s  t  b  apply inductive hypothesis
to obtain w  b such that w s   s s and w t   t t   since s and t are disjoint and
causally closed  there is a determinization   a  of a  such that res a    s  s   res a    w  s
and res a    t  t   res a    w  t   the sought w   ba  is thus w    res a    w  
case       h  ha       ii  as before  let x     a and t be as in the statement of the lemma 
   
let      z     z     and let s    t  be two states in ba      we consider the two subcases whether
v ars wa          s or not  for s   ctx x  
subcase  v ars wa          s  since  s    t   b  apply the inductive hypothesis to get w   b
   
such that w   s   s   s and w   t   t   t   then  w   ba    because w   s   s   s    wa       s  
wa        
    the existence of this determinization is granted by the second assumption on the planning problem and
the fact that the sets s and t of variables are disjoint 

   

fibelief tracking for planning with sensing

subcase  v ars wa           s  by lemma    v ars wa          s     let t   be the minimal
causally closed subset of variables that includes t and v ars wa          observe that t   s  
 since if y belongs to the intersection  then z   is relevant to y   y is relevant to x  and thus
z   is relevant to x contradicting v ars wa          s     apply the inductive hypothesis
using t   to get w   b such that w   s   s   s and w   t     t   t     this is the w  that
   
we are looking for because t  t   and thus w   t   t   t   and because w   ba    since
w   t     t   t      wa       t     wa        
a last technical lemma  before giving the proofs of theorems    to     that establish
the existence of partial valuations in the projection of filtered beliefs is the following 
lemma    factored filtering   let x be a variable  s   ctx x   b be a reachable belief 
a be an action  and     z z be an observation literal  if ba   is non empty and u is such
that u  s b and u    wa    s   then u  s ba    
proof  assume that ba   is non empty and let u be an s valuation that satisfies the antecedent in the lemma  if wa    s   wa      then u    wa     and u  s ba    
if wa    s    wa     then by lemma    v ars wa       s     let t be the minimal
causally closed subset of variables that includes v ars wa       note that if y  s  t then
z is evidentially relevant to y which is relevant to x  and thus z is relevant to x and
v ars wa       s  therefore  s  t     let t  ba    b and apply lemma   to get
w  b such that w s   u and w t   t t   hence  w t    wa    t   wa      w  ba   and
u  s ba    
theorem     for a state variable x  let b and bx be the beliefs that result from an execution
that is possible over both p and px   then  x bx   x b 
proof  let  be an execution that is possible over both p and px   we prove the more
general result that bx   s b for s   ctx x   it is more general because x  s and
x bx   x s b   x b  the proof is by induction on the length of    if  is the empty
execution  then result follows readily since i contains only unit clauses  assume that the
claim holds for executions of length n  and let    be an execution of length n     that
augments an execution  of length n and that is possible over p and px   further  let b
and bx be the beliefs that result from  in p and px respectively  then  by inductive
hypothesis bx   s b 
case       h  ai  we need to show that bx a   s ba   in the following  fs denotes the
transition function in px   the forward inclusion is given by


 
u   bx a   u u  bx  u   fs  a  u 


 
  us u  bx  u   fs  a  u   s  b  s s   u


 
  uss  u  bx  u   fs  a  u   s  b  s s   u  s   f  a  s   s   s   u 


 
  ss  s  b  s   f  a  s   s   s   u 

  
 
  s  s   ba  s   s   u    u   s ba
   

fibonet   geffner

where   is by the definition of bx a     by inductive hypothesis    by lemma    and  
and   by the definitions of ba and s ba respectively  the backward inclusion is

  


 
s   s  s ba   s s  b  s   f  a  s    s s  b  s   f  a  s   s   s  fs  a  s s  

  
 
  s s s  bx  s   s  fs  a  s s     s   s  bx a
where   is by the definition of ba     by lemma      by inductive hypothesis  and   by
the definition of bx a   therefore  bx a   s ba  
a  
case       h  ha   ii  we need to show that ba  
x   s b   the forward inclusion is
 

 

 

a  
u  ba  
x   u  bx  u    wa    s   u  s b  u    wa    s   u  s b

where   is by the definition of ba  
x     by inductive hypothesis  and   by lemma    the
backward inclusion is
 

 

 

s s  s ba     s  b  s    wa       s s  bx  s s    wa    s   s s  ba  
x  
where   is by the definition of ba       by inductive hypothesis  and   by the definition of
a  
a  
ba  
x   therefore  bx   s b  
theorem        an execution is possible in p iff it is possible over each of the subproblems
px for x being a precondition or goal variable in p      for an execution  and precondition
or goal variable x  x   x  resp  x    x  is true in b iff x   x  resp  x    x  is true in
bx   where b and bx are the beliefs that result of executing  in p and px respectively 
proof  part    the proof is by induction on the length of the executions  the base case for
the induction is for the empty execution which is possible in p and in each px   assume
that the claim holds for executions  of length n  and let b and bx be the beliefs that result
from  in p and in each subproblem px respectively  let    be an execution of length
n     that augments    in the following  f denotes the collection of precondition and goal
variables in p   and s   ctx x  for x  f 
case       h  ai  first  assume that    is possible in p   we need to show that    is possible
on each px for x  f  by assumption  for each literal    p re a  and each s  b  s      
let   be a literal in p re a s and u  bx for x  f  then  v ars     s and  by inductive
hypothesis and theorem     since  is applicable at p and px   applied to    u   s s for
some s  b  therefore  u      and a is applicable at bx  
now  assume that    is possible in px for each x  f  we need to show that    is
possible in p   if     x   x is a precondition of a  then    p re a s and   holds at each
state u  bx   if s  b then  by inductive hypothesis and theorem    applied to    there is
u  bx such that s s   u  thus  s      and a is applicable at b 
case       h  ha   ii  first  assume that    is possible in p   i e   ba   is non empty  we need
to show that ba  
x is non empty as well for each x  f  we have
 

 

 

s  ba     s  b  s    wa       s s  bx  s s    wa    s   s s  ba  
x
   

fibelief tracking for planning with sensing

where   is by the definition of ba       by inductive hypothesis and theorem     and   by
a  
the definition of ba  
x   hence  bx is non empty 
finally  assume that    is possible in each px   i e   ba  
x is non empty for each x  f 
a  
we need to show that b is non empty  let x  f be such that wa    s   wa     for
s   ctx x   it exists because of the fourth assumption on the problem p and lemma   
we have


 
 
u  ba  
x   u  bx  u    wa    s   s u  bx  u    wa    s  s  b  u   s s


 
  s u  bx  s    wa      s  b  u   s s

  


 
  s s    wa      s  b   s s  ba  
where   is by the definition of ba  
x     by inductive hypothesis and theorem       by
wa    s   wa      and   by the definition of ba     hence  ba   is non empty 
part    let  be a possible execution in p   and hence  by part    also possible in px  
let b and bx be the beliefs that result from  in p and px respectively  by theorem    
x bx   x b  therefore  x   x  or x    x  holds at bx iff it holds at b 
theorem     flat belief tracking over each of the projected problems px for x being a
precondition or goal variable in p   provides a sound and complete factored algorithm for
belief tracking over p that is time and space exponential in the width of p  
proof  this is direct from theorem     let  be an execution and b and bx  be the
beliefs that result of executing  in p and px respectively  then   is possible in p iff it is
possible at each px   therefore  flat belief tracking for the subproblems px tells whether 
is possible or not in p   furthermore  for each precondition or goal variable x  x   x holds
at b iff it holds at bx    thus  flat belief tracking for the subproblems px is sufficient to
determine when an action is applicable or a goal belief has been reached 
by theorem    flat belief tracking for subproblem px is exponential in  ctx x   vu   
therefore  flat belief tracking for all subproblems px  simultaneously  is exponential only
in maxx  ctx x   vu   where the max ranges over the precondition or goal variables x 
this latter expression is the one that defines w p   
proposition     if an execution ha    o    a    o         i is possible in p   then it is also possible
in px for any state variable x in p  
proof  if x is a precondition or goal variable  then the claim follows from theorem     so 
assume that x is a state variable that does not appear as a precondition or goal  we show
using induction on the length of the  generalized  execution  that if  is possible in p
then it is also possible in px   the base case for empty executions is direct  consider an
execution    of length n     that extends an execution  of length n  let b and bx be the
result of applying the execution  in p and px respectively  and let s   ctx x  
case       h  ai  let     y   y be a precondition in p re a s and t   ctx y    then 
y  s and ctx y    ctx x  because y is relevant to x  by lemma    below   by  t bx  
   

fibonet   geffner

on the other hand  by theorem     s      for every s  by   therefore    holds at each state
s in bx   a is applicable at bx   and    is possible at px  
case       h  ha   ii  if wa    s   true  then ba  
x   bx which is non empty by inductive
hypothesis and thus    is possible at px   if wa    s    true and     z   z  then z is
relevant to x  since by assumption there is a precondition or goal variable y such that z
is relevant to y   it is not difficult to show that x is relevant to y   thus  ctx x   ctx y  
and bx  s by by lemma    since    is possible in p and ba  
y is non empty by theorem    
  is possible in p  
then ba  
is
non empty
and

x
x
a   causal belief tracking
lemma    soundness of causally closed decompositions   let d   ht  bi be a decomposition whose beams are causally closed  and let pxd be the subproblem corresponding to the
projection of p on the variables in b x  for x  t   for any target variable x  t   if b and
bx are the beliefs resulting from an execution on p and pxd respectively  then bx  b x  b 
proof  the proof is by induction on the length of the executions  for the empty execution 
the claims holds since i contains only unit clauses  let    be an execution of length   
that augments    in the following  b and bx denote the beliefs in p and pxd resulting after
execution    and s denotes b x  
case       h  ai  let u   s ba   then  there is s  b such that u   s f  a  s   by
lemma    u   fs  a  s s    thus  since s s  bx by inductive hypothesis  u   bx a  
case       h  ha   ii  let s s  s ba     we have s  b and s    wa      by inductive
hypothesis  s s    wa    s and s s  bx   thus  s s  ba  
x  
theorem     decoupled cbt runs in time and space that are exponential in wc  p    and
it is sound but not complete  that is  for any target variable x in the causal decomposition 
if b and bx are the beliefs resulting from an execution on p and pxc respectively  then
bx  bc  x  b is necessarily true  but bx  bc  x  b is not 
proof  soundness follows directly from lemma    the bounds on time and space are also
direct because the size of each beam bc  x  is bounded by the causal width wc  p   
theorem     cbt is space exponential in the causal width of the problem  and time
exponential in its width 
proof  cbt maintains beliefs over the beams of the causal decomposition whose size are
bounded by the causal width of the problem  the join project operation in cbt can be
performed across time  by considering one valuation at a time  without the need to first
compute and store the full joint  this is done by recursively iterating over all the beliefs
 by  oa that participate in the join in      combining partial valuations from each belief  and
then storing its projection on the resulting belief bi  
x   the number of valuations in the join
o w p
  
in     is bounded by  
as any variable z  bc  y    for y relevant to x  is relevant
to x and thus z  ctx x  
   

fibelief tracking for planning with sensing

it only remains to show theorem     stated below   the proof is not straightforward
so we split it in two parts  the first part reformulates cbt into an algorithm called wide
 causal  belief tracking  wbt   that is like cbt but performs the join operation over the
beliefs for all the variables in the problem and not only for the variables that are relevant to
x  and shows the soundness and completeness of wbt  in the second part  we show that
cbt is simply wbt applied to the subproblem pctx x  associated to the variable x in the
factored decomposition f   and then use the soundness and completeness of the factored
decomposition to finish the proof  the first part of the proof consists of lemmas     while
the second part consists of lemma   and theorem    
wbt works on the causal decomposition c   htc   bc i like cbt  the beliefs at time
  for wbt are the same as for cbt  they are the initial belief projected into the causal
beams bc  x  for x  tc   beliefs at later times are associated with executions    that
augment executions    if we denote the belief for variable x  tc and execution  with
bx    then the update equations for wbt are 
bx h ai   bc  x  o
n ft  a  by      y  tc    
bx h ha  ii   bc  x  o
n f ilter wa   t   by      y  tc  

   
   

where t   bc  y   is the beam for y   ft  a  u   is the set uu ft  a  u   and f ilter   u  
is the set  u  u   u       these equations are essentially the equation     for cbt 
where progression and filtering had been separated  except that the join is performed over
all target variables instead of joining only the target variables that are relevant to x 
the following basic facts about joins  projections and filtering are easily shown and will
be used in the proofs   we do not include their proofs here   in their statements  the sets
u and ui refer to sets of valuations  s refers to a collection of subset of variables  s refers
to a subset of variables and si   v ars ui    and  refers to a logical formula  the facts are 
bf   u  o
n s u   s  s  
bf   for collection  ui  ii  

o
n si o
n ui   i  i    i  i    o
n ui   i  i  

bf   s f ilter   u    f ilter s   s u   
definition and lemma    a decomposition d   ht  bi factors a set u of v  valuations
iff u   o
n b x  u   x  t   
a decomposition d   ht  bi preserves transitions in a set u of v  valuations iff for
each pair of variables x  y  t   and z  b x   b y    either i  z is known in u  i e  
u z    u   z  for each u  u   u    ii  b x   b y    b w   for some variable w  t   or
iii  for every action a  the transition function fs  a    is     for variable z in u   where s
is the causal closure of z 
let d   ht  bi be a decomposition such that v   xt b x  and b x  is causally
closed for each x  t   u be a set of v  valuations  and  be a v  formula  the following
claims hold 
   if d factors u   then
f  a  u    o
n b x f  a  u     x  t     o
n fb x  a  b x u     x  t    
   

fibonet   geffner

   if d factors and preserves transitions in u   then
f  a  u     o
n b x f  a  u     x  t     o
n fb x  a  b x u     x  t    
   if d factors u and there is x  t such that b x      then
f ilter   u     o
n b x f ilter   u     x  t     o
n f ilter b x   b x u     x  t    
proof  part    the containment is direct by bf   while the equality follows directly from
b x  f  a  u     fb x   a  b x  u   by lemma   
part    the second equality and the forward inclusion for the first equality are the same
as in part    we thus only need to show f  a  u    o
n b x  f  a  u     x  t    let
u  be an element in the right hand side of this expression and x  t   then  u   b x  
b x  f  a  u   and so  by lemma    there is ux  b x  u such that u   b x   fb x   a  ux   
we claim that  ux  xt is a consistent collection of valuations  indeed  if it is not  there
are valuations ux   uy and variable z such that ux  z     uy  z   clearly  z is not known
in u   if b x   b y    b w   for some w  t   then we can exchange ux and uy by
uw  b x  and uw  b y   respectively  otherwise  we see that the function fs  a     where s is
the causal closure for z  is not     for z  contradicting the assumptions  therefore  there is
a valuation u such that u b x    ux for all x  t  i e   u  o
n b x  u   x  t    and thus 
by the assumption  u  u   finally  since b x  f  a  u    fb x   a  u b x      fb x   a  ux  
by lemma    we have u   b x   b x  f  a  u  and u   f  a  u   
part    first  observe that bf  and bf  imply the chain of containments
f ilter   u    o
n b x f ilter   u     x  t    o
n f ilter b x   b x u     x  t    
we finish by showing that equality holds through by proving that the last subset is contained
in the first  let u  be an element in the last subset  this u  belongs to o
n b x  u   x  t  
and also to u since d factors u   we thus only need to show that u       this is direct
since by assumption there is x  t with b x      and thus u   b x     b x     
lemma    soundness of wbt   wbt is sound  that is  if c   htc   bc i is the causal
decomposition of problem p    bx  xtc are the local beliefs at time i  and b is the global
belief at time i  then b  o
n bx   x  tc   and bc  x  b  bx for x  tc  
proof  we really only need to proof the first claim b  o
n bx   x  tc   because the second
follows directly from it by observing that bx is a belief over the variables in bc  x  
the proof of the first claim is by induction on the length of the executions  the base
case for the empty execution is easily verified  assume that the claims hold for executions
of length n and let    be an execution of length n     that augments an execution  of
length n  observe that c factors u   o
n by    y  tc   by bf   and b  u by inductive
hypothesis 
case       h  ai 

o
n bx 

 

 

  x  tc     o
n bc  x  o
n fbc  y   a  by      y  tc     x  tc  
   

fibelief tracking for planning with sensing

 

o
n bc  x  o
n fbc  y   a  bc  y  u     y  tc     x  tc  
 

 

 f  a  u    f  a  b     b  
where   is by eq       because by   bc  y   u     by part   of lemma    and   by
inductive hypothesis 
case       h  ha   ii 

o
n bx 

 

 

  x  tc     o
n bc  x  o
n f ilter wa   bc  y    by      y  tc     x  tc  
  



o
n b

c  x 

o
n f ilter wa   b

c  y

    bc  y   u  

  y  tc     x  tc  

  

  

  f ilter wa      u    f ilter wa      b     b  
where   is by eq    
inductive hypothesis 

  

because by   bc  y   u  

  

by part   of lemma    and

  

by

lemma    completeness of wbt   let c   htc   bc i be the causal decomposition of
problem p   if c preserves transitions in every reachable belief state  then wbt is complete 
that is  if  bx  xtc are the local beliefs at time i  and b is the global belief at time i  then
b o
n bx   x  tc   and bc  x  b   bx for x  tc  
proof  the proof is by induction on the length of the executions  the base case for the
empty execution is easily verified since i contains only unit clauses  assume that the claims
hold for executions of length n and let    be an execution of length n     that augments
an execution  of length n  observe that c factors u   o
n by    y  tc   by bf   and
the inductive hypothesis implies b   u and by    bc  y   u   the proof of the first claim
b o
n bx   x  tc   is exactly like the proof of lemma   except that all the containments
are replaced by equalities  by either using the part   of lemma   or the inductive hypothesis 
for the second claim  we make a similar induction  in tandem with the first induction  
again  the base case of the induction is easily verified  for the inductive step 
case       h  ai 
 

 

bx      bc  x  o
n fbc  y   a  by      y  tc     bc  x  o
n fbc  y   a  bc  y  u     y  tc  
 

 

  bc  x  f  a  u     bc  x  f  a  b     bc  x  b  
where   is by eq       and   by inductive hypothesis  and   by part   of lemma   
case       h  ha   ii 
 

bx      bc  x  o
n f ilter wa   bc  y    by      y  tc  
 

  bc  x  o
n f ilter wa   bc  y    bc  y  u     y  tc  
 

 

  bc  x  f ilter wa      u     bc  x  f ilter wa      b     bc  x  b  
where   is by eq       and   by inductive hypothesis  and   by part   of lemma   
   

fibonet   geffner

the following lemma shows that the tracking that cbt does on a variable x is equivalent
to the tracking that wbt does on the subproblem px of the factored decomposition  i e  
px   pbf  x  for the factored decomposition f   htf   bf i  
lemma    let f   htf   bf i and c   htc   bc i be the factored and causal decompositions
w
for problem p   if  is an execution and x  tc is a state variable  then bc
x   bx where
c
bx denotes the local belief after  for variable x that is computed by cbt on the problem
p   and bw
x denotes the local belief after  for variable x that is computed by wbt on the
subproblem pbf  x   
proof sketch  this is a simple but tedious proof  so we just provide the sketch  let cx  
htx   bx i be the causal decomposition of the subproblem pbf  x  for x  tf  i e   the
causal decomposition of the subproblem associated with variable x  tf in the factored
decomposition   the beams that participate in the join in cbt are the beams for the
variables y  tc that are relevant to x  all such variables appear in tx as well  tx has
other variables however  observable variables y that are not relevant to x  yet  since all
the state variables in pbf  x  are relevant to x  the projected formulas wa  y   y bf  x 
for such variables y are all equal to true  hence  the beams for such variables are over an
empty set of variables and just contain the empty valuation  therefore  such beams can be
removed from the join that defines wbt on the problem pbf  x  without altering its value 
the resulting join for wbt on pbf  x  just contain the beams for variables y  tc that
are relevant to x 
once this fact is observed  the proof consists of a simple induction on the length of the
executions  an induction that is left as an exercise 
theorem     causal belief tracking is always sound  it is complete for causally decomposable problems 
proof  let f   htf   bf i and c   htc   bc i be the factored and causal decompositions for
problem p   and cx   htx   bx i be the causal decomposition of the subproblem pbf  x  for
x  tf  notice that x is a state variable as tf is only comprised of such   further  let 
w
be an execution  let bc
x and bx be the local beliefs after  for variable x that are computed
by cbt on problem p and wbt on problem pbf  x  respectively  let bfx be the local belief
after  for variable x that is computed by factored belief tracking on problem p   and let b
be the  global  belief after  on problem p  
if no observable variable is relevant to x  then bc  x    bf  x  and cbt on x is equal
to factored belief tracking on x which is sound and complete by theorem     if there are
observable variables that are relevant to x  then first notice that
w
f
bc
x   bx  bc  x  bx   bc  x  b

    

because lemma    the soundness of wbt  cf  lemma     and the soundness and completeness of fbt  cf  theorem      therefore  cbt is sound 
if the causal decomposition cx preserves transitions for every reachable belief state in
problem pbf  x    then the containment in      is an equality and cbt is complete as well 
we thus finish the proof by showing that the decomposition cx for causally decomposable
problems is a decomposition that preserves transitions for each reachable belief in pbf  x   
   

fibelief tracking for planning with sensing

let x  tc be a variable  let bx be a reachable belief in problem pbf  x    let x   and
be two variables in tx  the target variables for the causal decomposition of problem
pbf  x     and let z be a variable in bc  x      bc  x       we will show that either    z is
known in bx      bc  x      bc  x       bc  w   for some variable w  tx   or    for every
action a  the transition function fs  a    is     for variable z in bx where s is the causal
closure of z  in such a case  the causal decomposition cx preserves transitions for every
reachable belief in problem pbf  x   
x   

we consider two cases 
case  x   or x    is observable  first  apply the causal decomposability of p to conclude that
either there is a variable w  tc that is relevant to x   or x    with bc  w    bc  x     
bc  x       or that z is a memory variable  in the former case  w is relevant to x and thus
belongs to tx   in the latter case  we will show that either z is known in bx or the transition
function fs  a    is     for z in bx   where s is the causal closure of z and a is any action
applicable at bx  
indeed  for a proof by contradiction let us suppose that z is not known in bx and that
the transition function is not      then  there are two valuations s    s   bx and two
progressions s    fx  a  s    and s    fx  a  s    such that s   z     s   z  and s    z    s    z  
therefore  from observing the value of z at state s   and knowing the initial belief and the
actions in the execution h  ai  where  is the execution that leads to bx    one cannot infer
the value of z at bx because there are two different such values that are compatible with
the observation  namely s   z  and s   z   hence  z is not a memory variable contradicting
the assumed causal decomposability of p  
case  x   and x    are not observables  we further divide this case in two subcases on
whether both variables x   and x    are causal ancestors of x or not  in the affirmative
subcase  bc  x      bc  x       bc  x   in the negative subcase  assume without loss of
generality that x   is not a causal ancestor of x  then  there is an observable variable y
such that x   is a causal ancestor of y and y is relevant to x  hence  bc  y    bc  x    
which implies z  bc  y    bc  x      and this case is reduced to the previous case 

references
albore  a   palacios  h     geffner  h          a translation based approach to contingent
planning  in proc    st int  joint conf  on artificial intelligence  pp           
pasadena  california 
albore  a   ramirez  m     geffner  h          compiling uncertainty away in nondeterministic conformant planning  in proc    th european conf  on artificial intelligence  pp          lisbon  portugal 
albore  a   ramirez  m     geffner  h          effective heuristics and belief tracking
for planning with incomplete information  in proc    st int  conf  on automated
planning and scheduling  pp      freiburg  germany 
amir  e     russell  s          logical filtering  in proc    th int  joint conf  on artificial
intelligence  pp        acapulco  mexico 
   

fibonet   geffner

bertoli  p   cimatti  a   roveri  m     traverso  p          planning in nondeterministic domains under partial observability via symbolic model checking  in nebel  b 
 ed    proc    th int  joint conf  on artificial intelligence  pp          seattle  wa 
morgan kaufmann 
bonet  b     geffner  h          planning with incomplete information as heuristic search
in belief space  in chien  s   kambhampati  s     knoblock  c   eds    proc   th
int  conf  on artificial intelligence planning systems  pp        breckenridge  co 
aaai press 
bonet  b     geffner  h          planning under partial observability by classical replanning 
theory and experiments  in proc    nd int  joint conf  on artificial intelligence  pp 
          barcelona  spain 
bonet  b     geffner  h       a   action selection for mdps  anytime ao  vs  uct  in
proc    th aaai conf  on artificial intelligence  pp            toronto  canada 
bonet  b     geffner  h       b   width and complexity of belief tracking in nondeterministic conformant and contingent planning  in proc    th aaai conf  on
artificial intelligence  pp            toronto  canada 
bonet  b     geffner  h          causal belief decomposition for planning with sensing 
completeness results and practical approximation  in proc    rd int  joint conf  on
artificial intelligence  pp            beijing  china 
bonet  b     geffner  h          flexible and scalable partially observable planning with
linear translations  in proc    th aaai conf  on artificial intelligence  pp           
quebec city  canada 
boyen  x     koller  d          tractable inference for complex stochastic processes  in
cooper  g     moral  s   eds    proc    th conf  on uncertainty in artificial intelligence  pp        madison  wi  morgan kaufmann 
brafman  r  i     shani  g          replanning in domains with partial information and
sensing actions  journal of artificial intelligence research                 
bryce  d   kambhampati  s     smith  d  e          planning graph heuristics for belief
space search  journal of artificial intelligence research           
choi  a     darwiche  a          an edge deletion semantics for belief propagation and
its practical impact on approximation quality  in proc    st nat  conf  on artificial
intelligence  pp           
cimatti  a   roveri  m     bertoli  p          conformant planning via symbolic model
checking and heuristic search  artificial intelligence              
darwiche  a     marquis  p          a knowledge compilation map  journal of artificial
intelligence research             
dechter  r     beek  p  v          local and global relational consistency  theoretical
computer science                  
doucet  a   freitas  n  d   murphy  k     russell  s          rao blackwellised particle filtering for dynamic bayesian networks  in proc    th conf  on uncertainty in artificial
intelligence  pp         
   

fibelief tracking for planning with sensing

edelkamp  s          planning with pattern databases  in cesta  a   ed    proc   th
european conf  on planning  pp        toledo  spain  springer  lncs 
goldman  r  p     boddy  m  s          expressive planning and explicit knowledge  in
drabble  b   ed    proc   rd int  conf  on artificial intelligence planning systems 
pp          edinburgh  scotland  aaai press 
hoffmann  j     brafman  r  i          contingent planning via heuristic forward search
with implicit belief states  in biundo  s   myers  k     rajan  k   eds    proc    th
int  conf  on automated planning and scheduling  pp        monterey  ca  morgan
kaufmann 
hoffmann  j     brafman  r  i          conformant planning via heuristic forward search 
a new approach  artificial intelligence              
kaelbling  l  p   littman  m     cassandra  a  r          planning and acting in partially
observable stochastic domains  artificial intelligence             
kaye  r          minesweeper is np complete  mathematical intelligencer              
kocsis  l     szepesvari  c          bandit based monte carlo planning  in proc    th
european conf  on machine learning  pp          springer 
lin  w   buffet  o   lee  c     teytaud  o          optimistic heuristics for minesweeper 
in proc  of the int  computer symposium  ics      at http   hal inria fr docs 
            pdf mines  pdf 
palacios  h     geffner  h          compiling uncertainty away in conformant planning
problems with bounded width  journal of artificial intelligence research         
    
pearl  j          probabilistic reasoning in intelligent systems  morgan kaufmann 
ramirez  m     geffner  h          structural relaxations by variable renaming and their
compilation for solving mincostsat  in proc    th int  conf  on principles and
practice of constraint programming  pp          springer 
rintanen  j          regression for classical and nondeterministic planning  in ghallab 
m   spyropoulos  c  d   fakotakis  n     avouris  n  m   eds    proc    th european
conf  on artificial intelligence  pp          patras  greece 
russell  s     norvig  p          artificial intelligence  a modern approach   rd edition  
prentice hall 
scott  a   stege  u     rooij  i  v          minesweeper may not be np complete but is
hard nonetheless  science business media  llc              
shani  g     brafman  r  i          replanning in domains with partial information and
sensing actions  in proc    nd int  joint conf  on artificial intelligence  pp      
      barcelona  spain 
shani  g   poupart  p   brafman  r  i     shimony  s          efficient add operations
for point based algorithms  in rintanen  j   nebel  b     j  c  beck  e  a  h   eds   
proc    th int  conf  on automated planning and scheduling  pp          sydney 
australia 
   

fibonet   geffner

silver  d     veness  j          monte carlo planning in large pomdps  in proc    th
annual conf  on advances in neural information processing systems  pp           
sipser  m          introduction to theory of computation   nd edition   thomson course
technology  boston  ma 
smith  d     weld  d          conformant graphplan  in mostow  j     rich  c   eds   
proc    th nat  conf  on artificial intelligence  pp          madison  wi  aaai
press   mit press 
to  s  t   pontelli  e     son  t  c          on the effectiveness of cnf and dnf representations in contingent planning  in proc    nd int  joint conf  on artificial intelligence 
pp            barcelona  spain 
tran  v   nguyen  k   son  t  c     pontelli  e          a conformant planner based on
approximation  cpa h   acm trans  on intelligent systems and technology        
   
weld  d   anderson  c     smith  d          extending graphplan to handle uncertainty
and sensing actions  in proc    th nat  conf  on artificial intelligence  pp         
aaai press 

   

fi