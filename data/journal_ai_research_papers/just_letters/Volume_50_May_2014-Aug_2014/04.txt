journal of artificial intelligence research                  

submitted        published      

speeding up iterative ontology alignment using
block coordinate descent
uthayasanker thayasivam
prashant doshi

uthayasa   cs   uga   edu
pdoshi   cs   uga   edu

thinc lab  department of computer science 
university of georgia  athens  ga        usa

abstract
in domains such as biomedicine  ontologies are prominently utilized for annotating data  consequently  aligning ontologies facilitates integrating data  several algorithms exist for automatically aligning ontologies with diverse levels of performance  as alignment applications evolve and
exhibit online run time constraints  performing the alignment in a reasonable amount of time without compromising the quality of the alignment is a crucial challenge  a large class of alignment
algorithms is iterative and often consumes more time than others in delivering solutions of high
quality  we present a novel and general approach for speeding up the multivariable optimization
process utilized by these algorithms  specifically  we use the technique of block coordinate descent
 bcd   which exploits the subdimensions of the alignment problem identified using a partitioning
scheme  we integrate this approach into multiple well known alignment algorithms and show that
the enhanced algorithms generate similar or improved alignments in significantly less time on a
comprehensive testbed of ontology pairs  because bcd does not overly constrain how we partition
or order the parts  we vary the partitioning and ordering schemes in order to empirically determine
the best schemes for each of the selected algorithms  as biomedicine represents a key application
domain for ontologies  we introduce a comprehensive biomedical ontology testbed for the community in order to evaluate alignment algorithms  because biomedical ontologies tend to be large 
default iterative techniques find it difficult to produce a good quality alignment within a reasonable
amount of time  we align a significant number of ontology pairs from this testbed using bcdenhanced algorithms  our contributions represent an important step toward making a significant
class of alignment techniques computationally feasible 

   introduction
recent advances in web based ontologies provide a needed alternative to conventional schemas
allowing descriptive annotations of data sets  as an example  the national center for biomedical
ontology  ncbo  hosts more than     curated biomedical ontologies in its bioportal including
those in high use such as snomed ct  and whose concepts participate in more than   billion data
annotations  musen et al          therefore  the present day challenge toward data integration and
to manage the multitude of ontologies is to build bridges between ontologies that have overlapping
scope  a problem often referred to as that of ontology matching which produces an alignment  euzenat   shvaiko         we illustrate a partial alignment between biomedical ontologies in fig    
consequently  several algorithms exist for automatically aligning ontologies using various techniques  euzenat  loup  touzani    valtchev        jian  hu  cheng    qu        li  li    tang 
      jean mary  shironoshita    kabuka        doshi  kolli    thomas        wang   xu 
      hanif   aono        bock   hettenhausen        jimenez ruiz   grau        shvaiko  
c
    
ai access foundation  all rights reserved 

fit hayasivam   d oshi

data
starting material 
intermediate material  end
products of a scientific
experiment and parameters

process
the occurrent entities
that affect individuals

sample
specimen

agent

researcher

individual involved in the
experimental processes

role

entity

continuant entities that
causally affect the
individuals of process

the role of a person 
chemical compund etc   

worker role
processual entity public
sector workers in
exists in time by occurring or
happening  has temporal parts
and always involves and depends
on some entity 

reagent role

states

drug

buffer  dye  a catalyst  a
solvating agent 

drug role

any chemical substance that 
when absorbed into a cell 
alters normal cell function

drug

region

region

specimen

region

sample

region

 a 

 b 

figure    biomedicine is an important application domain for ontologies  alignment  shown in
dashed red  between portions of   a  the parasite experiment ontology  peo  and   b  the
ontology of biomedical investigations  obi  as discovered by an automated algorithm
called agreementmaker  cruz et al          both these ontologies are available at ncbo 
each identified map in the alignment signifies an equivalence between the concepts 

euzenat         with mixed levels of performance  crucial challenges for these algorithms involve
scaling to large ontologies and performing the alignment in a reasonable amount of time without
compromising on the quality of the alignment  as a case in point  only   alignment algorithms  not
including their variants  out of the    that participated in the      and      instances of the annual
ontology alignment evaluation initiative  oaei  competition  shvaiko et al               generated
results in an acceptable amount of time for aligning large biomedical ontologies 
although ontology alignment is traditionally perceived as an offline and one time task  the second challenge is gaining importance  in particular  as hughes and ashpole        note  continuously evolving ontologies and applications involving real time ontology alignment such as semantic
search and web service composition stress the importance of computational complexity considerations  recently  established competitions such as oaei  shvaiko et al         began reporting the
execution times of the participating alignment algorithms as well  as ontologies become larger 
efficiency and scalability become key properties of alignment algorithms 
a large class of algorithms that performs automated alignment is iterative in nature  melnik 
garcia molina    rahm        euzenat et al         jian et al         li et al         doshi et al  
      wang   xu        hanif   aono        bock   hettenhausen         these algorithms
repeatedly improve on the previous preliminary solution by optimizing a measure of the solution
quality  often  this is carried out as a guided search through the alignment space using techniques
such as gradient descent or expectation maximization  these algorithms may run until convergence 
which means that the solution cannot be improved further because it is a  possibly local  optimum 
however  in practice  the runs are often terminated after an ad hoc number of iterations  through
repeated improvements  the computed alignment is usually of high quality but these approaches
also consume more time in general than their non iterative counterparts  for example  algorithms
performing among the top three in oaei      in terms of alignment quality such as yam    ngo
  bellahsene         which ranked first in the conference track  optima   ranked third in the conference track  and gomma  kirsten et al          which ranked first in anatomy and library tracks 
   

fis peeding u p i terative o ntology a lignment using bcd

are iterative    on the other hand  yam   consumed an excessive amount of time in completing the
conference track  greater than   hours  and optima  consumed comparatively more time as well 
furthermore  iterative techniques tend to be anytime algorithms  which deliver an alignment
even if the algorithm is interrupted before its convergence  while considerations of computational
complexity have delivered ways of scaling the algorithms to larger ontologies  such as through
ontology partitioning  hu  zhao    qu        seddiqui   aono        stoutenburg  kalita  ewing 
  hines        rahm        and the use of inverted indices  jimenez ruiz   grau         we seek
to speed up the alignment process of multiple algorithms  we think that considerations of space and
time go hand in hand in the context of usability 
our primary contribution in this article is a general approach and its comprehensive evaluation
for significantly speeding up the convergence of iterative ontology alignment techniques  thayasivam and doshi      a  provide a preliminary introduction to this approach  objective functions
that measure the solution quality are typically multidimensional  instead of the traditional approach
of modifying the values of a large number of variables in each iteration  we decompose the problem into optimization subproblems in which the objective is optimized with respect to a single or a
small subset  also called a block  of variables while holding the other variables fixed  this approach
of block coordinate descent  bcd  is theoretically shown to converge faster under considerably
relaxed conditions on the objective function such as pseudoconvexity  and even the lack of it in
certain cases  or the existence of optima in each variable  coordinate  block  tseng         while it
forms a standard candidate tool for multidimensional optimization in statistics  and has been applied
in contexts such as image reconstruction  pinter        fessler   kim        and channel capacity
computation  blahut        arimoto         this article presents its use in ontology alignment 
we extensively evaluate this approach by integrating it into multiple ontology alignment algorithms  we selected falcon ao  jian et al          mappso  bock   hettenhausen        
ola  euzenat   valtchev        and optima  doshi et al         as representative algorithms 
these algorithms have participated in oaei competitions in the past  and some of them have ranked
in the top tier  consequently  these algorithms in their default forms exhibit favorable alignment performance  furthermore  their implementations and source codes that are needed for our approach
are freely accessible 
using a comprehensive testbed of several ontology pairs  some of which are large  spanning
multiple domains  we show a significant reduction in the execution times of the alignment processes
thereby converging faster  corresponding alignment quality continues to remain the same as before
or is improved by a small amount in some cases  this enables the application of these algorithms
toward aligning more ontology pairs in a given amount of time  or to more subsets in large ontology
partitions  also  it allows these techniques to run until convergence if possible in contrast to a
predefined ad hoc number of iterations  which possibly leads to the similar or improved alignments 
this is useful in the context of techniques that are guaranteed to converge 
bcd does not constrain how the alignment variables are divided into blocks except for the rule
that each block be chosen at least once in a cycle through all blocks  furthermore  we may order the
blocks for consideration in any manner within a cycle  consequently  our second contribution is an
empirical study of the impact of different ordering and partitioning schemes on the improvement that
bcd brings to the alignment  in addition to the default ordering scheme based on increasing height
of grouped entities  we consider reversing this ordering  and a third approach in which we sample the
   gomma utilizes multiple matching strategies some of which may not be iterative  and these partly contributed
toward its performance in oaei as well 

   

fit hayasivam   d oshi

blocks based on a probability distribution that represents the estimated likelihood of finding a large
alignment in a block  in the context of partitioning  we additionally consider grouping alignment
variables such that the entities are divided in a breadth first search based partition  while our default
approach partitions one of the ontologies in a pair  we also consider the impact of partitioning both 
performances of the iterative algorithms are impacted differently by various ways of formulating
the blocks and ordering them  notably  the quality of the alignment may be adversely impacted 
surprisingly  the algorithms differ in which ordering and partitioning scheme optimizes their
alignment performance  in order to comprehensively evaluate the efficiency of the bcd enhanced
and optimized algorithms  we contribute a novel biomedical ontology alignment testbed  in addition
to being an important application domain  aligning biomedical ontologies has its own unique challenges  we selected biomedical ontologies published in ncbo for our testbed  which also provides
a primarily umls sourced but incomplete reference alignment  thirty two different biomedical
ontologies form the    pairs in our testbed with about half of these having        named classes 
the rest of this article is organized as follows  in the next section  we briefly explain iterative ontology alignment and introduce the four representative iterative algorithms  additionally  we
briefly review the technical approach of bcd  we show how bcd may be integrated into iterative
ontology alignment algorithms in section    in section    we empirically evaluate the performances
of the bcd enhanced algorithms using a comprehensive data set  then  in section    we explore
other ways of ordering the blocks and partitioning the alignment variables  thereafter  in section   
we detail a new biomedical ontology benchmark and report the performances of the bcd enhanced
and optimized iterative techniques on this benchmark  we discuss the impact of bcd along with
its limitations in section    and conclude this article in section    appendix a outlines the representative algorithms and their modifications to utilize bcd  followed by details on the biomedical
ontology alignment testbed in appendix b 

   background
we provide a brief overview of the ontology alignment problem in the next subsection  this is
followed by brief descriptions of the four algorithms that are representative of iterative alignment
approaches  finally  we describe the technique of bcd in general 
    overview of ontology alignment
an ontology is a specification of knowledge pertaining to a domain of interest formalized into
entities and relationships between the entities  contemporary ontologies utilize description logics  baader  horrocks    sattler        such as the web ontology language  owl   mcguinness
  harmelen        in order to facilitate publication on the web  owl allows the use of classes to
represent entities  different types of properties to represent relationships  and individuals to include
instances 
the ontology alignment problem is to find a set of correspondences between two ontologies  o 
and o    though owl is based on description logic  several alignment algorithms model ontologies
as labeled graphs  with some possible loss of information  due to the presence of a class hierarchy
and properties that relate classes  in order to facilitate alignment  for example  falcon ao and
optima transform owl ontologies into a bipartite graph  hayes   gutierrez        and ola
utilizes an ol graph  euzenat et al          consequently  the alignment problem is often cast as a
matching problem between such graphs  an ontology graph  o  is defined as  o   hv  e  li where 
   

fis peeding u p i terative o ntology a lignment using bcd

v is the set of uniquely labeled vertices representing the entities  e is the set of edges representing
the relations  which is a set of ordered   subsets of v   and l is a mapping from each edge to its
label  a correspondence  ma   between two entities  xa  o  and y  o    consists of the relation 
r           and confidence  c  r  however  the alignment algorithms that we use focus on the
possible presence of   relation  also called equivalentclass in owl  between entities only  in this
case  an alignment may be represented as a  v      v    matrix that represents the correspondence
between the two ontologies  o    hv    e    l  i and o    hv    e    l  i 


m  
m      m  v   
 m  
m      m  v    




 
 



 

m  


 
 

 




 
 

 
m v     m v        m v    v   

note that if the ontologies are not modeled as graphs  the rows and columns of m are the concepts in
o  and o  defined in the description logic  each assignment variable  ma in m   is the confidence
of the correspondence between entities  xa  v  and y  v    consequently  m could be a realvalued matrix  commonly known as the similarity matrix between the two ontologies  however  the
confidence may also be binary with   indicating a correspondence  otherwise    due to which the
match matrix m becomes a binary matrix representing the alignment  two of the algorithms that
we use maintain a binary m while the others use a real m  
an alignment is not limited to correspondences between entities alone  and may include correspondences between the relationship labels as well  in order to facilitate matching relationships 
alignment techniques  including some that we use transform the edge labeled graphs into unlabeled
bipartite ones by elevating the edge labels to first class citizens of the graph  this process involves
treating the relationships as resources thereby adding them as nodes to the graph 
    iterative ontology alignment
a large class of alignment algorithms is iterative in nature  melnik et al         euzenat et al        
jian et al         li et al         doshi et al         wang   xu        hanif   aono       
bock   hettenhausen        ngo   bellahsene         iterative algorithms utilize a seed matrix 
m     which is iteratively improved until it converges  the seed matrix is either input by the user or
generated automatically often using fast string matching and other lexical matching 
two types of iterative techniques are predominant  these differ in how the next match matrix 
m   is obtained from the previous iterations match matrix at each step  the first type of iterative
algorithms improve the real valued similarity matrix from the previous iteration  m i    by directly
updating it 
m i   u  m i   
   
where  u is a function that updates the similarities  this type of algorithms often converges to a
fixed point  m   such that  m   u  m     
the second type of iterative algorithms repeatedly and explicitly search over the space of match
matrices  denoted as m  the goal is to find the alignment that optimizes an objective function 
   convergence is predicated on u   and a fixed point may not exist for some techniques  however  convergence is a
desirable property for iterative alignment algorithms  in its absence the stop criteria is often ad hoc 

   

fialignment quality

t hayasivam   d oshi

 

space of alignments

figure    both iterative update and search jump from one alignment to another improving on the
previous one  the two differ in how they obtain the next alignment in each iteration and
in the qualitative metric used for assessing it  an alignment that cannot be improved
further signifies convergence 

which gives a measure of the quality of the alignment in the context of the alignment from the
previous iteration  this approach is appropriate when the search space is bounded such as when
the match matrix is binary  nevertheless  with a cardinality of   v    v    this space could get very
large  some of the algorithms sample this space to reduce the effective search space though scaling
to large ontologies continues to remain challenging  formally 
mi   arg max q m  mi   

   

m m

where  mi is the alignment that optimizes the q function in iteration i given the best alignment
from previous iteration  mi    convergence of these algorithms occurs when iterations reach a
point  m   which cannot be improved on searching for an alignment matrix  m  m  such that
q m  m     q m   m    equations   and   help solve a multidimensional optimization problem
iteratively with ma in m as the variables  we abstractly illustrate the iterative approaches in fig    
in fig     we show the abstract algorithms for the two types of iterative approaches  in the
iterative update of fig    a   we may settle for a near fixed point by calculating the distance between
a pair of alignment matrices  line    and terminating the iterations when the distance is within a
parameter    as     we get closer to the fixed point and obtain the fixed point in the limit 
iterative search in fig    b  often requires a seed map  line    to obtain m     which is typically
generated using fast lexical matching 
next  we briefly review four ontology alignment algorithms that optimize iteratively  the selection of these algorithms is based on their accessibility and competitive performance in previous
oaei competitions  and is meant to be representative of iteration based alignment algorithms   
      falcon  ao
falcon ao  jian et al         is a well known automated ontology alignment system combining
output from multiple components including a linguistic matcher  an iterative structural graph matching algorithm called gmo  hu  jian  qu    wang         and a method for partitioning large
ontologies and focusing on some of the parts 
   we sought to include yam   as well in our evaluation  which was the top performer in the conference track of oaei
     and       however  its source code is not freely available and we could not access it 

   

fis peeding u p i terative o ntology a lignment using bcd

i terative u pdate  o    o     

i terative s earch  o    o   

initialize 
   iteration counter i   
   calculate similarity between the
entities in o  and o  using a measure
   populate the real valued matrix  m    
with initial similarity values
   m  m  

initialize 
   iteration counter i   
   generate seed map between
o  and o 
   populate binary matrix  m     with
seed correspondences
   m  m  

iterate 
   do
  
ii  
  
m i   u  m i   
  
  dist m i   m  
  
m  m i
    while   
    extract an alignment from m

iterate 
   do
  
ii  
  
search m i  arg max q m  m i   
m m

  
m  m i
   while m    m i 
    extract an alignment from m

 a 

 b 

figure    general algorithms for iterative  a  update  and  b  search approaches toward aligning
ontologies  the distance function  dist  in line   of  a  is a measure of the difference
between two real valued matrices 

gmo measures the structural similarity between the ontologies that are modeled as bipartite
graphs  hayes   gutierrez         matrix m in gmo is real valued and this similarity matrix
is iteratively updated  eq     by updating each variable  ma   with the average of its neighborhood
similarities until m stops changing significantly  gmo takes external input  typically obtained from
lexical matching  as the seed  equation   manifests in gmo as a series of matrix operations 
m i   g  m i  gt    gt  m i  g 

   

here  g  and g  are the adjacency matrices of the bipartite models of the two ontologies o  and o   
respectively  in the first term of the summation  the outbound neighborhood of entities in o  and
o  is considered  while the second term considers the inbound neighborhood  iterations terminate
when the cosine similarity between successive matrices  m i and m i    is less than a parameter   
the iterative update algorithm manifests in falcon ao as shown in fig     a  in appendix a 
      m ap pso
mappso  bock   hettenhausen        utilizes discrete particle swarms to perform the optimization  each of k particles in a swarm represents a valid candidate alignment  which is updated
iteratively  in each iteration  given the particle s  representing the best alignment s  in the swarm 
alignments in other particles are adjusted as influenced by the best particle 
equation   manifests in mappso as a two step process consisting of retaining the best particle s   alignment s   and replacing all others with improved ones influenced by the best alignment
in the previous iteration  the measure of the quality of an alignment in the k th particle is determined
   

fit hayasivam   d oshi

by the mean of the measures of its correspondences as shown below 

q mki  

 

 v
p     v
p   

ma  f  xa   y  

a     

 v    v   

   

where  ma is a correspondence in mki and f represents a weighted combination of multiple syntactic and possibly semantic similarity measures between the entities in the two ontologies  improved
particles are generated by keeping aside a random number of best correspondences according to f
in a particle  and replacing others based on the correspondences in the previous best particle  iterations terminate when the increment in q due to a new alignment matrix is lower than a parameter 
  iterative search of eq    manifests in mappso as shown in the algorithm in fig     a  
      owl l ite a lignment
owl lite alignment  ola   euzenat et al         is limited to aligning ontologies expressed in
owl with an emphasis on its most restricted dialect called owl lite  ola adopts a bipartite
graph model of an ontology  and distinguishes between   types of nodes such as classes  objects 
properties  restrictions and others  and between   types of edges  rdfs subclassof  rdf type  between
classes and properties  objects and property instances  owl restriction  and properties in individuals 
ola computes the similarity between a pair of entities from two ontologies as a weighted
aggregation of the similarities between respective neighborhood entities  due to its consideration
of multiple types of edges  cycles are common  consequently  it computes the similarities between
entities as the solution of a large system of linear equations  solved iteratively for the fixed point 
let f xa   be the set of all nodes in o    which are connected to the node xa via an edge type 
f  formally  similarity sim xa   y    between vertex  xa  o    and vertex  y  o    is defined as 
x
a
sim xa   y    
wf
setsim f xa    f y   
   
f n  xa  y  

a   for an
where  n  xa   y   is the set of all edge types in which xa   p
y participate  weight  wf
a
wf      function  setsim 
entity pair  xa   y   and edge type  f  is normalized  i e  
f n  xa  y  

evaluates the similarity between sets  f xa   and f y    as the average of maximal pairing 
ola initializes a real valued similarity matrix  m     with values based on lexical attributes
only  while the iterations update each variable  ma   in the matrix using the structure of the two
ontologies  in particular  if two entities  xa and y are of the same type  then ma is updated using
eq     otherwise the value is    iterative update of eq    is realized by ola as in fig     a  in
appendix a 
      o ptima
optima  doshi et al         formulates ontology alignment as a maximum likelihood problem  and
searches for the match matrix  m   which gives the maximum conditional probability of observing
the ontology o    given the other ontology  o    under the match matrix m  
it employs generalized expectation maximization to solve this optimization problem in which 
it iteratively evaluates the expected log likelihood of each candidate alignment and picks the one
which maximizes it  it implements eq    as a two step process of computing expectation followed
   

fis peeding u p i terative o ntology a lignment using bcd

by maximization  which is iterated until convergence  the expectation step consists of evaluating
the expected log likelihood of the candidate alignment given the previous iterations alignment 
q m i  m i     

 v     v   
x
x

p r y  xa   m i     logp r xa  y   m i  i

   

a     

where  xa and y are entities in ontologies o  and o  respectively  and i is the prior probability
of y   p r xa  y   m i   is the probability that node xa is in correspondence with node y given the
match matrix m i   the prior probability is computed as 
 v   

i  

  x
p r y  xa   m i   
 v   
a  

the generalized maximization involves finding a matrix  mi   that improves on the previous one 
mi   m i  m   q m i  mi     q mi   mi   

   

we show the iterative alignment algorithm of optima in fig     a  
altogether  the four alignment algorithms that we describe in this subsection represent a broad
variety of iterative update and search techniques  realized in different ways  this facilitates a broad
evaluation of the usefulness of bcd  over the years  algorithms such as falcon ao  ola and optima have performed satisfactorily in the annual oaei competitions  with falcon ao and optima
demonstrating strong performances with respect to the comparative quality of the generated alignment  for example  falcon ao often ranked in the top   systems when it participated in oaei
competitions between      and       and its performance continues to remain a benchmark for
other algorithms  optima enhanced with bcd  called optima   ranked second in the conference
track  f  measure and recall  in the      edition of the oaei competition  thayasivam   doshi 
    b   consequently  these representative algorithms exhibit strong alignment performances  on
the other hand  mappsos performance is comparatively poor but its particle swarm based iterative approach motivates its selection in our representative set 
    block coordinate descent
large scale multidimensional optimization problems maximize or minimize a real valued continuously differentiable objective function  q  of n real variables  block coordinate descent  bcd 
 tseng        is an established iterative technique to gain faster convergence in the context of such
large scale n  dimensional optimization problems  in this technique  within each iteration  a set of
the variables referred to as coordinates are chosen and the objective function  q  is optimized with
respect to one of the coordinate blocks while the other coordinates are held fixed  in our application
setting  recall that the coordinates are the alignment variables in the match matrix  m  
let s denote a block of coordinates  which is a non empty subset of                n    define a set
of such blocks as  b    s    s            sc    which is a set of subsets each representing a coordinate
block with the constraint that  s   s          sc                  n    b could have a single block or
be a partition of the coordinates although this is not required and the blocks may intersect  we also
define the complement of a coordinate block  sc   where c                 c   as  sc   b  sc   to
   

fit hayasivam   d oshi

illustrate  let the domain of a real valued  continuously differentiable  multidimensional function  q 
with n      be  m    m    m    m            m      where each element is a variable  we may partition
this set of coordinates into two blocks  c      so that  b    s    s     let s     m    m    m    and
s     m    m    m    m    m    m    m      finally  s  denotes the block  s   
bcd converges to a fixed point such as a local or a global optimum of the objective function
under relaxed conditions such as pseudoconvexity of the function and requires the function to have
bounded level sets  tseng         while pseudoconvex functions continue to have fixed points  they
may have non unique optima along different coordinate directions  in the absence of pseudoconvexity  bcd may oscillate without approaching any fixed point of the function  nevertheless  bcd
still converges if the function has unique optima in each of the coordinate blocks 
in order to converge using bcd  we must satisfy the following rule  which ensures that each
coordinate is chosen sufficiently often  tseng        
definition    cyclic rule  there exists a constant  t  c and c      such that every block  sc   is
chosen at least once between the ith iteration and the  i   t    th iteration  for all i 
in the context of the cyclic rule  bcd does not mandate a specific partitioning or an ordering scheme
for the blocks  a simple way to meet this rule is by sequentially iterating through each block
although we must continue iterating until each block converges to the fixed point 
recently  saha and tewari        show that the nonasymptotic convergence rate   of bcd
under the cyclic rule is faster than that of gradient descent  gc  if they both start from the same
point  under the conditions that the objective function  q  has a lipschitz continuous gradient  it
is differentiable everywhere and has a bounded derivative  or is strongly convex  and i  q
l is
isotonic  where i is the identity function and l is the lipschitz constant  starting from the same
 
    let m i
i
initial map  mbcd
  mgc
bcd and mgc denote the alignment at iteration i by bcd with
cyclic rule and gc  respectively  under the condition that the objective function  q  which must be
i
i    the nonasymptotic
say  minimized  is continuous and isotonic  i     q mbcd
   q mgc
convergence rate of bcd under the cyclic rule for objective functions with the previous properties
is  o   i   where i is the iteration count 

   integrating bcd into iterative alignment
as we mentioned previously  ontology alignment may be approached as a principled multivariable
optimization of an objective function  where the variables are the correspondences between the
entities of the two ontologies  different algorithms formulate the objective function differently  as
the objective functions are often complex and difficult to differentiate  numerical iterative techniques
are appropriate but these tend to progress slowly  in this context  we may speed up the convergence
rate using bcd as we describe below 
    general approach
in section      we identified two types of iterative ontology alignment algorithms  bcd may be
integrated into both these types  in order to integrate bcd into the iterations  the match matrix 
m   must be first suitably partitioned into blocks  of course  existing algorithms may be viewed as
having a single block of variables and therefore trivially utilizing bcd 
   this is the rate of convergence effective from the first iteration itself 

   

fis peeding u p i terative o ntology a lignment using bcd

though a matrix may be partitioned using one of several ways  we adopt an approach that is
well supported in the context of ontology alignment  an important heuristic  which has proved
highly successful in both ontology and schema alignment  matches parent entities in two ontologies
if their respective child entities were previously matched  doan  madhavan  domingos    halevy 
       this motivates grouping together those variables  ma in m   into a coordinate block such
that the xa participating in the correspondence belong to the same height leading to a partition of
m   the height of an ontology node is the length of the shortest path from a leaf node  subsequently 
the alignment in blocks with less height  containing the child entities  is optimized first followed by
those with increasing height  containing the parent entities   in determining this height  we utilize
the tree or graph model of the ontology that is built internally by the respective ontology alignment
algorithm  these include property nodes and may differ between algorithms 
let the partition of m into coordinate blocks be  ms    ms            msc    where c is the height
of the largest class hierarchy in ontology o    thus  each block is a submatrix with as many rows as
the number of entities of o  at a height and number of columns equal to the number of all entities in
o    for example  correspondences between the leaf entities of o  and all entities of o  will form
the block  ms    in the context of a bipartite graph model as utilized by falcon ao and optima 
which represents properties in an ontology as vertices as well and are therefore part of m   these
would be included in the coordinate blocks 
iterative ontology alignment integrated with bcd optimizes with respect to a single block  msc  
at an iteration while keeping the remaining blocks fixed  in order to meet the cyclic rule  we choose
a block  msc   at iterations  i   c   qc where q                    we point out that bcd is applicable
to both types of iterative alignment techniques outlined in section      alignment algorithms which
update the similarity matrix iteratively as in eq    will now update only the current block of interest 
msc   and the remaining blocks are carried forward as is  as shown below 
msi c   usc  m i   
msi   msi 
s  sc

   

where sc is the complement of sc in b  note that msi c combined with msi for all s  sc forms
m i   update function  usc   modifies u in eq    to update just a block of the coordinates 
analogously  iterative alignment which searches for the candidate alignment that maximizes
the objective function as in eq     will now choose a block  msc   at each iteration  it will search
over the reduced search space pertaining to the subset of all variables included in msc   for the best
candidate coordinate block  formally 

msi c     arg max qs msc   mi 
msc msc
   
i   m i 
ms 

s

s
c
s 
where  msc is the space of alignments limited to block  sc   the original objective function  q  is
modified to qs such that it provides a measure of the quality of the block  msc   given the previous
best match matrix  note that the previous iterations matrix  mi    contains the best block that was
of interest in that iteration 
performing the update  usc   or evaluating the objective function  qs   while focusing on a coordinate block may be performed in significantly reduced time as compared to performing these
operations on the entire alignment matrix  while we may perform more iterations as we cycle
   

fit hayasivam   d oshi

   e   

q value

   e   
 e   
   e   
   e   
   e   

optima with bcd
optima

   e   
 

  

  

  

  

  

  

time  s 

figure    bcd facilitates faster convergence in aligning ontologies iasted and sigkdd both related
to conference organization 

through the blocks  the use of partially updated matrices from the previous iteration in evaluating
the next block facilitates faster convergence  we illustrate the impact of bcd on iterative search
as performed by optima on an example ontology pair in fig     alignment using bcd shows the
faster convergence rate 
i terative u pdate with bcd  o    o     

i terative s earch with bcd  o    o   

initialize 
   iteration counter i   
   calculate similarity between the
entities in o  and o  using a measure
   populate the real valued matrix  m    
with initial similarity values
   create a partition of m  
 ms    ms            msc  
   m  m  

initialize 
   iteration counter i   
   generate seed map between
o  and o 
   populate binary matrix  m    
with seed correspondences
   create a partition of m  
 ms    ms            msc  
   m  m  

iterate 
   do
  
c  i    c       i  i    
  
msi c  usc  m i   
  
msi  msi  s  sc
    if c   c then
   
  dist m i   m  
else
   
 is a high value
    m  m i
    while   
    extract an alignment from m

iterate 
   do
  
c  i    c       i  i    

  
search msi c    arg max qs msc   mi 
msc msc

i 
i
ms 
 ms 
s  sc
if c   c then
changed  mi    mi   
else
   
changed  true
    while changed
    extract an alignment from mi

  
   
   

 a 

 b 

figure    general iterative algorithms of fig    are modified to obtain   a  iterative update enhanced
with bcd  and  b  iterative search enhanced with bcd  the update or search steps in line
numbers   and   are modified to update only the current block of interest 

   

fis peeding u p i terative o ntology a lignment using bcd

algorithms in fig    revise the iterative update and search algorithms of fig    in order to
integrate bcd  the primary differences in both involve creating a partition of the alignment matrix 
m  line     and iterations that sequentially process each coordinate block only while keeping the
others fixed  lines       on completing a cycle through all coordinate blocks as determined by the
check in line     we evaluate whether the new alignment matrix differs from the one in the previous
iteration  and continue the iterations if it does  lines         observe that the regular iterations
improving the full match matrix are now replaced with mini iterations updating the blocks 
given the general modifications brought about by bcd  we describe how these manifest in the
four iterative alignment systems that form our representative set  the modifications are based on
the type of iterative technique and are uniform within each group  they do not change the core
alignment approach of each algorithm given the input as we see next 
    bcd enhanced falcon ao
we enhance falcon ao by modifying gmo to utilize bcd as it iterates  as depicted in fig     b  
we begin by partitioning the similarity matrix used by gmo into c     blocks based on the height
of the entities in o  that are part of the correspondences  as mentioned previously  gmo is then
modified so that at each iteration  a block of the similarity matrix is updated while the other blocks
remain unchanged  if block  sc   is updated at iteration i  then eq    becomes 
msi c   g  sc m i  gt    gt  sc m i  g 
msi   msi  s  sc

    

here  g  sc focuses on that portion of the adjacency matrix of o  that corresponds to the outbound
neighborhood of entities participating in correspondences of block sc   while gt  sc focuses on the
inbound neighborhood of entities in sc   adjacency matrix  g    is utilized as before  the outcome
of the matrix operations is a similarity matrix  with as many rows as the variables in sc and columns
corresponding to all the entities in o    the complete similarity matrix is obtained at iteration  i  by
carrying forward the remaining blocks unchanged  which is then utilized in the next iteration  the
general iterative update modified to perform bcd of fig    a  may be realized in falcon ao as in
the algorithm of fig     b  in appendix a 
    bcd enhanced mappso
we may integrate bcd into mappso by ordering the particles in a swarm based on a measure
of the quality of a coordinate block  sc   in each particle in an iteration  equation   is modified to
measure the quality of the correspondences in just the coordinate block sc   in the k th particle by
taking the average 
 vp
  c    v
p   
ma  f  xa   y  
a     
i
qs  mk    
    
 v  c   v   
where  v  c denotes the set of entities of ontology  o    of identical height participating in the correspondences included in block sc   as before  we retain the best particle s  based on this measure
i
  in the remaining particles using the best
and improve on the alignment in a coordinate block  mk s
c
particle in the previous iteration  the remaining coordinates are held unchanged  iterative search of
mappso modified using bcd is shown in the algorithm of fig     b  
   

fit hayasivam   d oshi

    bcd enhanced ola
as explained earlier  ola evolves its similarity matrix m by similarity exchange between pairs of
neighboring entities  in each iteration  it performs an element wise matrix update operation  ola is
enhanced with bcd by adopting eq     specifically  the similarity values of the coordinates of the
chosen block  sc   will be updated using the similarity computations  eq      the remaining blocks 
msi   are kept unchanged 
c

mia

 



sim xa   y   if types of xa and y are the same
  mia m i
sc
 
otherwise

    

msi   msi  s  sc
    bcd enhanced optima
as we mentioned previously  optima utilizes generalized expectation maximization to iteratively
improve the likelihood of candidate alignments  jeffery and alfred        discuss a bcd inspired expectation maximization scheme and call it the space alternating generalized expectationmaximization  sage   intuitively  sage maximizes the expected log likelihood of a block of coordinates thereby limiting the hidden space  instead of maximizing the likelihood of the complete
alignment  the sequence of block updates in sage monotonically improves the objective likelihood  for a regular objective function  the monotonicity property ensures that the sequence will not
diverge  but it does not guarantee convergence  however  proper initialization lets sage converge
locally    in each iteration  optima enhanced using sage chooses a block of the match matrix 
msi c   and its expected log likelihood is estimated  as in previous techniques  we choose the blocks
in a sequential manner such that all the blocks are iterated in order 
equation   changes to estimate the expected log likelihood of a block of a candidate alignment 
 v  c    v   

qs  msi c  m i     

xx

i
p r y  xa   m i     logp r xa  y   msi c    c

    

a     

recall that v  c denotes the set of entities of ontology  o    participating in the correspondences
i   is modified as well to utilize just v
included in sc   notice that the prior probability   c
  c in its
calculations 
the generalized maximization step now involves finding a match matrix block  msi c     that
improves on the previous one 
 mi   
msi c     msi c  msc   qs  msi c    mi     qs  msi 
c  

    

here  msi 
is a part of mi   
c  
at iteration i  the best alignment matrix mi   is formed by combining the block msi c     which
i 
improves qs as defined in eq     with the remaining blocks from the previous iteration  ms 
  in
the complement of sc   unchanged 
   furthermore  the convergence rate may be improved by choosing the hidden space with less fisher information  hero
  fessler        

   

fis peeding u p i terative o ntology a lignment using bcd

the algorithm in fig     b  shows how optima may be enhanced with bcd  we expect significant savings in time because of the search over a reduced space of alignments focused on a block 
msc   in each iteration  additionally  both the objective function  qs   and the prior operate on a
single coordinate block in reduced time  finally  using aligned blocks in the next iteration improves
the convergence rate 

   empirical analysis
while the use of bcd is expected to make the iterative approaches exhibit a greater rate of improvement  and if the approach converges  reach the fixed point faster  we seek to empirically determine 
   the amount of speed up obtained for the various alignment algorithms by integrating bcd 
and
   changes in the quality of the final alignment  if any  due to bcd  this may happen because
the iterations converge to a different local optimum 
ontology

named classes
conference domain
ekaw
  
sigkdd
  
iasted
   
cmt
  
edas
   
confof
  
conference
  
life sciences
mouse anatomy
     
human anatomy
     

properties
  
  
  
  
  
  
  
 
 

table    ontologies from oaei      used in our evaluation  we show the number of named classes
and properties in each as an estimate of their size  notice that our evaluation includes
some large ontologies from different domains as well  additionally  thayasivam and
doshi      a  present evaluations on the four pairs in the     range of the bibliography
benchmark competition 
we use a comprehensive testbed of several ontology pairs  some of which are large  spanning
two domains  we used ontology pairs from the oaei competition in its      version as the testbed
for our evaluation  shvaiko et al          among the oaei tracks  we focus on the test cases
that involve real world ontologies for which the reference  true  alignment was provided by oaei 
these ontologies were either acquired from the web or created independently of each other and
based on real world resources  this includes all pairs of the expressive ontologies in the conference
track all of which structure knowledge related to conference organization  and the anatomy track 
which consists of a pair of mid sized ontologies from the life sciences describing the anatomy
of an adult mouse and human  we list the ontologies from oaei participating in our evaluation
in table   and provide an indication of their sizes  additionally  thayasivam and doshi      a 
evaluate falcon ao  mappso and optima with bcd on the four pairs in the     range of the
   

fit hayasivam   d oshi

bibliography benchmark competition  ontology pairs in the     and     ranges of the bibliography
benchmark were not utilized as the participating ontologies are very small with just    classes and
   properties  subsequently  our representative iterative techniques align these very quickly in the
order of milliseconds leaving no significant room for improvement 
we align ontology pairs using the four representative algorithms  in their original forms and with
bcd using the same seed alignment  m     if applicable  the iterations were run until the algorithm
converged and we measured the total execution time  final recall  precision and f measure  and the
number of iterations performed until convergence  recall measures the fraction of correspondences
in the reference alignment that were found by an algorithm while precision measures the fraction of
all the found correspondences that were in the reference alignment thereby indicating the fraction
of false positives  f measure represents a harmonic mean of recall and precision 
we averaged results of   runs on every ontology pair using both the original and the bcd
enhanced version of each algorithm  because of the large number of total runs  we ran the tests on
two different computing platforms while ensuring comparability  one of these is a red hat machine
with intel xeon core    processor speed of about   ghz with  gb of memory  anatomy ontology
pair  and the other one is a windows   machine with intel core i       ghz processor and  gb of
memory  benchmark and conference ontology pairs   while comparing the performance metrics for
statistical significance  we tested the data for normality and used students paired t test if it exhibits
normality  otherwise  we employed the wilcoxon signed rank test  we utilized the    level  p 
      to deem significance 
as thayasivam and doshi      a  did not previously evaluate ola on the bibliography domain
ontology pairs  we discuss its performance in this article for completeness  similar to the other algorithms  the introduction of bcd in ola reduced its execution time on all four pairs by a total of    
seconds compared to the original time of      seconds  olas precision and recall reduced slightly
causing its f measure to reduce by    for the ontology pair            while the the alignments for
the other pairs remained the same 
the ontologies in the conference domain vary widely in their size and structure  as shown
in fig     the introduction of bcd to the four iterative techniques clearly improves their speed of
convergence and the differences for each algorithm are significant  students paired t test  p 
       in particular  we observed an order of magnitude reduction in time for aligning relatively
larger ontologies such as iasted and edas  for example  pairs  conference  iasted  on mappso and
 edas  iasted  on optima showed such reductions  overall  we observed a total reduction of   
seconds for falcon ao to   minutes    minute and    seconds for mappso     seconds for ola
to a total of   minute and    seconds  and by    minutes and    seconds for optima to   minutes
and    seconds 
falcon ao shows no change due to bcd in its alignment  holding its precision at     and
recall at      optima shows a    improvement in average precision from     to     but average
recall reduced from     to      nevertheless  this causes a    improvement in average f measure
to      mappso with bcd resulted in a significant improvement in final precision from    to
    on average  although the difference in recall was not significant  the precision and recall for
ola remained unchanged 
the mid sized anatomy ontologies for mouse and human were not successfully aligned by
mappso and ola despite the use of bcd  however  bcd reduced falcon aos average execution time for aligning this single ontology pair by     seconds to     minutes  and drastically
reduced optimas average execution time to     minutes from      minutes  the alignment gen   

fis peeding u p i terative o ntology a lignment using bcd

  

  
falcon ao
falcon ao with bcd

  
  

time  sec 

  

time  sec 

mappso
mappso with bcd

  

  

  
  

  
  
 
 

  

 
 

 
e

er

f
on

m

 c

t c

s
da

e
nc

re

fe

on

 c

 c

 i
as

 e

 

f 

aw

fo

 ek

on

t c

m

d

o

n

re

fe

on

 c

o
nf

d
te

as

f e

sig

ce

 

 

s
da

d
kd

 e

ig

m

 c

d
kd

t s

 

 

 

 

e
nc

 c

re

fe

on

 a 

 i
ce

d 

 s
ce

 c

 c

w 

ka

f e

f e

o
nf

o

n

re

fe

on

 c

s 

da

kd

ig

n

re

fe

on

 c

d 

te

as

e
nc

o
nf

o

 c

 b 

  
ola
ola with bcd

optima
optima with bcd

    

 

time  sec 

time  sec 

   
 

 

  

 

 

 

   
s 

d 

da

kd

t

m

 c

g
 si

a
e i

nc

en

r
fe

on

 c

f

e
er

on

 c

 

ed

st

 e
ce

d 

te

s
 ia

s

da

 e

ka

 e

 

d 

ed

st

ia
w 

e 

kd

g
 si

t 

m

 c

 c 

n
co

nc

re

fe

aw

k
 e

t

m

 c

d 

f 

fo

kd

n
 co

t

m

 c

a
s i

da

 e

 d 

 

ed

st

g
 si

ka

 e

d 

 

kd

ed

st

ia
w 

sig

 
ed

st

 ia

figure    average execution time consumed by   a  falcon ao   b  mappso   c  ola  and  d 
optima in their original form and with bcd  for   of the    ontology pairs from conference domain  we ran the algorithms for all the pairs  and selected ontology pairs which
exhibited the three highest and the three lowest differences in average execution times
for clarity  note that the time axis of  d  is in log scale  notice the improvements in
execution time for the larger pairs  specifically  about a     reduction in average execution time for the ontology pair  edas  iasted  by falcon ao and an order of magnitude
reductions in average run time for ontology pairs  conference  iasted  in mappso and
 edas  iasted  in optima  were observed 

erated by falcon ao with bcd remained unchanged at       precision and     recall while
the alignment from optima with bcd improved to a precision of     and recall of        both
falcon ao and optima automatically utilized their ontology partitioning methods in order to align
these mid sized pairs 
in summary  the introduction of bcd led to significant reductions in convergence time for all
four iterative algorithms on several ontology pairs  some extending to an order of magnitude  simultaneously  the quality of the final alignments as indicated by f measure improved for a few pairs 
with one pair showing a reduction in the context of optima  however  we did not observe a change
in the f measure for many of the pairs  therefore  our empirical observations indicate that bcd
does not have a significant adverse impact on the quality of the alignment 
   

fit hayasivam   d oshi

   optimizing bcd using ordering and partitioning schemes
as we mentioned previously  bcd does not overly constrain the formation of the coordinate blocks
and neither does it impose an ordering on the consideration of the blocks  other than satisfying
the cyclic rule  consequently  we explore other ways of ordering the blocks and partitioning the
alignment variables in the context of the representative algorithms  these include 
   ordered from roots to leaves  cycle over blocks of decreasing height starting with the block
containing entities with the largest height 
   ordered by similarity distribution  obtain an aggregate measure of the lexical similarity between the ontology entities participating in each block  the normalized distribution of similarities provides the likelihood of picking the next block 
   both ontologies partitioned  a block contains participating entities from each ontology that
are at the same height 
   subtree based partitioning  transform the ontology into a tree and form a block of variables
such that the participating entities are a part of a subtree of a predefined size 
   random partitioning  form a block by randomly selecting alignment variables for inclusion 
while the partitioning and ordering utilized in the previous section are intuitive  our objective is to
discover if other ways may further improve the run time performances of the algorithms  in subsequent experimentation  we exclude mappso from our representative set due to the randomness in
its algorithm  which leads to comparatively high variability in its run times 
    ordering the blocks
the order in which the blocks are processed may affect performance  this is because updated
correspondences from the previous blocks are used in generating the alignment for the current block 
initially  blocks with participating entities of increasing height beginning with the leaves were used
as illustrated in fig     other ordering schemes could improve performance 
 we may reverse the previous ordering by cycling over blocks of decreasing height  beginning
with the block that contains entities with the largest height  this leads to processing parent
entities first followed by the children 
 we may obtain a quick and approximate estimate of the amount of alignment in a block of
variables  one way to do this is to compute an aggregate measure of the lexical similarity
between the entities of the two ontologies participating in the block  assuming the similarity to be an estimate of the amount of alignment in a block  we may convert the estimates
into a probability distribution that gives the likelihood of finding multiple correspondences
in a block  the block to process next is then sampled from this distribution  this approach
requires a relaxation of the cyclic rule because a particular block is not guaranteed to be selected  in this regard  an expectation of selecting each block is sufficient to obtain asymptotic
convergence of bcd  nesterov        
   

fis peeding u p i terative o ntology a lignment using bcd

role
agent

data

worker role
sample

reagent role

researcher

drug

drug role
specimen
o 
drug

m  

m  

m  

m  

m  

agent

m  

m  

m  

m  

m  

sample

m  

m  

m  

m  

m  

researcher

m  

m  

m  

m  

m  

m  

m  

m  

m  

m  

o 

data

figure    presence or absence of correspondences between entities of two ontologies is represented
in the match matrix  concepts drug  sample  and researcher are all leaves and correspondences with these may be grouped into a block  highlighted   we may process this block
first followed by the block containing data and agent  alternately  we may reverse this
ordering for optimizing blocks 

we compare the performances of the alternate ordering schemes with the initial on the    ontology pairs in the conference domain  the results of reversing the order of the original scheme
are shown in fig     clearly  the original ordering allows all three bcd enhanced approaches to
converge faster in general  while optimas average recall across all pairs improved slightly from
    to      average precision reduced by    to a final of      falcon aos average f measure
improved insignificantly at the overall expense of    seconds in run time  reversing the order has
no impact on the precision and recall of ola  these results are insightful in that they reinforce the
usefulness of the alignment heuristic motivating the original ordering scheme 
our second alternate ordering scheme involves determining the aggregate lexical similarity between the entities participating in a block  the distribution of similarities is normalized and the next
block to consider is sampled from this distribution  notice from fig    that falcon ao and ola
demonstrate significant increases in convergence time  p        compared to utilizing bcd with
the initial ordering scheme  on the other hand  the overall time reduces for optima and by orders
of magnitude for some of the pairs containing the larger ontologies such as edas and iasted  we
select   pairs  which exhibit the highest and lowest differences in average execution times to show
in fig     falcon aos precision and recall show no significant change and its f measure remains
unchanged  ola loses both precision and recall with the similarity distribution scheme  the precision across all pairs went down to     from     along with a     drop in recall from     leading
to a drop in f measure to      however  optimas f measure remains largely unaffected 
recall that both falcon ao and ola perform iterative updates while optima conducts an
iterative search  while all sampled blocks undergo updates by the iterative update algorithms  search
algorithms may not improve the blocks having low similarity  consequently  blocks with high
similarity that are sampled more often are repeatedly improved  this results in quicker convergence
   

fit hayasivam   d oshi

falcon ao with bcd
falcon ao with bcd  ordered from roots to leaves 

  

ola with bcd
ola with bcd  ordered from roots to leaves 

  
  

  

time  sec 

time  sec 

  
  

  

 
 
 

  
 
 

 

 

 

e
nc

re

fe

on

 c

f
on

on

e
nc

o

s
 ia

nc

 c

 

n
co

t 

m

 c

 a 
    

e
er

f

s

a
ed

s 

e 

d 

te

d
f e

f
on

re

fe

on

 c

k
sig

 

c

n
re

 

as

dd

d
e e

fe

 c

 

 

as

 c

t 

cm

 

of

dd

k
sig

da

 
of

f

n
 co

t

m

 c

 e
ce

en

on

r
fe

 c

on

 c

 b 

d 

kd

ig

en

r
fe

d 

te

as

 i
ce

 c

f
on

 s
of

 

ed

st

 ia

s
da

 e

optima with bcd
optima with bcd  ordered from roots to leaves 

time  sec 

   

  

 

 

aw

 ek

re

fe

on

 c

e
nc

n

re

fe

n
co

d 

te

as

 i
ce

f

on

 c

 

d 

te

as

 i
of

ka

 e

 

dd

si
d 

e

st

 ia

dd

gk

gk

si
w 

ka

 e

 

 

ed

st

ia
w 

 c 

figure    average execution times of   a  falcon ao   b  ola  and  c  optima  with bcd that
uses the initial ordering scheme and with bcd ordering the blocks from root s  to leaves 
for   of the    ontology pairs from the conference domain  while we ran the algorithms
for all the pairs  we selected ontology pairs which exhibited the highest and lowest differences in average execution times  this alternate ordering increases the run times to
convergence and we did not observe significant improvements in the f measures 

to a different and peculiar local optima where the blocks with high similarity have converged while
the others predominantly remain unchanged  thus  the alignment quality remains largely unaffected
while the convergence time is reduced  as we see in the context of optima 
    partitioning the alignment variables
because bcd does not impose a particular way of grouping variables  other well founded partitioning schemes may yield significant improvements 
 an extension of the initial scheme  fig     a   would be to group variables representing
correspondences such that the participating entities from each of o  and o  are at the same
height in relation to a leaf entity in the ontology  as we illustrate in fig     b   note that
   

fis peeding u p i terative o ntology a lignment using bcd

  

falcon ao with bcd
falcon ao with bcd  ordered by similarity distribution 

  
  

  

time  sec 

  

time  sec 

ola with bcd
ola with bcd  ordered by similarity distribution 

  

  

  
 
  
 

 

 

 
re

fe

on

 c

fo

on

 c

aw

k
sig

f 

nc

 

dd

d
e e

t 

m

 c

 

as

dd

k
sig

da

 e

d 

s
 ia

as

k
sig

 e

e
nf

o

t c

 a 
    

as

of

nf

o
t c

m

 c

m

 c

 

 

nc

re

w 

ka

d

 e

e 

 

dd

te

k
s e

 ed

e
nc

re

fe

on

 

 b 

 

fo

on

 c

dd

gk

i
f s

n

re

fe

n
co

 c

d 

te

as

 i
ce

d 

te

as

 i
as

d

 e

optima with bcd
optima with bcd  ordered by similarity distribution 

time  sec 

   

  

 

   

 c

on

r
fe

d 

 e
ce

kd

ig
f s

en

gk

 si

t

m

 c

s 

da

 
dd

on

 c

da

 e

 c 

 

 

 

ed

st

a
s i

fo

aw

da

 e

dd

gk

k
s e

si
w 

ka

 e

figure    average execution time consumed by   a  falcon ao   b  ola and  c  optima with
bcd utilizing the previous ordering scheme and with bcd ordering the blocks by similarity distribution  for   of the    ontology pairs from conference domain  although we
ran the algorithms for all the pairs  we show ontology pairs which exhibited the highest and lowest differences in average execution times  the new ordering helped optima
further cut down the total execution time by     seconds while finding   more correct
correspondence and   false positives across all pairs 

the entity heights may differ between the two ontologies  this is based on the observation
that the generalization specialization hierarchy of concepts pertaining to a subtopic is usually
invariant across ontologies 
 a more sophisticated scheme founded on the same observation is to temporarily transform
each ontology  which is modeled as a labeled graph  into a tree  we may utilize any graph
search technique that handles repeated nodes  such as breadth first search for graphs  russell
  norvig         to obtain the tree  if the ontology has isolated graphs leading to separate
trees  we use the owl thing node to combine them into a single tree  subsequently  we group
those variables such that participating entities from each ontology are part of a subtree of a
   

fit hayasivam   d oshi

o

o

m m
 mff m  mfi

m m
 mff m  mfi



o



m
 m

 m
ff m
  m
fi

o





m
 m

 m
ff m
  m
fi

mff mff
 mffff mff  mfffi

mff mff
 mffff mff  mfffi

m  m 
 m ff m   m fi

m  m 
 m ff m   m fi





o



o



m m
 mff m  mfi
m
 m

 m
ff m
  m
fi
mff mff
 mffff mff  mfffi
m  m 
 m ff m   m fi


figure     matrices representing an intermediate alignment between entities of o  and o     a 
identically shaded rows form a block of variables because the corresponding entities
of o  are at the same height   b  identically shaded rows and columns correspond to
entities at the same heights in o  and o    respectively  variables in overlapping regions
form a block   c  entities corresponding to identically shaded rows or columns form
subtrees  a fourth approach is to randomly select variables for inclusion into a block 

predefined size  fig     c    we may discard the ontology trees after forming the blocks 
while the previous schemes form blocks of differing numbers of variables  this scheme forms
all but one block with the same number of variables by limiting the subtree size 
 a simple point for comparison would be a scheme that randomly selects alignment variables
for inclusion in a block  with no clear way to determine how many variables to include in a
block  we randomly inserted variables into   blocks 
based on the findings in the previous subsection  the blocks are ordered based on height of the
participating entities or the subtrees root nodes for falcon ao and ola  we begin with the blocks
of smaller height and proceed to those with increasing height  for optima  we sample the blocks
using a distribution based on the lexical similarity between participating entities 
as illustrated in fig      partitioning both the ontologies helped optima the most and significantly saves on its execution times  p         for the pairs involving some of the larger ontologies 
it reduced by more than an order of magnitude  furthermore  optima gains in precision over all
pairs by    with a    reduction in recall resulting in a    gain in f measure to      ola saves
on execution time as well  relatively less than optima  with a slight improvement in its alignment
quality  on the other hand  falcon ao experienced an increase in its total execution time over all
the pairs  optimas improved performance is attributed to blocks that are now smaller allowing a
more comprehensive coverage of the search space in less time  on the other hand  iterative update
techniques such as falcon ao do not show any improvement because the smaller blocks may be a
sign of overpartitioning 
figure    illustrates the impact of subtree based partitioning in all three algorithms  falcon ao
exhibited a significant reduction in execution times  p         simultaneously with an improvement
in precision and f measure over all the pairs by     similar to the previous optimization  olas
execution time reduces significantly as well  p         while keeping its output unchanged  on
   

fis peeding u p i terative o ntology a lignment using bcd

  

falcon ao with bcd
falcon ao with bcd  both the ontologies partitioned 

  

ola with bcd
ola with bcd  both the ontologies partitioned 

  
  

time  sec 

time  sec 

 
  

  

 

 

  

 

 

 

as

d
e e

i

t s

cm

 

c
en

r

fe

on

 c

d 

 

d 

d
gk

 si

f
fo

on

 c

w 

d
gk

 

t
ias

d 

s
da

e 

d
gk

si

 

s

a
ed

 

ed

a
 ek

 
aw

k

 e

 e

    

kd

e s

c
en

r

fe

on

 c

kd

ig

ig

t s

m
 c

 a 

d 

d 

da

t e

m

 c

t 

m

 c

s 

nc

re

fe

n
co

 

d 

d 

te

as

s i

a
ed

kd

sig

w 

a
ek

 

 b 

optima with bcd
optima with bcd  both the ontologies partitioned 

time  sec 

   

  

 

   
f 

 

 

aw

 ed

fe

n
re

 ek

 c

f
on

a
ed

d 

te

as

s i

of

ce

on

 c

 

as

fo

on

t c

cm

 

 

d 

d 

te

ias

w 

a
ek

kd

ig

 s

d
te

s

 ia

 c 

figure     execution times consumed by   a  falcon ao   b  ola  and  c  optima with bcd
that uses blocks obtained by partitioning a single ontology and with bcd that utilizes
partitions of both the ontologies  for   of the    ontology pairs from conference domain 
although we ran the algorithms for all the pairs  we selected ontology pairs which exhibited the highest and lowest differences in execution times  optimas total execution
time over all pairs reduced by     seconds  false positive correspondences reduced by
   at the expense of   correct correspondences  ola cut down    seconds of the total
execution time and   incorrect correspondences 

the other hand  this partitioning technique reduces the efficiency of optima with a small reduction
in alignment quality as well  falcon aos gmo employs an approach that relies on inbound and
outbound neighbors  which is benefited by using blocks whose participating entities form subtrees 
as structure based matching in optima is limited to looking at the correspondences between the
immediate children  including larger subtrees in blocks may not be of benefit to optima 
finally  in fig     we explore the impact of randomly partitioning the variables into blocks on
all three alignment algorithms  both falcon ao and ola showed significant increases in execution time  p         on the conference pairs  while falcon aos precision improved by less than
    its recall dropped by    with an overall reduction in f measure of     ola exhibited a minor increase in precision of      while the recall remained unchanged resulting in an increase of
f measure by       optima demonstrated mixed results as shown in fig     c  with the execution
   

fit hayasivam   d oshi

  

  

falcon ao with bcd
falcon ao with bcd  subtree based partitioning 

  

ola with bcd
ola with bcd  subtree based partitioning 

  

  

time  sec 

time  sec 

 
  
  

 

 
  
 

 
 

 
f 

f 

fo

fo

m

t

 c

as
e i

ce

n

re

fe

on

 c

nc

re

fe

on

 c

d 

 

aw

te

n
 co

n
 co

da

 e

d 

te

k
s e

as
s i

da

f 

d 

te

s
 ia

 e

f e

t c

m

k

 e

 c

d 

w 

ka

fo

on

aw

o
nf

f

o

 c

on

 c

 a 

 

aw

kd

 ek

ig

 s
of

s
da

 e

 e

 

d 

ed

st

 ia

s
da

kd

ig

 s
as

d

 e

 b 
    

optima with bcd
optima with bcd  subtree based partitioning 

time  sec 

   

  

 

m

 c

f 

d 

fo

te

as

t i

n

re

fe

on

 c

on

n

re

fe

on

 c

 i
ce

d 

te

as

 c
ce

d

 e

d 

d 

te

as

 i
as

kd

d

 e

 
aw

d 

te

ias

ig

 s
as

k

 e

 c 

figure     execution times consumed by   a  falcon ao   b  ola  and  c  optima  with bcd
that uses the default partitioning approach and with bcd that uses subtree based partitioning  for   of the    ontology pairs from conference domain  we ran the algorithms
for all the pairs of which we selected ontology pairs that exhibited the highest and lowest
differences in execution times  the total execution time of falcon ao for the complete
conference track reduces by   sec along with a reduction of    false positives  ola
saves     sec in total execution time while keeping the output alignments unchanged 
however  optima consumes     seconds more 

time increasing for some pairs while reducing for others  on the whole  we did not observe a statistically significant difference in execution times  furthermore  bcd due to random partitioning did
not improve beyond the seed alignment for many of the pairs  with an overall decrease in f measure
of    across all pairs 
in summary  a side by side comparison of the various block ordering and partitioning techniques
discussed previously is presented in fig     for all three alignment algorithms on a single ontology
pair   edas  iasted   we do not include the random partitioning as its alignment performance in terms
of recall and precision was poor on many of the ontology pairs making it illsuited as a candidate 
differences in run time performance of the algorithms on  edas  iasted  is representative of their
   

fis peeding u p i terative o ntology a lignment using bcd

  

  
falcon ao with bcd
falcon ao with bcd  randomly partitioned 

  

ola with bcd
ola with bcd  randomly partitioned 
  
  

time  sec 

time  sec 

  
  
  
  

  
  

  
 

 
 
nc

re

fe

on

 c

 

 

of

nf

o
e c

 

as

d
e e

re

fe

on

 c

 

w 

nc

a
 ek

da

g
 si

s

da

 e

 e

n
 co

t

m

 c

w

ka

 e

 a 

g
 si

d 

w 

fo

kd

kd

ias

s 

s

da

 e

d
te

f 

d 

d 

t

m

 c

kd

ig

a
 ek

nf

 s
of

o

 c

d

 e

d 

d 

te

as

 i
as

kd

d

 e

 
aw

d 

te

ias

ig

 s
as

k

 e

 b 

  

time  sec 

optima with bcd
optima with bcd  randomly partitioned 

 

   

f 

en

r
fe

on

 c

da

 e
ce

en

r
fe

 c

on

d 

s 

fo

on

 c
ce

kd

ig

 s
ce

en

r
fe

on

 c

on

 c

 c 

 

ed

st

 ia

f
fo

 e

 

ed

st

 ia

s
da

 

ed

st

 ia

w
ka

 e

figure     execution times consumed by   a  falcon ao   b  ola  and  c  optima  with bcd
that uses the default partitioning approach and with bcd that uses random partitioning 
we show   of the    ontology pairs from conference domain  we ran the algorithms for
all the pairs of which we selected ontology pairs that exhibited the highest and lowest
differences in execution times  the total execution time of falcon ao for the complete
conference track increases by      secs due to the random partitioning  ola takes an
additional    secs in total execution time while optima saves     seconds over all the
pairs at the expense of alignment quality 

performances on the larger data set in general  in particular  falcon aos run time reduces on
using subtree based partitioning to obtain the blocks  olas run time reduces the most when both
ontologies in the pair are partitioned using entity height  while optima benefits from ordering
blocks based on a preliminary measure of the similarity of the participating entities and forming
blocks by partitioning both ontologies 

   aligning large biomedical ontologies
ontologies are becoming increasingly critical in the life sciences  bodenreider   stevens       
lambrix  tan  jakoniene    stromback        with multiple repositories such as bio rdf  belleau et al          obo foundry  smith et al         and ncbos bioportal  musen et al        
   

fit hayasivam   d oshi

time  sec 

   

default
ordered from roots to leaves
ordered by similarity distribution
both the ontologies partitioned
subtree based partitioning

  

 

falcon ao with bcd

ola with bcd

optima with bcd

figure     a side by side comparison of the performances of the three iterative algorithms using
various block ordering and formation techniques  a single moderately large ontology
pair   edas  iasted   is aligned  the default represents the iterative alignment algorithm with bcd where the blocks are ordered based on the height of the participating
entities from the leaves to the root and a single ontology is partitioned to form the blocks 
differences in run times are indicative of the performance in general 

publishing a growing number of biomedical ontologies from different domains such as anatomy
and molecular biology  for example  bioportal hosts more than     ontologies whose domains fall
within the life sciences  these ontologies are primarily being used to annotate biomedical data and
literature in order to facilitate improved information exchange  with the growth in ontology usage 
reconciliation between those that overlap in scope gains importance 
evaluation of general ontology alignment algorithms has benefited immensely from the standardsetting benchmark  oaei  shvaiko et al          in addition to multiple tracks with real world test
cases  the competition emphasizes on benchmark comparison tracks that use test pairs that are modifications of a single ontology pair in order to systematically identify the strengths and weaknesses
of the alignment algorithms  one of the tracks on real world ontology pairs involves aligning the
ontology on the adult mouse anatomy with the human anatomy portion of nci thesaurus  golbeck
et al          while another seeks to align the foundational model of anatomy  fma   snomed ct
and the national cancer institute thesaurus  nci   however  aligning biomedical ontologies poses
its own unique challenges  in particular 
   entity names are often identification numbers instead of descriptive names  hence  the alignment algorithm must rely more on the labels and descriptions associated with the entities 
which are expressed differently using different formats 
   although annotations using entities of some ontologies such as the gene ontology  ashburner
et al         are growing rapidly  for other ontologies they continue to remain sparse  consequently  we may not overly rely on the entity instances while aligning biomedical ontologies 
   finally  biomedical ontologies tend to be large with many including over a thousand entities 
this motivates the alignment approaches to depend less on brute force steps  and compels
assigning high importance to issues related to efficiency and scalability 
given these specific challenges  we combed through more than     ontologies hosted at ncbo
 musen et al         and obo foundry  smith et al          and isolated a community benchmark of
   

fis peeding u p i terative o ntology a lignment using bcd

   different biomedical ontology pairs  thirty two ontologies with sizes ranging from a few hundred
to tens of thousands of entities constitute the pairs  we provide the list of ontologies participating
in the benchmark and the ontology pairs in appendix b  this new benchmark guides comparative
evaluation of alignment algorithms to the context of a key application domain of biomedicine 
our primary criteria for including a pair in the benchmark was an expectation of a sufficient
amount of correspondences between the ontologies in the pair  as determined from ncbos bioportal  in particular  we calculated the ratio of the correspondences posted in bioportal for each
ontology pair to the largest number of possible correspondences that could exist  we selected the
   pairs with the largest such ratio  existing correspondences will serve in the reference alignment 
these include maps from the umls metathesaurus and those that are crowd sourced  nevertheless  our analysis reveals that the existing correspondences constitute just a small fraction of the
total alignment that is possible between two ontologies 
we sought to align the pairs in our new biomedical ontology alignment testbed using the bcdenhanced representative algorithms  the obtained alignments are evaluated using the existing correspondences previously present in bioportal  the reference alignments between the pairs are likely
incomplete  a secondary objective is to discover new correspondences between the ontologies and
submit them to ncbos bioportal for curation 
informed by the experimentation described in section    blocks for the bcd in falcon ao were
formed using subtree based partitioning of one ontology and ordered as they were created  blocks
in ola were formed similarly though both ontologies were partitioned while blocks in optima
were formed by partitioning both ontologies on the basis of the height of the entities and ordered
from leaves to root  the execution times and f measure for all the pairs successfully aligned within
an arbitrary window of   hours per pair by the bcd enhanced algorithms are shown in figs    
and     we point out that bcd speeds up the algorithms but does not explicitly promote scalability 
in other words  while it reduces the time to convergence it does not provide a way to manage the
memory in order to align large ontologies 
ola with bcd failed to align a single pair within our time window  both falcon ao enhanced
with bcd and without aligned    pairs within the time window  falcon ao was unable to parse
one or both the ontologies in the remaining   pairs due to which no results are available for these 
falcon ao with bcd aligned the pairs taking     hours less time in total than the original which
consumed about     hours for all the pairs  we show the time for each pair in fig     a   a closer
look reveals that falcon ao with bcd exhibited time greater than the default on   of the    pairs 
time on these few pairs did not exceed by more than    seconds and is due to performing the
subtree based partitioning of the variables for forming the blocks in bcd  the corresponding fmeasure did not change significantly due to the use of bcd over all the pairs with the f measure
over all the pairs being       
optima enhanced with bcd aligned    pairs each within the time window compared to    pairs
without bcd  optima was unable to parse one or both ontologies in the remaining   pairs due to
which no results are available for these  focusing on the    pairs that were aligned by both within
the time window  fig       optima with bcd aligned these pairs in     hours taking      hours
less time compared to the original algorithm  simultaneously  it found an additional     correct
correspondences across all the pairs with an increase in f measure of about    
logmap  a fast non iterative algorithm that targets biomedical ontologies returned alignments
for all    pairs in    minutes of total time  it produced a precision and recall of       and      
 f measure           respectively over all the pairs  these are significantly less than those of
   

fit hayasivam   d oshi

     

falcon ao
falcon ao with bcd

time  sec 

    

   

  

 

 
n 
 
n 
n   
l   
n   
 
o
a  ga
n   
 
 
  aa a 
 
t  a  a  o  ro ma a 
i  da el da
 
 
 
bi da p  
 
 
da er
 
a   
 
ro
 
a   
 
ro da
g
a 
ro o
 
da o   ob eh ifc  eh v  hd fa ao ao be v  hd fa ao be eh o  ho hd hd b b hd gm ar be n  hd  ma  ev  eh  ub e  v  be  bt  ev  po  po vm he  eh o c ds ev hd
eh  ta sp s 
 n o o e o e o z o x o t o u  e  e  z
 t
 u o   bt  v a e a e o f o e o t o c o u ero  e g
g
g
g  pa  e  u bt bt cv cv o e d c ro  gr  ps a  a e
 
o
p
o
o
o
o
o
t
o
o
o
o
o
d
d
o
o
o
f
o
f
s
a
a
a
a
a
a
il
il
a
a
a
a
a
b
e
t
t
a
a
a
a
a
a
a
a
o
h
h
h
h
o
o
o
h
fa fa b
a
a
b
b
b
b
 z  z  f  t  s  b  a  a  a  a  a  a  x  x  x  x  x  p  p  t  b  b  h  h  h  h  h  u  a  v  v  v  v  p  b  b  f  f  f  f  m  m  c  p  p  e  m

ontology pair

 a 
 

falcon ao
falcon ao with bcd

f measure

   

   

   

   

 

 
n 
   
 
n 
l   
n   
 
o
a  ga
n   
 
 
  aa a  t  a  a  o  ron ma    
 
i  da el da
 
 
bi da p  
 
 
da er
a   
 
ro
 
a   
 
ro da
g
a
a 
ro o  
 
da o   ob eh ifc eh v  hd fa ao ao be v  hd fa ao be eh o  ho hd hd b b hd gm ar be n  hd ma ev eh ub e  v  be bt ev  po  po vm he eh o c ds ev hd
eh  ta sp s   n o   e  e  z  x  t  u  e  e  z  t  u o   bt  v a e a e  f  e  t  c  u ro  e g  g  g  g   pa  e  u bt  bt  cv cv  e d c o   gr  ps a   e
 
a fa b  ad ao sp ao ao ao ao ao ao ao ao ao ao ao at o ao il il ao ao ao ao ao be eo ho ho ho ho o to to b  b  b  b  fo o ar o o hd fa
f
 z  z  f  t  s  b  a  a  a  a  a  a  x  x  x  x  x  p  p  t  b  b  h  h  h  h  h  u  a  v  v  v  v  p  b  b  f  f  f  f  m  m  c  p  p  e  m

ontology pair

 b 

figure      a  time consumed  and  b  f measure attained by the original falcon ao and that
with optimized bcd for    pairs of our large biomedical ontology testbed  respectively 
note that the time axis is in log scale  ontology names are ncbo abbreviations  the
alignment was performed on a red hat machine with intel xeon core    processor speed
of about   ghz with  gb of memory 

falcon ao  which exhibited a precision and recall of       and       respectively  for the pairs
it aligned  optima with bcd exhibited a precision of       and a recall of       with an overall
f measure of        while the recall is less than logmap  the f measure is significantly better
due to the improved precision 
finally  we submitted    new correspondences between entities in the pairs of the testbed to
ncbo for curation and publication  these are nontrivial correspondences identified by both algorithms  not present in the reference alignments and appropriately validated by us 
   

fis peeding u p i terative o ntology a lignment using bcd

      

optima
optima with bcd

time  sec 

     

    

   

  

n 
n 
n  a 
l 
n   
n   
 
 
 
a 
 
 
 
i 
 
a 
ro
 
i 
el da
 
 
 
 
a   
 
ro
a   
 
ro da
g da da  bt da  ma ro ero  m da  a  v 
ro to v 
da
eb
o po
hd ube  
da o   ob eh ifc  eh v 
n h
h
a
b
hd fa ao ao be v 
h
vm h
hd fa ao be eh o 
e
b
g
be  b
ho h
v 
 p
 
 e
 m
 e
 e
 
o
eh  ta sp
s  o n po o e o e o z o x o t o u o e o e o z o t o u to   bt o v a e a e o f o e o t o c o u er o e og og og og  pa o e o u  bt  bt  cv  cv o e d c
 
d
fa zfa fb ta sa bs aa aa aa aa aa aa xa xa xa xa xa pa po ta bil bil ha ha ha ha ha ub ae vh vh vh vh po bt bt fb fb fb fb mf mo
 z
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

ontology pair

 a 
optima
optima with bcd

 

f measure

   

   

   

   

 

n 
   
 
n 
 
o
l   
n   
n   
 
 
  aa a  t  a  a  o  ron ma    
 
i  da el da
 
 
bi
 
 
da er
a   
ro
 
 
a   
ro da
a
 
g
ro o  
da o   ob eh ifc  eh v  hd fa ao ao be v  hd fa ao be eh o  ho hd hd b b hd gm ar be n  hd  ma  ev  eh  ub e  v  be  bt  ev  po  po vm he
h
o
a
 
 
e
e
e
e
z
x
t
u
f
e
t
c
u
n
e
e
z
t
u
t
e
a
v
 e a t  sp ds o  po o  o  o  o  o  o  o  o  o  o  o  to  b o  a  a  o  o  o  o  o  er o  og og og og  p o e o u  bt  bt  cv  cv o e d c
a
l
l
f
o
s
a a a a a a a a a a a a o a
i
i
a a a a a b e h h h h o t
t b b b b
a
f
f
b a
 z  z  f  t  s  b  a  a  a  a  a  a  x  x  x  x  x  p  p  t  b  b  h  h  h  h  h  u  a  v  v  v  v  p  b  b  f  f  f  f  m  m

ontology pair

 b 

figure      a  time consumed  and  b  f measure attained by the original optima and that with
optimized bcd  for    pairs of our biomedical ontology testbed  respectively  note that
the time axis is in log scale 

   discussion
performances of the iterative update and search techniques are impacted differently by various ways
of formulating the blocks and the order of processing them  importantly  the quality of the alignment
may be adversely impacted  nevertheless  the approach of grouping alignment variables into blocks
based on the height of the participating entities in the ontologies is motivated by a recognized
heuristic and leads to competitive performance with no observed negative impact on the precision
and recall of the alignments  however  different ontology pairs may lead to a differing number of
blocks of various sizes  in particular  tall ontologies that exhibit a deep class hierarchy result in
more blocks than short ontologies 
   

fit hayasivam   d oshi

given the bcd based enhancement and optimization  how well do these algorithms compare
in terms of execution time and alignment quality with the state of the art  in order to answer this
question  we compare with the performances of    algorithms that participated in the conference
track of oaei       shvaiko et al          among these  an iterative alignment algorithm  yam   
produced the best f measure for the    pairs followed by logmap  which does not utilize optimization  codi  and optima   which is optima augmented with bcd  these latter approaches
all produced f measures that were tied or within    of each other  optima  ranked second after
yam   when the alignment is evaluated using f  measure due to its comparatively high recall 
oaei reports run time on a larger task of aligning     conference ontology pairs  on this task 
while yam   consumed more than   hours for all the pairs  logmap took slightly less than  
minutes and optima  consumed    minutes  because falcon ao and ola did not participate in
oaei       we ran them separately on the     pairs on our machines  whose configurations are
comparable to that utilized by oaei  falcon ao and ola enhanced with bcd consumed    and
  minutes respectively although their alignment quality is lower than that of optima   this would
place all three representative algorithms in the top two thirds among the    that participated in the
conference track of oaei in terms of run time with ola in the top half  and optima  and ola in
group   with respect to alignment quality    while   competing algorithms completed the evaluation
faster    of these exhibit alignment quality that is substantially worse than that of the representative
algorithms  in the absence of bcd  the representative algorithms would have ranked among the
bottom third or exceeded the   hour cut off  performance on the anatomy pair due to bcd would
place both falcon ao and optima  in the top half of the    algorithms that participated in terms
of run time and f measure  previously  optima without bcd ranked in the bottom quarter 
the reductions in convergence time and the observed increases in precision of the alignment
due to bcd is  in part  because of the optimized correspondences found for the previous coordinate block  which influence the selection of the correspondences for the current coordinate block 
furthermore  as we mentioned previously  limiting the randomly generated correspondences in
mappso to the block instead of the whole ontology makes the search more guided  this is representative of the effect that bcd has on iterative search in general  focusing on a single block
significantly reduces the space of alignments over which iterative techniques must search thereby
arriving at an optimum quicker  however  a greater number of these smaller optimization subproblems must be solved but as our results imply the smaller optimization problem offsets this expense 
given that on integrating bcd the iterative algorithms converged to different values of the q
function during iterative search or different match matrices  m   during iterative update  which
often produced better quality alignments  we infer that the original algorithms were converging to
local optima instead of the global optima  and that using bcd has likely resulted in convergence to
 better  local optima as well  while this insight is not new  euzenat et al          it is significant
because it further reinforces the presence of local optima in the alignment space of these algorithms 
this may limit the efficacy of iterative alignment techniques 
falcon ao and optima s comparatively better performance measured using f measure against
the fast  non iterative algorithm  logmap  on the biomedical ontology alignment testbed indicates
that iterative techniques continue to be among the best in the quality of the obtained alignment including on large ontology pairs  this motivates ways of making them efficient  such as bcd  and
more scalable 
   note that mappso with bcd would have placed in the bottom third 

   

fis peeding u p i terative o ntology a lignment using bcd

   conclusion and future work
while techniques for scaling automated alignment to large ontologies have been previously proposed  we presented a novel approach based on bcd to speed up the alignment process of an
important class of algorithms  these algorithms are iterative and anytime demonstrating high quality alignments while often consuming more time than non iterative algorithms  we demonstrated
this technique in the context of four different iterative algorithms and evaluated its impact on both
the total time of execution and the final alignments precision and recall  we reported significant
reductions in the total execution times of the algorithms enhanced using bcd  these reductions
were most noticeable for larger ontology pairs  often the algorithms converged in a lesser number
of iterations  simultaneously  utilizing our default scheme of grouping those alignment variables
such that the participating entities from one ontology in a block have the same height and optimizing the blocks in the order of increasing height  we observe an improvement in the precision of the
alignments generated by some of the algorithms with no significant change in the recall 
while it is possible to improve on the run time performance of the default partitioning and
ordering scheme by utilizing other schemes  we note that some of these may negatively impact the
alignment quality  subsequently  the default scheme is generally recommended for existing and new
iterative alignment techniques that seek to utilize bcd 
the ability to improve quickly allows an iterative alignment algorithm to run until convergence if
possible  in contrast to the common practice of terminating the alignment process after an arbitrary
number of iterations  as predefining a common bound for the number of iterations is difficult 
speeding up the convergence becomes vital  we observe that bcd does not promote scalability to
large ontologies 
finally  we demonstrated the benefits of bcd toward aligning pairs in a new biomedical ontology testbed  due to the large number of ontologies in biomedicine  there is a critical need for
ontology alignment in this vast domain  our future work is to continue to focus on methods that
would allow general and principled alignment approaches such as falcon ao and optima to perform better on this testbed by producing better quality alignment for more pairs in less time  and on
aligning other large biomedical ontologies that are in popular use such as snomed ct and nci 
consequently  we believe that our community benchmark could potentially drive future research
toward pragmatic ontology alignment 

   acknowledgment
this research is supported in part by grant number r  hl       from the national heart  lung 
and blood institute  the content is solely the responsibility of the authors and does not necessarily
represent the official views of the national heart  lung  and blood institute or the national institutes of health  the authors thank todd minning and rick tarleton from the center for tropical
and emerging diseases at the university of georgia and amit sheth at wright state university for
useful discussions  the authors also thank the anonymous reviewers for feedback that benefited the
article greatly 

   

fit hayasivam   d oshi

appendix a  representative iterative algorithms enhanced with bcd
we chose four representative iterative alignment algorithms  falcon ao  mappso  ola and optima in order to illustrate how iterative algorithms could be enhanced with bcd  in this section  we
present each alignment algorithm in its original form and enhanced with bcd  to facilitate a direct
comparison and a quick identification of the needed modifications 
falcon  ao gmo bcd  o    o     

falcon  ao gmo  o    o     
initialize 
   iteration counter i   
   g   adjacencymatrix  o   
   g   adjacencymatrix  o   
   for each ma  m   do
  
ma   
   m  m  
iterate 
   do
  
ii  
  
m i  g  m i  gt    gt  m i  g 
      cosinesim m i   m  
    m  m i
    while   
    extract an alignment from m

initialize 
   iteration counter i   
   g   adjacencymatrix  o   
   g   adjacencymatrix  o   
   for each ma  m   do
  
ma   
   create a partition of m  
 ms    ms            msc  
   m  m  
iterate 
   do
  
c  i    c       i  i    
    msi c  g  sc m i  gt    gt  sc m i  g 
    msi  msi  s  sc
    if c   c then
   
  cosinesim m i   m  
else
   
 is a very high value
    m  m i
    while   
    extract an alignment from m

figure      a  iterative update in the structural matcher  gmo  in falcon ao   b  iterative update
in gmo modified to perform bcd 

in fig      we show the iterative algorithm of the gmo component of falcon ao and its
enhancement due to the use of bcd  adjacencymatrix  o     line   in fig     a   produces a binary
matrix  g    of size  v      v     where a value of   in the ith row and j th column represents an
edge from the vertex indexed by i to the vertex indexed by j in the bipartite graph model of o   
analogously for adjacencymatrix  o     the update and distance functions are implemented as
shown in lines   and     respectively  of the algorithm  in particular  the cosine similarity computes
the cosine of the two matrices from consecutive iterations serialized as vectors  notice that in each
iteration of fig     b   just a block of variables  msi c   are updated using eq     while holding the
remaining blocks fixed  lines    and      this yields a partially updated but complete alignment
matrix in reduced time  which is utilized in the next iteration 
mappsos iterative search algorithm that performs particle swarm optimization and its modification due to bcd are shown in fig      the algorithm takes as input the number of particles  k 
   

fis peeding u p i terative o ntology a lignment using bcd

m ap pso bcd  o    o    k   
initialize 
   iteration counter i   
   generate seed map between
o  and o 
   populate binary matrix  m     with
seed correspondences
   generate k particles using the
 
seed m     p    m     m             mk
 
   create a partition of m  
 ms    ms            msc  
   search m   arg max q mk   

m ap pso  o    o    k   
initialize 
   iteration counter i   
   generate seed map between o  and o 
   populate binary matrix  m     with
seed correspondences
   generate k particles using the
 
seed m     p    m     m             mk
 
 
 
   search m  arg max q mk  

mk  p

mk  p

iterate 
   do
  
c  i    c       i  i    
  
for k                k do
i
i
  mi   
 u pdateblock mk s
   
mk s
c
c
i 
i
   
mk 
 mk s s  sc
s
    search mi  arg max qs  mki  

iterate 
   do
  
ii  
  
for k                k do
  
mki  u pdatep article mki   mi   
    search mi  arg max q mki  
mki p

mki p

    while  q mi    q mi      
    extract an alignment from mi

if c   c then
changed   q mi    q mi       
else
   
changed  true
    while changed
    extract an alignment from mi

   
   

 a 

 b 

figure      a  iterative search in mappso  objective function  q  is as given in eq      b 
mappsos particle swarm based iterative algorithm enhanced with bcd 

and the threshold    in addition to the two ontologies to be aligned  it iteratively searches for an
alignment until it is unable to find one that improves on the previous best alignment by more than
or equal to   the objective function  q  is modified to qs in fig     b   such that it is calculated
for the coordinate block of interest  a coordinate block in each particle  k  is updated while keeping
the remaining blocks unchanged  lines    and      followed by searching for the best particle based
on a measure of the alignment in the block  line      both these steps may be performed in reduced
time  additionally  the randomly generated mappings in mappso are limited to the block instead
of the whole ontology  due to which the search becomes more guided 
olas iterative algorithm is shown in fig      a   and its enhancement due to the use of bcd in
fig     b   the distance function of line    measures the similarity between the updated alignment
matrix with that from the previous iteration  the iterations terminate when the distance falls below
the parameter    observe that we cycle through the blocks in the bcd enhanced algorithm in
fig      b  and only the coordinates belonging to the current block  msi c   are updated in lines      
   

fit hayasivam   d oshi

ola bcd  o    o     

ola  o    o     
initialize 
   iteration counter i   
   fill real valued matrix  m     with lexical similarity
   m  m  
iterate 
   do
   i  i    
   for each ma  m i
   if the types of x
a and y are the same then
p
a
wf
setsim f xa    f y   
  
ma 
f n  xa  y  

  
   
   
   
   
   

else
ma   
  dist m i   m  
m  m i
while   
extract an alignment from m

initialize 
   iteration counter i   
   populate the real valued matrix m  
with lexical similarity values
   create a partition of m  
 ms    ms            msc  
   m  m  
iterate 
   do
   c  i    c       i  i    
   for each ma  msi c
   if the types of xa and y are the same
then
p
a
wf
setsim f a   f   
  
ma 
f n  a  

    else
    ma   
    msi   msi  s  sc
    if c   c then
   
  dist m i   m  
else
   
 is a high value
    m  m i
    while   
    extract an alignment from m

 a 

 b 

figure      a  ola iteratively updates the alignment matrix using a combination of neighboring
similarity values   b  olas bcd integrated iterative ontology alignment algorithm 

finally  in fig      we outline the iterative search undertaken by optima and its modification
due to bcd  optimas expectation maximization based iterative search uses binary matrix  m i   to
represent an alignment  objective function  q  is defined in eq     the search for an improved
alignment in line   is implemented using the two steps of expectation and maximization  iterations
terminate when no sample m i  m  which improves the objective function  q further  is available 
the search is modified in fig      b  to explore a reduced search space  msc   as we cycle through
the blocks  both the objective function  qs   and the prior operate on a single coordinate block 

appendix b  biomedical ontology alignment benchmark
biomedical ontologies bring unique challenges to the ontology alignment problem  moreover  there
is an explicit interest for ontologies and ontology alignment in the domain of biomedicine  consequently  we present a new biomedical ontology alignment testbed  which provides an important
application context to the alignment research community  due to the large sizes of biomedical
   

fis peeding u p i terative o ntology a lignment using bcd

o ptima  bcd  o    o   
initialize 
   iteration counter i   
   for all                   v     do
  
    v    
   generate seed map between
o  and o 
   populate binary matrix  m   
with seed correspondences
   create a partition of m  
 ms    ms            msc  

o ptima  o    o   
initialize 
   iteration counter i   
   for all                   v     do
  
    v    
   generate seed map between
o  and o 
   populate binary matrix  m   
with seed correspondences

iterate 
   do
  
c  i    c       i  i    
  
search msi c    arg max qs  msi c  mi   

iterate 
   do
  
ii  
  
search mi  arg max q m  mi   
m
p v m
 
p r y  xa   mi   
  
i   v     a  
    while mi    mi 
    extract an alignment from mi

   
   
   
   

msc msc
i 
i
ms   ms  s  sc
p v  c  
 
i 
i
 
 c
  v  c
a   p r y  xa   m
 

if c   c then
changed  mi    mi   
else
   
changed  true
    while changed
    extract an alignment from mi

 a 

 b 

figure      a  optimas expectation maximization based iterative search algorithm 
 b 
expectation maximization based iterative ontology alignment of optima with bcd 

ontologies  the testbed could serve as a comprehensive large ontology benchmark  existing correspondences in ncbo may serve as the reference alignments for the pairs  although our analysis
reveals that these maps represent just a small fraction of the total alignment that is possible between
two ontologies  consequently  new correspondences that are discovered during benchmarking may
be submitted to ncbo for curation and publication 
in order to create the testbed  we combed through more than     ontologies hosted at ncbo
and obo foundry  and isolated a benchmark of    different biomedical ontology pairs  thirty two
ontologies with sizes ranging from a few hundred to tens of thousands of entities constitute the
pairs  and are listed in table    we provide a snapshot of the full benchmark in table    the testbed
with reference alignments is available for download at http   tinyurl com n t ns   our
primary criteria for including a pair in the benchmark was the presence of a sufficient amount of
correspondences between the ontologies in the pair  as determined from ncbos bioportal  we
briefly describe the steps in creating the testbed 
   we selected ontologies  which exist in either owl or rdf models 
   

fit hayasivam   d oshi

   we paired the ontologies and ordered the pairs by the percentage of available correspondences  this is the ratio of correspondences that exist in bioportal for the pair of ontologies
under consideration divided by the product of the number of entities in both the ontologies 
   top     ontology pairs based on the above ratio are selected  followed by ordering the pairs
based on their joint sizes 
   we created   bins of equal sizes and randomly sampled each bin with a uniform distribution
to obtain the final    pairs 
named
data
classes
properties
   
 
bilateria anatomy  bila 
  
 
common anatomy reference ontology  caro 
   
 
plant growth and development stage  po psda 
   
 
flybase controlled vocabulary  fbcv 
   
 
spatial ontology  bspo 
    
 
amphibian gross anatomy  aao 
   
 
anatomical entity ontology  aeo 
    
 
cereal plant gross anatomy  gr cpga 
     
 
plant anatomy  po pae 
   
 
subcellular anatomy ontology  sao 
     
 
xenopus anatomy and development  xao 
     
 
vertebrate homologous organ groups  shog 
     
 
hymenoptera anatomy ontology  hao 
     
 
teleost anatomy ontology  tao 
   
 
tick gross anatomy  tads 
     
 
zebrafish anatomy and development  zfa 
     
 
medaka fish anatomy and development  mfo 
     
 
brenda tissue   enzyme source  bto 
    
 
expressed sequence annotation for humans  evoc 
     
 
drosophila gross anatomy  fbbt 
     
  
phenotypic quality  pato 
     
   
uber anatomy ontology  uberon 
     
 
fly taxonomy  fbsp 
     
 
protein modification  mod 
     
 
human developmental anatomy  ehdaa 
     
 
human developmental anatomy timed version  ehda 
     
 
plant ontology  po 
     
  
nif cell  nif cell 
     
 
mouse adult gross anatomy  ma 
     
 
mosquito gross anatomy  tgma 
     
   
ontology for biomedical investigations  obi 
      
 
chemical entities of biological interest  chebi 
table    selected ontologies from ncbo in the biomedical ontology
alignment testbed and the number of named classes and properties in
each  notice that this data set includes large ontologies  ncbo abbreviations for these ontologies are also provided 
ontology

   

object
properties
 
 
 
  
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 

fis peeding u p i terative o ntology a lignment using bcd

biomedical ontology alignment testbed
ontology o 
ontology o 
 v      v   
common anatomy reference ontology
human developmental anatomy  ehdaa 
       
 caro 
bilateria anatomy  bila 
human developmental anatomy  ehdaa 
       
bilateria anatomy  bila 
human developmental anatomy  ehdaa 
       
spatial ontology  bspo 
human developmental anatomy  ehdaa 
       
plant growth and development stage
plant ontology  po 
       
 po psda 
anatomical entity ontology  aeo 
human developmental anatomy  ehdaa 
       
flybase controlled vocabulary  fbcv 
cereal plant gross anatomy  gr cpga 
         
flybase controlled vocabulary  fbcv 
plant ontology  po 
         
tick gross anatomy  tads 
human developmental anatomy  ehdaa 
         
amphibian gross anatomy  aao 
xenopus anatomy and development  xao 
         
cereal plant gross anatomy  gr cpga 
plant ontology  po 
         
plant anatomy  po pae 
plant ontology  po 
         
subcellular anatomy ontology  sao 
nif cell  nif cell 
         
expressed sequence annotation for humans
xenopus anatomy and development  xao 
         
 evoc 
xenopus anatomy and development  xao 
human developmental anatomy  ehdaa 
         
vertebrate homologous organ groups expressed sequence annotation for humans
         
 shog 
 evoc 
vertebrate homologous organ groups
human developmental anatomy  ehdaa 
         
 shog 
xenopus anatomy and development  xao 
zebrafish anatomy and development  zfa 
         
xenopus anatomy and development  xao 
teleost anatomy ontology  tao 
         
vertebrate homologous organ groups
mouse adult gross anatomy  ma 
         
 shog 
hymenoptera anatomy ontology  hao 
mosquito gross anatomy  tgma 
         
vertebrate homologous organ groups
teleost anatomy ontology  tao 
         
 shog 
expressed sequence annotation for humans
amphibian gross anatomy  aao 
         
 evoc 
amphibian gross anatomy  aao 
human developmental anatomy  ehdaa 
         
hymenoptera anatomy ontology  hao 
human developmental anatomy  ehdaa 
         
amphibian gross anatomy  aao 
zebrafish anatomy and development  zfa 
         
amphibian gross anatomy  aao 
teleost anatomy ontology  tao 
         
expressed sequence annotation for humans
human developmental anatomy  ehdaa 
         
 evoc 
phenotypic quality  pato 
human developmental anatomy  ehdaa 
         
zebrafish anatomy and development  zfa 
human developmental anatomy  ehdaa 
         
plant anatomy  po pae 
brenda tissue   enzyme source  bto 
         
teleost anatomy ontology  tao 
human developmental anatomy  ehdaa 
         
xenopus anatomy and development  xao 
uber anatomy ontology  uberon 
         
zebrafish anatomy and development  zfa 
teleost anatomy ontology  tao 
         
continued on next page

   

fit hayasivam   d oshi

ontology  
vertebrate homologous organ groups
 shog 
medaka fish anatomy and development
 mfo 
medaka fish anatomy and development
 mfo 
brenda tissue   enzyme source  bto 
amphibian gross anatomy  aao 
brenda tissue   enzyme source  bto 
hymenoptera anatomy ontology  hao 
hymenoptera anatomy ontology  hao 
expressed sequence annotation for humans
 evoc 

ontology  

 v      v   

uber anatomy ontology  uberon 

         

expressed sequence annotation for humans
 evoc 

         

human developmental anatomy  ehdaa 
expressed sequence annotation for humans
 evoc 
uber anatomy ontology  uberon 
human developmental anatomy  ehdaa 
uber anatomy ontology  uberon 
drosophila gross anatomy  fbbt 
uber anatomy ontology  uberon 

expressed sequence annotation for humans
 evoc 
zebrafish anatomy and development  zfa 
uber anatomy ontology  uberon 
uber anatomy ontology  uberon 
mouse adult gross anatomy  ma 
ontology for biomedical investigations
fly taxonomy  fbsp 
 obi 
brenda tissue   enzyme source  bto 
uber anatomy ontology  uberon 
drosophila gross anatomy  fbbt 
brenda tissue   enzyme source  bto 
chemical entities of biological interest
protein modification  mod 
 chebi 
table    the biomedical ontology pairs in our testbed sorted in terms of
 v      v     this metric is illustrative of the complexity of aligning the
pair 
drosophila gross anatomy  fbbt 

          
          
          
          
          
          
          
          
          
          
          
          
          
          

references
arimoto  s          an algorithm for computing the capacity of arbitrary discrete memoryless
channels  ieee transactions on information theory              
ashburner  m   ball  c  a   blake  j  a   botstein  d   butler  h   cherry  j  m   davis  a  p   dolinski  k   dwight  s  s   eppig  j  t   harris  m  a   hill  d  p   issel tarver  l   kasarskis 
a   lewis  s   matese  j  c   richardson  j  e   ringwald  m   rubin  g  m     sherlock  g 
        gene ontology  tool for the unification of biology  the gene ontology consortium  
nature genetics              
baader  f   horrocks  i     sattler  u          description logics as ontology languages for the
semantic web  in lecture notes in artificial intelligence  pp          springer verlag 
belleau  f   nolin  m  a   tourigny  n   rigault  p     morissette  j           bio rdf   towards
a mashup to build bioinformatics knowledge systems  journal of biomedical informatics 
              
   

fis peeding u p i terative o ntology a lignment using bcd

blahut  r  e          computation of channel capacity and rate distortion functions  ieee transactions on information theory             
bock  j     hettenhausen  j          discrete particle swarm optimisation for ontology alignment 
information sciences           
bodenreider  o     stevens  r          bio ontologies  current trends and future directions  brief
bioinform            
cruz  i  f   stroe  c     palmonari  m          interactive user feedback in ontology matching
using signature vectors  in ieee   th international conference on data engineering  pp 
          ieee computer society 
doan  a   madhavan  j   domingos  p     halevy  a          ontology matching  a machine learning approach  in handbook on ontologies in information systems  pp          springer 
doshi  p   kolli  r     thomas  c          inexact matching of ontology graphs using expectationmaximization  web semantics  science  services and agents on the world wide web       
      
euzenat  j   loup  d   touzani  m     valtchev  p          ontology alignment with ola  in
in proceedings of the  rd eon workshop   rd international semantic web conference  pp 
      ceur ws 
euzenat  j     valtchev  p          similarity based ontology alignment in owl lite  in european
conference on artificial intelligence  ecai   pp         
euzenat  j     shvaiko  p          ontology matching  springer 
fessler  j  a     hero  a  o          space alternating generalized expectation maximization algorithm  ieee transactions on signal processing               
fessler  j  a     kim  d          axial block coordinate descent  abcd  algorithm for x ray ct
image reconstruction  in proceedings of fully  d image reconstruction in radiology and
nuclear medicine  pp         
golbeck  j   fragoso  g   hartel  f   hendler  j   oberthaler  j     parsia  b          the national
cancer institutes thesaurus and ontology  journal of web semantics             
hanif  m  s     aono  m          anchor flood  results for oaei       in proceedings of the
workshop on ontology matching at  th international semantic web conference  pp     
    
hayes  j     gutierrez  c          bipartite graphs as intermediate model for rdf  in proceedings of the  rd international semantic web conference  iswc   lecture notes in computer
science  pp        springer berlin   heidelberg 
hero  a  o     fessler  j  a          asymptotic convergence properties of  em  type algorithms 
tech  rep   department of eecs  univ  of michigan  ann arbor  mi 
hu  w   jian  n   qu  y     wang  y          gmo  a graph matching for ontologies  in k cap
workshop on integrating ontologies  pp       
hu  w   zhao  y     qu  y          partition based block matching of large class hierarchies  in
proceedings of the  st asian semantic web conference  aswc   pp       
   

fit hayasivam   d oshi

hughes  t  c     ashpole  b  c          the semantics of ontology alignment  in information
interpretation and integration conference  i con  
jean mary  y  r   shironoshita  e  p     kabuka  m  r          ontology matching with semantic
verification  web semantics  science  services and agents on the world wide web       
       
jian  n   hu  w   cheng  g     qu  y          falcon ao  aligning ontologies with falcon  in
k cap workshop on integrating ontologies  pp       
jimenez ruiz  e     grau  b  c          logmap  logic based and scalable ontology matching  in
international semantic web conference  pp         
kirsten  t   gross  a   hartung  m     rahm  e          gomma  a component based infrastructure for managing and analyzing life science ontologies and their evolution  journal of
biomedical semantics       
lambrix  p   tan  h   jakoniene  v     stromback  l          biological ontologies in  semantic
web  revolutionizing knowledge discovery in the life sciences  pp        springer 
li  y   li  j     tang  j         
rimom  ontology alignment with strategy selection  in proceedings of the  th international and  nd asian semantic web conference
 iswc     aswc       pp       
mcguinness  d     harmelen  f          owl web ontology language overview  tech  rep   w c 
melnik  s   garcia molina  h     rahm  e          similarity flooding  a versatile graph matching
algorithm  in icde  int  conference on data engineering  pp         
musen  m  a   noy  n  f   shah  n  h   whetzel  p  l   chute  c  g   storey  m  a  d     smith  b 
        the national center for biomedical ontology  jamia                
nesterov  y          efficiency of coordinate descent methods on huge scale optimization problems 
siam journal on optimization                
ngo  d     bellahsene  z          yam     a multi strategy based approach for ontology matching
task  in international conference on knowledge engineering and knowledge management 
pp         
pinter  j  d          yair censor and stavros a  zenios  parallel optimization  theory  algorithms 
and applications  journal of global optimization             
rahm  e          towards large scale schema and ontology matching  in bellahsene  z   bonifati 
a     rahm  e   eds    schema matching and mapping  pp       springer 
russell  s  j     norvig  p          artificial intelligence   a modern approach   rd edition  
pearson education 
saha  a     tewari  a          on the non asymptotic convergence of cyclic coordinate descent
methods  siam journal on optimization                
seddiqui  m  h     aono  m          an efficient and scalable algorithm for segmented alignment
of ontologies of arbitrary size  web semantics  science  services and agents on the world
wide web            
shvaiko  p     euzenat  j          ontology matching  state of the art and future challenges  ieee
transactions on knowledge and data engineering                
   

fis peeding u p i terative o ntology a lignment using bcd

shvaiko  p   euzenat  j   heath  t   quix  c   mao  m     cruz  i  f   eds            proceedings
of the  th international workshop on ontology matching  vol      of ceur workshop proceedings  ceur ws org 
shvaiko  p   euzenat  j   kementsietsidis  a   mao  m   noy  n     stuckenschmidt  h   eds   
        results of the ontology alignment evaluation initiative  oaei        vol      of
ceur workshop proceedings  ceur ws org 
shvaiko  p   euzenat  j   srinivas  k   mao  m     jimenez ruiz  e   eds            preliminary
results of the ontology alignment evaluation initiative  oaei        vol       of ceur
workshop proceedings  ceur ws org 
smith  b   ashburner  m   rosse  c   bard  j   bug  w   ceusters  w   goldberg  l  j   eilbeck 
k   ireland  a   mungall  c  j   leontis  n   rocca serra  p   ruttenberg  a   sansone  s  a  
scheuermann  r  h   shah  n   whetzel  p  l     lewis  s          the obo foundry  coordinated evolution of ontologies to support biomedical data integration  nature biotechnology 
                 
stoutenburg  s  k   kalita  j   ewing  k     hines  l  m          scaling alignment of large ontologies  international journal of bioinformatics research and applications            
thayasivam  u     doshi  p       a   improved convergence of iterative ontology alignment using
block coordinate descent  in twenty sixth conference on artificial intelligence  aaai   pp 
       
thayasivam  u     doshi  p       b   optima  results for oaei       in workshop on ontology matching at   th international semantic web conference  iswc   vol      of ceurws org 
tseng  p          convergence of block coordinate descent method for nondifferentiable minimization  journal of optimization theory and applications              
wang  p     xu  b          lily  ontology alignment results for oaei       in proceedings of the
workshop on ontology matching at  th international semantic web conference  iswc  

   

fi