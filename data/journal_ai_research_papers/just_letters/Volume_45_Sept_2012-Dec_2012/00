journal artificial intelligence research               

submitted        published     

interactions knowledge time
first order logic multi agent systems 
completeness results
f  belardinelli
a  lomuscio

f belardinelli imperial ac uk
a lomuscio imperial ac uk

department computing
imperial college london  uk

abstract
investigate class first order temporal epistemic logics reasoning multiagent systems  encode typical properties systems including perfect recall  synchronicity  learning  unique initial state terms variants quantified interpreted systems  first order extension interpreted systems  identify several monodic
fragments first order temporal epistemic logic show completeness respect
corresponding classes quantified interpreted systems 

   introduction
reactive systems  pnueli        traditionally specified using plain temporal logic 
well established tradition artificial intelligence  ai  and  particular  multiagent systems  mas  research adopt expressive languages  much tradition
inspired earlier  seminal work ai mccarthy              others aimed
adopting intentional stance  dennett        reasoning intelligent systems 
specifically  logics knowledge  fagin  halpern  moses    vardi         beliefs  desires 
intentions  obligations  etc   put forward represent informational
motivational attitudes agents system  theoretical explorations focused
soundness completeness number axiomatisations well decidability
computational complexity corresponding logics 
great majority work lines focuses propositional languages  yet  specifications supporting quantification increasingly required applications  example 
often necessary refer different individuals different instances time 
quantified modal languages  garson        long attracted considerable attention 
early work included analysing philosophical logical implications different setups quantification domains  particularly combination temporal concepts 
recently  considerable attention given identifying suitable fragments
preserve completeness decidability  studying resulting computational complexity satisfiability problem  article follows direction 
detail  investigate meta theoretical properties monodic fragments
quantified temporal epistemic logic interactions quantifiers  time 
knowledge agents present  deep rooted interest  fagin et al        
meyden        understanding implications interaction axioms context 
often express interesting properties mas  including perfect recall  synchronicity 
c
    
ai access foundation  rights reserved 

fibelardinelli   lomuscio

learning  features well understood propositional level  fagin 
halpern    vardi        halpern  van der meyden    vardi        commonly used
several application areas  technical question paper aims resolve whether
similar range results provided presence  limited forms of  quantification 
shall demonstrate  answer question largely positive 
    state art
analysis application temporal epistemic logic first order setting
established tradition ai  one early contributions work moore        
presents theory action takes consideration epistemic preconditions
actions effects knowledge  recently  number first order temporalepistemic logics reasoning mas introduced wooldridge et al        
             often context mable programming language agents 
authors introduced first order branching time temporal logic mas  wooldridge
  fisher         developed series papers  wooldridge et al               
first order multi modal logics constitute conceptual base number
agent theories  bdi logics  rao   georgeff         kqml framework  cohen
  levesque         lora framework  wooldridge      b   include
operators mental attitudes  e g   knowledge  belief  intention  desire  etc    well
temporal dynamic operators form quantification  however 
current literature far fallen short systematic analysis formal properties
frameworks  frameworks rich unlikely
finitely axiomatisable  let alone decidable  still  earlier contributions inspiration
present investigation  among explicitly addressed
subject first order temporal epistemic languages mas setting 
purely theoretical level  first order temporal epistemic logics received increasing attention range contributions axiomatisability  degtyarev
et al         sturm et al         wolter   zakharyaschev         decidability  degtyarev
et al         hodkinson et al         wolter   zakharyaschev         complexity  hodkinson        hodkinson et al          wolter zakharyaschev        introduced
monodic fragment quantified modal logic  modal operators restricted
formulas one free variable  proved decidability various fragments  similar results obtained monodic fragments first order temporal
logic  hodkinson        hodkinson et al          computational complexity
formalisms analysed  hodkinson        hodkinson et al          further  wolter
zakharyaschev        provided complete axiomatisation monodic first order
validities natural numbers  monodic fragment first order epistemic logic
explored  sturm et al         sturm  wolter    zakharyaschev        
axiomatisation including common knowledge provided  lines research
constitute theoretical background research set 
contributions discussed previously used plain kripke models underlying semantics  however  argued though applications computationallygrounded semantics  wooldridge      a  preferable  enables systems modelled directly  introduced quantified interpreted systems  qis  fill gap  belar 

fiinteractions knowledge time first order logic mas

dinelli   lomuscio         enabled us provide complete axiomatisation
monodic fragment quantified temporal epistemic logic linear time  belardinelli   lomuscio         however  interaction temporal epistemic modalities
studied  preliminary investigations interactions temporal epistemic
operators first order setting already appeared  belardinelli   lomuscio        
paper extend previous results consider epistemic languages containing
common knowledge operator 
    present contribution
paper extends current state art first order temporal epistemic logic
introducing family provably complete calculi variety quantified interpreted systems characterising range properties including perfect recall  learning  synchronicity 
unique initial state  prove completeness presented first order
temporal epistemic logics via quasimodel construction  previously used
 hodkinson  wolter    zakharyaschev        hodkinson et al         prove decidability
monodic fragments first order temporal logic  fotl   quasimodels
applied first order temporal well epistemic logic  sturm et al         wolter   zakharyaschev         wolter et al         present complete axiomatisation monodic
fragment fotl natural numbers  similar result variety first order epistemic logics common knowledge appeared  sturm et al          however 
interaction temporal epistemic modalities first order setting
taken account yet  interpreted systems semantics  nonetheless 
features essential applications multi agent systems subject
analysis here 
      structure paper 
section   first introduce first order temporal epistemic languages lm lcm
common knowledge set ag               m  agents  present relevant
classes qis well monodic fragments lm lcm   sections   introduce
axiomatisations classes qis  details completeness proofs
presented sections      finally  section   elaborate results obtained
discuss possible extensions future work 

   first order temporal epistemic logics
interpreted systems standard semantics interpreting temporal epistemic logics
multi agent setting  fagin et al         parikh   ramanujam         extend interpreted
systems first order case enriching structures domain individuals 
first investigated static quantified interpreted systems  account
evolution system given  belardinelli   lomuscio               then  fully fledged
qis language temporal modalities introduced  belardinelli   lomuscio 
             follow definition qis provided references 
 

fibelardinelli   lomuscio

    first order temporal epistemic languages
given set ag               m  agents  first order temporal epistemic language lm
contains individual variables x    x           individual constants c    c           n ary predicate constants p n   p n          n n  propositional connectives   quantifier  
linear time operators u  epistemic operator ki agent ag 
language lcm contains common knowledge operator c  fagin et al         
simplicity consider one group agents common knowledge modality 
is  whole ag  c really tantamount cag   extension proper non empty
subsets ag problematic 
languages lm lcm contain symbol functions  terms t    t         
languages either individual variables constants 
definition    formulas lm defined backus naur form follows 
    p k  t            tk           x     u     ki
language lcm extends lm following clause 
formula lcm   c formula lcm  
formulas u  read next step eventually  
respectively  formula ki represents agent knows   c stands
common knowledge set ag agents 
define symbols         g  always future   f  some time future 
standard  further  introduce abbreviations  v
operator ki dual ki  
is  ki defined ki   e shorthand iag ki   k n  e k
defined follows  e     e k     ee k   formulas ki e read
agent considers possible every agent knows respectively 
free bound variables defined standard    y   mean  y   y            yn
free variables   additionally    y   t  formula obtained substituting simultaneously some  possibly all  free occurrences  y  t   t            tn
renaming bound variables  sentence formula free variables 
    quantified interpreted systems
introduce quantified interpreted systems assume set li local states li   li         
agent ag multi agent system  consider set le local states
environment e well  set le l       lm contains global states
multi agent system  represent temporal evolution mas consider
flow time n natural numbers  run function r   n s  intuitively  run
represents one possible evolution mas assuming n flow time  given
above  define quantified interpreted systems languages lm lcm follows 
definition    qis   quantified interpreted system triple p   hr  d  ii where 
r non empty set runs 
non empty set individuals 
 

fiinteractions knowledge time first order logic mas

r r  n n  first order interpretation  is  function
every constant c  i c  r n   d 
every predicate constant p k   i p k   r n   k ary relation d 
further  every r  r  r  n  n  n  i c  r n     i c  r   n     
notice assume unique domain interpretation  well fixed interpretation
individual constants  simply write i c   following standard notation  fagin et al  
       r r n n  pair  r  n  point p  r n    hle   l            lm
global state point  r  n   n    le ri  n    li environments agent
local state  r  n  respectively  further  ag epistemic equivalence relation
defined  r  n   r    n    iff ri  n    ri   n     clearly  equivalence
relation  two points  r  n   r    n    said epistemically
reachable  simply

reachable   r  n   r    n    transitive closure iag  
paper consider following classes qis 
definition    quantified interpreted system p satisfies
synchronicity

iff

every ag  points  r  n    r    n    
 r  n   r    n    implies n   n 

perfect recall agent

iff

points  r  n    r    n      r  n   r    n    n    
either  r  n     r    n   
k   n   r  n     r    k 
k     k   k   n  implies  r  n   r    k    

learning agent

iff

points  r  n    r    n      r  n   r    n   
either  r  n       r    n   
k   n   r  n       r    k 
k     k   k   n  implies  r  n   r    k    

unique initial state

iff

r  r  r  r      r     

conditions extensively discussed literature  halpern et al        
together equivalent formulations  intuitively  qis synchronous time part
local state agent  qis satisfies perfect recall agent local state records
everything happened  from agents point view  far run 
learning dual perfect recall  agent acquire new knowledge run 
finally  qis unique initial state runs start global state 
qis p satisfies perfect recall  resp  learning  p satisfies perfect recall  resp 
learning  agents  denote class qis agents qis   superscripts
pr  nl  sync  uis denote subclasses qis satisfying perfect recall  learning 
synchronicity  unique initial state respectively  instance  qis sync uis


class synchronous qis agents unique initial state 
assign interpretation formulas lm lcm means quantified
interpreted systems  let assignment variables individuals d  valuation
 

fibelardinelli   lomuscio

 t  term defined  y    y   t    i c    c  variant ax
assignment assigns x agrees variables 
definition    satisfaction formula lm point  r  n  p assignment
  denoted  p   r  n       defined inductively follows 
 p   r  n     p k  t            tk  
 p   r  n    
 p   r  n      
 p   r  n     x
 p   r  n    
 p   r  n     u  

iff
iff
iff
iff
iff
iff

 p   r  n     ki

iff

hi  t              tk  i i p k   r n  
 p   r  n     
 p   r  n       p   r  n      
x
d   p   r  n    
 p   r  n        
n  n  p   r  n        
 p   r  n        n n     n 
r    n     r  n   r    n    implies  p   r    n      

lcm consider case common knowledge operator 
 p   r  n     c

iff

k n   p   r  n     e k

truth conditions         g f defined above 
definition follows  p   r  n     c iff  r    n    reachable  r  n  
 p   r    n        
formula true point  r  n  satisfied  r  n  every assignment  
true qis p true every point p  valid class c qis true
every qis c  further  formula satisfiable qis p satisfied
point p  assignment   satisfiable class c qis satisfiable
qis c 
considering combinations pr  nl  sync uis obtain    subclasses qis
n  independent  axiomatisable  indeed 
axiomatisable even propositional level  halpern   moses        halpern  
vardi         first column table   group together classes qis share
set validities languages lm lcm   proofs equivalences
similar propositional case  halpern et al         reported
here  further  define languages plm plcm propositional fragments
lm lcm respectively  formally  plm plcm obtained restricting atomic
formulas   ary predicate constants p    p            table   summarises results halpern
et al         concerning axiomatisability propositional validities plm plcm  
observe that  regards language plm       sets validities various
classes qis axiomatisable    axiomatisation given
qis nl uis
qis nl pr uis
 halpern   vardi               language plcm  


restrict case        plcm expressive power
plm     class validities plcm recursive axiomatisation qis  
uis
sync uis
qis nl sync uis
  qis nl pr sync uis
 
qis sync


  qis   qis
next section show axiomatisability results propositional level
lifted monodic fragment languages lm lcm  
 

fiinteractions knowledge time first order logic mas

qis
sync uis
qis   qis sync
 
qis uis

  qis
pr uis
qis pr
  qis
pr sync
qis
  qis pr sync uis

nl
qis
qis nl sync

qis nl pr

qis nl pr sync

qis nl uis

qis nl pr uis

qis nl sync uis
  qis nl pr sync uis



pl 
x
x
x
x
x
x
x
x
x
x

plm    
x
x
x
x
x
x
x
 
 
x

plcm    
x
 
 
 
 
 
 
 
 
x

table    equivalences classes qis axiomatisability results propositional fragments plm plcm   sign x indicates set validities
specific class axiomatisable    indicates not 

    monodic fragment
rest paper show sufficient condition lifting results
table   first order case restrict languages lm lcm monodic
fragments 
definition    monodic fragment l m set formulas lm subformula form ki       u  contains one free variable  similarly 
  set formulas lc
monodic fragment lcm
subformula
form ki   c      u  contains one free variable 
monodic fragments number first order modal logics thoroughly
investigated literature  hodkinson et al               wolter   zakharyaschev       
       case lm lcm fragments quite expressive contain
formulas following 
c zavailable y  z uxrequest x  y  

   

ki xyz request x  y  available y  z  
ki xyz request x  y  available y  z  

   

formula     intuitively states common knowledge every resource
eventually requested somebody  time resource remains available
everybody  notice free variable within scope modal operators u
c  formula     represents agent knows next step every resource
available whenever requested  next step agent knows indeed
case  however  note formula
xki  process x  yf access x  y  
 

fibelardinelli   lomuscio

intuitively means agent knows every process eventually try access
every resource  l m x occur free within scope modal operator
f   still  monodic fragments lm lcm quite expressive contain
de dicto formulas  i e   formulas free variable appears scope modal
operator       so  limitation really de formulas 
stress fact formulas propositional equivalent
case interepreted quantified interpreted systems domain
quantification infinite  cardinality cannot bounded advance 
finally  observe barcan formulas x x ki x xki
true quantified interpreted systems  qis includes unique domain
quantification  implies universal quantifier commutes temporal
modality epistemic modality ki   thus  case formulas
    lm     validity  l m  
  l m   instance 
consider   xp  x  y      x p  x  y   see remark
interfere results 

   axiomatisations
section present sound complete axiomatisations sets monodic validities classes quantified interpreted systems section    first  introduce
basic system qktm extends first order case multi modal epistemic logic
s m combined linear temporal logic ltl 
definition    system qktm contains following schemes axioms rules 
  formulas l m   inference relation 
first order logic

temporal logic

epistemic logic

taut
mp
ex
gen
k
t 
t 
nec
t 
k

 
 
nec

classical propositional tautologies
   
x  x t 
 x t    x  x free
       

u    u  
 
   u 
ki      ki ki  
ki
ki ki ki
ki ki ki
  ki

operator ki s  modality  next u operators axiomatised linear time modalities  fagin et al          add classical postulates
ex gen quantification  sound consider unique domain
individuals quantified interpreted systems 
 

fiinteractions knowledge time first order logic mas

definition    system qkt cm extends qktm following schemes axioms
    inference
common knowledge    formulas lcm
relation 
c 
c 

c   ec 
  e    c

consider standard definitions proof theorem   s means formula
theorem formal system s  remark barcan formula  bf    x
x  provable unary modal operator   axioms k ex  rules
p gen  notions soundness completeness system respect
class c qis defined standard  sound w r t  c     implies c     
similarly  complete w r t  c   c    implies    
paper focus schemes axioms table   specify key interactions
time knowledge  halpern et al          use              superscripts denote
kt 
kt 
kt 
kt 
kt 

ki  ki ki   ki   ki  u  ki  u  
ki ki
 ki  uki ki   ki  uki  
ki ki
ki kj
table    axioms kt  kt  

systems obtained adding qktm qktcm combination kt  kt  
instance  system qktc   
extends qktcm axioms kt  kt  
straightforward check axioms qktm qktcm valid every
qis inference rules preserve validity  however  axioms kt  kt  valid
specific classes qis stated following remark 
remark    qis p satisfies axioms kt  kt  first column p satisfies
corresponding semantical condition second column 
axiom
kt 
kt 
kt 
kt 
kt 

condition qis
perfect recall
perfect recall  synchronicity
learning
learning  synchronicity
agents share knowledge  i e  
i  j ag   r  n   r    n    iff  r  n  j  r    n    

results shown similar way propositional case  halpern et al  
       proofs omitted 
using remark   prove soundness results first order temporalepistemic systems 
theorem    soundness   systems reported first second column following table sound w r t  corresponding classes qis third column 
 

fibelardinelli   lomuscio

systems
qktm
qkt cm
 
 
qktm
qkt cm
 
 
qktm
qkt cm
 
 
qktm
qkt cm
 
 
qktm
qkt cm
   
   
qktm
qkt cm
   
   
qktm
qkt cm
     
     
qktm
qkt cm

qis
sync uis
qis   qis sync
 
qis uis

  qis
pr uis
qis pr
  qis
pr sync
qis
  qis pr sync uis

nl
qis   qis nl uis

qis nl sync

nl pr uis
qis nl pr
  qis
nl pr sync
qis
qis nl sync uis
  qis nl pr sync uis



proof  results follow remark   line reasoning similar used
propositional case  fagin et al         halpern et al          notice quantified
interpreted systems p satisfies learning  synchronicity  unique initial state 
p satisfies perfect recall  is  p qis nl sync uis
implies p qis nl pr sync uis
 


further  agents share knowledge  therefore kt  holds p 
anticipated above  calculi complete w r t  corresponding classes
quantified interpreted systems theorem    next theorem summarise
completeness results proved rest paper 
theorem    completeness   systems reported first second column
following table complete w r t  corresponding classes qis third column 
systems
qktm
qkt cm
 
qktm
 
qktm
 
qktm
 
qktm
   
qktm
   
qktm
qkt    
     
     
qktm
qkt cm

qis
sync uis
uis
qis   qis sync
  qis   qis
pr
pr uis
qis   qis
qis pr sync
  qis pr sync uis


nl
qis
qis nl sync

qis nl pr

qis nl pr sync

qis nl uis
  qis nl pr uis
 
 
nl pr sync uis
qis nl sync uis
 
qis



observe that  regards language l m   sets monodic validities axiomatisable classes introduced qis nl uis
qis nl pr uis
  however  l  


qis nl uis
qis nl pr uis
equivalent qis nl pr
  thus  sets monodic
 
 
 
nl pr uis
nl uis
validities qis  
qis  
axiomatised qkt   
   
 
regards language lcm   set monodic validities qis   qis sync
 
sync uis
nl sync uis
nl pr sync uis
qis uis
 
qis

axiomatisable 

well



qis

qis
 




classes recursively axiomatisable  case already propositional level  halpern   moses        halpern   vardi              
proving completeness results reported introduce kripke models
generalisation quantified interpreted systems 
  

fiinteractions knowledge time first order logic mas

    kripke models
prove completeness results theorem    first introduce appropriate class
kripke models generalisation qis prove completeness models 
apply correspondence result kripke models qis obtain desired
results 
definition    kripke model   kripke model tuple   hw  rw    i  iag   d  ii

w non empty set states 
rw non empty set functions r   n w  
every agent ag  equivalence relation w  
non empty set individuals 
every w w   first order interpretation  is  function
every constant c  i c  w  d 
every predicate constant p k   i p k   w  k ary relation d 
further  every w  w  w   i c  w    i c  w    
notice def    differs notions kripke model includes
set rw functions guarantee correspondence kripke models
qis one to one  assume unique domain interpretation  well fixed
interpretation individual constants  case simply write i c   kripke
models generalisation qis specify inner structure states
w   kripke models introduce points pairs  r  n  r rw n n 
point derives properties corresponding state  instance   r  n   r    n   
r n  r   n    
consider kripke models satisfying synchronicity  perfect recall  learning 
unique initial state  definition subclasses analogous def    
definition    kripke model satisfies
synchronicity

iff

every ag  points  r  n    r    n    
 r  n   r    n    implies n   n 

perfect recall agent

iff

points  r  n    r    n      r  n   r    n    n    
either  r  n     r    n   
k   n   r  n     r    k 
k     k   k   n  implies  r  n   r    k     

learning agent

iff

points  r  n    r    n      r  n   r    n   
either  r  n       r    n   
k   n   r  n       r    k 
k     k   k   n  implies  r  n   r    k     

unique initial state

iff

r  r  rw   r      r      
  

fibelardinelli   lomuscio

let km class kripke models agents  hereafter adopt
sync uis
naming conventions qis  instance  km
class synchronous kripke
models agents unique initial state  further  inductive clauses
satisfaction relation    respect assignment straightforwardly defined
qis  well notions truth validity 
definition     satisfaction formula lm  resp  lcm   point  r  n 
assignment    m   r  n       inductively defined follows 
 m   r  n     p k  t            tk  
 m   r  n    
 m   r  n      
 m   r  n     x
 m   r  n    
 m   r  n     u  

iff
iff
iff
iff
iff
iff

 m   r  n     ki
 m   r  n     c

iff
iff

hi  t              tk  i i p k   r n  
 m   r  n     
 m   r  n       m   r  n      
x
d   ma   r  n    
 m   r  n        
n  n  m   r  n        
n n     n  implies  m   r  n       
r    n     r  n   r    n    implies  m   r    n      
k n   m   r  n     e k

formula true point  r  n  satisfied  r  n  every assignment  
true kripke model true every point m  valid class c
kripke models true every kripke model c  further  formula satisfiable
kripke model satisfied point m  assignment  
satisfiable class c kripke models satisfiable kripke model c 
relate kripke models quantified interpreted systems means map g  
km qis  lomuscio   ryan         let   hw  rw    i  iag   d  ii kripke
model  every agent ag   r  n  m  let equivalence class   r  n  i     r    n     
 r  n   r    n     local state agent i   r  n  local state
environment  define g m  tuple hr    d    r  contains runs rr
r rw rr  n    h r  n     r  n                r  n  m i  further  m 
every constant c     c  rr  n     i c  r n       p k   rr  n     i p k   r n   
structure g m  qis satisfies following result 
lemma    every lm  resp  lcm   
 m   r  n     iff  g m    rr   n    
proof  proof induction structure   atomic formula p k  t            tk     m   r  n     iff hi  t              tk  i i p k   r n    iff
hi    t                tk  i    p k   rr  n    iff  g m    rr   n       inductive cases
propositional connectives quantifiers straightforward  well temporal operators u    ki    m   r  n     iff  r  n   r    n   
 
implies  m   r    n          r  n   r    n    iff rri  n    rri  n     thus   m   r  n     iff
 
 rr   n   i  rr   n    implies  m   r    n         again  induction hypothesis  m   r  n    
 
 
iff  rr   n   i  rr   n    implies  g m    rr   n         i e   iff  g m    rr   n       case
  c treated similarly considering epistemic reachability relation 

  

fiinteractions knowledge time first order logic mas

notice satisfies synchronicity  perfect recall  learning  unique
initial state  g m  satisfies property  follows fact
 
 r  n   r    n    iff  rri   n   i  rr   n     thus  g defines map    subclasses
km outlined def    corresponding subclass qis obtain following
corollary lemma   
corollary    let x subset  pr  nl  sync  uis   every monodic formula l m
     satisfiable kx   satisfiable qis x  
 resp  lcm


reasoning monodic fragments lm lcm dealing
learning perfect recall  introduce following class monodic friendly kripke
models  structures motivated fact kt  kt  weak
enforce either perfect recall learning kripke models axioms
restricted monodic formulas  however  suffice monodic friendly structures 
following  prove satisfiability kripke models equivalent satisfability
monodic friendly structures restrict languages monodic formulas 
definition     mf model   monodic friendly
mmf   hw  rw    i a  iag ad   d  ii

kripke

model





tuple

w   rw   defined kripke models 
ag  d  i a equivalence relation w  
define synchronicity  perfect recall  learning  unique initial state
mf models parametrising def    relation i a   instance  mf model
satisfies perfect recall agent points  r  n    r    n     d  whenever
 r  n  i a  r    n    n     either  r  n    i a  r    n    k   n 
 r  n    i a  r    k  k     k   k   n  implies  r  n  i a  r    k      regards
subclasses class mf mf models agents  adopt naming
conventions qis kripke models  notice kripke models seen
mf models ag  a  b d  i a equal i b  
    mf model
finally  satisfaction relation    l m  resp  lcm
mf
defined way kripke models  except epistemic operators 
 mmf   r  n     ki  y 

iff

r    n     r  n  i  y   r    n    implies  mmf   r    n        y 

appears free   notice sentence   mmf   r  n     ki
iff  r  n  i a  r    n    implies  mmf   r    n       d  case common
knowledge operator c straightforward definition e k   particular  two points  r  n 
   
 r    n    epistemically reachable
d  simply reachable   r  n   r   n   
transitive closure iag i a  
remark converse barcan formula  cbf   ki x xki holds
mf models  barcan formula  bf   xki ki x not  check
consider mf model   hw  rw    i a  iag ad   d  ii fig   a 
  w    w  w    w    
  rw    r  r    r     r      w  r        w    r         w  
  

fibelardinelli   lomuscio

  
 

  
 

  
 

  
 

i b

i a

  
 

  
 
i d

i c

w 

w

w  

v 

v

p  a 

p  a   p  b 

p  b 

q c 

q c 

v   

 b  mf model m   

 a  mf model m 

figure    arrows represent system runs  epistemically related states grouped
together 

     a  b 
  i p     r        a  b   i p     r          a  i p     r           b 
  i a i b equivalence relations  r     i a  r        r     i b  r        
see  m  r        xki p  x    m  r         ki xp  x   r     i a  r      
 m   r           p  x   x    b 
furthermore  k axiom ki        ki ki     valid mf models
either  fact  consider mf model m    hw     r w       i a  iag ad    d      fig   b 

  w      v  v     v     
  r w      q  q     q      q      v  q         v     q          v   
  d     c  d 
     q    q        c      q    q           c     q    q          
  i c i d equivalence relations  q     i c  q         q     i d  q         
finally  let  x    c  check  m   q         q x  xq x   q x 
 m   q            q x  xq x   q x   thus   m   q        ki  q x  xq x   ki q x  
 m  q             xq x    m   q         ki xq x  
prove following lemma  used completeness proof
systems satisfying perfect recall learning  lemma states that  deal
satisfability monodic formulas  mf models suffice 
lemma    let mf k bf
class mf models validating formulas k bf  

    
every monodic formula l m  resp  lcm
km    iff mf k bf
  

  

fiinteractions knowledge time first order logic mas

proof  implication right left follows fact class km
kripke models isomorphic subclass monodic friendly kripke models
ag  a  b d  i a equal i b   words  given kripke model  
hw  rw    i  iag   d  ii define mf model m    hw  rw    i a  iag ad   d  ii 
every d  i a equal   straightforward see m  validates
k bf  in particular  counterexamples fig    ruled out   further 
    m        thus  mf k bf
     km     

implication left right  assume mmf   hw  rw  
 i a  iag ad   d  ii mf model validating k bf  mmf   r  n     
point  r  n  assignment   build kripke model m   
hw     r w       i  iag   d      mmf  m    r  n      follows  start
assuming w     w   sr    r d    d  further  ag  define  i
transitive closure ad i a   finally  set     i  check kripke
model m  well defined validate  
first all  point following issue associated construction above 
case point  q  k  monodic formula  x   happens
 mmf   q  k     ki  x    q  k  i  x   q     k      q  k  i  y   q      k       x      y  
further  suppose  mmf   q      k           x   obviously  mmf   q     k       
 x   definition  i  m    q  k      ki  x   two models
satisfy formulas  solve problem modifying interpretation
according structure monodic formula  x   keeping truth value
 x  point  q  k   consider relevant cases according structure  x  
induction hypothesis consists fact able find interpretation
subformulas  x  
 x    p  x  simply assume  x  i p  q     k         m    q      k        
 x   m    q  k     ki  x   note change truth value
epistemic formula  q  k  assumed  q  k   i  x   q      k       otherwise  x  would
satisfied  q      k        cases propositional connectives modal operators
similarly dealt applying induction hypothesis   x    y x  y 


b
  q      k           x  y  
 mmf   q      k           x   therefore exists b  mmf
consider   different cases depending whether  q  k  satisfies
  formulas 

ki x  x  y 

   

ki x  x  y 

   

ki x  x  y 

   

ki x  x  y 

   

using axioms inference rules qktm formula     show
follows  where used entailment  
 mmf   q  k     ki y x  y  ki x x  y 
 mmf   q  k     xki y x  y  yki x x  y  ex
 mmf   q  k     ki xy x  y  ki yx x  y  zki ki z
 mmf   q  k     ki  xy x  y  yx x  y   ki     ki ki
  

fibelardinelli   lomuscio

 mmf   q  k     ki  xu x  u  yv v  y  
 mmf   q  k     ki xyuv  x  u   v  y  
 mmf   q  k     ki xy  x  y   x  y  

change variables
prefixing
ex

last formula contradiction      cannot hold  q  k   similarly  formula
    cannot hold  q  k  either because 
 mmf   q  k     ki y x  y  ki x x  y 
 mmf   q  k     xki y x  y  ki x x  y 
 mmf   q  k     ki xy x  y  ki x x  y 
 mmf   q  k     ki xy x  y  ki yx x  y 
 mmf   q  k     ki  xy x  y  yx x  y  
 mmf   q  k     ki xy  x  y   x  y  

ex
zki ki z
z ki ki z
ki ki ki    
similarly

note derivations make use formulas k bf  for instance 
prove theorems ki     ki ki zki ki z   finally  satify
formulas          q  k   guarantee existence individual x
avoiding clash  x   so  introduce new individual a  domain d 
a   x  satisfy formulas points  thus  a  seen copy
 x   finally  induction hypothesis modify interpretation  
 m    q      k          x  y  
case common knowledge operator derives one ki   result 
obtain kripke model m   m    r  n       
moreover  procedure described above  mmf satisfies perfect recall  learning  synchronicity  unique initial state  m  satisfies property 
thus  lemma   prove following result 
corollary    let x subset  pr  nl  sync  uis   every monodic formula l m
     satisfiable mf x validating formulas k bf  
 resp  lcm

x 
satisfiable km
proof  easy see mmf satisfies either synchronicity unique
initial state  m  well way defined  further  suppose mmf
satisfies perfect recall   r  n   i  r    n    n      means sequence
a            ak individuals sequence  q    m              qk   mk   points  i 
 r  n     q    m     r    n       qk   mk     ii   qj   mj   i aj  qj     mj     j   k 
show result k      case k     follows straightforward generalisation 
 q    m     i a   q    m     definition  i  q    m      i
 q    m    well  hence  mmf satisfies perfect recall  otherwise  suppose perfect
recall l    m   q    m     i a   q    l     l     l    l   m 
implies  q    m    i a   q    l      consider l    h    m  h    h   m 
l    perfect recall  either  i  exists p   h   q    l    h   i a   q    p   h   
p    h   p   h    p    h  p   h    implies  q    l   h   i a   q    p    h     ii 
 q    l    h     i a   q    p   h      p        m    notice cases 
definition  i    q    m     i  q    p    h     h   m  l    is 
 q    m     i  q    p     p   l         p   m    further  l    either  i  exists l 
  

fiinteractions knowledge time first order logic mas

 q    l     i a   q    l     l     l    l   p   l       implies  q    l    i a   q    l     
 ii   q    l     i a   q    p   l         first case  l   strictly less
m    l    q    m      i  q    l     l      l     l    m  implies
 q    m     i  q    l       otherwise   q    m      i  q    m     hence  mmf satisfies
perfect recall 
proof learning similar 
finally  combining corollaries     immediately obtain following result 
corollary    let x subset  pr  nl  sync  uis   every monodic formula l m
     satisfiable mf x validating formulas k bf  
 resp  lcm

satisfiable qis x
m 
next section show indeed possible build mf model 

   completeness proof
section outline main steps completeness proof  based
quasimodel construction  gabbay  kurucz  wolter    zakharyaschev        hodkinson
et al          differently contributions  explicitly take account
interaction temporal epistemic modalities  intuitively  quasimodel
monodic formula relational structure whose points sets sets subformulas
  set sets subformulas describes possible state affairs  contains
sets subformulas defining individuals state  formally  given formula
lcn  define
subc   sub  ec   c sub   ki c   c sub  ag 
sub set subformulas   l n   subc simply sub  further 
define
subc   subc     subc       subc       subc  
observe subc closed negation modulo equivalences   
is  subc   form subc   otherwise 
subc   finally  let subn subset subc containing formulas
n free variables  so  sub  set sentences subn   x variable occurring
  define subx     y x     y  sub     clearly  x free variable
formulas subx   con denote set constants occurring   table  
report set suby equal formula     thus abbreviated 
c zav y  z uxreq x  y  
further  k n define closures clk clk i mutual recursion 

definition     let cl    subx k    clk     iag clk i   k    ag 
clk i   clk  ki          n    ki          n                 n clk   
  

fibelardinelli   lomuscio

suby

   c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
 ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z   xreq x  y  
  c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
 ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z  
xreq x  y  
  c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
  ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z  
xreq x  y  
  c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
  ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z  
xreq x  y  

table    set suby equal formula     


   c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
 ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z   xreq x  y  
  c zav y  z uxreq x  y    ec zav y  z uxreq x  y   
  ki c zav y  z uxreq x  y   iag   zav y  z uxreq x  y   zav y  z  
xreq x  y  
table    type cl    equal formula     

define ad   greatest number alternations distinct ki along branch
parse tree  halpern et al          further  index finite sequence   i            ik
agents    in       n   k  length denoted     also   i
absorptive concatenation indexes  i   ik   i  finally  k
shorthand ki        kik   let index    ad    empty
sequence cl   clad          i  cl   clk i k   ad      
introduce types quasimodels  intuitively seen individuals described
maximal consistent sets formulas 
definition     type    type maximal consistent subset cl   i e  
every monodic formulas   cl  
 i  iff
  t 
 ii    iff     t 
two  types t  t  said agree sub  sub    t  sub    i e   share
sentences  given  type constant c con  ht  ci indexed type
  abbreviated tc   table   report type cl    equal formula     
introduce state candidates  intuitively represent states quasimodel 
definition     state candidate    state candidate pair c   ht  con

 i  set  types agree sub   
 ii  con set containing c con indexed type tc  
  

fiinteractions knowledge time first order logic mas

introduce notion point  describes state candidate perspective particular type 
definition     point    point pair p   hc  ti
 i  c   ht  con  state candidate  
 ii   type 
note that  slight abuse notation  call points pairs  r  n  qis
pairs p   hc  ti  consistent previous work  fagin et al         halpern
et al          context disambiguate  also  write c c   ht  con
  similarly p  given  state candidate c   ht  con point p   hc  ti
define formulas c p follows 
c   

 

xt x  x

tt

 
tt

t x 

 

t x c 

tc con

p    c
distinguish type conjuction formulas contains 
 state candidate c s consistent formula c consistent w r t  system s 
i e    s c   similarly   point p s consistent formula p consistent w r t  s 
refer plain consistency whenever system reference understood  consistent
state candidates represent states quasimodels  define relations
suitability constitute relational part quasimodels 
definition    
   type t     type t   suitable  t  t    iff      
t  t  consistent  i suitable  t  t    iff    i      i t  ki t 
consistent 
   state candidate c     state candidate c   suitable  c  c    iff
      c  c  consistent  i suitable  c  c    iff    i      i
c  ki c  consistent 
   point p     point p   suitable  p  p    iff       p 
p  consistent  i suitable  p  p    iff    i      i p  ki p 
consistent 
   point p    hc    t     point p    hc    t   suitable constant
c con  p  c p    iff p  p    tc  t con tc  t con   i suitable
c  p  ci p    iff p  p    tc  t con tc  t con  
using axioms       shown relation reflexive 
transitive symmetric  is  equivalence relation  also  relation serial 
following lemma list properties relations useful
follows 
lemma   

 i  let subx   t  t  t  iff t   
  

fibelardinelli   lomuscio

 ii  let ki subx let  type  ki iff  types t    t  implies
t    moreover  let   i  ad    ki iff  i types t    t  implies
t   
proof 
 i  proof similar one lemma   i  work wolter et al         
t 
  t  t  since t  t  consistent 
consistent  contradiction  right left  t 
  t 
t    since t  t  consistent  consistent 
contradiction 
 ii  left right  ki
  t  t  since ki t  consistent 
ki ki consistent  contradiction  right left 
ki
  extend set        ki t   type t    particular 
t  t    moreover    i  ad   similarly prove ki
iff  i types t    t  implies t   
present frame underlying quasimodel  
definition     frame   frame f tuple hr  d   i a  iag ad  
 i  r non empty set indexes r  r          
 ii  non empty set individuals 
 iii  every ag  d  i a equivalence relation set points  r  n 
r r n n 
 iv  f partial function associating point  r  n  consistent state candidate
f r  n    cr n
 a  domain f empty 
 b  f defined  r  n   defined  r  n      
 c  f defined  r  n   r  n  i a  r    n     f defined  r    n    
function f partial take consideration case synchronous systems  also 
straightforward introduce frames satisfying perfect recall  learning  synchronicity 
unique initial state  following definitions given mf models  next 
provide definition objects  correspond runs gabbay et al         
choose terminology avoid confusion runs qis 
definition     object   given individual d  object frame f map
con
associating type  r  n  tr n every  r  n  dom f  f r  n    cr n   htr n   tr n

    r  n   r  n     
    r  n  i a  r    n     r  n   r    n   
  

fiinteractions knowledge time first order logic mas

   u  r  n  iff n  n  r  n    n     n n     n 
implies  r  n    
    r  n   types   r    n      r  n  i a  r    n     r    n     
   c  r  n  exists point  r    n    reachable  r  n 
 r    n   
object  satisfies                          instead     
       r  n   type   i type  r  n  t   r    n    i a  r  n  
 r    n      t 
intuitively  object identifies individual  represented types  across
different state candidates  elements give definition quasimodel 
definition     quasimodel   quasimodel tuple q   hr  o   i   iag o  
hr  o   i   iag o   frame 
   tr n tr n cr n
   cr n cr n  
    r  n  i   r    n     r  n   r    n   
   every tr n exists object  r  n   
con object o 
   every c con  function c c  r  n    tc tr n

quasimodel  defined quasimodel clauses         refer objects 
rather objects  define quasimodels  resp  quasimodel    satisfying perfect recall 
learning  synchronicity  unique initial state  assuming corresponding
condition underlying frame  difference objects  resp  quasimodel 
objects   resp  quasimodel    purely technical  particular  latter needed
systems satisfying perfect recall learning become apparent section   
following lemma list properties quasimodels useful
follows 
lemma    every quasimodel q  every object o 
 i  ki  r  n  iff  r    n      r    n    i   r  n  implies  r    n    
 ii  c  r  n  iff points  r    n    reachable  r  n   r    n    
proof 
 i  implication left right follows fact  r    n    i   r  n  implies
 r  n   r    n     implication right left  ki
   r  n 
lemma   ii   type  r  n  t  definition   
 r    n      r  n  i   r    n     r    n      t 
  

fibelardinelli   lomuscio

 ii  implication left right proved induction length path
 r  n   r    n     base case inductive step follow axiom c  
implication right left follows definition    
state main result section  is  satisfability quasimodels implies
satisfability mf models  follows quasimodel q validates formula belongs
every type every state candidate q 
theorem    quasimodel  resp  quasimodel    q monodic formula  
satisfiable mf model mmf   moreover  q validates formulas k bf  
mmf   finally  q satisfies perfect recall  learning  synchronicity 
unique initial state  mmf  
proof  proof inspired lemmas            work gabbay
et al          consider monodic friendly kripke models rather standard
kripke models  first  every monodic formula form ki   c    u 
introduce k ary predicate constant pk k equal      depending whether
    free variables   formula pk  x  called surrogate   given
monodic formula denote formula obtained substituting modal
subformulas within scope another modal operator surrogates 
since every state candidate c quasimodel q consistent system
first order temporal epistemic logic considered section   based classical first order
logic  formula c consistent respect first order  non modal  logic  godels
completeness theorem first order structure   hi  di  non empty set
individuals first order interpretation d  satisfies c   i e      c
assignment variables elements d  intend build mf model
joining first order structures  however  possible structures
different domains different cardinalities  solve problem  consider cardinal
number   greater cardinality set objects q define
   h    o     
then   r  n  q   type tr n
  h     r  n    t    
method described claim       gabbay et al          expand
first order structure obtain structure ir n   hir n   di domain ir n
satisfies cr n

  a    x    ir n
   t x     

so  assume without loss generality first order structures ir n share
domain d  every tr n   h  d 

 r  n    iff ir n
   t x 

 x    h  i  equivalently  tr n    x    h  d 

 r  n      cl   ir n
    x  

  

   

fiinteractions knowledge time first order logic mas

moreover  ir n  c    hc    i every c con 
define mf model mmf tuple hw  r   i a  iag ad   d  ii w
set points  r  n  r r q n n  r set runs n w
r n     r  n   defined above  ag h  d  i h i defined i   
interpretation obtained joining various first order interpretations ir n  
i e   i p  r n     ir n  p   every predicate constant p   prove following
result mmf  
lemma    mf model mmf obtained quasimodel q described above 
every subx  

ir n
   iff  mmf   r  n    

moreover  q quasimodel    f r  n   state candidate ad k   ad  

ir n
   iff  mmf   r  n    

proof  proof similar lemma       work gabbay et al         
begin first part  base case induction follows definition interpretation mf model  step propositional connectives quantifiers follows
induction hypothesis equations                     x    x   
let    x  assume  x    h  i  have 

ir n
    x 

iff

 x   r  n 

   

iff

 x   r  n     

   

iff


ir n  
    x 

 mmf   r  n          x 
 mmf   r  n      x 

iff
iff

    
    

steps          follow equation      step     motivated lemma   i  
step      follows induction hypothesis 
let    u    x   x    h  i  have 

ir n
    u    x  iff

iff

 u    x   r  n 
 

    
 

 

n n  x   r  n  
 x   r  n     n n     n 

iff

 

n n



ir n
  


ir n
 

  

    

   x 

  

    x  n n   n 
 

iff

n n

iff

 mmf   r  n         x 
 mmf   r  n     u   x 

 mmf   r  n   

    
 

    x 
  

n n   n 

    

steps           follow equation      step      motivated def      step
     follows induction hypothesis 
  

fibelardinelli   lomuscio

let   ki  x   x    h  i  have 

ir n
   ki  x 

iff
iff

ki  x   r  n 
 

 

 

 

    
 

 

 r   n   i   r  n    x   r   n  

    

 r   n   i h i  r  n   ir   n      x 
 r    n    i h i  r  n    mmf   r    n   

iff



iff



iff

 mmf   r  n 

    
    x 

    

   ki  x 

steps           follow equation      step      motivated lemma   i   step
     follows induction hypothesis 
let   c x   x    h  i  have 

ir n
   c x 

iff
iff
iff

c x   r  n 
 

 

 

 

 

 

    
 

 

 r   n   reachable  r  n    x   r   n  
 r   n   reachable

 r  n   ir   n 

    

    x 

    

 

    

 

iff

 r   n   reachable  r  n    m  r   n       x 

iff

 m  r  n     c x 

steps           follow equation      step      motivated lemma   ii  
step      follows induction hypothesis 
prove second part lemma  cases identical first part 
except   ki   suppose f r  n   state candidate ad k   ad   
implication left right   r  n  i   r    n     r    n       type
 i      i  thus  ad k    ad k i   ad k ki   ad    so  apply
induction hypothesis  implication right left  ad k ki   ad  
  i  ad   lemma   ii   i type  r  n 
t  def      r    n     r  n  i   r    n     r    n      t  since
ad k i     ad k ki   ad   apply induction hypothesis 
complete proof theorem    definition quasimodel
tr n tr n cr n   therefore  satisfied mf model mmf point  r  n  
remark q validates formulas k bf   mmf   case
as  k bf belong every type every state candidate q  lemma  
mmf validates k bf well 
finally  q satisfies perfect recall  learning  synchronicity  unique
initial state  mf model obtained q satisfies corresponding constraints
construction  show fact perfect recall   r  n  i h i  r    n    n     
particular  r  n  i   r    n     since q satisfies perfect recall  either  r  n    i   r    n    
k   n   r  n    i   r    k  k     k   k   n  implies
 r  n  i   r    k      definition i h i obtain either  r  n    i h i  r    n    
k   n   r  n    i h i  r    k  k     k   k   n  implies
 r  n  i h i  r    k      is  mmf satisfies perfect recall well 
next show existence quasimodels monodic  
  

fiinteractions knowledge time first order logic mas

   dealing system
section consider completeness proof system theorem    particular  show monodic formula consistent respect system s 
build quasimodel  or quasimodel  specific cases  based frame
s  following sections symbol   represents provability appropriate system
s  start lemmas useful construction quasimodel
system 
lemma     i  consistent monodic formula consistent  state candidate c   ht  con  
 ii  let p   hc  ti consistent  point c   ht  con i  let c con 
then 
 a  c c  exists  point p    hc    t  p p   
 b  tc con c c  exists  point p    hc    t  p c p   
 c    u  sequence  points pj   hcj   tj j k
realises   u    i e   p   p        pk     tk   tj j   k 
 d    u  tc sequence  points pj   hcj   tj j k
c realises   u    i e   sequence realises   u  p  c       c pk  
 e  ki  point p    hc    t  p p  t   
 f   ki tc  point p    hc    t  p ci p  t   
 g  c sequence  points pj   hcj   tj j k
p   p  i        ik  pk tk  
 h  c tc sequence  points pj   hcj   tj j k
p   p  ci        cik  pk tk  
proof  proof similar one claims                    work
gabbay et al          consider  state candidates  points  let
disjunction formulas p  points p   consider formula  
obtained substituting subformulas form ki   c    u 
within scope another modal operator surrogates  check
true  non modal  first order structures  since qktm qktcm
extend first order logic  semantical completeness first order logic
 

    

w
 i  notice that  previous remark       p p  point   p  
moreover  consistent      consistent  therefore 
disjunct p p consistent  so  p   hc  ti 
 a       nec     so  p consistent must
 point p  p p  consistent 
 b  proof similar  a  
  

fibelardinelli   lomuscio

 c  proof contradiction  let u set  points p 
w exist points pj   hcj   tj j   k p   p        pk   p    let    p   p  u   p   
show
   
    
otherwise  would sequence realising   u    moreover  definition
u 
 
    
     obtain
  g g 
together           derive
     g   

    

consider p  u p p        
 

p     g   

 

p  g 

 

 p p    g 

    

hand  since   u 
   p p    f  

    

          contradict fact p p   
 d  proof similar  c  
 e  first remark p ki     consistent  thus  exists  point
p    hc    t  p ki  p    consistent  hence  p p  t   
 f  proof similar  e  
 g  proof contradiction  let v minimal set  points dwsuch  i 
p v    ii  v d  ag  d  v   let    d dv    
show
 
    
     hold  would sequence specified lemma  moreover 
definition v  
  ki
    
ag            obtain
    e 
axiom c  
  c
definition p 
  p c
contradicts      
  

    

fiinteractions knowledge time first order logic mas

 h  proof similar  g  
following result always possible extend  suitability relation
types  suitability points 
lemma    suppose t   types t     points
p   hc  ti p    hc    t  p p    particular  c con 
 points p   hc  ti p    hc    t  p c p   
w
proof  lemma          p p  point   p  
since t      t    consistent  thus  must  points p
p  p  p  t    consistent  then  case p   hc  ti
p    hc    t   state candidates c c    result  p p    second part
lemma proved similarly first observing t  t x c  t x c 
consistent  hence  t x c    t   x c   consistent  thus  must
 points p p  p t x c   p  t   x c   consistent  so  tc con
t c  con   is  p c p   
according lemma   always extend possibly infinite sequence  types t 
t        possibly infinite sequence  points p  p        pk   hck   tk i 
definition     let  sequence possibly infinite sequence c  c         state
candidates   sequence acceptable k   
 i    u  tk   tk ck     u  realised sequence  points pj  
hcj   tj k j n 
 ii    u  tck   tck ck     u  c realised sequence  points pj  
hcj   tj k j n 
following lemma entails completeness result 
lemma    every finite  sequence  state candidates extended infinite
acceptable  sequence 
proof  assume c        cn finite  sequence   u  tk ck
k n  either   u  realised c        cn   lemma   ii  c  extend
 sequence   realises   u    procedure repeated formulas
form   u  appearing point  sequence  thus  obtain  possibly
infinite   sequence c  c        property  i  definition    satisfied 
satisfy property  ii  reason similarly using lemma   ii  d  instead 
let x new object  sequence x          x  cn   cn           acceptable n
starts n copies x cn   cn           acceptable  sequence 
consider completeness proof single class qis 
uis
sync uis
    classes qis   qis sync
  qis qis

start completeness proof systems qktm qktcm  
interaction temporal epistemic operators 
  

fibelardinelli   lomuscio

monodic formula consistent  lemma   i  consistent  state
candidate c   ht  con type   also  lemma  
extend c infinite acceptable  sequence  so  set infinite acceptable sequences non empty  let r set  sequences acceptable n 
n n  r r  k n  define partial function f r n f r  k    ck r
 sequence x          x  cn   cn           acceptable n k n  undefined otherwise 
finally  let set functions associating every  r  n  dom f  type
 r  n  tr n
 a   r  n   r  n      
 b  u  r  n  iff n  n  r  n     r  n    
n n     n   
 c   r  n   types   r    n    r    n    t 
 d  c  r  n  exists point  r    n  sequence  points pj  
hcj   tj j k  hf r  n    r  n i   p  i        ik  pk   tk   f r    n   
ck  r    n    tk  
show non empty  condition  a  guaranteed lemma   ii  a  
condition  b  fact r acceptable  sequence  regards  c  remark
 r  n  find consistent  point p   hc  ti reasoning similarly
lemma   i   lemma    c extended  sequence r  acceptable
n  finally  set  r    n    t   d  observe c  r  n 
lemma   ii  g  exists sequence  points pj   hcj   tj j k 
hf r  n    r  n i   p  i        ik  pk tk   now  ck extended sequence r  acceptable n  r    n    tk   finally  ag  o  define
 r  n  i   r    n    iff  r  n   r    n    n   n   
lemma    tuple hr  o   i   iag o   synchronous frame 
proof  previously shown r non empty  also  i 
equivalence relation definition  f satisfies conditions definition     further 
frame synchronous definition i   
prove main result 
lemma     tuple hr  o   i   iag o   synchronous quasimodel
validates formulas k bf  
proof  previous lemma  remains prove functions objects 
conditions                   objects safisfied remarks  a   d  above  condition     satisfied definition i    furthermore  conditions             
quasimodels satisfied definitions r  f i    regards      extend
function  r  n    dom f  using lemma   ii  a    c    e   g      
function c c  r  n    tc object lemma   ii  b    d    f   h  
finally  q validates formulas k bf   c  c q  consistent
qktm  resp  qktcm   
  

fiinteractions knowledge time first order logic mas

completeness qktm qktcm respect classes qis qis sync

quantified interpreted systems directly follows lemma    together theorem   
thus  obtain following item theorem   
theorem    completeness   system qktm  resp  qktcm   complete w r t 
classes qis qis sync
qis 

sync uis
prove completeness qis uis
use next result 
qis
extension propositional case  halpern et al         
    satisfiable
remark    suppose x subset  pr  sync   l m  resp  lcm
x
x uis
qis satisfiable qis  

thus  system qktm  resp  qktcm   complete w r t  classes qis uis

sync uis
qis
qis 
pr uis
    classes qis pr
qis

begin investigate systems interactions time knowledge
pr uis
present  completeness proof qkt m respect qis pr
relies
qis
following lemma 
lemma      points p    hc    t  i  p    hc    t   i type t     p  p 
t  t    i point p     hc     t    sequence s        sn   p  
 i points sk   hdk   sk i  s  t  sk t      k n  further 
k n 
p  c p  sck tdcon
k
proof  extend proof halpern et al         lemma      deal state
candidates monodic friendly kripke frames  cited result prove
t  t  t  t   sequence  i types s        sn   t  
s  t  sk t      k n  lemma   extend sequence
 i types sequence  i points s        sn sk   hdk   sk
lemmas statement satisfied  particular  p  c p  lemma   assume
without loss generality sck tdcon
k n 
k
consistent l m define quasimodel  establish completeness
qkt m respect qis pr
  let r set acceptable  sequences  define
f f r  k    ck r  sequence c    c            finally  let set
functions associating every  r  n  dom f  type  r  n  tr n conditions
 a   b  satisfied
 c   r  n   type   i type  r  n  t   r    n      r    n      t 
 e   r  n   r    n    n     either  a   r  n     r    n     b 
k   n   r  n     r    k  k     k   k   n  implies  r  n 
 r    k     
finally  ag  o  define  r  n  i   r    n    iff  r  n   r    n    
following lemma shows set non empty  particular  conditions  c 
 e  satisfied functions o 
  

fibelardinelli   lomuscio

lemma     set functions satisfies conditions  a    b    c   e 
non empty 
proof  conditions  a   b  follow respectively lemma   ii  a  fact
r acceptable  sequence  regards  c   e   proof proceeds induction
n  result n     immediate  take r  acceptable  sequence
starting c c  further  define  r         t  thus   r        r    
 c   e  satisfied 
suppose n     result holds n    since f r  n    f r  n 
 r  n  t  follows lemma     i point p   hc  ti  sequence
 i points p  s        sk   p sk    hdk    sk  sk   r  n  k   k 
induction hypothesis  exists every  i type  r  n   point
 r    n     r    n      s  case  a   take   t   r  n     r    n   
 r    n      t  thus  case  r  n   r    n     case  b   take   t   
hence   r  n     r    n     r    n      t    suppose r  derived
acceptable  sequence v    v           let r   run derived acceptable sequence
initial segment v            vn    d            dk   again  run exists lemma   
define  r     n    k        sk   t  thus   r  n   r     n    k       c 
 e  satisfied 
prove following lemma 
lemma     tuple hr  o   i   iag o   frame satisfies perfect recall 
proof  lemmas   i        sets r non empty  also  f satisfies
conditions definition     finally  i  equivalence relation definition 
satisfies perfect recall definition functions o 
finally  prove main result section 
lemma     tuple hr  o   i   iag o   quasimodel  perfect recall
validates formulas k bf  
proof  previous lemma hr  o   i   iag o   frame satisfying perfect
recall  left prove functions objects    conditions        
objects  safisfied remarks  a   e  definition i    furthermore  conditions
             quasimodels  satisfied definitions r  f i   
regards      follows lemma     finally  condition     quasimodels  holds
lemma   ii  b    d    f   h  lemma     finally  q validates formulas k
bf   c  c q  consistent qktm  
completes proof qis pr
  thus  obtain following item theorem   
theorem    completeness   system qkt m complete w r t  class qis pr
qis 
completeness qkt m respect qis pr uis
follows remark   

    classes qis pr sync
qis pr sync uis


completeness qkt m respect qis pr sync
proved similarly previous

case using following lemma instead lemma    
  

fiinteractions knowledge time first order logic mas

lemma      state candidates c    c   i state candidate c      i state
candidate c  
c  c  c  c   c  c   c   c    
c con  p    hc    t  i  p    hc    t  p     hc     t   i  p  c p 
p  ci p   p     hc     t   i  p  ci p   p   c p    
proof  c  c  c  c   exist t  c    t  c  t   c  
t  t  t  t     moreover  without loss generality assume
 con   following proof halpern et
c con  tc  t con   tc  t con t c
  t 
 
al         lemma      find  i type t  t  t   t   t     define t  
 
 
 con
set t   t  con set t c
    show c    ht    t 
 
 
 
consistent  i state candidate c  c    c  c    c con  p  ci p  
p   c p    
consistent l m define quasimodel  establish complete  let r set  sequences acceptness qkt m respect qis pr sync

able n  n n  define f f r  k    ck r  sequence
x          x  cn   cn           acceptable n k n  undefined otherwise  finally  let
set functions associating every  r  n  dom f  type  r  n  tr n
conditions  a   b  section     satisfied
 c   r  n   type   i type  r  n  t   r    n    r    n    t 
 f   r  n   r    n  n      r  n     r    n    
finally  ag  o  define  r  n  i   r    n    iff  r  n   r    n    n   n   
following remark shows set non empty  particular  conditions  c 
 f  satisfied functions o 
lemma     set functions satisfies condition  a    b    c   f 
non empty 
proof  conditions  a   b  follow lemma   ii  a  fact r
acceptable  sequence  regards  c   f   assume  r  n  f r  n   type 
 i type  r  n  t  f r  n  different  r  n  consider set
u       ki s   check u consistent extended  i type s 
s    define   collection s    further  sc con  
set s c  con   let c    ht      con i  clearly  c c  hc  si ci hc    s  i  lemma   
construct  sequence c        cn cn   c  f r  k  ck
k n  lemma   extend  sequence infinite acceptable  sequence
r    particular  function extended k n   r  k   r    k 
 r    n    t  thus   c   f  satisfied 
show following lemma 
lemma     tuple hr  o   i   iag o   frame satisfies perfect recall
synchronicity 
  

fibelardinelli   lomuscio

proof  lemmas   i        sets r non empty  also  f satisfies
conditions definition     finally  i  equivalence relation definition 
satisfies perfect recall synchronicity definition functions o 
prove main result 
lemma     tuple hr  o   i   iag o   quasimodel  perfect recall
synchronicity  validates formulas k bf  
proof  previous lemma hr  o   i   iag o   frame satisfying perfect
recall synchronicity  left prove functions objects   
conditions         objects  safisfied remarks  a   f  definition
i    furthermore  conditions              quasimodels  satisfied
definitions r  f i    regards condition      make use lemma   
show holds  additionally      holds lemma   ii  b    d    f   h  lemma
    finally  q validates formulas k bf   c  c q 
consistent qktm  
completes proof qkt m   thus  obtain following item theorem   
theorem    completeness   system qkt m complete w r t  class qis pr sync


qis 
follows remark   
completeness qkt m respect qis pr sync uis

    class qis nl

first  give following definitions  used completeness proof 
definition      type  t i conjunction  types t  t   
similarly  p  point  p i set  points p  p p   
definition     two sequences types    concordant n n
 or n may   non empty consecutive intervals             n               n  
j s   j s  j n 
two sequences   state candidates  concordant c  either
c c     two sequences   types   respectively
 concordant 
prove completeness qkt m respect qis nl
need following lemma 
dual lemma    
lemma      points p    hc    t  i  p    hc    t   i type t     p  p 
t  t   exists  i point p     hc     t    sequence p     s        sn
 i points sk   hdk   sk i  sk t  k   n  t  sn   further  p  c p 
sck tdcon
k n 
k
proof  adapting result halpern et al         lemma       types
prove t  t  t  t   sequence  i types t     s        sn
sk t  k   n sn t    lemma   extend sequence
 i types sequence  i points s        sn sk   hdk   sk i  so 
  

fiinteractions knowledge time first order logic mas

statement lemma satisfied  particular  p  c p  lemma  
assume without loss generality sck tdcon
k n 
k
pointed halpern et al          lemma    sufficient construct
quasimodel  satisfies learning  fact  given  sequence   c    c          state candidates  i type t   t  t   t  c    lemma    find
 sequence     c     c           t   c   learning satisfied  however 
follow acceptability   acceptable  so  propositional
case  work trees state candidates  hereafter extend definitions
given halpern et al         able deal points monodic friendly kripke
models 
definition     let k ad    k tree state candidates set  state
candidates    k contains unique  state candidate  i e   root 
every  point c  
t   i type t    i  k  i state candidate
c  t  c   
     i    state candidate c     type t  c 
t   
similarly  define k tree points set  points    k
contains unique  point  every  point p   hc  ti  
t   i type t    i  k   i point p   
hc    t   
     i    point p    hc    t  t   
intuitively  k tree view epistemic state quasimodel particular
type t  k steps t  extend  suitability relation k trees 
definition     let   k trees state candidates   say f  
whenever f function associating  state candidate c  type c
finite  sequences  state candidates    types that 
   f  c    c        ck  a  c   c   b  cj j   k ck    
similarly  f  t    t        tk  a    t   b  tj cj j   k
k ck  
   let c t  c  c  c    t  f  t  f  t    concordant 
   least one c sequence f  c  length least   
further  let   k trees points   say f   whenever f
function associating  point p finite  sequence  points  
that 
   f  p    p        pk  a  p   p   b  pj j   k pk    
  

fibelardinelli   lomuscio

   let p   hc  ti p    hc    t    t  f  t  f  t     concordant 
   least one p sequence f  p  length least   
finally  constant c con  say cf   whenever f   f  p   
p  c       c pk  
notice given k tree state candidates root c c  obtain
k tree points p    hc    t  iff c    also      k tree state
candidates f     f     k trees points
based   respectively 
show obtain acceptable sequences state candidates sequences
trees  given two sequences  state candidates   c            ck   c           
finite  fusion defined c            ck    c           ck   c     further 
given infinite sequence     f    f        k trees  say sequence
 state candidates compatible exists h n  state candidates
ch   ch            cj j j h    fh  ch   fh    ch            sequence
acceptable every  sequence compatible infinite acceptable 
basic idea completeness proof define quasimodel  starting
acceptable sequence   next introduce definitions lemmas essential
completeness proof 
given k tree  point p inductively define formula tree p
describes k tree viewpoint p 
definition     p  point  tree p     p   p    i point         i

 
tree p   p
ki tree p 
   point p   t  t 

  k trees  p p      write    p         p   
sequence k trees             l functions f            fl   a      f        fl 
l        b  fj  p    p j l   fl   p     p  p     similarly     p  c       p   
   p         p     a      cf        cfl  l      
prove following lemma  extends result halpern et al         lemma      
points 
lemma     suppose k tree points p   hc  ti  point      k 
 a  t   type tree p  t    consistent  k tree  
 point p    hc    t       p         p    tree   p  consistent 
further  tc con    p  c       p    
w
 b    tree p      p      p       p     tree   p 
 c  tree p u   consistent  sequence             l k trees
points p            pl  i  pj j j l   ii       p         p    iii 
 j   pj      j     pj     j   l   iv  treej  pj consistent j   l   v 
treel  pl   consistent  further  tc con  iii   j   pj   c   j     pj    
j   l 
  

fiinteractions knowledge time first order logic mas

proof  proceed induction k  case k     immediate using standard
arguments tree p p  
assume k          i        first prove part  a    ki    
part  b   general case  a   finally  c  
regards part  a    ki     note tree p  t  ki     implies
tree p ki p i uki     t   i  
definition k tree    point p   let
 k    tree consisting  points     k    axiom kt 
tree  p ki p i uki     t   i   consistent  part  c  sequence             l
 k    trees points p            pl  i  pj j j l   ii       p     
    p     iii   j   pj      j     pj     j   l   iv  treej  pj ki p i consistent
j   l   v  treel  pl ki     t   i   consistent 
again  definition relation   sequence  k    trees            
functions f            fm   a          f        fm    l   moreover 
 k    points u            um u    p   um   pl   j   m  uj   pj  
j   j  uj   uj   fj  uj     uj   uj    uj   fj  uj      uj   uj     
show define k tree  j extending j j   m   iv 
uj ki p i consistent j   m  uj p  p  j   similarly 
um ki t   i consistent  exists p    hc    t  p   m   further 
saturate  j conditions k trees satisfied particular       
show construct fj  j   m  point s    hd    s   j   j must
exist point   hd  si j agent j   ag j   s    lemma   
follows exists sequence s  starting s  j    concordant fj  s  
moreover  take pj    p  j      pm     p  p     define fj 
agrees fj j   s   j   j fj   s      s   
notice      construction      follows immediately definition
   p     m   p    treem  p  ki   consistent      easily
check p  t    since t  follows t   
define f f  u    u every u    p f  p     p  p        p  f    p    
since p p     p       p    
second part  a  follows similar line reasoning 
prove part  b   contradiction assume
 
  tree p
tree   p 
     p      p       p    

v
tree p      p      p       p     tree   p  consistent  temporal reasoning
must point u
 
tree p  u
tree   p   
    
     p      p       p    

w
consistent  note tree   p  equivalent p     point p    t t    ki tree   p  
thus  consistency      implies tree      p         u 
  

fibelardinelli   lomuscio

exists    point p    hc    t  t  tu
 
tree p  u ki  

tree   p    

    

      p       p    



 


consistent  part  a 
vthere exists k tree p    p      p  
tree  p u ki         p       p      tree   p    consistent  means

p   u  thus contradiction  since tree  u ki tree  p inconsistent 
general case  a  follows  b   part  c  follows  b  
following lemma correspondent lemma   k trees 

lemma     l m consistent qkt m   exists acceptable sequence
ad   trees state candidates belongs root first tree 
proof  lemma   key part proof consists showing that  given finite
sequence   f        fl  l d trees points  point p   hc  ti l
u    resp  t   lemmas       extend sequence trees
satisfy acceptability  specifically  suppose u   t  let include p    points
p    hc    t  l      k       note k tree  further  lemma   
find sequence             n k trees points p            pn  i  pj j
j n   ii       p         p    iii   j   pj      j     pj     j   l   iv  treej  pj
consistent j   l   v  treen  pl   consistent  using lemma   
extend sequence ad   trees starting l satisfies u   proof
lemma    a   argument similar  since consistent  must
tree root c c  extend
complete proof 
consistent l m define quasimodel  establish completeness
qkt m respect qis nl
  let r consist acceptable  sequences compatible
ad   tree   function f given f r  k    ck r acceptable
 sequence c    c           further  let set functions associating every  r  n 
dom f  type  r  n  tr n conditions  a    b   c  given previously
satisfied following holds 
 g   r  n   r    n    either  r  n       r    n    exists k   n 
 r  n       r    k  k     k   k   n  implies  r  n   r    k     
finally  ag  o   r  n  i   r    n    iff  r  n   r    n    
previous cases following 
lemma     set functions satisfies conditions  a    b    c   g 
non empty 
proof  conditions  a   b  guaranteed lemma   ii  fact r
acceptable  sequence respectively  regards  c   g   assume  r  n 
 type   i type  r  n  t  using proofs lemmas      
find acceptable  sequence r  compatible d tree f r      
 g  satisfied 
show following lemma 
  

fiinteractions knowledge time first order logic mas

lemma     tuple hr  o   i   iag o   frame satisfies learning 
proof  lemmas   i         sets r non empty  also  f satisfies
conditions definition     further  i  equivalence relation definition 
finally  learning condition satisfied definition functions o 
lemma     tuple hr  o   i   iag o   quasimodel  satisfies
learning validates formulas k bf  
proof  previous lemma hr  o   i   iag o   frame satisfying learning 
left prove functions objects    conditions         objects 
safisfied remarks  a   g  definition i    furthermore  conditions         
    quasimodels  satisfied definitions r  f i    regards    
use lemma    show holds  finally      holds lemma   ii  b    d    f 
 h  lemma     finally  q validates k bf   c  c q 
consistent qktm  
completes proof qkt m   thus  obtain following item theorem   
theorem    completeness   system qkt m complete w r t  class qis nl
qis 
    class qis nl sync

show qkt m complete axiomatisation qis nl sync
  analogously lemma    

need following 
lemma      state candidate c    c   i state candidate c   exists  i state
candidate c  
c  c  c  c   c   c   c  c    
c con  p    hc    t  i  p    hc    t  p     hc     t   i  p  c p 
p  ci p   p   c p   p  ci p    
proof  proof similar lemma     c  c  c  c   exist
t  c    t  c  t   c   t  t  t  t     moreover  without loss
 con  
generality  assume c con  tc  t con   tc  t con t c
  t 
adapting proof halpern et al         lemma       find  i type t  
t  t   t   t     define t   set t   t  con set t c
  
clearly  c     ht     t  con consistent  i state candidate c  c     c   c    
c con  p  ci p   p   c p    
systems including axiom kt m define synchronous version relation
k trees 
definition       k trees state candidates sync
  iff
f
 
f c   f  c  exactly length    similarly   
k trees points sync
  iff f   p   f  p  exactly
f
length   
  

fibelardinelli   lomuscio

c con  relation cf sync defined similarly  define sync acceptable
sequence trees acceptable sequence relation substituted
relation sync   is  sequence acceptable every sync  sequence compatible
infinite acceptable  similarly  given relations   c  c con 
definitions sync   c sync   straightforward  state following result 
simplified version lemma     proof analogous lemma    
lemma    used instead lemma    
lemma     let k tree points p  point      k 
 a  t   type tree p  t    consistent  exists k tree  
 point p    hc    t       p  sync        p    tree   p 
consistent  further  tc con    p  c sync        p    
w
 b    tree p      p      p sync       p     tree   p 
 c  tree p u   consistent  exists sequence             l k trees
points p            pl  i  pj j j l   ii       p         p    iii 
 j   pj   sync    j     pj     j   l   iv  treej  pj consistent j   l 
 v  treel  pl   consistent  further  tc con  iii   j   pj   c sync  
 j     pj     j   l 
further  make use lemma    adapt lemma    obtain following result 
lemma     l m consistent qkt m   exists sync acceptable
sequence ad   trees state candidates belongs root first tree 
consistent l m define quasimodel  establish completeness qkt m respect qis nl sync
  let x new object  sequence

x          x  cn   cn           sync acceptable n starts n copies x cn   cn          
sync acceptable  sequence compatible ad   tree   let r consist sequences sync acceptable n  n n  function f defined f r  k    ck
r  sequence x          x  cn   cn           sync acceptable n k n  f r  k  undefined otherwise  further  let set functions associating every  r  n  dom f 
type  r  n  tr n conditions  a    b   c  satisfied following
holds 
 h   r  n   r    n     r  n       r    n       
finally  ag  o   r  n  i   r    n    iff  r  n   r    n    n   n   
similarly lemma     show following 
lemma     set functions satisfies conditions  a    b    c   h 
non empty 
moreover  following result follows lemmas   i         
lemma     tuple hr  o   i   iag o   frame satisfies learning
synchronicity 
  

fiinteractions knowledge time first order logic mas

finally  adapting proof lemma    state following result 
lemma     tuple hr  o   i   iag o   quasimodel  learning
synchronicity  validates formulas k bf  
completes proof qkt m   thus  obtain following item theorem   
theorem    completeness   system qkt m complete w r t  class qis nl sync


qis 
    classes qis nl pr
qis nl pr uis

 
obtain completeness proof qis nl pr
combine results shown qis pr


nl
qis  
   
l m consistent qktm
lemma    exists acceptable
sequence ad   trees belongs root first tree  let r
set acceptable  sequences suffix compatible  
function f defined section      further  set functions associating
every  r  n  dom f  type  r  n  tr n satisfies conditions  a    b    c  
 e   g   finally  ag  o   r  n  i   r    n    iff  r  n   r    n    
lemma     set functions satisfies conditions  a    b    c    e   g 
non empty 
proof  show conditions  c  satisfied similarly cases
nl
qis pr
qis    c   suppose  r  n   type f r  n   i type 
also  sequence ad   trees   f    f        state candidates  run r
derived definition  sequence c    c          suffix cn   cn           
compatible   f r  n    cn   consider two cases 
n n   exists k n cn k   lemma    exists
 sequence s        sh  i state candidates sh s            sh
 concordant c            cn   further  assume sh k let sh   sh          
sequence compatible   consider  sequence s  s        
construction run r  derived sequence r assume
 r    h    t 
n   n   lemma    exists  sequence s        sh  i state
candidates sh s            sh  concordant c            cn   lemma   
extend sequence  sequence s        sk  concordant
c            cn   since cn n  assume sk
well  let sh   sh           sequence compatible   consider  sequence
s  s         previous case  run r  derived sequence r
construction assume  r    h    t 
lemmas   i         obtain next result 
lemma     tuple hr  o   i   iag o   frame satisfies perfect recall
learning 
finally  state following lemma  whose proof follows lines corresponding
nl
proofs qis pr
qis lemma    
  

fibelardinelli   lomuscio

lemma     tuple hr  o   i   iag o   quasimodel  satisfies perfect
recall learning  validates formulas k bf  
establishes completeness qkt      thus  obtain following item
theorem   
nl pr
theorem    completeness   system qkt   

complete w r t  class qis
qis 

completeness qkt   
respect qis nl pr uis
follows following
 
 
remark  whose proof analogous propositional case 
remark    formula l   satisfiable qis nl pr
 resp  qis nl pr sync
  iff
 
 
nl pr uis
nl pr sync uis
satisfiable qis  
 resp  qis  
  
    class qis nl pr sync

   
prove completeness qktm
respect qis nl pr sync
combine results

nl pr
obtained qis previous section qis nl sync
qis pr sync
 


   
 
specifically  lm consistent qktm lemma    construct syncacceptable sequence ad   trees belongs root first tree  let r
set sync acceptable  sequences suffixes compatible  
function f defined section      further  set functions associating
every  r  n  dom f  type  r  n  tr n satisfies conditions  a    b    c  
 f   h   finally  ag  o   r  n  i   r    n    iff  r  n   r    n    n   n   
adapting proof lemma    means lemmas       show
following result 

lemma     set functions satisfies conditions  a    b    c    f   h 
non empty 
lemmas   i         obtain following result 
lemma     tuple hr  o   i   iag o   frame satisfies perfect recall 
learning synchronicity 
finally  state following lemma whose proof follows lines corresponding
proofs qis pr sync
  qis nl sync
lemma    


lemma     tuple hr  o   i   iag o   quasimodel  satisfies perfect
recall  learning synchronicity  validates formulas k bf  
completes proof qkt   
  thus  obtain following item theorem   
   
theorem     completeness   system qktm
complete w r t  class qis nl pr sync

qis 

  

fiinteractions knowledge time first order logic mas

    classes qis nl sync uis
qis nl pr sync uis


     
show system qktm
complete respect classes qis nl sync uis

nl pr sync uis
qis
  completeness result follows next remark 

remark    formula lm valid qis nl sync uis
iff valid qis nl pr sync uis
 


proof straightforward extension first order result halpern et al        
proposition        given remark axiom kt  sufficient prove
completeness qkt   
respect qis nl pr sync uis
  result previous
 
 
   
nl pr sync
section  qkt  indeed complete respect qis  
  desired result follows
remark    thus  obtain following item theorem   
   
theorem     completeness   system qktm
complete w r t  classes qis nl sync uis

qis nl pr sync uis

qis 


   conclusions work
paper investigated interaction axioms context monodic first order
temporal epistemic logic  specifically  explored classes quantified interpreted systems
satisfying conditions synchronicity  learning  perfect recall  unique
initial state  contribution article concerns provably complete axiomatisation
classes 
results presented extend previous contributions first order epistemic temporal logic interactions  e g   see belardinelli   lomuscio        sturm et al        
wolter   zakharyaschev         direction previously explored
propositional level  halpern et al          findings show characterisation
axioms considered propositional level extended first order monodic
setting 
temporal epistemic logic first order context far mostly attracted theoretical contributions  evidence literature increasingly embraced
applications  instance  active interest verifying artifact centric systems
first order modal specifications  belardinelli  lomuscio    patrizi      a      b 
deutsch  hull  patrizi    vianu        deutsch  sui    vianu        calvanese  giacomo 
lenzerini    rosati        hariri  calvanese  giacomo  masellis    felli        
given this  remains importance investigate questions pertaining computational aspects formalisms introduced  including decidability computational complexity satisfiability model checking problems  work far  including
belardinelli   lomuscio        hodkinson al         wolter   zakharyaschev      
focused fragments interaction present  know literature  halpern et al         interactions make problems harder  leave
work  particularly connection addition epistemic modalities
 e g   explicit algorithmic knowledge  see halpern   pucella         branching time
modalities  epistemic variants branching time ctl well understood propositional level  meyden   wong        first order extensions yet
explored 
  

fibelardinelli   lomuscio

acknowledgments
research presented supported european commission marie
curie fellowship fommas  grant n          strep project acsi  grant
n           uk engineering physical sciences research council leadership
fellowship trusted autonomous systems  grant n  ep i     x    
would thank anonymous reviewers mr  andrew v  jones valuable
comments paper 

references
belardinelli  f     lomuscio  a          quantified epistemic logics reasoning
knowledge multi agent systems  artificial intelligence                      
belardinelli  f     lomuscio  a          first order linear time epistemic logic group
knowledge  axiomatisation monodic fragment  fundamenta informaticae 
                 
belardinelli  f     lomuscio  a          complete quantified epistemic logic reasoning
message passing systems  computational logic multi agent systems   th
international workshop  clima viii  revised selected invited papers  vol      
lecture notes computer science  pp          springer 
belardinelli  f     lomuscio  a          interactions time knowledge firstorder logic multi agent systems  principles knowledge representation
reasoning  proceedings   th international conference  kr       aaai press 
belardinelli  f   lomuscio  a     patrizi  f       a   computationally grounded semantics artifact centric systems abstraction results  proceedings   nd
international joint conference artificial intelligence  ijcai       pp         
aaai press 
belardinelli  f   lomuscio  a     patrizi  f       b   verification deployed artifact systems via data abstraction  service oriented computing  proceedings  th
international conference  icsoc       vol       lecture notes computer science  pp          springer 
calvanese  d   giacomo  g  d   lenzerini  m     rosati  r          view based query
answering description logics  semantics complexity  journal computer
system sciences               
cohen  p     levesque  h          communicative actions artificial agents  proceedings  st international conference multi agent systems  icmas       pp 
      aaai press 
degtyarev  a   fisher  m     konev  b          monodic temporal resolution  automated
deduction  proceedings   th international conference automated deduction 
cade     vol       lecture notes computer science  pp          springer 
degtyarev  a   fisher  m     lisitsa  a          equality monodic first order temporal
logic  studia logica                 
dennett  d          intentional stance  mit press 
  

fiinteractions knowledge time first order logic mas

deutsch  a   hull  r   patrizi  f     vianu  v          automatic verification datacentric business processes  database theory  proceedings   th international
conference  icdt       vol      acm international conference proceeding series 
pp          acm press 
deutsch  a   sui  l     vianu  v          specification verification data driven web
applications  journal computer system sciences                 
fagin  r   halpern  j  y   moses  y     vardi  m  y          reasoning knowledge 
mit press 
fagin  r   halpern  j  y     vardi  m  y          machines know 
properties knowledge distributed systems  journal acm                 
gabbay  d   kurucz  a   wolter  f     zakharyaschev  m          many dimensional modal
logics  theory applications  vol      studies logic  elsevier 
garson  j          quantification modal logic  gabbay  d     guenthner  f   eds   
handbook philosophical logic  vol     pp          reidel 
halpern  j     moses  y          guide completeness complexity modal logics
knowledge belief  artificial intelligence             
halpern  j   van der meyden  r     vardi  m          complete axiomatizations reasoning knowledge time  siam journal computing                 
halpern  j     vardi  m          complexity reasoning knowledge time 
acm symposium theory computing  stoc       pp          acm press 
halpern  j     vardi  m          complexity reasoning knowledge time
   lower bounds  journal computer system sciences                 
halpern  j     pucella  r          probabilistic algorithmic knowledge  logical methods
computer science        
hariri  b  b   calvanese  d   giacomo  g  d   masellis  r  d     felli  p          foundations
relational artifacts verification  business process management  proceedings
 th international conference  bpm       vol       lecture notes computer
science  pp          springer 
hodkinson  i          monodic packed fragment equality decidable  studia logica 
           
hodkinson  i          complexity monodic guarded fragments linear real time 
annals pure applied logic             
hodkinson  i   kontchakov  r   kurucz  a   wolter  f     zakharyaschev  m         
computational complexity decidable fragments first order linear temporal logics 
proceedings   th international symposium temporal representation
reasoning    th international conference temporal logic  time ictl       pp 
      ieee computer society press 
hodkinson  i   wolter  f     zakharyaschev  m          decidable fragment first order
temporal logics  annals pure applied logic                   
  

fibelardinelli   lomuscio

hodkinson  i   wolter  f     zakharyaschev  m          decidable undecidable fragments first order branching temporal logics  proceedings   th ieee symposium logic computer science  lics       pp          ieee computer
society press 
lomuscio  a     ryan  m          relation interpreted systems kripke
models  agent multi agent systems  proceedings ai   workshop
theoretical practical foundations intelligent agents agent oriented systems 
vol       lecture notes artificial intelligence  pp        springer 
mccarthy  j          ascribing mental qualities machines  ringle  m   ed    philosophical perspectives artificial intelligence  pp          harvester press 
mccarthy  j          artificial intelligence  logic formalizing common sense  thomason  r   ed    philosophical logic artificial intelligence  pp          kluwer
academic 
meyden  r          axioms knowledge time distributed systems perfect
recall  proceedings  th annual ieee symposium logic computer
science  lics       pp          ieee computer society press 
meyden  r  v     wong  k          complete axiomatizations reasoning knowledge
branching time  studia logica                
moore  r  c          formal theory knowledge action  allen  j   hendler  j    
tate  a   eds    readings planning  pp          kaufmann 
parikh  r     ramanujam  r          distributed processes logic knowledge 
logics programs  conference proceedings  vol      lecture notes computer
science  pp          springer 
pnueli  a          temporal logic programs  proceedings   th international
symposium foundations computer science  focs       pp       
rao  a     georgeff  m          deliberation role formation intentions 
proceedings  th conference uncertainty artificial intelligence  pp 
        kaufmann 
sturm  h   wolter  f     zakharyaschev  m          monodic epistemic predicate logic 
logics artificial intelligence  european workshop  jelia       vol      
lecture notes computer science  pp          springer 
sturm  h   wolter  f     zakharyaschev  m          common knowledge quantification 
economic theory             
wolter  f     zakharyaschev  m          decidable fragments first order modal logics 
journal symbolic logic                   
wolter  f     zakharyaschev  m          axiomatizing monodic fragment first order
temporal logic  annals pure applies logic                    
wooldridge  m       a   computationally grounded theories agency  proceedings
international conference multi agent systems  icmas       pp        ieee
computer society press 
  

fiinteractions knowledge time first order logic mas

wooldridge  m       b   reasoning rational agents  mit press 
wooldridge  m     fisher  m          first order branching time logic multi agent
systems  proceedings   th european conference artificial intelligence 
ecai       pp          john wiley sons 
wooldridge  m   fisher  m   huget  m     parsons  s          model checking multi agent
systems mable  proceedings  st international conference autonomous agents multiagent systems  aamas       pp          acm press 
wooldridge  m   huget  m   fisher  m     parsons  s          model checking multiagent
systems  mable language applications  international journal artificial
intelligence tools                 
wooldridge  m          verifying agents implement communication language 
proceedings   th national conference artificial intelligence   th conference innovative applications artificial intelligence  pp        aaai press 

  


