Journal of Artificial Intelligence Research 45 (2012) 1-45

Submitted 11/11; published 9/12

Interactions between Knowledge and Time in
a First-Order Logic for Multi-Agent Systems:
Completeness Results
F. Belardinelli
A. Lomuscio

f.belardinelli@imperial.ac.uk
a.lomuscio@imperial.ac.uk

Department of Computing
Imperial College London, UK

Abstract
We investigate a class of first-order temporal-epistemic logics for reasoning about multiagent systems. We encode typical properties of systems including perfect recall, synchronicity, no learning, and having a unique initial state in terms of variants of quantified interpreted systems, a first-order extension of interpreted systems. We identify several monodic
fragments of first-order temporal-epistemic logic and show their completeness with respect
to their corresponding classes of quantified interpreted systems.

1. Introduction
While reactive systems (Pnueli, 1977) are traditionally specified using plain temporal logic,
there is a well-established tradition in Artificial Intelligence (AI) and, in particular, MultiAgent Systems (MAS) research to adopt more expressive languages. Much of this tradition
is inspired by the earlier, seminal work in AI by McCarthy (1979, 1990) and others aimed at
adopting an intentional stance (Dennett, 1987) when reasoning about intelligent systems.
Specifically, logics for knowledge (Fagin, Halpern, Moses, & Vardi, 1995), beliefs, desires,
intentions, obligations, etc., have been put forward to represent the informational and
motivational attitudes of agents in the system. Theoretical explorations have focused on
the soundness and completeness of a number of axiomatisations as well as the decidability
and computational complexity of the corresponding logics.
The great majority of work in these lines focuses on propositional languages. Yet, specifications supporting quantification are increasingly required in applications. For example,
it is often necessary to refer to different individuals at different instances of time.
Quantified modal languages (Garson, 2001) have long attracted considerable attention.
Early work included analysing the philosophical and logical implications of different setups for the quantification domains, particularly in combination with temporal concepts.
More recently, considerable attention has been given to identifying suitable fragments that
preserve completeness and decidability, and then studying the resulting computational complexity of the satisfiability problem. This article follows this direction.
In more detail, we investigate the meta-theoretical properties of monodic fragments
of quantified temporal-epistemic logic where interactions between quantifiers, time, and
knowledge of the agents are present. There is a deep-rooted interest (Fagin et al., 1995;
Meyden, 1994) in understanding the implications of interaction axioms in this context, as
they often express interesting properties of MAS, including perfect recall, synchronicity,
c
2012
AI Access Foundation. All rights reserved.

fiBelardinelli & Lomuscio

and no learning. These features are well-understood at the propositional level (Fagin,
Halpern, & Vardi, 1992; Halpern, van der Meyden, & Vardi, 2004) and are commonly used
in several application areas. The technical question this paper aims to resolve is whether a
similar range of results can be provided in the presence of (limited forms of) quantification.
As we shall demonstrate, the answer to this question is largely positive.
1.1 State of the Art
The analysis and application of temporal-epistemic logic in a first-order setting has an
established tradition in AI. One of the early contributions is the work of Moore (1990),
which presents a theory of action that takes into consideration the epistemic preconditions
to actions and their effects on knowledge. More recently, a number of first-order temporalepistemic logics for reasoning about MAS were introduced by Wooldridge et al. (2002,
2006, 1999), often in the context of the MABLE programming language for agents. The
same authors introduced a first-order branching time temporal logic for MAS (Wooldridge
& Fisher, 1992), and developed it in a series of papers (Wooldridge et al., 2002, 2006).
First-order multi-modal logics also constitute the conceptual base of a number of other
agent theories, such as BDI logics (Rao & Georgeff, 1991), the KQML framework (Cohen
& Levesque, 1995), and the LORA framework (Wooldridge, 2000b). All of these include
operators for mental attitudes (e.g., knowledge, belief, intention, desire, etc.), as well as
temporal and dynamic operators with some form of quantification. However, most of the
current literature has so far fallen short of a systematic analysis of the formal properties of
these frameworks. Some of the frameworks above are so rich that they are unlikely to be
finitely axiomatisable, let alone decidable. Still, these earlier contributions are an inspiration
to the present investigation, as they are among the few to have explicitly addressed the
subject of first-order temporal-epistemic languages in a MAS setting.
At a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev
et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev
et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003). Wolter and Zakharyaschev (2001) introduced the
monodic fragment of quantified modal logic, where the modal operators are restricted to
formulas with at most one free variable, and they proved the decidability of various fragments. Similar results have been obtained for monodic fragments of first-order temporal
logic (Hodkinson, 2002; Hodkinson et al., 2000), and the computational complexity of these
formalisms have been analysed (Hodkinson, 2006; Hodkinson et al., 2003). Further, Wolter
and Zakharyaschev (2002) provided a complete axiomatisation of the monodic first-order
validities on the natural numbers. The monodic fragment of first-order epistemic logic has
also been explored (Sturm et al., 2000; Sturm, Wolter, & Zakharyaschev, 2002), and an
axiomatisation including common knowledge has been provided. These lines of research
constitute the theoretical background against which this research is set.
The contributions discussed previously used plain Kripke models as the underlying semantics. However, it has been argued though that in applications a computationallygrounded semantics (Wooldridge, 2000a) is preferable, as this enables systems to be modelled directly. We introduced quantified interpreted systems (QIS) to fill this gap (Belar2

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

dinelli & Lomuscio, 2009). This enabled us to provide a complete axiomatisation of the
monodic fragment of quantified temporal-epistemic logic on linear time (Belardinelli & Lomuscio, 2011). However, no interaction between temporal and epistemic modalities was
studied. Preliminary investigations into the interactions between temporal and epistemic
operators in a first-order setting have already appeared (Belardinelli & Lomuscio, 2010). In
this paper we extend the previous results and also consider epistemic languages containing
the common knowledge operator.
1.2 The Present Contribution
This paper extends the current state of the art in first-order temporal-epistemic logic by
introducing a family of provably complete calculi for a variety of quantified interpreted systems characterising a range of properties including perfect recall, no learning, synchronicity,
and having a unique initial state. We prove the completeness of the presented first-order
temporal-epistemic logics via a quasimodel construction, which has previously been used
(Hodkinson, Wolter, & Zakharyaschev, 2002; Hodkinson et al., 2000) to prove decidability
for monodic fragments of first-order temporal logic (FoTL). Quasimodels have also been
applied to first-order temporal as well as epistemic logic (Sturm et al., 2000; Wolter & Zakharyaschev, 2002). Wolter et al. (2002) present a complete axiomatisation for the monodic
fragment of FoTL on the natural numbers; a similar result for a variety of first-order epistemic logics with common knowledge has also appeared (Sturm et al., 2000). However, the
interaction between temporal and epistemic modalities in a first order setting has not been
taken into account yet, nor has the interpreted systems semantics. Nonetheless, both of
these features are essential for applications to multi-agent systems and are the subject of
analysis here.
1.2.1 Structure of the Paper.
In Section 2 we first introduce the first-order temporal-epistemic languages Lm and LCm
with common knowledge for a set Ag = {1, . . . , m} of agents. We then present the relevant
classes of QIS as well as the monodic fragments of Lm and LCm . In Sections 3 we introduce
the axiomatisations for these classes of QIS, while the details of the completeness proofs
are presented in Sections 4 and 5. Finally, in Section 6 we elaborate on the results obtained
and discuss possible extensions and future work.

2. First-Order Temporal-Epistemic Logics
Interpreted systems are a standard semantics for interpreting temporal-epistemic logics in a
multi-agent setting (Fagin et al., 1995; Parikh & Ramanujam, 1985). We extend interpreted
systems to the first-order case by enriching these structures with a domain of individuals.
We first investigated static quantified interpreted systems, where no account for the
evolution of the system is given (Belardinelli & Lomuscio, 2008, 2009). Then, fully-fledged
QIS on a language with also temporal modalities were introduced (Belardinelli & Lomuscio,
2010, 2011). We follow the definition of QIS provided in the references.
3

fiBelardinelli & Lomuscio

2.1 First-Order Temporal-Epistemic Languages
Given a set Ag = {1, . . . , m} of agents, the first-order temporal-epistemic language Lm
contains individual variables x1 , x2 , . . ., individual constants c1 , c2 , . . ., n-ary predicate constants P1n , P2n , . . ., for n  N, the propositional connectives  and , the quantifier , the
linear time operators  and U, and the epistemic operator Ki for each agent i  Ag. The
language LCm also contains the common knowledge operator C (Fagin et al., 1992). For
simplicity we consider only one group of agents for the common knowledge modality, that
is, the whole of Ag; C is really tantamount to CAg . The extension to proper non-empty
subsets of Ag is not problematic.
The languages Lm and LCm contain no symbol for functions; so all terms t1 , t2 , . . . in
these languages are either individual variables or constants.
Definition 1. Formulas in Lm are defined in the Backus-Naur form as follows:
 ::= P k (t1 , . . . , tk ) |  |    0 | x |  | U 0 | Ki 
The language LCm extends Lm with the following clause:
 if  is a formula in LCm , then also C is a formula in LCm .
The formulas  and U0 are read as at the next step  and eventually 0 and until
then  respectively. The formula Ki  represents agent i knows , while C stands for
 is common knowledge in the set Ag of agents.
We define the symbols , , , , G (always in the future), F (some time in the future)
as standard. Further, we introduce some abbreviations. The V
operator Ki is dual to Ki ,
that is, Ki  is defined as Ki , while E is a shorthand for iAg Ki . For k  N, E k 
is defined as follows: E 0  =  and E k+1  = EE k . The formulas Ki  and E are read as
agent i considers  possible and every agent knows  respectively.
Free and bound variables are defined as standard. By [~y ] we mean that ~y = y1 , . . . , yn
are all the free variables in . Additionally, [~y /~t] is the formula obtained by substituting simultaneously some, possibly all, free occurrences of ~y in  with ~t = t1 , . . . , tn while
renaming bound variables. A sentence is a formula with no free variables.
2.2 Quantified Interpreted Systems
To introduce quantified interpreted systems we assume a set Li of local states li , li0 , . . . for
each agent i  Ag in a multi-agent system. We consider a set Le of local states for the
environment e as well. The set S  Le L1 . . .Lm contains all and only the global states
of the multi-agent system. To represent the temporal evolution of the MAS we consider
the flow of time N of natural numbers; a run is a function r : N  S. Intuitively, a run
represents one possible evolution of the MAS assuming N as the flow of time. Given the
above, we define quantified interpreted systems for the languages Lm and LCm as follows:
Definition 2 (QIS). A quantified interpreted system is a triple P = hR, D, Ii where:
 R is a non-empty set of runs;
 D is a non-empty set of individuals;
4

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

 for r  R, n  N, I is a first-order interpretation, that is, a function such that
 for every constant c, I(c, r(n))  D,
 for every predicate constant P k , I(P k , r(n)) is a k-ary relation on D.
Further, for every r, r0  R, n, n0  N, I(c, r(n)) = I(c, r0 (n0 )).
Notice that we assume a unique domain of interpretation, as well as a fixed interpretation
for individual constants; so we simply write I(c). Following standard notation (Fagin et al.,
1995), for r  R and n  N, a pair (r, n) is a point in P. If r(n) = hle , l1 , . . . , lm i is the
global state at point (r, n) then re (n) = le and ri (n) = li are the environments and agent
is local state at (r, n) respectively. Further, for i  Ag the epistemic equivalence relation
i is defined such that (r, n) i (r0 , n0 ) iff ri (n) = ri0 (n0 ). Clearly, each i is an equivalence
relation. Two points (r, n) and (r0 , n0 ) are said to be epistemically
reachable, or simply
S
reachable, if (r, n)  (r0 , n0 ) where  is the transitive closure of iAg i .
In this paper we consider the following classes of QIS.
Definition 3. A quantified interpreted system P satisfies
synchronicity

iff

for every i  Ag, for all points (r, n), (r0 , n0 ),
(r, n) i (r0 , n0 ) implies n = n0

perfect recall for agent i

iff

for all points (r, n), (r0 , n0 ), if (r, n) i (r0 , n0 ) and n > 0
then either (r, n  1) i (r0 , n0 ) or
there is k < n0 such that (r, n  1) i (r0 , k) and
for all k 0 , k < k 0  n0 implies (r, n) i (r0 , k 0 )

no learning for agent i

iff

for all points (r, n), (r0 , n0 ), if (r, n) i (r0 , n0 )
then either (r, n + 1) i (r0 , n0 ) or
there is k > n0 such that (r, n + 1) i (r0 , k) and
for all k 0 , k > k 0  n0 implies (r, n) i (r0 , k 0 )

unique initial state

iff

for all r, r0  R, r(0) = r0 (0)

These conditions have extensively been discussed in the literature (Halpern et al., 2004)
together with equivalent formulations. Intuitively, a QIS is synchronous if time is part of
the local state of each agent. A QIS satisfies perfect recall for agent i if is local state records
everything that has happened to him (from the agents point of view) so far in the run. No
learning is dual to perfect recall: agent i does not acquire any new knowledge during a run.
Finally, a QIS has a unique initial state if all runs start from the same global state.
A QIS P satisfies perfect recall (resp. no learning) if P satisfies perfect recall (resp. no
learning) for all agents. We denote the class of QIS with m agents as QIS m ; the superscripts
pr, nl, sync, uis denote the subclasses of QIS m satisfying perfect recall, no learning,
synchronicity, and having a unique initial state respectively. For instance, QIS sync,uis
is
m
the class of all synchronous QIS with m agents and having a unique initial state.
We now assign an interpretation to the formulas in Lm and LCm by means of quantified
interpreted systems. Let  be an assignment from variables to individuals in D, the valuation
5

fiBelardinelli & Lomuscio

I  (t) of a term t is defined as (y) for t = y, and I  (t) = I(c) for t = c. A variant ax of an
assignment  assigns a  D to x and agrees with  on all other variables.
Definition 4. The satisfaction of a formula   Lm at point (r, n)  P under an assignment
, denoted (P  , r, n) |= , is defined inductively as follows:
(P  , r, n) |= P k (t1 , . . . , tk )
(P  , r, n) |= 
(P  , r, n) |=    0
(P  , r, n) |= x
(P  , r, n) |= 
(P  , r, n) |= U 0

iff
iff
iff
iff
iff
iff

(P  , r, n) |= Ki 

iff

hI  (t1 ), . . . , I  (tk )i  I(P k , r(n))
(P  , r, n) 6|= 
(P  , r, n) 6|=  or (P  , r, n) |=  0
x
for all a  D, (P a , r, n) |= 
(P  , r, n + 1) |= 
there is n0  n such that (P  , r, n0 ) |=  0
and (P  , r, n00 ) |=  for all n  n00 < n0
for all r0 , n0 , (r, n) i (r0 , n0 ) implies (P  , r0 , n0 ) |= 

For   LCm we have to consider also the case for the common knowledge operator:
(P  , r, n) |= C

iff

for all k  N, (P  , r, n) |= E k 

The truth conditions for , , , , G and F are defined from those above. From
the definition above it follows that (P  , r, n) |= C iff for all (r0 , n0 ) reachable from (r, n),
(P  , r0 , n0 ) |= .
A formula  is true at a point (r, n) if it is satisfied at (r, n) by every assignment ;  is
true on a QIS P if it is true at every point in P;  is valid on a class C of QIS if it is true
on every QIS in C. Further, a formula  is satisfiable on a QIS P if it is satisfied at some
point in P, for some assignment ;  is satisfiable on a class C of QIS if it is satisfiable on
some QIS in C.
By considering all combinations of pr, nl, sync and uis we obtain 16 subclasses of QIS m
for any m  N. Not all of them are independent, nor axiomatisable. Indeed, some of these
are not axiomatisable even at the propositional level (Halpern & Moses, 1992; Halpern &
Vardi, 1989). In the first column of Table 1 we group together the classes of QIS that share
the same set of validities on the languages Lm and LCm . The proofs of these equivalences
are similar to those of the propositional case (Halpern et al., 2004) and are not reported
here. Further, we define the languages PLm and PLCm as the propositional fragments of
Lm and LCm respectively (formally, PLm and PLCm are obtained by restricting atomic
formulas to 0-ary predicate constants p1 , p2 , . . .). Table 1 summarises the results by Halpern
et al. (2004) concerning the axiomatisability of propositional validities in PLm and PLCm .
Observe that, as regards the language PLm , for m = 1 all sets of validities on the various
classes of QIS are axiomatisable, while for m  2 no axiomatisation can be given for
QIS nl,uis
and QIS nl,pr,uis
(Halpern & Vardi, 1986, 1989). As to the language PLCm , we
m
m
restrict to the case for m  2, as for m = 1 PLCm has the same expressive power as
PLm . For m  2 no class of validities on PLCm has a recursive axiomatisation but QIS m ,
uis
sync,uis
and QIS nl,sync,uis
, QIS nl,pr,sync,uis
.
QIS sync
m
m
m , QIS m , QIS m
In the next section we show that the axiomatisability results at the propositional level
can be lifted to the monodic fragment of the languages Lm and LCm .
6

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

QIS
sync,uis
QIS m , QIS sync
,
QIS uis
m
m , QIS m
pr,uis
QIS pr
m , QIS m
pr,sync
QIS m
, QIS pr,sync,uis
m
nl
QIS m
QIS nl,sync
m
QIS nl,pr
m
QIS nl,pr,sync
m
QIS nl,uis
m
QIS nl,pr,uis
m
QIS nl,sync,uis
, QIS nl,pr,sync,uis
m
m

PL1
X
X
X
X
X
X
X
X
X
X

PLm , m  2
X
X
X
X
X
X
X
7
7
X

PLCm , m  2
X
7
7
7
7
7
7
7
7
X

Table 1: Equivalences between classes of QIS and axiomatisability results for the propositional fragments PLm and PLCm . The sign X indicates that the set of validities
on a specific class is axiomatisable; while 7 indicates that it is not.

2.3 The Monodic Fragment
In the rest of the paper we will show that a sufficient condition for lifting the results in
Table 1 to the first-order case is to restrict the languages Lm and LCm to their monodic
fragments.
Definition 5. The monodic fragment L1m is the set of formulas   Lm such that any subformula of  of the form Ki , , or 1 U2 contains at most one free variable. Similarly,
1 is the set of formulas   LC
the monodic fragment LCm
m such that any subformula of 
of the form Ki , C, , or 1 U2 contains at most one free variable.
The monodic fragments of a number of first-order modal logics have been thoroughly
investigated in the literature (Hodkinson et al., 2000, 2003; Wolter & Zakharyaschev, 2001,
2002). In the case of Lm and LCm these fragments are quite expressive as they contain
formulas like the following:
y C(zAvailable(y, z)UxRequest(x, y))

(1)

Ki  xyz(Request(x, y)  Available(y, z)) 
 Ki xyz(Request(x, y)  Available(y, z))

(2)

Formula (1) intuitively states that it is common knowledge that every resource y will
eventually be requested by somebody, but until that time the resource remains available to
everybody. Notice that y is the only free variable within the scope of modal operators U
and C. Formula (2) represents that if agent i knows that at the next step every resource is
available whenever it is requested, then at the next step agent i knows that this is indeed
the case. However, note that the formula
xKi (Process(x)  yF Access(x, y))
7

fiBelardinelli & Lomuscio

which intuitively means that agent i knows that every process will eventually try to access
every resource, is not in L1m as both x and y occur free within the scope of modal operator
F . Still, the monodic fragments of Lm and LCm are quite expressive as they contain all
de dicto formulas, i.e., formulas where no free variable appears in the scope of any modal
operator, as in (2). So, the limitation is really only on de re formulas.
We stress the fact that the formulas above have no propositional equivalent in the
case that they are interepreted on quantified interpreted systems in which the domain of
quantification is infinite, or its cardinality cannot be bounded in advance.
Finally, observe that the Barcan formulas x  x   and Ki x  xKi 
are both true in all quantified interpreted systems, as each QIS includes a unique domain
of quantification. This implies that the universal quantifier commutes with the temporal
modality  and the epistemic modality Ki . Thus, it can be the case that for some formulas
,  0  Lm , we have that    0 is a validity, but   L1m and  0 
/ L1m . For instance,
consider  = xP (x, y) and  0 = x  P (x, y). We will see that this remark does not
interfere with our results.

3. Axiomatisations
In this section we present sound and complete axiomatisations of the sets of monodic validities for the classes of quantified interpreted systems in Section 2. First, we introduce
the basic system QKTm that extends to the first-order case the multi-modal epistemic logic
S5m combined with the linear temporal logic LTL.
Definition 6. The system QKTm contains the following schemes of axioms and rules,
where ,  and  are formulas in L1m and = is the inference relation.
First-order logic

Temporal logic

Epistemic logic

Taut
MP
Ex
Gen
K
T1
T2
Nec
T3
K
T
4
5
Nec

classical propositional tautologies
  ,  = 
x  [x/t]
  [x/t] =   x, where x is not free in 
(  )  (  )
    
U    (  (U))
 = 
     =   (U)
Ki (  )  (Ki   Ki )
Ki   
Ki   Ki Ki 
Ki   Ki Ki 
 = Ki 

The operator Ki is an S5 modality, while the next  and until U operators are axiomatised as linear-time modalities (Fagin et al., 1995). To this we add the classical postulates
Ex and Gen for quantification, which are both sound as we consider a unique domain of
individuals in the quantified interpreted systems.
8

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Definition 7. The system QKT Cm extends QKTm with the following schemes of axioms
1 and = is the inference
for common knowledge, where ,  and  are formulas in LCm
relation.
C1
C2

C  (  EC)
  (  E) =   C

We consider the standard definitions of proof and theorem; `S  means that the formula
 is a theorem in the formal system S. We remark that the Barcan formula (BF ) 2x 
x2 is provable for any unary modal operator 2 by the axioms K and Ex, and the rules
M P and Gen. The notions of soundness and completeness of a system S with respect to a
class C of QIS are defined as standard: S is sound w.r.t. C if for all , S `  implies C |= .
Similarly, S is complete w.r.t. C if for all , C |=  implies S ` .
In this paper we focus on the schemes of axioms in Table 2 that specify key interactions
between time and knowledge (Halpern et al., 2004). We use 1, . . . , 5 as superscripts to denote
KT1
KT2
KT3
KT4
KT5

Ki   (Ki   Ki )  Ki ((Ki )U((Ki )U))
Ki    Ki 
(Ki )UKi   Ki ((Ki )UKi )
Ki   Ki  
Ki   Kj 
Table 2: the axioms KT1-KT5.

the systems obtained by adding to QKTm or QKTCm any combination of KT1-KT5. For
instance, the system QKTC2,3
m extends QKTCm with the axioms KT2 and KT3.
It is straightforward to check that the axioms of QKTm and QKTCm are valid on every
QIS and the inference rules preserve validity. However, the axioms KT1-KT5 are valid only
on specific classes of QIS as stated in the following Remark.
Remark 1. A QIS P satisfies any of the axioms KT1-KT5 in the first column if P satisfies
the corresponding semantical condition in the second column.
Axiom
KT1
KT2
KT3
KT4
KT5

Condition on QIS
perfect recall
perfect recall, synchronicity
no learning
no learning, synchronicity
all agents share the same knowledge, i.e.,
for all i, j  Ag, (r, n) i (r0 , n0 ) iff (r, n) j (r0 , n0 ).

These results can be shown in a similar way to the propositional case (Halpern et al.,
2004); so the proofs are omitted.
By using Remark 1 we can prove soundness results for all our first-order temporalepistemic systems.
Theorem 1 (Soundness). The systems reported in the first and second column of the following table are sound w.r.t. the corresponding classes of QIS in the third column.
9

fiBelardinelli & Lomuscio

Systems
QKTm
QKT Cm
1
1
QKTm
QKT Cm
2
2
QKTm
QKT Cm
3
3
QKTm
QKT Cm
4
4
QKTm
QKT Cm
2,3
2,3
QKTm
QKT Cm
1,4
1,4
QKTm
QKT Cm
1,4,5
1,4,5
QKTm
QKT Cm

QIS
sync,uis
QIS m , QIS sync
,
QIS uis
m
m , QIS m
pr,uis
QIS pr
m , QIS m
pr,sync
QIS m
, QIS pr,sync,uis
m
nl
QIS m , QIS nl,uis
m
QIS nl,sync
m
nl,pr,uis
QIS nl,pr
m , QIS m
nl,pr,sync
QIS m
QIS nl,sync,uis
, QIS nl,pr,sync,uis
m
m

Proof. These results follow from Remark 1 by a line of reasoning similar to that used in
the propositional case (Fagin et al., 1995; Halpern et al., 2004). Notice that if a quantified
interpreted systems P satisfies no learning, synchronicity, and has a unique initial state,
then P satisfies also perfect recall, that is, P  QIS nl,sync,uis
implies P  QIS nl,pr,sync,uis
.
m
m
Further, all agents share the same knowledge, therefore KT5 holds in P.
As we anticipated above, not all calculi are complete w.r.t. the corresponding classes
of quantified interpreted systems in Theorem 1. In the next theorem we summarise the
completeness results that will be proved in the rest of this paper.
Theorem 2 (Completeness). The systems reported in the first and second column of the
following table are complete w.r.t. the corresponding classes of QIS in the third column.
Systems
QKTm
QKT Cm
1
QKTm
2
QKTm
3
QKTm
4
QKTm
2,3
QKTm
1,4
QKTm
QKT12,3
1,4,5
1,4,5
QKTm
QKT Cm

QIS
sync,uis
uis
QIS m , QIS sync
m , QIS m , QIS m
pr
pr,uis
QIS m , QIS m
QIS pr,sync
, QIS pr,sync,uis
m
m
nl
QIS m
QIS nl,sync
m
QIS nl,pr
m
QIS nl,pr,sync
m
QIS nl,uis
, QIS nl,pr,uis
1
1
nl,pr,sync,uis
QIS nl,sync,uis
,
QIS
m
m

We observe that, as regards the language L1m , the sets of monodic validities are axiomatisable for all classes introduced but QIS nl,uis
and QIS nl,pr,uis
. However, for L11 we
m
m
have that QIS nl,uis
and QIS nl,pr,uis
are equivalent to QIS nl,pr
. Thus, the sets of monodic
1
1
1
nl,pr,uis
nl,uis
validities on QIS 1
and QIS 1
are axiomatised by QKT2,3
1 .
1
As regards the language LCm , only the set of monodic validities on QIS m , QIS sync
m ,
sync,uis
nl,sync,uis
nl,pr,sync,uis
QIS uis
,
QIS
are
axiomatisable,
as
well
as
those
on
QIS
and
QIS
.
m
m
m
m
All other classes are not recursively axiomatisable, as this is the case already at the propositional level (Halpern & Moses, 1992; Halpern & Vardi, 1986, 1989).
For proving the completeness results reported above we introduce Kripke models as a
generalisation of quantified interpreted systems.
10

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

3.1 Kripke Models
To prove the completeness results in Theorem 2, we first introduce an appropriate class of
Kripke models as a generalisation of QIS and prove completeness for these models. Then
we apply a correspondence result between Kripke models and QIS to obtain the desired
results.
Definition 8 (Kripke model). A Kripke model is a tuple M = hW, RW , {i }iAg , D, Ii
such that
 W is a non-empty set of states;
 RW is a non-empty set of functions r : N  W ;
 for every agent i  Ag, i is an equivalence relation on W ;
 D is a non-empty set of individuals;
 for every w  W , I is a first-order interpretation, that is, a function such that
 for every constant c, I(c, w)  D,
 for every predicate constant P k , I(P k , w) is a k-ary relation on D.
Further, for every w, w0  W , I(c, w) = I(c, w0 ).
Notice that Def. 8 differs from other notions of Kripke model in that it includes the
set RW of functions to guarantee that the correspondence between Kripke models and
QIS is one-to-one. We also assume a unique domain of interpretation, as well as a fixed
interpretation for individual constants, so also in this case we simply write I(c). Kripke
models are a generalisation of QIS in that they do not specify the inner structure of the states
in W . Also for Kripke models we introduce points as pairs (r, n) for r  RW and n  N.
A point derives its properties from the corresponding state; for instance, (r, n) i (r0 , n0 ) if
r(n) i r0 (n0 ).
We consider Kripke models satisfying synchronicity, perfect recall, no learning, and
having a unique initial state. The definition of these subclasses is analogous to Def. 3.
Definition 9. A Kripke model M satisfies
synchronicity

iff

for every i  Ag, for all points (r, n), (r0 , n0 ),
(r, n) i (r0 , n0 ) implies n = n0

perfect recall for agent i

iff

for all points (r, n), (r0 , n0 ), if (r, n) i (r0 , n0 ) and n > 0
then either (r, n  1) i (r0 , n0 ) or
there is k < n0 such that (r, n  1) i (r0 , k) and
for all k 0 , k < k 0  n0 implies (r, n) i (r0 , k 0 ).

no learning for agent i

iff

for all points (r, n), (r0 , n0 ), if (r, n) i (r0 , n0 )
then either (r, n + 1) i (r0 , n0 ) or
there is k > n0 such that (r, n + 1) i (r0 , k) and
for all k 0 , k > k 0  n0 implies (r, n) i (r0 , k 0 ).

unique initial state

iff

for all r, r0  RW , r(0) = r0 (0).
11

fiBelardinelli & Lomuscio

Now let Km be the class of Kripke models with m agents. Hereafter we adopt the same
sync,uis
naming conventions as for QIS; for instance, Km
is the class of synchronous Kripke
models with m agents and having a unique initial state. Further, the inductive clauses for
the satisfaction relation |= with respect to an assignment  are straightforwardly defined
from those for QIS, as well as the notions of truth and validity.
Definition 10. The satisfaction of a formula   Lm (resp. LCm ) at point (r, n)  M for
an assignment , or (M , r, n) |= , is inductively defined as follows:
(M , r, n) |= P k (t1 , . . . , tk )
(M , r, n) |= 
(M , r, n) |=    0
(M , r, n) |= x
(M , r, n) |= 
(M , r, n) |= U 0

iff
iff
iff
iff
iff
iff

(M , r, n) |= Ki 
(M , r, n) |= C

iff
iff

hI  (t1 ), . . . , I  (tk )i  I(P k , r(n))
(M , r, n) 6|= 
(M , r, n) 6|=  or (M , r, n) |=  0
x
for all a  D, (Ma , r, n) |= 
(M , r, n + 1) |= 
there is n0  n such that (M , r, n0 ) |=  0
and n  n00 < n0 implies (M , r, n00 ) |= 
for all r0 , n0 , (r, n) i (r0 , n0 ) implies (M , r0 , n0 ) |= 
for all k  N, (M , r, n) |= E k 

A formula  is true at a point (r, n) if it is satisfied at (r, n) by every assignment ; 
is true on a Kripke model M if it is true at every point in M;  is valid on a class C of
Kripke models if it is true on every Kripke model in C. Further, a formula  is satisfiable
on a Kripke model M if it is satisfied at some point in M, for some assignment ;  is
satisfiable on a class C of Kripke models if it is satisfiable on some Kripke model in C.
We relate Kripke models and quantified interpreted systems by means of a map g :
Km  QIS m (Lomuscio & Ryan, 1998). Let M = hW, RW , {i }iAg , D, Ii be a Kripke
model. For every agent i  Ag, for (r, n)  M, let the equivalence class [(r, n)]i = {(r0 , n0 ) |
(r, n) i (r0 , n0 )} be a local state for agent i; while each (r, n) is a local state for the
environment. Then define g(M) as the tuple hR0 , D, I 0 i where R0 contains the runs rr for
r  RW such that rr (n) = h(r, n), [(r, n)]1 , . . . , [(r, n)]m i. Further, D is the same as in M,
and for every constant c, I 0 (c, rr (n)) = I(c, r(n)), and I 0 (P k , rr (n)) = I(P k , r(n)). The
structure g(M) is a QIS that satisfies the following result:
Lemma 1. For every  in Lm (resp. LCm ),
(M , r, n) |=  iff (g(M) , rr , n) |= 
Proof. The proof is by induction on the structure of . If  is an atomic formula P k (t1 , . . . , tk ), then (M , r, n) |=  iff hI  (t1 ), . . . , I  (tk )i  I(P k , r(n)), iff we have
hI 0 (t1 ), . . . , I 0 (tk )i  I 0 (P k , rr (n)), iff (g(M) , rr , n) |= . The inductive cases for the
propositional connectives and quantifiers are straightforward, as well as those for the temporal operators  and U. As to  = Ki , we have that (M , r, n) |=  iff (r, n) i (r0 , n0 )
0
implies (M , r0 , n0 ) |= , but (r, n) i (r0 , n0 ) iff rri (n) = rri (n0 ). Thus, (M , r, n) |=  iff
0
(rr , n) 0i (rr , n0 ) implies (M , r0 , n0 ) |= . Again, by the induction hypothesis (M , r, n) |=
0
0
 iff (rr , n) 0i (rr , n0 ) implies (g(M) , rr , n0 ) |= , i.e., iff (g(M) , rr , n) |= . The case
for  = C is treated similarly by considering the epistemic reachability relation.

12

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Notice that if M satisfies synchronicity, or perfect recall, or no learning, or has a unique
initial state, then also g(M) satisfies the same property. This follows from the fact that
0
(r, n) i (r0 , n0 ) iff (rri , n) 0i (rr , n0 ). Thus, g defines a map from each of the 16 subclasses
of Km outlined in Def. 9 to the corresponding subclass of QIS m and we obtain the following
corollary to Lemma 1.
Corollary 1. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula   L1m
1 ), if  is satisfiable in KX , then  is satisfiable in QIS X .
(resp. LCm
m
m
For reasoning about the monodic fragments of Lm and LCm when we are dealing with no
learning and perfect recall, we introduce the following class of monodic friendly Kripke
models. These structures are motivated by the fact that KT1 and KT3 are too weak
to enforce either perfect recall or no learning on Kripke models when these axioms are
restricted to monodic formulas. However, they suffice for monodic friendly structures. In
the following, we also prove that satisfiability in Kripke models is equivalent to satisfability
in monodic friendly structures when we restrict our languages to monodic formulas.
Definition 11 (mf-model). A monodic friendly
Mmf = hW, RW , {i,a }iAg,aD , D, Ii such that

Kripke

model

is

a

tuple

 W , RW , D and I are defined as for Kripke models;
 for i  Ag, a  D, i,a is an equivalence relation on W .
We can define synchronicity, perfect recall, no learning, and having a unique initial state
also for mf-models by parametrising Def. 9 to each relation i,a . For instance, an mf-model
satisfies perfect recall for agent i if for all points (r, n), (r0 , n0 ), for all a  D, whenever
(r, n) i,a (r0 , n0 ) and n > 0 then either (r, n  1) i,a (r0 , n0 ) or there is k < n0 such that
(r, n  1) i,a (r0 , k) and for all k 0 , k < k 0  n0 implies (r, n) i,a (r0 , k 0 ). As regards the
subclasses of the class MF m of all mf-models with m agents, we adopt the same naming
conventions as for QIS and Kripke models. Notice that Kripke models can be seen as
mf-models such that for all i  Ag, a, b  D, i,a is equal to i,b .
1 ) in a mf-model M
Finally, the satisfaction relation |= for   L1m (resp. LCm
mf is
defined in the same way as in Kripke models, except for the epistemic operators:
(Mmf , r, n) |= Ki [y]

iff

for all r0 , n0 , (r, n) i,(y) (r0 , n0 ) implies (Mmf , r0 , n0 ) |= [y]

where at most y appears free in . Notice that if  is a sentence, then (Mmf , r, n) |= Ki 
iff (r, n) i,a (r0 , n0 ) implies (Mmf , r0 , n0 ) |=  for all a  D. The case for the common
knowledge operator C is straightforward by definition of E k . In particular, two points (r, n)
0 0
and (r0 , n0 ) are epistemically reachable
S for a  D, or simply reachable, if (r, n) a (r , n ),
where a is the transitive closure of iAg i,a .
We remark that the converse of the Barcan formula, or CBF , Ki x  xKi  holds
in all mf-models; while the Barcan formula, or BF , xKi   Ki x does not. To check
this consider the mf-model M = hW, RW , {i,a }iAg,aD , D, Ii in Fig.1(a) such that
- W = {w, w0 , w00 }
- RW = {r, r0 , r00 } and r(0) = w, r0 (0) = w0 , and r00 (0) = w00
13

fiBelardinelli & Lomuscio

..
.

..
.

..
.

..
.

i,b

i,a

..
.

..
.
i,d

i,c

w0

w

w00

v0

v

P (a)

P (a), P (b)

P (b)

Q(c)

Q(c)

v 00

(b) The mf-model M0 .

(a) The mf-model M.

Figure 1: Arrows represent the system runs; while epistemically related states are grouped
together.

- D = {a, b}
- I(P 1 , r(0)) = {a, b}, I(P 1 , r0 (0)) = {a} and I(P 1 , r00 (0)) = {b}
- i,a and i,b are equivalence relations such that (r, 0) i,a (r0 , 0) and (r, 0) i,b (r00 , 0).
We can see that (M, r, 0) |= xKi P (x), but (M, r, 0) 6|= Ki xP (x) as (r, 0) i,a (r0 , 0) and
(M , r0 , 0) 6|= P (x) for (x) = b.
Furthermore, the K axiom Ki (   0 )  (Ki   Ki  0 ) is not valid on mf-models
either. In fact, consider the mf-model M0 = hW 0 , R0W 0 , {0i,a }iAg,aD0 , D0 , I 0 i in Fig.1(b)
such that
- W 0 = {v, v 0 , v 00 }
- R0W 0 = {q, q 0 , q 00 } and q(0) = v, q 0 (0) = v 0 , and q 00 (0) = v 00
- D0 = {c, d}
- I 0 (Q1 , q(0)) = {c}, I 0 (Q1 , q 0 (0)) = {c} and I 0 (Q1 , q 00 (0)) = 
- i,c and i,d are equivalence relations such that (q, 0) i,c (q 0 , 0) and (q, 0) i,d (q 00 , 0).
Finally, let (x) = c. We can check that (M , q, 0) |= (Q(x)  xQ(x))  Q(x) and
(M , q 0 , 0) |= (Q(x)  xQ(x))  Q(x). Thus, (M , q, 0) |= Ki (Q(x)  xQ(x))  Ki Q(x).
But (M, q 00 , 0) 6|= xQ(x), so (M , q, 0) 6|= Ki xQ(x).
We now prove the following lemma, which will be used in the completeness proof for
systems satisfying perfect recall or no learning. The lemma states that, when we deal with
satisfability of monodic formulas, mf-models suffice.
Lemma 2. Let MF K,BF
be the class of all mf-models validating the formulas K and BF .
m
1 ),
For every monodic formula   L1m (resp. LCm
Km |=  iff MF K,BF
|= 
m
14

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Proof. The implication from right to left follows from the fact that the class Km of all
Kripke models is isomorphic to the subclass of monodic friendly Kripke models such that
for all i  Ag, a, b  D, i,a is equal to i,b . In other words, given a Kripke model M =
hW, RW , {i }iAg , D, Ii we can define the mf-model M0 = hW, RW , {i,a }iAg,aD , D, Ii,
where for every a  D, i,a is equal to i . It is straightforward to see that M0 validates
both K and BF (in particular, the counterexamples in Fig. 1 are ruled out). Further, if
M 6|=  then M0 6|= . Thus, if MF K,BF
|= , then Km |= .
m
For the implication from left to right, assume that Mmf = hW, RW ,
{i,a }iAg,aD , D, Ii is an mf-model validating K and BF such that (Mmf , r, n) 6|= 
for some point (r, n) and some assignment . We can then build a Kripke model M0 =
hW 0 , R0W 0 , {0i }iAg , D0 , I 0 i from Mmf such that (M0 , r, n) 6|=  as follows. We start by
assuming W 0 = W , SR0 = R and D0 = D. Further, for each i  Ag, define 0i as the
transitive closure of aD i,a . Finally, set I 0 = I. We now have to check that the Kripke
model M0 is well defined and does not validate .
First of all, we point out the following issue associated with the construction above: it
can be the case that for some point (q, k) and some monodic formula [x], it happens that
(Mmf , q, k) |= Ki [x], (q, k) i,(x) (q 0 , k 0 ) and (q, k) i,(y) (q 00 , k 00 ) for some (x) 6= (y).
Further, suppose that (Mmf , q 00 , k 00 ) 6|= [x], while we obviously have that (Mmf , q 0 , k 0 ) |=
[x]. Now by the definition of 0i we have that (M0 , q, k) 6|= Ki [x]; so the two models do
not satisfy the same formulas. We can solve this problem by modifying the interpretation I
according to the structure of the monodic formula [x], while keeping the same truth value
for [x] at point (q, k). We consider the relevant cases according to the structure of [x];
the induction hypothesis consists of the fact that we are able to find such an interpretation
I for all subformulas of [x].
For [x] = P (x) we simply assume that (x)  I(P, q 00 (k 00 )), so that (M0 , q 00 , k 00 ) |=
[x] and (M0 , q, k) |= Ki [x]. Note that this does not change the truth value of any
epistemic formula in (q, k) as we assumed that (q, k) 6i,(x) (q 00 , k 00 ) (otherwise [x] would
be satisfied in (q 00 , k 00 )). The cases for propositional connectives and modal operators are
similarly dealt with by applying the induction hypothesis. For [x] = y[x, y] we have
y

b
, q 00 , k 00 ) 6|= [x, y].
that (Mmf , q 00 , k 00 ) 6|= [x], therefore there exists b  D such that (Mmf
Now we have to consider 4 different cases depending on whether (q, k) satisfies any of these
4 formulas:

Ki x [x, y]

(3)

Ki x [x, y]

(4)

Ki x [x, y]

(5)

Ki x [x, y]

(6)

By using the axioms and inference rules in QKTm for Formula (3) we can show what
follows (where  is used for entailment):
(Mmf , q, k) |= Ki y[x, y]  Ki x[x, y] 
 (Mmf , q, k) |= xKi y[x, y]  yKi x[x, y] by Ex
 (Mmf , q, k) |= Ki xy[x, y]  Ki yx[x, y] by zKi   Ki z
 (Mmf , q, k) |= Ki (xy[x, y]  yx[x, y]) by Ki (  )  Ki   Ki 
15

fiBelardinelli & Lomuscio

 (Mmf , q, k) |= Ki (xu[x, u]  yv[v, y])
 (Mmf , q, k) |= Ki xyuv([x, u]  [v, y])
 (Mmf , q, k) |= Ki xy([x, y]  [x, y])

by change of variables
by prefixing
by Ex

but the last formula is a contradiction; so (3) cannot hold in (q, k). Similarly, Formula
(4) cannot hold in (q, k) either because:
(Mmf , q, k) |= Ki y[x, y]  Ki x[x, y]
 (Mmf , q, k) |= xKi y[x, y]  y Ki x[x, y]
 (Mmf , q, k) |= Ki xy[x, y]  y Ki x[x, y]
 (Mmf , q, k) |= Ki xy[x, y]  Ki yx[x, y]
 (Mmf , q, k) |= Ki (xy[x, y]  yx[x, y])
 (Mmf , q, k) |= Ki xy([x, y]  [x, y])

by Ex
by zKi   Ki z
by z Ki   Ki z
by Ki   Ki   Ki (  )
similarly to above

Note that in both derivations we make use of the formulas K and BF (for instance, to
prove the theorems Ki (  )  Ki   Ki  and zKi   Ki z). Finally, to satify the
Formulas (5) and (6) in (q, k), we have to guarantee the existence of an individual x while
avoiding the clash with (x). So, we introduce a new individual a0 in the domain D0 such
that a0 and (x) satisfy the same formulas at all points. Thus, a0 can be seen as a copy
of (x). Finally, by the induction hypothesis we can modify the interpretation I 0 so that
(M0 , q 00 , k 00 ) |= [x, y].
The case for the common knowledge operator derives from the one for Ki . As a result,
we obtain a Kripke model M0 such that (M0 , r, n) 6|= .
Moreover, by the procedure described above, if Mmf satisfies perfect recall, or no learning, or synchronicity, or has unique initial state, then also M0 satisfies the same property.
Thus, by Lemma 2 we can prove the following result.
Corollary 2. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula   L1m
1 ), if  is satisfiable in MF X also validating the formulas K and BF , then  is
(resp. LCm
m
X.
satisfiable in Km
Proof. It is easy to see that if Mmf satisfies either synchronicity or has a unique
initial state, then M0 does as well by the way it is defined. Further, suppose that Mmf
satisfies perfect recall, and (r, n) 0i (r0 , n0 ) for n > 0. This means that there is a sequence
a1 , . . . , ak of individuals in D and a sequence (q1 , m1 ), . . . , (qk , mk ) of points such that (i)
(r, n) = (q1 , m1 ) and (r0 , n0 ) = (qk , mk ); and (ii) (qj , mj ) i,aj (qj+1 , mj+1 ) for j < k. We
show the result for k = 3, the case for k > 3 follows by a straightforward generalisation.
If (q1 , m1  1) i,a1 (q2 , m2 ), then by the definition of 0i we have that (q1 , m1  1) 0i
(q3 , m3 ) as well. Hence, Mmf satisfies perfect recall. Otherwise, suppose that by perfect
recall there is l2 < m2 such that (q1 , m1  1) i,a1 (q2 , l2 ), and for all l20 , l2 < l20  m2
implies (q1 , m1 ) i,a1 (q2 , l20 ). Now consider each l20 (h) = m2  h, for 0  h < m2 
l2 . By perfect recall, either (i) there exists p3 (h) such that (q2 , l20 (h)) i,a2 (q3 , p3 (h)),
and for all p03 (h), p3 (h) < p03 (h)  p3 (h  1) implies (q2 , l2 (h)) i,a2 (q3 , p03 (h)), or (ii)
(q2 , l20 (h)  1) i,a2 (q3 , p3 (h  1)), where p3 (1) = m3 . Notice that in both cases, by
the definition of 0i , we have that (q1 , m1 ) 0i (q3 , p03 (h)) for all 0  h < m2  l2 , that is,
(q1 , m1 ) 0i (q3 , p03 ) for all p3 [l2 + 1] < p03  m3 . Further, for l2 , either (i) there exists l3 such
16

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

that (q2 , l2  1) i,a2 (q3 , l3 ), and for all l30 , l3 < l30  p3 [l2 + 1] implies (q2 , l2 ) i,a2 (q3 , l30 ),
or (ii) (q2 , l2  1) i,a2 (q3 , p3 [l2 + 1]). In the first case, if some l30 is strictly less than
m3 , then there is l30 such that (q1 , m1  1) 0i (q3 , l30 ) and for all l300 , l30 < l300  m3 implies
(q1 , m1 ) 0i (q3 , l300 ). Otherwise, we have that (q1 , m1  1) 0i (q3 , m3 ). Hence, Mmf satisfies
perfect recall.
The proof for no learning is similar.
Finally, by combining Corollaries 1 and 2 we immediately obtain the following result.
Corollary 3. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula   L1m
1 ), if  is satisfiable in MF X also validating the formulas K and BF , then  is
(resp. LCm
m
satisfiable in QIS X
m.
In the next section we show that it is indeed possible to build such an mf-model.

4. The Completeness Proof
In this section we outline the main steps of the completeness proof, which is based on
a quasimodel construction (Gabbay, Kurucz, Wolter, & Zakharyaschev, 2003; Hodkinson
et al., 2000). Differently from these contributions, here we explicitly take into account
the interaction between temporal and epistemic modalities. Intuitively, a quasimodel for
a monodic formula  is a relational structure whose points are sets of sets of subformulas
of . Each set of sets of subformulas describes a possible state of affairs, and contains
sets of subformulas defining the individuals in that state. More formally, given a formula
  LCn1 we define
subC  = sub  {EC | C  sub}  {Ki C | C  sub, i  Ag}
where sub is the set of subformulas of . For   L1n , subC  is simply sub. Further, we
define
subC  = subC   { |   subC }  { |   subC }  { |   subC }
Observe that subC  is closed under negation modulo equivalences    and T 1,
that is, for all   subC , if  is not of the form  then   subC ; otherwise,
  subC . Finally, let subn  be the subset of subC  containing formulas with at most
n free variables. So, sub0  is the set of sentences in subn . If x is a variable not occurring
in , we define subx  = {[y/x] | [y]  sub1 }. Clearly, x is the only free variable in the
formulas in subx . By con we denote the set of all constants occurring in . In Table 3
we report the set suby  for  equal to Formula (1) thus abbreviated:
y C(zAv(y, z)UxReq(x, y))
Further, for k  N we define the closures clk  and clk,i  by mutual recursion.
S
Definition 12. Let cl0  = subx  and for k  0, clk+1  = iAg clk,i . For k  0, i  Ag,
clk,i  = clk   {Ki (1  . . .  n ), Ki (1  . . .  n ) | 1 , . . . , n  clk }.
17

fiBelardinelli & Lomuscio

suby 

{, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z), xReq(x, y),
, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z),
xReq(x, y),
, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z),
xReq(x, y),
, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z),
xReq(x, y)}

Table 3: the set suby  for  equal to Formula (1).
t

{, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z), xReq(x, y),
, C(zAv(y, z)UxReq(x, y)), EC(zAv(y, z)UxReq(x, y)),
{Ki C(zAv(y, z)UxReq(x, y))}iAg , zAv(y, z)UxReq(x, y), zAv(y, z),
xReq(x, y)}
Table 4: a type t in cl0 , for  equal to Formula (1).

We define ad() as the greatest number of alternations of distinct Ki s along any branch
in s parse tree (Halpern et al., 2004). Further, an index is any finite sequence  = i1 , . . . , ik
of agents such that in 6= in+1 , for 1  n < k; the length of  is denoted by ||. Also, ]i is
the absorptive concatenation of indexes  and i such that ]i =  if ik = i. Finally, K  is a
shorthand for Ki1 . . . Kik . Now let  be an index such that ||  ad(). If  is the empty
sequence  then cl  = clad() . If  = 0 ]i, then cl  = clk,i  for k = ad()  ||. We now
introduce types for quasimodels, which intuitively can be seen as individuals described by
maximal and consistent sets of formulas.
Definition 13 (Type). A -type t for  is any maximal and consistent subset of cl , i.e.,
for every monodic formulas  and  0 in cl ,
(i)   t iff  
/ t;
(ii)    0  t iff ,  0  t.
Two -types t, t0 are said to agree on sub0  if t  sub0  = t0  sub0 , i.e., if they share
the same sentences. Given a -type t for  and a constant c  con, ht, ci is an indexed type
for , abbreviated as tc . In Table 4 we report a type t in cl0 , for  equal to Formula (1).
We now introduce state candidates, which intuitively represent the states of a quasimodel.
Definition 14 (State candidate). A -state candidate for  is a pair C = hT, T con i such
that
(i) T is a set of -types for  that agree on sub0 ;
(ii) T con is a set containing for each c  con an indexed type tc such that t  T .
18

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

We also introduce the notion of point, which describes a state candidate from the perspective of a particular type.
Definition 15 (Point). A -point for  is a pair P = hC, ti such that
(i) C = hT, T con i is a -state candidate for ;
(ii) t  T is a -type.
Note that, by a slight abuse of notation, we call points both the pairs (r, n) in QIS and
the pairs P = hC, ti. This is to be consistent with previous work (Fagin et al., 1995; Halpern
et al., 2004); the context will disambiguate. Also, we write t  C for C = hT, T con i and
t  T . Similarly for t  P. Given a -state candidate C = hT, T con i and a point P = hC, ti
we define the formulas C and P as follows:
C :=

^

xt[x]  x

tT

_
tT

t[x] 

^

t[x/c]

tc T con

P := C  t
where we do not distinguish between a type t and the conjuction of formulas it contains.
A -state candidate C is S-consistent if the formula C is consistent w.r.t. the system S,
i.e., if 0S C . Similarly, a -point P is S-consistent if the formula P is consistent w.r.t. S.
We refer to plain consistency whenever the system S of reference is understood. Consistent
state candidates represent the states of our quasimodels. We now define the relations of
suitability that constitute the relational part of quasimodels.
Definition 16.
 A 1 -type t1 and a 2 -type t2 are -suitable, or t1  t2 , iff 1 = 2
and t1  t2 is consistent. They are i-suitable, or t1 i t2 , iff 1 ]i = 2 ]i and t1  Ki t2
is consistent.
 A 1 -state candidate C1 and a 2 -state candidate C2 are -suitable, or C1  C2 , iff
1 = 2 and C1  C2 is consistent. They are i-suitable, or C1 i C2 , iff 1 ]i = 2 ]i
and C1  Ki C2 is consistent.
 A 1 -point P1 and a 2 -point P2 are -suitable, or P1  P2 , iff 1 = 2 and P1 
P2 is consistent. They are i-suitable, or P1 i P2 , iff 1 ]i = 2 ]i and P1  Ki P2
is consistent.
 A 1 -point P1 = hC1 , t1 i and a 2 -point P2 = hC2 , t2 i are -suitable for a constant
c  con, or P1 c P2 , iff P1  P2 , tc1  T1con and tc2  T2con . They are i-suitable
for c, or P1 ci P2 , iff P1 i P2 , tc1  T1con and tc2  T2con .
By using the axioms T , 4 and 5 it can be shown that the relation i is reflexive,
transitive and symmetric, that is, an equivalence relation. Also, the relation  is serial.
In the following lemma we list some properties of relations  and i that will be useful in
what follows.
Lemma 3.

(i) Let   subx , if t1  t2 then   t1 iff   t2 .
19

fiBelardinelli & Lomuscio

(ii) Let Ki   subx  and let t be a -type, Ki   t iff for all -types t0 , t i t0 implies
  t0 . Moreover, let |]i|  ad(), then Ki   t iff for all ]i-types t0 , t i t0 implies
  t0 .
Proof.
(i) The proof is similar to the one for Lemma 9(i) in the work of Wolter et al. (2002). If
  t1 and  
/ t2 then   t2 and since t1 t2 is consistent, then also  
is consistent, which is a contradiction. From right to left, if   t2 and  
/ t1 then
    t1 . Since t1  t2 is consistent, then also      is consistent, which
is a contradiction.
(ii) From left to right, if Ki   t and  
/ t0 then   t0 and since t  Ki t0 is consistent,
then also Ki   Ki  is consistent, which is a contradiction. From right to left, if
Ki  
/ t then we can extend the set {}  { | Ki   t} to a -type t0 . In particular,
t i t0 and   t0 . Moreover, if |]i|  ad() then we can similarly prove that Ki   t
iff for all ]i-types t0 , t i t0 implies   t0 .
We now present the frame underlying the quasimodel for .
Definition 17 (Frame). A frame F is a tuple hR, D, {i,a }iAg,aD , fi where
(i) R is a non-empty set of indexes r, r0 , . . .;
(ii) D is a non-empty set of individuals;
(iii) for every i  Ag, a  D, i,a is an equivalence relation on the set of points (r, n) for
r  R and n  N;
(iv) f is a partial function associating to each point (r, n) a consistent state candidate
f(r, n) = Cr,n such that
(a) the domain of f is not empty;
(b) if f is defined on (r, n), then it is defined on (r, n + 1);
(c) if f is defined on (r, n) and (r, n) i,a (r0 , n0 ), then f is defined on (r0 , n0 ).
The function f is partial to take into consideration the case of synchronous systems. Also,
it is straightforward to introduce frames satisfying perfect recall, no learning, synchronicity,
or having a unique initial state, by following the same definitions given for mf-models. Next,
we provide the definition of objects, which correspond to the runs of Gabbay et al. (2003).
We choose this terminology to avoid confusion with the runs in QIS.
Definition 18 (Object). Given an individual a  D, an object in the frame F is a map a
con i
associating a type a (r, n)  Tr,n to every (r, n)  Dom(f) with f(r, n) = Cr,n = hTr,n , Tr,n
such that
1. a (r, n)  a (r, n + 1)
2. if (r, n) i,a (r0 , n0 ) then a (r, n) i a (r0 , n0 )
20

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

3. U  a (r, n) iff there is n0  n such that   a (r, n0 ) and for all n00 , n  n00 < n0
implies   a (r, n00 )
4. if a (r, n) i t are -types, then for some (r0 , n0 ), (r, n) i,a (r0 , n0 ) and a (r0 , n0 ) = t
5. if C  a (r, n) then there exists a point (r0 , n0 ) reachable from (r, n) such that
  a (r0 , n0 )
An object+ satisfies (1), (2), (3), (5) above and (40 ) below instead of (4).
(40 ) if a (r, n) is a -type, t is a ]i-type and a (r, n) i t, then for some (r0 , n0 ) i,a (r, n),
a (r0 , n0 ) = t.
Intuitively, an object identifies the same individual, here represented by types, across
different state candidates. Now we have all the elements to give the definition of quasimodel.
Definition 19 (Quasimodel). A quasimodel for  is a tuple Q = hR, O, {i, }iAg,O , fi
such that hR, O, {i, }iAg,O , fi is a frame, and
1.   t for some t  Tr,n and Tr,n  Cr,n
2. Cr,n  Cr,n+1
3. if (r, n) i, (r0 , n0 ) then (r, n) i (r0 , n0 )
4. for every t  Tr,n there exists an object   O such that (r, n) = t
con is an object in O.
5. for every c  con, the function c such that c (r, n) = tc  Tr,n

A quasimodel+ is defined as a quasimodel but where clauses (4) and (5) refer to objects+
rather than objects. We can define quasimodels (resp. quasimodel+ ) satisfying perfect recall,
no learning, synchronicity, or having a unique initial state, by assuming the corresponding
condition on the underlying frame. The difference between objects (resp. quasimodel) and
objects+ (resp. quasimodel+ ) is purely technical. In particular, the latter are needed for
systems satisfying perfect recall and no learning as it will become apparent in Section 5.
In the following lemma we list some properties of quasimodels that will be useful in what
follows.
Lemma 4. In every quasimodel Q, for every object   O,
(i) Ki   (r, n) iff for all (r0 , n0 ), (r0 , n0 ) i, (r, n) implies   (r0 , n0 ).
(ii) C  (r, n) iff for all points (r0 , n0 ) reachable from (r, n) we have that   (r0 , n0 ).
Proof.
(i) The implication from left to right follows from the fact that (r0 , n0 ) i, (r, n) implies
(r, n) i (r0 , n0 ). For the implication from right to left, if Ki  
/ (r, n) then by
Lemma 3(ii) there is a -type t such that (r, n) i t and   t. By Definition 18 for
some (r0 , n0 ), (r, n) i, (r0 , n0 ) and   (r0 , n0 ) = t.
21

fiBelardinelli & Lomuscio

(ii) The implication from left to right is proved by induction on the length of the path
from (r, n) to (r0 , n0 ). Both the base case and the inductive step follow by axiom C1.
The implication from right to left follows from Definition 18.
We now state the main result of this section, that is, satisfability in quasimodels implies
satisfability in mf-models. In what follows a quasimodel Q validates a formula  if  belongs
to every type in every state-candidate in Q.
Theorem 3. If there is a quasimodel (resp. quasimodel+ ) Q for a monodic formula , then
 is satisfiable in a mf-model Mmf . Moreover, if Q validates the formulas K and BF , then
so does Mmf . Finally, if Q satisfies perfect recall, or no learning, or synchronicity, or has
a unique initial state, then so does Mmf .
Proof. This proof is inspired by those of Lemmas 11.72 and 12.9 in the work of Gabbay
et al. (2003), but here we consider monodic friendly Kripke models rather than standard
Kripke models. First, for every monodic formula  of the form Ki , C,  or 1 U2
we introduce a k-ary predicate constant Pk for k equal to 0 or 1, depending whether there
are 0 or 1 free variables in . The formula Pk (x) is called the surrogate of . Given a
monodic formula  we denote by  the formula obtained from  by substituting all its modal
subformulas which are not within the scope of another modal operator with their surrogates.
Since every state candidate C in the quasimodel Q is consistent and all the system S of
first-order temporal-epistemic logic considered in Section 3 are based on classical first-order
logic, the formula C is consistent with respect to first-order (non-modal) logic. By Godels
completeness theorem there is a first-order structure I = hI, Di, where D is a non-empty set
of individuals and I is a first-order interpretation on D, that satisfies C , i.e., I  |= C for
some assignment  of the variables to the elements in D. We intend to build an mf-model
by joining all these first-order structures. However, it is possible that these structures have
different domains with different cardinalities. To solve this problem, we consider a cardinal
number   0 greater than the cardinality of the set O of all objects in Q and define
D = {h, i |   O,  < }
Then, for (r, n)  Q, for any -type t  Tr,n we have that
|{h, i  D | (r, n) = t}| = 
By the method described in Claim 11.24 by Gabbay et al. (2003), we can expand each
first-order structure to obtain a structure Ir,n = hIr,n , Di with domain D such that Ir,n
satisfies Cr,n and

|{a  D | (x) = a and Ir,n
|= t[x]}| = 

So, we can assume without loss of generality that all first-order structures Ir,n share the
same domain D, and for every t  Tr,n , h, i  D, we have

(r, n) = t iff Ir,n
|= t[x]

for (x) = h, i. Equivalently, for t  Tr,n , (x) = h, i  D,

(r, n) = {  cl  | Ir,n
|= [x]}

22

(7)

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Moreover, Ir,n (c) = hc , 0i for every c  con.
We define the mf-model Mmf as the tuple hW, R, {i,a }iAg,aD , D, Ii such that W is
the set of points (r, n) for r in R  Q and n  N; R is the set of runs from N to W such that
r(n) = (r, n); D is defined as above; for i  Ag and h, i  D, i,h,i is defined as i, ;
and the interpretation I is obtained by joining the various first-order interpretations Ir,n ,
i.e., I(P, r(n)) = Ir,n (P ) for every predicate constant P . We can now prove the following
result for Mmf .
Lemma 5. If the mf-model Mmf is obtained from a quasimodel Q as described above, then
for every   subx ,

Ir,n
|=  iff (Mmf , r, n) |= 

Moreover, if Q is a quasimodel+ , f(r, n) is a -state candidate and ad(K )  ad() then

Ir,n
|=  iff (Mmf , r, n) |= 

Proof. The proof is similar to Lemma 12.10 in the work of Gabbay et al. (2003). We
begin with the first part. The base case of induction follows by definition of the interpretation I in the mf-model. The step for propositional connectives and quantifiers follows by
the induction hypothesis and equations 1  2 = 1  2 , 1 = 1 , x1 = x1 .
Now let  = [x] and assume that (x) = h, i, then we have:

Ir,n
|= [x]

iff

[x]  (r, n)

(8)

iff

[x]  (r, n + 1)

(9)

iff


Ir,n+1
|= [x]

(Mmf , r, n + 1) |= [x]
(Mmf , r, n) |= [x]

iff
iff

(10)
(11)

Steps (8) and (10) follow by Equation (7). Step (9) is motivated by Lemma 3(i), and
step (11) follows by the induction hypothesis.
Let  = (U0 )[x] and (x) = h, i, then we have:

Ir,n
|= (U0 )[x] iff

iff

(U0 )[x]  (r, n)
0

(12)
0

0

there is n  n such that  [x]  (r, n )
and [x]  (r, n00 ) for all n  n00 < n0

iff

0

there is n  n such that
and


Ir,n
00


Ir,n
0

|=

(13)

0 [x]

00

|= [x] for all n  n < n0
0

iff

there is n  n such that

iff

and (Mmf , r, n00 ) |= [x]
(Mmf , r, n) |= U0 [x]

(Mmf , r, n0 )

(14)
0

|=  [x]
00

for all n  n < n0

(15)

Steps (12) and (14) follow by Equation (7). Step (13) is motivated by Def. 18, and step
(15) follows by the induction hypothesis.
23

fiBelardinelli & Lomuscio

Let  = Ki [x] and (x) = h, i, then we have:

Ir,n
|= Ki [x]

iff
iff

Ki [x]  (r, n)
0

0

0

0

(16)
0

0

for all (r , n ) i, (r, n), [x]  (r , n )

(17)

(r , n ) i,h,i (r, n), Ir0 ,n0 |= [x]
(r0 , n0 ) i,h,i (r, n), (Mmf , r0 , n0 )

iff

for all

iff

for all

iff

(Mmf , r, n)

(18)
|= [x]

(19)

|= Ki [x]

Steps (16) and (18) follow by Equation (7). Step (17) is motivated by Lemma 4(i), and step
(19) follows by the induction hypothesis.
Let  = C[x] and (x) = h, i, then we have:

Ir,n
|= C[x]

iff
iff
iff

C[x]  (r, n)
0

0

0

0

0

0

(20)
0

0

for all (r , n ) reachable from (r, n), [x]  (r , n )
for all (r , n ) reachable from

(r, n), Ir0 ,n0

(21)

|= [x]

(22)

0

(23)

0

iff

for all (r , n ) reachable from (r, n), (M, r , n ) |= [x]

iff

(M, r, n) |= C[x]

Steps (20) and (22) follow by Equation (7). Step (21) is motivated by Lemma 4(ii), and
step (23) follows by the induction hypothesis.
Now we prove the second part of the lemma. All cases are identical to the first part,
except for  = Ki . Suppose that f(r, n) is a -state candidate and ad(K )  ad().
For the implication from left to right, if (r, n) i, (r0 , n0 ) then (r0 , n0 ) is a 0 -type such
that ]i = 0 ]i. Thus, ad(K0 )  ad(K]i )  ad(K Ki )  ad(). So, we can apply
the induction hypothesis. For the implication from right to left, if ad(K Ki )  ad()
then |]i|  ad() and by Lemma 3(ii) there is some ]i-type t such that t i (r, n) and
  t. By Def. 18 there is (r0 , n0 ) such that (r, n) i, (r0 , n0 ) and (r0 , n0 ) = t. Since
ad(K]i ) = ad(K Ki )  ad() we can apply the induction hypothesis.
To complete the proof of Theorem 3, by definition of quasimodel we have that   t for
some t  Tr,n and Tr,n  Cr,n . Therefore,  is satisfied in the mf-model Mmf at point (r, n).
We also remark that if Q validates the formulas K and BF , so does Mmf . This is the case
as, if K and BF belong to every type in every state-candidate in Q, then by Lemma 5 we
have that Mmf validates K and BF as well.
Finally, if Q satisfies perfect recall, or no learning, or synchronicity, or has a unique
initial state, then the mf-model obtained from Q satisfies the corresponding constraints by
construction. We show this fact for perfect recall: if (r, n) i,h,i (r0 , n0 ) and n > 0, then
in particular (r, n) i, (r0 , n0 ). Since Q satisfies perfect recall, either (r, n  1) i, (r0 , n0 ),
or there is k < n0 such that (r, n  1) i, (r0 , k) and for all k 0 , k < k 0  n0 implies
(r, n) i, (r0 , k 0 ). By the definition of i,h,i we obtain that either (r, n  1) i,h,i (r0 , n0 ),
or there is k < n0 such that (r, n  1) i,h,i (r0 , k) and for all k 0 , k < k 0  n0 implies
(r, n) i,h,i (r0 , k 0 ), that is, Mmf satisfies perfect recall as well.
We next show the existence of quasimodels for any monodic .
24

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

5. Dealing with each System
In this section we consider the completeness proof for each system in Theorem 2. In particular, we show that if a monodic formula  is consistent with respect to a system S, then
we can build a quasimodel (or a quasimodel+ in specific cases) for  based on a frame for
S. In the following sections the symbol ` represents provability in the appropriate system
S. We start with some lemmas that are useful for the construction of the quasimodel for
any system.
Lemma 6. (i) For any consistent monodic formula  there is a consistent -state candidate C = hT, T con i such that   t for some t  T .
(ii) Let P = hC, ti be a consistent -point for  such that C = hT, T con i, and let c  con.
Then,
(a) if C  C0 then there exists a -point P0 = hC0 , t0 i such that P  P0 .
(b) if tc  T con and C  C0 then there exists a -point P0 = hC0 , t0 i such that P c P0 .
(c) if 1 U2  t then there is a sequence of -points Pj = hCj , tj i for j  k that
realises 1 U2 , i.e., P = P0  . . .  Pk , 2  tk and 1  tj for j < k.
(d) if 1 U2  tc then there is a sequence of -points Pj = hCj , tj i for j  k that
c-realises 1 U2 , i.e., the sequence realises 1 U2 and P0 c . . . c Pk .
(e) if Ki   t then there is a -point P0 = hC0 , t0 i such that P i P0 and   t0 .
(f ) if Ki   tc then there is a -point P0 = hC0 , t0 i such that P ci P0 and   t0 .
(g) if C  t then there is a sequence of -points Pj = hCj , tj i for j  k such that
P = P0 i0 . . . ik1 Pk and   tk .
(h) if C  tc then there is a sequence of -points Pj = hCj , tj i for j  k such that
P = P0 ci0 . . . cik1 Pk and   tk .
Proof. The proof is similar to the one for Claims 11.75, 11.76 and 12.13 in the work
of Gabbay et al. (2003), but here we consider -state candidates and -points. Let  be
the disjunction of all formulas P for all -points P for . Consider the formula   , which
is obtained by substituting all subformulas of  of the form Ki , C,  or 1 U2 that
are not within the scope of another modal operator with their surrogates. We can check
that   is true on all (non-modal) first-order structures. Since both QKTm and QKTCm
extend first-order logic, by the semantical completeness of first-order logic we have that
` 

(24)

W
(i) Notice that, by the previous remark, `  also for  = {P|P is a -point for } P .
Moreover,  is consistent and by (24) also    is consistent. Therefore, there is a
disjunct P of  such that P   is consistent. So,   t for P = hC, ti.
(a) By (24) and Nec we have `  . So, P   is consistent and there must be a
-point P0 such that P  P0 is also consistent.
(b) The proof is similar to (a).
25

fiBelardinelli & Lomuscio

(c) The proof is by contradiction. Let U be the set of all -points P0 such that
W there exist points Pj = hCj , tj i for j < k and P = P0  . . .  Pk = P0 . Let  = {P0 |P0 U } P0 .
We can show that
`   2
(25)
otherwise, we would have a sequence realising 1 U2 . Moreover, by the definition of
U,
`   
(26)
From (25) we obtain
` G  G2
and together with (25) and (26) we derive
`   (2  G2 )

(27)

Now consider any P1  U such that P  P1 . By (27) we have
`

P1  (2  G2 )

`

P1  G2

`

(P  P1 )  G2

(28)

On the other hand, since 1 U2  t we have
` (P  P1 )  F 2

(29)

but (28) and (29) contradict the fact that P  P1 .
(d) The proof is similar to (c).
(e) First we remark that P  Ki (  ) is consistent. Thus, there exists a -point
P0 = hC0 , t0 i such that P  Ki (P0  ) is consistent. Hence, P i P0 and   t0 .
(f) The proof is similar to (e).
(g) The proof is by contradiction. Let V be the minimal set of -points DWsuch that (i)
P  V ; (ii) if D  V and D i D0 for some i  Ag, then D0  V . Let  = {D|DV } D .
We can show
`
(30)
If (30) did not hold, we would have a sequence as specified in the lemma. Moreover,
by the definition of V ,
`   Ki 
(31)
for all i  Ag. From (30) and (31) we obtain
`   (  E)
and by axiom C2,
`   C
but by definition of P,
` P  C
which contradicts (32).
26

(32)

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

(h) The proof is similar to (g).
By the following result it is always possible to extend the -suitability relation 
between types to -suitability between points.
Lemma 7. Suppose that t and t0 are -types such that t  t0 , then there are -points
P = hC, ti and P0 = hC0 , t0 i such that P  P0 . In particular, for any c  con, there are
-points P = hC, ti and P0 = hC0 , t0 i such that P c P0 .
W
Proof. By Lemma 6 we have that `  and `  for  = {P|P is a -point for } P .
Since t  t0 , then   t  (  t0 ) is consistent. Thus, there must be -points P and
P0 such that P  t  (P0  t0 ) is consistent. Then, it is the case that P = hC, ti and
P0 = hC0 , t0 i for some -state candidates C and C0 . As a result, P  P0 . The second part of
the lemma is proved similarly to the first by observing that if t  t0 then t[x/c]  t[x/c]
is consistent. Hence, also   t[x/c]  (  t0 [x/c]) is consistent. Thus, there must be
-points P and P0 such that P  t[x/c]  (P0  t0 [x/c]) is consistent. So, tc  T con and
t0c  T 0con , that is, P c P0 .
According to Lemma 7 we can always extend a possibly infinite sequence of -types t0 
t1  . . . to a possibly infinite sequence of -points P0  P1  . . . such that Pk = hCk , tk i.
Definition 20. Let a -sequence be a possibly infinite sequence C0  C1  . . . of -state
candidates. A -sequence is acceptable if for all k  0,
(i) if 1 U2  tk , for tk  Ck , then 1 U2 is realised in a sequence of -points Pj =
hCj , tj i for k  j  n;
(ii) if 1 U2  tck , for tck  Ck , then 1 U2 is c-realised in a sequence of -points Pj =
hCj , tj i for k  j  n.
The following lemma entails the completeness result.
Lemma 8. Every finite -sequence of -state candidates can be extended to an infinite
acceptable -sequence.
Proof. Assume that C0  . . .  Cn is a finite -sequence  and 1 U2  tk  Ck for
some k  n. Either 1 U2 is realised in C0  . . .  Cn , or by Lemma 6(ii)(c) we can extend
 to a -sequence 0 that realises 1 U2 . This procedure is repeated for all formulas of
the form 1 U2 appearing at some point in the -sequence. Thus, we obtain a (possibly
infinite) -sequence C0  C1  . . . such that property (i) in Definition 20 is satisfied. To
also satisfy property (ii) we reason similarly by using Lemma 6(ii)(d) instead.
Now let X be a new object, a sequence X, . . . , X, Cn , Cn+1 , . . . is acceptable from n if
it starts with n copies of X and Cn , Cn+1 , . . . is an acceptable -sequence. We can now
consider the completeness proof for each single class of QIS.
uis
sync,uis
5.1 The Classes QIS m , QIS sync
m , QIS m and QIS m

We start with the completeness proof for the systems QKTm and QKTCm , where there is
no interaction between temporal and epistemic operators.
27

fiBelardinelli & Lomuscio

If a monodic formula  is consistent, then by Lemma 6(i) there is a consistent -state
candidate C = hT, T con i such that   t for some type t  T . Also, by Lemma 8 we
can extend C to an infinite acceptable -sequence. So, the set of infinite acceptable sequences is non-empty. Let R be the set of all -sequences acceptable from n, for some
n  N. For r  R, k  N, define the partial function f on R  N as f(r, k) = Ck if r is
the -sequence X, . . . , X, Cn , Cn+1 , . . . acceptable from n and k  n, undefined otherwise.
Finally, let O be the set of all functions  associating every (r, n)  Dom(f) to a type
(r, n)  Tr,n such that
(A) (r, n)  (r, n + 1);
(B) U  (r, n) iff there is n0  n such that   (r, n0 ) and   (r, n00 ) for all
n  n00 < n0 ;
(C) if (r, n) i t are -types, then for some (r0 , n), (r0 , n) = t;
(D) if C  (r, n) then there exists a point (r0 , n) and a sequence of -points Pj =
hCj , tj i for j  k, such that hf(r, n), (r, n)i = P0 i0 . . . ik1 Pk ,   tk , f(r0 , n) =
Ck and (r0 , n) = tk .
We show that O is non-empty. Condition (A) is guaranteed by Lemma 6(ii)(a), and
condition (B) by the fact that r is an acceptable -sequence. As regards (C) we remark
that if (r, n) i t then we can find a consistent -point P = hC, ti by reasoning similarly
as in Lemma 6(i), and by Lemma 8, C can be extended to a -sequence r0 acceptable
from n. Finally, set (r0 , n) = t. As to (D) we observe that if C  (r, n) then by
Lemma 6(ii)(g) there exists a sequence of -points Pj = hCj , tj i for j  k, such that
hf(r, n), (r, n)i = P0 i0 . . . ik1 Pk and   tk . Now, Ck can be extended to a sequence r0 acceptable from n such that (r0 , n) = tk . Finally, for i  Ag,   O, define
(r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ) and n = n0 .
Lemma 9. The tuple hR, O, {i, }iAg,O , fi is a synchronous frame.
Proof. We have previously shown that R and O are non-empty. Also, each i, is an
equivalence relation by definition, and f satisfies the conditions in Definition 17. Further,
the frame is synchronous by definition of i, .
Now we can prove the main result.
Lemma 10. The tuple hR, O, {i, }iAg,O , fi is a synchronous quasimodel for  and it
validates the formulas K and BF .
Proof. By the previous lemma, it remains to prove that the functions in O are objects.
Conditions (1), (3), (4) and (5) on objects are safisfied by remarks (A)-(D) above. Condition (2) is satisfied by the definition of i, . Furthermore, conditions (1), (2) and (3) on
quasimodels are satisfied by the definitions of R, f and i, . As regards (4), we can extend
the function (r, n) = t to all Dom(f) by using Lemma 6(ii)(a), (c), (e) and (g). As to (5)
the function c such that c (r, n) = tc is an object by Lemma 6(ii)(b), (d), (f) and (h).
Finally, Q validates both the formulas K and BF , as all t  C, for all C  Q, are consistent
with QKTm (resp. QKTCm ).
28

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

The completeness of QKTm and QKTCm with respect to the classes QIS m and QIS sync
m
of quantified interpreted systems directly follows from Lemma 10 together with Theorem 3.
Thus, we obtain the following item in Theorem 2.
Theorem 4 (Completeness). The system QKTm (resp. QKTCm ) is complete w.r.t. the
classes QIS m and QIS sync
of QIS.
m
sync,uis
To prove completeness for QIS uis
we use the next result, which is an
m and QIS m
extension from the propositional case (Halpern et al., 2004).
1 ) is satisfiable in
Remark 2. Suppose X is a subset of {pr, sync}. If   L1m (resp. LCm
X
X,uis
QIS m then it is also satisfiable in QIS m .

Thus, the system QKTm (resp. QKTCm ) is also complete w.r.t. the classes QIS uis
m and
sync,uis
QIS m
of QIS.
pr,uis
5.2 The Classes QIS pr
m and QIS m

We now begin to investigate systems where interactions between time and knowledge are
pr,uis
present. The completeness proof for QKT1m with respect to QIS pr
relies on
m and QIS m
the following lemma.
Lemma 11. For all -points P1 = hC1 , t1 i, P2 = hC2 , t2 i and ]i-type t02 , if P1  P2 and
t2 i t02 then there is a ]i-point P02 = hC02 , t02 i and a -sequence S1  . . .  Sn = P02
of ]i-points such that Sk = hDk , sk i, s1 i t1 and sk i t2 for 1 < k  n. Further, if
for k  n.
P1 c P2 then sck  TDcon
k
Proof. We extend the proof of Halpern et al. (2004, Lemma 5.5) to deal with state
candidates and monodic friendly Kripke frames. By the cited result we can prove that if
t1  t2 and t2 i t02 then there is a sequence of ]i-types s1  . . .  sn = t02 such that
s1 i t1 and sk i t2 for 1 < k  n. Now by Lemma 7 we can extend this sequence of
]i-types to a sequence of ]i-points S1  . . .  Sn such that Sk = hDk , sk i and the
lemmas statement is satisfied. In particular, if P1 c P2 also by Lemma 7 we can assume
without loss of generality that sck  TDcon
for k  n.
k
For any consistent   L1m we define a quasimodel+ for  to establish the completeness
of QKT1m with respect to QIS pr
m . Let R be the set of all acceptable -sequences, and define
f such that f(r, k) = Ck if r is the -sequence C0 , C1 , . . . . Finally, let O be the set of all
functions  associating every (r, n)  Dom(f) to a type (r, n)  Tr,n such that conditions
(A) and (B) above are satisfied and
(C) if (r, n) is a -type, t is a ]i-type and (r, n) i t, then for some (r0 , n0 ), (r0 , n0 ) = t.
(E) if (r, n) i (r0 , n0 ) and n > 0 then either (a) (r, n  1) i (r0 , n0 ) or (b) there is
k < n0 such that (r, n  1) i (r0 , k) and for all k 0 , k < k 0  n0 implies (r, n) i
(r0 , k 0 ).
Finally, for i  Ag,   O, we define (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ).
The following lemma shows that the set O is non-empty. In particular, conditions (C)
and (E) are satisfied by the functions in O.
29

fiBelardinelli & Lomuscio

Lemma 12. The set O of functions that satisfies conditions (A), (B), (C) and (E) is
non-empty.
Proof. Conditions (A) and (B) follow respectively from Lemma 6(ii)(a) and the fact
that r is an acceptable -sequence. As regards (C) and (E), the proof proceeds by induction
on n. The result for n = 0 is immediate, as we can take r0 to be an acceptable -sequence
starting from C such that t  C. Further, we define (r0 , 0) = t. Thus, (r0 , 0) i (r, 0) and
both (C) and (E) are satisfied.
Now suppose that n > 0 and the result holds for n  1. Since f(r, n  1)  f(r, n) and
(r, n) i t, it follows by Lemma 11 that there is a ]i-point P = hC, ti and a -sequence of
]i-points P0  S0  . . .  Sk = P such that Sk0 = hDk0 , sk0 i and sk0 i (r, n) for k 0  k.
By the induction hypothesis, there exists for every ]i-type s such that (r, n1) i s a point
(r0 , n0 ) and (r0 , n0 ) = s. In case (a), we take s = t; then we have that (r, n  1) i (r0 , n0 )
for (r0 , n0 ) = t. Thus, it is also the case that (r, n) i (r0 , n0 ). In case (b), we take s = t0 .
Hence, (r, n  1) i (r0 , n0 ) for (r0 , n0 ) = t0 . Now suppose that r0 is derived from the
acceptable -sequence v0 , v1 , . . .. Let r00 be the run derived from an acceptable sequence
with initial segment v0 , . . . , vn0 , D0 , . . . , Dk . Again, such a run exists by Lemma 8. We
define (r00 , n0 + k + 1) = sk = t. Thus, we have (r, n) i (r00 , n0 + k + 1) and both (C)
and (E) are satisfied.
We can now prove the following lemma.
Lemma 13. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies perfect recall.
Proof. By Lemmas 6(i), 8 and 12 the sets R and O are non-empty. Also, f satisfies the
conditions in Definition 17. Finally, each i, is an equivalence relation by definition, and
it satisfies perfect recall by definition of the functions  in O.
Finally, we prove the main result in this section.
Lemma 14. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  with perfect recall
and it validates the formulas K and BF .
Proof. By the previous lemma hR, O, {i, }iAg,O , fi is a frame satisfying perfect
recall; so we are left to prove that the functions in O are objects+ . Conditions (1)-(4) on
objects+ are safisfied by remarks (A)-(E) and the definition of i, . Furthermore, conditions
(1), (2) and (3) on quasimodels+ are satisfied by the definitions of R, f and i, . As
regards (4), it follows from Lemma 11. Finally, condition (5) on quasimodels+ holds by
Lemma 6(ii)(b), (d), (f) and (h) and Lemma 11. Finally, Q validates both the formulas K
and BF , as all t  C, for all C  Q, are consistent with QKTm .
This completes the proof for QIS pr
m . Thus, we obtain the following item in Theorem 2.
Theorem 5 (Completeness). The system QKT1m is complete w.r.t. the class QIS pr
m of QIS.
The completeness of QKT1m with respect to QIS pr,uis
follows by Remark 2.
m
5.3 The Classes QIS pr,sync
and QIS pr,sync,uis
m
m
The completeness of QKT2m with respect to QIS pr,sync
is proved similarly to the previous
m
case by using the following lemma instead of Lemma 11.
30

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Lemma 15. For -state candidates C1 , C2 and ]i-state candidate C02 , there is a ]i-state
candidate C01 such that
 if C1  C2 and C2 i C02 then C1 i C01 and C01  C02 .
 for c  con, for P1 = hC1 , t1 i, P2 = hC2 , t2 i and P02 = hC02 , t02 i, if P1 c P2 and
P2 ci P02 then for P01 = hC01 , t01 i, P1 ci P01 and P01 c P02 .
Proof. if C1  C2 and C2 i C02 then there exist t1  C1 , t2  C2 and t02  C02 such
that t1  t2 and t2 i t02 . Moreover, without loss of generality we can assume that for
0con . Following the proof by Halpern et
some c  con, tc1  T1con , tc2  T2con and t0c
2  T2
0
al. (2004, Lemma 5.8) we can find a ]i-type t1 such that t1 i t01 and t01  t02 . Define T10
0
0
0con i is a
as the set of all such t01 and T10con as the set of t0c
1 . We can show that C1 = hT1 , T1
0
0
0
consistent ]i-state candidate such that C1 i C1 , C1  C2 , and for c  con, P1 ci P01
and P01 c P02 .
For any consistent   L1m we define a quasimodel+ for  to establish the complete. Let R be the set of all -sequences acceptness of QKT2m with respect to QIS pr,sync
m
able from n, for some n  N, and define f such that f(r, k) = Ck if r is the -sequence
X, . . . , X, Cn , Cn+1 , . . . acceptable from n and k  n, and undefined otherwise. Finally, let
O be the set of all functions  associating every (r, n)  Dom(f) to a type (r, n)  Tr,n
such that conditions (A) and (B) in Section 5.1 are satisfied and
(C) if (r, n) is a -type, t is a ]i-type and (r, n) i t, then for some (r0 , n), (r0 , n) = t.
(F) if (r, n) i (r0 , n) and n > 0 then (r, n  1) i (r0 , n  1).
Finally, for i  Ag,   O, we define (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ) and n = n0 .
The following remark shows that the set O is non-empty. In particular, conditions (C)
and (F) are satisfied by the functions in O.
Lemma 16. The set O of functions that satisfies condition (A), (B), (C) and (F) is
non-empty.
Proof. Conditions (A) and (B) follow from Lemma 6(ii)(a) and the fact that r is an
acceptable -sequence. As regards (C) and (F), assume that (r, n)  f(r, n) is a -type,
t is a ]i-type and (r, n) i t. For each s  f(r, n) different from (r, n) consider the set
U = { | Ki   s}. We can check that U is consistent and it can be extended to a ]i-type s0
such that s i s0 . Now define T 0 as the collection of all these s0 . Further, for each sc  T con ,
we set s0c  T 0con . Let C0 = hT 0 , T 0con i. Clearly, C i C0 and hC, si ci hC0 , s0 i. By Lemma 15
we can construct a -sequence C0  . . .  Cn such that Cn = C0 and f(r, k) i Ck for
k  n. By Lemma 8 we can extend this -sequence to an infinite acceptable -sequence
r0 . In particular, the function  can be extended so that for k  n, (r, k) i (r0 , k) and
(r0 , n) = t. Thus, both (C) and (F) are satisfied.
We can now show the following lemma.
Lemma 17. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies perfect recall and
synchronicity.
31

fiBelardinelli & Lomuscio

Proof. By Lemmas 6(i), 8 and 16 the sets R and O are non-empty. Also, f satisfies the
conditions in Definition 17. Finally, each i, is an equivalence relation by definition, and
it satisfies perfect recall and synchronicity by definition of the functions in O.
Now we prove the main result.
Lemma 18. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  with perfect recall
and synchronicity, and it validates the formulas K and BF .
Proof. By the previous lemma hR, O, {i, }iAg,O , fi is a frame satisfying perfect
recall and synchronicity; so we are left to prove that the functions in O are objects+ .
Conditions (1)-(4) on objects+ are safisfied by the remarks (A)-(F) and the definition
of i, . Furthermore, conditions (1), (2) and (3) on quasimodels+ are satisfied by the
definitions of R, f and i, . As regards condition (4), we can make use of Lemma 15 to
show that it holds. Additionally, (5) holds by Lemma 6(ii)(b), (d), (f) and (h) and Lemma
15. Finally, Q validates both the formulas K and BF , as all t  C, for all C  Q, are
consistent with QKTm .
This completes the proof for QKT2m . Thus, we obtain the following item in Theorem 2.
Theorem 6 (Completeness). The system QKT2m is complete w.r.t. the class QIS pr,sync
of
m
QIS.
follows again by Remark 2.
The completeness of QKT2m with respect to QIS pr,sync,uis
m
5.4 The Class QIS nl
m
First, we give the following definitions, which will be used in the completeness proof.
Definition 21. If t is a -type, then t,i is the conjunction of all -types t0 such that t i t0 .
Similarly, if P is a -point, then P,i is the set of -points P0 such that P i P0 .
Definition 22. Two sequences of types  and 0 are i -concordant if there is some n  N
(or n may be ) and non-empty consecutive intervals 1 , . . . , n of  and 01 , . . . , 0n of 0
such that for all s  j and s0  0j we have s i s0 for j  n.
Two sequences  and 0 of state candidates are i -concordant if for all t  C, for either
C   or C  0 , there are two sequences  and 0 of types in  and 0 respectively that
are i -concordant.
To prove the completeness of QKT3m with respect to QIS nl
m we need the following lemma,
which is dual to Lemma 11.
Lemma 19. For all -points P1 = hC1 , t1 i, P2 = hC2 , t2 i and ]i-type t01 , if P1  P2 and
t1 i t01 then there exists a ]i-point P01 = hC01 , t01 i and a -sequence P01 = S1  . . .  Sn
of ]i-points such that Sk = hDk , sk i, sk i t1 for k < n, and t2 i sn . Further, if P1 c P2
then sck  TDcon
for k  n.
k
Proof. By adapting the result of Halpern et al. (2004, Lemma 5.11) to types we can
prove that if t1  t2 and t1 i t01 then there is a sequence of ]i-types t01 = s0  . . .  sn
such that sk i t1 for k < n and sn i t2 . Now by Lemma 7 we can extend this sequence
of ]i-types to a sequence of ]i-points S1  . . .  Sn such that Sk = hDk , sk i. So, the
32

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

statement of the lemma is satisfied. In particular, if P1 c P2 then by Lemma 7 we can
assume without loss of generality that sck  TDcon
for k  n.
k
As pointed out by Halpern et al. (2004), Lemma 19 is not sufficient to construct a
quasimodel+ that satisfies no learning. In fact, given a -sequence  = C0 , C1 , . . . of state candidates and a ]i-type t00 such that t0 i t00 for t0  C0 , by Lemma 19 we can find a
-sequence 0 = C00 , C01 , . . . such that t00  C00 and no learning is satisfied. However, it does
not follow from the acceptability of  that 0 is also acceptable. So, as in the propositional
case, we have to work with trees of state candidates. Hereafter we extend the definitions
given by Halpern et al. (2004) to be able to deal with points and monodic friendly Kripke
models.
Definition 23. Let k  ad(). A k-tree of state candidates for  is a set  of -state
candidates for  with ||  k that contains a unique -state candidate, i.e., the root, and for
every -point t in some C  ,
 if t0 is a ]i-type such that t i t0 and |]i|  k then there is some ]i-state candidate
C0   such that t0  C0 ;
 if  = 0 ]i then there is a 0 -state candidate C0   and a 0 -type t0  C0 such that
t i t0 .
Similarly, we define a k-tree of points for  as a set  of -points for  with ||  k that
contains a unique -point, and for every -point P = hC, ti  ,
 if t0 is a ]i-type such that t i t0 and |]i|  k, then there is some ]i-point P0 =
hC0 , t0 i  ;
 if  = 0 ]i then there is a 0 -point P0 = hC0 , t0 i   such that t i t0 .
Intuitively, a k-tree is a view of the epistemic state of our quasimodel from a particular
type t, up to k steps from t. We now extend the -suitability relation  to k-trees.
Definition 24. Let  and 0 be k-trees of state candidates for . We say that  f 0
whenever f is a function associating with each -state candidate C   and each -type t  C
finite -sequences of -state candidates in   0 and -types such that:
1. if f (C) = C0  . . .  Ck then (a) C = C0 and (b) Cj   for j < k and Ck  0 .
Similarly, if f (t) = t0  . . .  tk then (a) t = t0 and (b) tj  Cj for j < k and
t k  Ck .
2. Let t  C and t0  C0 for some C, C0  . If t i t0 then f (t) and f (t0 ) are i concordant;
3. for at least one C   the sequence f (C) has a length of at least 2.
Further, let  and 0 be k-trees of points for . We say that  f 0 whenever f is a
function associating with each -point P   a finite -sequence of -points in   0 such
that:
1. if f (P) = P0  . . .  Pk then (a) P = P0 and (b) Pj   for j < k and Pk  0 ;
33

fiBelardinelli & Lomuscio

2. Let P = hC, ti and P0 = hC0 , t0 i be in . If t i t0 then f (t) and f (t0 ) are i -concordant;
3. for at least one P   the sequence f (P) has a length of at least 2.
Finally, for any constant c  con, we say that  cf 0 whenever  f 0 and f (P) =
P0 c . . . c Pk .
Notice that given a k-tree  of state candidates with root C and t  C, we can obtain a
k-tree  of points such that P0 = hC0 , t0 i   iff C0  . Also, if , 0 are k-tree of state
candidates and  f 0 , then we also have  f 0 where  and 0 are k-trees of points
based on  and 0 respectively.
We now show how to obtain acceptable sequences of state candidates from sequences
of trees. Given two sequences of -state candidates  = C0 , . . . , Ck and  = C00 , . . ., where
 is finite, the fusion    is defined as C0 , . . . , Ck1 , C00 , . . . only if Ck = C00 . Further,
given an infinite sequence  = 0 f0 1 f1 . . . of k-trees, we say that a sequence  of
-state candidates is compatible with  if there exists some h  N and -state candidates
Ch , Ch+1 , . . ., with Cj  j for j  h, such that  = fh (Ch )  fh+1 (Ch+1 )  . . .. The sequence
 is acceptable if every -sequence compatible with  is infinite and acceptable.
The basic idea of the completeness proof is to define the quasimodel+ starting from an
acceptable sequence . Next we introduce some definitions and lemmas that are essential
for the completeness proof.
Given a k-tree  and a -point P   we inductively define the formula tree,P that
describes the k-tree  from the viewpoint of P.
Definition 25. If P is a -point, then tree,P ::= P . If P is a 0 ]i-point with 0 6= 0 ]i
then
^
tree,P = P 
Ki tree,P0
{0 point P0 |t0 i t}

If  and 0 are k-trees, P   and P0  0 , then we write (, P) + (0 , P0 ) if there is a
sequence of k-trees 0 , . . . , l and functions f0 , . . . , fl1 such that (a)  = 0 f0 . . . fl1
l = 0 ; (b) fj (P) = P for j  l  2 and fl1 (P) = (P, P0 ). Similarly, (, P) c+ (0 , P0 )
if (, P) + (0 , P0 ) and (a)  = 0 cf0 . . . cfl1 l = 0 .
We prove the following lemma, which extends a result by Halpern et al. (2004, Lemma 5.12)
to points.
Lemma 20. Suppose  is a k-tree of points and P = hC, ti   is a -point with || = k,
(a) If t0 is a -type and tree,P  (t0  ) is consistent, then there is a k-tree 0 and a
-point P0 = hC0 , t0 i  0 such that (, P) + (0 , P0 ) and tree0 ,P0   is consistent.
Further, if tc  T con then (, P) c+ (0 , P0 ).
W
(b) ` tree,P   {(0 ,P0 )|(,P)+ (0 ,P0 )} tree0 ,P0
(c) if tree,P  U 0 is consistent, then there is a sequence 0 , . . . , l of k-trees and
points P0 , . . . , Pl such that (i) Pj  j for j  l; (ii) (0 , P0 ) = (, P); (iii)
(j , Pj ) + (j+1 , Pj+1 ) for j < l; (iv) treej ,Pj   is consistent for j < l; (v)
treel ,Pl   0 is consistent. Further, if tc  T con then (iii) (j , Pj ) c+ (j+1 , Pj+1 )
for j < l.
34

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Proof. We proceed by induction on k. The case for k = 0 is immediate using standard
arguments as tree,P is just P .
Assume that k > 0 and  = 0 ]i for  6= 0 . We first prove part (a) for  = Ki  0 , then
part (b), then the general case for (a), and finally (c).
As regards part (a) for  = Ki  0 , note that tree,P  (t0  Ki  0 ) implies that
tree,P  Ki P,i UKi ( 0  t0 ,i )
By the definition of k-tree there is a 0 -point P   such that t i t . Let  be the
(k  1)-tree consisting of all  -points in  for | |  k  1. By the axiom KT3 also
tree ,P  Ki P,i UKi ( 0  t0 ,i ) is consistent, and by part (c) there is a sequence 0 , . . . , l
of (k  1)-trees and points P0 , . . . , Pl such that (i) Pj  j for j  l; (ii) (0 , P0 ) =
( , P ); (iii) (j , Pj ) + (j+1 , Pj+1 ) for j < l; (iv) treej ,Pj  Ki P,i is consistent for
j < l; (v) treel ,Pl  Ki ( 0  t0 ,i ) is consistent.
Again, by the definition of the relation + there is a sequence of (k 1)-trees 0 , . . . , m
and functions f0 , . . . , fm1 such that (a)  = 0 = 0 f0 . . . fm1 m = l . Moreover,
there are (k 1)-points u0 , . . . , um such that u0 = P , um = Pl , and for j < m, uj = Pj 0 for
some j 0  j, and if uj = uj+1 then fj (uj ) = uj , while if uj 6= uj+1 then fj (uj ) = (uj , uj+1 ).
We now show how to define the k-tree 0j extending j for j < m. By (iv) above
uj  Ki P,i is consistent for j < m, and we have that uj i P. So P  0j . Similarly,
um  Ki t0 ,i is consistent; so there exists P0 = hC0 , t0 i such that P0  0m . Further, we can
saturate each 0j so that the conditions on k-trees are satisfied and in particular 00 = . We
now show how to construct fj0 for j < m. For each point S0 = hD0 , s0 i  0j \ j there must
exist a point S = hD, si  j and an agent j 0  Ag such that s j 0 s0 . From Lemma 19 it
follows that there exists a sequence S0 starting with S0 that is j 0 -concordant with fj (S).
Moreover, we can take Pj = (P) for j < m  1, and Pm1 = (P, P0 ). We define fj0 such
that it agrees with fj on j , and for S0  0j \ j we have fj0 (S0 ) = S0 .
Notice that 00 =  by construction. If m > 0 it follows immediately from the definition
that (, P) + (m , P0 ) and that treem ,P0  Ki  0 is consistent. If m = 0 we can easily
check that we have P0   as t i t0 . Since we also have t i t, it follows that t i t0 . We
define f so that f (u) = u for every u 6= P and f (P) = (P, P0 ). Then (, P) f (, P0 ).
Since also P  P0 we have (, P) + (, P0 ).
The second part of (a) follows by a similar line of reasoning.
To prove part (b), by contradiction we assume that
_
0 tree,P  
tree0 ,P0
{(0 ,P0 )|(,P)+ (0 ,P0 )}

V
Then tree,P   {(0 ,P0 )|(,P)+ (0 ,P0 )} tree0 ,P0 is consistent. By temporal reasoning
there must be some point u such that
^
tree,P  (u 
tree0 ,P0 )
(33)
{(0 ,P0 )|(,P)+ (0 ,P0 )}

W
is consistent. Note that tree0 ,P0 is equivalent to P0  {0 point P 0 |t i t0 } Ki tree0 ,P .
Thus, the consistency of (33) implies that for each tree 0 such that (, P) + (0 , u) there
35

fiBelardinelli & Lomuscio

exists a 0 -point P0 = hC0 , t0 i such that t0 i tu and
^
tree,P  (u  Ki (

tree0 ,P0 ))

(34)

{0 |(,P)+ (0 ,P0 )}



+


is consistent. By part (a)
Vthere exists a k tree  and P   such that (, P)  ( , P )
and tree ,P u Ki ( {0 |(,P)+ (0 ,P 0 )} tree0 ,P0 ) is consistent. But this means that

P = u. Thus we have a contradiction, since tree ,u  Ki tree ,P is inconsistent.
The general case for (a) follows from (b). Part (c) also follows from (b).
The following lemma is the correspondent of Lemma 8 for k-trees.

Lemma 21. If   L1m is consistent with QKT3m , then there exists an acceptable sequence
 of ad()-trees of state candidates such that  belongs to the root of the first tree.
Proof. As in Lemma 8 the key part of this proof consists of showing that, given a finite
sequence 0 f0 . . . fl1 l of d-trees of points and a -point P = hC, ti  l such that
U 0  t (resp.   t), by Lemmas 19 and 20 we can extend the sequence of trees to
satisfy acceptability. Specifically, suppose that U 0  t. Let  include P and the 0 -points
P0 = hC0 , t0 i  l with |0 |  k = ||. Note that  is a k-tree. Further, by Lemma 20 we
can find a sequence 0 , . . . , n of k-trees and points P0 , . . . , Pn such that (i) Pj  j for
j  n; (ii) (0 , P0 ) = (, P); (iii) (j , Pj ) + (j+1 , Pj+1 ) for j < l; (iv) treej ,Pj  
is consistent for j < l; and (v) treen ,Pl   0 is consistent. By using Lemma 19 we can
extend this to a sequence of ad()-trees starting with l that satisfies U 0 as in the proof
of Lemma 20(a). For   t the argument is similar. Since  is consistent, there must be
some tree  with root C such that   t for some t  C; we can then extend  as above to
complete the proof.
For any consistent   L1m we define a quasimodel+ for  to establish the completeness
of QKT3m with respect to QIS nl
m . Let R consist of all acceptable -sequences compatible
with the ad()-tree , while the function f is given by f(r, k) = Ck if r is the acceptable
-sequence C0 , C1 , . . .. Further, let O be the set of functions  associating every (r, n) 
Dom(f) to a type (r, n)  Tr,n such that conditions (A), (B) and (C) given previously are
satisfied and the following holds:
(G) if (r, n) i (r0 , n0 ) then either (r, n + 1) i (r0 , n0 ) or there exists k > n0 such that
(r, n + 1) i (r0 , k) and for all k 0 , k > k 0  n0 implies (r, n) i (r0 , k 0 ).
Finally, for i  Ag,   O, (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ).
As in the previous cases we have the following.
Lemma 22. The set O of functions that satisfies conditions (A), (B), (C) and (G) is
non-empty.
Proof. Conditions (A) and (B) are guaranteed by Lemma 6(ii) and by the fact that r
is an acceptable -sequence respectively. As regards (C) and (G), assume that (r, n) is
a -type, t is a ]i-type and (r, n) i t. By using the proofs of Lemmas 20 and 19 we can
find an acceptable -sequence r0 compatible with the d-tree  such that t  f(r0 , 0) and
(G) is satisfied.
We can now show the following lemma.
36

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Lemma 23. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies no learning.
Proof. By Lemmas 6(i), 21 and 22 the sets R and O are non-empty. Also, f satisfies
the conditions in Definition 17. Further, each i, is an equivalence relation by definition.
Finally, the no learning condition is satisfied by definition of the functions in O.
Lemma 24. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  that satisfies no
learning and validates the formulas K and BF .
Proof. By the previous lemma hR, O, {i, }iAg,O , fi is a frame satisfying no learning;
so we are left to prove that the functions in O are objects+ . Conditions (1)-(4) on objects+
are safisfied by remarks (A)-(G) and the definition of i, . Furthermore, conditions (1), (2)
and (3) on quasimodels+ are satisfied by the definitions of R, f and i, . As regards (4)
we use Lemma 19 to show that it holds. Finally, (5) holds by Lemma 6(ii)(b), (d), (f) and
(h) and Lemma 19. Finally, Q validates both K and BF , as all t  C, for all C  Q, are
consistent with QKTm .
This completes the proof for QKT3m . Thus, we obtain the following item in Theorem 2.
Theorem 7 (Completeness). The system QKT3m is complete w.r.t. the class QIS nl
m of QIS.
5.5 The Class QIS nl,sync
m
To show that QKT4m is a complete axiomatisation for QIS nl,sync
, analogously to Lemma 15,
m
we need the following.
Lemma 25. For -state candidate C1 , C2 and ]i-state candidate C01 there exists a ]i-state
candidate C02 such that
 if C1  C2 and C1 i C01 then C01  C02 and C2 i C02 .
 for all c  con, for P1 = hC1 , t1 i, P2 = hC2 , t2 i and P01 = hC01 , t01 i, if P1 c P2 and
P1 ci P01 then P01 c P02 and P2 ci P02 .
Proof. The proof is similar to Lemma 15. If C1  C2 and C1 i C01 then there exist
t1  C1 , t2  C2 and t01  C01 such that t1  t2 and t1 i t01 . Moreover, without loss of
0con .
generality, we can assume that for some c  con, tc1  T1con , tc2  T2con and t0c
1  T1
By adapting the proof of Halpern et al. (2004, Lemma 5.18) we can find a ]i-type t02 such
that t2 i t02 and t01  t02 . We define T20 as the set of all such t02 and T10con as the set of t0c
2.
Clearly, C02 = hT20 , T20con i is a consistent ]i-state candidate such that C2 i C02 , C01  C02 ,
and for c  con, P2 ci P02 and P01 c P02 .
For systems including the axiom KT4m we can define a synchronous version of the relation
 between k-trees.
Definition 26. If  and 0 are k-trees of state candidates for  then  sync
0 iff
f
0
 f  and for all C  , f (C) has exactly a length of 2. Similarly, if  and 0 are
k-trees of points for  then  sync
0 iff  f 0 and for all P  , f (P) has exactly a
f
length of 2.
37

fiBelardinelli & Lomuscio

For any c  con, the relation cf sync is defined similarly. We define a sync-acceptable
sequence of trees as an acceptable sequence where the relation  is substituted by the
relation sync , that is, the sequence  is acceptable if every sync -sequence compatible with
 is infinite and acceptable. Similarly, given the relations + and c+ for c  con, the
definitions of sync,+ and c sync,+ are straightforward. We now state the following result,
which is a simplified version of Lemma 20. The proof is analogous to that of Lemma 20, in
which Lemma 25 is used instead of Lemma 19.
Lemma 26. Let  be a k-tree of points and P   is a -point with || = k,
(a) If t0 is a -type and tree,P  (t0  ) is consistent, then there exists a k-tree 0
and a -point P0 = hC0 , t0 i  0 such that (, P) sync,+ (0 , P0 ) and tree0 ,P0   is
consistent. Further, if tc  T con then (, P) c sync,+ (0 , P0 ).
W
(b) ` tree,P   {(0 ,P0 )|(,P)sync,+ (0 ,P0 )} tree0 ,P0
(c) if tree,P  U 0 is consistent, then there exists a sequence 0 , . . . , l of k-trees and
points P0 , . . . , Pl such that (i) Pj  j for j  l; (ii) (0 , P0 ) = (, P); (iii)
(j , Pj ) sync,+ (j+1 , Pj+1 ) for j < l; (iv) treej ,Pj   is consistent for j < l;
and (v) treel ,Pl   0 is consistent. Further, if tc  T con then (iii) (j , Pj ) c sync,+
(j+1 , Pj+1 ) for j < l.
Further, we make use of Lemma 26 to adapt Lemma 21 and obtain the following result.
Lemma 27. If   L1m is consistent with QKT4m , then there exists a sync-acceptable
sequence  of ad()-trees of state candidates such that  belongs to the root of the first tree.
For any consistent   L1m we define a quasimodel+ for  to establish the completeness of QKT4m with respect to QIS nl,sync
. Let X be a new object, a sequence
m
X, . . . , X, Cn , Cn+1 , . . . is sync-acceptable from n if it starts with n copies of X and Cn , Cn+1 , . . .
is a sync-acceptable -sequence compatible with the ad()-tree . Let R consist of all sequences sync-acceptable from n, for some n  N. The function f is defined as f(r, k) = Ck if
r is the -sequence X, . . . , X, Cn , Cn+1 , . . . sync-acceptable from n and k  n; f(r, k) is undefined otherwise. Further, Let O be the set of functions  associating every (r, n)  Dom(f)
to a type (r, n)  Tr,n such that conditions (A), (B) and (C) are satisfied and the following
holds:
(H) if (r, n) i (r0 , n0 ) then (r, n + 1) i (r0 , n0 + 1).
Finally, for i  Ag,   O, (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ) and n = n0 .
Similarly to Lemma 22, we can show the following.
Lemma 28. The set O of functions that satisfies conditions (A), (B), (C) and (H) above
is non-empty.
Moreover, the following result follows from Lemmas 6(i), 27 and 28.
Lemma 29. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies no learning and
synchronicity.
38

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Finally, by adapting the proof for Lemma 24 we can state the following result.
Lemma 30. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  with no learning
and synchronicity, and it validates the formulas K and BF .
This completes the proof for QKT4m . Thus, we obtain the following item in Theorem 2.
Theorem 8 (Completeness). The system QKT4m is complete w.r.t. the class QIS nl,sync
of
m
QIS.
5.6 The Classes QIS nl,pr
and QIS nl,pr,uis
m
1
To obtain the completeness proof for QIS nl,pr
we combine the results shown for QIS pr
m
m and
nl
QIS m .
2,3
If   L1m is consistent with QKTm
then by Lemma 21 there exists an acceptable
sequence  of ad()-trees such that  belongs to the root of the first tree. Let R be the
set of all acceptable -sequences that have a suffix that is compatible with , while the
function f is defined as in Section 5.2. Further, O is the set of all functions  associating
every (r, n)  Dom(f) to a type (r, n)  Tr,n that satisfies the conditions (A), (B), (C),
(E) and (G). Finally, for i  Ag,   O, (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ).
Lemma 31. The set O of functions that satisfies conditions (A), (B), (C), (E) and (G)
is non-empty.
Proof. We can show that all conditions but (C) are satisfied similarly to the cases of
nl
QIS pr
m and QIS m . As to (C), suppose that (r, n) is a -type in f(r, n) and t is ]i-type.
Also,  is the sequence of ad()-trees 0 f0 1 f1 . . . of state candidates. The run r
is derived by definition from a -sequence C0 , C1 , . . . that has a suffix CN , CN +1 , . . . that is
compatible with , and f(r, n) = Cn . We consider two cases.
If n  N , then there exists some k  N such that Cn  k . By Lemma 11 there exists
a -sequence S0  . . .  Sh of ]i-state candidates such that t  Sh and S0 , . . . , Sh is
i -concordant with C0 , . . . , Cn . Further, we can assume that Sh  k and let Sh , Sh+1 , . . .
be the sequence compatible with . Now consider the -sequence S0  S1  . . ..
By construction the run r0 derived from this sequence is in R and we can assume that
(r0 , h) = t.
If n < N , then by Lemma 11 there exists a -sequence S0  . . .  Sh of ]i-state
candidates such that t  Sh and S0 , . . . , Sh is i -concordant with C0 , . . . , Cn . By Lemma 19
we can extend this sequence to a -sequence S0  . . .  Sk that is i -concordant
with C0 , . . . , CN . Since CN  M for some M  N, we can assume that Sk  M as
well. Let Sh , Sh+1 , . . . be the sequence compatible with , and consider the -sequence
S0  S1  . . .. As in the previous case, the run r0 derived from this sequence is in R by
construction and we can assume that (r0 , h) = t.
By Lemmas 6(i), 21 and 31 we obtain the next result.
Lemma 32. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies perfect recall and
no learning.
Finally, we state the following lemma, whose proof follows the lines of the corresponding
nl
proofs for QIS pr
m and QIS m and Lemma 31.
39

fiBelardinelli & Lomuscio

Lemma 33. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  that satisfies perfect
recall and no learning, and validates the formulas K and BF .
This establishes the completeness of QKT2,3 . Thus, we obtain the following item in
Theorem 2.
nl,pr
Theorem 9 (Completeness). The system QKT2,3
of
m is complete w.r.t. the class QIS m
QIS.

The completeness of QKT2,3
with respect to QIS nl,pr,uis
follows from the following
1
1
remark, whose proof is analogous to the propositional case.
Remark 3. A formula   L11 is satisfiable in QIS nl,pr
(resp. QIS nl,pr,sync
) iff it is
1
1
nl,pr,uis
nl,pr,sync,uis
satisfiable in QIS 1
(resp. QIS 1
).
5.7 The Class QIS nl,pr,sync
m
1,4
To prove the completeness of QKTm
with respect to QIS nl,pr,sync
we combine the results
m
nl,pr
obtained for QIS m in the previous section with those for QIS nl,sync
and QIS pr,sync
.
m
m
1,4
1
Specifically, if   Lm is consistent with QKTm by Lemma 27 we can construct a syncacceptable sequence  of ad()-trees such that  belongs to the root of the first tree. Let R
be the set of all sync-acceptable -sequences with suffixes that are compatible with ; and
the function f is defined as in Section 5.2. Further, O is the set of all functions  associating
every (r, n)  Dom(f) to a type (r, n)  Tr,n that satisfies the conditions (A), (B), (C),
(F) and (H). Finally, for i  Ag,   O, (r, n) i, (r0 , n0 ) iff (r, n) i (r0 , n0 ) and n = n0 .
By adapting the proof of Lemma 31 by means of Lemmas 15 and 25 we can show the
following result.

Lemma 34. The set O of functions that satisfies conditions (A), (B), (C), (F) and (H)
is non-empty.
By Lemmas 6(i), 27 and 34 we obtain the following result.
Lemma 35. The tuple hR, O, {i, }iAg,O , fi is a frame that satisfies perfect recall, no
learning and synchronicity.
Finally, we state the following lemma whose proof follows the lines of the corresponding
proofs for QIS pr,sync
, QIS nl,sync
and Lemma 34.
m
m
Lemma 36. The tuple hR, O, {i, }iAg,O , fi is a quasimodel+ for  that satisfies perfect
recall, no learning and synchronicity, and validates the formulas K and BF .
This completes the proof for QKT1,4
m . Thus, we obtain the following item in Theorem 2.
1,4
Theorem 10 (Completeness). The system QKTm
is complete w.r.t. the class QIS nl,pr,sync
m
of QIS.

40

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

5.8 The Classes QIS nl,sync,uis
and QIS nl,pr,sync,uis
m
m
1,4,5
We now show that the system QKTm
is complete with respect to the classes QIS nl,sync,uis
m
nl,pr,sync,uis
and QIS m
. The completeness result follows from next remark.

Remark 4. A formula   Lm is valid on QIS nl,sync,uis
iff it is valid in QIS nl,pr,sync,uis
.
m
m
The proof is a straightforward extension to first-order of a result by Halpern et al. (2004,
Proposition 5.22). Given this remark and the axiom KT5 it is sufficient to prove the
completeness of QKT1,4
with respect to QIS nl,pr,sync,uis
. By the result in the previous
1
1
1,4
nl,pr,sync
section, QKT1 is indeed complete with respect to QIS 1
. The desired result follows
by Remark 3. Thus, we obtain the following item in Theorem 2.
1,4
Theorem 11 (Completeness). The system QKTm
is complete w.r.t. the classes QIS nl,sync,uis
m
and QIS nl,pr,sync,uis
of
QIS.
m

6. Conclusions and Further Work
In this paper we investigated interaction axioms in the context of monodic first-order
temporal-epistemic logic. Specifically, we explored classes of quantified interpreted systems
satisfying conditions such as synchronicity, no learning, perfect recall, and having a unique
initial state. The contribution of the article concerns the provably complete axiomatisation
of these classes.
The results presented extend previous contributions on first-order epistemic and temporal logic with no interactions (e.g., see Belardinelli & Lomuscio, 2011, Sturm et al., 2000,
Wolter & Zakharyaschev, 2002), in a direction that was previously only explored at the
propositional level (Halpern et al., 2004). Our findings show that the characterisation
axioms considered at the propositional level can be extended to the first-order monodic
setting.
While temporal-epistemic logic in a first-order context has so far mostly attracted theoretical contributions, there is evidence in the literature of it being increasingly embraced
in applications. For instance, there is an active interest in verifying artifact-centric systems
against first-order modal specifications (Belardinelli, Lomuscio, & Patrizi, 2011a, 2011b;
Deutsch, Hull, Patrizi, & Vianu, 2009; Deutsch, Sui, & Vianu, 2007; Calvanese, Giacomo,
Lenzerini, & Rosati, 2012; Hariri, Calvanese, Giacomo, Masellis, & Felli, 2011).
Given this, it remains of importance to investigate the questions pertaining to computational aspects of the formalisms introduced, including their decidability and the computational complexity of the satisfiability and model checking problems. Work so far (including
Belardinelli & Lomuscio, 2011; Hodkinson at al., 2000; Wolter & Zakharyaschev 2001)
has focused on fragments where no interaction is present, but we know from the literature (Halpern et al., 2004) that interactions can make these problems harder. We leave this
for further work, particularly in connection with the addition of other epistemic modalities
(e.g., explicit and algorithmic knowledge, see Halpern & Pucella, 2005), or branching-time
modalities. Epistemic variants of branching-time CTL are well understood at the propositional level (Meyden & Wong, 2003) but their first-order extensions have not yet been
explored.
41

fiBelardinelli & Lomuscio

Acknowledgments
The research presented was supported by the European Commission through the Marie
Curie Fellowship FoMMAS (grant n. 235329) and the STREP Project ACSI (grant
n. 257593), and by the UK Engineering and Physical Sciences Research Council Leadership
Fellowship Trusted Autonomous Systems (grant n. EP/I00520X/1).
We would like to thank the anonymous reviewers and Mr. Andrew V. Jones for valuable
comments on the paper.

References
Belardinelli, F., & Lomuscio, A. (2009). Quantified epistemic logics for reasoning about
knowledge in multi-agent systems. Artificial Intelligence, 173 (9-10), 9821013.
Belardinelli, F., & Lomuscio, A. (2011). First-order linear-time epistemic logic with group
knowledge: An axiomatisation of the monodic fragment. Fundamenta Informaticae,
106 (2-4), 17590.
Belardinelli, F., & Lomuscio, A. (2008). A complete quantified epistemic logic for reasoning
about message passing systems. In Computational Logic in Multi-Agent Systems, 8th
International Workshop, CLIMA VIII. Revised Selected and Invited Papers, Vol. 5056
of Lecture Notes in Computer Science, pp. 248267. Springer.
Belardinelli, F., & Lomuscio, A. (2010). Interactions between time and knowledge in a firstorder logic for multi-agent systems. In Principles of Knowledge Representation and
Reasoning: Proceedings of the 12th International Conference, KR 2010. AAAI Press.
Belardinelli, F., Lomuscio, A., & Patrizi, F. (2011a). A computationally-grounded semantics for artifact-centric systems and abstraction results. In Proceedings of the 22nd
International Joint Conference on Artificial Intelligence, IJCAI 2011, pp. 738743.
AAAI Press.
Belardinelli, F., Lomuscio, A., & Patrizi, F. (2011b). Verification of deployed artifact systems via data abstraction. In Service-Oriented Computing: Proceedings of the 9th
International Conference, ICSOC 2011, Vol. 7084 of Lecture Notes in Computer Science, pp. 142156. Springer.
Calvanese, D., Giacomo, G. D., Lenzerini, M., & Rosati, R. (2012). View-based query
answering in description logics: Semantics and complexity. Journal of Computer and
System Sciences, 78 (1), 2646.
Cohen, P., & Levesque, H. (1995). Communicative actions for artificial agents. In Proceedings of the 1st International Conference on Multi-Agent Systems, ICMAS 1995, pp.
6572. AAAI Press.
Degtyarev, A., Fisher, M., & Konev, B. (2003). Monodic temporal resolution. In Automated
Deduction: Proceedings of the 19th International Conference on Automated Deduction,
CADE-19, Vol. 2741 of Lecture Notes in Computer Science, pp. 397411. Springer.
Degtyarev, A., Fisher, M., & Lisitsa, A. (2002). Equality and monodic first-order temporal
logic. Studia Logica, 72 (2), 147156.
Dennett, D. (1987). The Intentional Stance. MIT Press.
42

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Deutsch, A., Hull, R., Patrizi, F., & Vianu, V. (2009). Automatic verification of datacentric business processes. In Database Theory: Proceedings of the 12th International
Conference, ICDT 2009, Vol. 361 of ACM International Conference Proceeding Series,
pp. 252267. ACM Press.
Deutsch, A., Sui, L., & Vianu, V. (2007). Specification and verification of data-driven web
applications. Journal of Computer and System Sciences, 73 (3), 442474.
Fagin, R., Halpern, J. Y., Moses, Y., & Vardi, M. Y. (1995). Reasoning about Knowledge.
MIT Press.
Fagin, R., Halpern, J. Y., & Vardi, M. Y. (1992). What can machines know? On the
properties of knowledge in distributed systems. Journal of the ACM, 39 (2), 328376.
Gabbay, D., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2003). Many-Dimensional Modal
Logics: Theory and Applications, Vol. 148 of Studies in Logic. Elsevier.
Garson, J. (2001). Quantification in modal logic. In Gabbay, D., & Guenthner, F. (Eds.),
Handbook of Philosophical Logic, Vol. 3, pp. 267323. Reidel.
Halpern, J., & Moses, Y. (1992). A guide to completeness and complexity for modal logics
of knowledge and belief. Artificial Intelligence, 54, 319379.
Halpern, J., van der Meyden, R., & Vardi, M. (2004). Complete axiomatizations for reasoning about knowledge and time. SIAM Journal on Computing, 33 (3), 674703.
Halpern, J., & Vardi, M. (1986). The complexity of reasoning about knowledge and time.
In ACM Symposium on Theory of Computing, STOC 1986, pp. 304315. ACM Press.
Halpern, J., & Vardi, M. (1989). The complexity of reasoning about knowledge and time
1: lower bounds. Journal of Computer and System Sciences, 38 (1), 195237.
Halpern, J., & Pucella, R. (2005). Probabilistic algorithmic knowledge. Logical Methods in
Computer Science, 1 (3).
Hariri, B. B., Calvanese, D., Giacomo, G. D., Masellis, R. D., & Felli, P. (2011). Foundations
of relational artifacts verification. In Business Process Management: Proceedings of
the 9th International Conference, BPM 2011, Vol. 6896 of Lecture Notes in Computer
Science, pp. 379395. Springer.
Hodkinson, I. (2002). Monodic packed fragment with equality is decidable. Studia Logica,
72, 185197.
Hodkinson, I. (2006). Complexity of monodic guarded fragments over linear and real time.
Annals of Pure and Applied Logic, 138, 94125.
Hodkinson, I., Kontchakov, R., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2003). On the
computational complexity of decidable fragments of first-order linear temporal logics.
In Proceedings of the 10th International Symposium on Temporal Representation and
Reasoning / 4th International Conference on Temporal Logic, TIME-ICTL 2003, pp.
9198. IEEE Computer Society Press.
Hodkinson, I., Wolter, F., & Zakharyaschev, M. (2000). Decidable fragment of first-order
temporal logics. Annals of Pure and Applied Logic, 106 (1-3), 85134.
43

fiBelardinelli & Lomuscio

Hodkinson, I., Wolter, F., & Zakharyaschev, M. (2002). Decidable and undecidable fragments of first-order branching temporal logics. In Proceedings of the 17th IEEE Symposium on Logic in Computer Science, LICS 2002, pp. 393402. IEEE Computer
Society Press.
Lomuscio, A., & Ryan, M. (1998). On the relation between interpreted systems and Kripke
models. In Agent and Multi-Agent Systems: Proceedings of the AI97 Workshop on the
theoretical and practical foundations of intelligent agents and agent-oriented systems,
Vol. 1441 of Lecture Notes in Artificial Intelligence, pp. 4659. Springer.
McCarthy, J. (1979). Ascribing mental qualities to machines. In Ringle, M. (Ed.), Philosophical Perspectives in Artificial Intelligence, pp. 161195. Harvester Press.
McCarthy, J. (1990). Artificial intelligence, logic and formalizing common sense. In Thomason, R. (Ed.), Philosophical Logic and Artificial Intelligence, pp. 161190. Kluwer
Academic.
Meyden, R. (1994). Axioms for knowledge and time in distributed systems with perfect
recall. In Proceedings of the 9th Annual IEEE Symposium on Logic in Computer
Science, LICS 1994, pp. 448457. IEEE Computer Society Press.
Meyden, R. v., & Wong, K. (2003). Complete axiomatizations for reasoning about knowledge
and branching time. Studia Logica, 75 (1), 93123.
Moore, R. C. (1990). A formal theory of knowledge and action. In Allen, J., Hendler, J., &
Tate, A. (Eds.), Readings in Planning, pp. 480519. Kaufmann.
Parikh, R., & Ramanujam, R. (1985). Distributed processes and the logic of knowledge. In
Logics of Programs, Conference Proceedings, Vol. 193 of Lecture Notes in Computer
Science, pp. 256268. Springer.
Pnueli, A. (1977). The temporal logic of programs. In Proceedings of the 18th International
Symposium Foundations of Computer Science, FOCS 1977, pp. 4657.
Rao, A., & Georgeff, M. (1991). Deliberation and its role in the formation of intentions.
In Proceedings of the 7th Conference on Uncertainty in Artificial Intelligence, pp.
300307. Kaufmann.
Sturm, H., Wolter, F., & Zakharyaschev, M. (2000). Monodic epistemic predicate logic.
In Logics in Artificial Intelligence, European Workshop, JELIA 2000, Vol. 1919 of
Lecture Notes in Computer Science, pp. 329344. Springer.
Sturm, H., Wolter, F., & Zakharyaschev, M. (2002). Common knowledge and quantification.
Economic Theory, 19, 157186.
Wolter, F., & Zakharyaschev, M. (2001). Decidable fragments of first-order modal logics.
Journal of Symbolic Logic, 66 (3), 14151438.
Wolter, F., & Zakharyaschev, M. (2002). Axiomatizing the monodic fragment of first-order
temporal logic. Annals of Pure and Applies Logic, 118 (1-2), 133145.
Wooldridge, M. (2000a). Computationally grounded theories of agency. In Proceedings of
the International Conference of Multi-Agent Systems, ICMAS 2000, pp. 1322. IEEE
Computer Society Press.
44

fiInteractions between Knowledge and Time in a First-Order Logic for MAS

Wooldridge, M. (2000b). Reasoning about Rational Agents. MIT Press.
Wooldridge, M., & Fisher, M. (1992). A first-order branching time logic of multi-agent
systems. In Proceedings of the 10th European Conference on Artificial Intelligence,
ECAI 1992, pp. 234238. John Wiley and Sons.
Wooldridge, M., Fisher, M., Huget, M., & Parsons, S. (2002). Model checking multi-agent
systems with MABLE. In Proceedings of the 1st International Conference on Autonomous Agents and Multiagent Systems, AAMAS 2002, pp. 952959. ACM Press.
Wooldridge, M., Huget, M., Fisher, M., & Parsons, S. (2006). Model checking for multiagent
systems: the MABLE language and its applications. International Journal on Artificial
Intelligence Tools, 15 (2), 195226.
Wooldridge, M. (1999). Verifying that agents implement a communication language. In
Proceedings of the 16th National Conference on Artificial Intelligence and 11th Conference on Innovative Applications of Artificial Intelligence, pp. 5257. AAAI Press.

45

fi