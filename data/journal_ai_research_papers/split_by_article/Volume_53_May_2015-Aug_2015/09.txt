Journal of Artificial Intelligence Research 53 (2015) 439-496

Submitted 12/14; published 07/15

Bypassing Combinatorial Protections: Polynomial-Time
Algorithms for Single-Peaked Electorates
Felix Brandt

brandtf@in.tum.de

Institut fur Informatik
TU Munchen
85748 Garching, Germany

Markus Brill

brill@cs.duke.edu

Department of Computer Science
Duke University
Durham, NC 27708, USA

Edith Hemaspaandra

eh@cs.rit.edu

Department of Computer Science
Rochester Institute of Technology
Rochester, NY 14623, USA

Lane A. Hemaspaandra

lane@cs.rochester.edu

Department of Computer Science
University of Rochester
Rochester, NY 14627, USA

Abstract
For many election systems, bribery (and related) attacks have been shown NP-hard using constructions on combinatorially rich structures such as partitions and covers. This paper shows that for voters who follow the most central political-science model of electorates
single-peaked preferencesthose hardness protections vanish. By using single-peaked preferences to simplify combinatorial covering challenges, we for the first time show that NPhard bribery problemsincluding those for Kemeny and Llull electionsfall to polynomial
time for single-peaked electorates. By using single-peaked preferences to simplify combinatorial partition challenges, we for the first time show that NP-hard partition-of-voters problems fall to polynomial time for single-peaked electorates. We show that for single-peaked
electorates, the winner problems for Dodgson and Kemeny elections, though p2 -complete
in the general case, fall to polynomial time. And we completely classify the complexity of
weighted coalition manipulation for scoring protocols in single-peaked electorates.

1. Introduction
Elections are perhaps the most important framework for preference aggregation. An election
system (or election rule) is a mapping that takes as input the preferences of the voters with
respect to the set of candidates (alternatives) and returns a set of winners, which is some
subset of the candidate set. Elections are central in preference aggregation among humans
in everything from political elections to selecting good singers on popular television shows.
Elections are rapidly increasing in importance in electronic settings such as multiagent
systems, and have been used or proposed for such varied tasks as recommender systems
and collaborative filtering (Ghosh, Mundhe, Hernandez, & Sen, 1999; Pennock, Horvitz, &
c
2015
AI Access Foundation. All rights reserved.

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Giles, 2000), web spam reduction and improved web-search engines (Dwork, Kumar, Naor,
& Sivakumar, 2001), and planning (Ephrati & Rosenschein, 1997). In electronic settings,
elections may have huge numbers of voters and alternatives.
One natural worry with elections is that agents may try to slant the outcome, for example, by bribing voters. Motivated by work from economics and political science showing
that reasonable election systems always allow manipulation in some cases (Gibbard, 1973;
Satterthwaite, 1975; Duggan & Schwartz, 2000), starting in 1989, Bartholdi, Orlin, Tovey,
and Trick (Bartholdi, Tovey, & Trick, 1989; Bartholdi & Orlin, 1991; Bartholdi, Tovey,
& Trick, 1992) made the thrilling suggestion that elections be protected via complexity
theorynamely, by making the attackers task NP-hard. This line has been active ever
since. It has resulted in NP-hardness protections being proven for many election systems,
against such attacks as bribery (the attacker has a budget with which to buy and alter
voters votes, Faliszewski, Hemaspaandra, & Hemaspaandra, 2009), manipulation (a coalition of voters wishes to set its votes to make a given candidate win, Bartholdi et al.,
1989; Bartholdi & Orlin, 1991), and control (an agent seeks to make a given candidate win
by adding/deleting/partitioning voters or candidates, Bartholdi et al., 1992). The book
chapter of Faliszewski, Hemaspaandra, Hemaspaandra, and Rothe (2009b) surveys such
NP-hardness results, which apply to many important election systems such as plurality,
single transferable voting, and approval voting.
In the past few years, a flurry of papers have come out asking whether the NP-hardness
protections are satisfying. In particular, the papers explore the possibility that heuristic
algorithms may do well frequently or that approximation algorithms may exist. These
papers can themselves be questioned. For example, the most influential frequency paper (Friedgut, Kalai, & Nisan, 2008, see also its journal version, Friedgut, Kalai, Keller,
& Nisan, 2011) assumes each voter has a random and independent candidate preference
ordering, and that model does not seem to reflect typical voter behavior. And as to approximations, there is work showing that for certain voter-control settings (different than those
studied in this paper) there are polynomial-time algorithms that use, for example, at most
the log of the number of candidates times as many added voters as an optimal approach
would need (Faliszewski, Hemaspaandra, & Hemaspaandra, 2013). However, a campaign
manager might well not have the financial resources to motivate that many extra people to
come out and vote, but rather would want to know the smallest possible number of votes
to add to reach victory.
The present paper questions the NP-hardness results from a completely different direction. In political science, perhaps the most canonical model of electorates is the unidimensional single-peaked model. In that model, the electorate has preferences over some
one-dimensional spectrum (e.g., very liberal through very conservative) along which the
candidates are also located, and in which each voters preferences (loosely put) have a
peak, with affinity declining as one moves away from the peak. A brilliant paper by Walsh
(2007) recently asked whether NP-hardness protections against manipulation fall apart if
electorates are single-peaked. For the case Walsh looked at, the answer he proved is no;
he looked at a particular NP-hardness manipulation protection and proved it holds even
for single-peaked societies. Faliszewski, Hemaspaandra, Hemaspaandra, and Rothe (2011),
inspired by Walshs work, looked at a range of election systems and came to the sharply dif440

fiBypassing Combinatorial Protections

Problem

General cases complexity

Single-peaked cases
complexity

approval:
bribery
negative-bribery
strongnegative-bribery

NP-comp. (Faliszewski et al., 2009)
NP-comp. (Thm. 4.3, part 1)
NP-comp. (Thm. 4.3, part 1)

P (Thm. 4.2)
P (Thm. 4.3, part 2)
P (Thm. 4.3, part 2)

NP-comp.
NP-comp.
NP-comp.
NP-comp.
NP-comp.

P (Thm. 4.7)
P (Thm. 4.7)
P (Thm. 4.7)
NP-comp. (Thm. 4.7)
P (Thm. 5.3)

Llull:
bribery
$bribery
weighted-bribery
weighted-$bribery
control by
voter partition
Kemeny:
winner
bribery
$bribery
weighted-bribery
weighted-$bribery

(Faliszewski
(Faliszewski
(Faliszewski
(Faliszewski
(Faliszewski

et
et
et
et
et

al.,
al.,
al.,
al.,
al.,

2009)
2009)
2009)
2009)
2009a)

p2 -comp. (Hemaspaandra et al., 2005)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)

P (Thm. 3.3)
P (Thm. 4.9)
P (Thm. 4.9)
P (Thm. 4.9)
NP-comp. (Thm. 4.9)

Table 1: How single-peakedness (often) lowers the complexity of some key election problems.

fering conclusion that for many crucial cases, NP-hardness protections against manipulation
and control vanish for single-peaked electorates.
The present paper is in this young line of research on complexity of manipulative actions
in the context of single-peaked electorates. Our work seeks to take this line of research in
new directions, and to improve one existing direction, through the following contributions:
1. We (Section 3) show that checking who the winner is in Dodgson, Young, and Kemeny elections, which is known to be p2 -complete in the general case (respectively due
to Hemaspaandra, Hemaspaandra, & Rothe, 1997, due to this papers Theorem A.2
based on adapting a proof of Rothe, Spakowski, & Vogel, 2003, and due to Hemaspaandra, Spakowski, & Vogel, 2005), is in polynomial time for single-peaked electorates
(Corollary 3.3 and Theorem 3.4).
Our algorithm that shows this for Dodgson elections is a good example of the general
technical theme of this paper: That single-peakedness often precludes combinatorial explosion. In this particular case, single-peakedness will simplify the seemingly
exponential-sized search space over series of exchanges to provide upper bounds on
Dodgson scores, and will allow us to instead search over a polynomial-sized possibility space related to a particular, simple set of exchanges happening and limited to at
most two voters.
2. We (Section 4) for the first time study the effect of single-peaked electorates on the
complexity of bribery. We show that many NP-hardness protections against bribery
441

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

in the general case vanish for single-peaked electorates. (Table 1 provides some key
examples of this and other examples of lowering complexity.) To show this, we
give polynomial-time bribery algorithms for single-peaked electorates in many settings. Our polynomial-time algorithms apply to approval voting (Theorem 4.2 and
Theorem 4.3) and to the rich range of weak-Condorcet consistent election systems
and even to systems that are merely known to be weak-Condorcet consistent when
the electorate is single-peaked (Corollary 4.5), including weakBlack, weakDodgson,
Fishburn, Kemeny, Llull, Maximin, Schwartz, Young, and the two variants of Nanson
due to Fishburn and Schwartz.
The right general interpretation of what underlies this is that the NP-hardness results
use (in the outputs of the reductions establishing NP-hardness) sets of voter preferences
that are so intricate that they simply cannot be realized by single-peaked societies. The
practical lesson is that we should be very skeptical about NP-completeness results if
our electorate may have limitations (such as single-peakedness) on the ensembles of
votes it produces. And the specific technical reason we can obtain polynomial-time
bribery algorithms is that the NP-hardness proofs were based on the combinatorially
rich structure of covering problems (whose core challenge is the incomparability of
voters), but we will (see the proof of Theorem 4.2) use single-peakedness to create
a directional attack on covering problems that has the effect of locally removing
incomparability.
3. We (Section 5) for the first time study the effect of single-peaked electorates on the
complexity of control by partition of voters, in which the voters are partitioned into
two groups that vote on the candidates in primary elections, and only the winners
of the primaries compete in the final election. This is one of the seven types of control
introduced in the seminal control paper of Bartholdi et al. (1992), but control by
partition of voters has not been previously addressed for the single-peaked case. We
show that some known NP-hardness protections against control-by-partition vanish
for single-peaked electorates, and we do so by giving polynomial-time algorithms for
single-peaked control by partition (Theorems 5.2 and 5.6, and Corollary 5.3).
The general interpretation and practical lesson from this are the same as was just
mentioned for the bribery case. However, the technical way we obtain this control-bypartition result differs here. The technical challenge here is the exponential number
of partitions, and our algorithms circumvent this by using single-peakedness to allow
us to in effect structure that huge number of partitions into a polynomial number of
classes of partitions such that for each class we can look just at the class rather than
having to explore each of its member partitions.
The shared technical theme here and in the bribery case is that single-peakedness can
be used to tame the combinatorial explosion (of partitions and covers) that in the
general case protected elections from attack, and in particular single-peakedness yields
polynomial-time attack algorithms.
4. Our final contribution (Section 6) is a strong extension of an important result from
Faliszewski et al. (2011). For the broad class of election systems known as scoring
protocols, Faliszewski et al. gave a complete characterization of the computational
442

fiBypassing Combinatorial Protections

complexity of the (weighted, coalition) manipulation problem in the case of singlepeaked elections with three candidates. Such characterizations are important as they
tell both which systems are easily manipulable and what it is about the systems
that makes them easily manipulable. We extend this by providing, for single-peaked
electorates, a complete characterization of easy manipulability for scoring protocols
(Theorem 6.2). That is, we extend the three-candidate theorem of Faliszewski et al.
(2011) to a result that holds for any number of candidates, and that allows one to
immediately read off the complexity of manipulation of any scoring protocol, for
single-peaked electorates.
Our proof organization is as follows. Each of our four result sections contains one
spotlight theorem, whose proof we give within the section itself. These proofs seek to
give the key flavor of our techniques, and in text just before these proofs we will often try to
informally describe these proofs ideas or approaches. The first three of the four spotlight
proofs directly support, as does the fourth spotlight proof in part, this papers technical
theme that single-peakedness tames combinatorial explosion. The appendix contains, for
completeness, proofs of all our other results, and some definitions omitted from the main
text.

2. Preliminaries
This section presents preliminaries on such topics as election systems, preferences, notions
related to Condorcet consistency, and single-peakedness.
2.1 Election Systems, Preferences, and weakCondorcet Consistency
An election system (or election rule) is a mapping from a finite set of candidates C and
a finite collection V of voter preferences over those candidates to a collection W  C
called the winner set.1 For all but one of the election systems we cover, each voters
preference is a linear order (by which we always mean a strict linear order: an irreflexive,
antisymmetric, complete, transitive relation) over the candidates. For the election system
called approval voting, each voter votes by a bit-vector, approving or disapproving of each
candidate separately. Voters preferences are input as a list of ballots (i.e., votes), so if
multiple voters have the same preference, the ballot of each will appear separately in V .
We now very briefly describe the election systems most central to this paper. In approval
voting, preferences are approval vectors, and each candidate who gets the highest number of
approvals among the candidates belongs to the winner set. In all the other systems we use,
voters will vote by linear orders. A candidate is said to be a Condorcet winner (respectively,
weak Condorcet winner ), if that candidate is preferred to each other candidate by a strict
majority (respectively, by at least half) of the voters. In Condorcet voting (or Condorcet
elections) the winners are precisely the set of Condorcet winners. In the election system
1. In social choice theory, this is called a social choice correspondence. Social choice theorists often exclude
the case allowing the function to have an empty set of winners, but following Bartholdi et al. (1992)
and many computationally oriented papers, we do not artificially exclude that case in our definitions.
However, except for elections with zero candidates, the only systems we discuss that might ever output
an empty set of winners are Condorcet and weakCondorcet.

443

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

weakCondorcet, the winners are precisely the set of weak Condorcet winners. It has been
known for two hundred years that some election instances have neither Condorcet winners
nor weak Condorcet winners (Condorcet, 1785). And of course, no election instance can
have more than one Condorcet winner, whereas there might be several weak Condorcet
winners.
Let , 0    1, be a rational number. Copeland (Copeland, 1951, for  = 12 ;
Faliszewski et al., 2009a, for general rational ) is the election system defined as follows.
For each pair of distinct candidates, consider the one (if any) who is preferred between
the two by a strict majority of the voters. That one gets one Copeland point from
the pairwise contest and the other gets zero Copeland points. If the candidates in the
pair tie in their pairwise contest (which can happen only when the number of voters is
even), each gets  points. When  = 1, Copeland is known as Llull, a system defined
by the mystic Ramon Llull in the thirteenth century (see Hagele & Pukelsheim, 2001).
Llulls election system is known to be remarkably resistant, computationally, to bribery
and control attacks (Faliszewski et al., 2009a, although see also Erdelyi, Nowak, & Rothe,
2009, Erdelyi & Rothe, 2010, Erdelyi, Piras, & Rothe, 2011, and Menton, 2013, for different
highly resistant systems, and see Hemaspaandra, Hemaspaandra, & Rothe, 2009, regarding
how extremely resistant artificial systems can be constructed).
An important class of elections, which we will focus on in Section 6, is the class of
scoring protocols. Each scoring protocol has a fixed number m of candidates and is defined
by a scoring vector  = (1 , 2 , . . . , m )  Nm , 1  2      m . Voters votes are
linear orders, and each voter contributes 1 points to his or her most preferred candidate,
2 points to his or her next most preferred candidate, and so on. Each candidate whose
total number of points is at least as great as the totals of each other candidate is a winner.
For example, m-candidate plurality voting is the scoring protocol defined by the scoring
m1
z }| {
vector  = (1, 0, . . . , 0). And m-candidate Borda voting is the scoring protocol defined by
the scoring vector  = (m  1, m  2, . . . , 0).
Kemeny elections are based on the
P concept of a Kemeny consensus. Each linear order > with minimum Kemeny score, a,bC, a > b k{v  V | v prefers b to a}k, is said to be
a Kemeny consensus. As usual, kSk denotes the cardinality of finite set S. A candidate c
is a Kemeny winner if c is ranked first in some Kemeny consensus. Kemeny elections were
introduced by Kemeny (1959, see also Kemeny & Snell, 1960).
In Black elections (respectively, weakBlack elections), if there is a Condorcet winner (respectively, if there are weak Condorcet winners), then that defines the winners, and otherwise Bordas method is used to select the winners. Black elections were introduced by Black
(1958) and weakBlack elections (somewhat confusingly called Black elections there) were
introduced by Fishburn (1977). In Dodgson elections (respectively, weakDodgson elections),
whichever candidates can by the fewest repeated transpositions of adjacent candidates in
voters orders become Condorcet winners (respectively, weak Condorcet winners) are the
winners. Dodgson elections were introduced in the 1800s by Dodgson (1876) and weakDodgson elections (somewhat confusingly called Dodgson elections there) were introduced
by Fishburn (1977) and further studied by McCabe-Dansted, Pritchard, and Slinko (2008).
In Young elections (respectively, strongYoung elections), whichever candidates can by the
deletion of the fewest voters become weak Condorcet (respectively, Condorcet) winners are
444

fiBypassing Combinatorial Protections

the winners. Young elections were introduced by Young (1977) and strongYoung elections
(somewhat confusingly called Young elections there) were introduced by Rothe et al. (2003).
An important notion in this paper is that of being weakCondorcet-consistent. An election system is said to be weakCondorcet-consistent (which we earlier wrote, equivalently, as
weak-Condorcet consistent), if on every input that has at least one weak Condorcet winner, the winners of the election system are exactly the set of weak Condorcet winners.2
Some of our bribery results will hold for all election systems that are weakCondorcetconsistent, and even for all election systems that when restricted to single-peaked electorates
are weakCondorcet-consistent.
Fishburn (1977) has noted that the election systems weakBlack, weakDodgson, Fishburn, Maximin, and Young are weakCondorcet-consistent. We add to that the observation
that Llull elections are easily seen from their definition to be weakCondorcet-consistent.
We also make the (new) observation that the election systems Kemeny, Schwartz, and the
two variants of Nanson due to Fishburn and Schwartz are weakCondorcet-consistent when
restricted to single-peaked electorates. (By Fishburn, 1977, and Niou, 1987, those systems
are known not to be weakCondorcet-consistent in the general case.) We also note that
Black, Dodgson, the original version of Nanson, and for each , 0   < 1, Copeland elections are not weakCondorcet-consistent even when restricted to single-peaked electorates.
This is seen by the following universal counterexample. Let there be two voters with preferences b > a > c and c > b > a. These preferences are single-peaked with respect to
the societal ordering a L b L c (the notion of societal orders will be explained two paragraphs after the present one). Candidates b and c are weak Condorcet winners, but each
of the mentioned election systems chooses only b. Similarly, we note that strongYoung is
not weakCondorcet-consistent for single-peaked electorates because in an election with two
voters whose preferences are a > b > c and c > b > a, all candidates are weak Condorcet
winners, but strongYoung yields only candidates a and c. The appendix includes definitions
of the election systems Fishburn, Maximin (a.k.a. Simpson), and Nanson, and proves all of
the new observations made in this paragraph.
2.2 Single-Peaked Preferences
This papers theme is that combinatorial protections crumble for the case of single-peaked
electorates. We now briefly define what single-peaked preferences are and what their motivation is.
The single-peaked preference model was introduced over half a century ago by Black
(1948, 1958) and has been influential ever since. The model captures the case where the
electorate is polarized by a single issue or dimension, and each voters utility along that
dimension has either one peak or just rises or just falls. Candidates have positions (locations)
along that dimension. And a voters preferences (in the linear order model) simply order the
candidates by utility (except with no ties allowed). Since the utility curves are very flexible,
what this amounts to is that there is an overall societal ordering L of the candidates, and
each voter can be placed in some location such that for all the candidates to his or her
2. The nomenclature in the literature is varied here. Some authors use the term weak Condorcetconsistent to mean systems that always select all weak Condorcet winners but perhaps have additional winners. And what we denote weakCondorcet-consistent is precisely what Fishburn (1977) calls
[obeying the] strict Condorcet principle.

445

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

voters
v1
v2
v3
v4

utility

c1
liberal

c2

c3

c4

candidates

c5
conservative

Figure 1: Example of a single-peaked electorate of four voters, with their utility functions
shown.

right the preferences drop off and the same to the left, although within that framework,
the right and the left candidates can be interspersed with each other. A picture will make
this clearer. Figure 1 shows an electorate with four voters and five candidates, in which
societys polarization is on a (liberal-to-conservative) axis. From the picture, we can see
that v1 has preferences c5 > c4 > c3 > c2 > c1 , v2 has preferences c1 > c2 > c3 > c4 > c5 ,
v3 has preferences (note the interleaving) c2 > c3 > c1 > c4 > c5 , and v4 has preferences
c4 > c5 > c3 > c2 > c1 .
Formally, there are many equivalent ways to capture this behavior, and we use the
following as our definition. A collection V of votes (each a linear ordering >i of the
candidates) over candidate set C is said to be single-peaked exactly if there exists a linear ordering L over C such that for each triple of candidates a, b, and c, it holds that
(a L b L c  c L b L a)  (i) [a >i b  b >i c].
The single-peaked model has been intensely studied, and has both strengths and limitations. On the positive side, it is an excellent rough model for a wide range of elections.
Votes ranging from American presidential elections to US Supreme Court votes to hiring
votes within a CS department are often shockingly close to reflecting single-peaked preferences. It certainly is a vastly more reasonable model in most settings than is assuming
that all voters are random and independent, although the latter model has been receiving
a huge amount of study recently. In fact, a wide range of scholarly studies have argued for
the value of the single-peaked model (Black, 1948, 1958; Davis, Hinich, & Ordeshook, 1970;
Niemi & Wright, 1987; Procaccia & Rosenschein, 2007; Krehbiel, 1998), and the model is
one of the first taught to students in positive (i.e., theoretical) political science courses. On
the other hand, some electorates certainly are driven by multidimensional concerns, and
even a heavily unidimensional electorate may have a few outside-the-box voters (e.g., voters
who in an election polarized on a liberal-conservative axis decide their votes instead based
on, for example, religion or race). Simply put, it is a model, and so it speaks of a simplified
version of the world.
446

fiBypassing Combinatorial Protections

The single-peaked model also makes sense for approval voting (Faliszewski et al., 2011):
There, a voter intuitively may be thought to have some utility threshold starting at which he
or she approves of candidates. What this means is that each voters approved candidates
must be contiguous within societys linear order L. Formally, we define this by saying
that an election instance (of approval voters) is single-peaked exactly if there exists a linear
order L such that for each triple of candidates a, b, and c, we have a L b L c  (i) [{a, c} 
Approvesi  b  Approvesi ], where Approvesi is the set of candidates voter i approves.
Following the suggestion in Walshs (2007) seminal work, we will assume (except when
we make something else clear) that societys linear order is part of the input in our singlepeaked winner, bribery, manipulation, and control problems. However, we mention in
passing that given an election instance, one can in polynomial time tell whether the voters
are single-peaked and when so can also in polynomial time compute a societal linear order
instantiating the single-peakedness (by Bartholdi and Trick, 1986, Doignon and Falmagne,
1994, and Escoffier, Lang, and Ozturk, 2008, for linear-order preferences and, as pointed
out in Theorem 2.1 of Faliszewski et al., 2011, by Fulkerson and Gross, 1965, and Booth
and Lueker, 1976, for approval preferences). One of course also can easily, in polynomial
time, check whether a given linear order is one with respect to which a given set of votes is
single-peaked.
Because we want to get to the results as quickly as possible, we will define the needed
notions of winner, bribery, control, and manipulation each at the start of the section on the
particular topic.

3. WeakCondorcet Elections, Single-Peaked Electorates, and Bypassing
Winner-Problem Complexity
The main results sections of this paper study whether single-peakedness bypasses
complexity-theoretic protections against attacks on elections. Before moving to those sections, we quickly present some results showing that single-peakedness also bypasses the
complexity results some systems have for even telling who won. Unlike the protection
from attack complexity-shield bypassings, which are in some sense bad news (for the security of the election systems), these winner-hardness complexity-shield bypassings are
good newstaming the complexity of election systems such as Dodgson and Kemeny for the
single-peaked case, despite the fact that they are known to have NP-hard winner problems
in the general case.
For a given election system E, the winner problem takes as input an election, (C, V ),
and a candidate p  C, and asks if p is a winner in the election whose candidates are C and
whose votes are V (where V is a collection of votes over the candidate set C). When we
speak of the single-peaked case of the winner problem, the input will also contain a linear
order L relative to which the election is single-peaked. (Formally, part of the winner-problem
task is to check that the input indeed is single-peaked relative to L. However, since that
is a polynomial-time check for all caseslinear orders and approval vectorsthat we deal
with, we will tacitly view the appropriateness of L as a syntactic condition on the input,
although it is not really syntactic.) Note that the weakCondorcet winner problem is in P
in the general case and thus certainly in the single-peaked case. Furthermore, something
447

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

used often in our papers proofs is the following standard fact about Condorcet voting and
medians.
Fact 3.1. Let (C, V ) be an election with votes being linear orders over C, and let L be
a linear order with respect to which (C, V ) is single-peaked. Associate each voter with the
candidate at the top of that voters preference ordering. Order the voters with respect to L
in terms of that association.
If kV k is odd there is a unique weakCondorcet and Condorcet winner and that winner
is the top preference of the median voter. If kV k is even the weakCondorcet winner set is
the set of all candidates who in L fall in the range, inclusively, from the top preference of
the leftmost of the two median voters through the top preference of the rightmost of the two
median voters (and if those two coincide, then that candidate is a Condorcet winner and
otherwise there is no Condorcet winner).
For example, if this is our ordered-by-L picture of the candidates and what the voters
top choices are:
v3
v6
v1
v2
v4
v5
c1

c2

c3

c4

c5

c6

then c2 , c3 , and c4 are weak Condorcet winners, since each of these candidates is preferred
to all candidates to its right by v1 , v2 , and v3 , and to all candidates to its left by v4 , v5 ,
and v6 . c1 is not a weak Condorcet winner, since all voters other than v1 prefer c2 to c1 .
c5 and c6 are not weak Condorcet winners, since v1 , v2 , v3 , and v4 prefer c4 to c5 and c6 .
Finally, note that there is no Condorcet winner, since any Condorcet winner is a unique
weak Condorcet winner.
An immediate consequence of Fact 3.1 is the well-known fact that for single-peaked
elections, there is always at least one weak Condorcet winner (we are tacitly here assuming
C 6= ). Since we earlier noted that the winner problem is in P for weakCondorcet elections,
the following holds.
Theorem 3.2. For each election system E that is weakCondorcet-consistent when restricted
to single-peaked electorates, the winner problem is in P when restricted to single-peaked
elections.
Of course, for many such systems the winner problem is obviously in P even in general.
Yet we do get some interesting consequences from Theorem 3.2 such as the following (recall
from Section 2 that Young and weakDodgson are weakCondorcet-consistent, and Kemeny
is weakCondorcet-consistent when restricted to single-peaked electorates).
Corollary 3.3. When restricted to single-peaked electorates, the winner problems for Kemeny, Young, and weakDodgson elections are in P.
In contrast, the general-case Kemeny winner problem problem was proven by Hemaspaandra et al. (2005) to be p2 -complete.3 And we prove in this paper that the generalcase winner problems for Young and weakDodgson elections are p2 -complete as well (see
3. p2 is the class of sets that can be solved through polynomial-time parallel access to NP (Papadimitriou &
Zachos, 1983; Hemachandra, 1989). Throughout this paper, completeness always refers to completeness
with respect to polynomial-time many-one reductions.

448

fiBypassing Combinatorial Protections

Theorems A.2 and A.4 in the appendix). So, Theorem 3.2 implies sharp complexity simplifications for these three election systems. We mention in passing that for even the generalization of single-peakedness known as bounded single-peaked width (Cornaz, Galand,
& Spanjaard, 2012), work of Cornaz, Galand, and Spanjaard (2013) that was done subsequent to our Corollary 3.3 (Brandt, Brill, Hemaspaandra, & Hemaspaandra, 2010) shows
that in polynomial time one can find a Kemeny winner, and can find the score that that
winnerand thus all Kemeny winnerswill have. (This does not necessarily mean that one
has a polynomial-time algorithm for testing, in their generalized setting, whether a given
candidate is a Kemeny winner.)
The identify with weakCondorcet approach that just worked on Young and weakDodgson elections does not apply to Dodgson and strongYoung elections. However, we
have constructed direct algorithms that solve their winner problems in polynomial time
in the single-peaked case. We state that as a theorem, and prove it immediately as our
spotlight proof for this section.
Theorem 3.4. When restricted to single-peaked electorates, the winner problems for Dodgson and strongYoung elections are in P.
Proof. Recall the following easy characterization of Condorcet winners in the singlepeaked setting. If kV k is odd, the top choice of the median voter is a Condorcet winner.
If kV k is even, there are two cases: either both median voters have the same top choice or
not. In the former case, the median voters preferred candidate is a Condorcet winner, and
in the latter case there is no Condorcet winner (since the top choices of two medians, if
different, will tie each other).
Given an election instance (C, V ) and a valid single-peaked order L, we now show how
to compute all strongYoung winners in polynomial time. Recall that strongYoung winners
are all candidates that can be made Condorcet winners by the fewest voter deletions. We
mention that if C =  there can never be winners. If there are zero voters, all candidates
are strongYoung winners, as they all tie at distance , by convention.4 If (C, V ) has a
Condorcet winner, then that is the unique strongYoung winner. Otherwise kV k  2 is even
and the two median voters have different top choices, say m` and mr . Then the strongYoung
winner set is {m` , mr }, as those two candidates have a strongYoung score of 1, no one has
score 0, and everyone else has score at least 2.
We now show that Algorithm 1, which clearly runs in polynomial time, computes all
Dodgson winners. Recall that Dodgson winners are the candidates who can by the fewest
repeated transpositions of adjacent candidates in voters orders (so-called switches) become
Condorcet winners. If kCk = 0, then there are no winners, if kV k = 0, all of C ties
as winners, and if (C, V ) has a Condorcet winner, this candidate is the unique Dodgson
winner. So assume kV k  2 is even and the two median voters have different top choices,
say m` and mr , m` L mr , and no candidate has Dodgson score 0. The intuition behind the
4. Regarding this and the line in Algorithm 1 handling the zero-voter or zero-candidate case, one might
wonder why we dont just define all our election problems to not allow those cases. The answer is, first,
that it is unattractive to simplify proofs by altering problems. But, more compellingly, control problems
are important to our and other papers, and control problems on inputs not having a small number
of candidates (respectively, voters) can themselves create situations with small numbers of candidates
(respectively, voters). In particular, legal partitions within partition-control types can leave one with no
candidates or no voters.

449

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

algorithm is as follows. We show that every Dodgson winner is a weak Condorcet winner.
And we show that we can always turn a weak Condorcet winner into a Condorcet winner
with a minimum number of switches by making changes in only two voters.5 The proof
of correctness follows immediately from Claims 3.5 and 3.6 below. Note that by Fact 3.1,
the set of weak Condorcet winners consists of all candidates who in L fall in the range,
inclusively, from m` to mr . We will denote this set by [m` , mr ]L .
Claim 3.5. Algorithm 1 will find the correct Dodgson score of each candidate p  [m` , mr ]L .
Claim 3.6. Every Dodgson winner is in [m` , mr ]L .
In our proofs of these two claims, we use the following simple claim.
Claim 3.7.

1. Let p  [m` , mr ]L . If (a L b L p or p L b L a) and a ties p, then b ties p.

2. If mr L d, then mr beats d. If d L m` , then m` beats d.6
Proof of Claim 3.7.
1. We know that half of the voters prefer a to p and half of the voters prefer p to a. All
voters that prefer a to p also prefer b to p. This implies that p at best ties b. By
Fact 3.1, p is a weak Condorcet winner. It follows that p ties b.
2. We prove the first statement. The proof of the second statement is analogous. Suppose
for a contradiction that that mr does not beat d. Since mr is a weak Condorcet winner,
mr ties d. Let db be the candidate immediately to the right of mr (with respect to L).
Using part 1 of this claim, it follows that db ties mr .
Since db is not a weak Condorcet winner, there exists a candidate c such that c beats
b Note that c L mr L db or mr L db L c. If c L mr L d,
b then every voter who prefers c
d.
b And so mr beats d,
b which contradicts the fact that mr ties
to db also prefers mr to d.
b
b
d. If mr L d L c, then every voter who prefers c to db also prefers db to mr . And so c
and db beat mr , which contradicts the fact that mr is a weak Condorcet winner.
q Claim 3.7
Proof of Claim 3.5. Consider an optimal (with respect to the number of switches) way
to turn p into a Condorcet winner. We first assume that T` 6=  and that Tr 6= . Let c` be
the leftmost candidate in T` and let cr be the rightmost candidate in Tr . Since p needs to
gain a vote over c` , there exists a voter v` such that c` >v` p and p gets switched beyond c`
in v` . Since p needs to gain a vote over cr , there exists a voter vr such that cr >vr p and p
gets switched beyond cr in vr . Let A` , B` , and C` be sets of candidates such that v` s order
is of the form
A` > c` > B` > p > C` .
5. One might think that turning a weak Condorcet winner into a Condorcet winner would be equivalent
to making sure that the median voters have this candidate as their top choice. However, note that
the electorate may no longer be single-peaked after switches, and so the footnoted statement is more
surprising and harder to prove then one might think.
6. Note that it is possible for a candidate that is not a weak Condorcet winner to tie a weak Condorcet
winner. For example, in the universal counterexample at the end of Section A.2, candidate a, which
is not a weak Condorcet winner, ties weak Condorcet winner c.

450

fiBypassing Combinatorial Protections

Algorithm 1 Dodgson winners
1: if kV k = 0 or kCk = 0 then
2:
return C
3: else if kV k is odd or (kV k is even and the two median voters have the same top choice)
then
4:
return the candidate chosen by the median voter(s)
5: else
6:
Let m` and mr , m` L mr , be the top choices of the median voters
7:
for all p  [m` , mr ]L do
8:
DodgsonScore(p)  
9:
Let T` be the set of candidates c such that c L p and c ties p
10:
Let Tr be the set of candidates c such that p L c and c ties p
11:
for all v` , vr  V such that T` >v` p and Tr >vr p do
12:
Move p up in the order of v` beyond every candidate in T`
13:
Move p up in the order of vr beyond every candidate in Tr
14:
Let n be the number of switches used to do this
15:
if n < DodgsonScore(p) then
16:
DodgsonScore(p)  n
17:
return {p  C | DodgsonScore(p)  DodgsonScore(c) for all c  [m` , mr ]L }
Let Ar , Br , and Cr be sets of candidates such that vr s order is of the form
Ar > cr > Br > p > Cr .
Note that T` >v` p >v` Tr and Tr >vr p >vr T` . Clearly, v` 6= vr and it takes kB` k + 1
switches to switch p beyond c` in v` and it takes kBr k + 1 switches to switch p beyond cr in
vr . After these kB` k + kBr k + 2 switches, v` s order has turned into A` > p > c` > B` > C`
and vr s order has turned into Ar > p > cr > Br > Cr . Since T`  Cr , we still have to
ensure that p gains a vote over every candidate in A`  T` and since Tr  C` , we still have
to ensure that p gains a vote over every candidate in Ar  Tr . So,
DodgsonScore(p)  kB` k + kBr k + 2 + kA`  T` k + kAr  Tr k.
We now show that Algorithm 1 correctly computes the Dodgson score of p. First note
that the algorithm computes an upper bound on the Dodgson score, since p is made a
Condorcet winner in each iteration of the for loop (recall from Fact 3.1 that p is already a
weak Condorcet winner). Now consider the score computed by the algorithm for voters v`
and vr above (since T` >v` p and Tr >vr p, the algorithm will consider these two voters).
In the analysis, it may help to keep in mind that c` L T`  {c` } L p L Tr  {cr } L cr .
If the top choice of v` is c` itself or to the left of c` , then A`  T` = . In this case,
moving p up in the order of v` beyond every candidate in T` gives
A` > p > c` > B` > C` .
If the top choice of v` is to the right of c` , then for every candidate c  A` , c` L c L p. It
follows by Claim 3.7.1 that A` = A`  T` . In this case, the algorithm changes v` to
p > A` > c` > B` > C` .
451

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

In both cases, the algorithm uses kB` k + 1 + kA`  T` k switches on v` . The same argument
shows that the algorithm uses kBr k + 1 + kAr  Tr k switches on vr . This clearly makes p
a Condorcet winner using kB` k + kBr k + 2 + kA`  T` k + kAr  Tr k switches. Since this is
also an upper bound (see above), it follows that
DodgsonScore(p) = kB` k + kBr k + 2 + kA`  T` k + kAr  Tr k.
We still have to handle the case that T` =  or Tr = . Without loss of generality,
assume that Tr = . Since m` and mr tie p and m` 6= mr , it follows that T` 6= . Let c`
be the leftmost candidate in T` . As in the previous case, there exist a voter v` and sets of
candidates A` , B` , and C` such that v` s order is of the form
A` > c` > B` > p > C`
and
DodgsonScore(p)  kB` k + 1 + kA`  T` k.
We now show that Algorithm 1 correctly computes the Dodgson score of p. Consider
the score computed by the algorithm for voter v` above and letting vr be an arbitrary voter.
Since T` >v` p and Tr >vr p (since Tr = ), the algorithm will consider these two voters.
As in the previous case, the algorithm uses kB` k + 1 + kA`  T` k switches on v` . And
since Vr = , the algorithm uses zero switches on vr . This clearly makes p a Condorcet
winner using kB` k + 1 + kA`  T` k switches. Since this is also an upper bound, it follows
that
DodgsonScore(p) = kB` k + 1 + kA`  T` k.
q Claim 3.5
Proof of Claim 3.6. Let d 6 [m` , mr ]L . Without loss of generality, assume that mr L d.
We will show that DodgsonScore(d) > DodgsonScore(mr ), which implies that d is not a
Dodgson winner. Let T be the set of candidates in C  {mr } that mr ties with. Note that
T 6= , since m` ties with mr . For every c  T , c L mr (by Claim 3.7.2) and d does not beat
c (half of the voters prefer c to mr , and since c L mr L d, these voters prefer c to mr to d).
Consider an optimal (with respect to the number of switches) way to turn d into a
Condorcet winner. Let c` be the leftmost candidate in T . Since half of the voters prefer c`
to mr to d, there exists a voter v such that c` >v mr >v d and d gets switched beyond c`
in v. Let A, B, C1 , and C2 be sets of candidates such that vs order is of the form
A > c` > B > mr > C1 > d > C2 .
It takes kBk + kC1 k + 2 switches to switch d beyond c` in v, and after these switches, vs
order has turned into
A > d > c` > B > mr > C1 > C2 .
We still have to ensure that d gains a vote over every candidate in A  T . So,
DodgsonScore(d)  kBk + kC1 k + 2 + kA  T k.
Now consider mr . Since c` is the leftmost candidate in T and for every c  T , c L mr ,
it holds that T >v mr . Since mr is a weak Condorcet winner, moving mr up in the order
452

fiBypassing Combinatorial Protections

of v beyond every candidate in T makes mr a Condorcet winner and gives an upper bound
on the Dodgson score of mr .
If the top choice of v is c` itself or to the left of c` , then A  T = . In this case, moving
mr up in the order of v beyond every candidate in T gives
A > mr > c` > B > C1 > d > C2 .
If the top choice of v is to the right of c` , then for every candidate c  A, c` L c L mr . It
follows by Claim 3.7.1 that A = A  T . In this case, moving mr up in the order of v beyond
every candidate in T gives
mr > A > c` > B > C1 > d > C2 .
In both cases, we use kBk + 1 + kA  T k switches on v. This clearly makes mr a Condorcet
winner, and
DodgsonScore(mr )  kBk + 1 + kA  T k < DodgsonScore(d).
q Claim 3.6

It follows that d is not a Dodgson winner.

q Theorem 3.4
Both claims in Theorem 3.4 contrast directly with the known p2 -completeness of the
general-case Dodgson (Hemaspaandra et al., 1997) and strongYoung (Rothe et al., 2003)
winner problems, and thus reflect a substantial complexity simplification that holds when
electorates are single-peaked. In this section we have focused on the election systems of
Dodgson, Kemeny, and Young, which are natural, important and were the first three election
systems to be proven to have p2 -complete winner problems (for at least one of their strong
or weak variants). We commend to the reader the issue of obtaining, for other election
systems with hard winner problems, reductions in winner complexity for the single-peaked
case.
Although Theorem 3.4 is about winners rather than about bribery/manipulation/control
protections, its proof is a good, simple example of this papers theme that single-peakedness
tames combinatorial explosions. Taking Dodgson as an example: In the general case (not
necessarily single-peaked votes), the set of paths to potentially implement best Dodgson
scores is combinatorially explosive (to the best of current knowledge). In contrast, in the
single-peaked case in searching for paths to implement best Dodgson scores it turns out
we can restrict ourselves to changing just two voters in a particularly simple way that yields
a polynomial-sized set of options in our search space.

4. Bribery of Single-Peaked Elections
This section shows that single-peakedness undercuts many, although not all, NP-hardness
protections for bribery problems.
453

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

4.1 Notions
All bribery notions presented here, except negative approval bribery, are from the paper that started the complexity-theoretic study of bribery (Faliszewski, Hemaspaandra, &
Hemaspaandra, 2009). Given an election system E, the E-bribery problem takes as input
C, V , p  C, and k  {0, 1, 2, . . .}, and asks if, by changing the votes of at most k members of V , p can be made a winner of this election with respect to E. That is the basic
bribery problem. And it can be modified by any combination of the following items. $
means each voter has a price (belonging to {1, 2, 3, . . .}) and the question is whether there
is some set of voters whose total price is at most k such that by changing their votes we
can make p be a winner. The intuition for prices is that some voters can be swayed more
easily than others. Weighted means each vote has a weight (belonging to {1, 2, 3, . . .}),
and each weight w vote is bribed as an indivisible object, but when applying E, is viewed
as w identical regular votes. The intuition for weights is that in some electionse.g., by
stockholdersvoters have differing weights.
For the case where V consists of linear orders, by negative we mean that if we bribe a
voter then after that bribe the voter must not have p as his or her top choice unless p already
was the top choice before the bribe.7 The intuition is that in negative bribery one is trying
to stay under the radar by not directly helping ones candidate. For voting by approval
vectors, we give definitions to capture both the analog of the linear-preference negative
notion we just defined (negative) and of the one one would get by taking Faliszewski
et al. (2009) utterly literally (strong negative)see Footnote 7 for more background.
For approval-vector votes, by negative we mean that when you bribe a voter, his or her
after-bribe vector can approve p only if his or her before-bribe vector approved p. By
strongnegative we mean that when you bribe a voter the voter after being bribed cannot
approve p. The notions described above can occur in any combination, e.g., we can speak
of Llull-negative-weighted-$bribery.
When we speak of the single-peaked case of any of the above, we mean the electorate
is single-peaked, and an L relative to which the votes are single-peaked is itself part of
the input. Further, all bribes must result only in votes that are consistent with the input
societal order L. Taking L as part of the input, and as binding the legal bribes, is the
natural bribery analog of the manipulation model of Walsh (2007) and Faliszewski et al.
(2011). Binding the bribes to respect L is natural, e.g., if L is widely known, the central
authority may simply reject (as obviously manipulative votes) votes that violate L. But
although this is our core model, many of our results carry over to models more flexible on
these points, and we will at times point that outsee Footnote 8, Footnote 9, and the final
paragraph of Section 5.1.
7. The Faliszewski et al. (2009) definition of negative bribery more naturally can be read to have the quite
different semantics that each bribed voter must, after the bribe, not have p as his or her top choice.
Since that paper used negative bribery only for plurality, this issue made no difference in that paper, and
indeed since we look at negative bribery for linear orders here mostly with respect to weakCondorcet
in single-peaked contexts, it is not a key issue here either. But we have switched to a definition that
captures a more attractive notion: You cannot directly boost your preferred candidate p to the top, but
for votes where p is already at the top you can shift the remaining preferences. The distinction between
these two approaches to negative does change proofs for the case of approval voting, and so for that
we will give separate definitions that capture each notion.

454

fiBypassing Combinatorial Protections

We will often speak about bribery (or, later, manipulation and control) problems being
in P (or in polynomial time). Although formally that just asserts that a P algorithm
exists to say whether a successful bribery (or manipulation or control) action exists, in fact
in every such instance we in our proof show how to in addition obtain an actual, successful
bribery (or manipulation or control) action when one exists. The reason this is worth
mentioning is that, even in the context of elections, search can plausibly be harder than
decision (Hemaspaandra, Hemaspaandra, & Menton, 2013).
4.2 Approval-Bribery Results
As our spotlight result for approval-bribery, we will prove that the bribery protection that
complexity gives there fails on single-peaked electorates.
Theorem 4.1 (Faliszewski et al., 2009). Approval-bribery is NP-complete.
Theorem 4.2. Approval-bribery is in P for single-peaked electorates.8
Before we prove Theorem 4.2, we will informally explain what key challenge (namely,
incomparability) exists regarding proving it and how our proof overcomes that challenge
(namely, by using directionality).
So, recall that in approval bribery in the single-peaked setting, the societal order, L, is
part of the input and each voter approves of some (possibly empty) set of candidates that are
contiguous with respect to L. Suppose the input linear order L is c1 L c2 L c3 L    L c100
with respect to which the society is single-peaked. Suppose the candidate the briber is trying
to make win is c25 . Suppose that the input limit on the number of people the briber can
bribe is 2009 and suppose our input election has 5000 voters of which 3000 (call them V )
initially do not approve of c25 and 2000 (call them V+ ) initially do approve of c25 . Now,
clearly, we will not spend any of our 2009 bribes on voters from V+ , as those voters already
approve of c25 , and so bribing a voter from V+ is never better than bribing a voter from
V . So, our goal is to seek a good set of 2009 voters from V , if such exists.
The key challenge, even given single-peakedness, can be stated in a word: incomparability. That is, given that we know that the number of approvals for c25 will go up by exactly
2009 after the bribe, and given we know the total number of approvals each other candidate
gets before the bribe, we for each candidate ci other than c25 have a target number ni
such that among the 2009 votes we choose to bribe from V , at least ni must initially have
approved of ci (in order for c25 to beat ci after the bribe).
Now, here is the rub. Consider two voters from V , one of whom approves of c30 through
c55 and the other of whom approves of c40 through c80 . Among these two votes, only the
former helps us address positive ni values for 30  i  39, and only the latter helps us
address positive ni values for 56  i  80. Since neither voters approval set contains
the others, they offer differing advantages, and neither is, at first glance, obviously one
we should include in our 2009. And in fact the 3000 voters of V are a thicket of such
incomparabilities. Indeed, trying to find a subset of size 2009 (in this particular example,
8. This result holds both in the model where L is part of the input and the model in which we must find
an L consistent with the input and relative to which bribery is possible. The result also holds even in
the modelnot our core model for which we will prove itin which the bribed voters need not respect
the societal order after being bribed.

455

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

the number will vary with the input) feels very much like a covering problem, which in fact
is exactly the path by which the general case was proven NP-hard by Faliszewski et al.
(2009).
However, we will use single-peakedness to tame the combinatorial challenge of choosing
a good subset. We in particular will use single-peakedness to induce a directional attack
that will locally make incomparability disappear at each moment at which we need to make
a decision about choosing some of the 2009. (Although the focus here is bribery, and our
construction and arguments are tailored to that, we mention that our line of attack is
modeled on what Faliszewski et al., 2011, call smart greedy algorithms and that they
use to study control attacks.) Our full proof is in the appendix, but the key idea can be
easily conveyed if the reader will be so kind as to visualize along with us for a moment.
Consider the largest i such that ni > 0, and (for the purpose of this example) suppose
that i is strictly greater than 25let us say that it is 93, and suppose n93 = 3. Then we
must include in the 2009 at least three members of V who approve of c93 . But which
three? Isnt incomparability still a problem? No! Since we chose the largest i for which
ni > 0, clearly n94 =    = n100 = 0. So although among the voters in V who approve
of c93 there may be incomparability of approval ranges, range differences to the right of
c93 are utterly irrelevant, as c25 is already beating all those candidates anyway. The only
interesting issue is, among the voters of V who approve of c93 , what their leftmost approved
candidate isthe more leftward the better as that will help on the most possible ni deficits.
But now we can do direct comparisons and take action: We will put into our 2009 the
three voters (among the V voters who initially approve of c93 ) whose approval range is the
leftmost. (If V lacks three voters who approve c93 , then since n93 = 3, successful bribery
is impossible.) And the process now continues as one would expect: Based on those three
votes, all ni values are updated and the next leftmost ni > 0 satisfying i  26 is similarly
handled, and so until all ni > 0 with i  26 are handled, and then starting from the other
end of L we will analogously handle c1 through c24 . If we neutralize all ni > 0 within
2009 bribes among V , we have a successful bribery, and otherwise none is possible. This
concludes our example of how single-peakedness creates a directionality that tames the rich
covering problem caused by incomparability.
In fact, this example is essentially (if one removes the particular integer values we
used) a complete proof for the case that k  kV k. And note that if k  kV k, we can
always make p a winner by bribing all voters from V , since after the bribe all voters approve
of p. The following proof of Theorem 4.2 gives a more careful exposition of the process.
However, a reader comfortable with the somewhat informal presentation just given may
wish to at least initially simply skip over the following detailed proof.
Proof of Theorem 4.2. Let (C, V ) be an instance of a single-peaked election where the
societal order L is given by c1 L c2 L    L ckCk and let k be our bribe limit. We have to
decide whether a designated candidate p  C can be made an approval winner by bribing
at most k voters. Without loss of generality, we can assume that after the bribe, all bribed
voters approve of p and disapprove of all other candidates.
Partition the multiset V of all voters into the multiset V+ of voters that approve of p
and the multiset V of voters that disapprove of p. If k  kV k, we can obviously make p a
winner by bribing all voters from V , since after the bribe all voters approve of p. (The only
case in which we need to bribe a voter from V+ is if everybody approves p (i.e., V = ),
456

fiBypassing Combinatorial Protections

there exists a candidate other than p that is also approved by every voter, and we want
to make p the unique approval winner; in this case, bribing one arbitrary voter obviously
suffices.)
Now assume that k < kV k. Without loss of generality, we can assume that we bribe
exactly k voters, because there is a successful bribe that involves at most k voters if and only
if there is a successful bribe that involves exactly k voters. We can also argue that bribing
a voter from V+ is never more profitable than bribing a voter from V . The reason is that
for each ci  C  {p}, bribing a voter from V+ lowers the quantity number of approvals
for ci  number of approvals for p by at most 1, whereas bribing a voter from V lowers
this quantity by at least 1. Thus we assume without loss of generality that we bribe only
voters from V and we know that after the bribe, p has exactly b
k = kV+ k + k approvals.
For each candidate ci  C  {p}, let Vci be the multiset of voters that approve of ci and
define the surplus ni of ci as ni = kVci k  b
k. In order to make p a winner, we have to bribe
at least ni voters from Vci  V for all candidates ci that have a positive surplus.
Let us first consider candidates to the right of p, i.e., candidates c with p L c. In order
to avoid incomparability problems, we start at the right end of L. Let ci be the rightmost
candidate that has a positive surplus ni > 0. We know that we have to bribe at least ni
voters from Vci  V , but the question is which ones. As nj  0 for all j > i, we can solely
focus on candidates to the left of ci and bribe the ni voters from Vci  V whose approval
range extends the furthest to the left of ci . After the bribe, those voters approve of p only.
We have thereby achieved that ni = 0 and it is clear that our choice was optimal in the sense
that no other choice would have removed a greater number of approvals from candidates
other than p (ignoring candidates to the right of ci ).
We now update the surplus for all candidates and move to the next rightmost candidate ci0 to the right of p with a positive surplus. (Observe that i0 < i because for all j > i,
nj was initially nonpositive and the surplus of a candidate never grows when bribing a voter
to approve only of p.) We repeat this procedure until all candidates to the right of p have
a nonpositive surplus, at which point we mirror the societal order and repeat the whole
process, thereby handling all candidates c with c L p.
If we exceed our bribe limit k during this process, there cannot be a successful bribery
action: All the choices we have made during the algorithm are provably at least as good
as any other choice would have been. If, on the other hand, bribing k 0  k voters suffices
to make all surpluses nonpositive, we bribe (k  k 0 ) additional voters chosen arbitrarily
from V (to ensure that p has b
k approvals) and have thereby found a successful bribery
action.
q Theorem 4.2
By the same general approach used to prove Theorem 4.2using a directional attack
to in the single-peaked setting tame the incomparability challenges of covering problems
we can establish the following two additional cases in which NP-hard bribery problems fall
to P for the single-peaked case.
Theorem 4.3. The following hold:9
9. The claim is in our standard model: nonunique-winner model (i.e., we ask if the preferred candidate p can
be made to be a winner); the societal order L is given as part of the input; and bribed voters must still
respect L. However, we note in passing that the claim still holds with any of the choices one can make

457

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

1. Approval-negative-bribery and approval-strongnegative-bribery are NP-complete.
2. For single-peaked electorates, approval-negative-bribery and approval-strongnegativebribery are in P.
Faliszewski, Hemaspaandra, and Hemaspaandra (2011a, see also Faliszewski, Hemaspaandra, & Hemaspaandra, 2011b) have observed that the constructions in our proofs of
Theorem 4.2 and of Theorem 4.3 (part 2) can be used to show that those results hold even
in the more flexible model in which up to a logarithmic number of voters can violate the
societal linear order.
4.3 Llull-Bribery and Kemeny-Bribery Results: weakCondorcet Consistency
We now state the following eight-case result. The membership-in-P claims of Theorem 4.4
below are proven by direct algorithmic attacks using the connection between weakCondorcet
and median voters. That theorems NP-completeness claims are shown by reductions from
the NP-complete problems Knapsack and Partition.
Theorem 4.4. For single-peaked electorates, weakCondorcet-weighted-$bribery, weakCondorcet-negative-weighted-bribery, and weakCondorcet-negative-weighted-$bribery are
NP-complete, and the remaining five cases (weakCondorcet-bribery, weakCondorcet$bribery, weakCondorcet-weighted-bribery, weakCondorcet-negative-bribery, weakCondorcetnegative-$bribery) are in P.
Theorem 4.4 is most interesting not for what it says about weakCondorcet elections,
but for its immediate consequences on other election systems.
Corollary 4.5. Let E be any election system that is weakCondorcet-consistent or that is
merely weakCondorcet-consistent on single-peaked inputs. Then the three NP-completeness
and five P results of Theorem 4.4 hold (for single-peaked electorates) for E.
From our discussions earlier in the paper, Corollary 4.5 applies to the Llull, Kemeny,
Young, weakDodgson, Maximin, Schwartz, weakBlack, Fishburn, and the two variants of
Nanson due to Fishburn and Schwartz. In light of this, Corollary 4.5 is quietly establishing
a large number of claims about NP-hardness shields failing for single-peaked electorates.
For example, we have the following claims.
Theorem 4.6 (Faliszewski et al., 2009). Llull-bribery, Llull-$bribery, Llull-weighted-bribery,
and Llull-weighted-$bribery are each NP-complete.
Theorem 4.7 (follows from Corollary 4.5). For single-peaked electorates: Llull-bribery,
Llull-$bribery, and Llull-weighted-bribery are each in P and Llull-weighted-$bribery is NPcomplete.
regarding: nonunique-winner model vs. unique-winner model; L is part of the input vs. we are asking
whether there exists a valid L with respect to which a successful bribery can be accomplished; and the
bribed voters respect L model vs. the model in which the bribed voters may violate L. Seeing that the
result holds in these various alternate models requires natural modifications of the proof in some cases
(e.g., nonunique vs. unique), and requires taking advantage of specific properties of the construction in
other cases (e.g., regarding allowing bribed voters to violate L, the constructions actually only bribe
voters to end up approving zero or one candidate, and such votes are consistent with every ordering).

458

fiBypassing Combinatorial Protections

To the best of our knowledge, bribery of Kemeny elections has never been studied. Note,
however, that the winner problem for any election system E many-one reduces to each of the
eight types of bribery problems mentioned in Theorem 4.4, except with weakCondorcet
replaced by E. This holds because we can ask whether the preferred candidate wins
given the bribe limit of 0, and this captures the winner problem. So, from the known
p2 -completeness of the winner problem for Kemeny elections (Hemaspaandra et al., 2005),
we have the following result, which gives us eight contrasts of hardness (three between
p2 -hardness and NP membership and five between p2 -hardness and P membership).
Theorem 4.8. For Kemeny elections, all eight types of bribery mentioned in Theorem 4.4
are p2 -hard.
Theorem 4.9 (follows from Corollary 4.5). For single-peaked electorates, Kemeny-weighted$bribery, Kemeny-negative-weighted-bribery, Kemeny-negative-weighted-$bribery are NPcomplete (and so in particular each belongs to NP). For single-peaked electorates, the
remaining five types of bribery of Kemeny elections are in P.
As a final remark regarding Theorem 4.4, we note that even within the single-peaked
cases that it studies, there is one twist, in which changing from bribery to negative bribery
changes the complexity, namely, for single-peaked electorates, weakCondorcet-weightedbribery is in P but weakCondorcet-negative-weighted-bribery is NP-complete. Here, decreasing the set of bribes available to the briber actually boosts the complexity of the
bribers task. (The explanation for this is, very loosely and intuitively speaking, that
among the set of bribes that negativity removes from the search space are the set of bribes
used in the P-time nonnegative case bribery attack.)

5. Control by Partition of Single-Peaked Electorates
The control problems for elections ask whether by various types of changes in an elections
structure a given candidate can be made a winner. (In some papers, seeking to make a
candidate a winner through structural changes is called constructive control to distinguish
it from the destructive case in which we are trying to preclude a candidate from winning.
However, in this paper we always use control in the constructive sense, unless we explicitly
mention otherwise.) The types of control that were introduced in 1992 by Bartholdi, Tovey,
and Trick, and that (give or take some slight refinements) have been studied in subsequent
papers, are addition/deletion/partition of voters/candidates. However, to the best of our
knowledge previous study of the complexity of control for single-peaked electorates (such as
that of Faliszewski et al., 2011) focused exclusively on additions and deletions of candidates
and voters.
We for the first time study the complexity of partition problems for the case of singlepeaked electorates. And we show that for a broad range of election systems the control by
partition of voters problem is in P for single-peaked electorates. Among the systems we do
this for are Llull and Condorcet elections, whose control by partition of voters problem is
known to be NP-complete for general electorates. Our proofs again work by using singlepeakedness to tame combinatorial explosionin this case, the number of partitions that
must be examined is reduced from an exponential number of partitions to a polynomial
number of classes of partitions each of which can be checked as a block.
459

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

5.1 Notions
We will now define the key types of control that we will study: control by partition of
voters, control by adding voters, and control by deleting voters.
Partition of voters models the case where the partitioned electorate has primaries. An
example from Faliszewski et al. (2009a) is a business group where a powerful manager studies
an issue by splitting his or her group into two task forces each to (by voting) recommend
alternatives to be part of a final vote to be conducted by the entire group. This (loosely)
corresponds to control by partition. Control by adding voters loosely models such actions
as targeted get-out-the-vote drives. Control by deleting voters loosely models such actions
as targeted attempts at voter suppression.
For the partition case, in which there are two first-round elections and a second-round
election, there are two different approaches to which candidates move forward from each
first-round election. One is the Ties Promote (TP) model, in which all winners of a firstround election move forward. The other is the Ties Eliminate (TE) model, in which, for
each first-round election, its unique winner moves forward if it has a unique winner and
otherwise no one moves forward from that first-round election. For consistency, these control
definitions are adopted, often word-for-word, from those in the papers by Hemaspaandra
et al. (2013), Faliszewski et al. (2009a), and Faliszewski, Hemaspaandra, and Hemaspaandra
(2014).
Definition 5.1. Let E be an election system.
1. In the control by partition of voters problem for E, in the TP or TE tie-handling rule
model, we are given an election (C, V ) and a candidate p  C. Is there a partition10 of
V into V1 and V2 such that p is a winner of the two-stage election where the winners
of election (C, V1 ) that survive the tie-handling rule compete against the winners of
(C, V2 ) that survive the tie-handling rule? Each of the two first-round and the one
second-round elections is conducted using election system E.11
2. In the control by adding voters problem for E we are given a set of candidates C,
two collections of voters, V (often referred to as the collection of registered voters)
and W (often referred to as the collection of unregistered voters), with preferences
over C, a candidate p  C, and a nonnegative integer K. We ask whether there is a
subcollection W 0  W such that (a) kW 0 k  K, and (b) p is a winner of E election
(C, V  W 0 ).
3. In the control by deleting voters problem for E we are given an election (C, V ), a
candidate p  C, and a nonnegative integer K. We ask whether there is a collection
V 0 of voters that can be obtained from V by deleting at most K voters such that p is
a winner of E election (C, V 0 ).
10. A partition of a collection A is a pair of collections (A1 , A2 ) such that A1  A2 = A and A1  A2 = ;
since different voters can have the same preferences, these are multiset operations.
11. It is very important to note that in this definition and when we draw on it, when we speak of an election,
(C 0 , V 0 ), we always implicitly mean that each vote in V 0 is passed to the election system only as the
version of itself restricted to the candidates in C 0 . In particular, this is relevant to the second-round
election here.

460

fiBypassing Combinatorial Protections

The above three definitions are all for what is called the nonunique-winner model,
namely, the question is: Can p be made a winner of the final election? Another model
that has been studied in the literature is called the unique-winner model, in which the
questions above are replaced with: Can p be made to uniquely win the final election? We
find most natural for study the TP, nonunique-winner model. (TP and nonunique-winner
pair naturally, as do TE and unique-winner.) In contrast, the seminal control paper of
Bartholdi et al. (1992) used the unique-winner model. To be as clear and broad as possible
as to which of these models our results hold in, we have checked that our results hold for all
four model combinations (i.e., TP and unique-winner, TP and nonunique winner, TE and
unique-winner, and TE and nonunique-winner).
When we speak about a control problem for single-peaked electorates, we will mean that
the societal order L is part of the input. And we mean that single-peakedness must hold
for the entire input (including any potentially added candidates and voters). However, for
control, it turns out that in the just-mentioned model polynomial-time membership holds if
and only if polynomial-time membership holds in the model in which one is not given an L
as part of the input but rather one is asked whether there exists some linear order L relative
to which the input (as before, even including all potentially added candidates and voters)
is single-peaked and is such that the goal can be achieved by the given control action. This
claim is formalized as Theorem A.5 and proven in the appendix. In light of Theorem A.5,
we will simply assume all our control results are in the default model (societal order is part
of the input).
5.2 Control Results Related to weakCondorcet Elections
In this section we present our control results, with a focus on control by partition of voters. We will see that although Llull and Condorcet elections have NP-hard voter-partition
control problems, those problems fall to polynomial time for single-peaked electorates. Our
spotlight result for this section states that partition-by-voters control for weakCondorcet
elections is in P.
Theorem 5.2. For weakCondorcet elections, control by partition of voters is in P for singlepeaked electorates, in both the nonunique-winner model and the unique-winner model, and
in both the Ties Promote model and the Ties Eliminate model.
Before giving Theorem 5.2s proof, let us note some consequences and contrasts.
Corollary 5.3. Let E be any election system that is weakCondorcet-consistent on singlepeaked inputs. Then for election system E, control by partition of voters is in P for singlepeaked electorates, in both the nonunique-winner model and the unique-winner model, and
in both the Ties Promote model and the Ties Eliminate model. In particular, this holds for
the election systems Llull, Kemeny, Young, weakDodgson, Maximin, Schwartz, weakBlack,
Fishburn, and the two variants of Nanson due to Fishburn and Schwartz.
For Llull elections, this provides a clear contrast with the known NP-completeness for
that same control type in the general case.
Theorem 5.4 (Faliszewski et al., 2009a). For Llull elections, control by partition of voters
is NP-complete, in both the nonunique-winner model and the unique-winner model, and in
both the Ties Promote model and the Ties Eliminate model.
461

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Algorithm 2 weakCondorcet Control by Partition of Voters
1: for all a, b, c, d  C such that a L b, c L d, a L c, and p is a weakCondorcet winner
in (C 0 , V ) with C 0 = {e  C | a L e L b  c L e L d} do
2:
for all k  {0, 1, 2, . . . , kV k} do
3:
let r be the number of interesting regions
P
4:
for all ` = (`1 , `2 , . . . , `r )  Nr with ri=1 `i = k do
5:
define P` as the set of partitions (V1 , V2 ) such that for each i, `i is the
number of voters in V1 whose top choice is in Ri
6:
if P` 6=  then
7:
let (V1 , V2 ) be an arbitrary partition from P`
8:
if the set of weakCondorcet winners of (C, V1 ) equals [a, b] and the
set of weakCondorcet winners of (C, V2 ) equals [c, d] then
9:
return (V1 , V2 )
10: return there is no partition of voters that makes p a weakCondorcet winner

We now turn to the proof of Theorem 5.2. The idea behind the proof differs completely
from the approach used in the polynomial-time control proofs in Faliszewski et al. (2011),
and is, we think, novel.
Proof of Theorem 5.2. Let (C, V ) be an election and L a linear order of C with respect
to which the electorate is single-peaked. We have to decide whether a designated candidate
p  C can be made an overall winner by partitioning the set of voters in an appropriate
way.
Our algorithm is tailored to the natural Ties Promote, nonunique-winner model, but
we will at the end of the proof mention how it can be adapted to the other models. In our
natural model, we want to find a partition (V1 , V2 ) such that p is a weakCondorcet winner
in the election (C 0 , V ) where C 0 is the union of the weakCondorcet winners in (C, V1 ) and
(C, V2 ).
We show that Algorithm 2 returns a partition with this property whenever one exists.
Algorithm 2 loops over all 4-tuples a, b, c, d of candidates and tests whether the voters can
be partitioned into (V1 , V2 ) in such a way that (a) the weakCondorcet winners of (C, V1 )
are [a, b] (i.e., all candidates in {x  C | a L x L b}, writing y L z for (y = z or y L z)),
(b) the weakCondorcet winners of (C, V2 ) are [c, d], and (c) p is a weakCondorcet winner in
([a, b]  [c, d], V ).
For each 4-tuple a, b, c, d, we divide the set C of candidates into disjoint interesting
regions. Regions are defined as follows. Each of the candidates a, b, c, d constitutes a
region in itself. Furthermore, each contiguous (with respect to L) interval between two
of those four candidates is a region. Finally, there are two additional regions, namely one
interval consisting of all candidates that are to the left of a, b, c, d and one interval consisting
of all candidates that are to the right of a, b, c, d.
Note that all of the intervals not containing a, b, c, or d may be empty, because the
set {a, b, c, d} may contain adjacent or even identical candidates. It is easy to see that the
number of interesting (i.e., nonempty) regions is at most nine, and is equal to nine if and
only if there are no adjacent or identical candidates among a, b, c, d. Assuming that this is
462

fiBypassing Combinatorial Protections

the case, there are three possible situations, depending on the relation between the intervals
[a, b] and [c, d].
1. The intervals are disjoint:
a
R1

R2

c

b
R3

R4

R5

R6

d
R7

R8

R9

2. The intervals have a nonempty intersection, but neither contains the other:
a

R1

R2

c

R3

R4

b

R5

R6

d

R7

3. One interval contains the other:
a
c
d

R1

R2

R3

R4

R5

R6

R8

R9

b

R7

R8

R9

If the set {a, b, c, d} contains adjacent or identical elements, some of the regions pictured
above will be empty or identical, and so there will be less than nine interesting regions. If
there are r interesting regions, we will denote them by R1 , . . . , Rr , from left to right with
respect to L.
Associate each voter with the candidate at the top of that voters preference order. The
following observation turns out to be helpful. If [a, b] is the set of weakCondorcet winners
in (C, V1 ), then there can be no voters in V1 that have a top choice x with a <L x <L b.
Similarly, no voter in V2 can have a top choice strictly between c and d. That is, a region
that consists of voters whose top choice lies strictly between either a and b or c and d is fully
determined with regard to the question of how many voters are in V1 and V2 . For example,
in the case where [c, d] is contained in [a, b], five of the nine regions are fully determined:
All voters from R3 , R4 , R6 , and R7 have to be in V2 and there must not be any voters in
region R5 , as such voters would lie both between a and b and between c and d. By this
argument, one can see that the maximum number of regions that are not fully determined
is 7 (in the case where the intervals [a, b] and [c, d] are disjoint). Clearly, the number of
ways that kV k can be divided into 7 ordered numbers is bounded by kV k6 .
The fact that the weakCondorcet winners in (C, V1 ) and (C, V2 ) can be efficiently checked
is due to the following key observation. Within each region, the only thing that affects the
winner set is the number of voters we put into V1 , not which voters we use to achieve
that number. That is, we do not need to check each partition individually (there are an
exponential number of them), but rather deal with a large number of partitions simultaneously. More formally, suppose we have r interesting regions and let ` = (`1 , `2 , . . . , `r ) be
463

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

an r-dimensional vector of natural numbers. We now define P` as the set of all partitions
(V1 , V2 ) of V such that for each i, `i is the number of the voters from V1 whose top choice
is in Ri .
For P` 6= , our key observation can now be restated as follows. [a, b] is the set of
weakCondorcet winners in some election (C, V1 ) with (V1 , V2 )  P` if and only if [a, b] is
the set of weakCondorcet winners in every election (C, V1 ) with (V1 , V2 )  P` . That is, if
we want to check whether [a, b] is the set of weakCondorcet winners in any of the primary
elections (C, V1 ) induced by any of the partitions (V1 , V2 )  P` , it suffices to check just one
of them to obtain the answer. This check can easily be done just by counting. By symmetry,
the same statement holds for [c, d] and for weakCondorcet winners of the elections (C, V2 )
(all four combinations).
The reason why this is true is that, given the number of voters in each region, it is easy
to recognize the region(s) of the median voter(s) (just by counting). Since a, b, c, and d all
constitute a region on their own, it is equally easy to tell whether a median voter has any
of these four candidates as his or her top choice.
Implementing this idea, the algorithm loops over all possible sizes k of V1 (line 2) and
over all possibilities how k can be divided into r numbers `1 , `2 , . . . , `r , and checks (line 8)
if this gives a partition as required. As we have argued in the last paragraphs, this query
can be efficiently answered.
The running time of Algorithm 2 can thus be bounded as follows. The number of
iterations for the loops in lines 1, 2, and 4, are bounded by kCk4 , kV k + 1, and kV k6 ,
respectively. Moreover, we have just shown that the queries in line 8 can be answered in
polynomial time. Altogether, this yields a running time that is obviously polynomial in the
size of the input.
Correctness of Algorithm 2 should be clear from the explanations above: We find a
partition that makes p an overall weakCondorcet winner if and only if such a partition
exists. In particular, observe that setting k = 0 in line 2 handles the case where p is
already a weakCondorcet winner in the original election.12 Note that the algorithms theme
perfectly supports the theme of this paper: The algorithm used single-peakedness to bypass
the combinatorial richness of partitions.
This completes the proof for the TP, nonunique-winner model. For the TP, uniquewinner model, line 1 of Algorithm 2 needs to be adapted to only loop over all choices of
a, b, c, d that make p a unique weakCondorcet winner in (C 0 , V ). The TE, unique-winner
model is dealt with in Theorem 5.6 on page 465. (By Fact 3.1 on page 448, being a
unique weakCondorcet winner is tantamount to being a Condorcet winner for single-peaked
electorates.)
The same is true for the TE, nonunique-winner model. Here, being a weakCondorcet
winner in the final election suffices, but Algorithm 3 (which can be found in the appendix)
can easily be adapted to take that into consideration.
q Theorem 5.2
12. To see this, assume that p  [m` , mr ], where [m` , mr ] is the interval of all weakCondorcet winners in
(C, V ). Observe that if we set a, b, c, d such that [a, b] = C and [c, d] = [m` , mr ], then C 0 = {e  C |
a L e L b  c L e L d} = C and obviously p is a weakCondorcet winner of (C 0 , V ). Thus, this
choice of a, b, c, d is considered in line 1. Now setting k to 0 uniquely defines ` to be (0, . . . , 0) and P`
consists of the partition (, V ) only. Due to the choice of a, b, c, d, the answer to the query in line 8 is
yes and (, V ) is correctly output as a partition that makes p an overall winner.

464

fiBypassing Combinatorial Protections

Before we turn from weakCondorcet to Condorcet elections, we state a result that will
quickly give us a number of additional contrasts between general-case control complexity
and single-peaked control complexity.
Theorem 5.5. For weakCondorcet elections, control by adding voters and control by deleting voters are each in P for single-peaked electorates, in both the nonunique-winner model
and the unique-winner model.
As usual, it immediately follows that the above result applies to our standard long
list of systems (e.g., Kemeny, Young, and weakDodgson elections) that are weakCondorcetconsistent on single-peaked electorates. The appendix contains similar results for Condorcet
elections. However, the winner problem in the general case trivially many-one polynomialtime reduces to control by adding voters (via asking if p can be made to win by adding 0
voters; see Hemaspaandra et al., 2009, Section 2.4). Thus, the existing p2 -hardness results
for the Kemeny winner problem (both in the nonunique-winner model, Hemaspaandra et al.,
2005, and in the unique-winner model, Hemaspaandra et al., 2009), the Young winner
problem (both in the nonunique-winner model and in the unique-winner model, see this
papers Theorem A.2), and the weakDodgson winner problem (both in the nonunique-winner
model and in the unique-winner model, see this papers Theorem A.4), themselves imply
that control by adding voters is p2 -hard for Kemeny, Young, and weakDodgson elections
(in both the nonunique-winner model and the unique-winner model). The same comments
hold for control by deleting voters. Thus the single-peaked and general cases of control by
adding and deleting voters differ for Kemeny, Young, and weakDodgson elections.
5.3 Control Results Related to Condorcet Elections
Control of Condorcet elections has been studied in much detail (Bartholdi et al., 1992;
Hemaspaandra, Hemaspaandra, & Rothe, 2007), and (see Table 1 of Hemaspaandra et al.,
2007) each standard control type is known to either never change the outcome at all or
to have a polynomial-time algorithm, with three exceptions. Namely, as Bartholdi et al.
(1992) proved in their seminal paper on control, control by addition of voters and control by
deletion of voters are both NP-complete for Condorcet elections; and control by partition of
voters is also NP-complete for Condorcet elections (due to Bartholdi et al., 1992, for a nownonstandard partition model, and due to Faliszewski et al., 2009a, for the now-standard
partition model).13 However, the following results show that these resistance results vanish
for single-peaked electorates.
Theorem 5.6. For Condorcet elections, control by partition of voters is in P for singlepeaked electorates, in both the nonunique-winner model and the unique-winner model, and
in both the Ties Promote model and the Ties Eliminate model (note that all four cases
coincide here).
13. That entire Bartholdi, Tovey, and Trick paper is in the unique-winner model, and so all the above discussion is in the unique-winner model. And we will thus need to establish our contrasting polynomial-time
results in the unique-winner model if we want a meaningful contrast. To address this, we will ensure
that our contrasting results hold in both models. But that holds trivially if we prove it in either model,
as for Condorcet elections, nonunique-winner and unique-winner coincide and Ties Promote and Ties
Eliminate coincideboth because one can never have two or more winners.

465

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Theorem 5.7. For Condorcet elections, control by adding voters and control by deleting
voters are each in P for single-peaked electorates, in both the nonunique-winner model and
the unique-winner model.
So, for all the standard control cases that Condorcet voting is known to be NP-hard for
in the general case (Bartholdi et al., 1992; Faliszewski et al., 2009a), we have shown that
Condorcet-voting control falls to polynomial time for single-peaked electorates.14

6. Manipulation of Single-Peaked Electorates: Dichotomy for
Constructive Coalition Weighted Manipulation
Faliszewski et al. (2011) completely characterized, for three-candidate elections, which scoring protocols have polynomial-time constructive coalition weighted manipulation problems
and which have NP-complete constructive coalition weighted manipulation problems. We
achieve a far more sweeping dichotomy theoremour result applies to all scoring protocols,
regardless of the number of candidates. Scoring protocols are arguably the most important
broad class of election systems.
In the constructive coalition weighted manipulation problem, the input is the candidate
set C, the nonmanipulative voters (each a preference order over C and a weight), the
manipulative voters (each just a weight), and a candidate p  C, and the question is
whether there is a way of setting the preferences of the manipulative voters such that p is a
winner under the given election rule when all the manipulative and nonmanipulative voters
vote in a weighted election.
Theorem 6.1 (Faliszewski et al., 2011). Consider a three-candidate scoring protocol,
namely,  = (1 , 2 , 3 ), 1  2  3 , 1  N, 2  N, 3  N. For the single-peaked case,
the constructive coalition weighted manipulation problem (in both the nonunique-winner
model and the unique-winner model) is NP-complete when 1  3 > 2(2  3 ) > 0 and is
in polynomial time otherwise.
Our extension of this three-candidate, single-peaked electorate result to the case of any
scoring protocol over single-peaked electorates is somewhat complicated. Yet, since it is
a complete characterizationa dichotomization of the complexities, in factit is in some
sense simply reflecting the subtlety and complexity of scoring systems. (For the general
i.e., not necessarily single-peakedcase, the known characterization is simple regardless
of the number of candidates: NP-completeness holds when kCk  2 and 2 6= kCk and
otherwise the problem is in P (Hemaspaandra & Hemaspaandra, 2007, see also Conitzer,
Sandholm, and Lang, 2007, and Procaccia and Rosenschein, 2007.) The following theorem
is this sections soleand spotlightresult.
Theorem 6.2. Consider an m-candidate scoring protocol, namely,  = (1 , 2 , . . . , m ) 
Nm , 1  2      m .
14. The sharp-eyed reader may wonder whether it is in concept possible that some of the general-case
polynomial-time results for control (e.g., Condorcet control by deleting candidates) might suddenly,
freakishly get harder in the single-peaked case. After all, Faliszewski et al. (2011) show a freakish case
where limiting to the single-peaked case increases manipulation complexity. However, it is not hard to
seeby reasoning related to that used to prove Theorem A.5that if a control type is in polynomial
time in the general case then in the single-peaked case it remains in polynomial time.

466

fiBypassing Combinatorial Protections

 If m  2 and 2 > b m1 c+2 and there exist integers i, j > 1 such that i + j  m + 1
2
and (1 i )(1 j ) > (i i+1 )(j j+1 ), then the constructive coalition weighted
manipulation problem for the single-peaked case is NP-complete.
 If m  2 and 2 = b m1 c+2 and 1 > 2 > m and (2 > m1 or 1  m >
2
2(2  m )), then the constructive coalition weighted manipulation problem for the
single-peaked case is NP-complete.
 In all other cases, the constructive coalition weighted manipulation problem for the
single-peaked case is in P.
For example, the constructive coalition weighted manipulation for the single-peaked case
for m-candidate plurality and m-candidate veto is in P, and for m-candidate Borda it is in
P if m  3 and NP-complete otherwise.
Note that Theorem 6.1 follows from Theorem 6.2, since 1 3 > 2(2 3 ) is equivalent
to 1  2 > 2  3 . We also note that the specific cases of more-than-three-candidate
scoring protocolssuch as four-candidate Borda and m-candidate vetothat were analyzed
for the single-peaked case by Faliszewski et al. (2011) yielded results completely consistent
with Theorem 6.2s characterization. The P cases of Theorem 6.2s dichotomy align with
our theme of single-peakedness often foiling combinatorial protections.
Proof of Theorem 6.2. We first give some intuition for the conditions of this theorem.
The P cases are exactly the cases where there is an optimal manipulator vote. For example,
we will show in Lemma 6.6 that if (1  i )(1  j )  (i  i+1 )(j  j+1 ) for all i, j > 1
such that i + j  m + 1, then the candidates scoring higher than p are all on one side of p,
say on the left, in the societal order. In that case it is optimal for the manipulators to rank
p first, then all candidates on ps right, and then all candidates on ps left.
In contrast, for the NP-complete cases there exists a societal order for which we can
construct elections where p has two main rivals, say a and b, and there are two different
types of optimal votes for the manipulators that have different effects on the scores of a
and b. Our NP-hardness proofs follow via reductions from the well-known NP-complete
problem Partition (see, e.g., Garey and Johnson, 1979). In this problem, we are given a
nonempty collection (k1 , . . . , kn ) of positive integers that sum to 2K, and we ask whether
there exists a subcollection of k1 , . . . , kn that sums to K. In all these cases we will carefully
define the societal order, the weights and votes of the nonmanipulators, and the weights
of the manipulators such that the weights of the manipulators voting for one of the two
optimal vote types in a successful manipulation correspond to a partition and vice versa.
We now turn to the formal proof of the theorem. For m  1, the problem is trivial and
thus in P. So, assume that m  2. We split the proof of Theorem 6.2 into three lemmas:
The 2 > b m1 c+2 NP-complete cases (Lemma 6.4), the 2 > b m1 c+2 P cases (follow
2
2
from Lemma 6.6), and the 2 = b m1 c+2 cases (Lemma 6.7).
2
In the proof, we use the following notation. For V a collection of voters and c a candidate,
scoreV (c) denotes the score of c in V , i.e., the number of points that c receives from the
voters in V . If V is clear from context, we will simply write score(c). In this section, we
usually denote the collection of nonmanipulators by S and the collection of manipulators
by T .
First we prove the following simple lemma.
467

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Lemma 6.3. In the constructive coalition weighted manipulation problem for the singlepeaked case for scoring protocols, if p can be made a winner, then p can be made a winner
by a manipulation in which all manipulators rank p first.
Proof of Lemma 6.3. Let A > p > b1 >    > b` be a single-peaked vote, where
A is a set of candidates in some order. Then there exists an ordering of A such that
p > A > b1 >    > b` is also single-peaked. Note that in this new vote, for every candidate
c, score(p)  score(c) does not decrease. So, if p is a winner of an election, then p is a still
a winner if we replace every single-peaked vote of the form A > p > b1 >    > b` by a
single-peaked vote of the form p > A > b1 >    > b` .
q Lemma 6.3
Lemma 6.4. Let  = (1 , 2 , . . . , m ) be a scoring protocol such that m  2 and 2 >
b m1 c+2 . If there exist integers i1 , i2 > 1 such that i1 +i2  m+1 and (1 i1 )(1 i2 ) >
2
(i1  i1 +1 )(i2  i2 +1 ), then the constructive coalition weighted manipulation problem
for the single-peaked case is NP-complete.
Proof of Lemma 6.4. Let i1 , i2 be integers that fulfill the conditions of the lemma such
that i1  i2 and i2 is minimal, i.e., 1 < i1  i2 , i1 + i2  m + 1, (1  i1 )(1  i2 ) >
(i1  i1 +1 )(i2  i2 +1 ), and for all i01 , i02 such that 1 < i01  i02 < i2 and i01 + i02  m + 1,
it holds that (1  i01 )(1  i02 )  (i01  i01 +1 )(i02  i02 +1 ).
We will now reduce Partition to the constructive coalition weighted manipulation
problem for single-peaked electorates. Let (k1 , . . . , kn ) be an instance of Partition, i.e.,
(k1 , . . . , kn ) is a nonempty collection of positive integers that sum to 2K. Let societys
order be
am1 L    L a1 L p L b1 L    L bm2 ,
where m2 = max(d m1
2 e, i2  1) and m1 = m  m2  1. Note that i2  m2 + 1. Since
i1 +i2  m+1, it follows immediately that i1  m1 +1. Also note that 1  m1  m2  m2.
To make the reduction work, we also need the following claim.
Claim 6.5. m1 +2 < 2 .
Proof of Claim 6.5.

If m1 = b m1
2 c, this is immediate, since 2 > b m1 c+2 . If not,
2

then m2 = i2  1 and i2  1 > d m1
2 e  2. Since i2 is minimal, the conditions of the lemma
can not be fulfilled with i1 = i2 = 2, and so (1  2 )  (2  3 ). If 2 = m1 +2 , then
2 = 3 , and it follows that 1 = 2 and thus 1 = m1 +2 . But then this choice of i1 , i2
does not fulfill the conditions of the lemma, since 1  i1 = 0.
q Claim 6.5
Let S consist of two voters, one voter of weight `1 with preference order
a1 >    > ai1 1 > p > b1 >   
(the    at the end of the vote denotes that the remaining candidates are listed in arbitrary,
single-peaked order) and one voter with weight `2 with preference order
b1 >    > bi2 1 > p > a1 >    ,
468

fiBypassing Combinatorial Protections

and let the weights of T be k1 , k2 , . . . , kn , where
 = (1  i1 )(1  i2 )  (i1  i1 +1 )(i2  i2 +1 ),
`1 = ((21  2  m2 +2 )(1  i2 ) + (i2  i2 +1 )(21  2  m1 +2 ))K, and
`2 = ((1  i1 )(21  2  m1 +2 ) + (i1  i1 +1 )(21  2  m2 +2 ))K.
These values were chosen (using Cramers Rule) so that
(1  i1 )`1  (i2  i2 +1 )`2 = (21  2  m2 +2 )K and
(i1  i1 +1 )`1 + (1  i2 )`2 = (21  2  m1 +2 )K.
Note that  is positive, since (1  i1 )(1  i2 ) > (i1  i1 +1 )(i2  i2 +1 ). Note
that `1 and `2 are also positive, since (1  i1 ) and (1  i2 ) are positive, and so are
(21  2  m1 +2 ) and (21  2  m2 +2 ), by Claim 6.5 and the fact that m1  m2 .
To prove that the reduction works, first suppose that k1 , . . . , kn has a partition, i.e.,
there is a subcollection of k1 , . . . , kn that sums to K. We show that p can be made a winner
as follows. Let K weight of T vote
p > a1 >    > am1 > b1 >   
and let K weight vote
p > b1 >    > bm2 > a1 >    .
Note that for all i, 1  i  m1 , score(ai )  score(a1 ) and that for all i, 1  i  m2 ,
score(bi )  score(b1 ) and so it suffices to show that score(a1 )  score(p) and that score(b1 ) 
score(p). Note that
score(p) = i1 `1 + i2 `2 + 21 K,
score(a1 ) = 1 `1 + i2 +1 `2 + 2 K + m2 +2 K, and
score(b1 ) = 1 `2 + i1 +1 `1 + 2 K + m1 +2 K.
From the choice of , `1 , and `2 , it follows that score(a1 ) = score(p) and score(b1 ) = score(p).
For the converse, suppose that the voters in T vote such that p becomes a winner in
S  T . From the observations above, it follows that
scoreT (a1 )  (2 + m2 +2 )K and that
scoreT (b1 )  (2 + m1 +2 )K.
By Lemma 6.3 we can assume that p is ranked first by every voter in T . This implies that
every voter in T ranks a1 or b1 second. Let Wa be the total weight of all T voters that rank
a1 second. It follows that
scoreT (a1 )  2 Wa + m2 +2 (2K  Wa ) and
scoreT (b1 )  2 (2K  Wa ) + m1 +2 Wa .
From these observations, and the fact that  > 0 and that 2 > m1 +2 (by Claim 6.5) (and
thus also 2 > m2 +2 ), it follows that Wa  K and that (2K  Wa )  K. So, exactly
half of the vote weight of T ranks a1 second. Then the weights of the voters in T that rank
a1 second correspond to a partition.
q Lemma 6.4

469

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Lemma 6.6. Let  = (1 , 2 , . . . , m ) be a scoring protocol. If for all i, j > 1 such that
i + j  m + 1, it holds that
(1  i )(1  j )  (i  i+1 )(j  j+1 ),
then the constructive coalition weighted manipulation problem for the single-peaked case is
in P.
Proof of Lemma 6.6. Let am1 L    L a1 L p L b1 L    L bm2 be societys order. It is
immediate that if scoreS (ai )  scoreS (p) for all i, 1  i  m1 , then p can be made a winner
if and only if p is a winner if every voter in T votes
p > a1 >    > am1 > b1 >    > bm2 .
Similarly, if scoreS (bi )  scoreS (p) for all i, 1  i  m2 , then p can be made a winner if
and only if p is a winner if every voter in T votes
p > b1 >    > bm2 > a1 >    > am1 .
We will show that these are the only cases that can occur. This immediately implies
Lemma 6.6.
So, for the remainder of the proof, suppose for a contradiction that we have a collection of
voters S and integers i1 and i2 such that 1  i1  m1 , 1  i2  m2 , scoreS (ai1 ) > scoreS (p),
and scoreS (bi2 ) > scoreS (p).
For 1 < i  m1 +1, let `i be the total weight of the voters in S that rank some candidate
in {a1 , . . . , am1 } first and that rank p in ith place. Note that these voters rank all candidates
in {b1 , . . . , bm2 } after p. For 1 < i  m2 + 1, let `0i be the total weight of the voters in S that
rank some candidate in {b1 , . . . , bm2 } first and that rank p in ith place. Note that these
voters rank all candidates in {a1 , . . . , am1 } after p. It follows immediately that
scoreS (ai1 )  scoreS (p) 

X

(1  i )`i +

1<im1 +1

scoreS (bi2 )  scoreS (p) 

X

X

(i+1  i )`0i and

1<im2 +1

(1 

i )`0i

+

1<im2 +1

X

(i+1  i )`i .

1<im1 +1

Since scoreS (ai1 ) > scoreS (p) and scoreS (bi2 ) > scoreS (p), it follows that
X

1<im1 +1

X

X

(1  i )`i >
(1 

1<im2 +1

(i  i+1 )`0i and

1<im2 +1

i )`0i

X

>

(i  i+1 )`i .

1<im1 +1

Since both sides of both inequalities are nonnegative, it follows that

 

X
X

(1  i )`i   
(1  i )`0i  >
1<im1 +1

1<im2 +1

470

fiBypassing Combinatorial Protections



 
X



(i  i+1 )`0i   

1<im2 +1

(i  i+1 )`i  .

1<im1 +1

Multiplying this out, it follows that
X
(1  i )(1  j )`i `0j >
1<im1 +1
1<jm2 +1


X

X

(i  i+1 )(j  j+1 )`i `0j .

1<im1 +1
1<jm2 +1

Since m = m1 + m2 + 1, this contradicts the assumption that for all i, j > 1 such that
i + j  m + 1 it holds that
(1  i )(1  j )  (i  i+1 )(j  j+1 ).
q Lemma 6.6
Lemma 6.6 handles all 2 > b m1 c+2 P cases of Theorem 6.2. Note that this lemma is of
2
limited use if 2 = b m1 c+2 , since in that case the lemma applies only if m = 2 or 1 = 2 =
2
b m1 c+2 . The 2 = b m1 c+2 cases of Theorem 6.2 are handled by the following lemma in
2
2
combination with the standard observation that the scoring protocol (1 , 2 , . . . , m ) has
the same behavior as the scoring protocol (1  m , 2  m , . . . , m1  m , 0).
Lemma 6.7. Let  = (1 , 2 , . . . , m ) be a scoring protocol such that m  2, m = 0, and
2 = b m1 c+2 . If 2 = 0 or 1 = 2 or (2 = m1 and 1  22 ) then the constructive
2
coalition weighted manipulation problem for the single-peaked case is in P; otherwise, it is
NP-complete.
Proof of Lemma 6.7. If 2 = 0, then any vote of the form p >    is an optimal
manipulator vote. If 1 = 2 , then 1 = b m1 c+2 . Let i and j be such that i, j > 1 and
2

m1
i + j  m + 1. Then min(i, j)  b m+1
2 c = b 2 c + 1 and so (1  i )(1  j ) = 0. It
follows from Lemma 6.6 that this case is in P.
For the remainder of the proof, we assume that 1 > 2 > 0.
Now consider the case that 2 = m1 and 1  22 . Consider societys order. If p is
the leftmost or rightmost candidate, then there is exactly one vote that puts p first, and
this is an optimal manipulator vote. Otherwise, let a be the leftmost candidate in societys
order, and b the rightmost. Then a and b are the only candidates that can occur last in a
vote. Since 1  22 , it follows that scoreS (a) + scoreS (b)  2scoreS (p). Without loss of
generality, let scoreS (a)  scoreS (b). Then scoreS (a)  scoreS (p) and any vote of the form
p >    > b is an optimal manipulator vote.
This concludes the P cases. We now turn to the NP-complete cases. In both cases, we
will reduce from Partition.
First assume that 2 = m1 and that 1 > 22 . Let k1 , . . . , kn be a nonempty
collection of positive integers that sum to 2K. We construct the following election: Societys
order is a L p L    L b. S consists of two voters, each of weight (21  2 )K. One
voter votes a > p >    > b and the other voter votes b >    > p > a. Note that
for all candidates c 6 {a, b}, scoreS (c) = scoreS (p). The weights of the manipulators are
(1  22 )k1 , . . . , (1  22 )kn . The proof of the correctness of the reduction is similar to

471

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

(but easier than) the corresponding proof in Lemma 6.4. First suppose that there exists a
subcollection of k1 , . . . , kn that sums to K. Then set K vote weight of T to p > a >    > b
and K vote weight to p >    > b > a. Note that in the resulting election,
score(p) = (22 (21  2 ) + 21 (1  22 ))K = (212  222 )K and
score(a) = score(b) = (1 (21  2 ) + 2 (1  22 ))K = (212  222 )K.
For the converse, suppose that p can be made a winner. From the observations above,
it is immediate that
scoreT (a)  2 (1  22 )K and scoreT (b)  2 (1  22 )K.
Let Wa be the total weight of the voters in T that rank b last. It follows that
scoreT (a)  2 Wa and scoreT (b)  (2(1  22 )K  Wa )2 .
From these observations, and the assumption that 2 > 0, it follows that Wa = (1 22 )K.
So, exactly half of the vote weight of T ranks b last. Then the weights of the voters that
rank b last correspond to a partition.
Finally, we handle the last case, namely, 1 > 2 > m1 . Let m
b be the smallest index
m1
c
+
2
<
m
b
<
m.
Take
societys
order to be
such that 2 > m
.
Note
that
b
b
2
ab m1 c L    L a1 L p L b1 L    L bd m1 e .
2

2

We are again reducing from Partition. Let k1 , . . . , kn be a nonempty collection of positive
integers that sum to 2K. Let S consist of two voters, each of weight (21  2  m
b )K,
voting
ab m1 c(mm)
b >    > a1 > p > b1 >    > bd m1 e(mm)
b >    and
2

2

bd m1 e(mm)
b >    > b1 > p > a1 >    > ab m1 c(mm)
b > 
2

2

and let the weights of T be (1  2 )k1 , . . . , (1  2 )kn . Since b m1
b =m
b 
2 c  (m  m)
m1
m1
m1
(d m1
e+1)

m(b
b
c+2)
>
0
and
b
c(m
m)+1+d
b
e(m
m)
b
=
2
mm
b
<
m,
b
2
2
2
2
we have the following scores.
scoreS (p) = 22 (21  2  m
b )K,
scoreS (ab m1 c(mm)
b )K, and
b ) = (1 + 2 )(21  2  m
2

scoreS (bd m1 e(mm)
b ) = scoreS (ab m1 c(mm)
b ).
2

2

If k1 , . . . , kn has a partition, then set (1  2 )K vote weight of T to
p > a1 >    > ab m1 c > b1 >    > bd m1 e(mm)
b > 
2

2

and set (1  2 )K vote weight of T to
p > b1 >    > bd m1 e > a1 >    > ab m1 c(mm)
b >  .
2

2

472

fiBypassing Combinatorial Protections

Note that ab m1 c(mm)
b and bd m1
e(mm)
b are the only candidates that can score higher
2
2
than p and that
2
2
score(p) = (22 (21  2  m
b ) + 21 (1  2 ))K = (21 + 21 2  22 m
b  22 )K.

And score(ad m1 e(mm)
b ) = score(bd m1 e(mm)
b )=
2

2

2
2
((1 + 2 )(21  2  m
b ) + (2 + m
b )(1  2 ))K = (21 + 21 2  22 m
b  22 )K.

So, p is a winner of the resulting election.
For the converse, suppose that p can be made a winner. Assume (using Lemma 6.3)
that p is ranked first by every manipulator. From the observations above, it is immediate
that
scoreT (ab m1 c(mm)
b )(1  2 ) and
b )  (2 + m
2

scoreT (bd m1 e(mm)
b )(1  2 ).
b )  (2 + m
2

Let Wa be the total weight of all T voters such that ab m1 c(mm)
b > bd m1
e(mm)
b . It
2
2
follows that
scoreT (ab m1 c(mm)
b (2(1  2 )K  Wa ) and
b )  2 Wa + m
2

scoreT (bd m1 e(mm)
b Wa + 2 (2(1  2 )K  Wa ).
b )  m
2

From these observations, and the fact that 2 > m , it follows that Wa = (1  2 )K.
Then the weights of the voters such that ab m1 c(mm)
b > bd m1
e(mm)
b correspond to a
2
2
partition.
q Lemma 6.7
q

Theorem 6.2

7. Related Work, Additional Discussion, and Open Problems
The two papers most related to our work are by Walsh (2007) and by Faliszewski, Hemaspaandra, Hemaspaandra, and Rothe (2011). Walshs paper first raised (among many other
interesting issues, such as possible and necessary winners, Konczak & Lang, 2005, in singlepeaked settings) the issue of the effect of single-peaked electorates on manipulation. For
the particular case he looked atweighted coalition manipulation under single transferable vote electionshe showed that manipulation remains hard even for single-peaked electorates. Faliszewski et al. showed cases where single-peakedness removes complexity shields
against manipulation, and also opened the study of (nonpartition) control. Our paper in
contrast with Walshs stresses cases where single-peakedness removes combinatorial protections. And we go beyond Faliszewski et al. (2011) by for the first time studying bribery
of single-peaked electorates and partition-control of single-peaked electorates. For both
these new cases, we show that many election systems (for example Llull elections) have
polynomial-time algorithms for single-peaked electorates, even if the system is known to
be NP-hard in the analogous general case. We also generalize the Faliszewski et al. (2011)
473

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

dichotomy theorem for manipulation of three-candidate scoring protocols to the case of
arbitrary scoring protocols.
Although it is more closely related to Faliszewski et al. (2011) than to the present paper,
and came after the present paper, it is important to mention that the work of Faliszewski
et al. (2011b, 2014) explores the interesting issue of seeing whether results such as those
of Faliszewski et al. (2011) still hold even when the electorate is merely near to being
single-peaked (see also Cornaz et al., 2012; Bredereck et al., 2013; Erdelyi et al., 2013; Sui
et al., 2013, regarding nearness to single-peakedness and weaker forms of single-peakedness).
Since large real-world electorates are unlikely to be (perfectly) single-peaked, it is natural
and important to study such weaker forms of single-peakedness.
Although Walsh (2007) and Faliszewski et al. (2011) are by far the most related work,
other work is much worth mentioning. Bartholdi and Trick (1986), Doignon and Falmagne
(1994), and Escoffier et al. (2008) provided efficient algorithms for finding single-peaked
orderings. And Conitzer (2009) studied the effect of single-peaked electorates on preference
elicitation. Indeed, single-peakedness is of much current interest in computational settings.
For example, at least four papers in the IJCAI-2013 conference, including the Bredereck
et al. (2013) paper mentioned above are related to single-peakedness.
The p2 -completeness of the winner problems of Dodgson, Kemeny, and strongYoung
elections was established, respectively, by Hemaspaandra et al. (1997), Hemaspaandra et al.
(2005), and Rothe et al. (2003). The literature now contains many papers on the complexity
(when single-peaked preferences are not assumed) of manipulation and control (as a pointer
to some of those, see Faliszewski et al., 2009b, and Faliszewski, Hemaspaandra, & Hemaspaandra, 2010, and the citations therein), and even contains a number of papers on the
younger topic of the complexity of bribery (e.g., Faliszewski et al., 2009; Faliszewski, 2008;
Faliszewski et al., 2009a). Although the nonunique-winner model and the unique-winner
model very typically have the same complexity results, Faliszewski, Hemaspaandra, and
Schnoor (2008, drawing also on Conitzer et al., 2007) show that this is not always the case.
NP-completeness and p2 -completeness are worst-case notions. So it is natural to wonder
whether problems in those classes can be solved frequently by heuristic algorithms. There
has been much experimental study on that theme (see, e.g., Walsh, 2009). On the other
hand, it is known (see Hemaspaandra and Williams, 2012) that if any polynomial-time deterministic heuristic algorithm for any NP-complete (or p2 -complete) problem asymptotically
makes subexponentially many errors, then the polynomial hierarchy collapses.
A worry that comes immediate to the minds of social choice theorists can be expressed as
follows: Since it is known that, for single-peaked electorates, median voting leaves voters
with voting sincerely being an optimal strategy, single-peaked elections are not interesting in
terms of other election systems, since median voting should be used. A detailed discussion
of this worry would itself fill a paper. But we briefly mention three reasons why the above
objection is not as serious as it might at first seem. First, the nonmanipulability claims
regarding single-peaked elections and median voting are about manipulability, and so say
nothing at all about, for example, control. Indeed, weakCondorcet in effect is a type of
median voting on single-peaked electorates, and so for example our partition of voters
algorithm makes it clear that control can be exercised in interesting ways.15 Second, even if
15. To be more explicit, under the most natural way of framing median voting, median voting and weakCondorcet (and so all weakCondorcet-consistent rules) are exactly the same on single-peaked electorates.

474

fiBypassing Combinatorial Protections

median voting does have nice properties, the simple truth is that in the real world, society
for virtually all elections and electorateshas chosen (perhaps due to transparency, comfort,
or tradition) to use voting systems that clash sharply with median voting. The prominence
of plurality voting is the most dramatic such case. So since in the real world we do use a
rich range of election systems, it does make sense to understand their behavior. Third, one
must be very careful with terms such as strategy-proof. The paper people most commonly
mention as showing that median voting is strategy-proof is that of Barbera (2001). But that
papers results are about social choice functions (election rules that when kCk  1 always
have exactly one winner), notas this paper isabout election rules that select a set of
winners. So one cannot simply assume that for our case median voting (say, weakCondorcet
elections) never gives an incentive to misrepresent preferences.
Actually, in certain problem settings, one never has an incentive to misrepresent ones
top choice (in single-peaked weakCondorcet elections ones top choice is all that affects
the outcome) in weakCondorcet elections (which are a social choice correspondence). For
example, if ones goal is Seek to make your top choice be a weakCondorcet winner, then
one never has an incentive to misstate ones top choice. As another example, if ones
goal is (for any fixed k) Seek to make at least one of your first k choices be among
the weakCondorcet winners, then again one never has an incentive to misstate ones top
choice (which is the only thing that matters about ones vote).16 On the other hand, in
some reasonable problem settings, misstating may make sense. If ones goal is Make your
top choice the unique winner or failing that make your second choice the unique winner or
... or failing that make your last choice the unique winner or failing that make there be
multiple winners, then the two-candidate single-peaked election where voter 1 votes a > b
but voter 2 prefers b to a already gives voter 2 an incentive to vote, insincerely, a > b. Before
leaving this topic, we should stress that this and the previous paragraphs discussions are
for the model in which manipulators come in with complete preference orders. However, in
the Bartholdi et al. (1989) model (which this paper and most complexity papers use when
studying manipulation), the manipulative coalition is a blank slate with its only goal being
to make a certain candidate p be a winner.
An open issue not already mentioned in this paper is the following. Section 6 provided for
single-peaked electorates a manipulation-complexity dichotomy that applies to all scoring
rules (and see Hemaspaandra & Hemaspaandra, 2007, for what holds without the singlepeaked restriction). Although that is a broad set of rules, our theorem is connecting the
specification of the system to the systems complexitya natural connection. However, it
And this paper establishes many results regarding bribery and control of weakCondorcet in the context
of single-peaked electorates.
16. We mention in passing that the two no incentive to manipulate claims we just made for weakCondorcet
elections for single-peaked electorates also hold for a family of related election systems for single-peaked
electorates. In weakCondorcet, after sorting the voters by first choice (under the single-peaked ordering
of candidates), all candidates who are or fall between the median voter(s) are winners. If we think about
that as being MedianVoting 1 , then for each rational , 0    12 , for single-peaked voting we can
2
consider the rule, MedianVoting , that after ordering the voters by first-choice makes the winners be all
candidates that in the societal order L fall in the inclusive interval between (a) the leftmost voter vleft
such that at least d  kV ke voters have first preference the same as vleft or to the left under L as that of
vleft , and (b) the rightmost voter vright such that at least d  kV ke voters have first preference the same
as vright or to the right under L as that of vright . Each rule MedianVoting will share the no incentive
to manipulate properties mentioned in the text.

475

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

is also natural to wonder whether one can tightly link the social-choice-favored properties of
a rule to its manipulation (or bribery or control) complexity. To give an idea of the kind of
theorem we are thinking of, we mention the following known theorem linking social-choiceproperties to winner-problem complexity (the statement involves some notions we will not
define here): Every election system that is neutral, Condorcet-consistent, and consistent
has a p2 -complete winner problem (Hemaspaandra et al., 2005, see also the discussion
of Hemaspaandra and Hemaspaandra, 2000). However, the just-quoted winner result is
something of a cheat as there is just one system that satisfies those propertiesKemeny
elections. The dream case for manipulationand bribery and controlwould be to find
a broad link between social-choice properties and complexity in the single-peaked case or
in the general case. In the true dream case, we might completely characterize in terms of
some statement about social-choice properties the election systems with easy manipulation
(or bribery or control) problems, in the single-peaked case or in the general case.
A final open direction is to find cases where partition-of-candidates control shifts from
NP-hard to polynomial time when restricted to single-peaked electorates.

8. Conclusions
The theme of this paper is that single-peaked electorates often tame combinatorial explosion.
We saw this first for the case of the winner problem. In that case, this taming is good.
It shows that for single-peaked electorates, election systems such as Kemeny have efficient
winner algorithms, despite their p2 -hardness in the general case. But then for bribery
and control (and in part, manipulation), we saw many cases where NP-hard problems fell
to polynomial time for single-peaked electorates, via algorithms that bypassed the generalcase combinatorial explosions of covers and partitions. Since those NP-hardness results were
protections against attacks on elections, our results should serve as a warning that those
protections are at their very core dependent on the extreme flexibility of voter preference
collections the general case allows. For single-peaked electorates, those protections vanish.

Acknowledgments
This work was supported in part by ARC grant DP1101011792, DFG grants BR-2312/{32,6-1}, NSF grants CCF-{0426761,0915792,1101452,1101479} and IIS-0713061, the European Science Foundations EUROCORES program LogICCC, and Friedrich Wilhelm Bessel
Research Awards to Edith Hemaspaandra and Lane A. Hemaspaandra. This work was done
in part while Felix Brandt was at Ludwig-Maximilians-Universitat Munchen and Markus
Brill was at Ludwig-Maximilians-Universitat Munchen and TU Munchen, and was done in
part during visits of Edith Hemaspaandra and Lane A. Hemaspaandra to Heinrich-HeineUniversitat Dusseldorf and Ludwig-Maximilians-Universitat Munchen. A preliminary version of this paper appeared in the proceedings of the 24th AAAI Conference on Artificial
Intelligence, July 2010 (Brandt, Brill, Hemaspaandra, & Hemaspaandra, 2010).
We are grateful to Steven Brams, Piotr Faliszewski, Felix Fischer, Zack Fitzsimmons,
Paul Harrenstein, Jerome Lang, Ariel Procaccia, Jorg Rothe, Hans Georg Seedig, Troels
Srensen, and the anonymous conference and journal referees for helpful comments and
476

fiBypassing Combinatorial Protections

valuable suggestions. We are grateful to Piotr Faliszewski for the email exchange that led
to Theorem A.5 and to Paul Harrenstein for preparing the figures.

Appendix A. Additional Definitions and Proofs
This appendix provides additional definitions and proofs.
A.1 Additional Definitions
Let us define some additional election systems mentioned in Section 2.
Nanson elections are runoff methods based on Bordas scoring protocol. In Nansons
(1882) original definition, a series of Borda elections is held and all candidates who at
any stage have not more than the average Borda score are excluded unless all candidates
have identical Borda scores, in which case these candidates are declared the winners of the
election. There exist two variants of Nanson due to Fishburn and Schwartz, which exclude
candidates with the lowest Borda score and candidates whose Borda score is less than the
average score, respectively. All three versions fail to be weakCondorcet-consistent (Niou,
1987).
Maximin (a.k.a. Simpson-Kramer) elections (Simpson, 1969; Kramer, 1977) choose those
candidates that fare best in their worst pairwise comparison against any other candidate.
The remaining three election systems are based on the pairwise majority relation. In
Schwartz (1972) elections (sometimes also called the top cycle), the winners are defined
as the maximal elements of the asymmetric part of the transitive closure of the majority relation. The winners in Fishburn (1977) elections are the maximal elements of the Fishburn
relation F , which is defined by letting a F b if every candidate that beats a in a pairwise
comparison also beats b and there exists a candidate that beats b but not a.
A.2 Proofs for Section 2
Theorem A.1. Kemeny, Schwartz, and Fishburns and Schwartzs versions of Nanson are
weakCondorcet-consistent for single-peaked electorates.
Proof. All statements rely on the observation that the pairwise majority relation, >m ,
for single-peaked electorates is transitive (Black, 1948, 1958). Further observe that weak
Condorcet winners are precisely the maximal elements of the pairwise majority relation. It
follows immediately that Schwartz is weakCondorcet-consistent.
P In the case of Kemeny, note that (again writing >m for the pairwise majority relation)
{a,b}C,a6=b,am b k{v  V | v prefers b to a}k is a lower bound on the Kemeny score of any
linear order. This score is realized by linear order > if and only if > is consistent with >m ,
i.e., for every a, b  C, if a >m b then a > b. If the pairwise majority relation is transitive
and c is a weak Condorcet winner, then c is a Kemeny winner, as evidenced by the following
Kemeny consensus: rank c first and then greedily keep adding, in the successive positions
in the consensus, maximal (with respect to >m ) unranked candidates. Since > is consistent
with >m , > is a Kemeny consensus. It is immediate that if d is not a weak Condorcet
winner, then d can not be ranked first in any linear order consistent with >m .
For Nanson, we prove that no weak Condorcet winner is eliminated at any stage of the
election. First let us normalize Borda scores by subtracting (kV k  (m  1))/2 from the
477

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Borda score of every candidate. This ensures that the average normalized Borda score is
precisely zero. Now, observe that the normalized Borda score of candidate a is simply half
of the sum, over all candidates b, of the number of voters who prefer a to b minus the
number of voters who prefer b to a. As a consequence, the normalized Borda score of every
weak Condorcet winner is at least zero. Moreover, in the case of a single-peaked electorate,
due to the transitivity of the majority relation, there is always a candidate with a negative
normalized Borda score unless all candidates have an identical score of zero. In the latter
case, all three versions of Nanson will terminate. In the former case, neither Fishburns nor
Schwartzs variant will exclude weak Condorcet winners because their score is at least as
large as the average score.
q
The fact that Black, Dodgson, the original version of Nanson, and Copeland elections
for all   [0, 1) are not weakCondorcet-consistent for single-peaked electorates is seen by
the following universal counterexample. Let there be two voters with preferences b > a > c
and c > b > a. These preferences are single-peaked with respect to the societal ordering
a L b L c. Candidates b and c are weak Condorcet winners, but each of the mentioned
election systems chooses only b. Similarly, strongYoung is not weakCondorcet-consistent
for single-peaked electorates because in an election with two voters whose preferences are
a > b > c and c > b > a, all candidates are weak Condorcet winners, but strongYoung
yields only candidates a and c.
A.3 Additional Proofs for Section 3
Theorem A.2. The winner problem for Young elections is p2 -complete, both in the
nonunique-winner model and the unique-winner model.
Proof. p2 -completeness of the (nonunique) winner problem for strongYoung elections
(somewhat confusingly called Young elections there) was shown by Rothe et al. (2003). The
same proof also establishes p2 -completeness in the unique winner model (Hemaspaandra
et al., 2009). The p2 upper bound is easy to show, and the same argument can be used
to show a p2 upper bound for the Young winner problem (in both the nonunique-winner
model and the unique-winner model). p2 -hardness of the winner problem for strongYoung
elections was shown as Theorem 2.5 of Rothe et al. (2003) via a reduction from the p2 complete problem Maximum Set Packing Compare (MSPC, for short): Given two sets, B1
and B2 , and two collections of sets S1 and S2 , where each S  Si is a nonempty, finite
subset of Bi , is it the case that (S1 )  (S2 )? Here, (Si ) denotes the maximum number
of pairwise disjoint sets in Si . As in Rothe et al., we assume that (Si ) > 2.
The proofs of Theorems 2.3 and 2.5 of Rothe et al. (2003) show how to construct
from a given MSPC instance I = (B1 , B2 , S1 , S2 ) an election (D, W ) with two designated
candidates, c and d, such that (a) if (S1 )  (S2 ) then c and d are strongYoung winners
of (D, W ), and (b) if (S2 ) > (S1 ) then d is the unique strongYoung winner of (D, W ).
We now show how this proof can be adapted to work for Young elections. Please
refer to Rothe et al. (2003) for definitions and details of the construction, as we will only
point out the differences here. Given an MSPC instance I = (B1 , B2 , S1 , S2 ), we construct
478

fiBypassing Combinatorial Protections

an election (C 0 , V 0 ) such that c and d are designated candidates in C 0 , and it holds that
YoungScore(C 0 , c, V 0 ) = 2  (S1 ) and YoungScore(C 0 , d, V 0 ) = 2  (S2 ).17
Let C 0 = C and V 0 = V  {v(2.4) , v(2.7) }, where (C, V ) is the election constructed
in the proof of Theorem 2.3 of Rothe et al. (2003), v(2.4) is one of the two voters in V
referred to as voters of the form (2.4) in Rothe et al. and v(2.7) is one of the two voters
in V referred to as voters of the form (2.7) in Rothe et al.18 One can then define a
submultiset V0 of the voters V 0 as V0 = V  {v(2.4) }, where V is defined on page 381
of Rothe et al. Then kV0 k = 2  (S1 ) and c is a weak Condorcet winner in (C 0 , V0 ),
implying that YoungScore(C 0 , c, V 0 )  2  (S1 ).
To show that YoungScore(C 0 , c, V 0 )  2  (S1 ), we adapt Lemma 2.4 of Rothe et al.
(2003) in the following way. (The proof of Lemma A.3 is similar to the proof of Lemma 2.4
of Rothe et al., 2003, and we omit it here.)
Lemma A.3. For any  with 3 <   kS1 k + 1, let V be a submultiset of V 0 such that V
contains exactly   1 voters of the form (2.4) or (2.5) and c is a weak Condorcet winner in
(C 0 , V 0 ). Then V contains exactly   1 voters of the form (2.3) and no voters of the form
(2.6), (2.7), or (2.8). Moreover, the   1 voters of the form (2.3) in V represent pairwise
disjoint sets from S1 .
Let V0  V 0 be such kV0 k  2  (S1 ) and such that c is a weak Condorcet winner in
Suppose there are exactly   1 voters of the form (2.4) or (2.5) in V0 . Since
(S1 ) > 2, it follows that kV0 k  6, and thus  > 3 in order for a to not beat c. Also,
1  kS1 k, since there are exactly kS1 k voters of the form (2.4) or (2.5) in V 0 . Lemma A.3
then implies that there are exactly 1 voters of the form (2.3) in V0 , those voters represent
pairwise disjoint sets from S1 , and V0 contains no voters of the form (2.6), (2.7), or (2.8).
Hence, kV0 k = 2  (  1)  2  (S1 ).
We thus have YoungScore(C 0 , c, V 0 ) = 2  (S1 ). Analogously, one can show that
YoungScore(C 0 , d, V 0 ) = 2  (S2 ). Thus
(C 0 , V0 ).

(S1 )  (S2 )

if and only if

YoungScore(C 0 , c, V 0 )  YoungScore(C 0 , d, V 0 ),

which proves the p2 -hardness of comparing Young scores. To show that the winner problem
for Young elections is p2 -hard, we alter the election (C 0 , V 0 ) in the same way as (C, V ) is
17. Note that in this proof, we follow Rothe et al.s (2003) convention for Young scores and define the
YoungScore(C, c, V ) of a candidate c in an election (C, V ) as the size of the maximal submultiset of
voters for which c is a weak Condorcet winner. Hence, the set of Young winners consists of all candidates
whose YoungScore is at least as large as the YoungScore of each other candidate.
18. For completeness, we give the definition of (C 0 , V 0 ). C 0 = B1  B2  {a, b, c, d} and V 0 consists of the


following voters. (For an ordered set M = {m1 , . . . , mk }, we write M for m1 >    > mk .)


 

(2.3) For each E  S1 , one voter vE with preference order E > a > c > B1  E > B2 > b > d.




(2.4) One voter with preference order c > B1 > a > B2 > b > d.




(2.5) kS1 k  1 voters with preference order B1 > c > a > B2 > b > d.


 

(2.6) For each F  S2 , one voter vF with preference order F > b > d > B2  F > B1 > a > c.




(2.7) One voter with preference order d > B2 > b > B1 > a > c.




(2.8) kS2 k  1 voters with preference order B2 > d > b > B1 > a > c.

479

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

altered in Theorem 2.5 of Rothe et al. (2003). Let (D0 , W 0 ) be the altered election.19 One
can then show that the Young scores of c and d in (D0 , W 0 ) are the same as in (C 0 , V 0 ),
and that all other candidates have a Young score in (D0 , W 0 ) of at most 2. Thus, since the
Young scores of c and d are at least 6, comparing the Young scores of c and d in (D0 , W 0 )
is tantamount to deciding if c is a Young winner.
Altogether, we have that (a) if (S1 )  (S2 ) then c is a Young winner of (D0 , W 0 ),
and (b) if (S2 ) > (S1 ) then d is the unique Young winner of (D0 , W 0 ). It follows that
an MSPC-instance I is in MSPC if and only if c is a Young winner of (D0 , W 0 ), implying
p2 -hardness of the Young winner problem in the nonunique-winner model. For the uniquewinner model, we follow the argument from the proof of Theorem 2.3 of Hemaspaandra
et al. (2009): Observe that I is in MSPC if and only if d is not the unique winner of
(D0 , W 0 ). Thus the complement of the unique-winner problem for Young elections is p2 hard. Since p2 is closed under complement, this proves that the unique-winner problem for
Young elections is p2 -hard as well.
q
Theorem A.4. The winner problem for weakDodgson elections is p2 -complete, both in the
nonunique-winner model and the unique-winner model.
Proof. p2 -completeness of the (nonunique) winner problem for Dodgson elections was
shown in Hemaspaandra et al. (1997). The same proof also establishes p2 -completeness
in the unique winner model (Hemaspaandra et al., 2009). The p2 upper bound is easy to
show, and the same argument can be used to show a p2 upper bound for the weakDodgson
winner problem (in both the nonunique-winner model and the unique-winner model). p2 hardness of the winner problem for Dodgson was shown by a reduction from the p2 -hard
problem Two Election Ranking (2ER, for short) (Hemaspaandra et al., 1997): Given two
Dodgson triples (C, c, V ) and (D, d, W ), where both kV k and kW k are odd and c 6= d, is
the Dodgson score of c in (C, V ) less than or equal to the Dodgson score of d in (D, W )?
Here, a Dodgson triple (C, c, V ) is an election (C, V ) with a designated candidate c  C.
The reduction from 2ER to the winner problem for Dodgson elections works by merging
the elections E1 = (C, V ) and E2 = (D, W ) into a new election E3 = (C 0 , V 0 ) such that
C  D  C 0 and the following properties are satisfied:
(i) Dodgson-ScoreE3 (c) = Dodgson-ScoreE1 (c) + 1,
(ii) Dodgson-ScoreE3 (d) = Dodgson-ScoreE1 (d) + 1, and
(iii) Dodgson-ScoreE3 (x) > Dodgson-ScoreE3 (c) for all x  C 0  {c, d}.
Here, Dodgson-ScoreE (x) denotes the minimal number of switches required to make candidate x a Condorcet winner in election E. Thus, we immediately have that c is a Dodgson
winner in E3 if and only if Dodgson-ScoreE1 (c)  Dodgson-ScoreE2 (d).20
19. For completeness, (D0 , W 0 ) is defined as follows. We replace every candidate g  C 0  {c, d} by kV 0 k
0
candidates g 0 , . . . , g kV k1 . And we replace each occurrence of candidate g in the ith voter of V 0 by
0
0
0
0
g i mod kV k > g (i+1) mod kV k >    > g (i+kV k1) mod kV k .
20. We have noted a fixable problem in the construction of Hemaspaandra et al. (1997). The problem is on
page 822 at the end of the proof of their Lemma 3.7, where after proving that Dodgson-ScoreE3 (dkDk1 ) >

480

fiBypassing Combinatorial Protections

We now show how the approach from Hemaspaandra et al. (1997) can be adapted
to work for weakDodgson. First, observe that the problem Weak Two Election Ranking
(w2ER), which is defined like 2ER except with Dodgson score replaced by weakDodgson
score, inherits p2 -hardness from 2ER because Dodgson scores and weakDodgson scores
coincide for all instances with an odd number of voters. (If the number of voters is odd,
being a weak Condorcet winner is tantamount to being a Condorcet winner, since there
are no ties in pairwise comparisons.) Also observe, by inspection of the p2 -hardness proof
from Hemaspaandra et al. (1997), that 2ER and w2ER are still p2 -hard if we restrict the
Dodgson-ScoreE3 (c), it is claimed that The same argument applies to each candidate in (C D)\{c, d}.
Though this claim is clearly true for each candidate in D{d}, it is not true for each candidate in C {c},
since in the preference orders of voter groups (b) and (c), candidates in C  {c} are not separated from
candidates in D by a set of separating candidates. As a consequence, it may be possible to make a
candidate in C  {c} a Condorcet winner by less than kSk/2 switches in those voter groups.
This problem can be avoided by changing the t1 <    < tkT k < c < s1 <    < skSk < c1 <    <
ckCk1 prefix in the preference orders of the voters in groups (b) and (c) to c < t1 <    < tkT k <
c1 <    < ckCk1 < s1 <    < skSk . This gives the following set of voters. (In this footnote we use
a < b < c-notation in specifying votes, rather than c > b > a-notation as is used throughout the rest
of our paper, in order to match the approach to expressing votes used by Hemaspaandra et al., 1997.
We do this to make comparisons with that paper as straightforward as possible.)
(a) For each voter e1 <    < ekCk in V , a voter d < s1 <    < skSk < d1 <    < dkDk1 < t1 <    <
tkT k < e1 <    < ekCk .
(b) For each voter e1 <    < ekDk in W , a voter c < t1 <    < tkT k < c1 <    < ckCk1 < s1 <    <
skSk < e1 <    < ekDk .
l
m l
m
k
(c) kV2 k  kW
voters c < t1 <    < tkT k < c1 <    < ckCk1 < s1 <    < skSk < d1 <    <
2
dkDk1 < d.
l
m
(d) kV2 k voters t1 <    < tkT k < c1 <    < ckCk1 < d1 <    < dkDk1 < skSk <    < s1 < c < d.
l
m
k
(e) kW
voters t1 <    < tkT k < c1 <    < ckCk1 < d1 <    < dkDk1 < s1 <    < skSk < d < c.
2
Intuitively, the changed construction is more symmetrical than the original one, as the preferences of
voter groups (a) and (b) are defined analogously, with the roles of C and D (and those of S and T )
interchanged.
Using the proof of Lemma 3.7 of Hemaspaandra et al. (1997), it is easy to see that the three
properties mentioned above hold. In particular, c is preferred to each t  T by more than half of the
voters, and so the Dodgson score of c does not change. For every candidate d0  D, d0 does not occur
in the prefix of the preference order that is changed and so the Dodgson score of d0 does not change. It
remains to show that Dodgson-ScoreE3 (x) > Dodgson-ScoreE3 (c) for all x  T  S  (C  {c}). From
the proof of Lemma 3.7, we know that Dodgson-ScoreE3 (c) < kSk/2 and that kSk = kT k. In order for
t  T to become a Condorcet winner, t needs to gain at least one vote over d. Note that in the changed
preferences, we need more than kSk switches to switch t beyond d, and so the change in preferences will
not lower the Dodgson score of t below kSk/2. In order for s  S to become a Condorcet winner, it
is shown in Hemaspaandra et al. that s needs to gain at least one vote over c and that we need more
than kSk/2 switches to do that. Since s is preferred to c by the voters in groups (b) and (c) in both the
original and the changed election, these voters can not be used for s to gain a vote over c. It follows that
in the changed election, s needs more than kSk/2 switches to become a Condorcet winner. Finally, let
c0  C  {c}. The argument from Hemaspaandra et al. that every d0  D  {d} needs to gain at least
one vote over c in order to become a Condorcet winner, and that we need more than kSk/2 switches to
do that can be used (by symmetry of the construction) to show that every c0  C  {c} needs to gain
at least one vote over d in order to become a Condorcet winner, and that we need more than kSk/2
switches to do that.

481

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

problem to Dodgson triples with at least three voters. Let w2ER0 be the thus-restricted
version of of w2ER.
Here is a reduction from w2ER0 to the winner problem for weakDodgson elections.
Given two Dodgson triples (C, c, V ) and (D, d, W ), denote the corresponding elections by
E1 = (C, V ) and E2 = (D, W ). For convenience, denote v = kV k and w = kW k. Recall
that both v and w are odd and at least three and assume without loss of generality that
C  D =  and that v  w. Define m = v  kCk + w  kDk and observe that m is a strict
upper bound for all weakDodgson
in E1 and E2 : Even in the worst case (a candidate
 scores

is least preferred by all voters), v2  (kCk  1) < m switches suffice
to make a candidate a

weak Condorcet winner in E1 (by making it the top choice of v2 voters), and an analogous
statement holds for E2 .
We now define the new election E3 = (C 0 , V 0 ). The set C 0 of candidates of E3 is defined
as C 0 = C  D  S  T  U , where C and D are the candidates from elections E1 and E2
and S = {s1 , . . . , sm }, T = {t1 , . . . , tm }, and U = {u1 , . . . , um } are 3m new candidates.
In order to define the voters of E3 , we introduce the following abbreviations for notational convenience. For a (ordered) set M = {m1 , . . . , mk }, a > M > b is shorthand for
a > mk >    > m1 > b. Furthermore, let c1 , . . . , ckCk1 and d1 , . . . , dkDk1 be arbitrary
enumerations of C = C  {c} and D = D  {d}, respectively. The voters V 0 of E3 consist
of the following subgroups:
(a) For every voter in E1 with preference order Ci over C, there is one voter with preference order
Ci > T > D > S > d > U.
(b) For every voter in E2 with preference order Dj over D, there is one voter with preference order
Dj > S > C > T > c > U.
   
(c) There are v2  w2 voters with preference order
d > D > S > C > T > c > U.
(d) There are

v
2

voters with preference order
d > c > U > S > D > C > T.

(e) There are

w
2

 1 voters with preference order
c > d > U > S > D > C > T.

(f) There is one voter with preference order
S > D > C > T > c > d > U.
Since v is odd, the total number of voters is kV 0 k = 2v + w + 1. As both v and w are odd,
kV 0 k is even and a weak Condorcet winner has to be preferred to every other candidate
 
0
by at least kV2 k = v + w2 voters. We now show that the following three properties are
satisfied:
482

fiBypassing Combinatorial Protections

(i) weakDodgson-ScoreE3 (c) = weakDodgson-ScoreE1 (c),
(ii) weakDodgson-ScoreE3 (d) = weakDodgson-ScoreE1 (d), and
(iii) weakDodgson-ScoreE3 (x) > weakDodgson-ScoreE3 (c) for all x  C 0  {c, d}.
0

For (i), observe that c is preferred to every candidate in C 0  C by at least kV2 k of
the voters. Thus, in computing the weakDodgson score of c, we only have to take care
of candidates in C = {c1 , . . . , ckCk1 }. Let xi be the number of voters in group
 (a) that
prefer c to ci . Then the number of voters in V 0 that prefer c to ci is xi + v2 + w2  1.
Candidate c is a weak Condorcet winner in E3 if and only if this number is greater than
 
 
0
or equal to kV2 k = v + w2 , and this is the case if and only if xi  v2 for each i 
{1, . . . , kCk  1}. But this means that c is a Condorcet winner in E1 . By definition,
this can be achieved by k switches, where k = weakDodgson-ScoreE1 (c). We have thus
shown the upper bound weakDodgson-ScoreE3 (c)  weakDodgson-ScoreE1 (c). Now assume
that weakDodgson-ScoreE3 (c) < weakDodgson-ScoreE1 (c). Due to the construction, all
the switches in an optimal sequence occur in voters of group (a), as making c beat any
candidate in C would require more than m switches in all the other relevant voter groups
(b), (c), and (f). This means that there is a way to make c a weak Condorcet winner in E1
with less than weakDodgson-ScoreE1 (c) switches, a contradiction. We have thereby shown
that weakDodgson-ScoreE3 (c) = weakDodgson-ScoreE1 (c). The proof of property (ii) is
analogous.
For (iii), recall that m was chosen sufficiently large to be a strict upper bound on
weakDodgson-ScoreE1 (c) and thus, by (i), on weakDodgson-ScoreE3 (c). We now show that
all candidates in C 0 other than c and d have a weakDodgson score of at least m in E3 .
Consider a candidate s  S. In order to become a weak Condorcet winner, s must
 v  in
beat
contest. As s is preferred
to c by only w + 2 
particular

 v  or tie
 c in their pairwise
 
w
w
0 , it needs to gain at least v extra votes over c in voter
+
1
=
+
voters
in
V
2
2
2
2
groups (a), (d), and (e). But gaining just one extra vote over c would require more than
m switches, because s is separated from c by at least m other candidates in all these voter
groups.
 
A similar argument applies to all other candidates: Candidates in T need w2 extra
votes over d in (b), (c), (d), and (e), but one extra
vote requires more than m switches in

v
each of these voters. Candidates in U need 2 extra votes over di  D in (a), (b), (c),
and (f), but one extra vote requires more than m switches. Candidates in D need v2
extra votes over c in (a), (d),
 and (e), but one extra vote requires more than m switches.
w
Candidates in C need 2 extra votes over d in (b), (c), (d), and (e), but one extra vote
requires more than m switches. Thus, we have shown that weakDodgson-ScoreE3 (x) > m >
weakDodgson-ScoreE3 (c) for all x  C 0  {c, d}.
It is now easy to see that (1) if weakDodgson-ScoreE1 (c)  weakDodgson-ScoreE2 (d),
then c is a weakDodgson winner in E3 , and (2) if weakDodgson-ScoreE1 (c) >
weakDodgson-ScoreE2 (d), then d is the unique weakDodgson winner in E3 . Let I =
((C, c, V ), (D, d, W )) be an instance of w2ER0 . We have just argued that I is in w2ER0
if and only if c is a weakDodgson winner in E3 , which immediately implies p2 -hardness of
the weakDodgson winner problem in the nonunique-winner model. For the unique-winner
model, we follow the argument from the proof of Theorem 2.3 of Hemaspaandra et al.
483

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

(2009): Observe that I is in w2ER0 if and only if d is not the unique weakDodgson winner
in E3 . Thus the complement of the unique-winner problem for weakDodgson elections is
p2 -hard. Since p2 is closed under complement, this proves that the unique-winner problem
for weakDodgson elections is also p2 -hard.
q

A.4 Additional Proofs for Section 4
Theorem 4.3. The following hold (see Footnote 9):
1. Approval-negative-bribery and approval-strongnegative-bribery are NP-complete.
2. For single-peaked electorates, approval-negative-bribery and approval-strongnegativebribery are in P.
Proof. The polynomial-time algorithms witnessing P-membership of approval-negativebribery and approval-strongnegative-bribery have the same flavor as the algorithm for
approval-bribery (Theorem 4.2), and we present them first.
Let (C, V ) be an instance of a single-peaked approval election and L a valid single-peaked
ordering of the candidates. We have to decide whether a designated candidate p  C can
be made a winner by bribing at most k voters. As in the proof of Theorem 4.2, we define Vc
as the multiset of voters who approve of candidate c. V+ = Vp is the multiset of voters
approving p and V = V  V+ is the multiset of voters disapproving p.
Approval-strongnegative-bribery is like approval-bribery, except that bribed voters after
the bribe are not allowed to approve of p. Consequently, bribing a voter who approves of p
is always pointless and we will bribe only voters from V . Also, we can without loss of
generality assume that all bribed voters disapprove of all candidates after the bribe, as this
is clearly the best possible action with regard to our goal to make p a winner. The algorithm
is similar to the one presented in the proof of Theorem 4.2. Define the surplus n(c) of a
candidate c  C  {p} as n(c) = kVc k  kVp k and consider the rightmost candidate c0 to
the right of p that has a positive surplus. In order to make p a winner, we obviously have
to bribe at least n(c0 ) voters from Vc0  V . By definition, all candidates to the right of c0
have a nonpositive surplus, and that is whyin deciding which n(c0 ) voters from Vc0  V to
bribewe can solely focus on candidates to the left of c0 and choose the n(c0 ) voters from
Vc0  V whose approval range extends the furthest to the left. As mentioned above, we
bribe these voters to disapprove of everyone, thereby making n(c0 ) = 0. We then recalculate
the surpluses of all candidates to the left of c0 (note that a candidates surplus never grows
and we can thus ignore the candidates to the right of c0 ) and repeat the process with the
now rightmost candidate to the right of p that has a positive surplus.
By the time when all candidates to the right of p have a nonpositive surplus, we will
mirror the societal order L and repeat the same procedure for all nonpositive-surplus candidates that were originally to the left of p with respect to L. If we can make all surpluses
nonpositive without exceeding the bribe limit of k, we have found a successful bribery action. Otherwise, a successful bribery action does not exist, as all our decisions (concerning
which voters to bribe) were provably optimal.
In the case of approval-negative-bribery, bribed candidates may approve of p after the
bribe only if they approved of p before the bribe. In this model, it does sometimes make sense
484

fiBypassing Combinatorial Protections

to bribe voters from V+ . But that does not pose a problem, as the following observation
shows. The approval score of p remains unchanged for every optimal bribe. Here, an optimal
bribe is defined as either bribing a voter from V+ to disapprove of everyone except p, or
bribing a voter from V to disapprove of everyone. Again, as in the case of strongnegativebribery, we can without loss of generality assume that all our bribes are optimal. Thus,
the observation tells us that we do not have to differentiate between bribing voters from V+
and V , as in both cases the only thing we care about is the removal of approvals of
candidates other than p. Hence, the algorithm is the same as for strongnegative bribery,
except that when considering a positive-surplus candidate c and deciding which voters
from Vc to bribe, we not only consider voters that disapprove of p but also voters that
approve of p.
We now go on to show that both bribery problems are NP-complete in the general (i.e.,
not necessarily single-peaked) case. Membership in NP is obvious for both problems.
The hardness proof of approval-strongnegative-bribery is an adaptation from the proof
that approval-bribery is NP-hard (Faliszewski et al., 2009, Thm. 4.2). Please refer to that
proof as we here only point out the differences. In the reduction from the NP-hard problem
Exact Cover by 3-sets (X3C), define the bribery instance as in Theorem 4.2 of Faliszewski
et al. (2009), except that the number of voters who approve only of S
p is changed from m  t
to instead m. Then if there exists a cover A with kAk = t and iA Si = B, we bribe
each vi with i  A to approve of zero candidates (this is a slight additional change). So all
candidates tie at m approvals and all win. Looking at the other direction, if there exists a
successful bribe of t voters, then since p has m approvals and each of the 3t candidates in
B has m + 1 approvals, and no bribe can increase the number of approvals of p (in both
the negative and the strongnegative bribery setting), then clearly p still has m approvals
after the bribes. So, each of the 3t candidates in B (that started with m + 1 approvals)
must have lost exactly one approval (if any lost more than one approval, one would have
lost zero approvals and would beat p; if any lost zero approvals, it would beat p). So, we
have an exact cover by 3-sets.
Due to the construction, one can use the same proof to show NP-hardness of approvalnegative-bribery: the only voters approving p are voters who approve only p and are obviously never bribed.
q
Theorem 4.4. For single-peaked electorates, weakCondorcet-weighted-$bribery, weakCondorcet-negative-weighted-bribery, and weakCondorcet-negative-weighted-$bribery are
NP-complete, and the remaining five cases (weakCondorcet-bribery, weakCondorcet$bribery, weakCondorcet-weighted-bribery, weakCondorcet-negative-bribery, weakCondorcetnegative-$bribery) are in P.
Proof. The general setting is the same in all of the eight bribery problems and we describe
it here. Let (C, V ) be an election instance and let L be a linear order over the candidates
such that the electorate is single-peaked with respect to L. The question is whether a
designated candidate p  C can be made a weakCondorcet winner by bribing at most k
voters.
If p is a weakCondorcet winner of the election (C, V ), a successful bribery action is obviously possible as we do not have to bribe any voter. We can thus focus on the case where p
485

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

is not a weakCondorcet winner of (C, V ). In this case, the definition of weakCondorcet
implies that p is not contained in the median interval (i.e., p 
/ [m` , mr ]L , where m` and
mr are the top choices of the median voters). Assume without loss of generality that p lies
strictly to the right of the median interval, i.e., mr L p (otherwise, we can just mirror the
societal order L).
Identify each voter with his or her most preferred candidate. Define V` = {v  V | v L p}
as the multiset of voters lying to the left of p with respect to L and Vr = V  V` = {v 
V | v = p or p L v} as the multiset of voters lying on p or to the right of p. In settings
where voters have no weights, mr L p immediately implies that
l kV` k >m kVr k and that, in
rk
order to make p a weakCondorcet winner, we need to bribe kV` kkV
voters from V` to
2
make p their top choice (or, in the negative-bribery settings, to make the candidate to the
right
of p their
m top choice). If voters have weights, we have to shift a total weight of at least
l
w(V` )w(Vr )
, where w(V 0 ) for a submultiset V 0  V of voters is defined in the natural way
2
P
as the sum of the weights of voters contained in V 0 , i.e., w(V 0 ) = vV 0 w(v).
Observe that all eight bribery problems are easily seen to be in NP. We now prove the
assertions of Theorem 4.4 in the order in which they are mentioned in the statement of the
theorem.
(i) weakCondorcet-weighted-$bribery is NP-complete.
Define k as the weight that needs to be shifted from V` to p, i.e.,


w(V` )  w(Vr )
k =
.
2
The problem weakCondorcet-weighted-$bribery can now be stated as follows. We
are given a collection of objects (voters), each with a positive integer weight and a
positive integer price, and bounds k and k, and the question is whether there exists
a subset whose price is at most k and whose weight is at least k. If so, bribe them
all to first-choose p. If this holds (or if p initially wins), we succeed, else we fail.
It is straightforward to show that the NP-hard problem Knapsack (see, e.g., Garey
& Johnson, 1979) reduces directly to this problem, establishing the NP-hardness of
weakCondorcet-weighted-$bribery.
(ii) weakCondorcet-negative-weighted-bribery is NP-complete.
We give a reduction from the NP-complete problem Partition (see the proof
Theorem 6.2). Given a collection (k1 , k2 , . . . , kn ) of positive integers that sum to
2K, define the single-peaked election (C, V ) with C = {a, p, c}, a L p L c, and for
each ki we have one voter vi whose first choice is a and whose weight is ki . Set the
budget k equal to n. It is easy to see that p can win via negative bribery if and only
if (k1 , k2 , . . . , kn ) can be partitioned into two equal-sum parts.
(iii) weakCondorcet-negative-weighted-$bribery is NP-complete.
This follows from (ii).
(iv) weakCondorcet-bribery is in P.
486

fiBypassing Combinatorial Protections

The algorithm is easy: Bribe k voters chosen arbitrarily from V` to make p their top
choice. If, after the bribe, p is a weakCondorcet winner, we were successful. Otherwise,
no successful bribery action exists.
(v) weakCondorcet-$bribery is in P.
The algorithm is the same as in (iv), except that we bribe voters in the order of their
price tags, starting with the cheapest voter.
(vi) weakCondorcet-weighted-bribery is in P.
The algorithm is the same as in (iv), except that we bribe voters in the order of their
weights, starting with the voter that has the highest weight.
(vii) weakCondorcet-negative-bribery is in P.
This follows from (viii).
(viii) weakCondorcet-negative-$bribery is in P.
Recall that p lies strictly to the right of the median interval. In the case of negative
bribery, bribed voters must not have p as their top choice. Thus, p can never be made
a weakCondorcet winner if either (a) no voter has p as his or her first choice and kV k
is odd, or (b) p is on the right end of the societal order L. (Since p lies strictly to the
right of the median interval, p cannot be on the left end of L.)
Otherwise, let p be the candidate to the right of p with respect to L. Successful
bribery is possible if and only if, by greedily bribing voters from V` (starting with the
cheapest voter) to have p as their top choice, we can make p a weakCondorcet winner.
q
As a final comment, we note that it is easy to see that these problems can be solved
in pseudo-polynomial time by dynamic programming, and so the NP-completeness results
above can not be strengthened to strong NP-completeness unless P = NP.
A.5 Additional Proofs for Section 5
Let T be one of the 22 control types defined by Faliszewski et al. (2009a), i.e., the eleven
types (adding/deleting candidates/voters (4 types); unlimited-adding of candidates (1
type); and three partition types each with TP and TE (6 types)), each for both the constructive cases (making c win or uniquely win) and the destructive cases (making c not win
or not be a unique winner). Let E be any election system. The following holds for both the
unique-winner model and the nonunique-winner model. (Recall from Section 5.1 that when
we speak of a control problem being single-peaked, we mean that the single-peakedness
holds even including all potentially added candidates and voters.)
Theorem A.5. The T control problem for E is in P for single-peaked electorates in our
default model (in which the societal order L is part of the input) if and only if the T control
problem for E is in P for single-peaked electorates in the exists-L model (in which we ask
if there exists some order L relative to which the input is single-peaked and is such that the
goal can be achieved by a type T control action).
487

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Proof. Note that for any control problem instance and any L0 and L00 that are valid
societal orders relative to the instance (and here it is crucial that our notion is that all of
the instancenot just the voters/candidates left in at the endmust respect an order for
it to be valid), then the set of successful (resp., unsuccessful) control actions under L0 is
exactly the same as under L00 . Thus, we have the following key observation:
(?) There exists a valid single-peaked order relative to which the control problem instance can be successfully controlled if and only if the control problem instance can
be successfully controlled for every valid single-peaked order.
So, if a control problem is in P for the model in which L is part of the input via algorithm A,
then for the exists-L model, we can on a given instance I compute a valid L (e.g., using the
algorithm of Escoffier et al., 2008) and hand it to A. By (?) and the correctness of A, we
know that A gives the correct answer.
As to the other direction, if a control problem is in P for the exists-L model, then thanks
to (?), we can simply strip L off the input in the model in which L is part of the input and
can safely (knowing the answer is correct for our original issue) ask the existential question
to the hypothetical P algorithm for the exists-L version.
q
Some particular instances of Theorem A.5 were argued directly for particular cases of E
and T by Faliszewski et al. (2011), but Theorem A.5 provides a tool that removes the need
for case-specific arguments.
Theorem 5.5. For weakCondorcet elections, control by adding voters and control by deleting voters are each in P for single-peaked electorates, in both the nonunique-winner model
and the unique-winner model.
Proof. We here give algorithms for the nonunique-winner model. For the unique-winner
model, see the proof of Theorem 5.7 (by Fact 3.1 on page 448, being a unique weakCondorcet
winner is tantamount to being a Condorcet winner for single-peaked electorates).
Associate each voter with his or her most preferred candidate. Our goal is to make p a
weakCondorcet winner, i.e., we want to end up in one of the following two situations:
1. kV k is odd and the median voter has p as his or her top choice.
2. kV k is even and p lies in the (inclusive) interval [m` , mr ]L , where m` and mr are the
median voters. (This includes the case where m` = mr .) In the following, we will
refer to [m` , mr ]L as the median interval.
Here is an easy algorithm for the case of control by addition of voters: See where the
current median (or median interval) is. If p is the median (or if p lies in the median interval),
we are done. Otherwise, assume without loss of generality that the median (interval) lies to
the left of p. Then add unregistered voters whose top choice is either p or some candidate
to the right of p until p is a weakCondorcet winner or we hit our addition bound or we
have added all the unregistered voters of this sort. If at this point we have not succeeded,
success is impossible.
The algorithm for the control-by-deletion-of-voters case is similar: See where the current
median (or median interval) is. If p is the median (or if p lies in the median interval), we are
488

fiBypassing Combinatorial Protections

done. Otherwise, we need to shift the location of the median voter(s) towards p. Without
loss of generality assume that the median (interval) lies to the left of p. Then we start
deleting voters at the left end of L until we make p a weakCondorcet winner or we hit our
deletion bound without success.
q
Theorem 5.6. For Condorcet elections, control by partition of voters is in P for singlepeaked electorates, in both the nonunique-winner model and the unique-winner model, and
in both the Ties Promote model and the Ties Eliminate model (note that all four cases
coincide here).
Proof. Let (C, V ) be an instance of a Condorcet election and let L be a linear order with
respect to which the electorate is single-peaked. Without loss of generality assume kCk  2
(otherwise, the problem is trivial). Furthermore, p  C is a designated candidate and the
question is whether there exists some partition (V1 , V2 ) such that p is a Condorcet winner
of the overall election. It is clear that this is the case if and only if there exists a partition
(V1 , V2 ) such that p is a Condorcet winner in (C, V1 ) and (C, V2 ) has no Condorcet winner, a
Condorcet winner that p beats in a pairwise comparison, or p itself as a Condorcet winner.
We show that Algorithm 3 returns a partition with this property whenever one exists.
Algorithm 3 loops over all candidates c that p beats in a pairwise comparison and over
all possible sizes of V1 (line 2). Then the set C of candidates is divided into five regions
R1 , R2 , . . . , R5 that are defined as follows. Without loss of generality assume that p <L c,
i.e., c lies to the right of p with respect to the societal order L (otherwise, just mirror
everything). Region R1 consists of all candidates to the left of p, i.e., R1 = {x  C | x <L p},
and region R2 consists of p only. Similarly, R5 consists of all candidates to the right of c
and R4 consists of c only. Finally, R3 consists of all remaining candidates, namely, the
candidates that lie between p and c with respect to L. Note that all regions except R2 and
R4 may be empty. We have the following picture:
p
R1

R2

c
R3

R4

R5

Associate each voter with the candidate at the top of that voters preference order.
We now define P` , a set of partitions of V with respect to the regions just defined. Let
` = (`1 , `2 , . . . , `5 ) be a five-dimensional vector of natural numbers. Define P` as the set of
all partitions (V1 , V2 ) of V that have the property that, for each i, `i is the number of voters
in V1 whose top choice is in Ri .
For P` 6= , the key observation is the following: For x  {p, c} it holds that x is a
Condorcet winner in some election (C, V1 ) with (V1 , V2 )  P` if and only if x is a Condorcet
winner in every election (C, V1 ) with (V1 , V2 )  P` . That is, if we want to check whether x is
a Condorcet winner in any of the primary elections (C, V1 ) induced by any of the partitions
(V1 , V2 )  P` , it suffices to check just one of them to obtain the answer. By symmetry, the
same statement holds for Condorcet winners of the elections (C, V2 ).
The reason why this is true is that, given the number of voters in each region, it is
easy to compute the region(s) of the median voter(s) (just by counting). Since both p
489

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Algorithm 3 Condorcet Control by Partition of Voters
1: for all candidates c that lose against p in a pairwise comparison do
2:
for all k  {1, 2, . . . , kV k} do
P
3:
for all ` = (`1 , `2 , . . . , `5 )  N5 with 5i=1 `i = k do
4:
define P` as the set of partitions (V1 , V2 ) of V such that for each i, `i is
the number of voters in V1 whose top choice is in Ri
5:
if P` 6=  then
6:
let (V1 , V2 ) be an arbitrary partition from P`
7:
if p is a Condorcet winner of (C, V1 ) then
8:
if either c or p is a Condorcet winner of (C, V2 ) then
9:
return (V1 , V2 )
10:
else if  (V1 , V2 )  P` : (C, V2 ) has no Condorcet winner then
11:
return (V1 , V2 )
12: return there is no partition that makes p an overall Condorcet winner

and c constitute a region on their own, it is equally easy to tell whether they are Condorcet
winners (using Fact 3.1).
We have just shown that the queries in lines 7 and 8 of Algorithm 3 can be efficiently
answered. We now go on to show how the query in line 10 can be efficiently answered,
i.e., given `, is there a partition (V1 , V2 )  P` such that (C, V2 ) has no Condorcet winner.
Clearly, this cannot happen if there are an odd number of voters in V2 . So assume kV2 k to
be even and let m1 and m2 be the median voters. For each region Ri , we know the number
of V2 -voters whose top choice is in Ri (this number is kRi k  `i ). Thus we know in which
regions the median voters fall (again just by counting). Now, if at least one of m1 or m2 fall
in R2 or R4 (i.e., are p or c), then (C, V2 ) cannot possibly have a Condorcet winner other
than p or c (there may be no Condorcet winners). In any of these three cases, our partition
action was successful21 and we can return an arbitrary partition in P` .
The only remaining cases are that m1 and m2 both fall in R1  R3  R5 . If m1 and
m2 fall in different regions, there can obviously be no Condorcet winner and we are done.
Assume, therefore, that m1 and m2 both fall in Ri with i  {1, 3, 5}. Our goal is to assign
qi = kRi k  `i voters with top choice in Ri to V2 in such a way that the median pair in
V2 does not fall on the same candidate. Let the median pair be the rth and (r + 1)st
V2 -voter in Ri . Here, r (1  r  qi  1) is known (by the numbers of V2 -voters to the left
and right of Ri ) and we count from left to right with respect to the societal order L. We
will try to accomplish our goal by brute force, namely, for each pair of candidates (d` , dr )
in Ri with d` <L dr , let us try to ensure that the rth V2 -voter in Ri from the left falls
on or left of d` and the (r + 1)st falls on or right of dr . We can do this if and only if
k{x  V | x falls in Ri  x L d` }k  r and k{x  V | x falls in Ri  dr L x}k  qi  r.
The cost of this check is in O(kCk2 ), as for each pair of candidates in Ri , we do some easy
counting.
Summing up, the running time of Algorithm 3 can be bounded as follows. The number of
iterations for the loops in lines 1, 2, and 3, are bounded by kCk, kV k, and kV k5 , respectively.
The cost of one iteration of the inner loop is clearly dominated by the cost of answering
21. In fact, if either p or c is a Condorcet winner in (C, V2 ), this would already have been detected in line 8.

490

fiBypassing Combinatorial Protections

the query in line 10. This cost is bounded by O(kCk2 ), as argued in the last paragraph.
Altogether, this yields a running time that is obviously polynomial in the size of the input.
Correctness of Algorithm 3 should be clear from the explanations above, as we have
argued that we find a partition that makes p an overall Condorcet winner if and only if
such a partition exists. In particular, observe that we never need to consider cases with
k = 0 as p can never be a Condorcet winner of (C, ). And the case where p is already a
Condorcet winner of the original election (C, V ) is handled by setting k to kV k in line 2
(and c to some arbitrary candidate from C  {p} in line 1).
q
Theorem 5.7. For Condorcet elections, control by adding voters and control by deleting
voters are each in P for single-peaked electorates, in both the nonunique-winner model and
the unique-winner model.
Proof. Associate each voter with his or her most preferred candidate. Our goal is to
make p a Condorcet winner, i.e., we want to end up in a situation where p is the most
preferred candidate of the median voter(s).
Here is an easy algorithm for the case of control by addition of voters: See where the
current median (or median pair) is. If it is on p, we are done. Otherwise, add unregistered
voters whose top choice is p until we have added all those or we succeed or we hit our
addition bound. If we succeed or hit our addition bound, we are done (with or without
success). If we have not yet hit our addition bound, move on as follows. If p is strictly
between two median voters at this point, success is impossible. But if it is one of two distinct
median voters (without loss of generality say it is the rightmost of the two median voters)
or the median interval does not contain p (without loss of generality say the interval lies to
the left of p), then add unregistered voters to the right of p until we make p a Condorcet
winner or we hit our addition bound or we have added all the unregistered voters of this
sort. If at this point we have not succeeded, success is impossible.
The algorithm for the control-by-deletion-of-voters case is similar: See where the current
median (or median pair) is. If it is on p, we are done. Otherwise, we need to shift the location
of the median voter(s) towards p. Without loss of generality assume that the median (or
median interval) lies to the left of p. Then we start deleting voters at the left end of L until
we make p a Condorcet winner or we hit our deletion bound without success. Note that if p
initially lies in between the two median voters, it can never be made a Condorcet winner
by deleting voters.
q

References
Barbera, S. (2001). An introduction to strategy-proof social choice functions. Social Choice
and Welfare, 18 (4), 619653.
Bartholdi, III, J., & Orlin, J. (1991). Single transferable vote resists strategic voting. Social
Choice and Welfare, 8 (4), 341354.
Bartholdi, III, J., Tovey, C., & Trick, M. (1989). The computational difficulty of manipulating an election. Social Choice and Welfare, 6 (3), 227241.
491

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Bartholdi, III, J., Tovey, C., & Trick, M. (1992). How hard is it to control an election?
Mathematical and Computer Modeling, 16 (8/9), 2740.
Bartholdi, III, J., & Trick, M. (1986). Stable matching with preferences derived from a
psychological model. Operations Research Letters, 5 (4), 165169.
Black, D. (1948). On the rationale of group decision-making. Journal of Political Economy,
56 (1), 2334.
Black, D. (1958). The Theory of Committees and Elections. Cambridge University Press.
Booth, K., & Lueker, G. (1976). Testing for the consecutive ones property, interval graphs,
and graph planarity using PQ-tree algorithms. Journal of Computer and System
Sciences, 13 (3), 335379.
Brandt, F., Brill, M., Hemaspaandra, E., & Hemaspaandra, L. (2010). Bypassing combinatorial protections: Polynomial-time algorithms for single-peaked electorates. In Proceedings of the 24th AAAI Conference on Artificial Intelligence, pp. 715722. AAAI
Press.
Bredereck, R., Chen, J., & Woeginger, G. (2013). Are there any nicely structured preference
profiles nearby? In Proceedings of the 23rd International Joint Conference on Artificial
Intelligence, pp. 6268. AAAI Press.
Condorcet, J. (1785). Essai sur lApplication de LAnalyse a la Probabilite des Decisions
Rendues a la Pluralite des Voix. Facsimile reprint of original published in Paris, 1972,
by the Imprimerie Royale.
Conitzer, V. (2009). Eliciting single-peaked preferences using comparison queries. Journal
of Artificial Intelligence Research, 35, 161191.
Conitzer, V., Sandholm, T., & Lang, J. (2007). When are elections with few candidates
hard to manipulate? Journal of the ACM, 54 (3), Article 14.
Copeland, A. (1951). A reasonable social welfare function. Mimeographed notes from
Seminar on Applications of Mathematics to the Social Sciences, University of Michigan.
Cornaz, D., Galand, L., & Spanjaard, O. (2012). Bounded single-peaked width and proportional representation. In Proceedings of the 20th European Conference on Artificial
Intelligence, pp. 270275. IOS Press.
Cornaz, D., Galand, L., & Spanjaard, O. (2013). Kemeny elections with bounded singlepeaked or single-crossing width. In Proceedings of the 23rd International Joint Conference on Artificial Intelligence, pp. 7682. AAAI Press.
Davis, O., Hinich, M., & Ordeshook, P. (1970). An expository development of a mathematical model of the electoral process. American Political Science Review, 54 (2),
426448.
Dodgson, C. (1876). A method of taking votes on more than two issues. Pamphlet printed
by the Clarendon Press, Oxford, and headed not yet published.
Doignon, J., & Falmagne, J. (1994). A polynomial time algorithm for unidimensional unfolding representations. Journal of Algorithms, 16 (2), 218233.
492

fiBypassing Combinatorial Protections

Duggan, J., & Schwartz, T. (2000). Strategic manipulability without resoluteness or shared
beliefs: GibbardSatterthwaite generalized. Social Choice and Welfare, 17 (1), 8593.
Dwork, C., Kumar, R., Naor, M., & Sivakumar, D. (2001). Rank aggregation methods for
the web. In Proceedings of the 10th International World Wide Web Conference, pp.
613622. ACM Press.
Ephrati, E., & Rosenschein, J. (1997). A heuristic technique for multi-agent planning.
Annals of Mathematics and Artificial Intelligence, 20 (14), 1367.
Erdelyi, G., Lackner, M., & Pfandler, A. (2013). Computational aspects of nearly singlepeaked electorates. In Proceedings of the 27th AAAI Conference on Artificial Intelligence, pp. 283289.
Erdelyi, G., Nowak, M., & Rothe, J. (2009). Sincere-strategy preference-based approval
voting fully resists constructive control and broadly resists destructive control. Mathematical Logic Quarterly, 55 (4), 425443.
Erdelyi, G., Piras, L., & Rothe, J. (2011). The complexity of voter partition in Bucklin
and fallback voting: Solving three open problems. In Proceedings of the 10th International Conference on Autonomous Agents and Multiagent Systems, pp. 837844.
International Foundation for Autonomous Agents and Multiagent Systems.
Erdelyi, G., & Rothe, J. (2010). Control complexity in fallback voting. In Proceedings the
16th Australasian Theory Symposium, pp. 3948. Australian Computer Society.
Escoffier, B., Lang, J., & Ozturk, M. (2008). Single-peaked consistency and its complexity.
In Proceedings of the 18th European Conference on Artificial Intelligence, pp. 366370.
IOS Press.
Faliszewski, P. (2008). Nonuniform bribery. In Proceedings of the 7th International Conference on Autonomous Agents and Multiagent Systems, pp. 15691572. International
Foundation for Autonomous Agents and Multiagent Systems.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2009). The complexity of bribery
in elections. Journal of Artificial Intelligence Research, 35, 485532.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2010). Using complexity to protect
elections. Communications of the ACM, 53 (11), 7482.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2011a). The complexity of manipulative attacks in nearly single-peaked electorates. Tech. rep. arXiv:1105.5032 [cs.GT],
Computing Research Repository, arXiv.org/corr/. Revised, July 2012.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2011b). The complexity of manipulative attacks in nearly single-peaked electorates. In Proceedings of the 13th Conference on Theoretical Aspects of Rationality and Knowledge, pp. 228237. ACM Digital
Library.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2013). Weighted electoral control. In Proceedings of the 12th International Conference on Autonomous Agents and
Multiagent Systems, pp. 367374. International Foundation for Autonomous Agents
and Multiagent Systems.
493

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2014). The complexity of manipulative attacks in nearly single-peaked electorates. Artificial Intelligence, 207, 6999.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009a). Llull and
Copeland voting computationally resist bribery and constructive control. Journal of
Artificial Intelligence Research, 35, 275341.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009b). A richer understanding of the complexity of election systems. In Ravi, S., & Shukla, S. (Eds.), Fundamental Problems in Computing: Essays in Honor of Professor Daniel J. Rosenkrantz,
pp. 375406. Springer.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2011). The shield that
never was: Societies with single-peaked preferences are more open to manipulation
and control. Information and Computation, 209, 89107.
Faliszewski, P., Hemaspaandra, E., & Schnoor, H. (2008). Copeland voting: Ties matter.
In Proceedings of the 7th International Conference on Autonomous Agents and Multiagent Systems, pp. 983990. International Foundation for Autonomous Agents and
Multiagent Systems.
Fishburn, P. (1977). Condorcet social choice functions. SIAM Journal on Applied Mathematics, 33 (3), 469489.
Friedgut, E., Kalai, G., Keller, N., & Nisan, N. (2011). A quantitative version of the
Gibbard-Satterthwaite Theorem for three alternatives. SIAM Journal on Computing,
40 (3), 934952.
Friedgut, E., Kalai, G., & Nisan, N. (2008). Elections can be manipulated often. In Proceedings of the 49th IEEE Symposium on Foundations of Computer Science, pp. 243249.
IEEE Computer Society Press.
Fulkerson, D., & Gross, G. (1965). Incidence matrices and interval graphs. Pacific Journal
of Mathematics, 15 (5), 835855.
Garey, M., & Johnson, D. (1979). Computers and Intractability: A Guide to the Theory of
NP-Completeness. W. H. Freeman.
Ghosh, S., Mundhe, M., Hernandez, K., & Sen, S. (1999). Voting for movies: The anatomy of
recommender systems. In Proceedings of the 3rd Annual Conference on Autonomous
Agents, pp. 434435. ACM Press.
Gibbard, A. (1973). Manipulation of voting schemes. Econometrica, 41 (4), 587601.
Hagele, G., & Pukelsheim, F. (2001). The electoral writings of Ramon Llull. Studia Lulliana,
41 (97), 338.
Hemachandra, L. (1989). The strong exponential hierarchy collapses. Journal of Computer
and System Sciences, 39 (3), 299322.
Hemaspaandra, E., & Hemaspaandra, L. (2000). Computational politics: Electoral systems.
In Proceedings of the 25th International Symposium on Mathematical Foundations of
Computer Science, pp. 6483. Springer-Verlag Lecture Notes in Computer Science
#1893.
494

fiBypassing Combinatorial Protections

Hemaspaandra, E., & Hemaspaandra, L. (2007). Dichotomy for voting systems. Journal of
Computer and System Sciences, 73 (1), 7383.
Hemaspaandra, E., Hemaspaandra, L., & Menton, C. (2013). Search versus decision for
election manipulation problems. In Proceedings of the 30th Annual Symposium on
Theoretical Aspects of Computer Science, pp. 377388. Leibniz International Proceedings in Informatics (LIPIcs).
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (1997). Exact analysis of Dodgson
elections: Lewis Carrolls 1876 voting system is complete for parallel access to NP.
Journal of the ACM, 44 (6), 806825.
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2007). Anyone but him: The complexity
of precluding an alternative. Artificial Intelligence, 171 (56), 255285.
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009). Hybrid elections broaden
complexity-theoretic resistance to control. Mathematical Logic Quarterly, 55 (4), 397
424.
Hemaspaandra, E., Spakowski, H., & Vogel, J. (2005). The complexity of Kemeny elections.
Theoretical Computer Science, 349 (3), 382391.
Hemaspaandra, L., & Williams, R. (2012). An atypical survey of typical-case heuristic
algorithms. SIGACT News, 43 (4), 7189.
Kemeny, J. (1959). Mathematics without numbers. Ddalus, 88 (4), 571591.
Kemeny, J., & Snell, L. (1960). Mathematical Models in the Social Sciences. Ginn.
Konczak, K., & Lang, J. (2005). Voting procedures with incomplete preferences. In Proceedings of the Multidisciplinary IJCAI-05 Workshop on Advances in Preference Handling,
pp. 124129.
Kramer, G. (1977). A dynamical model of political equilibrium. Journal of Economic
Theory, 16 (2), 310334.
Krehbiel, K. (1998). Pivotal Politics: A Theory of U.S. Lawmaking. University of Chicago
Press.
McCabe-Dansted, J., Pritchard, G., & Slinko, A. (2008). Approximability of Dodgsons
rule. Social Choice and Welfare, 31 (2), 311330.
Menton, C. (2013). Normalized range voting broadly resists control. Theory of Computing
Systems, 53 (4), 507531.
Nanson, E. (1882). Methods of election. Transactions and Proceedings of the Royal Society of
Victoria, 19, 197240. Available as a 2009 facsimile reprint from Kessinger Publishing.
Niemi, R., & Wright, J. (1987). Voting cycles and the structure of individual preferences.
Social Choice and Welfare, 4 (3), 173183.
Niou, E. (1987). A note on Nansons Rule. Public Choice, 54 (2), 191193.
Papadimitriou, C., & Zachos, S. (1983). Two remarks on the power of counting. In Proceedings of the 6th GI Conference on Theoretical Computer Science, pp. 269276.
Springer-Verlag Lecture Notes in Computer Science #145.
495

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Pennock, D., Horvitz, E., & Giles, C. (2000). Social choice theory and recommender systems:
Analysis of the axiomatic foundations of collaborative filtering. In Proceedings of the
17th National Conference on Artificial Intelligence, pp. 729734. AAAI Press.
Procaccia, A., & Rosenschein, J. (2007). Junta distributions and the average-case complexity
of manipulating elections. Journal of Artificial Intelligence Research, 28, 157181.
Rothe, J., Spakowski, H., & Vogel, J. (2003). Exact complexity of the winner problem for
Young elections. Theory of Computing Systems, 36 (4), 375386.
Satterthwaite, M. (1975). Strategy-proofness and Arrows conditions: Existence and correspondence theorems for voting procedures and social welfare functions. Journal of
Economic Theory, 10 (2), 187217.
Schwartz, T. (1972). Rationality and the myth of the maximum. Nous, 6 (2), 97117.
Simpson, P. (1969). On defining areas of voter choice: Professor Tullock on stable voting.
The Quarterly Journal of Economics, 83 (3), 478490.
Sui, X., Boutilier, C., & Sandholm, T. (2013). Analysis and optimization of multidimensional percentile mechanisms. In Proceedings of the 23rd International Joint
Conference on Artificial Intelligence, pp. 367374. AAAI Press.
Walsh, T. (2007). Uncertainty in preference elicitation and aggregation. In Proceedings of
the 22nd AAAI Conference on Artificial Intelligence, pp. 38. AAAI Press.
Walsh, T. (2009). Where are the really hard manipulation problems? The phase transition in
manipulating the veto rule. In Proceedings of the 21st International Joint Conference
on Artificial Intelligence, pp. 324329. AAAI Press.
Young, H. (1977). Extending Condorcets rule. Journal of Economic Theory, 16 (2), 335
353.

496

fi