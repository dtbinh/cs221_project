Journal of Artificial Intelligence Research 53 (2015) 721-744

Submitted 9/14; published 8/15

Mechanisms for Multi-unit Combinatorial
Auctions with a Few Distinct Goods
Piotr Krysta

p.krysta@liverpool.ac.uk

Deparment of Computer Science
University of Liverpool, United Kingdom

Orestis Telelis

telelis@gmail.com

Department of Digital Systems
University of Piraeus, Greece

Carmine Ventre

c.ventre@tees.ac.uk

School of Computing
Teesside University, United Kingdom

Abstract
We design and analyze deterministic truthful approximation mechanisms for multiunit Combinatorial Auctions involving only a constant number of distinct goods, each
in arbitrary limited supply. Prospective buyers (bidders) have preferences over multisets
of items, i.e., for more than one unit per distinct good. Our objective is to determine
allocations of multisets that maximize the Social Welfare. Our main results are for multiminded and submodular bidders. In the first setting each bidder has a positive value for
being allocated one multiset from a prespecified demand set of alternatives. In the second
setting each bidder is associated to a submodular valuation function that defines his value
for the multiset he is allocated. For multi-minded bidders, we design a truthful Fptas
that fully optimizes the Social Welfare, while violating the supply constraints on goods
within factor (1 + ), for any fixed  > 0 (i.e., the approximation applies to the constraints
and not to the Social Welfare). This result is best possible, in that full optimization is
impossible without violating the supply constraints. For submodular bidders, we obtain a
Ptas that approximates the optimum Social Welfare within factor (1 + ), for any fixed
 > 0, without violating the supply constraints. This result is best possible as well. Our
allocation algorithms are Maximal-in-Range and yield truthful mechanisms, when paired
with Vickrey-Clarke-Groves payments.

1. Introduction
In this paper we study the design and analysis of truthful multi-unit Combinatorial Auctions, for a constant number of distinct goods, each in limited supply. Arguably, the most
widespread modern application of this general setting is the allocation of radio spectrum
licences (Milgrom, 2004); each such license is for the use of a specific frequency band of electromagnetic spectrum, within a certain geographic area. In the design of such Spectrum
Auctions, licenses for the same area are considered as identical units of a single good (the
area), while the number of distinct geographic areas is, of course, bounded by a constant.
More formally, we consider the problem of auctioning (allocating) in one go multiple
units of each out of a constant number of distinct goods, to prospective buyers with private
multi-demand combinatorial valuation functions, so as to maximize the Social Welfare. A
c
2015
AI Access Foundation. All rights reserved.

fiKrysta, Telelis, & Ventre

multi-demand buyer in this setting may have distinct positive values for distinct multisets of
goods, i.e., for each such multiset they may demand more than one unit per good. Our aim
is to devise deterministic truthful auction mechanisms, wherein every bidder finds it to his
best interest to reveal his value truthfully for each multiset of items (i.e., truthful report of
valuation functions is a dominant strategy). Additionally, we are interested in mechanisms
that can compute an approximately efficient allocation in polynomial time. This problem generalizes simultaneously Combinatorial Auctions of multiple goods and Multi-unit
Auctions of a single good to the multi-unit and combinatorial settings respectively.
Since the work of Lehmann, OCallaghan, and Shoham (2002), Mechanism Design for
Combinatorial Auctions of multiple heterogeneous goods (each in unitary supply) has received significant attention in recent years (Holzman, Kfir-Dahav, Monderer, & Tennenholtz, 2004; Lehmann, Lehmann, & Nisan, 2006; Dobzinski, Nisan, & Schapira, 2010; Lavi
& Swamy, 2011), due to their various applications, especially in online trading systems
over the Internet. A mechanism elicits bids from interested buyers, so as to determine an
assignment of bundles to them and payments in such a way, that it is to each bidders best
interest to reveal his valuation function truthfully to the mechanism. This line of research,
that introduces algorithmic efficiency considerations in the design of truthful mechanisms,
was initialized by the work of Nisan and Ronen (2001).
The related problem of auctioning multiple  say s  units of a single good to multidemand bidders has already been considered by Vickrey in his seminal paper (Vickrey,
1961). For bidders with submodular private valuation functions, Vickrey gave an extension
of his celebrated single-item Second-Price Auction mechanism, that retains truthful revelation of valuation functions as a (weakly) dominant strategy for bidders and fully optimizes
the Social Welfare. The only drawback of this mechanism is that it is computationally
efficient only for a few (constant number of) units, in that the allocation algorithm must
process (s) bids in at least as many steps, whereas because s is an input number, it should
require a number of steps bounded by a polynomial in log s. Several other drawbacks of
the generalized Vickrey-Clarke-Groves (truthful) auction mechanism have been identified
by Ausubel and Milgrom (2010). Polynomial-time approximation mechanisms for multiunit auctions were designed relatively recently (Mualem & Nisan, 2002, 2008; Dobzinski &
Nisan, 2010; Vocking, 2012; Nisan, 2014). In particular, Nisan (2014) devised a deterministic, polynomial time auction mechanism, for the multi-unit setting with submodular bidders
first considered by Vickrey (1961). Vocking designed and analyzed recently a randomized
universally truthful polynomial-time approximation scheme, for bidders with unrestricted
valuation functions (Vocking, 2012).
Results for the more general setting of multi-unit Combinatorial Auctions are relatively
scarcer (Bartal, Gonen, & Nisan, 2003; Grandoni, Krysta, Leonardi, & Ventre, 2014; Lavi
& Swamy, 2011). It is exactly this setting we consider here, with a constant number of
distinct goods, similarly to the setting considered by Grandoni et al. (2014); in particular,
for a number of cases of such auctions we analyze Maximal-in-Range (MiR) allocation
algorithms (Nisan & Ronen, 2007), that can be paired with the Vickrey-Clarke-Groves
payment rule, so as to yield truthful mechanisms.
722

fiMechanisms for Multi-unit Combinatorial Auctions

1.1 Contribution
Our main results concern multi-unit Combinatorial Auctions with a constant number of
distinct goods for two broad classes of bidders, as specified by their associated valuation
functions:
1. Multi-minded Bidders: in this setting each bidder is associated with a demand set of
alternative multisets (the multiple minds). Each bidders valuation function assigns a
(possibly distinct) positive value for every alternative in the demand set (and at least
as much for the value of every superset of the alternative) and zero elsewhere.
2. Submodular Bidders: in this setting the value of each bidder for a particular multiset
of items is given by a submodular valuation function.
For multi-minded bidders we design and analyze in Section 4 a truthful Fptas1 , that
fully optimizes the Social Welfare in polynomial time, while violating the supply constraints
on the goods by a factor at most (1 + ), for any fixed  > 0. The violation of the supply
constraints has a practical as well as a theoretical justification. On one hand it is conceivable
that, in certain environments, a slight augmentation of supply can be economically viable,
for the sake of better solutions (e.g., auctioneers with well supplied stocks can easily handle
occurrences of modest overselling). On the other hand, we note that a relaxation of the
supply constraints is necessary for obtaining an Fptas, as the problem is otherwise strongly
NP-hard, for m  2 goods (please see the related discussion in Section 4). This result
significantly improves upon an Fptas by Grandoni et al. (2014), which approximates the
Social Welfare and the supply constraints within factor2 (1+), only when bidders are singleparameter (i.e., associate the same positive value with each multiset from their demand set)
and do not overbid their demands. Technically, the Fptas of Grandoni et al. (2014) is based
on the design of monotone algorithms (Lehmann et al., 2002; Briest, Krysta, & Vocking,
2011) and it requires a no-overbidding assumption on the demands (cf. discussion therein).
In Section 5 we revisit the general technique introduced by Dobzinski and Nisan (2010),
for multi-unit auction Mechanism Design, and generalize it for the setting of multiple distinct goods, each in limited supply. We discuss how this generalization yields a truthful
Ptas immediately for multi-minded bidders, that does not violate the supply constraints
and approximates the Social Welfare within factor (1+), for any fixed  > 0. Subsequently,
we use the technique to design a truthful Ptas for bidders with submodular valuation functions, assuming that the values (bids) are accessed through value queries by the algorithm.
Prior to this result, no time-efficient deterministic truthful mechanism was known for submodular bidders, even when m  2.3 Although the technique of Dobzinski and Nisan
facilitated the development of a factor 2 approximation mechanism for bidders with general
valuation functions in the single-good multi-unit setting, its direct extension for the setting
of multiple distinct goods does not appear to work (for general valuation functions). We
1. Fully Polynomial Time Approximation Scheme.
2. In the context of Social Welfare maximization, by approximation within factor   1 (or, equivalently,
-approximation, for   1) we mean recovering at least a fraction 1 of the welfare of an optimum
allocation. We switch temporarily to using   1 in Section 5, for technical convenience.
3. Nisan (2014) devised an optimal polynomial time such auction for m = 1, i.e., a single good.

723

fiKrysta, Telelis, & Ventre

show, however, that an appropriate extension of a more dedicated treatment of this case
by Dobzinski and Nisan yields a constant (m + 1)-approximation (Section 6).
The assumption of a constant number m = O(1) of distinct goods is important, for
otherwise our problems become Combinatorial Auctions, thus, hard to approximate in

polynomial time within less than O( m) (Lehmann et al., 2002) for multi-minded bide
ders and within less than e1
for submodular bidders (Khot, Lipton, Markakis, & Mehta,
2008; Mirrokni, Schapira, & Vondrak, 2008). Moreover, recent results of Daniely, Schapira,
and Shahaf (2015) imply that, for unrestricted m, our techniques cannot yield truthful

polynomial-time mechanisms with approximation factors less than O(m) and O( m), respectively. Regarding the generalization of the Dobzinski-Nisan technique, existence of an
Fptas for multi-minded bidders and a single good is excluded, unless P = NP (Dobzinski
& Nisan, 2010). These lower bounds imply that our results are best possible. Finally, as
shown by Nisan and Segal (2006) and Dobzinski and Nisan (2010), regarding general valuation functions, no deterministic MiR algorithm achieves better than 2-approximation for
a single good  with communication complexity o(s), where s is the supply of this good.
Closing the gap between this lower bound and our upper bound of (m + 1) for a constant
number m of multiple distinct goods, remains an open problem.

2. Related Work
Mechanism Design for multi-unit auctions was initiated already by the celebrated work of
Vickrey (1961), where he extended his famous mechanism for the case of multiple units,
when bidders have symmetric submodular valuation functions (Lehmann et al., 2006). This
mechanism is however not computationally efficient with respect to the number of available
units, as we already discussed. It requires that bidders place a marginal bid per additional
unit they wish to receive and the allocation algorithm processes all these marginal bids. Very
recently, Nisan (2014) exhibited a polynomial-time truthful mechanism for this case. The
design of multi-unit mechanisms with polynomially bounded running time in log s, s denoting the number of units, was first considered by Mualem and Nisan (2008). In this work,
Mualem and Nisan designed and analyzed a truthful polynomial-time 2-approximation
mechanism for a multi-unit combinatorial setting, involving multiple distinct goods, each in
limited supply, and single-minded bidders. Subsequently, Archer, Papadimitriou, Talwar,
and Tardos (2003) improved upon this approximation ratio for a similar setting, but the
developed mechanism was based on randomized rounding and was truthful only in expectation. More recently, Briest et al. (2011) designed and analysed an Fptas, for single-minded
bidders in the multi-unit combinatorial setting.
Dobzinski and Nisan (2010) analyzed a general scheme for designing MiR polynomialtime truthful approximation mechanisms, for single-good multi-unit auctions. This resulted
in a Ptas for the case of multi-minded bidders, a 2-approximation for general valuation
functions that are accessed (by the allocation algorithm) through value queries, and a
4
3 -approximation for symmetric subadditive valuation functions. Moreover, the authors
applied their scheme to a class of piecewise linear (multi-unit) valuation functions over the
number of units of a single good, to obtain a truthful Ptas mechanism. A special case
of this class of valuation functions had been earlier studied by Kothari, Parkes, and Suri
(2005); the authors designed an Fptas mechanism that was, however, only approximately
724

fiMechanisms for Multi-unit Combinatorial Auctions

truthful. Dobzinski and Dughmi (2013) gave a randomized truthful in expectation Fptas
for multi-minded bidders. Relatively recently, Vocking (2012) gave a universally truthful
randomized Ptas for general valuation functions accessed by value queries (in contrast, all
of our mechanisms are deterministic). For the multi-unit combinatorial setting (i.e., with
more than one distinct goods) the known results concern mainly bidders that have demands
for a single unit from each good (Lehmann et al., 2002; Briest et al., 2011; Blumrosen &
Nisan, 2007). In contrast, we consider a constant number of goods, but multi-demand
bidders. Bartal et al. (2003) proved approximation and competitiveness results for truthful
multi-unit Combinatorial Auctions with multi-demand bidders, where the bidders demands
on numbers of units are upper and lower bounded. The derived approximation guarantees
depend on these bounds. Lavi and Swamy (2011) improved upon these approximation
guarantees, by devising randomized mechanisms that are truthful in expectation.
The study of a constant number of goods, each in arbitrary limited supply, was initiated
by Grandoni et al. (2014). The authors utilized methods from multi-objective optimization
(approximate Pareto curves and Langrangian relaxation) to design and analyze truthful
polynomial-time approximation schemes for a variety of settings. In particular, they devised truthful Fptases that approximate both the objective function (Social Welfare or
Cost) of multi-capacitated versions of problems within factor (1 + ), while violating the
capacity constraints by a factor (1 + ) (capacity here corresponds to limited supply of each
out of a few distinct goods). Problems considered by Grandoni et al. include multi-unit
auctions, minimum spanning tree, shortest path, maximum (perfect) matching and matroid
intersection; for a subclass of these problems a truthful Ptas is also analyzed, which does
not violate any of the capacity constraints.
Of particular interest to the practice of Combinatorial Auctions (also in the multi-unit
case, where each good is available in a limited supply of identical copies), is the efficient
and (near-)optimal resolution of the Winner Determination problem (Lehmann, Muller, &
Sandholm, 2010). Given as input a set of bids in a prespecified format (formally termed
language), for the items on sale, the Winner Determination problem prescribes the determination of a feasible allocation of the items to the bidders, so that the sum of their bids
corresponding to their received allocation is maximized. Thus, the Winner Determination
problem implicitly prescribes determination of winning bidders and their receiving allocation, so that the revenue collected by the corresponding bids is maximized. Notice that, in
comparison to our work, truthful report of the bidders valuation functions is not a concern
in this setting. A significant volume of research has concerned the study of approximation
algorithms and derivation of hardness results (see, e.g., Lehmann et al., 2010), as much as
the development of global optimization techniques (Sandholm, 2010). Kelly (2004) studies
Multi-unit Combinatorial Auctions with only a few distinct goods, for determining the allocation of computational resources. In particular, he devises an optimal algorithm for the
Winner Determination problem, in a low-dimensional setting as ours.
Finally let us mention that the work of Bikhchandani, de Vries, Schummer, and Vohra
(2011) investigates multi-unit Combinatorial Auction premises very similar to ours, without
a restriction on the number of distinct goods. Instead, the authors devise an ascending price
auction for selling subsets of goods that constitute bases of a matroid, or polymatroid, in case
of multi-unit demand by the bidders and limited supply for each distinct good. Their auction
is truthful and runs in polynomial or pseudopolynomial time, respectively. It accesses
725

fiKrysta, Telelis, & Ventre

the bidders combinatorial valuation functions through Demand Queries; the bidders are
presented with prices on the goods and announce the subset they are willing to pay for. In
comparison, all of our mechanisms use Value Queries, where the mechanism asks for the
value of each bidder for a particular set of items. Value queries are a weaker device in
that they can be simulated by (but cannot generally simulate) demand queries (Blumrosen
& Nisan, 2007).

3. Definitions
Let [m] = {1, . . . , m} be a set of m goods, where m is assumed to be a fixed constant. There
are s`  N units (copies) of good `  [m] available. A multiset of goods is denoted by a vector
x = (x(1), x(2), . . . , x(m)), where x(`) is the number of units of good `  [m], ` = 1, . . . , m.
The set of all multisets is denoted by U = m
`=1 {0, 1, . . . , s` }. Let [n] = {1, . . . , n} be the
set of n agents (prospective buyers/bidders). Every bidder i  [n] has a private valuation
function
vi : U 7 R+ ,
so that vi (x) for any x  U denotes the maximum monetary amount that i is willing to
pay for x  U, referred to as his value for x. The valuation functions are normalized, i.e.,
vi (0, . . . , 0) = 0 and assumed to be monotone non-decreasing: for any two multisets x  y
where  holds component-wise, we assume vi (x)  vi (y). That is, in auction theory
terms, we assume free disposal (i.e., enlarging the set or increasing the number of items in
an allocation never decreases the value incurred to any bidder).
A mechanism consists of an allocation method (algorithm), A, and a payment rule, p.
The allocation method A elicits bids b = ( b1 , b2 , . . . , bn ) from the bidders that, presumably, describe their valuation functions and outputs an allocation A(b) = (x1 , x2 , . . . , xn ),
where xi  U is the multiset of goods allocated to bidder i. For the purposes of our discussion in this section, we deliberately ignore the fact that the bidders valuation functions may
not have a succinct representation that will facilitate their efficient communication to the
allocation algorithm; recall that the bidders valuation functions are  generally  defined
over U = m
`=1 {0, 1, . . . , s` }. When they do not have a succinct representation indeed, the
allocation algorithms discussed in this paper access the bidders valuation functions iteratively, through polynomially many Value Queries; that is, the algorithm in each iteration
asks every bidder for a bid on a specific multiset of items.
The payment rule determines a vector p(b) = ( p1 (b), p2 (b), . . . , pn (b) ), where pi (b)
is the payment of bidder i. Every bidder i bids so as to maximize his quasi-linear utility,
defined as:
ui (b) = vi ( A(b) )  pi (b),
where, by an assumption of no externalities, i.e., that the value of any bidder for A(b)
depends only on his own individual allocation and not at all on the others, we obtain
vi ( A(b) ) = vi (xi ).
We study truthful mechanisms (A, p) wherein each bidder i maximizes his utility by
reporting his valuation function truthfully, i.e., by bidding bi = vi , independently of the
other bidders reports, bi = (b1 , . . . , bi1 , bi+1 , . . . , bn ):
726

fiMechanisms for Multi-unit Combinatorial Auctions

Definition 1 A mechanism (A, p) is truthful if, for every bidder i and bidding profile bi ,
it satisfies ui (vi , bi )  ui (vi0 , bi ), for every vi0 .
Under this definition, the profile b = v is a dominant strategy equilibrium. Our objective
is to design and analyze truthful mechanisms, (A, p) that render truthful reporting of the
bidders valuation a dominant strategy equilibrium, wherein, the Social Welfare of the
resulting allocation, SW ( A(b) ) = SW ( A(v) ) is (approximately) optimized. The social
welfare of an allocation, X = (x1 , x2 , . . . , xn ) is defined as:
SW (X) =

n
X

vi (xi ),

i=1

In the sequel we will use simply X, for an allocation output by A, without a specific reference
to b, since we analyze truthful mechanisms, that dictate b = v.
The only well understood general method for the design of truthful mechanisms is the
Vickrey-Clarke-Groves (VCG) auction mechanism (Vickrey, 1961; Clarke, 1971; Groves,
1973), a generalization of Vickreys Single-Item 2nd Price and Multi-unit Auctions (Vickrey,
1961). Deployment of the VCG auction, however, requires utilization of an allocation
algorithm, A, that outputs a welfare-maximizing allocation for the underlying setting; it
rarely constitutes a computationally efficient alternative for combinatorial settings, as the
underlying optimization problem is NP-hard.
As the problems that we consider in our work are indeed NP-hard, our mechanisms use
Maximal-in-Range (MiR) allocation algorithms (Nisan & Ronen, 2007), that maximize the
social welfare only approximately.
Definition 2 (Nisan & Ronen, 2007) An algorithm choosing its output from the set A of
all possible allocations is MiR, if it fully optimizes the Social Welfare over a subset R  A
of allocations.
Note that the subset R, also called a range, is defined independently from the bidders declarations. Nisan and Ronen (2007) identified MiR allocation algorithms as the sole device
that, along with VCG payments, yields truthful mechanisms for Combinatorial Auctions.
In particular, given any MiR allocation algorithm, A, using this algorithm for computing
the output allocation and for computing payments in the manner of the VCG payments
scheme, suffices to obtain a truthful mechanism. In particular, given any such MiR allocation algorithm, the payment for each bidder i is computed as follows:
pi (b) =

X

vi0 ( A(bi ) ) 

i0 6=i

X

vi0 ( A(b) )

i0 6=i

Notice how this payment scheme coincides with the VCG payment scheme, once we use the
optimal allocation algorithm in place of A. The starting point for the work of Nisan and
Ronen (2007) is the pair of observations that: (i) the VCG mechanism itself requires full
optimization of the social welfare of the underlying setting, which is an NP-hard problem in
most interesting settings (ii) VCG-based mechanisms (wherein a polynomial-time allocation
algorithm outputs welfare-suboptimal allocations) are not necessarily truthful.
727

fiKrysta, Telelis, & Ventre

4. Multi-minded Bidders
In this section we consider multi-minded bidders; every such bidder i  [n] is associated
with a collection of multisets Di  U, referred to as his demand set. We assume that each
i  [n] values each multiset d = (d(1), . . . , d(m))  Di by an amount vi (d) > 0. For every
other multiset e  U \ Di we define:

fi
n
o
 max vi (d) fifi d  e
if such d  Di exists
dDi
vi (e) =

0
otherwise.
Naturally, vi (0) = 0, where 0 = (0, . . . , 0). Consequently, in this setting, the valuation
function of a bidder i can be compactly expressed as the collection (vi (d), d)dDi . As in
related literature, we assume therefore that an algorithm expects input bids of this form,
rather than (an oracle representing) the entire valuation function. We say that a bidder
i is a winner of the auction, if he is assigned exactly one of his alternatives from Di (or
a superset of one of these alternatives); this corresponds to the XOR-bidding language in
Combinatorial Auctions (Lehmann et al., 2006).
We design a Fptas, that maximizes the Social Welfare and may violate the supply
constraints on goods by a factor at most (1 + ), for any fixed  > 0. This will be the
allocation algorithm of our mechanism. After analyzing its performance with respect to
the welfare optimality of the allocation that it outputs and the bounded violation of the
supply constraints, we will prove that it is a MiR algorithm, thus can be paired with VCG
payments, to yield a truthful mechanism. At a high level, the algorithm is reminiscent of
the one that yields the Fptas for the well-known one-dimensional knapsack problem (see
e.g., Vazirani, 2003, ch. 8). It proceeds as follows. For any chosen fixed  > 0, it first
discards any alternatives of bidders from their demand sets, that cannot be satisfied, given
the supply constraints. These alternatives are multisets that already exceed the supply
of at least one good. Subsequently, the quantities of goods in the multisets remaining
within the bidders demand sets are appropriately rounded; the supply is adjusted as well.
We thus obtain a rounded instance. Then, we search for a welfare maximizing allocation
of the rounded instance, by usage of dynamic programming. This allocation is shown to
be optimal for the initial instance, as well, and feasible, modulo a violation of the initial
supply constraints within a factor of at most (1 + ). In light of turning this algorithm into
a truthful mechanism, we use notation of actual valuation functions in its definition and
analysis below.
Fix any constant  > 0. First, for any i  [n], remove all the alternatives d  Di such
that d(`) > s` for any ` = 1, . . . , m (if all alternatives of some bidder i are removed, remove
i). Henceforth, we use the same notation, U, [n], Di , etc., for the remaining alternatives
and bidders. The demands of the alternatives d  Di of each i  [n] are rounded as follows.
For every i  [n] and for every d  Di , we produce a multiset d0 = (d0 (1), . . . , d0 (m)) so
that, for each distinct good `  [m], we have d0 (`) = b nd(`)
s` c. Then we adapt the supply of
n
0
each good appropriately, to s` = d  e. Given this rounded version of the problem instance,
we will use dynamic programming to produce an allocation for it, which will immediately
translate into an allocation for the original problem instance, that is welfare-optimal and
violates the (original) supply constraints by a factor at most (1 + ). For the purposes of
the description that follows, we denote by d0 the rounded version of a demand d.
728

fiMechanisms for Multi-unit Combinatorial Auctions

We define the dynamic programming table V(i, Y1 , . . . Ym ) for i = 1, . . . , n and Y` 
{0, 1, 2, . . . , s0` } for any `  [m]. The cell V(i, Y1 , . . . , Ym ) stores the maximum welfare of an
P
nx (`)
allocation X, i.e., j vj (xj ), whose rounded version X0 = (b sj` c)j,` uses only multisets
that are in the demand sets of the bidders
P in {1, 2, . . . , i}, and has total demand w.r.t. good
` = 1, . . . , m which is precisely Y` , i.e., i x0i (`) = Y` .
To compute the entries of table V, we observe that, the problem V(1, Y1 , . . . Ym ) for
any collection of Y` s such that: (Y1 , . . . , Ym )  {0, 1, . . . , d n e}m , is easy to solve. For
each such entry V(1, Y1 , . . . Ym ) we check if bidder 1 has an alternative d  D1 such that
d0 (`) = Y` , for all `  [m]. If yes, let d be an alternative of maximum valuation; we
assign V(1, Y1 , . . . , Ym ) = v1 (d) and build an auxiliary table A[1, Y1 , . . . Ym ] which we set in
this case to {(1, d)}. Otherwise, if bidder 1 does not have any such alternative, we assign
V(1, Y1 , . . . Ym ) = 0 and A[1, Y1 , . . . Ym ] = {(1, 0)}. To define V(i + 1, Y1 , . . . , Ym ), consider
bidder i + 1 and his alternatives d = (d(1), . . . , d(m))  Di+1 ; let now
i+1

n

fi
o
fi
0
0
= max vi+1 (d) + V i, Y1  d (1), ..., Ym  d (m) fi d0  Y
dDi+1

(1)

where, for all i, we define V(i, Y1 , . . . Ym ) =  and, accordingly, A[i, Y1 , . . . Ym ] = { (i, 0) },
if there is no demand d  Di satisfying d0  Y. Consequently:
n
o
V(i + 1, Y1 , . . . , Ym ) = max i+1 , V(i, Y1 , . . . Ym ) .
Accordingly, if i+1  V(i, Y1 , . . . Ym ), we set:
A[i + 1, Y1 , . . . , Ym ] = A[i, Y1 , . . . , Ym ]  {(i + 1, 0)},
otherwise:
A[i + 1, Y1 , . . . , Ym ] = A[i, Y1  d0 (1), . . . , Ym  d0 (m)]  {(i + 1, d)},
where d is an alternative in Di+1 maximizing (1). Finally, we inspect all the solutions
from entries V(n, Y1 , . . . , Ym ) for all vectors (Y1 , . . . , Ym )  {0, 1, . . . , d n e}m , take one which
maximizes the Social Welfare and output the solution given by the corresponding entry of
the A table.
The size of table V is n(d n e+1)m and we need time roughly O(maxi |Di |+m) to compute
one entry of the table, so the overall time of the algorithm leads to an Fptas. The optimality
with respect to the sum of the bidders values is easy to verify. Let X = (x1 , x2 , . . . , xn )
denote any feasible allocation to the original problem instance. For
every good, ` = 1, . . . , m,
P j xi (`)n k  n 
P
P xi (`)n
n
we have: i xi (`)  s` , or, equivalently, i s`   , thus i s`   = s0` . That
is, X is also feasible for the rounded problem instance. Because the dynamic programming
algorithm will inspect all feasible solutions to the rounded problem instance and output the
one with the largest welfare for it, an optimum solution to the original problem instance
will be inspected as well.
We argue that the supply constraints s` , ` = 1, . . . , m, are violated by at most a factor
of 1 + 2. Fix any good `  {1, . . . , m} and let X be the output allocation, with respect
729

fiKrysta, Telelis, & Ventre

to the original problem instance. Because X was chosen by the algorithm by means of dynamic programming search over the rounded
problem instance, it is feasible for the rounded
P j nxi (`) k
 s0` = d n e and, since:
problem instance. Thus, we have:
i
s`
X n  xi (`)
i

  s`



i


we obtain:

P

i xi (`)

X  n  xi (`) 
lnm


  s`
+n

+ |{i|xi  Di }|

n
+ 1 + n,


 (1 + 2)s` .

Example Let us illustrate the algorithms functionality through a very simple example.
Consider n = 3 bidders and m = 2 distinct goods. Let the supplies of goods be s1 = s2 = 4.
The bidders values and demand sets are defined as follows:
Bidder
Valuation Function
Demand Set
1
v1 ( (3, 4) ) = 1 v1 ( (4, 3) ) = 2 D1 = { (3, 4), (4, 3) }
2
v2 ( (3, 3) ) = 3
D2 = { (3, 3) }
3
v3 ( (2, 3) ) = 4 v3 ( (3, 2) ) = 5 D3 = { (2, 3), (3, 2) }
In this example it is evident that all feasible allocations involve assignment of a demand to
a single bidder, given that the supplies of both goods are 4. Thus, the optimal allocation
X is ( 0, 0, (3, 2) ). Consider the rounded problem for  = 2. The rounded supply for
each of the two goods is dn/e = d4/2e = 2. The rounded demands of the bidders are
as follows:
Bidder
1
2
3
Demands (3, 4) (4, 3) (3, 3) (2, 3) (3, 2)
Rounded Demands (1, 1) (1, 1) (1, 1) (0, 1) (1, 0)
Observe that both demands of bidder 1 are rounded to (1, 1). This does not pose any
problem, as the algorithm processes the original demands, and only uses their rounded
versions to validate feasibility of the allocation it builds with respect to the rounded supply.
In this example, because the rounded supply of each good is 2, the algorithm will output
the allocation X = ( 0, (3, 3), (3, 2) ), which has welfare 8 and is superoptimal for the
inital instance. Although the rounded versions of the allocated demands do not violate the
rounded supplies of the goods (equal to 2), they do violate the original supplies of 4, by less
than a factor of 1 +  = 3 (particularly in this example, by no more than a factor of 1.5).
Note that the algorithm is exact, in that it grants every bidder a multiset from his
demand set (or none). Assuming m = O(1) is essential for the result, even in presence of
the supply constraints relaxation. A proof of this claim is given at the end of this section.
The truthfulness of the Fptas, denoted by A below, follows from the fact that it optimizes
over a fixed range of solutions.
Theorem 1 There exists a truthful Fptas for the multi-unit combinatorial auction problem
with a fixed number of goods, when bidders have private multi-minded valuation functions,
defined, for each bidder, over a private collection of multisets of goods. For a fixed  > 0, the
Fptas fully optimizes the social welfare, while violating the supplies of goods within factor
at most (1 + ).
730

fiMechanisms for Multi-unit Combinatorial Auctions

Proof. To prove the theorem we show that A is MiR with range R = {X|b : A(b) =
X}. That is, for any allocation X  R and bid vector
 b, we show SW (A(b), b) 
SW (X, b), where for a bid vector b = (bi (d), d)dDi
and an allocation X  R,
iN

we let SW (X, b) be the Social
P Welfare of allocation X, evaluated according to the bid
vector b, i.e., SW (X, b) = i bi (X).


Fix allocation X and bid vector b = (bi (d), d)dDi
; by definition of the range,
iN


such that A(b) = X. Recall that
there exists a bid vector b, with b = (bi (d), d)dDi
iN

xi (`), for bidder i and ` = 1, . . . , m, is the variable indicating how many copies of item
`, the allocation X grants to bidder i. Note that because X = A(b) and A grants only
demanded alternatives (by its exactness), there exists a demand di  Di  {0} such that,
for ` = 1, . . . , m, xi (`)j= di (`).
Since X is output of A, by definition of A we have that for
P ndi (`) k  n 
any ` = 1, . . . , m, i s`   .
Now let C be the set of bidders such that b = (bC , bC ) and b = (bC , bC ), that is,
b and b only differ in the bids of bidders in the set C. For all bidders i  C we assume
that their true valuation function is bi . Any such bidder i evaluates the alternative xi = di
granted to him by allocation X as some ei  Di  {0}. That is, vi (di ) = vi (ei ). Assume,
for the sake of contradiction, that SW (X, b) > SW (A(b), b), i.e.:
X

bi (ei ) +

X

bj (X) >

j6C

iC

X

bi (A(b)) +

X

bj (A(b)).

(2)

j6C

iC

Since di (`)  ei (`) for ` = 1, . . . , m and i  C, then by setting ei = di for i 6 C, we obtain:
X  n  ei (`) 
i

  s`



X  n  di (`) 
i

  s`



lnm


,

for ` = 1, . . . , m. Then the solution which grants to bidder i the alternative ei  Di  {}
is considered by algorithm A on input b. This solution has Social Welfare SW (X, b) and
therefore (2) is in contradiction with the definition of A.
2
A related result of Briest et al. (2011) is a truthful Fptas for a single good in limited
(not violated) supply; this cannot be generalized for our setting of more than one supply
constraints.
4.1 A Note on Hardness
Note that this problem is strongly NP-hard, when we do not allow to violate supply constraints and m  2 (Chekuri & Khanna, 2005). It is well known that if a problem is strongly
NP-hard, there does not exist any FPTAS for this problem, unless P=NP (see, e.g., Vazirani, 2003). Also the assumption that m is a fixed constant is necessary. Otherwise the
problem is equivalent to multi-unit Combinatorial Auctions and is hard to approximate in
polynomial time within m1/2 , for any  > 0 (Lehmann et al., 2002). This claim is true,
even if we allow for solutions to violate the supplies. In particular:
731

fiKrysta, Telelis, & Ventre

Proposition 1 In a multi-unit combinatorial auction with m distinct goods, it is NPhard to approximate the Social Welfare within factor better than m1/2 , even if we allow a
multiplicative (1 + )-relaxation of the supply constraints, for any  < 1.
Proof. The argument is as follows: it is known that it is hard to approximate the maximum
independent set problem in a graph G = (V, E) within a factor m1/2 for any  > 0, where
|E| = m (Hastad, 1996). By using a reduction of Lehmann et al. (2002), we reduce this
problem to our problem by having the set of goods [m] = E and the set of single-minded
bidders V ; each bidders u  V set contains all edges adjacent to u in the graph G and
each bidders valuation for his set is 1. Now if we allow to violate the supply of 1 of each
good by a factor of 1 + , where  < 1, then a feasible solution to the relaxed problem is
an independent set in graph G. Thus the relaxed problem is equivalent to the maximum
independent set problem in G.
2
4.2 Multi-dimensional Knapsack
We discuss an application of our Fptas, in relation to the Multi-dimensional Knapsack
Problem (MdKP) (Chekuri & Khanna, 2005). Suppose we are given a MdKP instance,
with a constant number of distinct compartments, m = O(1), and each compartment,
` = 1, 2, . . . , m, has capacity s` . The problem asks to fit in the knapsack a subset out of
a universe, U, of n given m-dimensional objects, so that the sum of the collected objects
sizes in each dimension, `, does not exceed s` and the total value of all collected objects
is maximized. Each object, i = 1, . . . , n of the MdKP instance can be represented by a
vector di , which represents its m dimensions, (di (1), . . . , di (m)) and its value, vi , so that
hvi , di i  ( (R+  {0})  U ). Then, each object corresponds to a single bidder i, from the
setting that we analyzed in Section 4, with valuation function vi (d)  vi , for every d  di ,
vi (d) = 0, for every d such that d(`) < di (`), for some ` = 1, . . . , m. Notice that the bidder
is single-parameter, in that his valuation function takes on a single non-zero value for every
d  di and his demand set, Di , is singleton, i.e., it contains a single multiset, di . Thus, the
MdKP corresponds to a single-parameter version of the problem we treated above.
We can apply our Fptas to the MdKP, because the algorithm is exact, as mentioned
previously, in that it allocates every bidder (read as: fits in the knapsack) either an exact
alternative from his demand set, Di , or none. It is worth mentioning that for this singleparameter version, our Fptas from Section 4 can be shown to be monotone (Lehmann et al.,
2002; Briest et al., 2011), when one carefully fixes a tie-breaking rule. A monotone allocation
algorithm ensures that: if a (single-parameter) bidder i is allocated his single demand di
when he declares truthfully hvi , di i, he also receives his (declared) demand d0i , when he
declares hvi0 , d0i i, with vi0  vi and d0i  di (i.e., intuitively, asks for less items while offering
more money). An exact and monotone allocation algorithm can yield a truthful mechanism
for this single-parameter setting, with the incorporation of critical value payments  see the
work of Lehmann et al. (2002) for details.
Let us note that, we can generalize the MdKP further, in the following manner. Instead
of having only packing constraints (of the form ) on the dimensions of the knapsack, we
can handle any mix of packing and covering constraints (i.e., of any of the forms {, }),
as long as there is only a constant number of dimensions, m = O(1), and one covering
or packing constraint per dimension. For such a generalized scenario we can follow an
732

fiMechanisms for Multi-unit Combinatorial Auctions

approach similar to our approach in Section 4 and obtain a truthful Fptas which fully
optimizes the total value of fitted items and violates each of the constraints by a factor at
most (1 + ). Violation of the constraints is needed for the reason mentioned above, in our
note on computational hardness, in the end of Section 4.

5. The Generalized Dobzinski-Nisan Method
We discuss here a direct generalization of a method designed by Dobzinski and Nisan (2010),
for truthful single-good multi-unit auction mechanisms. We will use the methods generalization for multiple goods in the next subsection, to obtain a truthful Ptas for bidders
with submodular valuation functions (over multisets). Let A be a polynomial-time MiR
allocation algorithm for t = O(1) bidders and s` units from each good ` = 1, . . . , m, with
time complexity TA (t, s), s = (s1 , . . . , sm ), and approximation ratio   1. Then, algorithm
A can be used as a routine within the procedure of Figure 1, to obtain a polynomial-time
m
MiR algorithm for n bidders, with approximation ratio (  t+1
).
Given t = O(1), the procedure executes algorithm A on every subset of at most t bidders
and for every combination of certain pre-specified quantities of the goods. For each output
allocation it considers the rest of the bidders and allocates optimally to them an integral
number of (multi-unit) bundles from each good. The main result shown by Dobzinski and
Nisan (2010) for a single good can be also proved for m goods:
Theorem 2 Let A be a Maximal-in-Range algorithm with complexity TA (t, (s1 , . . . , sm )),
for t bidders and at most s` units from each good ` = 1, . . . , m. The Dobzinski-Nisan Method
is MiR and runs in time polynomial in log s1 , . . . , log sm , n, TA (t, (s1 , . . . , sm )), for every
m
t = O(1). Moreover, it outputs an allocation with value at least a fraction (  t+1
) of the
optimum Social Welfare.
The proof is a direct extension of the proof given by Dobzinski and Nisan (2010) for a single
good. Consider the MiR algorithm A, to be used within the Dobzinski-Nisan method; it
executes in polynomial time for t = O(1) bidders and m = O(1) distinct goods, each in
limited supply s` , `  [m]. Let RA denote the range of this algorithm. It can be verified
that the method outputs allocations that are (R, t, 1 , . . . , m )-round, given the following
definition for such round allocations (Dobzinski & Nisan, 2010):
Definition 3 For some t = O(1), an allocation is (R, t, 1 , . . . , m )-round if:
 R is a set of allocations and, in each X  R, at most t bidders are allocated nonempty bundles. The bidders are allocated together up to s`  ` units from each good
` = 1, . . . , m.
 There exists a set T of |T |  t bidders, such that they are all allocated according to
some allocation in R.
 `
	
 Each P
bidder i  [n] \ T receives an exact
multiple of max b 2n
units from good `
2 c, 1
	
`
and:
x
(`)

n

max
b
c,
1
,
for
`
=
1,
.
.
.
,
m
i[n]\T i
2n2

733

fiKrysta, Telelis, & Ventre

1. for ` = 1, . . . , m do:
1
(a) define u` := (1 + 2n
)


 
blogu s` c
2
`
(b) define L` := 0, 1, bu` c, bu` c, . . . , u`
, s`

2. for every subset T  [n] of bidders, |T |  t, do:


1. for every (1 , . . . , m )  m
L
`=1 ` do:
1 Run A with s`  ` units from each good `  [m] and bidders in T .
2 Split the remaining ` units (if ` > 0) fromeach good
	 `  [m]
`
c,
1
units.
into  2n2 bundles (per good), each of max b 2n
2
3 Find the optimal allocation of the equi-sized bundles among bidders [n] \ T .
3. Return the best allocation found.
Figure 1: The Dobzinski-Nisan Method for multiple goods.
In this definition, R corresponds to the range of A, parameterized by the subset of
bidders T , i.e., R = RA (T ), on which it is executed. Then, for some t = O(1), the range of
the method is the subset of all allocations that are (RA (T ), , 1 , . . . , m )-round, so that:
(1 , . . . , m )  (m
`=1 L` ), where L` is defined as in step 1.(b) of the method in Figure 1, and
T  [n], with  = |T |  t. Formally, the methods range RDN is the subset of allocations:
o
n fi
fi
L
)
and

=
|T
|

t
RDN = X fi X is (RA (T ), , 1 , . . . , m )-round, for (` )`  (m
`=1 `
Example  Part (I) Before continuing to analyze the methods range, let us exemplify
the concept of (R, t, 1 , . . . , m )-round allocations. We will consider a small instance of
multi-minded bidders, similar to the considered in the previous section. As we will argue
later, the Dobzinski-Nisan method can yield a truthful Ptas (that respects the supply
constraints on goods), for multi-minded bidders. Assume m = 2 distinct goods, and n = 5
bidders. We assume supplies s1 = 200 = s2 for the goods. The bidders demands are as
follows:
Bidder
Demand Set
1
D1 = { (75, 51), (49, 73) }
2
D2 = { (51, 27), (25, 49) }
3
D3 = { (48, 1) }
4
D4 = { (1, 1) }
D5 = { (1, 48) }
5
Let us exhibit a round allocation for this instance, according to Definition 3. For t = 2
and 1 = 2 = 100, consider first the allocation:
X = ( (75, 51), (25, 49), (48, 2), (2, 2), 0 ),
734

fiMechanisms for Multi-unit Combinatorial Auctions

where x1 = (75, 51), x2 = (25, 49), x3 = (48, 2), x4 = (2, 2), x5 = 0. This allocation is
(R, 2, 100, 100)-round, according to Definition 3, where R denotes the subset of allocations
with at most 2 bidders receiving non-empty multisets and the remaining ones receiving appropriate multi-unit bundles per good. Indeed, we can set T = {1, 2} (for the corresponding
subset of at most 2 bidders); each of bidders 1 and 2 obtains one of his demands. The total
number of units allocated to these two bidders per good is exactly 100 = s`  ` . For the
remaining 100 = ` units from each good, we make 50 bundles of ` /(2n2 ) = 2 units per
bundle. Bidder 3 receives 24 such 2-units bundles from good 1 and one 2-units bundle from
good 2. Bidder 4 obtains one 2-units bundle from each good. Finally, bidder 5 receives an
empty allocation. Notice that x3 and x4 essentially satisfy the unique demands (48, 1) and
(1, 1) of bidders 3 and 4 respectively.
Another (R, 2, 100, 100)-round allocation (according to Definition 3) is:
X0 = ( (75, 51), (52, 28), (48, 2), 0, 0 ),
where the required subset T of bidders is T = {1}. Bidder 1 obtains one of his demands;
bidders 2 and 3 receive 2-units bundles from each good; and bidders 4 and 5 receive empty
allocations (i.e., zero 2-units bundles from each good). Notice that X0 is also (R, 1, 100, 100)round (i.e., when we set t = 1). Now let us choose algorithm A for the Dobzinski-Nisan
method, to be an exhaustive search procedure, that optimizes the welfare (thus, has approximation ratio  = 1). Notice that the range RA (T ) of A, for the chosen values of
1 , 2 , trivially contains the allocation that bidders 1 and 2 receive in X (when T = {1, 2})
and the allocation of bidder 1 under X0 (when T = {1, 2} or T = {1}); this is because A
optimizes over all feasible allocations up to supplies 200  1 = 100 and 200  2 = 100 for
each of the two choices of T . Thus, the allocations X and X0 also belong in the range RDN ,
as defined above.
We show that optimization over RDN approximates the socially optimal allocation within
m
factor (  t+1
).
Lemma 1 Let X = (x1 , . . . , xn ) be a socially optimal allocation. There exists an allocation
m
X  RDN with SW (X)  (  t+1
)  SW (X ).
Proof. In the proof we make use of notation L` and u` , as defined in Figure 1. Without
loss of generality (because of monotonicity of valuation functions), assume that all units of
all goods are allocated in X and that v1 (x1 )  v2 (x2 )    P
 vn (xn ). For every good
` = 1, . . . , m choose the largest value `  L` so that s`  `  ti=1 xi (`). When executed
on the subset of bidders T = {1, . . . , t} with s` P
` units from good
P ` = 1, . . . , m, algorithm
A outputs an allocation (x1 , . . . , xt ) such that ti=1 vi (xi )   ti=1 vi (xi ).
Now consider for each good ` = 1, . . . , m a bidder jP
`  {t + 1, . . . , n} with the maximum

number of units in X from this good. Define r` = ni=t+1 xi (`). Then xj` (`)  rn` . By
definition of r` and ` for each good `, we have r`  ` . Also, because ` was chosen
Pt to have
2
the largest possible value in L` = { 0, 1, bu` c, bu` c, . . . , s` } satisfying s`  ` + i=1 xi (`),
r`
. For every bidder i  t + 1 with i 6= j` for ` = 1, . . . , m, we
it must be `  ur``  r`  2n
 `
	
round up his allocation with respect to good ` to a multiple of max b 2n
2 c, 1 . The extra
units for each good ` we take from bidders j` who may not obtain any unit of the good.
735

fiKrysta, Telelis, & Ventre

`
`
Observe that we may need to add at most n  2n
2  2n extra units from each good `, that
`
r`
we take from bidder j` , who has at least n  n units.
Thus, for all bidders except for j` , ` = 1, . . . , m we increased the units of P
goods they
t
1

obtain. Because j`  t + 1 and v1 (x1 )      vn (xn ), we have vj` (xj` )  t+1
i=1 vi (xi )
and vi (xi )  vi (xi ) for i 6= j` , ` = 1, . . . m. Then:

SW (X) =

X

vi (xi )  

i



t
X

=

X

X
t
i=1

vi (xi )

X

vi (xi )

it+1

vi (xi ) 

it+1

m

t+1

vi (xi ) +

i=1

vi (xi ) +

i=1



t
X

m
X

vi (xj` )

`=1

+

X

vi (xi )




it+1

m

t+1



SW (X )
2

which concludes the proof.
The lemma completes the proof of Theorem 2.

Example  Part (II) We revisit the example discussed right before the statement and
proof of Lemma 1, in order to exemplify the approximation implied by the Lemma. To
this end, we assign values to the bidders demands as described in the following table,
where v > 0 is a very small positive number and V >> v is a very large one. As before,
s1 = s2 = 200.
Bidder
Valuation Function
1
v1 ( (75, 51) ) = v v1 ( (49, 73) ) = V
2
v2 ( (51, 27) ) = V v2 ( (25, 49) ) = v
3
v3 ( (48, 1) ) = V
4
v4 ( (1, 1) ) = v
5
v5 ( (1, 48) ) = V

D1
D2
D3
D4
D5

=
=
=
=
=

Demand Set
{ (75, 51), (49, 73) }
{ (51, 27), (25, 49) }
{ (48, 1) }
{ (1, 1) }
{ (1, 48) }

The following socially optimal allocation X for this instance has welfare 4V + v:
X = ( (49, 73), (51, 27), (48, 1), (1, 1), (1, 48) )
By choosing t = 2 and T = {1, 2}, we can exhibit the welfare-approximate allocation
implied by Lemma 1, as follows. The maximum value possible for each of 1 and 2
satisfying s`  `  x1 (`) + x2 (`) is 100 = 1 = 2 . From the remaining bidders, bidder
3 has the maximum number of units from good 1 in X and bidder 5 has the maximum
number of units from good 2 in X . Thus, we have j1 = 3 and j2 = 5. Then, we round up
the allocations of bidders 3 and 4 w.r.t. good 2, to one 2-units bundle (for each of them),
by taking two units from bidder j2 = 5. Accordingly, we round up the allocations of bidders
4 and 5 w.r.t. good 1, by taking two units from bidder j1 = 3. The resulting allocation is:
X = ( (49, 73), (51, 27), (46, 2), (2, 2), (2, 46) )
and has welfare 2V + v, which approaches half of the optimal welfare (as v becomes vanishingly small). Lemma 1 for this example guarantees at least 1/3 of the optimal welfare, if
736

fiMechanisms for Multi-unit Combinatorial Auctions

the algorithm A used within the Dobzinski-Nisan method is a welfare-optimizing exhaustive
search procedure. On the other hand notice that, for this particular example and t = 2,
1 = 2 = 100, the allocation Y = ( (49, 73), (51, 27), (48, 2), 0, (2, 48) ) has almost optimal welfare, 4V , and is round according to Definition 3. Thus, the Dobzinski-Nisan
method will examine Y and it will return an allocation at least as good.
Let us explain how to find an optimal allocation of multi-unit bundles of goods (i.e.,
bundles of identical units) to bidders in [n] \ T , in step 2.1.3 of the algorithm (Figure 1).
We use dynamic programming. By re-indexing the bidders appropriately, assume that
T = {n  t + 1, . . . ,n}, thus [n]\ T = {1, . . . , n  t}. For every i = 1, . . . , n  t and for every
2
q = (q1 , . . . , qm )  m
i=1 [2n ] , define V(i, q) = V(i, (q1 , . . . , qm )) to be the maximum value
of welfare that can be obtained by allocating at most q` equi-sized bundles (of units) from
each good ` = 1, . . . , m to bidders 1, . . . , i. Each entry V(i, q) of the dynamic programming
table can be computed using:


0
0
0
V(i, q) = max
v
(q

b
,
.
.
.
,
q

b
)
+
V(i

1,
q

q
)
,
i
1
m
1
m
0
q q

where q0  q is taken component-wise; i.e., maximization occurs over all vectors q0 such
that q 0 (`)  q(`) for each ` = 1, . . . , m.
5.1 Simple Application: Multi-minded Bidders
The generalized Dobzinski-Nisan method for multiple distinct goods can be applied immediately in the setting of multi-minded bidders, to yield a Ptas that respects fully the supply
constraints of the goods. For m = O(1) goods and for any constant number of t bidders the
optimum assignment can be found exhaustively in polynomial time in log s` , ` = 1, . . . , s,
and m. In particular, if every bidders demand sets contains at most k demands, there are
exactly O(k t ) cases to be examined exhaustively, so that the optimum is found. Plugging
this algorithm in the procedure of Figure 1, yields a Ptas that, complementarily to the developments of the previous section, approximates the optimum Social Welfare within factor
(1 + ) and respects the supply constraints.
5.2 Submodular Valuation Functions
We consider submodular valuation functions over multisets in U, as defined by Kapralov,
Post, and Vondrak (2013):
Definition 4 For any ` = 1, . . . , m let e` be the unary vector with e` (`) = 1 and e` (j) = 0,
for j 6= `. Let x and y denote two multisets from U, so that x  y, where  holds
component-wise. Then, a non-decreasing function v : U 7 R+ is submodular if v(x + e` ) 
v(x)  v(y + e` )  v(y).
We assume that these valuation functions, being exponentially large to describe, are
accessed by the algorithm through value queries; i.e., that the algorithm asks the bidders
for their value, for each particular multiset that it needs to process.
We will design the MiR approximation algorithm A, needed by the method. The range
we consider for this setting is an extension of the one considered by Dobzinski and Nisan
737

fiKrysta, Telelis, & Ventre

(2010). For any  > 0, define  = 1 + ; we will be assigning to bidders multi-unit bundles
of each good `  [m], that have cardinality equal to an integral power of . For every good
`  [m], one of the n bidders (possibly a different bidder per good) will always obtain the
remaining units of the specific good. We show that optimization over this range provides a
good approximation of the unrestricted optimum Social Welfare; also, optimizing over this
range yields a Fptas for a constant number n of bidders. This, used within the generalized
Dobzinksi-Nisan method will yield a Ptas for any number of bidders.
Lemma

m 2 An optimum assignment within the defined range recovers at least a factor
2
of the socially optimal welfare.
2+2
Proof. Let X = (x1 , . . . , xn ) denote the welfare maximizing assignment. We will round
iteratively  for a particular good `  [m] in each iteration  the assignment of units to each
bidder in X , to an integral power of . Let X[`] be the assignment after rounding with
respect to the `-th good. The final assignment X  X[m] will approximate the welfare of
X[0]  X .
In the beginning of `-th iteration we process the assignment X[`1] , by rounding the
[`1]
[`1]
assignment of multi-unit bundles of good `. Assume w.l.o.g. that x1 (`)  x2 (`) 
[`1]
    xn (`). Also w.l.o.g., we assume that every bidder except for bidder 1 receives an
integral power of  units of good `; bidder 1 receives the remaining units. Let the set of
bidders be partitioned as [n] = O  E where O contains the odd indices of bidders and E
the even ones. We will consider two cases:
X  [`1]  X  [`1] 
X  [`1]  X  [`1] 
v i xi

vi x i
and
v i xi
<
vi xi
.
(3)
iO

iE

iO

iE
[`1]

For the first case, for every i  O \ {1} we will round xi
(`) up to the closest integral
[`1]
power of , while obtaining the extra units to do so by rounding xi1 (`), i  1  E, down
[`]

[`1]

to the nearest appropriately chosen integral power of . We obtain xi (`)    xi
[`1]

[`1]

[`1]

xi1 (`) = xi1 (`)  (  1)xi
[`1]

[`1]

(`) and:

[`1]

(`)  xi1 (`)  (  1)xi1 (`)

[`1]

thus, xi1 (`)  (2  )xi1 (`). To ensure that for bidder i  1 we obtain an integral power
[`1]

[`]

[`1]

of , we may need to divide xi1 (`) at most by , thus: xi1 (`)  1 xi1 (`) =
The welfare of the emerging assignment X[`] is:

 X   X   X  
[`]
[`]
[`]
SW X[`] =
vi xi =
v i xi +
vi xi
iO

i[n]



X



[`1]

vi x i



iE

2   X  [`] 
+
v i xi

iE

iO


 X 

2
[`1]
=
vi
+
SW X[`1] 
v i xi

iO
iO


2  2 X  [`1]  2  
v i xi
+
SW X[`1]
=


X



[`1]
xi



iO

738

!

2 [`1]
 xi1 (`).

fiMechanisms for Multi-unit Combinatorial Auctions




 2




1
1
SW X[`1] +
SW X[`1] =
SW X[`1]


1+
[`]

[`1]

The second line follows by submodularity; for any `  [m], we have xi1 (`)  2
 xi1 (`),




[`]
[`1]
2
so vi1 xi1   vi xi1 . For the last inequality, recall that we are examining the
P
[`1]
left-hand side case of (3), thus, we use the that:
)  12 SW (X[`1] ).
iO vi (xi



P
P
[`1]
[`1]
Consider now the second case in (3), where iO vi xi
< iE vi xi
. For
[`1]

i  E \ {2} we round up xi
(`) to the closest integral power of ; the extra units for
[`1]
this we will obtain from i  1  O, by rounding xi1 (`) down to an appropriately chosen
[`1]

closest integral power of . x2 (`) will be rounded down to closest integral power of 
[`1]
[`1]
[`]
(contrary to the rest of xi
(`), i  E), i.e., x2 (`)  1 x2 (`). For i  E \ {2} it will be
[`]

[`1]

xi (`)    xi

(`) and then we take:
[`]

xi1 (`) 

 2
1  [`1]
[`1]
[`1]
xi1 (`)  (  1)xi
(`) 
xi1 (`)



(4)

Then, for the Social Welfare of X[`] we have:
 X   X   X  

[`]
[`]
[`]
v i xi =
v i xi +
v i xi
SW X[`] =
i[n]

iO

iE

 
X
2   X  [`1]  1  [`1] 
[`]

v i xi
+ v 2 x2
+
v i xi


iO
iE\{2}
!
 X 




X
1  [`1] 
2
[`1]
[`1]
SW X[`1] 
v i xi
+ v 2 x2
+
v i xi
=


iE
iE\{2}






X
2
2  2
1
[`1]
[`1]
v2 x2
+
SW X[`1]
=
vi xi
+



iE\{2}


 1 
 2

1 X
[`1]
[`1]
>
vi x i
+
v 2 x2
+
SW X[`1]



iE\{2}

 2




1
2

SW X[`1] +
SW X[`1] =
SW X[`1]
2

2 + 2
The second line of this derivation is again due to submodularity: the factors on the sum
[`1]
[`]
[`1]
over odd-indexed bidders and on v2 (x2 ) follow by (4) and because x2 (`)  1 x2 (`).
For the last inequality, we used the fact that we are examining the right-hand side case
P
[`1]
of (3); then, iE vi ( xi
)  12 SW (X[`1] ).
Thus, for any  > 0, there is an assignment
range that approximates
 within
p  thedescribed
q
2
1
the optimum Social Welfare within factor 2+2  1+ , for some integers p, q, such that
p + q = m. The result follows by

1
1+



2
2+2 .

We obtain the following (intermediate) result:
739

2

fiKrysta, Telelis, & Ventre

Theorem 3 For multi-unit combinatorial auctions with n = O(1) submodular bidders, and
m = O(1) distinct goods, each good `  [m] available in an arbitrary supply, there exists a
truthful deterministic Fptas that, for any   1, approximates the optimum Social Welfare
within factor (1 + ).
Proof. For any fixed  > 0 we can search the specified range exhaustively in polynomial
time; to find the allocation with maximum Social Welfare, we have to try O(log s` ) cases
for each of n  1 bidders, given a fixed bidder for assigning the remaining units. Thus
the time required for trying all possible bundle assignments ofa specific good ` and for
all possible choices of a remainders bidder is O n(log s` )n1 . Because for every fixed
allocation of a specific good we need to try all possible allocations for the remaining m  1
goods, the overall complexity is in total O nm (log max` s` )(n1)m , which is polynomially
bounded for constant m and n. Also notice that, for   1 we obtain a Fptas, because:
log max s` = (log2 (1 + ))1  (log2 max s` )
`

`

and log21 (1 + )  1 .

2

Using Theorem 3 within the general Dobzinski-Nisan method, we obtain:
Corollary 1 There exists a truthful Ptas for multi-unit combinatorial auctions with constant number of distinct goods and submodular valuation functions.

6. General Valuation Functions
Interestingly, the direct generalization of the Dobzinski-Nisan method for a constant number of multiple goods does not immediately yield, for general valuation functions, a result
comparable to the one shown by Dobzinski and Nisan (2010) for a single good; for m = 1 a
truthful 2-approximation mechanism was obtained (and this factor was shown to be optimal). When m = 1, the relevant MiR algorithm A involved in Theorem 2 solves optimally
the case of t = 1 bidder, by allocating all units of all goods to him. The monotonicity of the
valuation functions guarantees that this allocation is optimal for t = 1 bidder. The factor 2
approximation follows. For m > 1 goods however, Theorem 2 appears to require a different
algorithm A (for, possibly, t > 1 bidders), to yield a comparable (constant approximation)
result. Instead, a constant (m+1)-approximation for the case of general valuation functions
accessed by value queries can be obtained, by simple modification of the direct approach
that was given by Dobzinski and Nisan, for general valuation functions.
We describe from scratch an MiR allocation algorithm. The algorithm splits for every
good the number of units into n2 equi-sized bundles of size b` = b ns`2 c; it also creates a single
extra bundle (per distinct good, `), containing the remaining units r` , so that n2 b` +r` = s` .
The algorithm allocates optimally whole bundles of units from each good to the n bidders.
First we show that this range approximates by a factor (m + 1) the optimum Social
Welfare. Let X = (x1 , . . . , xn ) denote the socially optimal allocation. Beginning with
X , we produce an allocation in the range within which the algorithm optimizes, that
approximates SW (X ) within factor (m + 1). Assume w.l.o.g. that all items are allocated
in X (by the monotonicity of valuation functions) and, for each good ` = 1, . . . , m, let
740

fiMechanisms for Multi-unit Combinatorial Auctions

j` = arg maxi xi (`). Then xj` (`) 
here.
Either:

m
X

vj` (xj` )

`=1

m

s`
n.

X

Define L = {j1 , . . . , jm }. We consider two cases

vi (xi ),

i6L

or:

m
X
`=1

vj` (xj` ) < m

X

vi (xi ).

i6L

For the first case, let us denote by Y` = (y1` , y2` , . . . , yn` )  for each ` = 1, . . . , m  the
allocation which assigns all bundles of all goods to bidder j`  L (thus, yi` = (0, . . . , 0), for
every i 6= j` ). Of these m allocations, consider Y = arg maxY` vj` (yj`` ). Then, SW (Y) 
P
1 Pm


i6L vi (xi ). Putting these inequalities together
`=1 vj` (xj` ), thus, also: SW (Y) 
m
1
yields SW (Y)  m+1 SW (X ). Notice that the allocation Y will be examined by the MiR
algorithm. For the second case we build an allocation X, by rounding up  separately for
each good `  the (optimal) allocation of bidders i 6 L to the nearest multiple of b` . The
units needed for this purpose we find  for each good `  from the corresponding bidder
j`  L, who may not obtain any unit in X. This is possible because we add at most n  ns`2 =
s`

X that gives
n  xj` (`) units in total by this rounding. This way we make up an allocation P
all multi-unit bundles of each good to bidders in [n] \ L and satisfies SW (X)  i6L vi (xi ),
1 Pm
1


thus, also: SW (X) > m
`=1 vj` (xj` ). Then, we deduce SW (X)  m+1 SW (X ). Notice
that the allocation X is also examined by the MiR algorithm. Thus, there exists a solution
within the range, that approximates SW (X ) within constant factor, at most (m + 1).
To complete our analysis, we show how to compute a MiR allocation for the described
range, using dynamic programming. Let r = (r1 , . . . , rm ) denote the vector of amounts that
correspond to bundles of remainders per good as described above. Given L  2{1,...,m}
we denote by r[L] the projection of r on indices in L; the remaining coordinates are set
to 0. Let b = (b1 , . . . , bm ). For any subset L  2{1,...,m} , define V L (i, q), q = (q1 , . . . , qm )
as the maximum welfare achievable when allocating at most q` multi-unit bundles for each
good ` = 1, . . . , m among bidders 1, . . . , i and the remainders bundle for each of the goods
`  L. We compute each V L (i, q) as follows:
n
o

0
0
0
L\L0
0
V L (i, q) = max
max
v
(q

b
,
.
.
.
,
q

b
)
+
r[L
]
+
V
(i

1,
q

q
)
i
1
m
1
m
0
0
0 q
L L q1 q1 ,...,qm
m

Because m = O(1), the entries of the dynamic programming table can be computed in
polynomial time. Thus:
Theorem 4 There exists a truthful polynomial-time mechanism for multi-unit Combinatorial Auctions with a constant number of distinct goods, m, and general valuation functions
that, using value queries, approximates the welfare of a socially optimal assignment within
constant factor, (m + 1).

7. Conclusions
In this paper we analyzed deterministic mechanisms for multi-unit Combinatorial Auctions
with a constant number of distinct goods, each in limited supply. We analyzed in particular
Maximal-in-Range allocation algorithms (Nisan & Ronen, 2007), for optimizing the Social
Welfare in this multi-unit combinatorial setting that, paired with VCG payments, yield
741

fiKrysta, Telelis, & Ventre

truthful auctions. Our main results include (i) a truthful Fptas for multi-minded bidders,
that approximates the supply constraints within factor (1 + ) and optimizes the Social
Welfare; (ii) a deterministic truthful Ptas for submodular bidders, that approximates the
Social Welfare within factor (1 + ) without violating the supply constraints. For achieving
(ii), we used a direct generalization of a single-good multi-unit allocation method proposed
by Dobzinski and Nisan (2010). All of the discussed developments are best possible in
terms of time-efficient approximation, as follows by relevant hardness results. Finally, we
showed how to treat general (unrestricted) valuation functions in our setting, by appropriately adjusting an analysis by Dobzinski and Nisan (2010). Closing the gap between a
communication complexity lower bound of 2 (for a single good) of Dobzinski and Nisan and
our (m + 1)-approximation result for m = O(1) goods, requires further understanding of
the communication complexity of our more general setting.

Acknowledgments
We thank three anonymous reviewers for helping us significantly in improving the presentation of this work. We also thank Jinshan Zhang, for pointing out a technical inconsistency
in an earlier version of this paper, and Fabrizio Grandoni and Stefano Leonardi, for very
useful discussions in the early stage of this work.
Piotr Krysta acknowledges support by the EPSRC grant EP/K01000X/1.
Carmine Ventre acknowledges support by the EPSRC grant EP/M018113/1.
Orestis Telelis acknowledges support by the research project DDCOD(PE6-213), implemented within the framework of the Action Supporting Postdoctoral Researchers of
the Operational Program Education and Lifelong Learning (Actions Beneficiary: General Secretariat for Research and Technology), and is co-financed by the European Union
(European Social Fund  ESF) and the Greek State.

References
Archer, A., Papadimitriou, C. H., Talwar, K., & Tardos, E. (2003). An Approximate Truthful Mechanism for Combinatorial Auctions with Single Parameter Agents. Internet
Mathematics, 1 (2), 129150.
Ausubel, L. M., & Milgrom, P. (2010). The Lovely but Lonely Vickrey Auction. In Cramton,
P., Shoham, Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial Auctions, pp.
1740. MIT Press.
Bartal, Y., Gonen, R., & Nisan, N. (2003). Incentive Compatible Multi Unit Combinatorial Auctions. In Halpern, J. Y., & Tennenholtz, M. (Eds.), Proceedings of the 9th
Conference on Theoretical Aspects of Rationality and Knowledge (TARK-2003), pp.
7287. ACM.
Bikhchandani, S., de Vries, S., Schummer, J., & Vohra, R. (2011). An Ascending Vickrey
Auction for Selling Bases of a Matroid. Operations Research, 59 (2), 400413.
742

fiMechanisms for Multi-unit Combinatorial Auctions

Blumrosen, L., & Nisan, N. (2007). Combinatorial Auctions. In Nisan, N., Roughgarden,
T., Tardos, E., & Vazirani, V. V. (Eds.), Algorithmic Game Theory, pp. 267299.
Cambridge University Press.
Briest, P., Krysta, P., & Vocking, B. (2011). Approximation Techniques for Utilitarian
Mechanism Design. SIAM Journal on Computing, 40 (6), 15871622.
Chekuri, C., & Khanna, S. (2005). A Polynomial Time Approximation Scheme for the
Multiple Knapsack Problem. SIAM Journal on Computing, 35 (3), 713728.
Clarke, E. (1971). Multipart Pricing of Public Goods. Public Choice, 11 (1), 1733.
Daniely, A., Schapira, M., & Shahaf, G. (2015). Inapproximability of Truthful Mechanisms
via Generalizations of the VC Dimension. In Servedio, R. A., & Rubinfeld, R. (Eds.),
Proceedings of the 47th Annual ACM on Symposium on Theory of Computing, STOC
2015, Portland, OR, USA, June 14-17, 2015, pp. 401408. ACM.
Dobzinski, S., & Dughmi, S. (2013). On the Power of Randomization in Algorithmic Mechanism Design. SIAM Journal on Computing, 42 (6), 22872304.
Dobzinski, S., & Nisan, N. (2010). Mechanisms for Multi-Unit Auctions. Journal of Artificial
Intelligence Research, 37, 8598.
Dobzinski, S., Nisan, N., & Schapira, M. (2010). Approximation Algorithms for Combinatorial Auctions with Complement-Free Bidders. Mathematics of Operations Research,
35 (1), 113.
Grandoni, F., Krysta, P., Leonardi, S., & Ventre, C. (2014). Utilitarian Mechanism Design
for Multi-Objective Optimization. SIAM Journal on Computing, 43 (4), 12631290.
Groves, T. (1973). Incentives in Teams. Econometrica, 41 (4), 617631.
Hastad, J. (1996). Clique is Hard to Approximate Within n1 . In 37th Annual Symposium on Foundations of Computer Science (FOCS96), pp. 627636. IEEE Computer
Society.
Holzman, R., Kfir-Dahav, N. E., Monderer, D., & Tennenholtz, M. (2004). Bundling Equilibrium in Combinatorial Auctions. Games and Economic Behavior, 47 (1), 104123.
Kapralov, M., Post, I., & Vondrak, J. (2013). Online Submodular Welfare Maximization:
Greedy is Optimal. In Khanna, S. (Ed.), Proceedings of the Twenty-Fourth Annual
ACM-SIAM Symposium on Discrete Algorithms (SODA13), pp. 12161225. SIAM.
Kelly, T. (2004). Generalized Knapsack Solvers for Multi-Unit Combinatorial Auctions:
Analysis and Application to Computational Resource Allocation. In Faratin, P., &
Rodrguez-Aguilar, J. A. (Eds.), Agent-Mediated Electronic Commerce VI, Theories
for and Engineering of Distributed Mechanisms and Systems (AAMAS 2004 Workshop, AMEC 2004), Vol. 3435 of LNCS.
Khot, S., Lipton, R. J., Markakis, E., & Mehta, A. (2008). Inapproximability Results for
Combinatorial Auctions with Submodular Utility Functions. Algorithmica, 52 (1),
318.
Kothari, A., Parkes, D. C., & Suri, S. (2005). Approximately-Strategyproof and Tractable
Multiunit Auctions. Decision Support Systems, 39 (1), 105121.
743

fiKrysta, Telelis, & Ventre

Lavi, R., & Swamy, C. (2011). Truthful and Near-Optimal Mechanism Design via Linear
Programming. Journal of the ACM, 58 (6), 25.
Lehmann, B., Lehmann, D. J., & Nisan, N. (2006). Combinatorial Auctions with Decreasing
Marginal Utilities. Games and Economic Behavior, 55 (2), 270296.
Lehmann, D., Muller, R., & Sandholm, T. (2010). The Winner Determination Problem.
In Cramton, P., Shoham, Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial
Auctions. MIT Press.
Lehmann, D. J., OCallaghan, L., & Shoham, Y. (2002). Truth Revelation in Approximately
Efficient Combinatorial Auctions. Journal of the ACM, 49 (5), 577602.
Milgrom, P. (2004). Putting Auction Theory to Work. Cambridge University Press.
Mirrokni, V. S., Schapira, M., & Vondrak, J. (2008). Tight Information-Theoretic lower
bounds for Welfare Maximization in Combinatorial Auctions. In Proceedings 9th
ACM Conference on Electronic Commerce (ACM EC), pp. 7077.
Mualem, A., & Nisan, N. (2002). Truthful Approximation Mechanisms for Restricted
Combinatorial Auctions. In Dechter, R., & Sutton, R. S. (Eds.), Proceedings of the
Eighteenth National Conference on Artificial Intelligence and Fourteenth Conference
on Innovative Applications of Artificial Intelligence (AAAI/IAAI 2002), pp. 379384.
AAAI Press / MIT Press.
Mualem, A., & Nisan, N. (2008). Truthful Approximation Mechanisms for Restricted
Combinatorial Auctions. Games and Economic Behavior, 64 (2), 612631.
Nisan, N. (2014). Algorithmic Mechanism Design, Through the Lens of Multi-Unit Auctions.
In Aumann, R., & Hart, S. (Eds.), Handbook of Game Theory, Vol. IV. Elsevier NorthHolland.
Nisan, N., & Ronen, A. (2007). Computationally Feasible VCG Mechanisms. Journal of
Artificial Intelligence Research, 29, 1947.
Nisan, N., & Segal, I. (2006). The Communication Requirements of Efficient Allocations
and Supporting Prices. Journal of Economic Theory, 129 (1), 192224.
Nisan, N., & Ronen, A. (2001). Algorithmic Mechanism Design. Games and Economic
Behavior, 35 (1-2), 166196.
Sandholm, T. (2010). Optimal Winner Determination Algorithms. In Cramton, P., Shoham,
Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial Auctions. MIT Press.
Vazirani, V. V. (2003). Approximation Algorithms. Springer-Verlag.
Vickrey, W. (1961). Counterspeculation, Auctions, and Competitive Sealed Tenders. Journal of Finance, 16 (1), 837.
Vocking, B. (2012). A Universally Truthful Approximation Scheme for Multi-Unit Auctions.
In Rabani, Y. (Ed.), Proceedings of the Twenty-Third Annual ACM-SIAM Symposium
on Discrete Algorithms (SODA12), pp. 846855. SIAM.

744

fi