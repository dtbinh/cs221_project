Journal of Artificial Intelligence Research 53 (2015) 91-126

Submitted 12/14; published 05/15

The Ceteris Paribus Structure of Logics of Game Forms
Davide Grossi

d.grossi@liverpool.ac.uk

Department of Computer Science
University of Liverpool

Emiliano Lorini

emiliano.lorini@irit.fr

IRIT-CNRS
Universite Paul Sabatier

Francois Schwarzentruber

francois.schwarzentruber@ens-rennes.fr

ENS Rennes - IRISA

Abstract
The article introduces a ceteris paribus modal logic, called CP, interpreted on the
equivalence classes induced by finite sets of propositional atoms. This logic is studied
and then used to embed three logics of strategic interaction, namely atemporal STIT, the
coalition logic of propositional control (CLPC) and the starless fragment of the dynamic
logic of propositional assignments (DLPA). The embeddings highlight a common ceteris
paribus structure underpinning the key operators of all these apparently very different logics
and show, we argue, remarkable similarities behind some of the most influential formalisms
for reasoning about strategic interaction.

1. Introduction
The logical analysis of agency and gamesfor an expository introduction to the field see van
der Hoek and Paulys overview paper (2007)has boomed in the last two decades giving
rise to a plethora of different logics in particular within the multi-agent systems field.1 At
the heart of these logics are always representations of the possible choices (or actions) of
groups of players (or agents) and their powers to force specific outcomes of the game. Some
logics take the former as primitives, like STIT (the logic of seeing to it that, Belnap, Perloff,
& Xu, 2001; Horty, 2001), some take the latter like CL (coalition logic, Pauly, 2002; Goranko,
Jamroga, & Turrini, 2013) and ATL (alternating-time temporal logic, Alur, Henzinger, &
Kupferman, 2002).
In these formalisms the power of players is modeled in terms of the notion of effectivity.
In a strategic game, the -effectivity of a group of players consists of those sets of outcomes
of the game for which the players have some collective action which forces the outcome of
the game to end up in that set, no matter what the other players do (Moulin & Peleg,
1982). So, if a set of outcomes X belongs to the -effectivity of a set of players J, there
exists an individual action for each agent in J such that, for all actions of the other players,
the outcome of the game will be contained in X. If we keep the actions of the other agents
1. The richness of this logical landscape was the object of the IJCAI13 invited talk by A. Herzig Logics
for Multi-Agent Systems: a Critical Overview.
c
2015
AI Access Foundation. All rights reserved.

fiGrossi, Lorini, & Schwarzentruber

fixed, then the selection of an individual action for each agent in J corresponds to a choice
of J under the assumption that the other agents stick to their choices.
It was already observed by van Benthem, Girard, and Roy (2009) that this formalization
of choice and power in games is of an all other things being equal, or ceteris paribus, nature.
Considering which outcomes of a game are possible for a set of players J once the other
players have fixed their actions, amounts to considering what may be the case under the
ceteris paribus condition all actions of the agents not in J being equal (to their current
ones). In the aforementioned work van Benthem et al. also show how this intuition can
be used, for instance, to give a modal formulation of Nash equilibria of one-shot games.2
In the current paper we leverage this intuition further and show how it can provide a novel
systematization of many of the most influential formalisms in the field of logic and games.
1.1 Scientific Context
Formal relationships linking the logics (or fragments thereof) we mentioned above have
been object of several publications. Notable examples are: the embedding of CL into the
next-time fragment of ATL (Goranko, 2001) and the embedding of CL into NCL (normal
coalition logic, Broersen, Herzig, & Troquard, 2007; Balbiani, Gasquet, Herzig, Schwarzentruber, & Troquard, 2008a), the embedding of CL and ATL into STIT (Broersen, Herzig,
& Troquard, 2005, 2006). Earlier contributions have also attempted more comprehensive
systematizations of the field of logic and games. Two in particular are worth mentioning:
Goranko and Jamrogas work (2004), which compares game logics based on the computation tree abstraction like ATL and its variants; and Herzigs work (2014), which provides
a conceptual and syntax-basedwhile we favor here semantic methodscomparison of all
the main formalisms in the literature.
1.2 Aim of the Paper
The aim of the paper is to provide a technical contribution towards a unification of the field
of logic and games. We set out to develop a series of embeddings which highlight a common
structure in the representation of choice and power, which underpins the semantics of all
the logics mentioned above.
We focus on the components of the semantics of those logics that have directly to do
with the representation of choice and power, and we abstract away from the representation
of time and repeated interaction. So the logics we will be working with are: the atemporal
fragment of STIT, logic CLPC (coalition logic of propositional control, van der Hoek &
Wooldridge, 2005) and the starless fragment of DLPA (dynamic logic of propositional
assignments, van Eijck, 2000; Balbiani, Herzig, & Troquard, 2013). These logics cover,
arguably, a large spectrum of the most influential existing formalisms.3 Logic STIT is often
considered a standard in the literature, as it embeds both CL and ATL (Broersen et al., 2005,
2. We refer the reader to Osborne and Rubinsteins textbook (1994) for an introduction to the basic notions
of game theory.
3. It is worth stressing that we focus here on logics of choice and power (that is, on the notion of effectivity) and not on formalisms incorporating also an explicit representation of how choice and power are
implemented (that is, an explicit notion of strategy), such as for instance ATL with explicit strategies
(Walther, van der Hoek, & Wooldridge, 2007).

92

fiThe Ceteris Paribus Structure of Logics of Game Forms

CLPC

DLPA

CP
one
nti
al

S5

bo

un
de

d

m

od

el
s

exp

STIT

restricted languages

NCL

Figure 1: Summary of the embeddings established in the paper and known from the literature
An arrow indicates that each formula of the source logic is satisfiable if and only
if a suitable translation of that formula is satisfiable in the target logic. DLPA
denotes the starless version of dynamic logic of propositional assignments, NCL
and STIT denote the atemporal version of, respectively, normal coalition logic
and the seeing-to-it logic. S5 denotes the normal modal logic of equivalence relations. Dotted lines indicate embeddings known in the literature: from CLPC to
DLPA (Balbiani et al., 2013) and from STIT to NCL (and vice versa) with respect to fragments of the respective languages (Lorini & Schwarzentruber, 2011).
The embedding from STIT to CP assumes a bound on the STIT-models. All
embeddings are polynomial except for the one from CP to S5.

2006), so we use it as a natural starting point. Logic CLPC is an influential extension of
CL and has strong formal ties (Dunne, van der Hoek, Kraus, & Wooldridge, 2008) with the,
equally influential, Boolean games model (Harrenstein, van der Hoek, Meyer, & Witteveen,
2001) in multi-agent systems. Finally, logic DLPA is an extension of PDL (propositional
dynamic logic, Harel, Kozen, & Tiuryn, 2000), which has recently been proposed as a new
standard for the representation of choice and power (Herzig, Lorini, Moisan, & Troquard,
2011; Balbiani et al., 2013).
To articulate our analysis, whose main technical tool consists of satisfiability-preserving
embeddings, the paper introduces and studiesin its axiomatization and complexitya
simple ceteris paribus logic based on propositional equivalence, which we call CP. Such
logic is the yardstick allowing us to compare and unify STIT, CLPC and DLPA.
1.3 Outline and Summary of Results
Section 2 introduces logic CP. The logic will be compared to S5 and axiomatized.
Section 3 provides a study of the relationship between the atemporal version of STIT and
CP. We show that CP embeds atemporal group STITthe fragment of atemporal STIT
in which actions of both individuals and groups are representedunder the assumption
that the agents choices are bounded. We call the latter atemporal bounded group STIT.
Moreover, we show that CP embeds atemporal individual STITthe variant of atemporal
93

fiGrossi, Lorini, & Schwarzentruber

STIT in which only the actions of individuals are represented. The former embedding is
used to transfer complexity results to CP. We also present an embedding in CP of a variant
of atemporal group STIT in which groups are nested (i.e., given two sets of agents J and J 0
either J  J 0 or viceversa).
Section 4 provides an embedding of the coalition logic of propositional control into atemporal
bounded group STITand therefore, indirectly, into CPas well as a direct embedding
of CLPC into CP.
Section 5 provides an embedding of the starless fragment of DLPA into CP as well as an
embedding of CP into DLPA and therefore, indirectly, of STIT (on bounded models) and
CLPC into DLPA.
Finally, in Section 6 we discuss the obtained results, put them in perspective with related
work and draw some general implications for the field. We conclude in Section 7. Longer
proofs are collected in a technical appendix at the end of the paper.
Figure 1 gives a graphical presentation of the embeddings established in the paper
as well as relevant ones already known in the literature. Two embeddings are known for
the above logics: the embedding of CLPC into DLPA (Balbiani et al., 2013), and the
embedding of STIT into NCL, and vice versa, when the language of STIT (and of NCL) are
restricted to a fragment which does not allow nesting modalities.4

2. A Ceteris Paribus Logic Based on Propositional Equivalence
In this section we introduce and study the logic that will be used as target logic in all the
embeddings we will present. The section starts with the definition of equivalence modulo
a set of atoms. Then we present our ceteric paribus logic CP whose semantics is based on
these equivalence relations. The section finishes with an exponentially embedding of ceteris
paribus logic CP into S5 proving that the CP-satisfiability problem is decidable.
2.1 Equivalence Modulo a Set of Atoms
Consider a structure (W, V ) where W is a set of states, and V : P  2W a valuation
function from a countable set of atomic propositions P to subsets of W .5
Definition 1. (Equivalence modulo X) Given a pair (W, V ), X  P and |X| < , the
relation VX  W 2 is defined as:

w VX w0  p  X : w  V (p)  w0  V (p)
When X is a singleton (e.g. p), we will often write Vp instead of V{p} . Also, in order to
avoid clutter, we will often drop the reference to V in VX when clear from the context.
Intuitively, two states w and w0 are equivalent up to set X, or X-equivalent, if and only
if they satisfy the same atoms in X (according to a given valuation V ). The finiteness of
4. The reader is referred to Lorini and Schwarzentrubers paper (2011) for the BNF of this language.
5. In the literature game logics are sometimes defined over a countable set of atoms (e.g., Balbiani et al.,
2013) and sometimes over a finite set of atoms (e.g., van der Hoek & Wooldridge, 2005). Here we opt for
generality and define the language of CP over a countable set. Under the assumption of a finite supply
of atoms some of the results we present later would trivialize (for instance the CP satisfiability problem
would be in PTIME) and would therefore hide some of the interesting technical features of CP.

94

fiThe Ceteris Paribus Structure of Logics of Game Forms

X is clearly not essential in the definition. It is assumed because, as we will see, each set
X will be taken to model a set of actions of some agent in a game form and sets of actions
are always assumed to be finite.
We state the following simple fact without proof. It highlights some interesting features
of the notion of propositional equivalence modulo subsets of P, some of which will be of use
later on in the paper.
Fact 1. (Properties of P ) The following holds for any set of states W , valuation V :
P  2W and finite sets X, Y  P:
(i) X is reflexive, transitive and symmetric;
(ii) if X  Y then Y  X ;
(iii) if X is a singleton, X induces a partition of W with at most 2 cells;
(iv) X  Y = XY ;
(v)  = W 2 .
Intuitively: (i) states that each X is an equivalence relation; (ii) states that the larger
the set of atoms, the more refined is the equivalence relation indexed by it; (iii) states that
if the set of atom is a singleton, then its equivalence relation would induce a partition of
one (if the proposition in the singleton is globally true or globally false in the model) or two
cells (otherwise); (iv) states that the relation indexed by the union of two sets of atoms is
the relation one obtains by intersecting the relations of the two sets; finally (v) states that
the relation of the empty set of atoms is the global relation.
2.2 A Modal Logic of the X Relation
In this section we consider a simple modal language interpreted on relations X and axiomatize its logic on the class of structures (W, V ). The key modal operator of the language
will be hXi, whose intuitive meaning is  is the case in some state which is X-equivalent to
the current one or, to stress a ceteris paribus reading,  is possible all things expressed in
X being equal. We call the resulting logic propositional ceteris paribus logic, CP in short.
2.2.1 Syntax of CP.
Let P be a countable set of atomic propositions. The language LCP (P) is defined by the
following BNF:
LCP (P) :  ::= p |  | (  ) | hXi
where p ranges over P and X is a finite subset of atomic propositions (X  P and X finite).
Note that as the set of finite subsets of atomic propositions is countable, the language
LCP (P) is also countable. The Boolean connectives >, , ,  and the dual operators [X]
are defined as usual. Although we have taken diamond operators as primitive, we will for
convenience also make use of box operators to state some results in later sections.
The set SF () of subformulas of a formula  is defined inductively as follows:
 SF (p) = {p};
95

fiGrossi, Lorini, & Schwarzentruber

 SF () = {}  SF ();
 SF (  ) = {  }  SF ()  SF ();
 SF (hXi) = {hXi}  SF ().
We say that a signature X appears in  if there exists a formula  such that hXi  SF ().
2.2.2 Semantics of CP
This is the class of models we will be working with:
Definition 2. (CP-models) Given a countable set P, a CP-model for LCP (P) is a tuple
M = (W, V ) where:
 W is a non-empty set of states;
 V : P  2W is a valuation function.
A CP-model is called universal if W = 2P and V is s.t. V (p) = {w | p  w}. It is called
non-redundant if P is the identity relation in W 2 .
Intuitively, a CP-model consists just of a state-space and a valuation function for a given
set of atoms. The satisfaction relation is defined as follows:
Definition 3. (Satisfaction for CP-models) Let M = (W, V ) be an CP-model for LCP (P),
w  W and ,   LCP (P):
M, w |=CP p  w  V (p);
M, w |=CP   M, w 6|=CP ;
M, w |=CP     M, w |=CP  and M, w |= ;
M, w |=CP hXi  w0  W : w VX w0 and M, w0 |=CP 
Formula  is CP-satisfiable, if and only if there exists a model M and a state w such that
M, w |=CP . Formula  is valid in M, noted M |=CP , if and only if for all w  W ,
M, w |=CP . Finally,  is CP-valid, noted |=CP , if and only if it is valid in all CP-models.
The logical consequence of formula  from a set of formulae, noted  |=CP , is defined as
usual.
So, modal operators are interpreted on the equivalence relations X induced by the
valuation of the model. It is worth observing that the logic of this class of models is not
closed under uniform substitution,6 that is, logic CP is not uniform.7 To witness that, notice
that formula [{p}]p  [{p}]p is valid, whereas [{p}]  [{p}] is not.
Let us give a simple illustration of the above semantics.
Example 1. Let us consider the following model M made up of 5 states w, x, u, y, z:
6. For the definition of uniform substitution the reader is referred to the textbook by Blackburn, de Rijke,
and Venema (2001, Def. 1.18).
7. The terminology comes from Goldblatts work (1992).

96

fiThe Ceteris Paribus Structure of Logics of Game Forms

w : p, q

x:p

u : p, q, r

z:q

y

For instance, we have M, w |=CP h{p, q}ir and M, z |=CP [{p}]r.
The following lemmas state simple facts concerning the relation of logic CP with logic
S5 and isolate an interesting class of CP-models.
Lemma 1. Let LCP (P) the set of formulae   LCP (P) containing only hi operators. The
set of formulae of LCP (P) which are CP-valid is the modal logic of Kripke frames (W, W 2 ),
i.e., logic S5.
Proof. It follows directly from Fact 1 item (v).
In other words, the hi operator of LCP is nothing but the global modality (Blackburn
et al., 2001, pp. 367370). The next lemma states that CP is actually the logic of the class
of relevant CP-models.
Lemma 2. Every satisfiable CP-formula is satisfiable on a non-redundant model.
Proof. Assume M, w |= . We show that MP , |w|P |=  of M where MP is the quotient
of M by the equivalence relation P (defined in the natural way) and |w|P is the set
of states which are P -equivalent to w. We proceed by induction on the structure of .
The propositional and Boolean cases are obvious. Let  = hXi with X  P. From the
assumption and the semantics of CP operators we have that there exists v such that w X v
and M, v |= . By construction we directly have that |w|P X |v|P . By IH MP , |v|P |= ,
and therefore MP , |w|P |= hXi.
2.2.3 Axiomatics of CP
We can obtain an axiom system for CP by a standard reduction technique exploiting Lemma
1. The axiom system is given in Figure 2. The first thing to notice is that the system consists
of the usual S5 axioms plus the Reduce axiom. Logic S5 is known to be sound and strongly
complete for the class of models where the accessibility relation is the total relation W 2
(Blackburn et al., 2001), and modality hi can therefore be axiomatized as the (dual of)
the global modality.
Having said this, soundness and strong completeness of the above system are easy to
establish.
Theorem 1. The axiom system given in Figure 2 is sound and strongly complete for the
class of CP-models.
Proof. Soundness It suffices to show that Reduce is CP-valid, which follows straightforwardly from Definition 1. Completeness To obtain completeness we proceed as customary
in DEL (van Ditmarsch, Kooi, & van der Hoek, 2007; Wang & Cao, 2013). We first fix a
97

fiGrossi, Lorini, & Schwarzentruber

(P)

all tautologies of propositional calculus

(K)

[](  )  ([]  [])

(T)

  hi

(4)

hihi  hi

(5)

hi  []hi





^
^
^
^
^

p  
p  [] 
p
[X] 
p

(Reduce)

Y X

(MP)
(N)

pY

pY

pX\Y

pX\Y

if `CP  and `CP    then `CP 
if `CP  then `CP []

Figure 2: Axiom schemas and rules of CP. X, Y range over finite elements of 2P , , 
over LCP (P), and p over P. As usual, `CP means that there exists a sequence of
formulae each of which are either an axiom or are obtained from previous formulae
through the application of an inference rule.

translation tr0 : LCP (P)  LCP (P) as follows:
tr0 (p) = p
tr0 () = tr0 ()
tr0 (  ) = tr0 ()  tr0 ()





^
^
^
^
^

tr0 ([X]) =
p
p  [] 
p
p  tr0 ()
Y X

pY

pY

pX\Y

pX\Y

We also write tr0 () for {tr0 () |   }. Notice that the translation removes occurrences
of hXi and [X] operators from formulae where X 6=  and it has the same structure of axiom
Reduce. Consider then the following rule of substitution of provable equivalents (REP):
(REP)

if `CP   0 then `CP   [/0 ]

where [/0 ] is the formula that results from  by replacing zero or more occurrences of
, in , by 0 . We have that rule REP is derivable in the axiom system of Figure 2 (). The
proof of this claim is provided in Appendix A. By using axiom Reduce and rule REP we
obtain by () that, for any   LCP (P), `CP   tr0 () (). We can then proceed as follows:
if  |=CP  then tr0 () |=CP tr0 () by (); by Lemma 1 and the strong completeness of
S5 we thus obtain tr0 () `S5 tr0 () and therefore tr0 () `CP tr0 (); finally by () again it
follows that  `CP , which proves strong completeness.
98

fiThe Ceteris Paribus Structure of Logics of Game Forms

The crux of the above reduction argument lies in the use of axiom Reduce. What the
axiom does is to enable the reduction of [X]-formulae by taking care of all the possible truth
V
V
value combinations of the atoms in X. If a given combination, e.g.,
p

p
,
pY
pX\Y
is true at a given state (for some Y ), then in all accessible states, if that combination is
true, then what occurs in the scope of [X] is also true.
We opted for the above axiomatization in virtue of its simplicity, but alternative systems
are of course possible. One in particular is worth mentioning. It first reduces hpi operators
by axiom:
hpi  ((p  hi(p  ))  (p  hi(p  )))

(1)

This states that hpi is equivalent to either the case in which the current state satisfies p
and there exists a (possibly different) p-state where  is true, or the case where p is true
and there exists a (possibly different) p-state where  is true (recall property (iii) in Fact
1). Given the above reduction, one can then use axioms to enforce the appropriate behavior
of X relations where X consists of more than one atom. To this aim, axioms can be used
that are known to be canonical for properties (ii) and (iv) of Fact 1, namely:
hX  Y i  hXi

(2)

hXii  hY ii  hX  Y ii

(3)

where i ranges over a set of nominals. A complete system could then be obtained by
axiomatizing the behavior of nominalsthrough axioms and rules used in hybrid logic
(Areces & Ten Cate, 2006). From that system, a named canonical model could be built
(i.e., a canonical model where all maximal consistent sets contain exactly one nominal)
where the axioms in Formulae 1-3 would enforce the desirable properties on the canonical
relations.
2.3 Exponentially Embedding CP into S5
The property expressed by axiom Reduce enables a truth-preserving translation of CP into
S5 via the translation tr0 provided in the proof of Theorem 1. This translation is, however,
such that the length of the translated formula grows exponentially by a tower of exponents
of height equal to the modal depth of the original formula.
In this section we propose a translation that is single exponential and preserves satisfiability. Take the standard modal language L (P) with one modal operator  defined on
the set of atoms P. S5-models are structures M = (W, V ) where W is a set of states, and
V : P  2W a valuation function. Given an S5-model M = (W, V ) and a state w  W ,
the truth conditions are defined as follows:
M, w |=S5   u  W : M, u |=S5 
S5-satisfiability is defined as usual. It is possible to define an exponential truth-preserving
reduction tr : LCP (P)  L (P) as follows:
^
tr(0 ) = p0 
(p  tr1 ())
SF (0 )

99

fiGrossi, Lorini, & Schwarzentruber

where p are fresh atomic proposition (note that p0 is p when  is the formula 0 itself,
which is also a subformula of 0 )8 ,  ranging over SF (0 ) and tr1 is defined as follows:
tr1 (p) = p

for p  P

tr1 () = tr1 ()
tr1 (  ) = tr1 ()  tr1 ()
tr1 ([]) = p



tr1 ([X]) =

^

^


Y X

pY

p

^





p   

^
pY

pX\Y

p

^



p  p 

pX\Y

Intuitively, the translation is designed to operate like axiom Reduce but avoiding exponential blow-up to pile up with the modal depth of the formula. The atomic propositions
p in tr1 ([X]) avoid the non-elementary size of tr(0 ). The definition of tr1 ([]) corresponds to the degenerated case of tr1 ([X]) where X = .The following theorem states the
satisfiability preservation. The proof is given in Appendix B.
Theorem 2. (tr preserves satisfiability) Let 0 be a CP-formula. The two following statements are equivalent: 0 is CP-satisfiable; tr(0 ) is S5-satisfiable.
As a consequence, we also obtain the following result.
Corollary 1. (Decidability) The satisfiability problem for CP is decidable and in NEXPTIME.
Proof. The satisfiability problem for S5 is decidable and in NP (Blackburn et al., 2001, Ch.
6). The result follows from Theorem 2 and a decision procedure may work as follows: in
order to check that  is satisfiable we compute the formula tr() and we apply a NP-decision
procedure to check whether tr() is S5-satisfiable or not.
Notice that if the cardinality of each X that appears in operators [X] of  is bounded
by a fixed integer, then the translation tr becomes polynomial in the size of . Thus,
as S5-satisfiability problem is NP-complete, the CP-satisfiability problem with a bounded
cardinality restrictions over set of atomic propositions in modal operators is in NP. As it is
trivially NP-hard, it is NP-complete.
In Section 3, we will embed the atemporal version of STIT (the logic of seeing to it that)
into CP thereby obtaining lower bounds results.

3. The Ceteris Paribus Structure of STIT Logic
In this section, we investigate the possibility of embedding the logic of agency STIT into
CP. STIT logic (the logic of seeing to it that, Belnap et al., 2001; Horty, 2001) is one of
the most prominent logical accounts of agency. It is the logic of constructions of the form
agent i (or group J) sees to it that . STIT has a non-standard modal semantics based on
the concepts of moment and history. However, as shown by Balbiani, Herzig, and Troquard
(2008b) and Herzig and Schwarzentruber (2008), the basic STIT language without temporal
operators can be simulated in a standard Kripke semantics.
8. Such a use of fresh atomic propositions to obtain more efficient satisfiability preserving translations is
based on the propositional logic technique known as Tseitin transformation (Tseitin, 1968).

100

fiThe Ceteris Paribus Structure of Logics of Game Forms

3.1 Atemporal Group STIT
First let us recall the syntax and the semantics of atemporal group STIT. The language of
this logic is built from a countable set of atomic propositions P and a finite set of agents
AGT = {1, . . . , n} and is defined by the following BNF:
LGSTIT (P, AGT ) :  ::= p |  | (  ) | [J : stit]
where p ranges over P and J ranges over 2AGT . The construction [J : stit] is read group
J sees to it that  is true regardless of what the other agents choose. We define the dual
def
operator hJ : stiti = [J : stit]. When J = , the construction [ : stit] is read 
is true regardless of what every agent chooses or simply  is necessarily true.
Definition 4 (STIT-Kripke model, Herzig & Schwarzentruber, 2008). A STIT-Kripke model
M = (W, {RJ }JAGT , V ) is a 3-tuple where:
 W is a non-empty set of worlds;
 for all J  AGT , RJ is an equivalence relation such that:
i) RJ  R ;
T
ii) RJ = jJ R{j} ;
iii) T
for all w  W and (w1 , . . . , wn )  W n , if u1  R{1} (w), . . . , un  R{n} (w) then
1jn R{j} (uj ) 6= ;
 V : P  2W is a valuation function for atomic propositions;
with RJ (w) = {u  W : (w, u)  RJ } for any J  2AGT .
The partition induced by the equivalence relation RJ is the set of possible choices of
the group J.9 Indeed, in STIT a choice of a group J at a given world w is identified with
the set of possible worlds RJ (w). We call RJ (w) the set of possible outcomes of group
Js choice at world w, in the sense that group Js current choice at w forces the possible
worlds to be in RJ (w). The set R (w) is simply the set of possible outcomes at w, or said
differently, the set of outcomes of the current game at w. According to Condition (i), the
set of possible outcomes of a group Js choice is a subset of the set of possible outcomes.
Condition (ii), called additivity, means that the choices of the agents in a group J is made
up of the choices of each individual agent and no more. Condition (iii) corresponds to the
property of independence of agents: whatever each agent decides to do, the set of outcomes
corresponding to the joint action of all agents is non-empty. More intuitively, this means
that agents can never be deprived of choices due to the choices made by other agents. In
Lorini and Schwarzentrubers work (2011) determinism for the group AGT was assumed.
That is to say that the set of outcomes corresponding to a joint action of all agents is a
singleton. Hortys group STIT logic (Horty, 2001) does not suppose this. Here we deal with
Hortys version of STIT. So a STIT model is a game form in which a joint action of all
agents might determine more than one outcome.
9. One can also see the partition induced by the equivalence relation Rj as the set of actions that agent j
can try, where the notion of trying corresponds to the notion of volition studied in philosophy of action
(e.g., OShaughnessy, 1974; McCann, 1974).

101

fiGrossi, Lorini, & Schwarzentruber

w

u

v

r

s

t

z

R{1}
R{2}

Figure 3: The STIT-model M
Example 2. The tuple M = (W, R , R{1} , R{2} , R{1,2} , V ) defined by:
 W = {w, u, v, r, s, t, z};
 R = W  W ;
 R{1} = {w, u, v}2  {r, s}2  {t, z}2 ;
 R{2} = {w, r, t}2  {u, v, s, z}2 ;
 R{1,2} = {(w, w), (r, r), (s, s), (t, t), (z, z), (u, u), (v, v), (u, v), (v, u)};
 for all p  P, V (p) = .
is a STIT-Kripke model. Figure 3 shows the model M. The equivalence classes induced by
the equivalence relation R{1} are represented by ellipses and correspond to the choices of
agent 1. The equivalence classes induced by the equivalence relation R{2} are represented
by rectangles and correspond to the choices of agent 2. The choice of group {1, 2} at a
given world is determined by the intersection of the choice of agent 1 and the choice of
agent 2 at this world. For example, the choice of agent 1 at world u is {w, u, v} whereas
the choice of agent 2 at world u is {u, v, s, z}. The choice of group {1, 2} at u is {u, v}.
Note that Condition (iii) of Definition 4 ensures that for any choice of agent 1 and for any
choice of agent 2 the intersection between these two choices is non-empty. That is, for any
equivalence class induced by the relation R{1} and for any equivalence class induced by the
relation R{2} , the intersection between these two equivalence classes is non-empty.
Given a STIT-Kripke model M = (W, {RJ }JAGT , V ) and a world w in M, the truth
conditions of STIT formulae are the following:
M, w |=STIT p  w  V (p);
M, w |=STIT   M, w 6|=STIT ;
M, w |=STIT     M, w |=STIT  and M, w |=STIT ;
M, w |=STIT [J : stit]  v  RJ (w) : M, v |=STIT 
where RJ (w) = {u  W | (w, u)  RJ }.
102

fiThe Ceteris Paribus Structure of Logics of Game Forms

3.2 Embedding Atemporal STIT into CP
We are not able to embed group STIT into CP because of many reasons. The first one is
that the group STIT satisfiability problem is undecidable if there are more than 3 agents
(Herzig & Schwarzentruber, 2008).10 The second one is that group STIT does not have
the finite model property. Indeed Herzig and Schwarzentruber (2008) provide a translation
from the product logic S5n to group STIT logic, and as S5n does not have the finite model
property (Gabbay, Kurucz, Wolter, & Zakharyaschev, 2003), so atemporal group STIT will
not have it. On the contrary CP inherits the finite model property from S5. Indeed, if a
formula  is CP-satisfiable, Theorem 2 says that tr() is S5-satisfiable. But as S5 has the
polynomial model property, there exists a polynomial-sized S5-model for tr() in the size
of tr(). In other words, there exists an exponential S5-model for tr() in the size of .
Theorem 2 ensures that there exists an exponential CP-model for  in the size of .
We will nevertheless embed a variant of group STIT under the assumption that every
agent has a finite and bounded number of actions in his repertoire. For every agent j, a
Rj -equivalence class Rj (u) corresponds to an action of agent j. We say that agent j has kj
actions in a STIT model if and only if there are exactly kj Rj -equivalence classes in M.
The game structure in STIT-models should be enforced in CP-models. That is why
we introduce special atomic propositions to encode the game structure. Without loss of
generality, we assume that the set P contains special atomic propositions rep j1 , rep j2 , . . . for
all agents j which are used to represent the actions of the agents. Let k be the maximal
number of actions: k = maxjAGT kj . For every agent, we represent its actions by numbers
` in {0, . . . , k  1} and some atomic propositions encode the binary representation of `.
Let m be an integer that represents the number of digits we need to represent an action.
For instance let m = dlog2 ke (the ceiling of the logarithm of k). For a given agent j,
Rjm = {rep j1 , . . . , rep jm } is the set atomic propositions that represent the binary digits of an
action of agent j. We suppose that if j 6= i then Rjm  Rim = .
Example 3. For example, in the model of Example 2, agent 1 has k1 = 3 actions and agent
2 has k2 = 2 actions. So k = 3 and m = dlog2 3e = 2. We have R1m = {rep 11 , rep 12 } and
R2m = {rep 21 , rep 22 }. Then for instance, we may represent the action of agent 1 corresponding
to R{1} (w) = {w, u, v} by the valuation rep 11  rep 12 , the action of agent 1 corresponding
to {r, s} by rep 11  rep 12 , the action of agent 1 corresponding to {t, z} by rep 11  rep 12 ,
the action of agent 2 corresponding to {w, r, t} by rep 21  rep 22 and the action of agent 2
corresponding to {u, v, s, z} by rep 21  rep 22 .
S
Let Rm = jAGT Rjm be the set of all atomic propositions used to denote actions. Let
us define the following CP formula:
def

GRIDm =

V

xRm []((x

 hRm \ {x}ix)  (x  hRm \ {x}ix))

(4)

This formula enforces a CP model to be universal (over Rm ), that is, to contain all possible
valuations over Rm (recall Definition 2). A model that satisfies GRIDm is then interpreted
as a game form where each valuation of Rjm represents an action of player j.
10. See Lorini and Schwarzentrubers paper (2011) for a study of some decidable fragments of group STIT.

103

fiGrossi, Lorini, & Schwarzentruber

Example 4. For instance, if some world of a CP model M0 satisfies GRID2 , then the
skeleton of M0 should have the following form (we intentionally draw the skeleton of the
model M0 so that it looks like the model M):






|

{z

}

worlds where
rep 21 and rep 22
are true

|

{z

worlds where
rep 11 and rep 12 are true
worlds where
rep 11 and rep 12 are true
worlds where
rep 11 and rep 12 are true

}

worlds where
rep 21 and rep 22
are true

R{1}
R{2}

We now define a translation from LGSTIT to LCP (P) as follows:
tr2 (p) = p

for p  P

tr2 () = tr2 ()
tr2 (  ) = tr2 ()  tr2 ()
[
tr2 ([J : stit]) = [
Rjm ]tr2 ()
jJ

The translation tr2 should be parameterized by m. For notational convenience, in what
follows we write tr2 instead of tr2m leaving implicit the parameter m.
S
The set jJ Rjm represents all the atomic propositions used to represented actions of
the coalition J.
Example 5. For instance, with m = 2,
tr2 ([{1} : stit][{1, 2} : stit]p) = [{rep 11 , rep 12 }][{rep 11 , rep 12 , rep 21 , rep 22 }]p.
We then obtained the desired satisfiability-preservation result. The proof is given in
Appendix C.
Theorem 3. Let us consider a group STIT formula . Let m be an integer. Then the
following items are equivalent:
1.  is STIT-satisfiable in a STIT-model where each agent has at most 2m actions;
2.  is STIT-satisfiable in a STIT-model where each agent has exactly 2m actions;
3. GRIDm  tr2 () is CP-satisfiable.
104

fiThe Ceteris Paribus Structure of Logics of Game Forms

3.3 Atemporal Individual STIT
In this subsection, we consider the following fragment of STIT called atemporal individual
STIT 11 :
LISTIT (P, AGT ) :  ::= p |  | (  ) | [{j} : stit]
where p ranges over P and j ranges over AGT .
This fragment of STIT, axiomatized by Xu (1998), has the exponential finite model
property (see Lemma 7 in Balbiani et al., 2008b). Moreover, as the following theorem
highlights, it can be embedded in the logic CP.
Theorem 4. Let us consider a STIT formula  of the individual STIT fragment. Let m be
the length of . Then the following three items are equivalent:
1.  is STIT-satisfiable
2.  is STIT-satisfiable in a model where each agent has at most 2m actions;
3. GRIDm  tr2 () is CP-satisfiable.
Proof. 1  2 Consider a STIT formula  of the individual STIT fragment. If  is STITsatisfiable and m is the length of , then  is STIT-satisfiable in a model where there are
at most 2m worlds (see Lemma 7 in Balbiani et al., 2008b). This implies that there are at
most 2m actions in that model. The implications 2  3 and 3  1 come from Theorem
3.
Thanks to Theorem 4, we reduce the NEXPTIME-complete satisfiability problem of
individual STIT (Balbiani et al., 2008b) to the CP-satisfiability problem. As the reduction
is polynomial, we obtain the following lower bound complexity result for the CP-satisfiability
problem.
Corollary 2. The CP-satisfiability problem is NEXPTIME-hard.
3.4 Group STIT where Coalitions Are Nested
In this subsection we address the satisfiability problem of the fragment of CP consisting of
formulae  of LCP such that the sets of atomic propositions that appear in any operator [X]
occurring in  form a linear set of sets of atomic propositions. More formally, if [X] and [X 0 ]
are two operators occurring in  then either X  X 0 or X 0  X. For instance, the formula
[{p, q}](  [{p}][{p, q, r, s}]) belongs to the fragment because {p}  {p, q}  {p, q, r, s}.
On the contrary, the formula [{p}]p  [{q}]p is not an element of this fragment of CP.
We call the satisfiability problem of this fragment of CP the CP-nested satisfiability
problem. Due to the embedding proposed in Theorem 3 of STIT into CP, we provide the
following lower bound complexity result for the CP-nested satisfiability problem. The proof
is given in Appendix D.
Theorem 5. The CP-nested satisfiability problem is PSPACE-hard.
11. Some authors (e.g., Broersen, 2008; Wansing, 2006) use the term multi-agent STIT to designate the
logic where operators are of the form [{j} : stit]. Here we prefer to use the more explicit term individual
STIT as in Herzig and Schwarzentrubers work (2008).

105

fiGrossi, Lorini, & Schwarzentruber

The following theorem provides an upper bound complexity result for this fragment of
CP. The proof is given in Appendix E.
Theorem 6. The CP-nested satisfiability problem is in PSPACE.
This concludes our analysis of STIT logics via CP. In the next section we move to normal
coalition logic.
3.5 Normal Coalition Logic
We conclude this section on STIT by briefly mentioning a related system, normal coalition
logic. Normal coalition logic NCL was introduced by Broersen et al. (2007) to provide
an embedding in a normal modal logic of the influentialand non-normalcoalition logic
(Pauly, 2002). The embedding was based on a general simulation technique developed
by Gasquet and Herzig (1994) and showed for the first time how coalition logicwhich
had already been recognized as the fragment of ATL containing only the next operator
(Goranko, 2001)could actually be interpreted on very traditional structures such as Kripke
frames based on equivalence relations. NCL was further studied by Balbiani et al. (2008a).
Also NCL has a known atemporal variant, introduced and studied by Balbiani et al. (2008a)
and Lorini and Schwarzentruber (2011).
Two results on atemporal NCL from the literature are worth mentioning in this context.
First, Balbiani et al. (2008a, Thm. 38) show that the satisfiability problem for atemporal
NCL (when |AGT |  2) is NEXPTIME-complete, like CP; second, Lorini and Schwarzentruber (2011, Prop. 1) show that when the |AGT |  2, then atemporal STIT is embeddable
in atemporal NCL and vice versa, and that an embedding (in both directions) in the general
case is possible only by considerably restricting the syntax of LSTIT .

4. The Ceteris Paribus Structure of Coalition Logic of Propositional
Control
In this section we study the relationships between CP, atemporal bounded group STIT,
and another well-known game logic, the logic CLPC (coalition logic of propositional control ).12 Specifically, we show that CLPC can be embedded, preserving satisfiability, into
atemporal bounded group STIT and, by the fact that atemporal bounded group STIT
can be embedded into CP (Section 3.1), we indirectly show that CLPC can be embedded
into CP. To complete the picture we also provide a direct embedding from CLPC to CP.
This latter embedding is of particular interest to highlight the striking similarities between
the models of CP and of CLPC.
CLPC was introduced by van der Hoek and Wooldridge (2005) as a formal language
for reasoning about capabilities of agents and coalitions in multiagent environments. In this
logic the notion of capability is modeled by means of the concept of control. In particular, it
is assumed that each agent i is associated with a specific finite subset Pi of the finite set of
all propositions P. Pi is the set of propositions controlled by the agent i. That is, the agent
i has the ability to assign a (truth) value to each proposition Pi but cannot affect the truth
12. In Gerbrandys work (2006) generalizations of some of the assumptions underlying CLPC have been
studied. Here we only consider the original version of CLPC proposed by van der Hoek and Wooldridge.

106

fiThe Ceteris Paribus Structure of Logics of Game Forms

values of the propositions in P \ Pi . In the variant of CLPC studied by van der Hoek and
Wooldridge (2005) it is also assumed that control over propositions is exclusive, that is, two
agents cannot control the same proposition (i.e., if i 6= j then Pi  Pj = ). Moreover, it is
assumed that control over propositions is complete, that is, every proposition is controlled
by at least one agent (i.e., for every p  P there exists an agent i such that p  Pi ).
The preceding concepts and assumptions are precisely formulated in the following section, which illustrates the syntax and the formal semantics of CLPC.
4.1 Syntax and Semantics of CLPC
The language of CLPC is built from a finite set of atomic propositions P and a finite set
of agents AGT = {1, . . . , n}, and is defined by the following BNF:
LCLPC (P, AGT ) :  ::= p |  | (  ) | J 
where p ranges over P and J ranges over 2AGT . Operator J is called cooperation modality,
and the construction J  means that group J has the contigent ability to achieve .
Definition 5 (CLPC model). A model for CLPC is a tuple M = (P1 , . . . , Pn , X) where:
 P1 , . . . , Pn is a partition of P among the agents in AGT ;
 X  P is the set of propositions which are true in the initial state.
S
For every group of agents J  AGT , let PJ = iJ Pi be the set of atomic propositions
controlled by the group J. Moreover, for every group J  AGT and for every set of atomic
propositions X  P, let XJ = X  PJ be the set of atomic propositions in X controlled by
the group J. Sets XJ are called J-valuations.
Given a CLPC model M = (P1 , . . . , Pn , X), the truth conditions of CLPC formulae
are the following:
M |=CLPC p  p  X;
M |=CLPC   M 6|=CLPC ;
M |=CLPC     M |=CLPC  and M |=CLPC ;
M
M |=CLPC J   XJ0  PJ : M
XJ0 |=CLPC 
where M

L

XJ0 is the CLPC model (P1 , . . . , Pn , X 00 ) such that:
00
XAGT
\J = XAGT \J

XJ00 = XJ0
That is, J  is true at a given model M if and only if, the coalition J can change the truth
values of the atoms that it controls in such a way that  will be true afterwards (i.e., given
the actual truth-value combination of the atoms which are not controlled by J, there exists
a truth-value combination of the atoms controlled by J which ensures ).
Let us illustrate the CLPC semantics with an example.
107

fiGrossi, Lorini, & Schwarzentruber

Example 6. Let AGT = {1, 2, 3}, P = {p, q, r}, P1 = {p}, P2 = {q} and P3 = {r}.
Consider the CLPC model M = (P1 , P2 , , P3 , {r}). We have that:
M |=CLPC {1,2} ((p  q  r)  (p  q  r)).
0
Indeed, there exists a set of atoms X{1,2}
 P{1,2} controlled by {1, 2} such that
L 0
0
M X{1,2} |=CLPC ((p  q  r)  (p  q  r)). An example is X{1,2}
= {p}  P{1,2} , from
which,
(P
,
P
,
P
,
{p,
r})
|=
((p

q

r)

(p

q

r))
where
(P
1
2
3
1 , P2 , P3 , {p, r}) =
CLPC
L
M {p}.

4.2 Embedding CLPC into STIT
The aim of this section is to provide an embedding of CLPC into the variant of atemporal group STIT with bounded choices (atemporal bounded group STIT) that have been
presented in Section 3.1.
Let us provide the following STIT formulae which catpure four basic assumptions of
CLPC:
^
^
def
EXC + =
(h : stiti[{i} : stit]p  h : stiti[{j} : stit]p)
(5)
pP i,jAGT :i6=j

EXC

 def

=

^

^

(h : stiti[{i} : stit]p  h : stiti[{j} : stit]p)

(6)

pP i,jAGT :i6=j
def

COMPL =

^

_

[ : stit]([{i} : stit]p  [{i} : stit]p)

(7)

pP iAGT


def

GRID  =

^

h : stiti 

XP


^

p

pX

^

p

(8)

pP\X

Formulae EXC + and EXC  mean that control over atomic propositions in P is exclusive
(i.e., there is no proposition in P which can be forced to be true or false by more than one
agent), whereas formula COMPL means that exercise of control over atomic propositions in
P is complete (i.e., for every proposition in P there exists at least one agent who either forces
it to be true or forces it to be false). Finally, formula GRID  means that all the possible
truth-value combinations of the atomic propositions in P are possible. Note that EXC + ,
EXC  , COMPL and GRID  are well-formed STIT formulae because of the assumption that
the set P is finite.13
We define the following translation from LCLPC (P, AGT ) to LSTIT (P, AGT ):
tr3 (p) = p

for p  P

tr3 () = tr3 ()
tr3 (  ) = tr3 ()  tr3 ()
tr3 (J ) = hAGT \ J : stititr3 ()
The following theorem highlights that bounded group STIT embeds CLPC. The proof
is given in Appendix F.
13. This assumption is also made by van der Hoek and Wooldridge (2005).

108

fiThe Ceteris Paribus Structure of Logics of Game Forms

Theorem 7. Let m = |P|. Then, a CLPC formula  is CLPC-satisfiable if and only if
(EXC +  EXC   COMPL  GRID  )  tr3 () is satisfiable in a STIT model where each
agent has at most 2m actions.
As CP embeds atemporal bounded group STIT (Theorem 3 in Section 3.1), from Theorem 7 it follows that CP also embeds CLPC. Indeed, given a CLPC-satisfiable formula
, one can use the translation tr2 given in Section 3.1 in order to find a corresponding STIT
formula which is STIT-satisfiable. Then, one uses the preceding translation tr3 in order to
find a corresponding CP formula which is CP-satisfiable.
Corollary 3. Let m = |P|. Then, a CLPC formula  is CLPC-satisfiable if and only if
GRID m  tr2 ((EXC +  EXC   COMPL  GRID  )  tr3 ()) is CP-satisfiable.
4.3 Directly Embedding CLPC into CP
To complete the picture, we study here a direct embedding of CLPC into CP.
Definition 6 (From CLPC to CP models). Let M = (P1 , . . . , Pn , X) be a CLPC-model.
Define MCP = (W, V ) as follows:
 W = 2P ;
 V is such that V (p) = {w | p  w} for all p  P.
Intuitively, V is such that any truth-assignment on P is witnessed by exactly one
w  W and wX is the witness of the truth assignment represented by X (i.e., makes
all atoms in X true and the rest false). So MCP is a non-redundant universal CP model and
MCP , X is a pointed CP-model (Definition 2). Now define the following translation from
LCLPC (P, AGT ), and a partition P1 , . . . , Pn of P, to LCP (P):
tr4 (p) = p

for p  P

tr4 () = tr4 ()
tr4 (  ) = tr4 ()  tr4 ()
tr4 (J ) = hYJ itr4 ()
where YJ = 

S

jAGT

Pj (i.e., the atoms that are not controlled by anybody in J).

Theorem 8. Let M = (P1 , . . . , Pn , X) be a CLPC-model and   LCLPC (P, AGT ):
M |=CLPC   MCP , X |=CP tr4 ()
Proof. We proceed by induction on the syntax of . Base Trivial by the construction of
MCP (Definition 6). Step The cases for the Boolean connectives are straightforward. We
focus on the modal case:
M |=CLPC J   MCP , X |=CP hYJ itr4 ()
109

fiGrossi, Lorini, & Schwarzentruber

where YJ = 

S

jN

Pj . The case is proven by the following series of equivalences:

M |=CLPC J   XJ0  PJ : M

L

XJ0 |=CLPC 

Semantics of J
 XJ0  PJ : (P1 , . . . , Pn , XJ0  XAGT \J ) |=CLPC 
L
Definition of
 XJ0  PJ : MCP , XJ0  XAGT \J |=CP tr4 ()
Definition 6 and IH
 Y YJ X and MCP , Y |=CP tr4 ()
Definition 1
 MCP , X |=CP hYJ itr4 ()
Definition 3

This completes the proof.

5. The Ceteris Paribus Structure of Dynamic Logic of Propositional
Assignments
The dynamic logic of propositional assignments (DLPA) is the concrete variant of propositional dynamic logic (PDL) (Harel et al., 2000) in which atomic programs are assignments of
propositional variables to true or to false.14 The complexities of the model checking and of
the satisfiability problem for DLPA have been recently studied by Balbiani et al. (2013).
The starless version of DLPA was previously studied by van Eijck (2000) and recently
put to use by Herzig et al. (2011), who have shown that it embeds CLPC. In the next
section we study the relationship between CP and DLPA. Specifically, we provide a truthpreserving embedding of starless DLPA into CP as well as a truth-preserving embedding
of CP into DLPA.
DLPA, it has been argued by Herzig et al. (2011), represents a very general and
because of its direct link with PDLnatural formalism for reasoning about agency. The
results in this section, we argue, point to a similar status for CLPC, modulo the use of the
Kleene star about which we will comment in Section 7.

14. Programs in standard PDL are abstract as they are just letters a, b, . . . from some alphabet.

110

fiThe Ceteris Paribus Structure of Logics of Game Forms

5.1 Syntax and Semantics of DLPA
The language of DLPA is built from a finite set of atomic propositions P and is defined
by the following BNF:
 ::= +p | p | ;  |    |   | ?
LDLPA (P) :  ::= p |  | (  ) | hi
We will use p to denote (+p  p).
Definition 7 (DLPA model). A DLPA-model is a set X  P.
That is, a DLPA model is a propositional valuation.
The semantics is given by induction as follows:
 J+pK = {(X, X 0 ) | X 0 = X  {p}};

 JpK = {(X, X 0 ) | X 0 = X  {p}};

 J;  0 K = JK  J 0 K;

 J   0 K = JK  J 0 K;
S
 J  K = kN JKk ;
 J?K = {(X, X) | X  JK};
 JpK = {X | p  X};
 JK = 2P  JK;
 J  K = JK  JK;

 JhiK = {X | there exists X 0 s.th. (X, X 0 )  JK and X 0  JK}.

We write X |=DLPA  for X  JK. We will refer to the fragment of DLPA without 
operator as starless DLPA.
5.2 Some Properties of DLPA
Like in PDL, program constructors ; ,  and ? are eliminable:
Fact 2. The following are DLPA validities:
h;  0 i  hih 0 i
h   0 i  hi  h 0 i
h?i    
However, unlike in PDL, the  operator is also eliminable in DLPA:
Fact 3 (Balbiani et al., 2013). For every   LCLPC (P) there exists 0  LCLPC (P) such
that   0 is DLPA valid.
111

fiGrossi, Lorini, & Schwarzentruber

5.3 Embedding Starless DLPA into CP
By a direct adaptation of Definition 6 above, a DLPA model X can be translated to the
pointed CP model MCP , X defined in Definition 6. Now fix the following translation:15
tr5 (p) = p

for p  P

tr5 () = tr5 ()
tr5 (  ) = tr5 ()  tr5 ()
tr5 (h+pi) = hP \ {p}i(p  tr5 ())
tr5 (hpi) = hP \ {p}i(p  tr5 ())
Notice that the translation from starless DLPA to CP does not need to include the cases
for sequential composition (;), nondeterministic choice () and test (?) since they are
eliminable in DLPA. Therefore, it guarantees that in CP we could do the same kind of
reasoning as in starless DLPA:
Theorem 9. Let X be a DLPA model and  belong to the language of starless DLPA:
X |=DLPA   MCP , X |=CP tr5 ()
Proof. We proceed by induction on the syntax of . Base Trivial by the construction of
MCP (Definition 6). Step The cases for the Boolean connectives are straightforward. We
focus on the modal case:
X |=DLPA h+pi  MCP , X |=CP hP \ {p}itr5 ()
The case is proven by the following series of equivalences:
X |=DLPA h+pi  X  {p} |=DLPA 

Semantics of h+pi

 Y P{p} X : MCP , Y |=CP tr5 () Definition 1 and IH
 MCP , X |=CP hP \ {p}itr5 ()

Definition 3

The case for hpi is identical.
5.4 Embedding of CP into Starless DLPA
The above subsection has shown that the semantics of CP and DLPA are closely related.
However, DLPA has a built-in assumption to the effect that any valuation (i.e., set of
atoms) is feasible. From the point of view of CP this means that DLPA actually works with
universal models (cf. Definition 2). Here, we establish an embedding from CP interpreted
on universal models,16 to starless DLPA. Consider the following translation from LCP (P)
15. It must be observed that for this translation to work P should be finite. If not, then {p} is co-finite
and {p} would not belong to LCP .
16. This is the class of models one can axiomatize by extending the axiom system of Figure 2 with axioms
of form hi where  ranges over propositional formulae encoding one single valuation.

112

fiThe Ceteris Paribus Structure of Logics of Game Forms

into LDLPA (P):
tr7 (p) = p

for p  P

tr7 () = tr7 ()
tr7 (  ) = tr7 ()  tr7 ()
tr7 (hXi) = hp1 i . . . hpn itr7 ()
where p1 , . . . , pn is an enumeration of the atoms in P \ X.17 We have the following result:
Theorem 10. Let M be an CP-model and   LCP (P):
M, w |=CP   w |=DLPA tr7 ()
Proof. We proceed by induction on the syntax of . Base Trivial by the construction of
MCP (Definition 6). Step The cases for the Boolean connectives are straightforward. We
focus on the modal case:
M, w |=CP hXi  w |=DLPA hp1 i . . . hpn itr7 ()
where p1 , . . . , pn is an enumeration of the atoms in P\X. The case is proven by the following
series of equivalences:
M, w |=CP hXi  w0 X w s.t. M, w0 |=CP 

Definition 1

 w0 X w s.t. w0 |=DLPA tr7 ()

IH

 w0 s.t. w0 = (. . . (wF{p1 })F . . .)F{pn }
and w0 |=DLPA tr7 ()
 w |=DLPA hp1 i . . . hpn itr7 ()

Definition 1
Semantics of DLPA

where F  {, }, and p1 , . . . , pn is an enumeration of the atoms in P  X.
From Theorem 10 we can obtain as corollary a satisfiability-preserving embedding of CP
in DLPA. Fix the formula18


^
^
^
def
GRID =
hi 
p
p
(9)
XP

pX

pP\X

which, it is easy to see, forces a CP-model to contain all propositional valuations from P.
We then have:
Corollary 4. Let   LCP (P). Then, tr7 () is DLPA satisfiable iff GRID   is CP
satisfiable.
This concludes the presentation of the embeddings of STIT, CLPC and DLPA into
CP (Figure 1). In the following section we take stock commenting on the technical results
presented and drawing links with related work.
17. Again, it is crucial that P be finite.
18. Cf. Formula (8).

113

fiGrossi, Lorini, & Schwarzentruber

6. Discussion and Related Work
In this section we provide a summary of the results presented and discuss their implications.
We also position our work with respect to existing contributions in the literature on logic
and games.
6.1 Discussion
The paper has introduced a modal logic that arises naturally by interpreting modal operators on the equivalence relations induced by finite sets of propositional atoms. This logic,
called CP, has been axiomatized and embedded (exponentially) into S5. CP has then been
used as a tool to compare three logics of one-shot strategic interactionatemporal STIT,
the coalitional logic of propositional control CLPC and the dynamic logic of propositional
assignments DLPA. All these logics have been embedded into CP.
These embeddings (recall Figure 1) put us in the position to to draw the following
general remarks.
 It appears to be justified to talk about a common ceteris paribus structure underpinning several of the main logics of game forms as they are all embeddable into CP.
This illustrates a striking uniformity in the logical tools needed for expressing choice
and effectivity of games in logical languages, and CP appears to offer a well-suited
abstraction for systematizing existing formalisms.
 Furthermore, all these logics are embeddable in S5 (either directly or via CP), highlighting the fact that in order to reason about choice and effectivity in games one
essentially reasons over suitably defined partitions of the state space.
 New interesting and so far unexplored embeddings are obtainable as corollaries. In
particular, it follows from our results that atemporal STIT on bounded models can be
embedded into starless DLPA via CP.
 Via logic S5, one can easily show that embeddings in the other directions are also
possible (albeit at exponential cost), so that all arrows in Figure 1 may actually
be made symmetric. S5 embeds CP, but it is also directly embeddable in all the
mentioned logic, as they all contain the universal modality, in the following forms: hi
in CP, hAGT \  : stiti in atemporal STIT, AGT in CLPC and hp1 i . . . hpn i in
DLPA (where p1 , . . . , pn is an enumeration of P).
All in all our results unveil a strikingand to some extent unexpecteduniformity
underpinning all the formalisms we considered.
6.2 Related Work
We review two sets of related contributions.
6.2.1 CP and Modal Ceteris Paribus Logics
There are two logics in the modal logic literature that are strictly related to CP: release
logic, and the logic of ceteris paribus preference.
114

fiThe Ceteris Paribus Structure of Logics of Game Forms

Release logic is a relatively less known formalism in the landscape of modal logics for
artificial intelligence. It has been introduced and studied by Krabbendam and Meyer (2003,
2000) in order to provide a modal logic characterization of a general notion of irrelevancy.
Modal operators in release logic are S5 operators indexed by subsets of a finite set Iss of
abstract elements denoting the issues that are taken to be irrelevant, or that can be released,
while evaluating the formula in the scope of the operator. A release model is therefore a tuple
(W, {rX }XIss , V ) where all rX are equivalence relations with the additional constraint
that if X  Y then rX rY , that is, by releasing more issues one obtains a more coarse
equivalence relation. Formally, this is the semantics of release operators:
M, w |= X   w0  W : w rX w0 and M, w0 |= 
where X  Iss and M = (W, {rX }XIss , V ).
One can easily observe that, by Fact 1 (clause (ii)), CP models are release models where
Iss = P and where the release relation rX =X . Vice versa, for Iss = P, not all release
models are CP models. As a consequence, the logic of hXi operators in CP is a conservative
extension of the logic of X release operators.
Preference logic has also long been concerned with so-called ceteris paribus preferences,
that is, preferences incorporating an all other things being equal condition. A first logical
analysis of such preferences dates back to Von Wrights work (1963), where dyadic modal
operators are studied representing statements like  is preferred to , ceteris paribus. More
recently, van Benthem et al. (2009) studied a modal logic of ceteris paribus preferences based
on standard unary modal operators. Leaving the preferential component of such logic aside,
its ceteris paribus fragment concerns sentences of the form hi whose intuitive meaning
is there exists a state which is equivalent to the current (evaluation) state with respect to
all the formulae in the (finite) set  and which satisfies , where the formulae in  are not
only atoms but formulae from the full language. Logic CP is, therefore, a fragment of the
ceteris paribus logic studied by van Benthem et al. where  is allowed to consist only of a
finite set of atoms.
6.2.2 Other Contributions to a Systematization of Game Logics
Despite the wealth of approaches that can be found in the literature on game logics, only very
few papers have attempted some form of comparison spanning across several formalisms,
and attempting some kind of systematization. Two in particular are worth mentioning here.
The most recent one is Herzigs work (2014), which provides a very comprehensive
analysis of the field by classifying the existing logics depending on what aspects of agency
(e.g., whether they capture strategic interaction or not, whether they handle uncertainty
and epistemic attitudes) they capture in their languages. The logics we considered in this
paper, for instance, would fall into the strategic and no uncertainty categories according to
the terminology used by Herzig. This analysis is conceptual and predominantly driven by
syntactic features of the logics, that is, by the theorems about agency that they enable.
An earlier work which is methodologically closer to ours in its focus on semantics is
Goranko and Jamrogas work (2004). That paper compares ATL, its epistemic variant ATEL
(epistemic ATL, van der Hoek & Wooldridge, 2003) and ECL (extended CL,19 Pauly, 2001)
19. This is CL extended with a Kleene star operator.

115

fiGrossi, Lorini, & Schwarzentruber

providing constructive transformations between their models and establishing, in particular,
that ATL subsumes ECL and that ATEL can be embedded into ATL preserving satisfiability.

7. Conclusions and Future Work
The paper has provided a unification of the, to date, most influential logics for the representation of one-shot strategic interactionatemporal STIT, CLPC and starless DLPA
under the ceteris paribus abstraction formalized in logic CP.
One natural future research direction presents itself, which consists in extending logic
CP with a Kleene star operator, in analogy with DLPA. We conjecture DLPA to be
embeddable into CP with Kleene star and it remains to be investigated whether such new
logic could play the same unifying role for logics of extensive form games, that we show it
plays in the atemporal case. This will complete the systematization program initiated by
the current paper.
Related to the above question, but in a somewhat more technical vein, we have shown
in this paper that CP and atemporal individual STIT have the same high complexity of
the satisfiability problem when we consider the whole languages. The study of efficient
syntactic fragments is then important and we intend to pursue this study in parallel both
for CP and for atemporal individual STIT. We expect that several complexity results about
fragments of atemporal STIT may be transferred to fragments of CP and viceversa.

Acknowledgments
The authors wish to thank the anonymous reviewers of JAIR for their thorough and helpful
comments. The paper was greatly improved thanks to their feedback.

Appendix A. Proof of Claim () in Theorem 1
Proof. One can show that REP is derivable for every operator [X] as follows: first one shows
that each [X] operator satisfies the Axiom K and the rule of necessitation N.
We provide here below the syntactic proofs of these two claims. For notational convenience we use the following abbreviation:


def
Yb = 


^

p

pY

116

^
pX\Y

p

fiThe Ceteris Paribus Structure of Logics of Game Forms

1.

Derivation of K for [X]:


^ 
`CP [X](  ) 
Yb  [] Yb  (  )
Y X

2.

by Reduce




`CP Yb  (  )  (Yb  )  (Yb  )
by P

3.

^ 

`CP





^ 
Yb  [] Yb  (  ) 
Yb  [] (Yb  )  (Yb  )

Y X

Y X

4.

by P, 2 and rule RM for [] (i.e., if `    then ` []  [])




^ 
^ 
`CP
Yb  [] (Yb  )  (Yb  ) 
Yb  [](Yb  )  [](Yb  )

5.

by K and P





^ 
^ 
Yb  [](Yb  )  [](Yb  )  
Yb  [] Yb  
`CP

Y X

Y X

Y X

Y X




^ 



Yb  [] Yb  




Y X

by P
6.

^ 

`CP (





^ 
Yb  [] Yb   
Yb  [] Yb   )  ([X]  [X])

Y X

Y X

by Reduce
7.

`CP [X](  )  ([X]  [X])
from 1 and 3-6
Derivation of N for [X]:

1.

`CP 
hypothesis

2.

`CP []

3.

from 1 by N for []


^
`CP
[] Yb  
Y X

4.

from 2 by the S5 theorem []  [](  )


^ 
`CP
Yb  [] Yb  
Y X

from 3 by P
5.

`CP [X]
from 4 by Reduce and MP

117

fiGrossi, Lorini, & Schwarzentruber

Then one proves that REP is derivable by an induction routine analogous to the one used
by Chellas (1980, Thm. 4.7).

Appendix B. Proof of Theorem 2
Let 0 be a CP-formula. We have equivalence between 0 is CP-satisfiable and tr(0 ) is
S5-satisfiable.
Proof.  Suppose that there exists a CP-model M = (W, V ) and a world w  W such
that M, w |=CP 0 . Let V 0 be the valuation V modified such that p is true in exactly all
worlds u such that M, u |=CP . Let M0 be the S5-model defined as (W, V 0 ). A standard
induction provides that M0 , w |=S5 tr(0 ). More precisely, let us prove by induction that
for all   SF (0 ), we have M, u |=CP  iff M0 , u |=S5 tr1 () for all u  W .
 Propositional case: for all atomic propositions p, we have M, u |=CP p iff u  V (p) iff
u  V 0 (p) iff M0 , u |=S5 tr1 (p).
 Negation: M, u |=CP  iff M, u 6|=CP  iff M0 , u 6|=S5 tr1 () iff M0 , u |=S5 tr1 ().
 Conjunction: M, u |=CP    iff M, u |=CP  and M, u |=CP  iff M0 , u |=S5 tr1 ()
and M0 , u |=S5 tr1 () iff M0 , u |=S5 tr1 (  ).
 Case of a formula of the form [X]:
M, u |=CP [X]
iff for all v  W , u VX v implies M, v |=CP 
iff for all v  W , u VX v implies M0 , v |=S5 p
(by construction of V 0 )
iff M0 , u |=S5 tr1 ([X])
V
By construction of V 0 , we have M0 , w |=S5 SF (0 ) (p  tr1 ()). As M, w |=CP 0 we
have M0 , w |=S5 tr1 (0 ) thus M0 , w |=S5 p0 by construction of V 0 . As a result, M0 , w |=S5
tr(0 ).
 Suppose that there exists a S5 model M0 = (W, V ) and a world w  W such that
0
M , w |=S5 tr(0 ). We define the relations X where X  P as in the Definition 1. Let
M be the CP-model equal to (W, V ). A standard induction provides that M, w |=CP 0 .
More precisely, let us prove by induction that for all   SF (0 ), we have M, u |=CP  iff
M0 , u |=S5 tr1 () for all u  W .
 Propositional case: for all atomic propositions p, we have M, u |=CP p iff u  V (p) iff
u  V 0 (p) iff M0 , u |=S5 tr1 (p).
 Negation: M, u |=CP  iff M, u 6|=CP  iff M0 , u 6|=S5  iff M0 , u |=S5 .
 Conjunction: M, u |=CP    iff M, u |=CP  and M, u |=CP  iff M0 , u |=S5 tr1 ()
and M0 , u |=S5 tr1 () iff M0 , u |=S5 tr1 (  ).
118

fiThe Ceteris Paribus Structure of Logics of Game Forms

 Case of a formula of the form [X]:
M, u |=CP [X]
iff for all v  W , u VX v implies M, v |=CP 
iff for all v  W , u VX v implies M0 , v |=S5 tr1 ()
(by induction)
iff for all v  W , u VX v implies M0 , v |=S5 p
(because, as M0 , w |=S5 tr(0 ) we have that
for all v  W , M0 , v |=S5 (p  tr1 ()))
iff M0 , u |=S5 tr1 ([X])
As M0 , w |=S5 tr(0 ), we have that M0 , w |=S5 (p0  tr1 (0 )) and M0 , w |=S5 p0 . Thus,
M0 , w |=S5 tr1 (0 ). Hence M, w |=CP 0 .

Appendix C. Proof of Theorem 3
Let us consider a group STIT formula . Let m be an integer. Then the following items
are equivalent:
1.  is satisfiable in a model where each agent has at most 2m actions;
2.  is satisfiable in a model where each agent has exactly 2m actions;
3. GRIDm  tr2 () is CP-satisfiable.
Proof. 1  2 Let M0 = (W 0 , {RJ0 }JAGT , V 0 ) be a STIT-model with at most 2m actions
per agent and w  W 0 such that M0 , w |=STIT . We construct a sequence of models
Mj = (W j , {RJj }JAGT , V j ) such that all agents j 0  {1, . . . , j} have exactly 2m actions
in Mj and such that Mj is bisimilar to Mj1 . We construct Mj from Mj1 as follows.
j1
j1
j1
Let R{j}
(w1 ), . . . , R{j}
(wk ) be an enumeration of R{j}
- classes (that is, actions for agents
j1
j), where k  2m . Let (Copy` )`{k+1,...,2m } be a family of disjoint copies of R{j}
(w1 ).
We write uCv to say that u = v or v is a copy of u or u is a copy of v. The model
Mj = (W j , {RJj }JAGT , V j ) is defined as follows:
S
 W j = W j1  `{k+1,...,2m } Copy` ;
j
j1
 R{j}
= R{j}


S

`{k+1,...,2m } {(u, v)

| u, v  Copy` }

j
j1
0
 R{j
0 } = C  R{j 0 }  C for all j 6= j;

 V j (p) = {v  W j | vCu and u  V j1 (p)}.
119

fiGrossi, Lorini, & Schwarzentruber

This construction makes that Mj and Mj1 are bisimilar and by induction we have that
all agents j 0  {1, . . . , j} have exactly 2m actions in Mj . Finally, we have Mn , w |=STIT 
and each agent has exactly 2m actions in Mn .
23
Let
us
consider
a
STIT
model
m
M = (W, {RJ }JAGT , V ) in which each agent has exactly 2 actions. Let w  W be
such that M, w |=STIT . For all j  AGT , let R{j} (wj,1 ), . . . , R{j} (wj,2m ) be an enumeration of all R{j} -classes in M. Let us extend V such that in all worlds of R{j} (wj,i ) the
valuations of the atomic propositions in Rj correspond to the binary digits in the binary
representation of i. For all d  {1, . . . , m}:
[
R{j} (wj,i )
(10)
V (rep jd ) =
i=1..2m | the dth digit of i is 1

Independence of agents in M ensures that M, w |=CP GRIDm . We prove that M, u |=CP
tr2 () iff M, u |=STIT  by induction over all subformulae  of .
3  1 Let M = (W, V ) be a CP-model and w  W such that M, w |=CP GRIDm 
tr2 (). We define RJ =SjJ Rj . The resulting Kripke-model M0 = (W, {RJ }JAGT , V )
is a STIT-model where each agent has exactly 2m actions. In particular, it satisfies the
independence of agents because M, w |=CP GRIDm . We prove that M, u |=CP tr2 () iff
M0 , u |=STIT  by induction over all subformulae  of .

Appendix D. Proof of Theorem 5
The CP-nested satisfiability problem is PSPACE-hard.
Proof. We reduce the satisfiability problem of STIT-formulae where coalitions are taken
from a linear set of coalitions, which is PSPACE-complete (Schwarzentruber, 2012) to the
CP-nested satisfiability problem: we use the translation tr2 of Subsection 3.1. Let  be a
STIT-formula. We have  is STIT-satisfiable iff tr2 () is CP-satisfiable.
 As it stated by Schwarzentruber (2012), the STIT where coalitions are taken from
a linear set of coalitions has the exponential model property. So the result of Theorem 3 is
true. Hence if  is STIT-satisfiable then GRIDm  tr2 () is CP-satisfiable (where m is the
length of ). Hence tr2 () is CP-satisfiable.
 Suppose that there exists a CP-model M = (W, V ) and w  W such that M, w |=
tr2 (). We define RJ =SjJ . Then the STIT model M0 = (W, (RJ )J , V ) is such that
M0 , w |= . Remark that we do not need to specify all the relations RJ for all J. As long
as RJ is specified for all coalitions J that appear in  and that RJ  RJ 0 if J 0  J, we can
extend the Kripke model M0 to a completely specified STIT-model also satisfying .20

Appendix E. Proof of Theorem 6
The CP-nested satisfiability problem is in PSPACE.
Proof. We reduce the CP-nested satisfiability problem to the satisfiability problem of STIT
where coalitions are taken from a linear set of coalitions. We define AX = {jp such that p  X}
20. See Schwarzentrubers paper (2012) for more details about this construnction.

120

fiThe Ceteris Paribus Structure of Logics of Game Forms

where jp is a fresh agent corresponding to the atomic proposition p. Let us define the following translation:
 tr(p) = p;
 tr() = tr();
 tr(  ) = tr()  tr0 ();
 tr([X]) = [AX : stit]tr().
Let us consider a fixed CP-formula . We recall that a signature X appears in  if there
exists a formula  such that hXi  SF (). We have also to define the following formula
V
CON T ROL = [ : stit] X appearing in 
V
pX (p  [AX : stit]p)  (p  [AX : stit]p).
tr()  CON T ROL is a STIT-formula which is computable in polynomial time and which
satisfies the condition of nesting over groups (i.e., for any two operators [J : stit] and
[J 0 : stit] occurring in the formula either J  J 0 or J 0  J). We also have that  is
CP-satisfiable iff tr()  CON T ROL is satisfiable in a STIT-model.
 Suppose that there exists an CP-model M = (W, V ) and w  W such that
M, w |=CP . We define RAX =X . Then the STIT model M0 = (W, (RAX )X , V ) is
such that M0 , w |=STIT tr()  CON T ROL. Remark that we do not need to specify all
the relations RJ for all J. As long as RJ is specified for all coalitions J that appear in
tr()  CON T ROL and that RJ  RJ 0 if J 0  J, we can extend the Kripke model M0 to
a completely specified STIT-model also satisfying tr()  CON T ROL.21

Suppose
that
there
exists
a
STIT-model
M0 = (W, (RAX )X , V ) and a world w  W such that M0 , w |=STIT tr()  CON T ROL.
As M0 , w |= CON T ROL, we have X = RAX . This is the reason why we define M =
(W, {X }X2P , V ). Consequently, we have M, w |=CP .

Appendix F. Proof of Theorem 7
Let m = |P|. Then, a CLPC formula  is CLPC satisfiable if and only if (EXC + 
EXC   COMPL  GRID  )  tr3 () is satisfiable in a STIT model where each agent has at
most 2m actions.
Proof. Let us suppose |P| = m.
 Let M = (P1 , . . . , Pn , X  ) be a CLPC model such that M |=CLPC , where
P1 , . . . , Pn is a partition of P among the agents in AGT .
We build the STIT
model M = (W, {RJ }JAGT , V ) as follows:
 W = {X : X  P},
 for all J  AGT and for all X, X 0  W , (X, X 0 )  RJ0 if and only if XJ = XJ0 ,
21. Again see Schwarzentrubers paper for more details about this construction.

121

fiGrossi, Lorini, & Schwarzentruber

 for all p  P and for all X  W , X  V (p) if and only if p  X,
S
where for any X  P and for any J  AGT , XJ = X  PJ (with PJ = iJ Pi ). The size
of M is 2m . It follows that the number of RAGT -equivalence classes (alias joint actions) is
equal or lower than 2m . Consequently, the number of actions for every agent is bounded by
2m .
It is straightforward to prove that for all X  W we have M, X |=STIT EXC + 
EXC   COMPL  GRID  . Moreover, by induction on the structure of , we prove that
M, X  |=STIT tr3 (). The only interesting case is  = J :
M |=CLPC J  iff there exists XJ  PJ s.t. M

M

XJ |=CLPC 

iff there exists XJ  PJ s.t.

M, XJ  XAGT
\J |=STIT tr3 () (by I.H.)

iff M, X  |=STIT hAGT \ J : stititr3 ()
 Let M = (W, {RJ }JAGT , V ) be a STIT model where the number of actions for
every agent is bounded by 2m and w0  W such that M, w0 |=STIT (EXC +  EXC  
COMPL  GRID  )  tr3 ().
For any i  AGT , let



M, v |= [{i} : stit]p or
Ctrl i = p  P : v  W,


M, v |= [{i} : stit]p







be the set of atoms in P controlled by agent i. For any J  AGT , let Ctrl J =

S

iJ

Ctrli .

Lemma 3. For all J  AGT , X  P, X  X and w  W we have:
(i) if CtrlJ = X then CtrlAGT \J = P \ X,
V
V
(ii) if M, w |=STIT p+ p  p p and CtrlJ = X then, for all v  RJ (w), we have
X V
X
V
M, v |=STIT p+ p  p p,
X

X

0
(iii) if CtrlJ = X then, for all P\X
 P\X, there exists v  RJ (w) such that M, v |=STIT
V
V
p

p.
0+
0
p
p
P\X

P\X

+

where for any X  P and for any X  X, X
= X and X
= X \ X .

Proof. (i) Let us suppose that p 6 CtrlJ . We are going to prove that p  CtrlAGT \J .
From p 6 CtrlJ it follows that for all w  W we have M, v |=STIT p for some v  RJ (w).
This implies that for all i  J and for all w  W we have M, w |=STIT [{i} : stit]p 
[{i} : stit]p. From M, w0 |=STIT COMPL it follows that there is i  AGT \ J such
that M, w |=STIT [{i} : stit]p  [{i} : stit]p for all w  W . The latter implies that
p  CtrlAGT \J . The other direction (i.e., p  CtrlJ implies p 6 CtrlAGT \J ) follows from
M, w0 |=STIT EXC +  EXC  .
122

fiThe Ceteris Paribus Structure of Logics of Game Forms

(ii) Let us suppose that M, w |=

V

+
pX

p

V


pX

p and CtrlJ = X. By the fact

+
that relations RJ are reflexive, it follows that, for all p  X
, there exists i  J such that

M, w |=STIT [{i} : stit]p and for all p  X there exists i  J such that M, v |=STIT [{i} :
+
stit]p. From the latter it follows that for all p  X
we have M, w |=STIT [J : stit]p and

for all p  V
we
have
M,
v
|=
[J
:
stit]p.
Therefore,
for all v  RJ (w), we have
STIT
X
V
M, v |=STIT p+ p  p p.
X

X

0
 P\X
(iii) Let us suppose that CtrlJ = X and let us consider an arbitrary P\X

and w  W .VFrom M, wV
|=
GRID
it
follows
that
there
exists
v

W
such
that
0
STIT
M, v |=STIT p0+ p  p0 p. By item (ii), the latter implies that there exists
P\X
P\X
V
V
v  W such that M, v |=STIT [AGT \J : stit]( p0+ p p0 p). From the constraint
P\X

P\X

of
V independence
V of agents it follows that there exists v  RJ (w) such that M, v |=STIT
p

0+
p
p 0 p.
P\X

P\X

We transform the STIT model M in a CLPC model M = (P1 , . . . , Pn , X  ) as follows:
 for all p  P, p  X  if and only if w0  V (p),
 for all p  P and for all i  AGT , p  Pi if and only if p  Ctrli .
By the item (i) of Lemma 3 it is easy to check that M is indeed a CLPC model. In
particular, P1 , . . . , Pn is a partition of P among the agents in AGT .
By induction on the structure of  and by using Lemma 3 it is straightforward to prove
that M |=CP . The only interesting case is  = J :
M, w0 |=STIT hAGT \ J : stititr3 ()
iff M, v |=STIT tr3 () for some v  RAGT \J (w0 )
iff there exists XJ  PJ s.t.

(P1 , . . . , Pn , XJ  XAGT
\J ) |=CP 

(by I.H., and items (ii) and (iii)
of Lemma 3)
iff M |=CP J 
This completes the proof.

References
Alur, R., Henzinger, T., & Kupferman, O. (2002). Alternating-time temporal logic. Journal
of the ACM, 49, 672713.
Areces, C., & Ten Cate, B. (2006). Hybrid logics. In Blackburn, P., van Benthem, J., &
Wolter, F. (Eds.), Handbook of Modal Logic, pp. 821868. Elsevier.
Balbiani, P., Gasquet, O., Herzig, A., Schwarzentruber, F., & Troquard, N. (2008a). Coalition games over kripke semantics. In Degremont, C., Keiff, L., & Ruckert, H. (Eds.),
Festschrift in Honour of Shahid Rahman, pp. 112. College Publications.
123

fiGrossi, Lorini, & Schwarzentruber

Balbiani, P., Herzig, A., & Troquard, N. (2008b). Alternative axiomatics and complexity
of deliberative stit theories. Journal of Philosophical Logic, 37 (4), 387406.
Balbiani, P., Herzig, A., & Troquard, N. (2013). Dynamic logic of propositional assignments:
A well-behaved variant of PDL. In Proceedings of the 28th ACM/IEEE Symposium
on Logic in Computer Science (LICS 2013), pp. 143152. IEEE Computer Society.
Belnap, N., Perloff, M., & Xu, M. (2001). Facing the future: agents and choices in our
indeterminist world. Oxford University Press, USA.
Blackburn, P., de Rijke, M., & Venema, Y. (2001). Modal Logic. Cambridge University
Press, Cambridge.
Broersen, J. (2008). A complete STIT logic for knowledge and action, and some of its
applications. In Proceedings of the 6th International Workshop on Declarative Agent
Languages and Technologies (DALT 2008), Vol. 5397 of LNCS, pp. 4759. SpringerVerlag.
Broersen, J., Herzig, A., & Troquard, N. (2005). From coalition logic to STIT. In Lomuscio,
A., de Vink, E., & Wooldridge, M. (Eds.), Proceedings of the Third International
Workshop on Logic and Communication in Multi-agent Systems (LCMAS05), pp.
2335.
Broersen, J., Herzig, A., & Troquard, N. (2006). Embedding alternating-time temporal logic
in strategic STIT logic of agency. Journal of Logic and Computation, 16 (5), 559578.
Broersen, J., Herzig, A., & Troquard, N. a. (2007). A normal simulation of coalition logic
and an epistemic extension. In Samet, D. (Ed.), Proceedings TARK07, pp. 92101.
ACM Press.
Chellas, B. F. (1980). Modal Logic. An Introduction. Cambridge University Press, Cambridge.
Dunne, P., van der Hoek, W., Kraus, S., & Wooldridge, M. (2008). Cooperative boolean
games. In Proceedings of AAMAS 2008, pp. 10151022. ACM.
Gabbay, D. M., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2003). Many-dimensional
modal logics: theory and applications. Elsevier.
Gasquet, O., & Herzig, A. (1994). Translating non-normal modal logics into normal modal
logics.. In Jones, A., & Sergot, M. (Eds.), Proceedings of the International Workshop
on Deontic Logic in Computer Science (DEON94).
Gerbrandy, J. (2006). Logics of propositional control. In Proceedings of AAMAS06, pp.
193200. ACM.
Goldblatt, R. (1992). Logics of Time and Computation. CSLI.
Goranko, V. (2001). Coalition games and alternating temporal logics. In Proceedings of
the 8th conference on theoretical aspects of rationality and knowledge (TARK01), pp.
259272.
Goranko, V., & Jamroga, W. (2004). Comparing semantics of logics for multi-agent systems.
Synthese, 139, 241280.
124

fiThe Ceteris Paribus Structure of Logics of Game Forms

Goranko, V., Jamroga, W., & Turrini, P. (2013). Strategic games and truly playable effectivity functions. Journal of Autonomous Agents and Multi-Agent Systems, pp.
288314.
Harel, D., Kozen, D., & Tiuryn, J. (2000). Dynamic Logic. MIT Press.
Harrenstein, P., van der Hoek, W., Meyer, J., & Witteveen, C. (2001). Boolean games. In
van Benthem, J. (Ed.), Proceedings of TARK01, pp. 287298. Morgan Kaufmann.
Herzig, A. (2014). Logics of knowledge and action: A critical analysis and challenges. Journal
of Autonomous Agents and Multi-Agent Systems, DOI: 10.1007/s10458-014-9267-z.
Herzig, A., Lorini, E., Moisan, F., & Troquard, N. (2011). A dynamic logic of normative
systems. In Walsh, T. (Ed.), Proceedings of the Twenty-Second International Joint
Conference on Artificial Intelligence (IJCAI 2011), pp. 228233. AAAI Press.
Herzig, A., & Schwarzentruber, F. (2008). Properties of logics of individual and group
agency. Advances in modal logic, 7, 133149.
Horty, J. F. (2001). Agency and Deontic Logic. Oxford University Press, Oxford.
Krabbendam, J., & Meyer, J. (2003). Contextual deontic logics. In McNamara, P., &
Prakken, H. (Eds.), Norms, Logics and Information Systems, pp. 347362, Amsterdam. IOS Press.
Krabbendam, J., & Meyer, J. (2000). Release logics for temporalizing dynamic logic, orthogonalising modal logics. In Barringer, M., Fisher, M., Gabbay, D., & Gough, G.
(Eds.), Advances in Temporal Logic, pp. 2145. Kluwer Academic Publisher.
Lorini, E., & Schwarzentruber, F. (2011). A logic for reasoning about counterfactual emotions. Artificial Intelligence, 175 (3-4), 814847.
McCann, H. J. (1974). Volition and basic action. The Philosophical Review, 83, 451473.
Moulin, H., & Peleg, B. (1982). Cores of effectivity functions and implementation theory.
Journal of Mathematical Economics, 10, 115145.
Osborne, M. J., & Rubinstein, A. (1994). A Course in Game Theory. MIT Press.
OShaughnessy, B. (1974). Trying (as the mental pineal gland). The Journal of Philosophy,
70, 365386.
Pauly, M. (2001). A logical framework for coalitional effectivity in dynamic procedures.
Bulletin of Economic Research, 53 (4), 305324.
Pauly, M. (2002). A modal logic for coalitional power in games. Journal of Logic and
Computation, 12 (1), 149166.
Schwarzentruber, F. (2012). Complexity results of STIT fragments. Studia logica, 100 (5).
Tseitin, G. (1968). On the complexity of derivation in propositional calculus.. In Structures
in Constructive Mathematics and Mathematical Logic, Part II, Seminars in Mathematics (translated from Russian). Steklov Mathematical Institute.
van Benthem, J., Girard, P., & Roy, O. (2009). Everything else being equal: A modal logic
for ceteris paribus preferences. Journal of Philosophical Logic, 38, 83125.
125

fiGrossi, Lorini, & Schwarzentruber

van der Hoek, W., & Pauly, M. (2007). Modal logic for games and information. In Blackburn,
P., van Benthem, J., & Wolter, F. (Eds.), Handbook of Modal Logic, pp. 10771146.
Elsevier.
van der Hoek, W., & Wooldridge, M. (2003). Cooperation, knowledge and time: Alternatingtime temporal epistemic logic and its applications. Studia logica, 75 (1), 125157.
van der Hoek, W., & Wooldridge, M. (2005). On the logic of cooperation and propositional
control. Artificial Intelligence, 164, 81119.
van Ditmarsch, H., Kooi, B., & van der Hoek, W. (2007). Dynamic Epistemic Logic, Vol.
337 of Synthese Library Series. Springer.
van Eijck, J. (2000). Making things happen. Studia logica, 66 (1), 4158.
Von Wright, G. H. (1963). The Logic of Preference. Edinburgh University Press.
Walther, D., van der Hoek, W., & Wooldridge, M. (2007). Alternating-time temporal logic
with explicit strategies. In Proceedings of the 11th conference on Theoretical Aspects
of Rationality and Knowledge, pp. 269278. ACM Press.
Wang, Y., & Cao, Q. (2013). On axiomatizations of public announcement logic. Synthese,
190, 103134.
Wansing, H. (2006). Tableaux for multi-agent deliberative-STIT logic. In Governatori, G.,
Hodkinson, I., & Venema, Y. (Eds.), Advances in Modal Logic, Volume 6, pp. 503520.
Kings College Publications.
Xu, M. (1998). Axioms for deliberative STIT. Journal of Philosophical Logic, 27, 505552.

126

fi