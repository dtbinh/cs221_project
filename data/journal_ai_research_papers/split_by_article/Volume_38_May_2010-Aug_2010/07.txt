Journal of Artificial Intelligence Research 38 (2010) 475-511

Submitted 04/10; published 08/10

A Minimum Relative Entropy Principle
for Learning and Acting
Pedro A. Ortega
Daniel A. Braun

peortega@dcc.uchile.cl
dab54@cam.ac.uk

Department of Engineering
University of Cambridge
Cambridge CB2 1PZ, UK

Abstract
This paper proposes a method to construct an adaptive agent that is universal with
respect to a given class of experts, where each expert is designed specifically for a particular
environment. This adaptive control problem is formalized as the problem of minimizing
the relative entropy of the adaptive agent from the expert that is most suitable for the
unknown environment. If the agent is a passive observer, then the optimal solution is the
well-known Bayesian predictor. However, if the agent is active, then its past actions need
to be treated as causal interventions on the I/O stream rather than normal probability
conditions. Here it is shown that the solution to this new variational problem is given
by a stochastic controller called the Bayesian control rule, which implements adaptive
behavior as a mixture of experts. Furthermore, it is shown that under mild assumptions,
the Bayesian control rule converges to the control law of the most suitable expert.

1. Introduction
When the behavior of an environment under any control signal is fully known, then the
designer can choose an agent that produces the desired dynamics. Instances of this problem include hitting a target with a cannon under known weather conditions, solving a maze
having its map and controlling a robotic arm in a manufacturing plant. However, when
the environment is unknown, then the designer faces the problem of adaptive control. For
example, shooting the cannon lacking the appropriate measurement equipment, finding the
way out of an unknown maze and designing an autonomous robot for Martian exploration.
Adaptive control turns out to be far more difficult than its non-adaptive counterpart. This
is because any good policy has to carefully trade off explorative versus exploitative actions,
i.e. actions for the identification of the environments dynamics versus actions to control it
in a desired way. Even when the environments dynamics are known to belong to a particular class for which optimal agents are available, constructing the corresponding optimal
adaptive agent is in general computationally intractable even for simple toy problems (Duff,
2002). Thus, finding tractable approximations has been a major focus of research.
Recently, it has been proposed to reformulate the problem statement for some classes of
control problems based on the minimization of a relative entropy criterion. For example, a
large class of optimal control problems can be solved very efficiently if the problem statement
is reformulated as the minimization of the deviation of the dynamics of a controlled system
from the uncontrolled system (Todorov, 2006, 2009; Kappen, Gomez, & Opper, 2010). In
this work, a similar approach is introduced for adaptive control. If a class of agents is
c
2010
AI Access Foundation. All rights reserved.

fiOrtega & Braun

given, where each agent is tailored to a different environment, then adaptive controllers can
be derived from a minimum relative entropy principle. In particular, one can construct an
adaptive agent that is universal with respect to this class by minimizing the average relative
entropy from the environment-specific agent.
However, this extension is not straightforward. There is a syntactical difference between
actions and observations that has to be taken into account when formulating the variational
problem. More specifically, actions have to be treated as interventions obeying the rules of
causality (Pearl, 2000; Spirtes, Glymour, & Scheines, 2000; Dawid, 2010). If this distinction
is made, the variational problem has a unique solution given by a stochastic control rule
called the Bayesian control rule. This control rule is particularly interesting because it
translates the adaptive control problem into an on-line inference problem that can be applied
forward in time. Furthermore, this work shows that under mild assumptions, the adaptive
agent converges to the environment-specific agent.
The paper is organized as follows. Section 2 introduces notation and sets up the adaptive
control problem. Section 3 formulates adaptive control as a minimum relative entropy
problem. After an initial, nave approach, the need for causal considerations is motivated.
Then, the Bayesian control rule is derived from a revised relative entropy criterion. In
Section 4, the conditions for convergence are examined and a proof is given. Section 5
illustrates the usage of the Bayesian control rule for the multi-armed bandit problem and
undiscounted Markov decision processes. Section 6 discusses properties of the Bayesian
control rule and relates it to previous work in the literature. Section 7 concludes.

2. Preliminaries
In the following both agent and environment are formalized as causal models over I/O
sequences. Agent and environment are coupled to exchange symbols following a standard
interaction protocol having discrete time, observation and control signals. The treatment
of the dynamics are fully probabilistic, and in particular, both actions and observations are
random variables, which is in contrast to the typical decision-theoretic agent formulation
treating only observations as random variables (Russell & Norvig, 2010). All proofs are
provided in the appendix.
Notation. A set is denoted by a calligraphic letter like A. The words set & alphabet
and element & symbol are used to mean the same thing respectively. Strings are finite
concatenations of symbols and sequences are infinite
concatenations. An denotes the set
S

of strings of length n based on A, and A := n0 An is the set of finite strings. Furthermore, A := {a1 a2 . . . |ai  A for all i = 1, 2, . . .} is defined as the set of one-way
infinite sequences based on the alphabet A. Tuples are written with parentheses (a1 , a2 , a3 )
or as strings a1 a2 a3 . The notation ai := a1 a2 . . . ai is a shorthand for a string starting from the first index. Also, symbols are underlined to glue them together like ao in
aoi := a1 o1 a2 o2 . . . ai oi . The function log(x) is meant to be taken w.r.t. base 2, unless
indicated otherwise.
Interactions. The possible I/O symbols are drawn from two finite sets. Let O denote the
set of inputs (observations) and let A denote the set of outputs (actions). The set Z := AO
is the interaction set. A string aot or ao<t at is an interaction string (optionally ending in
476

fiA Minimum Relative Entropy Principle for Learning and Acting

at or ot ) where ak  A and ok  O. Similarly, a one-sided infinite sequence a1 o1 a2 o2 . . . is
an interaction sequence. The set of interaction strings of length t is denoted by Z t . The
sets of (finite) interaction strings and sequences are denoted as Z  and Z  respectively.
The interaction string of length 0 is denoted by .
I/O System. Agents and environments are formalized as I/O systems. An I/O system
is a probability distribution Pr over interaction sequences Z  . Pr is uniquely determined
by the conditional probabilities
Pr(at |ao<t ),

Pr(ot |ao<t at )

(1)

for each aot  Z  . These conditional probabilities can either represent a generative law
(propensity) in case of issuing a symbol or an evidential probability (plausibility) in the
case of observing a symbol. Which of the two interpretations applies in a particular case
becomes apparent once the I/O system is coupled to another I/O system.

Agent
P

a1 o1 a2 o2 a3 o3 a4 o4 a5 o5

Environment
Q

Figure 1: The model of interactions. The agent P and the environment Q define a probability distribution over interaction sequences.

Interaction System. Let P, Q be two I/O systems. An interaction system (P, Q) is a
coupling of the two systems giving rise to the generative distribution G that describes the
probabilities that actually govern the I/O stream once the two systems are coupled. G is
specified by the equations
G(at |ao<t ) := P(at |ao<t )
G(ot |ao<t at ) := Q(ot |ao<t at )
valid for all aot  Z  . Here, G models the true probability distribution over interaction
sequences that arises by coupling two systems through their I/O streams. More specifically,
for the system P, P(at |ao<t ) is the probability of producing action at  A given history
ao<t and P(ot |ao<t at ) is the predicted probability of the observation ot  O given history
477

fiOrtega & Braun

ao<t at . Hence, for P, the sequence o1 o2 . . . is its input stream and the sequence a1 a2 . . .
is its output stream. In contrast, the roles of actions and observations are reversed in the
case of the system Q. Thus, the sequence o1 o2 . . . is its output stream and the sequence
a1 a2 . . . is its input stream. The previous model of interaction is fairly general, and many
other interaction protocols can be translated into this scheme. As a convention, given an
interaction system (P, Q), P is an agent to be constructed by the designer, and Q is an
environment to be controlled by the agent. Figure 1 illustrates this setup.
Control Problem. An environment Q is said to be known iff the agent P has the property
that for any aot  Z  ,
P(ot |ao<t at ) = Q(ot |ao<t at ).
Intuitively, this means that the agent knows the statistics of the environments future
behavior under any past, and in particular, it knows the effects of given controls. If the
environment is known, then the designer of the agent can build a custom-made policy into
P such that the resulting generative distribution G produces interaction sequences that are
desirable. This can be done in multiple ways. For instance, the controls can be chosen
such that the resulting policy maximizes a given utility criterion; or such that the resulting
trajectory of the interaction system stays close enough to a prescribed trajectory. Formally,
if Q is known, and if the conditional probabilities P(at |ao<t ) for all aot  Z  have been
chosen such that the resulting generative distribution G over interaction sequences given
by
G(at |ao<t ) = P(at |ao<t )

G(ot |ao<t at ) = Q(ot |ao<t at ) = P(ot |ao<t at )
is desirable, then P is said to be tailored to Q.
Adaptive Control Problem. If the environment Q is unknown, then the task of designing an appropriate agent P constitutes an adaptive control problem. Specifically, this
work deals with the case when the designer already has a class of agents that are tailored
to the class of possible environments. Formally, it is assumed that Q is going to be drawn
with probability P (m) from a set Q := {Qm }mM of possible systems before the interaction starts, where M is a countable set. Furthermore, one has a set P := {Pm }mM
of systems such that for each m  M, Pm is tailored to Qm and the interaction system
(Pm , Qm ) has a generative distribution Gm that produces desirable interaction sequences.
How can the designer construct a system P such that its behavior is as close as possible to
the custom-made system Pm under any realization of Qm  Q?

3. Adaptive Systems
The main goal of this paper is to show that the problem of adaptive control outlined in
the previous section can be reformulated as a universal compression problem. This can be
informally motivated as follows. Suppose the agent P is implemented as a machine that is
interfaced with the environment Q. Whenever the agent interacts with the environment,
the agents state changes as a necessary consequence of the interaction. This change in
state can take place in many possible ways: by updating the internal memory; consulting
478

fiA Minimum Relative Entropy Principle for Learning and Acting

a random number generator; changing the physical location and orientation; and so forth.
Naturally, the design of the agent facilitates some interactions while it complicates others.
For instance, if the agent has been designed to explore a natural environment, then it might
incur into a very low memory footprint when recording natural images, while being very
memory-inefficient when recording artificially created images. If one abstracts away from
the inner workings of the machine and decides to encode the state transitions as binary
strings, then the minimal amount of resources in bits that are required to implement these
state changes can be derived directly from the associated probability distribution P. In
the context of adaptive control, an agent can be constructed such that it minimizes the
expected amount of changes necessary to implement the state transitions, or equivalently,
such that it maximally compresses the experience. Thereby, compression can be taken as a
stand-alone principle to design adaptive agents.
3.1 Universal Compression and Nave Construction of Adaptive Agents
In coding theory, the problem of compressing a sequence of observations from an unknown
source is known as the adaptive coding problem. This is solved by constructing universal compressors, i.e. codes that adapt on-the-fly to any source within a predefined class
(MacKay, 2003). Such codes are obtained by minimizing the average deviation of a predictor from the true source, and then by constructing codewords using the predictor. In this
subsection, this procedure will be used to derive an adaptive agent (Ortega & Braun, 2010).
Formally, the deviation of a predictor P from the true distribution Pm is measured
by the relative entropy 1 . A first approach would be to construct an agent B so as to
minimize the total expected relative entropy to Pm . This is constructed as follows. Define
the history-dependent relative entropies over the action at and observation ot as
X
Pm (at |ao<t )
at
(ao<t ) :=
Dm
Pm (at |ao<t ) log
Pr(at |ao<t )
a
t

ot
(ao<t at ) :=
Dm

X
ot

Pm (ot |ao<t at ) log

Pm (ot |ao<t at )
,
Pr(ot |ao<t at )

where Pm (ot |ao<t at ) = Qm (ot |ao<t at ) because the Qm are known and where Pr will be the
argument of the variational problem. Then, one removes the dependency on the past by
averaging over all possible histories:
X
at
at
:=
(ao<t )
Pm (ao<t )Dm
Dm
ao<t

ot
Dm

:=

X

ot
(ao<t at ).
Pm (ao<t at )Dm

ao<t at

Finally, the total expected relative entropy of Pr from Pm is obtained by summing up all
time steps and then by averaging over all choices of the true environment:
D := lim sup
t

X

P (m)

m

t
X
 =1


o
a
.
+ Dm
Dm

(2)

1. The relative entropy is also known as the KL-divergence and it measures the average amount of extra
bits that are necessary to encode symbols due to the usage of the (wrong) predictor.

479

fiOrtega & Braun

Using (2), one can define a variational problem with respect to Pr. The agent B that one
is looking for is the system Pr that minimizes the total expected relative entropy in (2), i.e.
B := arg min D(Pr).
Pr

The solution to Equation 3 is the system B defined by the set of equations
X
B(at |ao<t ) =
Pm (at |ao<t )wm (ao<t )
m

B(ot |ao<t at ) =

X
m

Pm (ot |ao<t at )wm (ao<t at )

(3)

(4)

valid for all aot  Z  , where the mixture weights are
P (m)Pm (ao<t )

m P (m )Pm (ao<t )
P (m)Pm (ao<t at )
.
wm (ao<t at ) := P

m P (m )Pm (ao<t at )
wm (ao<t ) := P

(5)

For reference, see the work of Haussler and Opper (1997) and Opper (1998). It is clear
that B is just the Bayesian mixture over the agents Pm . If one defines the conditional
probabilities
P (at |m, ao<t ) := Pm (at |ao<t )
(6)
P (ot |m, ao<t at ) := Pm (at |ao<t at )

for all aot  Z  , then Equation 4 can be rewritten as
B(at |ao<t ) =
B(ot |ao<t at ) =

X
m

X
m

P (at |m, ao<t )P (m|ao<t ) = P (at |ao<t )
P (ot |m, ao<t at )P (m|ao<t at ) = P (ot |ao<t at )

(7)

where the P (m|ao<t ) = wm (ao<t ) and P (m|ao<t at ) = wm (ao<t at ) are just the posterior
probabilities over the elements in M given the past interactions. Hence, the conditional
probabilities in (4) that minimize the total expected divergence are just the predictive
distributions P (at |ao<t ) and P (ot |ao<t at ) that one obtains by standard probability theory,
and in particular, Bayes rule. This is interesting, as it provides a teleological interpretation
for Bayes rule.
The behavior of B can be described as follows. At any given time t, B maintains a
mixture over systems Pm . The weighting over them is given by the mixture coefficients
wm . Whenever a new action at or a new observation ot is produced (by the agent or
the environment respectively), the weights wm are updated according to Bayes rule. In
addition, B issues an action at suggested by a system Pm drawn randomly according to the
weights wt .
However, there is an important problem with B that arises due to the fact that it is not
only a system that is passively observing symbols, but also actively generating them. In
the subjective interpretation of probability theory, conditionals play the role of observations
480

fiA Minimum Relative Entropy Principle for Learning and Acting

made by the agent that have been generated by an external source. This interpretation suits
the symbols o1 , o2 , o3 , . . . because they have been issued by the environment. However, symbols that are generated by the system itself require a fundamentally different belief update.
Intuitively, the difference can be explained as follows. Observations provide information
that allows the agent inferring properties about the environment. In contrast, actions do
not carry information about the environment, and thus have to be incorporated differently
into the belief of the agent. In the following section we illustrate this problem with a simple
statistical example.
3.2 Causality
Causality is the study of the functional dependencies of events. This stands in contrast to
statistics, which, on an abstract level, can be said to study the equivalence dependencies
(i.e. co-occurrence or correlation) amongst events. Causal statements differ fundamentally
from statistical statements. Examples that highlight the differences are many, such as
do smokers get lung cancer? as opposed to do smokers have lung cancer?; assign
y  f (x) as opposed to compare y = f (x) in programming languages; and a  F/m
as opposed to F = m a in Newtonian physics. The study of causality has recently enjoyed
considerable attention from researchers in the fields of statistics and machine learning.
Especially over the last decade, significant progress has been made towards the formal
understanding of causation (Shafer, 1996; Pearl, 2000; Spirtes et al., 2000; Dawid, 2010).
In this subsection, the aim is to provide the essential tools required to understand causal
interventions. For a more in-depth exposition of causality, the reader is referred to the
specialized literature.
To illustrate the need for causal considerations in the case of generated symbols, consider
the following thought experiment. Suppose a statistician is asked to design a model for a
simple time series X1 , X2 , X3 , . . . and she decides to use a Bayesian method. Assume she
collects a first observation X1 = x1 . She computes the posterior probability density function
(pdf) over the parameters  of the model given the data using Bayes rule:
p(|X1 = x1 ) = R

p(X1 = x1 |)p()
,
p(X1 = x1 | )p( ) d

where p(X1 = x1 |) is the likelihood of x1 given  and p() is the prior pdf of . She can
use the model to predict the next observation by drawing a sample x2 from the predictive
pdf
Z
p(X2 = x2 |X1 = x1 ) = p(X2 = x2 |X1 = x1 , ) p(|X1 = x1 ) d,
where p(X2 = x2 |X1 = x1 , ) is the likelihood of x2 given x1 and . Note that x2 is not
drawn from p(X2 = x2 |X1 = x1 , ). She understands that the nature of x2 is very different
from x1 : while x1 is informative and does change the belief state of the Bayesian model,
x2 is non-informative and thus is a reflection of the models belief state. Hence, she would
never use x2 to further condition the Bayesian model. Mathematically, she seems to imply
that
p(|X1 = x1 , X2 = x2 ) = p(|X1 = x1 )
481

fiOrtega & Braun

if x2 has been generated from p(X2 |X1 = x1 ) itself. But this simple independence assumption is not correct as the following elaboration of the example will show.
The statistician is now told that the source is waiting for the simulated data point x2
in order to produce a next observation X3 = x3 which does depend on x2 . She hands in x2
and obtains a new observation x3 . Using Bayes rule, the posterior pdf over the parameters
is now
p(X3 = x3 |X1 = x1 , X2 = x2 , ) p(X1 = x1 |) p()
R
(8)
p(X3 = x3 |X1 = x1 , X2 = x2 ,  ) p(X1 = x1 | ) p( ) d
where p(X3 = x3 |X1 = x1 , X2 = x2 , ) is the likelihood of the new data x3 given the old
data x1 , the parameters  and the simulated data x2 . Notice that this looks almost like the
posterior pdf p(|X1 = x1 , X2 = x2 , X3 = x3 ) given by
R

p(X3 = x3 |X1 = x1 , X2 = x2 , ) p(X2 = x2 |X1 = x1 , ) p(X1 = x1 |) p()
p(X3 = x3 |X1 = x1 , X2 = x2 ,  ) p(X2 = x2 |X1 = x1 ,  ) p(X1 = x1 | ) p( ) d

with the exception that in the latter case, the Bayesian update contains the likelihoods of
the simulated data p(X2 = x2 |X1 = x1 , ). This suggests that Equation 8 is a variant of the
posterior pdf p(|X1 = x1 , X2 = x2 , X3 = x3 ) but where the simulated data x2 is treated
in a different way than the data x1 and x3 .
Define the pdf p such that the pdfs p (), p (X1 |), p (X3 |X1 , X2 , ) are identical to
p(), p(X1 |) and p(X3 |X2 , X1 , ) respectively, but differ in p (X2 |X1 , ):
p (X2 |X1 , ) = (X2  x2 ).
where  is the Dirac delta function. That is, p is identical to p but it assumes that the
value of X2 is fixed to x2 given X1 and . For p , the simulated data x2 is non-informative:
 log2 p (X2 = x2 |X1 , ) = 0.
If one computes the posterior pdf p (|X1 = x1 , X2 = x2 , X3 = x3 ), one obtains the result
of Equation 8:
R

p (X3 = x3 |X1 = x1 , X2 = x2 , ) p (X2 = x2 |X1 = x1 , ) p (X1 = x1 |) p ()
p (X3 = x3 |X1 = x1 , X2 = x2 ,  )p (X2 = x2 |X1 = x1 ,  ) p (X1 = x1 | ) p ( ) d
p(X3 = x3 |X1 = x1 , X2 = x2 , ) p(X1 = x1 |) p()
=R
.
p(X3 = x3 |X1 = x1 , X2 = x2 ,  ) p(X1 = x1 | ) p( ) d

Thus, in order to explain Equation 8 as a posterior pdf given the observed data x1 and x3
and the generated data x2 , one has to intervene p in order to account for the fact that x2
is non-informative given x1 and . In other words, the statistician, by defining the value of
X2 herself2 , has changed the (natural) regime that brings about the series X1 , X2 , X3 , . . .,
which is mathematically expressed by redefining the pdf.
Two essential ingredients are needed to carry out interventions. First, one needs to
know the functional dependencies amongst the random variables of the probabilistic model.
This is provided by the causal model, i.e. the unique factorization of the joint probability
2. Note that this is conceptually broken down into two steps: first, she samples x2 from p(X2 |X1 = x1 );
and second, she imposes the value X2 = x2 by setting p (X2 |X1 , ) = (X2  x2 ).

482

fiA Minimum Relative Entropy Principle for Learning and Acting

distribution over the random variables encoding the causal dependencies. In the general
case, this defines a partial order over the random variables. In the previous thought experiment, the causal model of the joint pdf p(, X1 , X2 , X3 ) is given by the set of conditional
pdfs
p(), p(X1 |), p(X2 |X1 , ), p(X3 |X1 , X2 , ).
Second, one defines the intervention that sets X to the value x, denoted as X  x, as
the operation on the causal model replacing the conditional probability of X by a Dirac
delta function (X  x) or a Kronecker delta xX for a continuous or a discrete variable X
respectively. In our thought experiment, it is easily seen that
p (, X1 = x1 , X2 = x2 , X3 = x3 ) = p(, X1 = x1 , X2  x2 , X3 = x3 )
and thereby,
p (|X1 = x1 , X2 = x2 , X3 = x3 ) = p(|X1 = x1 , X2  x2 , X3 = x3 ).
Causal models contain additional information that is not available in the joint probability
distribution alone. The appropriate model for a given situation depends on the story that
is being told. Note that an intervention can lead to different results if the respective causal
models differ. Thus, if the causal model had been
p(X3 ), p(X2 |X3 ), p(X1 |X2 , X3 ), p(|X1 , X2 , X3 )
then the intervention X2  x2 would differ from p , i.e.
p (, X1 = x1 , X2 = x2 , X3 = x3 ) 6= p(, X1 = x1 , X2  x2 , X3 = x3 ),
even though both causal models represent the same joint probability distribution. In the
following, this paper will use the shorthand notation x := X  x when the random variable
is obvious from the context.
3.3 Causal Construction of Adaptive Agents
Following the discussion in the previous section, an adaptive agent P is going to be constructed by minimizing the expected relative entropy to the expected Pm , but this time
treating actions as interventions. Based on the definition of the conditional probabilities in
Equation 6, the total expected relative entropy to characterize P using interventions is going to be defined. Assuming the environment is chosen first, and that each symbol depends
functionally on the environment and all the previously generated symbols, the causal model
is given by
P (m), P (a1 |m), P (o1 |m, a1 ), P (a2 |m, a1 , o1 ), P (o2 |m, a1 , o1 , a2 ), . . .
Importantly, interventions index a set of intervened probability distributions derived from
a base probability distribution. Hence, the set of fixed intervention sequences of the form
a1 , a2 , . . . indexes probability distributions over observation sequences o1 , o2 , . . .. Because
of this, one defines a set of criteria indexed by the intervention sequences, but it will be
483

fiOrtega & Braun

clear that they all have the same solution. Define the history-dependent intervened relative
entropies over the action at and observation ot as
at
(ao<t ) :=
Cm

X
at

ot
(ao<t at ) :=
Cm

X
ot

P (at |m, ao<t ) log2

P (at |m, ao<t )
Pr(at |ao<t )

P (ot |m, ao<t at ) log2

P (ot |m, ao<t at )
,
Pr(ot |ao<t at )

where Pr is a given arbitrary agent. Note that past actions are treated as interventions. In
particular, P (at |m, ao<t ) represents the knowledge state when the past actions have already
been issued but the next action at is not known yet. Then, averaging the previous relative
entropies over all pasts yields
at
=
Cm

X

ao<t
ot
=
Cm

at
(ao<t )
P (ao<t |m)Cm

X

ao<t at

ot
(ao<t at ).
P (ao<t at |m)Cm

at (ao ) and C ot (ao a ),
Here again, because of the knowledge state in time represented by Cm
<t
<t t
m
the averages are taken treating past actions as interventions. Finally, define the total exat + C ot ) over time, averaged over
pected relative entropy of Pr from Pm as the sum of (Cm
m
the possible draws of the environment:

C := lim sup
t

X

P (m)

m

t
X
 =1


o
a
+ Cm
Cm
.

(9)

The variational problem consists in choosing the agent P as the system Pr minimizing
C = C(Pr), i.e.
P := arg min C(Pr).
(10)
Pr

The following theorem shows that this variational problem has a unique solution, which will
be the central theme of this paper.
Theorem 1. The solution to Equation 10 is the system P defined by the set of equations
X

P(at |ao<t ) = P (at |ao<t ) =

m

P(ot |ao<t at ) = P (ot |ao<t at ) =

P (at |m, ao<t )vm (ao<t )

X
m

P (ot |m, ao<t at )vm (ao<t at )

(11)

valid for all aot  Z  , where the mixture weights are
Qt1

 =1 P (o |m, ao< a )
.
Qt1


 =1 P (o |m , ao< a )
m P (m )

vm (ao<t at ) = vm (ao<t ) := P

P (m)

484

(12)

fiA Minimum Relative Entropy Principle for Learning and Acting

Bayesian Control Rule: Given a set of operation modes {P (|m, )}mM
over interaction sequences in Z  and a prior distribution P (m) over the
parameters M, the probability of the action at+1 is given by
X
P (at+1 |m, aot )P (m|aot ),
(13)
P (at+1 |aot ) =
m

where the posterior probability over operation modes is given by the recursion
P (ot |m, ao<t )P (m|ao<t )
.


m P (ot |m , ao<t )P (m |ao<t )

P (m|aot ) = P

Table 1: Summary of the Bayesian control rule.
The theorem says that the optimal solution to the variational problem in (10) is precisely
the predictive distribution over actions and observations treating actions as interventions
and observations as conditionals, i.e. it is the solution that one would obtain by applying
only standard probability and causal calculus. This provides a teleological interpretation for
the agent P akin to the nave agent B constructed in Section 3.1. The behavior of P differs
in an important aspect from B. At any given time t, P maintains a mixture over systems
Pm . The weighting over these systems is given by the mixture coefficients vm . In contrast
to B, P updates the weights vm only whenever a new observation ot is produced by the
environment. The update follows Bayes rule but treats past actions as interventions by
dropping the evidence they provide. In addition, P issues an action at suggested by an
system m drawn randomly according to the weights vm .
3.4 Summary
Adaptive control is formalized as the problem of designing an agent for an unknown environment chosen from a class of possible environments. If the environment-specific agents are
known, then the Bayesian control rule allows constructing an adaptive agent by combining
these agents. The resulting adaptive agent is universal with respect to the environment
class. In this context, the constituent agents are called the operation modes of the adaptive
agent. They are represented by causal models over the interaction sequences, i.e. conditional
probabilities P (at |m, ao<t ) and P (ot |m, ao<t ) for all aot  Z  , and where m  M is the
index or parameter characterizing the operation mode. The probability distribution over
the input stream (output stream) is called the hypothesis (policy) of the operation mode.
Table 1 collects the essential equations of the Bayesian control rule. In particular, there the
rule is stated using a recursive belief update.

4. Convergence
The aim of this section is to develop a set of sufficient conditions of convergence and then
to provide a proof of convergence. To simplify the exposition, the analysis has been limited
485

fiOrtega & Braun

to the case of controllers having a finite number of input-output models.

4.1 Policy Diagrams
In the following we use policy diagrams as a useful informal tool to analyze the effect of
policies on environments. Figure 2 illustrates an example.

state space
s

ao

s

policy

Figure 2: A policy diagram. One can imagine an environment as a collection of states
connected by transitions labeled by I/O symbols. The zoom highlights a state s
where taking action a  A and collecting observation o  O leads to state s .
Sets of states and transitions are represented as enclosed areas similar to a Venn
diagram. Choosing a particular policy in an environment amounts to partially
controlling the transitions taken in the state space, thereby choosing a probability
distribution over state transitions (e.g. a Markov chain given by the environmental
dynamics). If the probability mass concentrates in certain areas of the state space,
choosing a policy can be thought of as choosing a subset of the environments
dynamics. In the following, a policy is represented by a subset in state space
(enclosed by a directed curve) as illustrated above.

Policy diagrams are especially useful to analyze the effect of policies on different hypotheses about the environments dynamics. An agent that is endowed with a set of operation
modes M can be seen as having hypotheses about the environments underlying dynamics,
given by the observation models P (ot |m, ao<t at ), and associated policies, given by the action models P (at |m, ao<t ), for all m  M. For the sake of simplifying the interpretation of
policy diagrams, we will assume the existence of a state space T : (A  O)  S mapping
I/O histories into states. Note however that no such assumptions are made to obtain the
results of this section.
4.2 Divergence Processes
The central question in this section is to investigate whether the Bayesian control rule converges to the correct control law or not. That is, whether P (at |aot )  P (at |m , ao<t ) as t 
 when m is the true operation mode, i.e. the operation mode such that P (ot |m , ao<t at ) =
Q(ot |ao<t at ). As will be obvious from the discussion in the rest of this section, this is in
general not true.
As it is easily seen from Equation 13, showing convergence amounts to show that the
posterior distribution P (m|ao<t ) concentrates its probability mass on a subset of operation
486

fiA Minimum Relative Entropy Principle for Learning and Acting

modes M having essentially the same output stream as m ,
X
X
P (at |m, ao<t )P (m|ao<t ) 
P (at |m , ao<t )P (m|ao<t )  P (at |m , ao<t ).
mM

mM

Hence, understanding the asymptotic behavior of the posterior probabilities
P (m|aot )
is crucial here. In particular, we need to understand under what conditions these quantities
converge to zero. The posterior can be rewritten as
Q
P (aot |m)P (m)
P (m) t =1 P (o |m, ao< a )
.
=P
P (m|aot ) = P
Qt




m M P (aot |m )P (m )
m M P (m )
 =1 P (o |m , ao< a )

If all the summands but the one with index m are dropped from the denominator, one
obtains the bound
P (m|aot ) 

t
P (m) Y P (o |m, ao< a )
,
P (m )
P (o |m , ao< a )
 =1

which is valid for all m  M. From this inequality, it is seen that it is convenient to
analyze the behavior of the stochastic process


dt (m km) :=

t
X
 =1

ln

P (o |m , ao< a )
P (o |m, ao< a )

which is the divergence process of m from the reference m . Indeed, if dt (m km)   as
t  , then
t
P (m)
P (m) Y P (o |m, ao< a )

= lim
 edt (m km) = 0,



t P (m )
P (o |m , ao< a ) t P (m )

lim

 =1

and thus clearly P (m|aot )  0. Figure 3 illustrates simultaneous realizations of the
divergence processes of a controller. Intuitively speaking, these processes provide lower
bounds on accumulators of surprise value measured in information units.
A divergence process is a random walk whose value at time t depends on the whole
history up to time t1. What makes these divergence processes cumbersome to characterize
is the fact that their statistical properties depend on the particular policy that is applied;
hence, a given divergence process can have different growth rates depending on the policy
(Figure 4). Indeed, the behavior of a divergence process might depend critically on the
distribution over actions that is used. For example, it can happen that a divergence process
stays stable under one policy, but diverges under another. In the context of the Bayesian
control rule this problem is further aggravated, because in each time step, the policy that
is applied is determined stochastically. More specifically, if m is the true operation mode,
then dt (m km) is a random variable that depends on the realization aot which is drawn
from
t
Y

 =1

P (a |m , ao )P (o |m , ao a ),
487

fiOrtega & Braun

dt
1
2
3
4
t

0

Figure 3: Realization of the divergence processes 1 to 4 associated to a controller with
operation modes m1 to m4 . The divergence processes 1 and 2 diverge, whereas 3
and 4 stay below the dotted bound. Hence, the posterior probabilities of m1 and
m2 vanish.

dt
1

2
3

2

1
0

3
t

Figure 4: The application of different policies lead to different statistical properties of the
same divergence process.

488

fiA Minimum Relative Entropy Principle for Learning and Acting

where the m1 , m2 , . . . , mt are drawn themselves from P (m1 ), P (m2 |ao1 ), . . . , P (mt |ao<t ).
To deal with the heterogeneous nature of divergence processes, one can introduce a
temporal decomposition that demultiplexes the original process into many sub-processes
belonging to unique policies. Let Nt := {1, 2, . . . , t} be the set of time steps up to time t.
Let T  Nt , and let m, m  M. Define a sub-divergence of dt (m km) as a random variable
X P (o |m , ao a )
<
gm (m; T ) :=
ln
P (o |m, ao< a )
 T

drawn from

Pm ({ao } T |{ao } T  ) :=


Y
 T

 Y

P (a |m , ao< )
P (o |m , ao< a ) ,
 T

where T := Nt \ T and where {ao } T  are given conditions that are kept constant. In
this definition, m plays the role of the policy that is used to sample the actions in the time
steps T . Clearly, any realization of the divergence process dt (m km) can be decomposed
into a sum of sub-divergences, i.e.
X
gm (m; Tm ),
dt (m km) =
(14)
m

where {Tm }mM forms a partition of Nt . Figure 5 shows an example decomposition.
dt
1
2
3

t

0

Figure 5: Decomposition of a divergence process (1) into sub-divergences (2 & 3).
The averages of sub-divergences will play an important role in the analysis. Define the
average over all realizations of gm (m; T ) as
X
Pm ({ao } T |{ao } T  )gm (m; T ).
Gm (m; T ) :=
(ao ) T

Notice that for any   Nt ,
X
P (o |m , ao< a )
P (a |m , ao< )P (o |m , ao< a ) ln
 0,
Gm (m; { }) =
P (o |m, ao< a )
ao


because of Gibbs inequality. In particular,

Gm (m ; { }) = 0.

Clearly, this holds as well for any T  Nt :
m

Gm (m; T )  0,

Gm (m ; T ) = 0.
489

(15)

fiOrtega & Braun

4.3 Boundedness
In general, a divergence process is very complex: virtually all the classes of distributions
that are of interest in control go well beyond the assumptions of i.i.d. and stationarity. This
increased complexity can jeopardize the analytic tractability of the divergence process, such
that no predictions about its asymptotic behavior can be made anymore. More specifically,
if the growth rates of the divergence processes vary too much from realization to realization, then the posterior distribution over operation modes can vary qualitatively between
realizations. Hence, one needs to impose a stability requirement akin to ergodicity to limit
the class of possible divergence-processes to a class that is analytically tractable. For this
purpose the following property is introduced.
A divergence process dt (m km) is said to have bounded variation in M iff for any  > 0,
there is a C  0, such that for all m  M, all t and all T  Nt
fi
fi
fi
fi
figm (m; T )  Gm (m; T )fi  C
with probability  1  .

dt

1

2

3

t

0

Figure 6: If a divergence process has bounded variation, then the realizations (curves 2 &
3) of a sub-divergence stay within a band around the mean (curve 1).
Figure 6 illustrates this property. Boundedness is the key property that is going to be
used to construct the results of this section. The first important result is that the posterior
probability of the true input-output model is bounded from below.
Theorem 2. Let the set of operation modes of a controller be such that for all m  M the
divergence process dt (m km) has bounded variation. Then, for any  > 0, there is a  > 0,
such that for all t  N,

P (m |aot ) 
|M|

with probability  1  .
4.4 Core

If one wants to identify the operation modes whose posterior probabilities vanish, then it
is not enough to characterize them as those modes whose hypothesis does not match the
true hypothesis. Figure 7 illustrates this problem. Here, three hypotheses along with their
associated policies are shown. H1 and H2 share the prediction made for region A but differ
490

fiA Minimum Relative Entropy Principle for Learning and Acting

in region B. Hypothesis H3 differs everywhere from the others. Assume H1 is true. As long
as we apply policy P2 , hypothesis H3 will make wrong predictions and thus its divergence
process will diverge as expected. However, no evidence against H2 will be accumulated. It
is only when one applies policy P1 for long enough time that the controller will eventually
enter region B and hence accumulate counter-evidence for H2 .
H1

H2

B
A

H3

B
A

P3

P1
P2

Figure 7: If hypothesis H1 is true and agrees with H2 on region A, then policy P2 cannot
disambiguate the three hypotheses.

But what does long enough mean? If P1 is executed only for a short period, then the
controller risks not visiting the disambiguating region. But unfortunately, neither the right
policy nor the right length of the period to run it are known beforehand. Hence, an agent
needs a clever time-allocating strategy to test all policies for all finite time intervals. This
motivates the following definition.
The core of an operation mode m , denoted as [m ], is the subset of M containing
operation modes behaving like m under its policy. More formally, an operation mode
m
/ [m ] (i.e. is not in the core) iff for any C  0,  > 0, there is a  > 0 and a t0  N,
such that for all t  t0 ,
Gm (m; T )  C
with probability  1  , where Gm (m; T ) is a sub-divergence of dt (m km), and Pr{ 
T }   for all   Nt .
In other words, if the agent was to apply m s policy in each time step with probability at
least , and under this strategy the expected sub-divergence Gm (m; T ) of dt (m km) grows
unboundedly, then m is not in the core of m . Note that demanding a strictly positive
probability of execution in each time step guarantees that the agent will run m for all
possible finite time-intervals. As the following theorem shows, the posterior probabilities of
the operation modes that are not in the core vanish almost surely.
Theorem 3. Let the set of operation modes of an agent be such that for all m  M the
divergence process dt (m km) has bounded variation. If m 
/ [m ], then P (m|aot )  0 as
t   almost surely.
4.5 Consistency
Even if an operation mode m is in the core of m , i.e. given that m is essentially indistinguishable from m under m s control, it can still happen that m and m have different
policies. Figure 8 shows an example of this. The hypotheses H1 and H2 share region A but
491

fiOrtega & Braun

differ in region B. In addition, both operation modes have their policies P1 and P2 respectively confined to region A. Note that both operation modes are in the core of each other.
However, their policies are different. This means that it is unclear whether multiplexing the
policies in time will ever disambiguate the two hypotheses. This is undesirable, as it could
impede the convergence to the right control law.
H2

H1
B

B
P2

P1

A

A

Figure 8: An example of inconsistent policies. Both operation modes are in the core of each
other, but have different policies.

Thus, it is clear that one needs to impose further restrictions on the mapping of hypotheses into policies. With respect to Figure 8, one can make the following observations:
1. Both operation modes have policies that select subsets of region A. Therefore, the
dynamics in A are preferred over the dynamics in B.
2. Knowing that the dynamics in A are preferred over the dynamics in B allows us to
drop region B from the analysis when choosing a policy.
3. Since both hypotheses agree in region A, they have to choose the same policy in order
to be consistent in their selection criterion.
This motivates the following definition. An operation mode m is said to be consistent
with m iff m  [m ] implies that for all  < 0, there is a t0 , such that for all t  t0 and all
ao<t at ,
fi
fi
fi
fi
fiP (at |m, aot )  P (at |m , aot )fi < .

In other words, if m is in the core of m , then ms policy has to converge to m s policy.
The following theorem shows that consistency is a sufficient condition for convergence to
the right control law.
Theorem 4. Let the set of operation modes of an agent be such that: for all m  M the
divergence process dt (m km) has bounded variation; and for all m, m  M, m is consistent
with m . Then,
P (at |ao<t )  P (at |m , ao<t )
almost surely as t  .
492

fiA Minimum Relative Entropy Principle for Learning and Acting

4.6 Summary
In this section, a proof of convergence of the Bayesian control rule to the true operation
mode has been provided for a finite set of operation modes. For this convergence result to
hold, two necessary conditions are assumed: boundedness and consistency. The first one,
boundedness, imposes the stability of divergence processes under the partial influence of the
policies contained within the set of operation modes. This condition can be regarded as
an ergodicity assumption. The second one, consistency, requires that if a hypothesis makes
the same predictions as another hypothesis within its most relevant subset of dynamics,
then both hypotheses share the same policy. This relevance is formalized as the core of an
operation mode. The concepts and proof strategies strengthen the intuition about potential
pitfalls that arise in the context of controller design. In particular we could show that
the asymptotic analysis can be recast as the study of concurrent divergence processes that
determine the evolution of the posterior probabilities over operation modes, thus abstracting
away from the details of the classes of I/O distributions. The extension of these results to
infinite sets of operation modes is left for future work. For example, one could think
of partitioning a continuous space of operation modes into essentially different regions
where representative operation modes subsume their neighborhoods (Grunwald, 2007).

5. Examples
In this section we illustrate the usage of the Bayesian control rule on two examples that
are very common in the reinforcement learning literature: multi-armed bandits and Markov
decision processes.
5.1 Bandit Problems
Consider the multi-armed bandit problem (Robbins, 1952). The problem is stated as follows.
Suppose there is an N -armed bandit, i.e. a slot-machine with N levers. When pulled, lever
i provides a reward drawn from a Bernoulli distribution with a bias hi specific to that lever.
That is, a reward r = 1 is obtained with probability hi and a reward r = 0 with probability
1hi . The objective of the game is to maximize the time-averaged reward through iterative
pulls. There is a continuum range of stationary strategies, each one parameterized by N
probabilities {si }N
i=1 indicating the probabilities of pulling each lever. The difficulty arising
in the bandit problem is to balance reward maximization based on the knowledge already
acquired with attempting new actions to further improve knowledge. This dilemma is known
as the exploration versus exploitation tradeoff (Sutton & Barto, 1998).
This is an ideal task for the Bayesian control rule, because each possible bandit has a
known optimal agent. Indeed, a bandit can be represented by an N -dimensional bias vector
m = [m1 , . . . , mN ]  M = [0; 1]N . Given such a bandit, the optimal policy consists in
pulling the lever with the highest bias. That is, an operation mode is given by:
hi = P (ot = 1|m, at = i) = mi

si = P (at = i|m) =

493

(

1 if i = maxj {mj },
0 else.

fiOrtega & Braun

m2

0

a)

1

b)
m1  m2

m2

1

1

m2  m1 , m 3

m3
0

m1

0
0

m1

1

1

Figure 9: The space of bandit configurations can be partitioned into N regions according
to the optimal lever. Panel a and b show the 2-armed and 3-armed bandit cases
respectively.

To apply the Bayesian control rule, it is necessary to fix a prior distribution over the
bandit configurations. Assuming a uniform distribution, the Bayesian control rule is
Z
(16)
P (at+1 = i|m)P (m|aot )
P (at+1 = i|aot ) =
M

with the update rule given by
Q
r
N
Y
mj j (1  mj )fj
P (m) t =1 P (o |m, a )
=
P (m|aot ) = R
Qt



B(rj + 1, fj + 1)
 =1 P (o |m , a ) dm
M P (m )
j=1

(17)

where rj and fj are the counts of the number of times a reward has been obtained from
pulling lever j and the number of times no reward was obtained respectively. Observe that
here the summation over discrete operation modes has been replaced by an integral over
the continuous space of configurations. In the last expression we see that the posterior
distribution over the lever biases is given by a product of N Beta distributions. Thus,
sampling an action amounts to first sample an operation mode m by obtaining each bias
mi from a Beta distribution with parameters ri + 1 and fi + 1, and then choosing the
action corresponding to the highest bias a = arg maxi mi . The pseudo-code can be seen in
Algorithm 1.
Simulation: The Bayesian control rule described above has been compared against two
other agents: an -greedy strategy with decay (on-line) and Gittins indices (off-line). The
test bed consisted of bandits with N = 10 levers whose biases were drawn uniformly at
the beginning of each run. Every agent had to play 1000 runs for 1000 time steps each.
Then, the performance curves of the individual runs were averaged. The -greedy strategy
selects a random action with a small probability given by t and otherwise plays the
lever with highest expected reward. The parameters have been determined empirically to
the values  = 0.1, and  = 0.99 after several test runs. They have been adjusted in a way
to maximize the average performance in the last trials of our simulations. For the Gittins
method, all the indices were computed up to horizon 1300 using a geometric discounting
of  = 0.999, i.e. close to one to approximate the time-averaged reward. The results are
shown in Figure 10.
494

fiA Minimum Relative Entropy Principle for Learning and Acting

Algorithm 1 BCR bandit.
for all i = 1, . . . , N do
Initialize ri and fi to zero.
end for
for t = 1, 2, 3, . . . do
Sample m using (17).
{ Interaction }
Set a  arg maxi mi and issue a.
Obtain o from environment.

Avg. Reward

{Update belief}
if o = 1 then
ra = ra + 1
else
fa = fa + 1
end if
end for

0.85
0.80

Bayesian control rule
-greedy
Gittins indices

0.75
0.70
0

200

400

600

800

1000

0

200

400

600

800

1000

% Best Lever

100
80
60
40
20
0

Figure 10: Comparison in the N -armed bandit problem of the Bayesian control rule (solid
line), an -greedy agent (dashed line) and using Gittins indices (dotted line).
1,000 runs have been averaged. The top panel shows the evolution of the average
reward. The bottom panel shows the evolution of the percentage of times the
best lever was pulled.

495

fiOrtega & Braun

It is seen that -greedy strategy quickly reaches an acceptable level of performance, but
then seems to stall at a significantly suboptimal level, pulling the optimal lever only 60% of
the time. In contrast, both the Gittins strategy and the Bayesian control rule show essentially the same asymptotic performance, but differ in the initial transient phase where the
Gittins strategy significantly outperforms the Bayesian control rule. There are at least three
observations that are worth making here. First, Gittins indices have to be pre-computed
off-line. The time complexity scales quadratically with the horizon, and the computations
for the horizon of 1300 steps took several hours on our machines. In contrast, the Bayesian
control rule could be applied without pre-computation. Second, even though the Gittins
method actively issues the optimal information gathering actions while the Bayesian control
rule passively samples the actions from the posterior distribution over operation modes, in
the end both methods rely on the convergence of the underlying Bayesian estimator. This
implies that both methods have the same information bottleneck, since the Bayesian estimator requires the same amount of information to converge. Thus, active information gathering
actions only affect the utility of the transient phase, not the permanent state. Other efficient algorithms for bandit problems can be found in the literature (Auer, CesaBianchi, &
Fischer, 2002).
5.2 Markov Decision Processes
A Markov Decision Process (MDP ) is defined as a tuple (X , A, T, r): X is the state space;
A is the action space; Ta (x; x ) = Pr(x |a, x) is the probability that an action a  A
taken in state x  X will lead to state x  X ; and r(x, a)  R := R is the immediate
reward obtained in state x  X and action a  A. The interaction proceeds in time steps
t = 1, 2, . . . where at time t, action at  A is issued in state xt1  X , leading to a reward
rt = r(xt1 , at ) and a new state xt that starts the next time step t + 1. A stationary closedloop control policy  : X  A assigns an action to each state. For MDPs there always
exists an optimal stationary deterministic policy and thus one only needs to consider such
policies. In undiscounted MDPs the average rewardPper time step for a fixed policy  with
initial state x is defined as  (x) = limt E [ 1t t =0 r ]. It can be shown (Bertsekas,
1987) that  (x) =  (x ) for all x, x  X under the assumption that the Markov chain for
policy  is ergodic. Here, we assume that the MDPs are ergodic for all stationary policies.
In order to keep the intervention model particularly simple3 , we follow the Q-notation
of Watkins (1989). The optimal policy   can then be characterized in terms of the optimal
average reward  and the optimal relative Q-values Q(x, a) for each state-action pair (x, a)
that are solutions to the following system of non-linear equations (Singh, 1994): for any

3. The brute-force adaptive agent for this problem would roughly look as follows. First, the agent
starts with a prior distribution over all MDPs, e.g. product of Dirichlet distributions over the transition
probabilities. Then, in each cycle, the agent samples a full transition matrix from the distribution and
solves it using dynamic programming. Once it has computed the optimal policy, it uses it to issue the
next action, and then discards the policy. Subsequently, it updates the distribution over MDPs using
the next observed state. However, in the main text we follow a different approach that avoids solving
an MDP in every time step.

496

fiA Minimum Relative Entropy Principle for Learning and Acting

state x  X and action a  A,
Q(x, a) +  = r(x, a) +

X

x X

i
h
 
Q(x
,
a
)
Pr(x |x, a) max

a

fi
i
h
  fi
= r(x, a) + Ex max
x,
a
.
Q(x
,
a
)
fi


(18)

a

The optimal policy can then be defined as   (x) := arg maxa Q(x, a) for any state x  X .
Again this setup allows for a straightforward solution with the Bayesian control rule,
because each learnable MDP (characterized by the Q-values and the average reward) has
a known solution   . Accordingly, an operation mode m is given by m = [Q, ]  M =
R|A||O|+1 . To obtain a likelihood model for inference over m, we realize that Equation 18
can be rewritten such that it predicts the instantaneous reward r(x, a) as the sum of a mean
instantaneous reward m plus a noise term  given the Q-values and the average reward 
for the MDP labeled by m
r(x, a) = Q(x, a) +   max
Q(x , a ) + max
Q(x , a )  E[max
Q(x , a )|x, a]
a
a
a
|
{z
}
{z
}
|
noise 

mean instantaneous reward m (x,a,x )

Assuming that  can be reasonably approximated by a normal distribution N(0, 1/p) with
precision p, we can write down a likelihood model for the immediate reward r using the
Q-values and the average reward, i.e.
r
o
n p
p

 2
P (r|m, x, a, x ) =
(19)
exp  (r  m (x, a, x )) .
2
2

In order to determine the intervention model for each operation mode, we can simply exploit
the above properties of the Q-values, which gives
(
1 if a = arg maxa Q(x, a )
P (a|m, x) =
(20)
0 else.
To apply the Bayesian control rule, the posterior distribution P (m|at , xt ) needs to be
computed. Fortunately, due to the simplicity of the likelihood model, one can easily devise a
conjugate prior distribution and apply standard inference methods (see Appendix A.5). Actions are again determined by sampling operation modes from this posterior and executing
the action suggested by the corresponding intervention models. The resulting algorithm is
very similar to Bayesian Q-learning (Dearden, Friedman, & Russell, 1998; Dearden, Friedman, & Andre, 1999), but differs in the way actions are selected. The pseudo-code is listed
in Algorithm 2.
Simulation: We have tested our MDP-agent in a grid-world example. To give an intuition
of the achieved performance, the results are contrasted with those achieved by R-learning.
We have used the R-learning variant presented in the work of Singh (1994, Algorithm 3)
together with the uncertainty exploration strategy (Mahadevan, 1996). The corresponding
update equations are

Q(x, a)  (1  )Q(x, a) +  r   + max
Q(x , a )

a

(21)
 
  (1  ) +  r + max
Q(x
,
a
)

Q(x,
a)
,

a

497

fiOrtega & Braun

Algorithm 2 BCR-MDP Gibbs sampler.
Initialize entries of  and  to zero.
Set initial state to x  x0 .
for t = 1, 2, 3, . . . do
{Gibbs sweep}
Sample  using (30).
for all Q(y, b) of visited states do
Sample Q(y, b) using (31).
end for
{ Interaction }
Set a  arg maxa Q(x, a ) and issue a.
Obtain o = (r, x ) from environment.
{Update hyperparameters}
 )(x,a,x )+p r
(x, a, x )  (x,a,x
(x,a,x )+p
(x, a, x )  (x, a, x ) + p
Set x  x .
end for

goal

membranes

b) Bayesian control rule

c) R-learning, C=5

d) R-learning, C=30

initial 5,000 steps

a) 7x7 Maze

e) R-learning, C=200

f) Average Reward
0.4
0.3

C=30
C=5

0.2

low
probability

C=200
0.1

last 5,000 steps

high
probability

Bayesian control rule
0.0
0

125

250

375

500

x1000 time steps

Figure 11: Results for the 77 grid-world domain. Panel (a) illustrates the setup. Columns
(b)-(e) illustrate the behavioral statistics of the algorithms. The upper and lower
row have been calculated over the first and last 5,000 time steps of randomly
chosen runs. The probability of being in a state is color-encoded, and the arrows
represent the most frequent actions taken by the agents. Panel (f) presents the
curves obtained by averaging ten runs.

498

fiA Minimum Relative Entropy Principle for Learning and Acting

Average Reward
BCR
R-learning, C = 200
R-learning, C = 30
R-learning, C = 5

0.3582  0.0038
0.2314  0.0024
0.3056  0.0063
0.2049  0.0012

Table 2: Average reward attained by the different algorithms at the end of the run. The
mean and the standard deviation has been calculated based on 10 runs.

where ,  > 0 are learning rates. The exploration strategy chooses with fixed probability
C
pexp > 0 the action a that maximizes Q(x, a) + F (x,a)
, where C is a constant, and F (x, a)
represents the number of times that action a has been tried in state x. Thus, higher values
of C enforce increased exploration.
In a study (Mahadevan, 1996), a grid-world is described that is especially useful as
a test bed for the analysis of RL algorithms. For our purposes, it is of particular interest
because it is easy to design experiments containing suboptimal limit-cycles. Figure 11, panel
(a), illustrates the 7  7 grid-world. A controller has to learn a policy that leads it from
any initial location to the goal state. At each step, the agent can move to any adjacent
space (up, down, left or right). If the agent reaches the goal state then its next position
is randomly set to any square of the grid (with uniform probability) to start another trial.
There are also one-way membranes that allow the agent to move into one direction but
not into the other. In these experiments, these membranes form inverted cups that the
agent can enter from any side but can only leave through the bottom, playing the role
of a local maximum. Transitions are stochastic: the agent moves to the correct square
9
with probability p = 10
and to any of the free adjacent spaces (uniform distribution) with
1
probability 1  p = 10 . Rewards are assigned as follows. The default reward is r = 0.
If the agent traverses a membrane it obtains a reward of r = 1. Reaching the goal state
assigns r = 2.5. The parameters chosen for this simulation were the following. For our
MDP-agent, we have chosen hyperparameters 0 = 1 and 0 = 1 and precision p = 1.
For R-learning, we have chosen learning rates  = 0.5 and  = 0.001, and the exploration
constant has been set to C = 5, C = 30 and to C = 200. A total of 10 runs were carried
out for each algorithm. The results are presented in Figure 11 and Table 2. R-learning only
learns the optimal policy given sufficient exploration (panels d & e, bottom row), whereas
the Bayesian control rule learns the policy successfully. In Figure 11f, the learning curve of
R-learning for C = 5 and C = 30 is initially steeper than the Bayesian controller. However,
the latter attains a higher average reward around time step 125,000 onwards. We attribute
this shallow initial transient to the phase where the distribution over the operation modes
is flat, which is also reflected by the initially random exploratory behavior.

6. Discussion
The key idea of this work is to extend the minimum relative entropy principle, i.e. the
variational principle underlying Bayesian estimation, to the problem of adaptive control.
499

fiOrtega & Braun

From a coding point of view, this work extends the idea of maximal compression of the
observation stream to the whole experience of the agent containing both the agents actions
and observations. This not only minimizes the amount of bits to write when saving/encoding
the I/O stream, but it also minimizes the amount of bits required to produce/decode an
action (MacKay, 2003, Ch. 6).
This extension is non-trivial, because there is an important caveat for coding I/O sequences: unlike observations, actions do not carry any information that could be used for
inference in adaptive coding because actions are issued by the decoder itself. The problem
is that doing inference on ones own actions is logically inconsistent and leads to paradoxes
(Nozick, 1969). This seemingly innocuous issue has turned out to be very intricate and
has been investigated intensely in the recent past by researchers focusing on the issue of
causality (Pearl, 2000; Spirtes et al., 2000; Dawid, 2010). Our work contributes to this body
of research by providing further evidence that actions cannot be treated using probability
calculus alone.
If the causal dependencies are carefully taken into account, then minimizing the relative
entropy leads to a rule for adaptive control which we called the Bayesian control rule. This
rule allows combining a class of task-specific agents into an agent that is universal with
respect to this class. The resulting control law is a simple stochastic control rule that is
completely general and parameter-free. As the analysis in this paper shows, this control
rule converges to the true control law under mild assumptions.
6.1 Critical Issues
 Causality. Virtually every adaptive control method in the literature successfully treats
actions as conditionals over observation streams and never worries about causality.
Thus, why bother about interventions? In a decision-theoretic setup, the decision
maker chooses a policy     maximizing
P the expected utility U over the outcomes
  , i.e.   := arg max E[U |] =  Pr(|)U (). Choosing    is formally
equivalent to choosing the Kronecker delta function  as the probability distribution
over policies. In this case, the conditional probabilities Pr(|) and Pr(|) coincide,
since
Pr(, ) = Pr()Pr(|) =  Pr(|) = Pr(, ).
In this sense, the choice of the policy causally precedes the interactions. As we have
discussed in Section 3 however, when there is uncertainty about the policy (i.e. Pr() 6=
 ), then causal belief updates are crucial. Essentially, this problem arises because
the uncertainty over the policy is resolved during the interactions. Hence, treating
actions as interventions seamlessly extends them to the status of random variables.
 Where do prior probabilities/likelihood models/policies come from? The predictor in
the Bayesian control rule is essentially a Bayesian predictor and thereby entails (almost) the same modeling paradigm. The designer has to define a class of hypotheses
over the environments, construct appropriate likelihood models, and choose a suitable
prior probability distribution to capture the models uncertainty. Similarly, under sufficient domain knowledge, an analogous procedure can be applied to construct suitable
operation modes. However, there are many situations where this is a difficult or even
500

fiA Minimum Relative Entropy Principle for Learning and Acting

intractable problem in itself. For example, one can design a class of operation modes
by pre-computing the optimal policies for a given class of environments. Formally, let
 be a class of hypotheses modeling environments and let  be class of policies. Given
a utility criterion U , define the set of operation modes M := {m } by constructing each operation mode as m := (,   ),    , where   := arg max E[U |, ].
However, computing the optimal policy   is in many cases intractable. In some
cases, this can be remedied by characterizing the operation modes through optimality
equations which are solved by probabilistic inference as in the example of the MDP
agent in Section 5.2. Recently, we have applied a similar approach to adaptive control
problems with linear quadratic regulators (Braun & Ortega, 2010).
 Problems of Bayesian methods. The Bayesian control rule treats an adaptive control
problem as a Bayesian inference problem. Hence, all the problems typically associated
with Bayesian methods carry over to agents constructed with the Bayesian control
rule. These problems are of both analytical and computational nature. For example,
there are many probabilistic models where the posterior distribution does not have a
closed-form solution. Also, exact probabilistic inference is in general computationally
very intensive. Even though there is a large literature in efficient/approximate inference algorithms for particular problem classes (Bishop, 2006), not many of them are
suitable for on-line probabilistic inference in more realistic environment classes.
 Bayesian control rule versus Bayes-optimal control. Directly maximizing the (subjective) expected utility for a given environment class is not the same as minimizing
the expected relative entropy for a given class of operation modes. The two methods
are based on different assumptions and optimality principles. As such, the Bayesian
control rule is not a Bayes-optimal controller. Indeed, it is easy to design experiments
where the Bayesian control rule converges exponentially slower (or does not converge
at all) than a Bayes-optimal controller to the maximum utility. Consider the following
simple example: Environment 1 is a k-state MDP in which only k consecutive actions
A reach a state with reward +1. Any interception with a B-action leads back to the
initial state. Consider a second environment which is like the first but actions A and
B are interchanged. A Bayes-optimal controller figures out the true environment in k
actions (either k consecutive As or Bs). Consider now the Bayesian control rule: The
optimal action in Environment 1 is A, in Environment 2 is B. A uniform ( 21 , 21 ) prior
over the operation modes stays a uniform posterior as long as no reward has been
observed. Hence the Bayesian control rule chooses at each time-step A and B with
equal probability. With this policy it takes about 2k actions to accidentally choose a
row of As (or Bs) of length k. From then on the Bayesian control rule is optimal
too. So a Bayes-optimal controller converges in time k, while the Bayesian control
rule needs exponentially longer. One way to remedy this problem might be to allow
the Bayesian control rule to sample actions from the same operation mode for several
time steps in a row rather than randomizing controllers in every cycle. However, if
one considers non-stationary environments this strategy
  can also break down. Consider, for example, an increasing MDP with k = 10 t , in which a Bayes-optimal
controller converges in 100 steps, while the Bayesian control rule does not converge
at all in most realizations, because the boundedness assumption is violated.
501

fiOrtega & Braun

6.2 Relation to Existing Approaches
Some of the ideas underlying this work are not unique to the Bayesian control rule. The
following is a selection of previously published work in the recent Bayesian reinforcement
learning literature where related ideas can be found.
 Compression principles. In the literature, there is an important amount of work
relating compression to intelligence (MacKay, 2003; Hutter, 2004b). In particular, it
has been even proposed that compression ratio is an objective quantitative measure of
intelligence (Mahoney, 1999). Compression has also been used as a basis for a theory
of curiosity, creativity and beauty (Schmidhuber, 2009).
 Mixture of experts. Passive sequence prediction by mixing experts has been studied
extensively in the literature (Cesa-Bianchi & Lugosi, 2006). In a study on onlinepredictors (Hutter, 2004a), Bayes-optimal predictors are mixed. Bayes-mixtures can
also be used for universal prediction (Hutter, 2003). For the control case, the idea
of using mixtures of expert-controllers has been previously evoked in models like the
MOSAIC-architecture (Haruno, Wolpert, & Kawato, 2001). Universal learning with
Bayes mixtures of experts in reactive environments has been studied in the work of
Poland and Hutter (2005) and Hutter (2002).
 Stochastic action selection. The idea of using actions as random variables, and the
problems that this entails, has been expressed in the work of Hutter (2004b, Problem
5.1). The study in Section 3 can be regarded as a thorough investigation of this open
problem. Other stochastic action selection approaches are found in the thesis of Wyatt (1997) who examines exploration strategies for (PO)MDPs, in learning automata
(Narendra & Thathachar, 1974) and in probability matching (Duda, Hart, & Stork,
2001) amongst others. In particular, the thesis discusses theoretical properties of
an extension to probability matching in the context of multi-armed bandit problems.
There, it is proposed to choose a lever according to how likely it is to be optimal and
it is shown that this strategy converges, thus providing a simple method for guiding
exploration.
 Relative entropy criterion. The usage of a minimum relative entropy criterion to
derive control laws underlies the KL-control methods developed in the work of Todorov
(2006, 2009) and Kappen et al. (2010). There, it has been shown that a large class
of optimal control problems can be solved very efficiently if the problem statement
is reformulated as the minimization of the deviation of the dynamics of a controlled
system from the uncontrolled system. A related idea is to conceptualize planning as
an inference problem (Toussaint, Harmeling, & Storkey, 2006). This approach is based
on an equivalence between maximization of the expected future return and likelihood
maximization which is both applicable to MDPs and POMDPs. Algorithms based on
this duality have become an active field of current research. See for example the work
of Rasmussen and Deisenroth (2008), where very fast model-based RL techniques are
used for control in continuous state and action spaces.
502

fiA Minimum Relative Entropy Principle for Learning and Acting

7. Conclusions
This work introduces the Bayesian control rule, a Bayesian rule for adaptive control. The
key feature of this rule is the special treatment of actions based on causal calculus and the
decomposition of an adaptive agent into a mixture of operation modes, i.e. environmentspecific agents. The rule is derived by minimizing the expected relative entropy from the
true operation mode and by carefully distinguishing between actions and observations. Furthermore, the Bayesian control rule turns out to be exactly the predictive distribution over
the next action given the past interactions that one would obtain by using only probability
and causal calculus. Furthermore, it is shown that agents constructed with the Bayesian
control rule converge to the true operation mode under mild assumptions: boundedness,
which is related to ergodicity; and consistency, demanding that two indistinguishable hypotheses share the same policy.
We have presented the Bayesian control rule as a way to solve adaptive control problems
based on a minimum relative entropy principle. Thus, the Bayesian control rule can either
be regarded as a new principled approach to adaptive control under a novel optimality
criterion or as a heuristic approximation to traditional Bayes-optimal control. Since it
takes on a similar form to Bayes rule, the adaptive control problem could then be translated
into an on-line inference problem where actions are sampled stochastically from a posterior
distribution. It is important to note, however, that the problem statement as formulated
here and the usual Bayes-optimal approach in adaptive control are not the same. In the
future the relationship between these two problem statements deserves further investigation.

Acknowledgments
We thank Marcus Hutter, David Wingate, Zoubin Ghahramani, Jose Aliste, Jose Donoso,
Humberto Maturana and the anonymous reviewers for comments on earlier versions of this
manuscript and/or inspiring discussions. We thank the Ministerio de Planificacion de Chile
(MIDEPLAN) and the Bohringer-Ingelheim-Fonds (BIF) for funding.

Appendix A. Proofs
A.1 Proof of Theorem 1
Proof. The proof follows the same line of argument as the solution to Equation 3 with
the crucial difference that
treated as interventions. Consider without loss of
P actions are
at in Equation 9. Note that the relative entropy can be
generality the summand m P (m)Cm
written as a difference of two logarithms, where only one term depends on Pr to be varied.
Therefore, one can pull out the other term and write it as a constant c. This yields

c

X
m

P (m)

X

ao<t

P (ao<t |m)

X
at

503

P (at |m, ao<t ) ln Pr(at |ao<t ).

fiOrtega & Braun

Substituting P (ao<t |m) by P (m|ao<t )P (ao<t )/P (m) using Bayes rule and further rearrangement of the terms leads to
XX
X
=c
P (m|ao<t )P (ao<t )
P (at |m, ao<t ) ln Pr(at |ao<t )
m ao<t

=c

X

P (ao<t )

at

X
at

ao<t

P (at |ao<t ) ln Pr(at |ao<t ).

P
The inner sum has the form  x p(x) ln q(x), i.e. the cross-entropy between q(x) and p(x),
which is minimized when q(x) = p(x) for all x. Let P denote the optimum distribution
for Pr. By choosing this optimum one obtains P(at |ao<t ) = P (at |ao<t ) for all at . Note that
the solution to this variational problem is P
independent of the P
weighting P (ao<t ). Since the
o
a and
same argument applies to any summand m P (m)Cm
m P (m)Cm in Equation 9,
their variational problems are mutually independent. Hence,
P(at |ao<t ) = P (at |ao<t )

P(ot |ao<t ) = P (ot |ao<t at )

for all aot  Z  . For P (at |ao<t ), introduce the variable m via a marginalization and then
apply the chain rule:
X
P (at |ao<t ) =
P (at+1 |m, ao<t )P (m|ao<t ).
m

The term P (m|aot ) can be further developed as

P (ao<t |m)P (m)


m P (ao<t |m )P (m )
Qt1
P (m)  =1 P (a |m, ao< )P (o |m, ao< a )
=P
Qt1



m P (m )
 =1 P (a |m , ao< )P (o |m , ao< a )
Qt1
P (m)  =1 P (o |m, ao< a )
.
=P
Qt1


m P (m )
 =1 P (o |m , ao< a )

P (m|ao<t ) = P

The first equality is obtained by applying Bayes rule and the second by using the chain
rule for probabilities. To get the last equality, one applies the interventions to the causal
factorization. Thus, P (a |m, ao< ) = 1 and P (o |m, ao< a ) = P (o |m, ao< a ). The
equations characterizing P (ot |ao<t at ) are obtained similarly.
A.2 Proof of Theorem 2
Proof. As has been pointed out in (14), a particular realization of the divergence process
dt (m km) can be decomposed as
X
dt (m km) =
gm (m ; Tm ),
m

where the gm (m ; Tm ) are sub-divergences of dt (m km) and the Tm form a partition of Nt .
However, since dt (m km) has bounded variation for all m  M, one has for all   > 0, there
is a C(m)  0, such that for all m  M, all t  Nt and all T  Nt , the inequality
fi
fi
fi
fi
figm (m ; Tm )  Gm (m ; Tm )fi  C(m)
504

fiA Minimum Relative Entropy Principle for Learning and Acting

holds with probability  1    . However, due to (15),
Gm (m ; Tm )  0
for all m  M. Thus,

gm (m ; Tm )  C(m).

If all the previous inequalities hold simultaneously then the divergence process can be
bounded as well. That is, the inequality
dt (m km)  M C(m)

(22)

holds with probability  (1    )M where M := |M|. Choose
(m)
(m) := max{0, ln PP(m
 ) }.
(m)
Since 0  ln PP(m
Using the
 )  (m), it can be added to the right hand side of (22).

definition of dt (m km), taking the exponential and rearranging the terms one obtains


P (m )

t
Y



 =1

(m)

P (o |m , ao< a )  e

P (m)

t
Y

 =1

P (o |m, ao< a )

where (m) := M C(m) + (m)  0. Identifying the posterior probabilities of m and m
by dividing both sides by the normalizing constant yields the inequality
P (m |aot )  e(m) P (m|aot ).
2

This inequality holds simultaneously for all m  M with probability  (1    )M and in
particular for  := minm {e(m) }, that is,
P (m |aot )  P (m|aot ).
But since this is valid for any m  M, and because maxm {P (m|aot )} 
P (m |aot ) 

1
M,

one gets


,
M

with probability
 1   for arbitrary  > 0 related to   through the equation   :=

M2
1
1  .
A.3 Proof of Theorem 3
Proof. The divergence process dt (m km) can be decomposed into a sum of sub-divergences
(see Equation 14)
X
gm (m; Tm ).
(23)
dt (m km) =
m

m

Furthermore, for every
 M, one has that for all  > 0, there is a C  0, such that for
all t  N and for all T  Nt
fi
fi
fi
fi
figm (m; T )  Gm (m; T )fi  C(m)
505

fiOrtega & Braun

with probability  1    . Applying this bound to the summands in (23) yields the lower
bound
X
X

gm (m; Tm ) 
Gm (m; Tm )  C(m)
m

m

(1    )M ,

which holds with probability 
where M := |M|. Due to Inequality 15, one has




that for all m 6= m , Gm (m; Tm )  0. Hence,
X

Gm (m; Tm )  C(m)  Gm (m; Tm )  M C
m

where C := maxm {C(m)}. The members of the set Tm are determined stochastically; more
specifically, the ith member is included into Tm with probability P (m |aoi )  /M for
some  > 0 by Theorem 2. But since m 
/ [m ], one has that Gm (m; Tm )   as t  

with probability  1   for arbitrarily chosen   > 0. This implies that
lim dt (m km)  lim Gm (m; Tm )  M C  

t

t

with probability  1  , where  > 0 is arbitrary and related to   as  = 1  (1    )M +1 .
Using this result in the upper bound for posterior probabilities yields the final result
P (m) dt (m km)
e
= 0.
t P (m )

0  lim P (m|aot )  lim
t

A.4 Proof of Theorem 4
Proof. We will use the abbreviations pm (t) := P (at |m, ao<t ) and wm (t) := P (m|ao<t ).
Decompose P (at |ao<t ) as
X
X
pm (t)wm (t) +
pm (t)wm (t).
(24)
P (at |ao<t ) =
m[m
/ ]

m[m ]

The first sum on the right-hand side is lower-bounded by zero and upper-bounded by
X
X
pm (t)wm (t) 
wm (t)
m[m
/ ]

m[m
/ ]

because pm (t)  1. Due to Theorem 3, wm (t)  0 as t   almost surely. Given  > 0
and   > 0, let t0 (m) be the time such that for all t  t0 (m), wm (t) <  . Choosing
t0 := maxm {t0 (m)}, the previous inequality holds for all m and t  t0 simultaneously with
probability  (1    )M . Hence,
X
X
pm (t)wm (t) 
wm (t) < M  .
(25)
m[m
/ ]

m[m
/ ]

To bound the second sum in (24) one proceeds as follows. For every member m  [m ],
one has that pm (t)  pm (t) as t  . Hence, following a similar construction as above,
one can choose t0 such that for all t  t0 and m  [m ], the inequalities
fi
fi
fi
fi
fipm (t)  pm (t)fi < 
506

fiA Minimum Relative Entropy Principle for Learning and Acting

hold simultaneously for the precision  > 0. Applying this to the second sum in Equation 24
yields the bounds
X
X
X


pm (t) +  wm (t).
pm (t)wm (t) 
pm (t)   wm (t) 
m[m ]

m[m ]

Here pm (t)  
that




m[m ]

are multiplicative constants that can be placed in front of the sum. Note
1

X

m[m ]

wm (t) = 1 

X

m[m
/ ]

wm (t) > 1  .

Use of the above inequalities allows simplifying the lower and upper bounds respectively:
 X
pm (t)  
wm (t) > pm (t)(1   )    pm (t)  2 ,
m[m ]

pm (t) + 

 X


m[m ]

(26)

wm (t)  pm (t) +  < pm (t) + 2 .

Combining the inequalities (25) and (26) in (24) yields the final result:
fi
fi
fi
fi

P
(a
|ao
(t)
)

p
fi
fi < (2 + M ) = ,
t
m
<t

which holds with probability  1   for arbitrary  > 0 related to   as   = 1 
and arbitrary precision .



M

1

A.5 Gibbs Sampling Implementation for MDP Agent
Inserting the likelihood given in Equation 19 into Equation 13 of the Bayesian control rule,
one obtains the following expression for the posterior
P (m|at , ot ) =
=

P (x |m, x, a)P (r|m, x, a, x )P (m|a<t , o<t )






M P (x |m , x, a)P (r|m , x, a, x )P (m |a<t , o<t ) dm
P (r|m, x, a, x )P (m|a<t , o<t )
R
,




M P (r|m , x, a, x )P (m |a<t , o<t ) dm
R

(27)

where we have replaced the sum by an integration over m , the finite-dimensional real space
containing only the average reward and the Q-values of the observed states, and where we
have simplified the term P (x |m, x, a) because it is constant for all m  M.
The likelihood model P (r|m , x, a, x ) in Equation 27 encodes a set of independent normal distributions over the immediate reward with means m (x, a, x ) indexed by triples
(x, a, x )  X  A  X . In other words, given (x, a, x ), the rewards are drawn from a
normal distribution with unknown mean m (x, a, x ) and known variance  2 . The sufficient statistics are given by n(x, a, x ), the number of times that the transition x  x
under action a, and r(x, a, x ), the mean of the rewards obtained in the same transition.
The conjugate prior distribution is well known and given by a normal distribution with
hyperparameters 0 and 0 :
r
n
2 o
0


0
.
(28)
exp  2 m (x, a, x )  0
P (m (x, a, x )) = N(0 , 1/0 ) =
2
507

fiOrtega & Braun

The posterior distribution is given by
P (m (x, a, x )|at , ot ) = N((x, a, x ), 1/(x, a, x ))
where the posterior hyperparameters are computed as
0 0 + p n(x, a, x ) r(x, a, x )
0 + p n(x, a, x )
(x, a, x ) = 0 + p n(x, a, x ).

(x, a, x ) =

(29)

By introducing the shorthand V (x) := maxa Q(x, a), we can write the posterior distribution over  as
P (|at , ot ) = N(, 1/S)
(30)
where
 =

1 X
(x, a, x )((x, a, x )  Q(x, a) + V (x )),
S
x,a,x
X
S=
(x, a, x ).
x,a,x

The posterior distribution over the Q-values is more difficult to obtain, because each
Q(x, a) enters the posterior distribution both linearly and non-linearly through . However,
if we fix Q(x, a) within the max operations, which amounts to treating each V (x) as a
constant within a single Gibbs step, then the conditional distribution can be approximated
by


P (Q(x, a)|at , ot )  N Q(x, a), 1/S(x, a)
(31)
where

Q(x, a) =

X
1
(x, a, x )((x, a, x )   + V (x )),
S(x, a) 
x
X
(x, a, x ).
S(x, a) =
x

We expect this approximation to hold because the resulting update rule constitutes a contraction operation that forms the basis of most stochastic approximation algorithms (Mahadevan, 1996). As a result, the Gibbs sampler draws all the values from normal distributions. In each cycle of the adaptive controller, one can carry out several Gibbs sweeps to
obtain a sample of m to improve the mixing of the Markov chain. However, our experimental
results have shown that a single Gibbs sweep per state transition performs reasonably well.
Once a new parameter vector m is drawn, the Bayesian control rule proceeds by taking the
optimal action given by Equation 20. Note that only the  and  entries of the transitions
that have occurred need to be represented explicitly; similarly, only the Q-values of visited
states need to be represented explicitly.
508

fiA Minimum Relative Entropy Principle for Learning and Acting

References
Auer, P., CesaBianchi, N., & Fischer, P. (2002). Finite-time analysis of the multiarmed
bandit problem. Machine Learning, 47, 235256.
Bertsekas, D. (1987). Dynamic Programming: Deterministic and Stochastic Models.
Prentice-Hall, Upper Saddle River, NJ.
Bishop, C. M. (2006). Pattern Recognition and Machine Learning. Springer.
Braun, D. A., & Ortega, P. A. (2010). A minimum relative entropy principle for adaptive
control in linear quadratic regulators. In The 7th conference on informatics in control,
automation and robotics, Vol. 3, pp. 103108.
Cesa-Bianchi, N., & Lugosi, G. (2006). Prediction, Learning and Games. Cambridge University Press.
Dawid, A. P. (2010). Beware of the DAG!. Journal of Machine Learning Research, (to
appear).
Dearden, R., Friedman, N., & Andre, D. (1999). Model based bayesian exploration. In
In Proceedings of Fifteenth Conference on Uncertainty in Artificial Intelligence, pp.
150159.
Dearden, R., Friedman, N., & Russell, S. (1998). Bayesian q-learning. In AAAI
98/IAAI 98: Proceedings of the fifteenth national/tenth conference on Artificial intelligence/Innovative applications of artificial intelligence, pp. 761768. American Association for Artificial Intelligence.
Duda, R. O., Hart, P. E., & Stork, D. G. (2001). Pattern Classification (Second edition).
Wiley & Sons, Inc.
Duff, M. O. (2002). Optimal learning: computational procedures for bayes-adaptive markov
decision processes. Ph.D. thesis. Director-Andrew Barto.
Grunwald, P. (2007). The Minimum Description Length Principle. The MIT Press.
Haruno, M., Wolpert, D., & Kawato, M. (2001). Mosaic model for sensorimotor learning
and control. Neural Computation, 13, 22012220.
Haussler, D., & Opper, M. (1997). Mutual information, metric entropy and cumulative
relative entropy risk. The Annals of Statistics, 25, 24512492.
Hutter, M. (2002). Self-optimizing and pareto-optimal policies in general environments
based on bayes-mixtures. In COLT.
Hutter, M. (2003). Optimality of universal Bayesian prediction for general loss and alphabet.
Journal of Machine Learning Research, 4, 971997.
Hutter, M. (2004a). Online prediction  bayes versus experts. Tech. rep.. Presented at
the EU PASCAL Workshop on Learning Theoretic and Bayesian Inductive Principles
(LTBIP-2004).
Hutter, M. (2004b). Universal Artificial Intelligence: Sequential Decisions based on Algorithmic Probability. Springer, Berlin.
509

fiOrtega & Braun

Kappen, B., Gomez, V., & Opper, M. (2010). Optimal control as a graphical model inference
problem. JMLR (to appear).
MacKay, D. J. C. (2003). Information Theory, Inference, and Learning Algorithms. Cambridge University Press.
Mahadevan, S. (1996). Average reward reinforcement learning: Foundations, algorithms,
and empirical results. Machine Learning, 22 (1-3), 159195.
Mahoney, M. V. (1999). Text compression as a test for artificial intelligence. In AAAI/IAAI,
pp. 486502.
Narendra, K., & Thathachar, M. A. L. (1974). Learning automata - a survey. IEEE
Transactions on Systems, Man, and Cybernetics, SMC-4 (4), 323334.
Nozick, R. (1969). Newcombs problem and two principles of choice. In Rescher, N. (Ed.),
Essays in Honor of Carl G. Hempel, pp. 114146. Reidel.
Opper, M. (1998). A bayesian approach to online learning. Online Learning in Neural
Networks, 363378.
Ortega, P. A., & Braun, D. A. (2010). A bayesian rule for adaptive control based on causal
interventions. In The third conference on artificial general intelligence, pp. 121126.
Pearl, J. (2000). Causality: Models, Reasoning, and Inference. Cambridge University Press,
Cambridge, UK.
Poland, J., & Hutter, M. (2005). Defensive universal learning with experts. In ALT.
Rasmussen, C. E., & Deisenroth, M. P. (2008). Recent Advances in Reinforcement Learning,
Vol. 5323 of Lecture Notes on Computer Science, LNAI, chap. Probabilistic Inference
for Fast Learning in Control, pp. 229242. Springer-Verlag.
Robbins, H. (1952). Some aspects of the sequential design of experiments. Bulletin American
Mathematical Socierty, 58, 527535.
Russell, S., & Norvig, P. (2010). Artificial Intelligence: A Modern Approach (3rd edition).
Prentice-Hall.
Schmidhuber, J. (2009). Simple algorithmic theory of subjective beauty, novelty, surprise,
interestingness, attention, curiosity, creativity, art, science, music, jokes. Journal of
SICE, 48 (1), 2132.
Shafer, G. (1996). The art of causal conjecture. The MIT Press.
Singh, S. P. (1994). Reinforcement learning algorithms for average-payoff markovian decision
processes. In National Conference on Artificial Intelligence, pp. 700705.
Spirtes, P., Glymour, C., & Scheines, R. (2000). Causation, Prediction and Search (2nd
edition). Springer-Verlag, New York.
Sutton, R. S., & Barto, A. G. (1998). Reinforcement Learning: An Introduction. MIT Press,
Cambridge, MA.
Todorov, E. (2006). Linearly solvable markov decision problems. In Advances in Neural
Information Processing Systems, Vol. 19, pp. 13691376.
510

fiA Minimum Relative Entropy Principle for Learning and Acting

Todorov, E. (2009). Efficient computation of optimal actions. Proceedings of the National
Academy of Sciences U.S.A., 106, 1147811483.
Toussaint, M., Harmeling, S., & Storkey, A. (2006). Probabilistic inference for solving
(po)mdps. Tech. rep. EDI-INF-RR-0934, University of Edinburgh.
Watkins, C. (1989). Learning from Delayed Rewards. Ph.D. thesis, University of Cambridge,
Cambridge, England.
Wyatt, J. (1997). Exploration and Inference in Learning from Reinforcement. Ph.D. thesis,
Department of Artificial Intelligence, University of Edinburgh.

511

fi