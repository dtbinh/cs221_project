Journal of Articial Intelligence Research 21 (2004) 37-62

Submitted 03/03; published 01/04

K-Implementation
Dov Monderer
Moshe Tennenholtz

dov@ie.technion.ac.il
moshet@ie.technion.ac.il

Faculty of Industrial Engineering and Management
Technion  Israel Institute of Technology
Haifa 32000, Israel

Abstract
This paper discusses an interested party who wishes to inuence the behavior of agents
in a game (multi-agent interaction), which is not under his control. The interested party
cannot design a new game, cannot enforce agents behavior, cannot enforce payments by the
agents, and cannot prohibit strategies available to the agents. However, he can inuence
the outcome of the game by committing to non-negative monetary transfers for the dierent
strategy proles that may be selected by the agents. The interested party assumes that
agents are rational in the commonly agreed sense that they do not use dominated strategies.
Hence, a certain subset of outcomes is implemented in a given game if by adding nonnegative payments, rational players will necessarily produce an outcome in this subset.
Obviously, by making suciently big payments one can implement any desirable outcome.
The question is what is the cost of implementation? In this paper we introduce the notion
of k-implementation of a desired set of strategy proles, where k stands for the amount of
payment that need to be actually made in order to implement desirable outcomes. A major
point in k-implementation is that monetary oers need not necessarily materialize when
following desired behaviors. We dene and study k-implementation in the contexts of games
with complete and incomplete information. In the latter case we mainly focus on the VCG
games. Our setting is later extended to deal with mixed strategies using correlation devices.
Together, the paper introduces and studies the implementation of desirable outcomes by
a reliable party who cannot modify game rules (i.e. provide protocols), complementing
previous work in mechanism design, while making it more applicable to many realistic CS
settings.

1. Introduction
The design and analysis of interactions of self-interested parties are central to the theory and
application of multi-agent systems. In particular, the theory of economic mechanism design
or, more generally, implementation theory (Maskin, 1999; Maskin & Sjostrom, 2002) has
become a standard tool for researchers in the areas of multi-agent systems and e-commerce
(Rosenschein & Zlotkin, 1994; Nisan & Ronen, 1999; Shoham & Tennenholtz, 2001; Feigenbuam & S, 2002; Tennenholtz, 1999; Papadimitriou, 2001). In classical mechanism design1
a center denes an interaction for self-motivated parties that will allow it to obtain some
desired goal (such as maximizing revenue or social welfare) taking the agents incentives
1. See e.g., Fudenberg and Tirole (1991), Chapter 7, or Mas-Colell, Whinston, and Green (1995), Chapter
23.
c
2004
AI Access Foundation. All rights reserved.

fiMonderer & Tennenholtz

into account. This perspective has been largely motivated by the view of the center as a
government or a seller that can dene and control the rules of interaction. However, in
many distributed systems and multi-agent interactions, interested parties cannot control
the rules of interactions. A network manager for example cannot simply change the communication protocols in a given distributed systems in order to lead to desired behaviors,
and a broker cannot change the rules in which goods are sold by an agency auctioneer to the
public. The focus of this paper is on how a reliable interested party, which cannot change
the rules of interaction, and cannot enforce behavior, can obtain its desired goals (in service
of the community or for its own benets). The reliable party has only one source of power:
its reliability. It can commit to payments to the dierent agents, when certain observable
outcomes will be reached, and the agents can be sure that they will be paid appropriately.
In our work we introduce the study of implementation of desired behaviors by interested
party as above.2 There are two major issues that make the task non-trivial and challenging:
1. The interested party may wish to assume as little as possible about agents rationality.
Ideally, all that will be assumed is that an agent does not adopt a strategy if it is dominated
by another strategy.
2. The interested party may wish to minimize its expenses.
Consider the following simple congestion setting.3 Assume that there are two agents,
1 and 2, that have to select among two service providers (e.g., machines, communication
lines, etc.) One of the service providers, f , is a fast one, while the other, s, is a slower one.
We capture this by having an agent obtaining a payo of 6 when he is the only one that
uses f , and a payo of 4 when he is the only one who uses s. If both agents select the same
service provider then its speed of operation decreases by a factor of 2, leading to half the
payo. That is, if both agents use f then each one of them obtains a payo of 3, while if
both agents use s then each one of them obtains 2. In a matrix form, this game is described
by the following bimatrix:

f

s

3

6

f
3

4

M=
4

2

s
6

2

2. For another interesting use of an interested party see Naor, Pinkas, and Sumner (1999).
3. Congestion in the context of self-motivated parties is a central topic in the recent CS literature (Koutsoupias & Papadimitriou, 1999; Roughgarden, 2001; Roughgarden & Tardos, 2002), as well as in the
game theory literature (Rosenthal, 1973; Monderer & Shapley, 1996). This example is used for purposes
of illustration only; however, the technique used in this example can be extended to arbitrary complex
games, as we will later show.

38

fiK-Implementation

Assume that our reliable interested party may wish to prevent the agents from using the
same service provider (leading to low payos for both). Then it can do as follows: it can
promise to pay agent 1 a value of 10 if both agents will use f , and promise to pay agent 2
a value of 10 if both agents will use s. These promises transform M to the following game:

f

s

13

6

f
3

M =
4

4
2

s
6

12

Notice that in M  , strategy f is dominant for agent 1, and strategy s is dominant for
agent 2. As a result the only rational strategy prole is the one in which agent 1 chooses f
and agent 2 chooses s. Hence, the interested party implements one of the desired outcomes.
Moreover, given that the strategy prole (f, s) is selected the interested party will have to
pay nothing. It has just implemented (in dominant strategies) a desired behavior (obtained
in one of the Nash equilibria) with zero cost, relying only on its creditability, without
modifying the rules of interactions or enforcing any type of behavior.
Similar simple examples can be found in other contexts (see e.g., Segal (1999), footnote
30, and Dybvig and Spatt (1983), Spiegler (2000)). Our work advocates the following line
of thought. Instead of reasoning about how agents will behave in the given protocol, we
may wish to cause agents to follow particular behaviors by making them desirable, using
monetary oers. An important point is that the monetary oers need not necessarily be
fully materialized when agents follow the desired behavior.
More formally, in this paper we introduce the notion and study of k-implementation
of a desired set of strategy proles, where k stands for the amount of payment that need
to be actually made in order to implement the desirable outcomes.4 Section 3 provides
a characterization of k-implementation of a single pure strategy prole for nite games
and innite regular games with complete information. This provides an eective algorithm
for determining the optimal monetary oers to be made in order to implement a desired
outcome, while minimizing expenses. In Section 4 we address the problem of nding a kimplementation of a set of strategy proles. We show that the general problem in this regard
4. Notice that this perspective is in the spirit of work on Articial Social Systems in AI (see e.g., Shoham
and Tennenholtz (1995)), where we search for some form of modication to the system, such that
given the modied system, and assuming agents tend to work individually, a desirable outcome will be
obtained.

39

fiMonderer & Tennenholtz

is NP-hard, and consider a modication of k-implementation, titled exact implementation,
under which the problem becomes tractable.5
Games with incomplete information introduce further challenges. In particular, in Section 5 we consider the VCG mechanisms for combinatorial auctions 6 . This setting has
interesting characteristics since the interested party cannot in general see the agents types
and needs to decide on appropriate payment only based on observed behaviors. We show
that in general 0-implementation (i.e. implementation with zero cost) in settings with incomplete information is impossible, but any ex-post equilibrium of a frugal VCG mechanism
is 0-implementable.
In Section 6 we study the important case of mixed strategies. In that context, unless
we assume algorithmic observability, the interested party can observe only the actions selected and not the probabilistic process leading to the selection, and therefore our earlier
results do not apply. For example, consider the simple routing problem above, one may
wish to consider the implementation of a more fair outcome, such as the one obtained
in the mixed strategy Nash equilibrium of the game M . In order to address this issue, we
introduce the concept of implementation devices, and show that any mixed strategy equilibrium is 0-implementable with an implementation device. We also show that any correlated
equilibrium has this property.

2. k-implementation
A pre-game in strategic form is a pair G = (N, X), where N = {1, 2,    , n} is the set of
players, X = X1  X2     Xn , where for every i, Xi is the set of strategies available to
player i. Let i be a player, the set of strategy proles of all other players is denoted by Xi ,
and a generic element in Xi is denoted by xi .
A payo function vector is an n-tuple U = (U1 , U2 ,    , Un ), where Ui : X   is the
payo function of player i. We assume that the payos of the players are represented by
some common monetary unit, and that the payo functions are bounded7 .
A pre-game G and a payo function vector U denes a game in strategic form denoted
by G(U ). The game G(U ) is nite if the strategy sets are nite.
Let xi , yi be strategies of player i in the game G(U ).
xi dominates yi if Ui (xi , xi )  Ui (yi , xi ) for every xi  Xi , and there exists xi 
Xi for which a strict inequality holds. yi is a dominated strategy if it is dominated by some
other strategy of i. xi is a dominant strategy for i if it dominates every other strategy of i.
A prole of strategies x is a (Nash) equilibrium if for every player i, xi is a best-response
5. Complexity of implementation when the organizer controls the structure of the game is discussed by
Conitzer and Sandholm (2002).
6. The VCG mechanisms (Vickrey, 1961; Clarke, 1971; Groves, 1973) have been widely discussed in the
context of combinatorial auctions, a topic which received much attention in the recent multi-agent
systems and e-commerce literature, e.g., (Nisan, 2000; Sandholm, Suri, Gilpin, & Levine, 2001; Parkes,
1999)
7. If the game is nite the payo functions are automatically bounded.

40

fiK-Implementation

to xi . That is,
Ui (xi , xi )  Ui (yi , xi )

for every i  N and yi  Xi .

That is, if every player i believes that all other players act according to x, he is better o
by playing according to x. Modern economic theory has made an (some times implicit)
assumption that economic interactions are in equilibrium. However, the rationale for this
assumption is in debate in many cases, and it is particulary so when there exist multiple
equilibrium proles. In contrast, using a non-dominated strategy is a rational behavior in
any reasonable denition of rationality. Moreover, refraining from the use of dominated
strategies is taken as the most basic idea and agreed upon technique in decision theory.
Let G = (N, X) be a pre-game. For every vector of payo functions V , let Xi (V )
be the set of non-dominated strategies of i in the game G(V ), and let X(V ) = X1 (V ) 
X2 (V ),    , Xn (V ). G(V ) is the game (N, X, V ), where, by an innocent abuse of notations
V denotes the vector of the payo functions restricted to X. A vector V of payo functions
is non-negative (V  0) if Vi (x)  0 for every player i and for every x  X.
Consider a set of desired strategy proles O  X in the game G(U ). A non-negative
vector of payo functions V implements O in G(U ) if
   X(U + V )  O.
Such a V is called a k-implementation of O in G(U ), if in addition


n

i=1 Vi (x)

 k for every x  X(U + V ).

Obviously, by paying every player i sucient amount of money for playing the strategy
associated with a particular strategy prole in O, one can implement O.
That is, the interested party commits herself to certain non-negative payos V , in such
a way that rational players will only choose strategy proles in O, and such that in the
worst case the interested party will have to pay at most k.
Note that implicitly we have made two important assumptions :
 Output observability: The interested party can observe the actions chosen by the
players.
 Commitment power: The interested party is reliable in the sense that the players
believe that she will indeed pay the additional payo dened by V .
However, the requirement V  0 means that the interested party cannot force players
to make payments based on their actions. In addition, the interested party cannot modify
the set of available strategies, or enforce behavior in any way. He can just reliably promise
positive monetary transfers conditioned on the observed outcome.
Let k(O) be the price of implementing O. That is, k(O) is the greatest lower bound
(GLB) of all non-negative numbers q for which there exists a q- implementation. That is,
41

fiMonderer & Tennenholtz

k(O) = k implies that for every  > 0 O has a (k + )- implementation vector V  , and O
does not have a k  - implementation for any k  < k. V is an optimal implementation of O if
V implements O and
n

max
Vi (x) = k(O).
xX(U +V )

i=1

V is an  optimal implementation of O if V implements O and
max
xX(U +V )

n


Vi (x)  k(O) + .

i=1

3. k-Implementation of singletons
When O is a singleton, that is O = {z}, we sometimes abuse notations and we will say
that z (instead of {z}) has a k-implementation in G(U ), and we refer to k(z) as the price
of implementing z.
3.1 Finite games
In this section we focus on nite games, and on the characterization of optimal k implementation of singletons.
Theorem 1 Let G(U ) be a nite game with at least two strategies to every player. Every
strategy prole z has an optimal implementation V , and moreover:
k(z) =

n

i=1

max (Ui (xi , zi )  Ui (zi , zi )) .

xi Xi

3.1.1

Proof : Let z  X and let V implements z. Let i  N . If for some xi 	= zi , for some
xi , Vi (xi , xi ) > 0, then one can modify Vi by changing this term to 0, and get a cheaper
implementation of z. Hence, we can assume without loss of generality that we deal with
payo function vectors V for which, for every i, Vi (xi , ) = 0 for every xi 	= zi .
As zi is a dominant strategy for i in G(U + V ),
Vi (zi , xi )+Ui (zi , xi )  Vi (xi , xi )+Ui (xi , xi )

for every xi  Xi , and for every xi  Xi .

Since for xi 	= zi , Vi (xi , ) = 0, a necessary condition for an implementation is
Vi (zi , xi ) + Ui (zi , xi )  Ui (xi , xi )

for every xi  Xi .

That is,
Vi (zi , xi )  max (Ui (xi , xi )  Ui (zi , xi )).
xi Xi

42

fiK-Implementation

One can use xi 	= zi in order to get a costless strict inequality required by the denition
of domination ( here we use our assumption that every player has at least two strategies).
Hence, an optimal implementation vector for z, V is dened for every i by: Vi (xi , ) = 0 for
xi 	= zi , and Vi (zi , xi ) = maxxi Xi (Ui (xi , zi )  Ui (zi , zi )) + (xi ), where  : Xi  
is a nonnegative function that satises (zi ) = 0, and for some xi 	= zi , (xi ) > 0.
Therefore (3.1.1) is satised. 
Note that z is in equilibrium if and only if for every player i, maxxi Xi (Ui (xi , zi ) 
Ui (zi , zi )) = 0. Hence the following characterization of equilibrium is a corollary of Theorem 1:
Corollary 1 Let G(U ) be a nite game with at least two strategies to every player, and let
z  X. z is in equilibrium if and only if z has a zero- implementation.
3.2 Innite games
When the game G(U ) is innite, one can get phenomena that contradicts our intuition. For
example, it is possible that Xi = {zi } but zi is not a dominant strategy. E.g., consider the
two-person game in which player 1 can choose the strategy z1 , or any number 0 < x1 < 1,
and player 2 can choose z2 or x2 . U1 (z1 , z2 ) = 0.5, U1 (z1 , x2 ) = 10, U1 (x1 , ) = x1 . U2 is
an arbitrary function. It is easily seen that every x1 is dominated by a bigger number in
the open interval (0,1), z1 is not dominated, and hence X1 = {z1 }. However, z1 does not
dominate x1 for x1 > 0.5. Moreover, the max operator used in the proofs of Theorem 1 and
2 may not be well-dened for innite games. A game G(U ) = (N, X, U ) is called regular if
every Xi is a compact metric space, and the payo functions are continuous on X endowed
with the product metric.
Theorem 2 Theorems 1 holds for regular games.
Proof : The proof requires very standard techniques, and therefore it is omitted.
We then immediately get:
Corollary 2 Corollary 1 holds for regular games.
3.3 Mixed strategies
For every nite set B we denote by (B) the set of
probability distributions over B. That is,
(B) consists of all functions q : B  [0, 1] with bB q(b) = 1. Let G(U ) = (N, X, U ) be
a nite game. The mixed extension of G(U ) is the innite game Gm (U m ) = (N, X m , U m ),
where X m = (X1 )  (X2 )      (Xn ), and for every player i, Uim (p1 , p2 ,    , pn ) =

m
xX p1 (x1 )p2 (x2 )    pn (xn )Ui (x). That is, Ui (p) is the expected payo of player i when
every player j (including i) is choosing his strategy ( independently of the other players)
with a randomizing device that chooses each strategy xj with probability pj (xj ).
A prole of mixed strategies p  X m is called a mixed-strategy equilibrium in G(U ) if
p is in equilibrium in the game Gm (U m ). By Nash (1950) every nite game possesses a
43

fiMonderer & Tennenholtz

mixed strategy equilibrium. Note that every strategy xi  Xi of i can be identied with
the mixed strategy in which i chooses xi with probability 1. In this sense, Xi is a subset of
Xim . When we deal with an environment in which mixed strategies are considered, we refer
to every strategy xi  Xi as a pure strategy of i.
Note that the possibility of using mixed strategies does not destroy our previous results.
That is, if xi is a dominant (dominated) strategy in G(U ), it continues to be a dominant
(dominated) strategy in Gm (U m ).
As Gm (U m ) is a regular game we can apply Theorem 2 Corollary 2 and deduce:
Theorem 3 Let G(U ) be a nite game in strategic form with at least two strategies for every
player. Let p be a prole of mixed strategies in G(U ). p is a mixed strategy equilibrium in
G(U ) if and only if p has a 0-implementation in Gm (U m ).
Hence, technically, the case of mixed strategies follows from the theorems regarding pure
strategies in innite games. However, the reader should notice that in this case our output
observability assumption has a strong implication. Implementing a mixed strategy prole in
Gm (U m ) actually means algorithm observability in G(U ). That is, the interested party can
observe the mixed strategies used by the players. This is a realistic assumption if we think
about the interested party as a systems administrator that deploys algorithms submitted
by users. The designer is not allowed to alter the users algorithms, but can verify the exact
content of these algorithms. Hence, for example, in such a setting, if a users algorithm
ips a coin in order to decide on its course of action, then the exact randomized algorithms,
including the particular coin ipping, can be viewed by the interested party. The interesting
case in which the interested party cannot observe the mixed strategies will be discussed in
Section 6.

4. k-implementation of sets
In the previous sections we dealt with some properties of k- implementation. In particular
we emphasized the interesting cases of k-implementations of singletons. However, from a
computational perspective, given a game G(U ), and a set of desired strategy prole O, it
may be of interest to nd the smallest integer k  0 for which a k- implementation exists.
We can show:
Theorem 4 Given a game G(U ), a set of desired strategy proles O, and an integer k  0,
deciding whether there exists a k implementation of O in G(U ) is NP-hard.
Proof : In order to prove the above theorem, we use a reduction from the SAT problem.
Given a set of primitive propositions {x1 , x2 , . . . , xn }, consider a CNF formula. A CNF
formula is a conjunction of clauses C1  C2  . . .  Cm , where Ci = l1i  li2  . . .  lisi (si  2)
and where ljq = xi or ljq = xi for some i (for every 1  j  m and 1  q  sj ). The SAT
problem is the following decision problem: given a CNF formula, is there a truth assignment
to the primitive propositions that satises it? This problem is known to be NP-complete.
44

fiK-Implementation

We will now show a polynomial reduction from SAT to the problem of deciding whether a
2- implementation exists, where the games are 2-person games. This will suce to prove
our result. Without loss of generality we restrict our attention to CNF formulas where both
xi and xi appear in the formula, and no clause refers to both xi and xi (1  i  n).
Both agents will have a strategy ci associated with clause Ci , for every 1  i  m.
In addition, both agents will have strategies yi , zi , associated with the literals xi and xi ,
respectively (1  i  n).
The payo of agent 1, p1 , will be dened as follows. For any strategy prole of the form
(ci , yj ) the payo will be 3 if xj appears in clause i and 0 otherwise. For any strategy prole
of the form (ci , zj ) the payo will be 3 if xj appears in clause i and 0 otherwise. For any
strategy prole of the form (ci , cj ) the payo will be 50 if i = j and 0 otherwise. For any
strategy prole of the form (yi , yj ) the payo will be 2 if i = j and 3 otherwise. For any
strategy prole of the form (zi , zj ) the payo will be 2 if i = j and 3 otherwise. For any
strategy prole of the form (yi , zj ) or the form (zi , yj ) the payo will be 1 if i = j and 3
otherwise. For any strategy prole of the form (yi , cj ) the payo will be 51 if xi or xi
appear in clause Cj and 0 otherwise. For any strategy prole of the form (zi , cj ) the payo
will be 51 if xi or xi appears in clause Cj and 0 otherwise.
The payo to agent 2, p2 , will be as follows. The payo for any strategy prole of the
form (yi , yi ) or (zi , zi ) will be 101; the payo for any strategy prole of the form (yi , zi ) or
(zi , yi ) will be 100; the payo for any strategy prole of the form (yi , zj ) or (zi , yj ) where
i 	= j will be 0. The payo for any strategy prole of the form (ci , cj ) will be 50 if i = j,
and 0 otherwise. For any strategy prole of the form (yi , cj ), (zi , cj ) the payo will be 50 if
i = j and 0 otherwise. The payo for any strategy prole of the form (ci , yj ), (ci , zj ) will be
0.
The set O of desired strategy proles will include all strategy proles excluding the
following: All strategy proles of the form (ci , s),(yi , zi ),(zi , yi ) (where s is any strategy)
will be prohibited.
If the formula is satisable then there is 2- implementation: add 1 to the payo obtained
by agent 1 in any strategy prole of the form (yi , s) if xi is true in the satisfying assignment,
and add 1 to the payo obtained by agent 1 in any strategy prole of the form (zi , s) if xi it
false. As for agent 2, increase its payo by 1 for (zi , yi ) if xi is true, and increase its payo
by 1 for (yi , zi ) if xi is false.
Notice that given the above construction the strategies of the form ci of agent 1 will
become dominated and will be removed. In addition, if xi has been assigned true (resp.
false) then strategy zi (resp. yi ) will become dominated. The corresponding strategies of
agent 2 (i.e. zi if xi is true and yi if xi is false) will become dominated too, which yield the
desired behavior.
Similarly, notice that since we must remain with at least one yi or zi for agent 1, it
must be the case that at least one yi or zi will be removed for agent 2, and that this cannot
be obtained with a payment of 1 (increasing the payo from 100 to 101). Hence, in a 2implementation the payment of agent 2 should be 1. However, notice that we must add 1
to the payo of agent 1 for at least one of the elements of the form (yi , yi ) or (zi , zi ) which
45

fiMonderer & Tennenholtz

correspond to an xi or xi that appear in clause j (i.e. for at least one of the literals in
clause j, we need to add 1 to a strategy prole of the form (yi , yi ) or (zi , zi ) associated with
that literal). Notice that this is based on the fact that the strategy ci of agent i cannot
be removed by adding a payment of 1 to the outcome of any strategy of the form yj , zj , cj
of agent 1, where xj and xj do not appear in Ci , since the payo of agent 1 for (yj , ci )
and for (zj , ci ) is 0, while the payo of agent 1 for (ci , ci ) is 50. Moreover, if we add 1 to
the payo that agent 1 obtains for both (yi , yi ) and (zi , zi ) then both yi and zi will not be
dominated for agent 1, which will result in the possibility of playing a strategy prole which
is not desired(given that it is impossible to remove both yi and zi for agent 2). Hence, the
implementation corresponds to a sound truth assignment to the CNF formula, where xi is
assigned true i the payo for agent 1 at (yi , yi ) has been augmented by 1.

Notice that the previous result applies already in the case where we have a constant
number of agents. The previous result suggests one may wish to consider relaxations of the
optimal implementation problem that will be tractable.8 One interesting relaxation9 is the
following one:
A non-negative vector of payo functions V is called a k- exact implementation of O in
G(U ), if the following two conditions are satised:
 X(U + V ) = O.
n

i=1 Vi (x)  k for every x  O.
Hence, V implements O means that the set of non-dominated strategies in G(U + V ) is a
subset of O, while V is an exact implementation of O if this set equals O. When dealing
with singletons the concepts of implementation and exact implementation coincide.
Notice that the concept of exact implementation makes sense only when O = O1 
O2     On  X = X1  X2     Xn since otherwise it will be impossible to (exactly)
implement O. We also assume that Oi is strictly contained in Xi for every agent i, and that
Oi does not contain two strategies such that one dominates the other. We can show:
Theorem 5 Computing the optimal k for which an exact implementation exists is polynomial.
The algorithm leading to the above result is now illustrated for the case of two agents.
We construct the game matrix G , where the payo function of agent i is denoted by pi ;
pi describes the payment to agent i for the dierent strategy proles (if/when selected).
The matrix G will be the matrix of perturbations (non-negative monetary promises), while
G will denote the perturbed matrix generated. Let M = K + 1 where K is the maximal
element in the original game matrix.
The optimal perturbation [OP] algorithm:
8. Another approach may be to search for good approximation techniques.
9. See the discussion in the last section.

46

fiK-Implementation

1. Let (e1 , . . . , ek ) the list of possible dierences between an agents payos in the original
game (i.e. the possible results one obtains by subtracting two possible payos of an
agent in the given game) , sorted from small to large.
2. Let p1 (a, b) := M for every a  O1 and b  X2 \ O2 , and let p1 (a, b) = 0 whenever
a  X1 \ O1 or b  O2 .
3. Let p2 (a, b) := M for every b  O2 and a  X1 \ O1 , and let p2 (a, b) := 0 whenever
b  X2 \ O2 or a  O1 ,
4. Let i:=1
5. Let e := ei
6. Let p1 (a, b) := e for every strategy prole of the form (a, b) where a  O1 and b  O2
7. Let G := G + G
8. If the non-dominated strategies for agent 1 in G do not coincide with O1 then let
i:=i+1 and return to 5
9. Let i:=1
10. Let e := ei
11. Let p2 (a, b) := e for every a  O1 and b  O2
12. Let G = G + G
13. If the non-dominated strategies for agent 2 in G do not coincide with O2 then let
i:=i+1 and return to 10

5. Incomplete information
In previous sections we dealt with games with complete information. However, in many
real life situations the players ( and the interested party) have incomplete information
about certain parameters of the game. In the economic literature this phenomenon has
been mainly modelled by a Bayesian setting. In this setting every player receives some
private signal, which is correlated with the unknown parameters, and the joint distribution
of signals is commonly known to all players (and to the interested party). In the following
subsection we deal with Bayesian games without probabilistic information. Such games are
called games in informational form.
5.1 Games in informational form
The precise denition of games in informational form will not be given in this paper, in
which we focus on a particular type of such games  combinatorial auctions. However, a
typical example is shown in Figure 1.
47

fiMonderer & Tennenholtz

Figure 1: A game in informational form

L1
s1

U1
D1

t1

U2
D2

s2

a1111

R1

L2

a1112
b1111

a1121

a1211

a1212
b1212

b1122

b1121

a1222
b1222

b2112

a2211
b2211

a2212
b2212

b2122

a2221
b2221

a2222
b2222

a1122

a2111

a1221

a2112
b2111

a2121

a2122
b2121

R2

b1211

b1112

b1121

t2

In this game, Player 1 is about to receive one of the signals s1 or t1 , and Player 2 is
about to receive one of the signals10 , s2 or t2 . The true game to be played is determined by
the pair (c1 , d2 ), where c, d  {s, t}. However, neither player knows the exact game. Given
s1 (s2 ) player 1 (player 2) has to choose an action in {U1 , D1 } ({L1 , R1 }), and given t1 (t2 )
player 1 (player 2) has to choose an action in {U2 , D2 } ({L2 , R2 }). The payos are shown
in the gure. A Bayesian game is obtained from a game in informational form by adding a
probability distribution over the pairs of signals as described in Figure 2. The probability
that 1 receives the signal c1 , and 2 receives d2 equals pij , where i = 1 if c = s, i = 2 if c = t,
j = 1 if d = s, j = 2 if d = t.

s2
a1111

s1

U1
D1

L1

Figure 2: A Bayesian Game

t2

R1

b1111
a1121

a1211

b1112

a1212
b1211

a1122
b1121

R2

L2

a1112

a1221

b1122

b1212
a1222

b1121

b1222

p11

t1

U2
D2

a2111

a2112
b2111

a2121

p12

a2211
b2112

a2122
b2121

a2212
b2211

a2221
b2122

a2222
b2221

p21

10. These signals are some times called types.

48

b2212
b2222
p22

fiK-Implementation

A strategy of a player is a function dened on the set of signals, which assigns to every
signal an action11 in the games that are consistent with this signal. For example, in the game
in Figure 1, a strategy of player 1 is a function b1 : {s1 , t1 }  {U1 , D1 , U2 , D2 }, with the
property that b1 (s1 )  {U1 , D1 } and b1 (t1 )  {U2 , D2 }. A strategy of player 2 is analogously
dened as a function b2 : {s2 , t2 }  {L1 , R1 , L2 , R2 }. The concepts of domination and of
equilibrium ( traditionally referred to as ex post equilibrium) are naturally dened. For
example, in Figure 3 The strategy of player 1 in which she chooses U1 when she receives the
signal s1 , and she chooses D2 given t1 dominates each of the other four strategies of player
1.

Figure 3: Domination
R1
5, 2

t2
L2 R2
5, 0 1, 1

D1 0, 5

4, 4

4, 4

0, 5

U2 0, 5

4, 4

4, 4

0, 5

D2 1, 1

5, 0

5, 0

1, 1

L1
U1 1, 1
s1

t1

s2

That is, given s1 , independently of the other players signal and action, choosing U1 is
at least as good as choosing D1 , and for at least one signal and action of Player 2, choosing
U1 is strictly better than choosing D1 .
Figure 4 demonstrate an ex post equilibrium.

11. In an environment in which complex strategies exist, we refer to the choices of a player at a game in
strategic form as actions.

49

fiMonderer & Tennenholtz

Figure 4: Ex Post Equilibrium

L
2, 8

R
5, 1

L
0, 5

R
3, 6

D 1, 5

6, 4

7, 2

1, 4

U 0, 2

5, 2

5, 0

2, 4

1, 1

6, 0

4, 2

3, 3

U

D

Note that even under the output observability assumption a player does not have to
reveal her strategy. The signal of a player is her private knowledge, and she reveals only
the action she chooses. The interested party does not observe the signals; therefore, if the
action sets in all games are the same ( as is the case in Figure 4) the interested party does
not receive any information about the true game to be played. Hence, the only thing he
can do is to use the same vector V at all games. Therefore:
Claim For every k  0 It is impossible to k-implement the ex post equilibrium described
in Figure 4.
Proof The interested party wishes to make U a dominant strategy at the game (s1 , t2 ), and
she wishes to make D a dominant strategy at (t1 , t2 ). Assume V1 (U, L) = x and V1 (D, L) =
y, then the following two contradictory inequalities should be satised: 0 + x  7 + y, and
5 + x  4 + y.
As is stated in the next subsection, when the game in informational form has a particular
structure, our results for the complete information case are generalized.
5.2 The VCG combinatorial auctions
Combinatorial auctions constitute a special class of games in informational form. Our
notations and denitions are taken from Holzman and Monderer (2002).
In a combinatorial auction there is a seller, denoted by 0, who wishes to sell a set of m
goods A = {a1 , . . . , am }, m  1, that she owns. We denote by 2A the family of all bundles
of goods (i.e., subsets of A). There is a set of n buyers N = {1, . . . , n}, n  1. An allocation
of the goods is an ordered partition  = (0 , 1 , . . . , n ) of A.12 We denote by  the set of
all allocations.
12. Note that the goods are allocated among the buyers and the seller. We assume, however, that the seller
derives no utility from keeping any of the goods, and that she does not set strategic reserve prices.

50

fiK-Implementation

A buyers valuation function is a function v : 2A  , satisfying v() = 0 and
B  C, B, C  2A  v(B)  v(C).
When buyer i with the valuation function vi receives the set of goods B, and pays a monetary
transfer ci   his utility is vi (B)  ci . Every buyer knows his valuation function.
We denote by V the set of all possible valuation functions. The set V N , the n-fold
product of the set V , is the set of all proles of valuations v = (v1 , . . . , vn ), one for each
buyer.
For an allocation  = (0 , 1 , . . . , n )   and a prole of valuations v = (v1 , . . . , vn ) 
VN we denote by S(v, ) the total social surplus of the buyers, that is,

S(v, ) =
vi (i ).
iN

We also denote
Smax (v) = max S(v, ),


and we refer to an allocation  that achieves this maximum as an optimal allocation for v.
A Vickrey-Clarke (VC) auction mechanism is described as follows. Every buyer i is re = (
quired to report a valuation function vi . Based on the reported valuations v
v1 , . . . , vn ) 
N
v) = (d0 (
v), . . . , dn (
v))  , which is optimal for
V the mechanism selects an allocation d(
 . Because ties are possible, such an allocation may not be unique, and therefore there is
v
v, d(
v)) = Smax (
v)
more than one VC mechanism. Every function d : V N   satisfying S(
N
  V determines uniquely a VC mechanism, which we refer to as the VC mechafor all v
nism d. This mechanism assigns to buyer i the bundle di (
v) and makes him pay cdi (
v) to
the seller, where


cdi (
v) = max
vj (j ) 
vj (dj (
v)).


j=i

j=i

This represents the loss to the other agents total surplus caused by agent is presence.
A Vickrey-Clarke-Groves (VCG) auction mechanism is parameterized by a VC mechanism d, and by an n-tuple h = (h1 , . . . , hn ) of functions hi : V N \{i}  . The mechanism
selects an allocation according to the allocation function d, and the transfer function of
buyer i is
cd,h
v) = cdi (
v) + hi (
vi ).
i (
Hence, a VC auction mechanism is a special type of VCG auction mechanism, in which hi
is the function that is identically equal to zero for every i.
Let AM = (d, h) be a VCG mechanism. The utility of i with the valuation vi depends
i ), and it is denoted by ui (vi , vi , v
i ). That
 = (vi , v
on the vector of reported valuations v
is,
i ) = vi (di (
ui (vi , vi , v
v))  cd,h
v).
i (
The behavior of buyer i in a mechanism AM is described by a strategy bi : V  V .
51

fiMonderer & Tennenholtz

A strategy bi is a dominant strategy for i if the following two conditions hold:13
i  V N \{i}
 For every vi  V , and for every v
i )  ui (vi , vi , v
i )
ui (vi , bi (vi ), v

for every vi  V .

i  V N \{i} such that
 For every vi  V , there exists v
i ) > ui (vi , vi , v
i ).
ui (vi , bi (vi ), v
A strategy prole (b1 , . . . , bn ) forms an ex post equilibrium if for every prole of valuations v = (v1 , . . . , vn )  VN , and for every buyer i,
ui (vi , bi (vi ), bi (vi ))  ui (vi , vi , bi (vi ))

for every vi  V ,

where bi (vi ) = (bj (vj ))j=i . The prole (b1 , . . . , bn ) is symmetric if bi = bj for every two
buyers i, j  N .
It is well-known that every VCG auction mechanism is truth-telling in the sense that
for every buyer i, the strategy bi (vi ) = vi of revealing the true valuation is a dominant
strategy.14
Special type of strategies were considered by Holzman et al. (2003), Holzman and Monderer (2002). A bundling strategy for buyer i is parameterized by a subfamily i of 2A such
that   i , and is denoted by f i . It maps every v  V to v i  V dened by
v i (B) =

max

CB,Ci

v(C)

for every B  2A .

This has the eect of pretending that the agent cares only about bundles in i (for which
he announces his true valuation), and derives his valuation for other bundles by maximizing
over the bundles in i that they contain.
A valuation v i that satises the above equalities is said to be based on i ( or, simply
i -based). The set of all -based valuation function is denoted by V  .
A subfamily  of 2A such that    is a quasi eld if it satises the following two
conditions:
B    A \ B  ,
B, C   and B  C =   B  C  .
In the work by Holzman and Monderer (2002) it was proven that every ex post equilibrium in the VCG mechanisms is a bundling equilibrium in the following sense: For every
13. In classical mechanism design the second condition is not required. We use it here for the sake of
consistency with the rest of this paper.
14. This is one of the reasons to the fact that the concept of ex post equilibrium in the VCG auction
mechanisms with private values has largely been ignored in the economics literature. However, the truth
telling strategy is induces a high communication complexity; It requires each player to communicate 2m
numbers. Hence, from the computer science perspective, an ex post equilibrium with less communication
complexity is desirable. The tradeo between communication complexity and economic eciency is
discussed by Holzman, Kr-Dahav, Monderer, and Tennenholtz (2003).

52

fiK-Implementation

n  3, every prole (b1 , b2 ,    , bn ) of strategies, which satises that any subprole (bi )iN  ,
N   N , is an ex post equilibrium in all VCG mechanisms is a symmetric prole of bundling
strategies. That is, there exists     2A such that bi = f  for every i  N , and moreover,
it was proved by Holzman et al. (2003) that this  must be a quasi eld.
5.3 0-Implementation of ex post equilibrium in frugal VCG auction
mechanisms
We begin with a formal denition of a frugal VCG combinatorial auction:
Denition of Frugal VCG mechanisms A VCG mechanism (d, h) is called frugal if d
 = (
does not allocate unnecessary goods to the buyers. That is, for every v
v1 , . . . , vn )  V N

the mechanism selects an allocation d(
v) = (d0 (
v), . . . , dn (
v))  , which is optimal for v
and satises in addition:
 For every player i, and for every Bi  i ,
vi (Bi ) < vi (i ),
where i = di (
v).
Intuitively, in a frugal VCG mechanism the center never allocates unnecessary goods.
If an agent has a bid for a bundle B1 and the same bid for a superset of it, B2 , the center
will never allocate B2 to that agent (the bid for B2 should be strictly higher than the bid
for B1 in order that allocating B2 to that agent will be a possibility.)
Consider an interested party who wishes to 0-implement the ex post equilibrium b =
(b1 , b2 ,    , bn ) in the VCG auction mechanism (d, h). Given the result by Holzman and
Monderer (2002) stated at the end of the previous subsection we can assume almost without
loss of generality that bi = f  for every i  N . The interested party wishes to promise a
positive payment to every buyer i whenever he follows the recommendation to play according
to bi , and at least one of the players, say j, does not play according to bj . However, the
interested party does not know the valuation functions. Hence, how could she know whether
a player follows the recommendation? Indeed she cannot. However, since  is known to the
interested party she can partially monitor the players strategies, because, independently of
a players valuation function his reported valuation function must be -based. Hence, the
best the interested party can do is to oer every player i a positive payment if his reported
valuation is -based, and at least one of the other players reported a valuation function,
which is not -based. These payments can be made arbitrarily high so that reporting a
-based valuation function will yield a higher payo for i than any other, non -based
valuation function if at least one of the other players does not report a -based valuation
function. However, player i can cheat within the set of -based valuations without being
caught! It turns out that when the VCG mechanism is frugal, every player is better o not
cheating.
Lemma 1 Let (d, h) be a frugal VCG mechanism, let  be a quasi eld, and let i  N . For
i
every prole of reported valuations of the other players, v
i )  ui (vi , wi , v
i )
ui (vi , vi , v
53

for every wi  V  .

fiMonderer & Tennenholtz

Proof : Without loss of generality we can assume that hj is constantly 0 for every j.
Hence, the VCG mechanism is actually a VC mechanism. If vj is -based for every j, j 	= i,
the inequality follows from the fact that f  induces an ex post equilibrium. However, our
i ) be the allocation chosen by the auctioneer
proof does not use this fact. Let  = d(vi , v


when i reports vi , and let  = d(wi , vi ). Denote

vj (j ).
t = max


j=i

As the VCG mechanism is frugal, we have that i   and i  . Therefore we have
i ) =
that vi (i ) = vi (i ), and vi (i ) = vi (i ). By denition we have that ui (vi , vi , v



i , )  t. Now since vi (i ) = vi (i ) we have that ui (vi , vi , v
i ) = S(vi , v
i , )  t.
S(vi , v
i , )  t  S(vi , v
i , )  t. However, since
By the optimality of  we get that S(vi , v
frugality also implies that vi (i ) = vi (i ), we get the following equation and the desired
inequality:
i , )  t = S(vi , v
i , )  t = ui (vi , wi , v
i ).
S(vi , v
.
Hence, in the proof of Lemma 1 we used the fact that a frugal VCG mechanism must
allocate a subset of goods in  to every player who reports a -based valuation function.
The next example shows that Lemma 1 does not hold for an arbitrary VCG mechanism.
Example
There are two buyers and four goods a,b,c,d.
 = {, ab, cd, abcd}.
The valuation function of 1 is v1 , and the reported valuation of 2 is v2 . Consider a VC
auction mechanism that allocate ab to 1 and cd to 2 when 1 reports v1 , and it allocates abc
to 1, and d to 2, when 1 reports the -based valuation function w1 . In both cases 1 pays
0. Hence, reporting v1 yields a utility of 1, while cheating yields 1.1. Note that the VC
mechanism is not frugal because when 1 declares w1 he receives abc, and w1 (ab) = w1 (abc).

v1
v2
v1
w1


0
0
0
0

a
0
0
0
0

b
0
0
0
0

c
d
ab ac ad bc bd
cd abc abd acd bcd abcd
0
0
1 0
0
0
0
0
1.1
1
0
0
1.1
0 0.75 0 0 0.75 0 0.75 0.75 0 0.75 0.75 0.75 0.75
0
0
1 0
0
0
0
0
1
1
0
0
1.1
0
0
1 0
0
0
0
0.1
1
1
0.1 0.1 1.1

We need the following terminology. Let (d, h) be a VCG combinatorial auction, and let
M > 0. We denote by (d, h, M ) the direct combinatorial auction with the rules induced by
(d, h) in which, the set of feasible valuation functions ( and the set of bids) is V (M ), which
is the set of all valuation functions v satisfying v(A) < M . The assumption of an upper
bound is natural but not common in the literature of mechanism design. It can be veried
that Lemma 1 holds for a VCG combinatorial auctions with bounded valuation functions.
54

fiK-Implementation

Theorem 6 Let (d, h, M ) be a frugal VCG auction mechanism with at least two buyers.
Let  be a quasi elds of bundles. Then the symmetric ex post equilibrium induced by  is
0-implementable.
Proof : For every player i, the interested party promises i a very high payo ( e.g., 2M + 1
if he reports a valuation function in V  , and at least one of the other players does not
report a -based valuation function. Player i is promised no payment if all players report
valuation functions in V  . By Lemma 1, f  is a dominant strategy for every player.

6. Implementation devices
As we mentioned in Section 3, the proof of our result (Theorem 3) that every mixed strategy
equilibrium is 0-implementable relies on the assumption that the interested party observes
the mixed strategies used by the players. In this section we prove this result without this
assumption. That is, the interested party can observe only the actions generated by the
mixed strategies, but not the algorithms that generate them. In order to deal with this
issue we dene a new type of implementation by an implementation device.
Let G(U ) = (N, X, U ) be a nite game in strategic form. An implementation device
for G(U ) is a tuple I = (S, h, V ), where S = S1  S2     Sn , h  (S) is a probability
distribution over S, and V : S  X  n+ . Si is the nite15 set of signals that can be sent to
i. The interested party uses the implementation device I as follows: She makes the device
public, she secretly runs a randomizing scheme that chooses every s  S with a probability
h(s). If s = (s1 , s2 ,    , sn ) is chosen, she sends player i the signal si . If the strategy prole
x is selected then agent i is paid Vi (s, x). The implementation device generates a new game
G(U, I). This is actually a Bayesian game. A strategy for i in this game is a function
bi : Si  Xi . For every si and xi , and a vector bi of the other players let Wi (xi |si , bi ) be
the expected payo of i in the game G(U, I) if it chooses xi given that it receives the signal
si and all other players use bi . That is,
Wi (xi |si , bi ) = Esi (Ui (xi , bi (si )) + Vi (si , si , xi , bi (si )|si ) ,
where si = (sj )j=i , and bi (si ) = (bj (sj ))j=i . A strategy
 bi is a dominant strategy for i
if for every signal si with a positive probability ( that is tS,ti =si h(t) > 0), and for every
bi
Wi (bi (si )|si , bi )  Wi (xi |si , bi ) for every xi  Xi ,
and there exists a prole bi of the other players for which a strict inequality holds.
Every prole b = (bi )iN determines a probability distribution probb over X dened as
follows:
probb (x) = h(b1 = x1 , b2 = x2 ,    , bn = xn ).
15. If S is an innite set, we must specify additional parameters required in probability theory. We associate
with each Si a -algebra of events i , we endow S with the product -algebra, , and we dene h over
.

55

fiMonderer & Tennenholtz

Let  be a desired probability distribution over X. We say that I implements  in G(U ),
if in G(U, I) every player i has a dominant strategy bi , and probb = . We say that I is a
k-implementation of  in G(U ) if I implements , and for every s with h(s) > 0,
n


Vi (si , bi (si ))  k.

i=1

6.1 Mixed Strategies: Removing the algorithm observability assumption
Let p = (p1 , p2 ,    , pn ) be a mixed strategy prole in a nite game G(U ). p generates a
probability distribution p over S as follows:
p (x) = p1 (x1 )p2 (x2 )    pn (xn )

for every x  X.

We say that an implementation device I implements p if it implements p .
In order to implement a mixed strategy equilibrium , the interested party employs an
implementation device I, in which the set of signals Si is the set of actions of i, Xi . h
is the product probability of p. That is, h(x) = p1 (x1 )p2 (x2 )    pn (xn ), and the function
Vi : Si  Xi  + is designated in such a way that the strategy bi (si ) = si , si  Xi , is a
dominant strategy for every player i.
Hence, the interested party ips a coin for each player i according to the probability
pi in the prole she wishes to implement, and she sends the outcome of this coin ipping
to i. Thus, the signals sent to the players are just recommendations to play. The payo
functions Vi , i  N are designed in such a way that obeying the recommendation is a
dominant strategy for every player.
Theorem 7 Let G(U ) be a nite game with at least two actions for every player. Every
mixed strategy equilibrium prole p is 0-implementable in G(U ) with an appropriate implementation device I = (S, h, V ) in which S = X, and h = p is the product probability on X
dened by p.
Proof : Denote by bi the strategy of i in which it obeys every recommendation. That is
bi (si ) = si for every si  Xi . The function Vi should satisfy for every vector di of the other
players strategies,
Wi (si |si , di )  Wi (xi |si , di ) xi  Xi .
We can assume without loss of generality that for every player i, Vi (si , si , xi , yi ) = 0 for
every xi 	= si . Therefore the above inequality can be written as follows:




Esi Vi (si , si , si , di (si ))  Esi Ui (xi , di (si ))  Ui (si , di (si )) .
If di = bi , that is dj (sj ) = sj for every j 	= i and for every sj  Xj , the right-hand-side
of the above inequalities are non-positive because p is a mixed strategy equilibrium. Hence,
we may dene Vi (s, s) = 0 for every s  X. To make sure that the inequalities hold in all
other cases (i.e., for all di ), we can dene Vi (s, si , xi ) = 2M + 1 for every xi 	= si ,
where M > 0 is an upper bound on the absolute value of all players payo functions. The
choice of 2M + 1 (rather then 2M ) ensures the existence of a strict inequality required by
the denition of domination.
56

fiK-Implementation

6.2 0-implementations of correlated equilibrium
Aumann (1974) introduced the concept of correlated equilibrium. We provide one of the
many equivalent denitions:
Denition Let G(U ) = (N, X, U ) be a nite game in strategic form. A correlated equilibrium of G(U ) is a probability distribution  over X (  (X)) such that the strategies
bi (si ) = si , si  Xi , i  N , form an equilibrium in the game G(U, I), where I = (S, h, V ) is
the following implementation device:
 S = X,
 h = ,
 Vi (s, x) = Ui (x) for every i  N and for every s, x  X.
Hence,  forms a correlated equilibrium if a mediator who makes no changes in the
players payo can run a randomization device according to , picks a prole of pure actions
s, and sends every player i the recommendation to play si , and every player is better o
obeying the recommendation if she believes that all other players obey the recommendations.
It is well-known ( and it was implicitly used in the proof of Theorem 7) that if p is a mixed
strategy equilibrium, p is a correlated equilibrium. Moreover, going over the proof of
Theorem 7 reveals that the only property of the mixed-strategy equilibrium p that we use
is the fact that p is a correlated equilibrium. Hence we get:
Theorem 8 Let G(U ) = (N, X, U ) be a nite game with at least two actions for every
player. Every correlated equilibrium prole  is 0-implementable in G(U ) with an appropriate implementation device I = (S, h, V ) in which, S = X and h = .
Note that eventually, when the interested party implements a mixed strategy equilibrium
or a correlated equilibrium with the implementation device I, the players are using pure
strategies in the game G(U, I). Because the expected value operator is linear, it can be
easily seen that obeying the recommendation remains a dominant strategy for every player
even if this player believes that the other players use mixed strategies in G(U, I), where
a mixed strategy of i in G(U, I) is a probability distribution Qi over the set of his pure
strategies. A mixed strategy is not a natural description of behavior in G(U, I). A more
natural, and less computational demanding concept is the one of behavior strategy: A
behavior strategy of i in the game G(U, I) is a function ci : Si  (Xi ). Hence, a player
who is using a behavioral strategy chooses a mixed strategy in a game in strategic form as
a function of his signal, while a player who is using a mixed strategy in G(U, I) is picking a
pure strategy in G(U, I) with a randomization device before he receives the signal. The sets
of mixed and behavioral strategies are not technically related to each other. However, by
Kuhn (1953) ( see also Hart (1992) for details), for every player i, for every strategy bi of i
and for every prole Qi = (Qj )j=i of mixed strategies of the other players, there exists a
prole ci = (cj )j=i of behavioral strategies of the other players such that for every signal
57

fiMonderer & Tennenholtz

si the expected utility of i when using bi given that all other players are using Qi equals
his expected utility when all other players are using ci , and vice versa.16
Hence, theorems 7 and 8 remain valid in an environment that allows the utilization of
either mixed or behavioral strategies in G(U, I).

7. Conclusions, discussion and further research
One may distinguish between two main lines of research in multi-agent systems. One line
of research has to do with the design of mechanisms and protocols. In this context we
in fact deal with the design of games, such that when agents are assumed to behave in
particular way (e.g., be law-abiding, playing in equilibrium, reinforcement learners, etc.)
then a desired behavior (e.g., revenue maximization, the maximization of social surplus,
etc.) will be obtained. The other line of research deals with the study of the behavior of
agents in a given game. In economic theory the leading paradigm in the last decades has
been that agents use equilibrium strategies. However, this paradigm implicitly assumes that
agents are rational and moreover, that agents believe that the other agents are rational.17
In this paper we introduced an intermediate approach. The game/interaction is given,
and agents are not provided with newly designed protocol. The inuence on agents behavior
is only through credible promises for positive monetary transfers conditioned on the actions
selected by the agents in the game. We also assume:
1. Minimal rationality: we would like to assume as little as possible on agent rationality.
Indeed all that we assume is that an agent will not use a strategy if it is dominated
by another strategy.
2. Minimal expenses: we assume that the interested party wishes to minimize its expenses
while leading the agents to the desired behavior.
The notion of k-implementation captures the above basic ideas. In the paper we have
provided several basic results about k-implementation. We have provided full characterization of k-implementation for the case of implementation of singletons in games with
complete information. In particular we have shown a formula for computing the optimal k,
which will yield the desired agent behavior, and fully specied a procedure for implementation. Our result is also applicable to a general class of games with innitely many strategies.
We have shown that such characterization is likely to be impossible for the implementation
of sets of strategies. In particular, we have shown that the problem of whether the desired
behavior can be implemented with a cost of k is NP-hard. This led us to considering exact
k-implementation that we have shown to be tractable. Exact k-implementation requires
that every desirable strategy prole will be rational as a result of the promises for monetary
16. Actually, the theorem presented by Kuhn (1953) is stronger than the one we quote here.
17. In computer science the issue of how should an agent choose its action , unless he has a dominant strategy,
is a central one and no general satisfactory solution is known. Researchers appeal in this case to the
concept of competitive analysis (Borodin & El-Yaniv, 1998). In the context of games, some promising
results in this direction are presented by Tennenholtz (2002).

58

fiK-Implementation

transfers (in addition to the requirement that no undesirable strategy prole will remain
rational). In a sense, exact implementation requires that the number of strategies that
the system will remove will be minimal. This is consistent with basic ideas of normative systems where in order to obtain desired behavior we would like to have minimal laws
that leave maximal freedom to the agents as long as they will enable to obtain the desired
(social) behavior. For a discussion of this issue see (Fitoussi & Tennenholtz, 2000).
The extension of our results to the context of mixed strategies can be interpreted as
a strong evidence for the importance of Nash equilibrium from the normative perspective,
and not only as a descriptive approach that attempts to explain/predict agent behavior in
economic contexts. The fact that any mixed strategy equilibrium can made into a dominant
one with zero payments given that we have a credible interested party, who cannot force
behaviors or punish agents, tells us that in many practical situations Nash equilibrium has
a special merit also from the normative perspective.
The games of incomplete information discussed in this section are games in informational form, rather than Bayesian games. This is in the spirit of work in computer science
that tries to minimize probabilistic assumptions about the economic environment, and in
particular the use of those as part of a solution concept. In this context the VCG mechanisms are probably the most central and widely studied mechanisms and we turn our
attention to the study of k-implementation in the context of these mechanisms. Indeed, as
we show, unlike in the case of nite games with complete information where there is always
some large k that (if paid) can lead to any desired behavior, this is no longer true in games
with incomplete information. The VCG mechanisms turn out to be very complex in their
equilibrium analysis. As recent work has shown (Holzman et al., 2003) there are exponentially many equilibria of the VCG mechanisms that dier from truth telling. These are of
special interest since these other equilibria exhibit lower communication complexity than
the standard truth revealing equilibrium. Notice that these equilibria are obtained without
any restriction on the possible bids by the agents (this is the so called no imposition property). The interested party has no access to the VCG protocol, and can inuence it only
indirectly. We have proved 0-implementation of any ex-post equilibrium of any frugal VCG
mechanism, and that the frugality requirement is necessary.
There are many things left to be done. In particular, it will be interesting to further
develop the study of k-implementation for better understanding the case of k > 0. For
example, it may be interesting to study the eects of the cost of implementation on economic
eciency. Further study of tractable cases is also of interest. We are interested also in
extending our study of k-implementation to games in informational form beyond the VCG
mechanisms. The issue of collusion may have very interesting ramications in the context
of k-implementation. Collusive agreements may make benet of the promises made by the
interested party. Similarly, if failures in the system are possible, then the interested party
might nd itself paying its oers which he was hoping to ignore given rational behavior of
the agents. We have also assumed that there is only one interested party. In a case that
there are several interested parties who may wish to lead to dierent desired behaviors then
a new strategic situation emerges. We believe that these issues are of signicant importance.
We hope to address some of them in future work, and that others will join us in the study of
59

fiMonderer & Tennenholtz

k-implementation and in exploring the spectrum between the system and agent perspectives
in multi-agent systems.

Acknowledgements
We thank Assaf Cohen for helpful comments. The rst author thanks the Israeli Science
Foundation for partial support of this research through a BIKURA grant, and the second
author thanks the Israeli Science Foundations for partial support of this research by ISF
individual grants. A preliminary version of this paper appears in the proceedings of the 4th
ACM Conference on Electronic Commerce (EC03).

References
Aumann, R. (1974). Subjectivity and correlation in randomized strategies. Journal of
Mathematical Economics, 1, 6796.
Borodin, A., & El-Yaniv, R. (1998). On-Line Computation and Competitive Analysis. Cambridge University Press.
Clarke, E. (1971). Multipart pricing of public goods. Public Choice, 18, 1933.
Conitzer, V., & Sandholm, T. (2002). Complexity of mechanism design. In Proceedings of
the 18th conference on uncertainity in Articial Intelligence (UAI-02), pp. 103110.
Dybvig, P., & Spatt, C. (1983). Adoption externalities as public goods. Journal of Public
Economics, 20, 231247.
Feigenbuam, J., & S, S. (2002). Distributed Algorithmic Mechanism Design: Recent Results
and Futute Directions. In Proceedings of the 6th International Workshop on Discrete
Algorithms and Methods for Mobile Computing and Communications, pp. 113.
Fitoussi, D., & Tennenholtz, M. (2000). Choosing Social Laws for Multi-Agent Systems:
Minimality and Simplicity. Articial Intelligence, 119 (12), 61101.
Fudenberg, D., & Tirole, J. (1991). Game Theory. MIT Press.
Groves, T. (1973). Incentives in teams. Econometrica, 41, 617631.
Hart, S. (1992). games in extensive and strategic forms. In Aumann, R., & Hart, S. (Eds.),
Handbook of Game Theory, chap. 2, pp. 1940. North Holland, Amsterdam.
Holzman, R., Kr-Dahav, N., Monderer, D., & Tennenholtz, M. (2003). Bundling Equilibrium in Combinatorial Auctions. Games and Economic Behavior, to appear. Working
paper Technion http://ie.technion.ac.il/dov.phtml.
Holzman, R., & Monderer, D. (2002). Characterization of ex post equilibrium in the VCG
combinatorial auctions. Game and Economic Bahavior, to appear. Working Paper,
Technion, http://ie.technion.ac.il/dov.phtml.
60

fiK-Implementation

Koutsoupias, E., & Papadimitriou, C. (1999). Worst-Case Equilibria. In STACS.
Kuhn, H. (1953). Extensive games and the problem of information. Annals of Mathematics
Studies, 48.
Mas-Colell, A., Whinston, M., & Green, J. (1995). Microeconomic Theory. Oxford University Press.
Maskin, E. (1999). Nash equilibrium and welfare optimality. Review of Economic Studies,
66, 2338.
Maskin, E., & Sjostrom, T. (2002). Implementation theory. In Arrow, K. J., Sen, A. K.,
& Suzumura, K. (Eds.), Handbook of Social Choice Theory and Welfare Volume 1.
North-Holland, Amsterdam.
Monderer, D., & Shapley, L. (1996). Potential games. Games and Economic Behavior, 14,
124143.
Naor, M., Pinkas, B., & Sumner, R. (1999). Privacy Preserving Auctions and Mechanism
Design. In Proceedings of EC99, pp. 129139.
Nash, J. (1950). Equilibrium points in n-person games. Proceedings of the National Academy
of Sciences of the United States of America, 36, 4849.
Nisan, N. (2000). Bidding and allocation in combinatorial auctions. In ACM Conference
on Electronic Commerce, pp. 112.
Nisan, N., & Ronen, A. (1999). Algorithmic mechanism design. Proceedings of STOC-99.
Papadimitriou, C. H. (2001). Algorithms,Games,and the Internet. In STOC 2001.
Parkes, D. C. (1999). ibundle: An ecient ascending price bundle auction. In ACM
Conference on Electronic Commerce, pp. 148157.
Rosenschein, J. S., & Zlotkin, G. (1994). Rules of Encounter. MIT Press.
Rosenthal, R. (1973). A class of games possessing pure-strategy nash equilibria. International Journal of Game Theory, 2, 6567.
Roughgarden, T. (2001). The price of anarchy is independent of the network topology. In
Proceedings of the 34th Annual ACM Symposium on the Theory of Computing, pp.
428437.
Roughgarden, T., & Tardos, E. (2002). How bad in selsh routing?. Journal of the ACM,
49 (2), 236259.
Sandholm, T., Suri, S., Gilpin, A., & Levine, D. (2001). Cabob: A fast optimal algorithm for combinatorial auctions. In 17th International Joint Conference on Articial
Intelligence, pp. 11021108.
Segal, I. (1999). Contracting with externalities. The Quarterly Journal of Economics,
CXIV (2), 337388.
61

fiMonderer & Tennenholtz

Shoham, Y., & Tennenholtz, M. (1995). Social Laws for Articial Agent Societies: O-line
Design. Articial Intelligence, 73.
Shoham, Y., & Tennenholtz, M. (2001). On rational computability and communication
complexity. Games and Economic Behavior, 35, 197211.
Spiegler, R. (2000). Extracting intercation-created surplus. Games and Economic Behavior,
30, 142162.
Tennenholtz, M. (1999). Electronic commerce: From game-theoretic and economic models
to working protocols. In IJCAI-99.
Tennenholtz, M. (2002). Competive Safety Analyis: robust decision-making in multi-agent
systems. Journal of Articial Intelligence Research, 17, 363378.
Vickrey, W. (1961). Counterspeculations, auctions, and competitive sealed tenders. Journal
of Finance, 16, 1527.

62

fi