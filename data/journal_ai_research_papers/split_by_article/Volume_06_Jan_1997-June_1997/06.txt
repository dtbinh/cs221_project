Journal of Artificial Intelligence Research 6 (1997) 211-221

Submitted 12/96; published 6/97

Research Note

A Complete Classification of Tractability in RCC-5

Peter Jonsson
Thomas Drakengren

Department of Computer and Information Science, Linkoping University
S-581 83 Linkoping, Sweden

petej@ida.liu.se
thodr@ida.liu.se

Abstract

We investigate the computational properties of the spatial algebra RCC-5 which is a restricted
version of the RCC framework for spatial reasoning. The satisfiability problem for RCC-5 is known
to be NP-complete but not much is known about its approximately four billion subclasses. We
provide a complete classification of satisfiability for all these subclasses into polynomial and NPcomplete respectively. In the process, we identify all maximal tractable subalgebras which are four
in total.

1. Introduction

Qualitative spatial reasoning has received a constantly increasing amount of interest in the literature.
The main reason for this is, probably, that spatial reasoning has proved to be applicable to realworld problems in, for example, geographical database systems (Egenhofer, 1991; Grigni, Papadias,
& Papadimitriou, 1995) and molecular biology (Cui, 1994). In both these applications, the size of
the problem instances can be huge, so the complexity of problems and algorithms is a highly relevant
area to study. However, questions of computational complexity have not received so much attention
in the literature; two notable exceptions are the results reported by Nebel (1995) and Renz and
Nebel (1997). In this article we take a small step towards a better understanding of complexity
issues in qualitative spatial reasoning.
A well-known framework for qualitative spatial reasoning is the so-called RCC approach (Randell
& Cohn, 1989; Randell, Cui, & Cohn, 1992). This approach is based on modelling qualitative spatial
relations between regions using first-order logic. Of special interest, from a complexity-theoretic
standpoint, are the two subclasses RCC-5 and RCC-8. It is well-known that both RCC-5 and
RCC-8 have quite weak expressive power. Although they can be used to describe spatial situations,
they are very general and should perhaps better be described as topological algebras. However, we
will denote these algebras as spatial algebras in order to avoid terminological confusion; the term
topological algebra has a well-established but completely different meaning in mathematics (Mallios,
1986).
Bennett (1994) has shown the suciency of using propositional logics for reasoning about RCC5 and RCC-8. Hence, the reasoning becomes more ecient when compared to reasoning in a full
first-order logic. Bennett's approach uses classical propositional logic for RCC-5 and intuitionistic
propositional logic for RCC-8. Unfortunately, these logics are known to be computationally hard.
The satisfiability problem for classical propositional logic and intuitionistic propositional logic is NPcomplete (Cook, 1971) and Pspace-complete (Statman, 1979) respectively. However, the complexity
of the underlying logic does not carry over in both cases; Renz and Nebel (1997) have shown that
the satisfiability problem for both RCC-5 and RCC-8 is NP-complete. The full proofs can be found
in (Renz, 1996).
These findings motivate the search for tractable subclasses of RCC-5 and RCC-8. Nebel (1995)
showed that reasoning with the basic relations in RCC-8 is a polynomial-time problem. Renz and
Nebel (1997) improved this result substantially by showing the following results:

c 1997 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved.

fiJonsson & Drakengren

 There exists a large, maximal subclass of RCC-8, denoted Hb8, which contains all basic relations
and is polynomial. Hb8 contains 148 elements out of 256 (58%).
 There exists a large, maximal subclass of RCC-5, denoted Hb5, which contains all basic relations
and is polynomial. Hb5 contains 28 elements out of 32 (87%). Furthermore, this is the unique,
maximal subclass of RCC-5 containing all basic relations.

We will concentrate on RCC-5 in this article. The main result is a complete classification of all
subclasses of RCC-5 with respect to tractability. The classification makes it possible to determine
whether a given subclass is tractable or not by a simple test that can be carried out by hand or
automatically. We have thus gained a clear picture of the tractability borderline in RCC-5. As is
more or less necessary when showing results of this kind, the main proof relies on a case analysis
performed by a computer. The number of cases considered was roughly 4  104 . The analysis cannot,
of course, be reproduced in a research paper or be verified manually. Hence, we include a description
of the programs used. The programs are also available as an on-line appendix to this article.
The structure of the article is as follows: Section 2 defines RCC-5 and some auxiliary concepts.
Section 3 contains the tractability proofs for three subclasses of RCC-5. In Section 4 we show that
these subclasses together with Hb5 are the only maximal tractable subclasses of RCC-5. The article
concludes with a brief discussion of the results.

2. The RCC-5 Algebra

We follow Bennett (1994) in our definition of RCC-5. RCC-5 is based on the notions of regions and
binary relations on them. A region p is a variable interpreted over the non-empty subsets of some
fixed set. It should be noted that we do not require the sets to be open sets in some topological
space. This is no limitation since it is impossible to distinguish interior points from boundary points
in RCC-5. Thus we can take any set X and use the discrete topology T = hX ; 2X i, where every
subset of X is an open set in T .
We assume that we have a fixed universe of variable names for regions. Then, an R-interpretation
is a function that maps region variables to the non-empty subsets of some set.
Given two interpreted regions, their relation can be described by exactly one of the elements of
the set B of five basic RCC-5 relations. The definition of these relations can be found in Table 1.
Figure 1 shows 2-dimensional examples of the relations in RCC-5. A formula of the form XBY where
X and Y are regions and B 2 B, is said to be satisfied by an R-interpretation iff the interpretation
of the regions satisfies the relations specified in Table 1.
To express indefinite information, unions of the basic relations are used, written as sets of basic
relations, leading to 25 binary RCC-5 relations. Naturally, a set of basic relations is to be interpreted
as a disjunction of the basic relations. The set of all RCC-5 relations 2B is denoted by R5. Relations
of special interest are the null relation ? (also denoted by ?) and the universal relation B (also
denoted >).
A formula of the form X fB1 ; : : :; B gY is called an RCC-5 formula. Such a formula is satisfied
by an R-interpretation = iff XB Y is satisfied by = for some i, 1  i  n. A finite set  of RCC-5
formulae is said to be R-satisfiable iff there exists an R-interpretation = that satisfies every formula
of . Such a satisfying R-interpretation is called an R-model of . Given an R-interpretation =
and a variable v, we write =(v) to denote the value of v under the interpretation =.
The reasoning problem we will study is the following:
n

i

: A finite set  of RCC-5 formulae.
: Does there exist an R-model of ?

Instance
Question

212

fiA Complete Classification of Tractability in RCC-5

X fDRgY
X fPOgY
X fPPgY
X fPPIgY
X fEQgY

iff X \ Y = ?
iff 9a; b; c : a 2 X; a 62 Y; b 2 X; b 2 Y; c 62 X; c 2 Y
iff X  Y
iff X  Y
iff X = Y
Table 1: The five basic relations of RCC-5.

X

X

Y

Y

(X; Y )

DR

(X; Y )

PO

X Y

PP

(X; Y )

Y X

PPI

(X; Y )

X Y
(X; Y )

EQ

Figure 1: Pictorial example of the relations in RCC-5.
We denote this problem by RSAT. In the following, we often consider restricted versions of RSAT
where the relations used in formulae in  are only from a subset S of R5. In this case we say that 
is a set of formulae over S and we use a parameter in the problem description to denote the subclass
under consideration, e.g., RSAT(S ). Note that an RSAT problem instance can be represented by a
labelled directed graph, where the nodes are region variables and the arcs are labelled by relations
between variables. Given an instance  of RSAT, we say that such a graph is a graph representation
of .
We continue by defining an algebra over the RCC-5 relations.

Definition 2.1 Let B = fDR; PO; PP; PPI; EQg. The RCC-5 algebra consists of the set R5 = 2B
and the operations unary converse (denoted by ), binary intersection (denoted by \) and binary
composition (denoted by ). They are defined as follows:
8X; Y :
XR Y iff Y RX
8X; Y : X (R \ S )Y iff XRY ^ XSY
8X; Y : X (R  S )Y iff 9Z : (XRZ ^ ZSY )
If S is a subset of R5 , S is said to be a subalgebra of RCC-5
S iff S is closed under converse, intersection
and composition. It can easily be verified that R  S = fB  B 0 jB 2 R; B 0 2 S g, i.e., composition
^

^

is the union of the component-wise composition of basic relations.
Next, we introduce a closure operation. The closure operation transforms a given subclass of
R5 to one that is polynomially equivalent to the original subclass with respect to satisfiability. The
operation is similar to the closure operation for RCC-5 introduced by Renz (1996) but it does not
pose the same restrictions on the given subclass. (Renz's operation requires fEQg to be a member
of the subclass to be closed.)

Definition 2.2 Let S  R5. Then we denote by S the closure of S , defined as the least subalgebra
containing S closed under converse, intersection and composition.
Observe that a subset S of R5 is a subalgebra iff S = S .

The next lemma is given without proof. A proof of the analogous result for Allen's algebra can
be found in Nebel and Burckert (1995).
213

fiJonsson & Drakengren

Lemma 2.3 Let S  R5. Then RSAT(S ) can be polynomially transformed to RSAT(S ) and vice
versa.

Corollary 2.4 Let S  R5. RSAT(S ) is polynomial iff RSAT(S ) is polynomial. RSAT(S ) is
NP-complete iff RSAT(S ) is NP-complete.

3. Tractable Subclasses of RCC-5

We begin this section by defining four tractable subalgebras of RCC-5, which can be found in Table 2.
Later on, we show that these algebras are the only maximal tractable subalgebras of RCC-5. The
28
tractability of the first algebra, R28
5 , has been established by Renz and Nebel (1997). The name R5
reects the fact that the algebra contains 28 elements.

Theorem 3.1 RSAT(R28
5 ) is polynomial.
The tractability of our second algebra, R20
5 , can be settled quite easily. The algorithm can be found
in Figure 2.
20
Lemma 3.2 Let  be an instance of RSAT(R20
5 ). The algorithm A accepts on input  iff  has

an R-model.

Proof: if: We show the contrapositive, i.e., if A20 rejects then  has no R-model. Clearly, the
satisfiability of  is preserved under the transformations made in lines 7-10. Note that if XRX 2 
then EQ 2 R if  is satisfiable. Thus  is not satisfiable if the algorithm rejects in line 5. Similarly,
 is not satisfiable if the algorithm rejects in line 6.

only-if: Consider the set  after the completion of line 11. We denote this set by 0 . Obviously, 0

is satisfiable if the initial  was satisfiable. Also observe that line 7 ensures that 0 does not relate
any variables with EQ. Furthermore, line 8 guarantees that there is at most one relation that relates
two variables.
Now, we construct an R-model M for 0 as follows: Let V be the set of variables in 0 . Let
M assign non-empty sets that are pairwise disjoint to the members of V . Let U = S 2 M (X ).
Introduce a set of values U 0 = fff j X; Y 2 V g satisfying the following:
X

V

X;Y

1. ff = ff iff X = Z and Y = W ; and
2. for arbitrary X; Y 2 V , ff 62 U .
X;Y

Z;W

X;Y

For each relation of the type X fPOgY or X fPO; EQgY , extend the sets M (X ) and M (Y ) with the
element ff .
Clearly, two sets X; Y are disjoint (and are thus related by DR) under M unless X fPOgY or
X fPO; EQgY is in . But in these cases, X and Y must not be disjoint. In fact, by introducing
ff , we have forced X fPOgY to hold under M which satisfies formulae of the type X fPOgY as well
as formulae of the type X fPO; EQgY . Hence, M is an R-model of 0 which implies the R-satisfiability
of .
2
X;Y

X;Y

Theorem 3.3 RSAT(R20
5 ) is polynomial.
Proof: Algorithm A20 correctly solves the RSAT(R20
5 ) problem by the previous lemma. Further-

more, the number of iterations is bounded from above by the number of variables and the number
of formulae in the given instance and the tests can easily be performed in polynomial time.
2
Next we show the tractability of RSAT(R17
5 ).
214

fiA Complete Classification of Tractability in RCC-5

20 R17 R14
R28
5 R5
5
5
?
  

fDRg
 
fPOg
 
fDR; POg
 
fPPg


fDR; PPg
 
fPO; PPg

fDR; PO; PPg
 
fPPIg


fDR; PPIg
 
fPO; PPIg

fDR; PO; PPIg
 
fPP; PPIg

fDR; PP; PPIg


fPO; PP; PPIg


fDR; PO; PP; PPIg  

fEQg
  

fDR; EQg
  
fPO; EQg
  
fDR; PO; EQg
  
fPP; EQg



fDR; PP; EQg
  
fPO; PP; EQg


fDR; PO; PP; EQg   
fPPI; EQg



fDR; PPI; EQg
  
fPO; PPI; EQg


fDR; PO; PPI; EQg   
fPP; PPI; EQg


fDR; PP; PPI; EQg
 

fPO; PP; PPI; EQg 


>
  

Table 2: The maximal tractable subalgebras of RCC-5.

Theorem 3.4 RSAT(R17
5 ) is polynomial.
Proof: Consider the algorithm A17 in Figure 2. If there exist X; Y such that X ?Y 2  then 

is not satisfiable. Otherwise, we can let all variables have the same value. Since EQ is a member of
every relation that occurs in , this interpretation is an R-model of .
2

We continue by proving that RSAT(R14
5 ) is a tractable problem. Let
9
R5 = ffPP; EQgg [ fR [ fPP; PPIg j R 2 R5g:
9
Using a machine-assisted proof, it can be shown that R14
5 = R5 so it is sucient to prove the
9
tractability of RSAT(R5) by Corollary 2.4. The program that we used for showing this is available
as an on-line appendix to this article.
From now on, let  be an arbitrary instance of RSAT(R95) and G = hV; E i be its graph representation. The following proofs are similar in spirit to some of the proofs appearing in Drakengren and
215

fiJonsson & Drakengren

1
2
3
4
5
6
7
8
9
10
11
12

algorithm A20
Input: An instance  of RSAT(R20
5 ).
repeat
0 
if 9X; R : XRX 2  and EQ 62 R then reject
if 9X; Y : X ?Y 2  then reject
if 9X; Y : X =6 Y and X fEQgY 2  then substitute Y for X in 
if 9X; Y; R; S : XRY 2  and XSY 2  then
 ( , fXRY; XSY g) [ fX (R \ S )Y g
if 9X; R : XRX 2  and EQ 2 R then   , fXRX g
until  = 0
accept

1
2
3
4

algorithm A17
Input: An instance  of RSAT(R17
5 ).
if 9X; Y such that X ?Y 2  then reject
else accept

1
2
3
4
5
6
7

algorithm A9
Input: An instance  of RSAT(R95) with graph representation G.
Let G0 be the graph obtained from G by removing arcs which are not labelled fPP; EQg.
Find all strongly connected components C in G0
for every arc e in G whose relation does not contain EQ do
if e connects two nodes in some C then reject
accept
17
9
Figure 2: Algorithms for RSAT(R20
5 ), RSAT(R5 ) and RSAT(R5).

Jonsson (1996). The algorithm itself is reminiscent of an algorithm by van Beek (1992) for deciding
satisfiability in the point algebra.
Definition 3.5 A RCC-5 relation R is said to be an acyclic relation iff any cycle in any G with R
on every arc is never satisfiable.
The relation PP is an example of an acyclic relation while fPP; EQg is not acyclic. We continue by
showing a few properties of acyclic relations.
Proposition 3.6 Let R be an acyclic relation. Then every relation R0  R is acyclic.
Proof: Since taking subsets of R constrains satisfiability further, the result follows.
2
Proposition 3.7 Let R be an acyclic relation, and choose A such that A  fR0 j R0  Rg. Then,
any cycle in G where every arc is labelled by some relation in A is unsatisfiable.
Proof: Same argument as in the previous proposition.
2
The following definition is needed in the following proofs.
Definition 3.8 Let I be an instance of the R-satisfiability problem, M a model for I , and r 2 R5
a relation between two region variables X and Y in I . Then r is said to be satisfied as r0 in M for
any relation r0  r, such that Xr0 Y is satisfied in M .
216

fiA Complete Classification of Tractability in RCC-5

The definition may seem a bit cumbersome but the essence should be clear. As an example, let X
and Y be region variables related by X fPO; PPgY , and M a model where X is interpreted as f1; 2g
and Y as f1; 2; 3g. Then in M , fPO; PPg is satisfied as fPPg, but also as fPO; PPg.
Lemma 3.9 Let R be an acyclic relation, and A; A0 sets such that A  fR0 j R0  Rg and A0 
fa [ fEQg j a 2 Ag. Then, every cycle C labelled by relations in A [ A0 is satisfiable iff it contains
only relations from A0 . Furthermore, all relations in the cycle have to be satisfied as EQ.
Proof: only-if: Suppose that a cycle C is satisfiable and that it contains some relation from
A. Apply induction on the number n of arcs in the cycle. For n = 1, we get a contradiction by
Proposition 3.7. So, suppose for the induction that C contains n + 1 arcs. Let M be an R-model
for the relations in C . It cannot be the case that every relation in C is satisfied in M as some
relation in A, by Proposition 3.7. Thus, some relation R0 in C has to be satisfied as EQ. But then
we can collapse the two variables connected by R0 to one variable, and we have a cycle with n nodes
containing a relation from A. This contradicts the induction hypothesis.
if: Suppose that a cycle C contains only relations in A0 . Then C can be satisfied by choosing EQ on
every arc. Notice that the only-if part implies that C must be satisfied by choosing EQ on every arc.

2

Hence, the variables are forced to be equal.

After having studied acyclic relations, we will now turn our attention to DAG-satisfying relations.
The formal definition is as follows.
Definition 3.10 A basic relation B is said to be DAG-satisfying iff any DAG (directed acyclic
graph) labelled only by relations containing B is satisfiable, i.e., if the corresponding RSAT problem
has a model.
A typical example of a DAG-satisfying relation is EQ. Given a DAG labelled only by relations containing EQ, we can always satisfy these relations by assigning some non-empty set S to all variables.
We can now show that PP is a DAG-satisfying relation.
Definition 3.11 Let G be an arbitrary DAG. A node v in G is said to be a terminal node iff there
are no arcs which start in v.
Lemma 3.12 The basic relation PP is DAG-satisfying.
Proof: Let G be a DAG labelled only by relations containing PP. We show that G is satisfied
by some R-model M . Induction on n which is the number of nodes in G. The case when n = 1 is
trivial. Suppose that G has n +1 nodes and remove a terminal node g. By induction, the remaining
graph G0 = hV 0 ; E 0i is satisfiable by a model M 0.SWe shall now construct a model M of G, which
agrees with M 0 on every variable in G0. Let S = fM 0(v) j v 2 V 0 g and let ff be an element not in
S . Let M (g) = S [ fffg. Obviously, M is a model of G.
2
We now state a simple result from Drakengren and Jonsson (1996).
Lemma 3.13 Let G be irreexive1 and have an acyclic subgraph D. Then those arcs of G which
are not in D can be reoriented so that the resulting graph is acyclic.
By specializing this result, we get the next lemma.
Lemma 3.14 Let G be irreexive with an acyclic subgraph D and let the arcs of D be labelled by
relations containing PP, and the arcs not in D being labelled by relations containing PP and PPI.
Then G is R-satisfiable.
1. A graph is irreexive iff it has no arcs from a node v to the node v.

217

fiJonsson & Drakengren

Proof: Reorient the arcs of G such that the resulting graph is acyclic. This is always possible by
the previous lemma. Furthermore, whenever an arc is reoriented, also invert the relation on that
arc, so that G0 is satisfiable iff G is. By this construction, only arcs containing both PP and PPI
have been reoriented, so every arc in the DAG G0 contains PP and, thus, since PP is DAG-satisfying
by Lemma 3.12, G0 is satisfiable. Consequently, G is also satisfiable.
2
Lemma 3.15 Algorithm A9 correctly solves RSAT(R95).
Proof: Assume that the algorithm finds a strongly connected component of G0 (which then contains
only the relation fPP; EQg), containing two nodes that in G are connected by an arc e that is labelled
by a relation R0 which does not contain EQ. Then there exists a cycle C in which the relation of
every arc contains EQ, such that e connects two nodes in that C but e is not part of that cycle. By
Lemma 3.9, C can be satisfied only by choosing the relation EQ on every arc in C , and since R0 does

not admit EQ, C is unsatisfiable.
Otherwise, every such strongly connected component can be collapsed to a single node, removing
all arcs which start and end in the collapsed node. This transformation retains satisfiability using the
same argument as above. After collapsing, the subgraph obtained by considering only arcs labelled
fPP; EQg will be acyclic. Since the remaining arcs are labelled by relations containing both PP and
PPI, the graph is R-satisfiable by Lemma 3.14. (Note that the graph will be irreexive since every
node is contained in some strongly connected component.)
2
Lemma 3.16 Given a graph G = hV; Ei, algorithm A9 runs in O(jV j + jEj) time.
Proof: Strongly connected components can be found in O(jV j + jEj) time (Baase, 1988) and the
remaining test can also be made in O(jV j + jE j) time.
2
Theorem 3.17 RSAT(R14
5 ) can be solved in polynomial time.
14
9
Proof: RSAT(R95) is polynomial by the previous two lemmata. Since R14
5 = R5, RSAT(R5 ) can
be solved in polynomial time by Corollary 2.4.
2

4. Classification of RCC-5

Before we can give the classification of RCC-5 we need two NP-completeness results.
Theorem 4.1 RSAT(S ) is NP-complete if
1. (Renz & Nebel, 1997) C1 = ffPOg; fPP; PPIgg  S , or
2. C2 = ffDR; POg; fPP; PPIgg  S .
Proof: The proof for C2 is by polynomial-time reduction from RSAT(C1). Let  be an arbitrary
instance of RSAT(C1). Construct the following set:
0 = fX fPP; PPIgY j X fPP; PPIgY 2 g [ fX fDR; POgY j X fPOgY 2 g:
Clearly, 0 can be obtained from  in polynomial time and 0 is an instance of RSAT(C2). We show
that  is satisfiable iff 0 is satisfiable.
only-if: Assume that there exists an R-model I of . It is not hard to see that I is also an R-model

of I 0 since if X fPOgY under I then X fDR; POgY under I . Thus 0 is R-satisfiable if  is R-satisfiable.

if: Assume the existence of an R-model I 0 that assigns subsets of some set U to the region variables

of 0 . Let ff be an element such that ff 62 U . We construct a new interpretation I as follows:
I (x) = I 0 (x) [ fffg for every variable x in 0 . It can easily be seen that the following holds for I :
218

fiA Complete Classification of Tractability in RCC-5

1.
2.
3.
4.

If xfDRgy under I 0 then xfPOgy under I .
If xfPOgy under I 0 then xfPOgy under I .
If xfPPgy under I 0 then xfPPgy under I .
If xfPPIgy under I 0 then xfPPIgy under I .

It is easy to see that if xfPP; PPIgy under I 0 then xfPP; PPIgy under I . Similarly, if xfDR; POgy under
I 0 then xfPOgy under I . It follows that I is a model of  so  is R-satisfiable if 0 is R-satisfiable.
2
The main theorem can now be stated and proved.

Theorem 4.2 For S  R5, RSAT(S ) is polynomial iff S is a subset of some member of R =
20 17 14
fR28
5 ; R5 ; R5 ; R5 g, and NP-complete otherwise.
Proof: if: For each R 2 R , RSAT(R) is polynomial as was shown in the previous section.
only-if: Choose S  R5 such that S is not a subset of any algebra in R . For each subalgebra
R 2 R , choose a relation x such that x 2 S and x 62 R. This can always be done since S 6 R. Let
X be the set of these relations and note that X is not a subset of any algebra in R . The set R
contains four algebras so by the construction of X , jX j  4. Observe that RSAT(S ) is NP-complete
if RSAT(X ) is NP-complete.
To show that RSAT(S ) has to be NP-complete, a machine-assisted case analysis of the following
P

P

P

P

P

P

form was performed:


4 
X
32
1. Generate all subsets of R5 of size  4. There are
i = 41449 such subsets.
=0
i

2. Let T be such a set. Test: T is a subset of some subalgebra in R or C  T for some
i 2 f1; 2g.
P

The test succeeds for all T . Hence, RSAT(S ) is NP-complete by Corollary 2.4.

i

2

The program used for showing the previous theorem appears in the on-line appendix of this article.

5. Discussion

The main problem of reporting tractability results for restricted classes of problems is the diculty
of isolating interesting and relevant subclasses. The systematic approach of building complete classifications is a way of partially overcoming this problem. If the problem class under consideration
is regarded relevant, then its tractable subclasses should be regarded relevant if the computational
problem is of interest. This is especially true in spatial reasoning where the size of the problem instances can be extremely large; one good example is spatial reasoning in connection with the Human
Genome project (Cui, 1994).
Another advantage with complete classifications is that they are more satisfactory from a scientific
point of view; to gain a clear picture of the borderline between tractability and intractability has
an intrinsic scientific value. A common critique is that complete classifications tend to generate
certain classes which are totally useless. For instance, the subalgebra R17
5 is certainly of no use.
It must be made clear that such critique is unjustified since the researcher who makes a complete
classification does not deliberately invent useless classes. Instead, if useless classes appear in a
complete classification, they are unavoidable parts of the classification.
219

fiJonsson & Drakengren

The work reported in this article can be extended in many different ways. One obvious extension
is to study other computational problems than the RSAT problem. Renz (1996) has studied two
problems, RMIN and RENT, on certain subclasses of RCC-5 and RCC-8. The RMIN problem is to
decide if a set of spatial formulae  is minimal, i.e., whether all basic relations in every formula of
 can be satisfied or not. The RENT problem is to decide whether a formula XRY is entailed by a
set of spatial formulae. Grigni et al. (1995) study a stronger form of satisfiability which they refer
to as realizability: A finite set  of RCC-5 formulae is said to be realizable iff there exist regions
on the plane bounded by Jordan curves which satisfy the relations in . Grigni et al. (1995) have
shown that the realizability problem is much harder than the satisfiability problem. For instance,
deciding realizability of formulae constructed from the two relations DR and PO is NP-complete while
the satisfiability problem is polynomial. Certainly, further studies of the realizability problem would
be worthwhile.
Another obvious research direction is to completely classify other spatial algebras, such as RCC8. RCC-8 contains 2256  1077 relations so the question whether this is feasible or not remains to
be answered.

6. Conclusions

We have studied computational properties of RCC-5. All of the 232 possible subclasses are classified with respect to whether their corresponding satisfiability problem is tractable or not. The
classification reveals that there are four maximal tractable subclasses of the algebra.

References

Baase, S. (1988). Computer Algorithms: Introduction and Analysis (2nd edition). Addison Wesley,
Reading, MA.
Bennett, B. (1994). Spatial reasoning with propositional logics. In Doyle, J., Sandewall, E., &
Torasso, P. (Eds.), Proceedings of the 4th International Conference on Principles on Knowledge
Representation and Reasoning (KR-94), pp. 165{176 Bonn, Germany. Morgan Kaufmann.
Cook, S. A. (1971). The complexity of theorem-proving procedures. In Proceedings of the 3rd ACM
Symposium on Theory of Computing, pp. 151{158.
Cui, Z. (1994). Using interval logic for order assembly. In Proceedings of the Second International
Conference on Intelligent Systems for Molecular Biology, pp. 103{111. AAAI Press.
Drakengren, T., & Jonsson, P. (1996). Maximal tractable subclasses of Allen's interval algebra: Preliminary report. In Proceedings of the 13th (US) National Conference on Artificial Intelligence
(AAAI-96), pp. 389{394 Portland, OR, USA. American Association for Artificial Intelligence.
Egenhofer, M. J. (1991). Reasoning about binary topological relations. In Gunther, O., & Schek,
H. J. (Eds.), Advances in Spatial Databases, pp. 143{160. Springer-Verlag.
Grigni, M., Papadias, D., & Papadimitriou, C. (1995). Topological inference. In Mellish, C. (Ed.),
Proceedings of the 14th International Joint Conference on Artificial Intelligence (IJCAI-95),
pp. 901{906 Montreal, PQ, Canada. Morgan Kaufmann.
Mallios, A. (1986). Topological Algebras. Selected Topics. North-Holland, Amsterdam.
Nebel, B. (1995). Computational properties of qualitative spatial reasoning: First results. In
Wachsmuth, I., Rollinger, C.-R., & Brauer, W. (Eds.), KI-95: Advances in Artificial Intelligence, pp. 233{244 Bielefeld, Germany. Springer-Verlag.
220

fiA Complete Classification of Tractability in RCC-5

Nebel, B., & Burckert, H.-J. (1995). Reasoning about temporal relations: A maximal tractable
subclass of Allen's interval algebra. Journal of the ACM, 42 (1), 43{66.
Randell, D. A., & Cohn, A. G. (1989). Modelling topological and metrical properties of physical
processes. In Brachman, R. J., Levesque, H. J., & Reiter, R. (Eds.), Proceedings of the 1st
International Conference on Principles on Knowledge Representation and Reasoning (KR-89),
pp. 55{66 Toronto, ON, Canada. Morgan Kaufmann.
Randell, D. A., Cui, Z., & Cohn, A. G. (1992). A spatial logic based on regions and connection. In
Swartout, B., & Nebel, B. (Eds.), Proceedings of the 3rd International Conference on Principles
on Knowledge Representation and Reasoning (KR-92), pp. 165{176 Cambridge, MA, USA.
Morgan Kaufmann.
Renz, J. (1996). Qualitatives raumliches Schlieen: Berechnungseigenschaften und eziente Algorithmen. Master thesis report, Fakultat fur Informatik, Universitat Ulm. Available from
http://www.informatik.uni-freiburg.de/sppraum.
Renz, J., & Nebel, B. (1997). On the complexity of qualitative spatial reasoning: A maximal
tractable fragment of the region connected calculus. In Proceedings of the 15th International
Joint Conference on Artificial Intelligence (IJCAI-97) Nagoya, Japan. Morgan Kaufmann. To
appear.
Statman, R. (1979). Intuitionistic logic is polynomial-space complete. Theoretical Computer Science,
9 (1), 67{72.
van Beek, P. (1992). Reasoning about qualitative temporal information. Artificial Intelligence, 58,
297{326.

221

fi