Journal of Artificial Intelligence Research 41 (2011) 397-406

Submitted 05/11; published 07/11

Research Note
Policy Invariance under Reward Transformations for
General-Sum Stochastic Games
Xiaosong Lu
Howard M. Schwartz

LUXIAOS @ SCE . CARLETON . CA
SCHWARTZ @ SCE . CARLETON . CA

Department of Systems and Computer Engineering
Carleton University
1125 Colonel By Drive, Ottawa, ON K1S 5B6 Canada

Sidney N. Givigi Jr.

S IDNEY.G IVIGI @ RMC . CA

Department of Electrical and Computer Engineering
Royal Military College of Canada
13 General Crerar Cres, Kingston, ON K7K 7B4 Canada

Abstract
We extend the potential-based shaping method from Markov decision processes to multi-player
general-sum stochastic games. We prove that the Nash equilibria in a stochastic game remains
unchanged after potential-based shaping is applied to the environment. The property of policy
invariance provides a possible way of speeding convergence when learning to play a stochastic
game.

1. Introduction
In reinforcement learning, one may suffer from the temporal credit assignment problem (Sutton &
Barto, 1998) where a reward is received after a sequence of actions. The delayed reward will lead
to difficulty in distributing credit or punishment to each action from a long sequence of actions and
this will cause the algorithm to learn slowly. An example of this problem can be found in some
episodic tasks such as a soccer game where the player is only given credit or punishment after a
goal is scored. If the number of states in the soccer game is large, it will take a long time for a
player to learn its equilibrium policy.
Reward shaping is a technique to improve the learning performance of a reinforcement learner
by introducing shaping rewards to the environment (Gullapalli & Barto, 1992; Mataric, 1994).
When the state space is large, the delayed reward will slow down the learning dramatically. To
speed up the learning, the learner may apply shaping rewards to the environment as a supplement
to the delayed reward. In this way, a reinforcement learning algorithm can improve its learning
performance by combining a "good" shaping reward function with the original delayed reward.
The applications of reward shaping can be found in the literature (Gullapalli & Barto, 1992;
Dorigo & Colombetti, 1994; Mataric, 1994; Randlv & Alstrm, 1998). Gullapalli and Barto (1992)
demonstrated the application of shaping to a key-press task where a robot was trained to press keys
on a keyboard. Dorigo and Colombetti (1994) applied shaping policies for a robot to perform a
predefined animate-like behavior. Mataric (1994) presented an intermediate reinforcement function
for a group of mobile robots to learn a foraging task. Randlv and Alstrm (1998) combined reinforcement learning with shaping to make an agent learn to drive a bicycle to a goal. The theoretical
c
2011
AI Access Foundation. All rights reserved.

fiL U , S CHWARTZ , & G IVIGI

analysis of reward shaping can be found in the literature (Ng, Harada, & Russell, 1999; Wiewiora,
2003; Asmuth, Littman, & Zinkov, 2008). Ng et al. (1999) presented a potential-based shaping
reward that can guarantee the policy invariance for a single agent in a Markov decision process
(MDP). Ng et al. proved that the optimal policy keeps unchanged after adding the potential-based
shaping reward to an MDP environment. Following Ng et al., Wiewiora (2003) showed that the effects of potential-based shaping can be achieved by a particular initialization of Q-values for agents
using Q-learning. Asmuth et al. (2008) applied the potential-based shaping reward to a model-based
reinforcement learning approach.
The above articles focus on applications of reward shaping to a single agent in an MDP. For the
applications of reward shaping in general-sum games, Babes, Munoz de Cote, and Littman (2008)
introduced a social shaping reward for players to learn their equilibrium policies in the iterated
prisoners dilemma game. But there is no theoretical proof of policy invariance under the reward
transformation. In our research, we prove that the Nash equilibria under the potential-based shaping
reward transformation (Ng et al., 1999) will also be the Nash equilibria for the original game under
the framework of general-sum stochastic games. Note that the similar work of Devlin and Kudenko
(2011) was published while this article was under review. But Devlin and Kudenko only proved
sufficiency based on a proof technique introduced by Asmuth et al. (2008), while we prove both
sufficiency and necessity using a different proof technique in this article.

2. Framework of Stochastic Games
Stochastic games were first introduced by Shapley (1953). In a stochastic game, players choose the
joint action and move from one state to another state based on the joint action they choose. In this
section, under the framework of stochastic games, we introduce Markov decision processes, matrix
games and stochastic games respectively.
2.1 Markov Decision Processes
A Markov decision process is a tuple (S, A, T,  , R) where S is the state space, A is the action space,
T : S  A  S  [0, 1] is the transition function,   [0, 1] is the discount factor and R : S  A  S  R
is the reward function. The transition function denotes a probability distribution over next states
given the current state and action. The reward function denotes the received reward at the next state
given the current action and the current state. A Markov decision process has the following Markov
property: the players next state and reward only depend on the players current state and action.
A players policy  : S  A is defined as a probability distribution over the players actions given
a state. An optimal policy   will maximize the players discounted future reward. For any MDP,
there exists a deterministic optimal policy for the player (Bertsekas, 1987).
Starting in the current state s and following the optimal policy thereafter, we can get the optimal
state-value function as the expected sum of discounted rewards (Sutton & Barto, 1998)
)
(
V  (s) = E


T

  j rk+ j+1 |sk = s,  

(1)

j=0

where k is the current time step, rk+ j+1 is the received immediate reward at the time step k + j + 1,
  [0, 1] is a discount factor, and T is a final time step. In (1), we have T   if the task is an
infinite-horizon task such that the task will run over infinite period. If the task is episodic, T is
398

fiP OLICY I NVARIANCE

UNDER

R EWARD T RANSFORMATIONS

defined as the terminal time when each episode is terminated at the time step T . Then we call the
state where each episode ends as the terminal state sT . In a terminal state, the state-value function is
always zero such that V (sT ) = 0 for all sT  S. Given the current state s and action a, and following
the optimal policy thereafter, we can define an optimal action-value function (Sutton & Barto, 1998)
h
i


(2)
Q (s, a) =  T (s, a, s ) R(s, a, s ) + V  (s )
s S

where T (s, a, s ) = Pr {sk+1 = s |sk = s, ak = a} is the probability of the next state being sk+1 = s
given the current state sk = s and action ak = a at time step k, and R(s, a, s ) = E{rk+1 |sk = s, ak = a,
sk+1 = s } is the expected immediate reward received at state s given the current state s and action
a. In a terminal state, the action-value function is always zero such that Q(sT , a) = 0 for all sT  S.
2.2 Matrix Games
A matrix game is a tuple (n, A1 , . . . , An , R1 , . . . , Rn ) where n is the number of players, Ai (i = 1, . . . , n)
is the action set for the player i and Ri : A1      An  R is the payoff function for the player i.
A matrix game is a game involving multiple players and a single state. Each player i(i = 1, . . . , n)
selects an action from its action set Ai and receives a payoff. The player is payoff function Ri is
determined by all players joint action from joint action space A1      An . For a two-player matrix
game, we can set up a matrix with each element containing a payoff for each joint action pair. Then
the payoff function Ri for player i(i = 1, 2) becomes a matrix. If the two players in the game are
fully competitive, we will have a two-player zero-sum matrix game with R1 = R2 .
In a matrix game, each player tries to maximize its own payoff based on the players strategy. A
players strategy in a matrix game is a probability distribution over the players action set. To evaluate a players strategy, we introduce the following concept of Nash equilibrium. A Nash equilibrium
in a matrix game is a collection of all players policies (1 ,    , n ) such that
Vi (1 ,    , i ,    , n )  Vi (1 ,    , i ,    , n ), i  i , i = 1,    , n

(3)

where Vi () is the expected payoff for player i given all players current strategies and i is any
strategy of player i from the strategy space i . In other words, a Nash equilibrium is a collection
of strategies for all players such that no player can do better by changing its own strategy given that
other players continue playing their Nash equilibrium policies (Basar & Olsder, 1999). We define
Qi (a1 , . . . , an ) as the received payoff of the player i given players joint action a1 , . . . , an , and i (ai )
(i = 1, . . . , n) as the probability of player i choosing action a1 . Then the Nash equilibrium defined
in (3) becomes





Qi (a1 , . . . , an )1 (a1 )    i (ai )    n (an ) 

a1 ,...,an A1 An

Qi (a1 , . . . , an )1 (a1 )    i (ai )    n (an ), i  i , i = 1,    , n

(4)

a1 ,...,an A1 An

where i (ai ) is the probability of player i choosing action ai under the player is Nash equilibrium
strategy i .
A two-player matrix game is called a zero-sum game if the two players are fully competitive.
In this way, we have R1 = R2 . A zero-sum game has a unique Nash equilibrium in the sense
of the expected payoff. It means that, although each player may have multiple Nash equilibrium
399

fiL U , S CHWARTZ , & G IVIGI

strategies in a zero-sum game, the value of the expected payoff Vi under these Nash equilibrium
strategies will be the same. If the players in the game are not fully competitive or the summation
of the players payoffs is not zero, the game is called a general-sum game. In a general-sum game,
the Nash equilibrium is no longer unique and the game might have multiple Nash equilibria. Unlike
the deterministic optimal policy for a single player in an MDP, the equilibrium strategies in a multiplayer matrix game may be stochastic.
2.3 Stochastic Games
A Markov decision process contains a single player and multiple states while a matrix game contains
multiple players and a single state. For a game with more than one player and multiple states,
we define a stochastic game (or Markov game) as the combination of Markov decision processes
and matrix games. A stochastic game is a tuple (n, S, A1 , . . . , An , T,  , R1 , . . . , Rn ) where n is the
number of the players, T : S  A1      An  S  [0, 1] is the transition function, Ai (i = 1, . . . , n)
is the action set for the player i,   [0, 1] is the discount factor and Ri : S  A1      An  S  R
is the reward function for player i. The transition function in a stochastic game is a probability
distribution over next states given the current state and joint action of the players. The reward
function Ri (s, a1 , . . . , an , s ) denotes the reward received by player i in state s after taking joint
action (a1 , . . . , an ) in state s. Similar to Markov decision processes, stochastic games also have the
Markov property. That is, the players next state and reward only depend on the current state and all
the players current actions.
To solve a stochastic game, we need to find a policy i : S  Ai that can maximize player is
discounted future reward with a discount factor  . Similar to matrix games, the players policy in
a stochastic game is probabilistic. An example is the soccer game introduced by Littman (Littman,
1994) where an agent on the offensive side must use a probabilistic policy to pass an unknown
defender. In the literature, a solution to a stochastic game can be described as Nash equilibrium
strategies in a set of associated state-specific matrix games (Bowling, 2003; Littman, 1994). In
these state-specific matrix games, we define the action-value function Qi (s, a1 , . . . , an ) as the expected reward for player i when all the players take joint action a1 , . . . , an in state s and follow the
Nash equilibrium policies thereafter. If the value of Qi (s, a1 , . . . , an ) is known for all the states,
we can find player is Nash equilibrium policy by solving the associated state-specific matrix game
(Bowling, 2003). Therefore, for each state s, we have a matrix game and we can find the Nash
equilibrium strategies in this matrix game. Then the Nash equilibrium policies for the game are the
collection of Nash equilibrium strategies in each state-specific matrix game for all the states.
2.4 Multi-Player General-Sum Stochastic Games
For a multi-player general-sum stochastic game, we want to find the Nash equilibria in the game if
we know the reward function and transition function in the game. A Nash equilibrium in a stochastic
game can be described as a tuple of n policies (1 , . . . , n ) such that for all s  S and i = 1,    , n,
Vi (s, 1 , . . . , i , . . . , n )  Vi (s, 1 , . . . , i , . . . , n ) for all i  i

(5)

where i is the set of policies available to player i and Vi (s, 1 , . . . , n ) is the expected sum of
discounted rewards for player i given the current state and all the players equilibrium policies. To
simplify notation, we use Vi (s) to represent Vi (s, 1 ,    , n ) as the state-value function under Nash
equilibrium policies. We can also define the action-value function Q (s, a1 ,    , an ) as the expected
400

fiP OLICY I NVARIANCE

UNDER

R EWARD T RANSFORMATIONS

sum of discounted rewards for player i given the current state and the current joint action of all the
players, and following the Nash equilibrium policies thereafter. Then we can get



Vi (s) =

Qi (s, a1 ,    , an )1 (s, a1 )    n (s, an ),

(6)

a1 , ,an A1 An

Qi (s, a1 , . . . , an ) =

 T (s, a1 , . . . , an , s )

s S




Ri (s, a1 , . . . , an , s ) + Vi (s ) ,

(7)

where i (s, ai )  PD(Ai ) is a probability distribution over action ai under player is Nash equilibrium policy, T (s, a1 , . . . , an , s ) = Pr {sk+1 = s |sk = s, a1 , . . . , an } is the probability of the next state
being s given the current state s and joint action (a1 , . . . , an ), and Ri (s, a1 , . . . , an , s ) is the expected
immediate reward received in state s given the current state s and joint action (a1 , . . . , an ). Based
on (6) and (7), the Nash equilibrium in (5) can be rewritten as



Qi (s, a1 , . . . , an )1 (s, a1 )    i (s, ai )    n (s, an ) 

a1 ,...,an A1 An



Qi (s, a1 , . . . , an )1 (s, a1 )    i (s, ai )    n (s, an ).

(8)

a1 ,...,an A1 An

3. Potential-Based Shaping in General-Sum Stochastic Games
Ng et al. (1999) presented a reward shaping method to deal with the credit assignment problem
by adding a potential-based shaping reward to the environment. The combination of the shaping
reward with the original reward may improve the learning performance of a reinforcement learning
algorithm and speed up the convergence to the optimal policy. The theoretical studies on potentialbased shaping methods that appear in the published literature consider the case of a single agent in
an MDP (Ng et al., 1999; Wiewiora, 2003; Asmuth et al., 2008). In our research, we extend the
potential-based shaping method from Markov decision processes to multi-player stochastic games.
We prove that the Nash equilibria under the potential-based shaping reward transformation will be
the Nash equilibria for the original game under the framework of general-sum stochastic games.
We define a potential-based shaping reward Fi (s, s ) for player i as
Fi (s, s ) =  i (s )  i (s),

(9)

where  : S  R is a real-valued shaping function and (sT ) = 0 for any terminal state sT . We
define a multi-player stochastic game as a tuple M = (S, A1 , . . . , An , T,  , R1 , . . . , Rn ) where S is a set
of states, A1 , . . . , An are players action sets, T is the transition function,  is the discount factor, and
Ri (s, a1 , . . . , an , s )(i = 1, . . . , n) is the reward function for player i. After adding the shaping reward
function Fi (s, s ) to the reward function Ri (s, a1 , . . . , an , s ), we define a transformed multi-player
stochastic game as a tuple M  = (S, A1 , . . . , An , T,  , R1 , . . . , Rn ) where Ri (i = 1, . . . , n) is the new
reward function given by Ri (s, a1 , . . . , an , s ) = Fi (s, s ) + Ri (s, a1 , . . . , an , s ). Inspired by Ng et al.
(1999)s proof of policy invariance in an MDP, we prove the policy invariance in a multi-player
general-sum stochastic game as follows.
Theorem 1. Given an n-player discounted stochastic game M = (S, A1 , . . . , An , T,  , R1 , . . . , Rn ), we
define a transformed n-player discounted stochastic game M  = (S, A1 , . . . , An , T,  , R1 + F1 , . . . , Rn +
Fn ) where Fi  S  S is a shaping reward function for player i. We call Fi a potential-based shaping
function if Fi has the form of (9). Then, the potential-based shaping function Fi is a necessary and
sufficient condition to guarantee the Nash equilibrium policy invariance such that
401

fiL U , S CHWARTZ , & G IVIGI

 (Sufficiency) If Fi (i = 1, . . . , n) is a potential-based shaping function, then every Nash equilibrium policy in M  will also be a Nash equilibrium policy in M (and vice versa).
 (Necessity) If Fi (i = 1, . . . , n) is not a potential-based shaping function, then there may exist
a transition function T and reward function R such that the Nash equilibrium policy in M 
will not be the Nash equilibrium policy in M.
Proof. (Proof of Sufficiency)
Based on (8), a Nash equilibrium in the stochastic game M can be represented as a set of policies
such that for all i = 1, . . . , n, s  S and Mi  






QMi (s, a1 , . . . , an )M
(s, a1 )    M
(s, ai )    M
(s, an ) 
1
i
n

a1 ,...,an A1 An





(s, a1 )    Mi (s, ai )    M
(s, an ).
QMi (s, a1 , . . . , an )M
1
n

(10)

a1 ,...,an A1 An

We subtract i (s) on both sides of (10) and get



a1 ,...,an A1 An




QMi (s, a1 , . . . , an )M
(s, a1 )    M
(s, ai )    M
(s, an )  i (s) 
1
i
n





QMi (s, a1 , . . . , an )M
(s, a1 )    Mi (s, ai )    M
(s, an )  i (s).
1
n

(11)

a1 ,...,an A1 An
 (s, a )      (s, a )      (s, a ) = 1, we can get
Since a1 ,...,an A1 An M
1
i
n
Mi
Mn
1






(s, a1 )    M
(s, ai )    M
(s, an ) 
[QMi (s, a1 , . . . , an )  i (s)]M
1
i
n

a1 ,...,an A1 An





[QMi (s, a1 , . . . , an )  i (s)]M
(s, a1 )    Mi (s, ai )    M
(s, an ).
1
n

(12)

a1 ,...,an A1 An

We define
QMi (s, a1 , . . . , an ) = QMi (s, a1 , . . . , an )  i (s).

(13)

Then we can get



a1 ,...,an A1 An






QMi (s, a1 , . . . , an )M
(s, a1 )    M
(s, ai )    M
(s, an ) 
1
i
n

a1 ,...,an A1 An



(s, a1 )    Mi (s, ai )    M
(s, an ).
QMi (s, a1 , . . . , an )M
1
n

(14)

We now use some algebraic manipulations to rewrite the action-value function under the Nash equilibrium in (7) for player i in the stochastic game M as

QMi (s, a1 , . . . , an )  i (s) =  T (s, a1 , . . . , an , s ) RMi (s, a1 , . . . , an , s ) + VM i (s )
s S


+ i (s )   i (s )  i (s).

(15)

Since s S T (s, a1 , . . . , an , s ) = 1, the above equation becomes
QMi (s, a1 , . . . , an )  i (s) =

 T (s, a1 , . . . , an , s )

s S



RMi (s, a1 , . . . , an , s )


+ i (s )  i (s) + VM i (s )   i (s ) .
402

(16)

fiP OLICY I NVARIANCE

UNDER

R EWARD T RANSFORMATIONS

According to (6), we can rewrite the above equation as
QMi (s, a1 , . . . , an )  i (s) =



+

a1 ,...,an A1 An

=
+



a1 ,...,an A1 An

 T (s, a1 , . . . , an , s )

s S



RMi (s, a1 , . . . , an , s ) +  i (s )  i (s)



 

 

(s
,
a
)



(s
,
a
)

QMi (s , a1 , . . . , an )M



(s
)
i
1
M
n
1
i

 T (s, a1 , . . . , an , s )



RMi (s, a1 , . . . , an , s ) +  i (s )  i (s)

s S
	
   
   

(s , a1 )    M
(s , an ) .
QMi (s , a1 , . . . , an )  i (s ) M
1
i

(17)

Based on the definitions of Fi (s, s ) in (9) and QMi (s, a1 , . . . , an ) in (13), the above equation becomes
QMi (s, a1 , . . . , an ) =
+



a1 ,...,an A1 An

 T (s, a1 , . . . , an , s )

s S



RMi (s, a1 , . . . , an , s ) + Fi(s, s )




QMi (s , a1 , . . . , an ) M
(s , a1 )    M
(s , an ) .
1
i

(18)

Since equations (14) and (18) have the same form as equations (6)-(8), we can conclude that
QMi (s, a1 , . . . , an ) is the action-value function under the Nash equilibrium for player i in the stochastic game M  . Therefore, we can obtain
QMi (s, a1 , . . . , an ) = QM (s, a1 , . . . , an ) = QMi (s, a1 , . . . , an )  i (s).
i

(19)

If the state s is the terminal state sT , then we have QMi (sT , a1 , . . . , an ) = QMi (sT , a1 , . . . , an ) 
i (sT ) = 0  0 = 0. Based on (14) and QMi (s, a1 , . . . , an ) = QM (s, a1 , . . . , an ), we can find that
i
the Nash equilibrium in M is also the Nash equilibrium in M  . Then the state-value function under
the Nash equilibrium in the stochastic game M  can be given as
VM  (s) = VM i (s)  i (s).
i

(20)

(Proof of Necessity)
If Fi (i = 1, . . . , n) is not a potential-based shaping function, we will have Fi (s, s ) 6=  i (s )  i (s).
Similar to Ng et al. (1999)s proof of necessity, we define  = Fi (s, s )  [ i (s )  i (s)]. Then we
can build a stochastic game M by giving the following transition function T and player 1s reward
function RM1 ()
T (s1 , a11 , a2 , . . . , an , s3 ) = 1,
T (s1 , a21 , a2 , . . . , an , s2 ) = 1,
T (s2 , a1 , . . . , an , s3 ) = 1,
T (s3 , a1 , . . . , an , s3 ) = 1,

RM1 (s1 , a1 , . . . , an , s3 ) = ,
2
RM1 (s1 , a1 , . . . , an , s2 ) = 0,
RM1 (s2 , a1 , . . . , an , s3 ) = 0,
RM1 (s3 , a1 , . . . , an , s3 ) = 0,
403

(21)

fiL U , S CHWARTZ , & G IVIGI

a11
S3

S1

a12
S2
Figure 1: possible states of the stochastic model in the proof of necessity

where ai (i = 1, . . . , n) represents any possible action ai  Ai from player i, and a11 and a21 represent
player 1s action 1 and action 2 respectively. Equation T (s1 , a11 , a2 , . . . , an , s3 ) = 1 in (21) denotes
that, given the current state s1 , player 1s action a11 will lead to the next state s3 no matter what
joint action the other players take. Based on the above transition function and reward function, we
can get the game model including states (s1 , s2 , s3 ) shown in Figure 1. We now define 1 (si ) =
F1 (si , s3 )(i = 1, 2, 3). Based on (6), (7), (19), (20) and (21), we can obtain player 1s action-value
function at state s1 in M and M 

,
2
QM1 (s1 , a21 , . . . ) = 0,

QM1 (s1 , a11 , . . . ) =


QM (s1 , a11 , . . . ) = F1 (s1 , s2 ) +  F1 (s2 , s3 )  ,
1
2
QM (s1 , a21 , . . . ) = F1 (s1 , s2 ) +  F1 (s2 , s3 ).
1

Then the Nash equilibrium policy for player 1 at state s1 is


(s1 , a1 ) =
M
1

 1
a1 if  > 0,


a21


, M
 (s1 , a1 ) =
1

otherwise

 2
a1 if  > 0,


a11

.

(22)

otherwise

Therefore, in the above case, the Nash equilibrium policy for player 1 at state s1 in M is not the
Nash equilibrium policy in M  .

The above analysis shows that the potential-based shaping reward with the form of Fi (s, s ) =
 i (s )  i (s) guarantees the Nash equilibrium policy invariance. Now the question becomes
how to select a shaping function i (s) to improve the learning performance of the learner. Ng
et al. (1999) showed that i (s) = VM i (s) is a good candidate for improving the players learning
404

fiP OLICY I NVARIANCE

UNDER

R EWARD T RANSFORMATIONS

performance in an MDP. We substitute i (s) = VM i (s) into (18) and get
QMi (s, a1 , . . . , an ) = QM (s, a1 , . . . , an )
i

=
+

 T (s, a1 , . . . , an , s )

s S





RMi (s, a1 , . . . , an , s ) + Fi (s, s )



RMi (s, a1 , . . . , an , s ) + Fi (s, s )



 

 
QM (s , a1 , . . . , an ) M

(s
,
a
)



(s
,
a
)
1
M
n
1
i
i

a1 ,...,an A1 An

=

 T (s, a1 , . . . , an , s )

s S


+  (VM i (s )  i (s ))


=  T (s, a1 , . . . , an , s ) RMi (s, a1 , . . . , an , s ) + Fi (s, s ) .

(23)

s S

Equation (23) shows that the action-value function QM (s, a1 , . . . , an ) in state s can be easily obtained
i
by checking the immediate reward RMi (s, a1 , . . . , an , s ) + Fi (s, s ) that player i received in state s .
However, in practical applications, we will not have all the information of the environment such as
T (s, a1 , . . . , an , s ) and Ri (s, a1 , . . . , an , s ). This means that we cannot find a shaping function i (s)
such that i (s) = VM i (s) without knowing the model of the environment. Therefore, the goal for
designing a shaping function is to find a i (s) as a good approximation to VM i (s).

4. Conclusion
A potential-based shaping method can be used to deal with the temporal credit assignment problem
and speed up the learning process in MDPs. In this article, we extend the potential-based shaping
method to general-sum stochastic games. We prove that the proposed potential-based shaping reward applied to a general-sum stochastic game will not change the original Nash equilibrium of the
game. The analysis result in this article has the potential to improve the learning performance of the
players in a stochastic game.

References
Asmuth, J., Littman, M. L., & Zinkov, R. (2008). Potential-based shaping in model-based reinforcement learning. In Proceedings of the 23rd AAAI Conference on Artificial Intelligence,
pp. 604609.
Babes, M., Munoz de Cote, E., & Littman, M. L. (2008). Social reward shaping in the prisoners
dilemma. In Proceedings of the 7th International Joint Conference on Autonomous Agents
and Multiagent Systems (AAMAS 2008), pp. 13891392.
Basar, T., & Olsder, G. J. (1999). Dynamic Noncooperative Game Theory. SIAM Series in Classics
in Applied Mathematics 2nd, London, U.K.
Bertsekas, D. P. (1987). Dynamic Programming: Deterministic and Stochastic Models. PrenticeHall, Englewood Cliffs, NJ.
Bowling, M. (2003). Multiagent Learning in the Presence of Agents with Limitations. Ph.D. thesis,
School of Computer Science, Carnegie Mellon University, Pittsburgh, PA.
405

fiL U , S CHWARTZ , & G IVIGI

Devlin, S., & Kudenko, D. (2011). Theoretical considerations of potential-based reward shaping for
multi-agent systems.. In Proceedings of the 10th International Conference on Autonomous
Agents and Multiagent Systems (AAMAS), Taipei, Taiwan.
Dorigo, M., & Colombetti, M. (1994). Robot shaping: developing autonomous agents through
learning. Artificial Intelligence, 71, 321370.
Gullapalli, V., & Barto, A. (1992). Shaping as a method for accelerating reinforcement learning. In
Proceedings of the 1992 IEEE International Symposium on Intelligent Control, pp. 554 559.
Littman, M. L. (1994). Markov games as a framework for multi-agent reinforcement learning. In
Proceedings of the 11th International Conference on Machine Learning, pp. 157163.
Mataric, M. J. (1994). Reward functions for accelerated learning. In Proceedings of the 11th
International Conference on Machine Learning.
Ng, A. Y., Harada, D., & Russell, S. (1999). Policy invariance under reward transformations: theory
and application to reward shaping. In Proceedings of the 16th International Conference on
Machine Learning, pp. 278287.
Randlv, J., & Alstrm, P. (1998). Learning to drive a bicycle using reinforcement learning and
shaping. In Proceedings of the 15th International Conference on Machine Learning.
Shapley, L. S. (1953). Stochastic games. In Proceedings of the National Academy of Sciences,
Vol. 39, pp. 10951100.
Sutton, R. S., & Barto, A. G. (1998). Reinforcement Learning: An Introduction. The MIT Press,
Cambridge, Massachusetts.
Wiewiora, E. (2003). Potential-based shaping and Q-value initialization are equivalent. Journal of
Artificial Intelligence Research, 19, 205208.

406

fi