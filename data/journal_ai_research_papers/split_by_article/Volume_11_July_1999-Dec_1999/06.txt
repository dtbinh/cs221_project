Journal of Artificial Intelligence Research 11 (1999) 277-300

Submitted 5/99; published 10/99

Reasoning about Minimal Belief and Negation as Failure
Riccardo Rosati

rosati@dis.uniroma1.it

Dipartimento di Informatica e Sistemistica
Universita di Roma \La Sapienza"
Via Salaria 113, 00198 Roma, Italy

Abstract
We investigate the problem of reasoning in the propositional fragment of MBNF, the
logic of minimal belief and negation as failure introduced by Lifschitz, which can be considered as a unifying framework for several nonmonotonic formalisms, including default
logic, autoepistemic logic, circumscription, epistemic queries, and logic programming. We
characterize the complexity and provide algorithms for reasoning in propositional MBNF.
In particular, we show that skeptical entailment in propositional MBNF is p3 -complete,
hence it is harder than reasoning in all the above mentioned propositional formalisms for
nonmonotonic reasoning. We also prove the exact correspondence between negation as
failure in MBNF and negative introspection in Moore's autoepistemic logic.

1. Introduction
Research in the formalization of commonsense reasoning has pointed out the need of formalizing agents able to reason introspectively about their own knowledge and ignorance
(Moore, 1985; Levesque, 1990). Modal epistemic logics have thus been proposed, in which
modalities are interpreted in terms of knowledge or belief. Generally speaking, the conclusions an introspective agent is able to draw depend on both what she knows and what she
does not know. Hence, any such conclusion may be retracted when new facts are added to
the agent's knowledge. For this reason, many nonmonotonic modal formalisms have been
proposed in order to characterize the reasoning abilities of an introspective agent.
Among the nonmonotonic modal logics proposed in the literature, the logic of minimal
belief and negation as failure MBNF (Lifschitz, 1991, 1994) is one of the most studied formalisms (Chen, 1994; Bochman, 1995; Beringer & Schaub, 1993). Roughly speaking, such
a logic is built by adding to first-order logic two distinct modalities, a \minimal belief"
modality B and a \negation as failure" modality not . The logic thus obtained is characterized in terms of a nice model-theoretic semantics. MBNF has been used in order to
give a declarative semantics to very general classes of logic programs (Lifschitz & Woo,
1992; Schwarz & Lifschitz, 1993; Inoue & Sakama, 1994), which generalize the stable model
semantics of negation as failure in logic programming (Gelfond & Lifschitz, 1988, 1990,
1991). Also, MBNF can be viewed as an extension of the theory of epistemic queries to
databases (Reiter, 1990), which deals with the problem of querying a first-order database
about its own knowledge. Due to its ability of expressing many features of nonmonotonic
logics (Lifschitz, 1994; Schwarz & Lifschitz, 1993), MBNF is generally considered as a unifying framework for several nonmonotonic formalisms, including default logic, autoepistemic
logic, circumscription, epistemic queries, and logic programming.

c 1999 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved.

fiRosati

Although several aspects of the logic MBNF have been thoroughly investigated (Schwarz
& Lifschitz, 1993; Chen, 1994; Bochman, 1995), the existing studies concerning the computational properties of MBNF are limited to subclasses of propositional MBNF theories
(Inoue & Sakama, 1994) or to a very restricted subset of the first-order case (Beringer &
Schaub, 1993).
In this paper we present a computational characterization of deduction in the propositional fragment of MBNF. In particular, we show that logical implication in the propositional fragment of MBNF is a p3 -complete problem: hence, it is harder (unless the polynomial hierarchy collapses) than reasoning in all the best known propositional formalisms
for nonmonotonic reasoning, like autoepistemic logic (Niemela, 1992; Gottlob, 1992), default logic (Gottlob, 1992), circumscription (Eiter & Gottlob, 1993), (disjunctive) logic
programming (Eiter & Gottlob, 1995), and several McDermott and Doyle's logics (Marek
& Truszczynski, 1993). As shown in the following, this result also implies that minimal
knowledge is computationally harder than negation as failure.
Moreover, we study the subclass of at MBNF theories, i.e. MBNF theories without nested occurrences of modalities, showing that in this case logical implication is p2 complete. This case is the most interesting one from the logic programming viewpoint.
Indeed, it implies that, under the stable model semantics, increasing the syntax of program
rules, by allowing propositional formulas as goals in the rules, does not affect the worst-case
complexity of query answering for disjunctive logic programs with negation as failure.
Furthermore, we provide algorithms for reasoning both in MBNF and in its at fragment,
which are optimal with respect to worst-case complexity. Notably, such deductive methods
can be considered as generalizations of known methods for reasoning in nonmonotonic
formalisms such as default logic, autoepistemic logic, and logic programming under stable
model semantics.
We also show that the \negation as failure" modality in MBNF exactly corresponds
to negative introspection in autoepistemic logic (Moore, 1985). This result implies that
the logic MBNF can be considered as the \composition" of two epistemic modalities: the
\minimal knowledge" operator due to Halpern and Moses (1985) and Moore's autoepistemic
operator.
Besides its theoretical interest, we believe that such a computational and epistemological
analysis of MBNF has interesting implications for the development of knowledge representation systems with nonmonotonic abilities, since it allows for a better understanding and
comparison of the different nonmonotonic formalisms captured by MBNF. The interest in
defining deductive methods for MBNF also arises from the fact that such a logic, originally
developed as a framework for the comparison of different logical approaches to nonmonotonic reasoning, has recently been considered as an attractive knowledge representation
formalism. In particular, it has been shown (Donini, Nardi, & Rosati, 1997a) that the full
power of MBNF is necessary in order to logically formalize several features of implemented
frame-based knowledge representation systems.
In the following, we first briey recall the logic MBNF. In Section 3 we address the
relationship between MBNF and Moore's autoepistemic logic. Then, in Section 4 we study
the problem of reasoning in propositional MBNF: we first consider the case of general MBNF
theories, then we deal with at MBNF theories. In Section 5 we present the computational
278

fiReasoning about minimal belief and negation as failure

characterization of reasoning in MBNF. We conclude in Section 6. This paper is an extended
and thoroughly revised version of (Rosati, 1997).

2. The Logic MBNF

In this section we briey recall the logic MBNF (Lifschitz, 1994), which is a modal logic
with two epistemic operators: a \minimal belief" modality B and a \negation as failure"
(also called \negation by default") modality not . We use L to denote a fixed propositional
language built in the usual way from: (i) an alphabet A of propositional symbols; (ii) the
symbols true, false; (iii) the propositional connectives _; ^; :; . We denote as LM the
modal extension of L with the modalities B and not . We say that a formula ' 2 LM
has (modal) depth i (with i  0) if each subformula in ' lies within the scope of at most
i modalities, and there exists a subformula in ' which lies within the scope of exactly i
modalities.
We denote as LSM the set of subjective MBNF formulas, i.e. the subset of formulas from
LM in which each occurrence of a propositional symbol lies within the scope of at least one
modality, and with L1M the set of at MBNF formulas, that is the set of formulas from LM
in which each propositional symbol lies within the scope of exactly one modality. We call a
modal formula ' from LM positive (resp. negative ) if the modality not (resp. B ) does not
occur in '. LB denotes the set of positive formulas from LM , while LSB denotes the set of
positive formulas from LSM .
We now recall the notion of MBNF model. An interpretation is a set of propositional
symbols. An MBNF structure is a triple (I; Mb ; Mn ), where I is an interpretation (also called
initial world) and Mb ; Mn are non-empty sets of interpretations (worlds). Satisfiability of a
formula in an MBNF structure is defined inductively as follows:
1. if ' is a propositional symbol, ' is satisfied by (I; Mb ; Mn ) iff ' 2 I ;
2. :' is satisfied by (I; Mb ; Mn ) iff ' is not satisfied by (I; Mb ; Mn );

3. '1 ^ '2 is satisfied by (I; Mb ; Mn ) iff '1 is satisfied by (I; Mb ; Mn ) and '2 is satisfied
by (I; Mb ; Mn );

4. '1 _ '2 is satisfied by (I; Mb ; Mn ) iff either '1 is satisfied by (I; Mb ; Mn ) or '2 is
satisfied by (I; Mb ; Mn );
5. '1  '2 is satisfied by (I; Mb ; Mn ) iff either '1 is not satisfied by (I; Mb ; Mn ) or '2
is satisfied by (I; Mb ; Mn );
6. B' is satisfied by (I; Mb ; Mn ) iff, for every J 2 Mb , ' is satisfied by (J; Mb ; Mn );

7. not ' is satisfied by (I; Mb ; Mn ) iff there exists J 2 Mn such that ' is not satisfied by
(J; Mb ; Mn ).
We write (I; Mb ; Mn ) j= ' to indicate that ' is satisfied by (I; Mb ; Mn ). We say that
a theory   LM is satisfied by (I; Mb ; Mn ) (and write (I; Mb ; Mn ) j= ) iff each formula
from  is satisfied by (I; Mb ; Mn ). If ' 2 LSM , then the evaluation of ' is insensitive to
the initial interpretation I : thus, in this case we also write (Mb ; Mn ) j= '. Analogously, if
279

fiRosati

' 2 LSB , then the evaluation of ' is insensitive both to the initial interpretation I and to
the set Mn , and we also write Mb j= '. If ' 2 L then the evaluation of ' does not depend
on the sets Mb ; Mn , and in this case we write I j= '.

In order to relate MBNF structures to standard interpretation structures in modal
logic (i.e. Kripke structures), we remark that, due to the above notion of satisfiability,
we can consider the sets Mb , Mn in an MBNF interpretation structure as two distinct
universal Kripke structures, i.e. possible-world structures in which each world is connected
to all worlds of the structure. In fact, since the accessibility relation in such a structure is
universal, without loss of generality it is possible to identify a universal Kripke structure
with the set of interpretations contained in it. We recall that the class of universal Kripke
structures characterizes the logic S5 (Marek & Truszczynski, 1993, Theorem 7.52).
The nonmonotonic character of MBNF is obtained by imposing the following preference
semantics over the interpretation structures satisfying a given theory.

Definition 2.1 A structure (I; M; M ), where M 6= ;, is an MBNF model of a theory
  LM iff (I; M; M ) j=  and, for each interpretation J and for each set of interpretations
M 0, if M 0  M then (J; M 0 ; M ) 6j= .
We say that a formula ' is entailed (or logically implied ) by  in MBNF (and write
 j=MBNF ') iff ' is satisfied by every MBNF model of . In order to simplify notation,
we denote the MBNF model (I; M; M ) with the pair (I; M ), and, if  2 LSM , we denote
(I; M; M ) with M , since in this case the evaluation of  is insensitive to the initial world I ,
namely, if (I; M ) is a model for , then, for each interpretation J , (J; M ) is a model for .

Example 2.2 Let  = fBpg. The only MBNF models for  are of the form (I; M ), with
M = fI : I j= pg. Hence,  j=MBNF Bp, and  j=MBNF :B for each 2 L such that the
propositional formula p  is not valid. Therefore, the agent modeled by  has minimal
belief, in the sense that she only believes p and the objective facts logically implied by p.

Example 2.3 Let  = fnot married  B hasNoChildren g. It is easy to see that the only
models for  are of the form (I; M ) such that M = fI : I j= hasNoChildren g, since married
can be assumed not to hold by the agent modeled by , which is then able to conclude
::married in
B hasNoChildren . Notably, the meaning of  is analogous to the default rule hasNoChildren
Reiter's default logic (Lifschitz, 1994). Also, let  = fB bird ^ not : ies  B ies ; B bird g.

In a way analogous to the previous case, it can be shown that the only MBNF models for
 are of the form (I; M ), with M = fI : I j= bird ^ ies g. Therefore,  j=MBNF B ies . As
:ies g; bird ).
shown by Lifschitz (1994),  corresponds to the default theory (f birdies

Given a set of interpretations M , Th(M ) denotes the set of formulas B' such that
B' 2 LB and M j= B'. Let M1; M2 be sets of interpretations. We say that M1 is
equivalent to M2 iff Th(M1 ) = Th(M2 ).

Definition 2.4 A set of interpretations M is maximal iff, for each set of interpretations
M 0, if M 0 is equivalent to M then M 0  M .
280

fiReasoning about minimal belief and negation as failure

It turns out that, when restricting to theories composed of subjective positive formulas,
MBNF corresponds to the modal logic of minimal knowledge due to Halpern and Moses
(1985), also known as ground nonmonotonic modal logic S5G (Kaminski, 1991; Donini,
Nardi, & Rosati, 1997b). In fact, S5G is obtained from modal logic S5 by imposing the
following preference order over the universal Kripke structures satisfying a theory  2 LB :
M is a model for  iff M j=  and, for each M 0 , if M 0 j=  then M 0 6 M (Shoham,
1987). In fact, it is immediate to see that the MBNF semantics of theories composed of
subjective positive formulas corresponds to the above semantics according to S5G . Hence,
the following property holds.

Proposition 2.5 Let   LB . Then, M is an S5G model for  iff, for each I , (I; M ) is
an MBNF model for fB' : ' 2 g.
The previous proposition implies that, when   LSB , a set of interpretations M satisfying  is compared with all other sets of interpretations satisfying , while, in the case
  LM , M is only compared with the sets M 0 such that (M 0 ; M ) satisfies .

Hence, the main difference between MBNF and S5G lies in the fact that in S5G all models
are maximal with respect to set containment (or minimal with respect to the objective
knowledge which holds in the model), while in MBNF this property is not generally true.
E.g., the theory  = fnot married _ B married g has two types of models, for each possible
choice of the initial world J : (J; M1 ), where M1 corresponds to the set of all interpretations
(which represents the case in which married is not assumed to hold); and (J; M2 ), where
M2 = fI : I j= married g. Namely, if married is assumed to hold, then  forces one to
conclude B married : that is, the initial assumption is justified by the knowledge derived on
the basis of such an assumption (Lin & Shoham, 1992). We remark that, by Proposition 2.5,
the interpretation of the MBNF operator B exactly corresponds to the interpretation of the
modality B in S5G .

3. Relating MBNF to Autoepistemic Logic

In this section we study the relationship between autoepistemic logic and MBNF. First, we
briey recall Moore's autoepistemic logic (AEL). In order to keep notation to a minimum,
we change the language of AEL, using the modality B instead of L. Thus, in the following
a formula of AEL is a formula from LB .

Definition 3.1 A propositionally consistent set of formulas T  LB is a stable expansion
for a set of initial knowledge   LB if T satisfies the following equation:
T = Cn( [ fB' j ' 2 T g [ f:B' j ' 62 T g)
(1)
where Cn(S ) denotes the propositional deductive closure of the modal theory S  LB .
Given a theory   LB and a formula ' 2 LB , we write  j=AEL ' iff ' belongs to
all the stable expansions of . Each stable expansion T is a stable set according to the
following definition (Stalnaker, 1993).

Definition 3.2 A modal theory T  LB is a stable set if
281

fiRosati

1. T = Cn(T );
2. for every ' 2 LB , if ' 2 T then B' 2 T ;
3. for every ' 2 LB , if ' 62 T then :B' 2 T .

We recall that a stable set T corresponds to a maximal universal Kripke structure MT
such that T is the set of formulas satisfied by MT (Marek & Truszczynski, 1993). With the
term AEL model for  we will thus refer to a set of interpretations M whose set of theorems
Th(M ) corresponds to a stable expansion for  in AEL.
Finally, notice that we have adopted the notion of consistent autoepistemic logic (Marek
& Truszczynski, 1993), i.e. in (1) we do not allow the inconsistent theory T = LB composed
of all modal formulas to be a (possible) stable expansion. The results presented in this
section can be easily extended to this case (corresponding to Moore's original proposal):
however, this requires to slightly change the semantics of MBNF, allowing in Definition 2.1
the empty set of interpretations to be a possible component of MBNF structures.
In the following, we use the term embedding (or translation) to indicate a transformation
function  () for modal theories. We are interested in finding a faithful embedding (Gottlob,
1995; Schwarz, 1996; Janhunen, 1998), in the following sense:  () is a faithful embedding
of AEL into MBNF if, for each theory   LB and for each model M , M is an AEL model
for  iff M is an MBNF model for  ().
It is already known that AEL theories can be embedded into MBNF theories. In particular, it has been proven (Lin & Shoham, 1992; Schwarz & Truszczynski, 1994) that AEL
theories with no nested occurrences of B (called at theories) can be embedded into MBNF;
now, since in AEL any theory can be transformed into an equivalent at theory (which has
in general size exponential in the size of the initial theory), it follows that any AEL theory
can be embedded into MBNF.
However, we now prove a much stronger result: negation as failure in MBNF exactly
corresponds to negative introspection in AEL, i.e. AEL's modality :B and MBNF's modality not are semantically equivalent. Hence, such a correspondence is not only limited to
modal theories without nested modalities, and induces a polynomial-time embedding of any
AEL theory into MBNF.
We first define the translation  () of modal theories from AEL to MBNF theories.

Definition 3.3 Let ' 2 LB . Then,  (') is the MBNF formula obtained from ' by substituting each occurrence of B with :not. Moreover, if   LB , then  () denotes the MBNF
theory fB (')j' 2 g.
We now show that the translation  () embeds AEL theories into MBNF. To this aim, we

exploit the semantic characterization of AEL defined by Schwarz (1992). Roughly speaking,
according to such a preference semantics over possible-world structures, an AEL model for
 is a set of interpretations M satisfying  such that, for any interpretation J not contained
in M , the pair (J; M ) does not satisfy . Formally:

Proposition 3.4 (Schwarz, 1992, Proposition 4.1) Let   LB . Then, M is an AEL
model for  iff, for each interpretation I 2 M , (I; M ) j=  and, for each interpretation
J 62 M , (J; M ) 6j= .
282

fiReasoning about minimal belief and negation as failure

In the following, we say that an occurrence of a subformula in a formula ' 2 LM is
strict if it does not lie within the scope of a modal operator. E.g., let  = B' ^ not (B _  ).
The occurrence of B' in  is strict, while the occurrence of B is not strict.

Theorem 3.5 Let   LB . Then, M is an AEL model for  iff, for each I , (I; M ) is an
MBNF model of  ().

If part. Suppose (I; M ) is an MBNF model of  (). Then, for each M 0  M ,
(M 0 ; M ) 6j=  (). Since  () is a set of formulas of the form B', where ' does not contain
any occurrence of the operator B , it follows that, for each subformula of the form not '
occurring in  (), (M 0 ; M ) j= not ' iff (M; M ) j= not '. Now let B' 2  (), let '0 denote
the propositional formula obtained from ' by replacing each strict occurrence in ' of a
formula of the form not with true if (M; M ) j= not and with false otherwise, and let
0 = f'0 : B' 2  ()g. Now suppose there exists an interpretation J such that J j= 0
and J 62 M . Then, from the definition of satisfiability in MBNF structures it follows that
(M [fJ g; M ) j=  (), thus contradicting the hypothesis that (I; M ) is an MBNF model for
 (). Hence, M = fI : I j= 0g. Now consider a pair (J; M ): again, from the definition of
satisfiability in MBNF structures it follows immediately that (J; M ) j=  iff J j= 0 . And
since M contains all the interpretations satisfying 0 , it follows that, for each interpretation
J 62 M , (J; M ) 6j= , therefore by Proposition 3.4 it follows that M is an AEL model for .
Only-if part. Suppose M is an AEL model for . Then, by Proposition 3.4, for each
interpretation I 2 M , (I; M ) j=  and, for each interpretation J 62 M , (J; M ) 6j= . For
each ' 2 , let '00 denote the propositional formula obtained from ' by replacing each strict
occurrence of a formula of the form B with true if M j= B and with false otherwise, and
let 00 = f'00 : ' 2 g. Then, suppose there exists an interpretation J such that J j= 00
and J 62 M . Then, from the definition of satisfiability in MBNF structures it follows that
(J; M ) j= , thus contradicting the hypothesis that M is an AEL model for . Hence,
M = fI : I j= 00g. Now suppose that, for some interpretation I , (I; M ) is not an MBNF
model for  (). Then, there exists M 0  M such that (M 0 ; M ) j=  (). From the definition
of  (), it follows that each interpretation in M 0 satisfies 00 , and, since M 0  M , there exists
J 62 M such that J j= 00. Contradiction. Therefore, (I; M ) is an MBNF model for .
We remark that the above theorem could alternatively be proved from the fact that
the K -free fragment of the logic MKNF (Lifschitz, 1991) is equivalent to AEL, which is
stated (although without proof) by Schwarz and Truszczynski (1994, page 123), and from
the correspondence between MBNF and MKNF (Lifschitz, 1994).
The previous theorem implies that the interpretation of the modality not in MBNF and
of the modal operator in autoepistemic logic are the same. This property extends previous
results relating MBNF with AEL (Lin & Shoham, 1992; Schwarz & Lifschitz, 1993; Chen,
1994), and has interesting consequences both in the logic programming framework and in
nonmonotonic reasoning. In particular, since MBNF generalizes the stable model semantics
for logic programs (Gelfond & Lifschitz, 1988), the above result strengthens the idea that
AEL is the true logic of negation as failure (as interpreted according to the stable model
semantics). Moreover, positive theories have the same interpretation both in MBNF and
in the logic of minimal knowledge S5G (Halpern & Moses, 1985): consequently, the logic
MBNF generalizes both Halpern and Moses' S5G and Moore's AEL.
Proof.

283

fiRosati

4. Reasoning in MBNF

In this section we present algorithms for reasoning in propositional MBNF: in particular, we
study the entailment problem in MBNF. From now on, we assume to deal with finite MBNF
theories , therefore we refer to a single formula  (which corresponds to the conjunction
of all the formulas contained in the finite theory ).

4.1 Characterizing MBNF Models

We now present a finite characterization of the MBNF models of a formula  2 LM . As
in several methods for reasoning in nonmonotonic modal logics (Gottlob, 1992; Marek
& Truszczynski, 1993; Eiter & Gottlob, 1992; Niemela, 1992; Donini et al., 1997b), the
technique we employ is based on the definition of a correspondence between the preferred
models of a theory and the partitions of the set of modal subformulas of the theory. In
fact, such partitions can be used in order to provide a finite characterization of a universal
Kripke structure: specifically, a partition satisfying certain properties identifies a particular
universal Kripke structure M , by uniquely determining a propositional theory such that M
is the set of all interpretations satisfying such a theory.
We extend such known techniques in order to deal with the preference semantics of
MBNF. In particular, we characterize the properties that a partition of modal subformulas
of a formula  2 LM must satisfy in order to identify an MBNF model for . In this way,
we provide a method that does not rely on a modal logic theorem prover, but reduces the
problem of reasoning in a bimodal logic to a number of reasoning problems in propositional
logic.
First, we introduce some preliminary definitions. We call a formula of the form B' or
not ', with ' 2 LM , a modal atom.

Definition 4.1 Let  2 LM . We call the set of modal atoms occurring in  the modal
atoms of  (and denote such a set as MA()).

Definition 4.2 Let  2 LM and let (P; N ) be a partition of a set of modal atoms. We
denote as (P; N ) the formula obtained from  by substituting each strict occurrence in 
of a formula in P with true, and each strict occurrence in  of a formula in N with false.

Observe that only the occurrences in  of modal subformulas which are not within the
scope of another modality are replaced; notice also that, if P [ N contains MA(), then
(P; N ) is a propositional formula. In this case, the pair (P; N ) identifies a guess on the
modal subformulas from , i.e. P contains the modal subformulas of  assumed to hold,
while N contains the modal subformulas of  assumed not to hold.

Definition 4.3 Let  2 LM and let (P; N ) be a partition of MA(). We denote as ob (P; N )
the propositional formula

^
'(P; N )
B'2P
Roughly speaking, the propositional formula ob (P; N ) represents the \objective knowledge" implied by the guess (P; N ) on the formulas of the form B' belonging to P . From the
ob (P; N ) =

284

fiReasoning about minimal belief and negation as failure

semantic viewpoint, in each structure (I; M; M 0 ) satisfying the guess on the modal atoms
given by (P; N ), the propositional formula ob (P; N ) constrains the interpretations of M ,
since in each such structure the propositional formula ob (P; N ) must be satisfied by each
interpretation J 2 M , i.e. J j= ob (P; N ).

Example 4.4 Let

 = (Ba _ not (b ^ c)) ^ d ^ :B (:f _ g)
Then, MA() = fBa; not (b ^ c); B (:f _ g)g. Now suppose that
P = fBa; not (b ^ c)g
N = fB (:f _ g)g
Then, (P; N ) = (true _ true) ^ d ^ :false (which is equivalent to d), and ob (P; N ) = a.

Definition 4.5 We say that a pair of sets of interpretations (M; M 0 ) induces the partition
(P; N ) of MA() if, for each modal atom  2 MA(),  2 P iff (M; M 0 ) j=  .
Lemma 4.6 Let ' 2 LM , let I be an interpretation, let M; M 0 be sets of interpretations,
and let (P; N ) be the partition induced by (M; M 0 ) on a set of modal atoms S . Then,
(I; M; M 0 ) j= ' iff (I; M; M 0 ) j= '(P; N ).
Follows immediately from Definitions 4.2 and 4.5, and from the definition of
satisfiability in MBNF structures.
We now show that, if (I; M ) is an MBNF model for  which induces the partition (P; N )
of MA(), then the formula ob (P; N ) completely characterizes the set of interpretations
M.
Proof.

Theorem 4.7 Let  2 LM , let (I; M ) be an MBNF model for , and let (P; N ) be the
partition of MA() induced by (M; M ). Then, M = fJ : J j= ob (P; N )g.
Let M 0 = fJ : J j= ob (P; N )g. Since (M; M ) induces the partition (P; N ), by
Definition 4.5 it follows that each interpretation in M must satisfy ob (P; N ), hence M  M 0 .
Now suppose M  M 0 , and consider the structure (I; M 0 ; M ). We prove that each modal
atom  2 MA() belongs to P iff (I; M 0 ; M ) j=  . The proof is by induction on the depth
Proof.

of formulas in MA().
First, consider a modal atom not such that 2 L: from the definition of satisfiability
of a formula in an MBNF structure, it follows immediately that not 2 P iff (I; M 0 ; M ) j=
not . Then, consider a modal atom B such that 2 L: if B 2 P , then, by definition of
ob (P; N ), the propositional formula ob (P; N )  is valid, therefore (I; M 0 ; M ) j= B . If
B 2 N , then there exists an interpretation J in M such that J 6j= , and since M 0  M ,
it follows that (I; M 0 ; M ) 6j= B . Hence, each modal atom  2 MA() of depth 1 belongs
to P iff (I; M 0 ; M ) j=  .
Suppose now that  2 P iff (I; M 0 ; M ) j=  for each modal atom  in MA() of depth
less or equal to i. Consider a modal atom B of MA() of depth i + 1: by the induction
hypothesis, and by Lemma 4.6, (I; M 0 ; M ) j= B iff M 0 j= B ( (P; N )). Now, if B 2 P ,
285

fiRosati

then, by definition of ob (P; N ), the propositional formula ob (P; N )  (P; N ) is valid, and
since M 0 = fJ : J j= ob (P; N )g, it follows that M 0 j= B ( (P; N )), which in turn implies
(I; M 0 ; M ) j= B ; on the other hand, if B 2 N , then there exists an interpretation J in M
such that (J; M; M ) 6j= , hence, by the induction hypothesis and Lemma 4.6, J 6j= (P; N ).
Now, since M 0  M , it follows that M 0 6j= B ( (P; N )), hence (I; M 0 ; M ) 6j= B . In the
same way it is possible to show that a modal atom of the form not of depth i + 1 belongs
to P iff (I; M 0 ; M ) j= not .
We have thus proved that each modal atom  2 MA() belongs to P iff (I; M 0 ; M ) j=  :
this in turn implies that (I; M 0 ; M ) j=  iff I j= (P; N ), and since by hypothesis (I; M; M )
satisfies  and (P; N ) is the partition of MA() induced by (M; M ), by Lemma 4.6 it
follows that I j= (P; N ). Therefore, (I; M 0 ; M ) j= , which contradicts the hypothesis
that (I; M ) is an MBNF model for . Consequently, M 0 = M , which proves the thesis.
Informally, the above theorem states that each MBNF model for  can be associated with
a partition (P; N ) of the modal atoms of ; moreover, the propositional formula ob (P; N )
exactly characterizes the set of interpretations M of an MBNF model (I; M ), in the sense
that M is the set of all interpretations satisfying ob (P; N ). This provides a finite way to
describe all MBNF models for .
We now define the notion of a partition of a set of modal atoms induced by a pair of
propositional formulas.

Definition 4.8 Let  2 LM , '1 ; '2 2 L. We denote as Prt (; '1 ; '2 ) the partition of
MA() induced by (M1 ; M2 ), where M1 = fI : I j= '1 g, M2 = fI : I j= '2 g.
In order to simplify notation, we denote as Prt (; ') the partition Prt (; '; '). The
following theorem provides a constructive way to build the partition Prt (; '; ).

Theorem 4.9 Let  2 LM , '; 2 L. Let (P; N ) be the partition of MA() built as follows:
1. start from P = N = ;;
2. for each modal atom B in MA() such that  (P; N ) 2 L, if the propositional formula
'  (P; N ) is valid, then add B to P , otherwise add B to N ;
3. for each modal atom not  in MA() such that  (P; N ) 2 L, if the propositional
formula   (P; N ) is not valid, then add not  to P , otherwise add not  to N ;
4. iteratively apply the above rules until P [ N = MA().
Then, (P; N ) = Prt (; '; ).

The proof is by induction on the structure of the formulas in MA(). First,
from the fact that Prt (; '; ) is the partition induced by (M; M 0 ), with M = fI : I j=
'g, M 0 = fI : I j= g, and from the definition of satisfiability in MBNF structures, it
follows that, if  2 L, then (M; M 0 ) j= B if and only if '   is a valid propositional
formula, and (M; M 0 ) j= not  if and only if   is not a valid propositional formula.
Therefore, (P; N ) agrees with Prt (; '; ) on all modal atoms of modal depth 1. Suppose
now that (P; N ) and Prt (; '; ) agree on all modal atoms of modal depth less or equal
Proof.

286

fiReasoning about minimal belief and negation as failure

to i. Consider a modal atom B of MA() of modal depth i + 1. From Lemma 4.6 and
from the definition of satisfiability in MBNF structures, it follows that (M; M 0 ) j= B if
and only if '   (Prt (; '; )) is a valid propositional formula, and since by Definition 4.2
the value of the formula  (Prt (; '; )) only depends on the guess of the modal atoms of
modal depth less or equal to i in Prt (; '; ), by the induction hypothesis it follows that
(Prt (; '; )) = (P; N ), hence B belongs to P if and only if (M; M 0 ) j= B. Analogously,
it can be proven that any modal atom of depth i + 1 of the form not  belongs to P if and
only if (M; M 0 ) j= not  . Therefore, (P; N ) and Prt (; '; ) agree on all modal atoms of
modal depth i + 1.
The algorithms we present in the following for reasoning in MBNF use the above shown
properties of partitions of modal subformulas of a formula , together with additional
conditions on such partitions (that vary according to the different classes of theories accepted
as inputs), in order to identify all the MBNF models for .
As for the entailment problem  j=MBNF ', we point out that the occurrences of not in
' are equivalent to occurrences of :B , since in each MBNF model for  both modalities in
' are evaluated on the same set of interpretations. Therefore, as in the original formulation
of MBNF (Lifschitz, 1994), we restrict query answering in MBNF to positive formulas.
Let ' 2 LB , 2 L, and M = fJ : J j= g. We denote as '( ) the propositional
formula obtained from ' by substituting each strict occurrence of a modal atom B of
' with true if M j= B, and with false otherwise. It can be immediately verified that
'( ) = '(Prt ('; )).

Theorem 4.10 Let ; ' 2 LM . Let (I; M ) be an MBNF model for  and let (P; N ) be
the partition of MA() induced by (M; M ). Then, ' is satisfied by (I; M; M ) iff I j=

'(ob (P; N )).

The proof follows immediately from the fact that, by Theorem 4.9, '(ob (P; N )) =
'(Prt ('; ob (P; N ))), and from Lemma 4.6.
We now show that the entailment problem in MBNF is related to the membership
problem for stable sets (Gottlob, 1995), which in turn is related to the notion of (objective)
kernel that has been used to characterize stable expansions of autoepistemic theories (Marek
& Truszczynski, 1993).
Proof.

Definition 4.11 Let 2 L. We denote as ST ( ) the (unique) stable set T  LB such
that

T \ L = f' 2 Lj  ' is validg

Theorem 4.12 Let  2 LM , ' 2 LSB . Then,  6j=MBNF ' iff there exists an MBNF model
(I; M ) for  such that ' 62 ST (ob (P; N )), where (P; N ) is the partition of MA() induced

by (M; M ).

Let M = fI : I j= ob (P; N )g: from the above definition and Definition 3.2, it follows
immediately that ST (ob (P; N )) = Th(M ). Therefore, if ' 2 LSB then (I; M; M ) j= ' iff
' 2 ST (ob (P; N )).
Proof.

287

fiRosati

Algorithm MBNF-Not-Entails(; ')
Input: formula  2 LM , formula ' 2 LB ;
Output: true if  6j=MBNF ', false otherwise.
begin
if there exists partition (P; N ) of MA()
such that
(a) (P; N ) = Prt (; ob (P; N )) and
(b) (P; N ) ^ :'(ob (P; N )) is satisfiable and
(c) for each partition (P 0 ; N 0 ) 6= (P; N ) of MA(),
(c1) (P 0 ; N 0 ) is not satisfiable or
(c2) (P 0 ; N 0 ) =
6 Prt (; ob (P 0; N 0 ); ob (P; N )) or
(c3) ob (P; N ) ^ :ob (P 0 ; N 0 ) is satisfiable
then return true
else return false
end
Figure 1: Algorithm MBNF-Not-Entails.

4.2 Reasoning in Propositional MBNF

We now define a deductive method for reasoning in general propositional MBNF theories.
Specifically, we present the algorithm MBNF-Not-Entails, reported in Figure 1, for computing entailment in MBNF.
The algorithm exploits the finite characterization of MBNF models given by Theorem 4.7
and an analogous finite characterization, in terms of partitions of MA(), of all the models
relevant for establishing whether a partition (P; N ) of MA() identifies an MBNF model.
The algorithm checks whether there exists a partition (P; N ) of MA() satisfying the
three conditions (a), (b), (c). Intuitively, the partition cannot be self-contradictory (condition (a)): in particular, the condition (P; N ) = Prt (; ob (P; N )) establishes that the
objective knowledge implied by the partition (P; N ) (that is, the formula ob (P; N )) identifies a set of interpretations M = fI : I j= ob (P; N )g such that (M; M ) induces the same
partition (P; N ) on MA(). Moreover, the partition must be consistent with  and :'
(condition (b)): such a condition implies that there exists an interpretation I such that
both  is satisfied in (I; M; M ) and ' is not satisfied in the structure (I; M; M ). Finally,
condition (c) corresponds to check whether such a structure (I; M; M ) identifies an MBNF
model for  according to Definition 2.1, i.e. whether there is no pair (J; M 0 ) such that
M 0  M and (J; M 0 ; M ) satisfies . Again, the search of such a structure is performed by
examining whether there exists a partition of MA(), different from (P; N ), which does not
satisfy any of the conditions (c1), (c2), (c3).
We illustrate the algorithm through the following simple example.

Example 4.13 Suppose
 = B (a _ Bb) ^ (not (c _ :d) _ B :not b) ^ c
288

fiReasoning about minimal belief and negation as failure

' = :Bb _ (:b ^ B (a ^ b))
Then, MA() = fB (a _ Bb); Bb; not (c _ :d); B :not b; not bg. Now suppose that (P; N ) =
(P1 ; N1 ), where

P1 = fB (a _ Bb); not (c _ :d); not bg
N1 = fBb; B :not bg
Then, (P; N ) = true ^ (true _ false) ^ c (which is equivalent to c), and ob (P; N ) = a _ false
(which is equivalent to a). Now, let M = fI : I j= ag: it is easy to see that (M; M )
satisfies the modal atoms in P , while it does not satisfy the modal atoms in N , hence
(P; N ) = Prt (; ob (P; N )), thus satisfying condition (a) of the algorithm. Then, since
a  a ^ b is not a valid propositional formula, M 6j= B (a ^ b), hence :'(ob (P; N )) =
:(true _ (:b ^ false)), which is equivalent to false. Therefore, (P; N ) ^ :'(ob (P; N )) is not
satisfiable, thus condition (b) does not hold.
Suppose now that (P; N ) = (P2 ; N2 ), where

P2 = fB (a _ Bb); not (c _ :d); Bb; B :not bg
N2 = fnot bg
Then, (P; N ) = true ^ (true _ true) ^ c (which is equivalent to c), and ob (P; N ) = (a _ true) ^
b^true, which is equivalent to b. Again, it is easy to see that (P; N ) = Prt (; ob (P; N )), thus
satisfying condition (a) of the algorithm. Then, since b  a ^ b is not a valid propositional
formula, :'(ob (P; N )) = :(false _ (:b ^ false)), which is equivalent to true. Hence, (P; N ) ^
:'(ob (P; N )) is equivalent to c, which implies that condition (b) holds. Finally, it is easy
to verify that either condition (c1) or condition (c2) holds for each partition of MA()
different from (P2 ; N2 ), with the exception of (P1 ; N1 ). So let (P 0 ; N 0 ) = (P1 ; N1 ): as shown
before, ob (P 0 ; N 0 ) is equivalent to a, hence ob (P; N ) ^ :ob (P 0 ; N 0 ) is equivalent to b ^ :a,
therefore condition (c3) holds for (P 0 ; N 0 ) = (P1 ; N1 ), which implies that condition (c)
holds for (P; N ) = (P2 ; N2 ). Consequently, MBNF-Not-Entails(; ') returns true. In fact,
the partition (P2 ; N2 ) identifies the set of MBNF models for  (I; M ) such that I is an
interpretation satisfying c and M = fI : I j= bg. Each such model does not satisfy the
query ': indeed, it can immediately be verified that, for each interpretation I , (I; M; M ) 6j=
:Bb _ (:b ^ B (a ^ b)), since M 6j= B (a ^ b) and M j= Bb.
To prove correctness of the algorithm MBNF-Not-Entails we need the following preliminary lemma.

Lemma 4.14 Let  2 LM , and let (P; N ) be the partition of MA() induced by (M 0; M ).
Let M 00 = fI : I j= ob (P; N )g. Then, (P; N ) is the partition induced by (M 00 ; M ).
The proof is by induction on the depth of the modal atoms of MA(). Let
not 2 MA() such that 2 L: then, (M 0 ; M ) j= not iff there exists an interpretation
I 2 M such that I 6j= , therefore (M 0 ; M ) j= not iff (M 00 ; M ) j= not . Now let B 2
MA() such that 2 L: by Definition 4.3, (M 0 ; M ) j= B iff the propositional formula
Proof.

289

fiRosati

ob (P; N )  is valid, and since M 00 = fI : I j= ob (P; N )g, it follows that (M 0 ; M ) j= B
iff (M 00 ; M ) j= B .
Now suppose that, for each modal atom  of depth i, (M 0 ; M ) j=  iff (M 00 ; M ) j=  ,
and let (P 0 ; N 0 ) denote the partition of the modal atoms in MA() of depth less or equal
to i induced by (M 0 ; M ). First, consider a modal atom not of depth i + 1. Then,
by Lemma 4.6, (M 0 ; M ) j= not iff (M 0 ; M ) j= not ( (P 0 ; N 0 )) and, by the inductive
hypothesis and Lemma 4.6, (M 00 ; M ) j= not iff (M 00 ; M ) j= not ( (P 0 ; N 0 )). Then, since
has depth i, (P 0 ; N 0 ) is a propositional formula, hence (M 0 ; M ) j= not ( (P 0 ; N 0 )) iff
there exists an interpretation I 2 M such that I 6j= (P 0 ; N 0 ), which immediately implies
that (M 0 ; M ) j= not iff (M 00 ; M ) j= not . Now consider a modal atom B of depth
i + 1. Then, by Lemma 4.6, (M 0 ; M ) j= B iff (M 0; M ) j= B ( (P 0 ; N 0 )) and, by the
inductive hypothesis and Lemma 4.6, (M 00 ; M ) j= B iff (M 00 ; M ) j= B ( (P 0 ; N 0 )). By
Definition 4.3, (M 0 ; M ) j= B iff the propositional formula ob (P; N )  (P 0 ; N 0 ) is valid,
and since M 00 = fI : I j= ob (P; N )g, it follows that (M 0 ; M ) j= B iff (M 00 ; M ) j= B ,
which proves the thesis.
We are now ready to prove correctness of the algorithm MBNF-Not-Entails.

Theorem 4.15 Let  2 LM , ' 2 LB . Then, MBNF-Not-Entails(; ') returns true iff
 6j=MBNF '.
If part. Suppose  6j=MBNF '. Then, there exists a pair (I; M ) such that (I; M ) is
an MBNF model for  and (I; M; M ) 6j= '. Let (P; N ) be the partition of MA() induced
by (M; M ). By Theorem 4.7, M = fI : I j= ob (P; N )g. Therefore, by Definition 4.8,
(P; N ) = Prt (; ob (P; N )). Then, since (I; M; M ) 6j= ', by Theorem 4.10 it follows that
I 6j= '(ob (P; N )), and since (I; M; M ) j= , by Lemma 4.6 I j= (P; N ), therefore I j=
(P; N ) ^:'(ob (P; N )). Now suppose there exists a partition (P 0 ; N 0) of MA() such that
(P 0 ; N 0 ) =
6 (P; N ) and none of conditions (c1), (c2), and (c3) holds. Then, since (P 0 ; N 0 )
is satisfiable, there exists an interpretation J such that J j= (P 0 ; N 0 ), and since (P 0 ; N 0 ) =
Prt (; ob (P 0 ; N 0 ); ob (P; N )), from Lemma 4.6 it follows that there exists an interpretation
J such that (J; M 0 ; M ) j= , where M 0 = fI : I j= ob (P 0 ; N 0)g. Then, since condition (c3)
does not hold, the propositional formula ob (P; N )  ob (P 0 ; N 0 ) is valid, which implies that
M 0  M . Now, if M 0 = M , then (P 0 ; N 0 ) would be the partition induced by (M; M ), thus
contradicting the hypothesis (P 0 ; N 0 ) =
6 (P; N ). Hence, M 0  M , and since (J; M 0 ; M ) j= ,
Proof.

it follows that (I; M ) is not an MBNF model for . Contradiction. Consequently, condition
(c) in the algorithm holds, therefore MBNF-Not-Entails(; ') returns true.
Only-if part. Suppose MBNF-Not-Entails(; ') returns true. Then, there exists a partition (P; N ) of MA() such that conditions (a), (b), and (c) hold. Let M = fI : I j=
ob (P; N )g. Since (P; N ) = Prt (; ob (P; N )), by Definition 4.8 (P; N ) is the partition induced by (M; M ). And since (P; N )^:'(ob (P; N )) is satisfiable, it follows that there exists
an interpretation I such that I j= (P; N ) and I 6j= '(ob (P; N )), hence, by Lemma 4.6,
(I; M; M ) j=  and (I; M; M ) 6j= '. Now suppose (I; M ) is not an MBNF model for .
Then, there exists a set M 0 and an interpretation J such that M 0  M and (J; M 0 ; M ) j= .
Let (P 0 ; N 0 ) be the partition of MA() induced by (M 0 ; M ). Since M = fI : I j= ob (P; N )g,
it follows that M 0 contains
V at least one interpretation J which does not satisfy ob (P; N ),
and since ob (P; N ) = B 2P (P; N ), J does not satisfy at least one formula of the form
290

fiReasoning about minimal belief and negation as failure

(P; N ) such that B 2 P . Therefore, P 0 6= P , which implies that (P 0 ; N 0 ) 6= (P; N ).
Then, since (J; M 0 ; M ) j= , by Lemma 4.6 J j= (P 0 ; N 0 ), hence (P 0 ; N 0 ) is satisfiable.
Now let M 00 = fI : I j= ob (P 0 ; N 0 )g. By Lemma 4.14, it follows that (P 0 ; N 0 ) is the partition
induced by (M 00 ; M ), therefore, by Definition 4.8, (P 0 ; N 0 ) = Prt (; ob (P 0 ; N 0 ); ob (P; N )).
Moreover, since M 0  M , it follows that the propositional formula ob (P; N )  ob (P 0 ; N 0 )
is valid, hence the formula ob (P; N ) ^ :ob (P 0 ; N 0 ) is unsatisfiable. Consequently, (P 0 ; N 0 )
does not satisfy condition (c) in the algorithm, thus contradicting the hypothesis. Therefore, (I; M ) is an MBNF model for , and since (I; M; M ) 6j= ', it follows that  6j=MBNF ',
thus proving the thesis.
We point out the fact that the algorithm MBNF-Not-Entails does not rely on a theorem
prover for a modal logic: thus, \modal reasoning" is not actually needed for reasoning in
MBNF. This is an interesting peculiarity that MBNF shares with other nonmonotonic
modal formalisms, like autoepistemic logic (Moore, 1985) or the autoepistemic logic of
knowledge (Schwarz, 1991).

4.3 Reasoning in Flat MBNF

We now study reasoning in at MBNF theories. The main reason for taking into account the
at fragment of MBNF is the fact that reasoning in many of the best known nonmonotonic
formalisms like default logic, circumscription, and logic programming, can be reduced to
reasoning in at MBNF theories (Lifschitz, 1994).
It is known that, if  2 L1M and ' 2 LSB , then it is possible to reduce the entailment
 j=MBNF ' to reasoning in logic S4FMDD , by translating MBNF formulas into unimodal
formulas of S4FMDD (Schwarz & Truszczynski, 1994). Thus, the procedure for deciding
entailment in the logic S4FMDD presented by Marek and Truszczynski (1993) can be employed for computing the entailment  j=MBNF '. In the following we study a more general
problem, that is entailment  j=MBNF ' in the case  2 L1M and ' 2 LB , and present a
specialized algorithm for this problem, which is simpler than the more general reasoning
method for S4FMDD .
In Figure 2 we report the algorithm Flat-Not-Entails for computing such an entailment.
In the algorithm, Pn denotes the subset of modal atoms from P prefixed by the modality
not , i.e. Pn = fnot : not 2 P g.
Informally, correctness of the algorithm Flat-Not-Entails is established by the fact that,
if  2 L1M , then (a), (b), and (c) are necessary and sucient conditions on a partition (P; N )
in order to establish whether it is induced by a pair (M; M ) such that there exists an MBNF
model for  of the form (I; M ). In particular, condition (c) states that B (ob (P; N )) must
be a consequence of (Pn ; N ) in modal logic S5,1 since it can be shown that if (Pn ; N ) 
B (ob (P; N )) is not valid in S5, then the guess on the modal atoms of the form B' in P is
not minimal. We illustrate this fact through the following example.

Example 4.16 Let
 = (Ba ^ not (c _ d)) _ (B (a ^ b) ^ :Bc) _ Bc
1. We denote as B the modal operator used in S5.

291

fiRosati

Algorithm Flat-Not-Entails(; ')
Input: formula  2 L1M , formula ' 2 LB ;
Output: true if  6j=MBNF ', false otherwise.
begin
if there exists partition (P; N ) of MA()
such that
(a) (P; N ) = Prt (; ob (P; N )) and
(b) (P; N ) ^ :'(ob (P; N )) is satisfiable and
(c) (Pn ; N )  B (ob (P; N )) is valid in S5
then return true
else return false
end
Figure 2: Algorithm Flat-Not-Entails.
and suppose

P = fBa; B (a ^ b); not (c _ d)g
N = fBcg
Then,

(Pn ; N ) = (Ba ^ true) _ (B (a ^ b) ^ :false) _ false;
which is propositionally equivalent to Ba _ B (a ^ b), and ob (P; N ) = a ^ (a ^ b), which is
equivalent to a^b. Now, Ba_B (a^b)  B (a^b) is not valid in S5, which is proved by the fact
that the set of interpretations M 0 = fI : I j= ag is such that M 0 j= (Ba_B (a^b))^:B (a^b).
Indeed, the set of interpretations M 0 can be immediately used in order to prove that (P; N )
does not identify any MBNF model for . In fact, let M = fJ : J j= a ^ bg: it is immediate
to see that, for each interpretation I , (I; M 0 ; M ) j= , and since M 0  M , (I; M ) is not an
MBNF model for .
Finally, condition (b) corresponds to check whether there exists an interpretation I
satisfying :'(ob (P; N )): in fact, if such an interpretation exists, then (I; M ) is an MBNF
model for  which does not satisfy '.
Therefore, the algorithms MBNF-Not-Entails and Flat-Not-Entails only differ in the
way in which it is verified whether the MBNF structure associated with a partition (P; N )
satisfies the preference semantics provided by Definition 2.1, which is implemented through
condition (c) in both algorithms. In the algorithm MBNF-Not-Entails, a partition is checked
against all other partitions of MA(), while in the algorithm Flat-Not-Entails it is sucient
to verify that the partition (P; N ) satisfies a \local" property. As shown in the next section,
such a difference reects the different computational properties of the entailment problem
in the two cases.
In order to establish correctness of the algorithm, we need a preliminary lemma.
292

fiReasoning about minimal belief and negation as failure

Lemma 4.17 Let  2 L1M and let (P; N ) be the partition induced by a structure (M; M ).
Then, (I; M ) is an MBNF model for  iff for each M 0  M the positive formula (Pn ; N )
is not satisfied by M 0 .
Suppose (I; M ) is an MBNF model for , and let (P; N ) be the partition induced
by (M; M ). Let M 0 be any set of interpretations such that M 0  M . Then, (M 0 ; M ) 6j= .
Since  2 L1M and M 0  M , this implies that for each modal atom  in N , (M 0 ; M ) 6j=  .
Moreover, for each modal atom not 2 P , (M 0 ; M ) j= not . Therefore, by Lemma 4.6,
(M 0 ; M ) 6j= (Pn ; N ). Now, since  2 L1M , (Pn ; N ) is a at positive formula, hence its
satisfiability only depends on the structure M 0 , therefore M 0 6j= (Pn ; N ).
Conversely, suppose (I; M ) is not an MBNF model for , and let (P; N ) be the partition
induced by (M; M ). Then, there exists a set of interpretations M 0 such that M 0  M and
(M 0 ; M ) j= . As shown before, this implies that the positive formula (Pn ; N ) is satisfied
by M 0 .
As observed in Section 2, the class of universal Kripke structures characterizes modal
logic S5. This immediately implies the following property.
Proof.

Lemma 4.18 A formula ' 2 LSB is valid in S5 iff, for each set of interpretations M , the
formula :' is not satisfied by M .
Based on the above property, we are now able to prove correctness of the algorithm
Flat-Not-Entails.

Theorem 4.19 Let  2 L1M and ' 2 LB . Then, Flat-Not-Entails(; ') returns true iff
 6j=MBNF '.
If-part. If  6j=MBNF ', then there exists an MBNF model (I; M ) for  such
that (I; M; M ) 6j= '. Let (P; N ) be the partition of MA() induced by (M; M ). From
Theorem 4.7 it follows that M = fJ : J j= ob (P; N )g. Therefore, by Definition 4.8,
(P; N ) = Prt (; ob (P; N )), hence condition (a) in the algorithm holds.
Now let 0 = (Pn ; N ), and suppose the formula 0  B (ob (P; N )) is not valid in S5.
Then, since the formula 0  B (ob (P; N )) belongs to LSB , by Lemma 4.18 it follows that
there exists a set of interpretations M 0 satisfying 0 ^ :B (ob (P; N )). Let (P 0 ; N 0 ) be the
partition of VMA(0 ) induced by (M 0 ; M 0 ), and let M 00 = fI : I j= ob (P 0 ; N 0 )g. Since
ob (P; N ) = B'2MA( ) ', by Definition 4.3 it follows that ob (P; N )  ob (P 0 ; N 0 ) is a valid
propositional formula, hence M 00  M . Now, since by hypothesis M 0 j= :B (ob (P; N )), it
follows that M 00  M . Moreover, since 0 2 LB , by Lemma 4.14 it follows that (P 0 ; N 0 ) is
the partition induced by (M 00 ; M 00 ), and since M 0 j= 0 and 0 is at, 0 (P 0 ; N 0 ) is equivalent
to true, therefore M 00 j= 0 (P 0 ; N 0 ) and, by Lemma 4.6, M 00 j= 0 . On the other hand, since
M 00  M , by Lemma 4.17 it follows that M 00 6j= 0. Contradiction. Hence, 0  B (ob (P; N ))
Proof.

0

is valid in S5, consequently condition (c) of the algorithm holds.
Finally, since (I; M; M ) 6j= ' and M = fJ : J j= ob (P; N )g, by Theorem 4.10 it follows
that I 6j= '(ob (P; N )). Moreover, since (I; M; M ) j= , from Lemma 4.6 it follows that
I j= (P; N ), consequently I j= (P; N ) ^ :'(ob (P; N )), hence the propositional formula
(P; N )^:'(ob (P; N )) is satisfiable. Therefore, conditions (a), (b), and (c) in the algorithm
hold, which implies that Flat-Not-Entails(; ') returns true.
293

fiRosati

Only-if-part. If Flat-Not-Entails(; ') returns true, then there exists a partition (P; N )
of MA() for which conditions (a), (b), and (c) of the algorithm hold. Let M = fJ : J j=
ob (P; N )g. By Definition 4.8, (P; N ) is the partition of MA() induced by (M; M ). Now,
since (P; N ) ^ :'(ob (P; N )) is satisfiable, there exists an interpretation I such that I j=
(P; N ) and I j= :'(ob (P; N )), hence by Lemma 4.6 (I; M; M ) j= , and by Theorem 4.10
(I; M; M ) 6j= ', therefore we only have to show that (I; M ) is an MBNF model for . So,
let us suppose (I; M ) is not an MBNF model for . Then, by Lemma 4.17 there exists
M 0  M such that (Pn ; N ) is satisfied in M 0 . Now, condition (c) in the algorithm implies
that B (ob (P; N )) is a consequence of (Pn ; N ) in S5, therefore ob (P; N ) is satisfied by each
interpretation in M 0 , that is, M 0  fJ : J j= ob (P; N )g, which contradicts the hypothesis
M 0  M = fJ : J j= ob (P; N )g. Consequently, (I; M ) is an MBNF model for .

We remark the fact that the algorithm Flat-Not-Entails can be seen as a generalization
of known methods for query answering in Reiter's default logic, Moore's autoepistemic logic,
and (disjunctive) logic programming under the stable model (and answer set) semantics. In
particular, condition (c) in the algorithm can be seen as a generalization of the minimality
check used in (disjunctive) logic programming for verifying stability of a model of a logic
program (Gelfond & Lifschitz, 1990, 1991).

5. Complexity Results
In this section we provide a computational characterization of reasoning in MBNF.
We first briey recall the complexity classes in the polynomial hierarchy, and refer
to (Johnson, 1990; Papadimitriou, 1994) for further details about the complexity classes
mentioned in the paper. PA (NPA ) is the class of problems that are solved in polynomial
time by deterministic (nondeterministic) Turing machines using an oracle for A (i.e. that
solves in constant time any problem in A). The classes pk , pk and pk pof the polynomial
hierarchy are defined by p0 = p0 = p0 = P, and for k  0, pk+1 = NPk , pk+1 = copk+1
p
and pk+1 = Pk . In particular, the complexity class p2 is the class of problems that are
solved in polynomial time by a nondeterministic Turing machine that uses an NP-oracle,
and p2 is the class of problems that are complement of a problem in p2 , while p3 is the
class of problems that are solved in polynomial time by a nondeterministic Turing machine
that uses an p2 -oracle, and p3 is the class of problems that are complement of a problem
in p3 . It is generally assumed that the polynomial hierarchy does not collapse: hence,
a problem in the class p2 or p2 is considered computationally easier than a p3 -hard or
p3 -hard problem.
As for the complexity of entailment in MBNF, we start by establishing a lower bound
for reasoning in propositional MBNF theories. To this end, we exploit the correspondence
between MBNF and the logic of minimal knowledge S5G (Halpern & Moses, 1985). Indeed,
as stated by Proposition 2.5, there is a one-to-one correspondence between MBNF models
and S5G models of positive subjective theories.

Lemma
5.1 Let  2 LSM and let ' 2 LB . Then, the problem of deciding whether  j=MBNF
p
' is 3-hard.

294

fiReasoning about minimal belief and negation as failure

As shown by (Donini et al., 1997b), entailment in S5G is p3 -complete. Therefore,
by Proposition 2.5, for subjective (and hence for general) MBNF theories, entailment is
p3 -hard.
Then, we show that the entailment problem in propositional MBNF is complete with
respect to the class p3 .
Proof.

Theorem 5.2 Let
 2 LM and let ' 2 LB . Then, the problem of deciding whether
 j=MBNF ' is p3 -complete.

Hardness with respect to p3 follows from Lemma 5.1. As for membership in p3 ,
we analyze the complexity of the algorithm MBNF-Not-Entails reported in Figure 1. In
particular, observe that:
 given (P; N ), the formula ob (P; N ) can be computed in polynomial time with respect
to the size of P . Moreover, by Lemma 4.9 it follows that, since MA() has size linear
with respect to the size of , construction of the partition Prt (; ob (P; N )) can be
performed through a linear number (with respect to the size of ) of calls to an NPoracle for propositional satisfiability. Therefore, condition (a) can be checked through
a linear number (in the size of the input) of calls to an NP-oracle;
 since '(ob (P; N )) = '(Prt ('; ob (P; N ))), the formula :'(ob (P; N )) can be computed
in time linear with respect to the size of ' ^ ob (P; N ) using an NP-oracle. And since,
given  and (P; N ), (P; N ) can be computed in polynomial time with respect to
the size of the input, it follows that condition (b) can be computed through a linear
number (in the size of the input) of calls to an NP-oracle;
 given a partition (P 0 ; N 0), each of the conditions (c1), (c2) and (c3) (analogous to
conditions (a) and (b)) can be checked in polynomial time, with respect to the size of
, using an NP-oracle. Therefore, since the guess of the partition (P 0 ; N 0 ) ofpMA()
requires a nondeterministic choice, falsity of condition (c) can be decided in 2 , which
implies that verifying whether condition (c) holds can be decided in p2 .
Since the guess of the partition (P; N ) of MA() requires a nondeterministic choice, it
follows that the algorithm MBNF-Not-Entails, if considered as a nondeterministic procedure, decides  6j=MBNF ' in nondeterministic polynomial time (with respect to the size of
 ^ '), using a p2-oracle. Thus, we obtain an upper bound of p3 for the non-entailment
problem, which implies that entailment in MBNF is in p3 .
The previous analysis also allows for a computational characterization of the logic MKNF
(Lifschitz, 1991), which is a slight modification of MBNF. Indeed, it is known (Lifschitz,
1994) that, for each theory   LM , M is an MKNF model of  iff, for each interpretation
I , (I; M ) is an MBNF model of the subjective theory 0 = fB' : ' 2 g. Therefore, from
Proposition 2.5 and from p3 -hardness of entailment in S5G (Donini et al., 1997b), it follows
that entailment in MKNF is p3 -hard. Then, since  j=MKNF ' iff 0 j=MBNF B' (Lifschitz,
1994), it follows that entailment in MKNF can be polynomially reduced to entailment in
MBNF, hence such a problem belongs to p3 . Therefore, the following property holds.
Proof.

Theorem 5.3 Entailment in propositional MKNF is p3-complete.
295

fiRosati

Finally, the previous theorem provides a computational characterization of the logic of
grounded knowledge and justified assumptions GK (Lin & Shoham, 1992). In fact, the
logic GK can be considered as a syntactic variant of the propositional fragment of MKNF.
Therefore, skeptical entailment in GK is p3 -complete.

Remark. The computational properties of MBNF and its variants relate such formalisms

to ground nonmonotonic modal logics (Eiter & Gottlob, 1992; Donini et al., 1997b; Rosati,
1999). Notably, ground nonmonotonic modal logics share with MBNF the interpretation in
terms of minimal knowledge (or minimal belief) of the modality B ; specifically, as already
mentioned, the propositional fragment of MBNF can be considered as built upon S5G by
adding a second modality not . Therefore, it turns out that, in the propositional case, adding
a \negation by default" modality to the S5 logic of minimal knowledge does not increase
the computational complexity of reasoning, while adding a minimal knowledge modality to
AEL does increase the complexity of deduction. We can thus summarize as follows: minimal
knowledge is computationally harder than negation as failure.
We now study the complexity of entailment for at MBNF theories. First, it is known
that, in the case of at MBNF theories and subjective queries, entailment is p2 -complete:
membership in the class p2 is a consequence of the fact that at MKNF theories can
be polynomially embedded into McDermott and Doyle's nonmonotonic modal logic S4F
(Schwarz & Truszczynski, 1994, Proposition 3.2), whose entailment problem is p2 -complete
(Marek & Truszczynski, 1993), while p2 -hardness follows from the existence of a polynomialtime embedding of propositional default theories into at MBNF theories (Lifschitz, 1994).
Therefore, the following property holds.

Proposition 5.4p Let  2 L1M and let ' 2 LSB . Then, the problem of deciding whether
 j=MBNF ' is 2 -complete.
As for complexity of entailment of generic queries with respect to at MBNF theories,
we analyze the complexity of the algorithm Flat-Not-Entails reported in Figure 2. As shown
before, both condition (a) and condition (b) can be checked through a linear number (with
respect to the size of the input) of calls to an NP-oracle. Moreover, validity in modal logic
S5 is a coNP-complete problem (Halpern & Moses, 1992). Hence, each of the conditions in
the algorithm can be computed through a number of calls to an oracle for the propositional
validity problem which is polynomial in the size of the input, and since the guess of the
partition (P; N ) of MA() requires a nondeterministic choice, it follows that the algorithm
runs in p2 . Therefore, the following property holds.

Theorem 5.5 Let
 2 L1M and let ' 2 LB . Then, the problem of deciding whether
p
 j=MBNF ' is 2 -complete.
Membership of the problem to the class p2 is implied by the algorithm Flat-notentails, whereas p2 -hardness is implied by Proposition 5.4.
Hence, the algorithm Flat-Not-Entails is \optimal" in the sense that it matches the
lower bound for the entailment problem.

Proof.

296

fiReasoning about minimal belief and negation as failure

Finally, we remark that the subset of at MBNF theories in conjunctive normal form
can be seen as a further extension of the framework of generalized logic programming introduced by Inoue and Sakama (1994), which in turn is an extension of the disjunctive logic
programming framework under the stable model semantics (Gelfond & Lifschitz, 1991).
Roughly speaking, at MBNF theories in conjunctive normal form correspond to rules of
generalized logic programs in which propositional formulas (instead of literals) are allowed
as goals. The above computational characterization implies that such an extension of the
framework of logic programming under the stable model semantics does not affect the worstcase complexity of the entailment problem, which is p2 -complete just like entailment in logic
programs with disjunction under the stable model semantics (Eiter & Gottlob, 1995). Such
a result extends analogous properties (Marek, Truszczynski, & Rajasekar, 1995) to the case
of disjunctive logic programs.

6. Conclusions
In this paper we have investigated the problem of reasoning in the propositional fragment
of MBNF. The main results presented can be summarized as follows:

 the negation as failure modality not of MBNF exactly corresponds to negative introspection in AEL. This implies that the logic MBNF can be viewed as the conservative
extension of two different nonmonotonic modal logics: Halpern and Moses' logic of
minimal knowledge S5G and Moore's AEL;

 reasoning in the propositional fragment of MBNF lies at the third level of the polyno-

mial hierarchy, hence (unless the polynomial hierarchy does not collapse) reasoning in
MBNF is harder than reasoning in the best known propositional nonmonotonic logics,
like default logic, autoepistemic logic, and circumscription;

 we have defined methods for reasoning in MBNF, which subsume and generalize wellknown nonmonotonic reasoning algorithms used in logic programming (Gelfond &
Lifschitz, 1991), default logic (Gottlob, 1992), and autoepistemic logic (Marek &
Truszczynski, 1993);

 we have studied the at fragment of MBNF and its relationship with the logic programming paradigm.

As for the computational aspects of reasoning in MBNF, the results presented in Section 5 prove that one source of complexity is due to the presence of nested occurrences of
modalities in the theory, since reasoning in at MBNF is computationally easier than in
the general case.
It can be proven that another source of complexity lies in the underlying objective
language. In fact, if we consider L0 to be a tractable fragment of propositional logic, then
the complexity of reasoning in the modal language L0M built upon L0 is lower than in the
general case. In particular, it is easy to see that, under the assumption that entailment
in L0 can be computed in polynomial time, the algorithm MBNF-Not-Entails provides an
upper bound of p2 for MBNF-entailment in the fragment L0M .
297

fiRosati

One possible development of the present work is towards the analysis of reasoning about
minimal belief and negation as failure in a first-order setting: in particular, it should be
interesting to see whether it is possible to extend the techniques developed for the propositional case to a more expressive language. A first attempt in this direction is reported by
Donini et al. (1997a).

Acknowledgments

This research has been partially supported by Consiglio Nazionale delle Ricerche, grant
203.15.10.

References

Beringer, A., & Schaub, T. (1993). Minimal belief and negation as failure: a feasible
approach. In Proc. of the 11th Nat. Conf. on Artificial Intelligence (AAAI'93), pp.
400{405.
Bochman, A. (1995). On bimodal nonmonotonic modal logics and their unimodal and
nonmodal equivalents. In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence
(IJCAI'95), pp. 1518{1524.
Chen, J. (1994). The logic of only knowing as a unified framework for non-monotonic
reasoning. Fundamenta Informaticae, 21, 205{220.
Donini, F. M., Nardi, D., & Rosati, R. (1997a). Autoepistemic description logics. In Proc.
of the 15th Int. Joint Conf. on Artificial Intelligence (IJCAI'97), pp. 136{141.
Donini, F. M., Nardi, D., & Rosati, R. (1997b). Ground nonmonotonic modal logics. J. of
Logic and Computation, 7 (4), 523{548.
Eiter, T., & Gottlob, G. (1992). Reasoning with parsimonious and moderately grounded
expansions. Fundamenta Informaticae, 17 (1,2), 31{54.
Eiter, T., & Gottlob, G. (1993). Propositional circumscription and extended closed world
reasoning are p2 -complete. Theoretical Computer Science, 114, 231{245.
Eiter, T., & Gottlob, G. (1995). On the computational cost of disjunctive logic programming: propositional case. Annals of Mathematics and Artificial Intelligence, 15 (3,4).
Gelfond, M., & Lifschitz, V. (1988). The stable model semantics for logic programming.
In Proceedings of the Fifth Logic Programming Symposium, pp. 1070{1080. The MIT
Press.
Gelfond, M., & Lifschitz, V. (1990). Logic programs with classical negation. In Proceedings
of the Seventh International Conference on Logic Programming, pp. 579{597. The
MIT Press.
Gelfond, M., & Lifschitz, V. (1991). Classical negation in logic programs and disjunctive
databases. New Generation Computing, 9, 365{385.
298

fiReasoning about minimal belief and negation as failure

Gottlob, G. (1992). Complexity results for nonmonotonic logics. J. of Logic and Computation, 2, 397{425.
Gottlob, G. (1995). NP trees and Carnap's modal logic. J. of the ACM, 42 (2), 421{457.
Halpern, J. Y., & Moses, Y. (1985). Towards a theory of knowledge and ignorance: Preliminary report. In Apt, K. (Ed.), Logic and models of concurrent systems. SpringerVerlag.
Halpern, J. Y., & Moses, Y. (1992). A guide to completeness and complexity for modal
logics of knowledge and belief. Artificial Intelligence, 54, 319{379.
Inoue, K., & Sakama, C. (1994). On positive occurrences of negation as failure. In Proc.
of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning
(KR'94), pp. 293{304. Morgan Kaufmann, Los Altos.
Janhunen, T. (1998). On the intertranslatability of autoepistemic, default and priority
logics. In Proc. of the 6th European Workshop on Logics in Artificial Intelligence
(JELIA'98), pp. 216{232.
Johnson, D. S. (1990). A catalog of complexity classes. In van Leuven, J. (Ed.), Handbook
of Theoretical Computer Science, Vol. A, chap. 2. Elsevier Science Publishers (NorthHolland), Amsterdam.
Kaminski, M. (1991). Embedding a default system into nonmonotonic logics. Fundamenta
Informaticae, 14, 345{354.
Levesque, H. J. (1990). All I know: a study in autoepistemic logic. Artificial Intelligence,
42, 263{310.
Lifschitz, V., & Woo, T. (1992). Answer sets in general nonmonotonic reasoning (preliminary report). In Proc. of the 3rd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR'92), pp. 603{614. Morgan Kaufmann, Los Altos.
Lifschitz, V. (1991). Nonmonotonic databases and epistemic queries. In Proc. of the 12th
Int. Joint Conf. on Artificial Intelligence (IJCAI'91), pp. 381{386.
Lifschitz, V. (1994). Minimal belief and negation as failure. Artificial Intelligence, 70,
53{72.
Lin, F., & Shoham, Y. (1992). Epistemic semantics for fixed-point non-monotonic logics.
Artificial Intelligence, 57, 271{289.
Marek, W., & Truszczynski, M. (1993). Nonmonotonic Logics { Context-Dependent Reasoning. Springer-Verlag.
Marek, W., Truszczynski, M., & Rajasekar, A. (1995). Complexity of computing with
extended propositional logic programs. Annals of Mathematics and Artificial intelligence, 15 (3,4).
299

fiRosati

Moore, R. C. (1985). Semantical considerations on nonmonotonic logic. Artificial Intelligence, 25, 75{94.
Niemela, I. (1992). On the decidability and complexity of autoepistemic reasoning. Fundamenta Informaticae, 17 (1,2), 117{156.
Papadimitriou, C. H. (1994). Computational Complexity. Addison Wesley Publ. Co., Reading, Massachussetts.
Reiter, R. (1990). What should a database know?. J. of Logic Programming, 14, 127{153.
Rosati, R. (1997). Reasoning with minimal belief and negation as failure: Algorithms and
complexity. In Proc. of the 14th Nat. Conf. on Artificial Intelligence (AAAI'97), pp.
430{435. AAAI Press/The MIT Press.
Rosati, R. (1999). Reasoning about minimal knowledge in nonmonotonic modal logics. J.
of Logic, Language and Information, 8 (2), 187{203.
Schwarz, G. (1991). Autoepistemic logic of knowledge. In Proc. of the 1st Int. Workshop on
Logic Programming and Non-monotonic Reasoning (LPNMR'91), pp. 260{274. The
MIT Press.
Schwarz, G. (1992). Minimal model semantics for nonmonotonic modal logics. In Proc.
of the 7th IEEE Sym. on Logic in Computer Science (LICS'92), pp. 34{43. IEEE
Computer Society Press.
Schwarz, G. (1996). On embedding default logic into Moore's autoepistemic logic. Artificial
Intelligence, 80, 388{392.
Schwarz, G., & Lifschitz, V. (1993). Extended logic programs as autoepistemic theories. In
Proc. of the 2nd Int. Workshop on Logic Programming and Non-monotonic Reasoning
(LPNMR'93), pp. 101{114. The MIT Press.
Schwarz, G., & Truszczynski, M. (1994). Minimal knowledge problem: a new approach.
Artificial Intelligence, 67, 113{141.
Shoham, Y. (1987). Nonmonotonic logics: Meaning and utility. In Proc. of the 10th Int.
Joint Conf. on Artificial Intelligence (IJCAI'87), pp. 388{392.
Stalnaker, R. (1993). A note on non-monotonic modal logic. Artificial Intelligence, 64 (2),
183{196.

300

fi