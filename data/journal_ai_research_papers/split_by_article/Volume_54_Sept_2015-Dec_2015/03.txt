Journal of Artificial Intelligence Research 54 (2015) 493-534

Submitted 05/15; published 12/15

Possible and Necessary Winners of Partial Tournaments
Haris Aziz

haris.aziz@nicta.com.au

Data61 and University of New South Wales
Australia

Markus Brill

brill@cs.duke.edu

Computer Science Department
Duke University, USA

Felix Fischer

fischerf@math.tu-berlin.de

Institut fur Mathematik
Technische Universitat Berlin, Germany

Paul Harrenstein

paul.harrenstein@cs.ox.ac.uk

Computer Science Department
University of Oxford, UK

Jerome Lang

lang@lamsade.dauphine.fr

LAMSADE
Universite Paris-Dauphine, France

Hans Georg Seedig

seedigh@in.tum.de

Institut fur Informatik
Technische Universitat Munchen, Germany

Abstract
We study the problem of computing possible and necessary winners for partially specified weighted and unweighted tournaments. This problem arises naturally in elections with
incompletely specified votes, partially completed sports competitions, and more generally
in any scenario where the outcome of some pairwise comparisons is not yet fully known.
We specifically consider a number of well-known solution conceptsincluding the uncovered set, Borda, ranked pairs, and maximinand show that for most of them, possible and
necessary winners can be identified in polynomial time. These positive algorithmic results
stand in sharp contrast to earlier results concerning possible and necessary winners given
partially specified preference profiles.

1. Introduction
Many multi-agent situations can be modeled and analyzed using weighted or unweighted
tournaments. Prime examples are voting scenarios in which pairwise comparisons between
alternatives are decided by majority rule and sports competitions that are organized as
round-robin tournaments. Other application areas include webpage and journal ranking,
biology, psychology, and AI. More generally, tournaments and solution concepts on tournaments are used as a mathematical tool for the analysis of all kinds of situations where
a choice among a set of alternatives has to be made exclusively on the basis of pairwise
comparisons.
When choosing from a tournament, relevant information may only be partly available.
This could be because some preferences are yet to be elicited, some matches yet to be played,
c
2015
AI Access Foundation. All rights reserved.

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

or certain comparisons yet to be made. In such cases, it is natural to speculate which are
the potential and inevitable outcomes on the basis of the information already at hand.
For tournaments, a number of attractive solution concepts have been proposed (Brandt,
Brill, & Harrenstein, 2016; Laslier, 1997). Given any such solution concept S, we define
possible winners of a partial tournament G as alternatives that are selected by S in some
completion of G, and necessary winners are alternatives that are selected in all completions.
By a completion we here understand a (complete) tournament extending G.
In this article we address the computational complexity of identifying the possible and
necessary winners for a number of solution concepts whose winner determination problem for tournaments is tractable. We consider five of the most common solution concepts
for tournamentsnamely, Condorcet winners (COND), Condorcet non-losers (CNL), the
Copeland set (CO), the top cycle (TC ), and the uncovered set (UC )and three common
solutions for weighted tournamentsBorda (BO), maximin (MM ), and ranked pairs (RP ).
For each of these solution concepts, we consider the computational complexity of the following problems: deciding whether a given alternative is a possible winner (PW), deciding
whether a given alternative is a necessary winner (NW), as well as deciding whether a
given subset of alternatives equals the set of winners (the winning set) in some completion (PWS). These problems can be challenging, as even unweighted partial tournaments
may allow for an exponential number of completions. Our results are encouraging, in the
sense that most of the problems can be solved in polynomial time. Table 1 summarizes our
findings.
Similar problems have been considered before. For Condorcet winners, voting trees
and the top cycle, it has been shown that possible and necessary winners are computable
in polynomial time (Konczak & Lang, 2005; Lang et al., 2012). The same holds for the
computation of possible Copeland winners, a problem that has been considered in the
context of sports tournaments (Cook, Cunningham, Pulleyblank, & Schrijver, 1998).
Another more specific setting is also frequently considered within the area of computational social choice and differs from our setting in a subtle but important way that is
worth being pointed out. There, tournaments are assumed to arise from pairwise majority
comparisons on the basis of a profile of individual voters preferences.1
Since a partial preference profile R need not conclusively settle every majority comparison, it may give rise to a partial tournament only. There are then two natural ways to define
possible and necessary winners for a partial preference profile R and solution concept S as
illustrated in Figure 1. The first is to consider the completions of R and the winners under
S in the corresponding tournaments. The secondcovered by our more general settingis
to consider the completions of the partial tournament G(R) corresponding to R and the
winners under S in these. Since every tournament corresponding to a completion of R is
also a completion of G(R) but not necessarily the other way round, the second definition
1. See, e.g., the work of Baumeister and Rothe (2010), Betzler and Dorn (2010), Konczak and Lang (2005),
Walsh (2007), and Xia and Conitzer (2011) for the basic setting, Betzler, Hemmann, and Niedermeier
(2009) for parameterized complexity results, Bachrach, Betzler, and Faliszewski (2010), Hazon, Aumann,
Kraus, and Wooldridge (2012), and Kalech, Kraus, Kaminka, and Goldman (2011) for probabilistic
settings, Chevaleyre, Lang, Maudet, and Monnot (2011) and Chevaleyre, Lang, Maudet, Monnot, and
Xia (2012) for settings with a variable set of alternatives, Baumeister, Faliszewski, Lang, and Rothe
(2012), Kalech et al. (2011), Lu and Boutilier (2011), Oren, Filmus, and Boutilier (2013), Filmus and
Oren (2014) for settings with truncated ballots and Lu and Boutilier (2013) for multiwinner rules.

494

fiPossible and Necessary Winners of Partial Tournaments

S

PWS

COND
CNL
CO
TC
UC

in
in
in
in
in

BO
MM
RP

in P (Thm. 8)a
in P (Thm. 11)a
NP-C (Thm. 14)

a

P
P
P
P
P

NWS
(Konczak & Lang, 2005)
(Thm. 2)
(Cook et al., 1998)a
(Lang et al., 2012)a
(Thm. 5)

in
in
in
in
in

P
P
P
P
P

PWSS
(Konczak & Lang, 2005) in P
(Thm. 2)
in P
(Thm. 3)a
in P
(Lang et al., 2012)
in P
(Thm. 6)
NP-C

in P
(Thm. 10)
in P
(Thm. 13)
coNP-C (Thm. 15)

(Thm.
(Thm.
(Thm.
(Thm.
(Thm.

1)
2)
3)
4)
7)

in P (Thm. 9)
in P (Thm. 12)
NP-C (Cor. 2)

This P-time result contrasts with the intractability of the same problem for partial preference
profiles (Lang et al., 2012; Xia & Conitzer, 2011).

Table 1: Complexity of computing possible winners (PW) and necessary winners (NW) and
of checking whether a given subset of alternatives is a possible winning set (PWS) under
the following solution concepts: Condorcet winners (COND), Condorcet non-losers (CNL),
Copeland (CO), top cycle (TC ), uncovered set (UC ), Borda (BO), maximin (MM ), and
ranked pairs (RP ).
gives rise to a stronger notion of a possible winner and a weaker notion of a necessary winner. Interestingly, and in sharp contrast to our results, determining these stronger possible
and weaker necessary winners is computationally hard for many voting rules (Lang et al.,
2012; Xia & Conitzer, 2011). This contrast has been foreshadowed by the work of Lang et
al. (2012) and Pini, Rossi, Venable, and Walsh (2011), who compared these two ways of
defining possible and necessary winners (both theoretically and experimentally) for three
solution concepts: Condorcet winners, voting trees, and the top cycle.
In the context of this article, we do not assume that tournaments arise from majority
comparisons in voting or from any other specific procedure. This approach has a number
of advantages. Firstly, it matches the diversity of settings to which solution concepts on
tournaments are applicable, which goes well beyond social choice and voting. For instance,
our results also apply to a question commonly encountered in sports competitions, namely,
which teams can still win the cup and which future results this depends on (Cook et al.,
1998; Kern & Paulusma, 2004; B. L. Schwartz, 1966). Secondly, (partial) tournaments
provide an informationally sustainable way of representing the relevant aspects of many
situations while maintaining a workable level of abstraction and conciseness. For instance,
in the social choice setting described above, the partial tournament induced by a partial
preference profile is a much more succinct piece of information, and discloses less information, than the preference profile itself. More generally, it gives a canonical way of extending
tournament solutions to incomplete tournaments (a line that has been pursued by Brandt,
Brill, & Harrenstein, 2014). Finally, specific settings may impose restrictions on the feasible
extensions of partial tournaments. The positive algorithmic results in this article can be
used to efficiently approximate the sets of possible and necessary winners in such settings,
where the corresponding problems may be intractable. The voting setting discussed above
serves to illustrate this point.
We also point out that computing possible outcomes has been considered in other domains in social choice for example in matching and allocations (Aziz, Walsh, & Xia, 2015;
495

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

1 1 1
a

a c
a
b b
b
c a

completions

completions
1 1 1

a

a c a
b b b
c a c
1 1 1
1 1 1
a c a
b b c
c a b

c

b

b
a

a c c
b b a
c a b

b

a

c
b

a
c

b

c

c

Figure 1: This non-commutative diagram illustrates the two approaches to possible and
necessary winners of partial preference profiles for majoritarian social choice functions.
First, the completions of the partial profile to full preference profiles are shown in the
bottom left. The corresponding majority tournaments are in the dashed box on the bottom
right. In this work, we start from the partial majority tournament on the top right which
is induced by the partial preference profile. Then, we consider all possible completions to
tournaments which are depicted in the solid box on the bottom right.

Rastegari, Condon, Immorlica, & Leyton-Brown, 2013) and for knockout tournaments (Aziz
et al., 2014; Vu, Altman, & Shoham, 2009).

2. Preliminaries
A partial tournament is a pair G = (V, E) where V is a nonempty finite set of alternatives
and E  V  V an asymmetric relation on V , i.e., (y, x) 
/ E whenever (x, y)  E. If
(x, y)  E we say that x dominates y. A tournament T is a partial tournament (V, E) for
which E is also complete, i.e., either (x, y)  E or (y, x)  E for all distinct x, y  V . We
denote the set of all tournaments by T .
Let G = (V, E) be a partial tournament. Another partial tournament G0 = (V 0 , E 0 ) is
called an extension of G, denoted G  G0 , if V = V 0 and E  E 0 . If E 0 is complete, G0 is
called a completion of G. We write [G] for the set of completions of G, i.e.,
[G] = {T  T : G  T }.
496

fiPossible and Necessary Winners of Partial Tournaments

We say an alternative x  V is dominated if (y, x)  E for some y  V , and undominated
+
otherwise. We define the dominion of x in G as DG
(x) = {y  V : (x, y)  E}, and the

+
dominators of x in G as DGS
(x) = {y  V : (y, x)  E}. For X  V , we let DG
(X) =
S
+


D
(x)
and
D
(X)
=
D
(x).
A
nonempty
subset
X

V
of
alternatives
in
xX
xX
G
G
G
a partial or complete tournament (V, E) is dominant if every alternative in X dominates
every alternative outside X. For given G = (V, E) and X  V , we further write E X for
the set of edges obtained from E by adding all missing edges from alternatives in X to
alternatives not in X, i.e.,
E X = E  {(x, y)  X  V : y 
/ X and (y, x) 
/ E}.
We use E X as an abbreviation for E V \X , and write E x , E x , GX , and GX for
E {x} , E {x} , (V, E X ), and (V, E X ), respectively. For G = (V, E) and X  V , we
use E|X and G|X to denote the restriction E(XX) of E to X and the restriction (X, E|X )
of G to X, respectively.
Let n be a positive integer. A partial n-weighted tournament is a pair G = (V, w)
consisting of a finite set V of alternatives and a weight function w : V  V  {0, . . . , n}
such that for each pair (x, y)  V  V with x 6= y, w(x, y) + w(y, x)  n. We say that
T = (V, w) is an n-weighted tournament if for all x, y  V with x 6= y, w(x, y) + w(y, x) = n.
We call T a (partial) weighted tournament if it is a (partial) n-weighted tournament for
some n  N. The class of n-weighted tournaments is denoted by Tn . Observe that with
each partial 1-weighted tournament (V, w) we can associate a partial tournament (V, E) by
setting E = {(x, y)  V : w(x, y) = 1}. Thus, (partial) n-weighted tournaments can be seen
to generalize (partial) tournaments, and we may identify T1 with T .
The notations G  G0 and [G] can be extended naturally to partial n-weighted tournaments G = (V, w) and G0 = (V 0 , w0 ) by letting (V, w)  (V 0 , w0 ) if V = V 0 and
w(x, y)  w0 (x, y) for all x, y  V , and [G] = {T  Tn : G  T }.
For given G = (V, w) and X  V , we further define wX such that for all x, y  V ,

w

X

(
n  w(y, x) if x  X and y 
/ X,
(x, y) =
w(x, y)
otherwise,

and set wX = wV \X . Moreover, wx , wx , GX , and GX are defined in the obvious
way.
We use the term solution concept for functions S that associate with each tournament T = (V, E), or with each weighted tournament T = (V, w), a choice set S(T )  V .2 A
solution concept S is called resolute if |S(T )| = 1 for each tournament T . In this article we
will consider the following solution concepts: Condorcet winners (COND), Condorcet nonlosers (CNL), Copeland (CO), top cycle (TC ), and uncovered set (UC ) for tournaments,
and maximin (MM ), Borda (BO), and ranked pairs (RP ) for weighted tournaments. Of
these only ranked pairs is resolute. Formal definitions will be provided later in the article.
2. We avoid the otherwise natural term tournament solution as in its common definition it requires the
choice set to be nonempty (Laslier, 1997). This would exclude COND.

497

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

3. Possible and Necessary Winners
A solution concept selects a unique set of alternatives from each complete tournament.
This holds in particular for the completions of a partial tournament. However, for each
completion of a partial tournament, a solution concept may select another set of alternatives. A similar remark concerns weighted tournaments and their completions. For a given
solution concept S, we can thus define the set of possible winners for a partial (weighted)
tournament G as the set of alternatives selected by S from some completion of G, i.e., as
[
S(T ).
PWS (G) =
T [G]

Analogously, the set of necessary winners of G is the set of alternatives selected by S from
every completion of G, i.e.,
\
NWS (G) =
S(T ).
T [G]

We furthermore write
PWSS (G) = {S(T ) : T  [G]}
for the possible winning sets, i.e., the set of sets of alternatives that S selects for the
different completions of G. For the sake of completeness, we also mention necessary winning
sets. A set X is a necessary winning set of a partial tournament G if X = S(T ) for
all T  [T ]. Accordingly, the conditions for a set to be a necessary winning set are very
strong and are satisfied relatively seldom. Necessary winning sets can also straightforwardly
be characterized by means of the sets of possible and necessary winners: X is a necessary
winning set if and only if X = PW (G) = NW (G). This implies that for the solution
concepts addressed in this article, computational results surrounding necessary winning
sets follow as easy corollaries.3 We will not further consider necessary winning sets.
Note that NWS (G) may be empty even if S selects a nonempty set of alternatives for
each tournament T  [G], and that the number |PWSS (G)| of possible winning sets may
be exponential in the number of alternatives of G.
We have the following lemmas, which relate to some useful structural properties of
the sets of possible and necessary winners. The proofs are straightforward and therefore
omitted.
Lemma 1. Let S be a solution concept and G and G0 partial tournaments. Then,
(i) G  G0 implies PWS (G0 )  PWS (G), and
(ii) G  G0 implies NWS (G)  NWS (G0 ).
We say that a solution concept S refines another solution concept S 0 , denoted S  S 0 , if
S(G)  S 0 (G) for all G. We find that the following monotonicity properties hold.
3. Given our results in Table 1, the fact that X is a necessary winning set if and only if X = PW (G) =
NW (G) immediately implies that for all concepts apart from ranked pairs deciding whether a set is a
necessary winning set can be achieved in polynomial time. Since ranked pairs is resolute, every set in
NWSRP has to be a singleton {x} and {x}  PWSRP if and only if x  NWRP . Consequently, the
problem of deciding whether a set X is contained in NWSRP is coNP-complete.

498

fiPossible and Necessary Winners of Partial Tournaments

Lemma 2. Let S and S 0 be solution concepts and G and G0 partial tournaments. Then,
(i) S  S 0 implies PWS (G)  PWS 0 (G), and
(ii) S  S 0 implies NWS (G)  NWS 0 (G).
The next lemma concerns the way in which the sets of possible and necessary winners can
be defined in terms of one another.
Lemma 3. Let S be a solution concept and G a partial tournament. Then,
S
(i) PWS (G) = GG0 NWS (G0 ), and
T
(ii) NWS (G) = GG0 PWS (G0 ).
Observe that, while S  S 0 does not generally imply PWSS (G)  PWSS 0 (G), the following
does hold:
if S  S 0 then for all X  PWSS (G) there exists X 0  PWSS 0 (G) such that X  X 0 .
Deciding membership in the sets PWS (G), NWS (G), and PWSS (G) for a given solution
concept S and a partial (weighted) tournament G are natural computational problems.
Overloading notation, we refer to these problems as PWS , NWS , and PWSS , respectively.
PWS (Possible Winners)
Input:
A partial tournament G = (V, E) or an n-weighted partial tournament
G = (V, w) along with the positive integer n; an alternative x  V .
Output: Yes, if there exists a completion T  [G] such that x  S(T ).
No, otherwise.

NWS (Necessary Winners)
Input:
A partial tournament G = (V, E) or an n-weighted partial tournament
G = (V, w) along with the positive integer n; an alternative x  V .
Output: Yes, if x  S(T ) for all completions T  [G].
No, otherwise.

PWSS (Possible Winning Set)
Input:
A partial tournament G = (V, E) or an n-weighted partial tournament
G = (V, w) along with the positive integer n; a subset of alternatives
X V.
Output: Yes, if there exists a completion T  [G] such that X = S(T ).
No, otherwise.
Note that if PWSS can be decided in polynomial time, this only means that there is a
polynomial-time algorithm that decides whether a given subset of alternatives is a possible
499

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

winning set. Outputting the set PWSS of possible winning sets may be much more difficult,
because PWSS may be of exponential size.4
For irresolute solution concepts, PWSS may appear a more complex problem than
PWS . We are, however, not aware of a generic polynomial-time reduction from PWS to
PWSS . The relationship between all of these problems may also be of interest for the
classic possible winner setting with partial preference profiles.
For complete tournaments T we have [T ] = {T } and thus PWS (T ) = NWS (T ) = S(T )
and PWSS (T ) = {S(T )}. As a consequence, for solution concepts S with an NP-hard
winner determination problemlike Banks, Slater, and the tournament equilibrium set
the problems PWS , NWS , and PWSS are NP-hard as well.5 We therefore restrict our
attention to solution concepts for which winners can be computed in polynomial time.

4. Unweighted Tournament Solutions
In this section, we consider the following well-known solution concepts for unweighted tournaments: Condorcet winners, Condorcet non-losers, the Copeland set, the top cycle, and
the uncovered set. We will use the partial tournament depicted in Figure 2(i ) as a running
example.
a

b

a

b

a

b

c

d

c

d

c

d

(i ) Partial tournament G

(ii ) Completion T1

(iii ) Completion T2

Figure 2: Example of a partial unweighted tournament G and possible completions T1
and T2 . Initially, the (dotted) edges between the pairs {a, b}, {b, c}, and {c, d} are not yet
specified.

4.1 Condorcet Winners and Condorcet Non-losers
Condorcet winners and Condorcet non-losers are fundamental solution concepts and will
provide a nice warm-up. An alternative x  V is a Condorcet winner of a complete tournament T = (V, E) if it dominates all other alternatives, i.e., if (x, y)  E for all y  V \ {x}.
The set of Condorcet winners of tournament T will be denoted by COND(T ); obviously
this set is always either a singleton or empty. An alternative x is a Condorcet loser in T if it
is dominated by every other alternative, i.e., if (y, x)  E for all y  V \ {x}. Consequently,
x is a Condorcet non-loser in T = (V, E) if x is not a Condorcet loser in T or V = {x}.
The set of Condorcet non-losers of a tournament T will be denoted by CNL(T ); obviously
this set has always cardinality |V | or |V |  1.
4. For instance, if G = (V, ) then PWS TC (G ) = {X  V : |X| 6= 2}, even though PWSTC is in P
(Theorem 4).
5. This does not exclude the possibility that computing some (arbitrary) possible winner or possible winning
set for some of these solution concepts could be done in polynomial time.

500

fiPossible and Necessary Winners of Partial Tournaments

Let G = (V, E) be a partial tournament. If some alternative x is dominant in G, then x
will obviously be the Condorcet winner in all completions of G. On the other hand, if for
some y  V \ {x} it is not the case that (x, y)  E, there is some completion of G in which x
is not a Condorcet winner. Hence,
x  NWCOND (G) if and only if (x, y)  E for all y  V \ {x}
and
x  PWCOND (G) if and only if (y, x)  E for no y  V \ {x}.
Obviously, the criteria on the right-hand side of the equivalences can be checked in polynomial time.
We now turn to the problem PWSCOND . Each of the sets in PWSCOND (G) is either
a singleton or the empty set, and determining membership for a singleton is obviously
tractable. Checking whether   PWSCOND (G) is not quite that simple. The following
result gives an exact characterization of PWSCOND (G), which is interesting in its own
right.
Lemma 4. Let U be the set of undominated alternatives of a partial tournament G = (V, E).
Then,
 for every alternative x  V , {x}  PWSCOND (G) if and only if x  U ;
  6 PWSCOND (G) if and only if 1  |U |  2 and U is dominant.
Proof. Since a complete tournament has either one Condorcet winner or none, any set in
PWSCOND (G) has cardinality 0 or 1. Clearly, {x}  PWSCOND (G) if and only if x  U .
It remains to be shown that PWSCOND (G) contains  if and only if U = , or |U |  3, or
1  |U |  2 and U is not dominant.
If U = , COND(T ) =  for every T  [G]. It follows that   PWSCOND (G). If
|U |  3, consider a directed cycle C  U  U that visits every alternative in U .6 Then,
the set of undominated alternatives in G0 = (V, E  C) is empty. It again follows that
  PWSCOND (G).
If U = {x} and x is dominant, then x is a Condorcet winner in every T  [G]. Therefore,

/ PWSCOND (G).
If U = {x} and {x} is not dominant, then (x, y) 
/ E for some y 6= x. Consider a
completion of G containing (y, x). In this completion, the set of undominated alternatives
is empty. It follows that   PWSCOND (G).
If U = {x, y} and {x, y} is dominant, then for every T  [G], either (x, y)  T and x is
a Condorcet winner in T , or (y, x)  T and y is a Condorcet winner in T . It follows that

/ PWSCOND (G).
Finally, if U = {x, y} and {x, y} is not dominant, then for some z 6= x, y we have
(x, z) 
/ E or (y, z) 
/ E. Without loss of generality, assume (x, z) 
/ E. Consider a
completion of G containing (z, x) and (x, y). Such a completion exists, because (x, z) 
/ E,
and (y, x) 
/ E (since x  U ). In this completion, the set of undominated alternatives is
empty. It follows that   PWSCOND (G).
6. The cycle C is not a subgraph of G. In fact, G|U does not contain any edges.

501

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

We are now in a position to prove the following theorem.
Theorem 1. PWCOND , NWCOND , and PWSCOND can all be solved in polynomial time.
The results for PWCOND and NWCOND also follow from Corollary 2 of Konczak and
Lang (2005).
We further note that Theorem 1 is a corollary of corresponding results for maximin
in Section 5.2. The reason is that a Condorcet winner is the maximin winner of a 1weighted tournament, and a tournament does not admit a Condorcet winner if and only if
all alternatives are maximin winners.
We conclude this section by observing that the problems PWCNL , NWCNL , and
PWSCNL are reducible to NWCOND , PWCOND , and PWSCOND , respectively. It can
straightforwardly be checked that for all partial tournaments G = (V, E) with |V | > 1
and all X  V ,
X  PWSCNL (G) if and only if V \ X  PWSCOND (G1 ),
where G1 = (V, E 1 ) is G with all of its set edges inverted, i.e., E 1 = {(x, y) : (y, x)  E}.
It also follows that,
PWCNL (G) = V \ NWCOND (G1 ), and
NWCNL (G) = V \ PWCOND (G1 ).
Since the complement of a set can be computed in polynomial time and edges can
be reversed in polynomial time as well, we obtain the following result as a corollary of
Theorem 1.
Theorem 2. PWCNL , NWCNL , and PWSCNL can all be solved in polynomial time.
As an example, consider the partial tournament G depicted in Figure 2(i ) in which there
is no dominating alternative while the set of undominated alternatives in G is U = {a, b}.
Therefore,
PWCOND (G) = {a, b} and
NWCOND (G) = .
For PWSCOND (G), note that the set U is not dominant because (b, c) 
/ E. By Lemma 4,
this gives
PWSCOND (G) = {{a}, {b}, }.
For Condorcet non-losers, we observe that G1 = (V, E 1 ) with E 1 = {(c, a), (d, a), (d, b)}.
Now, PWCOND (G1 ) = {c, d}, NWCOND (G1 ) = , and (from Lemma 4)
PWSCOND (G1 ) = {{c}, {d}, }. Therefore,
PWCNL (G) = {a, b, c, d},
NWCNL (G) = {a, b}, and
PWSCNL (G) = {{a, b, d}, {a, b, c}, {a, b, c, d}}.

502

fiPossible and Necessary Winners of Partial Tournaments

4.2 Copeland
Copelands solution selects alternatives based on the number of other alternatives they
dominate. Define the Copeland score of an alternative x in tournament T = (V, E) as
sCO (x, T ) = |DT+ (x)|.
The set CO(T ) then consists of all alternatives that have maximal Copeland score.
For an illustrative example, consider again the partial tournament G shown in Figure 2(i ). In completions of G where a (respectively b) is a Condorcet winner, a (respectively b) is the sole Copeland winner as in the completion shown in Figure 2(ii ). The only
two completions in which neither a nor b is a Condorcet winner are
{(a, c), (a, d), (b, a), (b, d), (c, b), (c, d)},
where the set of Copeland winners is {a, b, c}, and
{(a, c), (a, d), (b, a), (b, d), (c, b), (d, c)},
also depicted in Figure 2(iii ), where the set of Copeland winners is {a, b}. Therefore,
PWCO (G) = {a, b, c},
NWCO (G) = , and
PWSCO (G) = {{a}, {b}, {a, b}, {a, b, c}}.
Since Copeland scores coincide with Borda scores in the case of 1-weighted tournaments,
the following is a direct corollary of the results in Section 5.1.7
Theorem 3. PWCO , NWCO , and PWSCO can all be solved in polynomial time.
From PWSCO being solvable in polynomial time, we get the following corollary, which
may be of independent interest to graph theorists.
Corollary 1. There exists a polynomial-time algorithm to check whether a partial tournament admits a regular completion, i.e., a completion in which every alternative has the
same out-degree.
To see this, merely observe that a completion T = (V, E) of a partial tournament is
regular if and only if CO(T ) = V .
4.3 Top Cycle
The top cycle of a tournament T = (V, E), denoted by TC (T ), is the unique minimal
dominant subset of V .
Lang et al. have shown that possible and necessary winners for TC can be computed
efficiently by greedy algorithms (Lang et al., 2012, Corollaries 1 and 2). Still, we give the
following characterization that will prove useful when we come to consider the possible
7. PWCO can alternatively be solved via a polynomial-time reduction to maximum network flow (Cook et
al., 1998, p. 51).

503

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

winning sets under TC . An alternative is a possible TC -winner if and only if it can
reach every other alternative via existing or unspecified edges. Formally, given a partial
tournament G = (V, E), an alternative x  V is in PWTC (G) if and only if for every other
alternative y  V , there exists a path x0 , x1 , x2 , . . . , xk with x = x0 , y = xk , and such that
(xi+1 , xi ) 
/ E for all i  {0, . . . , k  1}. We call such a path a possible path. If a possible
path from x to y exists, we denote that by x
y.
Observe that for any pair a and b of alternatives in a partial tournament G = (V, E),
if there is no possible path from a to b, then (b, a)  E. The set of alternatives that can
reach every other alternative via a possible path in a partial tournament G = (V, E) is also
known as the Good set (Good, 1971) and is denoted by GO(G).8 It follows from the above
that GO(G) is polynomial-time computable. Moreover, we have the following lemma.
Lemma 5. Let G = (V, E) be a partial tournament with |V |  3, GO(G) = V , and x
and y alternatives such that (x, y), (y, x) 
/ E. Let further Gxy = (V, E  {(x, y)}) and
Gyx = (V, E  {(y, x)}). Then, GO(Gxy ) = V or GO(Gyx ) = V .
Proof. Assume for contradiction that both GO(Gxy ) and GO(Gyx ) are strict subsets
of V . Clearly, we have x  GO(Gxy ) and y  GO(Gyx ). Moreover, we claim that x 
/
GO(Gyx ) and y 
/ GO(Gxy ). To see why x 
/ GO(Gyx ) holds, assume for contradiction
that x  GO(Gyx ). Then, there is a possible path from x to y in Gyx . This path can
be used to replace the edge (x, y) (which is available for possible paths in G, but not
in Gyx ). Therefore, there is a possible path between two alternatives in Gyx whenever
there is one in G. Since GO(G) = V , we have GO(Gyx ) = V as well, contradicting our
assumption. An analogous argument shows that y 
/ GO(Gxy ).
Having established that x  GO(Gxy ) \ GO(Gyx ) and y  GO(Gyx ) \ GO(Gxy ),
we know that there is no possible path from x to y in Gyx , and neither is there a possible
path from y to x in Gxy . Now consider some z  V \ {x, y}. We have that either
(i) (x, z)  E and (y, z)  E, or
(ii) (z, x)  E and (z, y)  E,
as otherwise there would be either a possible path from x to y in Gyx or a possible path
from y to x in Gxy .
If (i), recall that we have assumed that GO(G) = V . Hence, in G there are possible
paths z
x and z
y. Observe that we may assume that either the possible path from z
to x does not contain (y, x), or the possible path from z to y does not contain (x, y). In the
former case, y, z
x is a possible path in Gxy . In the latter case, x, z
y is a possible
yx
path in G
. Thus, either case yields a contradiction.
If (ii), GO(G) = V implies that there are possible paths x
z and y
z in G, and
we may assume that either the possible path from x to z does not contain (y, x) or the
possible path from y to z that does not contain (x, y). In the former case, there is a possible
path x
z, y in Gxy . In the latter case, there is a possible path y
z, x in Gyx . Again,
either case leads to a contradiction. This concludes the proof.
8. Equivalently, the Good set of a partial tournament G = (V, E) is the unique minimal dominant subset
of V . The Good set is also known as the Smith set (Smith, 1973) and GETCHA (T. Schwartz, 1986).

504

fiPossible and Necessary Winners of Partial Tournaments

We are now ready to show that PWSTC can be solved efficiently. Note that we not only
have to check that there exists a completion such that the set in question is dominating,
but also that there is no smaller dominating set.
Theorem 4. PWSTC can be solved in polynomial time.
Proof. Let the set under consideration be X. The set X cannot be empty as T C(T ) 6= 
for every T  [G]. If |X| = 1, then the problem PWSTC is equivalent to PWCOND . If
|X| = 2, then the answer is already no because the top cycle is never of size two. We may
therefore assume that |X|  3.
Consider the graph GX . If X does not dominate V \ X in GX , then X 
/ PWSTC (G)
because an alternative in V \ X beats an alternative in X. Therefore, we now need to check
whether X  PWSTC (G|X ), i.e., whether X is a possible top cycle set in the partial
tournament G restricted to X. In essence, the problem PWSTC is reduced to the restricted
problem PWSTC for the set of all alternatives.
We prove that V  PWSTC (G) if and only if GO(G) = V . Obviously, if V 6= GO(G)
then V 
/ PWSTC (G). For the other direction, we start with a partial tournament G =
(V, E) with GO(G) = V . By iteratively applying Lemma 5, new edges can successively be
added to G while maintaining GO(G) = V until G is a tournament.
As an example, we again consider the partial tournament G depicted in Figure 2(i ), for
which we show that
PWTC (G) = {a, b, c, d},
NWTC (G) = , and
PWSTC (G) = {{a}, {b}, {a, b, c}, {a, b, c, d}}.
The result for PWTC (G) is witnessed by the completion shown in Figure 2(iii ) where every
alternative is in the top cycle. For NWTC (G), the statement follows from the observation that for every alternative, there exists a completion in which another alternative is
a Condorcet winner. Regarding PWSTC (G), we consider each subset separately. Since
PWSCOND  PWSTC , we get that {a} and {b} are in PWSTC (G). For {a, b, c}, we apply
the result shown in the second paragraph of the proof of Theorem 4: a, b, c are undominated
by d, and the Good set of G|{a,b,c} is {a, b, c}. Likewise, the Good set of G is {a, b, c, d}.
It remains to be shown that the other subsets of size three are not in PWSTC (G). To this
end, note that the Good set of G|{a,b,d} is only {a, b} and that neither {a, c, d} nor {b, c, d}
is undominated in G.
4.4 Uncovered Set
Given a tournament T = (V, E), an alternative x  V is said to cover another alternative
y  V if DT+ (y)  DT+ (x), i.e., if every alternative dominated by y is also dominated by x.
The uncovered set of T , denoted UC (T ), then is the set of alternatives that are not covered
by any other alternative. A useful alternative characterization of the uncovered set is via
the two-step principle: an alternative is in the uncovered set if and only if it can reach
every other alternative in at most two steps.9 Formally, x  UC (T ) if and only if for all
9. In graph theory, vertices satisfying this property are often called kings.

505

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

y  V \ {x}, either (x, y)  E or there is some z  V with (x, z), (z, y)  E. We denote the
+
+
++
two-step dominion DE
(DE
(x)) of an alternative x by DE
(x).
We first consider PWUC , for which we check for each alternative whether it can be
reinforced to reach every other alternative in at most two steps.
Theorem 5. PWUC can be solved in polynomial time.
Proof. For a given partial tournament G = (V, E) and an alternative x  V , we check
whether x is in UC (T ) for some completion T  [G].
Consider the graph G0 = (V, E 00 ) where E 00 is derived from E as follows. First, we
let D+ (x) grow as much as possible by letting E 0 = E x . Then, we do the same for its
+
two-step dominion by defining E 00 as E 0DE0 (x) . We claim that x  PWUC (G) if and only
+
++
if V = {x}  DE
00 (x)  DE 00 (x).
() First, let x  PWUC (G). By definition, there is a completion (V, E  ) such that for
+
++
00
all y  V \ {x} we have y  DE
 (x)  DE  (x). But from the definition of E , it follows that
++
+
++
++
+
+
DE  (x)  DE 00 (c) and DE  (x)  DE 00 (x). Consequently, y is also in DE 00 (x)  DE
00 (x).
++
+
() For the other direction, let y  V \ {x}, y  DE 00 (x)  DE 00 (x). In any completion
T of G0 , x is trivially in UC (T ), implying that x  PWUC (G).
A similar argument yields the following.
Theorem 6. NWUC can be solved in polynomial time.
Proof. For a given partial tournament G = (V, E) and an alternative x  V , we check
whether x is in UC (T ) for all completions T  [G].
Consider the graph G0 = (V, E 00 ) with E 00 defined as follows. First, let E 0 = E x . Then,

expand it to E 00 = E 0DE0 (x) . Intuitively, this makes it as hard as possible for x to beat
alternatives outside of its dominion in two steps. We claim that x  NWUC (G) if and only
+
++
if V = {x}  DE
00 (x)  DE 00 (x) or equivalently, if and only if for all y 6= x there is a path
of length one or two from x to y in G.
() First, let x  NWUC (G). Assume for contradiction that there exists a y  V \ {x}
++
+

0
such that y 
/ DE
00 (x)  DE 00 (x). Then, in any completion (V, E ) of G , x cannot reach y

in two steps and consequently x 
/ UC (V, E ), a contradiction.
++
+
In any completion (V, E  ) of G, we
() Now, let V \ {x} = DE
00 (x)  DE 00 (x).
+
+
++
++
have DE 00 (x)  DE  (x) and DE 00 (x)  DE  (x). Consequently, x  UC (V, E  ) and
x  NWUC (G).
+
++
As it can be checked in polynomial time whether V = {x}  DE
00 (x)  DE 00 (x), this
completes the proof.
Consider the partial tournament G from Figure 3(i ) as an example. It can be
checked that NWUC (G) = .10 For PWUC , we consider each alternative separately.
For a, we have E 0 = E a = {(a, b), (a, c), (a, d), (b, d)}, and E 00 = E 0 , therefore
+
DE
Likewise, b  PWUC (G). Now, for c, we
00 (a) = {b, c, d} and a  PWUC (G).
have E 0 = {(a, c), (a, d), (b, d), (c, b), (c, d)} and E 00 = {(a, c), (a, d), (b, d), (c, b), (c, d), (b, a)},
+
++
see also Figure 3(ii ). This gives us DE
00 (c) = {b, d} and DE 00 (c) = {a}, and there0
fore, c  PWUC (G). Lastly, for d, we have E = {(a, c), (a, d), (b, d), (d, c)} and E 00 =
10. This is also a consequence of NWTC (G) =  (Section 4.3) and NWUC  NWTC (Lemma 2).

506

fiPossible and Necessary Winners of Partial Tournaments

a

b

a

b

a

b

c

d

c

d

c

d

(i )

(ii )

(iii )

Figure 3: A partial unweighted tournament G and possible extensions. In the center, the
alternative c and its dominion is maximally reinforced resulting in c reaching every other
alternative in at most two steps. Therefore, c  PWUC (G). On the right, the same is
done for alternative d that cannot reach a in two steps and is therefore not contained in
PWUC (G).
+
{(a, c), (a, d), (b, d), (d, c), (c, b)} as depicted in Figure 3(iii ). This gives us DE
00 (d) = {c}
++
/ PWUC (G). In summary,
and DE 00 (d) = {b}, implying that d 

PWUC [G] = {a, b, c},
NWUC (G) = , and
PWSUC (G) = {{a}, {b}, {a, b, c}},
where PWSUC (G) is obtained by an ad hoc argument.
For all solution concepts considered so farCondorcet winners, Condorcet non-losers,
Copeland, and the top cyclePW and PWS have the same complexity. One might wonder
whether a result like this holds more generally, and whether there could be a polynomialtime reduction from PWS to PW. In the following we find that this is not the case, unless
P=NP, and show that PWSUC , the problem of deciding whether a subset of alternatives of
a partial tournament G is the uncovered set of some completion of G, is NP-complete. The
proof of this result proceeds by a reduction of Sat and involves the construction of partial
tournaments on the basis of formulas in conjunctive normal form. For each propositional
variable p and every clause c, there is a gadget that is based on the partial tournament Gp
depicted in Figure 4(i ).
It is not hard to see that there are exactly two completions of Gp with {p , p+ , 1}
as the uncovered set. The first, T + or positive completion, is depicted in Figure 4(ii )
and the other, T  or negative completion, in Figure 4(iii ). To verify that there are no
other ones, consider an arbitrary completion (V, E 0 ) of Gp . Then, either (p , p+ )  E 0
or (p+ , p )  E 0 . In the former case, observe that p must be covered by 1. Hence,
(1, p )  E 0 and (c, p )  E 0 . It now follows that c is covered by p+ . Therefore, also
(p+ , 1)  E 0 and (p+ , c)  E 0 . This entails that p covers p+ and, with (p+ , p+ )  E 0 we
finally obtain (p , p+ )  E 0 . The resulting tournament is T + . By an analogous argument
it can be seen that T  results if we assume that (p , p+ )  E 0 . In the construction below,
the positive completion T + will correspond to setting propositional variable p to true and
the negative completion T  to setting p to false.
Besides c, the construction also involves an alternative c for each clause. How c is related
to the other alternatives in Gp depends on whether the respective clause contains p or p as
a literal. As we may assume that no clause contains both p and p, three cases remain, which
507

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

p

p+

1

p

p+

1

p

p+

1

p

p+

c

p

p+

c

p

p+

c

(i ) variable gadget for variable p

(ii ) completion T + for p set to true

(iii ) completion T  for p set to false

Figure 4: The partial tournament Gp and its only two completions, T + and T  , for which
the uncovered set is given by {p , p+ , 1}. Dotted edges are missing and omitted edges point
downwards.

p

p+

1

p

p+

c

p

p+

(i ) c contains p but not p

1

p

p+

c

c

p

p+

(ii ) c contains p but not p

1

c

c

p

p+

c

(iii ) c contains neither p nor p

Figure 5: The Gp -gadget with alternative c added. As in Figure 4, dotted edges are missing
and omitted edges point downwards.
are depicted in Figure 5. Some reflection reveals that if a clause contains p as a positive
literal, c will be covered by p+ if the partial tournament is completed positively, but not
by p if it is completed negatively. Similarly, if the clause contains p as a negative literal, c
will be covered by p if Gp is completed negatively, but not by p+ if Gp is completed
positively. If c contains neither p nor p as a literal, c will not be covered by either p+ or p
irrespective of whether Gp is completed positively or negatively.
In the construction below, for every clause, alternative c will be covered if and only if
the clause contains a literal p and the Gp -gadget is completed positively or a literal q and
the Gq -gadget is completed negatively.
Theorem 7. PWSUC is NP-complete.
Proof. Given a partial tournament G = (V, E), a set X  V , and a completion T  [G],
it can be checked in polynomial time whether X = UC (T ). Hence, PWSUC is obviously
in NP.
NP-hardness is shown by a reduction from Sat. Let  be a formula in conjunctive
normal form. Without loss of generality we may assume that no clause contains both a
508

fiPossible and Necessary Winners of Partial Tournaments

literal and its negation, that there are at least two clauses, and that every literal occurs in
at least one clause. We construct a partial tournament G = (V , E ) as follows. For each
propositional variable p we introduce five alternatives denoted p, p , p+ , p , and p+ . For
each clause c, we introduce two alternatives denoted c and c. We also have two auxiliary
alternatives denoted by 1 and 0. Thus,
V = {p, p , p+ , p , p+ : p is a variable}  {c, c : c is a clause}  {1, 0}.
We now give a description of the edge set E . For every propositional variable p and
every clause c the alternatives p , p+ , p , p+ , 1, c, and c are organized as in Figure 5. The
remaining edges are set in such a way as to make the construction work properly. Formally,
define the edge set E such that for every propositional variable p and every clause c:
 p dominates d and d for every clause d as well as q  , q + , q  , q + for every q 6= p;
 p+ dominates 0, p, and p along with q  , q + , and d for all q 6= p and all clauses d.
Moreover, for every clause d, alternative p+ dominates alternative d if and only if p
occurs as a literal in clause d;
 p dominates 0, p, and p+ along with q  , q + , and d for all q 6= p and all clauses d.
Moreover, for every clause d, alternative p dominates alternative d if and only if p
occurs as a literal in clause d;
 p+ dominates 0, p, and p+ ;
 p dominates 0, p, and p ;
 c dominates 0, q  , and q + for every variable q, and d for every clause d 6= c. Moreover,
for very variable q, alternative c dominates q + whenever c does not contain q as a literal,
and q  if c does not contain q as a literal;
 c

dominates 0, c, and 1;

 1 dominates 0 as well as q, q  , and q + for all variables q, and d for all clauses d;
 0 dominates alternative q for every variable q, otherwise 0 is dominated by all other
alternatives.
Moreover, for every variable p, the edges among p , p+ , and 1 are missing as well as those
between p , p+ , and d for every clause d. Finally, any edges not specified in the above
description can be set arbitrarily. For an example of this construction the reader is referred
to Figure 6.
Now let
X = {p, p , p+ : p a propositional variable}  {c : c a clause}  {1}.
Table 2 summarizes which alternatives can reach which other alternatives in at most two
steps in G . We thus find that, for every completion T of G , the set X is contained
in UC (T ) and that 0 is covered by 1. For propositional variables p and clauses c, the alternatives p , p+ , and c can only be covered by alternatives from {p , p+ , 1}, i.e., whether
509

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

p

p

p

q

p+

p+

1

pq

pr

pq

pr

q

q+

q

q+

0

Figure 6: Part of the dominance relation of the partial tournament G associated with the
CNF formula  = (p  q)  (p  r). The alternatives pq and pr represent the two clauses of .
The part involving variable r, i.e., the alternatives r, r , r+ , r , and r+ , has been omitted.
The dashed edges are dependent on the clauses of . Omitted edges point downwards or,
when on the same level, in an arbitrary direction. Dotted edges are missing.
they are covered only depends on how the subtournament on {p , p+ , 1, p , p+ , c} is completed. As we saw in the discussion preceding this theorem, this can be done positively
or negatively, where a positive completion corresponds to setting variable p to true and a
negative completion to setting p to false. We complete the proof by showing that
X = UC (T ) for some T  [G ]

if and only if  is satisfiable.

() First assume that  is satisfiable and let v be the satisfying assignment for . For
each propositional variable p that v sets to true and each clause c, we complete the subtournament on {p , p+ , 1, p , p+ , c} positively, i.e., we add edges (p , p+ ), (p+ , 1), and (1, p )
as well as (p , p+ ), (p+ , c), and (c, p ). Thus, p is covered by 1, p+ by p , and, provided
that p occurs as a literal in c, c also by p+ . Similarly, for each propositional variable q that v
sets to false and each clause c, we complete the subtournament on {p , p+ , 1, p , p+ , c} negatively, i.e., we add edges (1, q + ), (q + , q  ), and (q  , 1) as well as (c, q + ), (q + , q  ), and
(q  , c). Accordingly, q  is covered by q + , q + by 1, and, provided that q occurs as a literal
in c, c also by q  . Observe that this procedure induces a well-defined completion of G ,
which we denote by Tv . As v satisfies , every clause contains a literal p such that v sets p to
true or a literal q such that v sets q to false. It follows that for every clause c, alternative c
is covered in Tv . Observe that p and p+ are covered in Tv irrespective of whether v sets p
510

fiPossible and Necessary Winners of Partial Tournaments

p q

p

p+

1

q q+ c

d p

p+

c

d q q+ 0

p
p
p+
1
c[p]
c[p]





0
0

q
0
0

0
0

c[p]

p
p

p

c[p]
p+

p+
p+


c
c
c

d
d



  c
c


p
p
p p c[p] 


p
p
p p 
c[p] 

q q+   

p
p


 d 

p 


 d 

p+ 

p
p+
c[p]
c[p]
0



0
0


0
0
0
0




c

q




c
q







p
p
c
c
p

p
p
c
c
p

p
p
1
1
p

p
p
1
1
p


p+
1
1
q

p

1
1
q

p
p


p

p
p
c
c
p















c






p
p
1
1
p

p
p
1
1
p







Table 2: Table summarizing which types of alternatives reach which other types of alternatives in one or two steps in (all completions of) the partial tournament G . We assume p
and q to be distinct variables such that neither q nor q occurs as a literal in c. Furthermore, c
and d are assumed to be distinct clauses, where c[p] denotes clause c on the understanding
that p occurs as a literal in c. Similarly, c[p] denotes clause c on the understanding that p
occurs as a literal in c. An alternative x in the entry for row r and column c means that r
can reach c via x. If the entry is a dot (), r can reach c directly, i.e., in one or zero
steps. A box () signifies that it depends on how G is being completed whether and
via which alternative r can reach c. The minus () in the entry for 0 and 1 means that 0
cannot reach 1 in at most two steps, no matter how G is completed. Thus, 0 is covered
by 1 in every completion of G . We may assume that no clause contains both a literal and
its negation, that there are at least two clauses, and that every literal occurs in at least one
clause.
to true or false. Hence, c, p+ , p 
/ UC (Tv ). Recalling that 1 covers 0 and X  UC (T ) for
all completions T of G , we may conclude that UC (Tv ) = X, as desired.
() For the opposite direction, assume that there is some completion T of G such
that for every propositional variable p and for every clause c, alternatives p , p+ , and c
are covered in T , i.e., such that UC (T ) = X. Define assignment vT such that it sets
propositional variable p to true if there is some clause c containing p as a literal such
that p+ covers c in T and sets p to false, otherwise. Observe that vT is a well-defined
assignment.
We now show that vT satisfies every clause in  and hence  itself as well. To this end
consider an arbitrary clause c. By assumption, c is covered by some alternative x. Recall
that c reaches all alternatives in at most two steps except alternatives p+ such that p occurs
as a literal in c and alternatives q  such that q occurs as a literal in c (also see Table 2).
Hence, either x = p+ for some variable p occurring as a literal in c or x = q  for some
variable q such that q occurs as a literal in c.
If the former, vT sets p to true and consequently also satisfies clause c. If the latter, we
have to demonstrate that vT sets q to false and in that way satisfies clause c. It suffices to
511

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

2

4

q

q+

6

1

5
3
1

q

q+

c

d

Figure 7: Illustration of the concluding argument of the proof of Theorem 7. A double
edge from alternative x to alternative y indicates that x covers y. The numbers some of the
edges are labelled with correspond to the order in which their existence is demonstrated in
the proof of Theorem 7.

show that there is no clause d such that q + covers d in T . To this end, consider an arbitrary
clause d. We prove that q + does not cover d and refer to Figure 7 for an illustration of our
reasoning. Let ET denote the edge set of T . As T extends G , obviously E  ET . First
recall that we have assumed that q  covers c in T . As (c, 1)  E , then also (q  , 1)  ET .
Since (q  , q  )  E , it can therefore not be the case that 1 covers q  in T . Reaching every
other alternative in at most two steps in G , alternative q  must therefore be covered by q +
in T . As (q  , q  )  E , it now follows that (q + , q  )  ET . Since, moreover, (q + , q + )  E ,
we also have that q  does not cover q + in T . Rather, q + reaches every alternative except 1
in at most two steps in T . It follows that q + is covered by 1. Moreover, since (q + , q + )  E ,
also (1, q + )  ET . Now consider alternative d and observe that, by construction, (d, 1)  E .
Thus, d can reach q + in two steps and we may conclude that q + does not cover d in T . It
follows that vT sets q to false and thus satisfies c, as desired.

5. Weighted Tournament Solutions
We now turn to weighted tournaments, and in particular consider the solution concepts
Borda, maximin, and ranked pairs.
5.1 Borda
The Borda solution (BO) is typically used in a voting context with a set N of n voters,
where each voter i is equipped with a linear ranking i as its individual preference. Then,
each alternative receives |V |  1 points for each time it is ranked first by a voter, |V |  2
points for each time it is ranked second, and so forth. The total number of points of an
alternative x constitute its Borda score sBO (x, (i )iN ) which can be written as
sBO (x, (i )iN ) =

X
iN

512

|{y  V : x i y}|.

fiPossible and Necessary Winners of Partial Tournaments

More generally, the Borda solution can be extended to n-weighted tournaments where the
Borda scores are defined as
X
sBO (x, (V, w)) =
w(x, y)
yV \{x}

and BO(V, w) again chooses those alternatives with maximum Borda score. This subsumes
the voting setting because
X
sBO (x, (i )iN ) =
|{i  N : x i y}| = sBO (x, (V, w))
yV

if the weight on the edge from x to y is defined to be the number of voters who rank x
higher than y, i.e.,
w(x, y) = |{i  N : x i y}|.
Before we proceed, we define the notion of a b-matching, which will be used in the proofs
of several of our results in this section. Let H = (VH , EH ) be an undirected graph with
vertex capacities b : VH  N0 . Then, a b-matching of H is a function m : EH  N0 such
that for all v  VH ,
X
m(e)  b(v).
e{e0 EH :ve0 }

P
The size of b-matching m is defined as
eEH m(e). It is easy to see that if b(v) = 1
for all v  VH , then a maximum-size b-matching is equivalent to a maximum-cardinality
matching. In a b-matching problem with upper and lower bounds, there further is a function
a : VH  N0 . A feasible b-matching then is a function m : EH  N0 such that
X
a(v) 
m(e)  b(v).
e{e0 EH :ve0 }

If H is bipartite, then the problem of computing a maximum-size feasible b-matching
with lower and upper bounds can be solved in strongly polynomial time (Schrijver, 2003,
ch. 21). We will use this result to show that PWBO and PWSBO can both be solved in
polynomial time. While the following result for PWBO can also be shown using Theorem 6.1
of Kern and Paulusma (2004), we still give a direct proof that will then be extended to
PWSBO .
Theorem 8. PWBO can be solved in polynomial time.
Proof. Observe that BO satisfies the following (weak) monotonicity property: making a
winner x stronger by increasing weight on an edge to another alternative, cannot make x a
losing alternative.
Let G = (V, w) be a partial n-weighted tournament, x  V . By the previous observation,
x  PWBO (G) if and only if x  PWBO (Gx ). Therefore, we can assume w.l.o.g that
G = Gx , i.e., all edges incident to x are completely specified already. Moreover, if there
exists a y  V \ {x} such that sBO (y, Gx ) > sBO (x, Gx ), then we already know that
x
/ PWBO (G). We thus assume that sBO (y, Gx )  sBO (x, Gx ) for all y  V \ {x}.
513

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

We give a polynomial-time algorithm for checking whether x  PWBO (Gx ) via a
reduction to the problem of computing a maximum-size b-matching of a bipartite graph.
Let s = sBO (x, Gx ) be the Borda score of x in Gx . We construct a bipartite graph
H = (VH , EH ) with vertices
VH = V \ {x}  E x , where
E x = {{i, j}  V \ {x} : i 6= j}
and edges
EH = {{i, {i, j}} : {i, j}  V \ {x}, i 6= j}.
We further define vertex capacities b : VH  N0 such that
b({i, j}) = n  w(i, j)  w(j, i) for {i, j}  E x and
b(v) = s  sBO (v, Gx ) for v  V \ {x}.
Now observe that in any completion T = (V, w0 )  [Gx ], w0 (i, j) + w0 (j, i) = n for all
i, j  V with i 6= j. The sum of the Borda scores in T is therefore n|V |(|V |  1)/2. Some
of the weight has already been used up in Gx ; the weight which has not yet been used up
is equal to
X
 = n|V |(|V |  1)/2 
sBO (v, Gx ).
vV

(Gx )

We claim that x  PWBO
if and only if H has a b-matching of size at least .
0
x
() Let T = (V, w )  [G ] be a completion with x  BO(T ). Consider the bmatching m with m(i, {i, j}) = w0 (i, j)  w(i, j). We verify that m is a feasible b-matching.
Let v  VH . If v  V \ {x}, we have that
X

m(e) = sBO (v, T )  sBO (v, Gx )  s  sBO (v, Gx ) = b(v).

e{e0 EH :ve0 }

Otherwise, v = {i, j}  E x and
X

m(e) = m({i, {i, j}}) + m({j, {i, j}}) = n  w(i, j)  w(j, i) = b({i, j}).

e{e0 EH :{i,j}e0 }

As the size of m is
X
X
X X
 X
m(e) =
w0 (i, j) + w0 (j, i)  w(i, j)  w(j, i) =
n
w(i, j) = ,
eEH

i6=j

i6=j

iV jV \{i}

the statement is shown.
() For the other direction, assume that a feasible b-matching of size at least  exists.
We construct a completion T = (V, w0 )  [Gx ] with x  BO(T ). Let
w0 (i, j) = m(i, {i, j}) + w(i, j)
0

for all {i, j}  V \ {x},

0

w (x, i) = w(x, i), and w (i, x) = w(i, x)
514

for i  V \ {x}.

fiPossible and Necessary Winners of Partial Tournaments

As w(i, j)  w0 (i, j) and w0 (i, j)+w0 (j, i)  w(i, j)+w(j, i)+b({i, j}) = n for all {i, j}  V ,
T is an extension of Gx . From
X
X
X
b({i, j}) 
m(e) =
 ,
=
{i,j}E x

eEH

i6=j

we know that the upper capacities b({i, j}) of all {i, j}  E x are exactly met by m (and
that there cannot be a matching with size more than ). This implies that
w0 (i, j) + w0 (j, i) = w(i, j) + w(j, i) + b({i, j}) = n,
showing that T is indeed a completion of Gx .
Since H can be constructed efficiently, and since a maximum-size b-matching can be
computed in strongly polynomial time, our algorithm runs in polynomial time.

1
1

a

1
1

a

b

1

5

1

5

5

4

4

2

c

2
2

2

cap.

3
2

c

d

cap.

a

3

{a, b}

1
4

a

3

b

5

d

2

1

{a, d}

2

5

{b, d}

1

c

b
5

3

3

d

(ii ) The partial tournament Gc .

(i ) A partial 5-weighted tournament G.

0

b

1 4
2

(iii )
The
constructed
bipartite
graph H for target Borda score
s = sBO (c, Gc ) = 8. Capacities
are given next to the vertices. Thick
edges with weights indicate the unique
maximum b-matching.

3
2

d

(iv ) The completion T of G that corresponds to the maximum b-matching. In
this case, BO(T ) = {a, b, c}.

Figure 8: Illustration of the algorithm for checking whether an alternative c is contained in
PWBO (G) for a partial 5-weighted tournament G.
Figure 8 illustrates the described steps for determining whether an alternative is contained in PWBO (G).
This idea can be extended to a polynomial-time algorithm for PWSBO where we use
a similar construction for a given G = (V, w), a candidate set X  V and a target Borda
score s . Binary search can be used to efficiently search the interval of possible target scores.
515

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Theorem 9. PWSBO can be solved in polynomial time.
Proof. Let G = (V, w) be a partial n-weighted tournament, and X  V . We give a
polynomial-time algorithm for checking whether X  PWSBO (G), via a bisection method
and a reduction to the problem of computing a maximum b-matching of a graph with lower
and upper bounds.
Assume that there is a target Borda score s and a completion T  [G] with X 
PWSBO (T ) and sBO (x, T ) = s for all x  X. Then, the maximum possible Borda score of
an alternative not in X is s  1.
For a given target Borda score s , we construct a bipartite graph H = (VH , EH ) with
vertices VH = V  E x , where
E x = {{i, j}  V : i 6= j},
and edges
EH = {{i, {i, j}} : {i, j}  V, i 6= j, w(i, j) + w(j, i) < n}.
Only the lower bounds as : VH  N0 and upper bounds bs : VH  N0 depend on s and
are defined as follows. For vertices x  X, lower and upper bounds coincide and are given
by
as (x) = bs (x) = s  sBO (x, G).
All other vertices v  VH \ X have a lower bound of as (v) = 0. Upper bounds for these
vertices are defined such that
bs (v) = s  sBO (v, G)  1
for v  V \ X, and
bs ({i, j}) = n  w(i, j)  w(j, i)
for {i, j}  E x .
As in the proof of Theorem 8, it holds that a feasible b-matching in H corresponds to
an extension of G. Such an extension is a completion T  [G] if and only if the b-matching
has size
X
 = n|V |(|V |  1)/2 
sBO (v, G),
vV

which equals the weight not yet used up in G. Then, T satisfies X  PWSBO (T ) and
sBO (x, T ) = s for all x  X. If, on the other hand, no s gives rise to a graph that has a
b-matching of size , then X 6 PWSBO (G).
In order to obtain a polynomial-time algorithm, we need to check whether there exists a
target score s for which the corresponding graph H with upper and lower bounds admits a
b-matching of size . It is easily verified that any such s is contained in the integer interval
I = [ max sBO (x, G), n(|V |  1) ].
xX

Observe that |I| depends on n and thus is not polynomially bounded in the size of G.
Checking every integer s  I is therefore not feasible in polynomial time. However, we now
show that we can perform binary search in order to find s efficiently. We need the following
516

fiPossible and Necessary Winners of Partial Tournaments

two observations about the interval I. For s  I, we say that s admits a feasible b-matching
if the corresponding graph H has a feasible b-matching.
First, if an s0  I admits a feasible b-matching, then every s00  I with s00  s0 also
admits a feasible b-matching. This is because removing all weight from edges that exceeds
the (reduced) upper bounds gives a feasible b-matching for s00 .
Second, with s0 as before and 0 the size of the corresponding maximum feasible bmatching m0 , there cannot be an s00  I with s00  s0 such that the size 00 of a maximum
feasible b-matching m00 for s00 is smaller than 0 . This is because either (i ) no such m00 exists
since not all lower bounds can be met, or (ii ) such an m00 exists and its size is at least 0 .
To see the latter, note that a decrease in the size of a maximum feasible matching cannot be
caused by upper bounds as bs00 (v)  bs0 (v) for all v  VH . It remains to be shown that the
increase in as00 (v) for v  X does not result in a smaller maximum b-matching. Since the
weight of all edges incident to a vertex in X in the b-matching is completely determined by
the bounds and increases from m0 to m00 , a total decrease in size can only be due to edges
{j, {i, j}} with i  V \ X, j  V whose weight is bounded by bs00 ({i, j})  m00 (i, {i, j}). But
then,
m00 (i, {i, j}) + m00 (j, {i, j}) = bs00 ({i, j})  bs0 ({i, j})  m0 (i, {i, j}) + m0 (j, {i, j})
and therefore 00  0 .
These two observations show that I can be partitioned into two non-overlapping integer
intervals I1 and I2 . Here, each s  I1 admits a feasible b-matching whose size increases
when s grows, whereas each s  I2 does not admit a feasible b-matchings. Therefore, either
I1 is empty and the desired s does not exist, or s = max(I1 ).
We can check the existence of s with the following binary search algorithm. Let
[Imin , Imax ] be an interval that is initialized to I = [maxxX sBO (x, G), n(|V |  1)]. Consider
the median value s of this interval. If the corresponding graph H has no feasible b-matching,
continue with the interval [Imin , s  1]. Otherwise, if the maximum feasible b-matching has
size at least , return yes. If its size is less than , continue with [s+1, Imax ]. If [Imin , Imax ]
is empty, return no.
The number of queries of this algorithm is bounded by dlog2 |I|e  dlog2 n|V |e and,
therefore, polynomial in the size of G.
To conclude this section, we show that NWBO can be solved in polynomial time as well.
It is worth noting that this result does not follow directly from the polynomial-time result
for NWBO for the case of preference profiles (Xia & Conitzer, 2011).
Theorem 10. NWBO can be solved in polynomial time.
Proof. Let G = (V, w) be a partial weighted tournament, x  V . We give a polynomial-time
algorithm for checking whether x  NWBO (G).
Let G = Gx . We want to check whether some other alternative y  V \ {x} can
achieve a Borda score of more than s = sBO (x, G). This can be done separately for each
y  V \ {x} by reinforcing it as much as possible in G. If for some y, sBO (y, Gy ) > s ,
then x 
/ NWBO (G). If, on the other hand, sBO (y, Gy )  s for all y  V \ {x}, then
x  NWBO (G).
517

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

As an example, consider the partial 5-weighted tournament G in Figure 8(i ). The fact
that {a, b, c}  PWBO (G) follows already from the completion shown in Figure 8(iv ). Also
note that this was the only completion in which c was chosen. Alternative d is not a possible
Borda winner since sBO (d, Gd ) = 7 < 8 = sBO (a, G). To determine PWSBO (G), we still
have to check which subsets of {a, b, c} are possible winning sets. For singletons, it is easy
to see that only {a} and {b} are in PWSBO (G). For {a, b}, we could employ the binary
search method described in Theorem 9. Here, we just argue that moving one unit of weight
from (c, d) to (d, c) in the completion shown in Figure 8(iv ) gives a completion in which
{a, b} is the winning set. For NWBO (G), it is straightforward to check that no alternative
is a necessary Borda winner. Altogether, we have that
PWBO (G) = {a, b, c},
NWBO (G) = , and
PWSBO (G) = {{a}, {b}, {a, b}, {a, b, c}}.
5.2 Maximin
The maximin score sMM (x, T ) of an alternative x in a weighted tournament T = (V, w), is
given by its worst pairwise comparison, i.e., sMM (x, T ) = minyV \{x} w(x, y). The maximin solution, also known as Simpsons method and denoted by MM , returns the set of all
alternatives with the highest maximin score.
As an example, consider the partial 5-weighted tournament depicted in Figure 9(i ). It is
easy to see that a (or b) are the unique maximin winners in all completions of Ga (or Gb ).
Also, c cannot be a possible maximin winner as it will always have a maximin score of 0
whereas a always has at least 1. Similarly, alternative d can never have a higher maximin
score than a. Figure 9(iii ) shows a completion in which {a, d} is the set of maximin winners.
If one unit of weight is shifted from (c, b) to (b, c), the resulting completion has {a, b, d} as
the maximin winners. It is also straightforward to find a completion of G{a,b} with {a, b}
as the set of maximin winners. It is easy to verify that no alternative is a necessary maximin
winner.
Together, this gives
PWMM (G) = {a, b, d},
NWMM (G) = , and
PWSMM (G) = {{a}, {b}, {a, b}, {a, d}, {a, b, d}}.
We first show that PWMM is polynomial-time solvable by reducing it to the problem of
finding a maximum-cardinality matching of a graph.
Theorem 11. PWMM can be solved in polynomial time.
Proof. We show how to check whether x  PWMM (G) for a partial n-weighted tournament
G = (V, w). Consider the graph Gx = (V, wx ). Then, sMM (x, Gx ) is the best possible
maximin score x can get among all completions of G. If sMM (x, Gx )  n2 , then we have
sMM (y, T )  wx (y, x)  n2 for every y  V \ {x} and every completion T  [Gx ], and
therefore x  PWMM (G).
518

fiPossible and Necessary Winners of Partial Tournaments

1
1

a

b

1
5

4

c

2
2
2

c

d

d

(i ) A partial 5-weighted tournament G.

1
4

a

{a, b}
{a, c}
{a, d}
{b, c}
{b, d}
{c, d}

a

b

(ii )
The
constructed
bipartite

graph H s for s = 1 and X = {a, d}
as in the proof of Theorem 12. A
maximum-cardinality matching is given
by the thick edges.

b

a

14

5

5

3
5
3
2

b

3

2

c

3
2

14
2

5

c

d

(iii ) A completion T of G that could
be obtained from the matching. Indeed,
MM (T ) = {a, d} with sMM (T ) = 1.

3
2

d

(iv ) This completion T of G is a witness
for {a, b}  PWSMM (G).

Figure 9: Example of a 5-weighted partial tournament and completions relevant for possible
maximin winners.
Now consider sMM (x, Gx ) < n2 . We will reduce the problem of checking whether x 
PWMM (G) to that of finding a maximum-cardinality matching of an undirected unweighted
graph, which is known to be solvable in polynomial time (Edmonds, 1965). We want to
find a completion T  [Gx ] such that sMM (x, T )  sMM (y, T ) for all y  V \ {x}. In
other words, we want to complete the weights on edges between alternatives in V \ {x} in
such a balanced way so that x is still a winner. If there exists a y  V \ {x} such that
sMM (y, Gx ) > sMM (x, Gx ), then we already know that x 
/ PWMM (G). Otherwise,
each y  V \ {x} derives its maximin score from at least one particular edge (y, z) where
z  V \ {x, y} and w(y, z)  sMM (x, Gx ). Moreover, it is clear that in any completion, y
and z cannot both achieve a maximin score of less than sMM (x, Gx ) from edges (y, z) and
(z, y) at the same time. Let H = (VH , EH ) be an undirected and unweighted graph with
vertices
VH = V \ {x}  {{i, j}  V : i 6= j}
and edges
EH = {{i, {i, j}} : i  V \ {x}, j  V \ {i}, wx (i, j)  sMM (x, Gx )}.
In this way, if i is matched to {i, j} in H, then i derives a maximin score of less than or
equal to sMM (x, Gx ) from his comparison with j. Clearly, the size of H is polynomial
519

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

in the size of G. We show that x  PWMM (G) if and only if there exists a matching of
cardinality |V |  1 in H.
() First, assume that x  PWMM (G). Then there exists a completion T = (V, w0 )
of Gx in which the maximin score of each y  V \ {x} is at most sMM (x, Gx ) < n2 .
If alternative i derives its maximin score from a comparison with j 6= i  V \ {x}, i.e.,
sMM (i, T ) = w0 (i, j), then j cannot derive its maximin score from a comparison with i
because w0 (j, i)  n  sMM (x, Gx ) implies w0 (j, i) > n2 . Therefore, in H, each i  VH  V
can be matched to a vertex {i, j}  VH such that {i, j} is not matched to any other vertex
in VH . The resulting matching in H has cardinality |V |  1.
() Now, assume that there exists a matching M of cardinality |V |  1 in H. Then,
each i  V \ {x} has to be matched to an {i, j} where w(i, j)  sMM (x, Gx ). Consider a
completion T = (V, w0 )  [Gx ] in which for all (i, j)  V  V such that {i, {i, j}}  M , we
set w0 (i, j) = w(i, j) and w0 (j, i) = n  w(i, j). Moreover, the weights of all other edges in T
are set by any arbitrary completion of edges in Gx . Clearly, T is a proper completion of
Gx and therefore of G. In T , the maximin score of each y  V \ {x} is less than or equal
to the maximin score of x. Therefore x  MM (T ) which implies that x  PWMM (G).
Next, we show that PWSMM can be solved in polynomial time. The proof proceeds
by identifying the maximin values that could potentially be achieved simultaneously by
all elements of the set in question, and solving the problem for each of these values using
similar techniques as in the proof of Theorem 11. Only a polynomially bounded number of
problems need to be considered.
Theorem 12. PWSMM can be solved in polynomial time.
Proof. Let G = (V, w) be a partial n-weighted tournament and X  V . We give a
polynomial-time algorithm for checking whether X  PWSMM (G).
If X  PWSMM (G) there must be a completion T  [G] and s  {0, . . . , n} such that
sMM (x, T ) = s for all x  X and sMM (i, T ) < s for all y  V \ X.
First, we note that if s > n  w(j, i) for some i  X, j  V or s  w(i, j) for some
i
/ X, j  V , then X 6 PWSMM (G). Therefore, we assume that
n  w(j, i)  s for all i  X, j  V and
w(i, j) < s for all i 
/ X, j  V.
We treat the cases s > n2 , s = n2 , and s <

n
2

separately.

Case 1: s > n2 . Then, X  PWSMM only if X is a singleton, and for each x  V ,
whether {x}  PWSMM with maximin score s can be checked easily.
Case 2: s = n2 . With the assumptions above, we can define G0 = (V, w0 ) as an extension
of GX with w0 (i, j) = w0 (j, i) = n2 = s for all i, j  X. Note that in every completion T
of G0 , sMM (i, T ) = s for all i  X and that X  PWSMM (G) with maximin score n2 in the
corresponding completion if and only if X  PWSMM (G0 ) with the same maximin score in
the respective completion.
520

fiPossible and Necessary Winners of Partial Tournaments

In addition, we need to check whether alternatives not in X can be forced to have a
strictly smaller maximin score than n2 . To this end, construct an unweighted undirected
bipartite graph H = (VH , EH ) with vertices
VH = V  {{i, j}  V : i 6= j}
and edges
EH = {{i, {i, j}} : i  V \ X, j  V \ {i}, w(i, j) < s }.
We claim that X  PWSMM (G0 ) with a maximin score of s = n2 in the corresponding
completion if and only if there is a maximum-cardinality matching of size |V \ X| in H.
() Let T = (V, w00 ) a completion of G0 (and thereby of G) in which X is the set of
maximin winners with sMM (i, T ) = s = n2 for all i  X. For each i 
/ X, there needs to
be a j 6= i with w00 (i, j) < s . Collecting {i, {i, j}} for each such pair gives a matching of
size |V \ X| in H which is maximum since each vertex on one side of the bipartite graph is
contained in it.
() For the other direction, assume that there is a maximum matching of size |V \ X|.
We construct a completion T = (V, w00 ) of G0 such that X is the set of maximin winners.
Note that every i  (VH  V ) \ X has to be contained in an edge {i, {i, j}} in the matching.
For each such edge, let w00 (i, j) = w0 (i, j) < s and w00 (j, i) = n  w00 (i, j), implying that
sMM (i, T ) < s . Otherwise, T is an arbitrary completion of G.
Together, we have that sMM (i, T ) = s for all i  X and sMM (i, T ) < s for all i 
/ X.
Figure 10 illustrates the procedure for a 2-weighted tournament and the set X = {a}.
Case 3: s < n2 . For a given s , we construct an undirected unweighted bipartite

s ). Let V be as before and
graph H s = (VH , EH
H
[
[
s
EH
=
{{i, {i, j}} : w(i, j)  s  n  w(j, i)} 
{{i, {i, j}} : w(i, j)  s  1}.
iX
j6=i

iV
j6=i

We claim that X is in PWSMM (G) with a maximin score of s in the corresponding

completion if and only if there is a maximum-cardinality matching of size |V | in H s .
() Let T = (V, w0 ) a completion of G in which X is the set of maximin winners with
the maximum maximin score s . For every vertex i  V , there has to be an j 6= i such that
w0 (i, j) accounts for the maximin score of i. Also, since s < n2 , it cannot be the case that j
also derives its maximin score from w0 (j, i). Therefore, the set of all such pairs {i, {i, j}} is
a valid matching of size |V |. It is obviously maximal.
() For the other direction, assume that there is a maximum matching of size |V |. Note
that every i  (VH  V ) is matched and define j(i)  V such that the edge {i, {i, j(i)} is
contained in the matching. We construct a completion T = (V, w0 ) in which X is the set of
maximin winners. To this end, define
w0 (i, j(i)) = s and w0 (j(i), i) = n  s for i  X, and
w0 (i, j(i)) = s  1 and w0 (j(i), i) = n  (s  1) for i  V \ X.
As long as there are unspecified edges (i, j) in the completion, define
w0 (i, j) = max{w(i, j), s } and w0 (j, i) = n  w(i, j) if i  X, j  V , and
w0 (i, j) = max{w(i, j), s  1} and w0 (j, i) = n  w(i, j) otherwise.
521

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Note that T is a proper completion of G. Now, we have sMM (i, T ) = s for all i  X and
sMM (i, T ) < s for all i 
/ X. This completes Case 3.


It remains to be shown that only a limited number of possible s (and thereby H s ) have
to be considered. In contrast to the proof of Theorem 9, we cannot employ a binary search
method since there is no clear cut between a feasible and an infeasible integer interval.
However, we can see that when s is gradually incremented from 0 to n2  1, whether an
s or not changes at most twice due to the definition of
edge {i, {i, j}} is contained in EH

s . This partitions the integer interval I = [0, n  1] of possible s into a finite number
EH
2

of subintervals Ik such that all s within a single Ik induce the same H s . Therefore, it is
sufficient to only consider one s per Ik and for this we choose the minimum. The set S 
of possibly relevant target scores s is then given by
[
[
[
S =
min Ik 
{w(i, j), n  w(j, i) + 1} 
{w(i, j) + 1}.
iX
j6=i

k

iV
j6=i

The size of S  is obviously bounded by 3n2 .
All cases can be handled in polynomial time.
a

a

b
1

1

1

1

1

b

2

11

1

1

1

c

1

c

d

(ii ) An extension G0 reinforcing {a}.

(i ) A partial 2-weighted tournament G.

b
c
d

d

{a, b}
{a, c}
{a, d}
{b, c}
{b, d}
{c, d}

a

b

2
1

1
11

2
1

1

c

2

d

(iv ) A completion of G0 and G with
MM (G0 ) = {a}

(iii ) The constructed undirected bipartite graph H. Thick edges indicate a
maximum-cardinality matching.

Figure 10: Illustration of the algorithm for checking whether a singleton {a} is contained
in PWSMM (G) for a partial 2-weighted tournament G. It is obvious that a cannot have a
maximin score of 2 in any completion or be the sole maximin winner with a maximin score
of 0. Therefore, we check the for the case s = n2 = 1.
Lastly, we consider NWMM , for which we apply a similar technique as for NWBO : to
see whether x  NWMM (G), we start from the graph Gx and check whether some other
alternative can achieve a higher maximin score than x in a completion of Gx .
522

fiPossible and Necessary Winners of Partial Tournaments

Theorem 13. NWMM can be solved in polynomial time.
Proof. We show how to check whether x  NWMM (G) for a partial n-weighted tournament
G = (V, w). The maximin score of x in Gx is the worst case maximin score of x among
all proper completions of G.
For each y  V \ {x}, the maximin score of y in Gy is the best possible maximin score
of y among the completions of G. If the maximin score of each y in the corresponding
Gy is not more than the maximin score of x in Gx , then x  NWMM (G), otherwise
x
/ NWMM (G).
5.3 Ranked Pairs
The method of ranked pairs (RP ) is the only resolute solution concept considered in this
article. Given a weighted tournament T = (V, w), it returns the unique undominated
alternative of a transitive tournament T 0 on V constructed in the following manner. First
order the (directed) edges of T in decreasing order of weight, breaking ties according to
some exogenously given tie-breaking rule. Then start with an empty graph T 0 and consider
the edges one by one according to this ordering. If the current edge can be added to T 0
without creating a cycle, then do so; otherwise discard the edge.11
As an example, consider the partial 5-weighted tournament depicted in Figure 11(i ),
which is a slightly modified version of the tournament considered in Figures 8 and 9. It is
easy to see that a is the ranked pairs winner in all completions of Ga , and likewise b is the
ranked pairs winner in all completions of Gb . On the other hand, there is no completion
that has c as a ranked pairs winner. Whether d is a possible ranked pairs winner depends
on the tie-breaking rule that is used, and in particular on how the tie-breaking rule ranks
edges (d, c) and (b, d): alternative d is a possible ranked pairs winner if and only if (d, c) is
considered before (b, d) (see Figure 11(iv )). Since RP is resolute, we have (assuming that
the tie-breaking rule ranks (d, c) over (b, d))
PWRP (G) = {a, b, d}
NWRP (G) = 
PWSRP (G) = {{a}, {b}, {d}}.
It is readily appreciated that the winner determination problem for RP is computationally tractable. The possible winner problem, on the other hand, turns out to be NP-hard.
This also shows that tractability of the winner determination problem, while necessary for
tractability of PW, is not generally sufficient.
Theorem 14. PWRP is NP-complete.
Proof. We will work with an alternative characterization of ranked pairs winners that was
introduced by Zavist and Tideman (1989). For a given a weighted tournament T = (V, w)
11. The variant of ranked pairs originally proposed by Tideman (1987), which was also used by Xia and
Conitzer (2011), instead chooses a set of alternatives, containing any alternative that is selected by the
above procedure for some way of breaking ties among edges with equal weight. We do not consider
this irresolute version of ranked pairs because winner determination for this variant is NP-hard (Brill
& Fischer, 2012). As mentioned in Section 3, this immediately implies that all problems concerning
possible or necessary winners are NP-hard as well.

523

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

1
1

a

4
1

a

b

1

5

1

5

5

4

5

2
1
2

c

4

1
4

b

a

5

5

4
1

14

4
3
2

b
5

3

5

d

(ii ) A completion of G with ranked pairs
winner a.

1
5

c

3
2

c

d

(i ) A partial 5-weighted tournament G.

a

b

2

c

d

(iii ) A completion of G with ranked
pairs winner b.

1
4

d

(iv ) A completion of G with ranked pairs
winner d. Here, we assume that edge
(d, c) is considered before edge (b, d).

Figure 11: Example of a 5-weighted partial tournament and completions relevant for possible
ranked pairs winners. For each completion, the transitive tournament constructed by the
ranked pairs procedure is indicated by the thick edges.
and a given tie-breaking rule, let  denote the order in which edges are considered in the
ranked pairs procedure. That is, (x, y)  (u, v) if and only if either w(x, y) > w(u, v) or
w(x, y) = w(u, v) and the tie-breaking rule ranks (x, y) higher than (u, v). Given a ranking
L of V , and two alternatives a and b, we say that a attains b through L if there exists
a sequence of distinct alternatives a1 , a2 , . . . , at , where t  2, such that a1 = a, at = b,
ai L ai+1 , and
(ai , ai+1 )  (b, a) for all i with 1  i < t.
In this case, we will say that a attains b via (a1 , a2 , . . . , at ). A ranking L is called a stack if
for any pair of alternatives a and b it holds that a L b implies that a attains b through L.
Zavist and Tideman (1989) have shown that an alternative is the ranked pairs winner if and
only if it is the top element of a stack.12 Intuitively, the defining properties of a stack L
ensure that for all pairs (a, b) of alternatives with a L b, by the point in time the edge (b, a)
is considered, it will be discarded because it would create a cycle.
Membership of PWRP in NP is obvious, as for a given completion and a given tiebreaking rule, the ranked pairs winner can be found efficiently.
12. The characterization by Zavist and Tideman (1989) addresses the irresolute version of ranked pairs
discussed in the previous footnote. Our adaptation to the resolute version of ranked pairs is a straightforward corollary.

524

fiPossible and Necessary Winners of Partial Tournaments

d

p01

p02

p1

p1

p2

p2

p01

p02

c1

c2

c3

Figure 12: The partial 8-weighted tournament G for the Boolean formula  = {p1 , p2 } 
{p1 , p2 }  {p1 , p2 }. Double-shafted arrows represent heavy edges, standard arrows represent
medium edges, dashed arrows represent light edges, and dotted lines represent partial edges.
For all pairs (a, b) that are not connected by an arrow, we have w (x, y) = w (y, x) = 4.

NP-hardness can be shown by a reduction from Sat. Our construction is based on the
proof of Theorem 1 by Brill and Fischer (2012). For a Boolean formula  in conjunctive
normal-form with a set C of clauses and set P of propositional variables, we construct a
partial 8-weighted tournament G = (V , w ) as follows. For each variable p  P , V
contains two literal alternatives p and p and two auxiliary alternatives p0 and p0 . For
each clause c  C, there is an alternative c. Finally, there is an alternative d for which
membership in PWRP (G ) is to be decided.
In order to conveniently describe the weight function w , let us introduce the following
terminology. For two alternatives x, y  V , say that there is a heavy edge from x to y if
w (x, y) = 8 (and therefore w (y, x) = 0). A medium edge from x to y means w (x, y) = 6
and w (y, x) = 2, and a light edge from x to y means w (x, y) = 5 and w (y, x) = 3.
Finally, a partial edge between x and y means w (x, y) = w (y, x) = 1.
We are now ready to define w . For each variable p  P , we have heavy edges from
p to p0 and from p to p0 , and partial edges between p and p0 and between p and p0 . For
each clause c  C, we have a medium edge from c to d and a heavy edge from the literal
alternative ` (with ` = p or ` = p for some p  P ) to c if the corresponding literal ` appears
in clause c. Finally, we have heavy edges from d to all auxiliary alternatives and light edges
from d to all literal alternatives. For all pairs x, y for which no edge has been specified, we
define w (x, y) = w (y, x) = 4. An example is shown in Figure 12. Observe that the only
pairs of alternatives for which w is not fully specified are those pairs that are connected
by a partial edge.
525

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

d

d

`0

`0
`

`

`

`

`0

`0

c

c
0

(ii ) Sc = (d, `0 , `, c)

(i ) Sc = (d, ` , `, `0 , `, c)

Figure 13: Two possibilities for the sequence Sc .
We will now show that alternative d is a possible ranked pairs winner in G if and only
if  is satisfiable. Intuitively, choosing a completion such that (p0 , p)  (p0 , p) corresponds
to setting the variable p to true.
() First assume that d  PWRP and let T  [G ] be a completion of G with
RP (T ) = {d}. Consider a stack L with top element d and an alternative c corresponding to
a clause in . Since L is a stack and d L c, d attains c though L via some sequence Sc . (If
d attains c via several sequences, fix one of them arbitrarily.) Since w (c, d) = 6, all edges
in the sequence Sc must be heavy, medium, or appropriate completions of partial edges.
Therefore, Sc must have one of the following two forms (depicted in Figure 13):
0

Sc = (d, ` , `, `0 , `, c)

or Sc = (d, `0 , `, c),
0

where ` is some literal. The former is in fact not possible because w (`, ` ) = 8 implies
0
that ` does not attain ` through L. Therefore, each Sc is of the form Sc = (d, `0 , `, c) for
some literal `.
Now define assignment  by setting to true all literals that are contained in one of the
sequences Sc , c  C. We claim that  is a satisfying assignment for .
In order to show that  is well-defined, suppose there exists a literal ` such that both `
and ` are set to true under . This implies that there exist c1 and c2 such that d attains c1
0
0
via Sc1 = (d, `0 , `, c1 ) and d attains c2 via Sc2 = (d, ` , `, c2 ). In particular, `0 L ` and ` L `.
0
0
However, it is easily verified that any stack ranks ` higher than ` (because w (`, ` ) = 8)
0
and ` higher than `0 (because w (`, `0 ) = 8). Thus, there is an L-cycle ` L ` L ` L `0 L `,
contradicting the assumption that L is a stack.
In order to show that  satisfies , consider an arbitrary clause c. As d attains c via
Sc = (d, `0 , `, c) and w (c, d) = 6, we have that w (`, yj )  6. By definition of w (, ), this
implies that literal ` appears in clause c. Furthermore, ` is set to true under  because ` is
contained in Sc .
() For the other direction, assume that  is satisfiable and let  be a satisfying
assignment. We use  to construct a completion T = (V , w )  [G ] with RP (T ) = {d}.
526

fiPossible and Necessary Winners of Partial Tournaments

On partial edges, the weight function w is defined as follows. If literal ` is set to true
under , let w (`0 , `) = 7 and w (`, `0 ) = 1. Otherwise, let w (`0 , `) = 1 and w (`, `0 ) = 7.
We now show that RP (T ) = {d} by going through the procedure that constructs the
transitive tournament T 0 , starting with the empty tournament on V .13 First, the set of
all edges with weight 7 or more will be added, because there are no cycles among those
edges. This set consists of the heavy edges and the (previously) partial edges. Next, the
medium edges are considered. All these edges are of the form (c, d) where c is an alternative
corresponding to a clause. Since  is a satisfying assignment, T 0 already contains paths from
d to every clause alternative c. Therefore, all of the edges (c, d) with c  C will be discarded.
In the next step, all light edges (i.e., edges of weight 5) are considered. All of those edges
are of the form (d, `) for a literal `. Therefore, all of those edges can be added to T 0 without
creating a cycle (d has no ingoing edges in T 0 ). After adding the light edges, d has an
outgoing edge to all literal alternatives ` and to all auxiliary alternatives `0 . Furthermore,
all edges from a clause candidate c to d have already been discarded. Thus, d is the unique
undominated alternative in T 0 , i.e., RP (T ) = {d}.
Since the ranked pairs method is resolute, hardness of PWSRP follows immediately.
Corollary 2. PWSRP is NP-complete.
Computing necessary ranked pairs winners turns out to be coNP-complete. This is again
somewhat surprising, as computing necessary winners is often considerably easier than computing possible winners, for both partial tournaments and partial preference profiles (Xia
& Conitzer, 2011).
Theorem 15. NWRP is coNP-complete.
Proof. Membership in coNP is again obvious. For hardness, we give a reduction from
UnSat that is a slight variation of the reduction in the proof of Theorem 14. Let G0 be
the partial 8-weighted tournament that results form G by adding a new alternative d
which has heavy edges to all alternatives in V except d. Furthermore, there is a light edge
from d to d . We show that d is a necessary ranked pairs winner in G0 if and only if  is
unsatisfiable.
() Assume for contradiction that NWRP (G0 ) = {d } and  is satisfiable. Let  be
a satisfying assignment and define the tournament T = (V  {d }, w0 )  [G0 ] such that
w0 coincides with w (as defined in the proof of Theorem 14) for all partial edges. By the
same arguments as in the proof of Theorem 14, it follows that d does not have any ingoing
edges in the tournament T 0 constructed by the ranked pairs procedure. At the point in
time when the edge (d, d ) is considered, it will be added to T 0 . This yields RP (T ) = {d},
contradicting the assumption that NWRP (G0 ) = {d }.
() Assume for contradiction that  is unsatisfiable and there exists a completion
T  [G0 ] with RP (T ) = {x} 6= {d }. It follows that x = d. (All alternatives in V \ {d}
have an incoming heavy edge (from d ), and all heavy edges will be added because there
is no cycle among them.) By the same argument as in the proof of Theorem 14, it follows
that  is satisfiable, contradicting our assumption.
13. The following arguments are independent of the choice of a particular tie-breaking rule.

527

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

6. Possible Winning Subsets
We considered the problem whether a subset of alternatives is a possible winning set (PWS).
In addition, it may be of interest whether a subset of alternatives is among the winners in
some completion, i.e., whether there is a completion for which all the alternatives in the
subset (and possibly other alternatives) are in the choice set. We will refer to the latter
problem as PWSS (possible winning subset). We note that an oracle to solve PWSS can
be used to solve PW. If we want to check whether i  PW (G), we simply check whether
{i}  PWSS (G). We are not aware of any direct algorithmic relation between the problems
PWS and PWSS.
We examined the computational complexity of PWSSS for most of the solution concepts
considered in this article. Since the arguments are often very similar to proofs already given,
we briefly summarize our findings here.
COND As there is never more than one Condorcet winner, every X  PWSSCOND (G) is a
singleton and the problem reduces to computing PWCOND (G).
CNL For PWSSCNL , note that for a nonempty set X  V , X 
/ PWSSCNL (G) if and
1
only if |V | > 1 and every completion of G
has a Condorcet winner which is
furthermore located in X. Therefore,


or
|V | = 1
1
X  PWSSCNL (G) if and only if
  PWSCOND (G )
or


1
PWCOND (G ) \ X 6= .
CO Just as for the other problems, polynomial computability of PWSSCO follows from
the corresponding result for PWSSBO .
TC The problem PWSSTC can be solved in polynomial time. In fact, it can be shown
that for a partial tournament G and a set of alternatives X, it is sufficient to check
whether X  PWTC (G) (with an additional argument if |X| = 2) in order to
determine whether X  PWSSTC (G).
BO The argument and algorithm for checking whether X  PWSSBO (G) is almost
the same as the argument for PWSBO in Theorem 9. The only difference is that
sBO (v, T ) may now be up to s instead of s  1 for v  V \ X in T  [G].
Consequently, we only need to redefine bs (v) to s  sBO (v, G) for all v  V \ X.
MM The proof for efficient computability of checking whether X  PWSMM (G) can be
modified to accommodate PWSSMM . More precisely, the second basic assumption
is now w(i, j)  s for i 
/ X, j  V . For s = n2 , it is sufficient to check whether G0
is an extension of G. For s < n2 , edges {i, {i, j}} with i  X are now contained in
s if w(i, j)  s . The rest of the argument can be adjusted appropriately. For
EH
s > n2 , nothing changes.
RP Since PWRP is NP-complete (Theorem 14), we get NP-hardness of PWSSRP by
the oracle argument above. Since membership in NP is obvious, the problem is
NP-complete.
528

fiPossible and Necessary Winners of Partial Tournaments

The complexity of PWSSUC is left open. Minor modification of our hardness construction for PWSUC will not do the trick. In that argument, the crucial question was whether
there is a completion that excludes certain alternatives from the choice set. This does not
help for PWSSUC .

7. Discussion
The problem of computing possible and necessary winners for partial preference profiles has
recently received a lot of attention. In this article, we have investigated this problem in a
setting where partially specified (weighted or unweighted) tournaments instead of profiles
are given as input. We have summarized our findings in Table 1.
A key conclusion is that computational problems for partial tournaments can be significantly easier than their counterparts for partial profiles. For example, possible Borda or
maximin winners can be found efficiently for partial tournaments, whereas the corresponding problems for partial profiles are NP-complete (Xia & Conitzer, 2011). Furthermore,
computing possible and necessary Copeland winners is NP-hard and coNP-hard respectively for partial preference profiles (Xia & Conitzer, 2011). In contrast, we showed that
even PWSCO can be solved in polynomial time for partial tournaments. As for negative
(hardness) results, they can be tempered by the fact that when some parameters of the
problem are bounded by a constant, some of these hard problems may be solved in polynomial time. In particular, Yang and Guo (2013) have shown that PWSUC is polynomial-time
solvable if the size of the given subset X is bounded by a constant.14
While tractability of the winner determination problem is necessary for tractability of
the possible or necessary winners problems, the results for ranked pairs in Section 5.3 show
that it is not sufficient. We further considered the problem of deciding whether a given
subset of alternatives equals the winning set for some completion of the partial tournament.
The results for the uncovered set in Section 4.4 imply that this problem cannot be reduced
in polynomial time to the computation of possible or necessary winners; whether a reduction
exists in the opposite direction remains an open problem.
Partial tournaments have also been studied in their own right, independent of their
possible completions. For instance, Peris and Subiza (1999) and Dutta and Laslier (1999)
have generalized several solution concepts on tournaments to partial tournaments. The
common point with the approach we follow here is the nature of the input, namely, partial tournaments. However, Peris and Subiza (1999) and Dutta and Laslier (1999) define
solution concepts for partial tournaments by directly generalizing the usual definition on
tournaments. This is in contrast to our definitions, which are based on the completions of
the input partial tournament. The notion of possible winners suggests a canonical way to
generalize any solution concept defined on tournaments to partial tournaments. This way
of extending tournament solutions to partial tournaments is referred to as the conservative
extension and inherits various axiomatic properties which the original tournament solutions satisfies for tournaments (Brandt et al., 2014). The positive computational results in
this article are an indication that this may be a promising approach.
14. Yang and Guo (2013) also give hardness and fixed-parameter tractability results for a generalization of
the Banks set to partial tournaments.

529

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

We also highlight another way of viewing algorithmic results concerning possible and
necessary winners. There is a burgeoning literature in computational social choice which
deals with the problem of manipulation and control in voting (Bartholdi, III, Tovey, & Trick,
1989, 1992; Faliszewski & Procaccia, 2010). If a given alternative is already a necessary winner, then there is no need to invest effort into influencing the remaining comparisons or votes
to make it winning. Moreover, our results also have implications on a partial tournament
version of the coalitional manipulation problem: coalitional tournament manipulation, in
its constructive version, is defined as follows. Given a partial tournament (V, E), a subset X  V , and a distinguished alternative x, is there a way to complete the missing edges
in X  X such that x is a winner? Informally, do the players in X have a way of fixing the
winners of the matches among themselves so as to make x win?
Constructive coalitional tournament manipulation is polynomial-time solvable whenever
PW is. Likewise, the destructive version of coalitional tournament manipulation (is there a
way to complete the edges within X such that candidate x is not winning?) is polynomial
whenever NW is.
Regarding future work, we have not yet examined the complexity of computing possible
and necessary winners for some attractive tournament solutions such as the minimal covering
set and weighted versions of the top cycle and the uncovered set (De Donder, Le Breton, &
Truchon, 2000).15
An interesting related question that goes beyond the computation of possible and necessary winners is the following: when the winners are not yet fully determined, which unknown
comparisons need to be learned, which pairs of candidates do we have to compare, or which
matches should be played? This problem can be seen as a tournament-based version of
the preference elicitation problem (Conitzer & Sandholm, 2002; Ding & Lin, 2013; Walsh,
2008). While the standard version of the problem looks for minimal sets of queries to voters
about pairwise preferences between candidates, in the tournament version a query bears on
a pair of candidates and its output is an edge between these two candidates, in one direction
or the other. Procaccia (2008) considers a similar question for COND. The construction of
a policy tree defining an optimal protocol minimizing the number of questions to be asked
or the number of matches to be played, in the worst case or on average, is an even more
challenging issue that we leave for future research.

Acknowledgments
Previous versions of this paper have been presented at the 11th International Conference
on Autonomous Agents and Multi-Agent Systems (AAMAS 2012) and at the 4th International Workshop on Computational Social Choice (COMSOC 2012). We are grateful to Felix
Brandt for extensive discussions and useful advice. We also thank Gerhard Woeginger for
hints towards improving our previous pseudo-polynomial time algorithms for PWSBO and
PWSMM and various anonymous reviewers, whose comments greatly helped us to improve
our paper. This material is based on work supported by the Deutsche Forschungsgemeinschaft under grants BR 2312/9-1, BR 2312/10-1, and FI 1664/1-1. Haris Aziz is supported
by the Australian Government as represented by the Department of Broadband, Commu15. Brill, Freeman, and Conitzer (2016) have recently shown that computing possible and necessary winners
for the bipartisan set (Laffond, Laslier, & Le Breton, 1993) is intractable.

530

fiPossible and Necessary Winners of Partial Tournaments

nications and the Digital Economy and the Australian Research Council through the ICT
Centre of Excellence program. Markus Brill has been supported by a Feodor Lynen research
fellowship of the Alexander von Humboldt Foundation and by the ERC under Starting Grant
639945 (ACCORD). Jerome Lang has been supported by the ANR project CoCoRICoCoDec. Paul Harrenstein has been supported by the ERC under Advanced Grant 291528
(RACE).

References
Aziz, H., Gaspers, S., Mackenzie, S., Mattei, N., Stursberg, P., & Walsh, T. (2014). Fixing
a balanced knockout tournament. In Proceedings of the 28th AAAI Conference on
Artificial Intelligence (pp. 552558). AAAI Press.
Aziz, H., Walsh, T., & Xia, L. (2015). Possible and necessary allocations via sequential
mechanisms. In Proceedings of the 23rd International Joint Conference on Artificial
Intelligence (pp. 468474).
Bachrach, Y., Betzler, N., & Faliszewski, P. (2010). Probabilistic possible winner determination. In Proceedings of the 24th AAAI Conference on Artificial Intelligence (pp.
697702). AAAI Press.
Bartholdi, III, J., Tovey, C. A., & Trick, M. A. (1989). The computational difficulty of
manipulating an election. Social Choice and Welfare, 6 (3), 227241.
Bartholdi, III, J., Tovey, C. A., & Trick, M. A. (1992). How hard is it to control an election?
Mathematical and Computer Modelling, 16 (89), 2740.
Baumeister, D., Faliszewski, P., Lang, J., & Rothe, J. (2012). Campaigns for lazy voters:
truncated ballots. In Proceedings of the 11th International Conference on Autonomous
Agents and Multi-Agent Systems (pp. 577584). IFAAMAS.
Baumeister, D., & Rothe, J. (2010). Taking the final step to a full dichotomy of the possible
winner problem in pure scoring rules. In Proceedings of the 19th European Conference
on Artificial Intelligence (pp. 10191020).
Betzler, N., & Dorn, B. (2010). Towards a dichotomy for the possible winner problem in
elections based on scoring rules. Journal of Computer and System Sciences, 76 (8),
812836.
Betzler, N., Hemmann, S., & Niedermeier, R. (2009). A multivariate complexity analysis
of determining possible winners given incomplete votes. In Proceedings of the 21st
International Joint Conference on Artificial Intelligence (pp. 5358). AAAI Press.
Brandt, F., Brill, M., & Harrenstein, P. (2014). Extending tournament solutions. In
Proceedings of the 28th AAAI Conference on Artificial Intelligence (pp. 580586).
AAAI Press.
Brandt, F., Brill, M., & Harrenstein, P. (2016). Tournament solutions. In F. Brandt,
V. Conitzer, U. Endriss, J. Lang, & A. D. Procaccia (Eds.), Handbook of Computational Social Choice (chap. 3). Cambridge University Press. (Forthcoming)
531

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Brill, M., & Fischer, F. (2012). The price of neutrality for the ranked pairs method. In
Proceedings of the 26th AAAI Conference on Artificial Intelligence (pp. 12991305).
AAAI Press.
Brill, M., Freeman, R., & Conitzer, V. (2016). Computing possible and necessary equilibrium actions (and bipartisan set winners). In Proceedings of the 30th AAAI Conference
on Artificial Intelligence. AAAI Press. (Forthcoming)
Chevaleyre, Y., Lang, J., Maudet, N., & Monnot, J. (2011). Compilation and communication protocols for voting rules with a dynamic set of candidates. In Proceedings of the
13h Conference on Theoretical Aspects of Rationality and Knowledge (pp. 153160).
Chevaleyre, Y., Lang, J., Maudet, N., Monnot, J., & Xia, L. (2012). New candidates welcome! Possible winners with respect to the addition of new candidates. Mathematical
Social Sciences, 64 (1), 7488.
Conitzer, V., & Sandholm, T. (2002). Vote elicitation: Complexity and strategy-proofness.
In Proceedings of the 18th National Conference on Artificial Intelligence (pp. 392
397). AAAI Press.
Cook, W. J., Cunningham, W. H., Pulleyblank, W. R., & Schrijver, A. (1998). Combinatorial optimization. Wiley and Sons.
De Donder, P., Le Breton, M., & Truchon, M. (2000). Choosing from a weighted tournament. Mathematical Social Sciences, 40 (1), 85109.
Ding, N., & Lin, F. (2013). Voting with partial information: what questions to ask? In
Proceedings of the 12th International Conference on Autonomous Agents and MultiAgent Systems (pp. 12371238). IFAAMAS.
Dutta, B., & Laslier, J.-F. (1999). Comparison functions and choice correspondences. Social
Choice and Welfare, 16 (4), 513532.
Edmonds, J. (1965). Paths, trees and flowers. Canadian Journal of Mathematics, 17 ,
449467.
Faliszewski, P., & Procaccia, A. D. (2010). AIs war on manipulation: Are we winning? AI
Magazine, 31 (4), 5364.
Filmus, Y., & Oren, J. (2014). Efficient voting via the top-k elicitation scheme: a probabilistic approach. In Proceedings of the 15th ACM Conference on Economics and
Computation (pp. 295312). ACM Press.
Good, I. J. (1971). A note on Condorcet sets. Public Choice, 10 (1), 97101.
Hazon, N., Aumann, Y., Kraus, S., & Wooldridge, M. (2012). On the evaluation of election
outcomes under uncertainty. Artificial Intelligence, 189 , 118.
Kalech, M., Kraus, S., Kaminka, G. A., & Goldman, C. V. (2011). Practical voting rules
with partial information. Journal of Autonomous Agents and Multi-Agent Systems,
22 (1), 151182.

532

fiPossible and Necessary Winners of Partial Tournaments

Kern, W., & Paulusma, D. (2004). The computational complexity of the elimination
problem in generalized sports competitions. Discrete Optimization, 1 (2), 205214.
Konczak, K., & Lang, J. (2005). Voting procedures with incomplete preferences. In
Proceedings of the Multidisciplinary Workshop on Advances in Preference Handling
(pp. 124129).
Laffond, G., Laslier, J.-F., & Le Breton, M. (1993). The bipartisan set of a tournament
game. Games and Economic Behavior , 5 (1), 182201.
Lang, J., Pini, M. S., Rossi, F., Salvagnin, D., Venable, K. B., & Walsh, T. (2012). Winner
determination in voting trees with incomplete preferences and weighted votes. Journal
of Autonomous Agents and Multi-Agent Systems, 25 (1), 130157.
Laslier, J.-F. (1997). Tournament solutions and majority voting. Springer-Verlag.
Lu, T., & Boutilier, C. (2011). Vote elicitation with probabilistic preference models: Empirical estimation and cost tradeoffs. In Proceedings of the 2nd International Conference
on Algorithmic Decision Theory (pp. 135149). Springer-Verlag.
Lu, T., & Boutilier, C. (2013). Multiwinner social choice with incomplete preferences. In
Proceedings of the 23rd International Joint Conference on Artificial Intelligence (pp.
263270). AAAI Press.
Oren, J., Filmus, Y., & Boutilier, C. (2013). Efficient vote elicitation under candidate
uncertainty. In Proceedings of the 23rd International Joint Conference on Artificial
Intelligence (pp. 309316). AAAI Press.
Peris, J. E., & Subiza, B. (1999). Condorcet choice correspondences for weak tournaments.
Social Choice and Welfare, 16 (2), 217231.
Pini, M. S., Rossi, F., Venable, K. B., & Walsh, T. (2011). Possible and necessary winners
in voting trees: Majority graphs vs. profiles. In Proceedings of the 10th International
Conference on Autonomous Agents and Multi-Agent Systems (pp. 311318). IFAAMAS.
Procaccia, A. (2008). A note on the query complexity of the Condorcet winner. Information
Processing Letters, 108 (6), 390393.
Rastegari, B., Condon, A., Immorlica, N., & Leyton-Brown, K. (2013). Two-sided matching
with partial information. In Proceedings of the 14th ACM Conference on Electronic
Commerce (pp. 733750). ACM Press.
Schrijver, A. (2003). Combinatorial optimizationpolyhedra and efficiency. Springer.
Schwartz, B. L. (1966). Possible winners in partially completed tournaments. SIAM Review ,
8 (3), 302308.
Schwartz, T. (1986). The logic of collective choice. Columbia University Press.
Smith, J. H. (1973). Aggregation of preferences with variable electorate. Econometrica,
41 (6), 10271041.

533

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Tideman, T. N. (1987). Independence of clones as a criterion for voting rules. Social Choice
and Welfare, 4 (3), 185206.
Vu, T., Altman, A., & Shoham, Y. (2009). On the complexity of schedule control problems
for knockout tournaments. In Proceedings of the 8th International Conference on
Autonomous Agents and Multi-Agent Systems (pp. 225232). IFAAMAS.
Walsh, T. (2007). Uncertainty in preference elicitation and aggregation. In Proceedings of
the 22nd AAAI Conference on Artificial Intelligence (pp. 38). AAAI Press.
Walsh, T. (2008). Complexity of terminating preference elicitation. In Proceedings of the
7th International Conference on Autonomous Agents and Multi-Agent Systems (pp.
967974). IFAAMAS.
Xia, L., & Conitzer, V. (2011). Determining possible and necessary winners under common
voting rules given partial orders. Journal of Artificial Intelligence Research, 41 , 25
67.
Yang, Y., & Guo, J. (2013). Possible winner problems on partial tournaments: A parameterized study. In Proceedings of the 3rd International Conference on Algorithmic
Decision Theory (Vol. 8176, pp. 425439). Springer-Verlag.
Zavist, T. M., & Tideman, T. N. (1989). Complete independence of clones in the ranked
pairs rule. Social Choice and Welfare, 6 (2), 167173.

534

fi