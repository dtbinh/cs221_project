Journal Artificial Intelligence Research 14 (2001) 137-166

Submitted 9/00; published 4/01

Reasoning within Fuzzy Description Logics
Umberto Straccia

straccia@iei.pi.cnr.it

I.E.I - C.N.R., Via G. Moruzzi, 1
I-56124 Pisa (PI), ITALY

Abstract
Description Logics (DLs) suitable, well-known, logics managing structured
knowledge. allow reasoning individuals well defined concepts, i.e. set
individuals common properties. experience using DLs applications
shown many cases would extend capabilities. particular,
use context Multimedia Information Retrieval (MIR) leads convincement
DLs allow treatment inherent imprecision multimedia object
content representation retrieval.
paper present fuzzy extension ALC, combining Zadehs fuzzy logic
classical DL. particular, concepts becomes fuzzy and, thus, reasoning
imprecise concepts supported. define syntax, semantics, describe
properties present constraint propagation calculus reasoning it.

1. Introduction
representation uncertainty imprecision received considerable attention
Artificial Intelligence community attempt extend existing knowledge representation systems deal imperfect nature real world information (which likely
rule rather exception). impressive work carried last
decades, resulting number concepts investigated, number problems
identified number solutions developed (Bacchus, 1990; Dubois & Prade, 1996;
Kruse, Schwecke, & Heinsohn, 1991; Pearl, 1988).
knowledge representation formalisms, First-Order Logic (FOL)
basis: basic units individuals, properties, relationship
naturally capture way people encode knowledge. Unfortunately,
severely limited (i) ability represent uncertainty world due
lack knowledge real world fact estimated true e.g.
probability degree; (ii) ability represent inherently imprecise knowledge
indeed, concepts, hot, exact definition exists and, thus, fact
35 Celsius hot, rather true false, truth-value true
false.
last decade substantial amount work carried context
Description Logics (DLs).1 DLs logical reconstruction so-called frame-based
knowledge representation languages, aim providing simple well-established
Tarski-style declarative semantics capture meaning popular features
structured representation knowledge. main point DLs considered
1. Description Logics referred Terminological Logics, Concept Logics, KL-ONE-like
languages. web page description logic community found address http://dl.kr.org/dl.
c
2001
AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiStraccia

attractive logics knowledge based applications good compromise
expressive power computational complexity.
Nowadays, whole family knowledge representation systems build using DLs,
differ respect expressiveness, complexity completeness
algorithms, used building variety applications (Peltason,
1991; Brachman, 1992; Baader & Hollunder, 1991a; Horrocks, 1998).
Experience using DLs applications shown many cases would
extend representational reasoning capabilities them. particular, use
DLs context Multimedia Information Retrieval (MIR) points necessity
extending DLs capabilities allow treatment inherent imprecision
multimedia object representation retrieval (Meghini & Straccia, 1996; Meghini, Sebastiani, & Straccia, 1997, 1998). fact, classical DLs insufficient describing real
multimedia retrieval situations, retrieval usually yes-no question: (i)
representations multimedia objects content queries system (and logic)
access inherently imperfect; (ii) relevance multimedia object
query thus established limited degree. this, need logic
which, rather deciding tout court whether multimedia object satisfies query
not, able rank retrieved objects according strongly system believes
relevance query.
end, extend DLs fuzzy capabilities. choice fuzzy set theory
way endowing DL capability deal imprecision uncommon
(da Silva, Pereira, & Netto, 1994; Tresp & Molitor, 1998; Yen, 1991) motivated
semantics point view, fuzzy logics capture notion imprecise concept,
i.e. concept clear precise definition possible. Fuzzy concepts
play key role e.g. content descriptions multimedia objects (most humans
concepts imprecise). instance, context images, (semantic) content
image region r may described means fuzzy statement r
Ferrari establish sentence truth-value 0.8, i.e. r likely
Ferrari;
proof theoretical point view, exist well-known techniques reasoning fuzzy logics (Chen & Kundu, 1996; Lee, 1972; Xiachun, Yunfei, & Xuhua,
1995).
following present quite general fuzzy DL, sense based
DL ALC, significant expressive representative various DLs. allows
us adapt easily different DLs presented literature. Another important
point show additional expressive power impact
computational complexity point view. certainly important nice tradeoff computational complexity expressive power DLs contributes
popularity.
Note fuzzy extension management imprecise knowledge complementary DL extensions management uncertainty, e.g. probabilistic extension
(Heinsohn, 1994; Jager, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) exceptions shown Hollunder (1994) possibilistic DL considered. Even
138

fiReasoning within Fuzzy DLs

though probabilistic extensions enlarge applicability DLs address
issue reasoning individuals imprecise concepts, imprecise knowledge
uncertain knowledge orthogonal (Dubois & Prade, 1994). Moreover, reasoning
probabilistic framework generally harder task, computational point view,
relative non probabilistic case cases complete axiomatization missing
(Halpern, 1990; Roth, 1996). consequence, computational problems
addressed carefully (Koller et al., 1997).
proceed follows. following section first introduce ALC. Section 3
extend ALC fuzzy case discuss properties Section 4, Section 5
present constraint propagation calculus reasoning it. Section 6 concludes
presents topics research.

2. Quick Look ALC
specific DL extend fuzzy capabilities ALC, significant representative
DLs. first, introduce classical ALC, Section 3 fuzzy extension
ALC presented.
assume three alphabets symbols, called primitive concepts (denoted A), primitive roles (denoted R) individuals (denoted b).2
2.1 Concept Role
Concepts expressions collect properties, described means roles, set
individuals. FOL point view, concepts seen unary predicates, whereas
roles interpreted binary predicates.
concept (denoted C D) language ALC build primitive concepts
according following syntax rules:
C,

>|
|
A|
C u D|
C D|
C|
R.C|
R.C

(top concept)
(bottom concept)
(primitive concept)
(concept conjunction)
(concept disjunction)
(concept negation)
(universal quantification)
(existential quantification).

2.2 Interpretation
DLs clean, model-theoretic semantics, based notion interpretation.
interpretation pair = (I , ) consisting non empty set (called domain)
interpretation function mapping different individuals different elements
(called unique name assumption), primitive concepts subsets primitive
roles subsets . interpretation complex concepts defined usual:
2. work assume every metavariable optional subscript superscript.

139

fiStraccia

>I

(C u D)I
(C D)I
(C)I
(R.C)I
(R.C)I

=
=
=
=
=
=
=



C DI
C DI
\ C
{d : d0 .(d, d0 ) 6 RI d0 C }
{d : d0 .(d, d0 ) RI d0 C }.

Note concept C role R mapped equivalent open first-order
formula FC (x) FR (x, y), respectively:
F> (x) =

(1)

F (x) = F

(2)

FA (x) = A(x)

(3)

FR (x, y) = R(x, y)

(4)

FCuD (x) = FC (x) FD (x)

(5)

FCtD (x) = FC (x) FD (x)

(6)

FC (x) = FC (x)

(7)

FR.C (x) = y.FR (x, y) FC (y)

(8)

FR.C (x) = y.FR (x, y) FC (y),

(9)

F two formulae representing truth-value true false, respectively
(e.g. = p p F = p p, letter p).
Two concepts C said equivalent (denoted C D) C = DI
interpretations I. Note that, e.g. > ; C u (C D), (R.C)
(R.C).
2.3 Assertion
assertion (denoted ) expression type a:C (a C, instance
C), expression type (a, b):R ((a, b) R, (a, b) instance R).
instance, tom:Tall u Student asserts Tom tall student, whereas (tim, tom):Friend
asserts Tom friend Tim. primitive assertion either assertion
form a:A, primitive concept, assertion form (a, b):R.
semantics point view, interpretation satisfies a:C (resp. (a, b):R) iff aI C (resp.
(aI , bI ) RI ).
2.4 Terminological Axiom
terminological axiom (denoted ) either concept specialisation concept definition. concept specialisation expression form A<C, primitive
concept C concept. specialisation allows stating existence specialisation (more specific than) relation concepts. instance, Ferrari<SportCar u
140

fiReasoning within Fuzzy DLs

Ownedby.CarFanatic states Ferrari sport car owned car fanatic.
hand, concept definition expression form A: = C,
primitive concept C concept. concept definition allows stating
equivalence concepts. instance, Tennis: = SportKind u (HasSportTool.>) u
(HasSportTool.TennisRacket) states tennis identified kind sport
tennis racket sport tool. semantics point view, interpretation satisfies
concept specialisation A<C iff AI C . Similarly, interpretation satisfies concept
definition A: = C iff AI = C .
2.5 Knowledge Base, Entailment Subsumption
finite set K assertions terminological axioms called Knowledge Base (KB).
KA denote set assertions K, whereas KT denote set
terminological axioms K, called terminology. KB K purely assertional
KT = . Further, assume terminology KT concept appears
left hand side terminological axiom KT cyclic
definitions present KT .3
say interpretation satisfies (is model ) KB K iff satisfies
element K. KB K entails assertion (denoted K |= ) iff every model K
satisfies . Furthermore, let KT terminology let C, two concepts.
say subsumes C respect (w.r.t.) KT (denoted C vKT D) iff every
model KT , C DI holds.
problem determining whether K |= called entailment problem; problem determining whether C vKT called subsumption problem; problem
determining whether K satisfiable called satisfiability problem.
well known (Buchheit, Donini, & Schaerf, 1993a; Donini, Lenzerini, Nardi, &
Schaerf, 1994; Nebel, 1990) ALC
K |= (a, b):R iff (a, b):R K
K |= a:C iff K {a:C} satisfiable
C v iff a:C |= a:D, new
0

C vKT iff C v

0

(10)
(11)
(12)
(13)

C 0 D0 build C expanding terminology KT KT00
substituting every primitive concept occurring C D, defined KT00 ,
defining term KT00 . expansion KB K works follows (Nebel, 1990).
1. Elimination concept specialisation: concept specialisation A<C KT replaced concept definition A: = C u , new primitive concept.
stands absent part definition A. Let KT0 terminology,
obtained replacing concept specialisation concept definitions.
3. say directly uses primitive concept B KT , KT left
hand side B occurs right hand side . Let uses transitive closure relation
directly uses KT . KT cyclic iff uses KT .

141

fiStraccia

2. Expansion KT0 : every defined concept (i.e. first argument concept definition)
occurs defining term concept definition (i.e. second argument
concept definition) substituted defining term. process iterated
remain undefined concepts second arguments concept definitions.
yields terminology KT00 .
3. Expansion KA : every primitive concept occurring KA defined KT00
0 .
substituted defining term KT00 . yields KA
0 |= 0 , 0 obtained
transformation nice property K |= iff KA
replacing every primitive concept occurring , defined KT00 , defining
term KT00 . allows us restrict attention purely assertional KBs only,
worth noting expansion process exponential (Nebel, 1988).
(10)(13), follows problems reduced satisfiability
problem. exists well known technique based constraint propagation solving
problem (Schmidt-Schau & Smolka, 1991; Buchheit, Donini, & Schaerf, 1993b; Donini
et al., 1994).
conclude example.

Example 1 Consider following terminology KT .
SportKind
<
SportTool
<
IndividualSport <
TeamSport
<
Basketball
<
TennisRacket
<
Basket
:=

Tennis

>
>
SportKind
SportKind
SportTool
SportTool
SportKindu
(KindOfSport.>)u
(KindOfSport.TeamSport)u
(HasSportTool.>)u
(HasSportTool.Basketball)
: = SportKindu
(KindOfSport.>)u
(KindOfSport.IndividualSport)u
(HasSportTool.>)u
(HasSportTool.TennisRacket)

Suppose two video sequences v1, v2, basket tennis, respectively. may represent semantic content
Kv1 = {v1:Video u About.Basket}
Kv2 = {v2:Video u About.Tennis}.
Consider K = KT Kv1 Kv2 . interested retrieving videos sport, may
query K query concept Q = Video u About.SportKind answer
list containing v1 v2, K |= v1:Q K |= v2:Q hold.
142

fiReasoning within Fuzzy DLs

hand, looking individual sport videos, then, given query
concept Q0 = Video u About.KindOfSport.IndividualSport, follows video v2
retrieved. fact, K|=
6 v1:Q0 K |= v2:Q0 hold.
2

3. Fuzzy DL
fuzzy extension directly relates Zadehs work fuzzy sets (Zadeh, 1965). fuzzy set
respect universe U characterised membership function : U [0, 1],
assigning S-membership degree, (u), element u U . (u) gives us
estimation belonging u S. Typically, (u) = 1 u definitely belongs
S, (u) = 0.8 means u likely element S. Moreover, according
Zadeh, membership function satisfy three well known restrictions: u U
fuzzy sets S1 , S2 respect U
S1 S2 (u) = min{S1 (u), S2 (u)}
S1 S2 (u) = max{S1 (u), S2 (u)}
S1 (u)
= 1 S1 (u) ,
S1 complement S1 U . Alternative restrictions membership functions
proposed literature, aim investigate (the
interested reader may consult e.g. Dubois & Prade, 1980).
justification choice min max given Bellman Giertz
(1973), shown certain reasonable conditions min max
unique possible choice set intersection set union, respectively.
switch fuzzy logics, notion degree membership (u) element
u U w.r.t. fuzzy set U regarded truth-value statement u
S. Accordingly, fuzzy DL, (i) concept C, rather interpreted
classical set, interpreted fuzzy set and, thus, concepts become imprecise; and,
consequently, (ii) statement C, i.e. a:C, truth-value [0, 1] given
degree membership individual member fuzzy set C.
3.1 Fuzzy Interpretation
fuzzy interpretation pair = (I , ), is, crisp case,
domain, whereas interpretation function mapping
1. individuals crisp case, i.e. aI 6= bI , 6= b;
2. concept C membership function C : [0, 1];
3. role R membership function RI : [0, 1].
C concept C naturally interpreted membership degree function
fuzzy concept (set) C w.r.t. I, i.e. object domain
C (d) gives us degree object element fuzzy concept C
interpretation I. Similarly roles. Additionally, interpretation function
satisfy following equations: ,
143

fiStraccia

>I (d)
(d)
(C u D)I (d)
(C D)I (d)
(C)I (d)
(R.C)I (d)
(R.C)I (d)

=
=
=
=
=
=
=

1
0
min{C (d), DI (d)}
max{C (d), DI (d)}
1 C (d)
inf d0 {max{1 RI (d, d0 ), C (d0 )}}
supd0 {min{RI (d, d0 ), C (d0 )}}.

equations standard interpretation conjunction, disjunction, negation
quantification, respectively (see Lee, 1972; Tresp & Molitor, 1998).
Note semantics R.C
(R.C)I (d) = supd0 {min{RI (d, d0 ), C (d0 )}}

(14)

result viewing R.C open first order formula y.FR (x, y) FC (y) (see (9))
existential quantifier viewed disjunction elements domain.
Similarly,
(R.C)I (d) = inf d0 {max{1 RI (d, d0 ), C (d0 )}}

(15)

related open first order formula y.FR (x, y) FC (y) (see (8)), universal
quantifier viewed conjunction elements domain.
say two concepts C said equivalent (denoted C
= D)
C = DI interpretations I. crisp non fuzzy case, dual relationships
concepts hold: e.g. >
= , (C u D)
= (C D) (R.C)
= (R.C).
3.2 Fuzzy Assertion
fuzzy assertion (denoted ) expression one following form h ni
h mi, ALC assertion, n (0, 1] [0, 1). semantics point
view, fuzzy assertion h ni constrains truth-value less equal n
(similarly ). Consequently, e.g. hv1:Video u About.Basket 0.8i states video v1
likely basket. Formally, interpretation satisfies fuzzy assertion ha:C ni (resp.
h(a, b):R ni) iff C (aI ) n (resp. RI (aI , bI ) n). Similarly, interpretation satisfies
fuzzy assertion ha:C ni (resp. h(a, b):R ni) iff C (aI ) n (resp. RI (aI , bI ) n).
Two fuzzy assertions 1 2 said equivalent (denoted 1
= 2 ) iff
satisfied set interpretations. Notice combination ha:C mi
ha:C ni, n, restricts truth-value a:C [m, n]. Moreover,
ha:C ni
= ha:C 1 ni. primitive fuzzy assertion fuzzy assertion involving
primitive assertion.
One might wonder allow expressions form h > ni form
h < ni. reason simply relies observation quite hard imagine
situations able assert strict >, < relations. leave
ease.4
4. course, whole easily extended case would consider two types assertions
too.

144

fiReasoning within Fuzzy DLs

Note work Straccia (1998), fuzzy assertion form h ni
allowed.
3.3 Fuzzy Terminological Axiom
Fuzzy terminological axioms consider natural extension classical terminological axioms fuzzy case. syntax point view, fuzzy terminological axiom
(denoted ) either fuzzy concept specialisation fuzzy concept definition. fuzzy
concept specialisation expression form AC, primitive concept
C concept. hand, fuzzy concept definition expression
form A: C, primitive concept C concept. semantics point
view, consider natural extension classical set inclusion fuzzy case (Zadeh,
1965). fuzzy interpretation satisfies fuzzy concept specialisation AC iff
, AI (d) C (d),

(16)

whereas satisfies fuzzy concept definition A: C iff
, AI (d) = C (d).

(17)

Note work Straccia (1998) fuzzy specialisation non-standard. Indeed, Straccia (1998) considered fuzzy specialisations form hA C ni
(A C)I = mindI {max{1 AI (d), C (d)}}. drawback formulation
clear n hA C ni comes from, i.e. defines value n
determined. prefer rely standard interpretation fuzzy subsets.
3.4 Fuzzy Knowledge Base, Fuzzy Entailment Fuzzy Subsumption
fuzzy knowledge base finite set fuzzy assertions fuzzy terminological axioms.
crisp case, denote set fuzzy assertions ,
denote set fuzzy terminological axioms (the terminology), =
purely assertional, assume terminology concept
appears left hand side fuzzy terminological axiom
cyclic definitions present .
interpretation satisfies (is model ) set fuzzy iff satisfies element
. fuzzy KB fuzzy entails fuzzy assertion (denoted |) iff every model
satisfies .
Furthermore, let terminology let C, two concepts. say
fuzzy subsumes C w.r.t. (denoted C D) iff every model ,
, C (d) DI (d) holds.
Finally, given fuzzy KB assertion , interest compute best
lower upper truth-value bounds. end define greatest lower bound
w.r.t. (denoted glb(, )) sup{n : |h ni}. Similarly, define
least upper bound respect (denoted lub(, )) inf{n : |h ni}
(sup = 0, inf = 1). Determining lub glb called Best Truth-Value Bound
(BTVB) problem.
145

fiStraccia

4. Properties
section discuss properties fuzzy logic. Several properties described
Straccia (2000b) propositional case easily extended first order case too.
4.1 Concept Equivalence
C u>=
C, C > =
>, Cu =,
Ct =
C,
first ones straightforward: > =,




C = C, (C uD) = C tD, (C tD) = C uD, C1 u(C2 tC3 ) = (C1 uC2 )t(C1 uC3 )
C1 (C2 u C3 )
= (C1 C2 ) u (C1 C3 ). concepts involving roles, R.C
=



R.C, R.> = >, R. = (R.C) u (R.D) = R.(C u D). Please, note

C u C
6
=
=, C C
= > and, thus, (R.C) u (R.C)

(R.C) (R.C) 6
= > hold. general say (C u C) (d) 0.5,
interpretation and, similarly, (C C)I (d) 0.5, i.e. lub(, a:C u C) = 0.5
glb(, a:C C) = 0.5, respectively.
4.2 Entailment Relation
course, |h ni iff glb(, ) n, similarly |h ni iff lub(, ) n hold.
Concerning roles, note |h(a, b):R ni iff h(a, b):R mi n. Therefore,
glb(, R(a, b)) = max{n : hR(a, b) ni }

(18)

true case. h(a, b):R mi n imply
|h(a, b):R ni, converse false (e.g. {ha:R.A 1i, hb:A 0i}|h(a, b):R 0i)).
Furthermore, |ha:C ni iff |ha:C 1 ni,
1 lub(, C(a)) =
=
=
=
=

1 inf{n : |ha:C ni}
sup{1 n : |ha:C ni}
sup{n : |ha:C 1 ni}
sup{n : |ha:C ni}
glb(, a:C).

follows. Therefore,
lub(, a:C) = 1 glb(, a:C),

(19)

i.e. lub determined glb (and vice-versa). reduction glb
hold lub(, (a, b):R) (a, b):R expression language.5
Modus ponens concepts supported: > 1n {ha:C mi, ha:C ni}|
ha:D ni holds.
Modus ponens roles supported: > 1 n {h(a, b):R mi, ha:R.D ni}
|ha:D ni {ha:R.C mi, ha:R.D ni} |ha:R.(C u D) min{n, m}i hold. Moreover, {ha:R.C mi, ha:R.D ni} |ha:R.(C u D) min{n, m}i holds.
Modus ponens specialisation supported. following degree bounds propagation
taxonomy supported. C (i) {ha:C ni}|ha:D ni;
(ii) {ha:D ni}|ha:C ni hold.
5. course, lub(, (a, b):R) = 1 glb(, (a, b):R) holds, (R)I (d, d0 ) = 1 RI (d, d0 ).

146

fiReasoning within Fuzzy DLs

Note that, according Straccia (1998)
> 1 n {ha:A mi, hA C ni}|ha:C ni.
drawback property whatever degree (as long > 1 n),
ha:A mi hA C ni infer ha:C ni, n priori fixed value.
4.3 Soundness Semantics
fuzzy semantics sound w.r.t. crisp semantics. fact, let fuzzy KB
h(a, b):R ni occurs. leave fuzzy assertions out, role negation present
crisp ALC. Let us consider following transformation ]() fuzzy assertions
assertions, ]() takes crisp assertional part fuzzy assertion:
]h ni 7
]ha:C ni 7 a:C.
extend ]() fuzzy terminological axioms follows: ] = . Finally, ] = {] :
} {] : }.
quite easily verify
Proposition 1 Let fuzzy KB h(a, b):R ni occurs let fuzzy
assertion h ni. |h ni ] |= ] (i.e. cannot fuzzy entailment
without entailment ALC).

Proof: Consider classical interpretation satisfying ]. fuzzy interpretation
C (d) {0, 1}, RI (d, d0 ) {0, 1} hold. induction structure
concept C shown (classically) satisfies a:C iff C (aI ) = 1. Similarly
roles. Therefore, fuzzy interpretation satisfying . hypothesis, satisfies h ni
n > 0. Therefore, truth-value 1, i.e. satisfies . 2
general case, satisfiable h(a, b):R ni may introduce inconsistency,
e.g. {h(a, b):R 0.3i, h(a, b):R 0.4i}|ha:A 1i, {(a, b):R} 6|= a:A}.
converse Proposition 1 hold general.
Example 2 Let set = {ha:A B 0.6i, ha:A 0.3i}. follows ] =
{a:(A B), a:A} unsatisfiable. Therefore, easily verified ] |= a:B,
|
6 ha:B ni, n > 0.
2
restrict attention normalised fuzzy assertions, converse relation follows
immediately (Lee, 1972; Straccia, 2000b).
Indeed, say fuzzy assertion KB-normalised iff
1. h ni n > 0.5;
2. h ni n < 0.5.
say fuzzy assertion query-normalised iff
147

fiStraccia

1. h ni n 0.5;
2. h ni n 0.5.
Note definitions KB-normalisation query-normalisation dual.
following proposition follows (Lee, 1972; Straccia, 2000b) relies fact
h ni h mi together inconsistent, n > 0.5 < 0.5. particular,
Straccia (2000b) shows normalised fuzzy propositional KB
query-normalised fuzzy proposition, | iff ] |= ]. proof given
showing deduction proving | deduction proving ] |= ]
build vice-versa. extension case straightforward e.g. n, > 0.5,
ha:R.C ni,h(a, b):R mi|hb:C ni iff a:R.C, (a, b):R |= b:C holds (the firstorder cases involving similar).
Proposition 2 Let fuzzy KB h(a, b):R ni occurs
KB-normalised. Let query-normalised fuzzy assertion. | iff ] |= ].
Example 3 Let set = {ha:A u B 0.4i, ha:A 0.6i}. Let ha:B 0.7i.
fuzzy assertion KB-normalised query-normalised. follows
] = {a:(A u B), a:A} ] = a:B. easily verified | ] |= ],
thereby confirming Proposition 2.
2
4.4 Subsumption
first, classical case method seen before, subsumption
two concepts C w.r.t. terminology , i.e. C D, reduced
case empty terminology, i.e. C 0 D0 .
Example 4 Suppose two images i1 i2 snapshot car traffic
major street European city. underlying image analysis tool recognizes, among
recognised objects, image i1 Ferrari, image i2
Porsche. Furthermore, semantic image indexing tool establishes that, degree n
image i1 Ferrari, whereas degree image i2 Porsche. Please
note that, weight keyword text quantitative description aboutness
text w.r.t. keyword, truth-degree gives quantitative description aboutness
images w.r.t. object, i.e. aboutness handled imprecise concept. So, let
us consider
= {hi1:About.Ferrari 0.6i, hi2:About.Porsche 0.8i,
FerrariCar, PorscheCar}.
axioms specify Ferrari Porsche car. According
expansion process, replaced
0 = {hi1:About.Ferrari 0.6i, hi2:About.Porsche 0.8i,
Ferrari: Car u Ferrari , Porsche: Car u Porsche },
simplified
148

fiReasoning within Fuzzy DLs

00 = {hi1:About.(Car u Ferrari ) 0.6i,
hi2:About.(Car u Porsche ) 0.8i}.
Now, looking images cars, may infer |
hi1:About.Car 0.6i |hi2:About.Car 0.8i. Furthermore, easily verified
00 | hi1:About.Car 0.6i 00 |hi2:About.Car 0.8i hold well. Indeed,
fuzzy assertion , | iff 00 | holds.
2
conclude section analogue Example 1 fuzzy case..
Example 5 Consider terminology KT query concept Q Example 1. Let
us define fuzzy KB derived KT terminological axiom
replaced fuzzy terminological axiom . Moreover, let us suppose
underlying semantic video indexing tool furnishes following semantic descriptions
two videos v1 v2.
v1 = {hv1:Video 1i, hv1:About.Basket 0.9i}
v2 = {hv2:Video 1i, hv2:About.Tennis 0.6i},
i.e. video v1 basket degree 0.9, whereas video v2 tennis degree
0.6. Let us consider = v1 v2 . easily verified glb(, v1:Q) = 0.9,
whereas glb(, v2:Q) = 0.6 hold. Therefore, video v1 ranked video v2
retrieval process.
2

5. Decision Algorithms Fuzzy ALC
Deciding whether |h ni |h mi requires calculus. Without loss generality
consider purely assertional fuzzy KBs only.
develop calculus style constraint propagation method,
method usually proposed context DLs (Buchheit et al., 1993a). calculus
extends fuzzy propositional calculus described Chen Kundu (1996)
Straccia (2000b) fuzzy DL case. first address entailment problem,
subsumption problem finally BTVB problem. subsumption problem
BTVB problem reduced entailment problem.
5.1 Decision Procedure Entailment Problem
Consider new alphabet ALC variables. interpretation extended variables
mapping elements interpretation domain. ALC object (denoted w)
either individual variable.6
constraint (denoted ) expression form w:C (w, w0 ):R, w, w0
objects, C ALC concept R role. fuzzy constraint (denoted )
expression one following four forms: h ni, h > ni, h ni, h < ni. Note
assertions fuzzy assertions constraints fuzzy constraints, respectively.
6. following, ambiguity, ALC variables ALC objects called variables objects,
respectively.

149

fiStraccia

definitions satisfiability constraint, fuzzy constraint, set constraints,
set fuzzy constraints, primitive constraint primitive fuzzy constraint obvious.
quite easily verified fuzzy entailment problem reduced
unsatisfiability problem set fuzzy constraints:
|h ni

iff

{h < ni} satisfiable

(20)

|h ni

iff

{h > ni} satisfiable.

(21)

calculus, determining whether finite set fuzzy constraints satisfiable not,
based set constraint propagation rules transforming set fuzzy constraints
simpler satisfiability preserving sets Si either Si contain clash (indicating
Si model build) Si completed clash-free, is,
rule applied Si Si contains clash (indicating Si
model build).
set fuzzy constraints contains clash iff contains either one constraints
Table 1 contains conjugated pair fuzzy constraints. entry Table 2 says us
hw: ni, n > 0
hw:> ni, n < 1
hw: > ni, hw:> < ni, hw:C < 0i, hw:C > 1i
Table 1: Clashes

h ni
h > ni

h < mi h mi
nm
n>m
nm
nm

Table 2: Conjugated Pairs
condition row-column pair fuzzy constraints conjugated pair. Given
fuzzy constraint , c indicate conjugate (if exists one). Notice
conjugate fuzzy constraint may unique, could infinitely many.
instance, ha:C < 0.6i ha:C 0.7i conjugates ha:C 0.8i.
Concerning rules, connective u, t, , , rule relation , >
, , <, i.e. 20 rules. rules form:


(22)

sequences fuzzy constraints condition. rule fires
condition holds, current set fuzzy constraints contains fuzzy constraints
matching precondition consequence already S. firing,
constraints added S. rules following:
150

fiReasoning within Fuzzy DLs

( )

hw:C ni hw:C 1 ni

(> )

hw:C > ni hw:C < 1 ni

( )

hw:C ni hw:C 1 ni

(< )

hw:C < ni hw:C > 1 ni

(u )

hw:C u ni hw:C ni, hw:D ni

(u> )

hw:C u > ni hw:C > ni, hw:D > ni

(t )

hw:C ni hw:C ni, hw:D ni

(t< )

hw:C < ni hw:C < ni, hw:D < ni

(t )

hw:C ni hw:C ni | hw:D ni

(t> )

hw:C > ni hw:C > ni | hw:D > ni

(u )

hw:C u ni hw:C ni | hw:D ni

(u< )

hw:C u < ni hw:C < ni | hw:D < ni

( )

hw1 :R.C ni, c hw2 :C ni
h(w1 , w2 ):R 1 ni

(> )

hw1 :R.C > ni, c hw2 :C > ni
h(w1 , w2 ):R < 1 ni

( )

hw1 :R.C ni, c hw2 :C ni
h(w1 , w2 ):R ni

(< )

hw1 :R.C < ni, c hw2 :C < ni
h(w1 , w2 ):R < ni

( )

hw:R.C ni h(w, x):R ni, hx:C ni
x new variable w0
h(w, w0 ):R ni hw0 :C ni already constraint set

(> )

hw:R.C > ni h(w, x):R > ni, hx:C > ni
x new variable w0
h(w, w0 ):R > ni hw0 :C > ni already constraint set

( )

hw:R.C ni h(w, x):R 1 ni, hx:C ni
x new variable w0
h(w, w0 ):R 1 ni hw0 :C ni already constraint set

(< )

hw:R.C < ni h(w, x):R > 1 ni, hx:C < ni
x new variable w0
h(w, w0 ):R > 1 ni hw0 :C < ni already constraint set
151

(23)

fiStraccia

Examples rule instances following:
( )

ha:R.C 0.7i, h(a, b):R 0.6i hb:C 0.7i
h(a, b):R 0.3i
c = h(a, b):R 0.6i conjugate

(< )

ha:R.C < 0.8i, h(a, b):R 0.9i hb:C < 0.8i
h(a, b):R < 0.8i
c = h(a, b):R 0.9i conjugate

( )

ha:R.C 0.8i h(w, x):R 0.8i, hx:C 0.8i
x new variable

(< )

ha:R.C < 0.8i h(w, x):R > 0.2i, hx:C < 0.8i
x new variable.

set fuzzy constraints said complete rule applicable it. complete
set fuzzy constraints S2 obtained set fuzzy constraints S1 applying
rules (23) called completion S1 . Due rules (t ), (t> ), (u ) (u< ),
one completion obtained. rules called nondeterministic rules.
rules called deterministic rules.
easily verified calculus termination property, i.e. completion finite set fuzzy constraints obtained finite number rule
applications.
Example 6 Let us consider following fuzzy KB:
= {ha:R.D 0.7i, ha:R.C 0.4i, h(a, b):R 0.5i, hb:C 0.2i, hb:D 0.3i}
Let assertion a:R.(D u C), let fuzzy assertion h 0.4i, whereas let 0
fuzzy assertion h 0.5i. easily verified |, whereas |
6 0 . show
0
|
6 , verifying clash-free completion = {ha:R.(D u C) < 0.5i}
(precisely, two them).
applying rules (23), following sequences.
(1)
(2)
(3)
(4)
(5)
(6)
(7)
(8)
(9)
(10)

ha:R.D 0.7i
ha:R.C 0.4i
h(a, b):R 0.5i
hb:C 0.2i
hb:D 0.3i
ha:R.(D u C) < 0.5i
h(a, x):R 0.7i, hx:D 0.7i
hx:C 0.4i
hb:D u C < 0.5i
hx:D u C < 0.5i
1 | 2
152

Hypothesis:S

( ) : (1)
( ) : (2), (7)
(< ) : (3), (6)
(< ) : (6), (7)

fiReasoning within Fuzzy DLs

two sequences 1 2 defined follows: 1 two sequences
(11) hb:D < 0.5i (u< ) : (9)
(12) hx:D < 0.5i (u< ) : (10)
(13) clash
(7), (12)

(14) hx:C < 0.5i (u< ) : (10)
(15) clash-free

2 two sequences
(16) hb:C < 0.5i (u< ) : (9)
(17) hx:D < 0.5i (u< ) : (10)
(18) clash
(7), (17)

(19) hx:C < 0.5i (u< ) : (10)
(20) clash-free

2
Example 7 Consider Example 4 let us prove 00 |h(About.Car)(i1) 0.6i.
prove relation verifying completions = 00 {hi1:About.Car < 0.6i}
contain clash. fact, following sequence.
(1)
(2)
(3)
(4)
(5)
(6)
(7)

hi1:About.(Car u Ferrari ) 0.6i
Hypothesis:S
hi2:About.(Car u Porsche ) 0.8i
hi1:About.Car < 0.6i
h(i1, x):About 0.6i, hx:(Car u Ferrari ) 0.6i ( ) : (1)
hx:Car < 0.6i
(< ) : (3), (4)
(u) : (4)
hx:Car 0.6i, hx:Ferrari 0.6i,
clash
(5), (6)

2
Proposition 3 finite set fuzzy constraints satisfiable iff exists clash free
completion S.

Proof:
.) Given termination property, easily verified, case analysis,
rules sound, i.e. S1 satisfiable satisfiable completion S2
S1 and, thus, S2 contains clash. instance, let us show ( ) rule
sound. Assume interpretation satisfying hw1 :R.C ni h(w1 , w2 ):R mi,
> 1 n. Let us show satisfies hw2 :C ni. Since satisfies hw1 :R.C ni
follows max{1 RI (w1 , w2 ), C (w2 )} n. But, RI (w1 , w2 ) and, thus,
1 RI (w1 , w2 ) 1 < n. consequence, C (w2 ) n follows, i.e. satisfies
hw2 :C ni.
.) Suppose exists clash free completion 0 S. build 0
interpretation satisfying 0 and, 0 , satisfies S. called canonical model.
primitive constraint 0 , collect lower upper bound restrictions
0 follows: let
N [] = {n : h ni 0 }
N > [] = {n : h > ni 0 }
N [] = {n : h ni 0 }
N < [] = {n : h < ni 0 }.
153

fiStraccia

define constraint , satisfies constraints collected
sets N () []: given N [], truth value n
n max N [], whereas w.r.t. N > [], truth value n
n max N > [] + , > 0. Similarly, cases, instance, w.r.t. N < [],
truth value n n max N > [] , > 0.
two tables
N [] N > []
glb[, ]


0
0

6=
n +
6=

n
0
6=
6=
n > n n else n0 +
N [] N < []



6=
6=

6=
6=

lub[, ]
1
m0

< m0 else m0

define 0 > 0, lub[, ] glb[, ], lower upper bound constraints
satisfy. tables, n, n0 , m, m0 indicate max N [], max N > [],
min N [] min N < [], respectively. table distinguish four cases
sets empty (no constraints) not. instance, constraint w:A,
hw:A 0.3i, hw:A > 0.4i, hw:A 0.5i hw:A < 0.6i 0 , according first
table bellow (row 4), > 0, glb[w:A, ] = 0.4 + , whereas lub[w:A, ] = 0.5.
define AI (wI ) = glb[w:A, ]. make sure glb[w:A, ]

(wI ) lub[w:A, ], choose > 0 small enough glb[w:A, ]
lub[w:A, ], i.e. 0.4 + 0.5. existence > 0 guaranteed fact
0 clash-free. additional condition choice satisfy concerns
case constraint type (w, w0 ):R. Let us show problem example.
Suppose 0 {h(w, w0 ):R > 0.3i, hw:R.B 0.6i, hw0 :B 0.5i}. Therefore, according
tables, glb[(w, w0 ):R, 1 ] = 0.3 + 1 , lub[(w, w0 ):R, 1 ] = 1, glb[w0 :B, 2 ] = 0
lub[w0 :B, 2 ] = 0.5. So, seems sufficient choose 1 > 0
0.3 + 1 1, indeed case. fact, hw:R.B 0.6i hw0 :B 0.5i
introduces upper bound (w, w0 ):R, i.e. truth-value (w, w0 ):R
less equal 0.4 = 1 0.6. is, choose 1 > 0 0.3 + 1 0.4.
Otherwise, truth-value w0 :B greater equal 0.6, contradicting
lub[w0 :B, 2 ] = 0.5. Again, existence guaranteed 0 clash-free.
Summing up: since 0 clash-free, follows primitive constraint ,
[] > 0
glb[, []] lub[, []]
(w, w0 ):R










hw:R.C
hw:R.C
hw:R.C
hw:R.C

ni,
> ni,
ni,
< ni,






hw0 :C
hw0 :C
hw0 :C
hw0 :C

ni 6 0
> ni 6 0
ni 6 0
< ni 6 0
154






glb[, []] 1 n;
glb[, []] < 1 n;
glb[, []] n;
glb[, []] < n.

(24)

fiReasoning within Fuzzy DLs

Now, consider following interpretation
1. domain set objects appearing 0 ;
2. wI = w, w ;
3. >I (wI ) = 1 (wI ) = 0, w ;
4. AI (wI ) = glb[w:A, [w:A]], primitive concepts w ;
5. RI (wI , w0 ) = glb[(w, w0 ):R, [(w, w0 ):R]], roles R w, w0 .
show, induction structure fuzzy constraints 0 , satisfies 0 .
Case hw:A > ni: definition, AI (wI ) = glb[w:A, [w:A]] > n and, thus, satisfies
hw:A > ni. cases , < similar.
Case h(w, w0 ):R ni: definition, RI (wI , w0 ) = glb[(w, w0 ):R, [(w, w0 ):R]] n and,
thus, satisfies h(w, w0 ):R ni. cases >, < similar.
Case hw:C u ni: hw:C u ni 0 0 completed, hw:C ni 0
hw:D ni 0 follows. induction, satisfies hw:C ni hw:D ni and, thus,
satisfies hw:C u ni. cases >, < similar.
cases involving C C shown similarly.
Case hw:R.C ni: Let (w, w0 ):R consider hw0 :C ni. follows that, either (i)
hw0 :C ni 0 ; (ii) hw0 :C ni 6 0 . Case (i): induction, satisfies hw0 :C ni and,
thus, max{1 RI (w, w0 ), C (w0 )} C (w0 ) n. Case (ii): construction RI (w, w0 ) =
glb[(w, w0 ):R, [(w, w0 ):R]] RI (w, w0 ) 1n (see Equation 24). follows max{1
RI (w, w0 ), C (w0 )} 1RI (w, w0 ) n. Therefore, inf w0 max{1RI (w, w0 ), C (w0 )}
n, i.e. satisfies hw:R.C ni.
cases hw:R.C > ni, hw:R.C ni hw:R.C < ni shown similarly.
Case hw:R.C ni: Since 0 complete, h(w, w0 ):R ni hw0 :C ni
0 . induction, satisfies h(w, w0 ):R ni hw0 :C ni. consequence,
min{RI (w, w0 ), C (w0 )} n follows and, thus, supw0 min{RI (w, w0 ), C (w0 )} n, i.e.
satisfies hw:R.C ni.
cases hw:R.C > ni, hw:R.C ni hw:R.C < ni shown similarly. 2
following example shows interpretation build.
Example 8 Let us consider Example 6 fuzzy assertion 0 . shown
|
6 0 constructing two clash-free completions S. Let us consider clash-free
completion S1 branch 1 :
S1 = { ha:R.(D u C) < 0.5i, h(a, x):R 0.7i, hx:D 0.7i, hx:C 0.4i,
hb:D u C < 0.5i, hx:D u C < 0.5i, hb:D < 0.5i, hx:C < 0.5i}
show S1 satisfiable building interpretation described proof
Proposition 3. Accordingly, > 0,
155

fiStraccia

glb[(a, b):R, 1 ]
glb[b:C, 2 ]
glb[b:D, 3 ]
glb[(a, x):R, 4 ]
glb[x:D, 5 ]
glb[x:C, 6 ]

=
=
=
=
=
=

0.5
0.2
0.3
0.7
0.7
0.4

lub[(a, b):R, 1 ]
lub[b:C, 2 ]
lub[b:D, 3 ]
lub[(a, x):R, 4 ]
lub[x:D, 5 ]
lub[x:C, 6 ]

=
=
=
=
=
=

1
1
0.5 3
1
1
0.5 6 .

Therefore, freely choose 2 , 4 5 , whereas 3 6
0.3 0.5 3 0.4 0.5 6 . h(a, b):R 0.5i ha:R.C 0.4i
S1 , hb:C 0.4i 6 S1 , additional restriction choice 1 (see
Equation 24) glb[(a, b):R, 1 ] 0.6. But, glb[(a, b):R, 1 ] = 0.5 0.6, every 1 and,
thus, choice 1 free. solution e.g. = 0.1 and, thus, let
following interpretation:
1. domain set {a, b, x};
2. wI = w, w ;
3. >I (wI ) = 1 (wI ) = 0, w ;
4. C (b) = 0.2, DI (b) = 0.3, DI (x) = 0.7 C (x) = 0.4 (in cases, AI (w) =
0);
5. RI (a, b) = 0.5 RI (a, x) = 0.7 (in cases, R0 (w, w0 ) = 0).
Now, easily verified satisfies S1 S.

2

computational complexity point view, fuzzy entailment problem proven
PSPACE-complete problem, classical entailment problem.
Proposition 4 Let fuzzy KB let fuzzy assertion. Determining whether
| PSPACE-complete problem.

Proof: seen termination algorithm guaranteed. Additionally,
crisp KB K, define K = {h 1i : K}. definition, K KBnormalised h 0.5i query-normalised. Proposition 2 follows
K |= iff K |h 0.5i. PSPACE-completeness entailment problem
crisp ALC (Schmidt-Schau & Smolka, 1991), PSPACE-hardness fuzzy entailment
problem follows. Unfortunately, algorithm, is, requires exponential space due
well know problem inherited crisp case. Indeed, easily verified completion
= {x:C}, C concept
(R.A11 ) u (R.A12 ) u R.((R.A21 ) u (R.A22 ) u . . . R.((R.An1 ) u (R.An2 )) . . .)
contains least 2n + 1 variables. order require polynomial space, Schmidt-Schau
Smolka (1991) introduced so-called trace rule (T ) operator. (T )
rule modifies () rule shown below.
156

fiReasoning within Fuzzy DLs

()

(T )

w:R.C (w, x):R, x:C
x new variable w0 (w, w0 ):R w0 :C
already actual constraint set
w:R.C (w, x):R, x:C
x new variable (w, w0 ):R0 already actual set constraints.

difference () rule (T ) latter applied
object w. thus compelled make nondeterministic choice amongst
constraints form w:R.C. Furthermore, convenient apply trace rule
none (u), (t), () () rules applicable.
say set constraints 0 trace set 0 obtained
application rules () replaced (T ). Schmidt-Schau
Smolka (1991) shown set constraints = {x:C} satisfiable iff trace 0
contains clash. size trace 0 bounded polynomially size
S, polynomial space sufficient prove satisfiability.
trace rule works start constraint set form {x:C}.
general case, rely so-called pre-completions (Baader & Hollunder, 1991b;
Donini et al., 1994). set constraints 0 said pre-completion given set
constraints S, obtained application (u), (t), () ()
rules, none rules applicable 0 (the size 0 polynomially bounded
size S). consequence pre-processing step, role relationships
(w, w0 ):R 0 ignored, i.e. removed 0 , longer carry
additional information. Now, second step apply method checking
whether trace 0 contains clash. summary, set constraints satisfiable
iff pre-completion 0 trace 00 0 contains clash.
fuzzy case, similar trace rules easily defined. instance, correspondent trace rule ( ) rule
(T )

hw:R.C ni h(w, x):R ni, hx:C ni
x new variable h(w, w0 ):R0 mi already
actual set fuzzy constraints.

trace rules correspondent rules (> ), ( ) (< ) defined similarly.
proceeding crisp case, shown (i) set fuzzy constraints
satisfiable iff pre-completion 0 trace 00 0 contains
clash; (ii) size trace 00 bounded polynomially size S.
consequence, satisfiability problem PSPACE, completes proof. 2
result establishes important property fuzzy DL. effect, says
additional computational cost paid major expressive power.
5.2 Decision Procedure Subsumption Problem
section address subsumption problem, i.e. deciding whether C D,
C two concepts fuzzy terminology. seen (see Example 4),
157

fiStraccia

C reduced case empty terminology applying KB expansion
process. So, without loss generality, limit attention case C D.
first, analogue relation (12) holds. fact, easily shown
Proposition 5 Let C two concepts. follows C iff n > 0
ha:C ni|ha:D ni, new individual.

Proof:
.) Assume C holds. Suppose contrary n > 0
ha:C ni |
6 ha:D ni. Therefore, interpretation n > 0
C (aI ) n DI (aI ) < n. But, hypothesis n C (aI ) DI (aI ) < n follows.
Absurd.
.) Assume n > 0, ha:C ni|ha:D ni holds. Suppose contrary
C 6 holds. Therefore, interpretation C (d) >
DI (d) 0. Let us extent aI = consider n = C (d) > 0. course,
satisfies ha:C ni. Therefore, hypothesis follows satisfies ha:D ni,
i.e. DI (d) n = C (d) > DI (d). Absurd. 2
check whether n > 0 ha:C ni|ha:D ni holds? solution
problem, restricted propositional case, given Straccia (2000a). Indeed,
shown
Proposition 6 (Straccia, 2000a) Let p q two propositions, 0 < n1 0.5
1 n2 > 0.5. follows n > 0, hp ni|hq ni iff {n1 , n2 },
hp mi|hq mi holds.

proposition establishes that, propositional level, order check whether
hp ni|hq ni holds n, sufficient check entailment relation respect
two values n1 , n2 . first less equal 0.5, second greater
0.5, respectively. due fact given values n, n0 0.5, proof
hp ni|hq ni converted proof hp n0 i|hq n0 vice-versa.
case n, n0 > 0.5 similar.
proposition extended fuzzy DL well.
Lemma 1 Let C two concepts, 0 < n, n0 0.5 let individual.
follows ha:C ni|ha:D ni iff ha:C n0 i|ha:D n0 i.

Proof:
enough show = {ha:C ni, ha:D < ni} satisfiable iff 0 =
{ha:C n0 i, ha:D < n0 i} satisfiable.
.) Assume satisfiable. So, clash-free completion S.
S[n/n0 ] indicate set fuzzy constraints obtained S, replacing value n
n0 value 1 n 1 n0 , respectively. show S[n/n0 ]
clash-free completion 0 and, thus, 0 satisfiable.
Let r1 , . . . , rk , k 0 sequence inference rule applications, applied
get S. Let S0 = S, let Sk = 1 k let Si set fuzzy constraints
obtained Si1 application ri rule Si1 .
induction k, show (i) sequence inference rules r1 , . . . , rk
applied 0 well; (ii) 0 0 = 0 , 0 k = 0 0 set fuzzy constraints obtained
158

fiReasoning within Fuzzy DLs

0 i1 application ri rule 0 i1 , 0 = Si [n/n0 ] and, thus,
0 = 0 k = Sk [n/n0 ] = S[n/n0 ]; (iii) Sk clash-free completion 0 k
clash-free completion 0 well.
case k = 0: rule applicable S0 = completion S. case analysis, (i) easily verified rule applicable 0 (ii) 0 = 0 0 =
S0 [n/n0 ] = S[n/n0 ]. (iii) So, 0 0 completion 0 . show 0 0 clashfree. Assume contrary 0 0 , i.e. 0 contains clash. consequence,
0 = {ha:C n0 i, ha:C < n0 i}. then, {ha:C ni, ha:C < ni}, contrary
assumption clash-free.
induction step: case analysis rule rk . limit presentation ( )
rule proof similar.
rk ( ) verified hw:R.C 0 ni h(w, w0 ):R > 1 ni
Sk1 hw0 :C 0 ni 6 Sk1 hw0 :C 0 ni Sk . induction, Sk1 [n/n0 ] =
0 k1 and, thus, hw:R.C 0 n0 h(w, w0 ):R > 1 n0 0 k1 ,
hw0 :C 0 n0 6 0 k1 . Therefore, (i) rule rk applicable 0 k1 hw0 :C 0 n0
0 k ; (ii) so, 0 k = Sk [n/n0 ]; (iii) 0 k = Sk [n/n0 ] and, Sk completion
S, case analysis, easily verified rule applicable 0 k .
Therefore, 0 k completion 0 . Let us show 0 k clash free. Assume
contrary 0 k contains clash. one cases Table 1 holds,
0 k = Sk [n/n0 ] follows easily clash Sk well, contrary
assumption Sk clash-free. hand, conjugated pair
fuzzy constraints 0 k (see Table 2), one following three pairs 0 k :
(a) h n0 h < n0 i; (b) h 1 n0 h > 1 n0 i; (c) h < n0
h > 1 n0 (note n, n0 0.5). Again, 0 k = Sk [n/n0 ], follows
conjugated pair Sk well, contrary assumption Sk clash-free.
.) proven similarly .). 2
proceeding Lemma 1 shown
Lemma 2 Let C two concepts, 1 n, n0 > 0.5 let individual.
follows ha:C ni|ha:D ni iff ha:C n0 i|ha:D n0 i.

Lemma 1 Lemma 2 follows
Proposition 7 Let C two concepts, 0 < n1 0.5, 1 n2 > 0.5 let
individual. follows n > 0 ha:C ni|ha:D ni iff {n1 , n2 },
ha:C mi|ha:D mi holds.

consequence, subsumption problem reduced entailment problem
decision algorithm.
159

fiStraccia

5.3 Decision Procedure BTVB Problem
address problem determining glb(, ) lub(, ). important,
computing, e.g. glb(, ), fact way answer query type degree
(at least) true, given (imprecise) facts ?.
Without loss generality, assume concepts NNF (Negation Normal
Form). Straccia (2000b) shown that, case fuzzy propositional logic, set
fuzzy propositions form hp ni hp ni, p proposition, possible
determine finite set N [0, 1], |N | O(||), glb(, q) N ,
i.e. greatest lower bound proposition q w.r.t. element N .
Therefore, glb(, q) determined computing greatest value n N
|hq ni. easy way search n order elements N
perform binary search among values successive entailment tests. Dually,
lub(, q) = 1 glb(, q) holds, lub either computed glb or,
lub(, q) 1 N , 1 N = {1 n : n N }, compute determining
smallest value 1 N .

Proposition 8 (Straccia, 2000b) Let set fuzzy propositions NNF let q
proposition. glb(, q) N lub(, q) 1 N ,
N

= {0, 0.5, 1}
{n : hp ni }
{1 n : hp ni }

1 N = {1 n : n N }.

Proposition 8 easily extended fuzzy description logic case. Essentially,
quantifiers change possible values glb(, F ) lub(, F ).
Proposition 9 Let set fuzzy assertions NNF let assertion.
glb(, ) N lub(, ) 1 N ,
N

= {0, 0.5, 1}
{n : h ni }
{1 n : h ni }

1 N = {1 n : n N }.

Proof: Let us show glb(, ) N . Let glb(, ). definition, = 0
= {h < ni} satisfiable n > 0 0 N . Otherwise, > 0 largest
value = {h < mi} satisfiable. Let us mark sub-expression
, trace components query assertion deduction.
160

fiReasoning within Fuzzy DLs

Consider completion 0 S. Starting h < mi, applying rules inference,
marked expressions type h0 < mi h0 > 1 mi appear 0 . Furthermore,
satisfiable, 0 contains clash, i.e. value largest value
completions 0 contain clash. Let us analyse 0 . 0 contains clash, either
(i) clash according Table 1, (ii) clash according Table 2.
(i) case, i.e. 0 clash, distinguish
two cases: (a) marked (b) marked . former case, 0
contains clash independently value and, thus, largest possible value
0 contains clash 1. latter case, > 0, either = hw: > 1 mi
= hw:> < mi clashes value m. consequence, largest
possible value 0 contains clash according Table 1 1. Assume (ii)
case, i.e. conjugated pair fuzzy constraints 0 0 . Similarly previous
case, distinguish cases 0 marked . four
cases:
(a) = h ki 0 = h0 k 0 0 , none marked k > k 0 .
Therefore, 0 contains clash value and, thus, largest choice 1;
(b) = h ki 0 = h0 < mi 0 , 0 marked k m.
Therefore, 0 contains clash value k and, thus, largest choice
k. easily verified case analysis rules 0 , k N follows;
(c) = h ki 0 = h0 > 1 mi 0 , 0 marked k 1m.
Therefore, 0 contains clash value 1 k and, thus, largest choice
1 k. easily verified case analysis rules 0 , 1 k N
follows;
(d) = h < mi 0 = h0 > 1 mi 0 , marked 1m.
Therefore, 0 contains clash value 0.5 and, thus, largest choice
0.5.
Summing up, proved largest possible value
2

N .

algorithms computing glb(, ) lub(, ) described Table 3. instance,
binary search N , value glb(, ) determined log |N |
fuzzy entailment tests.

6. Conclusions Future Work
work, presented quite general fuzzy extension DL ALC, significant
expressive representative various DLs. fuzzy DL enables us reason
presence imprecise ALC concepts, i.e. fuzzy ALC concepts. semantics point
view, fuzzy concepts interpreted fuzzy sets i.e. given concept C individual
a, C(a) interpreted truth-value sentence C. syntax point
view, allow specify lower upper bounds truth-value C(a). Complete
algorithms reasoning presented, is, devised algorithms
solving entailment problem, subsumption problem well best truth-value
bound problem.
161

fiStraccia

Algorithm ax(, )
Set := 0 ax := 2.
1. Pick n N \ {0} < n < ax. n,
set glb(, ) := exit.
2. |h ni set = n, else set ax = n. Go Step 1.
Algorithm in(, )
Set := 0 ax := 2.
1. Pick n (1 N ) \ {0} < n < ax. n,
set lub(, ) := min{M ax, 1} exit.
2. |h ni set ax = n, else set = n. Go Step 1.

Table 3: Algorithms ax(, ) in(, )

important point concerns computational complexity. complexity result shows
additional expressive power impact computational complexity point
view.
extension DLs management vagueness new (Tresp & Molitor,
1998; Yen, 1991). Yen first, best knowledge, introducing vagueness
simple DL. language two interesting points included language.
Firstly, allows definition vague concepts means explicit membership functions
domain, e.g. LowPressure: domain(AirPressure); membershipf x(p.low(p)).
domain p ranges given AirPressure. p.low(p) determines membership
degree pressure p low. Secondly, language allows concept modifiers,
Slightly, means concepts low pressure defined
VeryLowPressure: Very(LowPressure). last idea generalised ALC Tresp
Molitor (1998) certain type concept modifiers allowed. Strictly speaking, language defined Tresp Molitor expressive, consider
concept modifiers. semantics point view, extension Tresp Molitors
language quite straightforward. But, cost pay increasing
expressive power that, computational complexity algorithms point view,
things changes radically. Indeed, according Tresp Molitor completion
linear optimisation problem generated (set inequations form op1 (t1 )Rop2 (t2 )
op1 (t1 )Rf (op2 (t2 )), ti truth-value variable, R {, , =, opi {id, mi },
id(t) identity mi (t) modifier function truth-value variables, respectively,
f {min, max}-derived semantics connectors u, t) solved
best value. Then, minimum among computed solutions taken. solutions
computed relying methods domain linear programming, e.g.
162

fiReasoning within Fuzzy DLs

simplex method (Papadimitriou & Steiglitz, 1982). possible devise similar
approach fuzzy DL well, seen necessary.
aspects considered Tresp Molitor Yen, although interesting,
crucial w.r.t. model logic-based multimedia information retrieval, underlaying text, image video analysis tools provide us fuzzy assertions e.g. form
ha:About.C ni may infer ha:About.D mi.
work used basis extending existing DL based systems
research. latter case, several open points. instance, clear
yet reason case fuzzy specialisation general form CD
case cycles allowed fuzzy KB. Another interesting topic research concerns
semantics fuzzy connectives. course several choices semantics
connectives u, t, , , considered. huge number proposals given
literature impact semantics point view well understood, question
impact computational complexity algorithms point view remains
still open.

Acknowledgements
would thank three anonymous reviewers helpful comments early
version paper. extension revision paper appeared AAAI-98.

References
Baader, F., & Hollunder, B. (1991a). KRIS: Knowledge representation inference system,
system description. ACM SIGART Bulletin, 2, 814.
Baader, F., & Hollunder, B. (1991b). terminological knowledge representation system
complete inference algorithm. Proc. Workshop Processing Declarative
Knowledge, PDK-91, No. 567 Lecture Notes Artificial Intelligence, pp. 6786.
Springer-Verlag.
Bacchus, F. (1990). Representing Reasoning Probabilistic Knowledge. MIT
Press.
Bellman, R., & Giertz, M. (1973). analytic formalism theory fuzzy sets.
Information Sciences, 5, 149156.
Brachman, R. J. (1992). reducing CLASSIC practice: Knowledge representation meets
reality. Proc. 3rd Int. Conf. Principles Knowledge Representation
Reasoning (KR-92), pp. 247258. Morgan Kaufmann, Los Altos.
Buchheit, M., Donini, F. M., & Schaerf, A. (1993a). Decidable reasoning terminological
knowledge representation systems. Proc. 13th Int. Joint Conf. Artificial Intelligence (IJCAI-93), pp. 704709 Chambery, France. Morgan Kaufmann, Los
Altos.
163

fiStraccia

Buchheit, M., Donini, F. M., & Schaerf, A. (1993b). Decidable reasoning terminological
knowledge representation systems. Journal Artificial Intelligence Research, 1, 109
138.
Chen, J., & Kundu, S. (1996). sound complete fuzzy logic system using Zadehs
implication operator. Ras, Z. W., & Maciek, M. (Eds.), Proc. 9th Int. Sym.
Methodologies Intelligent Systems (ISMIS-96), No. 1079 Lecture Notes
Artificial Intelligence, pp. 233242. Springer-Verlag.
da Silva, R. M., Pereira, A. E. C., & Netto, M. A. (1994). system knowledge representation based formulae predicate calculus whose variables annotated
expressions fuzzy terminological logic. Proc. 5th Int. Conf. Information Processing Managment Uncertainty Knowledge-Based Systems,
(IPMU-94), No. 945 Lecture Notes Computer Science. Springer-Verlag.
Donini, F. M., Lenzerini, M., Nardi, D., & Schaerf, A. (1994). Deduction concept languages: subsumption instance checking. Journal Logic Computation,
4 (4), 423452.
Dubois, D., & Prade, H. (1980). Fuzzy Sets Systems. Academic Press, New York, NJ.
Dubois, D., & Prade, H. (1994). enforce full compositionality uncertainty calculi?.
Proc. 11th Nat. Conf. Artificial Intelligence (AAAI-94), pp. 149154
Seattle, Washington.
Dubois, D., & Prade, H. (1996). Approximate commonsense reasoning: theory
practice. Ras, Z. W., & Maciek, M. (Eds.), Proc. 9th Int. Sym. Methodologies Intelligent Systems (ISMIS-96), No. 1079 Lecture Notes Artificial
Intelligence, pp. 1933. Springer-Verlag.
Halpern, J. Y. (1990). analysis first-order logics probability. Artificial Intelligence
Journal, 46, 311350.
Heinsohn, J. (1994). Probabilistic description logics. de Mantara, R. L., & Pool, D.
(Eds.), Proceedings 10th Conference Uncertainty Artificila Intelligence,
pp. 311318.
Hollunder, B. (1994). alternative proof method possibilistic logic application terminological logics. 10th Annual Conference Uncertainty Artificial
Intelligence Seattle, Washington. R. Lopez de Mantaras D. Pool.
Horrocks, I. (1998). Using expressive description logic: Fact fiction?. Proc.
8th Int. Conf. Principles Knowledge Representation Reasoning (KR-98).
Jager, M. (1994). Probabilistic reasoning terminological logics. Proceedings KR94, 5-th International Conference Principles Knowledge Representation
Reasoning, pp. 305316 Bonn, FRG.
164

fiReasoning within Fuzzy DLs

Koller, D., Levy, A., & Pfeffer, A. (1997). P-CLASSIC: tractable probabilistic description
logic. Proc. 14th Nat. Conf. Artificial Intelligence (AAAI-97), pp. 390
397.
Kruse, R., Schwecke, E., & Heinsohn, J. (1991). Uncertainty Vagueness Knowledge
Based Systems. Springer-Verlag, Berlin, Germany.
Lee, R. C. T. (1972). Fuzzy logic resolution principle. Journal ACM, 19 (1),
109119.
Meghini, C., Sebastiani, F., & Straccia, U. (1997). Modelling retrieval structured
documents containing texts images. Proceedings First European Conference Research Advanced Technology Digital Libraries, No. 1324 Lecture
Notes Computer Science, pp. 325344 Pisa, Italy.
Meghini, C., Sebastiani, F., & Straccia, U. (1998). Mirlog: logic multimedia information retrieval. Crestani, F., Lalmas, M., & van Rijsbergen, C. (Eds.), Logic
Uncertainty Information Retrieval: Advanced models representation
retrieval information, Vol. 4 Kluwer International Series Information
Retrieval, chap. 7, pp. 151185. Kluwer Academic Publishers, Boston, USA.
Meghini, C., & Straccia, U. (1996). relevance terminological logic information retrieval.
Proceedings 19th Annual International ACM SIGIR Conference Research
Development Information Retrieval (ACM SIGIR-96), pp. 197205 Zurich,
Switzerland.
Nebel, B. (1988). Computational complexity terminological reasoning BACK. Artificial
Intelligence, 34, 371383.
Nebel, B. (1990). Reasoning revision hybrid representation systems. Springer, Heidelberg, FRG.
Papadimitriou, C. H., & Steiglitz, K. (1982). Combinatorial Optimization: Algorithms
Complexity. Prentice-Hall, Englewood Cliffs, New Jersey.
Pearl, J. (1988). Probabilistic Reasoning Intelligent Systems: Networks Plausible
Inference. Morgan Kaufmann, Los Altos.
Peltason, C. (1991). BACK system overview. SIGART Bulletin, 2 (3), 114119.
Roth, D. (1996). hardness approximate reasoning. Artificial Intelligence Journal,
82, 273302.
Schmidt-Schau, M., & Smolka, G. (1991). Attributive concept descriptions complements. Artificial Intelligence, 48, 126.
Sebastiani, F. (1994). probabilistic terminological logic modelling information retrieval. Proceedings SIGIR-94, 17th ACM International Conference Research
Development Information Retrieval, pp. 122130 Dublin, IRL. Published
Springer Verlag, Heidelberg, FRG.
165

fiStraccia

Straccia, U. (1998). fuzzy description logic. Proc. 15th Nat. Conf. Artificial
Intelligence (AAAI-98), pp. 594599 Madison, USA.
Straccia, U. (2000a). note relationship fuzzy logic four-valued logic.
Technical report B4-22-10-2000, Istituto di Elaborazione dellInformazione, Consiglio
Nazionale delle Ricerche, Pisa, Italy.
Straccia, U. (2000b). Reasoning experimenting within Zadehs fuzzy propositional logic.
Technical report 2000-b4-011, Istituto di Elaborazione dellInformazione, Consiglio
Nazionale delle Ricerche, Pisa, Italy.
Tresp, C., & Molitor, R. (1998). description logic vague knowledge. Proc.
13th European Conf. Artificial Intelligence (ECAI-98) Brighton (England).
Xiachun, C., Yunfei, J., & Xuhua, L. (1995). rationality decidability fuzzy
implications. Proc. 14th Int. Joint Conf. Artificial Intelligence (IJCAI95), pp. 19101911 Montreal, Canada. MK.
Yen, J. (1991). Generalizing term subsumption languages fuzzy logic. Proc. 12th
Int. Joint Conf. Artificial Intelligence (IJCAI-91), pp. 472477 Sydney, Australia.
Zadeh, L. A. (1965). Fuzzy sets. Information Control, 8 (3), 338353.

166


