Journal Artificial Intelligence Research 54 (2015) 493-534

Submitted 05/15; published 12/15

Possible Necessary Winners Partial Tournaments
Haris Aziz

haris.aziz@nicta.com.au

Data61 University New South Wales
Australia

Markus Brill

brill@cs.duke.edu

Computer Science Department
Duke University, USA

Felix Fischer

fischerf@math.tu-berlin.de

Institut fur Mathematik
Technische Universitat Berlin, Germany

Paul Harrenstein

paul.harrenstein@cs.ox.ac.uk

Computer Science Department
University Oxford, UK

Jerome Lang

lang@lamsade.dauphine.fr

LAMSADE
Universite Paris-Dauphine, France

Hans Georg Seedig

seedigh@in.tum.de

Institut fur Informatik
Technische Universitat Munchen, Germany

Abstract
study problem computing possible necessary winners partially specified weighted unweighted tournaments. problem arises naturally elections
incompletely specified votes, partially completed sports competitions, generally
scenario outcome pairwise comparisons yet fully known.
specifically consider number well-known solution conceptsincluding uncovered set, Borda, ranked pairs, maximinand show them, possible
necessary winners identified polynomial time. positive algorithmic results
stand sharp contrast earlier results concerning possible necessary winners given
partially specified preference profiles.

1. Introduction
Many multi-agent situations modeled analyzed using weighted unweighted
tournaments. Prime examples voting scenarios pairwise comparisons
alternatives decided majority rule sports competitions organized
round-robin tournaments. application areas include webpage journal ranking,
biology, psychology, AI. generally, tournaments solution concepts tournaments used mathematical tool analysis kinds situations
choice among set alternatives made exclusively basis pairwise
comparisons.
choosing tournament, relevant information may partly available.
could preferences yet elicited, matches yet played,
c
2015
AI Access Foundation. rights reserved.

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

certain comparisons yet made. cases, natural speculate
potential inevitable outcomes basis information already hand.
tournaments, number attractive solution concepts proposed (Brandt,
Brill, & Harrenstein, 2016; Laslier, 1997). Given solution concept S, define
possible winners partial tournament G alternatives selected
completion G, necessary winners alternatives selected completions.
completion understand (complete) tournament extending G.
article address computational complexity identifying possible
necessary winners number solution concepts whose winner determination problem tournaments tractable. consider five common solution concepts
tournamentsnamely, Condorcet winners (COND), Condorcet non-losers (CNL),
Copeland set (CO), top cycle (TC ), uncovered set (UC )and three common
solutions weighted tournamentsBorda (BO), maximin (MM ), ranked pairs (RP ).
solution concepts, consider computational complexity following problems: deciding whether given alternative possible winner (PW), deciding
whether given alternative necessary winner (NW), well deciding whether
given subset alternatives equals set winners (the winning set) completion (PWS). problems challenging, even unweighted partial tournaments
may allow exponential number completions. results encouraging,
sense problems solved polynomial time. Table 1 summarizes
findings.
Similar problems considered before. Condorcet winners, voting trees
top cycle, shown possible necessary winners computable
polynomial time (Konczak & Lang, 2005; Lang et al., 2012). holds
computation possible Copeland winners, problem considered
context sports tournaments (Cook, Cunningham, Pulleyblank, & Schrijver, 1998).
Another specific setting frequently considered within area computational social choice differs setting subtle important way
worth pointed out. There, tournaments assumed arise pairwise majority
comparisons basis profile individual voters preferences.1
Since partial preference profile R need conclusively settle every majority comparison, may give rise partial tournament only. two natural ways define
possible necessary winners partial preference profile R solution concept
illustrated Figure 1. first consider completions R winners
corresponding tournaments. secondcovered general settingis
consider completions partial tournament G(R) corresponding R
winners these. Since every tournament corresponding completion R
completion G(R) necessarily way round, second definition
1. See, e.g., work Baumeister Rothe (2010), Betzler Dorn (2010), Konczak Lang (2005),
Walsh (2007), Xia Conitzer (2011) basic setting, Betzler, Hemmann, Niedermeier
(2009) parameterized complexity results, Bachrach, Betzler, Faliszewski (2010), Hazon, Aumann,
Kraus, Wooldridge (2012), Kalech, Kraus, Kaminka, Goldman (2011) probabilistic
settings, Chevaleyre, Lang, Maudet, Monnot (2011) Chevaleyre, Lang, Maudet, Monnot,
Xia (2012) settings variable set alternatives, Baumeister, Faliszewski, Lang, Rothe
(2012), Kalech et al. (2011), Lu Boutilier (2011), Oren, Filmus, Boutilier (2013), Filmus
Oren (2014) settings truncated ballots Lu Boutilier (2013) multiwinner rules.

494

fiPossible Necessary Winners Partial Tournaments



PWS

COND
CNL
CO
TC
UC







BO
MM
RP

P (Thm. 8)a
P (Thm. 11)a
NP-C (Thm. 14)



P
P
P
P
P

NWS
(Konczak & Lang, 2005)
(Thm. 2)
(Cook et al., 1998)a
(Lang et al., 2012)a
(Thm. 5)







P
P
P
P
P

PWSS
(Konczak & Lang, 2005) P
(Thm. 2)
P
(Thm. 3)a
P
(Lang et al., 2012)
P
(Thm. 6)
NP-C

P
(Thm. 10)
P
(Thm. 13)
coNP-C (Thm. 15)

(Thm.
(Thm.
(Thm.
(Thm.
(Thm.

1)
2)
3)
4)
7)

P (Thm. 9)
P (Thm. 12)
NP-C (Cor. 2)

P-time result contrasts intractability problem partial preference
profiles (Lang et al., 2012; Xia & Conitzer, 2011).

Table 1: Complexity computing possible winners (PW) necessary winners (NW)
checking whether given subset alternatives possible winning set (PWS)
following solution concepts: Condorcet winners (COND), Condorcet non-losers (CNL),
Copeland (CO), top cycle (TC ), uncovered set (UC ), Borda (BO), maximin (MM ),
ranked pairs (RP ).
gives rise stronger notion possible winner weaker notion necessary winner. Interestingly, sharp contrast results, determining stronger possible
weaker necessary winners computationally hard many voting rules (Lang et al.,
2012; Xia & Conitzer, 2011). contrast foreshadowed work Lang et
al. (2012) Pini, Rossi, Venable, Walsh (2011), compared two ways
defining possible necessary winners (both theoretically experimentally) three
solution concepts: Condorcet winners, voting trees, top cycle.
context article, assume tournaments arise majority
comparisons voting specific procedure. approach number
advantages. Firstly, matches diversity settings solution concepts
tournaments applicable, goes well beyond social choice voting. instance,
results apply question commonly encountered sports competitions, namely,
teams still win cup future results depends (Cook et al.,
1998; Kern & Paulusma, 2004; B. L. Schwartz, 1966). Secondly, (partial) tournaments
provide informationally sustainable way representing relevant aspects many
situations maintaining workable level abstraction conciseness. instance,
social choice setting described above, partial tournament induced partial
preference profile much succinct piece information, discloses less information, preference profile itself. generally, gives canonical way extending
tournament solutions incomplete tournaments (a line pursued Brandt,
Brill, & Harrenstein, 2014). Finally, specific settings may impose restrictions feasible
extensions partial tournaments. positive algorithmic results article
used efficiently approximate sets possible necessary winners settings,
corresponding problems may intractable. voting setting discussed
serves illustrate point.
point computing possible outcomes considered domains social choice example matching allocations (Aziz, Walsh, & Xia, 2015;
495

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

1 1 1


c

b b
b
c

completions

completions
1 1 1



c
b b b
c c
1 1 1
1 1 1
c
b b c
c b

c

b

b


c c
b b
c b

b



c
b


c

b

c

c

Figure 1: non-commutative diagram illustrates two approaches possible
necessary winners partial preference profiles majoritarian social choice functions.
First, completions partial profile full preference profiles shown
bottom left. corresponding majority tournaments dashed box bottom
right. work, start partial majority tournament top right
induced partial preference profile. Then, consider possible completions
tournaments depicted solid box bottom right.

Rastegari, Condon, Immorlica, & Leyton-Brown, 2013) knockout tournaments (Aziz
et al., 2014; Vu, Altman, & Shoham, 2009).

2. Preliminaries
partial tournament pair G = (V, E) V nonempty finite set alternatives
E V V asymmetric relation V , i.e., (y, x)
/ E whenever (x, y) E.
(x, y) E say x dominates y. tournament partial tournament (V, E)
E complete, i.e., either (x, y) E (y, x) E distinct x, V .
denote set tournaments .
Let G = (V, E) partial tournament. Another partial tournament G0 = (V 0 , E 0 )
called extension G, denoted G G0 , V = V 0 E E 0 . E 0 complete, G0
called completion G. write [G] set completions G, i.e.,
[G] = {T : G }.
496

fiPossible Necessary Winners Partial Tournaments

say alternative x V dominated (y, x) E V , undominated
+
otherwise. define dominion x G DG
(x) = {y V : (x, y) E},

+
dominators x G DGS
(x) = {y V : (y, x) E}. X V , let DG
(X) =

+



(x)


(X)
=

(x).

nonempty
subset
X

V

alternatives

xX
xX
G
G
G
partial complete tournament (V, E) dominant every alternative X dominates
every alternative outside X. given G = (V, E) X V , write E X
set edges obtained E adding missing edges alternatives X
alternatives X, i.e.,
E X = E {(x, y) X V :
/ X (y, x)
/ E}.
use E X abbreviation E V \X , write E x , E x , GX , GX
E {x} , E {x} , (V, E X ), (V, E X ), respectively. G = (V, E) X V ,
use E|X G|X denote restriction E(XX) E X restriction (X, E|X )
G X, respectively.
Let n positive integer. partial n-weighted tournament pair G = (V, w)
consisting finite set V alternatives weight function w : V V {0, . . . , n}
pair (x, y) V V x 6= y, w(x, y) + w(y, x) n. say
= (V, w) n-weighted tournament x, V x 6= y, w(x, y) + w(y, x) = n.
call (partial) weighted tournament (partial) n-weighted tournament
n N. class n-weighted tournaments denoted Tn . Observe
partial 1-weighted tournament (V, w) associate partial tournament (V, E)
setting E = {(x, y) V : w(x, y) = 1}. Thus, (partial) n-weighted tournaments seen
generalize (partial) tournaments, may identify T1 .
notations G G0 [G] extended naturally partial n-weighted tournaments G = (V, w) G0 = (V 0 , w0 ) letting (V, w) (V 0 , w0 ) V = V 0
w(x, y) w0 (x, y) x, V , [G] = {T Tn : G }.
given G = (V, w) X V , define wX x, V ,

w

X

(
n w(y, x) x X
/ X,
(x, y) =
w(x, y)
otherwise,

set wX = wV \X . Moreover, wx , wx , GX , GX defined obvious
way.
use term solution concept functions associate tournament = (V, E), weighted tournament = (V, w), choice set S(T ) V .2
solution concept called resolute |S(T )| = 1 tournament . article
consider following solution concepts: Condorcet winners (COND), Condorcet nonlosers (CNL), Copeland (CO), top cycle (TC ), uncovered set (UC ) tournaments,
maximin (MM ), Borda (BO), ranked pairs (RP ) weighted tournaments.
ranked pairs resolute. Formal definitions provided later article.
2. avoid otherwise natural term tournament solution common definition requires
choice set nonempty (Laslier, 1997). would exclude COND.

497

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

3. Possible Necessary Winners
solution concept selects unique set alternatives complete tournament.
holds particular completions partial tournament. However,
completion partial tournament, solution concept may select another set alternatives. similar remark concerns weighted tournaments completions. given
solution concept S, thus define set possible winners partial (weighted)
tournament G set alternatives selected completion G, i.e.,
[
S(T ).
PWS (G) =
[G]

Analogously, set necessary winners G set alternatives selected
every completion G, i.e.,
\
NWS (G) =
S(T ).
[G]

furthermore write
PWSS (G) = {S(T ) : [G]}
possible winning sets, i.e., set sets alternatives selects
different completions G. sake completeness, mention necessary winning
sets. set X necessary winning set partial tournament G X = S(T )
[T ]. Accordingly, conditions set necessary winning set
strong satisfied relatively seldom. Necessary winning sets straightforwardly
characterized means sets possible necessary winners: X necessary
winning set X = PW (G) = NW (G). implies solution
concepts addressed article, computational results surrounding necessary winning
sets follow easy corollaries.3 consider necessary winning sets.
Note NWS (G) may empty even selects nonempty set alternatives
tournament [G], number |PWSS (G)| possible winning sets may
exponential number alternatives G.
following lemmas, relate useful structural properties
sets possible necessary winners. proofs straightforward therefore
omitted.
Lemma 1. Let solution concept G G0 partial tournaments. Then,
(i) G G0 implies PWS (G0 ) PWS (G),
(ii) G G0 implies NWS (G) NWS (G0 ).
say solution concept refines another solution concept 0 , denoted 0 ,
S(G) 0 (G) G. find following monotonicity properties hold.
3. Given results Table 1, fact X necessary winning set X = PW (G) =
NW (G) immediately implies concepts apart ranked pairs deciding whether set
necessary winning set achieved polynomial time. Since ranked pairs resolute, every set
NWSRP singleton {x} {x} PWSRP x NWRP . Consequently,
problem deciding whether set X contained NWSRP coNP-complete.

498

fiPossible Necessary Winners Partial Tournaments

Lemma 2. Let 0 solution concepts G G0 partial tournaments. Then,
(i) 0 implies PWS (G) PWS 0 (G),
(ii) 0 implies NWS (G) NWS 0 (G).
next lemma concerns way sets possible necessary winners
defined terms one another.
Lemma 3. Let solution concept G partial tournament. Then,

(i) PWS (G) = GG0 NWS (G0 ),

(ii) NWS (G) = GG0 PWS (G0 ).
Observe that, 0 generally imply PWSS (G) PWSS 0 (G), following
hold:
0 X PWSS (G) exists X 0 PWSS 0 (G) X X 0 .
Deciding membership sets PWS (G), NWS (G), PWSS (G) given solution
concept partial (weighted) tournament G natural computational problems.
Overloading notation, refer problems PWS , NWS , PWSS , respectively.
PWS (Possible Winners)
Input:
partial tournament G = (V, E) n-weighted partial tournament
G = (V, w) along positive integer n; alternative x V .
Output: Yes, exists completion [G] x S(T ).
No, otherwise.

NWS (Necessary Winners)
Input:
partial tournament G = (V, E) n-weighted partial tournament
G = (V, w) along positive integer n; alternative x V .
Output: Yes, x S(T ) completions [G].
No, otherwise.

PWSS (Possible Winning Set)
Input:
partial tournament G = (V, E) n-weighted partial tournament
G = (V, w) along positive integer n; subset alternatives
X V.
Output: Yes, exists completion [G] X = S(T ).
No, otherwise.
Note PWSS decided polynomial time, means
polynomial-time algorithm decides whether given subset alternatives possible
499

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

winning set. Outputting set PWSS possible winning sets may much difficult,
PWSS may exponential size.4
irresolute solution concepts, PWSS may appear complex problem
PWS . are, however, aware generic polynomial-time reduction PWS
PWSS . relationship problems may interest
classic possible winner setting partial preference profiles.
complete tournaments [T ] = {T } thus PWS (T ) = NWS (T ) = S(T )
PWSS (T ) = {S(T )}. consequence, solution concepts NP-hard
winner determination problemlike Banks, Slater, tournament equilibrium set
problems PWS , NWS , PWSS NP-hard well.5 therefore restrict
attention solution concepts winners computed polynomial time.

4. Unweighted Tournament Solutions
section, consider following well-known solution concepts unweighted tournaments: Condorcet winners, Condorcet non-losers, Copeland set, top cycle,
uncovered set. use partial tournament depicted Figure 2(i ) running
example.


b



b



b

c



c



c



(i ) Partial tournament G

(ii ) Completion T1

(iii ) Completion T2

Figure 2: Example partial unweighted tournament G possible completions T1
T2 . Initially, (dotted) edges pairs {a, b}, {b, c}, {c, d} yet
specified.

4.1 Condorcet Winners Condorcet Non-losers
Condorcet winners Condorcet non-losers fundamental solution concepts
provide nice warm-up. alternative x V Condorcet winner complete tournament = (V, E) dominates alternatives, i.e., (x, y) E V \ {x}.
set Condorcet winners tournament denoted COND(T ); obviously
set always either singleton empty. alternative x Condorcet loser
dominated every alternative, i.e., (y, x) E V \ {x}. Consequently,
x Condorcet non-loser = (V, E) x Condorcet loser V = {x}.
set Condorcet non-losers tournament denoted CNL(T ); obviously
set always cardinality |V | |V | 1.
4. instance, G = (V, ) PWS TC (G ) = {X V : |X| 6= 2}, even though PWSTC P
(Theorem 4).
5. exclude possibility computing (arbitrary) possible winner possible winning
set solution concepts could done polynomial time.

500

fiPossible Necessary Winners Partial Tournaments

Let G = (V, E) partial tournament. alternative x dominant G, x
obviously Condorcet winner completions G. hand,
V \ {x} case (x, y) E, completion G x
Condorcet winner. Hence,
x NWCOND (G) (x, y) E V \ {x}

x PWCOND (G) (y, x) E V \ {x}.
Obviously, criteria right-hand side equivalences checked polynomial time.
turn problem PWSCOND . sets PWSCOND (G) either
singleton empty set, determining membership singleton obviously
tractable. Checking whether PWSCOND (G) quite simple. following
result gives exact characterization PWSCOND (G), interesting
right.
Lemma 4. Let U set undominated alternatives partial tournament G = (V, E).
Then,
every alternative x V , {x} PWSCOND (G) x U ;
6 PWSCOND (G) 1 |U | 2 U dominant.
Proof. Since complete tournament either one Condorcet winner none, set
PWSCOND (G) cardinality 0 1. Clearly, {x} PWSCOND (G) x U .
remains shown PWSCOND (G) contains U = , |U | 3,
1 |U | 2 U dominant.
U = , COND(T ) = every [G]. follows PWSCOND (G).
|U | 3, consider directed cycle C U U visits every alternative U .6 Then,
set undominated alternatives G0 = (V, E C) empty. follows
PWSCOND (G).
U = {x} x dominant, x Condorcet winner every [G]. Therefore,

/ PWSCOND (G).
U = {x} {x} dominant, (x, y)
/ E 6= x. Consider
completion G containing (y, x). completion, set undominated alternatives
empty. follows PWSCOND (G).
U = {x, y} {x, y} dominant, every [G], either (x, y) x
Condorcet winner , (y, x) Condorcet winner . follows

/ PWSCOND (G).
Finally, U = {x, y} {x, y} dominant, z 6= x,
(x, z)
/ E (y, z)
/ E. Without loss generality, assume (x, z)
/ E. Consider
completion G containing (z, x) (x, y). completion exists, (x, z)
/ E,
(y, x)
/ E (since x U ). completion, set undominated alternatives
empty. follows PWSCOND (G).
6. cycle C subgraph G. fact, G|U contain edges.

501

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

position prove following theorem.
Theorem 1. PWCOND , NWCOND , PWSCOND solved polynomial time.
results PWCOND NWCOND follow Corollary 2 Konczak
Lang (2005).
note Theorem 1 corollary corresponding results maximin
Section 5.2. reason Condorcet winner maximin winner 1weighted tournament, tournament admit Condorcet winner
alternatives maximin winners.
conclude section observing problems PWCNL , NWCNL ,
PWSCNL reducible NWCOND , PWCOND , PWSCOND , respectively.
straightforwardly checked partial tournaments G = (V, E) |V | > 1
X V ,
X PWSCNL (G) V \ X PWSCOND (G1 ),
G1 = (V, E 1 ) G set edges inverted, i.e., E 1 = {(x, y) : (y, x) E}.
follows that,
PWCNL (G) = V \ NWCOND (G1 ),
NWCNL (G) = V \ PWCOND (G1 ).
Since complement set computed polynomial time edges
reversed polynomial time well, obtain following result corollary
Theorem 1.
Theorem 2. PWCNL , NWCNL , PWSCNL solved polynomial time.
example, consider partial tournament G depicted Figure 2(i )
dominating alternative set undominated alternatives G U = {a, b}.
Therefore,
PWCOND (G) = {a, b}
NWCOND (G) = .
PWSCOND (G), note set U dominant (b, c)
/ E. Lemma 4,
gives
PWSCOND (G) = {{a}, {b}, }.
Condorcet non-losers, observe G1 = (V, E 1 ) E 1 = {(c, a), (d, a), (d, b)}.
Now, PWCOND (G1 ) = {c, d}, NWCOND (G1 ) = , (from Lemma 4)
PWSCOND (G1 ) = {{c}, {d}, }. Therefore,
PWCNL (G) = {a, b, c, d},
NWCNL (G) = {a, b},
PWSCNL (G) = {{a, b, d}, {a, b, c}, {a, b, c, d}}.

502

fiPossible Necessary Winners Partial Tournaments

4.2 Copeland
Copelands solution selects alternatives based number alternatives
dominate. Define Copeland score alternative x tournament = (V, E)
sCO (x, ) = |DT+ (x)|.
set CO(T ) consists alternatives maximal Copeland score.
illustrative example, consider partial tournament G shown Figure 2(i ). completions G (respectively b) Condorcet winner, (respectively b) sole Copeland winner completion shown Figure 2(ii ).
two completions neither b Condorcet winner
{(a, c), (a, d), (b, a), (b, d), (c, b), (c, d)},
set Copeland winners {a, b, c},
{(a, c), (a, d), (b, a), (b, d), (c, b), (d, c)},
depicted Figure 2(iii ), set Copeland winners {a, b}. Therefore,
PWCO (G) = {a, b, c},
NWCO (G) = ,
PWSCO (G) = {{a}, {b}, {a, b}, {a, b, c}}.
Since Copeland scores coincide Borda scores case 1-weighted tournaments,
following direct corollary results Section 5.1.7
Theorem 3. PWCO , NWCO , PWSCO solved polynomial time.
PWSCO solvable polynomial time, get following corollary,
may independent interest graph theorists.
Corollary 1. exists polynomial-time algorithm check whether partial tournament admits regular completion, i.e., completion every alternative
out-degree.
see this, merely observe completion = (V, E) partial tournament
regular CO(T ) = V .
4.3 Top Cycle
top cycle tournament = (V, E), denoted TC (T ), unique minimal
dominant subset V .
Lang et al. shown possible necessary winners TC computed
efficiently greedy algorithms (Lang et al., 2012, Corollaries 1 2). Still, give
following characterization prove useful come consider possible
7. PWCO alternatively solved via polynomial-time reduction maximum network flow (Cook et
al., 1998, p. 51).

503

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

winning sets TC . alternative possible TC -winner
reach every alternative via existing unspecified edges. Formally, given partial
tournament G = (V, E), alternative x V PWTC (G) every
alternative V , exists path x0 , x1 , x2 , . . . , xk x = x0 , = xk ,
(xi+1 , xi )
/ E {0, . . . , k 1}. call path possible path. possible
path x exists, denote x
y.
Observe pair b alternatives partial tournament G = (V, E),
possible path b, (b, a) E. set alternatives
reach every alternative via possible path partial tournament G = (V, E)
known Good set (Good, 1971) denoted GO(G).8 follows
GO(G) polynomial-time computable. Moreover, following lemma.
Lemma 5. Let G = (V, E) partial tournament |V | 3, GO(G) = V , x
alternatives (x, y), (y, x)
/ E. Let Gxy = (V, E {(x, y)})
Gyx = (V, E {(y, x)}). Then, GO(Gxy ) = V GO(Gyx ) = V .
Proof. Assume contradiction GO(Gxy ) GO(Gyx ) strict subsets
V . Clearly, x GO(Gxy ) GO(Gyx ). Moreover, claim x
/
GO(Gyx )
/ GO(Gxy ). see x
/ GO(Gyx ) holds, assume contradiction
x GO(Gyx ). Then, possible path x Gyx . path
used replace edge (x, y) (which available possible paths G,
Gyx ). Therefore, possible path two alternatives Gyx whenever
one G. Since GO(G) = V , GO(Gyx ) = V well, contradicting
assumption. analogous argument shows
/ GO(Gxy ).
established x GO(Gxy ) \ GO(Gyx ) GO(Gyx ) \ GO(Gxy ),
know possible path x Gyx , neither possible
path x Gxy . consider z V \ {x, y}. either
(i) (x, z) E (y, z) E,
(ii) (z, x) E (z, y) E,
otherwise would either possible path x Gyx possible path
x Gxy .
(i), recall assumed GO(G) = V . Hence, G possible
paths z
x z
y. Observe may assume either possible path z
x contain (y, x), possible path z contain (x, y).
former case, y, z
x possible path Gxy . latter case, x, z
possible
yx
path G
. Thus, either case yields contradiction.
(ii), GO(G) = V implies possible paths x
z
z G,
may assume either possible path x z contain (y, x)
possible path z contain (x, y). former case, possible
path x
z, Gxy . latter case, possible path
z, x Gyx . Again,
either case leads contradiction. concludes proof.
8. Equivalently, Good set partial tournament G = (V, E) unique minimal dominant subset
V . Good set known Smith set (Smith, 1973) GETCHA (T. Schwartz, 1986).

504

fiPossible Necessary Winners Partial Tournaments

ready show PWSTC solved efficiently. Note
check exists completion set question dominating,
smaller dominating set.
Theorem 4. PWSTC solved polynomial time.
Proof. Let set consideration X. set X cannot empty C(T ) 6=
every [G]. |X| = 1, problem PWSTC equivalent PWCOND .
|X| = 2, answer already top cycle never size two. may
therefore assume |X| 3.
Consider graph GX . X dominate V \ X GX , X
/ PWSTC (G)
alternative V \ X beats alternative X. Therefore, need check
whether X PWSTC (G|X ), i.e., whether X possible top cycle set partial
tournament G restricted X. essence, problem PWSTC reduced restricted
problem PWSTC set alternatives.
prove V PWSTC (G) GO(G) = V . Obviously, V 6= GO(G)
V
/ PWSTC (G). direction, start partial tournament G =
(V, E) GO(G) = V . iteratively applying Lemma 5, new edges successively
added G maintaining GO(G) = V G tournament.
example, consider partial tournament G depicted Figure 2(i ),
show
PWTC (G) = {a, b, c, d},
NWTC (G) = ,
PWSTC (G) = {{a}, {b}, {a, b, c}, {a, b, c, d}}.
result PWTC (G) witnessed completion shown Figure 2(iii ) every
alternative top cycle. NWTC (G), statement follows observation every alternative, exists completion another alternative
Condorcet winner. Regarding PWSTC (G), consider subset separately. Since
PWSCOND PWSTC , get {a} {b} PWSTC (G). {a, b, c}, apply
result shown second paragraph proof Theorem 4: a, b, c undominated
d, Good set G|{a,b,c} {a, b, c}. Likewise, Good set G {a, b, c, d}.
remains shown subsets size three PWSTC (G).
end, note Good set G|{a,b,d} {a, b} neither {a, c, d} {b, c, d}
undominated G.
4.4 Uncovered Set
Given tournament = (V, E), alternative x V said cover another alternative
V DT+ (y) DT+ (x), i.e., every alternative dominated dominated x.
uncovered set , denoted UC (T ), set alternatives covered
alternative. useful alternative characterization uncovered set via
two-step principle: alternative uncovered set reach
every alternative two steps.9 Formally, x UC (T )
9. graph theory, vertices satisfying property often called kings.

505

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

V \ {x}, either (x, y) E z V (x, z), (z, y) E. denote
+
+
++
two-step dominion DE
(DE
(x)) alternative x DE
(x).
first consider PWUC , check alternative whether
reinforced reach every alternative two steps.
Theorem 5. PWUC solved polynomial time.
Proof. given partial tournament G = (V, E) alternative x V , check
whether x UC (T ) completion [G].
Consider graph G0 = (V, E 00 ) E 00 derived E follows. First,
let D+ (x) grow much possible letting E 0 = E x . Then,
+
two-step dominion defining E 00 E 0DE0 (x) . claim x PWUC (G)
+
++
V = {x} DE
00 (x) DE 00 (x).
() First, let x PWUC (G). definition, completion (V, E )
+
++
00
V \ {x} DE
(x) DE (x). definition E , follows
++
+
++
++
+
+
DE (x) DE 00 (c) DE (x) DE 00 (x). Consequently, DE 00 (x) DE
00 (x).
++
+
() direction, let V \ {x}, DE 00 (x) DE 00 (x). completion
G0 , x trivially UC (T ), implying x PWUC (G).
similar argument yields following.
Theorem 6. NWUC solved polynomial time.
Proof. given partial tournament G = (V, E) alternative x V , check
whether x UC (T ) completions [G].
Consider graph G0 = (V, E 00 ) E 00 defined follows. First, let E 0 = E x . Then,

expand E 00 = E 0DE0 (x) . Intuitively, makes hard possible x beat
alternatives outside dominion two steps. claim x NWUC (G)
+
++
V = {x} DE
00 (x) DE 00 (x) equivalently, 6= x path
length one two x G.
() First, let x NWUC (G). Assume contradiction exists V \ {x}
++
+

0

/ DE
00 (x) DE 00 (x). Then, completion (V, E ) G , x cannot reach

two steps consequently x
/ UC (V, E ), contradiction.
++
+
completion (V, E ) G,
() Now, let V \ {x} = DE
00 (x) DE 00 (x).
+
+
++
++
DE 00 (x) DE (x) DE 00 (x) DE (x). Consequently, x UC (V, E )
x NWUC (G).
+
++
checked polynomial time whether V = {x} DE
00 (x) DE 00 (x),
completes proof.
Consider partial tournament G Figure 3(i ) example.
checked NWUC (G) = .10 PWUC , consider alternative separately.
a, E 0 = E = {(a, b), (a, c), (a, d), (b, d)}, E 00 = E 0 , therefore
+
DE
Likewise, b PWUC (G). Now, c,
00 (a) = {b, c, d} PWUC (G).
E 0 = {(a, c), (a, d), (b, d), (c, b), (c, d)} E 00 = {(a, c), (a, d), (b, d), (c, b), (c, d), (b, a)},
+
++
see Figure 3(ii ). gives us DE
00 (c) = {b, d} DE 00 (c) = {a}, there0
fore, c PWUC (G). Lastly, d, E = {(a, c), (a, d), (b, d), (d, c)} E 00 =
10. consequence NWTC (G) = (Section 4.3) NWUC NWTC (Lemma 2).

506

fiPossible Necessary Winners Partial Tournaments



b



b



b

c



c



c



(i )

(ii )

(iii )

Figure 3: partial unweighted tournament G possible extensions. center,
alternative c dominion maximally reinforced resulting c reaching every
alternative two steps. Therefore, c PWUC (G). right,
done alternative cannot reach two steps therefore contained
PWUC (G).
+
{(a, c), (a, d), (b, d), (d, c), (c, b)} depicted Figure 3(iii ). gives us DE
00 (d) = {c}
++
/ PWUC (G). summary,
DE 00 (d) = {b}, implying

PWUC [G] = {a, b, c},
NWUC (G) = ,
PWSUC (G) = {{a}, {b}, {a, b, c}},
PWSUC (G) obtained ad hoc argument.
solution concepts considered farCondorcet winners, Condorcet non-losers,
Copeland, top cyclePW PWS complexity. One might wonder
whether result holds generally, whether could polynomialtime reduction PWS PW. following find case, unless
P=NP, show PWSUC , problem deciding whether subset alternatives
partial tournament G uncovered set completion G, NP-complete.
proof result proceeds reduction Sat involves construction partial
tournaments basis formulas conjunctive normal form. propositional
variable p every clause c, gadget based partial tournament Gp
depicted Figure 4(i ).
hard see exactly two completions Gp {p , p+ , 1}
uncovered set. first, + positive completion, depicted Figure 4(ii )
other, negative completion, Figure 4(iii ). verify
ones, consider arbitrary completion (V, E 0 ) Gp . Then, either (p , p+ ) E 0
(p+ , p ) E 0 . former case, observe p must covered 1. Hence,
(1, p ) E 0 (c, p ) E 0 . follows c covered p+ . Therefore,
(p+ , 1) E 0 (p+ , c) E 0 . entails p covers p+ and, (p+ , p+ ) E 0
finally obtain (p , p+ ) E 0 . resulting tournament + . analogous argument
seen results assume (p , p+ ) E 0 . construction below,
positive completion + correspond setting propositional variable p true
negative completion setting p false.
Besides c, construction involves alternative c clause. c related
alternatives Gp depends whether respective clause contains p p
literal. may assume clause contains p p, three cases remain,
507

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

p

p+

1

p

p+

1

p

p+

1

p

p+

c

p

p+

c

p

p+

c

(i ) variable gadget variable p

(ii ) completion + p set true

(iii ) completion p set false

Figure 4: partial tournament Gp two completions, + ,
uncovered set given {p , p+ , 1}. Dotted edges missing omitted edges point
downwards.

p

p+

1

p

p+

c

p

p+

(i ) c contains p p

1

p

p+

c

c

p

p+

(ii ) c contains p p

1

c

c

p

p+

c

(iii ) c contains neither p p

Figure 5: Gp -gadget alternative c added. Figure 4, dotted edges missing
omitted edges point downwards.
depicted Figure 5. reflection reveals clause contains p positive
literal, c covered p+ partial tournament completed positively,
p completed negatively. Similarly, clause contains p negative literal, c
covered p Gp completed negatively, p+ Gp completed
positively. c contains neither p p literal, c covered either p+ p
irrespective whether Gp completed positively negatively.
construction below, every clause, alternative c covered
clause contains literal p Gp -gadget completed positively literal q
Gq -gadget completed negatively.
Theorem 7. PWSUC NP-complete.
Proof. Given partial tournament G = (V, E), set X V , completion [G],
checked polynomial time whether X = UC (T ). Hence, PWSUC obviously
NP.
NP-hardness shown reduction Sat. Let formula conjunctive
normal form. Without loss generality may assume clause contains
508

fiPossible Necessary Winners Partial Tournaments

literal negation, least two clauses, every literal occurs
least one clause. construct partial tournament G = (V , E ) follows.
propositional variable p introduce five alternatives denoted p, p , p+ , p , p+ .
clause c, introduce two alternatives denoted c c. two auxiliary
alternatives denoted 1 0. Thus,
V = {p, p , p+ , p , p+ : p variable} {c, c : c clause} {1, 0}.
give description edge set E . every propositional variable p
every clause c alternatives p , p+ , p , p+ , 1, c, c organized Figure 5.
remaining edges set way make construction work properly. Formally,
define edge set E every propositional variable p every clause c:
p dominates every clause well q , q + , q , q + every q 6= p;
p+ dominates 0, p, p along q , q + , q 6= p clauses d.
Moreover, every clause d, alternative p+ dominates alternative p
occurs literal clause d;
p dominates 0, p, p+ along q , q + , q 6= p clauses d.
Moreover, every clause d, alternative p dominates alternative p
occurs literal clause d;
p+ dominates 0, p, p+ ;
p dominates 0, p, p ;
c dominates 0, q , q + every variable q, every clause 6= c. Moreover,
variable q, alternative c dominates q + whenever c contain q literal,
q c contain q literal;
c

dominates 0, c, 1;

1 dominates 0 well q, q , q + variables q, clauses d;
0 dominates alternative q every variable q, otherwise 0 dominated
alternatives.
Moreover, every variable p, edges among p , p+ , 1 missing well
p , p+ , every clause d. Finally, edges specified
description set arbitrarily. example construction reader referred
Figure 6.
let
X = {p, p , p+ : p propositional variable} {c : c clause} {1}.
Table 2 summarizes alternatives reach alternatives two
steps G . thus find that, every completion G , set X contained
UC (T ) 0 covered 1. propositional variables p clauses c, alternatives p , p+ , c covered alternatives {p , p+ , 1}, i.e., whether
509

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

p

p

p

q

p+

p+

1

pq

pr

pq

pr

q

q+

q

q+

0

Figure 6: Part dominance relation partial tournament G associated
CNF formula = (p q) (p r). alternatives pq pr represent two clauses .
part involving variable r, i.e., alternatives r, r , r+ , r , r+ , omitted.
dashed edges dependent clauses . Omitted edges point downwards or,
level, arbitrary direction. Dotted edges missing.
covered depends subtournament {p , p+ , 1, p , p+ , c} completed. saw discussion preceding theorem, done positively
negatively, positive completion corresponds setting variable p true
negative completion setting p false. complete proof showing
X = UC (T ) [G ]

satisfiable.

() First assume satisfiable let v satisfying assignment .
propositional variable p v sets true clause c, complete subtournament {p , p+ , 1, p , p+ , c} positively, i.e., add edges (p , p+ ), (p+ , 1), (1, p )
well (p , p+ ), (p+ , c), (c, p ). Thus, p covered 1, p+ p , and, provided
p occurs literal c, c p+ . Similarly, propositional variable q v
sets false clause c, complete subtournament {p , p+ , 1, p , p+ , c} negatively, i.e., add edges (1, q + ), (q + , q ), (q , 1) well (c, q + ), (q + , q ),
(q , c). Accordingly, q covered q + , q + 1, and, provided q occurs literal
c, c q . Observe procedure induces well-defined completion G ,
denote Tv . v satisfies , every clause contains literal p v sets p
true literal q v sets q false. follows every clause c, alternative c
covered Tv . Observe p p+ covered Tv irrespective whether v sets p
510

fiPossible Necessary Winners Partial Tournaments

p q

p

p+

1

q q+ c

p

p+

c

q q+ 0

p
p
p+
1
c[p]
c[p]





0
0

q
0
0

0
0

c[p]

p
p

p

c[p]
p+

p+
p+


c
c
c






c
c


p
p
p p c[p]


p
p
p p
c[p]

q q+

p
p




p




p+

p
p+
c[p]
c[p]
0



0
0


0
0
0
0




c

q




c
q







p
p
c
c
p

p
p
c
c
p

p
p
1
1
p

p
p
1
1
p


p+
1
1
q

p

1
1
q

p
p


p

p
p
c
c
p















c






p
p
1
1
p

p
p
1
1
p







Table 2: Table summarizing types alternatives reach types alternatives one two steps (all completions of) partial tournament G . assume p
q distinct variables neither q q occurs literal c. Furthermore, c
assumed distinct clauses, c[p] denotes clause c understanding
p occurs literal c. Similarly, c[p] denotes clause c understanding p
occurs literal c. alternative x entry row r column c means r
reach c via x. entry dot (), r reach c directly, i.e., one zero
steps. box () signifies depends G completed whether
via alternative r reach c. minus () entry 0 1 means 0
cannot reach 1 two steps, matter G completed. Thus, 0 covered
1 every completion G . may assume clause contains literal
negation, least two clauses, every literal occurs least one
clause.
true false. Hence, c, p+ , p
/ UC (Tv ). Recalling 1 covers 0 X UC (T )
completions G , may conclude UC (Tv ) = X, desired.
() opposite direction, assume completion G
every propositional variable p every clause c, alternatives p , p+ , c
covered , i.e., UC (T ) = X. Define assignment vT sets
propositional variable p true clause c containing p literal
p+ covers c sets p false, otherwise. Observe vT well-defined
assignment.
show vT satisfies every clause hence well. end
consider arbitrary clause c. assumption, c covered alternative x. Recall
c reaches alternatives two steps except alternatives p+ p occurs
literal c alternatives q q occurs literal c (also see Table 2).
Hence, either x = p+ variable p occurring literal c x = q
variable q q occurs literal c.
former, vT sets p true consequently satisfies clause c. latter,
demonstrate vT sets q false way satisfies clause c. suffices
511

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

2

4

q

q+

6

1

5
3
1

q

q+

c



Figure 7: Illustration concluding argument proof Theorem 7. double
edge alternative x alternative indicates x covers y. numbers
edges labelled correspond order existence demonstrated
proof Theorem 7.

show clause q + covers . end, consider arbitrary
clause d. prove q + cover refer Figure 7 illustration
reasoning. Let ET denote edge set . extends G , obviously E ET . First
recall assumed q covers c . (c, 1) E , (q , 1) ET .
Since (q , q ) E , therefore case 1 covers q . Reaching every
alternative two steps G , alternative q must therefore covered q +
. (q , q ) E , follows (q + , q ) ET . Since, moreover, (q + , q + ) E ,
q cover q + . Rather, q + reaches every alternative except 1
two steps . follows q + covered 1. Moreover, since (q + , q + ) E ,
(1, q + ) ET . consider alternative observe that, construction, (d, 1) E .
Thus, reach q + two steps may conclude q + cover .
follows vT sets q false thus satisfies c, desired.

5. Weighted Tournament Solutions
turn weighted tournaments, particular consider solution concepts
Borda, maximin, ranked pairs.
5.1 Borda
Borda solution (BO) typically used voting context set N n voters,
voter equipped linear ranking individual preference. Then,
alternative receives |V | 1 points time ranked first voter, |V | 2
points time ranked second, forth. total number points
alternative x constitute Borda score sBO (x, (i )iN ) written
sBO (x, (i )iN ) =

X


512

|{y V : x y}|.

fiPossible Necessary Winners Partial Tournaments

generally, Borda solution extended n-weighted tournaments
Borda scores defined
X
sBO (x, (V, w)) =
w(x, y)
yV \{x}

BO(V, w) chooses alternatives maximum Borda score. subsumes
voting setting
X
sBO (x, (i )iN ) =
|{i N : x y}| = sBO (x, (V, w))
yV

weight edge x defined number voters rank x
higher y, i.e.,
w(x, y) = |{i N : x y}|.
proceed, define notion b-matching, used proofs
several results section. Let H = (VH , EH ) undirected graph
vertex capacities b : VH N0 . Then, b-matching H function : EH N0
v VH ,
X
m(e) b(v).
e{e0 EH :ve0 }

P
size b-matching defined
eEH m(e). easy see b(v) = 1
v VH , maximum-size b-matching equivalent maximum-cardinality
matching. b-matching problem upper lower bounds, function
: VH N0 . feasible b-matching function : EH N0
X
a(v)
m(e) b(v).
e{e0 EH :ve0 }

H bipartite, problem computing maximum-size feasible b-matching
lower upper bounds solved strongly polynomial time (Schrijver, 2003,
ch. 21). use result show PWBO PWSBO solved
polynomial time. following result PWBO shown using Theorem 6.1
Kern Paulusma (2004), still give direct proof extended
PWSBO .
Theorem 8. PWBO solved polynomial time.
Proof. Observe BO satisfies following (weak) monotonicity property: making
winner x stronger increasing weight edge another alternative, cannot make x
losing alternative.
Let G = (V, w) partial n-weighted tournament, x V . previous observation,
x PWBO (G) x PWBO (Gx ). Therefore, assume w.l.o.g
G = Gx , i.e., edges incident x completely specified already. Moreover,
exists V \ {x} sBO (y, Gx ) > sBO (x, Gx ), already know
x
/ PWBO (G). thus assume sBO (y, Gx ) sBO (x, Gx ) V \ {x}.
513

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

give polynomial-time algorithm checking whether x PWBO (Gx ) via
reduction problem computing maximum-size b-matching bipartite graph.
Let = sBO (x, Gx ) Borda score x Gx . construct bipartite graph
H = (VH , EH ) vertices
VH = V \ {x} E x ,
E x = {{i, j} V \ {x} : 6= j}
edges
EH = {{i, {i, j}} : {i, j} V \ {x}, 6= j}.
define vertex capacities b : VH N0
b({i, j}) = n w(i, j) w(j, i) {i, j} E x
b(v) = sBO (v, Gx ) v V \ {x}.
observe completion = (V, w0 ) [Gx ], w0 (i, j) + w0 (j, i) = n
i, j V 6= j. sum Borda scores therefore n|V |(|V | 1)/2.
weight already used Gx ; weight yet used
equal
X
= n|V |(|V | 1)/2
sBO (v, Gx ).
vV

(Gx )

claim x PWBO
H b-matching size least .
0
x
() Let = (V, w ) [G ] completion x BO(T ). Consider bmatching m(i, {i, j}) = w0 (i, j) w(i, j). verify feasible b-matching.
Let v VH . v V \ {x},
X

m(e) = sBO (v, ) sBO (v, Gx ) sBO (v, Gx ) = b(v).

e{e0 EH :ve0 }

Otherwise, v = {i, j} E x
X

m(e) = m({i, {i, j}}) + m({j, {i, j}}) = n w(i, j) w(j, i) = b({i, j}).

e{e0 EH :{i,j}e0 }

size
X
X
X X
X
m(e) =
w0 (i, j) + w0 (j, i) w(i, j) w(j, i) =
n
w(i, j) = ,
eEH

i6=j

i6=j

iV jV \{i}

statement shown.
() direction, assume feasible b-matching size least exists.
construct completion = (V, w0 ) [Gx ] x BO(T ). Let
w0 (i, j) = m(i, {i, j}) + w(i, j)
0

{i, j} V \ {x},

0

w (x, i) = w(x, i), w (i, x) = w(i, x)
514

V \ {x}.

fiPossible Necessary Winners Partial Tournaments

w(i, j) w0 (i, j) w0 (i, j)+w0 (j, i) w(i, j)+w(j, i)+b({i, j}) = n {i, j} V ,
extension Gx .
X
X
X
b({i, j})
m(e) =
,
=
{i,j}E x

eEH

i6=j

know upper capacities b({i, j}) {i, j} E x exactly met (and
cannot matching size ). implies
w0 (i, j) + w0 (j, i) = w(i, j) + w(j, i) + b({i, j}) = n,
showing indeed completion Gx .
Since H constructed efficiently, since maximum-size b-matching
computed strongly polynomial time, algorithm runs polynomial time.

1
1



1
1



b

1

5

1

5

5

4

4

2

c

2
2

2

cap.

3
2

c



cap.



3

{a, b}

1
4



3

b

5



2

1

{a, d}

2

5

{b, d}

1

c

b
5

3

3



(ii ) partial tournament Gc .

(i ) partial 5-weighted tournament G.

0

b

1 4
2

(iii )

constructed
bipartite
graph H target Borda score
= sBO (c, Gc ) = 8. Capacities
given next vertices. Thick
edges weights indicate unique
maximum b-matching.

3
2



(iv ) completion G corresponds maximum b-matching.
case, BO(T ) = {a, b, c}.

Figure 8: Illustration algorithm checking whether alternative c contained
PWBO (G) partial 5-weighted tournament G.
Figure 8 illustrates described steps determining whether alternative contained PWBO (G).
idea extended polynomial-time algorithm PWSBO use
similar construction given G = (V, w), candidate set X V target Borda
score . Binary search used efficiently search interval possible target scores.
515

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Theorem 9. PWSBO solved polynomial time.
Proof. Let G = (V, w) partial n-weighted tournament, X V . give
polynomial-time algorithm checking whether X PWSBO (G), via bisection method
reduction problem computing maximum b-matching graph lower
upper bounds.
Assume target Borda score completion [G] X
PWSBO (T ) sBO (x, ) = x X. Then, maximum possible Borda score
alternative X 1.
given target Borda score , construct bipartite graph H = (VH , EH )
vertices VH = V E x ,
E x = {{i, j} V : 6= j},
edges
EH = {{i, {i, j}} : {i, j} V, 6= j, w(i, j) + w(j, i) < n}.
lower bounds : VH N0 upper bounds bs : VH N0 depend
defined follows. vertices x X, lower upper bounds coincide given

(x) = bs (x) = sBO (x, G).
vertices v VH \ X lower bound (v) = 0. Upper bounds
vertices defined
bs (v) = sBO (v, G) 1
v V \ X,
bs ({i, j}) = n w(i, j) w(j, i)
{i, j} E x .
proof Theorem 8, holds feasible b-matching H corresponds
extension G. extension completion [G] b-matching
size
X
= n|V |(|V | 1)/2
sBO (v, G),
vV

equals weight yet used G. Then, satisfies X PWSBO (T )
sBO (x, ) = x X. If, hand, gives rise graph
b-matching size , X 6 PWSBO (G).
order obtain polynomial-time algorithm, need check whether exists
target score corresponding graph H upper lower bounds admits
b-matching size . easily verified contained integer interval
= [ max sBO (x, G), n(|V | 1) ].
xX

Observe |I| depends n thus polynomially bounded size G.
Checking every integer therefore feasible polynomial time. However,
show perform binary search order find efficiently. need following
516

fiPossible Necessary Winners Partial Tournaments

two observations interval I. I, say admits feasible b-matching
corresponding graph H feasible b-matching.
First, s0 admits feasible b-matching, every s00 s00 s0
admits feasible b-matching. removing weight edges exceeds
(reduced) upper bounds gives feasible b-matching s00 .
Second, s0 0 size corresponding maximum feasible bmatching m0 , cannot s00 s00 s0 size 00 maximum
feasible b-matching m00 s00 smaller 0 . either (i ) m00 exists
since lower bounds met, (ii ) m00 exists size least 0 .
see latter, note decrease size maximum feasible matching cannot
caused upper bounds bs00 (v) bs0 (v) v VH . remains shown
increase as00 (v) v X result smaller maximum b-matching. Since
weight edges incident vertex X b-matching completely determined
bounds increases m0 m00 , total decrease size due edges
{j, {i, j}} V \ X, j V whose weight bounded bs00 ({i, j}) m00 (i, {i, j}).
then,
m00 (i, {i, j}) + m00 (j, {i, j}) = bs00 ({i, j}) bs0 ({i, j}) m0 (i, {i, j}) + m0 (j, {i, j})
therefore 00 0 .
two observations show partitioned two non-overlapping integer
intervals I1 I2 . Here, I1 admits feasible b-matching whose size increases
grows, whereas I2 admit feasible b-matchings. Therefore, either
I1 empty desired exist, = max(I1 ).
check existence following binary search algorithm. Let
[Imin , Imax ] interval initialized = [maxxX sBO (x, G), n(|V | 1)]. Consider
median value interval. corresponding graph H feasible b-matching,
continue interval [Imin , 1]. Otherwise, maximum feasible b-matching
size least , return yes. size less , continue [s+1, Imax ]. [Imin , Imax ]
empty, return no.
number queries algorithm bounded dlog2 |I|e dlog2 n|V |e and,
therefore, polynomial size G.
conclude section, show NWBO solved polynomial time well.
worth noting result follow directly polynomial-time result
NWBO case preference profiles (Xia & Conitzer, 2011).
Theorem 10. NWBO solved polynomial time.
Proof. Let G = (V, w) partial weighted tournament, x V . give polynomial-time
algorithm checking whether x NWBO (G).
Let G = Gx . want check whether alternative V \ {x}
achieve Borda score = sBO (x, G). done separately
V \ {x} reinforcing much possible G. y, sBO (y, Gy ) > ,
x
/ NWBO (G). If, hand, sBO (y, Gy ) V \ {x},
x NWBO (G).
517

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

example, consider partial 5-weighted tournament G Figure 8(i ). fact
{a, b, c} PWBO (G) follows already completion shown Figure 8(iv ).
note completion c chosen. Alternative possible
Borda winner since sBO (d, Gd ) = 7 < 8 = sBO (a, G). determine PWSBO (G), still
check subsets {a, b, c} possible winning sets. singletons, easy
see {a} {b} PWSBO (G). {a, b}, could employ binary
search method described Theorem 9. Here, argue moving one unit weight
(c, d) (d, c) completion shown Figure 8(iv ) gives completion
{a, b} winning set. NWBO (G), straightforward check alternative
necessary Borda winner. Altogether,
PWBO (G) = {a, b, c},
NWBO (G) = ,
PWSBO (G) = {{a}, {b}, {a, b}, {a, b, c}}.
5.2 Maximin
maximin score sMM (x, ) alternative x weighted tournament = (V, w),
given worst pairwise comparison, i.e., sMM (x, ) = minyV \{x} w(x, y). maximin solution, known Simpsons method denoted MM , returns set
alternatives highest maximin score.
example, consider partial 5-weighted tournament depicted Figure 9(i ).
easy see (or b) unique maximin winners completions Ga (or Gb ).
Also, c cannot possible maximin winner always maximin score 0
whereas always least 1. Similarly, alternative never higher maximin
score a. Figure 9(iii ) shows completion {a, d} set maximin winners.
one unit weight shifted (c, b) (b, c), resulting completion {a, b, d}
maximin winners. straightforward find completion G{a,b} {a, b}
set maximin winners. easy verify alternative necessary maximin
winner.
Together, gives
PWMM (G) = {a, b, d},
NWMM (G) = ,
PWSMM (G) = {{a}, {b}, {a, b}, {a, d}, {a, b, d}}.
first show PWMM polynomial-time solvable reducing problem
finding maximum-cardinality matching graph.
Theorem 11. PWMM solved polynomial time.
Proof. show check whether x PWMM (G) partial n-weighted tournament
G = (V, w). Consider graph Gx = (V, wx ). Then, sMM (x, Gx ) best possible
maximin score x get among completions G. sMM (x, Gx ) n2 ,
sMM (y, ) wx (y, x) n2 every V \ {x} every completion [Gx ],
therefore x PWMM (G).
518

fiPossible Necessary Winners Partial Tournaments

1
1



b

1
5

4

c

2
2
2

c





(i ) partial 5-weighted tournament G.

1
4



{a, b}
{a, c}
{a, d}
{b, c}
{b, d}
{c, d}



b

(ii )

constructed
bipartite

graph H = 1 X = {a, d}
proof Theorem 12.
maximum-cardinality matching given
thick edges.

b



14

5

5

3
5
3
2

b

3

2

c

3
2

14
2

5

c



(iii ) completion G could
obtained matching. Indeed,
MM (T ) = {a, d} sMM (T ) = 1.

3
2



(iv ) completion G witness
{a, b} PWSMM (G).

Figure 9: Example 5-weighted partial tournament completions relevant possible
maximin winners.
consider sMM (x, Gx ) < n2 . reduce problem checking whether x
PWMM (G) finding maximum-cardinality matching undirected unweighted
graph, known solvable polynomial time (Edmonds, 1965). want
find completion [Gx ] sMM (x, ) sMM (y, ) V \ {x}.
words, want complete weights edges alternatives V \ {x}
balanced way x still winner. exists V \ {x}
sMM (y, Gx ) > sMM (x, Gx ), already know x
/ PWMM (G). Otherwise,
V \ {x} derives maximin score least one particular edge (y, z)
z V \ {x, y} w(y, z) sMM (x, Gx ). Moreover, clear completion,
z cannot achieve maximin score less sMM (x, Gx ) edges (y, z)
(z, y) time. Let H = (VH , EH ) undirected unweighted graph
vertices
VH = V \ {x} {{i, j} V : 6= j}
edges
EH = {{i, {i, j}} : V \ {x}, j V \ {i}, wx (i, j) sMM (x, Gx )}.
way, matched {i, j} H, derives maximin score less
equal sMM (x, Gx ) comparison j. Clearly, size H polynomial
519

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

size G. show x PWMM (G) exists matching
cardinality |V | 1 H.
() First, assume x PWMM (G). exists completion = (V, w0 )
Gx maximin score V \ {x} sMM (x, Gx ) < n2 .
alternative derives maximin score comparison j 6= V \ {x}, i.e.,
sMM (i, ) = w0 (i, j), j cannot derive maximin score comparison
w0 (j, i) n sMM (x, Gx ) implies w0 (j, i) > n2 . Therefore, H, VH V
matched vertex {i, j} VH {i, j} matched vertex
VH . resulting matching H cardinality |V | 1.
() Now, assume exists matching cardinality |V | 1 H. Then,
V \ {x} matched {i, j} w(i, j) sMM (x, Gx ). Consider
completion = (V, w0 ) [Gx ] (i, j) V V {i, {i, j}} ,
set w0 (i, j) = w(i, j) w0 (j, i) = n w(i, j). Moreover, weights edges
set arbitrary completion edges Gx . Clearly, proper completion
Gx therefore G. , maximin score V \ {x} less equal
maximin score x. Therefore x MM (T ) implies x PWMM (G).
Next, show PWSMM solved polynomial time. proof proceeds
identifying maximin values could potentially achieved simultaneously
elements set question, solving problem values using
similar techniques proof Theorem 11. polynomially bounded number
problems need considered.
Theorem 12. PWSMM solved polynomial time.
Proof. Let G = (V, w) partial n-weighted tournament X V . give
polynomial-time algorithm checking whether X PWSMM (G).
X PWSMM (G) must completion [G] {0, . . . , n}
sMM (x, ) = x X sMM (i, ) < V \ X.
First, note > n w(j, i) X, j V w(i, j)

/ X, j V , X 6 PWSMM (G). Therefore, assume
n w(j, i) X, j V
w(i, j) <
/ X, j V.
treat cases > n2 , = n2 , <

n
2

separately.

Case 1: > n2 . Then, X PWSMM X singleton, x V ,
whether {x} PWSMM maximin score checked easily.
Case 2: = n2 . assumptions above, define G0 = (V, w0 ) extension
GX w0 (i, j) = w0 (j, i) = n2 = i, j X. Note every completion
G0 , sMM (i, ) = X X PWSMM (G) maximin score n2
corresponding completion X PWSMM (G0 ) maximin score
respective completion.
520

fiPossible Necessary Winners Partial Tournaments

addition, need check whether alternatives X forced
strictly smaller maximin score n2 . end, construct unweighted undirected
bipartite graph H = (VH , EH ) vertices
VH = V {{i, j} V : 6= j}
edges
EH = {{i, {i, j}} : V \ X, j V \ {i}, w(i, j) < }.
claim X PWSMM (G0 ) maximin score = n2 corresponding
completion maximum-cardinality matching size |V \ X| H.
() Let = (V, w00 ) completion G0 (and thereby G) X set
maximin winners sMM (i, ) = = n2 X.
/ X, needs
j 6= w00 (i, j) < . Collecting {i, {i, j}} pair gives matching
size |V \ X| H maximum since vertex one side bipartite graph
contained it.
() direction, assume maximum matching size |V \ X|.
construct completion = (V, w00 ) G0 X set maximin winners.
Note every (VH V ) \ X contained edge {i, {i, j}} matching.
edge, let w00 (i, j) = w0 (i, j) < w00 (j, i) = n w00 (i, j), implying
sMM (i, ) < . Otherwise, arbitrary completion G.
Together, sMM (i, ) = X sMM (i, ) <
/ X.
Figure 10 illustrates procedure 2-weighted tournament set X = {a}.
Case 3: < n2 . given , construct undirected unweighted bipartite

). Let V
graph H = (VH , EH
H
[
[

EH
=
{{i, {i, j}} : w(i, j) n w(j, i)}
{{i, {i, j}} : w(i, j) 1}.
iX
j6=i

iV
j6=i

claim X PWSMM (G) maximin score corresponding

completion maximum-cardinality matching size |V | H .
() Let = (V, w0 ) completion G X set maximin winners
maximum maximin score . every vertex V , j 6=
w0 (i, j) accounts maximin score i. Also, since < n2 , cannot case j
derives maximin score w0 (j, i). Therefore, set pairs {i, {i, j}}
valid matching size |V |. obviously maximal.
() direction, assume maximum matching size |V |. Note
every (VH V ) matched define j(i) V edge {i, {i, j(i)}
contained matching. construct completion = (V, w0 ) X set
maximin winners. end, define
w0 (i, j(i)) = w0 (j(i), i) = n X,
w0 (i, j(i)) = 1 w0 (j(i), i) = n (s 1) V \ X.
long unspecified edges (i, j) completion, define
w0 (i, j) = max{w(i, j), } w0 (j, i) = n w(i, j) X, j V ,
w0 (i, j) = max{w(i, j), 1} w0 (j, i) = n w(i, j) otherwise.
521

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Note proper completion G. Now, sMM (i, ) = X
sMM (i, ) <
/ X. completes Case 3.


remains shown limited number possible (and thereby H )
considered. contrast proof Theorem 9, cannot employ binary search
method since clear cut feasible infeasible integer interval.
However, see gradually incremented 0 n2 1, whether
changes twice due definition
edge {i, {i, j}} contained EH

. partitions integer interval = [0, n 1] possible finite number
EH
2

subintervals Ik within single Ik induce H . Therefore,
sufficient consider one per Ik choose minimum. set
possibly relevant target scores given
[
[
[
=
min Ik
{w(i, j), n w(j, i) + 1}
{w(i, j) + 1}.
iX
j6=i

k

iV
j6=i

size obviously bounded 3n2 .
cases handled polynomial time.




b
1

1

1

1

1

b

2

11

1

1

1

c

1

c



(ii ) extension G0 reinforcing {a}.

(i ) partial 2-weighted tournament G.

b
c




{a, b}
{a, c}
{a, d}
{b, c}
{b, d}
{c, d}



b

2
1

1
11

2
1

1

c

2



(iv ) completion G0 G
MM (G0 ) = {a}

(iii ) constructed undirected bipartite graph H. Thick edges indicate
maximum-cardinality matching.

Figure 10: Illustration algorithm checking whether singleton {a} contained
PWSMM (G) partial 2-weighted tournament G. obvious cannot
maximin score 2 completion sole maximin winner maximin score
0. Therefore, check case = n2 = 1.
Lastly, consider NWMM , apply similar technique NWBO :
see whether x NWMM (G), start graph Gx check whether
alternative achieve higher maximin score x completion Gx .
522

fiPossible Necessary Winners Partial Tournaments

Theorem 13. NWMM solved polynomial time.
Proof. show check whether x NWMM (G) partial n-weighted tournament
G = (V, w). maximin score x Gx worst case maximin score x among
proper completions G.
V \ {x}, maximin score Gy best possible maximin score
among completions G. maximin score corresponding
Gy maximin score x Gx , x NWMM (G), otherwise
x
/ NWMM (G).
5.3 Ranked Pairs
method ranked pairs (RP ) resolute solution concept considered
article. Given weighted tournament = (V, w), returns unique undominated
alternative transitive tournament 0 V constructed following manner. First
order (directed) edges decreasing order weight, breaking ties according
exogenously given tie-breaking rule. start empty graph 0 consider
edges one one according ordering. current edge added 0
without creating cycle, so; otherwise discard edge.11
example, consider partial 5-weighted tournament depicted Figure 11(i ),
slightly modified version tournament considered Figures 8 9.
easy see ranked pairs winner completions Ga , likewise b
ranked pairs winner completions Gb . hand, completion
c ranked pairs winner. Whether possible ranked pairs winner depends
tie-breaking rule used, particular tie-breaking rule ranks
edges (d, c) (b, d): alternative possible ranked pairs winner (d, c)
considered (b, d) (see Figure 11(iv )). Since RP resolute, (assuming
tie-breaking rule ranks (d, c) (b, d))
PWRP (G) = {a, b, d}
NWRP (G) =
PWSRP (G) = {{a}, {b}, {d}}.
readily appreciated winner determination problem RP computationally tractable. possible winner problem, hand, turns NP-hard.
shows tractability winner determination problem, necessary
tractability PW, generally sufficient.
Theorem 14. PWRP NP-complete.
Proof. work alternative characterization ranked pairs winners
introduced Zavist Tideman (1989). given weighted tournament = (V, w)
11. variant ranked pairs originally proposed Tideman (1987), used Xia
Conitzer (2011), instead chooses set alternatives, containing alternative selected
procedure way breaking ties among edges equal weight. consider
irresolute version ranked pairs winner determination variant NP-hard (Brill
& Fischer, 2012). mentioned Section 3, immediately implies problems concerning
possible necessary winners NP-hard well.

523

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

1
1



4
1



b

1

5

1

5

5

4

5

2
1
2

c

4

1
4

b



5

5

4
1

14

4
3
2

b
5

3

5



(ii ) completion G ranked pairs
winner a.

1
5

c

3
2

c



(i ) partial 5-weighted tournament G.



b

2

c



(iii ) completion G ranked
pairs winner b.

1
4



(iv ) completion G ranked pairs
winner d. Here, assume edge
(d, c) considered edge (b, d).

Figure 11: Example 5-weighted partial tournament completions relevant possible
ranked pairs winners. completion, transitive tournament constructed
ranked pairs procedure indicated thick edges.
given tie-breaking rule, let denote order edges considered
ranked pairs procedure. is, (x, y) (u, v) either w(x, y) > w(u, v)
w(x, y) = w(u, v) tie-breaking rule ranks (x, y) higher (u, v). Given ranking
L V , two alternatives b, say attains b L exists
sequence distinct alternatives a1 , a2 , . . . , , 2, a1 = a, = b,
ai L ai+1 ,
(ai , ai+1 ) (b, a) 1 < t.
case, say attains b via (a1 , a2 , . . . , ). ranking L called stack
pair alternatives b holds L b implies attains b L.
Zavist Tideman (1989) shown alternative ranked pairs winner
top element stack.12 Intuitively, defining properties stack L
ensure pairs (a, b) alternatives L b, point time edge (b, a)
considered, discarded would create cycle.
Membership PWRP NP obvious, given completion given tiebreaking rule, ranked pairs winner found efficiently.
12. characterization Zavist Tideman (1989) addresses irresolute version ranked pairs
discussed previous footnote. adaptation resolute version ranked pairs straightforward corollary.

524

fiPossible Necessary Winners Partial Tournaments



p01

p02

p1

p1

p2

p2

p01

p02

c1

c2

c3

Figure 12: partial 8-weighted tournament G Boolean formula = {p1 , p2 }
{p1 , p2 } {p1 , p2 }. Double-shafted arrows represent heavy edges, standard arrows represent
medium edges, dashed arrows represent light edges, dotted lines represent partial edges.
pairs (a, b) connected arrow, w (x, y) = w (y, x) = 4.

NP-hardness shown reduction Sat. construction based
proof Theorem 1 Brill Fischer (2012). Boolean formula conjunctive
normal-form set C clauses set P propositional variables, construct
partial 8-weighted tournament G = (V , w ) follows. variable p P , V
contains two literal alternatives p p two auxiliary alternatives p0 p0 .
clause c C, alternative c. Finally, alternative
membership PWRP (G ) decided.
order conveniently describe weight function w , let us introduce following
terminology. two alternatives x, V , say heavy edge x
w (x, y) = 8 (and therefore w (y, x) = 0). medium edge x means w (x, y) = 6
w (y, x) = 2, light edge x means w (x, y) = 5 w (y, x) = 3.
Finally, partial edge x means w (x, y) = w (y, x) = 1.
ready define w . variable p P , heavy edges
p p0 p p0 , partial edges p p0 p p0 .
clause c C, medium edge c heavy edge literal
alternative ` (with ` = p ` = p p P ) c corresponding literal ` appears
clause c. Finally, heavy edges auxiliary alternatives light edges
literal alternatives. pairs x, edge specified,
define w (x, y) = w (y, x) = 4. example shown Figure 12. Observe
pairs alternatives w fully specified pairs connected
partial edge.
525

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig





`0

`0
`

`

`

`

`0

`0

c

c
0

(ii ) Sc = (d, `0 , `, c)

(i ) Sc = (d, ` , `, `0 , `, c)

Figure 13: Two possibilities sequence Sc .
show alternative possible ranked pairs winner G
satisfiable. Intuitively, choosing completion (p0 , p) (p0 , p) corresponds
setting variable p true.
() First assume PWRP let [G ] completion G
RP (T ) = {d}. Consider stack L top element alternative c corresponding
clause . Since L stack L c, attains c though L via sequence Sc . (If
attains c via several sequences, fix one arbitrarily.) Since w (c, d) = 6, edges
sequence Sc must heavy, medium, appropriate completions partial edges.
Therefore, Sc must one following two forms (depicted Figure 13):
0

Sc = (d, ` , `, `0 , `, c)

Sc = (d, `0 , `, c),
0

` literal. former fact possible w (`, ` ) = 8 implies
0
` attain ` L. Therefore, Sc form Sc = (d, `0 , `, c)
literal `.
define assignment setting true literals contained one
sequences Sc , c C. claim satisfying assignment .
order show well-defined, suppose exists literal ` `
` set true . implies exist c1 c2 attains c1
0
0
via Sc1 = (d, `0 , `, c1 ) attains c2 via Sc2 = (d, ` , `, c2 ). particular, `0 L ` ` L `.
0
0
However, easily verified stack ranks ` higher ` (because w (`, ` ) = 8)
0
` higher `0 (because w (`, `0 ) = 8). Thus, L-cycle ` L ` L ` L `0 L `,
contradicting assumption L stack.
order show satisfies , consider arbitrary clause c. attains c via
Sc = (d, `0 , `, c) w (c, d) = 6, w (`, yj ) 6. definition w (, ),
implies literal ` appears clause c. Furthermore, ` set true `
contained Sc .
() direction, assume satisfiable let satisfying
assignment. use construct completion = (V , w ) [G ] RP (T ) = {d}.
526

fiPossible Necessary Winners Partial Tournaments

partial edges, weight function w defined follows. literal ` set true
, let w (`0 , `) = 7 w (`, `0 ) = 1. Otherwise, let w (`0 , `) = 1 w (`, `0 ) = 7.
show RP (T ) = {d} going procedure constructs
transitive tournament 0 , starting empty tournament V .13 First, set
edges weight 7 added, cycles among
edges. set consists heavy edges (previously) partial edges. Next,
medium edges considered. edges form (c, d) c alternative
corresponding clause. Since satisfying assignment, 0 already contains paths
every clause alternative c. Therefore, edges (c, d) c C discarded.
next step, light edges (i.e., edges weight 5) considered. edges
form (d, `) literal `. Therefore, edges added 0 without
creating cycle (d ingoing edges 0 ). adding light edges,
outgoing edge literal alternatives ` auxiliary alternatives `0 . Furthermore,
edges clause candidate c already discarded. Thus, unique
undominated alternative 0 , i.e., RP (T ) = {d}.
Since ranked pairs method resolute, hardness PWSRP follows immediately.
Corollary 2. PWSRP NP-complete.
Computing necessary ranked pairs winners turns coNP-complete.
somewhat surprising, computing necessary winners often considerably easier computing possible winners, partial tournaments partial preference profiles (Xia
& Conitzer, 2011).
Theorem 15. NWRP coNP-complete.
Proof. Membership coNP obvious. hardness, give reduction
UnSat slight variation reduction proof Theorem 14. Let G0
partial 8-weighted tournament results form G adding new alternative
heavy edges alternatives V except d. Furthermore, light edge
. show necessary ranked pairs winner G0
unsatisfiable.
() Assume contradiction NWRP (G0 ) = {d } satisfiable. Let
satisfying assignment define tournament = (V {d }, w0 ) [G0 ]
w0 coincides w (as defined proof Theorem 14) partial edges.
arguments proof Theorem 14, follows ingoing
edges tournament 0 constructed ranked pairs procedure. point
time edge (d, ) considered, added 0 . yields RP (T ) = {d},
contradicting assumption NWRP (G0 ) = {d }.
() Assume contradiction unsatisfiable exists completion
[G0 ] RP (T ) = {x} 6= {d }. follows x = d. (All alternatives V \ {d}
incoming heavy edge (from ), heavy edges added
cycle among them.) argument proof Theorem 14, follows
satisfiable, contradicting assumption.
13. following arguments independent choice particular tie-breaking rule.

527

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

6. Possible Winning Subsets
considered problem whether subset alternatives possible winning set (PWS).
addition, may interest whether subset alternatives among winners
completion, i.e., whether completion alternatives
subset (and possibly alternatives) choice set. refer latter
problem PWSS (possible winning subset). note oracle solve PWSS
used solve PW. want check whether PW (G), simply check whether
{i} PWSS (G). aware direct algorithmic relation problems
PWS PWSS.
examined computational complexity PWSSS solution concepts
considered article. Since arguments often similar proofs already given,
briefly summarize findings here.
COND never one Condorcet winner, every X PWSSCOND (G)
singleton problem reduces computing PWCOND (G).
CNL PWSSCNL , note nonempty set X V , X
/ PWSSCNL (G)
1
|V | > 1 every completion G
Condorcet winner
furthermore located X. Therefore,



|V | = 1
1
X PWSSCNL (G)
PWSCOND (G )



1
PWCOND (G ) \ X 6= .
CO problems, polynomial computability PWSSCO follows
corresponding result PWSSBO .
TC problem PWSSTC solved polynomial time. fact, shown
partial tournament G set alternatives X, sufficient check
whether X PWTC (G) (with additional argument |X| = 2) order
determine whether X PWSSTC (G).
BO argument algorithm checking whether X PWSSBO (G) almost
argument PWSBO Theorem 9. difference
sBO (v, ) may instead 1 v V \ X [G].
Consequently, need redefine bs (v) sBO (v, G) v V \ X.
MM proof efficient computability checking whether X PWSMM (G)
modified accommodate PWSSMM . precisely, second basic assumption
w(i, j)
/ X, j V . = n2 , sufficient check whether G0
extension G. < n2 , edges {i, {i, j}} X contained
w(i, j) . rest argument adjusted appropriately.
EH
> n2 , nothing changes.
RP Since PWRP NP-complete (Theorem 14), get NP-hardness PWSSRP
oracle argument above. Since membership NP obvious, problem
NP-complete.
528

fiPossible Necessary Winners Partial Tournaments

complexity PWSSUC left open. Minor modification hardness construction PWSUC trick. argument, crucial question whether
completion excludes certain alternatives choice set.
help PWSSUC .

7. Discussion
problem computing possible necessary winners partial preference profiles
recently received lot attention. article, investigated problem
setting partially specified (weighted unweighted) tournaments instead profiles
given input. summarized findings Table 1.
key conclusion computational problems partial tournaments significantly easier counterparts partial profiles. example, possible Borda
maximin winners found efficiently partial tournaments, whereas corresponding problems partial profiles NP-complete (Xia & Conitzer, 2011). Furthermore,
computing possible necessary Copeland winners NP-hard coNP-hard respectively partial preference profiles (Xia & Conitzer, 2011). contrast, showed
even PWSCO solved polynomial time partial tournaments. negative
(hardness) results, tempered fact parameters
problem bounded constant, hard problems may solved polynomial time. particular, Yang Guo (2013) shown PWSUC polynomial-time
solvable size given subset X bounded constant.14
tractability winner determination problem necessary tractability
possible necessary winners problems, results ranked pairs Section 5.3 show
sufficient. considered problem deciding whether given
subset alternatives equals winning set completion partial tournament.
results uncovered set Section 4.4 imply problem cannot reduced
polynomial time computation possible necessary winners; whether reduction
exists opposite direction remains open problem.
Partial tournaments studied right, independent
possible completions. instance, Peris Subiza (1999) Dutta Laslier (1999)
generalized several solution concepts tournaments partial tournaments.
common point approach follow nature input, namely, partial tournaments. However, Peris Subiza (1999) Dutta Laslier (1999) define
solution concepts partial tournaments directly generalizing usual definition
tournaments. contrast definitions, based completions
input partial tournament. notion possible winners suggests canonical way
generalize solution concept defined tournaments partial tournaments. way
extending tournament solutions partial tournaments referred conservative
extension inherits various axiomatic properties original tournament solutions satisfies tournaments (Brandt et al., 2014). positive computational results
article indication may promising approach.
14. Yang Guo (2013) give hardness fixed-parameter tractability results generalization
Banks set partial tournaments.

529

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

highlight another way viewing algorithmic results concerning possible
necessary winners. burgeoning literature computational social choice
deals problem manipulation control voting (Bartholdi, III, Tovey, & Trick,
1989, 1992; Faliszewski & Procaccia, 2010). given alternative already necessary winner, need invest effort influencing remaining comparisons votes
make winning. Moreover, results implications partial tournament
version coalitional manipulation problem: coalitional tournament manipulation,
constructive version, defined follows. Given partial tournament (V, E), subset X V , distinguished alternative x, way complete missing edges
X X x winner? Informally, players X way fixing
winners matches among make x win?
Constructive coalitional tournament manipulation polynomial-time solvable whenever
PW is. Likewise, destructive version coalitional tournament manipulation (is
way complete edges within X candidate x winning?) polynomial
whenever NW is.
Regarding future work, yet examined complexity computing possible
necessary winners attractive tournament solutions minimal covering
set weighted versions top cycle uncovered set (De Donder, Le Breton, &
Truchon, 2000).15
interesting related question goes beyond computation possible necessary winners following: winners yet fully determined, unknown
comparisons need learned, pairs candidates compare,
matches played? problem seen tournament-based version
preference elicitation problem (Conitzer & Sandholm, 2002; Ding & Lin, 2013; Walsh,
2008). standard version problem looks minimal sets queries voters
pairwise preferences candidates, tournament version query bears
pair candidates output edge two candidates, one direction
other. Procaccia (2008) considers similar question COND. construction
policy tree defining optimal protocol minimizing number questions asked
number matches played, worst case average, even
challenging issue leave future research.

Acknowledgments
Previous versions paper presented 11th International Conference
Autonomous Agents Multi-Agent Systems (AAMAS 2012) 4th International Workshop Computational Social Choice (COMSOC 2012). grateful Felix
Brandt extensive discussions useful advice. thank Gerhard Woeginger
hints towards improving previous pseudo-polynomial time algorithms PWSBO
PWSMM various anonymous reviewers, whose comments greatly helped us improve
paper. material based work supported Deutsche Forschungsgemeinschaft grants BR 2312/9-1, BR 2312/10-1, 1664/1-1. Haris Aziz supported
Australian Government represented Department Broadband, Commu15. Brill, Freeman, Conitzer (2016) recently shown computing possible necessary winners
bipartisan set (Laffond, Laslier, & Le Breton, 1993) intractable.

530

fiPossible Necessary Winners Partial Tournaments

nications Digital Economy Australian Research Council ICT
Centre Excellence program. Markus Brill supported Feodor Lynen research
fellowship Alexander von Humboldt Foundation ERC Starting Grant
639945 (ACCORD). Jerome Lang supported ANR project CoCoRICoCoDec. Paul Harrenstein supported ERC Advanced Grant 291528
(RACE).

References
Aziz, H., Gaspers, S., Mackenzie, S., Mattei, N., Stursberg, P., & Walsh, T. (2014). Fixing
balanced knockout tournament. Proceedings 28th AAAI Conference
Artificial Intelligence (pp. 552558). AAAI Press.
Aziz, H., Walsh, T., & Xia, L. (2015). Possible necessary allocations via sequential
mechanisms. Proceedings 23rd International Joint Conference Artificial
Intelligence (pp. 468474).
Bachrach, Y., Betzler, N., & Faliszewski, P. (2010). Probabilistic possible winner determination. Proceedings 24th AAAI Conference Artificial Intelligence (pp.
697702). AAAI Press.
Bartholdi, III, J., Tovey, C. A., & Trick, M. A. (1989). computational difficulty
manipulating election. Social Choice Welfare, 6 (3), 227241.
Bartholdi, III, J., Tovey, C. A., & Trick, M. A. (1992). hard control election?
Mathematical Computer Modelling, 16 (89), 2740.
Baumeister, D., Faliszewski, P., Lang, J., & Rothe, J. (2012). Campaigns lazy voters:
truncated ballots. Proceedings 11th International Conference Autonomous
Agents Multi-Agent Systems (pp. 577584). IFAAMAS.
Baumeister, D., & Rothe, J. (2010). Taking final step full dichotomy possible
winner problem pure scoring rules. Proceedings 19th European Conference
Artificial Intelligence (pp. 10191020).
Betzler, N., & Dorn, B. (2010). Towards dichotomy possible winner problem
elections based scoring rules. Journal Computer System Sciences, 76 (8),
812836.
Betzler, N., Hemmann, S., & Niedermeier, R. (2009). multivariate complexity analysis
determining possible winners given incomplete votes. Proceedings 21st
International Joint Conference Artificial Intelligence (pp. 5358). AAAI Press.
Brandt, F., Brill, M., & Harrenstein, P. (2014). Extending tournament solutions.
Proceedings 28th AAAI Conference Artificial Intelligence (pp. 580586).
AAAI Press.
Brandt, F., Brill, M., & Harrenstein, P. (2016). Tournament solutions. F. Brandt,
V. Conitzer, U. Endriss, J. Lang, & A. D. Procaccia (Eds.), Handbook Computational Social Choice (chap. 3). Cambridge University Press. (Forthcoming)
531

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Brill, M., & Fischer, F. (2012). price neutrality ranked pairs method.
Proceedings 26th AAAI Conference Artificial Intelligence (pp. 12991305).
AAAI Press.
Brill, M., Freeman, R., & Conitzer, V. (2016). Computing possible necessary equilibrium actions (and bipartisan set winners). Proceedings 30th AAAI Conference
Artificial Intelligence. AAAI Press. (Forthcoming)
Chevaleyre, Y., Lang, J., Maudet, N., & Monnot, J. (2011). Compilation communication protocols voting rules dynamic set candidates. Proceedings
13h Conference Theoretical Aspects Rationality Knowledge (pp. 153160).
Chevaleyre, Y., Lang, J., Maudet, N., Monnot, J., & Xia, L. (2012). New candidates welcome! Possible winners respect addition new candidates. Mathematical
Social Sciences, 64 (1), 7488.
Conitzer, V., & Sandholm, T. (2002). Vote elicitation: Complexity strategy-proofness.
Proceedings 18th National Conference Artificial Intelligence (pp. 392
397). AAAI Press.
Cook, W. J., Cunningham, W. H., Pulleyblank, W. R., & Schrijver, A. (1998). Combinatorial optimization. Wiley Sons.
De Donder, P., Le Breton, M., & Truchon, M. (2000). Choosing weighted tournament. Mathematical Social Sciences, 40 (1), 85109.
Ding, N., & Lin, F. (2013). Voting partial information: questions ask?
Proceedings 12th International Conference Autonomous Agents MultiAgent Systems (pp. 12371238). IFAAMAS.
Dutta, B., & Laslier, J.-F. (1999). Comparison functions choice correspondences. Social
Choice Welfare, 16 (4), 513532.
Edmonds, J. (1965). Paths, trees flowers. Canadian Journal Mathematics, 17 ,
449467.
Faliszewski, P., & Procaccia, A. D. (2010). AIs war manipulation: winning? AI
Magazine, 31 (4), 5364.
Filmus, Y., & Oren, J. (2014). Efficient voting via top-k elicitation scheme: probabilistic approach. Proceedings 15th ACM Conference Economics
Computation (pp. 295312). ACM Press.
Good, I. J. (1971). note Condorcet sets. Public Choice, 10 (1), 97101.
Hazon, N., Aumann, Y., Kraus, S., & Wooldridge, M. (2012). evaluation election
outcomes uncertainty. Artificial Intelligence, 189 , 118.
Kalech, M., Kraus, S., Kaminka, G. A., & Goldman, C. V. (2011). Practical voting rules
partial information. Journal Autonomous Agents Multi-Agent Systems,
22 (1), 151182.

532

fiPossible Necessary Winners Partial Tournaments

Kern, W., & Paulusma, D. (2004). computational complexity elimination
problem generalized sports competitions. Discrete Optimization, 1 (2), 205214.
Konczak, K., & Lang, J. (2005). Voting procedures incomplete preferences.
Proceedings Multidisciplinary Workshop Advances Preference Handling
(pp. 124129).
Laffond, G., Laslier, J.-F., & Le Breton, M. (1993). bipartisan set tournament
game. Games Economic Behavior , 5 (1), 182201.
Lang, J., Pini, M. S., Rossi, F., Salvagnin, D., Venable, K. B., & Walsh, T. (2012). Winner
determination voting trees incomplete preferences weighted votes. Journal
Autonomous Agents Multi-Agent Systems, 25 (1), 130157.
Laslier, J.-F. (1997). Tournament solutions majority voting. Springer-Verlag.
Lu, T., & Boutilier, C. (2011). Vote elicitation probabilistic preference models: Empirical estimation cost tradeoffs. Proceedings 2nd International Conference
Algorithmic Decision Theory (pp. 135149). Springer-Verlag.
Lu, T., & Boutilier, C. (2013). Multiwinner social choice incomplete preferences.
Proceedings 23rd International Joint Conference Artificial Intelligence (pp.
263270). AAAI Press.
Oren, J., Filmus, Y., & Boutilier, C. (2013). Efficient vote elicitation candidate
uncertainty. Proceedings 23rd International Joint Conference Artificial
Intelligence (pp. 309316). AAAI Press.
Peris, J. E., & Subiza, B. (1999). Condorcet choice correspondences weak tournaments.
Social Choice Welfare, 16 (2), 217231.
Pini, M. S., Rossi, F., Venable, K. B., & Walsh, T. (2011). Possible necessary winners
voting trees: Majority graphs vs. profiles. Proceedings 10th International
Conference Autonomous Agents Multi-Agent Systems (pp. 311318). IFAAMAS.
Procaccia, A. (2008). note query complexity Condorcet winner. Information
Processing Letters, 108 (6), 390393.
Rastegari, B., Condon, A., Immorlica, N., & Leyton-Brown, K. (2013). Two-sided matching
partial information. Proceedings 14th ACM Conference Electronic
Commerce (pp. 733750). ACM Press.
Schrijver, A. (2003). Combinatorial optimizationpolyhedra efficiency. Springer.
Schwartz, B. L. (1966). Possible winners partially completed tournaments. SIAM Review ,
8 (3), 302308.
Schwartz, T. (1986). logic collective choice. Columbia University Press.
Smith, J. H. (1973). Aggregation preferences variable electorate. Econometrica,
41 (6), 10271041.

533

fiAziz, Brill, Fischer, Harrenstein, Lang, & Seedig

Tideman, T. N. (1987). Independence clones criterion voting rules. Social Choice
Welfare, 4 (3), 185206.
Vu, T., Altman, A., & Shoham, Y. (2009). complexity schedule control problems
knockout tournaments. Proceedings 8th International Conference
Autonomous Agents Multi-Agent Systems (pp. 225232). IFAAMAS.
Walsh, T. (2007). Uncertainty preference elicitation aggregation. Proceedings
22nd AAAI Conference Artificial Intelligence (pp. 38). AAAI Press.
Walsh, T. (2008). Complexity terminating preference elicitation. Proceedings
7th International Conference Autonomous Agents Multi-Agent Systems (pp.
967974). IFAAMAS.
Xia, L., & Conitzer, V. (2011). Determining possible necessary winners common
voting rules given partial orders. Journal Artificial Intelligence Research, 41 , 25
67.
Yang, Y., & Guo, J. (2013). Possible winner problems partial tournaments: parameterized study. Proceedings 3rd International Conference Algorithmic
Decision Theory (Vol. 8176, pp. 425439). Springer-Verlag.
Zavist, T. M., & Tideman, T. N. (1989). Complete independence clones ranked
pairs rule. Social Choice Welfare, 6 (2), 167173.

534


