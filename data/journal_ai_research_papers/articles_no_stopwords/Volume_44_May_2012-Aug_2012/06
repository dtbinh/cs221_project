journal artificial intelligence

submitted published

logical difference
lightweight description logic el
boris konev
michel ludwig

konev liverpool ac uk
michel ludwig liverpool ac uk

department computer science
university liverpool uk

dirk walther

dirk walther upm es

departamento inteligencia artificial facultad de informatica
universidad politecnica de madrid spain

frank wolter

wolter liverpool ac uk

department computer science
university liverpool uk

abstract
study logic versioning ontologies view ontologies
provide answers queries vocabulary interest difference
two versions ontology given set queries receive different answers
investigate terminologies given description logic el extended
role inclusions domain range restrictions three distinct types queries
subsumption instance conjunctive queries three cases present polynomialtime decide whether two terminologies give answers queries
given vocabulary compute succinct representation difference nonempty present implementation cex developed subsumption
instance queries apply distinct versions snomed ct nci ontology

introduction
terminologies lightweight ontologies used provide common vocabulary
domain interest together descriptions meaning terms built
vocabulary relationships used areas medical
informatics bio informatics semantic web capture domain semantics promote interoperability terminologies often large complex example widely
used medical terminology snomed ct systematized nomenclature medicine clinical
terms contains term definitions ihtsdo another example
national cancer institute ontology nci consisting axioms golbeck fragaso hartel hendler oberhaler parsia engineering maintaining
terminologies complex laborious task practically unfeasible
without appropriate tool support article focus principled logic
support terminology versioning
dealing multiple versions information unit nothing computing version control well established computer technology although modern version
control systems provide range operations including support collaborative development branching merging etc operations extend rely basic operations
c

ai access foundation rights reserved

fikonev ludwig walther wolter

detecting representing differences versions focus
basic versioning
need versioning support recognised ontology community
ontology users large number approaches tools developed
review currently existing support ontology versioning distinguish three approaches
describe according difference ontologies compute
versioning syntactic difference syntactic diff
versioning structural difference structural diff
versioning logical difference logical diff
syntactic diff underlies existing version control systems used software development conradi westfechtel example rcs cvs sccs works
text files represents difference versions blocks text present one
version another ignoring meta information document observed
already work noy musen ontology versioning cannot rely purely
syntactic diff operation since many syntactic differences e g order ontology axioms
affect semantics ontologies therefore ontology versioning syntactic
difference essentially limited comparing rather informal change logs oliver shahar
shortliffe musen
structural diff extends syntactic diff taking account information
structure ontologies suggested dealing structured hierarchical documents uml diagrams database schemas xml documents see e g
ohst welle kelter references within ontologies main characteristic
structural diff regards structured objects taxonomy noy musen set rdf triplets klein fensel kiryakov ognyanov
set class defining axioms redmond smith drummond tudorache
jimenez ruiz cuenca grau horrocks llavori changes ontologies mostly
described terms structural operations example adding deleting class extending class renaming slots moving class one place hierarchy another
adding deleting axiom class renaming etc sometimes basic logical properties
ontologies e g equivalence different structural forms concepts taken
account palma haase corcho gomez perez jimenez ruiz et al ontology versioning structural diff form available current ontology
editors ontology management systems natively plugins noy musen
klein et al jimenez ruiz et al
though helpful structural diff still deficiency unambiguous semantic foundation syntax dependent moreover tailored towards
applications ontologies induced concept hierarchy mild
extension capture modern applications ontology data access obda poggi lembo calvanese giacomo lenzerini rosati lutz toman
wolter ontologies used provide user oriented view data


fithe logical difference lightweight description logic el

make accessible via queries formulated solely language ontology without
knowledge actual structure data
logical diff recently introduced konev walther wolter
kontchakov wolter zakharyaschev completely abstracts representation ontology ontology regarded set axioms formulated logical
language formal unambiguous semantics view ontologies provide
answers queries vocabulary interest typical queries include subsumption
queries concepts ontology used access instance data instance
conjunctive queries logical diff motivated view two versions ontology
give answers class queries relevant application domain may
deemed difference regardless syntactic structural form queries
producing different answers versions may considered characterisation
difference way one example define exactly differences visible
querying instance data exactly differences expressed subsumptions
concepts
make work practice least two addressed
ontology languages classes queries computational complexity
even detecting two ontology versions differ certain vocabulary least
one exponential harder ontology classification sometimes undecidable
even computational complexity increase searching differences
ontologies within certain vocabulary requires techniques different used standard reasoning lutz walther wolter lutz
wolter cuenca grau horrocks kazakov sattler
set queries producing different answers two versions empty
typically infinite therefore cannot presented user thus
techniques succinctly characterise elements present user
required
aim provide first steps toward solutions
terminologies aka classical tboxes given description logic elhr extends
description logic el underlying owl el profile role inclusions domain
range restrictions baader brandt lutz main contributions follows
argued syntax dependence regarded advantage rather deficiency
context versioning goncalves parsia sattler jimenez ruiz et al example jimenez ruiz et al argue logical equivalence ontologies permissive even
strongest assumption semantic point view conflicts may still exist might
presence incompatible annotations statements act comments carry
logical meaning mismatch modelling styles example may written simple language
owl el profile contain v b u c may contain b c v
even though explicit use negation disjunction means outside el profile
agree jimenez ruiz et al goncalves et al applications
structural rather logical difference appropriate even syntactic diff applications ontology
versioning practice see logic approaches complementary structural approaches
interesting analysis nci versions taking account structural logical differences given
work goncalves et al



fikonev ludwig walther wolter

subsumption instance conjunctive queries present polynomial time
decide whether two elhr terminologies give different answers query
respective class queries given signature concept role names note
use terms signature vocabulary synonymously
besides polynomial time decision procedure detecting differences develop
succinct presentation typically infinite difference presentation computed polynomial time well
present two different types polynomial time deciding existence
logical differences terminologies computing succinct representation
first type conceptually transparent keeps two
input terminologies separate reduces substantial part difference
instance checking abox however sufficiently
efficient large inputs example substantial performance occur
computing differences versions snomed ct joint signature since
constructed abox typically quadratic size input terminologies second
variant dynamic programming efficient practice
developed detail acyclic elhr terminologies
present implementation cex second type
computes succinct representation difference acyclic elhr terminologies
concept instance query case addition prototype implementation
abox used estimate efficiency
important tool investigation present description logics elran
elran u u capture subsumption differences instance query difference elhr terminologies presented general elhr tboxes
therefore exploited future work versioning general elhr tboxes
present experiments cex illustrate efficiency
potential applications terminologies snomed ct nci plugin protege
discussed cex extends functionality first version cex konev walther
wolter owldiff plugin kremen smd kouba implements
developed konev walther wolter snomed ct
investigate performance abox practice
extends work konev walther wolter
improve readability number proofs deferred appendix

preliminaries
let nc nr ni countably infinite mutually disjoint sets concept names role
names individual names el concepts c built according rule
c







c ud



r c

nc r nr c range el concepts set elhr inclusions
consists
concept inclusions c v ran r v ran r u c v


fithe logical difference lightweight description logic el

concept equations c
role inclusions r v
c el concepts r nr elhr tbox finite set elhr inclusions inclusions form ran r v ran r uc v referred range
restrictions inclusions form r v referred domain restrictions
elhr tbox called elhr terminology concept inclusions equations
form
v c c
ran r v c
r v c
nc r nr c el concept c c u etc
concept name occurs left hand side note concept inclusions
form r v c concept r often denoted dom r terminology acyclic
unfoldable process exhaustively substituting definitions place defined
concept names terminates example terminology contains concept inclusion
mother v hasmother mother
acyclic formally consider relation concept names setting
b exists elhr inclusion form c v c b
occurs c terminology acyclic transitive closure
irreflexive
description logic instance data represented abox assertions form
r b b ni nc r nr abox non empty finite
set abox assertions said singleton abox contains exactly one abox
assertion obj denote set individual names knowledge base k kb
pair consisting tbox abox assertions form c
r b b ni c el concept r nr called instance assertions note
instance assertions form c c concept name c
occur aboxes
semantics elhr given interpretations domain
non empty set function mapping concept name subset ai
role name r binary relation ri individual name
element ai extension c concept c defined induction follows

c u
r c
ran r







c di
e c e ri
e e ri

satisfies
concept inclusion c v symbols c v c di


fikonev ludwig walther wolter

concept equation c symbols c c di
role inclusion r v symbols r v ri si
assertion c symbols c ai c
assertion r b symbols r b ai bi ri
say interpretation model tbox abox
elhr inclusion follows tbox every model model
symbols used denote follows empty tbox
sometimes write r vt r v instance assertion follows kb
every individual name occurs occurs obj every model
model symbols important ways querying elhr tboxes
kbs
subsumption check whether elhr inclusion tbox
instance checking check whether instance assertion kb

conjunctive query answering
define latter call first order formula q x conjunctive query form
x conjunction expressions nc r r nr
drawn ni sequences variables x let x x xk let
interpretation mapping x set ai obj
say vector ak match q x satisfies following
conditions
ai every conjunct
ri every conjunct r
xi aii k
set q exists match q x let
kb sequence members obj certain answer q x
kb symbols q q every model
three types querying elhr tboxes studied extensively complexity
subsumption instance checking ptime baader et al combined
complexity answering boolean conjunctive queries e deciding whether q
conjunctive query q without free variables conp complete rosati data
complexity ptime rosati information reasoners subsumption checking
elhr found work delaitre kazakov kazakov krotzsch
simancik mendez suntisrivaraporn lutz et al present
efficient conjunctive query answering elhr


fithe logical difference lightweight description logic el

normal form
often convenient consider normalised elhr terminologies let elhr terminology concept name call
primitive nc nc c nc v c
pseudo primitive nc nc c
note concept names occur primitive pseudo primitive
call concept name non conjunctive pseudo primitive exists
concept form r c r c otherwise called conjunctive
thus conjunctive exists concept name b
b exist c cn n c u u cn let x
finite set
concepts say concept f conjunction concepts x f
form dx x called conjunct f concept name
called atomic conjunct f sometimes write f instead x
elhr terminology normalised consists elhr inclusions following
form
r b f b concept names f non empty conjunction
concept names every conjunct b f non conjunctive
e v r b e v r e v f b concept name e concept
name form ran f non empty conjunction concept
names every conjunct b f non conjunctive
following lemma shows elhr terminology normalised yielding
model conservative extension original terminology
lemma every elhr terminology one construct polynomial time normalised terminology polynomial size sig sig
every model exists model j j x x j
every x sig moreover acyclic acyclic
normalised terminologies sense defined minor modification normalised terminologies defined baader straightforward extension
proof given baader provided appendix
canonical model
define canonical model ik elhr knowledge bases k ik constructed
polynomial time gives answers instance queries k e ik
k instance assertion construction similar canonical
model introduced lutz et al
let sub denote set subconcepts concepts used rol set
role names occurring take fresh individual names xran r every r rol
sub set
niaux xran r r rol sub


fikonev ludwig walther wolter

define generating interpretation wk kb k follows
w k
aw k
r wk

awk

obj niaux
obj k xran r niaux ran r u v
b obj obj b v r
xran obj niaux k v r
xran xran niaux niaux ran u v v r
obj

path wk finite sequence r rn dn n obj n
wk
di di ri
use paths wk denote set paths wk p paths wk
tail p denotes last element dn p
canonical model ik knowledge base k restriction wk domain
elements path wk tail following summarises
main properties ik
theorem let k elhr kb
ik model k
ik computed polynomial time size k
xran ik obj c el concept c ran r
k c aik c ik
ran u v c xran c ik
proof theorem given appendix follows point ik gives
answers instance queries k

logical difference
section introduce three notions logical difference tboxes
derived notion inseparability intuitively logical difference two tboxes
set relevant formulas vice
versa course formulas relevant depends application domain many
applications subsumptions concepts relevant tboxes employed
access instance data answers instance even conjunctive queries relevant
well addition applications large scale terminologies snomed ct
nci typically small subset vocabulary terminology relevant
thus meaningful notion logical difference take account formulas
given certain signature interest signature subset nc nr
given concept role concept inclusion tbox abox query e denote sig e
signature e set concept role names occurring call e
concept concept inclusion tbox abox query respectively sig e
similarly el concept c el concept sig c elhr inclusion
elhr inclusion sig
first notion logical difference introduce corresponds applications
subsumptions relevant


fithe logical difference lightweight description logic el

definition concept difference concept difference elhr tboxes
set cdiff elhr inclusions
say concept inseparable symbols c
cdiff
cdiff
concept inseparability means replaced
application concerned elhr inclusions following example
shows however concept inseparable terminologies give different answers
instance query data
example let ran r v ran v b u r b
one concept inseparable however abox
r c b c b c b c
take account differences tboxes relevant tboxes
used access instance data consider instance difference
definition instance difference instance difference tboxes
set idiff pairs form abox instance
assertion say instance
inseparable symbols idiff idiff
contrast elhr shown lutz wolter el tboxes
difference concept inseparability instance inseparability
extend elhr tboxes without range restrictions proof
given corollary
theorem let elhr tboxes without range restrictions signature

c

sometimes instance queries sufficiently expressive conjunctive queries
employed case following notion difference appropriate
definition query difference query difference tboxes
set qdiff pairs form q abox q x conjunctive query tuple individual names q
q say query inseparable symbols q
qdiff qdiff
observed lutz wolter already even el instance inseparability
imply query inseparability following simple example
example let v r b b instance
inseparable query inseparable consider abox
query q x b x q q
refer reader conclusion brief discussion claim



fikonev ludwig walther wolter

shown lutz wolter example essentially situation
difference instance inseparability query inseparability
el two notions become equivalent el universal role admitted instance
queries e g example conjunctive query x b x corresponds instance query
u b universal role u contrast elhr subtle differences
instance query case
example let v v r v r v r u r
r r concept instance inseparable
query inseparable latter let let q x r x r x
q q
seen concept inseparability imply instance inseparability
instance inseparability imply query inseparability converse
implications however hold
lemma elhr tboxes signatures
q







c


proof first implication follows observation every instance query
regarded conjunctive query second implication note first v r
cdiff b r b idiff let c v cdiff
one construct abox ac individual el concepts
ac c v cf lemma thus ac
idiff
introduced three notions difference elhr tboxes investigate two detect whether difference two elhr terminologies ii represent differences
follows assume fresh symbols used normalised form terminologies occur signature compute difference
terminologies obtain following lemma direct corollary lemma
lemma elhr terminologies normalised forms
defined lemma following hold
cdiff cdiff
idiff idiff
qdiff qdiff
unless stated otherwise consider normalised terminologies


fithe logical difference lightweight description logic el

case el terminologies
investigating logical difference elhr terminologies illustrate main
ideas behind proofs considering concept difference el terminologies
el terminology elhr terminology consisting el inclusions concept
inclusions form v c concept equations form c start
observation even acyclic el terminologies cdiff
contains inclusions least exponential size thus searching witness
inclusions cdiff one deal case witness inclusions
least exponential size
example consider
v b bn bi r bi u bi n
v f v r u n
r concept inclusion cdiff minimal size given
cn v
c ci r ci u ci
clearly cn exponential size note however use structure sharing define
size cn number subconcepts cn polynomial size
derive basic properties el terminologies sequent calculus
proof system el
derive basic properties el gentzen style sequent calculus presented hofmann see figure calculus operates sequents form c v
c el concepts symbol v treated syntactic separator derivation
equivalently proof sequent c v finite rooted tree whose nodes labelled
sequents whose root labelled c v whose leaves labelled axioms
instances ax axtop whose internal nodes labelled
application one inference rules labels children length
derivation number rule applications derivation
example let b ub f v b derivation sequent r f ub v
r shown root derivation labelled r f u b v r
two leaves b v b b v b respectively
ax

b v b
pdefl
ax
f v b
b v b
andl
andl
f u b v b
f u b v b
andr
f u b v b u b
defr
f u b v
ex
r f u b v r


fikonev ludwig walther wolter

cvc

ax

cv

axtop

cve
andl
c ud

cve cvd
andr
c vdue
ca v
defl
avd

cvd
ex
r c v r

v ca
defr
dva

ca v
pdefl
avd

dve
andl
c ud

ca

v ca

figure gentzen style proof system el terminologies
notice basic calculus hofmann considers el without constant
terminologies without concept inclusions take care added
rule axtop pdefl rule representing inclusions form v c cutelimination completeness correctness shown straightforward extension
proof given hofmann
terminology concepts c write c v exists
proof c v calculus figure
theorem hofmann el terminologies concepts c holds
c v c v
apply calculus derive description syntactic form concepts c
c v non conjunctive
lemma let normalised el terminology r role name concept name
el concept
assume


l

ai u



l

rj cj v

jm

pseudo primitive ai concept names n cj elconcepts j n exists ai n
ai v
assume


l


l

ai u

rj cj v r

jm

ai concept names n cj el concepts j
n
exists ai n ai v r
exists rj j rj r cj v


fithe logical difference lightweight description logic el



proof use theorem first prove point let c ai u jm rj cj
assume c v pseudo primitive let proof c v
note since pseudo primitive concept name inspecting form
conclusions inference rules one see root derivation
derived ax andl andl defl pdefl
exists ai n ai v induction n e
number conjuncts c easy see n v definition
terminologies
base case n trivial root derived one
ax defl pdefl conclude c e n set
ai
assume n root derived andl
andl cases premise used application inference rule
sequent c v c c u c u c el concept
thus c contains less conjuncts c still least one conclude
c v holds theorem applying induction hypothesis hence
exists concept name ai conjunct c ai v finally still
note ai conjunct c


prove point let c ai u jm rj cj assume c v r
let proof c v r note due form right hand side sequent
c v r rule used derive root one ax andl
andl defl pdefl ex prove exists ai n
ai v r exists rj j rj r cj v
induction n similarly n
n rule used derive root one ax defl
pdefl ex two subcases
root derived defl pdefl n c e
ai v r ai
root derived ax ex n c r c
r r c obviously c v holds otherwise rule ex
used derive root c v holds implies c v
thus case rj r cj v holds j
case n proved induction analogously proof point
apply lemma elements cdiff
theorem primitive witness el let el terminologies
signature cdiff c v v member cdiff
sig concept name c el concepts occurring
proof let c v cdiff proof induction construction
c v u one c v di
cdiff apply induction hypothesis r lemma


fikonev ludwig walther wolter

exists conjunct c concept name v ii
exists conjunct r c c c v
case follows v otherwise c v c v
cdiff due c v hence v cdiff
finally case ii obtain c v otherwise c v r c r c v
c v cdiff thus c v cdiff apply
induction hypothesis
theorem every inclusion c v concept difference contains basic witness inclusion concept name right hand side
left hand side define
set left hand concept difference witnesses cwtnlhs
set
nc exists concept v cdiff
set right hand concept difference witnesses cwtnrhs
set
nc exists concept c c v cdiff
rhs
regard concept names cwtnlhs
cwtn succinct
certain sense complete representation concept difference
define set concept difference witnesses
rhs
cwtn cwtnlhs
cwtn

follows first present polytime computing cwtnrhs
polytime computing cwtnlhs





already

given

lutz
wolter


el tboxes briefly present since extension developed consider elhr terminologies together decide concept inseparability since
theorem concept inseparable cwtn
cwtn
computing cwtnrhs

let assume want decide whether cwtnrhs
thus want
decide whether exists concept c c v c v
general strategy follows let
noimplyt c c v c el concept
aim checks whether noimplyt contains c
c v two sets c concepts call c cover c
exists c c c v thus c noimplyt cover
noimplyt noimplyt exists c c c v
note c cover noimplyt exists concept c
c v cdiff exists c c c v
thus reduced original construction appropriate cover c
deciding subsumption c v c c unfortunately general
finite cover exists following example illustrates situation


fithe logical difference lightweight description logic el

example let b r noimplyt contains concepts atomic conjunct clearly noimplyt contains
finite cover
let b r r noimplyt contains
concepts contains finite cover
let b b b u b b b cover
noimplyt
consequence instead directly constructing cover noimplyt first
construct transparent small covers
noimplyt c depth c n
n depth c role depth c e number nestings existential
restrictions c covers denoted noimplynt n singleton
sets non conjunctive finite sets containing k concepts
b u ubk sequence present two distinct computing
cwtnrhs

encode infinite sequence noimplynt n polynomial size abox
way obtain reduction original instance
checking knowledge base certain sense abox
encodes general infinite cover noimplyt
employ terminology dynamic programming decide
concepts noimplynt relevant deciding whether cwtnrhs

although less transparent large terminologies latter considerably
efficient develop acyclic terminologies
el terminology concept name signature set
pre
b b v
finite covers noimplynt n defined figure n
set noimplynt consists concepts without role names distinguish conjunctive non conjunctive note non conjunctive noimplynt
singleton set example shows case conjunctive n distinguish pseudo primitive concept names conjunctive
concept names definition form r c nonn
conjunctive noimplyn
singleton set note concepts covers
c depth c n c el concept n illustrate definitions
el terminologies example
example let b r b non conjunctive
noimply b noimply b b pseudo primitive
noimply b u r u b noimply b u r u b
precisely depth depth c u c max depth c depth c depth r
depth



fikonev ludwig walther wolter

set inductively


l



l

alln





u



l

alln



define noimply follows
non conjunctive
l

noimply



pre



conjunctive f


noimply

noimply b

bf

define inductively noimplyn

pseudo primitive
l

noimplyn


u

pre


l

alln





conjunctive f
noimplyn




noimplyn
b

bf

r b
n
noimplyn
c
n

c


l

u

pre


l

l

alln u

r e

r
enoimplyn


r



b

figure definition noimplynt

let b r r b non conjunctive
noimply b noimply b b pseudo primitive




noimply b u r u b r noimplyt b u r b


let b b b u b b b non conjunctive
noimply b b noimply b b conjunctive






fithe logical difference lightweight description logic el

definition noimply b b since contain role names


noimply x noimplynt x x b b n




following lemma shows correctness definition noimplynt
lemma let normalised el terminology signature nc
noimplynt cover noimplyt c depth c n namely n
c c v c noimplynt
c el concepts n depth v c v
c noimplynt

particular n noimplynt cover noimplyt
proof c assume first pseudo primitive noimplynt consists
c pre u f f possibly empty conjunction concepts


form lemma c v atomic conjuncts c
pre

prove c concept names pseudo primitive
proof

induction n n r b assume pre v


r b lemma must exist pre



v contradicts definition
set pret n
conjunctive f let c noimplynt bf noimplynt b hence
exists atomic conjunct b f c noimplynt b normalised b
non conjunctive e property c already proved b thus c v b
implies c v otherwise c v b would hold
induction step assume c proved n
element noimplyn
let r b let ctn
assume

n
ct v lemma two possibilities

pre v r b similarly claim follows lemma


fact r b
r exists e noimplynt b e v b excluded
induction hypothesis
derived contradiction case f conjunctive considered
analogously case n
c let n assume first non conjunctive let concept
depth v conjuncts pre

obtain pre v assume conjunctive f


let concept depth v v b
conjunct b f induction c v unique b must non conjunctive
c noimply b therefore c v c noimply
induction step assume c shown n let concept
v depth n


fikonev ludwig walther wolter

let pseudo primitive atomicdconjuncts aredincluded
n

pre
pre u
c v follows immediately c


b let r b let ctn
element noimplyn
assume



l

l

eu

eq
n
q pre
hence ct v
distinguish two cases



q



eq

e consider conjunct

r ctn
v required

r sufficient exists e noimplynt b
e v suppose exist e
contraposition induction hypothesis v b contradicts
v r b
c conjunctive f case analogous case
conjunctive n
corollary normalised el terminologies nc following
conditions equivalent
exists el concept c c v c v
exists n c noimplynt c v
observe direct application corollary yield procedure comn
puting cwtnrhs
gives bound n set noimplyt point
present two ways avoiding well concepts
noimplynt exponential size firstly instead working covers construct abox encoding covers contrast concepts aboxes admit encoding
structure sharing
cycles intuitively admit polynomial reconstruction
infinite concept n cnoimplyn c

abox constructed figure normalised el terminology
concept name sig set

non conjunctive
non conjt
b bn b u u bn
note construction similar construction noimplynt
assertions individual play role concepts alln n
assertions individuals play role sets noimplynt n fact one
readily c c noimplynt non conjunctive
conversely involved proof shows whenever
el concept exist n c noimplynt c v
illustrate construction el terminologies example


fithe logical difference lightweight description logic el

let
sig non conjunctive ni
set individual names non conjunctive define sets assertions
follows
pseudo primitive
pre
r r
r b
pre

r
r b b non conjt b r
let


r r



asig
non conjunctive

figure construction
example let b r
b b r r b
b r
let b r r
b b r r b
b r
let b b b u b
b b b b
b b
obtain following characterisation cwtnrhs

theorem let normalised el terminologies signature
following conditions equivalent
cwtnrhs

exist n c noimplynt c v


fikonev ludwig walther wolter

b b non conjt
equivalence points follows corollary give detailed
proof equivalence points follows general
elhr terminologies present
example normalised form terminologies example


v b bn bi bi
u bi
n


bi r bi n bi bi n

v f u n
v r n v n
r abox graphically represented
r
r

r
r

f


r
r





f

f







r

n

f

r



n



r




f






f





clear fact holds already
restriction individuals
theorem el terminologies signature set cwtnrhs

computed polynomial time
proof suffices give polynomial time decides every whether
cwtnrhs
first abox computed polynomial time
quadratic size theorem cwtnrhs
iff b
b non conjt latter condition checked polynomial time since
instance checking polynomial time el tboxes
regarding efficiency observe typical terminologies large
abox indeed quadratic size since pre
typically contain
concept names thus large terminologies straightforward
implementation rather elegant work efficiently one would
store abox quadratic size instance checking refer reader
table discussion prototype implementation applied
modules snomed ct
describe second computing cwtnrhs
works
acyclic el terminologies recall cwtnrhs



ex
ists el concept c c v c v thus
cwtnrhs
every el concept c c noimplyt


fithe logical difference lightweight description logic el

procedure notwitness e
e pseudo primitive



notwitness e pre
e pret
end
e e u u ek

notwitness e ki notwitness ei
end
e r e

r
notwitness e



notwitness e pre
e pret
else



r



notwitness e fifi non conjt notwitness e


pre e pre


end
end
end procedure
figure computation notwitness e
holds c noimplyt computing witness
relation nw sig nc sig nc defined follows
e nw



noimplyt noimplyt e

observe cwtnrhs
nw hence compute
set cwtnrhs






sufficient
compute relation nw practice crucial


compute relation nw rather complement typical terminologies concept
names unrelated sense subsume thus relation
nw much smaller complement contains among others pairs e
subsume
determine pairs e nw aim computing every concept name
e sig set concept names sig property holds
set called notwitness e computed figure following
modifications consider sig non conjunctive
take conjunctive concept names account later consider fresh concept
name occurring sig sig informally standing possible concepts
thus procedure notwitness e given figure recursively associates every
e sig subset set
sig non conjunctive
nw relation
sig nc sig nc


fikonev ludwig walther wolter

note unlike computing cwtnrhs
presented previously described handle two terminologies separately
previous abox could precomputed used
compare terminology whereas terminologies analysed
simultaneously prove correctness procedure notwitness e
lemma normalised acyclic el terminologies signature
e sig following holds notwitness e
e nw
proof prove e sig following two conditions
equivalent
notwitness e
n c noimplynt c v e

sufficient since n noimplynt cover noimplyt lemma
e sig claim trivial e sig proof induction relative
relation sig sig whose definition found page note
since considered terminologies acyclic sig finite relation
well founded
distinguish possible definitions e suppose e pseudoprimitive follows definition noimplynt
lemma exist n c noimplynt c v e

b v e b pre
note b pret
b v e holds every b b v e implies b pre

n

thus every n c noimplyt c v e pret e pre

notwitness e
assume e e u u ek concept c c v e
c v ei k hence applying induction hypothesis
obtain every n c noimplynt c v e notwitness ei
k notwitness e
finally assume e r e notice since
sig sig

particular pseudo primitive pret thus definition
every n noimplynt alln applying induction hypothesis assume
lemma holds e implies
notwitness e
n alln v e distinguish following cases analogously
case distinction procedure notwitness e see figure
r
concept form g nr r
g v r e similarly notwitness e holds every n
alln v e hence concept form g obtain g v r e
otherwise alln v e would hold n depth g depth g
role depth g lemma two cases analogous case e
pseudo primitive considered
assume r
notwitness e n
n

v e


fithe logical difference lightweight description logic el

first observe definition form r

unique c noimplynt
c v e r alln conjunct c
non conjunctive definition set definition form r
n c noimplynt lemma c v e
n



pre
e pret n every c noimplyt


c v
conclude case r
notwitness e
n
n c noimplyt c v e r




pre
e pret c noimplyt





c v e noticem definition noimplyt


bnon conjt noimplyt b thus c noimplyt


c v e holds b non conjt



c noimplym
b c v e b non conjt b

notwitness e holds applying induction hypothesis
thus c v e n c noimplynt
notwitness e
corollary let normalised acyclic el terminologies signature
cwtnrhs
sig b non conjt b notwitness
proof first observe cwtnrhs
sig must hold otherwise
concept c c v c v thus
cwtnrhs
nc
cwtnrhs


iff

iff

iff
iff

sig observation definition
exists concept c c v
cva
sig exists b non conjt
concept c c v b c v
otherwise c v would hold
sig exists b non conjt
b nw definition relation nw
sig exists b non conjt
b notwitness lemma

acyclic terminologies obtain alternative proof theorem
theorem acyclic el terminologies signature cwtnrhs

computed polynomial time procedure notwitness e
proof compute set cwtnrhs
sufficient corollary compute
sets notwitness e every e sig assuming classified
classification cached notwitness e computed e sig
worst case time
example acyclic terminologies signature example
notwitness


notwitness b

fikonev ludwig walther wolter

concept names x sig notwitness x particular

notwitness conclude concept difference witness
computing cwtnlhs

recall set left hand concept difference witnesses cwtnlhs
set
nc exists concept c v c cdiff
tractability computing cwtnlhs
el proved lutz wolter
arbitrary el tboxes reduction simulation checking formulate main
steps employ technique dealing logical difference
elhr terminologies
two interpretations say relation
simulation following conditions hold
e ai e ai
e ri r exists e e
e e ri
e write e exists simulation relation e checked polynomial time
whether e polynomial time checking existence
simulations developed clarke schlingloff crafa ranzato tapparo
van glabbeek ploeger simulations characterise expressive power
el concepts following sense
lemma lutz wolter let interpretations signature
e
e



el concepts c c e c

follows
cwtnlhs




ik ik

ki ti iki canonical model ki
see recall theorem every el concept c c iki
ti c latter condition equivalent ti v c therefore
proved
theorem lutz wolter el tboxes signatures set
cwtnlhs
computed polynomial time
following example illustrates use simulations canonical
determine cwtnlhs

example let r b b
v r f f v f u f f v r b f v r b
v g u g g v r g g v r g g v r b g v r b


fithe logical difference lightweight description logic el

check whether cwtnlhs
consider kbs k k
cwtnlhs
iff ik ik canonical
ik ik k k respectively illustrations canonical ik ik
shown
xran r b
b

xran r b
b

r

xran r b
b

r

r

r



r

xran r g

xran r f

ik

xran r b
b
xran r g

r

r







ik

ik ik point xran r f neither simulated xran r g
simulated xran r g concept inclusion cdiff left hand side
given v r r b u r b

elhr instance difference
polynomial time inseparability logical difference elhr
extensions ideas used section el however one important
difference introduce logics elran elran u u concept difference
captures exactly instance respectively query difference elhr prove analogue theorem languages thereby instance query difference
elhr introduce sequent calculus characterises elran consequences
elhr terminologies start investigation instance difference case since
transparent concept difference case recall el difference
instance concept difference
elran concept difference
recall example showing elhr concept inseparability imply instance
inseparability
ran r v ran v b u



r b

notice abox r c b c exhibiting instance difference
c range r example suggests ran r ran
could used complex concepts kind difference made visible concept
language
definition elran c ran concepts constructed following syntax rule
c





ran r



c ud



r c

nc c range c ran concepts r nr set elran inclusions
consists concept inclusions c v role inclusions r v c c ran concept el concept r nr


fikonev ludwig walther wolter

clearly every elhr inclusion elran inclusion additionally elran inclusions
concept ran r occur everywhere concepts left hand side inclusions
gives us additional concept inclusions concept difference
example example ran r u ran v b
ran r u ran v b thus c ran concept ran r u ran simulate
abox r c b c example make difference could
observed elhr visible elran
example generalised arbitrary tboxes end
consider following straightforward generalisation concept difference differences elran
ran
r
definition elran
difference el difference elh tboxes
ran
set cdiff ran
el inclusions

prove equivalence instance difference elhr concept differran
ence elran first associate every abox individual set ca
ran
c concepts assume given let inductively obj
l
l
ran

ca
u
ran r



n ran

ca

l



u

r b

l

ran r u

r b

l

n ran

r ca b

r b

set
n ran
ran
n
ca
ca
n ran
fordall n moreover lemma shows
intuobserve ca
ran specific concept
ran
itively infinite conjunction ca
ca
conversely associate abox c ran concept construction straightforward however care taken since introduce structure sharing
associate distinct individual names distinct occurrences subconcepts given
c ran concept c first define path c finite sequence c r c rn cn
c c n ri ci conjunct ci n use paths c
denote set paths c p paths c tail p denotes last element
cn p
let aran ap p paths c individual names set inductively

ac ap aq p q paths c q p c c
ap conjunct tail p p paths c
ap conjunct tail p p paths c
r aran ap ran r conjunct tail p p paths c
example let c r u ran v u u ran v u b u ran
c ran concept ac represented graphically follows


fithe logical difference lightweight description logic el




v

b






r

v

aran



ac

indicate ac aran individuals identified paths c note
different occurrences u ran v c correspond different individuals ac
lemma let elhr tbox abox c c ran concepts let
obj
n ran
exists n ca
v


c v ac ac
employ lemma transfer analogue theorem elran
elhr instance differences note following consequence
corollary two elhr tboxes cdiff ran

idiff
n ran
proof idiff exists n ca
v

ran
cdiff ran




conversely

c
v


cdiff


















c
c




idiff

note theorem follows corollary since elhr tbox without
range restrictions c v c v c obtained c
replacing concept form ran r c
proof system elhr
gentzen style proof system elhr consists rules given figures
cut elimination correctness completeness proof system shown similarly
corresponding proofs given hofmann
theorem elhr terminologies c ran concepts c holds
c v c v
generalise lemma elhr terminologies
lemma let elhr terminology concept name r el concept
assume
l
l
l

ran si u
aj u
rk ck v r
il

jn

km

ck k c ran concepts l n least one following
conditions holds


fikonev ludwig walther wolter

r c u ran r v
exran
r c v
bvd
dom
r c v
r v b
avd
ran
ran r v
c v
sub
r c v

ran r v

ran v
ransub
ran r v

r v

figure additional rules elhr terminologies
e exists rk k rk v r ck u ran rk v
e exists aj j n aj v r
e exists rk k rk v r
e exists si l ran si v r
assume pseudo primitive
l
l

ran si u
aj u
il

jn

l

rk ck v

km

ck k c ran concepts l n least one following
conditions holds
exists aj j n aj v
exists rk k rk v
exists si l ran si v
proof prove first part lemma second part proved analogously



let c il ran si u jn aj u km rk ck assume c v r
holds c v r theorem implies exists
derivation sequent c v r proof proceeds induction depth
e maximal length path root one leaves
notice l n root derived andl
andl lemma follows induction hypothesis
otherwise l n note l n possible since
v r definition terminology c c ran e
e respectively hold already remains consider case c r c
rule used derive root one ax ex exran dom
sub consider cases one one


fithe logical difference lightweight description logic el

root derived ax considering form inference rule
r r c hence r v r c u ran r v implies
e holds
root derived ex r r c v hence r v r
c v holds theorem thus c u ran r v
infer e holds
root derived dom b v r r v b
theorem b v r hence r v r e
holds
root derived exran obtain r c u ran r v r
since sequent r c u ran r v r derivation shorter length
apply induction hypothesis hence r v r
e holds r v r c u ran r u ran r v hence e
holds c u ran r v c u ran r u ran r
root derived sub obtain c v r r v
induction hypothesis v r v r
c u ran v seen r v r r v r
c u ran r v respectively hence e e holds

prove extension theorem elran consequences elhr terminologies
give rather detailed description simple witness inclusions contained members
cdiff ran
since going use analysing concept
difference elhr
theorem primitive witness elran differences let elhr terminologies
signature cdiff ran
exist r sig
ran
r v cdiff form c v one
c v ran r u c v
v r v ran r v

member cdiff ran
r sig sig concept name c
subconcept c subconcept
ran concept el concept
proof let c v cdiff ran
c c
prove theorem induction structure
notice c v concept name inclusion
point exists u one c v di cdiff ran

apply induction hypothesis anddwe infer

inclusion

point


point exists r let c il ran si u jn aj u km rk ck
lemma one e e holds cases e e directly entail
inclusion point point exists case e rk v r cdiff ran




fikonev ludwig walther wolter

ck u ran rk v ck u ran rk v otherwise c v would
hold apply induction hypothesis conclude inclusion
point point exists
instance difference witnesses
similarly theorem concept difference el terminologies derived extension theorem elran every member
idiff gives rise basic witness abox instance query
atomic keep formulation succinct give abstract description relationship idiff witness signature
interested reader derive stronger relationship
witness proof
theorem primitive witness elhr instance differences let elhr terminologies signature idiff least one following
conditions holds
r b b idiff r sig
b idiff concept name sig individual b
abox sig sig
b idiff singleton abox individual b elconcept sig sig sig
proof let idiff distinguish following cases
b b r b
r v b obtain r v thus r b b idiff
point holds
b assume b el concept lemma n
n ran
n ran
v theorem one r v ii v iii
v ca b
ca b
r v iv ran r v v c v vi ran r uc v member cdiff ran

n ran

r sig sig concept name c subconcept ca b
subconcept r v cdiff ran
r b b idiff
point holds
let f v g denote member cdiff ran
cases ii vi conran
sider abox af associated c concept f point lemma
sig af sig af g af idiff
case ii obtain f concept name hence af af point
holds case iii obtain af r af point lemma applies
removing af similarly iv af r aran af
point lemma holds finally cases v vi g sig concept
name hence point lemma applies
theorem justifies following finite representation instance difference elhr terminologies corresponds exactly three distinct points theorem assume given let


fithe logical difference lightweight description logic el

set role instance difference witnesses iwtnr
consist r v
r v r v
set right hand instance difference witnesses iwtnrhs
consist
exists idiff
set left hand instance difference witnesses iwtnlhs
consist
exists c c idiff r
exists c c c c b r b c c idiff
set instance difference witnesses defined
rhs
lhs
iwtn iwtnr
iwtn iwtn

theorem observe iwtn idiff
set iwtnr
easily computed polynomial time analysed
thus aim present polynomial time computing
lhs
iwtnrhs
iwtn
computing iwtnrhs

compute iwtnrhs
two different ways first present transparent
abox works arbitrary elhr terminologies second present
efficient dynamic programming works acyclic elhr terminologies
approaches introduced section el terminologies start
abox exhibit abox depending
non conjunctive exists abox idiff
certain individual name case conjunctive
reduced condition defining concept names
deal elhr terminologies rather el terminologies extend
structure significantly describe model theoretic properties
require notion range simulation capture model theoretically expressive
power c ran concepts concepts used describe instance difference terms subsumption cf lemma two aboxes designated
individual names say relation obj obj
simulation

b b
r b r exists b b
r b b
say range simulation addition
rs r b exists c r c exists
c r c b
follows write


fikonev ludwig walther wolter

exists simulation
ran
exists range simulation


following lemma shows range simulations characterise c ran concepts
lemma let aboxes designated individual names
ran concepts
ran
c implies c c
c
proof apply lemma let range simulation
one prove induction n n obj
b obj
n ran
b
b ca

ran assume ran
c holds c
n ran
concept c lemma exists n ca v c moreover
n ran
ran
ca implies
c required

construction given figure normalised elhr terminology signature advise reader recall definition given
figure el terminologies consider additional ingredients required
elhr terminologies remind reader definition non conjt
section

non conjunctive
non conjt
b bn b u u bn
figure use following sets nc r nr
prec
b nc b v
predom
r nr r v
preran
r nr ran r v
prerole
r nr v r
following example illustrates definition
example ran r v ran v b u r b
defined example
b r r b b r b b
holds b b b b



fithe logical difference lightweight description logic el

let
sig non conjunctive ni
set individual names non conjunctive define sets assertions
follows
pseudo primitive
prec

r r predom

r r preran

r b nr let



b b non conjt b prerole
r predomt prerant b

set
prec

preran


prerole
r predomt


let
r r





asig
non conjunctive

figure construction elhr terminologies
lemma every normalised elhr terminology signature following
conditions equivalent aboxes sig non conjunctive
obj

obj ran

lemma proved appendix
lemma let normalised elhr terminologies signature
let abox constructed figure following conditions equivalent
exists abox
b b non conjt


fikonev ludwig walther wolter

proof assume exists abox obj
b non conjt b hence
lemma ran
b lemma b
required
conversely suppose b b non conjt b
obj notice lemma b b hence b
b witness point
theorem let normalised elhr terminologies signature
iwtnrhs
computed polynomial time
proof lemma iwtnrhs
b non conjt
b remains observe constructed polynomial
time checking whether b polynomial time
briefly describe dynamic programming computing set
r
iwtnrhs
acyclic terminologies extended el elh extension
notwitness e figure elhr given figure figure
procedure notwitness e recursively associates every e sig subset
sig non conjunctive
conditions notwitness e become complex since one take

account sets preran
e predomt e prove correctness notwitness
observe following consequence lemma
corollary let normalised acyclic elhr terminologies signature
ran concept c c v cdiff ran
iwtnrhs

c

proof first let iwtnrhs
exists abox
hence point lemma exists n
n ran
n ran
ran concept conversely assume
ca
v cdiff ran
note ca c
exists c ran concept c c v cdiff ran
point
lemma ac ac idiff e iwtnrhs





formulate correctness notwitness way
corollary
theorem let normalised acyclic elhr terminologies signature
iwtnrhs
sig b non conjt b notwitness
proof extension proofs lemma corollary namely one
sig b sig b non conjunctive
following conditions equivalent
b notwitness
ran concepts c c v b implies c v
c



corollary thus obtain every iwtnrhs

ran
exists c concept c c v c v exists
b non conjt b notwitness


fithe logical difference lightweight description logic el

procedure auxpp e


prec
e prerant e predomt e
return
else

auxconcept prec
e prect

auxran prerant e preran


auxdom predomt e predom

return auxconcept auxran auxdom
end
end procedure
procedure notwitness e
e pseudo primitive
notwitness e auxpp e
else e e u usek
k
notwitness e notwitness ei
else e r e

prerole
r notwitness e
notwitness e auxpp e
else



pseudo primitive

auxrole prim

prerole
r predomt


b










prerolet r prerolet predomt







prerolet r prerolet


auxrole exist fifi






predom


b

non conj


b













preran
b


exists
e

non conjt e









b notwitness e preran
e
notwitness e auxrole prim auxrole exist auxpp e
end
end
end procedure





















figure computation notwitness e elhr
tractability iwtnlhs

prove tractability iwtnlhs
reduction simulation checking
case el terminologies theorem
theorem let elhr tboxes let signature set
iwtnlhs
computed polynomial time
proof concept name
iwtnlhs





ik ik

fikonev ludwig walther wolter

ki ti iki canonical model ki indeed
c idiff el concept c theorem
c ik
c ik condition lemma equivalent ik ik
latter condition checked polynomial time
similarly role name r
r iwtnlhs




ik ik ik b ik b

ki ti r b iki canonical model ki
latter condition checked polynomial time

elhr concept difference
section present polynomial time deciding concept inseparability
computing succinct representation concept difference elhr terminologies
essentially reduction instance difference case
start introducing succinct representation concept difference let
elhr terminologies since cdiff cdiff ran
follows
theorem c v cdiff exists inclusion least one
following forms
c v
ii ran r u c v
iii v
iv r v
v ran r v
cdiff r sig sig concept name c subconcept c
subconcept notice particular case ii c el concept
hence case instance difference obtain following representation
concept difference assume given let
set role inclusion concept difference witnesses cwtnr
consist
r v r v r v
set right hand concept difference witnesses cwtnrhs
consist
exists el concept c c v cdiff
additionally exists role name r ran r u c v cdiff
set left hand concept difference witnesses cwtnlhs
consist
exists el concept c v c cdiff
role names r exists el concept c r v c
cdiff ran r v c cdiff
set concept difference witnesses defined
rhs
lhs
cwtn cwtnr
cwtn cwtn



fithe logical difference lightweight description logic el

observe cwtn cdiff obtain
lhs
sets cwtnr
cwtn coincide corresponding witness sets
instance difference allows us use developed
detecting instance differences
lemma let normalised elhr terminologies signature
following holds
r
cwtnr
iwtn
lhs
cwtnlhs
iwtn
rhs
cwtnrhs
iwtn
lhs
proof point follows directly definition proving cwtnlhs
iwtn
rhs
cwtnrhs
iwtn similar lemma finally prove
lhs
lhs
iwtn cwtn assume iwtnlhs
exists elconcept idiff v v
lhs
therefore cwtnlhs
argument r iwtn similar

presented polynomial time compute iwtnlhs

rhs
iwtnr




thus

remains

analyse
cwtn










tractability cwtnrhs

prove tractability cwtnrhs
modifying abox introrhs
duced prove tractability iwtnrhs
recall iwtn iff
b b non conjt cf lemma satisfying condition
cwtnrhs
since abox cannot captured set el concepts
cf example modification motivated observation abox
contain individual range two distinct role names el concepts
rather c ran concepts sufficient capture consequences abox thus
going modify minimal way resulting abox contain
individual name range two distinct role names
definition abox role splitting pair assertions r c b c
individual names b c distinct role names r
following lemma states main property role splitting aboxes
lemma let normalised elhr terminologies signature
let role splitting abox
cwtnrhs

n ran
n ran
proof lemma exists n ca
v ca
v
assume first exist b obj r r b
n ran
definition since role splitting ran r occurs ca
direct scope
n ran
existential restriction r hence ca equivalent el concept
done assume exists r b since role splitting
n ran
ca
equivalent concept ran r u c c el concept case
ran r u c v ran r u c v required



fikonev ludwig walther wolter

abox sig nr define role splitting unfolding
individuals ar obj r sig nr setting
ar r sig nr r br r b sig nr
example consider ran r v ran v b u
r b r c b c example b c
b c notice role splitting unfolding r ar cr r cr br cs bs cs
contain individual range one role
c



cr



cs
r

r



r



b

ar




br



bs

b cr b cs
apply role splitting unfolding abox figure following
concept version lemma proved appendix reduction
lemma abox ac corresponding el concept c introduced
lemma simplicity consider signatures containing least one role name
lemma every normalised elhr terminology signature nr
concept name non conjunctive role name r el concepts c
following conditions equivalent c ran r u c
v

r nr r obj ad ad ran
r

following lemma proved similarly lemma lemma instead
lemma
lemma let normalised elhr terminologies signature
nr following conditions equivalent
cwtnrhs

exists r b r b non conjt
proof assume cwtnrhs
exists el concept c
c v c v additionally exists r
ran r u c v ran r u c v hence c ran r u c
respectively v b b non conjt lemma exists

r r obj ad ad ran
b r lemma
b r ad ad holds lemma
converse direction easy see b r obj b obj

b r ran
b implies b r lemma
consequently obtain cwtnrhs
applying lemma fact
abox role splitting


fithe logical difference lightweight description logic el

finally obtain tractability
theorem let elhr terminologies signature set
cwtnrhs
computed polynomial time
rhs
proof nr cwtnrhs
iwtn computed
polynomial time theorem
otherwise nr follows lemma fact
constructed polynomial time size

elhr query difference
investigate query difference elhr terminologies introduce language
elran u u extends elran universal role intersections roles
concept differences elran u u correspond query differences elhr elran u u
prove analogue theorem states inclusion concept
difference contains inclusion left hand side right hand side
atomic correspondence concept difference elran u u query
difference elhr obtain meaningful definition succinct representation
query difference qdiff finally provide polynomial time deciding
query inseparability computing succinct representation query difference
elran u u concept difference
start section defining language elran u u
definition elran u u let u universal role fresh logical symbol c u u concepts constructed following syntax rule
c





c ud



r c



u c

nc c range c u u concepts r r u u rn r rn nr
n set elran u u inclusions consists concept inclusions c v role
inclusions r v c c ran concept c u u concept r nr
semantics additional constructors straightforward setting interpretation
r u u rn ri rni
ui
note regard universal role u logical symbol e u nr sig u c
sig c concept c assuming u logical symbol reflects fact firstorder translation uses non logical symbols example signature first order
translation x x u contain non logical symbols exception

convenient decompose c u u concepts set c u concepts defined
set c u u concepts without universal role every c u u concept c equivalent


fikonev ludwig walther wolter

concept form u u u u u dk dk c u concepts
see observe concept c subconcept u equivalent u u c
c obtained c replacing occurrences u example
u r b u u e equivalent concept u e u u r b u
u u
u set c u u c u concepts whose signature
following denote c
c
contained
clearly every elran inclusion elran u u inclusion addition role conjunctions
universal role elran u u inclusions used capture differences
elhr tboxes cannot captured elhr inclusions
example first reconsider example recall


v r b

b

v u b v u b universal role regarded
logical symbol sig v u b thus employing universal role elran u u
simulate query difference x b x subsumption v u b
second reconsider example recall
v v r v r

v r u r

r r

v r u r v r u r thus simulate query
difference x r x r x subsumption v r u r
introduce appropriate notion concept difference elran u u
ran u u
definition el
difference elran u u
difference elhr tboxes

ran u u
ran u u
inclusions
el
set cdiff


extend lemma concepts use universal role conjunctions
roles
lemma let elhr terminology r c u concept r u u tq
conjunction role names assume
l
l
l

ran si u
aj u
rk ck v r
il

jn

km

ck k c ran concepts l n least one following
conditions holds
e u exists rk k rk vt rk vt tq ck uran rk v

e u exists aj j n aj v r
e u exists rk k rk v r
e u exists si l ran si v r


fithe logical difference lightweight description logic el

u universal role c v u c c ran concept
c u concept least one following holds
e u exists subconcept r c c c u ran r v
e u exists concept name c v u
e u exists role name r c r v u
e u exists role name r c ran r v u
e u c v
e u exists subconcept ran r u c c r c v
theorem primitive witnesses elran u u let elhr terminologies
ran u u
signature cdiff
exist r sig
ran u u
r v cdiff
form c v one
c v
v r v ran r v
member cdiff ran u u
sig concept name r sig role


ran
name c c concept c u u concept sig c sig sig
proof let c v cdiff ran u u
c c ran concept c u u concept

prove induction structure proof verydsimilar
proof theorem

consider case u let c il ran si u
jn aj u km rk ck lemma one e u e u holds
cases e u e u directly entail existence inclusion point
theorem case e u exists subconcept r c c c uran r v
c u ran r v otherwise r c v r e
apply
c v would hold thus c u ran r v cdiff ran u u

induction hypothesis infer inclusion point point exists
otherwise c v
similarly case e u c v cdiff ran u u

e c v due u applying induction hypothesis
obtain inclusion point point exists
finally case e u exists subconcept ran r u c c r c v
observe first every model every c exists
ran r u c implies exists r c assume
r c v would follow every model every c
exists e c v u would hold infer r c v
ran u u
cdiff
applying induction hypothesis conclude
inclusion point point exists
query difference witnesses
start connecting concept differences elran u u query differences
elhr terminologies direction query differences elhr concept differences
elran u u straightforward observe every assertion c c c u u concept


fikonev ludwig walther wolter

regarded boolean conjunctive query qc example assertion u aur b
equivalent conjunctive query xy x r b details translation
provided appendix obtain ac abox defined lemma
lemma two elhr tboxes signature c v
cdiff ran u u
ac qd ac qdiff

follows distinguish assertion c c c u u concept
conjunctive query qc follows lemma qdiff
cdiff ran u u


come considerably involved direction query differences concept
differences elran u u following lemma provides rather abstract description
inclusions qdiff reflected members cdiff ran u u
stating

given signature
lemma two elhr tboxes signature qdiff
sig sig
exists cdiff ran u u

interested reader extract detailed description proof given
appendix proof lemma given appendix model theoretic employs
close relationship conjunctive query entailment homomorphisms chandra
merlin intuition behind however rather straightforward
q conjunctive query q x x elhr tbox every
model mapping variables x
match q x essentially forest shaped consist
tree shaped attached abox individuals cf lutz et al
forest shaped individuals mapped individuals
mapped trees attached abox individuals mapping however
exists already conjunctive query q q homomorphic image q q
essentially forest shaped individuals mapped abox individuals form trees
attached core q mapped abox individuals words
obtain q partitioning q core subsets correspond c u u concepts
exists abox conjunctive query q q
q conjunctive query q behaviour
q essentially forest shaped q one obtain required elran u u inclusion c v captures subtree query q c u u concept c
c ran concept abox intuition last step exactly
lemma
note holds general tboxes terminologies
lemma theorem directly obtain following description primitive witnesses query differences
theorem primitive witness elhr query differences let elhr terminologies signature qdiff least one following
conditions holds individual names b
r b b qdiff r sig


fithe logical difference lightweight description logic el

b qdiff concept name sig abox
sig sig
b qdiff singleton abox c u u concept
sig sig sig
observe theorem coincides theorem exception point
concept c u u concept therefore define following finite
representation query difference assume given define set
qwtnr
role query difference witnesses set role instance differr
ence witnesses e qwtnr
iwtn
qwtnrhs
right hand query difference witnesses set right hand
rhs
instance difference witnesses e qwtnrhs
iwtn
qwtnlhs
left hand instance difference witnesses set
exists c u u concept c c qdiff lhs
r
u u
exists c concept c r b c c qdiff
c c b
set query difference witnesses defined
rhs
lhs
qwtn qwtnr
qwtn qwtn

theorem qwtn qdiff
rhs
computing qwtnr
qwtn presented section instance
difference thus remains consider qwtnlhs

tractability qwtnlhs

u u concepts
prove tractability qwtnlhs
first capture expressive power c
stronger form simulation interpretations let interpretations simulation called global intersection preserving
simulation addition

every exists
e r r ri
exists e
e e e ri r r
write
e exists global intersection preserving simulation
e
lemma let finite interpretations signature e

u u


c c
c e c
e
checked polynomial time whether
e


fikonev ludwig walther wolter

proof straightforward extension proof lemma polynomialtime deciding existence simulations
observe theorem properties canonical model ik kb k
extended c u u concepts appendix proof given c u u concepts
well namely c u u concepts c
k c aik c ik
c u v c xc c ik
follows concept name
qwtnlhs




ik
ik

ki ti every role name r


r qwtnlhs
ik

ik ik b ik b
ki ti r b thus obtain following tractability

theorem let elhr terminologies signature set
qwtnlhs
computed polynomial time

implementation experiments
section describe experimental evaluation theoretical work developed experiments employ cex tool cex implemented
polynomial time given acyclic elhr terminologies signature input compute witnesses concept difference cdiff
instance difference idiff
cex written ocaml reasoner cb kazakov internally used
classification engine implementation cex employed
developed detail instance difference case acyclic elhr terminologies
compute iwtnr
cex performs straightforward comparison role
inclusion chains entailed terminologies
compute iwtnrhs
cex uses notwitness figure
employs theorem
compute iwtnlhs
cex checks existence simulation
canonical theorem
available open source license http www csc liv ac uk michel software cex
extended version cex computing witnesses query difference qdiff well
presented konev ludwig wolter addition konev et al describe experiments comparing
query difference witnesses concept instance difference witnesses presented




fithe logical difference lightweight description logic el

output iwtnlhs
partitioned three sets
set left hand atomic instance difference witnesses iwtnlhs


defined set concept names exists el concept c
c idiff equivalently v c cdiff
set left hand domain instance difference witnesses iwtnlhs dom


defined set role names r exists el concept c
r b c idiff equivalently r v c cdiff
set left hand range instance difference witnesses iwtnlhs ran


defined set role names r exists el concept c
r b c b idiff equivalently ran r v c cdiff
obviously holds
lhs
iwtnlhs
iwtnlhs dom
iwtnlhs ran

iwtn



concept difference case recall
r
cwtnr
iwtn

lhs
cwtnlhs
iwtn

use instance case set
iwtnlhs x
cwtnlhs x

rhs
x dom ran compute iwtnrhs
cex exploits cwtn
rhs
rhs
iwtn lemma first computes iwtn checks
straightforward variant notwitness concept differences whether
cwtnrhs

following three subsections describe experiments conducted
experimental settings follows programs run pcs equipped
intel core duo e cpu gib main memory version cex
used

comparing different versions snomed ct
applied cex compare january sm july sm b version snomed ct sm sm b contain concept names respectively versions use role names contain role inclusions
domain range restrictions present consequently one infer corollary iwtn sm b sm cwtn sm b sm follows consider
cwtn sm b sm
experiments used signatures ranging called snomed ct subsets
employed uk deployment snomed ct specific areas compared sm sm b signatures computing cwtn sm b sm
sets considered signatures contain snomed
ct role names comparisons resulted non empty difference reproduced


fikonev ludwig walther wolter

table none cases differences regarding role inclusions detected
table second column gives number concept names respective subset
third fifth column number concept witness differences observe
number differences correlate size considered signatures e
exist signatures somewhat comparable size induce greatly varying
number difference witnesses see e g subsets diagnosis manumat
order determine many difference witnesses computed cex obtained
straightforward comparison class hierarchies already computed
sets
clswtnlhs
sm b sm b v b cdiff sm b sm

clswtnrhs
sm b sm b v b cdiff sm b sm
considered comparison signatures obtained
depicted table one see often great number differences cannot
detected considering classification difference
last three columns table give cpu times required computing
concept witnesses
first times given cex directly applied full terminologies
sm sm b
second times given one first extracts modules module extraction tool mex konev lutz walther wolter sm respectively
sm b applies cex extracted modules observe module
extracted mex query therefore concept instance inseparable
whole terminology thus computed concept witnesses
finally times given addition computing concept witnesses full
terminologies sm sm b cex computes examples concept inclusions
logical difference explain witnesses discuss feature cex

one observe extracting mex modules leads significant improvement
performance cex course signature large e g diagnosis
finding resulting modules almost large snomed ct effect
less significant secondly one observe additional computation example concept inclusions logical difference roughly doubles times needed
comparison
finally evaluate practical feasibility abox compute
sets iwtnrhs
sm b sm implemented computation aboxes
together abox reasoning checking second condition lemma
tested implementation subsets snomed ct used evaluating performance cex limit size aboxes speed
computations first computed modules mex obtained


fithe logical difference lightweight description logic el

shown table size modules computed mex e sm b
sm shown columns two three respectively expected definition one observe number concept role membership assertions
present aboxes grow large even modules signatures
thousand concept names
considered subsets implementation ran available physical
memory indicated time value possible concept membership consequences
abox computed overall observed longest execution time
hours set specmatyp conclusion one see straightforward
implementation abox practically useful terminologies
signatures thousand concept names
comparing different versions nci thesaurus
used cex tool compare distinct versions nci thesaurus
distributed releases nci thesaurus contain language constructs part
elhr disjunction value restriction obtain elhr terminologies
removed inclusions contain non elhr constructor original terminologies
typically affected inclusions present distributed nci
versions elhr versions generated way contain role inclusions well
domain range restrictions
similarly work goncalves et al compared consecutive
elhr versions nci thesaurus ranging versions j
exception f could parsed correctly version h
later versions nci thesaurus acyclic hence could
handled cex tool
two consecutive versions ncin ncin within considered range
computed sets cwtn ncin ncin iwtn ncin ncin signatures
sig ncin sig ncin overview set sizes cwtnrhs
ncin ncin
lhs
cwtn ncin ncin obtained found figure comparisons
sorted chronologically along x axis according release dates nci ontology
versions whereas corresponding number left hand atomic difference witnesses
right hand difference witnesses found axis one see number righthand difference witnesses remained fairly low throughout different versions however
occasional spikes occurred number left hand atomic difference witnesses
maximum value comparing versions moreover none
comparisons except shown figure left hand role domain left hand role
range difference witnesses identified overall witnesses regarding role inclusions
detected found every two considered consecutive versions ncin
ncin sig ncin sig ncin
cwtn ncin ncin iwtn ncin ncin
running time seconds mib memory required average
computing witnesses example inclusions idiff ncin ncin computing witnesses example inclusions cdiff ncin ncin average took seconds
used mib memory


fikonev ludwig walther wolter

subset name
admin
adminproc
cdacarest
crcareneur
crcareresp
devicetyp
diagimg
diagnosis
drgadrcon
endosfind
endosproc
epcream
epenema
epenema b
epeye
epiuds
famhist
finding
foodadrcon
ffoodaller
invest
labinvest
labinvmeth
labisolate
labmorph
labspec
labtopog
lifestyle
manumat
nofoodall
nonhuman
pbcl
pbhllng
pf
provadv
sf
socpercir
specmatyp
treatment
vmp
vtm

nc










































cwtnrhs











































clswtnrhs











































cwtnlhs












































clswtnlhs











































time
cwtn
full ontologies










































time
cwtn
module extraction










































time
cwtn
examples










































table subset comparisons sm b sm resulting non empty
difference



fithe logical difference lightweight description logic el

subset name
admin
adminproc
cdacarest
crcareneur
crcareresp
devicetyp
diagimg
diagnosis
drgadrcon
endosfind
endosproc
epcream
epenema
epenema b
epeye
epiuds
famhist
finding
foodadrcon
foodaller
invest
labinvest
labinvmeth
labisolate
labmorph
labspec
labtopog
lifestyle
manumat
nofoodall
nonhuman
pbcl
pbhllng
pf
provadv
sf
socpercir
specmatyp
treatment
vmp
vtm

nc

sig nc

sig nc


thousands

r b r b
thousands

time





















































































































































































































































table performance abox computing iwtnrhs
sm b sm



fikonev ludwig walther wolter


nr right hand witnesses
nr left hand atomic witnesses














lhs
figure sizes cwtnrhs
ncin ncin consec ncin ncin cwtn
utive elhr versions ncin ncin nci thesaurus


j



e

e


n


c




nc








nr








cwtnrhs









cwtnlhs










cwtnlhs dom










cwtnlhs ran










lhs
figure detailed cwtnrhs
cwtn selected versions
nci thesaurus shared signatures sig sig



fithe logical difference lightweight description logic el

peaks atomic left hand difference witnesses mostly resulted changes
general concepts mentioned already goncalves et al provide indepth analysis nci versions systematic comparison methods used goncalves
et al logical diff introduced would interesting beyond
scope one interesting observation made however
peak atomic left hand witnesses observed versions
correlates fact according goncalves et al large number non redundant
axioms added version however comparable number non redundant
axioms added version g peak atomic left hand right hand
witnesses observed analysis
scalability analysis
demonstrated previous sections cex capable finding logical difference two unmodified versions snomed ct distinct versions
nci thesaurus restricted elhr order see cex performance scales
tested randomly generated acyclic terminologies sizes randomly
generated terminology contains certain number defined primitive concept names
role names ratio concept equations concept inclusions fixed
ratio existential restrictions conjunctions random terminologies
generated varying number defined concept names parameters sm
role names equality inclusion ratio exists conjunction ratio
every chosen size generated samples consisting two random terminologies
described applied cex logical difference two terminologies joint signature figure shows average memory consumption cex
randomly generated terminologies sizes maximum length
conjunctions fixed two b number conjuncts conjunction randomly selected two seen performance
cex crucially depends length conjunctions b curves break
point cex runs physical memory instance case
happens terminologies defined concept names finally note
time required cex compare two random terminologies highly varied
across different samples maximum time required cex seconds
additional user support analysing differences
far discussed experiments cex one computes set concept
instance difference witnesses two terminologies clearly witnesses
provide sufficient information detailed analysis logical difference two
terminologies thorough analysis required consider examples
cdiff idiff certain concept names concept instance
difference witnesses thus whenever searches concept names
exists c c v cdiff cex output example concept inclusions
c v cdiff similarly requested cex compute example inclusions
cases classification terminologies cb already requires gib
memory



fikonev ludwig walther wolter







memory consumption mib

memory consumption mib




























number concept names
























































































number concept names

short conjunctions

b long conjunctions

figure memory consumption cex randomly generated terminologies
illustrating left hand concept differences v c r v c ran r v c examples
instance difference case know example even minimal examples
exponential size input terminologies practice however snomed ct
nci additional computation example inclusion every concept instance
difference witness doubles times required computation described
already observed table computation times examples
shown last column computation times without examples shown
th column examples computed cex often reasonable size instance
consider subset specimen material type specmatyp table holds
exist right hand concept witnesses e cwtnrhs
sm b sm
sm b sm
ii set left hand atomic concept difference witnesses cwtnlhs

contains concept names
point ii longest concepts c c v cdiff sm b sm
v cdiff sm b sm computed cex twelve concept role
name occurrences thus far smaller exponential worst case suggests
computed difference witnesses example concept inclusions
witnesses interest explain example concept inclusion entailed one
terminology computing minimal subsets terminology entail
example concept inclusion promising explaining logical differences
known axiom pinpointing justification supported cex
investigated extensively description logics including el schlobach cornet
baader penaloza suntisrivaraporn kalyanpur parsia horridge sirin
horridge parsia sattler penaloza sertkaya illustrate
consider subset specimen material type specmatyp table
cex outputs
venipunctureforbloodtest cwtnlhs
sm b sm



fithe logical difference lightweight description logic el



laboratorytest v laboratoryprocedure u evaluationprocedure
bloodtest laboratorytest u rolegroup hasspecimen bloodspecimen



venipunctureforbloodtest rolegroup hasfocus bloodtest
u venipuncture
u rolegroup proceduresitedirect venousstructure
u method punctureaction

figure minimal axiom set
computes following concept inclusion slightly simplified hand member cdiff sm b sm


venipunctureforbloodtest
v rolegroup hasfocus evaluationprocedure

axiom pinpointing one compute minimal set inclusions sm b
entails concept inclusion set shown figure axioms
terminologies sm contains
laboratorytest v laboratoryprocedure
instead axiom explains difference two terminologies note
concept role names shaded grey seen interaction
concepts heavily depends inclusions built mainly non concepts actually none inclusions required derive inclusion
finally note cex text tool order make accessible
ontology users protege plugin logdiffviz created calls cex visualises
ontology versions differences hierarchical structure logdiffviz
provides basic axiom pinpointing plugin distributed self contained java archive
file jar cex bundled

related work
describe relationship work presented existing work
logical difference inseparability ontologies related work versioning distinction syntactical structural logic approaches versioning
discussed introduction already presented
deciding whether two ontologies inseparable signature investigated many ontology languages different notions inseparability concept
inseparability instance inseparability conjunctive query inseparability model theoretic
inseparability e reducts first ontology coincide reducts
second ontology inseparability closely related notion conservative extensions since one ontology conservative extension another ontology
contains ontology subset inseparable w r signature
available http protegewiki stanford edu wiki logical difference vizualiser logdiffviz



fikonev ludwig walther wolter

smaller ontology thus algorithmic deciding conservativity directly relevant inseparability well tractability presented sharp
contrast known start general el tboxes general eltboxes deciding inseparability conservative extensions exptime complete
concept instance conjunctive queries undecidable modeltheoretic inseparability model theoretic conservative extensions lutz wolter
note however model theoretic case unexpected positive algorithmic
obtained konev lutz et al acyclic el alc extensions
inverse roles alc standard extensions without nominals deciding concept
inseparability conservative extensions exptime complete ghilardi lutz wolter
lutz et al lutz wolter alcqio deciding concept inseparability conservative extensions becomes undecidable lutz et al cuenca grau
et al nothing known alc complexity inseparability instance
conjunctive queries dl lite dialects calvanese giacomo lembo lenzerini
rosati complexity concept instance query inseparability ranges
pspace hard exptime description logic underlying owl ql standard np complete dl litehorn p complete dl litebool konev kontchakov
ludwig schneider wolter zakharyaschev kontchakov et al dllitebool model theoretic inseparability decidable kontchakov et al dllitecore concept instance query inseparability ptime konev et al
contrast work presented however attempt made present
logical difference user two ontology inseparable mentioned
work konev et al cex extended conjunctive query difference case
acyclic elhr terminologies experiments nci thesaurus
discussed
work discussed far concerned logical difference inseparability description logic tboxes difference description logic concepts
investigated example work teege brandt kusters turhan
besides interest kind difference considered well
techniques employed rather different inseparability conservativity
ontologies given ontology languages expressive description logics including first order logic considered work kutz mossakowski
similar relationships theories investigated answer set
programming pearce valverde eiter fink woltran pearce valverde

finally note lemma abox constructed figure appear capture describe fundamental properties el elhr terminologies
applied investigate seemingly unrelated query containment ontology
data access el terminologies bienvenu lutz wolter b first order
rewritability instance queries bienvenu lutz wolter

conclusion
presented polytime decide concept instance
query inseparability w r signature elhr terminologies compute represen

fithe logical difference lightweight description logic el

tation difference non empty experiments cex snomed
ct nci outputs given mostly reasonable size
analysed users many extensions applications open remain
explored mention
motivated study inseparability terminologies comparing different versions terminology regarding say
certain signature potential promising applications found area
decomposing composing ontologies example importing ontology
ontology e forming often important ensure
interfere signature words conservative extension
sense consequences signature coincide
consequences cuenca grau et al ghilardi et al vescovo
parsia sattler schneider observed already inseparability generalises conservative extensions therefore used check whether
one terminology conservative extension another terminology checking
conservative extensions used extract modules ontologies cuenca grau
et al kontchakov pulina sattler schneider selmer wolter zakharyaschev
konev et al would interest explore applications inseparability
testing extract modules terminologies check conservativity
inseparability defined mean one terminology
replaced another terminology every context applications inseparability
modularity important ensure inseparable
inseparable well ontology called replacement
property konev lutz walther wolter exploited discussed
example work cuenca grau et al kontchakov et al
notions inseparability introduced replacement property
see let b b



v r b
r b






v r b
v r b




query inseparable therefore concept instance inseparable
even concept inseparable b v b indeed
observe v v
important open determine complexity develop
strong versions inseparability replacement property el
elhr terminologies
elhr rather weak description logic would great interest explore
far techniques developed elhr applied ontologies contain additional constructors still consist mainly elhr inclusions unlikely tractable
sound complete interesting extensions exist seems worth exploring sound incomplete extensions presented
direction presented goncalves parsia sattler



fikonev ludwig walther wolter

acknowledgments
supported epsrc grant ep h would thank
william gatens development logdiffviz protege plugin three anonymous
reviewers helpful comments

appendix proofs section
lemma every terminology one construct polynomial time normalised
terminology polynomial size sig sig every
model exists model j j x x j every
x sig moreover acyclic acyclic
proof given terminology construct normalised terminology five steps follows
first remove occurrences conjunctions replace c occurrence r c
c concept name fresh concept name add concept
definition c terminology repeat last step exhaustively
second replace every ri bi inclusion right hand side form f u
r b u u rm bm bi concept name bi f
conjunction concept names f fresh concept name
bi add concept definition bi ri bi terminology
third replace every inclusion form r two inclusions v r
r v terminology
fourth consider concept name sequences b bn
f fn conjunctions concept names terminology
contains concept definitions f bi n bi conjunct
conjunct fn let fn conjunction concept names fn except let

recursively
replacing conjunct bi conjunction

n replace concept definition f terminology
primitive concept definition v f
fifth inclusion f v f r v f ran r v f f
conjunction concept names replace every conjunct b f b f
terminology f conjunction non conjunctive concept names f
see construction indeed yields normalised terminology observe
steps ensure inclusion one following forms r b
f e v r b e v r e v f b concept name e concept
name form ran f conjunction possibly conjunctive
concept names step breaks cycles concept definitions step takes care
conjuncts conjunction concept names f right hand side inclusion
form f v f r v f ran r v f non conjunctive concept names
readily verified acyclic acyclic none steps introduces cycles
concept definitions
obtained polynomial time polynomial
size let n number inclusions c maximal length inclusions
right hand side clearly steps increase number
inclusions c n raising total number inclusions nc steps


fithe logical difference lightweight description logic el

increase number inclusions length right hand sides
length right hand side inclusion increase sum lengths
right hand sides inclusions e nc upper bound right hand
side upper bound running time steps construction
therefore n c hence size running time construction
n c
notice every concept name occurs left hand side unique concept
definition c thus every model expanded model j
interpreting fresh concept names sig sig setting aj c
moreover readily checked
prove extended version theorem according el concepts
concepts form ran r evaluated correctly canonical model ik
c u u concepts introduced definition
theorem extended version let k elhr kb
ik model k
ik computed polynomial time size k
xc ik obj c c u u concept form ran r

k c aik c ik
c u v c xc c ik
proof point follows fact instance checking elhr done polynomial time
first prove point el concepts c sub proof simultaneous
induction construction c interesting step c r
start proof direction left right assume first k c
xran r rik ran r u v thus induction
hypothesis xran r ik c ik required assume c ud v c
xc xran r rik ran r u v induction
hypothesis xran r ik xc c ik required
conversely assume aik c ik exists ik aik rik
ik assume first b obj induction hypothesis k b
exists b vt r thus k c required assume
xran f k f vt r xran f ik induction
hypothesis ran u f v thus k c required
assume xc c ik exists xran f c u v f vt r
xran f ik induction hypothesis ran u f v thus c u v
r required
prove point concepts form c ran r assume k ran r
exist b b vt r ran r ik conversely


fikonev ludwig walther wolter

assume ran r ik definition ik exist b b
vt r hence k ran r required
assume c u v ran r c ran vt r xc
ran r ik since path wk tail xc converse direction similar
follows proved far ik model thus
proved point remains prove point
prove point arbitrary c u u concepts c interesting step c
r u u rn
assume first k c c ik since ik model k similarly
c u v c xc c ik since xc c u ik ik model
conversely assume c ik exists ik aik ik
ik assume first b obj induction hypothesis k b
every ri n exists si si b si vt ri thus k c
required
assume xran f k f vt ri n
xran f ik induction hypothesis ran u f v thus k c
required
assume xc c ik exists xran f c u v f vt ri
n xran f ik induction hypothesis ran u f v thus
c u v required

appendix b proofs section
proofs require infinite sets concepts introduce notation
well known existence minimal let possibly
infinite set c ran concepts introduced definition elhr tbox
c u u concept introduced definition c ran concept write
say included w r every model
di follows c c following observation follows fact
c u u c ran concepts equivalent horn formulas sense chang
keisler
lemma elhr tboxes sets c ran concepts exists model
following equivalent c u u c ran concepts

di
come proof lemma convenience reader formulate

lemma every elhr tbox abox c ran concepts c
obj
n ran
exists n ca
v




fithe logical difference lightweight description logic el

c v ac ac
n ran

proof prove point direction right left observe ca

n ran
n thus ca v implies
ran compactness
assume ca


n ran
n ca v required
ran take every obj model point
assume ca




ran c
da c ran concepts c da c ia ca
exist lemma may assume mutually disjoint take
following union ia

aobj ia

ai aobj aia nc

ri aobj ria da db r b r vt r r nr

ai da obj
claim c ran concepts c obj following holds ia
c ia iff c
proof induction construction c interesting cases c ran r
c r direction right left
let
c assume first c ran r let c ia ri
aobj ria claim follows definition otherwise da db
n ran
every n hence
b r b r vt r thus ran r ca
ran


ca ran r obtain c
assume
r c ia take ri di
c



obj r c ia follows immediately induction hypothesis
otherwise da db b r b r vt r induction
ran compactness exists concept e c ran
hypothesis dib hence ca b
b
n ran
every n
e v r b obtain r e ca
ran r obtain c ia r v r finishes proof
ca


claim
c v let c e ia obj
claim c ia implies dia c ia dia conclude
di applying claim similarly one c di every
c ri si every r v follows model
construction ai bi ri every r b moreover
ran implies aia ai ai
obj holds ca

ran
claim thus infer model ca


ia

implies da ai claim hence
derived contradiction
proof point simple application definition


fikonev ludwig walther wolter

prove cut elimination correctness completeness calculus elhr
given figures start basic observations easily proved
induction length derivations
lemma elhr terminology c ran concepts c role names r

v c v
c v v ca ca c v ca
c v r c v r u ran r
c v r r v b c v b
c v ran r ran r v c v
c v r r v c v
c v ran r r v c v ran
lemma cut elimination elhr terminology c ran concepts c e
c v v e c v e
proof let derivation c v derivation v e let li
length di proof lemma induction lexicographical
ordering pairs l l
case l l well cases l ends one
andl andl andr ex defl defr pdefl virtually
proof hofmann assume ends dom last sequent form
r v e sequent b v e lemma item c v r
implies c v b induction hypothesis c v e
cases ends exran ran sub ransub dealt
similar way lemma items
theorem let elhr terminology c c ran concepts
c v c v
proof easily checked proof system rules sound c v
c v
conversely assume c v prove c v construct
interpretation derivability sequents model
consequence obtain c conclude c v
properties
domain set well formed pairs x hc rc c c ran concept
rc finite set role names
l
nr c u
ran r v ran rc
rrc



fithe logical difference lightweight description logic el

introduce following abbreviation let
l
ran rc
ran r
rrc

c ran concepts c interpreted
c hd rd u ran rd v c
r nr interpreted
r hc rc hd rd r rd
c u ran rc v r u ran rd
note c nonempty every c consider r c nr c v ran

finite r c finite
notice ax andr c v c u ran rc
lemma c u rr ran r v ran c v ran r c
c






c r c well formed pair obviously c r c c
c c c ran concepts c proof induction
construction c

well formed pair hc rc c u ran rc v axiom
c u c
let hc rc u c u ran rc v u since u v
lemma c u ran rc v hc rc similarly
hc rc
conversely suppose hc rc hc rc holds c u
ran rc v c uran rc v andr c uran rc v ud
hc rc u
r c x c x r
suppose well formed pair hd rd hd rd r c
u ran rd v r c lemma item u ran rd v r c u ran r
consider rrc nr c u ran r v ran clearly r rrc similarly
argument r c hc rrc well formed pair ax andr
curan r v curan rrc ex r curan r v r curan rrc lemma
u ran rd v r c u ran rrc definition hd rd hc rrc r
since c u ran rrc v c hc rrc c
conversely let hd rd hd rd r hd rd c u
ran rd v r uran rd r rd uran rd v c ex
r u ran rd v r c lemma u ran rd v r c
hd rd r c
ran r x x r
first ran r hc rc r rc r rc
c u ran rc v ran r ran r hc rc r rc suppose hc rc
ran r c u ran rc v ran r since hc rc well formed pair
r rc ran r hc rc r rc


fikonev ludwig walther wolter

suppose hc rc ran r hc rc r rc let
denote c u ran rc induction length derivations one see sequent
form r v ran derivable nr therefore hr wellformed pair hr hc rc r conversely let hd rd hd rd r
particular r rd hd rd ran r
model need axioms true

x cx whenever x cx x v cx
let hc rc x c u ran rc v x lemma item
c u ran rc v cx hc rc cx
cx x whenever x cx
let hc rc cx c u ran rc v cx since ax defr
cx v x lemma c u ran rc v x hc rc x
x r whenever ran r v
let hc rc hd rd r c u ran rc v r u ran rd
r rd since r rd ax ran ran r v andl andl
u ran rd v hd rd
x r x b whenever r v b
let hc rc hd rd r c u ran rc v r u ran rd
r rd notice lemma item c u ran rc v b
hc rc b
r whenever v r
let hc rc hd rd r c uran rc v r duran rd r rd
lemma item c u ran rc v u ran rd since r v
ax ransub ran r v ran u ran rd v ran andl
andl since hd rd well formed rd thus hc rc hd rd



c v c since c r c c



c r c c u ran r c v c v c u ran r c
c v lemma
proof lemma let normalised elhr terminology signature additionally let abox sig non conjunctive obj
direction direct consequence construction
b obj b sig non conjunctive b b
b obj
assume obj define range simulation setting
b obj b sig non conjunctive b obj
b b b b
b b obj
indeed range simulation verifying
conditions rs introduced page hold


fithe logical difference lightweight description logic el



obj immediately follows

let b b b b prove b
b b sig non conjunctive obtain definition
b b moreover holds b prec
b otherwise b b
thus definition b b b immediately
follows b definition
let b r b b r prove exists
obj b r immediately follows
definition r b holds definition
b b sig non conjunctive follows definition
b b additionally infer r predom
b otherwise
r b would imply b b
consider cases b defined b pseudo primitive obtain
definition b r b holds b definition

b r b distinguish following two cases r



prerole
r obtain r prerolet r predomt b thus r b
definition holds b definition case



r prerole
r r prerolet r predomt b furthermore


b b r b b easy see must exist bi non conjt b


r preran
bi bi b r b bi

definition b b bi definition
rs let b r c b r exists
r b b sig non conjunctive obtain
definition b b furthermore r preran
b
otherwise b b thus definition b r b
follows definition r
converse direction assume obj ran

sufficient n
n ran
ca
va


implies lemma obtain lemma
holds
thus prove induction n every concept name b sig
n ran
non conjunctive b obj ca
v b
b
let n b sig non conjunctive b obj follows

l
l
l
ran

ca

b
u
ran
u
ran
b
b prec
b

preran
b



ar bt
bnon conjt b


sprerole
r predomt prerant b

fikonev ludwig walther wolter

ran
hence one see every subconcept form ran occurs ca

b

obtain preran
b b non conjunctive holds b
pseudo primitive b r b hence lemma conclude
ran
ca
v b
b
n let b sig non conjunctive b obj
distinguish following two cases b pseudo primitive obtain
n ran
ca

b

l

l

b u

preran
b

b prec
b

l

ran u

ran

ar bt
bnon conjt b


sprerole
r predomt prerant b

u

l

cs

predom
b
n ran
v b
c ran concepts cs follows lemma ca
b


b r b obtain
n ran

ca
b

l
b prec
b

u

l

b u

preran
b

l

ran

ar bt
bnon conjt b


sprerole
r predomt prerant b

l

cs u



prerole
r predomt b

l

ran u

n ran
ca


b non conjt b
predom b preran b
sprerole
r




b

c ran concepts cs easy see conditions e e e lemma
n ran
v b hold condition e would fulfilled
hold thus ca
b
n ran
n ran
b non conjt b
ca
observe every subconcept ca
b

b

n ran





prerole
r predomt b prerant b obtain cat v b
b

n ran
u ran v b lemma
induction hypothesis thus ca
b
every b infer condition e hold therefore
n ran
v b
ca
b

appendix c proofs section
proof lemma let normalised elhr terminology signature
nr additionally let nc concept name non conjunctive
let r role name let c el concept finally let c
ran r u c
first observe obtain lemma v holds
ad ad additionally lemma ad ad
obj ad ad ran
thus sufficient following
equivalence

ran

ad ad ran
r r obj ad ad r



fithe logical difference lightweight description logic el

next note abox ad role splitting c el concept ran r u c
b ad ad b obj ad sig ad r aran ad
assume first obj ad ad ran
let obj ad obj
corresponding range simulation define relation obj ad obj
setting every obj ad every obj every role name r
r obj
r

c ad sig ad c obj ad
r

note well defined ad role splitting
range simulation exists r sig r
obj ad r prove conditions condition rs
page hold
exists c ad ad sig ad c obj ad
exists obj ad range simulation
e obj hence ad
otherwise easy see exists r r obj
obj sig thus ad ad r
let r ad obj ad obj
r sig follows definition hence range
simulation implies r definition

let r ad obj ad obj r sig
definition obtain additionally range
simulation exists obj thus
r definition definition
ad role splitting
rs let r c ad c obj ad obj r sig
definition holds r range simulation
exists obj r hence r r r holds
definition
converse direction assume exists r r obj



ad ad ran
r holds let obj ad obj corresponding
range simulation define relation obj ad obj setting every
obj ad every obj




r sig r

straightforward verify obj range simulation
ad


fikonev ludwig walther wolter

appendix proofs section
proof lemma require preliminary observations let ac abox
associated c ran concept c lemma elhr terminology c ran concept c c u u concept c v k ac
k ac theorem extended version
c v ik ac ik canonical model k
note c v u dik ik
r u u tn rik exists role name
sik vt ti n summarise consequences require
proof
c u concept occurrences si ri u u ri mi intersections roles
k c v exist role names si k
si vt ri j k j mi c v obtained
replacing si si
ii c u concept c v u exists sequence
r rn ik r rn aran ik r rn ac
first case exists subconcept ran r u c c commutativity
associativity u r c v r rn second case
c v r rn



assume c il ran si u jn aj u km rk ck c v r
let r rk occurrences role intersections r ri ri u u
ri mi k role names si k si vt ri j
k j mi c v obtained replacing ri
si applying lemma c v vt r j j
v obtain one conditions e u e u e u e u must
hold
second part lemma first prove induction n every c ran concept c every c u concept c v r rn least one
following conditions holds
e n exists subconcept r c c c u ran r v
e n exists concept name c v u
e n exists role name r c r v u
e n exists role name r c ran r v u
n let c c ran concept c u concept c v r
obtain least one conditions e u e u e u e u must hold
first part lemma hence one e n e n e n e n satisfied
n let c c ran concept c u concept c v r rn
apply first part lemma conditions e u e u e u
fulfilled conclude conditions e n e n e n satisfied


fithe logical difference lightweight description logic el

case e u holds exists subconcept r c c c u ran r v
r rn induction hypothesis obtain least one conditions
e n e n e n e n fulfilled c u ran r v r rn thus
c v r rn r sig c every subconcept c subconcept
c
c v u c ran concept c c u concept ii
distinguish following two cases
exists subconcept ran r u c c sequence r rn
r c v r rn n r c v condition e u
holds n obtain least one conditions e n e n e n
e n satisfied e n holds exists subconcept r c r c
c u ran r v r c r c c u ran r v
c u ran r occurs top level concept c c v holds
thus condition e u otherwise exists subconcept c u ran r u e
c e u satisfied c u ran r u e u ran v r c r c r c
subconcept c thus c condition e u holds finally one
conditions e n e n e n satisfied one e u e u e u holds
ii
exists sequence r rn c v r rn n condition
e u holds n least one conditions e n e n e n e n
holds ii conclude one conditions e u e u e u
e u satisfied well

give translation c u u assertions conjunctive queries similar
construction abox c ran concept given section first given c u concept
c define path c finite sequence c r c rn cn c c n
ri ci conjunct ci n ri conjunctions role names let
xp p paths c pairwise distinct variable names set
xc xp xq p q paths c q p r c conjunct r
xp conjunct tail p p paths c
let x sequence
v variables xc except xc conjunctive query qc
obtained x xc replacing xc
va finally
v uu u uu dk
obtain conjunctive query qd x ik xd assume distinct

variables used every xdi k x sequence variables except
xd replacing xd
prove lemma require preparation query answering closely related
existence certain homomorphisms interpretations let signature
set individual names interpretations function f called
homomorphism
f ai f ai


fikonev ludwig walther wolter

ai implies f ai
ri implies f f ri r
known chandra merlin exists homomorphism
q conjunctive query q individual names
ak q
proof slightly refine notion homomorphism considering partial homomorphisms domains satisfy certain conditions namely
every n call partial homomorphism level n homomorphism
domain contains elements reachable role chain length n
named individual element without predecessor prove
every elran u u inclusion c v depth c depth n c v implies
c v exists partial level n homomorphism certain model
certain model
consider partial homomorphisms certain interpretations
introduce first let finite set individual names interpretation
called named exists ai model called forest
f everysd named exists one
rnr ri

f infinite sequences di di rnr ri
di named

f rnr ri named named
let finite set individual names n signature partial function f
forest model called n homomorphism


h ai domain f f ai ai


h domain f r ri implies f f ri


h domain f ai implies f ai
h exist chain dm di di
length n named di domain f



r r





one prove following
lemma suppose forest interpretation every
exists homomorphism assume well q q
conjunctive query individual names ak
q
proof assume match q x q x consists
elements f f definition forests h h
definition partial homomorphisms exists v v x
domain homomorphism f take homomorphism f
match q x v f v v x


fithe logical difference lightweight description logic el

finally need technique constructing homomorphisms let
interpretation let
u
tim u c c
depth c c

depth c role depth c e number nestings existential
restrictions c
lemma let finite signature let suppose forest
interpretation






ai bi ri implies ai bi ri b r


tim u ai tim u
ai




tm u
exists tm u


exists homomorphism g
proof construct g constructing sequence functions f fm
follows domain dom f f consists
ai




exist r ri ai set f ai ai
every remaining dom f choose according set f observe
tm u
tim u
f dom f


suppose fn constructed
fn dom fn
tmn u
tmn u


n dom fn named exists sequence
r r rni dn named ri
dom f

construct fn consider dom fn named r ri



u


domain fn consists let rd r r rd
rr r

l
u
rd
tmn u



mn u

dti


u
rd


l

timn u
fn


mn u
dti



thus choose e fn e ri r rd timn u
tmn u
e set fn e defines fn observe fn welli
defined f observe fn properties f

set g nm fm readily checked g required


fikonev ludwig walther wolter

position prove lemma
lemma qdiff exists cdiff ran u u
sig

sig
proof assume given let q qdiff let sig
sig q assume contrast shown








elran u u inclusions sig
consider model q lemma obtain contradiction
exists obj forest model every n
exists obj n homomorphism fn

take every obj model ia da ia c ran c u u concepts c

da c ia ti c







ran
c
ti c c


interpretations ia exist lemma define unfolding
ia ia path

ia finite sequence r rn dn n ri ri set ri

role names r ri iff di di ria n path p tail p denotes
last element p let ia consist paths ia set


aia p ia tail p aia
ria drd ia ia r r
ia forest moreover c u u concepts c p ia


p c ia





tail p c ia

particular ia still model
take following disjoint union interpretations ia

aobj ia

ai aobj aia nc

ri aobj ria da db r b r vt r r nr
ai da obj
obj forest model exist obj n homomorphisms n first observe following
claim el concepts c ia
c c ia


fithe logical difference lightweight description logic el

proof induction construction c interesting case c r
direction left right
assume c ia take ri

di obj ria c ia follows immediately induction
hypothesis otherwise da db b r b r vt r
induction hypothesis dib hence ti b compactness
exists concept e ti b e v obtain r e ti
r e v r obtain da c ia r vt r
claim obj forest model
obj forest model follows construction remains
model role inclusions r v follows construction
ri si suppose c v c c el concept c v c follows
claim condition ia assume c ran r
let ran r da c since ia da
exists r b r vt r ran r ti ti c
hence da c ia e da c claim
claim every n exists obj n homomorphism
lemma sufficient conditions condition
follows directly condition proved induction construction c
interesting step c r u u rm let obj c

tin u ai take ai di ia ti
u

ai assume
compactness ti hence c tin

ia r rk b bi ri b k

every exists j rj vt ri tin u bi




u
b every j exists
induction hypothesis tn

u


j k rj vt ri c tin
ai required


let c dtn u ai obj


exists b obj ti b u c compactness
u
u

tn
required
ti b u c hence exists tn



ai obj shown ai required
finishes proof lemma

references
baader f brandt lutz c pushing el envelope proceedings
th international workshop owl experiences directions owled
vol ceur workshop proceedings ceur ws org
baader f penaloza r suntisrivaraporn b pinpointing description
logic el proceedings th annual german conference artificial intelligence ki vol lecture notes computer science pp
heidelberg berlin germany springer verlag


fikonev ludwig walther wolter

baader f terminological cycles description logic existential restrictions
proceedings th international joint conference artificial intelligence
ijcai pp san francisco ca usa morgan kaufmann
bienvenu lutz c wolter f deciding fo rewritability el proceedings th international workshop description logics dl
bienvenu lutz c wolter f b query containment description logics revisited proceedings th international conference principles knowledge
representation reasoning kr
brandt kusters r turhan approximation difference description logics proceedings th international conference principles
knowledge representation reasoning kr pp san francisco ca
usa morgan kaufmann
calvanese giacomo g lembo lenzerini rosati r data
complexity query answering description logics proceedings tenth
international conference principles knowledge representation reasoning
kr pp
chandra k merlin p optimal implementation conjunctive queries
relational data bases proceedings th annual acm symposium theory
computing stoc pp york ny usa acm
chang c c keisler h j model theory vol studies logic
foundations mathematics elsevier amsterdam netherlands
clarke e schlingloff h model checking handbook automated reasoning
vol ii chap pp elsevier amsterdam netherlands
conradi r westfechtel b version software configuration management acm computing surveys csur
crafa ranzato f tapparo f saving space time efficient simulation
fundamenta informaticae
cuenca grau b horrocks kazakov sattler u modular reuse ontologies theory practice journal artificial intelligence jair

delaitre v kazakov classifying elh ontologies sql databases
proceedings th international workshop owl experiences directions
owled vol ceur workshop proceedings ceur ws org
eiter fink woltran semantical characterizations complexity
equivalences answer set programming acm transactions computational logic

ghilardi lutz c wolter f damage ontology case conservative extensions description logic proceedings tenth international
conference principles knowledge representation reasoning kr
pp menlo park ca usa aaai press


fithe logical difference lightweight description logic el

golbeck j fragaso g hartel f hendler j oberhaler j parsia b
national cancer institutes thesaurus ontology journal web semantics

goncalves r parsia b sattler u analysing multiple versions ontology
study nci thesaurus proceedings th international workshop
description logics dl vol ceur workshop proceedings ceurws org
goncalves r parsia b sattler u concept semantic difference
expressive description logics proceedings th international workshop
description logics dl
hofmann proof theoretic description logic proceedings
th annual ieee symposium logic computer science lics pp
washington dc usa ieee computer society
horridge parsia b sattler u justification oriented proofs owl
proceedings th international semantic web conference iswc vol
lecture notes computer science pp berlin heidelberg germany
springer verlag
ihtsdo snomed clinical terms user guide international health terminology standards development organisation ihtsdo available
http www ihtsdo org publications introducing snomed ct
jimenez ruiz e cuenca grau b horrocks llavori r b supporting
concurrent ontology development framework tool data knowledge
engineering
kalyanpur parsia b horridge sirin e finding justifications
owl dl entailments proceedings th international nd asian semantic
web conference iswc aswc pp berlin heidelberg germany
springer verlag
kazakov consequence driven reasoning horn shiq ontologies proceedings
st international conference artificial intelligence ijcai pp

kazakov krotzsch simancik f unchain el reasoner proceedings th international workshop description logics dl ceur
workshop proceedings ceur ws org
klein c fensel kiryakov ognyanov ontology versioning
change detection web knowledge engineering knowledge management
ontologies semantic web vol lecture notes computer science
pp springer verlag berlin heidelberg germany
konev b lutz c walther wolter f semantic modularity module
extraction description logic proceedings th european conference
artificial intelligence ecai vol frontiers artificial intelligence
applications pp amsterdam netherlands ios press


fikonev ludwig walther wolter

konev b walther wolter f logical difference description
logic terminologies proceedings th international joint conference automated reasoning ijcar vol lecture notes computer science
pp berlin heidelberg germany springer verlag
konev b kontchakov r ludwig schneider wolter f zakharyaschev
conjunctive query inseparability owl ql tboxes proceedings
th conference artificial intelligence aaai menlo park ca usa
aaai press
konev b ludwig wolter f logical difference computation cex
proceedings th international joint conference automated reasoning
ijcar lecture notes computer science berlin heidelberg germany
springer
konev b lutz c walther wolter f formal properties modularisation
modular ontologies pp springer verlag berlin heidelberg germany
kontchakov r wolter f zakharyaschev logic ontology comparison
module extraction application dl lite artificial intelligence

kontchakov r pulina l sattler u schneider selmer p wolter f zakharyaschev minimal module extraction dl lite ontologies
qbf solvers proceedings st international joint conference artificial
intelligence ijcai pp san francisco ca usa morgan kaufmann
kutz mossakowski conservativity structured ontologies proceedings
th european conference artificial intelligence ecai vol
frontiers artificial intelligence applications pp amsterdam
netherlands ios press
kutz mossakowski modular consistency proof dolce proceedings th conference artificial intelligence aaai menlo park ca
usa aaai press
kremen p smd kouba z owldiff practical tool comparison
merge owl ontologies proceedings th international workshop web
semantics pp los alamitos ca usa ieee computer society press
lutz c toman wolter f conjunctive query answering description
logic el relational database system proceedings st international
joint conference artificial intelligence ijcai pp menlo park
ca usa aaai press
lutz c walther wolter f conservative extensions expressive description logics proceedings th international joint conference artificial
intelligence ijcai pp menlo park ca usa aaai press
lutz c wolter f deciding inseparability conservative extensions
description logic el journal symbolic computing
lutz c wolter f foundations uniform interpolation forgetting expressive description logics proceedings nd international joint conference


fithe logical difference lightweight description logic el

artificial intelligence ijcai pp menlo park ca usa aaai
press
mendez j suntisrivaraporn b reintroducing cel owl el reasoner
proceedings nd international workshop description logics dl
vol ceur workshop proceedings ceur ws org
noy n f musen promptdiff fixed point comparing
ontology versions proceedings th national conference artificial intelligence pp menlo park ca usa aaai press
ohst welle kelter u differences versions uml diagrams
proceedings th european software engineering conference held jointly
th acm sigsoft international symposium foundations software engineering
esec sigsoft fse pp york ny usa acm
oliver e shahar shortliffe e h musen representation
change controlled medical terminologies artificial intelligence medicine

palma r haase p corcho gomez perez change representation
owl ontologies proceedings th international workshop owl experiences directions owled vol ceur workshop proceedings
ceur ws org
pearce valverde uniform equivalence equilibrium logic logic programs proceedings th international conference logic programming
nonmonotonic reasoning lpnmr vol lecture notes computer
science pp berlin heidelberg germany springer
pearce valverde synonymous theories knowledge representations
answer set programming journal computer system sciences
penaloza r sertkaya b complexity axiom pinpointing el
family description logics proceedings th international conference
principles knowledge representation reasoning kr menlo park ca
usa aaai press
poggi lembo calvanese giacomo g lenzerini rosati r
linking data ontologies journal data semantics
redmond smith drummond n tudorache managing change
ontology version control system proceedings th international workshop
owl experiences directions owled vol ceur workshop
proceedings ceur ws org
rosati r conjunctive query answering el proceedings
international workshop description logic dl vol ceur workshop
proceedings ceur ws org
schlobach cornet r non standard reasoning services debugging
description logic terminologies proceedings th international joint conference artificial intelligence ijcai pp san francisco ca usa
morgan kaufmann


fikonev ludwig walther wolter

teege g making difference subtraction operation description logics
proceedings th international conference principles knowledge representation reasoning kr pp san francisco ca usa morgan
kaufmann
van glabbeek r j ploeger b correcting space efficient simulation
proceedings th international conference computer aided verification
cav vol lecture notes computer science pp heidelberg berlin germany springer verlag
vescovo c parsia b sattler u schneider modular structure
ontology atomic decomposition proceedings nd international joint
conference artificial intelligence ijcai pp menlo park ca
usa aaai press




