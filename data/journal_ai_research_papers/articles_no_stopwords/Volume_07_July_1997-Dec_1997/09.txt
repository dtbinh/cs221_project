Journal Artificial Intelligence Research 7 (1997) 249-281

Submitted 7/1997; published 12/1997

Gravity Fails: Local Search Topology

Jeremy Frank

frank@tiziano.arc.nasa.gov

Caelum Research Corp.
NASA Ames Research Center
Mail Stop N269-1
Moffett Field, CA 94035-1000

Peter Cheeseman

cheesem@ptolemy.arc.nasa.gov

RIACS
NASA Ames Research Center
Mail Stop N269-1
Moffett Field, CA 94035-1000

John Stutz

stutz@ptolemy.arc.nasa.gov

NASA Ames Research Center
Mail Stop N269-1
Moffett Field, CA 94035-1000

Abstract

Local search algorithms combinatorial search problems frequently encounter sequence states impossible improve value objective function;
moves regions, called plateau moves, dominate time spent local search.
analyze characterize plateaus three different classes randomly generated
Boolean Satisfiability problems. identify several interesting features plateaus
impact performance local search algorithms. show local minima tend
small occasionally may large. show local minima escaped
without unsatisfying large number clauses, systematically searching
escape route may computationally expensive local minimum large. show
plateaus exits, called benches, tend much larger minima,
benches exit states local search use escape. show
solutions (i.e., global minima) randomly generated problem instances form clusters,
behave similarly local minima. revisit several enhancements local search algorithms explain performance light results. Finally discuss strategies
creating next generation local search algorithms.

1. Introduction
Local search algorithms heavily studied alternative complete search
NP -Hard problems. typical local search algorithm, gradient descent
greedy search, employs objective function rank states, picks \neighboring"
state maximizing improvement objective function. compelling (if inexact)
analogy dropping marble smooth surface observing roll downhill
local valley. typical greedy objective function acts gravity, pulling current
state downhill. procedure result algorithm becoming trapped local
minimum. Local search algorithms tend find solutions satisfiable decision problems
quickly complete search algorithms. However, algorithms may terminate

c 1997 AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiFrank, Cheeseman, & Stutz

procedure GSAT(,MaxFlips, MaxTries)

# problem instance solved
# current variable assignment
i=1 MaxTries
= N -bit string selected uniformly random
j = 1 MaxFlips
solved problem(A; )

return
else

PossFlips = neighbors minimizing number unsatisfied clauses
= one element Poss ips selected uniformly random

end else
end
end
return FAIL
end

Figure 1: GSAT Algorithm Sketch
either without finding solution one exists guaranteeing problem instance
solution.
GSAT local search procedure Boolean Satisfiability problems (Selman,
Levesque, & Mitchell, 1992) proven effective quickly finding solutions
satisfiable problem instances. sketch GSAT appears Figure 1. figure,
refers problem instance GSAT solve. GSAT's search space space
complete assignments values variables. GSAT algorithm typically given fixed
number tries (denoted figure MaxTries) fixed number moves per try
(denoted MaxFlips) solve problem instance. move, GSAT examines
states reachable changing value single variable, selects moves minimize
number unsatisfied clauses. GSAT typically encounters sequence states
best move available state leaves number unsatisfied clauses unchanged.
moves referred plateau moves sideways moves, studied (Gent & Walsh,
1993a) (Hampson & Kibler, 1995). Plateau moves dominate time GSAT spends search (Gent & Walsh, 1993a). believed combinatorial search problems
discrete objective functions plateaus cause plateau moves local search,
unlikely search problems real-valued objective functions plateaus.
GSAT encounters plateau, randomly searches either runs ips finds
neighboring state fewer unsatisfied clauses, thereby exiting plateau. Returning
marble analogy, gravity plateaus, hence marble simply rolls
random finds exit runs momentum. Numerous variants GSAT
developed avoid random plateau search improve GSAT performance (Gent &
Walsh, 1993b; Selman & Kautz, 1993; Gent & Walsh, 1995).
nature plateau behavior local search algorithms well understood.
researchers suggest algorithms GSAT become trapped local minima, i.e., parts
250

fiWhen Gravity Fails: Local Search Topology

search space escape better part search space.
true, local minima detection avoidance important problem local search
algorithm development. researchers suggested local search could become
trapped \ at" regions search space exits better states, call
benches. may happen benches large, contain exits
random plateau search small probability finding exit. Rather designing
algorithms testing problem classes, undertook empirical examination
nature plateaus variety 3-SAT problems.
paper presents several surprising discoveries concerning topological structures
leading plateau behavior impact local search. define plateaus feature
search space break plateaus two classes: local minima benches. Plateaus
defined maximally connected region local search space
objective function constant. Local minima plateaus surrounded regions
search space objective function takes values exceeding plateau,
result purely greedy local search cannot escape finding state
local minimum. Benches defined plateaus exits regions search space
lower values objective function. results show local minima
common benches number unsatisfied clauses close 1, local minima
occur frequently higher numbers unsatisfied clauses. local minima tend
small, size exhibits high variability; often largest local minima exceeds 10,000
states problem instance containing 100 variables. surprising behavior
solutions: solutions grouped together global minima highly variable size.
results show benches tended much larger local minima.
benches large number exits, small fraction exits,
result local search spend large amount time trying escape them. Plateau
characteristics dependent many features problem instance; found differences
plateau characteristics based ratio clauses variables, solvability problem
instances, problem classes. results plateau characteristics allowed us reinterpret success many modifications local search, including history lists (Gent &
Walsh, 1993b), random walk (Kautz & Selman, 1996) tabu search (Glover, 1989).
paper organized follows: Section 2 present definitions used throughout rest paper. Next Sections 3 4 present empirical analysis
properties plateaus several problem spaces. Section 5 present analysis
previous results light findings. suggest apply work
creation new local search algorithms Section 6, finally Section 7 conclude
discuss ideas future work.

2. Definitions
section define terms used throughout paper. restrict discussion Boolean Satisfiability problems conjunctive normal form three distinct
literals per clause, abbreviated 3-SAT, many concepts presented translate
discrete combinatorial search problems. first present informal definitions,
provide formal definitions end section.
251

fiFrank, Cheeseman, & Stutz

way visualizing local search space 3-SAT mapping full variable
assignment node N dimensional hypercube, N number variables
problem instance. two assignments differ one variable assignment
adjacent nodes hypercube. problem instance defines function nodes
hypercube, mapping node number unsatisfied clauses instance
assignment values corresponding node. refer number unsatisfied
clauses assignment level assignment. plateau maximal connected
region assignment space states level, level
plateau level states plateau. Even single state plateau,
neighbors different level state itself. define border plateau
set nodes hypercube neighbors state plateau
different level plateau. plateau minimum states border
higher level plateau. plateau minimum,
state border lower level states plateau; states plateau
adjacent lower level states called exits. Plateaus exits called
benches. benches consist entirely exits; local search algorithm may explore
one state bench moving it. call benches contours.
3-SAT, plateau global minimum level 0, unsatisfiable problem instances
global minima levels higher 0.
Plateau
exits

Exits

Minima

Bench

Lowest Level

Global Minima

Higher Level

Local Minima

States Exits

Contour

Figure 2: Taxonomy Plateaus
summary: plateau part space \ at" perspective
objective function. states neighboring plateau different level
plateau. neighboring states higher level, plateau local global
minimum, otherwise bench. every state plateau neighbor state
lower level, bench contour. Figure 2 shows taxonomy different types plateaus.
illustration definitions using simple problem instance presented
Appendix A.
realize different ways defining topological structures local search
spaces. definition plateaus includes structures lead plateau behavior;
local search exhibit plateau behavior passes contour, example.
definitions show observed plateau behavior local search caused variety
structures local search topology. retrospect, clear definition benches
specifically excludes contours would better serve characterize plateau behavior
greedy algorithms. caution reader results benches contingent
upon current definition benches, least one reasonable alternate
252

fiWhen Gravity Fails: Local Search Topology

definition expected give somewhat different results. discussed
Section 7.
end section providing formal definitions ideas. Throughout
following definitions, let H N dimensional hypercube representing possible
assignments 3-SAT problem instance . Two vertices hypercube h1 ; h2
neighbors, i.e., edge them, correspond assignments differing
exactly 1 variable.

Definition 2.1 (Level) Let : H ! Z + function mapping assignments integers
(h) = z assignment corresponding h results z unsatisfied
clauses problem instance . z defined level assignment.
Definition 2.2 (Plateau) Let P connected subgraph H let z 2 Z + constant. P plateau P maximal connected subgraph H (p) = z
p 2 P . Further, z defined level plateau.
Definition 2.3 (Border) Let P plateau hypercube H . Let N (p) set

neighboring vertices vertex p hypercube. Let V (P ) function returns
vertex set graph P . Define B (P ) = ([p2P N (p)) , V (P ), i.e., set B (P ) contains b
b neighbor vertex p 2 P b P itself. B (P ) border
plateau.

Definition 2.4 (Minimum, Local Minimum, Global Minimum) Let P plateau
hypercube H . P minimum vertices B (P ) higher level
level P . Also, P local minimum P minimum another minimum

Q level Q smaller level P . P minimum
local minimum P global minimum.

Definition 2.5 (Bench, Exit, Contour) Let P plateau hypercube H . P
bench P minimum, hence exists b 2 B (P ) level
b smaller level P . Also, p exit bench p 2 P p
neighbor b 2 B (P ) level b smaller level P . Finally, P
contour every state P exit P .

3. Probabilistically Painting Plateaus

Armed definitions previous section examined landscape plateaus
randomly generated 3-SAT problem instances. generated problem instances
ratio number clauses C number variables N ranged
3.8 4.6 according Uniform3-SAT problem generation model (Selman et al., 1992;
Crawford & Auton, 1993); algorithm generating instances presented
Appendix B. Problems region straddle \phase transition" satisfiability,
satisfiability randomly generated problems exhibits rapid transition
respect ratio clauses variables, complete search GSAT require
longest time average find solutions (Cheeseman, Kanefsky, & Taylor, 1991;
Crawford & Auton, 1993; Clark, Frank, Gent, MacIntyre, Tomov, & Walsh, 1996). Problem
253

fiFrank, Cheeseman, & Stutz

instances NC < 4:3 referred \under-constrained" since lie
observed transition satisfiability, problem instances NC > 4:3 called \overconstrained." guaranteed problem instance used set experiments
satisfiable finding solution using complete search algorithm.
Local search seems diculty level assignment becomes
close 0; consequently, decided analyze plateaus levels. quite dicult
randomly sample plateaus fixed level problem instance; probability randomly
generating assignment one unsatisfied clause, instance, small problem
instances 100 variables. used GSAT find plateaus analyzed paper.
biases investigation plateaus found one local search method,
hopefully provides first picture plateau structure local search spaces. Due
clumsiness language, remind reader throughout text findings
dependent plateau sampling methodology. Further, GSAT employs
random starting points, bias results depends gradient following
procedure. sample plateaus first used GSAT find state pre-determined level.
is, generated initial state ran single try GSAT encountered
state specified number unsatisfied clauses. used Breadth-First Search
find states plateau found GSAT. Naturally Breadth-First Search records
state found redundant states double-counted. recorded
size plateau (i.e., number states plateau), number exits
plateau contained.

3.1 Characterizing Plateaus
first analyzed relative proportions benches minima satisfiable problem
instances plateaus whose level close 0. generated problem instances 100
variables 380-460 clauses increments 10 clauses. problem size generated
1000 problem instances guaranteed instance solution using complete search
algorithm. Using procedure described above, problem instance generated
found one plateau level 0 5 measured proportion plateaus
local minima benches. analysis provide idea number
benches local minima problem instances. Note plateaus level 0
global minima satisfiable problem instances.
Figure 3 shows proportion plateaus local minima graphed
number clauses problem instances. described above, used GSAT find
plateaus Breadth-First Search determine whether plateaus local minima
benches. see proportion plateaus minima grows
number clauses problem instance plateaus levels 2-5; hence
local minima identical levels over-constrained problems under-constrained
problems. rate growth diminishes plateau level decreases, roughly
plateaus level 1. 85% plateaus level 1 minima 100 variable
problem instances numbers clauses investigated.
Figures 4 shows data, except case graphed level
plateau. level grows proportion local minima declines problem
instances numbers clauses. However, plateaus level 5 may still local minima
254

fiWhen Gravity Fails: Local Search Topology

1
0.9

Proportion Plateaus Minima

0.8
0.7
0.6
0.5
0.4
0.3
Level 1 Plateaus
Level 2 Plateaus
Level 3 Plateaus
Level 4 Plateaus
Level 5 Plateaus

0.2
0.1
0
380

390

400

410

420
430
Number Clauses

440

450

460

Figure 3: Proportion Plateaus Local Minima vs. Number Clauses Randomly Generated 100 Variable Problem Instances

1

Proportion Plateaus Minima

0.9

460 Clauses
450 Clauses
440 Clauses
430 Clauses
420 Clauses
410 Clauses
400 Clauses
390 Clauses
380 Clauses

0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0

1

2

3

4

5

Plateau Level

Figure 4: Proportion Plateaus Local Minima vs. Plateau Level 100 Randomly
Generated Variable Problem Instances Varying Numbers Clauses

255

fiFrank, Cheeseman, & Stutz

even problems 100 variables 380 clauses. Hence local minima fact life
even under-constrained problems, become likely over-constrained problems.
Finally, note plateaus level 1 2 reordering proportion
local minima. example, problems 450 clauses lowest proportion local
minima level 1, highest proportion local minima level 2.
explanation result.
1
0.9

Proportion Plateaus Minima

0.8
0.7
0.6
0.5
0.4

Level 0 Plateaus
Level 1 Plateaus
Level 2 Plateaus
Level 3 Plateaus
Level 4 Plateaus
Level 5 Plateaus

0.3
0.2
0.1
0
25

50

75

100
Problem Size

125

150

175

Figure 5: Proportion Plateaus Local Minima vs. Plateau Level Variable
Sized Randomly Generated Problem Instances C/N=4.3
analyzed relative proportions benches minima changed problems
grew larger. found one plateau levels 1-5 1000 problem instances
25 175 variables increments 25, NC = 4:3. Figure 5 shows proportion
plateaus levels 1-5 local minima NC = 4:3 graphed problem
size. see that, level, proportion minima grows problem size,
bodes ill performance local search larger problem instances. see
proportion local minima higher level decreases less rapidly larger
problems. conjecture that, larger problems, proportion local minima decreases
significantly plateaus levels higher 5, cannot predict exact behavior
data hand.
cost detecting local minima proportional size local minima,
understanding size distribution local minima important. cost escaping
benches dependent size bench proportion states bench
exits, understanding properties important. next two
sections analyze characteristics benches minima. so, generated
statistics plateaus found experiment used generate Figure 4.
instance, 60% plateaus level 2 problem instances 380 clauses local
256

fiWhen Gravity Fails: Local Search Topology

minima, 600 local minima 400 benches analyze characteristics
plateaus. cases 100 data points available analysis.

3.2 Minima Characteristics
300
100 variables, 430 clauses

250

Number Minima

200

150

100

50

0
0

100

200

300

400

500
600
Size Minima

700

800

900

1000

Figure 6: Histogram Sizes Level 1 Minima Randomly Generated Problem Instances
100 Variables, 430 Clauses. Note minima exceeded 1000 states.
section analyze size distribution local minima. Figure 6 shows
distribution size level 1 minima problem instances 100 variables
430 clauses. median minima size 48, yet tail shows minima larger
1000 states. fact, 35 900 minima larger 1000 states
many 10,000 states. examined distribution minima sizes levels
1 found similar results; main differences lengths tails
histograms. consequence discovery escaping local minima explicit local
minima detection normally easy, occasionally expensive. Figure 7
shows distribution sizes minima smaller 100 states. see
fewer minima size 0-5 size 5-10; detailed analysis reveals
three minima size 1, fifteen minima size 2.
Due long tails distribution minima size, median provides
stable summary statistic mean. therefore examined median size local
minima levels 0-5 different numbers clauses determine size local
minima varies. Figure 8 shows median size local minima plotted number
clauses problem instances. striking feature results
minima tend quite small. suggests possible devise local search algorithms
detect local minima using exhaustive search propel
fruitful part search space. distribution shown Figure 6 indicates
257

fiFrank, Cheeseman, & Stutz

100
100 variables, 430 clauses
90
80

Number Minima

70
60
50
40
30
20
10
0
0

5

10

15

20

25

30

35

40

45 50 55 60
Size Minima

65

70

75

80

85

90

95 100

Figure 7: Histogram Sizes Level 1 Minima Smaller 100 States Randomly
Generated Problem Instances 100 Variables, 430 Clauses

150
Level 0 Minima
Level 1 Minima
Level 2 Minima
Level 3 Minima
Level 4 Minima
Level 5 Minima

125

Median Minima Size

100

75

50

25

0
380

390

400

410

420
430
Number Clauses

440

450

460

Figure 8: Median Size Minima vs. Problem Size 100 Variable Randomly Generated
Problem Instances Varying Numbers Clauses

258

fiWhen Gravity Fails: Local Search Topology

local minima large, explicit detection minima fixed size (the
median, instance) may successful addition local search. second feature
note median size level 0 minima (i.e., solutions) follows pattern
local minima, level 0 minima tend smaller local minima. last
feature note median size local minima decreases minima level 0-3
number clauses problem instances increases. median size local minima
level 4 5 increases problems 450-460 clauses. One possible explanation
sampled problem instances guaranteed solutions, means
added clauses must contribute larger minima benches higher levels.
true clear minima levels 0-3 increase size. Another
possible explanation small amount data plateaus levels 4 5 relative
amount available plateau sizes indicated Figure 4.
120
Level 1 Minima
Level 2 Minima
Level 3 Minima
Level 4 Minima
Level 5 Minima

100

Median Minima Size

80

60

40

20

0
25

50

75

100
Problem Size

125

150

175

Figure 9: Median Size Minima vs. Plateau Level Variable Sized Randomly Generated
Problem Instances C/N=4.3
examined median size local minima levels 1-5 number variables
problem instances increases. Figure 9 shows median minima size various
levels minima graphed problem size problem sizes 25 175 variables
C
N = 4:3. observe that, problem sizes grow large (beyond 100 variables), median
size minima lower levels appears smaller minima higher levels.
observe fixed minima level, appears problem instance size
maximizes median minima size. explanation large number
minima level 1 problem instances 50 variables.
Recall global minima satisfiable problem instance plateau
states solutions. many global minima satisfiable problem instances?
one, solutions broken multiple global minima?
259

fiFrank, Cheeseman, & Stutz

single global minima, size global minima tell us anything
likely local search encounter particular solution? answer questions
used GSAT find 1000 global minima single problem instance 100 variables
430 clauses, determined minima distinct. found 436
1000 minima unique, global minima instance ranged size
1 2880 states. Furthermore, found vast majority minima small,
median size around 48. repeated experiment 20 problem
instances found solutions problem instances typically divided
separate global minima global minima vary widely size. Due space
considerations present data paper.
Assuming could detect local minima, dicult local search escape
minima order explore new part search space? local search local
minimum must temporarily move states higher level order find promising
part search space. Two sources computational complexity contribute cost
escaping minima: cost detecting minimum, cost finding path
better part search space. size minimum measure detection
cost; chose minimum increase level measure diculty escaping local
minima. understand idea, consider sequences neighboring states
minimum level increases, decreases. interested minimum
increase required level decreases again. determine generated 1000
problem instances 50 variables 215 clauses each, generated initial state,
ran GSAT 1000 ips. sucient reach local global minimum. 1 order
find minimum level required escape, used Breadth-First Search. begin
states local minimum. explore state border, queuing
states explored increasing order level. ensures states lower
level explored first. encounter state lower level neighbor,
found path local minimum; level state neighbor lower
level minimum level required escape local minimum. results indicate
local minima usually escaped increasing level 1, is,
unsatisfying one additional clause. However, obvious border state use
escape; Breadth-First Search may expand tens thousands states finding
escape route, may always effective escape strategy.
summary, data presented Figures 6 9 shows local minima tend
small much time, therefore may easily detectable escaped. Local
minima typically escaped unsatisfying single additional clause,
still clear escape local minima effectively. Further, size distribution global
minima behaves much size distribution local minima. Instances tend
many global minima highly variable size, evidence local search
likely encounter small sized local minima global minima large ones.

3.3 Bench Characteristics
1. local minima ranged level 1 6; measure level required escape
benches global minima.

260

fiWhen Gravity Fails: Local Search Topology

80
100 variables, 430 clauses
70

Number Benches

60

50

40

30

20

10

0
0

1000

2000

3000

4000

5000
6000
Size Benches

7000

8000

9000

10000

Figure 10: Histogram Bench Sizes Level 1 Randomly Generated Problem Instances
100 Variables, 430 Clauses

Recall bench plateau exits states lower level. Two
important characteristics benches impact performance local search
size benches number exits. first analyzed distribution size
benches; Figure 10 shows distribution bench sizes level 1 problem instances
100 variables 430 clauses. found long tails, implying benches
small, large. distributions tend much atter
minima.
next analyzed median bench size varies number clauses
problem. appearance long tails distribution bench sizes indicates
median stable measure mean. Figure 11 shows median
size benches varies number clauses problems different levels benches.
interesting feature large median size benches compared
size local minima. Benches typically 10-30 times large local minima,
depending level number clauses problem instance. Problem instances
clauses tend smaller benches, under-constrained
instances median bench size begins growing rapidly bench level even small
range plateau levels analyzed here.
examined bench size depends problem size. small problems, i.e., 2550 variables, benches tended much larger problems variables.
explanation clauses adequately distinguish
assignments examine states low enough levels. Problems 100
261

fiFrank, Cheeseman, & Stutz

7000
Level 1 Benches
Level 2 Benches
Level 3 Benches
Level 4 Benches
Level 5 Benches

6000

Median Bench Size

5000

4000

3000

2000

1000

0
380

390

400

410

420
430
Number Clauses

440

450

460

Figure 11: Median Size Benches vs. Problem Size 100 Variable Randomly Generated
Problem Instances
variables benches 10,000 states; exclude benches
analysis. 2
Large benches may dicult escape number exits small, exits
clustered together. benches exits, others many exits.
used ratio exits benches bench size measure diculty
escaping benches. investigate whether exits benches close
together, may impact diculty escaping benches.
Figure 12 shows distribution proportion exits bench size benches level
1 problems 100 variables 430 clauses. distribution proportions
indicates plateaus highly variable numbers exits. note benches
fact contours; Figure 12 contours show benches whose ratio exits bench
size 1. observed six benches ratio exits bench size least
0.95 Figure 12 fact contours. Figure 13 shows distribution proportion
exits benches level 5; proportionally contours (65 78 benches
rightmost column histogram contours), mean ratio exits bench
size increased. difference two plots indicates benches lower
levels tend fewer exits benches higher level, even exclude contours
measurements.
understand escape benches different levels, next present plots
mean proportion number exits bench size graphed problem size
2. Breadth-First Search stores enormous number states, terminated program
bench size exceeded 10,000 states. Since large benches used median statistic,
caused diculties analysis.

262

fiWhen Gravity Fails: Local Search Topology

15
100 Variables, 430 Clauses, Level 1 Benches

Number Occurences

10

5

0
0

0.1

0.2

0.3

0.4
0.5
0.6
Proportion Exits Bench Size

0.7

0.8

0.9

1

Figure 12: Exits Level 1 Benches Randomly Generated Problem Instances 100
Variable, 430 Clauses

80
100 Variables, 430 Clauses, Level 5 Benches

75
70
65
60

Number Occurences

55
50
45
40
35
30
25
20
15
10
5
0
0

0.1

0.2

0.3

0.4
0.5
0.6
Proportion Exits Bench Size

0.7

0.8

0.9

1

Figure 13: Exits Level 5 Benches Randomly Generated Problem Instances 100
Variables, 430 Clauses

263

fiFrank, Cheeseman, & Stutz

Figure 14. taken consideration histograms Figure 12, hope
create accurate picture benches tend look.
see Figure 14 proportion exits benches increases level
benches. problems 430 460 clauses mean number exits benches
level 1 increases sharply, indicating over-constrained solvable problems benches
level 1 less obstacle finding solutions. point inclusion
contours definition benches may artificially ate proportions,
cases considerably.
0.8
Level 1 Benches
Level 2 Benches
Level 3 Benches
Level 4 Benches
Level 5 Benches

Mean Proportion Exits Bench Size

0.7

0.6

0.5

0.4

0.3

0.2
380

390

400

410

420
430
Number Clauses

440

450

460

Figure 14: Mean Proportion Exits Benches vs Problem Size Randomly Generated Problem Instances 100 Variables
analyzed benches determine whether relationship
number exits bench size, found relationship clause
sizes benches levels investigated. lack relationship unfortunate, since
tells us little escape large benches.
summary, data presented figures 10 14 shows benches occasionally
large, often many exits benches. result, occasionally
local search become trapped large bench little chance
escape. found benches higher level exits benches
lower level. showed contours common benches level 5 may occur
level 1. Finally, found obvious relationship bench size number
exits. conclude local minima often problem local search
benches since benches seem easy escape.
264

fiWhen Gravity Fails: Local Search Topology

4. Plateau Characteristics Across Problem Classes

previous section analyzed plateaus satisfiable 3-SAT problem instances
one problem instance class. little reason suspect plateaus behave similarly
across problem instance classes. may differences satisfiable
unsatisfiable instances class. recent years numerous algorithm designers
begun testing algorithms random problem classes pre-specified desirable
properties. Among problem instances guaranteed solutions (Tsuji &
Gelder, 1993), problems structure hidden algorithm.
class \cluster" problems presented Kask Dechter (1995); problems
consist number satisfiability problems independent sets variables
number clauses connecting clusters. repeated experiments problem
distributions determine plateaus instances exhibit different properties
Uniform3-SAT class, might alter effectiveness local search.
repeated experiments unsatisfiable instances Uniform3-SAT distribution. Due
space considerations repeat full analysis performed above, discuss
differences characteristics classes investigated.

4.1 Unsatisfiable Problems
1
Satisfiable Problems
Unsatisfiable Problems

Proportion Plateaus Minima

0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0

1

2

3

4

5
6
Plateau Level

7

8

9

10

Figure 15: Proportion Plateaus Local Minima Randomly Generated Satisfiable Unsatisfiable Problems 100 Variables, 430 Clauses
major drawback local search inability distinguish satisfiable problem instances unsatisfiable problems. analyzed plateau structure unsatisfiable
problem instances Uniform3-SAT instance distribution determine whether
differences would allow local search determine problem instance unsatisfiable. repeated previous empirical studies collected data proportion
265

fiFrank, Cheeseman, & Stutz

size plateaus limited investigation problems 100 variables 430
clauses. first present data proportion plateaus local minima unsatisfiable problem instances 100 variables 430 clauses. generated 1000 unsatisfiable
instances using problem generation technique used previous set experiments guaranteed problem instances unsatisfiable using complete search
algorithm. used GSAT find states level 1-10, generated corresponding
plateaus. contrast data data satisfiable problem instances 100
variables 430 clauses Figure 15.
Figure 15 shows proportion plateaus local minima similar
satisfiable unsatisfiable problems plateau level decreases, except plateaus
levels 0 5 proportion shifted right ome level. possible interpretation
result comes noting frequently adding single randomly generated clause
turn random satisfiable instance unsatisfiable instance. Hence local search
may become trapped higher level local minima unsatisfiable problems
satisfiable problems.
70

60

Satisfiable Problems
Unsatisfiable Problems

Median Minima Size

50

40

30

20

10

0
0

1

2

3

4

5

Plateau Level

Figure 16: Median Size Local Minima Randomly Generated Satisfiable Unsatisfiable Problems 100 Variables, 430 Clauses
Next analyzed median size local minima unsatisfiable problem instances
minima levels 1 5. analyzed data plateaus found generate
Figure 15. Since number minima small minima levels 6-10, could
gather sucient data analysis reasonable amount time. However, Figure
16 shows, local minima unsatisfiable problems tend much smaller local minima satisfiable problems. Figure 17 shows median size benches unsatisfiable
problem instances. found median bench size unsatisfiable instances tended
smaller benches satisfiable problems. conjecture local search may
converge local minima faster unsatisfiable problems minima tend
266

fiWhen Gravity Fails: Local Search Topology

higher level; since minima benches smaller minima higher
levels, local search able descend faster average become stuck earlier.
Unfortunately, differences slight enough seems little hope using
results improve ability local search identify unsatisfiable problem instances.
1000
Satisfiable Problems
Unsatisfiable Problems

Median Bench Size

800

600

400

200

0
1

2

3
Plateau Level

4

5

Figure 17: Median Size Benches Randomly Generated Satisfiable Unsatisfiable
Problems 100 Variables, 430 Clauses

4.2 Instances Guaranteed Solutions

next present data problems guaranteed solutions described (Tsuji &
Gelder, 1993). generator HardSolvable3-SAT generator presented Appendix
B. Brie y, generator selects assignment guaranteed solution,
generation rejects clauses satisfied assignment set additional clauses enforce even distribution signs variable. before,
generated 1000 problem instances, 100 variables 380-460 clauses.
problem instance used GSAT find state 1-5 unsatisfied clauses, determined
whether corresponding plateau bench local minimum. Figure 18 shows
proportion plateaus minima graphed number clauses problem
instances 100 variables. proportion local minima problems similar
identical proportions local minima Uniform3-SAT class shown
Figure 3. One difference local minima appear prevalent over-constrained
problems HardSolvable3-SAT class Uniform3-SAT class. second
difference data plateaus level 1. proportion minima rises slightly
380 clauses 430 clauses, dips sharply; hence benches level 1
Figure 18 Figure 3. detailed analysis reasons differences beyond
scope paper, generation process seems eliminate clause combinations
267

fiFrank, Cheeseman, & Stutz

1
0.9

Proportion Plateaus Minima

0.8
0.7
0.6
0.5
0.4
0.3
Level 1 Plateaus
Level 2 Plateaus
Level 3 Plateaus
Level 4 Plateaus
Level 5 Plateaus

0.2
0.1
0
380

390

400

410

420
430
Number Clauses

440

450

460

Figure 18: Proportion Plateaus Local Minima vs. Number Clauses 100
Variable Problem Instances Guaranteed Solutions
make level 1 local minima expense making minima higher levels.
higher percentages local minima over-constrained problem instances indicate
local search may harder time solving problems.
analyzed median size local minima different levels HardSolvable3SAT class found results similar reported Uniform3-SAT class Figure
8. median minima size levels HardSolvable3-SAT class larger
Uniform3-SAT class under-constrained instances somewhat smaller
over-constrained instances. found bench size distribution
HardSolvable3-SAT class matched Uniform3-SAT class. median bench size
somewhat smaller HardSolvable3-SAT instances Uniform3-SAT instances
number clauses problem instances grows. found problems
guaranteed solutions higher proportion exits bench size
randomly generated problems. surprising problem class
similar previously investigated class since problem generation algorithms
similar.

4.3 Cluster Problem Instances
next present analysis plateaus cluster problem instances; generation
procedure Cluster3-SAT presented Appendix B. instances created generating 10 clusters 10 variables 34-40 clauses variables shared
clusters. clusters linked 20 connecting clauses linking
clause contains variables distinct clusters. total number clauses instances ranges 360 420. earlier experiments, guaranteed instance
268

fiWhen Gravity Fails: Local Search Topology

1
0.9

Proportion Plateaus Minima

0.8
0.7
0.6
0.5
0.4
0.3
0.2

Level 1 Plateaus
Level 2 Plateaus
Level 3 Plateaus
Level 4 Plateaus
Level 5 Plateaus

0.1
0
360

370

380

390
Number Clauses

400

410

420

Figure 19: Proportion Plateaus Local Minima vs. Number Clauses 100
Variable Cluster Problem Instances
solution using complete search. number clauses clusters, generated 1000 instances used GSAT find plateaus different levels. found
instances took considerably longer solve previous classes, similar
results reported Kask Dechter (1995) (CPU times shown paper).
Figure 19 shows proportion plateaus local minima graphed
total number clauses cluster problem instances 100 variables. proportion
plateaus local minima less dependent number clauses comparison
Figures 3 18. result tend proportionally fewer local minima overconstrained cluster problem instances comparison Uniform3-SAT instances. Figure 20
shows median local minima size plotted number clauses problem
instances. local minima problem instances larger minima
Uniform3-SAT instances analyzed factor 5-10, seen Figure 8.
unable collect data level 0 minima due excessive CPU requirements.
Figure 21 shows median bench sizes plotted number clauses
problem instances. compared median bench size Uniform3-SAT instances
Figure 11, see median size benches cluster problems dramatically
different. Cluster problem instances fewer clauses per cluster resulted enormous
benches, cases larger benches Uniform3-SAT instances factor 10.
increase size benches cluster problem instances randomly generated
instances accompanied decrease proportion exits bench size. Figure 22
shows mean proportion exits bench size versus total number clauses cluster
problem instances. comparison measure Uniform3-SAT instances, shown
Figure 14, see benches cluster problems fewer exits benches
Uniform3-SAT instances bench sizes 1 5. increase bench size coupled
269

fiFrank, Cheeseman, & Stutz

1500
Level 1 Minima
Level 2 Minima
Level 3 Minima
Level 4 Minima
Level 5 Minima

1250

Median Minima Size

1000

750

500

250

0
360

370

380

390
Number Clauses

400

410

420

Figure 20: Median Size Local Minima vs. Total Number Clauses 100 Variable
Cluster Problem Instances

10000
Level 1 Benches
Level 2 Benches
Level 3 Benches
Level 4 Benches
Level 5 Benches

9000
8000

Median Bench Size

7000
6000
5000
4000
3000
2000
1000
0
360

370

380

390
Number Clauses

400

410

420

Figure 21: Size Benches vs. Total Number Clauses 100 Variable Cluster Problem
Instances

270

fiWhen Gravity Fails: Local Search Topology

decrease exits means local search likely much harder time
escaping benches cluster problems problem classes. counters
good news fewer minima problems.
0.8
Level 1 Benches
Level 2 Benches
Level 3 Benches
Level 4 Benches
Level 5 Benches

Mean Proportion Exits Bench Size

0.7

0.6

0.5

0.4

0.3

0.2
360

370

380

390
Number Clauses

400

410

420

Figure 22: Mean Proportion Exits Bench Size vs. Size Benches 100 Variable
Cluster Problem Instances

4.4 Summary

summary, see behavior plateaus unsatisfiable Uniform3-SAT problem
instances differs behavior satisfiable instances class. Unsatisfiable instances proportionally local minima, smaller minima smaller benches
satisfiable instances. Problems HardSolvable3-SAT class minima
Uniform3-SAT class, benches HardSolvable3-SAT class instances exits benches Uniform3-SAT instances. result expect
problems HardSolvable3-SAT class harder local search local search
algorithms frequently trapped local minima. Cluster problem instances
fewer local minima Uniform3-SAT instances, tend larger benches
fewer exits. expect problems harder local search
trouble escaping benches.

5. Previous Work

Numerous researchers studied local search techniques NP -Hard problems, addressing plateau behavior local minima escape them. However, research
largely centered analyzing performance algorithms less structure
problem. Hence, improvements algorithms credited mechanism without
271

fiFrank, Cheeseman, & Stutz

clear understanding properties problem make mechanism work.
section review previous analysis algorithms properties local
search spaces light new discoveries. discussion focuses GSAT
similar local search algorithms 3-SAT problem, discuss potential impact
work local search algorithms next section.

5.1 Analyzing Properties Problem Spaces

Clark et al. (1996) studied number solutions affected local search algorithm performance 3-SAT problems Constraint Satisfaction Problems. showed
number solutions number constraints play role determining
well GSAT works. work complements study adding understanding
local search affected problem instance structure. add results
showing solutions tend occur disconnected subgraphs variable size.
Hampson Kibler (1995) studied plateaus affect local search's ability solve
3-SAT problem instances showed local search algorithm could modified
performing complete search plateau encountered. analyzed ratio
number exits benches versus size benches randomly generated problem
instances NC =4.25. found benches higher levels easier escape
average, consistent findings. However, failed mention high
variance proportion exits benches, failed report existence local
minima. report local search, augmented complete search plateaus,
generally performed worse original local search. believe large plateaus,
rare, contributed large CPU times reported paper.
Gent Walsh (1993a) investigated GSAT solved problem instances aggregating statistics GSAT performance. collected information number satisfied
clauses function GSAT's ip number, number best ips function ip
number, statistics averaged many runs problem instances. study
indicates GSAT satisfies average 99% clauses 2N ips instances
NC = 4:3. works 425 clauses instances 100 variables. evidence local minima hard-to-escape benches level 5 (i.e., 425 satisfied
clauses) consistent results. Gent Walsh report number
ips GSAT spends benches escaping highly variable second half
search, number satisfied clauses high (Gent & Walsh, 1993a).
consistent finding benches either easy hard escape.

5.2 Revisiting Local Search Algorithms

GSAT encounters plateau randomly searches plateau. plateau
bench, GSAT escape; however may take long time bench
exits relative size, exits highly clustered one region bench.
GSAT encounters local minimum never escape; even made move
minimum state higher level, GSAT simply move back minimum,
every state minimum looks better every state leading away it.
point GSAT escape local minimum size 1 forced make
move. However, either GSAT return immediately minimum another
272

fiWhen Gravity Fails: Local Search Topology

adjacent neighbor; found minima size 1 since GSAT doesn't
exhibit cycling behavior minor consideration.
HSAT (Gent & Walsh, 1993b) augments GSAT heuristic designed break ties.
HSAT several ips equally good terms number satisfied clauses,
ips variable ipped longest ago. HSAT explore benches effectively
GSAT ensuring variables ipped \fairly"; long HSAT remains
bench ip variable keeps HSAT bench variables
ipped. Therefore, HSAT's improved performance may due ability escape
benches faster GSAT. However, HSAT still unable escape local minima.
Tabu search (Glover, 1989; Mazure, Sais, & Gregoire, 1997) augments local search
fixed length list previously made moves. algorithm allowed reverse move
tabu list. Local search augmented tabu lists may escape local minima.
memory structure either explicitly implicitly store states plateau
force local search make moves away part space. However, due
nature tabu list, possible local search one variants ignore
move reduces objective function simply Tabu list.
Tabu search frequently stores moves, states. result, different tabu search
implementations allow moves states fewer unsatisfied clauses ever detected
date, even required move tabu list, thus avoid problem.
result tabu search missing exits benches; whether results poor performance
unknown.
GSAT random walk (Gent & Walsh, 1995) ips randomly selected variable
probability p uses standard criteria select ips probability 1 , p. feature
allow GSAT escape either local minima benches, guarantee
next move simply bring GSAT back minima escaped
happen multiple, equivalently good moves available. Gent Walsh (1993a)
report that, number unsatisfied clauses small, number available
moves leading reduction level GSAT tends 1. However, effectiveness
random walk suggests random ip move GSAT place
proceed solution. Also, p large, two random walk steps follow
succession, improving chances escaping local minima. fact variant
results substantial improvements even used modifications GSAT
tie-breaking heuristics (Gent & Walsh, 1995) complements discovery Section 3
local minima tend shallow; random walk may effectively promote escape
local minima parts search space.
WalkSAT (Kautz & Selman, 1996) examine possible neighbors moving. Instead, WalkSAT randomly selects unsatisfied clause investigates states
reachable ipping variables selected clause. result neighborhood examined changes ip ip, reverse move may next neighborhood
examined. WalkSAT performs much search blind features uncovered.
WalkSAT escape local minima simply choosing neighborhood containing moves
back onto minima, may take series worse moves escape bench many
exits simply neighborhood contain them.
Simulated annealing (Kirkpatrick, Gelatt, & Vecchi, 1983) examines single neighbor current assignment. Moves leading improvements objective function
273

fiFrank, Cheeseman, & Stutz

always accepted, moves worsen objective function accepted probabilistically; probability based much worse move long search
progressed. WalkSAT, simulated annealing conducts much search blind
plateau features. Simulated annealing make backwards move bench minimum
even neighboring state results forward move; help escape minima
large benches, may sub-optimal strategy early search.

6. Next Generation Local Search Algorithms
identified analyzed number features local search topology may
uence success local search. results used improve local search
algorithms? One contribution study identify features local search space
worth investigating beginning construction local search algorithm
solve new problem. rapid exploration properties benches local minima
undertaken determine local search tactics likely work best
search problem class. instance, examination might reveal one problem
local minima prevalent uniformly small, indicating explicit local minima
detection avoidance likely effective tactic. Also, possible use results
Figure 3 determine adaptive schedule resetting probability
random walk optimizing size tabu list, done Mazure et. al. (1997).
possible new classes local search algorithms could learn tactics work best
manner similar MultiTac (Minton, 1996). study provides first step towards
identifying features tracked self-modifying local search algorithms.
local search algorithm starts exhibiting plateau behavior, may small
minima, large minima, bench many exits, bench exits. (We ignore
case small bench, since hard escape cases.) problem
identify case search process stuck in, choose proper tactic
handle it. Standard tactics include continuing search normal, invoking special
detection procedure, randomly ipping one variable random walk, randomly ipping
small number variables Jump-SAT (Gent & Walsh, 1995) randomly generating
new values variables randomly restarting.
Small minima detected easily using algorithm Breadth-First Search,
done Hampson Kibler (1995). local search algorithm detected
escaped local minima, desirable prevent revisiting minima
escaped. Local search could proceed \filling in" local minima found
order prevent revisiting them. approximately tabu search works,
schemes used well. small size local minima indicates
memory requirements scheme small long small numbers minima
encountered. algorithm using mechanism could explore numerous local
minima close together solution space without restarting.
Large benches minima dicult recognize escape. question
becomes one determining utility continuing search versus changing tactics.
studies done provide algorithm designers information required implement
utility computation local search algorithm intelligently choose among
tactics. instance, knowing problem instance cluster problem indicative
274

fiWhen Gravity Fails: Local Search Topology

large benches exits likely inhibit local search local minima.
Hence explicit local minima detection good strategy problem class; jumping
random restart might better strategy.
point many enhancements proposed
place local search algorithms solve 3-SAT problems, enhancements
applied problem classes Graph k-Coloring. expect extensions
successful improving performance local search algorithms solve problems.
One way approach new problems spend time gathering information topology
search space, done paper. second option, mentioned
above, use knowledge local search topology learn best tactics
solving instances. Detailed information appearance local minima, distribution
local minima size, bench size, prevalence exits benches used
construct good local search procedures explicitly take factors account.

7. Conclusions Future Work
presented analysis important properties plateau structures local search
spaces used local search algorithm designers construct better local search
algorithms. defined set topological structures local search spaces shown
affect local search. provided conclusive evidence existence local
minima search spaces, shown become prevalent number
unsatisfied clauses becomes close 0. shown plateau behavior local
search caused local minima benches. results show local minima
benches vary widely size; often small, large local minima
benches may defy detection avoidance local search algorithms. show
characteristics structures change different problem classes. analysis
made possible interpret previous work improving local search terms
search space structure, illuminating importance escaping benches early search
detecting local minima later search.
made suggestions previous section might used create new
versions local search better current crop algorithms. obvious
next step implement algorithms analyze performance, especially
comparison existing algorithms already attempt escape plateaus.
barely begun analyzing topology plateaus. empirical
evidence local minima low level (i.e., near 0) escaped unsatisfying
one additional clause, may true structured problem classes.
evidence benches may many exits always imply easy escape;
highly clustered exits may make benches hard escape. analysis topology
plateaus variety problem instances lead concrete results
uence local search algorithm development.
clear nature plateaus highly dependent problem class
tested. Extending form analysis problem classes might reveal differences
plateau structure motivate substantially different GSAT variants. Furthermore,
plateaus Graph Coloring Problem Traveling Salesperson Problem may manifest
different ways 3-SAT, local search algorithms
275

fiFrank, Cheeseman, & Stutz

problems explore plateaus differently. differences must studied order
determine best apply new understanding local search topology. unclear
study extend problems Traveling Salesperson Problem
search space may much \smoother."
collected large amount data local search spaces,
much success modeling features defined. possible compute
probability individual state search space local minima bench
exits, dicult compute expected size bench minimum without
making horrendous independence assumptions. work modeling may result
better understanding local search topology.
mentioned Section 2, possible alter definition benches specifically
exclude contours type bench. rationale contours provide impediment
greedy local search, little impediment semi-greedy variations. One
possibility change definition plateau include states without neighbors
higher lower level. several predictable effects change. First,
know reported benches pure contour regions. would eliminated
consideration reporting proportions plateaus benches. Second, size
benches would exclude states, expect find smaller benches
exclusive bench definition. Third, measurements mean proportion states
benches exits would change, excluding contours reduces mean.
Fourth, states provide potential means linking bench regions would disjoint
exclusive definition. Thus possible use exclusive definition
cause dramatic reduction average bench size, accompanied increase bench
numbers. might even eliminate large size tails bench size distributions
observed using inclusive definition. would significantly alter conclusions
regarding benches impede local greedy search, recommendations regarding
deal benches. Exploring impact revised definitions
explanation plateau behavior worth investigating.
Finally, analysis topological structures geared towards analyzing local search
algorithms greedy objective functions based number unsatisfied constraints.
Many local search algorithm designers experimenting new objective functions
modified continuously throughout search, clause weighting schemes (Selman &
Kautz, 1993). Work type may lead innovations design objective
functions. Since plateau behavior rooted objective function used, analysis
suitable analyzing methods, may provide insight conduct
similar study self-modifying algorithms type.

Acknowledgements
gratefully acknowledge comments JAIR reviewers editors; acknowledge comments Phil Rogaway Chip Martel, U.C. Davis.
276

fiWhen Gravity Fails: Local Search Topology

Appendix A. Sample Problem

section illustrates terms defined Section 2. Consider following 4
variable, 14 clause 3-SAT problem instance:
(A _ B _ C )^ (A _ B _ C )^ (A _ B _ C )^
(A _ B _ C )^ (A _ B _ C )^ (A _ B _ C )^
(A _ B _ C )^ (A _ B _ D)^ (A _ B _ D)^
(A _ C _ D)^ (A _ B _ D)^ (A _ B _ D)^
(A _ C _ D)^ (A _ C _ D)
duration section abbreviate assignments values variables
following way: 0 False, 1 True, hence string 0s 1s length 4 encodes
assignment variables ABCD order.
problem instance global minimum comprised single solution 1111.
single state 0000 local minimum size 1 level 1, i.e., one unsatisfied clause.
border local minimum consists states 1000,0100,0010,0001; states 0001
1000 level 3 two states level 2.
following states constitute bench level 1: 1001, 1101 1011. 1101 exit
since ipping C results 1111, solution. Similarly, 1011 exit since ipping B
results solution. neighbors 1001 bench 0001 1000;
level three, 1001 exit.
State Comment
Level Unsatisfied Clauses
1111 Solution
0
0000 Local Minimum
1
(A _ B _ C )
0010 Border Minimum 2
(A _ B _ C ); (A _ C _ D)
0100 Border Minimum 2
(A _ B _ C ); (A _ B _ D)
0001 Border Minimum 3
(A _ B _ C ); (A _ B _ D); (A _ C _ D)
1000 Border Minimum 2
(A _ B _ C ); (A _ B _ D)
1001 Bench
1
(A _ B _ C )
1011 Bench
1
(A _ B _ C )
1101 Bench
1
(A _ B _ C )
1111 Border Bench
0
0001 Border Bench
3
(A _ B _ C ); (A _ B _ D); (A _ C _ D)
1000 Border Bench
2
(A _ B _ C ); (A _ B _ D)
0010 Contour
2
(A _ B _ C ); (A _ C _ D)
1010 Contour
2
(A _ B _ D); (A _ B _ C )
0011 Contour
2
(A _ B _ C ); (A _ B _ D)
0000 Border Contour 1
(A _ B _ C )
1110 Border Contour 1
(A _ B _ D)
0111 Border Contour 1
(A _ B _ C )
Figure 23: Topological Structures Sample Problem Instance
states 0010, 1010 0011 form level 2 bench contour. 0010
neighbor local minimum level 1, 1010 adjacent 1110 level 1,
0011 adjacent 0111 level 1.
277

fiFrank, Cheeseman, & Stutz

states 1000 1100 form bench level 3 contour. states
0110, 0001 contours level 3 themselves. Since states unsatisfying
three clauses contours fact local maxima.
features summarized Figure 23.

Appendix B. Random Problem Generation
appendix contains pseudo-code random problem classes studied paper.
First present Uniform3-SAT class. Parameters generator C number
clauses N number variables. class procedure selects three literals
without replacement N assigns negative sign probability 21 .
procedure first presented Crawford Auton (1993) appears Figure 24.
procedure Uniform3-SAT(C ,N )
=;
(i=1 C )

Clause= 3 distinct variables selected uniformly 1..N
Negate variable Clause probability 12
= [ Clause

end
return
end

Figure 24: Random Problem Generation Algorithm Sketch
Next present Cluster3-SAT problem generator. parameters number
clauses C , number variables N per cluster, number clusters , number
linking clauses L. generator builds instances first creating independent subproblems C clauses N variables each, using Uniform3-SAT generation procedure
described above. variables sub-problems relabeled sub-problem
shares variables sub-problem; sub-problems linked generating
L linking clauses. linking clause contains variables three distinct sub-problems.
Kask Dechter generate problems using HardSolvable3-SAT procedure defined
described Kask Dechter (1995). procedure appears Figure 25.
Finally present HardSolvable3-SAT generator. parameters number
clauses C number variables N . Instances generated first selecting
assignment guaranteed solution. Clauses generated Uniform3-SAT,
however clause either zero two satisfied literals selected assignment
rejected. instance, clause (A _ B _ C ) would rejected assignment 110
since two satisfied literals assignment. preserves uniform balance
signs variable limit, resulting little information solution
present sign balances problem instance. method discussed Tsuji
Van Gelder (1993) algorithm given Figure 26.
278

fiWhen Gravity Fails: Local Search Topology

procedure Cluster3-SAT(C ,N ,M ,L)

# First generate sub-problems distinct variables
i=1
,i =Uniform3-SAT(,,C ,N )
Re-label literals ,i sub-problem shares variables
= [M
i=1 ,i
end

# Next generate linking clauses
= 1 L
Randomly select 3 distinct sub-problems ,a ; ,b ; ,c ,i
Clause= one variable randomly selected ,a ; ,b ; ,c
Negate variable Clause probability 21
= [ Clause

end
return
end

Figure 25: Cluster Problem Generation Algorithm Sketch

procedure HardSolvable3-SAT(C ,N )
=;

= randomly generated assignment variables
(i < C )

Clause= 3 distinct variables selected uniformly 1..N
Negate variable Clause probability 21
# Check make sure Clause allowed formula
(1 3 literals Clause true )
= [ Clause
i++

end
end
return
end

Figure 26: \Hard" Guaranteed Satisfiable Problem Generation Algorithm Sketch

279

fiFrank, Cheeseman, & Stutz

final note random problem instance generation order. None procedures
guarantees resulting problem instance contain variables. large
number variables small number clauses used parameters, resulting
problem may contain variables. However, ranges clauses variables used
work problem instances full range variables.

References
Cheeseman, P., Kanefsky, B., & Taylor, W. (1991). really hard problems are.
12th International Joint Conference Artificial Intelligence, 163{169.
Clark, D., Frank, J., Gent, I., MacIntyre, E., Tomov, N., & Walsh, T. (1996). Local
search number solutions. Proceedings 2d International Conference
Principles Practices Constraint Programming, 119{133.
Crawford, J., & Auton, L. (1993). Experimental results crossover point satisfiability problems. Proceedings 11th National Conference Artificial Intelligence,
21{27.
Gent, I., & Walsh, T. (1993a). empirical analysis search GSAT. Journal Artificial
Intelligence Research, 1, 47{59.
Gent, I., & Walsh, T. (1993b). Towards understanding hill-climbing procedures
SAT. Proceedings 11th National Conference Artificial Intelligence, 28{33.
Gent, I., & Walsh, T. (1995). Unsatisfied variables local search. Hallam, J. (Ed.),
Hybrid Problems, Hybrid Solutions, pp. 73{85. IOS Press.
Glover, F. (1989). Tabu search part I. ORSA Journal Computing, 1 (3), 190{206.
Hampson, D., & Kibler, S. (1995). Large plateaus plateau search boolean satisfiability problems: give searching start again. Johnson, D., & Trick,
M. (Eds.), DIMACS Series Discrete Mathematics Theoretical Computer Science: Cliques, Colors Satisfiability, Vol. 26, pp. 437{456. American Mathematical
Society.
Kask, K., & Dechter, R. (1995). GSAT local consistency. Proceedings 14th
International Conference Artificial Intelligence, 616{622.
Kautz, H., & Selman, B. (1996). Pushing envelope: Planning, propositional logic
stochastic search. Proceedings 13th National Conference Artificial Intelligence, 1194{1201.
Kirkpatrick, S., Gelatt, C., & Vecchi, M. (1983). Optimization simulated annealing.
Science, 220 (4598), 671{680.
Mazure, B., Sais, L., & Gregoire, E. (1997). Tabu search GSAT. Proceedings 14th
National Conference Artificial Intelligence, 281{286.
280

fiWhen Gravity Fails: Local Search Topology

Minton, S. (1996). Automatically configuring constraint satisfaction programs: case
study. Constraints, 1 (2), 7{43.
Selman, B., & Kautz, H. (1993). Domain independent versions GSAT: Solving large
structured satisfiability problems. 13th International Joint Conference Artificial
Intelligence, 290{295.
Selman, B., Levesque, H., & Mitchell, D. (1992). new method solving hard satisfiability
problems. Proceedings 11th National Conference Artificial Intelligence, 440{
446.
Tsuji, Y., & Gelder, A. V. (1993). Incomplete thoughts incomplete satisfiability
procedures. Proceedings 2d DIMACS Challenge.

281


