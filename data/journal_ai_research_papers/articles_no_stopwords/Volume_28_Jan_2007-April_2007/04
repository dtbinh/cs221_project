Journal Artificial Intelligence Research 28 (2007) 157181

Submitted 08/06; published 02/07

Junta Distributions Average-Case Complexity
Manipulating Elections
Ariel D. Procaccia
Jeffrey S. Rosenschein

arielpro@cs.huji.ac.il
jeff@cs.huji.ac.il

School Engineering Computer Science,
Hebrew University Jerusalem,
Jerusalem 91904, Israel

Abstract
Encouraging voters truthfully reveal preferences election long
important issue. Recently, computational complexity suggested means
precluding strategic behavior. Previous studies shown voting protocols
hard manipulate, used N P-hardness complexity measure. worst-case
analysis may insufficient guarantee resistance manipulation.
Indeed, demonstrate N P-hard manipulations may tractable averagecase. purpose, augment existing theory average-case complexity
new concepts. particular, consider elections distributed respect junta
distributions, concentrate hard instances. use techniques prove
scoring protocols susceptible manipulation coalitions, number candidates constant.

1. Introduction
Multiagent environments often inhabited heterogeneous, selfish agents, continually
interacting sharing common goals. settings, agents may diverse
even conflicting preferences. Therefore, reaching consensus among agents long
important issue.
general, well-studied well-understood scheme preference aggregation voting:
agents reveal preferences ranking set candidates, winner determined
according voting protocol. candidates election beliefs, plans (Ephrati
& Rosenschein, 1997), schedules (Haynes, Sen, Arora, & Nadella, 1997), indeed many
less obvious entities, movies (Ghosh, Mundhe, Hernandez, & Sen, 1999).
Applications voting, place methods, motivated theoretical guarantees
provided various voting protocols. instance, Ghosh et al. (1999) present movie
recommender system relies voting, makes use voting properties generate
convincing explanations different recommendations.
is, however, obstacle always plagued voting theory, social choice
theory general: strategic behavior part voters. setting, self-interested
agent may reveal preferences untruthfully, believes would make final outcome
elections favorable it. Manipulation generally regarded problem, since
makes actual ballot complex game, voters react counter-react
strategies others. require larger investment (computational)
resources voters, may result socially undesirable alternative chosen.
c
2007
AI Access Foundation. rights reserved.

fiProcaccia & Rosenschein

celebrated Gibbard-Satterthwaite Theorem (Gibbard, 1973; Satterthwaite, 1975)
establishes deterministic voting protocol non-dictatorial,1
elections agent better voting untruthfully. Consequently, possible
design nonmanipulable voting system guarantee voters act honestly.
Fortunately, reasonable make assumption agents computationally bounded. Therefore, although principle agent may able manipulate
election, computation required may infeasible. motivated researchers
study computational complexity manipulating voting protocols. Indeed,
demonstrated several voting protocols N P-hard manipulate single
voter (Bartholdi, Tovey, & Trick, 1989a; Bartholdi & Orlin, 1991). Hereinafter mainly
focus attention setting multiple manipulators collude order achieve
certain outcome. setting, manipulation even harder: known
coalitional manipulation problem N P-hard numerous voting protocols, even
number candidates constant.
results suggest computational complexity may cure malady
called Manipulation. Computer Science, though, notion hardness usually
considered sense worst-case complexity. Indeed, results complexity
manipulation use N P-hardness complexity measure. Therefore, could still
case instances problem easy manipulate. put differently,
strategic voter may usually succeed finding beneficial manipulation, efficiently,
even problem hard worst-case. so, truly significant issue
average-case complexity manipulations.
Sadly, far attempts design voting protocol resistant manipulations
average-case failed. suggests manipulation problem inherently
easy average-case pushes us analytically support claim: must
characterize settings protocols easily manipulated average-case.
relatively little-known theory average case complexity exists (Trevisan, 2002);
theory introduces concept distributional problems, defines reduction
distributional problems is. known average-case complete
problems. However, goal existing theory define problem hard
average-case; provide criteria deciding problem easy.
paper, engage novel average-case analysis, based criteria propose.
Coming interesting distribution problem instances respect
average-case complexity computed difficult task, solution may controversial. analyze problems whose instances distributed respect junta
distribution. distribution must satisfy several conditions, (arguably) guarantee focuses instances harder manipulate. consider protocol
susceptible manipulation polynomial time algorithm usually
manipulate it: probability failure (when instances distributed according
junta distribution) must inverse-polynomial. algorithm known heuristic
polynomial time algorithm.
use new methods analytically establish following result: important
family voting protocols, called scoring protocols, susceptible coalitional manipulation
1. dictatorial protocol, agent dictates outcome regardless others choices.

158

fiJunta Distributions

number candidates constant. Specifically, contemplate sensitive scoring
protocols, include well-known protocols Borda Veto. accomplish
task, define natural distribution instances well-defined coalitional
manipulation problem, show junta distribution. Furthermore, present
manipulation algorithm Greedy, prove usually succeeds respect
. significance result stems fact sensitive scoring protocols
N P-hard manipulate, even number candidates constant. support
claim junta distributions provide good benchmark proving Greedy
usually succeeds respect uniform distribution.
show protocols susceptible certain setting manipulation,
manipulator unsure others votes. result depends upon basic
conjecture regarding junta distributions.
paper proceeds follows: Section 2, outline important voting protocols,
define manipulation problems shall discuss. Section 3, formally introduce
tools average case analysis: junta distributions, heuristic polynomial time,
susceptibility manipulations. Section 4 prove main result: sensitive scoring
protocols susceptible coalitional manipulation candidates. Section 5,
discuss case single manipulator unsure voters votes.
Section 6 survey related work. Finally, Section 7, present conclusions
directions future research.

2. Preliminaries
first describe common voting protocols formally define manipulation
problems shall deal. Next, introduce two useful lemmas probability
theory.
2.1 Elections Manipulations
election consists set C = {c1 , c2 , . . .} candidates set V = {v1 , v2 , . . . , }
voters, provide total order candidates. election includes winner
determination function set possible combinations votes C. note
throughout paper number candidates constant, complexity results
terms number voters.
Different voting protocols distinguished winner determination functions.
protocols shall discuss are:
Scoring protocols: scoring protocol defined vector
~ = h1 , 2 , . . . , |C| i,
1 2 . . . |C| N {0}. candidate receives points
voter ranks ith place. Examples scoring protocols are:
Plurality:
~ = h1, 0, . . . , 0, 0i.
Veto:
~ = h1, 1, . . . , 1, 0i.
Borda:
~ = h|C| 1, |C| 2, . . . , 1, 0i.
159

fiProcaccia & Rosenschein

Copeland: possible pair candidates, simulate election; candidate wins
pairwise election voters prefer opponent. candidate gets
1 point pairwise election wins, 1 pairwise election loses.
Maximin: candidates score pairwise election number voters
prefer opponent. winner candidate whose minimum score
pairwise elections highest.
Single Transferable Vote (STV): election proceeds rounds. round,
candidates score number voters rank highest among remaining
candidates; candidate lowest score eliminated.
Remark 1. assume tie-breaking always adversarial manipulator.2
case weighted votes, voter weight k N naturally regarded k voters
vote unanimously. paper, consider weights [0, 1]. equivalent, since
set integer weights exponential n scaled rational weights
segment [0, 1], represented using O(n) bits.
main results paper focus scoring protocols. shall require following
definition:



Definition 1. Let P scoring protocol parameters
~ = 1 , 2 , . . . , |C| . say
P sensitive iff 1 2 . . . |C|1 > |C| = 0 (notice strict inequality
right).
particular, Borda Veto sensitive scoring protocols.
Remark 2. Generally, scoring protocol |C|1 > |C| , equivalent sensitive
scoring protocol obtained subtracting |C| coordinate-by-coordinate basis
vector
~ . Moreover, observe protocol scoring protocol
sensitive, |C| = 0, |C|1 = 0. case, three candidates equivalent
plurality protocol, interesting formulations manipulation problem
tractable even worst-case. Therefore, sufficient restrict results
sensitive scoring protocols.
next consider types manipulations, state appropriate complexity results,
introduce notations.
Remark 3. discuss constructive cases, goal trying make candidate
win, opposed destructive manipulation, goal make candidate lose.
Constructive manipulations always least hard (in worst-case sense)
destructive counterparts, cases strictly harder (if one able determine
whether p made win, one ask whether 1 candidates
made win, thus making p lose).
Definition 2. Individual-Manipulation (IM) problem, given
votes, preferred candidate p. asked whether way manipulator
cast vote p wins.
2. standard assumption, made, example, work Conitzer Sandholm (2002),
Conitzer, Lang, Sandholm (2003).

160

fiJunta Distributions

Bartholdi Orlin (1991) show IM N P-complete Single Transferable Vote,
provided number candidates unbounded. However, problem P
well-known voting schemes, hence studied here.
lions share paper, consider coalitional manipulation setting.
scenario, set V voters partitioned two subsets: set V1 = {v1 , . . . , vn }
manipulative, untruthful, voters; set V2 = {vn+1 , . . . , vn+N } nonmanipulative voters. set candidates C = {c1 , . . . , cm , p}. manipulators goal
make distinguished candidate p win election, coordinating rankings
candidates. CWM SCWM problems, manipulators full knowledge
nonmanipulators votes.
Definition 3. Coalitional-Weighted-Manipulation (CWM) problem,
given set voters V = V1 ] V2 , set candidates C, weights voters,
preferred candidate p C. addition, given votes voters V2 ,
assume manipulators aware votes. asked whether possible
manipulators V1 cast votes way makes preferred candidate p
win election.
know (Conitzer & Sandholm, 2002; Conitzer et al., 2003) CWM N P-complete
Borda, Veto, Single Transferable Vote, even 3 candidates, Maximin
Copeland least 4 candidates.
CWM version shall analyze, specifically tailored scoring protocols, slightly modified version whose analysis straightforward:
Definition 4. Scoring-Coalitional-Weighted-Manipulation (SCWM) problem, given initial score S[c] candidate c, weights manipulators
V1 , preferred candidate p. asked whether possible manipulators
V1 cast votes way makes preferred candidate p win election.
S[c] interpreted cs total score votes V2 . However,
require exist combination votes actually induces S[c] c.
Another setting shall shortly discuss (in Section 5) scenario
manipulators uncertain others votes.
Definition 5. Uncertain-Votes-Weighted-Evaluation (UVWE) problem,
given weight voter, distribution votes, candidate p,
number r [0, 1]. asked whether probability p winning greater r.
Definition 6. Uncertain-Votes-Weighted-Manipulation (UVWM) problem,
given single manipulative voter weight, weights voters,
distribution nonmanipulators votes, candidate p, number r,
r [0, 1]. asked whether manipulator cast vote p wins
probability greater r.
CWM N P-hard protocol, UVWE UVWM N P-hard
protocol (Conitzer & Sandholm, 2002).
make assumption given distributions nonmanipulators votes
sampled polynomial time. words, given distribution nonmanipulators votes, possible obtain specific instance polynomial time.
161

fiProcaccia & Rosenschein

2.2 Probability Theory Tools
following lemma much use later on. Informally, states average
independent identically distributed (i.i.d.) random variables almost always close
expectation.
Lemma 1 (Chernoffs Bounds). (Alon & Spencer, 1992) Let X1 , . . . , Xt i.i.d. random
variables Xi b E[Xi ] = . > 0, holds that:
Pr[ 1t

Pt

2t

2
(ba)2

Pr[ 1t

Pt

2t

2
(ba)2

i=1 Xi + ] e
i=1 Xi ] e

Another tool shall require Central Limit Theorem. purposes,
implies probability sum random variables takes values small
segment small.
Lemma 2 (Central Limit Theorem). (Feller, 1968) Let Xt , . . . , Xt independent continuous random variables common density function, expected value variance
2 . < b:
"
#
Pt
Z b
x2
X
1

i=1

Pr <
< b
e 2 dx.

2

3. Approach
section lay mathematical foundations required average-case analysis
complexity manipulations. definitions general possible;
applied manipulation mechanism, merely manipulation
voting protocols.
describe distribution instances problem collection distributions
= {n }nN , n distribution instances x |x| = n. wish
analyze problems whose instances distributed respect distribution focuses
hard-to-manipulate instances. Ideally, would ensure one manages
produce algorithm usually manipulate instances according distinguished
difficult distribution, algorithm would usually succeed instances
distributed respect reasonable distributions.
Definition 7. Let = {n }nN distribution possible instances N Phard manipulation problem . junta distribution following
properties:
1. Hardness: restriction manipulation problem whose possible
instances only:
[
{x : |x| = n n (x) > 0}.
nN

Deciding restricted problem still N P-hard.
162

fiJunta Distributions

2. Balance: exist constant c > 1 N N n N :
1
1
Prxn [M (x) = yes] 1 .
c
c
3. Dichotomy: n instances x |x| = n:
n (x) 2polyn n (x) = 0.
voting manipulation problem, require following property:
4. Symmetry: Let v nonmanipulative voter, let c1 , c2 6= p two candidates,
let {1, . . . , m}. probability v ranks c1 ith place
probability v ranks c2 ith place.
coalitional manipulation problem, require following property:
5. Refinement: Let x instance |x| = n n (x) > 0; manipulators
voted identically, p would elected.
name junta distribution comes idea distribution, relatively powerful difficult instances represent problem instances.
Alternatively, intent problematic distributions (the family junta distributions) convincingly represent distributions respect average-case
analysis.
first three properties basic, relevant problems manipulating
mechanism. definition modular, additional properties may added top
basic three, case one wishes analyze mechanism voting protocol.
exact choice properties extreme importance (and, mentioned above,
may arguable). shall briefly explain choices. Hardness meant ensure
junta distribution contains hard instances. Balance guarantees trivial algorithm
always accepts (or always rejects) significant chance failure. dichotomy property helps preventing situations distribution gives (positive but) negligible
probability hard instances, high probability several easy instances.
examine properties specific manipulation problems. necessity symmetry best explained example. Consider CWM STV 3.
One could design distribution p wins distinguished candidate loses
first round. distribution could tailored satisfy conditions,
misses many hard instances. context SCWM, interpret symmetry
following way: every two candidates c1 , c2 6= p R,
Pr [S[c1 ] = y] = Pr [S[c2 ] = y].

xn

xn

Refinement less important four properties, seems help concentrating probability hard instances. Observe refinement relevant
coalitional manipulation; believe analysis individual voting manipulation
problems, first four properties sufficient.
163

fiProcaccia & Rosenschein

Definition 8. (Trevisan, 2002) distributional problem pair hL, L decision
problem distribution set {0, 1} possible inputs.
Informally, algorithm heuristic polynomial time algorithm distributional
problem runs polynomial time, fails small fraction inputs.
give formal definition; definition inspired Trevisan (2002) (there
name used somewhat different definition).
Definition 9. Let manipulation problem let hM, distributional problem.
1. algorithm deterministic heuristic polynomial time algorithm distributional manipulation problem hM, always runs polynomial time,
exists polynomial p degree least 1 N N n N :
Pr [A(x) 6= (x)]

xn

1
.
p(n)

(1)

2. Let probabilistic algorithm, uses random string s. probabilistic heuristic polynomial time algorithm distributional manipulation problem
hM, always runs polynomial time, exists polynomial p degree
least 1 N N n N :
Prn [A(x) 6= (x)]

x ,s

1
.
p(n)

(2)

Probabilistic algorithms two potential sources failure: unfortunate choice
input, unfortunate choice random string s. success failure deterministic
algorithms depends choice input.
combine definitions introduced section attempt establish
mechanism susceptible manipulation average case. following definition abuses notation bit: used refer manipulation itself,
corresponding decision problem.
Definition 10. say mechanism susceptible manipulation
exists junta distribution , exists deterministic/probabilistic heuristic
polynomial time algorithm hM, i.

4. Formulation, Proof, Justification Main Result
Recall (Conitzer & Sandholm, 2002; Conitzer et al., 2003) Borda Veto, CWM
N P-hard, even 3 candidates. Since Borda Veto examples sensitive scoring
protocols, would know resistant family protocols really respect
coalitional manipulation. section use methods previous section
prove main result:
Theorem 1. Let P sensitive scoring protocol. = O(1) P , candidates
C = {p, c1 , . . . , cm }, susceptible SCWM.
164

fiJunta Distributions

Intuitively, instances CWM (or SCWM) hard require
specific partitioning voters V1 subsets, subset votes unanimously.
instances rare reasonable distribution; insight ultimately yield
theorem.
following proposition generalizes Theorem 1 Conitzer Sandholm (2002)
Theorem 2 Conitzer, Lang Sandholm (2003), justifies focus family
sensitive scoring protocols. stronger version Proposition 1 independently
proven Hemaspaandra Hemaspaandra (2005). Nevertheless, include proof,
since required proving hardness property junta distribution shall
design.
Proposition 1. Let P sensitive scoring protocol. CWM P N P-hard, even
3 candidates.
Definition 11. Partition problem, given set integers {ki }i[t] , summing
2K, asked whether subset integers sum K.
well-known Partition N P-complete.
Proof Proposition 1. reduce arbitrary instance Partition following
CWM instance. 3 candidates, a, b, p. V2 , K(41 22 ) 1
voters voting b p, K(41 22 ) 1 voters voting b p. V1 ,
every ki vote weight 2(1 + 2 )ki . Observe V2 , b get
(K(41 22 ) 1)(1 + 2 ) points.
Assume first partition exists. Let voters V1 one half partition
vote p b, let half vote p b a. vote, b
(K(41 22 ) 1)(1 + 2 ) + 2K(1 + 2 )2 = (1 + 2 )(4K1 1)
votes, p (1 + 2 )4K1 points; thus manipulation.
Conversely, assume manipulation exists. Clearly must exist manipulation
voters V1 vote either p b p b a, manipulators
gain anything placing p top scoring protocol. manipulation, p
(1 + 2 )4K1 points, b already (K(41 22 ) 1)(1 + 2 ) points
V2 . Therefore, b must gain less (22 K + 1)(1 + 2 ) points voters
V1 . voter corresponding ki contributes 2(1 + 2 )2 ki points; follows
sum ki corresponding voters voting p b less K + 21 2 ,
likewise voters voting p b a. Equivalently, sum K, since
ki integers 2 1. cases sum must K; hence,
partition.
Since instance CWM translated instance SCWM obvious
way, have:
Corollary 1. Let P sensitive scoring protocol. holds SCWM P N P-hard,
even 3 candidates.
165

fiProcaccia & Rosenschein

4.1 Junta Distribution
Let w(v) denote weight voter v, let W denote total weight votes
V1 ; P sensitive scoring protocol. denote |V1 | = n: size V1 size
instance.
Consider distribution = {n }nN instances SCWM P , + 1
candidates p, c1 , . . . , cm , n induced following sampling algorithm:
1. Fix polynomial q = q(n).
2. v : Randomly independently choose w(v) [0, 1] (up O(n) bits precision, i.e., intervals 1/2q(n) ).
3. {1, . . . , m}: Randomly independently choose S[ci ] [(1 2 )W, 1 W ] (up
O(n) bits precision).
Remark 4. Although distribution fact discrete weights, example,
uniformly distributed {0, 1/2q(n) , 2/2q(n) , 3/2q(n) , . . . , 1} treat continuous
sake clarity.
assume S[p] = 0, i.e., voters rank p last. assumption
restriction. holds candidate c S[c] S[p], candidate c surely lose,
since manipulators rank p first. Therefore, S[p] > 0, may simply normalize
scores subtracting S[p] scores candidates. equivalent
assumption.
Remark 5. believe natural distribution respect
coalitional manipulation scoring protocols studied. Even one disagrees
exact definition junta distribution, satisfy many reasonable conditions
one could produce.
shall, course, (presently) prove distribution possesses properties
junta distribution.
Proposition 2. Let P sensitive scoring protocol. junta distribution
SCWM P C = {p, c1 , . . . , cm }, = O(1).
Proof. first observe symmetry obviously satisfied, dichotomy holds Remark 4.
proof hardness property relies reduction Partition Proposition 1. reduction generates instances x CWM P 3 candidates,
W = 4(1 + 2 )K,
S[a] = S[b]
= (K(41 22 ) 1)(1 + 2 )
= (1 2 /2)W (1 + 2 ),
166

fiJunta Distributions

K originates Partition instance. instances satisfy (1 2 )W
S[a], S[b] 1 W . follows (x) > 0 (after scaling weights).3
prove balance property. i, S[ci ] > (1 2 /m)W ,
clearly manipulation, since least 2 W points given voters
V1 undesirable candidates c1 , . . . , cm . happens probability least m1m .
hand, consider situation i,
S[ci ] < (1

m2 1
2 )W ;
m2

(3)

occurs probability least (m12 )m . Intuitively, manipulators could distribute
votes way undesirable candidate ranked last exactly 1/mfraction votes, would successful manipulation: undesirable candidate
would gain additional m1
2 W points. Unfortunately, usually
case, following condition sufficient successful manipulation (assuming condition (3) holds). Partition manipulators disjoint subsets P1 , . . . , Pm (w.l.o.g.
size n/m), denote WPi total weight votes Pi . condition
{1, . . . , m}:
(1 1/m) 1/2 n/m WPi (1 + 1/m) 1/2 n/m.

(4)

condition sufficient, voters Pi rank ci last, fraction
votes V1 gives ci points most:
(m 1)(1 + 1/m)
m2 1
= 2
.
(m 1)(1 + 1/m) + 1 1/m
+m2
Hence number points ci gains manipulators most:
m2 1
m2 1

W

2 W < 1 W S[ci ].
2
m2 + 2
m2
Furthermore, Lemma 1 fact expected total weight n/m votes
2n
1/2 n/m, probability condition (4) holds least 1 2e m3 . Since
constant, probability larger 1/2 large enough n.
Finally, easily seen refinement property: manipulators
rank p first candidate c second, p gets 1 W points, c gets 2 W + S[c] points.
S[c] (1 2 )W , thus p surely loses.
4.2 Heuristic Polynomial Time Algorithm
present algorithm Greedy SCWM, given Algorithm 1. w
~ denotes
vector weights voters V1 = {v1 , . . . , vn }.
3. seems reduction generalized larger number candidates. hard instances
ones undesirable candidates two approximately (1 2 )W initial points,
two problematic candidates approximately (1 /2)W points. instances positive
probability .

167

fiProcaccia & Rosenschein

Algorithm 1 Decides SCWM
1: procedure Greedy(S, w,
~ p)
2:
c C
3:
S0 [c] S[c]
4:
end
5:
= 1 n
6:
Let j1 , j2 , . . . , jm s.t. l, Si1 [cjl1 ] Si1 [cjl ]
7:
Voter vi votes p cj1 cj2 . . . cjm
8:
l = 1
9:
Si [cjl ] Si1 [cjl ] + w(ti )l+1
10:
end
11:
Si [p] Si1 [p] + w(ti )1
12:
end
13:
argmaxcC Sn [c] = {p}
14:
return true
15:
else
16:
return false
17:
end
18: end procedure

. Initialization

. voters V1

. Update score

. p wins

voters V1 , according order, rank p first, rest candidates current score: candidate lowest current score ranked highest.
Greedy accepts p wins election.
algorithm, designed specifically scoring protocols, realization abstract
greedy algorithm: stage, voter vi ranks undesirable candidates order
minimizes highest score undesirable candidate obtains current vote.
tie among several permutations, voter chooses option
second highest score low possible, etc. case, every manipulator always ranks
p first.
Remark 6. abstract scheme might appropriate protocols Maximin
Copeland. Similarly scoring protocols, two protocols manipulators
always better ranking p first. addition, abstract greedy algorithm
applied Maximin Copeland since result election based score
candidate (unlike STV, example).
Remark 7. Greedy considered generalization greedy algorithm given
Bartholdi et al. (1989a).
following lemmas, stage execution algorithm iteration
loop.
Lemma 3. exists stage i0 execution Greedy, two candidates
a, b 6= p,
|Si0 [a] Si0 [b]| 2 ,
(5)
i0 holds |Si [a] Si [b]| 2 .
168

fiJunta Distributions

Proof. proof induction i. base induction given equation (5).
Assume |Si [a] Si [b]| 2 , without loss generality: Si [a] Si [b].
algorithm, voter vi+1 ranks b higher a, therefore:
Si+1 [b] Si+1 [a] 2 .

(6)

Since p always ranked first, weight vote 1, b gains 2
points. Therefore:
Si+1 [b] Si+1 [a] 2 .
(7)
Combining equations (6) (7) completes proof.
Lemma 4. Let p 6= a, b C, suppose exists stage i0 Si0 [a]
Si0 [b], stage i1 i0 Si1 [b] Si1 [a]. i1 holds
|Si [a] Si [b]| 2 .
Proof. Assume exists stage i0 Si0 [a] Si0 [b], stage i1 i0
Si1 [b] Si1 [a]; w.l.o.g. i1 > i0 (otherwise stage i0 holds Si0 [b] = Si0 [a],
finish Lemma 3). must stage i2 i0 i2 < i1
Si2 [a] Si2 [b] Si2 +1 [b] Si2 +1 [a]. Since weight vote 1, b gains
2 points voter vi2 +1 . Hence conditions Lemma 3 hold stage i2 ,
implies i2 : |Si [a] Si [b]| 2 . particular, i1 i2 .
Lemma 5. Let P sensitive scoring protocol, assume Greedy errs instance
SCWM P successful manipulation. {2, 3, . . . , m},
subset candidates = {cj1 , . . . , cjd }, that:

X
i=1

(1 W S[cji ])

d1
X

(i 2 ) W

i=1


X
i=1

m+2i


X

(1 W S[cji ]).

(8)

i=1

Proof. right inequality, candidates, even ifP
voters V1 rank last
every vote, total points distributed among W di=1 m+2i . inequality
hold, must candidate ci gains least 1 W S[ci ] points
manipulators, implying candidate least 1 W points. However, p
1 W points, assumed successful manipulation
contradiction.
left inequality, assume algorithm erred. stage i0 ,
candidate cj0 total least 1 W points (w.l.o.g. one candidate passes
threshold simultaneously). Denote V10 = {v1 , v2 , . . . , vi0 }, let WV10 total weight
voters V10 . Voter vi0 rank cj0 last, since m+1 = 0, thus ranking
candidate last gives points. another candidate cj1 , that:
Si0 1 [cj1 ] Si0 1 [cj0 ]. Lemma 4, Si0 [cj0 ] Si0 [cj1 ] 2 , thus Si0 [cj1 ] 1 W 2 .
candidates always ranked last voters V10 , must another
candidate cj2 ranked strictly higher voter V10 , w.l.o.g. higher cj1 .
Therefore, Lemma 4 that: Si0 [cj1 ] Si0 [cj2 ] 2 , cj2 total
least 1 W 22 points. inductively continuing reasoning, obtain subset
candidates (possibly = m), always ranked last places voters
169

fiProcaccia & Rosenschein

V10 , lth candidate holds that: Si0 [cjl ] 1 W (l 1)2 . total points
gained lth candidate stage i0 must least 1 W (l 1)2 S[cjl ]. Since
P
total points distributed voters V10 last candidates WV10 di=1 m+2i ,
have:

X

(1 W S[cji ])

i=1

d1
X

(i 2 ) WV10


X

i=1

m+2i W

i=1


X

m+2i .

i=1

Lemma 6. Let SCWM sensitive scoring protocol P C = {p, c1 , . . . , cm },
m=O(1). Greedy deterministic heuristic polynomial time algorithm hM, i.
Proof. obvious given instance successful manipulation,
greedy algorithm would indeed answer manipulation, since algorithm
constructive (it actually selects specific votes manipulators).
wish bound probability manipulation algorithm erred.
Lemma 5, necessary condition occur specified equation (8),
equivalently:
W


X

1 W

i=1


X
i=1




X
X
X
d(d 1)
m+2i
2
S[cji ] W
1 W
m+2i .
2
i=1

i=1

(9)

i=1

case algorithm may err;
Pdwhat probability equation (9) holding? Fix
subset size {2, . . . , m}.
i=1 S[cji ] random variable takes values
[d(1 2 )W, d1 W ]. conditioning values S[cji ], = 1, . . . , 1,
P
probability di=1 S[cji ] taking values interval [a, b] chance
ba
S[cjd ] taking value interval size b a, 1 W (
, since S[cjd ]
1 2 )W
n

uniformly distributed. Lemma 1, W < n/4 probability (n) = e 8 .
hand, W n/4, (9) holds probability
d(d1)
2
2

1 W (1 2 )W

=

d(d 1)
2d(d 1)
1

=
,
2W
n
p (n)

polynomial pD . complete proof showing equation (1) holds:
Pr [Greedy(x) 6= (x)] Pr[W n/4 (D C s.t. |D| 2 (9) holds)]

xn



+ Pr[W < n/4]
X
1
DC:|D|2



pD (n)

+ (n)

1
poly n

last inequality follows assumption = O(1).
Clearly, Theorem 1 directly follows.
170

fiJunta Distributions

4.3 Algorithm 1 Uniform Distribution
previous subsection seen Algorithm 1 heuristic polynomial time
algorithm respect junta distribution . argued suggests
algorithm well respect distributions. subsection
support claim showing Algorithm 1 heuristic polynomial time
algorithm respect uniform distribution instances SCWM.
sake consistency previous results, shall consider uniform distribution
votes may produce unfeasible ballots. Nevertheless, equivalent results
obtained feasible (discrete) distributions votes. so, subsection assume
voter vi V2 , |V2 | = N , awards candidate c C, including p, score
independently uniformly distributed [0, 1 ]. Further, assume votes
unweighted; limit generality results, since use lower bounds
depend total weight manipulators V1 (where |V1 | = n)
individual weights consequence.
distinguish two cases results, depending ratio
number nonmanipulators N number manipulators n:

1. n/ N < 1/p(n) polynomial p degree least 1.

2. n/ N > p(log n) polynomial p degree least 1.
middle ground covered two cases remains open problem.
tackle first case, require lower bound sorts probability
instance SCWM easy decide. Since manipulators V1 award
candidate 1 n points, manipulators cannot make candidate c beat another
candidate c0 S[c0 ] S[c] > 1 n. particular, every two candidates c c0 holds
|S[c] S[c0 ]| > 1 n, manipulators cannot affect outcome election.
Moreover, Algorithm 1 always decides instance correctly: S[p] < S[c]
c, instance instance, case algorithm never errs;
S[p] > S[c] c, instance yes instance, vote manipulators
sufficient make p win. obtained following Lemma:
Lemma 7. Consider instance SCWM c, c0 C, |S[c] S[c0 ]| > 1 n.
instance yes instance iff S[p] > S[c] candidates c 6= p,
instance correctly decided Algorithm 1.
Lemma, together Central Limit Theorem, yields first result.
Proposition 3. Algorithm 1 heuristic polynomial time algorithm
respect

uniform distribution instances SCWM satisfy n/ N < 1/p(n)
polynomial p(n) degree least 1.
Proof. Lemma 7, sufficient bound probability c, c0 C,
|S[c] S[c0 ]| > 1 N .
Pr[c, c0 C, |S[c] S[c0 ]| > 1 N ] = 1 Pr[c, c0 C s.t. 0 S[c] S[c0 ] 1 N ].
171

fiProcaccia & Rosenschein

union bound:
Pr[c, c0 C s.t. 0 S[c] S[c0 ] 1 n]

X

Pr[0 S[c] S[c0 ] 1 n].

c,c0 C

Fix c, c0 C, let Xi si [c] si [c0 ], si score given candidate
voter vi V2 , = n + 1, . . . , n + N . Xi i.i.d. continuous random variables
expectation 0 constant variance 2 = 2 (1 )2 /12 = (1 )2 /6. Therefore, apply
Lemma 2:
"
#
n+N
X


Pr 0 S[c] S[c0 ] 1 n = Pr 0
Xi 1 n
"
= Pr 0

i=n+1
Pn+N

i=n+1 X



Z
1

2 0
Z 1 n
N

1 dx

N

N

n
1
N

e

x2
2

1 n

N

#

dx

0

1 n
=
N


n
=O
.
N
assumption regarding ratio manipulators nonmanipulators,
inverse-polynomial n. Rolling back, obtain probability algorithm
1
correct least 1 (m + 1)m p(n)
, result follows fact = O(1).
Moving second case, require following lemma:
2
Lemma 8. Let = 2(m+1)
, consider instance SCWM c, c0 C,
0
|S[c] S[c ]| < n. instance yes instance, correctly decided
Algorithm 1.

Proof. Obviously, sufficient prove algorithm constructively finds successful
vote makes p win. Let C 0 C \ {p} set undesirable candidates
maximal score among candidates C \ {p} stage execution
algorithm. algorithm, stage candidate C 0 ranked last
voter V1 , i.e., given 0 points; candidates C 0 receive stage
2 points. Therefore, total number points candidates C 0 receive
manipulators (d 1)2 n, |C 0 | = d. Consequently, [c] score
candidate c algorithm terminates,
X
X
[c]
S[c] + (d 1)2 n.
cC 0

cC 0

172

fiJunta Distributions

Let c0 = argmaxcC 0 S[c], c1 = argmaxcC 0 [c]. Lemma 4, algorithm
terminates holds scores candidates C 0 within 2 one another.
Therefore:
X
X
[c1 ]
S[c] + (d 1)2 n
[c] dS [c0 ] + (d 1)2 n (d 1)(S [c1 ] 2 ).
c1 6=cC 0

cC 0

algebraic manipulations, obtain:




d1

d1

[c1 ] S[c0 ] + n
2 +
2 S[c0 ] + n
2 +
2 .


m+1
m+1
Now, that:


[p]



[c1 ]





2 n +
2
(S[p] + 1 n)
+
m+1
m+1


2


1 n
n
2 n
2
2(m + 1)
m+1
m+1

2
n
2

2(m + 1)
m+1
> 0.


S[c0 ]



second transition follows assumption S[p] S[c0 ]n, third transition
fact 1 2 , last transition holds large enough n.
Proposition 4. Algorithm 1 heuristic polynomial time algorithm
respect

uniform distribution instances SCWM satisfy n/ N > p(log n)
polynomial p degree least 1.
Proof. Let =
least:

2
2(m+1) .

Lemma 8, probability algorithm err

Pr[c, c0 C, |S[c] S[c0 ]| < n] = 1 Pr[c, c0 C s.t. S[c] S[c0 ] > n].
union bound:
Pr[c, c0 C s.t. S[c] S[c0 ] > n]

X

Pr[S[c] S[c0 ] > n].

c,c0 C

before, fix c, c0 C, let Xi si [c] si [c0 ], si score given
candidate voter vi . Xi i.i.d. random variables expectation 0, take
values [1 , 1 ]. Applying Lemma 1 variables, obtain:
2

n+N
( n )
n
1 X
0 n2
2N N 2
0
(21 )
Xi E[Xi ] + ] e
= e N ,
Pr[S[c] S[c ] n] = Pr[
N
N
i=n+1

0 constant. result follows fact constant
assumption regarding relation n N .
173

fiProcaccia & Rosenschein

5. Case Uncertainty Votes
far dealt setting entire coalition manipulators trying
influence outcome election, using complete knowledge nonmanipulators
votes. section short aside, discuss setting single
manipulator uncertainty others votes. shall prove:
Theorem 2. Let P voting protocol exists junta distribution P
instances UVWM P , following property: r uniformly distributed
[0, 1]. P , candidates C = {p, c1 , . . . , cm }, = O(1), susceptible UVWM.
Recall UVWM, ask whether manipulator cast vote p
wins probability greater r. existence junta distribution r uniformly distributed weak requirement (it even quite natural r uniformly
distributed). fact, following claim likely true:
Conjecture 1. Let P voting protocol UVWM N P-hard. exists
junta distribution P instances UVWM P , r uniformly distributed
[0, 1].
conjecture indeed true, voting protocols susceptible
UVWM. reason conjecture true respect definition junta
distributions, perhaps definition restrictive modified accordingly. remark similar results derived destructive manipulations
analogous proofs.
prove Theorem 2, first present helpful procedure, decides UVWE. w
~
denotes vector given weights, given distribution votes.
number voters |V | = n.
Sample(C = {p, c1 , . . . , cm }, w,
~ , r)
1: count = 0
2: = 1 n3
3:
Sample distribution votes
4:
Calculate result election using sampled votes
5:
p
6:
count = count + 1
7:
end
8: end
9: count/n3 > r
10:
return 1
11: else
12:
return 0
13: end
Sample samples given distribution votes n3 times, calculates winner
election time. p r-fraction elections procedure
accepts, otherwise rejects.
174

fiJunta Distributions

Lemma 9. Let P voting protocol, E UVWE P C = {p, c1 , . . . , cm }.
Furthermore, let distribution instances E, r uniformly distributed
[0, 1]. exists N n N :
Pr [Sample(x) 6= E(x)]

xn

1
.
polyn

3

Proof. Let {Xi }ni=1 random variables, Xi = 1 p ith iteration
loop, Xi = 0 otherwise. Let r0 probability p wins given
instance. Lemma 1 union bound:



3
X

fi1 n

3 1
1
Pr fifi 3
Xi r0 fifi 2e2n n2 = 2e2n .
fin
n
i=1

deduce |r r0 | > n1 , Sample fail exponentially small probability.
assumption r uniformly distributed, probability |r r0 | n1
2/n. Thus, union bound holds that:




1
1
0
0
Pr [Sample(x) 6= E(x)] Pr |r r |
+ Pr |r r | > Sample(x) 6= E(x)
xn
n
n
2/n + 2e2n
1
.

polyn

present algorithm decides UVWM. Here, w
~ denotes weights
voters including manipulator, given distribution nonmanipulators
votes.
Sample-and-manipulate(C = {p, c1 , . . . , cm }, w,
~ , r)
1: ans = 0
2: = 1 (m + 1)!
3:
= next permutation + 1 candidates
4:
= manipulator always votes , others votes distributed respect
5:
Sample(C, w,
~ , r) = 1
6:
ans = 1
7:
end
8: end
9: return ans
Given instance UVWM, Sample-and-Manipulate generates (m+1)! instances
UVWE problem, one manipulators possible votes, executes Sample
instance. Sample-and-Manipulate accepts Sample accepts one
instances.
175

fiProcaccia & Rosenschein

Lemma 10. Let P voting protocol, UVWM P C = {p, c1 , . . . , cm },
= O(1). Furthermore, let distribution instances UVWM, r
uniformly distributed [0, 1]. Sample-and-Manipulate probabilistic heuristic
polynomial time algorithm hM, i.
Proof. independent call Sample, chance failure inverse-polynomial.
applying union bound probability Sample failing
1
(m + 1)! invocations (m + 1)! polyn
, still inverse-polynomial since
constant. lemma follows fact manipulation
permutation candidates, manipulator votes according
permutation, chance p winning greater r.
Notice Sample-and-Manipulate indeed polynomial fact = O(1),
assumed given distribution votes sampled polynomial
time.

6. Related Work
Computational aspects voting long investigated. pivotal issue problem
winner-determination: voting protocols designed satisfy theoretical desiderata may
quite complex. Consequently, deciding election governed protocols may
computationally hard problem (Bartholdi, Tovey, & Trick, 1989b). Another concern
strategic behavior part officials conducting election, may add
remove voters candidates slate. computational complexity strategically
controlling election analyzed Bartholdi, Tovey Trick (1992).
said, main issue respect strategic behavior voting always
manipulation voters. growing body work deals worst-case
complexity manipulating elections. seminal paper Bartholdi, Tovey
Trick (1989a); authors suggested, first time, computational complexity
obstacle strategic voters must overcome. Indeed, although shown
many voting protocols efficiently manipulated, nevertheless proven
voting protocol, namely second-order Copeland, N P-hard manipulate.
Bartholdi Orlin (1991) demonstrated prominent Single Transferable Vote
(STV) protocol N P-hard manipulate.
Even voting protocols easy manipulate, difficulty artificially introduced adding preround (Conitzer & Sandholm, 2003); candidates paired,
pairing two candidates, candidate loses pairwise election
two eliminated. Plurality, Borda Maximin shown hard manipulate
augmented preround. detail, protocols N P-hard manipulate scheduling preround precedes voting, #P-hard voting precedes
scheduling, PSPACE-hard voting scheduling interleaved. Elkind
Lipmaa (2005a) induce hardness manipulation using general approach. Hybrid
voting protocols hard manipulate constructed composing several base
protocols; base protocols may individually easy manipulate.
Another case manipulation may hard, worst-case, election
multiple winners instead single winner, case elections parliament
176

fiJunta Distributions

assembly. Procaccia, Rosenschein, Zohar (2007) demonstrate manipulation
Cumulative voting, major protocol multi-winner elections, N P-hard.
coalitional manipulation problem, focus paper, first
investigated Conitzer Sandholm (2002, 2003). setting, computational
problem made difficult fact numerous manipulators must coordinate
strategy (and additionally, introduction weighted voting). hardness
results abovementioned papers relied number candidates unbounded,
Conitzer Sandholm present hardness results coalitional manipulation setting
constant number candidates, respect several central voting protocols.
Elkind Lipmaa (2005b) extend preround approach presented Conitzer
Sandholm (2003) coalitional manipulation setting. context, provide
early impossibility result regarding average-case complexity manipulations:
authors present family preference profiles manipulator always improve
outcome voting strategically, regardless preround schedule. result applies
seeking make manipulation hard adding preround. Further, one would
usually expect distributions instances coalitional manipulation problem
give family preference profiles significant probability, extremely restricted.
recent result regarding average-case complexity manipulation, complements
own, presented Conitzer Sandholm (2006). authors put forward two
properties instances coalitional manipulation problem, demonstrate
instance satisfies properties easy manipulate. first property
instance satisfy weaker form monotonicity property seems natural;
second property manipulators able make one exactly two candidates win
election property much harder accept. order justify second
property, authors show many voting protocols property usually holds,
respect specific family distributions.
result two main shortcomings compared ours. First, arguments favor
second property mentioned empirical rather analytical; second,
family distributions considered special sense case
here. words, family distributions question priori especially hard
manipulate. hand, result advantages: unlike ours,
depend number candidates constant (although experiments
number candidates manipulators extremely small compared number
voters), (arguably) require significant restrictions voting rule.

7. Conclusions
date, results complexity manipulation considered worst case. Although better nothing, results weak guarantee resistance manipulation.
truly worthy goal design voting protocol hard manipulate average
case plausible social choice point view, far attempts
failed.
Motivated this, presented specific manipulation setting worst-case
hard average-case tractable. first prepared ground average-case
analysis borrowing several concepts existing theory introducing several
177

fiProcaccia & Rosenschein

new ideas. key approach junta distributions, presumably concentrate
hard instances coalitional manipulation problem. considered voting
protocol susceptible coalitional manipulation algorithm almost
always correctly decides problem, instances distributed respect
junta distribution.
main result states sensitive scoring protocols susceptible coalitional manipulation number candidates constant, although hard manipulate
even number candidates constant.
7.1 Discussion
results, first foremost, suggest worst-case hardness indeed strong
enough barrier manipulation. motivates research regarding averagecase complexity manipulations, expense future investigations worst-case
complexity.
Moreover, view, main result provides evidence voting rule
average-case hard manipulate exist. least, suggests
scoring protocols cannot form basis protocol usually strategy resistant.
Nevertheless, negative result circumvented many ways.
First, circumvented via voting protocol. Scoring protocols among
easiest voting systems manipulate, structure quite simple
concisely represented. protocols, say STV, inherently harder deal with. fact,
recall STV worst-case hard manipulate one manipulator (but
unbounded number candidates) (Bartholdi & Orlin, 1991), whereas scoring protocols
certainly not.
Second, circumvented via setting. results hold one contemplates coalitional manipulation constant number candidates. constant number
candidates known guarantee worst-case hardness, may case allowing large number candidates would make difference respect average-case
analysis.
Third, circumvented via distribution. Traditional average-case complexity
theory deals hardness distributional problems; words, specific distribution
considered. Junta distributions chosen way one usually
manipulated algorithm, presumably algorithm would successful
distributions. view supported results Section 4.3, point
strong theoretical guarantees, may certainly true
specific distribution instances manipulation problem average-case
hard manipulate, even scoring protocol considered.
Section 4.3 deserves aside. lemmas established show that, respect
uniform distribution, even completely trivial algorithm usually decide
coalitional manipulation problem: number manipulators small (less
square root number voters), manipulators rarely influence outcome
election; therefore, p elected nonmanipulators well, usually
correct answer yes, not, usually correct answer no. number
manipulators large, usually correct answer yes manipulation.
178

fiJunta Distributions

Recent preliminary results direction imply true several families
voting rules, large variety distributions. important note
simple algorithm would work well respect junta distribution .
7.2 Future Research
view, central contribution paper establishes framework
used study average-case complexity manipulations protocols,
even generally, mechanisms. Indeed, voting general method
preference aggregation, issues relevant one considers mechanisms
specific settings. One mechanism aware, whose manipulation
N P-hard, presented Bachrach Rosenschein (2006). definitions Section 3
sufficiently general deal different mechanisms preference aggregation.
still room debate exact definition junta distribution. may
case unconvincing distributions satisfy (current)
conditions junta distribution. might prove especially fruitful show heuristic
polynomial time algorithm respect junta distribution guaranteed
property respect easy distributions, uniform distribution.
issue great importance coming natural criteria decide manipulation problem hard average-case. traditional definition average-case
completeness difficult work general; satisfying definition
applies specifically case manipulations? subject fully understood, understanding surely shed light great mystery: voting
protocols usually hard manipulate?

Acknowledgments
work partially supported grant #898/05 Israel Science Foundation.

References
Alon, N., & Spencer, J. H. (1992). Probabilistic Method. Wiley Sons.
Bachrach, Y., & Rosenschein, J. S. (2006). Achieving allocatively-efficient strongly
budget-balanced mechanisms network flow domain bounded-rational agents.
Seventh International Workshop Agent-Mediated Electronic Commerce:
Designing Mechanisms Systems, Utrecht, Netherlands (AMEC 2005), No.
3937 Lecture Notes Artificial Intelligence, pp. 7184. Springer-Verlag, Berlin.
Bartholdi, J., & Orlin, J. (1991). Single transferable vote resists strategic voting. Social
Choice Welfare, 8, 341354.
Bartholdi, J., Tovey, C. A., & Trick, M. A. (1989a). computational difficulty manipulating election. Social Choice Welfare, 6, 227241.
Bartholdi, J., Tovey, C. A., & Trick, M. A. (1989b). Voting schemes
difficult tell election. Social Choice Welfare, 6, 157165.
179

fiProcaccia & Rosenschein

Bartholdi, J., Tovey, C. A., & Trick, M. A. (1992). hard control election.
Mathematical Computer Modelling, 16, 2740.
Conitzer, V., Lang, J., & Sandholm, T. (2003). many candidates needed make
elections hard manipulate?. Proceedings International Conference
Theoretical Aspects Reasoning Knowledge, pp. 201214.
Conitzer, V., & Sandholm, T. (2002). Complexity manipulating elections candidates. Proceedings National Conference Artificial Intelligence, pp. 314
319.
Conitzer, V., & Sandholm, T. (2003). Universal voting protocol tweaks make manipulation hard. Proceedings International Joint Conference Artificial Intelligence, pp. 781788.
Conitzer, V., & Sandholm, T. (2006). Nonexistence voting rules usually hard
manipulate. Proceedings Twenty-First National Conference Artificial
Intelligence, pp. 627634.
Elkind, E., & Lipmaa, H. (2005a). Hybrid voting protocols hardness manipulation.
16th Annual International Symposium Algorithms Computation, Lecture
Notes Computer Science, pp. 206215. Springer-Verlag.
Elkind, E., & Lipmaa, H. (2005b). Small coalitions cannot manipulate voting. International Conference Financial Cryptography, Lecture Notes Computer Science.
Springer-Verlag.
Ephrati, E., & Rosenschein, J. S. (1997). heuristic technique multiagent planning.
Annals Mathematics Artificial Intelligence, 20, 1367.
Feller, W. (1968). Introduction Probability Theory Applications (3rd edition).,
Vol. 1, p. 254. John Wiley.
Ghosh, S., Mundhe, M., Hernandez, K., & Sen, S. (1999). Voting movies: anatomy
recommender system. Proceedings Third Annual Conference Autonomous Agents, pp. 434435.
Gibbard, A. (1973). Manipulation voting schemes. Econometrica, 41, 587602.
Haynes, T., Sen, S., Arora, N., & Nadella, R. (1997). automated meeting scheduling system utilizes user preferences. Proceedings First International Conference
Autonomous Agents, pp. 308315.
Hemaspaandra, E., & Hemaspaandra, L. A. (2005). Dichotomy voting systems. University Rochester Department Computer Science Technical Report 861.
Procaccia, A. D., Rosenschein, J. S., & Zohar, A. (2007). Multi-winner elections: Complexity
manipulation, control winner-determination. Twentieth International
Joint Conference Artificial Intelligence (IJCAI 2007), Hyderabad, India. appear.
Satterthwaite, M. (1975). Strategy-proofness Arrows conditions: Existence correspondence theorems voting procedures social welfare functions. Journal
Economic Theory, 10, 187217.
180

fiJunta Distributions

Trevisan, L. (2002). Lecture notes computational complexity. Available
http://www.cs.berkeley.edu/luca/notes/complexitynotes02.pdf. Lecture 12.

181


