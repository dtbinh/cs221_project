journal artificial intelligence

submitted published

supporting temporal reasoning mapping
calendar expressions minimal periodic sets
claudio bettini
sergio mascetti

bettini dico unimi
mascetti dico unimi

dipartimento di informatica e comunicazione universita di milano
via comelico milan italy

x sean wang

sean wang uvm edu

department computer science university vermont
colchester avenue burlington vt usa

abstract
recent years several efforts focused concept time granularity applications first stream investigated mathematical
behind notion granularity manage temporal data
second stream investigated symbolic formalisms providing set
algebraic operators define granularities compact compositional way however limited manipulation proposed operate directly
algebraic representation making unsuitable use symbolic formalisms
applications need manipulation granularities
aims filling gap two streams
providing efficient conversion algebraic representation equivalent
low level representation mathematical addition conversion
returns minimal representation terms period length major
practical impact users easily define arbitrary granularities terms algebraic
operators access granularity reasoning services operating efficiently
equivalent minimal low level representation example illustrate
application temporal constraint reasoning multiple granularities
technical point view propose hybrid interleaves
conversion calendar subexpressions periodical sets minimization period length returns set granularity representations minimal
period length relevant parameter performance considered reasoning services extensive experimental work supports techniques used
shows efficiency effectiveness

introduction
according oxford university press word time found
common noun english language considering diverse sources
internet including newspapers journals fictions weblogs somehow surprising
among common nouns time granularities day week month
year pretty sure many time granularities business day quarter
semester etc would found quite frequently used natural languages however
way computer applications deal concepts still naive mostly hidden program code limited sometimes imprecise calendar support

c

ai access foundation rights reserved

fibettini mascetti wang

temporal representation reasoning long time ai topic aimed
providing formal framework common sense reasoning natural language understanding diagnosis many complex tasks involving time data management
despite many relevant contributions time granularity representation reasoning
support often ignored simplified active area temporal
constraint satisfaction proposals implicitly assumed adding support granularity trivial extension quite recently recognized
case specific techniques proposed bettini wang jajodia even
intuitively simple task deciding whether specific instant part time granularity
tricky arbitrary user defined granularities e g banking days academic
semesters considered
granularities periodic patterns terms granularities playing role even
emerging application areas inter organizational workflows personal information
management pim example inter organizational workflows need model monitor
constraints event occur later two business days occurrence
event context pim current calendar applications even mobile devices
allow user specify quite involved periodical patterns recurrence events
example possible schedule event every last saturday every two months
complexity supported patterns increasing last years current
simple interfaces showing limits essentially combination
recurrences one two granularities taken fixed set days weeks months
years foresee possibility significant extensions applications
specifying recurrences user defined granularities example user may define
upload granularity library granularity corresponding academic semester
school teaching set date finals last monday
semester bank may want define banking days granularity bank
policies may formalized recurrences terms granularity automatically
generated appointments policies may appear devices bank employees
involved specific procedures foresee need user preferred view
calendar current standard applications user choice businessday limited view complete view enabling view userss
consulting days example perspective use mobile devices may
considering time span activities supposed executed expressed
arbitrary granularities software agents board alert constraints
may violated even contextual information user location traffic
conditions scenario highlights three main requirements sufficiently expressive
formal model time granularity b convenient way define time granularities
c efficient reasoning tools time granularities
consider last decade significant efforts made provide formal
notion time granularity devise manage temporal
data addition logical approaches montanari combi
franceschet peron framework periodic set representations
extensively studied bettini wang jajodia recently
strings automata introduced wijsen bresolin montanari puppis
mostly interested last two approaches support effective


fimapping calendar expressions minimal periodic sets

computation basic operations time granularities cases representation
granularities considered low level one rather involved specification
terms instants time domain
consider requirement b users may hard time defining granularities
formalisms low level representations interpret output operations
clearly unreasonable ask users specify granularities linear equations
mathematical formalisms operate directly terms instants granules fixed
time granularity hence second stream investigated high level symbolic
formalisms providing set algebraic operators define granularities compact
compositional way efforts task started even formal
granularity leban mcdonald forster niezette stevenne
continued parallel stream bettini sibi ning wang jajodia
terenziani urgun dyreson snodgrass miller soo kline jensen
finally let us consider requirement c several inferencing operations
defined low level representations including equivalence inclusion granules
different granularities even complex inferencing services constraint propagation
bettini et al even simple operations general method available operating
directly high level representation indeed cases proposed methods
cannot exploit structure expression require enumeration granules
may inefficient case example granule conversion
methods presented ning e moreover aware method
perform operations equivalence intersection sets granules directly
terms high level representation
major goal provide unique framework satisfy requirements
b c identified adding existing smart efficient
technique convert granularity specifications high level algebraic formalism
low level one many reasoning tools available particular
focus conversion high level formalism called calendar algebra ning
et al low level formalism periodical sets bettini et al
among several proposals high level algebraic specification granularities
choice calendar algebra two main motivations first allows user express
large class granularities comparison expressiveness calendar algebra
formalisms see bettini et al second provides richest set
algebraic operations designed reflect intuitive ways users define
granularities discussion actual usability tool could
enhanced graphical user interface found section choice
low level formalism periodic sets two main motivations first
efficient implementation basic operations already exists extensively
experimented bettini mascetti pupillo second one currently
supporting complex operations granularities needed constraint satisfaction
illustrated detail section
technical contribution hybrid interleaves conversion calendar subexpressions periodical sets step period minimization
central phase conversion procedure derive algebraic subexpression
periodicity output set periodicity used build periodical represen

fibettini mascetti wang

tation subexpression recursively used operand expressions
given calendar algebra expression returns set granularity representations minimal period length period length relevant parameter
performance basic operations granularities specialized ones
operations used constraint satisfaction service extensive experimental work
reported validates techniques used showing among
things even large calendar expressions efficiently converted
less precise conversion formulas may lead unacceptable computation time latter
property shows importance carefully accurately designed conversion formulas
indeed conversion formulas may seem trivial length periodicity concern
designing conversion formulas made effort reduce period length
resulting granularity representation thus render whole conversion process computationally efficient
next section define granularities several interesting relationships among
highlighted periodical set representation formalized section define
calendar algebra present operations section describe conversion
process definition three steps necessary conversion algebraic
operation present formulas perform step section discuss period
minimality issue report experimental full implementation
conversion extension ensuring minimality section
motivate work presenting complete application scenario section reports
related work section concludes

formal notions time granularities
time granularities include common ones hours days weeks months years
well evolution specialization granularities specific contexts
applications trading days banking days academic semesters examples
specialization granularities become quite common describing policies
constraints
time granularities
comprehensive formal study time granularities relationships found
bettini et al introduce notions essential
particular report notion labeled granularity
proposed specification calendar algebra bettini et al ning et al
later labeled granularity reduced standard notion
granularity one used bettini et al
granularities defined grouping sets instants granules example
granule granularity day specifies set instants included particular day
label used refer particular granule whole set time instants called time
domain purpose domain arbitrary infinite set
total order relationship



fimapping calendar expressions minimal periodic sets

definition labeled granularity g pair lg lg subset
integers mapping lg subsets time domain
pair integers j lg j j element
less every element j integer k lg k j
k
former condition guarantees monotonicity granularity latter
used introduce bounds see section
call lg label set lg call g granule g call
non empty granule lg exactly integers granularity called fullinteger labeled lg z notion granularity used several
applications e g bettini et al example following labeling schema
assume map day subset time domain corresponding january
day would mapped february b day january
sixth business day month march generalization arbitrary label
sets introduced mainly facilitate conversion operations algebra however
final goal conversion labeled granularity denoted calendar expression
positive integer labeled one denoted periodic formula
granularity relationships
interesting relationships granularities follows definitions extended
ones presented bettini et al cover notion labeled granularity
definition g h labeled granularities g said group h denoted
g h non empty
granule h j exists possibly infinite set labels

g h j g
intuitively g h means granule h union granules g
example day week since week composed days day b day since business
day day
definition g h labeled granularities g said finer h
denoted g h granule g exists granule h j g h j
example business day finer day finer week
say g partitions h g h g h intuitively g partitions h
g h granules g included granules h
example day b day group b week business week e business day
week day partition b week b day
definition labeled granularity g label aligned subgranularity labeled granularity g label set lg g subset label set lg g
lg g g g
intuitively g subset granules g granules label
two granularities


fibettini mascetti wang

granularities said bounded lg first last element g
lg assume existence unbounded bottom granularity denoted
full integer labeled groups every granularity system
time domains given set granularities possible
bottom one example easily proved property holds
time domain cardinality integers hand
property hold time domains e g reals however assumption
existence bottom granularity still reasonable since address
granularities defined starting bottom one definition calendar
set granularities bottom granularity bettini et al captures
idea
granularity conversions
dealing granularities often need determine granule
granularity h covers given granule z another granularity g example
may wish month interval absolute time includes given week
another interval absolute time
transformation obtained operation formally label z lg
h


dzeg undefined z lh g z h z otherwise dzeh
g z z


unique index value g z h z uniqueness z guaranteed
monotonicity granularities example dzemonth
second gives month includes
month
second z note dzesecond defined dzemonth
week undefined week
z falls two months note g h function dzeh
g defined
week
index value z example since day week dzeday defined e
day week contains notation dzeh used source
granularity left implicit e g dealing fixed set granularities
distinguished bottom granularity
another direction transformation operation let g h
h
granularities
g h z integer define bzcg set labels
granules g js g j h z function useful finding e g
days month
periodical granules representation
central issue temporal reasoning possibility finitely representing infinite granularities definition granularity provided general expressive may
impossible provide finite representation granularities even labels
e subset integers necessarily finite representation
solution first proposed bettini et al idea
commonly used granularities present periodical behavior means certain
pattern repeats periodically feature exploited provide method
condition definition
definition different one given bettini et al since considers non contiguous
granules g



fimapping calendar expressions minimal periodic sets

finitely describing granularities formal definition periodically groups
relationship
definition labeled granularity g groups periodically labeled granularity h
g h g h exist positive integers n p
label h n label h unless n greater greatest
label h

label h h kr g jr h n non empty granule

h h n kr g jr p
h first non empty granule h exists h n non empty
groups periodically relationship special case group characterized
periodic repetition grouping pattern granules g granules h
definition may appear complicated actually quite simple since g groups h
granule h union granules g instance assume union
granules g g g ak condition ensures label n exists
greater greatest label h condition ensures h n
empty union g p g p g ak p assume
r k jr p lg conditions considered satisfied condition
simply says least one repetitions
call pair p n definition period length associated period
label distance indicate r number granules h corresponding
groups p consecutive granules formally r equal number labels
h greater equal smaller n arbitrary label h note
r affected value
period length period label distance unique precisely
g period label
indicate phg period length h terms g nh
distance h terms g form ph nh used g note
period length integer value simplicity indicate one period
granularity h set r consecutive granules h
general periodically groups relationship guarantees granularity h
finitely described terms granules g
definition g h h finitely described providing value p
p
n ii set lp labels h
one period h iii l finite set
sa labels g h isa g iv labels first last non empty
granules h values infinite
representation granules labels lp ones need
explicitly represented call granules explicit granules
granularity h represented periodic set granules granularity g
g periodically groups
exists infinite number pairs phg nh
relation satisfied relation satisfied pair p n proved
satisfied pair p n n



fibettini mascetti wang

definition periodic representation granularity h terms g called minimal
period length p used representation smallest value among period
g h periodically groups g
lengths appearing pairs phg nh
h fully characterized terms g possible derive composition
terms g granule h indeed lp set labels h values
g assume h unbounded description arbitrary
b b nh
g
granule h j obtained following formula given j j mod nh

k
k
j
j
b
b
g j
g j b


n
nh


g
g
h

nh
nh
k
k

j


b

n g j otherwise
g
nh

h


h j




g

phg

isk




k
j
g
ph


g
g
nh
nh


example figure shows granularities day week parts e granularity
week contains granule working days granule weekend
sake simplicity denote day week parts w respectively since
w w fully characterized terms among different possible representations
n lp
example decide represent w terms pw
w
w
composition granule w
easily computed example composition w given formula presented
j k hence w



j

b

k







j

w










figure periodically groups example

calendar algebra
several high level symbolic formalisms proposed represent granularities leban
et al niezette stevenne
work consider formalism proposed ning et al called calendar
algebra set algebraic operations defined operation generates
granularity manipulating granularities already generated
relationships operands resulting granularities thus encoded
operations granularities generated directly indirectly bottom
granularity form calendar granularities related


fimapping calendar expressions minimal periodic sets

operations define practice choices bottom granularity include day
hour second microsecond granularities depending accuracy required
application context
following illustrate calendar algebra operations presented ning et al
together restrictions introduced bettini et al
grouping oriented operations
calendar algebra consists following two kinds operations grouping oriented
operations granule oriented operations grouping oriented operations group
certain granules granularity together form granules granularity
grouping operation
let g full integer labeled granularity positive integer grouping operation
groupm g generates granularity g partitioning granules g granule
groups making group granule resulting granularity precisely g
groupm g granularity integer
im


g

g j

j

example given granularity day granularity week generated calendar
algebra expression week group day assume day corresponds monday
e first day week
altering tick operation
let g g full integer labeled granularities l k integers g partitions
g g generates granularity
g l altering tick operation alterl k


periodically expanding shrinking granules g terms granules g since g
partitions g granule g consists contiguous granules g granules
g partitioned granule groups g g one group
g g following group goal altering tick
operation modify granules g l th granule every granule group
k additional fewer k granules g example g represents
day groups e g group day want add day every rd month
e make march days may perform alter
day g
altering tick operation formally described follows integer

g let bi ti integers g tj b
g j integers bi



ti exist g partitions g g alterl k g g granularity
integer let g g otherwise let




g

ti

j b



g j

fibettini mascetti wang


b




bi h k h l
bi h k
otherwise
ti h k




il

h



example figure shows example alter operation granularity g defined
g group g granularity g defined g alter g g means
shrinking second one every two granules g one granule g
g


g












g














figure altering tick operation example
original definition altering tick given ning et al reported
following arbitrary negative value k used allows
definition g full integer labeled granularity allows
definition g even satisfy definition granularity order avoid
undesired behavior impose following restriction
k mindist g g
mindist formally defined bettini et al
intuitively mindist g g represents minimum distance terms granules
g two consecutive granules g
shift operation
let g full integer labeled granularity integer shifting operation
shiftm g generates granularity g shifting labels g positions
formally g shiftm g granularity integer g g
note g full integer labeled
combining operation
let g g granularities label sets lg lg respectively combining
operation combine g g generates granularity g combining granules
g included one granule g one granule g formally
l let g otherwise let j lg
g j g



fimapping calendar expressions minimal periodic sets

g combine g g granularity
label set lg lg

lg g js g j
example given granularities b day month granularity business months
generated b month combine month b day
anchored grouping operation
let g g granularities label sets lg lg respectively g
label aligned subgranularity g g full integer labeled granularity anchored
grouping operation anchored group g g generates granularity g combining
granules g two granules g one granule g
formally g anchored group g g granularity label set lg lg

g j next label g
lg g ij
example academic year certain university begins last monday
august ends day beginning next academic year
granularity corresponding academic years generated academicy ear
anchored group day lastmondayofaugust
granule oriented operations
differently grouping oriented operations granule oriented operations
modify granules granularity rather enable selection granules
remain granularity
subset operation
let g granularity label set lg n integers n subset
operation g subsetnm g generates granularity g taking granules
g whose labels n formally g subsetnm g granularity
label set lg lg n lg g g
example given granularity year years th century generated

centuryyear subset
year note g label aligned subgranularity g
g full integer labeled granularity even g allow extensions
setting n semantics properly extended
selecting operations
selecting operations binary operations generate granularities
selecting granules first operand terms relationship granules
second operand label aligned subgranularity first operand
granularity
three selecting operations select select select intersect
facilitate description operations lk notation used intuitively
set integers lk selects l elements starting k th one formal
description operator see ning et al
select operation granule g exits set granules g
contained g operation select downlk g g k l


fibettini mascetti wang

integers selects granules g lk set granules actually labels
g contained one granule g formally g select downlk g g
granularity label set
lg ilg lk j lg g j g
lg g g example thanksgiving days fourth
thursdays novembers thursday november given generated
thanksgiving select thursday november
select operation select operation select g g generates granularity
g selecting granules g contain one granules g formally
g select g g granularity label set
g j g
lg lg j lg
lg g g example given granularities thanksgiving
week weeks contain thanksgiving days defined thanxweek
select week thanksgiving
select intersect operation granule g may exist set granules g
intersecting g select intersectlk g g operation k l
integers selects granules g applying lk operator sets generating
granularity g formally g select intersectlk g g granularity
label set
lg ilg lk j lg g j g
lg g g example given granularities week month
granularity consisting first week month among weeks intersecting
month generated firstweekofmonth select intersect week month
set operations
order set operations part calendar algebra make certain
computations easier restrict operand granularities participating set operations
operation valid granularity set operations
defined g g exists granularity h g g
label aligned subgranularities h following describe union intersection
difference operations g g assuming satisfy requirement
union union operation g g generates granularity g collecting
granules g g formally g g g granularity
label set lg lg lg lg

g l

g
g l l
example given granularities sunday saturday granularity weekend days
generated weekendday sunday saturday


fimapping calendar expressions minimal periodic sets

intersection intersection operation g g generates granularity g taking
common granules g g formally g g g granularity
label set lg lg lg lg g g equivalently
g
difference difference operation g g generates granularity g excluding
granules g g formally g g g granularity
label set lg lg lg lg g g

calendar algebra periodical set
section first describe overall conversion process report
formulas specific conversion calendar algebra operation finally present
procedure relabeling resulting granularity sketch complexity analysis
considerations period length minimality
conversion process
final goal provide correct effective way convert calendar expressions
periodical representations appropriate limitations calendar algebra
operation periodical descriptions operand granularities known possible
compute periodical characterization resulting granularity
allows us calculate calendar periodical description
granularity terms bottom granularity fact definition bottom granularity fully characterized hence possible compute periodical representation
granularities obtained operations applied bottom granularity
recursively periodical description granularities obtained
calendar algebra presented previous section represent granularities
periodical finite exceptions e granularity g bottom groups
periodically finite exceptions g since periodical representations defined
section possible express finite exceptions need restrict calendar
algebra cannot represent implies allowing subset operation
used last step deriving granularity note calendar algebra
presented ning et al extension altering tick operation allow
usage parameter e g alter
l k g g resulting granularity
single exception hence periodic extension disallowed order
generate periodical granularities without finite exceptions
conversion process divided three steps first one period length
period label distance computed second derive set lp labels one
period last one composition explicit granules computed
operation identify correct formulas three steps
first step consists computing period length period label distance
resulting granularity values calculated function parameters e g
grouping factor group operation operand granularities actually
period lengths period label distances



fibettini mascetti wang

second step conversion process identification label set
resulting granularity section pointed order fully characterize
granularity sufficient identify labels period granularity spite
theoretical perform computations required operation need
explicit granules operand granularities aligned two possible
approaches first one consist computing explicit granules period
recalculate needed granules correct position order eventually align
second one consists aligning periods containing explicit granules
fixed granule bottom granularity considering possibilities
performance reasons decided adopt second decided use
alignment point granularities formal definition used formalism
follows
let g granularity smallest positive integer dieg defined
call lg dieg lg set labels g contained lg lg ng note
definition lg instance definition lp given section definition
lg provided useful representing g actually final goal step
compute lg however lg suitable performing computations
g lg starts e min blg cg granule g lg ng begins
pg pg hence g lg ng necessary computations however
lg ng
lg
solve introduce symbol lg represent set labels
granules g cover one pg easily seen g lg cover
lg lg otherwise lg lg lg ng therefore conversion
l l vice versa immediate
notion l still enough perform computations
granularity g used operand operation period length
resulting granularity g generally bigger period length g therefore
necessary extend notion lg period length pg g pg spite
p
pg definition l symbol used notion lgg
p
idea g used operand operation generates g lgg
computed lg set used formula provide compute
lg
computation lg performed follows g defined operation

returns full integer labeled granularity sufficient compute value lg



indeed easily seen lg z lg lg ng g defined
algebraic operation provide formulas compute lg lg easily
derive lg
example figure shows granularities g h clear pg ph
ng nh moreover lg lh therefore lg lh since
b cg
h
lg lg hand since b c lh lh
p
suppose granularity g period length pg lgg
p
lhg



fimapping calendar expressions minimal periodic sets





g
















h
















figure l l l lpg examples
third last step conversion process computation composition explicit granules lg computed sufficient apply
label lg formulas presented chapter
sections calendar algebra operation compute
first second conversion steps
computability issues
formulas presented necessary compute set labels
granularity g g h j h granularity j specific label
h since lg contains infinite number labels possible check lg
g h j however easily seen k g dkeg h j therefore
k g dkeg defined k bjch
therefore compute set considering labels lg n bjch
dneg g h j since set bjch finite computation performed
finite time consideration analogous set g h j
g h j
group operation
proposition g groupm g
pg
pg gcd n
ng
g
j
k

lg



lg


lg g

ng
gcd ng

sim

j g j

example figure shows example group operation g group g since
pg ng pg ng moreover since lg lg
therefore lg lg finally g g g g e
g
calendar algebra possible define granularities granules maps
infinite set time instants



fibettini mascetti wang





g


g


















figure group operation example
altering tick operation
proposition g alterm
l k g g



n

g

pg ng
ng
lcm ng

gcd pg ng pg gcd ng k




pg

ng k
ng pg ng

ng pg







pg
ng



lg dlg eg
g
lg g

st

j b

g j b defined section

referring step note computing lg explicit characterization

granules g still unknown perform operation dlg eg
g need know least
explicit granules one periods choose compute granules labeled
ng lg derived granules labeled lg lg ng computed
explicit granules aligned required
example figure shows example altering tick operation g alter g g
since pg ng pg ng ng pg
g
moreover since lg lg therefore lg eg

hence lg finally g g g g
analogously derive g g g g
g

shift operation
proposition g shiftm g
pg pg ng ng
lg lg
lg g g


fimapping calendar expressions minimal periodic sets





g






















g










































g


















figure alter operation example
example shifting operation easily model time differences suppose granularity
useast hour stands hours us eastern time since hours us pacific
time hours later us eastern time hours us pacific time
generated uspacific hour shift useast hour
useast hour


uspacific hour


figure shift operation example

combining operation
proposition given g combining g g
pg lcm pg pg ng
p



p

lcm pg pg ng

pg
p





lgg let se j lgg
g j g lg lgg e


lg g js g j
example figure shows example combining operation g combine g g
since pg ng pg ng pg ng moreover
p
since lg b cg lg hence lgg since

lg moreover since b cg lg
finally consequently g g g e
g g g g e g

anchored grouping operation
proposition given g anchored group g g
pg lcm pg pg ng

lcm pg pg ng

pg



fibettini mascetti wang





g








g


























g








figure combine operation example


lg

p



lgg
lg lg
pg

lg lg otherwise


lg
greatest among labels lg smaller lg


lg g

si
j

g j next label g

example figure shows example anchored grouping operation usweek
e week starting sunday defined operation anchored group day
sunday since pday psunday period length usweek morepusweek
since lday lsunday lsunday
lusweek

clearly since b cusweek lusweek finally usweek
j day j

k k





day


sunday










usweek








figure anchored grouping operation example

subset operation
subset operation modifies operand granularity introducing bounds
period length period label distance l composition explicit granules
affected



fimapping calendar expressions minimal periodic sets

selecting operations
select operation
proposition given g select downlk g g
pg lcm pg pg ng
lg let

lcm pg pg ng

pg

g j g
lk j lg




n
p
lgg

lg

p

ilgg


lg g g
example figure shows example select operation granularity
g defined g select g g since pg ng pg
pg ng moreover since lg b cg lg
p
lgg intuitively

hence lg therefore since b cg lg
finally g g g g




g


































g












g










figure select operation example

select operation
proposition given g select g g
pg lcm pg pg ng

lcm pg pg ng

pg


p



lg lgg j lg
g j g
lg g g





fibettini mascetti wang

example figure shows example select operation g select g g
since pg ng pg pg ng moreover since lg
p

b cg lg lgg
since g g g g g g lg

since b cg lg finally g g
g g




g


















g














g










figure select operation example

select intersect operation
proposition given g select intersectlk g g
pg lcm pg pg ng

lcm pg pg ng

pg

lg let
lk j lg g j g

lg


n
p
lgg
p

ilgg


lg g g
example figure shows example select intersect operation
g select intersect g g since pg ng pg pg
ng moreover since lg b cg lg
p
lgg intuitively hence

lg therefore since
b cg lg finally g
g g g



fimapping calendar expressions minimal periodic sets





g


































g












g












figure select intersect operation example
set operations
since set operation valid granularities used argument labeled aligned
granularity another granularity following property used
proposition g labeled aligned subgranularity h

ng
pg



nh
ph

proposition given g g g g g g g g g
pg pg pg lcm pg pg
lcm pg pg ng

ng ng ng
pg


p



p



p



p

lcm pg pg ng

pg



p



p



lg lgg lgg lg lgg lgg lg lgg lgg

g lg

lg g
g otherwise
lg g g lg g g
example figure shows example set operations note g
g labeled aligned subgranularities h g g g g g g
g g g since pg pg ng ng pg pg pg
ng ng ng moreover since lg lg
lg lg lg finally g g g g
g g g g g g

relabeling
granularity processing much simpler restricted operate full integer
labeled granularities moreover simplification obtained positive integers set labels e l z
section relabel granularity g obtain full integer labeled
granularity g granularity g lg z obtained g

subset
g
note relabeling process information lost example g
labeled aligned subgranularity h g h relabeling g


fibettini mascetti wang





h












































g


g


































g












g








g










figure set operations example
labeled aligned subgranularity h lost information semantically meaningful
calendar algebra therefore relabeling must performed granularity
used operator algebraic operation
let g labeled granularity j integers lg g
relabeling operation relabelji g generates full integer labeled granularity g relabeling
g g j relabel next previous granule g next previous
respectively integer formally integer k k j let g k g
otherwise let g k g g j k th granule g
respectively g required j k th granule g exist let g k
note g full integer labeled granularity
relabeling procedure implemented periodic representation adopted
computing value lg easily seen lg known full characterization g obtained pg pg ng rg rg lg
lg lg lg ng lg ng clear explicit representation
granules modified
j
k
ilg


compute lg consider label ng ng represents label lg
multiple ng jtherefore
clear label j lg g j g
k
g
computed j j il
ng finally lg obtained lg j
ng
distance terms number granules g g lg g

example figure shows example relabel operation g relabel
g


since pg r



g pg ng moreover
next granule g
j




since
l







g
g

g lg hence lg follows lg
finally g g g g

gstp constraint solver imposes first non empty granule granularity
included labeled therefore relabeling operation producing


fimapping calendar expressions minimal periodic sets

figure relabeling example
granularities gstp parameter j must set parameter equal
smallest label among identify granules g covering granules
labeled positive values definition lg lg min blg cg otherwise
next label g lg
complexity issues
operation time necessary perform three conversion steps depends
operation parameters e g grouping factor group operation
operand granularities particular period length period label distance
number granules one period
central issue operand granularity bottom granularity
period function periods granularities operands operation
defines algebraic operations worst case period
resulting granularity product periods operands granularity
operations first step conversion process performed
constant logarithmic time indeed formulas necessary derive period length
period label distance involve standard arithmetic operations ii computation
greatest common divisor iii computation least common multiple part
computed constant time ii iii computed logarithmic
time euclids
operations second step performed constant time e g group
shift anchored group linear time e g set operations operations
necessary compute set labels granularity g g h j
h granularity j lh analogously set g
h j g h j computation needs performed
p
granule phg idea solving presented
section several optimizations applied worst
case h covers entire time domain necessary perform number deg
operations linear period length resulting granularity optimized data
structure used represent granularities deg operation performed
constant time time necessary perform second step linear period
length resulting granularity pg
last step conversion process performed linear time respect
number granules period g
non optimized data structure used deg requires logarithmic time



fibettini mascetti wang

complexity analysis conversion general algebraic expression needs
consider composition operations hence complexity finally relabeling
done linear time
detailed complexity analysis scope work

minimal representation experimental
section address guaranteeing converted representation
minimal terms period length example conversion
formulas proposed guarantee minimal representation
clear conversion formulas ensuring minimality exist apply
minimization step conversion
practical applicability minimization step depends period length
representation minimized indeed tests noted minimization
step efficient conversion formulas proposed section adopted
impractical conversion procedure returns period orders magnitude
higher minimal one would case conversion formulas constructed
naive way
period length minimization
stated section granularity different periodical representations
given granularity possible identify set representations minimal
e adopting smallest period length
unfortunately conversions return minimal representation shown
example
example consider calendar day bottom granularity define
week week group day applying formulas group operation obtain
pweek nweek
apply altering tick operation add one day every first week every
two weeks let granularity g alter day week applying formulas
altering tick operation obtain pg ng
apply altering tick operation create granularity g removing
one day every first granule g every two granules g g alter day g
intuitively applying operation get back granularity week however
formulas altering tick operation obtain pg ng hence
g minimal
order qualitatively evaluate close minimal representations
conversions performed set tests bettini mascetti
minimality checking experimental conversions algebraic
expressions defining granularities real world calendars including many user defined nonstandard ones returned exactly minimal representations non minimal ones could
obtained artificial examples one presented example
although non minimal unlikely practical calendars minimality
granularity representation known greatly affect performance


fimapping calendar expressions minimal periodic sets

granularity processing e g granularity constraint processing bettini et al calendar calculations urgun et al workflow temporal support combi pozzi
hence considered extension conversion adding minimization
step exploiting technique illustrated bettini et al derive minimal representation
choice conversion extended one minimizations probably driven performance considerations section report
experiments showing generally advantageous apply minimization step implementation presented section possible specify
minimization step performed
implementation calendarconverter web service
conversion formulas presented section implemented calendarconverter web service converts calendar algebra representations equivalent
periodical ones precisely given calendar granularities expressed calendar algebra operations service converts operation equivalent periodical
representation
service first rewrites calendar algebra expression order express
terms bottom granularity example bottom granularity hour
expression monday select day week changed
monday select group hour group group hour
procedure run granularitys expression idea periodical
representation subexpression recursively computed starting expressions
bottom granularity operand operand given operation
converted periodical representation corresponding formula presented section
applied call step convertoperation procedure
trivial optimization procedure consists caching conversions
subexpression computed even subexpression appears
several times group hour monday definition
experimental
experiments address two main issues first evaluate conversion formulas
impact practical applicability conversion procedure second evaluate
useful minimization step
first issue execute conversion procedure two different sets conversion formulas compare first set laid section
less optimized taken preliminary version bettini et al

table shows converting calendars granularities small minimal
period length first two rows formulas section improves performance
one order magnitude however conversions minimizations almost instantaneous approaches contrary minimal period length higher


fibettini mascetti wang

procedure convertexpression
input calendar algebra expression ex boolean value minimize set
true minimization step executed
output periodical representation ex
method













ex bottom granularity
return periodical representation bottom granularity
end
operands
operand op ex
add convertexpression op minimize operands
end
convertoperation ex getoperator operands
minimize
minimize periodical representation
end
return

table impact conversion formulas performance conversion minimization procedures time milliseconds

calendar
period
bot
year
day
years
day
year
hour
years
hour
years day

section formulas
conv min tot















less optimized formulas
conv
min
tot














last three rows time required minimize periodical representation five
orders magnitude larger formulas proposed bettini et al used
consequence entire conversion may require several minutes formulas
presented section still requires fraction second period length
even larger conversion procedure impractical formulas presented bettini et
al used indeed experiments obtain less
thirteen hours
second issue perform set three experiments first one compare
performance conversion procedure performance minimization step



fimapping calendar expressions minimal periodic sets

experiment consider case conversion procedure produces minimal
representations case minimization step overhead since cannot
improve performance conversion procedure
figure shows experiment four calendars considered one
containing set granularities gregorian calendar four calendars differs
values two parameters bottom granularity second cal cal
minute cal cal period leap years leap years exceptions
represented years cal cal cal cal respectively
consequence minimal period length granularities month year
cal cal cal cal

figure impact minimization conversion minimal conversions case
observed figure ratio time required perform
conversions time required minimization step varies significantly
minimum cal maximum cal reason complexity
conversion procedure mainly affected period length granularity
largest period length hand complexity minimization step
affected features granularities internal structure
number integers divide time period label distance period
length number granules one period details see bettini mascetti

second experiment consider case conversion procedure produces non minimal representation granularity input calendar case
possible benefit minimization step example suppose granularity g
converted used argument another calendar algebra operation
defines granularity h time required compute periodical representation
h strongly depends period length g period length g reduced
execution minimization step conversion h executed faster
produced situation technique similar one example
created calendar algebra definitions gregorian calendar granularity
day converted granularity non minimal representation figure shows
performance obtained converting granularities used figure


fibettini mascetti wang

difference case definition granularity day
conversion procedure period twice large minimal one e hours
minutes seconds depending bottom granularity used
easily seen case use minimization step improve performance
entire indeed minimization step performed conversion
procedure requires one half time required minimization
performed

figure impact minimization conversion non minimal case
third experiment evaluate impact minimal representation
performance applications involving intensive manipulations granularities test
use gstp solver application computes solutions temporal constraints
granularities description architecture gstp system provided
section
figure shows experiments performed four temporal constraint networks
granularities four networks differs number variables number constraints granularities used express constraints networks labeled
non minimal use granularities definitions obtained technique similar
one used example period twice large minimal one
figure shows use minimal representations greatly improves performance gstp solver indeed experiments ratio time required
solve network non minimal representation minimal one
three five moreover time required solve network greater
improvement obtained minimal representation means complex
temporal networks expect improvement even higher
considering experiments conclude general advisable
perform minimization step particular advantageous specific case
gstp following considerations time required perform minimization step fraction time required perform conversion procedure ii
conversions performed line cases respect granularity processing
conversion cached future use iii period length strongly influ



fimapping calendar expressions minimal periodic sets

figure impact minimal representations performance gstp solver
ences gstp processing time cases much longer time needed
conversion

applications
section complement motivations work sketch applications
enabled proposed conversion firstly describe gstp system example
applications involving intensive manipulation time granularities gstp used
check consistency solutions temporal constraint satisfaction
granularities applied check consistency inter organizational
workflow bettini wang jajodia b discuss use calendar
algebra define granularities may later part input reasoning services
gstp
gstp system
gstp system developed university milan objective
providing universal access implementation set multi granularity
temporal constraint satisfaction bettini et al allows user specify binary
constraints form x n g n minimum maximum
values distance x terms granularity g variables take values
positive integers unary constraints applied domains example
constraint event occur business days occurrence event
modeled occe occe bday considered extension stp
dechter meiri pearl multiple arbitrary granularities knowledge
gstp available system solve class temporal constraint satisfaction

figure shows general architecture gstp system three main
modules constraint solver web service enables external access solver
detailed description system see bettini et al



fibettini mascetti wang

user interface used locally remotely design analyze constraint
networks

figure gstp architecture
constraint solver c implementation acg
proposed bettini et al runs server machine following bettini et al solver uses representation granularities
periodical sets representation makes possible efficiently compute core operations granularities required solve constraint satisfaction
operations involve example union intersection periodical sets
cannot exclude operations may computed terms alternative low level
representations seems much harder obtain similar high level representation
calendar algebra used
second module system web service defines wsdl
specification parameters passed constraint solver including
xml schema constraint network specification
third module remote java user interface allows user easily
edit constraint networks submit constraint solver analyze
particular possible views terms specific granularities visualize implicit
constraints browse descriptions domains obtain network solution fig
shows screenshot interface
defining granularities
gstp solver handle arbitrary granularities granularities must added
editing explicit periodical representation true general multi

fimapping calendar expressions minimal periodic sets

figure gstp user interface
granularity reasoning service low level representation granularities
painful task granularities large period example experimental
illustrated figure used representation granularity month
considers leap years leap years exceptions period years case
users specify representation granules e number months
years
period length real world granularities generally high graphical interface help supports user individually select explicit granules
effective solution requires use implicit explicit operations granules among
proposals calendar algebra provides richest set operators question
arises definition granularities terms calendar algebra really simpler
specification periodical representation calendar algebra seem user
friendly exact semantics operator may immediate inexperienced
user time required order learn use operator
practice think reasonable ask unexperienced user
define granularities writing calendar algebra expressions nevertheless think
calendar algebra used specialized user interfaces guide user
specifying granularities sense believe calendar algebra plays
role sql definition databases queries similarly calendar algebra
sql abstraction tool directly exploited expressive power
advanced user used less experienced user graphical user
interface possibly reduced expressiveness
mentioned case periodical representations graphical user interfaces
sufficient making specification granularities practical contrary case calendar algebra user interfaces strongly enhance usability
calendar algebra making practical use possible definition involved
granularities least two reasons difference firstly main difficulty
calendar algebra understanding semantics operators choice
appropriate one given task effective user interface hide existence algebraic operators user showing operators modify existing



fibettini mascetti wang

step

b step

c step

figure steps wizard visually defining granularity calendar algebra
granularities e semantics operators secondarily calendar algebra allows
compact definition granularities due fact calendar algebra
operations specifically designed reflect intuitive ways users define
granularities
example shows graphical user interface effectively used define
granularity terms calendar algebra expression
example example shows graphical user interface used support
user definition granularity final set days one corresponding


fimapping calendar expressions minimal periodic sets

last monday every academic semester assume granularities monday
academicsemester already defined graphical user interface use
example wizard guides user step step first step figure
user chooses kind operation wants perform second step figure b
user provide details wants modify operand granularity
monday example choice calendar algebra expression
shown third step figure c last window user give name
granularity defined
global architecture

figure integration gstp calendarconverter web services
figure shows possible architecture integration gstp interface
granularity definitions calendarconverter web service granularity repository
collects calendar algebra definitions upon request gstp system definitions
converted low level representation calendarconverter web service efficiently
processed clearly caching techniques used optimize process

related work
several formalisms proposed symbolic representation granularities
periodicity periodicity application ai db area extensively
investigated tuzhilin clifford morris shoaff khatib kabanza stevenne
wolper ladkin regarding symbolic representation well known
formalism proposed leban et al notion collection
intended represent temporal expressions occurring natural language collection
structured set time intervals order collection gives measure
structure depth order collection ordered list intervals order n
n collection ordered list collections order n two operators


fibettini mascetti wang

called slicing dicing used operate collections selecting specific intervals
sub collections dividing interval collection respectively
example weeks january divides interval corresponding january
intervals corresponding weeks fully contained month
formalism adopted extensions many researchers ai koomen
cukierman delgrande database area chandra segev stonebraker
terenziani particular control statements else
introduced chandra et al facilitate representation certain
sets intervals example possible specify fourth saturday april
holiday previous business day otherwise
deductive database community second influential proposal slice
formalism introduced niezette et al slice denotes finite infinite set
necessarily consecutive time intervals example slice years months
days days denotes set intervals corresponding first days february
april year
totally different calendar algebra described ning et al
considered representation rich set algebraic operators
periodic sets opposed slicing dicing nonconvex intervals
none cited papers provide mapping identify operator changes
mathematical characterization periodicity argument expressions
finding mappings trivial operators
bettini sibi expressive power algebras proposed leban et
al niezette et al compared extension first proposed
order capture larger set granularities since periodical representation
used compare expressiveness mapping calendar expressions formalisms
periodical representations found proofs however since
minimality issue purpose comparing expressiveness many cases
mapping returns non minimal representations
regarding alternative approaches low level representation already mentioned
ones strings wijsen automata dal lago montanari
puppis bresolin et al may considered alternative target
conversion matter fact example conversion calendar algebra
expression string representation found dal lago montanari
complete conversion procedure appeared revision process
phd dissertation puppis aim conversion prove
granspecs formalism used represent granularities terms automata least
expressiveness calendar algebra hence obtaining minimal representations
goal moreover case minimization terms period length
terms automaton size automaton complexity complexity reasoning
given automaton worst case time complexity operations analogous
depends linearly value computed called complexity
sense role period length p even precise
relationship two values hard obtain compute
logarithmic time respect p linear time respect dimension
bounded p operations checking equivalence seem


fimapping calendar expressions minimal periodic sets

complex automata bresolin et al techniques minimization
terms automaton complexity presented dal lago et al time
complexity proved polynomial even exact bound explicitly given

worst case time complexity minimization p bettini
mascetti overall automata elegant well founded
one side still misses implementation order experimental data
compare side basic operations currently defined
would interesting investigate definition formalism complex
operations ones required gstp

conclusion future work
presented hybrid interleaves conversion calendar algebra
subexpressions periodical sets minimization period length
proved returns set granularity representations minimal
period length extremely important efficiency operations granularities technical contribution software system developed
allowing users access multi granularity reasoning services defining arbitrary time granularities high level formalism current efforts mainly devoted completing
refining development different modules architecture shown section
future work intend develop effective graphical user interfaces support
definition calendar algebra expressions user friendly way example described one
possible interfaces another open issue convert periodical representation
granularity user friendly calendar algebra expression conversion could
useful example present computation performed periodical
representation however naive conversion may effective since resulting calendar
algebra expression could involved periodical representation
derived example conversion procedure presented bettini et al prove
calendar algebra least expressive periodical representation however
resulting calendar algebra expression composed number calendar algebra
operations linear number granules one period original
granularity contrary effective conversion generate calendar algebra
expressions compact easily readable user somehow
related discovery calendar association rules li ning wang jajodia
finally intend investigate usage automaton representation
low level granularity formalism would interesting know whether
representation possible compute operations computed
periodical representation performance gain could achieved

acknowledgments
thank anonymous referees useful comments suggestions work
bettini mascetti partially supported italian miur interlink project n ii c ec
work wang partially supported us nsf grant iis



fibettini mascetti wang

appendix proofs
transitivity periodically groups relationship
order prove correctness conversions algebraic expressions periodical
sets useful formal transitivity periodically groups
relation addition transitivity theorem says something period
length values
theorem let g h two unbounded granularities g periodic terms
bottom granularity e g h periodic terms g e g h let
g period length period label distance h terms granules
phg nh
g ng period label distance g terms phg ng
positive integer h periodic terms bottom granularity e h
ph pg
g

proof since
sni hypothesis g h ph ng h
g
nh r g ir ng written follows


sni

r g ir

h

h g g ini



g
h nh
g ng g ini ng



ns

since g


g ij

ij


ij k



ij k pg



k




g ij ng

ij


k

clearly extended ng instead ng


g ij ng

ij


ij k pg



k

rewriting substituting g ij according rewriting substituting g ij
ng according obtain
h ini ini


z


z

g

g ini



fimapping calendar expressions minimal periodic sets

g
h nh
pg pg
z


g ng

ini pg ini pg


z

g ini ng

hence second condition definition satisfied third one satisfied
unbounded granularities first one satisfied fact since g h period
g label h n g label h hence definition
label distance nh
h
g
periodically groups h ph pg nh nh

proof proposition
part
definition group operation n


g

im


g j g im g im g g

j

im furthermore k n
k





g k

g j g im km g im km

j k

g km g km
hence




g











g r g k

r

g r km



r

g
holds k use k gcmn n
note k n hypotheses
g
theorem satisfied g hypothesis ii g g since g g lg z
mng
ng
holds iii pgg gcm
ng since use k gcm ng

know pgg km therefore theorem g pg
ng

mpg
gcm ng

ng
gcm mng

part
definition group

j

k

j

g





lg



operation g

definition l need g



lg





lg


k





j




tj b g j b lg
sim
j g hence

j

lg


k


g j



fibettini mascetti wang

prove thesis showing
lg
since

j

lg


k



lg


j

lg


lg
g
lm

lg lg mod
g
lm



first prove
prove

hence
k
j

j

lg


k

lg

j

lg


k




k

lg
j
k
since lgm

lg lg mod




equivalent thej inequality
lg mod
k

true since lg mod since
k

j
lg


lg


lg




lg


trivial

proof proposition
part
proof sketch
g g pgg ng apply theorem obtain thesis
particular use


pg ng
ng
lcm ng

gcd pg ng pg gcd ng k



pg
pg ng
k



ng pg

ng


j k g kr g j r g kr g j r
ng
given arbitrary granule g g union granules
obtained adding ng index granule g contained g note
lg since g full integer labeled order correct
consider way granules g constructed definition altering tick precisely
compute difference label b first granule g included
g label b first granule g included g
difference equal difference label last granule g included
g label last granule g included g fact together
consideration g full integer labeled granularity leads conclusion
g g number granules clear
computed label differences equal difference label arbitrary
n th granule g included g label n th granule
g included

g difference b b j k g kr g j r


g kr g j r b b showing b b multiple ng
thesis follows
proof details




fimapping calendar expressions minimal periodic sets

si
sti
assume g tj b
g j g j b
g j need compute




bi bi definition altering tick operation
b





k
bi il



bi

il




il


l



k otherwise


b






k
bi l



bi

l




l


l



k otherwise






note il
l l
indeed l
l

l

il

il

il

l

since



multiple




l










il
l l
hence compute b b consider two cases
b b






k bi il
k il
l
bi l





bi

l







k bi il
k otherwise

cases considering fact multiple
b b bi bi

k




left compute bi bi e distance terms granules g g bi
sti
si
g j
g j g j b
g bi since hypothesis g tj b


first granule making g bi first granule making g
granule observed first granule making g bi
first granule making g formally
min bbi cg min bicg

min bbi cg min bi cg
hence
min bbi cg min bbi cg min bi cg min bicg



shown difference index first granule making
g bi index first granule making g bi equal difference
index first granule making g index first
granule making g need compute difference index
first granule making g index first granulesof making
g since g multiple ng j g r j r


fibettini mascetti wang


p
p
g r j ngg hence difference value ngg


shown value difference index first granule
making g bi index first granule making g bi since
p
g period length pg since ngg multiple pg


j g

j
thus bi bi
reconsidering

pg
pg ng

g
ng
ng pg

pg ng
ng pg

b b

pg ng
k


ng pg

p

n

analogously compute ngg pgg k







thus bi bi ti ti hence ti bi ti bi since g full integer labeled
granularity g g formed number granules
st
st




since know g j b
g j j b
g j bi bi bi bi





g

pgg

pg ng
ng pg

multiple ng g

g hence
hypothesis theorem hold application leads thesis proposition
part


since g partitions g see table bettini et al dlg eg
g al
ways defined min n n lg n g min n j
lg g j therefore lg label granule g covers

granule g labeled lg definition de operation lg dlg eg
g
proof proposition
part
definition shift operation g g im hence g lg g lg mm
g lg
proof proposition
part
thesis follow application theorem indeed know g
g g pgg multiple

ng need identify


exists g js g j g js g j ng
lcm p

p

n

g g
g
consider arbitrary n
definition combining
pg




operation g js g j g js g j

j lg
g j g


fimapping calendar expressions minimal periodic sets


j lg
g j g
composed elements
lcm pg pg ng
quantity
added purpose need
pg


j j




j j





note j g j g since g
g j

k


jr

r






g j

k


jr lcm pg pg



r

since g g j

sk

r jr

since g

g j

k


jr lcm pg pg



r

derive g g j hence j
analogously
validitysof hence exists
proved


g js g j g js g j hence considering fact
g g conclude g g finally since pgg multiple ng theorem
obtain thesis
part
let

p

leg lgg e
p



p



lgg se j lgg
g j g
leg lg proving leg lg leg lg
suppose contradiction exists k lg leg since k lg since g
derived combine operation
q lg g q g k definition


combine operation g k js k g j since q k g q g k hence
q lg g q g k
p
moreover since k leg se k therefore j lgg g j g k
definition combine operation easily seen g g
p
previous formula derive b j lgg g j g k


fibettini mascetti wang

p



b follows q lg lgg g q g k
leads contradiction
p
p
p
p
since q lgg labels lgg contiguous e lg lgg min lgg
p

p



p





max lgg q min lgg q max lgg consider first case
proof second analogous
p
p
q min lgg max bqcg otherwise q lgg


let min bmin lg cg since k lg bkcg
g k g q contradicting g k g q
g lg lg leg indeed definition
p
p
combine j lgg g j g lg since g g j lgg g j
g lg hence j se lg lg leg
since g lg max bqcg max bqcg otherwise g q


g lg therefore since min bkcg bqcg blg cg contradiction
g q g k
e
suppose contradiction k leg lg since k leg definition l
p

p





k lgg se k therefore definition se j lgg g j g k
p



since j lgg definition l h h pg dheg j since

g j g k dheg k definition combine operation dheg k

moreover since h pg definition l dheg k lg contradicting
hypothesis
proof proposition
part
thesis follow application theorem indeed g g
pgg multiple ng need identify exists


lcm pg pg ng
g js g j g js g j ng let

pg






g j g j g j
definition anchored grouping g ij
first label g first label g
periodicity g since multiple ng difference label
granule following g label granule following g
sk





formally hence g j g j


g ij
g j ij
g j considering g g
conclude g g pgg note proposition ng
pgg

multiple theorem thesis

part
let


leg

p



lg lg
lgg
pg

lg lg otherwise



pg ng
pg

hence

fimapping calendar expressions minimal periodic sets


lg
greatest among labels lg smaller lg

e
lg lg proving leg lg lg leg
p
suppose contradiction k leg lg since k leg k lgg

k lg

p

p





k lgg definition lgg h h pg dheg k

definition anchored group g k kj k
g j k first label g

k therefore g k g k since g labeled aligned subgranularity g since

k lg k lg g k g k hence g k g k follows dheg k
therefore definition l k lg contrast hypothesis
definition l
eg lg lg therefore since g labeled aligned
k lg



l


h

h min blg cg dheg lg

l
subgranularity g lg
g
g




lg


since definition anchored group g lg
g j since lg
lg lg
j l


g



g l hence dheg l

g lg
g
g therefore definition l lg k lg

contrast hypothesis
p
suppose contradiction k lg leg k lgg definition
leg k leg contrast hypothesis
p
p
p
p
p
k
lgg since q lg lgg min lgg q max lgg k max lgg
p



k min lgg

p



k max lgg definition l min bkcg pg since g labeled
aligned subgranularity g g k g k hence min bkcg pg since


g k kj k
g j min bkcg pg contrast hypothesis k lg
p



k l

k min lgg definition lg
g k lg



k lg
let k next label g k since k lg
definition







g
lg k lg definition lg max blg c since g labeled aligned
g l therefore max bl cg since g k
subgranularity g g lg
g
g

sk


g contrast hypothesis
g
j

k

l

follows

max bkc

j k
g
k lg
slg



finally k lg
g lg
g j since k lg
lg h
j l





g

since g composition granules g dheg
h pg dheg lg


p



defined let q dheg definition l q lgg therefore q lg since


definition anchored group g composition granules g since dheg lg


lg
therefore since g l
dheg q g q g lg
g
j

q

l

g
g
j l

g


follows lg q lg hence lg lg definition leg lg
k leg

contrast hypothesis

selecting operations
selecting operations common part proof computation period
length period label distance



fibettini mascetti wang

lcm p

p

n

g g
g
let
proof divided two steps first
pg
select operation lg lg details select select
select intersect operations found second step application
theorem indeed select operation following holds lg g g
implies g g step follows lg hence g g
considering g g conclude g g pgg
multiple ng definition theorem thesis

proof proposition
part
see section
prove lg lg
definition select operation lg lg lk
ordered set defined follows j lg
g j g
order prove thesis need lg lk consider


lcm pg pg ng
pg

note lg trivially derived periodicity

g prove lk obtained adding
elements
indeed note periodicity g j
j


jr



jr lcm pg pg



g j

r


g j







j

r

since j g j g g
periodicity g





g

j


jr lcm pg pg

sj

r jr

moreover



r

since g g j hence j j j analogously
prove j j j
thus obtained adding elements therefore j
position n j position n hence trivial
position k k l position k k l
hence lg lg



fimapping calendar expressions minimal periodic sets

part
let
leg


n
p
lgg
p

ilgg


lg

g j g
lk j lg

leg lg proving leg lg leg lg
p
suppose contradiction q leg lg definition leg q lgg
therefore h h pg dheg q moreover definition leg
definition select leg lg hence q lg since definition select

g q g q dheg q hence definition l q lg contradiction
hypothesis
suppose contradiction q lg leg since q lg definition
select
g j g
lg q lk j lg
therefore definition q

since q lg h h pg dheg q definition select
p
g q g q dheg q therefore q lgg moreover since g q g
p

p





p



dheg therefore lgg since q q lgg lgg
definition leg q leg contrast hypothesis
proof proposition
part
see section prove lg lg periodicity g
lg trivially derived periodicity g hence need
j lg
g j g since lg j lg
g j g
periodicity g
g j

j


jr



r




j
lcm pg pg ng
g j

jr lcm pg pg
pg
r

moreover since g g j
g

j

r

periodicity g


jr



fibettini mascetti wang

g

j


jr lcm pg pg



r


follows g g j

lcm pg pg ng
pg



thesis

part
let

p
g j g
leg lgg j lg

leg lg proving leg lg leg lg
p
suppose contradiction k leg lg since k leg k lgg
therefore h h pg dheg k moreover definition leg
definition select leg lg hence q lg since definition select

g k g k dheg k hence definition l k lg contrast
hypothesis
suppose contradiction k lg leg since k lg h

h pg dheg k since definition select g k g k dheg k
p
therefore definition l k lgg moreover since k lg lg lg
definition select operation j lg g j g k hence
definition leg k leg contradiction hypothesis
proof proposition
part
see section prove lg lg
definition select intersect operation lg lg
lk ordered set defined follows j lg g j g
order prove thesis need lg lk consider


lcm pg pg ng
note lg
pg
prove lk

trivially derived periodicity

g
obtained adding
elements
indeed note j j g j g hence l z l g j
l g periodicity g g j l lcm pg pg
periodicity g g l lcm pg pg g j g therefore
j j
analogously prove j j hence obtained
adding elements therefore j position n
j position n hence j position k k l
j position k k l j lg
part
proof analogous ones proposition


fimapping calendar expressions minimal periodic sets

set operations
proof proposition
given periodical granularities h g g label aligned subgranularity h
nh
g
prove n
pg ph thesis proved considering common period length h
g e pc lcm pg ph
let ng difference label ith granule one period g
label ith granule next period considering pc period length g
defined
analogously nh


periodicity g g kr ir g ng kr ir pc since g

aligned subranularity h lh h g kr ij since h periodic
sk



h nh
r ij pc easily derive ng nh hence


ng nh
n
definition pc n ph pg moreover since nh
g
pg
ph


nh ng therefore n
ng
h
property used proofs set operations
lcm p

p

n

lcm p

p

n

g g
g
g g
g
let

since g g aligned subgranpg
pg
ularity certain granularity h proposition easily derive

proof proposition
part
union let

lcm pg pg ng
lcm pg pg ng

thesis
pg
pg

sk


lg g r ir g kr ir

proved

lcm pg pg
showing

since lg lg lg two cases considered

lg g g kr ir periodicity g g
sk
sk

r ir lcm pg pg hence g
r ir lcm pg pg

lg lg g g kr ir periodicity g g
sk
sk

r ir lcm pg pg hence g
r ir lcm pg pg

since lg g kr ir g g
sk
r ir lcm pg pg hence definition thesis

intersect lg lg lg g g kr ir periodicity
g g lg esi lg since lg moreover
g g kr ir lcm pg pg hence definition
thesis

difference lg lg lg g g kr ir since lg
periodicity g lg since
lg periodicity g
lg
would exists lg periodicity g would exists lg



sk possible hypothesis hence lg moreover g g
r ir lcm pg pg hence definition thesis


fibettini mascetti wang

part
p
p
let leg lgg lgg
leg lg proving leg lg leg lg
p
suppose contradiction k leg lg since k leg k lgg
p



p

p





p



k lgg suppose k lgg proof analogous k lgg since k lgg

h pg dheg k since definition union operation g k g k

dheg k hence definition l k lg contrast hypothesis
suppose contradiction k lg leg since k lg definition

l h pg dheg k moreover definition union operation k lg
p
p
k lg suppose k lgg proof analogous k lgg definition
p



union operation g k g k therefore dheg k definition l k lgg
e k leg contradiction hypothesis
hence definition l

references
bettini c mascetti efficient minimizing time granularity
periodical representations proc th international symposium temporal
representation reasoning time pp ieee computer society
bettini c mascetti pupillo v system prototype solving multigranularity temporal csp recent advances constraints revised selected papers workshop constraint solving constraint logic programming
csclp lecture notes computer science pp springer
bettini c mascetti wang x mapping calendar expressions periodical granularities proc th international symposium temporal
representation reasoning time pp ieee computer society
bettini c sibi r symbolic representation user defined time granularities
annals mathematics artificial intelligence
bettini c wang x jajodia time granularities databases data
mining temporal reasoning springer
bettini c wang x jajodia solving multi granularity temporal constraint networks artificial intelligence
bettini c wang x jajodia b temporal reasoning workflow systems
distributed parallel databases
bresolin montanari puppis g time granularities ultimately periodic
automata proc th european conference logics artificial intelligence
jelia lecture notes computer science pp springer
chandra r segev stonebraker implementing calendars temporal
rules next generation databases proc th international conference
data engineering icde pp ieee computer society
combi c franceschet peron representing reasoning temporal
granularities journal logic computation


fimapping calendar expressions minimal periodic sets

combi c pozzi g temporal conceptual modelling workflows proc
nd international conference conceptual modeling er lecture
notes computer science pp springer
cukierman delgrande j p expressing time intervals repetition within
formalization calendars computational intelligence
dal lago u montanari calendars time granularities automata proc
th international symposium spatial temporal databases sstd
lecture notes computer science pp springer
dal lago u montanari puppis g towards compact tractable
automaton representations time granularities proc th italian
conference theoretical computer science ictcs lecture notes
computer science pp springer
dechter r meiri pearl j temporal constraint networks artificial intelligence
kabanza f stevenne j wolper p handling infinite temporal data proc
th acm sigact sigmod sigart symposium principles database
systems pods pp acm press
koomen j reasoning recurrence international journal intelligent systems
ladkin p b primitives units time specification proc th national
conference artificial intelligence aaai pp morgan kaufmann
leban b mcdonald forster representation collections temporal
intervals proc th national conference artificial intelligence aaai
pp morgan kaufmann
li ning p wang x jajodia discovering calendar temporal
association rules proc th international symposium temporal representation reasoning time pp ieee computer society
montanari metric layered temporal logic time granularity ph
thesis illc dissertation series university amsterdam
morris r shoaff w khatib l domain independent temporal reasoning
recurring events computational intelligence
niezette stevenne j efficient symbolic representation periodic
time proc first international conference information knowledge
management cikm lecture notes computer science pp
springer
ning p wang x jajodia algebraic representation calendars
annals mathematics artificial intelligence
puppis g automata branching layered temporal structures ph thesis
universita degli studi di udine
terenziani p symbolic user defined periodicity temporal relational databases
ieee transactions knowledge data engineering


fibettini mascetti wang

tuzhilin clifford j periodicity temporal databases information
systems
urgun b dyreson c e snodgrass r miller j k soo kline n jensen
c integrating multiple calendars tauzaman software practice
experience appear
wijsen j string model infinite granularities spatial temporal
granularity papers aaai workshop technical report ws pp
aaai press




