Journal Artificial Intelligence Research 28 (2007) 107-118

Submitted 9/05; published 2/07

Generating Hard Satisfiable Formulas Hiding
Solutions Deceptively
Haixia Jia

hjia@cs.unm.edu

Computer Science Department
University New Mexico

Cristopher Moore

moore@santafe.edu

Computer Science Department
University New Mexico

Doug Strain

doug.strain@gmail.com

Computer Science Department
University New Mexico

Abstract
test incomplete search algorithms constraint satisfaction problems 3SAT, need source hard, satisfiable, benchmark instances. simple way
choose random truth assignment A, choose clauses randomly
among satisfied A. However, method tends produce easy problems, since
majority literals point toward hidden assignment A. Last year, Achlioptas,
Jia Moore proposed problem generator cancels effect hiding
complement (Achlioptas, Jia, & Moore, 2004). resulting formulas
appear hard DPLL algorithms random 3-SAT formulas hidden
assignment, solved WalkSAT polynomial time.
propose new method cancel attraction A, choosing clause
> 0 literals satisfied probability proportional q q < 1. varying
q, generate formulas whose variables bias, i.e., equally likely
true false; even cause formula deceptively point away A. present
theoretical experimental results suggesting formulas exponentially hard
DPLL algorithms incomplete algorithms WalkSAT.

1. Introduction
evaluate search algorithms constraint satisfaction problems, need good sources
benchmark instances. Real-world problems best benchmarks definition,
problem structures specific application domain; addition,
wish study running times search algorithms scale, need entire families
benchmarks varying size density.
One way fill need generate random instances. instance, 3-SAT
generate instances
n variables clauses choosing clause uniformly
among 8 n3 possibilities. vary formulas according
size density r = m/n. formulas lack much structure realworld instances, instrumental development study new search
methods simulated annealing (Johnson, Aragon, McGeoch, & Shevon, 1989),
c
2007
AI Access Foundation. rights reserved.

fiJia, Moore, & Strain

breakout procedure (Morris, 1993), WalkSAT (Selman, Kautz, & Cohen, 1996), Survey
Propagation (Mezard & Zecchina, 2002).
However, wish test incomplete algorithms WalkSAT Survey Propagation (SP), need source problems hard satisfiable. contrast, critical density r 4.27, random formulas defined almost certainly unsatisfiable.
Random formulas threshold appear quite hard complete solvers (Cheeseman, Kanefsky, & Taylor, 1991; Mitchell, Selman, & Levesque, 1992; Hogg, Huberman, &
Williams, 1996); precisely reason, feasible generate large problems
threshold filter unsatisfiable ones. classes satisfiable
CSPs proposed, quasigroup completion problem (Shaw, Stergiou, &
Walsh, 1998; Kautz, Ruan, Achlioptas, Gomes, Selman, & Stickel, 2001; Achlioptas, Gomes,
Kautz, & Selman, 2000), would problems generators native
3-SAT.
natural way generate random satisfiable 3-SAT formulas choose random
truth assignment
{0, 1}n , choose clauses uniformly independently
n
among 7 3 clauses satisfied A. problem simply rejecting clauses
conflict causes unbalanced distribution literals; particular, average
literal agree value hidden assignment 4/7 time. Thus, especially
many clauses, simple majority heuristic local search quickly find
A. sophisticated versions hidden assignment scheme (Asahiro, Iwama, &
Miyano, 1996; Van Gelder, 1993) improve matters somewhat still lead biased samples.
Thus question avoid attraction hidden assignment,
One approach (Achlioptas et al., 2004) choose clauses uniformly among
satisfied complement A. inspired recent work
random k-SAT Not-All-Equal SAT (Achlioptas & Moore, 2002b), symmetry
respect complementation reduces variance number solutions; idea
cancel others attractions out, making either one hard find. Indeed,
resulting formulas appear take DPLL solvers exponential time and, general,
hard random 3-SAT formulas hidden assignment.
hand, WalkSAT solves formulas polynomial time, since variables set
way agrees one hidden assignments, neighboring variables develop
correlations consistent (Barthel, Hartmann, Leone, Ricci-Tersenghi, Weigt, &
Zecchina, 2002).
paper, pursue alternate approach, inspired Achlioptas Preres,
reweighted satisfying assignments natural way (Achlioptas & Peres, 2003). hide
one assignment, bias distribution clauses follows:
1. Predefine constant q < 1 generate random truth assignment {0, 1}n
2. rn times: choose random k-tuple variables, choose among clauses
> 0 literals satisfied probability proportional q .
penalizes clauses satisfied A, reduces extent
variable occurrences likely agree A. (Note naive formulas discussed
amount case q = 1.) see below, choosing q appropriately
rebalance distribution literals, variable likely appear positively
108

fiGenerating Hard Satisfiable Formulas Hiding Solutions Deceptively

often negatively longer points toward value A. reducing q further,
even make likely variable occurrence disagrees A,
formula becomes deceptive points away hidden assignment.
call formulas q-hidden, distinguish naive 1-hidden formulas discussed above, 2-hidden formulas studied Achlioptas, Jia Moore (Achlioptas et al., 2004), 0-hidden formulas consisting random 3-SAT formulas
hidden assignment. families, q-hidden formulas readily amenable
mathematical tools developed studying random k-SAT formulas,
including moment calculations method differential equations. calculate
expected density satisfying assignments function distance A,
analyze behavior Unit Clause (UC) algorithm q-hidden formulas.
present experiments several complete incomplete solvers. certain values q,
find q-hidden formulas hard harder DPLL algorithms 0-hidden
formulas 2-hidden formulas, much harder naive 1-hidden formulas. addition, find local search algorithms WalkSAT find formulas much harder
families, taking exponential opposed polynomial time. Moreover,
running time WalkSAT increases sharply formulas become deceptive.

2. Expected Density Solutions Bias Local Search
[0, 1], let X number satisfying truth assignments random q-hidden
k-SAT formula agree fraction variables hidden assignment A;
is, Hamming distance (1 )n. wish calculate expectation
E[X ].
symmetry, take all-true assignment. case, clause
> 0 positive literals chosen probability q /((1 + q)k 1) (here normalize
probabilities summing kt clauses > 0). Let B truth assignment
n variables true (1)n false. Then, analogous calculation
Achlioptas, Jia Moore (Achlioptas et al., 2004), use linearity expectation, independence clauses, selection literals clause replacement,
Stirlings approximation factorial obtain (where suppresses terms polynomial
n):

n
Pr[B satisfies random clause]m
n
!m

k
X
k q (1 )t kt
n
1
=
(1 + q)k 1
n
t=1

E[X ] =



fk,r,q ()n


f () =

1
(1 )1



1

(q(1 ) + )k k
(1 + q)k 1

r

.

Looking Figure 1, see behavior f near = 1/2 changes dramatically
vary q. q = 1 (i.e., naive 1-hidden formulas), f 0 (1/2) positive.
109

fiJia, Moore, & Strain

Density solutions q=0.5

Density solutions r=6
1.1

1.4
r=3

1

1.3

q=0.5

0.9

1.2

r=4

q=0.618
0.8

1.1

0.7

1

r=5

0.6

r=5.6

q=1

0.9
r=6

0.5

0.8

0.4

0.7

r=7

0.3
0

0.2

0.4



0.6

0.8

0.6
0

1

0.2

0.4



0.6

0.8

1

Figure 1: nth root f () expected number solutions agree
hidden assignment fraction variables. k = 3. left part
figure shows f () q = 1, q = 0.618 q = 0.5 r = 6. right part
shows f () q = 0.5 varying r. Note r = 5.6, f () < 1
1/2.
hand, q positive root q
1 (1 q)(1 + q)k1 = 0

(1)



f 0 (1/2) =
0. call resulting q -hidden formulas balanced; k = 3, q
golden ratio ( 5 1)/2 = 0.618...
choice q affects local search algorithms WalkSAT following way.
start random assignment B, step WalkSAT chooses random unsatisfied
clause, satisfies literal ` chosen randomly clause. expected change
Hamming distance d(A, B) probability ` agrees A, minus
probability doesnt. Since clauses equally likely unsatisfied
random assignment, expectation 2t/k 1 random clause, namely

E[d(A, B)] =

k
X
k q (2t/k 1)
t=1

(1 + q)k 1

=

1 (1 q)(1 + q)k1
.
(1 + q)k 1

Thus zero (1) holds, case WalkSAT equally likely move toward away
A. Thus, analogous calculation Achlioptas Peres (Achlioptas & Peres,
2003), q = q given literal equally likely agree disagree A, WalkSAT
information direction hidden assignment lies. (This argument
applies first o(n1/2 ) steps WalkSAT, since unlikely seen
variable twice).
110

fiGenerating Hard Satisfiable Formulas Hiding Solutions Deceptively

smaller values q q = 0.5 shown Figure 1, f 0 (1/2) becomes negative,
expect local search algorithm starting random assignment move away
A. Indeed, f () local maximum < 1/2, small r solutions
< 1/2. r sufficiently large, however, f () < 1 < 1/2,
n probability alternate solutions exist exponentially small.
conjecture q q threshold rc (q) high probability
solutions close A. Setting max{f () | 1/2} = 1 yields upper
bound rc (q), show Figure 4 below. instance, dotted line Figure 1
shows rc (0.5) 5.6.
call formulas deceptive, since local search algorithms WalkSAT, DPLL
algorithms zChaff use majority heuristic splitting rule, messagepassing algorithms SP presumably search wrong direction, take exponential time cross local minimum f () find hidden assignment.
experiments appear confirm intuition. addition, three types algorithms appear encounter difficulty roughly density rc (q),
conjecture alternate solutions disappear.

3. Unit Clause Heuristic DPLL Algorithms
Unit Clause (UC) linear-time heuristic permanently sets one variable
step follows: unit clauses, satisfy them; otherwise, pick random literal
satisfy it. random 3-SAT formulas, UC succeeds constant probability
r < 8/3, fails high probability r > 8/3 (Chao & Franco, 1986). UC
thought first branch simple DPLL algorithm S, whose splitting rule takes
random unset variable tries truth values random order; thus UC succeeds
succeeds without backtracking. hand, showed Ss expected running
time exponential n r > 8/3 (Cocco & Monasson, 2004; Cocco, Monasson,
Montanari, & Semerjian, 2005); Achlioptas, Beame Molloy used lower bounds
resolution complexity show takes exponential time high probability
r > 3.81 (Achlioptas, Beame, & Molloy, 2001). general, appears simple DPLL
algorithms begin take exponential time exactly density corresponding
linear-time heuristic fails.
section, analyze performance UC q-hidden formulas. Specifically,
show balanced case q = q , UC fails r > 8/3
0-hidden formulas. Based this, conjecture running time S,
simple DPLL algorithms, exponentially large formulas density
0-hidden ones.
analyze behavior UC arbitrary initial distributions 3-SAT clauses using
method differential equations. simplicity assume all-true assignment. round UC consists free step, satisfy random literal,
ensuing chain unit-clause propagations. 0 3 0 j i, let Si,j = si,j n
number
clauses length j positive literals j negative ones, let
P
si = j si,j . Let X = xn number variables set far, let mT mF
expected number variables set true false round. model discrete
111

fiJia, Moore, & Strain

stochastic process Si,j following differential equations si,j :
ds3,j
dx
ds2,j
dx

3s3,j
1x
2s2,j
mF (j + 1)s3,j+1 + mT (3 j)s3,j
=
+
1x
(mT + mF )(1 x)
=

(2)

unit clauses governed two-type branching process, transition matrix


1
s2,1 2s2,0
M=
.
1 x 2s2,2 s2,1
calculation Achlioptas Moore (Achlioptas & Moore, 2002a), long
largest eigenvalue less 1, branching process subcritical, summing
round gives




1/2
mF
1
= (I )
.
1/2
mT
solve equation (2) initial conditions s3,0 = 0

qj
3
s3,j =
j (1 + q)3 1
0 < j 3. balanced case q = q , find UC succeeds q-hidden formulas
constant probability r < 8/3, 0-hidden formulas. reason
that, 2-hidden formulas, expected number positive negative literals
throughout process. symmetry causes UC behave would
random 3-SAT formulas without hidden assignment.
note q < q , UC succeeds slightly higher densities, find
one alternate solutions < 1/2. higher densities alternate
solutions disappear, experimental results show deceptive formulas
take DPLL algorithms exponential time, r > rc (q) harder 0-hidden
formulas density.

4. Experimental Results
4.1 DPLL
section discuss behavior DPLL solvers q-hidden formulas. focus
zChaff (Zhang, 2002); behavior OKsolver (Kullmann, 2002) similar. Figure 2
shows zChaffs running time 0-hidden, 1-hidden, 2-hidden, q-hidden formulas
various values q.
Balanced formulas, i.e. q = q = 0.618..., appear hard 0-hidden
ones, including satisfiability threshold r 4.27 0-hidden formulas become
unsatisfiable. 0-hidden formulas, q -hidden formulas appear peak complexity near satisfiability threshold. consistent picture given previous
two sections: namely, balanced formulas make impossible algorithms
feel attraction hidden assignment. contrast, naive 1-hidden formulas far
easier, since attraction hidden assignment strong.
112

fiGenerating Hard Satisfiable Formulas Hiding Solutions Deceptively

zChaff performance n=200

zChaff performance r=5.5

5

10

4

10

Median number Decisions 49 trials

Median number Decisions 49 trials

6

10

q=0.2
q=0.3
q=0.4
q=0.5
q=0.618
1hidden
2hidden
0hidden

3

10

2

10

1

10

4

5

10

q=0.3
0hidden
q=0.618
2hidden
1hidden

4

10

3

10

2

10

1

4.5

5

5.5

6
r

6.5

7

7.5

10
50

8

100

150

200

250

300

N

Figure 2: left part figure shows zChaffs median running time 49 trials
0-hidden, 1-hidden, 2-hidden q-hidden formulas n = 200 r ranging
4.0 8.0. right part shows median running time r = 5.5
n ranging 50 300. Note 0-hidden formulas almost always
unsatisfiable r > 4.27.

Deceptive formulas, i.e. q < q , appear two phases. low density
relatively easy, hardness peaks density rc (q). rc (q) take
exponential time; 0-hidden formulas, r increases coefficient
exponential decreases clauses generate contradictions quickly.
believe peak rc (q) threshold density defined earlier (see Figure 4
below) solutions close hidden assignment.
situation seems following: rc (q), alternate solutions <
1/2, zChaff led splitting rule. rc (q), alternate solutions
disappear, zChaff takes exponential time find vicinity hidden assignment,
since formula deceptively points direction. Moreover, fixed r
rc (q) formulas become harder q decreases become deceptive.
illustrate further, right part Figure 2 shows zChaffs median running
time 0-hidden formulas, 1-hidden formulas, 2-hidden formulas, q-hidden formulas
q = q (balanced) q = 0.3 (deceptive). fix r = 5.5, appears
rc (q) values q. density, 0-hidden, 2-hidden, balanced
q-hidden formulas comparable difficulty, 1-hidden formulas much easier
deceptive formulas appear somewhat harder.
4.2 SP
Survey Propagation SP (Mezard & Zecchina, 2002) recently introduced incomplete
solver based insights replica method statistical physics generalization
belief propagation. tested SP 0-hidden formulas q-hidden formulas different
values q, using n = 104 varying r. 0-hidden formulas, SP succeeds r = 4.25,
113

fiJia, Moore, & Strain

quite close satisfiability threshold. q-hidden formulas q = q , SP fails
4.25 0-hidden formulas, suggesting finds formulas exactly
hard 0-hidden ones even though guaranteed satisfiable. naive 1-hidden
formulas, SP succeeds significantly higher density, r = 5.6.
Presumably naive 1-hidden formulas easier SP since messages
clauses variables, majority heuristic, tend push algorithm towards
hidden assignment. balanced case q = q , attraction successfully suppressed,
causing SP fail essentially density 0-hidden formulas, close satisfiability threshold, even though q-hidden formulas continue satisfiable densities. contrast, 2-hidden formulas proposed Achlioptas, Jia Moore (Achlioptas
et al., 2004) solved SP somewhat higher density r 4.8. Thus seems
reweighting approach q-hidden formulas better job confusing SP hiding
two complementary assignments does.
q < q , SP succeeds somewhat higher densities, matches quite
closely value rc (q) zChaffs running time peaks (see Figure 4 below). Building
conjecture density solutions close
hidden assignment, guess SP succeeds r < rc (q) precisely
local gradient density solutions pushes towards alternate solutions
< 1/2. rc (q), solutions longer exist, SP fails clauses send
deceptive messages, demanding variables set opposite hidden assignment.
4.3 WalkSAT
conclude local search algorithm, WalkSAT. formula, 104
restarts, 104 steps per attempt, step random greedy flip
equal probability. left part Figure 3 measure WalkSATs performance 1hidden, 2-hidden, q-hidden formulas various values q. use n = 200 r
range 4 8. Even relatively small formulas, see three
deceptive values q, density median running time jumps 108
flips. instance, q-hidden formulas q = 0.4 appear unfeasible WalkSAT for,
say, r > 5.
believe that, consistent discussion above, local search algorithms
WalkSAT greedily follow gradient density solutions f (). q < q ,
gradient deceptive, lures WalkSAT away hidden assignment. densities
rc (q), many alternate solutions < 1/2 WalkSAT finds one
easily; densities rc (q), solutions near hidden
assignment, WalkSATs greed causes wander exponentially long time
wrong region. picture supported fact that, Figure 4 shows below, density WalkSATs running time jumps upward closely matches thresholds rc (q)
observed zChaff SP.
right part Figure 3 looks WalkSATs median running time fixed density
function n. compare 1-hidden 2-hidden formulas q-hidden ones
q = q two deceptive values, 0.5 0.3. choose r = 5.5, rc (q)
three values q. running time 1-hidden 2-hidden formulas
polynomial (Achlioptas et al., 2004; Barthel et al., 2002). contrast, even balanced
114

fiGenerating Hard Satisfiable Formulas Hiding Solutions Deceptively

case q = q , running time exponential, slope exponential increases
dramatically decrease q make formulas deceptive. note
might possible develop heuristic analysis WalkSATs running time deceptive
case (Semerjian & Monasson, 2003; Cocco et al., 2005).

WalkSAT performance n=200

8

8

7

10

6

10

5

10

q=0.2
q=0.3
q=0.4
q=0.5
q=0.618
1hidden
2hidden

4

10

3

10

2

10

WalkSAT performance r=5.5

10
Median number flips 49 trials

Median number flips 49 trials

10

4

7

10

q=0.3
q=0.5
q=0.618
2hidden
1hidden

6

10

5

10

4

10

3

10

2

4.5

5

5.5

6
r

6.5

7

7.5

10
50

8

100 150 200 250 300 350 400 450 500 550 600
N

Figure 3: left part figure shows WalkSATs median running time 49 trials
n = 200 r ranging 4 8; right part shows median running
time r = 5.5 n ranging 50 600.

5. Threshold Density
seen, appears characteristic density rc (q) value q q
running time DPLL algorithms zChaff peaks, WalkSATs running
time becomes exponential, SP ceases work. conjecture three
cases, key phenomenon density solutions < 1/2 disappear,
leaving close hidden assignment. Figure 4 shows measured values
rc (q), indeed quite close three algorithms. show analytic
upper bound rc (q) resulting setting max{f () | 1/2} = 1,
expected number solutions 1/2 exponentially small.

6. Conclusions
introduced simple new way hide solutions 3-SAT problems produces
instances hard satisfiable. Unlike 2-hidden formulas proposed
Achlioptas, Jia Moore (Achlioptas et al., 2004) attraction hidden
assignment cancelled hiding complement, eliminate attraction
reweighting distribution clauses proposed Achlioptas Peres (Achlioptas
& Peres, 2003). Indeed, going beyond value parameter q makes
q-hidden formulas balanced, create deceptive formulas lead algorithms
wrong direction. Experimentally, formulas hard harder DPLL algorithms
115

fiJia, Moore, & Strain

12
Upper bound
zChaff
SP
WalkSAT

11
10

rc(q)

9
8
7
6
5
4
0.2

0.3

0.4
q

0.5

0.6

Figure 4: density rc (q) running time zChaff peaks, WalkSAT peaks
exceeds 108 flips, SP stops working. conjecture events occur
density alternate solutions < 1/2 disappear, leaving
close hidden assignment. Shown analytic upper
bound described text.

0-hidden formulas, i.e., random 3-SAT formulas without hidden assignment; local
search algorithms WalkSAT, much harder 0-hidden 2-hidden formulas,
taking exponential rather polynomial time. formulas amenable
mathematical tools developed study random 3-SAT; calculated
expected density solutions function distance hidden assignment,
used method differential equations show UC fails density
0-hidden formulas.
close several exciting directions future work:
1. Confirm single threshold density rc (q) a) alternate solutions
far hidden assignment disappear, b) running time DPLL algorithms
maximized, c) SP stops working, d) running time WalkSAT becomes
exponential;
2. Prove simple DPLL algorithms take exponential time r > rc (q), expectation
high probability;
3. Calculate variance number solutions function , giving
improved upper lower bounds distribution solutions rc (q).

Acknowledgments
H.J. supported NSF Graduate Fellowship. C.M. D.S. supported NSF
grants CCR-0220070, EIA-0218563, PHY-0200909. C.M. thanks Tracy Conrad
Rosemary Moore support.
116

fiGenerating Hard Satisfiable Formulas Hiding Solutions Deceptively

References
Achlioptas, D., Beame, P., & Molloy, M. (2001). sharp threshold proof complexity.
Proc. STOC, pp. 337346.
Achlioptas, D., Gomes, C., Kautz, H., & Selman, B. (2000). Generating satisfiable problem
instances. Proc. AAAI, pp. 256261.
Achlioptas, D., Jia, H., & Moore, C. (2004). Hiding satisfying assignments: two better
one. Proc. AAAI, pp. 131136.
Achlioptas, D., & Moore, C. (2002a). Almost graphs average degree 4 3colorable. Proc. STOC, pp. 199208.
Achlioptas, D., & Moore, C. (2002b). asymptotic order random k-SAT threshold.
Proc. FOCS, pp. 779788.
Achlioptas, D., & Peres, Y. (2003). threshold random k-SAT 2k (ln 2 o(k)).
Proc. STOC, pp. 223231.
Asahiro, Y., Iwama, K., & Miyano, E. (1996). Random generation test instances
controlled attributes. DIMACS Series Disc. Math. Theor. Comp. Sci., 26.
Barthel, W., Hartmann, A., Leone, M., Ricci-Tersenghi, F., Weigt, M., & Zecchina, R.
(2002). Hiding solutions random satisfiability problems: statistical mechanics
approach. Phys. Rev. Lett., 88 (188701).
Chao, M., & Franco, J. (1986). Probabilistic analysis two heuristics 3-satisfiability
problem. SIAM J. Comput., 15 (4), 11061118.
Cheeseman, P., Kanefsky, R., & Taylor, W. (1991). really hard problems are.
Proc. IJCAI, pp. 163169.
Cocco, S., & Monasson, R. (2004). Heuristic average-case analysis backtrack resolution random 3-satisfiability instances. Theor. Comp. Sci., 320, 345372.
Cocco, S., Monasson, R., Montanari, A., & Semerjian, G. (2005). Approximate analysis
search algorithms physical methods. Percus, A., Istrate, G., & Moore, C.
(Eds.), Computational Complexity Statistical Physics. Oxford University Press.
Hogg, T., Huberman, B., & Williams, C. (1996). Phase transitions complexity. Artificial
Intelligence, 81.
Johnson, D., Aragon, C., McGeoch, L., & Shevon, C. (1989). Optimization simulated
annealing: experimental evaluation. Operations Research, 37 (6), 865892.
Kautz, H., Ruan, Y., Achlioptas, D., Gomes, C., Selman, B., & Stickel, . (2001). Balance
filtering structured satisfiable problems. Proc. IJCAI, pp. 351358.
Kullmann, O. (2002). Investigating behaviour SAT solver random formulas.
Tech. rep. CSR 23-2002, University Wales Swansea.
Mezard, M., & Zecchina, R. (2002). Random k-satisfiability: analytic solution
new efficient algorithm. Phys. Rev. E, 66, 056126.
Mitchell, D., Selman, B., & Levesque, H. (1992). Hard easy distributions SAT
problems. Proc. AAAI, pp. 459465.
117

fiJia, Moore, & Strain

Morris, P. (1993). breakout method escaping local minima. Proc. AAAI,
pp. 4045.
Selman, B., Kautz, H., & Cohen, B. (1996). Local search strategies satisfiability testing.
Proc. 2nd DIMACS Challange Cliques, Coloring, Satisfiability.
Semerjian, G., & Monasson, R. (2003). study pure random walk random satisfiability
problems physical methods. LNCS, 2919, 120134.
Shaw, P., Stergiou, K., & Walsh, T. (1998). Arc consistency quasigroup completion.
Proc. ECAI, workshop binary constraints.
Van Gelder, A. (1993). Problem generator mkcnf.c. Proc. DIMACS. Challenge archive.
Zhang, L. (2002). zChaff.. ee.princeton.edu/chaff/zchaff.php.

118


